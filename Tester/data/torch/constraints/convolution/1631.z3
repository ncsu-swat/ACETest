(declare-fun temp10969_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10969_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10969_3 () (_ BitVec 64))
(declare-fun temp10969_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10969_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10969_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10969_7 () (_ BitVec 64))
(declare-fun temp10969_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10969_9 () (_ BitVec 64))
(declare-fun temp10969_10 () (_ BitVec 64))
(declare-fun temp10969_11 () (_ BitVec 64))
(declare-fun temp10969_12 () (_ BitVec 64))
(declare-fun temp10969_13 () (_ BitVec 64))
(declare-fun temp10969_14 () (_ BitVec 64))
(declare-fun temp10969_15 () (_ BitVec 64))
(declare-fun temp10969_16 () (_ BitVec 64))
(declare-fun temp10969_17 () (_ BitVec 64))
(declare-fun temp10969_18 () (_ BitVec 64))
(declare-fun temp10969_19 () (_ BitVec 64))
(declare-fun temp10969_20 () (_ BitVec 64))
(declare-fun temp10969_21 () (_ BitVec 64))
(declare-fun temp10969_22 () (_ BitVec 64))
(declare-fun temp10969_23 () (_ BitVec 64))
(declare-fun temp10969_24 () (_ BitVec 64))
(declare-fun temp10969_25 () (_ BitVec 64))
(declare-fun temp10969_26 () (_ BitVec 64))
(declare-fun temp10969_27 () (_ BitVec 64))
(declare-fun temp10969_28 () (_ BitVec 64))
(declare-fun temp10969_29 () (_ BitVec 64))
(declare-fun temp10969_30 () (_ BitVec 64))
(declare-fun temp10969_31 () (_ BitVec 64))
(declare-fun temp10969_32 () (_ BitVec 64))
(declare-fun temp10969_33 () (_ BitVec 64))
(declare-fun temp10969_34 () (_ BitVec 64))
(declare-fun temp10969_35 () (_ BitVec 64))
(declare-fun temp10969_36 () (_ BitVec 64))
(declare-fun temp10969_37 () (_ BitVec 64))
(declare-fun temp10969_38 () (_ BitVec 64))
(declare-fun temp10969_39 () (_ BitVec 64))
(declare-fun temp10969_40 () (_ BitVec 64))
(declare-fun temp10969_41 () (_ BitVec 64))
(declare-fun temp10969_42 () (_ BitVec 64))
(declare-fun temp10969_43 () (_ BitVec 64))
(declare-fun temp10969_44 () (_ BitVec 64))
(declare-fun temp10969_45 () (_ BitVec 64))
(declare-fun temp10969_46 () (_ BitVec 64))
(declare-fun temp10969_47 () (_ BitVec 64))
(declare-fun temp10969_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10969_49 () (_ BitVec 64))
(declare-fun temp10969_50 () (_ BitVec 64))
(declare-fun temp10969_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10969_52 () (_ BitVec 64))
(declare-fun temp10969_53 () (_ BitVec 64))
(declare-fun temp10969_54 () (_ BitVec 64))
(declare-fun temp10969_55 () (_ BitVec 64))
(declare-fun temp10969_56 () (_ BitVec 64))
(declare-fun temp10969_57 () (_ BitVec 64))
(declare-fun temp10969_58 () (_ BitVec 64))
(declare-fun temp10969_59 () (_ BitVec 64))
(declare-fun temp10969_60 () (_ BitVec 64))
(declare-fun temp10969_61 () (_ BitVec 64))
(declare-fun temp10969_62 () (_ BitVec 64))
(declare-fun temp10969_63 () (_ BitVec 64))
(declare-fun temp10969_64 () (_ BitVec 64))
(declare-fun temp10969_65 () (_ BitVec 64))
(declare-fun temp10969_66 () (_ BitVec 64))
(declare-fun temp10969_67 () (_ BitVec 64))
(declare-fun temp10969_68 () (_ BitVec 64))
(declare-fun temp10969_69 () (_ BitVec 64))
(declare-fun temp10969_70 () (_ BitVec 64))
(declare-fun temp10969_71 () (_ BitVec 64))
(declare-fun temp10969_72 () (_ BitVec 64))
(declare-fun temp10969_73 () (_ BitVec 64))
(declare-fun temp10969_74 () (_ BitVec 64))
(declare-fun temp10969_75 () (_ BitVec 64))
(declare-fun temp10969_76 () (_ BitVec 64))
(declare-fun temp10969_77 () (_ BitVec 64))
(declare-fun temp10969_78 () (_ BitVec 64))
(declare-fun temp10969_79 () (_ BitVec 64))
(declare-fun temp10969_80 () (_ BitVec 64))
(declare-fun temp10969_81 () (_ BitVec 64))
(declare-fun temp10969_82 () (_ BitVec 64))
(declare-fun temp10969_83 () (_ BitVec 64))
(declare-fun temp10969_84 () (_ BitVec 64))
(declare-fun temp10969_85 () (_ BitVec 64))
(declare-fun temp10969_86 () (_ BitVec 64))
(declare-fun temp10969_87 () (_ BitVec 64))
(declare-fun temp10969_88 () (_ BitVec 64))
(declare-fun temp10969_89 () (_ BitVec 64))
(declare-fun temp10969_90 () (_ BitVec 64))
(declare-fun temp10969_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10969_92 () (_ BitVec 64))
(declare-fun temp10969_93 () (_ BitVec 64))
(declare-fun temp10969_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10969_95 () (_ BitVec 64))
(declare-fun temp10969_96 () (_ BitVec 64))
(declare-fun temp10969_97 () (_ BitVec 64))
(declare-fun temp10969_98 () (_ BitVec 64))
(declare-fun temp10969_99 () (_ BitVec 64))
(declare-fun temp10969_100 () (_ BitVec 64))
(declare-fun temp10969_101 () (_ BitVec 64))
(declare-fun temp10969_102 () (_ BitVec 64))
(declare-fun temp10969_103 () (_ BitVec 64))
(declare-fun temp10969_104 () (_ BitVec 64))
(declare-fun temp10969_105 () (_ BitVec 64))
(declare-fun temp10969_106 () (_ BitVec 64))
(declare-fun temp10969_107 () (_ BitVec 64))
(declare-fun temp10969_108 () (_ BitVec 64))
(declare-fun temp10969_109 () (_ BitVec 64))
(declare-fun temp10969_110 () (_ BitVec 64))
(declare-fun temp10969_111 () (_ BitVec 64))
(declare-fun temp10969_112 () (_ BitVec 64))
(declare-fun temp10969_113 () (_ BitVec 64))
(declare-fun temp10969_114 () (_ BitVec 64))
(declare-fun temp10969_115 () (_ BitVec 64))
(declare-fun temp10969_116 () (_ BitVec 64))
(declare-fun temp10969_117 () (_ BitVec 64))
(declare-fun temp10969_118 () (_ BitVec 64))
(declare-fun temp10969_119 () (_ BitVec 64))
(declare-fun temp10969_120 () (_ BitVec 64))
(declare-fun temp10969_121 () (_ BitVec 64))
(declare-fun temp10969_122 () (_ BitVec 64))
(declare-fun temp10969_123 () (_ BitVec 64))
(declare-fun temp10969_124 () (_ BitVec 64))
(declare-fun temp10969_125 () (_ BitVec 64))
(declare-fun temp10969_126 () (_ BitVec 64))
(declare-fun temp10969_127 () (_ BitVec 64))
(declare-fun temp10969_128 () (_ BitVec 64))
(declare-fun temp10969_129 () (_ BitVec 64))
(declare-fun temp10969_130 () (_ BitVec 64))
(declare-fun temp10969_131 () (_ BitVec 64))
(declare-fun temp10969_132 () (_ BitVec 64))
(declare-fun temp10969_133 () (_ BitVec 64))
(declare-fun temp10969_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10969_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10969_136 () (_ BitVec 64))
(declare-fun temp10969_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10969_138 () (_ BitVec 64))
(declare-fun temp10969_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10969_140 () (_ BitVec 64))
(declare-fun temp10969_141 () (_ BitVec 64))
(declare-fun temp10969_142 () (_ BitVec 64))
(declare-fun temp10969_143 () (_ BitVec 64))
(declare-fun temp10969_144 () (_ BitVec 64))
(declare-fun temp10969_145 () (_ BitVec 64))
(declare-fun temp10969_146 () (_ BitVec 64))
(declare-fun temp10969_147 () (_ BitVec 64))
(declare-fun temp10969_148 () (_ BitVec 64))
(declare-fun temp10969_149 () (_ BitVec 64))
(declare-fun temp10969_150 () (_ BitVec 64))
(declare-fun temp10969_151 () (_ BitVec 64))
(declare-fun temp10969_152 () (_ BitVec 64))
(declare-fun temp10969_153 () (_ BitVec 64))
(declare-fun temp10969_154 () (_ BitVec 64))
(declare-fun temp10969_155 () (_ BitVec 64))
(declare-fun temp10969_157 () (_ BitVec 64))
(declare-fun temp10969_158 () (_ BitVec 64))
(declare-fun temp10969_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10969_159 () (_ BitVec 64))
(declare-fun temp10969_160 () (_ BitVec 64))
(declare-fun temp10969_162 () (_ BitVec 64))
(declare-fun temp10969_163 () (_ BitVec 64))
(declare-fun temp10969_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10969_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10969_165 () (_ BitVec 64))
(declare-fun temp10969_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10969_167 () (_ BitVec 64))
(declare-fun temp10969_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10969_169 () (_ BitVec 64))
(declare-fun temp10969_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10969_171 () (_ BitVec 64))
(declare-fun temp10969_172 () (_ BitVec 64))
(declare-fun temp10969_173 () (_ BitVec 64))
(declare-fun temp10969_174 () (_ BitVec 64))
(declare-fun temp10969_175 () (_ BitVec 64))
(declare-fun temp10969_176 () (_ BitVec 64))
(declare-fun temp10969_177 () (_ BitVec 64))
(declare-fun temp10969_178 () (_ BitVec 64))
(declare-fun temp10969_179 () (_ BitVec 64))
(declare-fun temp10969_180 () (_ BitVec 64))
(declare-fun temp10969_181 () (_ BitVec 64))
(declare-fun temp10969_182 () (_ BitVec 64))
(declare-fun temp10969_183 () (_ BitVec 64))
(declare-fun temp10969_184 () (_ BitVec 64))
(declare-fun temp10969_185 () (_ BitVec 64))
(declare-fun temp10969_186 () (_ BitVec 64))
(declare-fun temp10969_187 () (_ BitVec 64))
(declare-fun temp10969_188 () (_ BitVec 64))
(declare-fun temp10969_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10969_190 () (_ BitVec 64))
(declare-fun temp10969_192 () (_ BitVec 64))
(declare-fun temp10969_193 () (_ BitVec 64))
(declare-fun temp10969_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10969_194 () (_ BitVec 64))
(declare-fun temp10969_195 () (_ BitVec 64))
(declare-fun temp10969_197 () (_ BitVec 64))
(declare-fun temp10969_198 () (_ BitVec 64))
(declare-fun temp10969_196 () (_ BitVec 64))
(declare-fun temp10969_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10969_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10969_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10969_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10969_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10969_204 () (_ BitVec 64))
(declare-fun temp10969_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10969_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10969_207 () (_ BitVec 64))
(declare-fun temp10969_208 () (_ BitVec 64))
(declare-fun temp10969_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10969_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10969_211 () (_ BitVec 64))
(declare-fun temp10969_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10969_213 () (_ BitVec 64))
(declare-fun temp10969_214 () (_ BitVec 64))
(declare-fun temp10969_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10969_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10969_217 () (_ BitVec 64))
(declare-fun temp10969_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10969_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10969_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp10969_221 () (_ BitVec 64))
(assert (= temp10969_1 #x0000000000000001))
(assert (= var77203 temp10969_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10969_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10969_2)))
(assert (= temp10969_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10969_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10969_4 #x0000000000000000))
(assert (= var210941 temp10969_4))
(assert (= temp10969_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10969_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10969_6 #x0000000000000000))
(assert (= var210986 temp10969_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10969_7 #x0000000000000000))
(assert (= temp10969_8 temp10969_7))
(assert (= temp10969_9 (select ARGNAME_padding_NAMEEND_VAL temp10969_8)))
(assert (= temp10969_10 #x0000000000000001))
(assert (= temp10969_11 temp10969_10))
(assert (= temp10969_12 (select ARGNAME_padding_NAMEEND_VAL temp10969_11)))
(assert (= temp10969_13 #x0000000000000002))
(assert (= temp10969_14 temp10969_13))
(assert (= temp10969_15 (select ARGNAME_padding_NAMEEND_VAL temp10969_14)))
(assert (= temp10969_16 #x0000000000000003))
(assert (= temp10969_17 temp10969_16))
(assert (= temp10969_18 (select ARGNAME_padding_NAMEEND_VAL temp10969_17)))
(assert (= temp10969_19 #x0000000000000004))
(assert (= temp10969_20 temp10969_19))
(assert (= temp10969_21 (select ARGNAME_padding_NAMEEND_VAL temp10969_20)))
(assert (= temp10969_22 #x0000000000000005))
(assert (= temp10969_23 temp10969_22))
(assert (= temp10969_24 (select ARGNAME_padding_NAMEEND_VAL temp10969_23)))
(assert (= temp10969_25 #x0000000000000000))
(assert (= temp10969_26 #x0000000000000000))
(assert (= temp10969_27 temp10969_26))
(assert (= temp10969_28 (select ARGNAME_padding_NAMEEND_VAL temp10969_27)))
(assert (= temp10969_29 #x0000000000000000))
(assert (= temp10969_30 #x0000000000000001))
(assert (= temp10969_31 temp10969_30))
(assert (= temp10969_32 (select ARGNAME_padding_NAMEEND_VAL temp10969_31)))
(assert (= temp10969_33 #x0000000000000000))
(assert (= temp10969_34 #x0000000000000002))
(assert (= temp10969_35 temp10969_34))
(assert (= temp10969_36 (select ARGNAME_padding_NAMEEND_VAL temp10969_35)))
(assert (= temp10969_37 #x0000000000000000))
(assert (= temp10969_38 #x0000000000000003))
(assert (= temp10969_39 temp10969_38))
(assert (= temp10969_40 (select ARGNAME_padding_NAMEEND_VAL temp10969_39)))
(assert (= temp10969_41 #x0000000000000000))
(assert (= temp10969_42 #x0000000000000004))
(assert (= temp10969_43 temp10969_42))
(assert (= temp10969_44 (select ARGNAME_padding_NAMEEND_VAL temp10969_43)))
(assert (= temp10969_45 #x0000000000000000))
(assert (= temp10969_46 #x0000000000000005))
(assert (= temp10969_47 temp10969_46))
(assert (= temp10969_48 (select ARGNAME_padding_NAMEEND_VAL temp10969_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10969_28 temp10969_25)
             (bvslt temp10969_32 temp10969_29)
             (bvslt temp10969_36 temp10969_33)
             (bvslt temp10969_40 temp10969_37)
             (bvslt temp10969_44 temp10969_41)
             (bvslt temp10969_48 temp10969_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10969_49 #x0000000000000000))
(assert (= var1191714 temp10969_49))
(assert (= temp10969_50 #x0000000000000000))
(assert (= temp10969_51 temp10969_50))
(assert (= temp10969_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10969_51)))
(assert (= temp10969_53 #x0000000000000001))
(assert (= temp10969_54 temp10969_53))
(assert (= temp10969_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10969_54)))
(assert (= temp10969_56 #x0000000000000002))
(assert (= temp10969_57 temp10969_56))
(assert (= temp10969_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10969_57)))
(assert (= temp10969_59 #x0000000000000003))
(assert (= temp10969_60 temp10969_59))
(assert (= temp10969_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10969_60)))
(assert (= temp10969_62 #x0000000000000004))
(assert (= temp10969_63 temp10969_62))
(assert (= temp10969_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10969_63)))
(assert (= temp10969_65 #x0000000000000005))
(assert (= temp10969_66 temp10969_65))
(assert (= temp10969_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10969_66)))
(assert (= temp10969_68 #x0000000000000000))
(assert (= temp10969_69 #x0000000000000000))
(assert (= temp10969_70 temp10969_69))
(assert (= temp10969_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10969_70)))
(assert (= temp10969_72 #x0000000000000000))
(assert (= temp10969_73 #x0000000000000001))
(assert (= temp10969_74 temp10969_73))
(assert (= temp10969_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10969_74)))
(assert (= temp10969_76 #x0000000000000000))
(assert (= temp10969_77 #x0000000000000002))
(assert (= temp10969_78 temp10969_77))
(assert (= temp10969_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10969_78)))
(assert (= temp10969_80 #x0000000000000000))
(assert (= temp10969_81 #x0000000000000003))
(assert (= temp10969_82 temp10969_81))
(assert (= temp10969_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10969_82)))
(assert (= temp10969_84 #x0000000000000000))
(assert (= temp10969_85 #x0000000000000004))
(assert (= temp10969_86 temp10969_85))
(assert (= temp10969_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10969_86)))
(assert (= temp10969_88 #x0000000000000000))
(assert (= temp10969_89 #x0000000000000005))
(assert (= temp10969_90 temp10969_89))
(assert (= temp10969_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10969_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10969_71 temp10969_68)
             (bvslt temp10969_75 temp10969_72)
             (bvslt temp10969_79 temp10969_76)
             (bvslt temp10969_83 temp10969_80)
             (bvslt temp10969_87 temp10969_84)
             (bvslt temp10969_91 temp10969_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10969_92 #x0000000000000000))
(assert (= var1191725 temp10969_92))
(assert (= temp10969_93 #x0000000000000000))
(assert (= temp10969_94 temp10969_93))
(assert (= temp10969_95 (select ARGNAME_stride_NAMEEND_VAL temp10969_94)))
(assert (= temp10969_96 #x0000000000000001))
(assert (= temp10969_97 temp10969_96))
(assert (= temp10969_98 (select ARGNAME_stride_NAMEEND_VAL temp10969_97)))
(assert (= temp10969_99 #x0000000000000002))
(assert (= temp10969_100 temp10969_99))
(assert (= temp10969_101 (select ARGNAME_stride_NAMEEND_VAL temp10969_100)))
(assert (= temp10969_102 #x0000000000000003))
(assert (= temp10969_103 temp10969_102))
(assert (= temp10969_104 (select ARGNAME_stride_NAMEEND_VAL temp10969_103)))
(assert (= temp10969_105 #x0000000000000004))
(assert (= temp10969_106 temp10969_105))
(assert (= temp10969_107 (select ARGNAME_stride_NAMEEND_VAL temp10969_106)))
(assert (= temp10969_108 #x0000000000000005))
(assert (= temp10969_109 temp10969_108))
(assert (= temp10969_110 (select ARGNAME_stride_NAMEEND_VAL temp10969_109)))
(assert (= temp10969_111 #x0000000000000000))
(assert (= temp10969_112 #x0000000000000000))
(assert (= temp10969_113 temp10969_112))
(assert (= temp10969_114 (select ARGNAME_stride_NAMEEND_VAL temp10969_113)))
(assert (= temp10969_115 #x0000000000000000))
(assert (= temp10969_116 #x0000000000000001))
(assert (= temp10969_117 temp10969_116))
(assert (= temp10969_118 (select ARGNAME_stride_NAMEEND_VAL temp10969_117)))
(assert (= temp10969_119 #x0000000000000000))
(assert (= temp10969_120 #x0000000000000002))
(assert (= temp10969_121 temp10969_120))
(assert (= temp10969_122 (select ARGNAME_stride_NAMEEND_VAL temp10969_121)))
(assert (= temp10969_123 #x0000000000000000))
(assert (= temp10969_124 #x0000000000000003))
(assert (= temp10969_125 temp10969_124))
(assert (= temp10969_126 (select ARGNAME_stride_NAMEEND_VAL temp10969_125)))
(assert (= temp10969_127 #x0000000000000000))
(assert (= temp10969_128 #x0000000000000004))
(assert (= temp10969_129 temp10969_128))
(assert (= temp10969_130 (select ARGNAME_stride_NAMEEND_VAL temp10969_129)))
(assert (= temp10969_131 #x0000000000000000))
(assert (= temp10969_132 #x0000000000000005))
(assert (= temp10969_133 temp10969_132))
(assert (= temp10969_134 (select ARGNAME_stride_NAMEEND_VAL temp10969_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10969_114 temp10969_111)
             (bvsle temp10969_118 temp10969_115)
             (bvsle temp10969_122 temp10969_119)
             (bvsle temp10969_126 temp10969_123)
             (bvsle temp10969_130 temp10969_127)
             (bvsle temp10969_134 temp10969_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10969_135 #x0000000000000000))
(assert (= var1191735 temp10969_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10969_136 #x0000000000000001))
(assert (= var1191747 temp10969_136))
(assert (= temp10969_137 #x0000000000000000))
(assert (= var1179826 temp10969_137))
(assert (= temp10969_138 #x0000000000000000))
(assert (= temp10969_139 temp10969_138))
(assert (= temp10969_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10969_139)))
(assert (= temp10969_141 #x0000000000000001))
(assert (= temp10969_142 temp10969_141))
(assert (= temp10969_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10969_142)))
(assert (= temp10969_144 #x0000000000000002))
(assert (= temp10969_145 temp10969_144))
(assert (= temp10969_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10969_145)))
(assert (= temp10969_147 #x0000000000000003))
(assert (= temp10969_148 temp10969_147))
(assert (= temp10969_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10969_148)))
(assert (= temp10969_150 #x0000000000000004))
(assert (= temp10969_151 temp10969_150))
(assert (= temp10969_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10969_151)))
(assert (= temp10969_153 #x0000000000000005))
(assert (= temp10969_154 temp10969_153))
(assert (= temp10969_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10969_154)))
(assert (= temp10969_157 var1179826))
(assert (= temp10969_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10969_157)))
(assert (= temp10969_156 temp10969_158))
(assert (= var1191780
   (ite (bvslt temp10969_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10969_159 #x0000000000000000))
(assert (= var1191780 temp10969_159))
(assert (= temp10969_160 #x0000000000000000))
(assert (= var1179826 temp10969_160))
(assert (= temp10969_162 var1179826))
(assert (= temp10969_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10969_162)))
(assert (= temp10969_161 temp10969_163))
(assert (= var1191802 (bvsmod temp10969_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10969_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10969_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10969_165 #x0000000000000001))
(assert (= var1191803 temp10969_165))
(assert (= temp10969_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10969_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10969_167 #x0000000000000001))
(assert (= var1191823 temp10969_167))
(assert (= temp10969_168 #x0000000000000001))
(assert (= var1180714 temp10969_168))
(assert (= temp10969_169 #x0000000000000000))
(assert (= temp10969_170 temp10969_169))
(assert (= temp10969_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10969_170)))
(assert (= temp10969_172 #x0000000000000001))
(assert (= temp10969_173 temp10969_172))
(assert (= temp10969_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10969_173)))
(assert (= temp10969_175 #x0000000000000002))
(assert (= temp10969_176 temp10969_175))
(assert (= temp10969_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10969_176)))
(assert (= temp10969_178 #x0000000000000003))
(assert (= temp10969_179 temp10969_178))
(assert (= temp10969_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10969_179)))
(assert (= temp10969_181 #x0000000000000004))
(assert (= temp10969_182 temp10969_181))
(assert (= temp10969_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10969_182)))
(assert (= temp10969_184 #x0000000000000005))
(assert (= temp10969_185 temp10969_184))
(assert (= temp10969_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10969_185)))
(assert (= temp10969_187 #x0000000000000000))
(assert (= temp10969_188
   (ite (bvslt var1180714 temp10969_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10969_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10969_188)))
(assert (= var1191831 temp10969_189))
(assert (bvslt (ite (bvslt var1180714 temp10969_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10969_190 #x0000000000000001))
(assert (= var1180714 temp10969_190))
(assert (= temp10969_192 var1180714))
(assert (= temp10969_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10969_192)))
(assert (= temp10969_191 temp10969_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10969_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10969_194 #x0000000000000001))
(assert (= var1191836 temp10969_194))
(assert (= temp10969_195 #x0000000000000000))
(assert (= var1179826 temp10969_195))
(assert (= temp10969_197 var1179826))
(assert (= temp10969_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10969_197)))
(assert (= temp10969_196 temp10969_198))
(assert (= temp10969_199 #x0000000000000002))
(assert (= var1586025 temp10969_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10969_200 #x0000000000000001))
(assert (= var1191993 temp10969_200))
(assert (= temp10969_201 #x0000000000000001))
(assert (= var2700303 temp10969_201))
(assert (= temp10969_202 #x0000000000000001))
(assert (= var2962447 temp10969_202))
(assert (= temp10969_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10969_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10969_204 #x0000000000000001))
(assert (= var211058 temp10969_204))
(assert (= temp10969_205 #x0000000000000001))
(assert (= var211188 temp10969_205))
(assert (= var3879401 var211188))
(assert (= temp10969_206 #x0000000000000000))
(assert (= var3866802 temp10969_206))
(assert (= temp10969_207 #x0000000000000000))
(assert (= temp10969_208
   (ite (bvslt var3866802 temp10969_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10969_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10969_208)))
(assert (= var3879420 temp10969_209))
(assert (bvslt (ite (bvslt var3866802 temp10969_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10969_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10969_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10969_211 #x0000000000000000))
(assert (= var3879421 temp10969_211))
(assert (= temp10969_212 #x0000000000000001))
(assert (= var3867690 temp10969_212))
(assert (= temp10969_213 #x0000000000000000))
(assert (= temp10969_214
   (ite (bvslt var3867690 temp10969_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10969_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10969_214)))
(assert (= var3879423 temp10969_215))
(assert (bvslt (ite (bvslt var3867690 temp10969_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10969_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10969_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10969_217 #x0000000000000001))
(assert (= var3879424 temp10969_217))
(assert (= temp10969_218 #x0000000000000000))
(assert (= var4133117 temp10969_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10969_219 #x0000000000000002))
(assert (= var4339331 temp10969_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10969_220 #x0000000000000000))
(assert (= var4404892 temp10969_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp10969_221 #x0000000000000001))
(assert (= var211058 temp10969_221))
(model-add temp10969_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10969_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10969_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10969_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




