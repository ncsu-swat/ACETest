(declare-fun temp86_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp86_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp86_3 () (_ BitVec 64))
(declare-fun temp86_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp86_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp86_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp86_7 () (_ BitVec 64))
(declare-fun temp86_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp86_9 () (_ BitVec 64))
(declare-fun temp86_10 () (_ BitVec 64))
(declare-fun temp86_11 () (_ BitVec 64))
(declare-fun temp86_12 () (_ BitVec 64))
(declare-fun temp86_13 () (_ BitVec 64))
(declare-fun temp86_14 () (_ BitVec 64))
(declare-fun temp86_15 () (_ BitVec 64))
(declare-fun temp86_16 () (_ BitVec 64))
(declare-fun temp86_17 () (_ BitVec 64))
(declare-fun temp86_18 () (_ BitVec 64))
(declare-fun temp86_19 () (_ BitVec 64))
(declare-fun temp86_20 () (_ BitVec 64))
(declare-fun temp86_21 () (_ BitVec 64))
(declare-fun temp86_22 () (_ BitVec 64))
(declare-fun temp86_23 () (_ BitVec 64))
(declare-fun temp86_24 () (_ BitVec 64))
(declare-fun temp86_25 () (_ BitVec 64))
(declare-fun temp86_26 () (_ BitVec 64))
(declare-fun temp86_27 () (_ BitVec 64))
(declare-fun temp86_28 () (_ BitVec 64))
(declare-fun temp86_29 () (_ BitVec 64))
(declare-fun temp86_30 () (_ BitVec 64))
(declare-fun temp86_31 () (_ BitVec 64))
(declare-fun temp86_32 () (_ BitVec 64))
(declare-fun temp86_33 () (_ BitVec 64))
(declare-fun temp86_34 () (_ BitVec 64))
(declare-fun temp86_35 () (_ BitVec 64))
(declare-fun temp86_36 () (_ BitVec 64))
(declare-fun temp86_37 () (_ BitVec 64))
(declare-fun temp86_38 () (_ BitVec 64))
(declare-fun temp86_39 () (_ BitVec 64))
(declare-fun temp86_40 () (_ BitVec 64))
(declare-fun temp86_41 () (_ BitVec 64))
(declare-fun temp86_42 () (_ BitVec 64))
(declare-fun temp86_43 () (_ BitVec 64))
(declare-fun temp86_44 () (_ BitVec 64))
(declare-fun temp86_45 () (_ BitVec 64))
(declare-fun temp86_46 () (_ BitVec 64))
(declare-fun temp86_47 () (_ BitVec 64))
(declare-fun temp86_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp86_49 () (_ BitVec 64))
(declare-fun temp86_50 () (_ BitVec 64))
(declare-fun temp86_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp86_52 () (_ BitVec 64))
(declare-fun temp86_53 () (_ BitVec 64))
(declare-fun temp86_54 () (_ BitVec 64))
(declare-fun temp86_55 () (_ BitVec 64))
(declare-fun temp86_56 () (_ BitVec 64))
(declare-fun temp86_57 () (_ BitVec 64))
(declare-fun temp86_58 () (_ BitVec 64))
(declare-fun temp86_59 () (_ BitVec 64))
(declare-fun temp86_60 () (_ BitVec 64))
(declare-fun temp86_61 () (_ BitVec 64))
(declare-fun temp86_62 () (_ BitVec 64))
(declare-fun temp86_63 () (_ BitVec 64))
(declare-fun temp86_64 () (_ BitVec 64))
(declare-fun temp86_65 () (_ BitVec 64))
(declare-fun temp86_66 () (_ BitVec 64))
(declare-fun temp86_67 () (_ BitVec 64))
(declare-fun temp86_68 () (_ BitVec 64))
(declare-fun temp86_69 () (_ BitVec 64))
(declare-fun temp86_70 () (_ BitVec 64))
(declare-fun temp86_71 () (_ BitVec 64))
(declare-fun temp86_72 () (_ BitVec 64))
(declare-fun temp86_73 () (_ BitVec 64))
(declare-fun temp86_74 () (_ BitVec 64))
(declare-fun temp86_75 () (_ BitVec 64))
(declare-fun temp86_76 () (_ BitVec 64))
(declare-fun temp86_77 () (_ BitVec 64))
(declare-fun temp86_78 () (_ BitVec 64))
(declare-fun temp86_79 () (_ BitVec 64))
(declare-fun temp86_80 () (_ BitVec 64))
(declare-fun temp86_81 () (_ BitVec 64))
(declare-fun temp86_82 () (_ BitVec 64))
(declare-fun temp86_83 () (_ BitVec 64))
(declare-fun temp86_84 () (_ BitVec 64))
(declare-fun temp86_85 () (_ BitVec 64))
(declare-fun temp86_86 () (_ BitVec 64))
(declare-fun temp86_87 () (_ BitVec 64))
(declare-fun temp86_88 () (_ BitVec 64))
(declare-fun temp86_89 () (_ BitVec 64))
(declare-fun temp86_90 () (_ BitVec 64))
(declare-fun temp86_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp86_92 () (_ BitVec 64))
(declare-fun temp86_93 () (_ BitVec 64))
(declare-fun temp86_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp86_95 () (_ BitVec 64))
(declare-fun temp86_96 () (_ BitVec 64))
(declare-fun temp86_97 () (_ BitVec 64))
(declare-fun temp86_98 () (_ BitVec 64))
(declare-fun temp86_99 () (_ BitVec 64))
(declare-fun temp86_100 () (_ BitVec 64))
(declare-fun temp86_101 () (_ BitVec 64))
(declare-fun temp86_102 () (_ BitVec 64))
(declare-fun temp86_103 () (_ BitVec 64))
(declare-fun temp86_104 () (_ BitVec 64))
(declare-fun temp86_105 () (_ BitVec 64))
(declare-fun temp86_106 () (_ BitVec 64))
(declare-fun temp86_107 () (_ BitVec 64))
(declare-fun temp86_108 () (_ BitVec 64))
(declare-fun temp86_109 () (_ BitVec 64))
(declare-fun temp86_110 () (_ BitVec 64))
(declare-fun temp86_111 () (_ BitVec 64))
(declare-fun temp86_112 () (_ BitVec 64))
(declare-fun temp86_113 () (_ BitVec 64))
(declare-fun temp86_114 () (_ BitVec 64))
(declare-fun temp86_115 () (_ BitVec 64))
(declare-fun temp86_116 () (_ BitVec 64))
(declare-fun temp86_117 () (_ BitVec 64))
(declare-fun temp86_118 () (_ BitVec 64))
(declare-fun temp86_119 () (_ BitVec 64))
(declare-fun temp86_120 () (_ BitVec 64))
(declare-fun temp86_121 () (_ BitVec 64))
(declare-fun temp86_122 () (_ BitVec 64))
(declare-fun temp86_123 () (_ BitVec 64))
(declare-fun temp86_124 () (_ BitVec 64))
(declare-fun temp86_125 () (_ BitVec 64))
(declare-fun temp86_126 () (_ BitVec 64))
(declare-fun temp86_127 () (_ BitVec 64))
(declare-fun temp86_128 () (_ BitVec 64))
(declare-fun temp86_129 () (_ BitVec 64))
(declare-fun temp86_130 () (_ BitVec 64))
(declare-fun temp86_131 () (_ BitVec 64))
(declare-fun temp86_132 () (_ BitVec 64))
(declare-fun temp86_133 () (_ BitVec 64))
(declare-fun temp86_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp86_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp86_136 () (_ BitVec 64))
(declare-fun temp86_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp86_138 () (_ BitVec 64))
(declare-fun temp86_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp86_140 () (_ BitVec 64))
(declare-fun temp86_141 () (_ BitVec 64))
(declare-fun temp86_142 () (_ BitVec 64))
(declare-fun temp86_143 () (_ BitVec 64))
(declare-fun temp86_144 () (_ BitVec 64))
(declare-fun temp86_145 () (_ BitVec 64))
(declare-fun temp86_146 () (_ BitVec 64))
(declare-fun temp86_147 () (_ BitVec 64))
(declare-fun temp86_148 () (_ BitVec 64))
(declare-fun temp86_149 () (_ BitVec 64))
(declare-fun temp86_150 () (_ BitVec 64))
(declare-fun temp86_151 () (_ BitVec 64))
(declare-fun temp86_152 () (_ BitVec 64))
(declare-fun temp86_153 () (_ BitVec 64))
(declare-fun temp86_154 () (_ BitVec 64))
(declare-fun temp86_155 () (_ BitVec 64))
(declare-fun temp86_157 () (_ BitVec 64))
(declare-fun temp86_158 () (_ BitVec 64))
(declare-fun temp86_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp86_159 () (_ BitVec 64))
(declare-fun temp86_160 () (_ BitVec 64))
(declare-fun temp86_162 () (_ BitVec 64))
(declare-fun temp86_163 () (_ BitVec 64))
(declare-fun temp86_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp86_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp86_165 () (_ BitVec 64))
(declare-fun temp86_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp86_167 () (_ BitVec 64))
(declare-fun temp86_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp86_169 () (_ BitVec 64))
(declare-fun temp86_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp86_171 () (_ BitVec 64))
(declare-fun temp86_172 () (_ BitVec 64))
(declare-fun temp86_173 () (_ BitVec 64))
(declare-fun temp86_174 () (_ BitVec 64))
(declare-fun temp86_175 () (_ BitVec 64))
(declare-fun temp86_176 () (_ BitVec 64))
(declare-fun temp86_177 () (_ BitVec 64))
(declare-fun temp86_178 () (_ BitVec 64))
(declare-fun temp86_179 () (_ BitVec 64))
(declare-fun temp86_180 () (_ BitVec 64))
(declare-fun temp86_181 () (_ BitVec 64))
(declare-fun temp86_182 () (_ BitVec 64))
(declare-fun temp86_183 () (_ BitVec 64))
(declare-fun temp86_184 () (_ BitVec 64))
(declare-fun temp86_185 () (_ BitVec 64))
(declare-fun temp86_186 () (_ BitVec 64))
(declare-fun temp86_187 () (_ BitVec 64))
(declare-fun temp86_188 () (_ BitVec 64))
(declare-fun temp86_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp86_190 () (_ BitVec 64))
(declare-fun temp86_192 () (_ BitVec 64))
(declare-fun temp86_193 () (_ BitVec 64))
(declare-fun temp86_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp86_194 () (_ BitVec 64))
(declare-fun temp86_195 () (_ BitVec 64))
(declare-fun temp86_197 () (_ BitVec 64))
(declare-fun temp86_198 () (_ BitVec 64))
(declare-fun temp86_196 () (_ BitVec 64))
(declare-fun temp86_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp86_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp86_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp86_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp86_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp86_204 () (_ BitVec 64))
(declare-fun temp86_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp86_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp86_207 () (_ BitVec 64))
(declare-fun temp86_208 () (_ BitVec 64))
(declare-fun temp86_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp86_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp86_211 () (_ BitVec 64))
(declare-fun temp86_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp86_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp86_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4796816 () (_ BitVec 64))
(declare-fun var211494 () (_ BitVec 64))
(declare-fun temp86_215 () (_ BitVec 64))
(declare-fun var211495 () (_ BitVec 64))
(declare-fun temp86_217 () (_ BitVec 64))
(declare-fun temp86_216 () (_ BitVec 64))
(declare-fun temp86_218 () (_ BitVec 64))
(declare-fun var6753770 () (_ BitVec 64))
(declare-fun temp86_220 () (_ BitVec 64))
(declare-fun temp86_219 () (_ BitVec 64))
(declare-fun temp86_221 () (_ BitVec 64))
(assert (= temp86_1 #x0000000000000001))
(assert (= var77203 temp86_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp86_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp86_2)))
(assert (= temp86_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp86_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp86_4 #x0000000000000000))
(assert (= var210941 temp86_4))
(assert (= temp86_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp86_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp86_6 #x0000000000000000))
(assert (= var210986 temp86_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp86_7 #x0000000000000000))
(assert (= temp86_8 temp86_7))
(assert (= temp86_9 (select ARGNAME_padding_NAMEEND_VAL temp86_8)))
(assert (= temp86_10 #x0000000000000001))
(assert (= temp86_11 temp86_10))
(assert (= temp86_12 (select ARGNAME_padding_NAMEEND_VAL temp86_11)))
(assert (= temp86_13 #x0000000000000002))
(assert (= temp86_14 temp86_13))
(assert (= temp86_15 (select ARGNAME_padding_NAMEEND_VAL temp86_14)))
(assert (= temp86_16 #x0000000000000003))
(assert (= temp86_17 temp86_16))
(assert (= temp86_18 (select ARGNAME_padding_NAMEEND_VAL temp86_17)))
(assert (= temp86_19 #x0000000000000004))
(assert (= temp86_20 temp86_19))
(assert (= temp86_21 (select ARGNAME_padding_NAMEEND_VAL temp86_20)))
(assert (= temp86_22 #x0000000000000005))
(assert (= temp86_23 temp86_22))
(assert (= temp86_24 (select ARGNAME_padding_NAMEEND_VAL temp86_23)))
(assert (= temp86_25 #x0000000000000000))
(assert (= temp86_26 #x0000000000000000))
(assert (= temp86_27 temp86_26))
(assert (= temp86_28 (select ARGNAME_padding_NAMEEND_VAL temp86_27)))
(assert (= temp86_29 #x0000000000000000))
(assert (= temp86_30 #x0000000000000001))
(assert (= temp86_31 temp86_30))
(assert (= temp86_32 (select ARGNAME_padding_NAMEEND_VAL temp86_31)))
(assert (= temp86_33 #x0000000000000000))
(assert (= temp86_34 #x0000000000000002))
(assert (= temp86_35 temp86_34))
(assert (= temp86_36 (select ARGNAME_padding_NAMEEND_VAL temp86_35)))
(assert (= temp86_37 #x0000000000000000))
(assert (= temp86_38 #x0000000000000003))
(assert (= temp86_39 temp86_38))
(assert (= temp86_40 (select ARGNAME_padding_NAMEEND_VAL temp86_39)))
(assert (= temp86_41 #x0000000000000000))
(assert (= temp86_42 #x0000000000000004))
(assert (= temp86_43 temp86_42))
(assert (= temp86_44 (select ARGNAME_padding_NAMEEND_VAL temp86_43)))
(assert (= temp86_45 #x0000000000000000))
(assert (= temp86_46 #x0000000000000005))
(assert (= temp86_47 temp86_46))
(assert (= temp86_48 (select ARGNAME_padding_NAMEEND_VAL temp86_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp86_28 temp86_25)
             (bvslt temp86_32 temp86_29)
             (bvslt temp86_36 temp86_33)
             (bvslt temp86_40 temp86_37)
             (bvslt temp86_44 temp86_41)
             (bvslt temp86_48 temp86_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp86_49 #x0000000000000000))
(assert (= var1191714 temp86_49))
(assert (= temp86_50 #x0000000000000000))
(assert (= temp86_51 temp86_50))
(assert (= temp86_52 (select ARGNAME_output_padding_NAMEEND_VAL temp86_51)))
(assert (= temp86_53 #x0000000000000001))
(assert (= temp86_54 temp86_53))
(assert (= temp86_55 (select ARGNAME_output_padding_NAMEEND_VAL temp86_54)))
(assert (= temp86_56 #x0000000000000002))
(assert (= temp86_57 temp86_56))
(assert (= temp86_58 (select ARGNAME_output_padding_NAMEEND_VAL temp86_57)))
(assert (= temp86_59 #x0000000000000003))
(assert (= temp86_60 temp86_59))
(assert (= temp86_61 (select ARGNAME_output_padding_NAMEEND_VAL temp86_60)))
(assert (= temp86_62 #x0000000000000004))
(assert (= temp86_63 temp86_62))
(assert (= temp86_64 (select ARGNAME_output_padding_NAMEEND_VAL temp86_63)))
(assert (= temp86_65 #x0000000000000005))
(assert (= temp86_66 temp86_65))
(assert (= temp86_67 (select ARGNAME_output_padding_NAMEEND_VAL temp86_66)))
(assert (= temp86_68 #x0000000000000000))
(assert (= temp86_69 #x0000000000000000))
(assert (= temp86_70 temp86_69))
(assert (= temp86_71 (select ARGNAME_output_padding_NAMEEND_VAL temp86_70)))
(assert (= temp86_72 #x0000000000000000))
(assert (= temp86_73 #x0000000000000001))
(assert (= temp86_74 temp86_73))
(assert (= temp86_75 (select ARGNAME_output_padding_NAMEEND_VAL temp86_74)))
(assert (= temp86_76 #x0000000000000000))
(assert (= temp86_77 #x0000000000000002))
(assert (= temp86_78 temp86_77))
(assert (= temp86_79 (select ARGNAME_output_padding_NAMEEND_VAL temp86_78)))
(assert (= temp86_80 #x0000000000000000))
(assert (= temp86_81 #x0000000000000003))
(assert (= temp86_82 temp86_81))
(assert (= temp86_83 (select ARGNAME_output_padding_NAMEEND_VAL temp86_82)))
(assert (= temp86_84 #x0000000000000000))
(assert (= temp86_85 #x0000000000000004))
(assert (= temp86_86 temp86_85))
(assert (= temp86_87 (select ARGNAME_output_padding_NAMEEND_VAL temp86_86)))
(assert (= temp86_88 #x0000000000000000))
(assert (= temp86_89 #x0000000000000005))
(assert (= temp86_90 temp86_89))
(assert (= temp86_91 (select ARGNAME_output_padding_NAMEEND_VAL temp86_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp86_71 temp86_68)
             (bvslt temp86_75 temp86_72)
             (bvslt temp86_79 temp86_76)
             (bvslt temp86_83 temp86_80)
             (bvslt temp86_87 temp86_84)
             (bvslt temp86_91 temp86_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp86_92 #x0000000000000000))
(assert (= var1191725 temp86_92))
(assert (= temp86_93 #x0000000000000000))
(assert (= temp86_94 temp86_93))
(assert (= temp86_95 (select ARGNAME_stride_NAMEEND_VAL temp86_94)))
(assert (= temp86_96 #x0000000000000001))
(assert (= temp86_97 temp86_96))
(assert (= temp86_98 (select ARGNAME_stride_NAMEEND_VAL temp86_97)))
(assert (= temp86_99 #x0000000000000002))
(assert (= temp86_100 temp86_99))
(assert (= temp86_101 (select ARGNAME_stride_NAMEEND_VAL temp86_100)))
(assert (= temp86_102 #x0000000000000003))
(assert (= temp86_103 temp86_102))
(assert (= temp86_104 (select ARGNAME_stride_NAMEEND_VAL temp86_103)))
(assert (= temp86_105 #x0000000000000004))
(assert (= temp86_106 temp86_105))
(assert (= temp86_107 (select ARGNAME_stride_NAMEEND_VAL temp86_106)))
(assert (= temp86_108 #x0000000000000005))
(assert (= temp86_109 temp86_108))
(assert (= temp86_110 (select ARGNAME_stride_NAMEEND_VAL temp86_109)))
(assert (= temp86_111 #x0000000000000000))
(assert (= temp86_112 #x0000000000000000))
(assert (= temp86_113 temp86_112))
(assert (= temp86_114 (select ARGNAME_stride_NAMEEND_VAL temp86_113)))
(assert (= temp86_115 #x0000000000000000))
(assert (= temp86_116 #x0000000000000001))
(assert (= temp86_117 temp86_116))
(assert (= temp86_118 (select ARGNAME_stride_NAMEEND_VAL temp86_117)))
(assert (= temp86_119 #x0000000000000000))
(assert (= temp86_120 #x0000000000000002))
(assert (= temp86_121 temp86_120))
(assert (= temp86_122 (select ARGNAME_stride_NAMEEND_VAL temp86_121)))
(assert (= temp86_123 #x0000000000000000))
(assert (= temp86_124 #x0000000000000003))
(assert (= temp86_125 temp86_124))
(assert (= temp86_126 (select ARGNAME_stride_NAMEEND_VAL temp86_125)))
(assert (= temp86_127 #x0000000000000000))
(assert (= temp86_128 #x0000000000000004))
(assert (= temp86_129 temp86_128))
(assert (= temp86_130 (select ARGNAME_stride_NAMEEND_VAL temp86_129)))
(assert (= temp86_131 #x0000000000000000))
(assert (= temp86_132 #x0000000000000005))
(assert (= temp86_133 temp86_132))
(assert (= temp86_134 (select ARGNAME_stride_NAMEEND_VAL temp86_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp86_114 temp86_111)
             (bvsle temp86_118 temp86_115)
             (bvsle temp86_122 temp86_119)
             (bvsle temp86_126 temp86_123)
             (bvsle temp86_130 temp86_127)
             (bvsle temp86_134 temp86_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp86_135 #x0000000000000000))
(assert (= var1191735 temp86_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp86_136 #x0000000000000001))
(assert (= var1191747 temp86_136))
(assert (= temp86_137 #x0000000000000000))
(assert (= var1179826 temp86_137))
(assert (= temp86_138 #x0000000000000000))
(assert (= temp86_139 temp86_138))
(assert (= temp86_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp86_139)))
(assert (= temp86_141 #x0000000000000001))
(assert (= temp86_142 temp86_141))
(assert (= temp86_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp86_142)))
(assert (= temp86_144 #x0000000000000002))
(assert (= temp86_145 temp86_144))
(assert (= temp86_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp86_145)))
(assert (= temp86_147 #x0000000000000003))
(assert (= temp86_148 temp86_147))
(assert (= temp86_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp86_148)))
(assert (= temp86_150 #x0000000000000004))
(assert (= temp86_151 temp86_150))
(assert (= temp86_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp86_151)))
(assert (= temp86_153 #x0000000000000005))
(assert (= temp86_154 temp86_153))
(assert (= temp86_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp86_154)))
(assert (= temp86_157 var1179826))
(assert (= temp86_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp86_157)))
(assert (= temp86_156 temp86_158))
(assert (= var1191780
   (ite (bvslt temp86_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp86_159 #x0000000000000000))
(assert (= var1191780 temp86_159))
(assert (= temp86_160 #x0000000000000000))
(assert (= var1179826 temp86_160))
(assert (= temp86_162 var1179826))
(assert (= temp86_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp86_162)))
(assert (= temp86_161 temp86_163))
(assert (= var1191802 (bvsmod temp86_161 ARGNAME_groups_NAMEEND)))
(assert (= temp86_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp86_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp86_165 #x0000000000000001))
(assert (= var1191803 temp86_165))
(assert (= temp86_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp86_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp86_167 #x0000000000000001))
(assert (= var1191823 temp86_167))
(assert (= temp86_168 #x0000000000000001))
(assert (= var1180714 temp86_168))
(assert (= temp86_169 #x0000000000000000))
(assert (= temp86_170 temp86_169))
(assert (= temp86_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp86_170)))
(assert (= temp86_172 #x0000000000000001))
(assert (= temp86_173 temp86_172))
(assert (= temp86_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp86_173)))
(assert (= temp86_175 #x0000000000000002))
(assert (= temp86_176 temp86_175))
(assert (= temp86_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp86_176)))
(assert (= temp86_178 #x0000000000000003))
(assert (= temp86_179 temp86_178))
(assert (= temp86_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp86_179)))
(assert (= temp86_181 #x0000000000000004))
(assert (= temp86_182 temp86_181))
(assert (= temp86_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp86_182)))
(assert (= temp86_184 #x0000000000000005))
(assert (= temp86_185 temp86_184))
(assert (= temp86_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp86_185)))
(assert (= temp86_187 #x0000000000000000))
(assert (= temp86_188
   (ite (bvslt var1180714 temp86_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp86_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp86_188)))
(assert (= var1191831 temp86_189))
(assert (bvslt (ite (bvslt var1180714 temp86_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp86_190 #x0000000000000001))
(assert (= var1180714 temp86_190))
(assert (= temp86_192 var1180714))
(assert (= temp86_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp86_192)))
(assert (= temp86_191 temp86_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp86_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp86_194 #x0000000000000001))
(assert (= var1191836 temp86_194))
(assert (= temp86_195 #x0000000000000000))
(assert (= var1179826 temp86_195))
(assert (= temp86_197 var1179826))
(assert (= temp86_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp86_197)))
(assert (= temp86_196 temp86_198))
(assert (= temp86_199 #x0000000000000002))
(assert (= var1586025 temp86_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp86_200 #x0000000000000001))
(assert (= var1191993 temp86_200))
(assert (= temp86_201 #x0000000000000001))
(assert (= var2700303 temp86_201))
(assert (= temp86_202 #x0000000000000001))
(assert (= var2962447 temp86_202))
(assert (= temp86_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp86_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp86_204 #x0000000000000001))
(assert (= var211058 temp86_204))
(assert (= temp86_205 #x0000000000000001))
(assert (= var211188 temp86_205))
(assert (= var3879401 var211188))
(assert (= temp86_206 #x0000000000000000))
(assert (= var3866802 temp86_206))
(assert (= temp86_207 #x0000000000000000))
(assert (= temp86_208
   (ite (bvslt var3866802 temp86_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp86_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp86_208)))
(assert (= var3879420 temp86_209))
(assert (bvslt (ite (bvslt var3866802 temp86_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp86_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp86_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp86_211 #x0000000000000001))
(assert (= var3879421 temp86_211))
(assert (= temp86_212 #x0000000000000000))
(assert (= var4079423 temp86_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp86_213 #x0000000000000002))
(assert (= var4208259 temp86_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp86_214 #x0000000000000000))
(assert (= var4273820 temp86_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4796816 var211201))
(assert (= var211494 var210913))
(assert (= temp86_215 #x0000000000000000))
(assert (= var211495
   (ite (distinct var211494 temp86_215) #x0000000000000001 #x0000000000000000)))
(assert (= temp86_217 #x0000000000000001))
(assert (= temp86_216 temp86_217))
(assert (= temp86_218 #x0000000000000001))
(assert (= var6753770 temp86_218))
(assert (= temp86_220 #xffffffffffffffff))
(assert (= temp86_219 temp86_220))
(assert (= temp86_221 #x0000000000000001))
(assert (= var211058 temp86_221))
(model-add temp86_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp86_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp86_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp86_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





