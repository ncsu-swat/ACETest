(declare-fun temp666_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp666_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp666_3 () (_ BitVec 64))
(declare-fun temp666_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp666_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp666_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp666_7 () (_ BitVec 64))
(declare-fun temp666_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp666_9 () (_ BitVec 64))
(declare-fun temp666_10 () (_ BitVec 64))
(declare-fun temp666_11 () (_ BitVec 64))
(declare-fun temp666_12 () (_ BitVec 64))
(declare-fun temp666_13 () (_ BitVec 64))
(declare-fun temp666_14 () (_ BitVec 64))
(declare-fun temp666_15 () (_ BitVec 64))
(declare-fun temp666_16 () (_ BitVec 64))
(declare-fun temp666_17 () (_ BitVec 64))
(declare-fun temp666_18 () (_ BitVec 64))
(declare-fun temp666_19 () (_ BitVec 64))
(declare-fun temp666_20 () (_ BitVec 64))
(declare-fun temp666_21 () (_ BitVec 64))
(declare-fun temp666_22 () (_ BitVec 64))
(declare-fun temp666_23 () (_ BitVec 64))
(declare-fun temp666_24 () (_ BitVec 64))
(declare-fun temp666_25 () (_ BitVec 64))
(declare-fun temp666_26 () (_ BitVec 64))
(declare-fun temp666_27 () (_ BitVec 64))
(declare-fun temp666_28 () (_ BitVec 64))
(declare-fun temp666_29 () (_ BitVec 64))
(declare-fun temp666_30 () (_ BitVec 64))
(declare-fun temp666_31 () (_ BitVec 64))
(declare-fun temp666_32 () (_ BitVec 64))
(declare-fun temp666_33 () (_ BitVec 64))
(declare-fun temp666_34 () (_ BitVec 64))
(declare-fun temp666_35 () (_ BitVec 64))
(declare-fun temp666_36 () (_ BitVec 64))
(declare-fun temp666_37 () (_ BitVec 64))
(declare-fun temp666_38 () (_ BitVec 64))
(declare-fun temp666_39 () (_ BitVec 64))
(declare-fun temp666_40 () (_ BitVec 64))
(declare-fun temp666_41 () (_ BitVec 64))
(declare-fun temp666_42 () (_ BitVec 64))
(declare-fun temp666_43 () (_ BitVec 64))
(declare-fun temp666_44 () (_ BitVec 64))
(declare-fun temp666_45 () (_ BitVec 64))
(declare-fun temp666_46 () (_ BitVec 64))
(declare-fun temp666_47 () (_ BitVec 64))
(declare-fun temp666_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp666_49 () (_ BitVec 64))
(declare-fun temp666_50 () (_ BitVec 64))
(declare-fun temp666_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp666_52 () (_ BitVec 64))
(declare-fun temp666_53 () (_ BitVec 64))
(declare-fun temp666_54 () (_ BitVec 64))
(declare-fun temp666_55 () (_ BitVec 64))
(declare-fun temp666_56 () (_ BitVec 64))
(declare-fun temp666_57 () (_ BitVec 64))
(declare-fun temp666_58 () (_ BitVec 64))
(declare-fun temp666_59 () (_ BitVec 64))
(declare-fun temp666_60 () (_ BitVec 64))
(declare-fun temp666_61 () (_ BitVec 64))
(declare-fun temp666_62 () (_ BitVec 64))
(declare-fun temp666_63 () (_ BitVec 64))
(declare-fun temp666_64 () (_ BitVec 64))
(declare-fun temp666_65 () (_ BitVec 64))
(declare-fun temp666_66 () (_ BitVec 64))
(declare-fun temp666_67 () (_ BitVec 64))
(declare-fun temp666_68 () (_ BitVec 64))
(declare-fun temp666_69 () (_ BitVec 64))
(declare-fun temp666_70 () (_ BitVec 64))
(declare-fun temp666_71 () (_ BitVec 64))
(declare-fun temp666_72 () (_ BitVec 64))
(declare-fun temp666_73 () (_ BitVec 64))
(declare-fun temp666_74 () (_ BitVec 64))
(declare-fun temp666_75 () (_ BitVec 64))
(declare-fun temp666_76 () (_ BitVec 64))
(declare-fun temp666_77 () (_ BitVec 64))
(declare-fun temp666_78 () (_ BitVec 64))
(declare-fun temp666_79 () (_ BitVec 64))
(declare-fun temp666_80 () (_ BitVec 64))
(declare-fun temp666_81 () (_ BitVec 64))
(declare-fun temp666_82 () (_ BitVec 64))
(declare-fun temp666_83 () (_ BitVec 64))
(declare-fun temp666_84 () (_ BitVec 64))
(declare-fun temp666_85 () (_ BitVec 64))
(declare-fun temp666_86 () (_ BitVec 64))
(declare-fun temp666_87 () (_ BitVec 64))
(declare-fun temp666_88 () (_ BitVec 64))
(declare-fun temp666_89 () (_ BitVec 64))
(declare-fun temp666_90 () (_ BitVec 64))
(declare-fun temp666_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp666_92 () (_ BitVec 64))
(declare-fun temp666_93 () (_ BitVec 64))
(declare-fun temp666_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp666_95 () (_ BitVec 64))
(declare-fun temp666_96 () (_ BitVec 64))
(declare-fun temp666_97 () (_ BitVec 64))
(declare-fun temp666_98 () (_ BitVec 64))
(declare-fun temp666_99 () (_ BitVec 64))
(declare-fun temp666_100 () (_ BitVec 64))
(declare-fun temp666_101 () (_ BitVec 64))
(declare-fun temp666_102 () (_ BitVec 64))
(declare-fun temp666_103 () (_ BitVec 64))
(declare-fun temp666_104 () (_ BitVec 64))
(declare-fun temp666_105 () (_ BitVec 64))
(declare-fun temp666_106 () (_ BitVec 64))
(declare-fun temp666_107 () (_ BitVec 64))
(declare-fun temp666_108 () (_ BitVec 64))
(declare-fun temp666_109 () (_ BitVec 64))
(declare-fun temp666_110 () (_ BitVec 64))
(declare-fun temp666_111 () (_ BitVec 64))
(declare-fun temp666_112 () (_ BitVec 64))
(declare-fun temp666_113 () (_ BitVec 64))
(declare-fun temp666_114 () (_ BitVec 64))
(declare-fun temp666_115 () (_ BitVec 64))
(declare-fun temp666_116 () (_ BitVec 64))
(declare-fun temp666_117 () (_ BitVec 64))
(declare-fun temp666_118 () (_ BitVec 64))
(declare-fun temp666_119 () (_ BitVec 64))
(declare-fun temp666_120 () (_ BitVec 64))
(declare-fun temp666_121 () (_ BitVec 64))
(declare-fun temp666_122 () (_ BitVec 64))
(declare-fun temp666_123 () (_ BitVec 64))
(declare-fun temp666_124 () (_ BitVec 64))
(declare-fun temp666_125 () (_ BitVec 64))
(declare-fun temp666_126 () (_ BitVec 64))
(declare-fun temp666_127 () (_ BitVec 64))
(declare-fun temp666_128 () (_ BitVec 64))
(declare-fun temp666_129 () (_ BitVec 64))
(declare-fun temp666_130 () (_ BitVec 64))
(declare-fun temp666_131 () (_ BitVec 64))
(declare-fun temp666_132 () (_ BitVec 64))
(declare-fun temp666_133 () (_ BitVec 64))
(declare-fun temp666_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp666_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp666_136 () (_ BitVec 64))
(declare-fun temp666_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp666_138 () (_ BitVec 64))
(declare-fun temp666_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp666_140 () (_ BitVec 64))
(declare-fun temp666_141 () (_ BitVec 64))
(declare-fun temp666_142 () (_ BitVec 64))
(declare-fun temp666_143 () (_ BitVec 64))
(declare-fun temp666_144 () (_ BitVec 64))
(declare-fun temp666_145 () (_ BitVec 64))
(declare-fun temp666_146 () (_ BitVec 64))
(declare-fun temp666_147 () (_ BitVec 64))
(declare-fun temp666_148 () (_ BitVec 64))
(declare-fun temp666_149 () (_ BitVec 64))
(declare-fun temp666_150 () (_ BitVec 64))
(declare-fun temp666_151 () (_ BitVec 64))
(declare-fun temp666_152 () (_ BitVec 64))
(declare-fun temp666_153 () (_ BitVec 64))
(declare-fun temp666_154 () (_ BitVec 64))
(declare-fun temp666_155 () (_ BitVec 64))
(declare-fun temp666_157 () (_ BitVec 64))
(declare-fun temp666_158 () (_ BitVec 64))
(declare-fun temp666_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp666_159 () (_ BitVec 64))
(declare-fun temp666_160 () (_ BitVec 64))
(declare-fun temp666_162 () (_ BitVec 64))
(declare-fun temp666_163 () (_ BitVec 64))
(declare-fun temp666_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp666_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp666_165 () (_ BitVec 64))
(declare-fun temp666_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp666_167 () (_ BitVec 64))
(declare-fun temp666_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp666_169 () (_ BitVec 64))
(declare-fun temp666_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp666_171 () (_ BitVec 64))
(declare-fun temp666_172 () (_ BitVec 64))
(declare-fun temp666_173 () (_ BitVec 64))
(declare-fun temp666_174 () (_ BitVec 64))
(declare-fun temp666_175 () (_ BitVec 64))
(declare-fun temp666_176 () (_ BitVec 64))
(declare-fun temp666_177 () (_ BitVec 64))
(declare-fun temp666_178 () (_ BitVec 64))
(declare-fun temp666_179 () (_ BitVec 64))
(declare-fun temp666_180 () (_ BitVec 64))
(declare-fun temp666_181 () (_ BitVec 64))
(declare-fun temp666_182 () (_ BitVec 64))
(declare-fun temp666_183 () (_ BitVec 64))
(declare-fun temp666_184 () (_ BitVec 64))
(declare-fun temp666_185 () (_ BitVec 64))
(declare-fun temp666_186 () (_ BitVec 64))
(declare-fun temp666_187 () (_ BitVec 64))
(declare-fun temp666_188 () (_ BitVec 64))
(declare-fun temp666_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp666_190 () (_ BitVec 64))
(declare-fun temp666_192 () (_ BitVec 64))
(declare-fun temp666_193 () (_ BitVec 64))
(declare-fun temp666_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp666_194 () (_ BitVec 64))
(declare-fun temp666_195 () (_ BitVec 64))
(declare-fun temp666_197 () (_ BitVec 64))
(declare-fun temp666_198 () (_ BitVec 64))
(declare-fun temp666_196 () (_ BitVec 64))
(declare-fun temp666_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp666_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp666_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp666_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp666_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp666_204 () (_ BitVec 64))
(declare-fun temp666_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp666_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp666_207 () (_ BitVec 64))
(declare-fun temp666_208 () (_ BitVec 64))
(declare-fun temp666_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp666_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp666_211 () (_ BitVec 64))
(declare-fun temp666_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp666_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp666_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4796816 () (_ BitVec 64))
(declare-fun var211494 () (_ BitVec 64))
(declare-fun temp666_215 () (_ BitVec 64))
(declare-fun var211495 () (_ BitVec 64))
(declare-fun temp666_217 () (_ BitVec 64))
(declare-fun temp666_216 () (_ BitVec 64))
(declare-fun temp666_218 () (_ BitVec 64))
(declare-fun var6753770 () (_ BitVec 64))
(declare-fun temp666_220 () (_ BitVec 64))
(declare-fun temp666_219 () (_ BitVec 64))
(declare-fun temp666_221 () (_ BitVec 64))
(assert (= temp666_1 #x0000000000000001))
(assert (= var77203 temp666_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp666_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp666_2)))
(assert (= temp666_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp666_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp666_4 #x0000000000000000))
(assert (= var210941 temp666_4))
(assert (= temp666_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp666_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp666_6 #x0000000000000000))
(assert (= var210986 temp666_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp666_7 #x0000000000000000))
(assert (= temp666_8 temp666_7))
(assert (= temp666_9 (select ARGNAME_padding_NAMEEND_VAL temp666_8)))
(assert (= temp666_10 #x0000000000000001))
(assert (= temp666_11 temp666_10))
(assert (= temp666_12 (select ARGNAME_padding_NAMEEND_VAL temp666_11)))
(assert (= temp666_13 #x0000000000000002))
(assert (= temp666_14 temp666_13))
(assert (= temp666_15 (select ARGNAME_padding_NAMEEND_VAL temp666_14)))
(assert (= temp666_16 #x0000000000000003))
(assert (= temp666_17 temp666_16))
(assert (= temp666_18 (select ARGNAME_padding_NAMEEND_VAL temp666_17)))
(assert (= temp666_19 #x0000000000000004))
(assert (= temp666_20 temp666_19))
(assert (= temp666_21 (select ARGNAME_padding_NAMEEND_VAL temp666_20)))
(assert (= temp666_22 #x0000000000000005))
(assert (= temp666_23 temp666_22))
(assert (= temp666_24 (select ARGNAME_padding_NAMEEND_VAL temp666_23)))
(assert (= temp666_25 #x0000000000000000))
(assert (= temp666_26 #x0000000000000000))
(assert (= temp666_27 temp666_26))
(assert (= temp666_28 (select ARGNAME_padding_NAMEEND_VAL temp666_27)))
(assert (= temp666_29 #x0000000000000000))
(assert (= temp666_30 #x0000000000000001))
(assert (= temp666_31 temp666_30))
(assert (= temp666_32 (select ARGNAME_padding_NAMEEND_VAL temp666_31)))
(assert (= temp666_33 #x0000000000000000))
(assert (= temp666_34 #x0000000000000002))
(assert (= temp666_35 temp666_34))
(assert (= temp666_36 (select ARGNAME_padding_NAMEEND_VAL temp666_35)))
(assert (= temp666_37 #x0000000000000000))
(assert (= temp666_38 #x0000000000000003))
(assert (= temp666_39 temp666_38))
(assert (= temp666_40 (select ARGNAME_padding_NAMEEND_VAL temp666_39)))
(assert (= temp666_41 #x0000000000000000))
(assert (= temp666_42 #x0000000000000004))
(assert (= temp666_43 temp666_42))
(assert (= temp666_44 (select ARGNAME_padding_NAMEEND_VAL temp666_43)))
(assert (= temp666_45 #x0000000000000000))
(assert (= temp666_46 #x0000000000000005))
(assert (= temp666_47 temp666_46))
(assert (= temp666_48 (select ARGNAME_padding_NAMEEND_VAL temp666_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp666_28 temp666_25)
             (bvslt temp666_32 temp666_29)
             (bvslt temp666_36 temp666_33)
             (bvslt temp666_40 temp666_37)
             (bvslt temp666_44 temp666_41)
             (bvslt temp666_48 temp666_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp666_49 #x0000000000000000))
(assert (= var1191714 temp666_49))
(assert (= temp666_50 #x0000000000000000))
(assert (= temp666_51 temp666_50))
(assert (= temp666_52 (select ARGNAME_output_padding_NAMEEND_VAL temp666_51)))
(assert (= temp666_53 #x0000000000000001))
(assert (= temp666_54 temp666_53))
(assert (= temp666_55 (select ARGNAME_output_padding_NAMEEND_VAL temp666_54)))
(assert (= temp666_56 #x0000000000000002))
(assert (= temp666_57 temp666_56))
(assert (= temp666_58 (select ARGNAME_output_padding_NAMEEND_VAL temp666_57)))
(assert (= temp666_59 #x0000000000000003))
(assert (= temp666_60 temp666_59))
(assert (= temp666_61 (select ARGNAME_output_padding_NAMEEND_VAL temp666_60)))
(assert (= temp666_62 #x0000000000000004))
(assert (= temp666_63 temp666_62))
(assert (= temp666_64 (select ARGNAME_output_padding_NAMEEND_VAL temp666_63)))
(assert (= temp666_65 #x0000000000000005))
(assert (= temp666_66 temp666_65))
(assert (= temp666_67 (select ARGNAME_output_padding_NAMEEND_VAL temp666_66)))
(assert (= temp666_68 #x0000000000000000))
(assert (= temp666_69 #x0000000000000000))
(assert (= temp666_70 temp666_69))
(assert (= temp666_71 (select ARGNAME_output_padding_NAMEEND_VAL temp666_70)))
(assert (= temp666_72 #x0000000000000000))
(assert (= temp666_73 #x0000000000000001))
(assert (= temp666_74 temp666_73))
(assert (= temp666_75 (select ARGNAME_output_padding_NAMEEND_VAL temp666_74)))
(assert (= temp666_76 #x0000000000000000))
(assert (= temp666_77 #x0000000000000002))
(assert (= temp666_78 temp666_77))
(assert (= temp666_79 (select ARGNAME_output_padding_NAMEEND_VAL temp666_78)))
(assert (= temp666_80 #x0000000000000000))
(assert (= temp666_81 #x0000000000000003))
(assert (= temp666_82 temp666_81))
(assert (= temp666_83 (select ARGNAME_output_padding_NAMEEND_VAL temp666_82)))
(assert (= temp666_84 #x0000000000000000))
(assert (= temp666_85 #x0000000000000004))
(assert (= temp666_86 temp666_85))
(assert (= temp666_87 (select ARGNAME_output_padding_NAMEEND_VAL temp666_86)))
(assert (= temp666_88 #x0000000000000000))
(assert (= temp666_89 #x0000000000000005))
(assert (= temp666_90 temp666_89))
(assert (= temp666_91 (select ARGNAME_output_padding_NAMEEND_VAL temp666_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp666_71 temp666_68)
             (bvslt temp666_75 temp666_72)
             (bvslt temp666_79 temp666_76)
             (bvslt temp666_83 temp666_80)
             (bvslt temp666_87 temp666_84)
             (bvslt temp666_91 temp666_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp666_92 #x0000000000000000))
(assert (= var1191725 temp666_92))
(assert (= temp666_93 #x0000000000000000))
(assert (= temp666_94 temp666_93))
(assert (= temp666_95 (select ARGNAME_stride_NAMEEND_VAL temp666_94)))
(assert (= temp666_96 #x0000000000000001))
(assert (= temp666_97 temp666_96))
(assert (= temp666_98 (select ARGNAME_stride_NAMEEND_VAL temp666_97)))
(assert (= temp666_99 #x0000000000000002))
(assert (= temp666_100 temp666_99))
(assert (= temp666_101 (select ARGNAME_stride_NAMEEND_VAL temp666_100)))
(assert (= temp666_102 #x0000000000000003))
(assert (= temp666_103 temp666_102))
(assert (= temp666_104 (select ARGNAME_stride_NAMEEND_VAL temp666_103)))
(assert (= temp666_105 #x0000000000000004))
(assert (= temp666_106 temp666_105))
(assert (= temp666_107 (select ARGNAME_stride_NAMEEND_VAL temp666_106)))
(assert (= temp666_108 #x0000000000000005))
(assert (= temp666_109 temp666_108))
(assert (= temp666_110 (select ARGNAME_stride_NAMEEND_VAL temp666_109)))
(assert (= temp666_111 #x0000000000000000))
(assert (= temp666_112 #x0000000000000000))
(assert (= temp666_113 temp666_112))
(assert (= temp666_114 (select ARGNAME_stride_NAMEEND_VAL temp666_113)))
(assert (= temp666_115 #x0000000000000000))
(assert (= temp666_116 #x0000000000000001))
(assert (= temp666_117 temp666_116))
(assert (= temp666_118 (select ARGNAME_stride_NAMEEND_VAL temp666_117)))
(assert (= temp666_119 #x0000000000000000))
(assert (= temp666_120 #x0000000000000002))
(assert (= temp666_121 temp666_120))
(assert (= temp666_122 (select ARGNAME_stride_NAMEEND_VAL temp666_121)))
(assert (= temp666_123 #x0000000000000000))
(assert (= temp666_124 #x0000000000000003))
(assert (= temp666_125 temp666_124))
(assert (= temp666_126 (select ARGNAME_stride_NAMEEND_VAL temp666_125)))
(assert (= temp666_127 #x0000000000000000))
(assert (= temp666_128 #x0000000000000004))
(assert (= temp666_129 temp666_128))
(assert (= temp666_130 (select ARGNAME_stride_NAMEEND_VAL temp666_129)))
(assert (= temp666_131 #x0000000000000000))
(assert (= temp666_132 #x0000000000000005))
(assert (= temp666_133 temp666_132))
(assert (= temp666_134 (select ARGNAME_stride_NAMEEND_VAL temp666_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp666_114 temp666_111)
             (bvsle temp666_118 temp666_115)
             (bvsle temp666_122 temp666_119)
             (bvsle temp666_126 temp666_123)
             (bvsle temp666_130 temp666_127)
             (bvsle temp666_134 temp666_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp666_135 #x0000000000000000))
(assert (= var1191735 temp666_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp666_136 #x0000000000000001))
(assert (= var1191747 temp666_136))
(assert (= temp666_137 #x0000000000000000))
(assert (= var1179826 temp666_137))
(assert (= temp666_138 #x0000000000000000))
(assert (= temp666_139 temp666_138))
(assert (= temp666_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp666_139)))
(assert (= temp666_141 #x0000000000000001))
(assert (= temp666_142 temp666_141))
(assert (= temp666_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp666_142)))
(assert (= temp666_144 #x0000000000000002))
(assert (= temp666_145 temp666_144))
(assert (= temp666_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp666_145)))
(assert (= temp666_147 #x0000000000000003))
(assert (= temp666_148 temp666_147))
(assert (= temp666_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp666_148)))
(assert (= temp666_150 #x0000000000000004))
(assert (= temp666_151 temp666_150))
(assert (= temp666_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp666_151)))
(assert (= temp666_153 #x0000000000000005))
(assert (= temp666_154 temp666_153))
(assert (= temp666_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp666_154)))
(assert (= temp666_157 var1179826))
(assert (= temp666_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp666_157)))
(assert (= temp666_156 temp666_158))
(assert (= var1191780
   (ite (bvslt temp666_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp666_159 #x0000000000000000))
(assert (= var1191780 temp666_159))
(assert (= temp666_160 #x0000000000000000))
(assert (= var1179826 temp666_160))
(assert (= temp666_162 var1179826))
(assert (= temp666_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp666_162)))
(assert (= temp666_161 temp666_163))
(assert (= var1191802 (bvsmod temp666_161 ARGNAME_groups_NAMEEND)))
(assert (= temp666_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp666_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp666_165 #x0000000000000001))
(assert (= var1191803 temp666_165))
(assert (= temp666_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp666_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp666_167 #x0000000000000001))
(assert (= var1191823 temp666_167))
(assert (= temp666_168 #x0000000000000001))
(assert (= var1180714 temp666_168))
(assert (= temp666_169 #x0000000000000000))
(assert (= temp666_170 temp666_169))
(assert (= temp666_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp666_170)))
(assert (= temp666_172 #x0000000000000001))
(assert (= temp666_173 temp666_172))
(assert (= temp666_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp666_173)))
(assert (= temp666_175 #x0000000000000002))
(assert (= temp666_176 temp666_175))
(assert (= temp666_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp666_176)))
(assert (= temp666_178 #x0000000000000003))
(assert (= temp666_179 temp666_178))
(assert (= temp666_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp666_179)))
(assert (= temp666_181 #x0000000000000004))
(assert (= temp666_182 temp666_181))
(assert (= temp666_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp666_182)))
(assert (= temp666_184 #x0000000000000005))
(assert (= temp666_185 temp666_184))
(assert (= temp666_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp666_185)))
(assert (= temp666_187 #x0000000000000000))
(assert (= temp666_188
   (ite (bvslt var1180714 temp666_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp666_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp666_188)))
(assert (= var1191831 temp666_189))
(assert (bvslt (ite (bvslt var1180714 temp666_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp666_190 #x0000000000000001))
(assert (= var1180714 temp666_190))
(assert (= temp666_192 var1180714))
(assert (= temp666_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp666_192)))
(assert (= temp666_191 temp666_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp666_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp666_194 #x0000000000000001))
(assert (= var1191836 temp666_194))
(assert (= temp666_195 #x0000000000000000))
(assert (= var1179826 temp666_195))
(assert (= temp666_197 var1179826))
(assert (= temp666_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp666_197)))
(assert (= temp666_196 temp666_198))
(assert (= temp666_199 #x0000000000000002))
(assert (= var1586025 temp666_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp666_200 #x0000000000000001))
(assert (= var1191993 temp666_200))
(assert (= temp666_201 #x0000000000000001))
(assert (= var2700303 temp666_201))
(assert (= temp666_202 #x0000000000000001))
(assert (= var2962447 temp666_202))
(assert (= temp666_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp666_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp666_204 #x0000000000000001))
(assert (= var211058 temp666_204))
(assert (= temp666_205 #x0000000000000001))
(assert (= var211188 temp666_205))
(assert (= var3879401 var211188))
(assert (= temp666_206 #x0000000000000000))
(assert (= var3866802 temp666_206))
(assert (= temp666_207 #x0000000000000000))
(assert (= temp666_208
   (ite (bvslt var3866802 temp666_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp666_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp666_208)))
(assert (= var3879420 temp666_209))
(assert (bvslt (ite (bvslt var3866802 temp666_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp666_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp666_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp666_211 #x0000000000000001))
(assert (= var3879421 temp666_211))
(assert (= temp666_212 #x0000000000000000))
(assert (= var4079423 temp666_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp666_213 #x0000000000000002))
(assert (= var4208259 temp666_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp666_214 #x0000000000000000))
(assert (= var4273820 temp666_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4796816 var211201))
(assert (= var211494 var210913))
(assert (= temp666_215 #x0000000000000000))
(assert (= var211495
   (ite (distinct var211494 temp666_215) #x0000000000000001 #x0000000000000000)))
(assert (= temp666_217 #x0000000000000001))
(assert (= temp666_216 temp666_217))
(assert (= temp666_218 #x0000000000000001))
(assert (= var6753770 temp666_218))
(assert (= temp666_220 #xffffffffffffffff))
(assert (= temp666_219 temp666_220))
(assert (= temp666_221 #x0000000000000001))
(assert (= var211058 temp666_221))
(model-add temp666_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp666_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp666_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp666_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





