(declare-fun temp40_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp40_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp40_3 () (_ BitVec 64))
(declare-fun temp40_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp40_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp40_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp40_7 () (_ BitVec 64))
(declare-fun temp40_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp40_9 () (_ BitVec 64))
(declare-fun temp40_10 () (_ BitVec 64))
(declare-fun temp40_11 () (_ BitVec 64))
(declare-fun temp40_12 () (_ BitVec 64))
(declare-fun temp40_13 () (_ BitVec 64))
(declare-fun temp40_14 () (_ BitVec 64))
(declare-fun temp40_15 () (_ BitVec 64))
(declare-fun temp40_16 () (_ BitVec 64))
(declare-fun temp40_17 () (_ BitVec 64))
(declare-fun temp40_18 () (_ BitVec 64))
(declare-fun temp40_19 () (_ BitVec 64))
(declare-fun temp40_20 () (_ BitVec 64))
(declare-fun temp40_21 () (_ BitVec 64))
(declare-fun temp40_22 () (_ BitVec 64))
(declare-fun temp40_23 () (_ BitVec 64))
(declare-fun temp40_24 () (_ BitVec 64))
(declare-fun temp40_25 () (_ BitVec 64))
(declare-fun temp40_26 () (_ BitVec 64))
(declare-fun temp40_27 () (_ BitVec 64))
(declare-fun temp40_28 () (_ BitVec 64))
(declare-fun temp40_29 () (_ BitVec 64))
(declare-fun temp40_30 () (_ BitVec 64))
(declare-fun temp40_31 () (_ BitVec 64))
(declare-fun temp40_32 () (_ BitVec 64))
(declare-fun temp40_33 () (_ BitVec 64))
(declare-fun temp40_34 () (_ BitVec 64))
(declare-fun temp40_35 () (_ BitVec 64))
(declare-fun temp40_36 () (_ BitVec 64))
(declare-fun temp40_37 () (_ BitVec 64))
(declare-fun temp40_38 () (_ BitVec 64))
(declare-fun temp40_39 () (_ BitVec 64))
(declare-fun temp40_40 () (_ BitVec 64))
(declare-fun temp40_41 () (_ BitVec 64))
(declare-fun temp40_42 () (_ BitVec 64))
(declare-fun temp40_43 () (_ BitVec 64))
(declare-fun temp40_44 () (_ BitVec 64))
(declare-fun temp40_45 () (_ BitVec 64))
(declare-fun temp40_46 () (_ BitVec 64))
(declare-fun temp40_47 () (_ BitVec 64))
(declare-fun temp40_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp40_49 () (_ BitVec 64))
(declare-fun temp40_50 () (_ BitVec 64))
(declare-fun temp40_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp40_52 () (_ BitVec 64))
(declare-fun temp40_53 () (_ BitVec 64))
(declare-fun temp40_54 () (_ BitVec 64))
(declare-fun temp40_55 () (_ BitVec 64))
(declare-fun temp40_56 () (_ BitVec 64))
(declare-fun temp40_57 () (_ BitVec 64))
(declare-fun temp40_58 () (_ BitVec 64))
(declare-fun temp40_59 () (_ BitVec 64))
(declare-fun temp40_60 () (_ BitVec 64))
(declare-fun temp40_61 () (_ BitVec 64))
(declare-fun temp40_62 () (_ BitVec 64))
(declare-fun temp40_63 () (_ BitVec 64))
(declare-fun temp40_64 () (_ BitVec 64))
(declare-fun temp40_65 () (_ BitVec 64))
(declare-fun temp40_66 () (_ BitVec 64))
(declare-fun temp40_67 () (_ BitVec 64))
(declare-fun temp40_68 () (_ BitVec 64))
(declare-fun temp40_69 () (_ BitVec 64))
(declare-fun temp40_70 () (_ BitVec 64))
(declare-fun temp40_71 () (_ BitVec 64))
(declare-fun temp40_72 () (_ BitVec 64))
(declare-fun temp40_73 () (_ BitVec 64))
(declare-fun temp40_74 () (_ BitVec 64))
(declare-fun temp40_75 () (_ BitVec 64))
(declare-fun temp40_76 () (_ BitVec 64))
(declare-fun temp40_77 () (_ BitVec 64))
(declare-fun temp40_78 () (_ BitVec 64))
(declare-fun temp40_79 () (_ BitVec 64))
(declare-fun temp40_80 () (_ BitVec 64))
(declare-fun temp40_81 () (_ BitVec 64))
(declare-fun temp40_82 () (_ BitVec 64))
(declare-fun temp40_83 () (_ BitVec 64))
(declare-fun temp40_84 () (_ BitVec 64))
(declare-fun temp40_85 () (_ BitVec 64))
(declare-fun temp40_86 () (_ BitVec 64))
(declare-fun temp40_87 () (_ BitVec 64))
(declare-fun temp40_88 () (_ BitVec 64))
(declare-fun temp40_89 () (_ BitVec 64))
(declare-fun temp40_90 () (_ BitVec 64))
(declare-fun temp40_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp40_92 () (_ BitVec 64))
(declare-fun temp40_93 () (_ BitVec 64))
(declare-fun temp40_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp40_95 () (_ BitVec 64))
(declare-fun temp40_96 () (_ BitVec 64))
(declare-fun temp40_97 () (_ BitVec 64))
(declare-fun temp40_98 () (_ BitVec 64))
(declare-fun temp40_99 () (_ BitVec 64))
(declare-fun temp40_100 () (_ BitVec 64))
(declare-fun temp40_101 () (_ BitVec 64))
(declare-fun temp40_102 () (_ BitVec 64))
(declare-fun temp40_103 () (_ BitVec 64))
(declare-fun temp40_104 () (_ BitVec 64))
(declare-fun temp40_105 () (_ BitVec 64))
(declare-fun temp40_106 () (_ BitVec 64))
(declare-fun temp40_107 () (_ BitVec 64))
(declare-fun temp40_108 () (_ BitVec 64))
(declare-fun temp40_109 () (_ BitVec 64))
(declare-fun temp40_110 () (_ BitVec 64))
(declare-fun temp40_111 () (_ BitVec 64))
(declare-fun temp40_112 () (_ BitVec 64))
(declare-fun temp40_113 () (_ BitVec 64))
(declare-fun temp40_114 () (_ BitVec 64))
(declare-fun temp40_115 () (_ BitVec 64))
(declare-fun temp40_116 () (_ BitVec 64))
(declare-fun temp40_117 () (_ BitVec 64))
(declare-fun temp40_118 () (_ BitVec 64))
(declare-fun temp40_119 () (_ BitVec 64))
(declare-fun temp40_120 () (_ BitVec 64))
(declare-fun temp40_121 () (_ BitVec 64))
(declare-fun temp40_122 () (_ BitVec 64))
(declare-fun temp40_123 () (_ BitVec 64))
(declare-fun temp40_124 () (_ BitVec 64))
(declare-fun temp40_125 () (_ BitVec 64))
(declare-fun temp40_126 () (_ BitVec 64))
(declare-fun temp40_127 () (_ BitVec 64))
(declare-fun temp40_128 () (_ BitVec 64))
(declare-fun temp40_129 () (_ BitVec 64))
(declare-fun temp40_130 () (_ BitVec 64))
(declare-fun temp40_131 () (_ BitVec 64))
(declare-fun temp40_132 () (_ BitVec 64))
(declare-fun temp40_133 () (_ BitVec 64))
(declare-fun temp40_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp40_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp40_136 () (_ BitVec 64))
(declare-fun temp40_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp40_138 () (_ BitVec 64))
(declare-fun temp40_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp40_140 () (_ BitVec 64))
(declare-fun temp40_141 () (_ BitVec 64))
(declare-fun temp40_142 () (_ BitVec 64))
(declare-fun temp40_143 () (_ BitVec 64))
(declare-fun temp40_144 () (_ BitVec 64))
(declare-fun temp40_145 () (_ BitVec 64))
(declare-fun temp40_146 () (_ BitVec 64))
(declare-fun temp40_147 () (_ BitVec 64))
(declare-fun temp40_148 () (_ BitVec 64))
(declare-fun temp40_149 () (_ BitVec 64))
(declare-fun temp40_150 () (_ BitVec 64))
(declare-fun temp40_151 () (_ BitVec 64))
(declare-fun temp40_152 () (_ BitVec 64))
(declare-fun temp40_153 () (_ BitVec 64))
(declare-fun temp40_154 () (_ BitVec 64))
(declare-fun temp40_155 () (_ BitVec 64))
(declare-fun temp40_157 () (_ BitVec 64))
(declare-fun temp40_158 () (_ BitVec 64))
(declare-fun temp40_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp40_159 () (_ BitVec 64))
(declare-fun temp40_160 () (_ BitVec 64))
(declare-fun temp40_162 () (_ BitVec 64))
(declare-fun temp40_163 () (_ BitVec 64))
(declare-fun temp40_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp40_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp40_165 () (_ BitVec 64))
(declare-fun temp40_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp40_167 () (_ BitVec 64))
(declare-fun temp40_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp40_169 () (_ BitVec 64))
(declare-fun temp40_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp40_171 () (_ BitVec 64))
(declare-fun temp40_172 () (_ BitVec 64))
(declare-fun temp40_173 () (_ BitVec 64))
(declare-fun temp40_174 () (_ BitVec 64))
(declare-fun temp40_175 () (_ BitVec 64))
(declare-fun temp40_176 () (_ BitVec 64))
(declare-fun temp40_177 () (_ BitVec 64))
(declare-fun temp40_178 () (_ BitVec 64))
(declare-fun temp40_179 () (_ BitVec 64))
(declare-fun temp40_180 () (_ BitVec 64))
(declare-fun temp40_181 () (_ BitVec 64))
(declare-fun temp40_182 () (_ BitVec 64))
(declare-fun temp40_183 () (_ BitVec 64))
(declare-fun temp40_184 () (_ BitVec 64))
(declare-fun temp40_185 () (_ BitVec 64))
(declare-fun temp40_186 () (_ BitVec 64))
(declare-fun temp40_187 () (_ BitVec 64))
(declare-fun temp40_188 () (_ BitVec 64))
(declare-fun temp40_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp40_190 () (_ BitVec 64))
(declare-fun temp40_192 () (_ BitVec 64))
(declare-fun temp40_193 () (_ BitVec 64))
(declare-fun temp40_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp40_194 () (_ BitVec 64))
(declare-fun temp40_195 () (_ BitVec 64))
(declare-fun temp40_197 () (_ BitVec 64))
(declare-fun temp40_198 () (_ BitVec 64))
(declare-fun temp40_196 () (_ BitVec 64))
(declare-fun temp40_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp40_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp40_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp40_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp40_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp40_204 () (_ BitVec 64))
(declare-fun temp40_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp40_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp40_207 () (_ BitVec 64))
(declare-fun temp40_208 () (_ BitVec 64))
(declare-fun temp40_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp40_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp40_211 () (_ BitVec 64))
(declare-fun temp40_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp40_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp40_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4796816 () (_ BitVec 64))
(declare-fun var211388 () (_ BitVec 64))
(declare-fun temp40_215 () (_ BitVec 64))
(declare-fun var211389 () (_ BitVec 64))
(declare-fun var5717837 () (_ BitVec 64))
(declare-fun temp40_216 () (_ BitVec 64))
(assert (= temp40_1 #x0000000000000001))
(assert (= var77203 temp40_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp40_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp40_2)))
(assert (= temp40_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp40_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp40_4 #x0000000000000000))
(assert (= var210941 temp40_4))
(assert (= temp40_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp40_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp40_6 #x0000000000000000))
(assert (= var210986 temp40_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp40_7 #x0000000000000000))
(assert (= temp40_8 temp40_7))
(assert (= temp40_9 (select ARGNAME_padding_NAMEEND_VAL temp40_8)))
(assert (= temp40_10 #x0000000000000001))
(assert (= temp40_11 temp40_10))
(assert (= temp40_12 (select ARGNAME_padding_NAMEEND_VAL temp40_11)))
(assert (= temp40_13 #x0000000000000002))
(assert (= temp40_14 temp40_13))
(assert (= temp40_15 (select ARGNAME_padding_NAMEEND_VAL temp40_14)))
(assert (= temp40_16 #x0000000000000003))
(assert (= temp40_17 temp40_16))
(assert (= temp40_18 (select ARGNAME_padding_NAMEEND_VAL temp40_17)))
(assert (= temp40_19 #x0000000000000004))
(assert (= temp40_20 temp40_19))
(assert (= temp40_21 (select ARGNAME_padding_NAMEEND_VAL temp40_20)))
(assert (= temp40_22 #x0000000000000005))
(assert (= temp40_23 temp40_22))
(assert (= temp40_24 (select ARGNAME_padding_NAMEEND_VAL temp40_23)))
(assert (= temp40_25 #x0000000000000000))
(assert (= temp40_26 #x0000000000000000))
(assert (= temp40_27 temp40_26))
(assert (= temp40_28 (select ARGNAME_padding_NAMEEND_VAL temp40_27)))
(assert (= temp40_29 #x0000000000000000))
(assert (= temp40_30 #x0000000000000001))
(assert (= temp40_31 temp40_30))
(assert (= temp40_32 (select ARGNAME_padding_NAMEEND_VAL temp40_31)))
(assert (= temp40_33 #x0000000000000000))
(assert (= temp40_34 #x0000000000000002))
(assert (= temp40_35 temp40_34))
(assert (= temp40_36 (select ARGNAME_padding_NAMEEND_VAL temp40_35)))
(assert (= temp40_37 #x0000000000000000))
(assert (= temp40_38 #x0000000000000003))
(assert (= temp40_39 temp40_38))
(assert (= temp40_40 (select ARGNAME_padding_NAMEEND_VAL temp40_39)))
(assert (= temp40_41 #x0000000000000000))
(assert (= temp40_42 #x0000000000000004))
(assert (= temp40_43 temp40_42))
(assert (= temp40_44 (select ARGNAME_padding_NAMEEND_VAL temp40_43)))
(assert (= temp40_45 #x0000000000000000))
(assert (= temp40_46 #x0000000000000005))
(assert (= temp40_47 temp40_46))
(assert (= temp40_48 (select ARGNAME_padding_NAMEEND_VAL temp40_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp40_28 temp40_25)
             (bvslt temp40_32 temp40_29)
             (bvslt temp40_36 temp40_33)
             (bvslt temp40_40 temp40_37)
             (bvslt temp40_44 temp40_41)
             (bvslt temp40_48 temp40_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp40_49 #x0000000000000000))
(assert (= var1191714 temp40_49))
(assert (= temp40_50 #x0000000000000000))
(assert (= temp40_51 temp40_50))
(assert (= temp40_52 (select ARGNAME_output_padding_NAMEEND_VAL temp40_51)))
(assert (= temp40_53 #x0000000000000001))
(assert (= temp40_54 temp40_53))
(assert (= temp40_55 (select ARGNAME_output_padding_NAMEEND_VAL temp40_54)))
(assert (= temp40_56 #x0000000000000002))
(assert (= temp40_57 temp40_56))
(assert (= temp40_58 (select ARGNAME_output_padding_NAMEEND_VAL temp40_57)))
(assert (= temp40_59 #x0000000000000003))
(assert (= temp40_60 temp40_59))
(assert (= temp40_61 (select ARGNAME_output_padding_NAMEEND_VAL temp40_60)))
(assert (= temp40_62 #x0000000000000004))
(assert (= temp40_63 temp40_62))
(assert (= temp40_64 (select ARGNAME_output_padding_NAMEEND_VAL temp40_63)))
(assert (= temp40_65 #x0000000000000005))
(assert (= temp40_66 temp40_65))
(assert (= temp40_67 (select ARGNAME_output_padding_NAMEEND_VAL temp40_66)))
(assert (= temp40_68 #x0000000000000000))
(assert (= temp40_69 #x0000000000000000))
(assert (= temp40_70 temp40_69))
(assert (= temp40_71 (select ARGNAME_output_padding_NAMEEND_VAL temp40_70)))
(assert (= temp40_72 #x0000000000000000))
(assert (= temp40_73 #x0000000000000001))
(assert (= temp40_74 temp40_73))
(assert (= temp40_75 (select ARGNAME_output_padding_NAMEEND_VAL temp40_74)))
(assert (= temp40_76 #x0000000000000000))
(assert (= temp40_77 #x0000000000000002))
(assert (= temp40_78 temp40_77))
(assert (= temp40_79 (select ARGNAME_output_padding_NAMEEND_VAL temp40_78)))
(assert (= temp40_80 #x0000000000000000))
(assert (= temp40_81 #x0000000000000003))
(assert (= temp40_82 temp40_81))
(assert (= temp40_83 (select ARGNAME_output_padding_NAMEEND_VAL temp40_82)))
(assert (= temp40_84 #x0000000000000000))
(assert (= temp40_85 #x0000000000000004))
(assert (= temp40_86 temp40_85))
(assert (= temp40_87 (select ARGNAME_output_padding_NAMEEND_VAL temp40_86)))
(assert (= temp40_88 #x0000000000000000))
(assert (= temp40_89 #x0000000000000005))
(assert (= temp40_90 temp40_89))
(assert (= temp40_91 (select ARGNAME_output_padding_NAMEEND_VAL temp40_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp40_71 temp40_68)
             (bvslt temp40_75 temp40_72)
             (bvslt temp40_79 temp40_76)
             (bvslt temp40_83 temp40_80)
             (bvslt temp40_87 temp40_84)
             (bvslt temp40_91 temp40_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp40_92 #x0000000000000000))
(assert (= var1191725 temp40_92))
(assert (= temp40_93 #x0000000000000000))
(assert (= temp40_94 temp40_93))
(assert (= temp40_95 (select ARGNAME_stride_NAMEEND_VAL temp40_94)))
(assert (= temp40_96 #x0000000000000001))
(assert (= temp40_97 temp40_96))
(assert (= temp40_98 (select ARGNAME_stride_NAMEEND_VAL temp40_97)))
(assert (= temp40_99 #x0000000000000002))
(assert (= temp40_100 temp40_99))
(assert (= temp40_101 (select ARGNAME_stride_NAMEEND_VAL temp40_100)))
(assert (= temp40_102 #x0000000000000003))
(assert (= temp40_103 temp40_102))
(assert (= temp40_104 (select ARGNAME_stride_NAMEEND_VAL temp40_103)))
(assert (= temp40_105 #x0000000000000004))
(assert (= temp40_106 temp40_105))
(assert (= temp40_107 (select ARGNAME_stride_NAMEEND_VAL temp40_106)))
(assert (= temp40_108 #x0000000000000005))
(assert (= temp40_109 temp40_108))
(assert (= temp40_110 (select ARGNAME_stride_NAMEEND_VAL temp40_109)))
(assert (= temp40_111 #x0000000000000000))
(assert (= temp40_112 #x0000000000000000))
(assert (= temp40_113 temp40_112))
(assert (= temp40_114 (select ARGNAME_stride_NAMEEND_VAL temp40_113)))
(assert (= temp40_115 #x0000000000000000))
(assert (= temp40_116 #x0000000000000001))
(assert (= temp40_117 temp40_116))
(assert (= temp40_118 (select ARGNAME_stride_NAMEEND_VAL temp40_117)))
(assert (= temp40_119 #x0000000000000000))
(assert (= temp40_120 #x0000000000000002))
(assert (= temp40_121 temp40_120))
(assert (= temp40_122 (select ARGNAME_stride_NAMEEND_VAL temp40_121)))
(assert (= temp40_123 #x0000000000000000))
(assert (= temp40_124 #x0000000000000003))
(assert (= temp40_125 temp40_124))
(assert (= temp40_126 (select ARGNAME_stride_NAMEEND_VAL temp40_125)))
(assert (= temp40_127 #x0000000000000000))
(assert (= temp40_128 #x0000000000000004))
(assert (= temp40_129 temp40_128))
(assert (= temp40_130 (select ARGNAME_stride_NAMEEND_VAL temp40_129)))
(assert (= temp40_131 #x0000000000000000))
(assert (= temp40_132 #x0000000000000005))
(assert (= temp40_133 temp40_132))
(assert (= temp40_134 (select ARGNAME_stride_NAMEEND_VAL temp40_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp40_114 temp40_111)
             (bvsle temp40_118 temp40_115)
             (bvsle temp40_122 temp40_119)
             (bvsle temp40_126 temp40_123)
             (bvsle temp40_130 temp40_127)
             (bvsle temp40_134 temp40_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp40_135 #x0000000000000000))
(assert (= var1191735 temp40_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp40_136 #x0000000000000001))
(assert (= var1191747 temp40_136))
(assert (= temp40_137 #x0000000000000000))
(assert (= var1179826 temp40_137))
(assert (= temp40_138 #x0000000000000000))
(assert (= temp40_139 temp40_138))
(assert (= temp40_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp40_139)))
(assert (= temp40_141 #x0000000000000001))
(assert (= temp40_142 temp40_141))
(assert (= temp40_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp40_142)))
(assert (= temp40_144 #x0000000000000002))
(assert (= temp40_145 temp40_144))
(assert (= temp40_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp40_145)))
(assert (= temp40_147 #x0000000000000003))
(assert (= temp40_148 temp40_147))
(assert (= temp40_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp40_148)))
(assert (= temp40_150 #x0000000000000004))
(assert (= temp40_151 temp40_150))
(assert (= temp40_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp40_151)))
(assert (= temp40_153 #x0000000000000005))
(assert (= temp40_154 temp40_153))
(assert (= temp40_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp40_154)))
(assert (= temp40_157 var1179826))
(assert (= temp40_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp40_157)))
(assert (= temp40_156 temp40_158))
(assert (= var1191780
   (ite (bvslt temp40_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp40_159 #x0000000000000000))
(assert (= var1191780 temp40_159))
(assert (= temp40_160 #x0000000000000000))
(assert (= var1179826 temp40_160))
(assert (= temp40_162 var1179826))
(assert (= temp40_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp40_162)))
(assert (= temp40_161 temp40_163))
(assert (= var1191802 (bvsmod temp40_161 ARGNAME_groups_NAMEEND)))
(assert (= temp40_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp40_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp40_165 #x0000000000000001))
(assert (= var1191803 temp40_165))
(assert (= temp40_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp40_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp40_167 #x0000000000000001))
(assert (= var1191823 temp40_167))
(assert (= temp40_168 #x0000000000000001))
(assert (= var1180714 temp40_168))
(assert (= temp40_169 #x0000000000000000))
(assert (= temp40_170 temp40_169))
(assert (= temp40_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp40_170)))
(assert (= temp40_172 #x0000000000000001))
(assert (= temp40_173 temp40_172))
(assert (= temp40_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp40_173)))
(assert (= temp40_175 #x0000000000000002))
(assert (= temp40_176 temp40_175))
(assert (= temp40_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp40_176)))
(assert (= temp40_178 #x0000000000000003))
(assert (= temp40_179 temp40_178))
(assert (= temp40_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp40_179)))
(assert (= temp40_181 #x0000000000000004))
(assert (= temp40_182 temp40_181))
(assert (= temp40_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp40_182)))
(assert (= temp40_184 #x0000000000000005))
(assert (= temp40_185 temp40_184))
(assert (= temp40_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp40_185)))
(assert (= temp40_187 #x0000000000000000))
(assert (= temp40_188
   (ite (bvslt var1180714 temp40_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp40_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp40_188)))
(assert (= var1191831 temp40_189))
(assert (bvslt (ite (bvslt var1180714 temp40_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp40_190 #x0000000000000001))
(assert (= var1180714 temp40_190))
(assert (= temp40_192 var1180714))
(assert (= temp40_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp40_192)))
(assert (= temp40_191 temp40_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp40_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp40_194 #x0000000000000001))
(assert (= var1191836 temp40_194))
(assert (= temp40_195 #x0000000000000000))
(assert (= var1179826 temp40_195))
(assert (= temp40_197 var1179826))
(assert (= temp40_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp40_197)))
(assert (= temp40_196 temp40_198))
(assert (= temp40_199 #x0000000000000002))
(assert (= var1586025 temp40_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp40_200 #x0000000000000001))
(assert (= var1191993 temp40_200))
(assert (= temp40_201 #x0000000000000001))
(assert (= var2700303 temp40_201))
(assert (= temp40_202 #x0000000000000001))
(assert (= var2962447 temp40_202))
(assert (= temp40_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp40_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp40_204 #x0000000000000001))
(assert (= var211058 temp40_204))
(assert (= temp40_205 #x0000000000000001))
(assert (= var211188 temp40_205))
(assert (= var3879401 var211188))
(assert (= temp40_206 #x0000000000000000))
(assert (= var3866802 temp40_206))
(assert (= temp40_207 #x0000000000000000))
(assert (= temp40_208
   (ite (bvslt var3866802 temp40_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp40_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp40_208)))
(assert (= var3879420 temp40_209))
(assert (bvslt (ite (bvslt var3866802 temp40_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp40_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp40_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp40_211 #x0000000000000001))
(assert (= var3879421 temp40_211))
(assert (= temp40_212 #x0000000000000000))
(assert (= var4079423 temp40_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp40_213 #x0000000000000002))
(assert (= var4208259 temp40_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp40_214 #x0000000000000000))
(assert (= var4273820 temp40_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4796816 var211201))
(assert (= var211388 var210913))
(assert (= temp40_215 #x0000000000000000))
(assert (= var211389
   (ite (distinct var211388 temp40_215) #x0000000000000001 #x0000000000000000)))
(assert (= var5717837 var211389))
(assert (= temp40_216 #x0000000000000001))
(assert (= var211058 temp40_216))
(model-add temp40_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp40_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp40_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp40_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))



