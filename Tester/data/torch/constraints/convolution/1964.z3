(declare-fun temp11477_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp11477_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp11477_3 () (_ BitVec 64))
(declare-fun temp11477_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp11477_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp11477_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp11477_7 () (_ BitVec 64))
(declare-fun temp11477_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11477_9 () (_ BitVec 64))
(declare-fun temp11477_10 () (_ BitVec 64))
(declare-fun temp11477_11 () (_ BitVec 64))
(declare-fun temp11477_12 () (_ BitVec 64))
(declare-fun temp11477_13 () (_ BitVec 64))
(declare-fun temp11477_14 () (_ BitVec 64))
(declare-fun temp11477_15 () (_ BitVec 64))
(declare-fun temp11477_16 () (_ BitVec 64))
(declare-fun temp11477_17 () (_ BitVec 64))
(declare-fun temp11477_18 () (_ BitVec 64))
(declare-fun temp11477_19 () (_ BitVec 64))
(declare-fun temp11477_20 () (_ BitVec 64))
(declare-fun temp11477_21 () (_ BitVec 64))
(declare-fun temp11477_22 () (_ BitVec 64))
(declare-fun temp11477_23 () (_ BitVec 64))
(declare-fun temp11477_24 () (_ BitVec 64))
(declare-fun temp11477_25 () (_ BitVec 64))
(declare-fun temp11477_26 () (_ BitVec 64))
(declare-fun temp11477_27 () (_ BitVec 64))
(declare-fun temp11477_28 () (_ BitVec 64))
(declare-fun temp11477_29 () (_ BitVec 64))
(declare-fun temp11477_30 () (_ BitVec 64))
(declare-fun temp11477_31 () (_ BitVec 64))
(declare-fun temp11477_32 () (_ BitVec 64))
(declare-fun temp11477_33 () (_ BitVec 64))
(declare-fun temp11477_34 () (_ BitVec 64))
(declare-fun temp11477_35 () (_ BitVec 64))
(declare-fun temp11477_36 () (_ BitVec 64))
(declare-fun temp11477_37 () (_ BitVec 64))
(declare-fun temp11477_38 () (_ BitVec 64))
(declare-fun temp11477_39 () (_ BitVec 64))
(declare-fun temp11477_40 () (_ BitVec 64))
(declare-fun temp11477_41 () (_ BitVec 64))
(declare-fun temp11477_42 () (_ BitVec 64))
(declare-fun temp11477_43 () (_ BitVec 64))
(declare-fun temp11477_44 () (_ BitVec 64))
(declare-fun temp11477_45 () (_ BitVec 64))
(declare-fun temp11477_46 () (_ BitVec 64))
(declare-fun temp11477_47 () (_ BitVec 64))
(declare-fun temp11477_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp11477_49 () (_ BitVec 64))
(declare-fun temp11477_50 () (_ BitVec 64))
(declare-fun temp11477_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11477_52 () (_ BitVec 64))
(declare-fun temp11477_53 () (_ BitVec 64))
(declare-fun temp11477_54 () (_ BitVec 64))
(declare-fun temp11477_55 () (_ BitVec 64))
(declare-fun temp11477_56 () (_ BitVec 64))
(declare-fun temp11477_57 () (_ BitVec 64))
(declare-fun temp11477_58 () (_ BitVec 64))
(declare-fun temp11477_59 () (_ BitVec 64))
(declare-fun temp11477_60 () (_ BitVec 64))
(declare-fun temp11477_61 () (_ BitVec 64))
(declare-fun temp11477_62 () (_ BitVec 64))
(declare-fun temp11477_63 () (_ BitVec 64))
(declare-fun temp11477_64 () (_ BitVec 64))
(declare-fun temp11477_65 () (_ BitVec 64))
(declare-fun temp11477_66 () (_ BitVec 64))
(declare-fun temp11477_67 () (_ BitVec 64))
(declare-fun temp11477_68 () (_ BitVec 64))
(declare-fun temp11477_69 () (_ BitVec 64))
(declare-fun temp11477_70 () (_ BitVec 64))
(declare-fun temp11477_71 () (_ BitVec 64))
(declare-fun temp11477_72 () (_ BitVec 64))
(declare-fun temp11477_73 () (_ BitVec 64))
(declare-fun temp11477_74 () (_ BitVec 64))
(declare-fun temp11477_75 () (_ BitVec 64))
(declare-fun temp11477_76 () (_ BitVec 64))
(declare-fun temp11477_77 () (_ BitVec 64))
(declare-fun temp11477_78 () (_ BitVec 64))
(declare-fun temp11477_79 () (_ BitVec 64))
(declare-fun temp11477_80 () (_ BitVec 64))
(declare-fun temp11477_81 () (_ BitVec 64))
(declare-fun temp11477_82 () (_ BitVec 64))
(declare-fun temp11477_83 () (_ BitVec 64))
(declare-fun temp11477_84 () (_ BitVec 64))
(declare-fun temp11477_85 () (_ BitVec 64))
(declare-fun temp11477_86 () (_ BitVec 64))
(declare-fun temp11477_87 () (_ BitVec 64))
(declare-fun temp11477_88 () (_ BitVec 64))
(declare-fun temp11477_89 () (_ BitVec 64))
(declare-fun temp11477_90 () (_ BitVec 64))
(declare-fun temp11477_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp11477_92 () (_ BitVec 64))
(declare-fun temp11477_93 () (_ BitVec 64))
(declare-fun temp11477_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11477_95 () (_ BitVec 64))
(declare-fun temp11477_96 () (_ BitVec 64))
(declare-fun temp11477_97 () (_ BitVec 64))
(declare-fun temp11477_98 () (_ BitVec 64))
(declare-fun temp11477_99 () (_ BitVec 64))
(declare-fun temp11477_100 () (_ BitVec 64))
(declare-fun temp11477_101 () (_ BitVec 64))
(declare-fun temp11477_102 () (_ BitVec 64))
(declare-fun temp11477_103 () (_ BitVec 64))
(declare-fun temp11477_104 () (_ BitVec 64))
(declare-fun temp11477_105 () (_ BitVec 64))
(declare-fun temp11477_106 () (_ BitVec 64))
(declare-fun temp11477_107 () (_ BitVec 64))
(declare-fun temp11477_108 () (_ BitVec 64))
(declare-fun temp11477_109 () (_ BitVec 64))
(declare-fun temp11477_110 () (_ BitVec 64))
(declare-fun temp11477_111 () (_ BitVec 64))
(declare-fun temp11477_112 () (_ BitVec 64))
(declare-fun temp11477_113 () (_ BitVec 64))
(declare-fun temp11477_114 () (_ BitVec 64))
(declare-fun temp11477_115 () (_ BitVec 64))
(declare-fun temp11477_116 () (_ BitVec 64))
(declare-fun temp11477_117 () (_ BitVec 64))
(declare-fun temp11477_118 () (_ BitVec 64))
(declare-fun temp11477_119 () (_ BitVec 64))
(declare-fun temp11477_120 () (_ BitVec 64))
(declare-fun temp11477_121 () (_ BitVec 64))
(declare-fun temp11477_122 () (_ BitVec 64))
(declare-fun temp11477_123 () (_ BitVec 64))
(declare-fun temp11477_124 () (_ BitVec 64))
(declare-fun temp11477_125 () (_ BitVec 64))
(declare-fun temp11477_126 () (_ BitVec 64))
(declare-fun temp11477_127 () (_ BitVec 64))
(declare-fun temp11477_128 () (_ BitVec 64))
(declare-fun temp11477_129 () (_ BitVec 64))
(declare-fun temp11477_130 () (_ BitVec 64))
(declare-fun temp11477_131 () (_ BitVec 64))
(declare-fun temp11477_132 () (_ BitVec 64))
(declare-fun temp11477_133 () (_ BitVec 64))
(declare-fun temp11477_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp11477_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp11477_136 () (_ BitVec 64))
(declare-fun temp11477_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp11477_138 () (_ BitVec 64))
(declare-fun temp11477_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11477_140 () (_ BitVec 64))
(declare-fun temp11477_141 () (_ BitVec 64))
(declare-fun temp11477_142 () (_ BitVec 64))
(declare-fun temp11477_143 () (_ BitVec 64))
(declare-fun temp11477_144 () (_ BitVec 64))
(declare-fun temp11477_145 () (_ BitVec 64))
(declare-fun temp11477_146 () (_ BitVec 64))
(declare-fun temp11477_147 () (_ BitVec 64))
(declare-fun temp11477_148 () (_ BitVec 64))
(declare-fun temp11477_149 () (_ BitVec 64))
(declare-fun temp11477_150 () (_ BitVec 64))
(declare-fun temp11477_151 () (_ BitVec 64))
(declare-fun temp11477_152 () (_ BitVec 64))
(declare-fun temp11477_153 () (_ BitVec 64))
(declare-fun temp11477_154 () (_ BitVec 64))
(declare-fun temp11477_155 () (_ BitVec 64))
(declare-fun temp11477_157 () (_ BitVec 64))
(declare-fun temp11477_158 () (_ BitVec 64))
(declare-fun temp11477_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp11477_159 () (_ BitVec 64))
(declare-fun temp11477_160 () (_ BitVec 64))
(declare-fun temp11477_162 () (_ BitVec 64))
(declare-fun temp11477_163 () (_ BitVec 64))
(declare-fun temp11477_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp11477_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp11477_165 () (_ BitVec 64))
(declare-fun temp11477_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp11477_167 () (_ BitVec 64))
(declare-fun temp11477_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp11477_169 () (_ BitVec 64))
(declare-fun temp11477_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11477_171 () (_ BitVec 64))
(declare-fun temp11477_172 () (_ BitVec 64))
(declare-fun temp11477_173 () (_ BitVec 64))
(declare-fun temp11477_174 () (_ BitVec 64))
(declare-fun temp11477_175 () (_ BitVec 64))
(declare-fun temp11477_176 () (_ BitVec 64))
(declare-fun temp11477_177 () (_ BitVec 64))
(declare-fun temp11477_178 () (_ BitVec 64))
(declare-fun temp11477_179 () (_ BitVec 64))
(declare-fun temp11477_180 () (_ BitVec 64))
(declare-fun temp11477_181 () (_ BitVec 64))
(declare-fun temp11477_182 () (_ BitVec 64))
(declare-fun temp11477_183 () (_ BitVec 64))
(declare-fun temp11477_184 () (_ BitVec 64))
(declare-fun temp11477_185 () (_ BitVec 64))
(declare-fun temp11477_186 () (_ BitVec 64))
(declare-fun temp11477_187 () (_ BitVec 64))
(declare-fun temp11477_188 () (_ BitVec 64))
(declare-fun temp11477_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp11477_190 () (_ BitVec 64))
(declare-fun temp11477_192 () (_ BitVec 64))
(declare-fun temp11477_193 () (_ BitVec 64))
(declare-fun temp11477_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp11477_194 () (_ BitVec 64))
(declare-fun temp11477_195 () (_ BitVec 64))
(declare-fun temp11477_197 () (_ BitVec 64))
(declare-fun temp11477_198 () (_ BitVec 64))
(declare-fun temp11477_196 () (_ BitVec 64))
(declare-fun temp11477_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp11477_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp11477_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp11477_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp11477_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp11477_204 () (_ BitVec 64))
(declare-fun temp11477_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp11477_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp11477_207 () (_ BitVec 64))
(declare-fun temp11477_208 () (_ BitVec 64))
(declare-fun temp11477_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp11477_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp11477_211 () (_ BitVec 64))
(declare-fun temp11477_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp11477_213 () (_ BitVec 64))
(declare-fun temp11477_214 () (_ BitVec 64))
(declare-fun temp11477_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp11477_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp11477_217 () (_ BitVec 64))
(declare-fun temp11477_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp11477_219 () (_ BitVec 64))
(declare-fun var4404867 () (_ BitVec 64))
(declare-fun var4404869 () (_ BitVec 64))
(declare-fun var4470412 () (_ BitVec 64))
(declare-fun var4470413 () (_ BitVec 64))
(declare-fun var4470426 () (_ BitVec 64))
(declare-fun var4470428 () (_ BitVec 64))
(declare-fun temp11477_220 () (_ BitVec 64))
(declare-fun var4470453 () (_ BitVec 64))
(declare-fun var4470455 () (_ BitVec 64))
(declare-fun var4591443 () (_ BitVec 64))
(declare-fun temp11477_221 () (_ BitVec 64))
(assert (= temp11477_1 #x0000000000000001))
(assert (= var77203 temp11477_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp11477_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp11477_2)))
(assert (= temp11477_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp11477_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11477_4 #x0000000000000000))
(assert (= var210941 temp11477_4))
(assert (= temp11477_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp11477_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11477_6 #x0000000000000000))
(assert (= var210986 temp11477_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp11477_7 #x0000000000000000))
(assert (= temp11477_8 temp11477_7))
(assert (= temp11477_9 (select ARGNAME_padding_NAMEEND_VAL temp11477_8)))
(assert (= temp11477_10 #x0000000000000001))
(assert (= temp11477_11 temp11477_10))
(assert (= temp11477_12 (select ARGNAME_padding_NAMEEND_VAL temp11477_11)))
(assert (= temp11477_13 #x0000000000000002))
(assert (= temp11477_14 temp11477_13))
(assert (= temp11477_15 (select ARGNAME_padding_NAMEEND_VAL temp11477_14)))
(assert (= temp11477_16 #x0000000000000003))
(assert (= temp11477_17 temp11477_16))
(assert (= temp11477_18 (select ARGNAME_padding_NAMEEND_VAL temp11477_17)))
(assert (= temp11477_19 #x0000000000000004))
(assert (= temp11477_20 temp11477_19))
(assert (= temp11477_21 (select ARGNAME_padding_NAMEEND_VAL temp11477_20)))
(assert (= temp11477_22 #x0000000000000005))
(assert (= temp11477_23 temp11477_22))
(assert (= temp11477_24 (select ARGNAME_padding_NAMEEND_VAL temp11477_23)))
(assert (= temp11477_25 #x0000000000000000))
(assert (= temp11477_26 #x0000000000000000))
(assert (= temp11477_27 temp11477_26))
(assert (= temp11477_28 (select ARGNAME_padding_NAMEEND_VAL temp11477_27)))
(assert (= temp11477_29 #x0000000000000000))
(assert (= temp11477_30 #x0000000000000001))
(assert (= temp11477_31 temp11477_30))
(assert (= temp11477_32 (select ARGNAME_padding_NAMEEND_VAL temp11477_31)))
(assert (= temp11477_33 #x0000000000000000))
(assert (= temp11477_34 #x0000000000000002))
(assert (= temp11477_35 temp11477_34))
(assert (= temp11477_36 (select ARGNAME_padding_NAMEEND_VAL temp11477_35)))
(assert (= temp11477_37 #x0000000000000000))
(assert (= temp11477_38 #x0000000000000003))
(assert (= temp11477_39 temp11477_38))
(assert (= temp11477_40 (select ARGNAME_padding_NAMEEND_VAL temp11477_39)))
(assert (= temp11477_41 #x0000000000000000))
(assert (= temp11477_42 #x0000000000000004))
(assert (= temp11477_43 temp11477_42))
(assert (= temp11477_44 (select ARGNAME_padding_NAMEEND_VAL temp11477_43)))
(assert (= temp11477_45 #x0000000000000000))
(assert (= temp11477_46 #x0000000000000005))
(assert (= temp11477_47 temp11477_46))
(assert (= temp11477_48 (select ARGNAME_padding_NAMEEND_VAL temp11477_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp11477_28 temp11477_25)
             (bvslt temp11477_32 temp11477_29)
             (bvslt temp11477_36 temp11477_33)
             (bvslt temp11477_40 temp11477_37)
             (bvslt temp11477_44 temp11477_41)
             (bvslt temp11477_48 temp11477_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11477_49 #x0000000000000000))
(assert (= var1191714 temp11477_49))
(assert (= temp11477_50 #x0000000000000000))
(assert (= temp11477_51 temp11477_50))
(assert (= temp11477_52 (select ARGNAME_output_padding_NAMEEND_VAL temp11477_51)))
(assert (= temp11477_53 #x0000000000000001))
(assert (= temp11477_54 temp11477_53))
(assert (= temp11477_55 (select ARGNAME_output_padding_NAMEEND_VAL temp11477_54)))
(assert (= temp11477_56 #x0000000000000002))
(assert (= temp11477_57 temp11477_56))
(assert (= temp11477_58 (select ARGNAME_output_padding_NAMEEND_VAL temp11477_57)))
(assert (= temp11477_59 #x0000000000000003))
(assert (= temp11477_60 temp11477_59))
(assert (= temp11477_61 (select ARGNAME_output_padding_NAMEEND_VAL temp11477_60)))
(assert (= temp11477_62 #x0000000000000004))
(assert (= temp11477_63 temp11477_62))
(assert (= temp11477_64 (select ARGNAME_output_padding_NAMEEND_VAL temp11477_63)))
(assert (= temp11477_65 #x0000000000000005))
(assert (= temp11477_66 temp11477_65))
(assert (= temp11477_67 (select ARGNAME_output_padding_NAMEEND_VAL temp11477_66)))
(assert (= temp11477_68 #x0000000000000000))
(assert (= temp11477_69 #x0000000000000000))
(assert (= temp11477_70 temp11477_69))
(assert (= temp11477_71 (select ARGNAME_output_padding_NAMEEND_VAL temp11477_70)))
(assert (= temp11477_72 #x0000000000000000))
(assert (= temp11477_73 #x0000000000000001))
(assert (= temp11477_74 temp11477_73))
(assert (= temp11477_75 (select ARGNAME_output_padding_NAMEEND_VAL temp11477_74)))
(assert (= temp11477_76 #x0000000000000000))
(assert (= temp11477_77 #x0000000000000002))
(assert (= temp11477_78 temp11477_77))
(assert (= temp11477_79 (select ARGNAME_output_padding_NAMEEND_VAL temp11477_78)))
(assert (= temp11477_80 #x0000000000000000))
(assert (= temp11477_81 #x0000000000000003))
(assert (= temp11477_82 temp11477_81))
(assert (= temp11477_83 (select ARGNAME_output_padding_NAMEEND_VAL temp11477_82)))
(assert (= temp11477_84 #x0000000000000000))
(assert (= temp11477_85 #x0000000000000004))
(assert (= temp11477_86 temp11477_85))
(assert (= temp11477_87 (select ARGNAME_output_padding_NAMEEND_VAL temp11477_86)))
(assert (= temp11477_88 #x0000000000000000))
(assert (= temp11477_89 #x0000000000000005))
(assert (= temp11477_90 temp11477_89))
(assert (= temp11477_91 (select ARGNAME_output_padding_NAMEEND_VAL temp11477_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp11477_71 temp11477_68)
             (bvslt temp11477_75 temp11477_72)
             (bvslt temp11477_79 temp11477_76)
             (bvslt temp11477_83 temp11477_80)
             (bvslt temp11477_87 temp11477_84)
             (bvslt temp11477_91 temp11477_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11477_92 #x0000000000000000))
(assert (= var1191725 temp11477_92))
(assert (= temp11477_93 #x0000000000000000))
(assert (= temp11477_94 temp11477_93))
(assert (= temp11477_95 (select ARGNAME_stride_NAMEEND_VAL temp11477_94)))
(assert (= temp11477_96 #x0000000000000001))
(assert (= temp11477_97 temp11477_96))
(assert (= temp11477_98 (select ARGNAME_stride_NAMEEND_VAL temp11477_97)))
(assert (= temp11477_99 #x0000000000000002))
(assert (= temp11477_100 temp11477_99))
(assert (= temp11477_101 (select ARGNAME_stride_NAMEEND_VAL temp11477_100)))
(assert (= temp11477_102 #x0000000000000003))
(assert (= temp11477_103 temp11477_102))
(assert (= temp11477_104 (select ARGNAME_stride_NAMEEND_VAL temp11477_103)))
(assert (= temp11477_105 #x0000000000000004))
(assert (= temp11477_106 temp11477_105))
(assert (= temp11477_107 (select ARGNAME_stride_NAMEEND_VAL temp11477_106)))
(assert (= temp11477_108 #x0000000000000005))
(assert (= temp11477_109 temp11477_108))
(assert (= temp11477_110 (select ARGNAME_stride_NAMEEND_VAL temp11477_109)))
(assert (= temp11477_111 #x0000000000000000))
(assert (= temp11477_112 #x0000000000000000))
(assert (= temp11477_113 temp11477_112))
(assert (= temp11477_114 (select ARGNAME_stride_NAMEEND_VAL temp11477_113)))
(assert (= temp11477_115 #x0000000000000000))
(assert (= temp11477_116 #x0000000000000001))
(assert (= temp11477_117 temp11477_116))
(assert (= temp11477_118 (select ARGNAME_stride_NAMEEND_VAL temp11477_117)))
(assert (= temp11477_119 #x0000000000000000))
(assert (= temp11477_120 #x0000000000000002))
(assert (= temp11477_121 temp11477_120))
(assert (= temp11477_122 (select ARGNAME_stride_NAMEEND_VAL temp11477_121)))
(assert (= temp11477_123 #x0000000000000000))
(assert (= temp11477_124 #x0000000000000003))
(assert (= temp11477_125 temp11477_124))
(assert (= temp11477_126 (select ARGNAME_stride_NAMEEND_VAL temp11477_125)))
(assert (= temp11477_127 #x0000000000000000))
(assert (= temp11477_128 #x0000000000000004))
(assert (= temp11477_129 temp11477_128))
(assert (= temp11477_130 (select ARGNAME_stride_NAMEEND_VAL temp11477_129)))
(assert (= temp11477_131 #x0000000000000000))
(assert (= temp11477_132 #x0000000000000005))
(assert (= temp11477_133 temp11477_132))
(assert (= temp11477_134 (select ARGNAME_stride_NAMEEND_VAL temp11477_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp11477_114 temp11477_111)
             (bvsle temp11477_118 temp11477_115)
             (bvsle temp11477_122 temp11477_119)
             (bvsle temp11477_126 temp11477_123)
             (bvsle temp11477_130 temp11477_127)
             (bvsle temp11477_134 temp11477_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11477_135 #x0000000000000000))
(assert (= var1191735 temp11477_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11477_136 #x0000000000000001))
(assert (= var1191747 temp11477_136))
(assert (= temp11477_137 #x0000000000000000))
(assert (= var1179826 temp11477_137))
(assert (= temp11477_138 #x0000000000000000))
(assert (= temp11477_139 temp11477_138))
(assert (= temp11477_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11477_139)))
(assert (= temp11477_141 #x0000000000000001))
(assert (= temp11477_142 temp11477_141))
(assert (= temp11477_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11477_142)))
(assert (= temp11477_144 #x0000000000000002))
(assert (= temp11477_145 temp11477_144))
(assert (= temp11477_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11477_145)))
(assert (= temp11477_147 #x0000000000000003))
(assert (= temp11477_148 temp11477_147))
(assert (= temp11477_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11477_148)))
(assert (= temp11477_150 #x0000000000000004))
(assert (= temp11477_151 temp11477_150))
(assert (= temp11477_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11477_151)))
(assert (= temp11477_153 #x0000000000000005))
(assert (= temp11477_154 temp11477_153))
(assert (= temp11477_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11477_154)))
(assert (= temp11477_157 var1179826))
(assert (= temp11477_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11477_157)))
(assert (= temp11477_156 temp11477_158))
(assert (= var1191780
   (ite (bvslt temp11477_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11477_159 #x0000000000000000))
(assert (= var1191780 temp11477_159))
(assert (= temp11477_160 #x0000000000000000))
(assert (= var1179826 temp11477_160))
(assert (= temp11477_162 var1179826))
(assert (= temp11477_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11477_162)))
(assert (= temp11477_161 temp11477_163))
(assert (= var1191802 (bvsmod temp11477_161 ARGNAME_groups_NAMEEND)))
(assert (= temp11477_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp11477_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp11477_165 #x0000000000000001))
(assert (= var1191803 temp11477_165))
(assert (= temp11477_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp11477_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11477_167 #x0000000000000001))
(assert (= var1191823 temp11477_167))
(assert (= temp11477_168 #x0000000000000001))
(assert (= var1180714 temp11477_168))
(assert (= temp11477_169 #x0000000000000000))
(assert (= temp11477_170 temp11477_169))
(assert (= temp11477_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp11477_170)))
(assert (= temp11477_172 #x0000000000000001))
(assert (= temp11477_173 temp11477_172))
(assert (= temp11477_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp11477_173)))
(assert (= temp11477_175 #x0000000000000002))
(assert (= temp11477_176 temp11477_175))
(assert (= temp11477_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp11477_176)))
(assert (= temp11477_178 #x0000000000000003))
(assert (= temp11477_179 temp11477_178))
(assert (= temp11477_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp11477_179)))
(assert (= temp11477_181 #x0000000000000004))
(assert (= temp11477_182 temp11477_181))
(assert (= temp11477_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp11477_182)))
(assert (= temp11477_184 #x0000000000000005))
(assert (= temp11477_185 temp11477_184))
(assert (= temp11477_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp11477_185)))
(assert (= temp11477_187 #x0000000000000000))
(assert (= temp11477_188
   (ite (bvslt var1180714 temp11477_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp11477_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp11477_188)))
(assert (= var1191831 temp11477_189))
(assert (bvslt (ite (bvslt var1180714 temp11477_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11477_190 #x0000000000000001))
(assert (= var1180714 temp11477_190))
(assert (= temp11477_192 var1180714))
(assert (= temp11477_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11477_192)))
(assert (= temp11477_191 temp11477_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp11477_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp11477_194 #x0000000000000001))
(assert (= var1191836 temp11477_194))
(assert (= temp11477_195 #x0000000000000000))
(assert (= var1179826 temp11477_195))
(assert (= temp11477_197 var1179826))
(assert (= temp11477_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11477_197)))
(assert (= temp11477_196 temp11477_198))
(assert (= temp11477_199 #x0000000000000002))
(assert (= var1586025 temp11477_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp11477_200 #x0000000000000001))
(assert (= var1191993 temp11477_200))
(assert (= temp11477_201 #x0000000000000001))
(assert (= var2700303 temp11477_201))
(assert (= temp11477_202 #x0000000000000001))
(assert (= var2962447 temp11477_202))
(assert (= temp11477_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp11477_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11477_204 #x0000000000000001))
(assert (= var211058 temp11477_204))
(assert (= temp11477_205 #x0000000000000001))
(assert (= var211188 temp11477_205))
(assert (= var3879401 var211188))
(assert (= temp11477_206 #x0000000000000000))
(assert (= var3866802 temp11477_206))
(assert (= temp11477_207 #x0000000000000000))
(assert (= temp11477_208
   (ite (bvslt var3866802 temp11477_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp11477_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp11477_208)))
(assert (= var3879420 temp11477_209))
(assert (bvslt (ite (bvslt var3866802 temp11477_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11477_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp11477_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp11477_211 #x0000000000000000))
(assert (= var3879421 temp11477_211))
(assert (= temp11477_212 #x0000000000000001))
(assert (= var3867690 temp11477_212))
(assert (= temp11477_213 #x0000000000000000))
(assert (= temp11477_214
   (ite (bvslt var3867690 temp11477_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp11477_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp11477_214)))
(assert (= var3879423 temp11477_215))
(assert (bvslt (ite (bvslt var3867690 temp11477_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11477_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp11477_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp11477_217 #x0000000000000001))
(assert (= var3879424 temp11477_217))
(assert (= temp11477_218 #x0000000000000000))
(assert (= var4133117 temp11477_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp11477_219 #x0000000000000002))
(assert (= var4404867 temp11477_219))
(assert (= var4404869 (bvsub ARGNAME_weight_NAMEEND_DIM var4404867)))
(assert (= var4470412 var4404867))
(assert (= var4470413 var4404869))
(assert (= var4470426 (bvadd var4470413 var4470412)))
(assert (= var4470428
   (ite (bvsgt var4470426 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11477_220 #x0000000000000000))
(assert (= var4470428 temp11477_220))
(assert (= var4470453 var4470412))
(assert (= var4470455 var4470413))
(assert (= var4591443 var4470455))
(assert (= temp11477_221 #x0000000000000001))
(assert (= var211058 temp11477_221))
(model-add temp11477_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp11477_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp11477_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp11477_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





