(declare-fun temp10924_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10924_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10924_3 () (_ BitVec 64))
(declare-fun temp10924_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10924_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10924_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10924_7 () (_ BitVec 64))
(declare-fun temp10924_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10924_9 () (_ BitVec 64))
(declare-fun temp10924_10 () (_ BitVec 64))
(declare-fun temp10924_11 () (_ BitVec 64))
(declare-fun temp10924_12 () (_ BitVec 64))
(declare-fun temp10924_13 () (_ BitVec 64))
(declare-fun temp10924_14 () (_ BitVec 64))
(declare-fun temp10924_15 () (_ BitVec 64))
(declare-fun temp10924_16 () (_ BitVec 64))
(declare-fun temp10924_17 () (_ BitVec 64))
(declare-fun temp10924_18 () (_ BitVec 64))
(declare-fun temp10924_19 () (_ BitVec 64))
(declare-fun temp10924_20 () (_ BitVec 64))
(declare-fun temp10924_21 () (_ BitVec 64))
(declare-fun temp10924_22 () (_ BitVec 64))
(declare-fun temp10924_23 () (_ BitVec 64))
(declare-fun temp10924_24 () (_ BitVec 64))
(declare-fun temp10924_25 () (_ BitVec 64))
(declare-fun temp10924_26 () (_ BitVec 64))
(declare-fun temp10924_27 () (_ BitVec 64))
(declare-fun temp10924_28 () (_ BitVec 64))
(declare-fun temp10924_29 () (_ BitVec 64))
(declare-fun temp10924_30 () (_ BitVec 64))
(declare-fun temp10924_31 () (_ BitVec 64))
(declare-fun temp10924_32 () (_ BitVec 64))
(declare-fun temp10924_33 () (_ BitVec 64))
(declare-fun temp10924_34 () (_ BitVec 64))
(declare-fun temp10924_35 () (_ BitVec 64))
(declare-fun temp10924_36 () (_ BitVec 64))
(declare-fun temp10924_37 () (_ BitVec 64))
(declare-fun temp10924_38 () (_ BitVec 64))
(declare-fun temp10924_39 () (_ BitVec 64))
(declare-fun temp10924_40 () (_ BitVec 64))
(declare-fun temp10924_41 () (_ BitVec 64))
(declare-fun temp10924_42 () (_ BitVec 64))
(declare-fun temp10924_43 () (_ BitVec 64))
(declare-fun temp10924_44 () (_ BitVec 64))
(declare-fun temp10924_45 () (_ BitVec 64))
(declare-fun temp10924_46 () (_ BitVec 64))
(declare-fun temp10924_47 () (_ BitVec 64))
(declare-fun temp10924_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10924_49 () (_ BitVec 64))
(declare-fun temp10924_50 () (_ BitVec 64))
(declare-fun temp10924_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10924_52 () (_ BitVec 64))
(declare-fun temp10924_53 () (_ BitVec 64))
(declare-fun temp10924_54 () (_ BitVec 64))
(declare-fun temp10924_55 () (_ BitVec 64))
(declare-fun temp10924_56 () (_ BitVec 64))
(declare-fun temp10924_57 () (_ BitVec 64))
(declare-fun temp10924_58 () (_ BitVec 64))
(declare-fun temp10924_59 () (_ BitVec 64))
(declare-fun temp10924_60 () (_ BitVec 64))
(declare-fun temp10924_61 () (_ BitVec 64))
(declare-fun temp10924_62 () (_ BitVec 64))
(declare-fun temp10924_63 () (_ BitVec 64))
(declare-fun temp10924_64 () (_ BitVec 64))
(declare-fun temp10924_65 () (_ BitVec 64))
(declare-fun temp10924_66 () (_ BitVec 64))
(declare-fun temp10924_67 () (_ BitVec 64))
(declare-fun temp10924_68 () (_ BitVec 64))
(declare-fun temp10924_69 () (_ BitVec 64))
(declare-fun temp10924_70 () (_ BitVec 64))
(declare-fun temp10924_71 () (_ BitVec 64))
(declare-fun temp10924_72 () (_ BitVec 64))
(declare-fun temp10924_73 () (_ BitVec 64))
(declare-fun temp10924_74 () (_ BitVec 64))
(declare-fun temp10924_75 () (_ BitVec 64))
(declare-fun temp10924_76 () (_ BitVec 64))
(declare-fun temp10924_77 () (_ BitVec 64))
(declare-fun temp10924_78 () (_ BitVec 64))
(declare-fun temp10924_79 () (_ BitVec 64))
(declare-fun temp10924_80 () (_ BitVec 64))
(declare-fun temp10924_81 () (_ BitVec 64))
(declare-fun temp10924_82 () (_ BitVec 64))
(declare-fun temp10924_83 () (_ BitVec 64))
(declare-fun temp10924_84 () (_ BitVec 64))
(declare-fun temp10924_85 () (_ BitVec 64))
(declare-fun temp10924_86 () (_ BitVec 64))
(declare-fun temp10924_87 () (_ BitVec 64))
(declare-fun temp10924_88 () (_ BitVec 64))
(declare-fun temp10924_89 () (_ BitVec 64))
(declare-fun temp10924_90 () (_ BitVec 64))
(declare-fun temp10924_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10924_92 () (_ BitVec 64))
(declare-fun temp10924_93 () (_ BitVec 64))
(declare-fun temp10924_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10924_95 () (_ BitVec 64))
(declare-fun temp10924_96 () (_ BitVec 64))
(declare-fun temp10924_97 () (_ BitVec 64))
(declare-fun temp10924_98 () (_ BitVec 64))
(declare-fun temp10924_99 () (_ BitVec 64))
(declare-fun temp10924_100 () (_ BitVec 64))
(declare-fun temp10924_101 () (_ BitVec 64))
(declare-fun temp10924_102 () (_ BitVec 64))
(declare-fun temp10924_103 () (_ BitVec 64))
(declare-fun temp10924_104 () (_ BitVec 64))
(declare-fun temp10924_105 () (_ BitVec 64))
(declare-fun temp10924_106 () (_ BitVec 64))
(declare-fun temp10924_107 () (_ BitVec 64))
(declare-fun temp10924_108 () (_ BitVec 64))
(declare-fun temp10924_109 () (_ BitVec 64))
(declare-fun temp10924_110 () (_ BitVec 64))
(declare-fun temp10924_111 () (_ BitVec 64))
(declare-fun temp10924_112 () (_ BitVec 64))
(declare-fun temp10924_113 () (_ BitVec 64))
(declare-fun temp10924_114 () (_ BitVec 64))
(declare-fun temp10924_115 () (_ BitVec 64))
(declare-fun temp10924_116 () (_ BitVec 64))
(declare-fun temp10924_117 () (_ BitVec 64))
(declare-fun temp10924_118 () (_ BitVec 64))
(declare-fun temp10924_119 () (_ BitVec 64))
(declare-fun temp10924_120 () (_ BitVec 64))
(declare-fun temp10924_121 () (_ BitVec 64))
(declare-fun temp10924_122 () (_ BitVec 64))
(declare-fun temp10924_123 () (_ BitVec 64))
(declare-fun temp10924_124 () (_ BitVec 64))
(declare-fun temp10924_125 () (_ BitVec 64))
(declare-fun temp10924_126 () (_ BitVec 64))
(declare-fun temp10924_127 () (_ BitVec 64))
(declare-fun temp10924_128 () (_ BitVec 64))
(declare-fun temp10924_129 () (_ BitVec 64))
(declare-fun temp10924_130 () (_ BitVec 64))
(declare-fun temp10924_131 () (_ BitVec 64))
(declare-fun temp10924_132 () (_ BitVec 64))
(declare-fun temp10924_133 () (_ BitVec 64))
(declare-fun temp10924_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10924_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10924_136 () (_ BitVec 64))
(declare-fun temp10924_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10924_138 () (_ BitVec 64))
(declare-fun temp10924_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10924_140 () (_ BitVec 64))
(declare-fun temp10924_141 () (_ BitVec 64))
(declare-fun temp10924_142 () (_ BitVec 64))
(declare-fun temp10924_143 () (_ BitVec 64))
(declare-fun temp10924_144 () (_ BitVec 64))
(declare-fun temp10924_145 () (_ BitVec 64))
(declare-fun temp10924_146 () (_ BitVec 64))
(declare-fun temp10924_147 () (_ BitVec 64))
(declare-fun temp10924_148 () (_ BitVec 64))
(declare-fun temp10924_149 () (_ BitVec 64))
(declare-fun temp10924_150 () (_ BitVec 64))
(declare-fun temp10924_151 () (_ BitVec 64))
(declare-fun temp10924_152 () (_ BitVec 64))
(declare-fun temp10924_153 () (_ BitVec 64))
(declare-fun temp10924_154 () (_ BitVec 64))
(declare-fun temp10924_155 () (_ BitVec 64))
(declare-fun temp10924_157 () (_ BitVec 64))
(declare-fun temp10924_158 () (_ BitVec 64))
(declare-fun temp10924_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10924_159 () (_ BitVec 64))
(declare-fun temp10924_160 () (_ BitVec 64))
(declare-fun temp10924_162 () (_ BitVec 64))
(declare-fun temp10924_163 () (_ BitVec 64))
(declare-fun temp10924_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10924_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10924_165 () (_ BitVec 64))
(declare-fun temp10924_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10924_167 () (_ BitVec 64))
(declare-fun temp10924_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10924_169 () (_ BitVec 64))
(declare-fun temp10924_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10924_171 () (_ BitVec 64))
(declare-fun temp10924_172 () (_ BitVec 64))
(declare-fun temp10924_173 () (_ BitVec 64))
(declare-fun temp10924_174 () (_ BitVec 64))
(declare-fun temp10924_175 () (_ BitVec 64))
(declare-fun temp10924_176 () (_ BitVec 64))
(declare-fun temp10924_177 () (_ BitVec 64))
(declare-fun temp10924_178 () (_ BitVec 64))
(declare-fun temp10924_179 () (_ BitVec 64))
(declare-fun temp10924_180 () (_ BitVec 64))
(declare-fun temp10924_181 () (_ BitVec 64))
(declare-fun temp10924_182 () (_ BitVec 64))
(declare-fun temp10924_183 () (_ BitVec 64))
(declare-fun temp10924_184 () (_ BitVec 64))
(declare-fun temp10924_185 () (_ BitVec 64))
(declare-fun temp10924_186 () (_ BitVec 64))
(declare-fun temp10924_187 () (_ BitVec 64))
(declare-fun temp10924_188 () (_ BitVec 64))
(declare-fun temp10924_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10924_190 () (_ BitVec 64))
(declare-fun temp10924_192 () (_ BitVec 64))
(declare-fun temp10924_193 () (_ BitVec 64))
(declare-fun temp10924_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10924_194 () (_ BitVec 64))
(declare-fun temp10924_195 () (_ BitVec 64))
(declare-fun temp10924_197 () (_ BitVec 64))
(declare-fun temp10924_198 () (_ BitVec 64))
(declare-fun temp10924_196 () (_ BitVec 64))
(declare-fun temp10924_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10924_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10924_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10924_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10924_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10924_204 () (_ BitVec 64))
(declare-fun temp10924_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10924_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10924_207 () (_ BitVec 64))
(declare-fun temp10924_208 () (_ BitVec 64))
(declare-fun temp10924_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10924_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10924_211 () (_ BitVec 64))
(declare-fun temp10924_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10924_213 () (_ BitVec 64))
(declare-fun temp10924_214 () (_ BitVec 64))
(declare-fun temp10924_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10924_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10924_217 () (_ BitVec 64))
(declare-fun temp10924_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10924_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10924_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var5255568 () (_ BitVec 64))
(declare-fun var5517712 () (_ BitVec 64))
(declare-fun temp10924_221 () (_ BitVec 64))
(declare-fun var5845392 () (_ BitVec 64))
(declare-fun temp10924_222 () (_ BitVec 64))
(declare-fun temp10924_223 () (_ BitVec 64))
(declare-fun var7287572 () (_ BitVec 64))
(declare-fun var7287539 () (_ BitVec 64))
(declare-fun var7156103 () (_ BitVec 64))
(declare-fun var7156099 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp10924_224 () (_ BitVec 64))
(assert (= temp10924_1 #x0000000000000001))
(assert (= var77203 temp10924_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10924_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10924_2)))
(assert (= temp10924_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10924_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10924_4 #x0000000000000000))
(assert (= var210941 temp10924_4))
(assert (= temp10924_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10924_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10924_6 #x0000000000000000))
(assert (= var210986 temp10924_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10924_7 #x0000000000000000))
(assert (= temp10924_8 temp10924_7))
(assert (= temp10924_9 (select ARGNAME_padding_NAMEEND_VAL temp10924_8)))
(assert (= temp10924_10 #x0000000000000001))
(assert (= temp10924_11 temp10924_10))
(assert (= temp10924_12 (select ARGNAME_padding_NAMEEND_VAL temp10924_11)))
(assert (= temp10924_13 #x0000000000000002))
(assert (= temp10924_14 temp10924_13))
(assert (= temp10924_15 (select ARGNAME_padding_NAMEEND_VAL temp10924_14)))
(assert (= temp10924_16 #x0000000000000003))
(assert (= temp10924_17 temp10924_16))
(assert (= temp10924_18 (select ARGNAME_padding_NAMEEND_VAL temp10924_17)))
(assert (= temp10924_19 #x0000000000000004))
(assert (= temp10924_20 temp10924_19))
(assert (= temp10924_21 (select ARGNAME_padding_NAMEEND_VAL temp10924_20)))
(assert (= temp10924_22 #x0000000000000005))
(assert (= temp10924_23 temp10924_22))
(assert (= temp10924_24 (select ARGNAME_padding_NAMEEND_VAL temp10924_23)))
(assert (= temp10924_25 #x0000000000000000))
(assert (= temp10924_26 #x0000000000000000))
(assert (= temp10924_27 temp10924_26))
(assert (= temp10924_28 (select ARGNAME_padding_NAMEEND_VAL temp10924_27)))
(assert (= temp10924_29 #x0000000000000000))
(assert (= temp10924_30 #x0000000000000001))
(assert (= temp10924_31 temp10924_30))
(assert (= temp10924_32 (select ARGNAME_padding_NAMEEND_VAL temp10924_31)))
(assert (= temp10924_33 #x0000000000000000))
(assert (= temp10924_34 #x0000000000000002))
(assert (= temp10924_35 temp10924_34))
(assert (= temp10924_36 (select ARGNAME_padding_NAMEEND_VAL temp10924_35)))
(assert (= temp10924_37 #x0000000000000000))
(assert (= temp10924_38 #x0000000000000003))
(assert (= temp10924_39 temp10924_38))
(assert (= temp10924_40 (select ARGNAME_padding_NAMEEND_VAL temp10924_39)))
(assert (= temp10924_41 #x0000000000000000))
(assert (= temp10924_42 #x0000000000000004))
(assert (= temp10924_43 temp10924_42))
(assert (= temp10924_44 (select ARGNAME_padding_NAMEEND_VAL temp10924_43)))
(assert (= temp10924_45 #x0000000000000000))
(assert (= temp10924_46 #x0000000000000005))
(assert (= temp10924_47 temp10924_46))
(assert (= temp10924_48 (select ARGNAME_padding_NAMEEND_VAL temp10924_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10924_28 temp10924_25)
             (bvslt temp10924_32 temp10924_29)
             (bvslt temp10924_36 temp10924_33)
             (bvslt temp10924_40 temp10924_37)
             (bvslt temp10924_44 temp10924_41)
             (bvslt temp10924_48 temp10924_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10924_49 #x0000000000000000))
(assert (= var1191714 temp10924_49))
(assert (= temp10924_50 #x0000000000000000))
(assert (= temp10924_51 temp10924_50))
(assert (= temp10924_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10924_51)))
(assert (= temp10924_53 #x0000000000000001))
(assert (= temp10924_54 temp10924_53))
(assert (= temp10924_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10924_54)))
(assert (= temp10924_56 #x0000000000000002))
(assert (= temp10924_57 temp10924_56))
(assert (= temp10924_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10924_57)))
(assert (= temp10924_59 #x0000000000000003))
(assert (= temp10924_60 temp10924_59))
(assert (= temp10924_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10924_60)))
(assert (= temp10924_62 #x0000000000000004))
(assert (= temp10924_63 temp10924_62))
(assert (= temp10924_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10924_63)))
(assert (= temp10924_65 #x0000000000000005))
(assert (= temp10924_66 temp10924_65))
(assert (= temp10924_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10924_66)))
(assert (= temp10924_68 #x0000000000000000))
(assert (= temp10924_69 #x0000000000000000))
(assert (= temp10924_70 temp10924_69))
(assert (= temp10924_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10924_70)))
(assert (= temp10924_72 #x0000000000000000))
(assert (= temp10924_73 #x0000000000000001))
(assert (= temp10924_74 temp10924_73))
(assert (= temp10924_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10924_74)))
(assert (= temp10924_76 #x0000000000000000))
(assert (= temp10924_77 #x0000000000000002))
(assert (= temp10924_78 temp10924_77))
(assert (= temp10924_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10924_78)))
(assert (= temp10924_80 #x0000000000000000))
(assert (= temp10924_81 #x0000000000000003))
(assert (= temp10924_82 temp10924_81))
(assert (= temp10924_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10924_82)))
(assert (= temp10924_84 #x0000000000000000))
(assert (= temp10924_85 #x0000000000000004))
(assert (= temp10924_86 temp10924_85))
(assert (= temp10924_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10924_86)))
(assert (= temp10924_88 #x0000000000000000))
(assert (= temp10924_89 #x0000000000000005))
(assert (= temp10924_90 temp10924_89))
(assert (= temp10924_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10924_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10924_71 temp10924_68)
             (bvslt temp10924_75 temp10924_72)
             (bvslt temp10924_79 temp10924_76)
             (bvslt temp10924_83 temp10924_80)
             (bvslt temp10924_87 temp10924_84)
             (bvslt temp10924_91 temp10924_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10924_92 #x0000000000000000))
(assert (= var1191725 temp10924_92))
(assert (= temp10924_93 #x0000000000000000))
(assert (= temp10924_94 temp10924_93))
(assert (= temp10924_95 (select ARGNAME_stride_NAMEEND_VAL temp10924_94)))
(assert (= temp10924_96 #x0000000000000001))
(assert (= temp10924_97 temp10924_96))
(assert (= temp10924_98 (select ARGNAME_stride_NAMEEND_VAL temp10924_97)))
(assert (= temp10924_99 #x0000000000000002))
(assert (= temp10924_100 temp10924_99))
(assert (= temp10924_101 (select ARGNAME_stride_NAMEEND_VAL temp10924_100)))
(assert (= temp10924_102 #x0000000000000003))
(assert (= temp10924_103 temp10924_102))
(assert (= temp10924_104 (select ARGNAME_stride_NAMEEND_VAL temp10924_103)))
(assert (= temp10924_105 #x0000000000000004))
(assert (= temp10924_106 temp10924_105))
(assert (= temp10924_107 (select ARGNAME_stride_NAMEEND_VAL temp10924_106)))
(assert (= temp10924_108 #x0000000000000005))
(assert (= temp10924_109 temp10924_108))
(assert (= temp10924_110 (select ARGNAME_stride_NAMEEND_VAL temp10924_109)))
(assert (= temp10924_111 #x0000000000000000))
(assert (= temp10924_112 #x0000000000000000))
(assert (= temp10924_113 temp10924_112))
(assert (= temp10924_114 (select ARGNAME_stride_NAMEEND_VAL temp10924_113)))
(assert (= temp10924_115 #x0000000000000000))
(assert (= temp10924_116 #x0000000000000001))
(assert (= temp10924_117 temp10924_116))
(assert (= temp10924_118 (select ARGNAME_stride_NAMEEND_VAL temp10924_117)))
(assert (= temp10924_119 #x0000000000000000))
(assert (= temp10924_120 #x0000000000000002))
(assert (= temp10924_121 temp10924_120))
(assert (= temp10924_122 (select ARGNAME_stride_NAMEEND_VAL temp10924_121)))
(assert (= temp10924_123 #x0000000000000000))
(assert (= temp10924_124 #x0000000000000003))
(assert (= temp10924_125 temp10924_124))
(assert (= temp10924_126 (select ARGNAME_stride_NAMEEND_VAL temp10924_125)))
(assert (= temp10924_127 #x0000000000000000))
(assert (= temp10924_128 #x0000000000000004))
(assert (= temp10924_129 temp10924_128))
(assert (= temp10924_130 (select ARGNAME_stride_NAMEEND_VAL temp10924_129)))
(assert (= temp10924_131 #x0000000000000000))
(assert (= temp10924_132 #x0000000000000005))
(assert (= temp10924_133 temp10924_132))
(assert (= temp10924_134 (select ARGNAME_stride_NAMEEND_VAL temp10924_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10924_114 temp10924_111)
             (bvsle temp10924_118 temp10924_115)
             (bvsle temp10924_122 temp10924_119)
             (bvsle temp10924_126 temp10924_123)
             (bvsle temp10924_130 temp10924_127)
             (bvsle temp10924_134 temp10924_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10924_135 #x0000000000000000))
(assert (= var1191735 temp10924_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10924_136 #x0000000000000001))
(assert (= var1191747 temp10924_136))
(assert (= temp10924_137 #x0000000000000000))
(assert (= var1179826 temp10924_137))
(assert (= temp10924_138 #x0000000000000000))
(assert (= temp10924_139 temp10924_138))
(assert (= temp10924_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10924_139)))
(assert (= temp10924_141 #x0000000000000001))
(assert (= temp10924_142 temp10924_141))
(assert (= temp10924_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10924_142)))
(assert (= temp10924_144 #x0000000000000002))
(assert (= temp10924_145 temp10924_144))
(assert (= temp10924_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10924_145)))
(assert (= temp10924_147 #x0000000000000003))
(assert (= temp10924_148 temp10924_147))
(assert (= temp10924_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10924_148)))
(assert (= temp10924_150 #x0000000000000004))
(assert (= temp10924_151 temp10924_150))
(assert (= temp10924_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10924_151)))
(assert (= temp10924_153 #x0000000000000005))
(assert (= temp10924_154 temp10924_153))
(assert (= temp10924_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10924_154)))
(assert (= temp10924_157 var1179826))
(assert (= temp10924_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10924_157)))
(assert (= temp10924_156 temp10924_158))
(assert (= var1191780
   (ite (bvslt temp10924_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10924_159 #x0000000000000000))
(assert (= var1191780 temp10924_159))
(assert (= temp10924_160 #x0000000000000000))
(assert (= var1179826 temp10924_160))
(assert (= temp10924_162 var1179826))
(assert (= temp10924_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10924_162)))
(assert (= temp10924_161 temp10924_163))
(assert (= var1191802 (bvsmod temp10924_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10924_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10924_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10924_165 #x0000000000000001))
(assert (= var1191803 temp10924_165))
(assert (= temp10924_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10924_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10924_167 #x0000000000000001))
(assert (= var1191823 temp10924_167))
(assert (= temp10924_168 #x0000000000000001))
(assert (= var1180714 temp10924_168))
(assert (= temp10924_169 #x0000000000000000))
(assert (= temp10924_170 temp10924_169))
(assert (= temp10924_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10924_170)))
(assert (= temp10924_172 #x0000000000000001))
(assert (= temp10924_173 temp10924_172))
(assert (= temp10924_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10924_173)))
(assert (= temp10924_175 #x0000000000000002))
(assert (= temp10924_176 temp10924_175))
(assert (= temp10924_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10924_176)))
(assert (= temp10924_178 #x0000000000000003))
(assert (= temp10924_179 temp10924_178))
(assert (= temp10924_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10924_179)))
(assert (= temp10924_181 #x0000000000000004))
(assert (= temp10924_182 temp10924_181))
(assert (= temp10924_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10924_182)))
(assert (= temp10924_184 #x0000000000000005))
(assert (= temp10924_185 temp10924_184))
(assert (= temp10924_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10924_185)))
(assert (= temp10924_187 #x0000000000000000))
(assert (= temp10924_188
   (ite (bvslt var1180714 temp10924_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10924_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10924_188)))
(assert (= var1191831 temp10924_189))
(assert (bvslt (ite (bvslt var1180714 temp10924_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10924_190 #x0000000000000001))
(assert (= var1180714 temp10924_190))
(assert (= temp10924_192 var1180714))
(assert (= temp10924_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10924_192)))
(assert (= temp10924_191 temp10924_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10924_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10924_194 #x0000000000000001))
(assert (= var1191836 temp10924_194))
(assert (= temp10924_195 #x0000000000000000))
(assert (= var1179826 temp10924_195))
(assert (= temp10924_197 var1179826))
(assert (= temp10924_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10924_197)))
(assert (= temp10924_196 temp10924_198))
(assert (= temp10924_199 #x0000000000000002))
(assert (= var1586025 temp10924_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10924_200 #x0000000000000001))
(assert (= var1191993 temp10924_200))
(assert (= temp10924_201 #x0000000000000001))
(assert (= var2700303 temp10924_201))
(assert (= temp10924_202 #x0000000000000001))
(assert (= var2962447 temp10924_202))
(assert (= temp10924_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10924_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10924_204 #x0000000000000001))
(assert (= var211058 temp10924_204))
(assert (= temp10924_205 #x0000000000000001))
(assert (= var211188 temp10924_205))
(assert (= var3879401 var211188))
(assert (= temp10924_206 #x0000000000000000))
(assert (= var3866802 temp10924_206))
(assert (= temp10924_207 #x0000000000000000))
(assert (= temp10924_208
   (ite (bvslt var3866802 temp10924_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10924_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10924_208)))
(assert (= var3879420 temp10924_209))
(assert (bvslt (ite (bvslt var3866802 temp10924_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10924_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10924_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10924_211 #x0000000000000000))
(assert (= var3879421 temp10924_211))
(assert (= temp10924_212 #x0000000000000001))
(assert (= var3867690 temp10924_212))
(assert (= temp10924_213 #x0000000000000000))
(assert (= temp10924_214
   (ite (bvslt var3867690 temp10924_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10924_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10924_214)))
(assert (= var3879423 temp10924_215))
(assert (bvslt (ite (bvslt var3867690 temp10924_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10924_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10924_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10924_217 #x0000000000000001))
(assert (= var3879424 temp10924_217))
(assert (= temp10924_218 #x0000000000000000))
(assert (= var4133117 temp10924_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10924_219 #x0000000000000002))
(assert (= var4339331 temp10924_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10924_220 #x0000000000000000))
(assert (= var4404892 temp10924_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var5255568 var211201))
(assert (= var5517712 var211201))
(assert (= temp10924_221 #x0000000000000000))
(assert (= var5845392 temp10924_221))
(assert (= temp10924_222 #x0000000000000001))
(assert (= var211058 temp10924_222))
(assert (= temp10924_223 #x0000000000000000))
(assert (= var7287572 temp10924_223))
(assert (= var7287539 var7287572))
(assert (= var7156103 var7287539))
(assert (= var7156099 var7156103))
(assert (= var212669 var7156099))
(assert (= temp10924_224 #x0000000000000000))
(assert (= var212669 temp10924_224))
(model-add temp10924_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10924_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10924_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10924_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





