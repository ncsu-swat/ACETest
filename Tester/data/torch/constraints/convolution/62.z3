(declare-fun temp82_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp82_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp82_3 () (_ BitVec 64))
(declare-fun temp82_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp82_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp82_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp82_7 () (_ BitVec 64))
(declare-fun temp82_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp82_9 () (_ BitVec 64))
(declare-fun temp82_10 () (_ BitVec 64))
(declare-fun temp82_11 () (_ BitVec 64))
(declare-fun temp82_12 () (_ BitVec 64))
(declare-fun temp82_13 () (_ BitVec 64))
(declare-fun temp82_14 () (_ BitVec 64))
(declare-fun temp82_15 () (_ BitVec 64))
(declare-fun temp82_16 () (_ BitVec 64))
(declare-fun temp82_17 () (_ BitVec 64))
(declare-fun temp82_18 () (_ BitVec 64))
(declare-fun temp82_19 () (_ BitVec 64))
(declare-fun temp82_20 () (_ BitVec 64))
(declare-fun temp82_21 () (_ BitVec 64))
(declare-fun temp82_22 () (_ BitVec 64))
(declare-fun temp82_23 () (_ BitVec 64))
(declare-fun temp82_24 () (_ BitVec 64))
(declare-fun temp82_25 () (_ BitVec 64))
(declare-fun temp82_26 () (_ BitVec 64))
(declare-fun temp82_27 () (_ BitVec 64))
(declare-fun temp82_28 () (_ BitVec 64))
(declare-fun temp82_29 () (_ BitVec 64))
(declare-fun temp82_30 () (_ BitVec 64))
(declare-fun temp82_31 () (_ BitVec 64))
(declare-fun temp82_32 () (_ BitVec 64))
(declare-fun temp82_33 () (_ BitVec 64))
(declare-fun temp82_34 () (_ BitVec 64))
(declare-fun temp82_35 () (_ BitVec 64))
(declare-fun temp82_36 () (_ BitVec 64))
(declare-fun temp82_37 () (_ BitVec 64))
(declare-fun temp82_38 () (_ BitVec 64))
(declare-fun temp82_39 () (_ BitVec 64))
(declare-fun temp82_40 () (_ BitVec 64))
(declare-fun temp82_41 () (_ BitVec 64))
(declare-fun temp82_42 () (_ BitVec 64))
(declare-fun temp82_43 () (_ BitVec 64))
(declare-fun temp82_44 () (_ BitVec 64))
(declare-fun temp82_45 () (_ BitVec 64))
(declare-fun temp82_46 () (_ BitVec 64))
(declare-fun temp82_47 () (_ BitVec 64))
(declare-fun temp82_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp82_49 () (_ BitVec 64))
(declare-fun temp82_50 () (_ BitVec 64))
(declare-fun temp82_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp82_52 () (_ BitVec 64))
(declare-fun temp82_53 () (_ BitVec 64))
(declare-fun temp82_54 () (_ BitVec 64))
(declare-fun temp82_55 () (_ BitVec 64))
(declare-fun temp82_56 () (_ BitVec 64))
(declare-fun temp82_57 () (_ BitVec 64))
(declare-fun temp82_58 () (_ BitVec 64))
(declare-fun temp82_59 () (_ BitVec 64))
(declare-fun temp82_60 () (_ BitVec 64))
(declare-fun temp82_61 () (_ BitVec 64))
(declare-fun temp82_62 () (_ BitVec 64))
(declare-fun temp82_63 () (_ BitVec 64))
(declare-fun temp82_64 () (_ BitVec 64))
(declare-fun temp82_65 () (_ BitVec 64))
(declare-fun temp82_66 () (_ BitVec 64))
(declare-fun temp82_67 () (_ BitVec 64))
(declare-fun temp82_68 () (_ BitVec 64))
(declare-fun temp82_69 () (_ BitVec 64))
(declare-fun temp82_70 () (_ BitVec 64))
(declare-fun temp82_71 () (_ BitVec 64))
(declare-fun temp82_72 () (_ BitVec 64))
(declare-fun temp82_73 () (_ BitVec 64))
(declare-fun temp82_74 () (_ BitVec 64))
(declare-fun temp82_75 () (_ BitVec 64))
(declare-fun temp82_76 () (_ BitVec 64))
(declare-fun temp82_77 () (_ BitVec 64))
(declare-fun temp82_78 () (_ BitVec 64))
(declare-fun temp82_79 () (_ BitVec 64))
(declare-fun temp82_80 () (_ BitVec 64))
(declare-fun temp82_81 () (_ BitVec 64))
(declare-fun temp82_82 () (_ BitVec 64))
(declare-fun temp82_83 () (_ BitVec 64))
(declare-fun temp82_84 () (_ BitVec 64))
(declare-fun temp82_85 () (_ BitVec 64))
(declare-fun temp82_86 () (_ BitVec 64))
(declare-fun temp82_87 () (_ BitVec 64))
(declare-fun temp82_88 () (_ BitVec 64))
(declare-fun temp82_89 () (_ BitVec 64))
(declare-fun temp82_90 () (_ BitVec 64))
(declare-fun temp82_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp82_92 () (_ BitVec 64))
(declare-fun temp82_93 () (_ BitVec 64))
(declare-fun temp82_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp82_95 () (_ BitVec 64))
(declare-fun temp82_96 () (_ BitVec 64))
(declare-fun temp82_97 () (_ BitVec 64))
(declare-fun temp82_98 () (_ BitVec 64))
(declare-fun temp82_99 () (_ BitVec 64))
(declare-fun temp82_100 () (_ BitVec 64))
(declare-fun temp82_101 () (_ BitVec 64))
(declare-fun temp82_102 () (_ BitVec 64))
(declare-fun temp82_103 () (_ BitVec 64))
(declare-fun temp82_104 () (_ BitVec 64))
(declare-fun temp82_105 () (_ BitVec 64))
(declare-fun temp82_106 () (_ BitVec 64))
(declare-fun temp82_107 () (_ BitVec 64))
(declare-fun temp82_108 () (_ BitVec 64))
(declare-fun temp82_109 () (_ BitVec 64))
(declare-fun temp82_110 () (_ BitVec 64))
(declare-fun temp82_111 () (_ BitVec 64))
(declare-fun temp82_112 () (_ BitVec 64))
(declare-fun temp82_113 () (_ BitVec 64))
(declare-fun temp82_114 () (_ BitVec 64))
(declare-fun temp82_115 () (_ BitVec 64))
(declare-fun temp82_116 () (_ BitVec 64))
(declare-fun temp82_117 () (_ BitVec 64))
(declare-fun temp82_118 () (_ BitVec 64))
(declare-fun temp82_119 () (_ BitVec 64))
(declare-fun temp82_120 () (_ BitVec 64))
(declare-fun temp82_121 () (_ BitVec 64))
(declare-fun temp82_122 () (_ BitVec 64))
(declare-fun temp82_123 () (_ BitVec 64))
(declare-fun temp82_124 () (_ BitVec 64))
(declare-fun temp82_125 () (_ BitVec 64))
(declare-fun temp82_126 () (_ BitVec 64))
(declare-fun temp82_127 () (_ BitVec 64))
(declare-fun temp82_128 () (_ BitVec 64))
(declare-fun temp82_129 () (_ BitVec 64))
(declare-fun temp82_130 () (_ BitVec 64))
(declare-fun temp82_131 () (_ BitVec 64))
(declare-fun temp82_132 () (_ BitVec 64))
(declare-fun temp82_133 () (_ BitVec 64))
(declare-fun temp82_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp82_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp82_136 () (_ BitVec 64))
(declare-fun temp82_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp82_138 () (_ BitVec 64))
(declare-fun temp82_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp82_140 () (_ BitVec 64))
(declare-fun temp82_141 () (_ BitVec 64))
(declare-fun temp82_142 () (_ BitVec 64))
(declare-fun temp82_143 () (_ BitVec 64))
(declare-fun temp82_144 () (_ BitVec 64))
(declare-fun temp82_145 () (_ BitVec 64))
(declare-fun temp82_146 () (_ BitVec 64))
(declare-fun temp82_147 () (_ BitVec 64))
(declare-fun temp82_148 () (_ BitVec 64))
(declare-fun temp82_149 () (_ BitVec 64))
(declare-fun temp82_150 () (_ BitVec 64))
(declare-fun temp82_151 () (_ BitVec 64))
(declare-fun temp82_152 () (_ BitVec 64))
(declare-fun temp82_153 () (_ BitVec 64))
(declare-fun temp82_154 () (_ BitVec 64))
(declare-fun temp82_155 () (_ BitVec 64))
(declare-fun temp82_157 () (_ BitVec 64))
(declare-fun temp82_158 () (_ BitVec 64))
(declare-fun temp82_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp82_159 () (_ BitVec 64))
(declare-fun temp82_160 () (_ BitVec 64))
(declare-fun temp82_162 () (_ BitVec 64))
(declare-fun temp82_163 () (_ BitVec 64))
(declare-fun temp82_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp82_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp82_165 () (_ BitVec 64))
(declare-fun temp82_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp82_167 () (_ BitVec 64))
(declare-fun temp82_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp82_169 () (_ BitVec 64))
(declare-fun temp82_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp82_171 () (_ BitVec 64))
(declare-fun temp82_172 () (_ BitVec 64))
(declare-fun temp82_173 () (_ BitVec 64))
(declare-fun temp82_174 () (_ BitVec 64))
(declare-fun temp82_175 () (_ BitVec 64))
(declare-fun temp82_176 () (_ BitVec 64))
(declare-fun temp82_177 () (_ BitVec 64))
(declare-fun temp82_178 () (_ BitVec 64))
(declare-fun temp82_179 () (_ BitVec 64))
(declare-fun temp82_180 () (_ BitVec 64))
(declare-fun temp82_181 () (_ BitVec 64))
(declare-fun temp82_182 () (_ BitVec 64))
(declare-fun temp82_183 () (_ BitVec 64))
(declare-fun temp82_184 () (_ BitVec 64))
(declare-fun temp82_185 () (_ BitVec 64))
(declare-fun temp82_186 () (_ BitVec 64))
(declare-fun temp82_187 () (_ BitVec 64))
(declare-fun temp82_188 () (_ BitVec 64))
(declare-fun temp82_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp82_190 () (_ BitVec 64))
(declare-fun temp82_192 () (_ BitVec 64))
(declare-fun temp82_193 () (_ BitVec 64))
(declare-fun temp82_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp82_194 () (_ BitVec 64))
(declare-fun temp82_195 () (_ BitVec 64))
(declare-fun temp82_197 () (_ BitVec 64))
(declare-fun temp82_198 () (_ BitVec 64))
(declare-fun temp82_196 () (_ BitVec 64))
(declare-fun temp82_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp82_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp82_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp82_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp82_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp82_204 () (_ BitVec 64))
(declare-fun temp82_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp82_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp82_207 () (_ BitVec 64))
(declare-fun temp82_208 () (_ BitVec 64))
(declare-fun temp82_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp82_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp82_211 () (_ BitVec 64))
(declare-fun temp82_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp82_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp82_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4796816 () (_ BitVec 64))
(declare-fun var211494 () (_ BitVec 64))
(declare-fun temp82_215 () (_ BitVec 64))
(declare-fun var211495 () (_ BitVec 64))
(declare-fun temp82_217 () (_ BitVec 64))
(declare-fun temp82_216 () (_ BitVec 64))
(declare-fun temp82_218 () (_ BitVec 64))
(declare-fun var6753770 () (_ BitVec 64))
(declare-fun temp82_220 () (_ BitVec 64))
(declare-fun temp82_219 () (_ BitVec 64))
(declare-fun temp82_221 () (_ BitVec 64))
(assert (= temp82_1 #x0000000000000001))
(assert (= var77203 temp82_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp82_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp82_2)))
(assert (= temp82_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp82_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp82_4 #x0000000000000000))
(assert (= var210941 temp82_4))
(assert (= temp82_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp82_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp82_6 #x0000000000000000))
(assert (= var210986 temp82_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp82_7 #x0000000000000000))
(assert (= temp82_8 temp82_7))
(assert (= temp82_9 (select ARGNAME_padding_NAMEEND_VAL temp82_8)))
(assert (= temp82_10 #x0000000000000001))
(assert (= temp82_11 temp82_10))
(assert (= temp82_12 (select ARGNAME_padding_NAMEEND_VAL temp82_11)))
(assert (= temp82_13 #x0000000000000002))
(assert (= temp82_14 temp82_13))
(assert (= temp82_15 (select ARGNAME_padding_NAMEEND_VAL temp82_14)))
(assert (= temp82_16 #x0000000000000003))
(assert (= temp82_17 temp82_16))
(assert (= temp82_18 (select ARGNAME_padding_NAMEEND_VAL temp82_17)))
(assert (= temp82_19 #x0000000000000004))
(assert (= temp82_20 temp82_19))
(assert (= temp82_21 (select ARGNAME_padding_NAMEEND_VAL temp82_20)))
(assert (= temp82_22 #x0000000000000005))
(assert (= temp82_23 temp82_22))
(assert (= temp82_24 (select ARGNAME_padding_NAMEEND_VAL temp82_23)))
(assert (= temp82_25 #x0000000000000000))
(assert (= temp82_26 #x0000000000000000))
(assert (= temp82_27 temp82_26))
(assert (= temp82_28 (select ARGNAME_padding_NAMEEND_VAL temp82_27)))
(assert (= temp82_29 #x0000000000000000))
(assert (= temp82_30 #x0000000000000001))
(assert (= temp82_31 temp82_30))
(assert (= temp82_32 (select ARGNAME_padding_NAMEEND_VAL temp82_31)))
(assert (= temp82_33 #x0000000000000000))
(assert (= temp82_34 #x0000000000000002))
(assert (= temp82_35 temp82_34))
(assert (= temp82_36 (select ARGNAME_padding_NAMEEND_VAL temp82_35)))
(assert (= temp82_37 #x0000000000000000))
(assert (= temp82_38 #x0000000000000003))
(assert (= temp82_39 temp82_38))
(assert (= temp82_40 (select ARGNAME_padding_NAMEEND_VAL temp82_39)))
(assert (= temp82_41 #x0000000000000000))
(assert (= temp82_42 #x0000000000000004))
(assert (= temp82_43 temp82_42))
(assert (= temp82_44 (select ARGNAME_padding_NAMEEND_VAL temp82_43)))
(assert (= temp82_45 #x0000000000000000))
(assert (= temp82_46 #x0000000000000005))
(assert (= temp82_47 temp82_46))
(assert (= temp82_48 (select ARGNAME_padding_NAMEEND_VAL temp82_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp82_28 temp82_25)
             (bvslt temp82_32 temp82_29)
             (bvslt temp82_36 temp82_33)
             (bvslt temp82_40 temp82_37)
             (bvslt temp82_44 temp82_41)
             (bvslt temp82_48 temp82_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp82_49 #x0000000000000000))
(assert (= var1191714 temp82_49))
(assert (= temp82_50 #x0000000000000000))
(assert (= temp82_51 temp82_50))
(assert (= temp82_52 (select ARGNAME_output_padding_NAMEEND_VAL temp82_51)))
(assert (= temp82_53 #x0000000000000001))
(assert (= temp82_54 temp82_53))
(assert (= temp82_55 (select ARGNAME_output_padding_NAMEEND_VAL temp82_54)))
(assert (= temp82_56 #x0000000000000002))
(assert (= temp82_57 temp82_56))
(assert (= temp82_58 (select ARGNAME_output_padding_NAMEEND_VAL temp82_57)))
(assert (= temp82_59 #x0000000000000003))
(assert (= temp82_60 temp82_59))
(assert (= temp82_61 (select ARGNAME_output_padding_NAMEEND_VAL temp82_60)))
(assert (= temp82_62 #x0000000000000004))
(assert (= temp82_63 temp82_62))
(assert (= temp82_64 (select ARGNAME_output_padding_NAMEEND_VAL temp82_63)))
(assert (= temp82_65 #x0000000000000005))
(assert (= temp82_66 temp82_65))
(assert (= temp82_67 (select ARGNAME_output_padding_NAMEEND_VAL temp82_66)))
(assert (= temp82_68 #x0000000000000000))
(assert (= temp82_69 #x0000000000000000))
(assert (= temp82_70 temp82_69))
(assert (= temp82_71 (select ARGNAME_output_padding_NAMEEND_VAL temp82_70)))
(assert (= temp82_72 #x0000000000000000))
(assert (= temp82_73 #x0000000000000001))
(assert (= temp82_74 temp82_73))
(assert (= temp82_75 (select ARGNAME_output_padding_NAMEEND_VAL temp82_74)))
(assert (= temp82_76 #x0000000000000000))
(assert (= temp82_77 #x0000000000000002))
(assert (= temp82_78 temp82_77))
(assert (= temp82_79 (select ARGNAME_output_padding_NAMEEND_VAL temp82_78)))
(assert (= temp82_80 #x0000000000000000))
(assert (= temp82_81 #x0000000000000003))
(assert (= temp82_82 temp82_81))
(assert (= temp82_83 (select ARGNAME_output_padding_NAMEEND_VAL temp82_82)))
(assert (= temp82_84 #x0000000000000000))
(assert (= temp82_85 #x0000000000000004))
(assert (= temp82_86 temp82_85))
(assert (= temp82_87 (select ARGNAME_output_padding_NAMEEND_VAL temp82_86)))
(assert (= temp82_88 #x0000000000000000))
(assert (= temp82_89 #x0000000000000005))
(assert (= temp82_90 temp82_89))
(assert (= temp82_91 (select ARGNAME_output_padding_NAMEEND_VAL temp82_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp82_71 temp82_68)
             (bvslt temp82_75 temp82_72)
             (bvslt temp82_79 temp82_76)
             (bvslt temp82_83 temp82_80)
             (bvslt temp82_87 temp82_84)
             (bvslt temp82_91 temp82_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp82_92 #x0000000000000000))
(assert (= var1191725 temp82_92))
(assert (= temp82_93 #x0000000000000000))
(assert (= temp82_94 temp82_93))
(assert (= temp82_95 (select ARGNAME_stride_NAMEEND_VAL temp82_94)))
(assert (= temp82_96 #x0000000000000001))
(assert (= temp82_97 temp82_96))
(assert (= temp82_98 (select ARGNAME_stride_NAMEEND_VAL temp82_97)))
(assert (= temp82_99 #x0000000000000002))
(assert (= temp82_100 temp82_99))
(assert (= temp82_101 (select ARGNAME_stride_NAMEEND_VAL temp82_100)))
(assert (= temp82_102 #x0000000000000003))
(assert (= temp82_103 temp82_102))
(assert (= temp82_104 (select ARGNAME_stride_NAMEEND_VAL temp82_103)))
(assert (= temp82_105 #x0000000000000004))
(assert (= temp82_106 temp82_105))
(assert (= temp82_107 (select ARGNAME_stride_NAMEEND_VAL temp82_106)))
(assert (= temp82_108 #x0000000000000005))
(assert (= temp82_109 temp82_108))
(assert (= temp82_110 (select ARGNAME_stride_NAMEEND_VAL temp82_109)))
(assert (= temp82_111 #x0000000000000000))
(assert (= temp82_112 #x0000000000000000))
(assert (= temp82_113 temp82_112))
(assert (= temp82_114 (select ARGNAME_stride_NAMEEND_VAL temp82_113)))
(assert (= temp82_115 #x0000000000000000))
(assert (= temp82_116 #x0000000000000001))
(assert (= temp82_117 temp82_116))
(assert (= temp82_118 (select ARGNAME_stride_NAMEEND_VAL temp82_117)))
(assert (= temp82_119 #x0000000000000000))
(assert (= temp82_120 #x0000000000000002))
(assert (= temp82_121 temp82_120))
(assert (= temp82_122 (select ARGNAME_stride_NAMEEND_VAL temp82_121)))
(assert (= temp82_123 #x0000000000000000))
(assert (= temp82_124 #x0000000000000003))
(assert (= temp82_125 temp82_124))
(assert (= temp82_126 (select ARGNAME_stride_NAMEEND_VAL temp82_125)))
(assert (= temp82_127 #x0000000000000000))
(assert (= temp82_128 #x0000000000000004))
(assert (= temp82_129 temp82_128))
(assert (= temp82_130 (select ARGNAME_stride_NAMEEND_VAL temp82_129)))
(assert (= temp82_131 #x0000000000000000))
(assert (= temp82_132 #x0000000000000005))
(assert (= temp82_133 temp82_132))
(assert (= temp82_134 (select ARGNAME_stride_NAMEEND_VAL temp82_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp82_114 temp82_111)
             (bvsle temp82_118 temp82_115)
             (bvsle temp82_122 temp82_119)
             (bvsle temp82_126 temp82_123)
             (bvsle temp82_130 temp82_127)
             (bvsle temp82_134 temp82_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp82_135 #x0000000000000000))
(assert (= var1191735 temp82_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp82_136 #x0000000000000001))
(assert (= var1191747 temp82_136))
(assert (= temp82_137 #x0000000000000000))
(assert (= var1179826 temp82_137))
(assert (= temp82_138 #x0000000000000000))
(assert (= temp82_139 temp82_138))
(assert (= temp82_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp82_139)))
(assert (= temp82_141 #x0000000000000001))
(assert (= temp82_142 temp82_141))
(assert (= temp82_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp82_142)))
(assert (= temp82_144 #x0000000000000002))
(assert (= temp82_145 temp82_144))
(assert (= temp82_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp82_145)))
(assert (= temp82_147 #x0000000000000003))
(assert (= temp82_148 temp82_147))
(assert (= temp82_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp82_148)))
(assert (= temp82_150 #x0000000000000004))
(assert (= temp82_151 temp82_150))
(assert (= temp82_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp82_151)))
(assert (= temp82_153 #x0000000000000005))
(assert (= temp82_154 temp82_153))
(assert (= temp82_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp82_154)))
(assert (= temp82_157 var1179826))
(assert (= temp82_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp82_157)))
(assert (= temp82_156 temp82_158))
(assert (= var1191780
   (ite (bvslt temp82_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp82_159 #x0000000000000000))
(assert (= var1191780 temp82_159))
(assert (= temp82_160 #x0000000000000000))
(assert (= var1179826 temp82_160))
(assert (= temp82_162 var1179826))
(assert (= temp82_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp82_162)))
(assert (= temp82_161 temp82_163))
(assert (= var1191802 (bvsmod temp82_161 ARGNAME_groups_NAMEEND)))
(assert (= temp82_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp82_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp82_165 #x0000000000000001))
(assert (= var1191803 temp82_165))
(assert (= temp82_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp82_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp82_167 #x0000000000000001))
(assert (= var1191823 temp82_167))
(assert (= temp82_168 #x0000000000000001))
(assert (= var1180714 temp82_168))
(assert (= temp82_169 #x0000000000000000))
(assert (= temp82_170 temp82_169))
(assert (= temp82_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp82_170)))
(assert (= temp82_172 #x0000000000000001))
(assert (= temp82_173 temp82_172))
(assert (= temp82_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp82_173)))
(assert (= temp82_175 #x0000000000000002))
(assert (= temp82_176 temp82_175))
(assert (= temp82_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp82_176)))
(assert (= temp82_178 #x0000000000000003))
(assert (= temp82_179 temp82_178))
(assert (= temp82_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp82_179)))
(assert (= temp82_181 #x0000000000000004))
(assert (= temp82_182 temp82_181))
(assert (= temp82_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp82_182)))
(assert (= temp82_184 #x0000000000000005))
(assert (= temp82_185 temp82_184))
(assert (= temp82_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp82_185)))
(assert (= temp82_187 #x0000000000000000))
(assert (= temp82_188
   (ite (bvslt var1180714 temp82_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp82_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp82_188)))
(assert (= var1191831 temp82_189))
(assert (bvslt (ite (bvslt var1180714 temp82_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp82_190 #x0000000000000001))
(assert (= var1180714 temp82_190))
(assert (= temp82_192 var1180714))
(assert (= temp82_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp82_192)))
(assert (= temp82_191 temp82_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp82_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp82_194 #x0000000000000001))
(assert (= var1191836 temp82_194))
(assert (= temp82_195 #x0000000000000000))
(assert (= var1179826 temp82_195))
(assert (= temp82_197 var1179826))
(assert (= temp82_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp82_197)))
(assert (= temp82_196 temp82_198))
(assert (= temp82_199 #x0000000000000002))
(assert (= var1586025 temp82_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp82_200 #x0000000000000001))
(assert (= var1191993 temp82_200))
(assert (= temp82_201 #x0000000000000001))
(assert (= var2700303 temp82_201))
(assert (= temp82_202 #x0000000000000001))
(assert (= var2962447 temp82_202))
(assert (= temp82_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp82_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp82_204 #x0000000000000001))
(assert (= var211058 temp82_204))
(assert (= temp82_205 #x0000000000000001))
(assert (= var211188 temp82_205))
(assert (= var3879401 var211188))
(assert (= temp82_206 #x0000000000000000))
(assert (= var3866802 temp82_206))
(assert (= temp82_207 #x0000000000000000))
(assert (= temp82_208
   (ite (bvslt var3866802 temp82_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp82_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp82_208)))
(assert (= var3879420 temp82_209))
(assert (bvslt (ite (bvslt var3866802 temp82_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp82_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp82_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp82_211 #x0000000000000001))
(assert (= var3879421 temp82_211))
(assert (= temp82_212 #x0000000000000000))
(assert (= var4079423 temp82_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp82_213 #x0000000000000002))
(assert (= var4208259 temp82_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp82_214 #x0000000000000000))
(assert (= var4273820 temp82_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4796816 var211201))
(assert (= var211494 var210913))
(assert (= temp82_215 #x0000000000000000))
(assert (= var211495
   (ite (distinct var211494 temp82_215) #x0000000000000001 #x0000000000000000)))
(assert (= temp82_217 #x0000000000000001))
(assert (= temp82_216 temp82_217))
(assert (= temp82_218 #x0000000000000001))
(assert (= var6753770 temp82_218))
(assert (= temp82_220 #xffffffffffffffff))
(assert (= temp82_219 temp82_220))
(assert (= temp82_221 #x0000000000000001))
(assert (= var211058 temp82_221))
(model-add temp82_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp82_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp82_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp82_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





