(declare-fun temp10909_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10909_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10909_3 () (_ BitVec 64))
(declare-fun temp10909_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10909_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10909_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10909_7 () (_ BitVec 64))
(declare-fun temp10909_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10909_9 () (_ BitVec 64))
(declare-fun temp10909_10 () (_ BitVec 64))
(declare-fun temp10909_11 () (_ BitVec 64))
(declare-fun temp10909_12 () (_ BitVec 64))
(declare-fun temp10909_13 () (_ BitVec 64))
(declare-fun temp10909_14 () (_ BitVec 64))
(declare-fun temp10909_15 () (_ BitVec 64))
(declare-fun temp10909_16 () (_ BitVec 64))
(declare-fun temp10909_17 () (_ BitVec 64))
(declare-fun temp10909_18 () (_ BitVec 64))
(declare-fun temp10909_19 () (_ BitVec 64))
(declare-fun temp10909_20 () (_ BitVec 64))
(declare-fun temp10909_21 () (_ BitVec 64))
(declare-fun temp10909_22 () (_ BitVec 64))
(declare-fun temp10909_23 () (_ BitVec 64))
(declare-fun temp10909_24 () (_ BitVec 64))
(declare-fun temp10909_25 () (_ BitVec 64))
(declare-fun temp10909_26 () (_ BitVec 64))
(declare-fun temp10909_27 () (_ BitVec 64))
(declare-fun temp10909_28 () (_ BitVec 64))
(declare-fun temp10909_29 () (_ BitVec 64))
(declare-fun temp10909_30 () (_ BitVec 64))
(declare-fun temp10909_31 () (_ BitVec 64))
(declare-fun temp10909_32 () (_ BitVec 64))
(declare-fun temp10909_33 () (_ BitVec 64))
(declare-fun temp10909_34 () (_ BitVec 64))
(declare-fun temp10909_35 () (_ BitVec 64))
(declare-fun temp10909_36 () (_ BitVec 64))
(declare-fun temp10909_37 () (_ BitVec 64))
(declare-fun temp10909_38 () (_ BitVec 64))
(declare-fun temp10909_39 () (_ BitVec 64))
(declare-fun temp10909_40 () (_ BitVec 64))
(declare-fun temp10909_41 () (_ BitVec 64))
(declare-fun temp10909_42 () (_ BitVec 64))
(declare-fun temp10909_43 () (_ BitVec 64))
(declare-fun temp10909_44 () (_ BitVec 64))
(declare-fun temp10909_45 () (_ BitVec 64))
(declare-fun temp10909_46 () (_ BitVec 64))
(declare-fun temp10909_47 () (_ BitVec 64))
(declare-fun temp10909_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10909_49 () (_ BitVec 64))
(declare-fun temp10909_50 () (_ BitVec 64))
(declare-fun temp10909_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10909_52 () (_ BitVec 64))
(declare-fun temp10909_53 () (_ BitVec 64))
(declare-fun temp10909_54 () (_ BitVec 64))
(declare-fun temp10909_55 () (_ BitVec 64))
(declare-fun temp10909_56 () (_ BitVec 64))
(declare-fun temp10909_57 () (_ BitVec 64))
(declare-fun temp10909_58 () (_ BitVec 64))
(declare-fun temp10909_59 () (_ BitVec 64))
(declare-fun temp10909_60 () (_ BitVec 64))
(declare-fun temp10909_61 () (_ BitVec 64))
(declare-fun temp10909_62 () (_ BitVec 64))
(declare-fun temp10909_63 () (_ BitVec 64))
(declare-fun temp10909_64 () (_ BitVec 64))
(declare-fun temp10909_65 () (_ BitVec 64))
(declare-fun temp10909_66 () (_ BitVec 64))
(declare-fun temp10909_67 () (_ BitVec 64))
(declare-fun temp10909_68 () (_ BitVec 64))
(declare-fun temp10909_69 () (_ BitVec 64))
(declare-fun temp10909_70 () (_ BitVec 64))
(declare-fun temp10909_71 () (_ BitVec 64))
(declare-fun temp10909_72 () (_ BitVec 64))
(declare-fun temp10909_73 () (_ BitVec 64))
(declare-fun temp10909_74 () (_ BitVec 64))
(declare-fun temp10909_75 () (_ BitVec 64))
(declare-fun temp10909_76 () (_ BitVec 64))
(declare-fun temp10909_77 () (_ BitVec 64))
(declare-fun temp10909_78 () (_ BitVec 64))
(declare-fun temp10909_79 () (_ BitVec 64))
(declare-fun temp10909_80 () (_ BitVec 64))
(declare-fun temp10909_81 () (_ BitVec 64))
(declare-fun temp10909_82 () (_ BitVec 64))
(declare-fun temp10909_83 () (_ BitVec 64))
(declare-fun temp10909_84 () (_ BitVec 64))
(declare-fun temp10909_85 () (_ BitVec 64))
(declare-fun temp10909_86 () (_ BitVec 64))
(declare-fun temp10909_87 () (_ BitVec 64))
(declare-fun temp10909_88 () (_ BitVec 64))
(declare-fun temp10909_89 () (_ BitVec 64))
(declare-fun temp10909_90 () (_ BitVec 64))
(declare-fun temp10909_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10909_92 () (_ BitVec 64))
(declare-fun temp10909_93 () (_ BitVec 64))
(declare-fun temp10909_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10909_95 () (_ BitVec 64))
(declare-fun temp10909_96 () (_ BitVec 64))
(declare-fun temp10909_97 () (_ BitVec 64))
(declare-fun temp10909_98 () (_ BitVec 64))
(declare-fun temp10909_99 () (_ BitVec 64))
(declare-fun temp10909_100 () (_ BitVec 64))
(declare-fun temp10909_101 () (_ BitVec 64))
(declare-fun temp10909_102 () (_ BitVec 64))
(declare-fun temp10909_103 () (_ BitVec 64))
(declare-fun temp10909_104 () (_ BitVec 64))
(declare-fun temp10909_105 () (_ BitVec 64))
(declare-fun temp10909_106 () (_ BitVec 64))
(declare-fun temp10909_107 () (_ BitVec 64))
(declare-fun temp10909_108 () (_ BitVec 64))
(declare-fun temp10909_109 () (_ BitVec 64))
(declare-fun temp10909_110 () (_ BitVec 64))
(declare-fun temp10909_111 () (_ BitVec 64))
(declare-fun temp10909_112 () (_ BitVec 64))
(declare-fun temp10909_113 () (_ BitVec 64))
(declare-fun temp10909_114 () (_ BitVec 64))
(declare-fun temp10909_115 () (_ BitVec 64))
(declare-fun temp10909_116 () (_ BitVec 64))
(declare-fun temp10909_117 () (_ BitVec 64))
(declare-fun temp10909_118 () (_ BitVec 64))
(declare-fun temp10909_119 () (_ BitVec 64))
(declare-fun temp10909_120 () (_ BitVec 64))
(declare-fun temp10909_121 () (_ BitVec 64))
(declare-fun temp10909_122 () (_ BitVec 64))
(declare-fun temp10909_123 () (_ BitVec 64))
(declare-fun temp10909_124 () (_ BitVec 64))
(declare-fun temp10909_125 () (_ BitVec 64))
(declare-fun temp10909_126 () (_ BitVec 64))
(declare-fun temp10909_127 () (_ BitVec 64))
(declare-fun temp10909_128 () (_ BitVec 64))
(declare-fun temp10909_129 () (_ BitVec 64))
(declare-fun temp10909_130 () (_ BitVec 64))
(declare-fun temp10909_131 () (_ BitVec 64))
(declare-fun temp10909_132 () (_ BitVec 64))
(declare-fun temp10909_133 () (_ BitVec 64))
(declare-fun temp10909_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10909_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10909_136 () (_ BitVec 64))
(declare-fun temp10909_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10909_138 () (_ BitVec 64))
(declare-fun temp10909_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10909_140 () (_ BitVec 64))
(declare-fun temp10909_141 () (_ BitVec 64))
(declare-fun temp10909_142 () (_ BitVec 64))
(declare-fun temp10909_143 () (_ BitVec 64))
(declare-fun temp10909_144 () (_ BitVec 64))
(declare-fun temp10909_145 () (_ BitVec 64))
(declare-fun temp10909_146 () (_ BitVec 64))
(declare-fun temp10909_147 () (_ BitVec 64))
(declare-fun temp10909_148 () (_ BitVec 64))
(declare-fun temp10909_149 () (_ BitVec 64))
(declare-fun temp10909_150 () (_ BitVec 64))
(declare-fun temp10909_151 () (_ BitVec 64))
(declare-fun temp10909_152 () (_ BitVec 64))
(declare-fun temp10909_153 () (_ BitVec 64))
(declare-fun temp10909_154 () (_ BitVec 64))
(declare-fun temp10909_155 () (_ BitVec 64))
(declare-fun temp10909_157 () (_ BitVec 64))
(declare-fun temp10909_158 () (_ BitVec 64))
(declare-fun temp10909_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10909_159 () (_ BitVec 64))
(declare-fun temp10909_160 () (_ BitVec 64))
(declare-fun temp10909_162 () (_ BitVec 64))
(declare-fun temp10909_163 () (_ BitVec 64))
(declare-fun temp10909_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10909_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10909_165 () (_ BitVec 64))
(declare-fun temp10909_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10909_167 () (_ BitVec 64))
(declare-fun temp10909_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10909_169 () (_ BitVec 64))
(declare-fun temp10909_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10909_171 () (_ BitVec 64))
(declare-fun temp10909_172 () (_ BitVec 64))
(declare-fun temp10909_173 () (_ BitVec 64))
(declare-fun temp10909_174 () (_ BitVec 64))
(declare-fun temp10909_175 () (_ BitVec 64))
(declare-fun temp10909_176 () (_ BitVec 64))
(declare-fun temp10909_177 () (_ BitVec 64))
(declare-fun temp10909_178 () (_ BitVec 64))
(declare-fun temp10909_179 () (_ BitVec 64))
(declare-fun temp10909_180 () (_ BitVec 64))
(declare-fun temp10909_181 () (_ BitVec 64))
(declare-fun temp10909_182 () (_ BitVec 64))
(declare-fun temp10909_183 () (_ BitVec 64))
(declare-fun temp10909_184 () (_ BitVec 64))
(declare-fun temp10909_185 () (_ BitVec 64))
(declare-fun temp10909_186 () (_ BitVec 64))
(declare-fun temp10909_187 () (_ BitVec 64))
(declare-fun temp10909_188 () (_ BitVec 64))
(declare-fun temp10909_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10909_190 () (_ BitVec 64))
(declare-fun temp10909_192 () (_ BitVec 64))
(declare-fun temp10909_193 () (_ BitVec 64))
(declare-fun temp10909_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10909_194 () (_ BitVec 64))
(declare-fun temp10909_195 () (_ BitVec 64))
(declare-fun temp10909_197 () (_ BitVec 64))
(declare-fun temp10909_198 () (_ BitVec 64))
(declare-fun temp10909_196 () (_ BitVec 64))
(declare-fun temp10909_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10909_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10909_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10909_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10909_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10909_204 () (_ BitVec 64))
(declare-fun temp10909_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10909_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10909_207 () (_ BitVec 64))
(declare-fun temp10909_208 () (_ BitVec 64))
(declare-fun temp10909_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10909_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10909_211 () (_ BitVec 64))
(declare-fun temp10909_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10909_213 () (_ BitVec 64))
(declare-fun temp10909_214 () (_ BitVec 64))
(declare-fun temp10909_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10909_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10909_217 () (_ BitVec 64))
(declare-fun temp10909_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10909_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10909_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var5255568 () (_ BitVec 64))
(declare-fun var5517712 () (_ BitVec 64))
(declare-fun temp10909_221 () (_ BitVec 64))
(assert (= temp10909_1 #x0000000000000001))
(assert (= var77203 temp10909_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10909_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10909_2)))
(assert (= temp10909_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10909_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10909_4 #x0000000000000000))
(assert (= var210941 temp10909_4))
(assert (= temp10909_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10909_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10909_6 #x0000000000000000))
(assert (= var210986 temp10909_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10909_7 #x0000000000000000))
(assert (= temp10909_8 temp10909_7))
(assert (= temp10909_9 (select ARGNAME_padding_NAMEEND_VAL temp10909_8)))
(assert (= temp10909_10 #x0000000000000001))
(assert (= temp10909_11 temp10909_10))
(assert (= temp10909_12 (select ARGNAME_padding_NAMEEND_VAL temp10909_11)))
(assert (= temp10909_13 #x0000000000000002))
(assert (= temp10909_14 temp10909_13))
(assert (= temp10909_15 (select ARGNAME_padding_NAMEEND_VAL temp10909_14)))
(assert (= temp10909_16 #x0000000000000003))
(assert (= temp10909_17 temp10909_16))
(assert (= temp10909_18 (select ARGNAME_padding_NAMEEND_VAL temp10909_17)))
(assert (= temp10909_19 #x0000000000000004))
(assert (= temp10909_20 temp10909_19))
(assert (= temp10909_21 (select ARGNAME_padding_NAMEEND_VAL temp10909_20)))
(assert (= temp10909_22 #x0000000000000005))
(assert (= temp10909_23 temp10909_22))
(assert (= temp10909_24 (select ARGNAME_padding_NAMEEND_VAL temp10909_23)))
(assert (= temp10909_25 #x0000000000000000))
(assert (= temp10909_26 #x0000000000000000))
(assert (= temp10909_27 temp10909_26))
(assert (= temp10909_28 (select ARGNAME_padding_NAMEEND_VAL temp10909_27)))
(assert (= temp10909_29 #x0000000000000000))
(assert (= temp10909_30 #x0000000000000001))
(assert (= temp10909_31 temp10909_30))
(assert (= temp10909_32 (select ARGNAME_padding_NAMEEND_VAL temp10909_31)))
(assert (= temp10909_33 #x0000000000000000))
(assert (= temp10909_34 #x0000000000000002))
(assert (= temp10909_35 temp10909_34))
(assert (= temp10909_36 (select ARGNAME_padding_NAMEEND_VAL temp10909_35)))
(assert (= temp10909_37 #x0000000000000000))
(assert (= temp10909_38 #x0000000000000003))
(assert (= temp10909_39 temp10909_38))
(assert (= temp10909_40 (select ARGNAME_padding_NAMEEND_VAL temp10909_39)))
(assert (= temp10909_41 #x0000000000000000))
(assert (= temp10909_42 #x0000000000000004))
(assert (= temp10909_43 temp10909_42))
(assert (= temp10909_44 (select ARGNAME_padding_NAMEEND_VAL temp10909_43)))
(assert (= temp10909_45 #x0000000000000000))
(assert (= temp10909_46 #x0000000000000005))
(assert (= temp10909_47 temp10909_46))
(assert (= temp10909_48 (select ARGNAME_padding_NAMEEND_VAL temp10909_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10909_28 temp10909_25)
             (bvslt temp10909_32 temp10909_29)
             (bvslt temp10909_36 temp10909_33)
             (bvslt temp10909_40 temp10909_37)
             (bvslt temp10909_44 temp10909_41)
             (bvslt temp10909_48 temp10909_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10909_49 #x0000000000000000))
(assert (= var1191714 temp10909_49))
(assert (= temp10909_50 #x0000000000000000))
(assert (= temp10909_51 temp10909_50))
(assert (= temp10909_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10909_51)))
(assert (= temp10909_53 #x0000000000000001))
(assert (= temp10909_54 temp10909_53))
(assert (= temp10909_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10909_54)))
(assert (= temp10909_56 #x0000000000000002))
(assert (= temp10909_57 temp10909_56))
(assert (= temp10909_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10909_57)))
(assert (= temp10909_59 #x0000000000000003))
(assert (= temp10909_60 temp10909_59))
(assert (= temp10909_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10909_60)))
(assert (= temp10909_62 #x0000000000000004))
(assert (= temp10909_63 temp10909_62))
(assert (= temp10909_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10909_63)))
(assert (= temp10909_65 #x0000000000000005))
(assert (= temp10909_66 temp10909_65))
(assert (= temp10909_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10909_66)))
(assert (= temp10909_68 #x0000000000000000))
(assert (= temp10909_69 #x0000000000000000))
(assert (= temp10909_70 temp10909_69))
(assert (= temp10909_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10909_70)))
(assert (= temp10909_72 #x0000000000000000))
(assert (= temp10909_73 #x0000000000000001))
(assert (= temp10909_74 temp10909_73))
(assert (= temp10909_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10909_74)))
(assert (= temp10909_76 #x0000000000000000))
(assert (= temp10909_77 #x0000000000000002))
(assert (= temp10909_78 temp10909_77))
(assert (= temp10909_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10909_78)))
(assert (= temp10909_80 #x0000000000000000))
(assert (= temp10909_81 #x0000000000000003))
(assert (= temp10909_82 temp10909_81))
(assert (= temp10909_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10909_82)))
(assert (= temp10909_84 #x0000000000000000))
(assert (= temp10909_85 #x0000000000000004))
(assert (= temp10909_86 temp10909_85))
(assert (= temp10909_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10909_86)))
(assert (= temp10909_88 #x0000000000000000))
(assert (= temp10909_89 #x0000000000000005))
(assert (= temp10909_90 temp10909_89))
(assert (= temp10909_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10909_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10909_71 temp10909_68)
             (bvslt temp10909_75 temp10909_72)
             (bvslt temp10909_79 temp10909_76)
             (bvslt temp10909_83 temp10909_80)
             (bvslt temp10909_87 temp10909_84)
             (bvslt temp10909_91 temp10909_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10909_92 #x0000000000000000))
(assert (= var1191725 temp10909_92))
(assert (= temp10909_93 #x0000000000000000))
(assert (= temp10909_94 temp10909_93))
(assert (= temp10909_95 (select ARGNAME_stride_NAMEEND_VAL temp10909_94)))
(assert (= temp10909_96 #x0000000000000001))
(assert (= temp10909_97 temp10909_96))
(assert (= temp10909_98 (select ARGNAME_stride_NAMEEND_VAL temp10909_97)))
(assert (= temp10909_99 #x0000000000000002))
(assert (= temp10909_100 temp10909_99))
(assert (= temp10909_101 (select ARGNAME_stride_NAMEEND_VAL temp10909_100)))
(assert (= temp10909_102 #x0000000000000003))
(assert (= temp10909_103 temp10909_102))
(assert (= temp10909_104 (select ARGNAME_stride_NAMEEND_VAL temp10909_103)))
(assert (= temp10909_105 #x0000000000000004))
(assert (= temp10909_106 temp10909_105))
(assert (= temp10909_107 (select ARGNAME_stride_NAMEEND_VAL temp10909_106)))
(assert (= temp10909_108 #x0000000000000005))
(assert (= temp10909_109 temp10909_108))
(assert (= temp10909_110 (select ARGNAME_stride_NAMEEND_VAL temp10909_109)))
(assert (= temp10909_111 #x0000000000000000))
(assert (= temp10909_112 #x0000000000000000))
(assert (= temp10909_113 temp10909_112))
(assert (= temp10909_114 (select ARGNAME_stride_NAMEEND_VAL temp10909_113)))
(assert (= temp10909_115 #x0000000000000000))
(assert (= temp10909_116 #x0000000000000001))
(assert (= temp10909_117 temp10909_116))
(assert (= temp10909_118 (select ARGNAME_stride_NAMEEND_VAL temp10909_117)))
(assert (= temp10909_119 #x0000000000000000))
(assert (= temp10909_120 #x0000000000000002))
(assert (= temp10909_121 temp10909_120))
(assert (= temp10909_122 (select ARGNAME_stride_NAMEEND_VAL temp10909_121)))
(assert (= temp10909_123 #x0000000000000000))
(assert (= temp10909_124 #x0000000000000003))
(assert (= temp10909_125 temp10909_124))
(assert (= temp10909_126 (select ARGNAME_stride_NAMEEND_VAL temp10909_125)))
(assert (= temp10909_127 #x0000000000000000))
(assert (= temp10909_128 #x0000000000000004))
(assert (= temp10909_129 temp10909_128))
(assert (= temp10909_130 (select ARGNAME_stride_NAMEEND_VAL temp10909_129)))
(assert (= temp10909_131 #x0000000000000000))
(assert (= temp10909_132 #x0000000000000005))
(assert (= temp10909_133 temp10909_132))
(assert (= temp10909_134 (select ARGNAME_stride_NAMEEND_VAL temp10909_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10909_114 temp10909_111)
             (bvsle temp10909_118 temp10909_115)
             (bvsle temp10909_122 temp10909_119)
             (bvsle temp10909_126 temp10909_123)
             (bvsle temp10909_130 temp10909_127)
             (bvsle temp10909_134 temp10909_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10909_135 #x0000000000000000))
(assert (= var1191735 temp10909_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10909_136 #x0000000000000001))
(assert (= var1191747 temp10909_136))
(assert (= temp10909_137 #x0000000000000000))
(assert (= var1179826 temp10909_137))
(assert (= temp10909_138 #x0000000000000000))
(assert (= temp10909_139 temp10909_138))
(assert (= temp10909_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10909_139)))
(assert (= temp10909_141 #x0000000000000001))
(assert (= temp10909_142 temp10909_141))
(assert (= temp10909_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10909_142)))
(assert (= temp10909_144 #x0000000000000002))
(assert (= temp10909_145 temp10909_144))
(assert (= temp10909_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10909_145)))
(assert (= temp10909_147 #x0000000000000003))
(assert (= temp10909_148 temp10909_147))
(assert (= temp10909_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10909_148)))
(assert (= temp10909_150 #x0000000000000004))
(assert (= temp10909_151 temp10909_150))
(assert (= temp10909_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10909_151)))
(assert (= temp10909_153 #x0000000000000005))
(assert (= temp10909_154 temp10909_153))
(assert (= temp10909_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10909_154)))
(assert (= temp10909_157 var1179826))
(assert (= temp10909_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10909_157)))
(assert (= temp10909_156 temp10909_158))
(assert (= var1191780
   (ite (bvslt temp10909_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10909_159 #x0000000000000000))
(assert (= var1191780 temp10909_159))
(assert (= temp10909_160 #x0000000000000000))
(assert (= var1179826 temp10909_160))
(assert (= temp10909_162 var1179826))
(assert (= temp10909_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10909_162)))
(assert (= temp10909_161 temp10909_163))
(assert (= var1191802 (bvsmod temp10909_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10909_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10909_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10909_165 #x0000000000000001))
(assert (= var1191803 temp10909_165))
(assert (= temp10909_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10909_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10909_167 #x0000000000000001))
(assert (= var1191823 temp10909_167))
(assert (= temp10909_168 #x0000000000000001))
(assert (= var1180714 temp10909_168))
(assert (= temp10909_169 #x0000000000000000))
(assert (= temp10909_170 temp10909_169))
(assert (= temp10909_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10909_170)))
(assert (= temp10909_172 #x0000000000000001))
(assert (= temp10909_173 temp10909_172))
(assert (= temp10909_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10909_173)))
(assert (= temp10909_175 #x0000000000000002))
(assert (= temp10909_176 temp10909_175))
(assert (= temp10909_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10909_176)))
(assert (= temp10909_178 #x0000000000000003))
(assert (= temp10909_179 temp10909_178))
(assert (= temp10909_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10909_179)))
(assert (= temp10909_181 #x0000000000000004))
(assert (= temp10909_182 temp10909_181))
(assert (= temp10909_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10909_182)))
(assert (= temp10909_184 #x0000000000000005))
(assert (= temp10909_185 temp10909_184))
(assert (= temp10909_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10909_185)))
(assert (= temp10909_187 #x0000000000000000))
(assert (= temp10909_188
   (ite (bvslt var1180714 temp10909_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10909_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10909_188)))
(assert (= var1191831 temp10909_189))
(assert (bvslt (ite (bvslt var1180714 temp10909_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10909_190 #x0000000000000001))
(assert (= var1180714 temp10909_190))
(assert (= temp10909_192 var1180714))
(assert (= temp10909_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10909_192)))
(assert (= temp10909_191 temp10909_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10909_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10909_194 #x0000000000000001))
(assert (= var1191836 temp10909_194))
(assert (= temp10909_195 #x0000000000000000))
(assert (= var1179826 temp10909_195))
(assert (= temp10909_197 var1179826))
(assert (= temp10909_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10909_197)))
(assert (= temp10909_196 temp10909_198))
(assert (= temp10909_199 #x0000000000000002))
(assert (= var1586025 temp10909_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10909_200 #x0000000000000001))
(assert (= var1191993 temp10909_200))
(assert (= temp10909_201 #x0000000000000001))
(assert (= var2700303 temp10909_201))
(assert (= temp10909_202 #x0000000000000001))
(assert (= var2962447 temp10909_202))
(assert (= temp10909_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10909_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10909_204 #x0000000000000001))
(assert (= var211058 temp10909_204))
(assert (= temp10909_205 #x0000000000000001))
(assert (= var211188 temp10909_205))
(assert (= var3879401 var211188))
(assert (= temp10909_206 #x0000000000000000))
(assert (= var3866802 temp10909_206))
(assert (= temp10909_207 #x0000000000000000))
(assert (= temp10909_208
   (ite (bvslt var3866802 temp10909_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10909_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10909_208)))
(assert (= var3879420 temp10909_209))
(assert (bvslt (ite (bvslt var3866802 temp10909_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10909_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10909_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10909_211 #x0000000000000000))
(assert (= var3879421 temp10909_211))
(assert (= temp10909_212 #x0000000000000001))
(assert (= var3867690 temp10909_212))
(assert (= temp10909_213 #x0000000000000000))
(assert (= temp10909_214
   (ite (bvslt var3867690 temp10909_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10909_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10909_214)))
(assert (= var3879423 temp10909_215))
(assert (bvslt (ite (bvslt var3867690 temp10909_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10909_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10909_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10909_217 #x0000000000000001))
(assert (= var3879424 temp10909_217))
(assert (= temp10909_218 #x0000000000000000))
(assert (= var4133117 temp10909_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10909_219 #x0000000000000002))
(assert (= var4339331 temp10909_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10909_220 #x0000000000000000))
(assert (= var4404892 temp10909_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var5255568 var211201))
(assert (= var5517712 var211201))
(assert (= temp10909_221 #x0000000000000001))
(assert (= var211058 temp10909_221))
(model-add temp10909_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10909_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10909_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10909_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






