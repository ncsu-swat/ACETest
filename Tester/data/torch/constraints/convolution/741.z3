(declare-fun temp988_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp988_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp988_3 () (_ BitVec 64))
(declare-fun temp988_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp988_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp988_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp988_7 () (_ BitVec 64))
(declare-fun temp988_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp988_9 () (_ BitVec 64))
(declare-fun temp988_10 () (_ BitVec 64))
(declare-fun temp988_11 () (_ BitVec 64))
(declare-fun temp988_12 () (_ BitVec 64))
(declare-fun temp988_13 () (_ BitVec 64))
(declare-fun temp988_14 () (_ BitVec 64))
(declare-fun temp988_15 () (_ BitVec 64))
(declare-fun temp988_16 () (_ BitVec 64))
(declare-fun temp988_17 () (_ BitVec 64))
(declare-fun temp988_18 () (_ BitVec 64))
(declare-fun temp988_19 () (_ BitVec 64))
(declare-fun temp988_20 () (_ BitVec 64))
(declare-fun temp988_21 () (_ BitVec 64))
(declare-fun temp988_22 () (_ BitVec 64))
(declare-fun temp988_23 () (_ BitVec 64))
(declare-fun temp988_24 () (_ BitVec 64))
(declare-fun temp988_25 () (_ BitVec 64))
(declare-fun temp988_26 () (_ BitVec 64))
(declare-fun temp988_27 () (_ BitVec 64))
(declare-fun temp988_28 () (_ BitVec 64))
(declare-fun temp988_29 () (_ BitVec 64))
(declare-fun temp988_30 () (_ BitVec 64))
(declare-fun temp988_31 () (_ BitVec 64))
(declare-fun temp988_32 () (_ BitVec 64))
(declare-fun temp988_33 () (_ BitVec 64))
(declare-fun temp988_34 () (_ BitVec 64))
(declare-fun temp988_35 () (_ BitVec 64))
(declare-fun temp988_36 () (_ BitVec 64))
(declare-fun temp988_37 () (_ BitVec 64))
(declare-fun temp988_38 () (_ BitVec 64))
(declare-fun temp988_39 () (_ BitVec 64))
(declare-fun temp988_40 () (_ BitVec 64))
(declare-fun temp988_41 () (_ BitVec 64))
(declare-fun temp988_42 () (_ BitVec 64))
(declare-fun temp988_43 () (_ BitVec 64))
(declare-fun temp988_44 () (_ BitVec 64))
(declare-fun temp988_45 () (_ BitVec 64))
(declare-fun temp988_46 () (_ BitVec 64))
(declare-fun temp988_47 () (_ BitVec 64))
(declare-fun temp988_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp988_49 () (_ BitVec 64))
(declare-fun temp988_50 () (_ BitVec 64))
(declare-fun temp988_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp988_52 () (_ BitVec 64))
(declare-fun temp988_53 () (_ BitVec 64))
(declare-fun temp988_54 () (_ BitVec 64))
(declare-fun temp988_55 () (_ BitVec 64))
(declare-fun temp988_56 () (_ BitVec 64))
(declare-fun temp988_57 () (_ BitVec 64))
(declare-fun temp988_58 () (_ BitVec 64))
(declare-fun temp988_59 () (_ BitVec 64))
(declare-fun temp988_60 () (_ BitVec 64))
(declare-fun temp988_61 () (_ BitVec 64))
(declare-fun temp988_62 () (_ BitVec 64))
(declare-fun temp988_63 () (_ BitVec 64))
(declare-fun temp988_64 () (_ BitVec 64))
(declare-fun temp988_65 () (_ BitVec 64))
(declare-fun temp988_66 () (_ BitVec 64))
(declare-fun temp988_67 () (_ BitVec 64))
(declare-fun temp988_68 () (_ BitVec 64))
(declare-fun temp988_69 () (_ BitVec 64))
(declare-fun temp988_70 () (_ BitVec 64))
(declare-fun temp988_71 () (_ BitVec 64))
(declare-fun temp988_72 () (_ BitVec 64))
(declare-fun temp988_73 () (_ BitVec 64))
(declare-fun temp988_74 () (_ BitVec 64))
(declare-fun temp988_75 () (_ BitVec 64))
(declare-fun temp988_76 () (_ BitVec 64))
(declare-fun temp988_77 () (_ BitVec 64))
(declare-fun temp988_78 () (_ BitVec 64))
(declare-fun temp988_79 () (_ BitVec 64))
(declare-fun temp988_80 () (_ BitVec 64))
(declare-fun temp988_81 () (_ BitVec 64))
(declare-fun temp988_82 () (_ BitVec 64))
(declare-fun temp988_83 () (_ BitVec 64))
(declare-fun temp988_84 () (_ BitVec 64))
(declare-fun temp988_85 () (_ BitVec 64))
(declare-fun temp988_86 () (_ BitVec 64))
(declare-fun temp988_87 () (_ BitVec 64))
(declare-fun temp988_88 () (_ BitVec 64))
(declare-fun temp988_89 () (_ BitVec 64))
(declare-fun temp988_90 () (_ BitVec 64))
(declare-fun temp988_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp988_92 () (_ BitVec 64))
(declare-fun temp988_93 () (_ BitVec 64))
(declare-fun temp988_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp988_95 () (_ BitVec 64))
(declare-fun temp988_96 () (_ BitVec 64))
(declare-fun temp988_97 () (_ BitVec 64))
(declare-fun temp988_98 () (_ BitVec 64))
(declare-fun temp988_99 () (_ BitVec 64))
(declare-fun temp988_100 () (_ BitVec 64))
(declare-fun temp988_101 () (_ BitVec 64))
(declare-fun temp988_102 () (_ BitVec 64))
(declare-fun temp988_103 () (_ BitVec 64))
(declare-fun temp988_104 () (_ BitVec 64))
(declare-fun temp988_105 () (_ BitVec 64))
(declare-fun temp988_106 () (_ BitVec 64))
(declare-fun temp988_107 () (_ BitVec 64))
(declare-fun temp988_108 () (_ BitVec 64))
(declare-fun temp988_109 () (_ BitVec 64))
(declare-fun temp988_110 () (_ BitVec 64))
(declare-fun temp988_111 () (_ BitVec 64))
(declare-fun temp988_112 () (_ BitVec 64))
(declare-fun temp988_113 () (_ BitVec 64))
(declare-fun temp988_114 () (_ BitVec 64))
(declare-fun temp988_115 () (_ BitVec 64))
(declare-fun temp988_116 () (_ BitVec 64))
(declare-fun temp988_117 () (_ BitVec 64))
(declare-fun temp988_118 () (_ BitVec 64))
(declare-fun temp988_119 () (_ BitVec 64))
(declare-fun temp988_120 () (_ BitVec 64))
(declare-fun temp988_121 () (_ BitVec 64))
(declare-fun temp988_122 () (_ BitVec 64))
(declare-fun temp988_123 () (_ BitVec 64))
(declare-fun temp988_124 () (_ BitVec 64))
(declare-fun temp988_125 () (_ BitVec 64))
(declare-fun temp988_126 () (_ BitVec 64))
(declare-fun temp988_127 () (_ BitVec 64))
(declare-fun temp988_128 () (_ BitVec 64))
(declare-fun temp988_129 () (_ BitVec 64))
(declare-fun temp988_130 () (_ BitVec 64))
(declare-fun temp988_131 () (_ BitVec 64))
(declare-fun temp988_132 () (_ BitVec 64))
(declare-fun temp988_133 () (_ BitVec 64))
(declare-fun temp988_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp988_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp988_136 () (_ BitVec 64))
(declare-fun temp988_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp988_138 () (_ BitVec 64))
(declare-fun temp988_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp988_140 () (_ BitVec 64))
(declare-fun temp988_141 () (_ BitVec 64))
(declare-fun temp988_142 () (_ BitVec 64))
(declare-fun temp988_143 () (_ BitVec 64))
(declare-fun temp988_144 () (_ BitVec 64))
(declare-fun temp988_145 () (_ BitVec 64))
(declare-fun temp988_146 () (_ BitVec 64))
(declare-fun temp988_147 () (_ BitVec 64))
(declare-fun temp988_148 () (_ BitVec 64))
(declare-fun temp988_149 () (_ BitVec 64))
(declare-fun temp988_150 () (_ BitVec 64))
(declare-fun temp988_151 () (_ BitVec 64))
(declare-fun temp988_152 () (_ BitVec 64))
(declare-fun temp988_153 () (_ BitVec 64))
(declare-fun temp988_154 () (_ BitVec 64))
(declare-fun temp988_155 () (_ BitVec 64))
(declare-fun temp988_157 () (_ BitVec 64))
(declare-fun temp988_158 () (_ BitVec 64))
(declare-fun temp988_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp988_159 () (_ BitVec 64))
(declare-fun temp988_160 () (_ BitVec 64))
(declare-fun temp988_162 () (_ BitVec 64))
(declare-fun temp988_163 () (_ BitVec 64))
(declare-fun temp988_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp988_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp988_165 () (_ BitVec 64))
(declare-fun temp988_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp988_167 () (_ BitVec 64))
(declare-fun temp988_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp988_169 () (_ BitVec 64))
(declare-fun temp988_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp988_171 () (_ BitVec 64))
(declare-fun temp988_172 () (_ BitVec 64))
(declare-fun temp988_173 () (_ BitVec 64))
(declare-fun temp988_174 () (_ BitVec 64))
(declare-fun temp988_175 () (_ BitVec 64))
(declare-fun temp988_176 () (_ BitVec 64))
(declare-fun temp988_177 () (_ BitVec 64))
(declare-fun temp988_178 () (_ BitVec 64))
(declare-fun temp988_179 () (_ BitVec 64))
(declare-fun temp988_180 () (_ BitVec 64))
(declare-fun temp988_181 () (_ BitVec 64))
(declare-fun temp988_182 () (_ BitVec 64))
(declare-fun temp988_183 () (_ BitVec 64))
(declare-fun temp988_184 () (_ BitVec 64))
(declare-fun temp988_185 () (_ BitVec 64))
(declare-fun temp988_186 () (_ BitVec 64))
(declare-fun temp988_187 () (_ BitVec 64))
(declare-fun temp988_188 () (_ BitVec 64))
(declare-fun temp988_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp988_190 () (_ BitVec 64))
(declare-fun temp988_192 () (_ BitVec 64))
(declare-fun temp988_193 () (_ BitVec 64))
(declare-fun temp988_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp988_194 () (_ BitVec 64))
(declare-fun temp988_195 () (_ BitVec 64))
(declare-fun temp988_197 () (_ BitVec 64))
(declare-fun temp988_198 () (_ BitVec 64))
(declare-fun temp988_196 () (_ BitVec 64))
(declare-fun temp988_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp988_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp988_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp988_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp988_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp988_204 () (_ BitVec 64))
(declare-fun temp988_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp988_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp988_207 () (_ BitVec 64))
(declare-fun temp988_208 () (_ BitVec 64))
(declare-fun temp988_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp988_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp988_211 () (_ BitVec 64))
(declare-fun temp988_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp988_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp988_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp988_215 () (_ BitVec 64))
(declare-fun temp988_216 () (_ BitVec 64))
(declare-fun var6304532 () (_ BitVec 64))
(declare-fun var6304499 () (_ BitVec 64))
(declare-fun var6173063 () (_ BitVec 64))
(declare-fun var6173059 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp988_217 () (_ BitVec 64))
(assert (= temp988_1 #x0000000000000001))
(assert (= var77203 temp988_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp988_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp988_2)))
(assert (= temp988_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp988_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp988_4 #x0000000000000000))
(assert (= var210941 temp988_4))
(assert (= temp988_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp988_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp988_6 #x0000000000000000))
(assert (= var210986 temp988_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp988_7 #x0000000000000000))
(assert (= temp988_8 temp988_7))
(assert (= temp988_9 (select ARGNAME_padding_NAMEEND_VAL temp988_8)))
(assert (= temp988_10 #x0000000000000001))
(assert (= temp988_11 temp988_10))
(assert (= temp988_12 (select ARGNAME_padding_NAMEEND_VAL temp988_11)))
(assert (= temp988_13 #x0000000000000002))
(assert (= temp988_14 temp988_13))
(assert (= temp988_15 (select ARGNAME_padding_NAMEEND_VAL temp988_14)))
(assert (= temp988_16 #x0000000000000003))
(assert (= temp988_17 temp988_16))
(assert (= temp988_18 (select ARGNAME_padding_NAMEEND_VAL temp988_17)))
(assert (= temp988_19 #x0000000000000004))
(assert (= temp988_20 temp988_19))
(assert (= temp988_21 (select ARGNAME_padding_NAMEEND_VAL temp988_20)))
(assert (= temp988_22 #x0000000000000005))
(assert (= temp988_23 temp988_22))
(assert (= temp988_24 (select ARGNAME_padding_NAMEEND_VAL temp988_23)))
(assert (= temp988_25 #x0000000000000000))
(assert (= temp988_26 #x0000000000000000))
(assert (= temp988_27 temp988_26))
(assert (= temp988_28 (select ARGNAME_padding_NAMEEND_VAL temp988_27)))
(assert (= temp988_29 #x0000000000000000))
(assert (= temp988_30 #x0000000000000001))
(assert (= temp988_31 temp988_30))
(assert (= temp988_32 (select ARGNAME_padding_NAMEEND_VAL temp988_31)))
(assert (= temp988_33 #x0000000000000000))
(assert (= temp988_34 #x0000000000000002))
(assert (= temp988_35 temp988_34))
(assert (= temp988_36 (select ARGNAME_padding_NAMEEND_VAL temp988_35)))
(assert (= temp988_37 #x0000000000000000))
(assert (= temp988_38 #x0000000000000003))
(assert (= temp988_39 temp988_38))
(assert (= temp988_40 (select ARGNAME_padding_NAMEEND_VAL temp988_39)))
(assert (= temp988_41 #x0000000000000000))
(assert (= temp988_42 #x0000000000000004))
(assert (= temp988_43 temp988_42))
(assert (= temp988_44 (select ARGNAME_padding_NAMEEND_VAL temp988_43)))
(assert (= temp988_45 #x0000000000000000))
(assert (= temp988_46 #x0000000000000005))
(assert (= temp988_47 temp988_46))
(assert (= temp988_48 (select ARGNAME_padding_NAMEEND_VAL temp988_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp988_28 temp988_25)
             (bvslt temp988_32 temp988_29)
             (bvslt temp988_36 temp988_33)
             (bvslt temp988_40 temp988_37)
             (bvslt temp988_44 temp988_41)
             (bvslt temp988_48 temp988_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp988_49 #x0000000000000000))
(assert (= var1191714 temp988_49))
(assert (= temp988_50 #x0000000000000000))
(assert (= temp988_51 temp988_50))
(assert (= temp988_52 (select ARGNAME_output_padding_NAMEEND_VAL temp988_51)))
(assert (= temp988_53 #x0000000000000001))
(assert (= temp988_54 temp988_53))
(assert (= temp988_55 (select ARGNAME_output_padding_NAMEEND_VAL temp988_54)))
(assert (= temp988_56 #x0000000000000002))
(assert (= temp988_57 temp988_56))
(assert (= temp988_58 (select ARGNAME_output_padding_NAMEEND_VAL temp988_57)))
(assert (= temp988_59 #x0000000000000003))
(assert (= temp988_60 temp988_59))
(assert (= temp988_61 (select ARGNAME_output_padding_NAMEEND_VAL temp988_60)))
(assert (= temp988_62 #x0000000000000004))
(assert (= temp988_63 temp988_62))
(assert (= temp988_64 (select ARGNAME_output_padding_NAMEEND_VAL temp988_63)))
(assert (= temp988_65 #x0000000000000005))
(assert (= temp988_66 temp988_65))
(assert (= temp988_67 (select ARGNAME_output_padding_NAMEEND_VAL temp988_66)))
(assert (= temp988_68 #x0000000000000000))
(assert (= temp988_69 #x0000000000000000))
(assert (= temp988_70 temp988_69))
(assert (= temp988_71 (select ARGNAME_output_padding_NAMEEND_VAL temp988_70)))
(assert (= temp988_72 #x0000000000000000))
(assert (= temp988_73 #x0000000000000001))
(assert (= temp988_74 temp988_73))
(assert (= temp988_75 (select ARGNAME_output_padding_NAMEEND_VAL temp988_74)))
(assert (= temp988_76 #x0000000000000000))
(assert (= temp988_77 #x0000000000000002))
(assert (= temp988_78 temp988_77))
(assert (= temp988_79 (select ARGNAME_output_padding_NAMEEND_VAL temp988_78)))
(assert (= temp988_80 #x0000000000000000))
(assert (= temp988_81 #x0000000000000003))
(assert (= temp988_82 temp988_81))
(assert (= temp988_83 (select ARGNAME_output_padding_NAMEEND_VAL temp988_82)))
(assert (= temp988_84 #x0000000000000000))
(assert (= temp988_85 #x0000000000000004))
(assert (= temp988_86 temp988_85))
(assert (= temp988_87 (select ARGNAME_output_padding_NAMEEND_VAL temp988_86)))
(assert (= temp988_88 #x0000000000000000))
(assert (= temp988_89 #x0000000000000005))
(assert (= temp988_90 temp988_89))
(assert (= temp988_91 (select ARGNAME_output_padding_NAMEEND_VAL temp988_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp988_71 temp988_68)
             (bvslt temp988_75 temp988_72)
             (bvslt temp988_79 temp988_76)
             (bvslt temp988_83 temp988_80)
             (bvslt temp988_87 temp988_84)
             (bvslt temp988_91 temp988_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp988_92 #x0000000000000000))
(assert (= var1191725 temp988_92))
(assert (= temp988_93 #x0000000000000000))
(assert (= temp988_94 temp988_93))
(assert (= temp988_95 (select ARGNAME_stride_NAMEEND_VAL temp988_94)))
(assert (= temp988_96 #x0000000000000001))
(assert (= temp988_97 temp988_96))
(assert (= temp988_98 (select ARGNAME_stride_NAMEEND_VAL temp988_97)))
(assert (= temp988_99 #x0000000000000002))
(assert (= temp988_100 temp988_99))
(assert (= temp988_101 (select ARGNAME_stride_NAMEEND_VAL temp988_100)))
(assert (= temp988_102 #x0000000000000003))
(assert (= temp988_103 temp988_102))
(assert (= temp988_104 (select ARGNAME_stride_NAMEEND_VAL temp988_103)))
(assert (= temp988_105 #x0000000000000004))
(assert (= temp988_106 temp988_105))
(assert (= temp988_107 (select ARGNAME_stride_NAMEEND_VAL temp988_106)))
(assert (= temp988_108 #x0000000000000005))
(assert (= temp988_109 temp988_108))
(assert (= temp988_110 (select ARGNAME_stride_NAMEEND_VAL temp988_109)))
(assert (= temp988_111 #x0000000000000000))
(assert (= temp988_112 #x0000000000000000))
(assert (= temp988_113 temp988_112))
(assert (= temp988_114 (select ARGNAME_stride_NAMEEND_VAL temp988_113)))
(assert (= temp988_115 #x0000000000000000))
(assert (= temp988_116 #x0000000000000001))
(assert (= temp988_117 temp988_116))
(assert (= temp988_118 (select ARGNAME_stride_NAMEEND_VAL temp988_117)))
(assert (= temp988_119 #x0000000000000000))
(assert (= temp988_120 #x0000000000000002))
(assert (= temp988_121 temp988_120))
(assert (= temp988_122 (select ARGNAME_stride_NAMEEND_VAL temp988_121)))
(assert (= temp988_123 #x0000000000000000))
(assert (= temp988_124 #x0000000000000003))
(assert (= temp988_125 temp988_124))
(assert (= temp988_126 (select ARGNAME_stride_NAMEEND_VAL temp988_125)))
(assert (= temp988_127 #x0000000000000000))
(assert (= temp988_128 #x0000000000000004))
(assert (= temp988_129 temp988_128))
(assert (= temp988_130 (select ARGNAME_stride_NAMEEND_VAL temp988_129)))
(assert (= temp988_131 #x0000000000000000))
(assert (= temp988_132 #x0000000000000005))
(assert (= temp988_133 temp988_132))
(assert (= temp988_134 (select ARGNAME_stride_NAMEEND_VAL temp988_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp988_114 temp988_111)
             (bvsle temp988_118 temp988_115)
             (bvsle temp988_122 temp988_119)
             (bvsle temp988_126 temp988_123)
             (bvsle temp988_130 temp988_127)
             (bvsle temp988_134 temp988_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp988_135 #x0000000000000000))
(assert (= var1191735 temp988_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp988_136 #x0000000000000001))
(assert (= var1191747 temp988_136))
(assert (= temp988_137 #x0000000000000000))
(assert (= var1179826 temp988_137))
(assert (= temp988_138 #x0000000000000000))
(assert (= temp988_139 temp988_138))
(assert (= temp988_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp988_139)))
(assert (= temp988_141 #x0000000000000001))
(assert (= temp988_142 temp988_141))
(assert (= temp988_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp988_142)))
(assert (= temp988_144 #x0000000000000002))
(assert (= temp988_145 temp988_144))
(assert (= temp988_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp988_145)))
(assert (= temp988_147 #x0000000000000003))
(assert (= temp988_148 temp988_147))
(assert (= temp988_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp988_148)))
(assert (= temp988_150 #x0000000000000004))
(assert (= temp988_151 temp988_150))
(assert (= temp988_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp988_151)))
(assert (= temp988_153 #x0000000000000005))
(assert (= temp988_154 temp988_153))
(assert (= temp988_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp988_154)))
(assert (= temp988_157 var1179826))
(assert (= temp988_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp988_157)))
(assert (= temp988_156 temp988_158))
(assert (= var1191780
   (ite (bvslt temp988_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp988_159 #x0000000000000000))
(assert (= var1191780 temp988_159))
(assert (= temp988_160 #x0000000000000000))
(assert (= var1179826 temp988_160))
(assert (= temp988_162 var1179826))
(assert (= temp988_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp988_162)))
(assert (= temp988_161 temp988_163))
(assert (= var1191802 (bvsmod temp988_161 ARGNAME_groups_NAMEEND)))
(assert (= temp988_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp988_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp988_165 #x0000000000000001))
(assert (= var1191803 temp988_165))
(assert (= temp988_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp988_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp988_167 #x0000000000000001))
(assert (= var1191823 temp988_167))
(assert (= temp988_168 #x0000000000000001))
(assert (= var1180714 temp988_168))
(assert (= temp988_169 #x0000000000000000))
(assert (= temp988_170 temp988_169))
(assert (= temp988_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp988_170)))
(assert (= temp988_172 #x0000000000000001))
(assert (= temp988_173 temp988_172))
(assert (= temp988_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp988_173)))
(assert (= temp988_175 #x0000000000000002))
(assert (= temp988_176 temp988_175))
(assert (= temp988_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp988_176)))
(assert (= temp988_178 #x0000000000000003))
(assert (= temp988_179 temp988_178))
(assert (= temp988_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp988_179)))
(assert (= temp988_181 #x0000000000000004))
(assert (= temp988_182 temp988_181))
(assert (= temp988_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp988_182)))
(assert (= temp988_184 #x0000000000000005))
(assert (= temp988_185 temp988_184))
(assert (= temp988_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp988_185)))
(assert (= temp988_187 #x0000000000000000))
(assert (= temp988_188
   (ite (bvslt var1180714 temp988_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp988_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp988_188)))
(assert (= var1191831 temp988_189))
(assert (bvslt (ite (bvslt var1180714 temp988_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp988_190 #x0000000000000001))
(assert (= var1180714 temp988_190))
(assert (= temp988_192 var1180714))
(assert (= temp988_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp988_192)))
(assert (= temp988_191 temp988_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp988_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp988_194 #x0000000000000001))
(assert (= var1191836 temp988_194))
(assert (= temp988_195 #x0000000000000000))
(assert (= var1179826 temp988_195))
(assert (= temp988_197 var1179826))
(assert (= temp988_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp988_197)))
(assert (= temp988_196 temp988_198))
(assert (= temp988_199 #x0000000000000002))
(assert (= var1586025 temp988_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp988_200 #x0000000000000001))
(assert (= var1191993 temp988_200))
(assert (= temp988_201 #x0000000000000001))
(assert (= var2700303 temp988_201))
(assert (= temp988_202 #x0000000000000001))
(assert (= var2962447 temp988_202))
(assert (= temp988_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp988_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp988_204 #x0000000000000001))
(assert (= var211058 temp988_204))
(assert (= temp988_205 #x0000000000000001))
(assert (= var211188 temp988_205))
(assert (= var3879401 var211188))
(assert (= temp988_206 #x0000000000000000))
(assert (= var3866802 temp988_206))
(assert (= temp988_207 #x0000000000000000))
(assert (= temp988_208
   (ite (bvslt var3866802 temp988_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp988_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp988_208)))
(assert (= var3879420 temp988_209))
(assert (bvslt (ite (bvslt var3866802 temp988_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp988_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp988_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp988_211 #x0000000000000001))
(assert (= var3879421 temp988_211))
(assert (= temp988_212 #x0000000000000000))
(assert (= var4079423 temp988_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp988_213 #x0000000000000002))
(assert (= var4208259 temp988_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp988_214 #x0000000000000000))
(assert (= var4273820 temp988_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp988_215 #x0000000000000001))
(assert (= var211058 temp988_215))
(assert (= temp988_216 #x0000000000000000))
(assert (= var6304532 temp988_216))
(assert (= var6304499 var6304532))
(assert (= var6173063 var6304499))
(assert (= var6173059 var6173063))
(assert (= var212669 var6173059))
(assert (= temp988_217 #x0000000000000000))
(assert (= var212669 temp988_217))
(model-add temp988_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp988_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp988_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp988_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





