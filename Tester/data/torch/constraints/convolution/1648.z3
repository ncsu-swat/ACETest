(declare-fun temp10992_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10992_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10992_3 () (_ BitVec 64))
(declare-fun temp10992_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10992_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10992_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10992_7 () (_ BitVec 64))
(declare-fun temp10992_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10992_9 () (_ BitVec 64))
(declare-fun temp10992_10 () (_ BitVec 64))
(declare-fun temp10992_11 () (_ BitVec 64))
(declare-fun temp10992_12 () (_ BitVec 64))
(declare-fun temp10992_13 () (_ BitVec 64))
(declare-fun temp10992_14 () (_ BitVec 64))
(declare-fun temp10992_15 () (_ BitVec 64))
(declare-fun temp10992_16 () (_ BitVec 64))
(declare-fun temp10992_17 () (_ BitVec 64))
(declare-fun temp10992_18 () (_ BitVec 64))
(declare-fun temp10992_19 () (_ BitVec 64))
(declare-fun temp10992_20 () (_ BitVec 64))
(declare-fun temp10992_21 () (_ BitVec 64))
(declare-fun temp10992_22 () (_ BitVec 64))
(declare-fun temp10992_23 () (_ BitVec 64))
(declare-fun temp10992_24 () (_ BitVec 64))
(declare-fun temp10992_25 () (_ BitVec 64))
(declare-fun temp10992_26 () (_ BitVec 64))
(declare-fun temp10992_27 () (_ BitVec 64))
(declare-fun temp10992_28 () (_ BitVec 64))
(declare-fun temp10992_29 () (_ BitVec 64))
(declare-fun temp10992_30 () (_ BitVec 64))
(declare-fun temp10992_31 () (_ BitVec 64))
(declare-fun temp10992_32 () (_ BitVec 64))
(declare-fun temp10992_33 () (_ BitVec 64))
(declare-fun temp10992_34 () (_ BitVec 64))
(declare-fun temp10992_35 () (_ BitVec 64))
(declare-fun temp10992_36 () (_ BitVec 64))
(declare-fun temp10992_37 () (_ BitVec 64))
(declare-fun temp10992_38 () (_ BitVec 64))
(declare-fun temp10992_39 () (_ BitVec 64))
(declare-fun temp10992_40 () (_ BitVec 64))
(declare-fun temp10992_41 () (_ BitVec 64))
(declare-fun temp10992_42 () (_ BitVec 64))
(declare-fun temp10992_43 () (_ BitVec 64))
(declare-fun temp10992_44 () (_ BitVec 64))
(declare-fun temp10992_45 () (_ BitVec 64))
(declare-fun temp10992_46 () (_ BitVec 64))
(declare-fun temp10992_47 () (_ BitVec 64))
(declare-fun temp10992_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10992_49 () (_ BitVec 64))
(declare-fun temp10992_50 () (_ BitVec 64))
(declare-fun temp10992_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10992_52 () (_ BitVec 64))
(declare-fun temp10992_53 () (_ BitVec 64))
(declare-fun temp10992_54 () (_ BitVec 64))
(declare-fun temp10992_55 () (_ BitVec 64))
(declare-fun temp10992_56 () (_ BitVec 64))
(declare-fun temp10992_57 () (_ BitVec 64))
(declare-fun temp10992_58 () (_ BitVec 64))
(declare-fun temp10992_59 () (_ BitVec 64))
(declare-fun temp10992_60 () (_ BitVec 64))
(declare-fun temp10992_61 () (_ BitVec 64))
(declare-fun temp10992_62 () (_ BitVec 64))
(declare-fun temp10992_63 () (_ BitVec 64))
(declare-fun temp10992_64 () (_ BitVec 64))
(declare-fun temp10992_65 () (_ BitVec 64))
(declare-fun temp10992_66 () (_ BitVec 64))
(declare-fun temp10992_67 () (_ BitVec 64))
(declare-fun temp10992_68 () (_ BitVec 64))
(declare-fun temp10992_69 () (_ BitVec 64))
(declare-fun temp10992_70 () (_ BitVec 64))
(declare-fun temp10992_71 () (_ BitVec 64))
(declare-fun temp10992_72 () (_ BitVec 64))
(declare-fun temp10992_73 () (_ BitVec 64))
(declare-fun temp10992_74 () (_ BitVec 64))
(declare-fun temp10992_75 () (_ BitVec 64))
(declare-fun temp10992_76 () (_ BitVec 64))
(declare-fun temp10992_77 () (_ BitVec 64))
(declare-fun temp10992_78 () (_ BitVec 64))
(declare-fun temp10992_79 () (_ BitVec 64))
(declare-fun temp10992_80 () (_ BitVec 64))
(declare-fun temp10992_81 () (_ BitVec 64))
(declare-fun temp10992_82 () (_ BitVec 64))
(declare-fun temp10992_83 () (_ BitVec 64))
(declare-fun temp10992_84 () (_ BitVec 64))
(declare-fun temp10992_85 () (_ BitVec 64))
(declare-fun temp10992_86 () (_ BitVec 64))
(declare-fun temp10992_87 () (_ BitVec 64))
(declare-fun temp10992_88 () (_ BitVec 64))
(declare-fun temp10992_89 () (_ BitVec 64))
(declare-fun temp10992_90 () (_ BitVec 64))
(declare-fun temp10992_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10992_92 () (_ BitVec 64))
(declare-fun temp10992_93 () (_ BitVec 64))
(declare-fun temp10992_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10992_95 () (_ BitVec 64))
(declare-fun temp10992_96 () (_ BitVec 64))
(declare-fun temp10992_97 () (_ BitVec 64))
(declare-fun temp10992_98 () (_ BitVec 64))
(declare-fun temp10992_99 () (_ BitVec 64))
(declare-fun temp10992_100 () (_ BitVec 64))
(declare-fun temp10992_101 () (_ BitVec 64))
(declare-fun temp10992_102 () (_ BitVec 64))
(declare-fun temp10992_103 () (_ BitVec 64))
(declare-fun temp10992_104 () (_ BitVec 64))
(declare-fun temp10992_105 () (_ BitVec 64))
(declare-fun temp10992_106 () (_ BitVec 64))
(declare-fun temp10992_107 () (_ BitVec 64))
(declare-fun temp10992_108 () (_ BitVec 64))
(declare-fun temp10992_109 () (_ BitVec 64))
(declare-fun temp10992_110 () (_ BitVec 64))
(declare-fun temp10992_111 () (_ BitVec 64))
(declare-fun temp10992_112 () (_ BitVec 64))
(declare-fun temp10992_113 () (_ BitVec 64))
(declare-fun temp10992_114 () (_ BitVec 64))
(declare-fun temp10992_115 () (_ BitVec 64))
(declare-fun temp10992_116 () (_ BitVec 64))
(declare-fun temp10992_117 () (_ BitVec 64))
(declare-fun temp10992_118 () (_ BitVec 64))
(declare-fun temp10992_119 () (_ BitVec 64))
(declare-fun temp10992_120 () (_ BitVec 64))
(declare-fun temp10992_121 () (_ BitVec 64))
(declare-fun temp10992_122 () (_ BitVec 64))
(declare-fun temp10992_123 () (_ BitVec 64))
(declare-fun temp10992_124 () (_ BitVec 64))
(declare-fun temp10992_125 () (_ BitVec 64))
(declare-fun temp10992_126 () (_ BitVec 64))
(declare-fun temp10992_127 () (_ BitVec 64))
(declare-fun temp10992_128 () (_ BitVec 64))
(declare-fun temp10992_129 () (_ BitVec 64))
(declare-fun temp10992_130 () (_ BitVec 64))
(declare-fun temp10992_131 () (_ BitVec 64))
(declare-fun temp10992_132 () (_ BitVec 64))
(declare-fun temp10992_133 () (_ BitVec 64))
(declare-fun temp10992_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10992_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10992_136 () (_ BitVec 64))
(declare-fun temp10992_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10992_138 () (_ BitVec 64))
(declare-fun temp10992_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10992_140 () (_ BitVec 64))
(declare-fun temp10992_141 () (_ BitVec 64))
(declare-fun temp10992_142 () (_ BitVec 64))
(declare-fun temp10992_143 () (_ BitVec 64))
(declare-fun temp10992_144 () (_ BitVec 64))
(declare-fun temp10992_145 () (_ BitVec 64))
(declare-fun temp10992_146 () (_ BitVec 64))
(declare-fun temp10992_147 () (_ BitVec 64))
(declare-fun temp10992_148 () (_ BitVec 64))
(declare-fun temp10992_149 () (_ BitVec 64))
(declare-fun temp10992_150 () (_ BitVec 64))
(declare-fun temp10992_151 () (_ BitVec 64))
(declare-fun temp10992_152 () (_ BitVec 64))
(declare-fun temp10992_153 () (_ BitVec 64))
(declare-fun temp10992_154 () (_ BitVec 64))
(declare-fun temp10992_155 () (_ BitVec 64))
(declare-fun temp10992_157 () (_ BitVec 64))
(declare-fun temp10992_158 () (_ BitVec 64))
(declare-fun temp10992_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10992_159 () (_ BitVec 64))
(declare-fun temp10992_160 () (_ BitVec 64))
(declare-fun temp10992_162 () (_ BitVec 64))
(declare-fun temp10992_163 () (_ BitVec 64))
(declare-fun temp10992_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10992_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10992_165 () (_ BitVec 64))
(declare-fun temp10992_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10992_167 () (_ BitVec 64))
(declare-fun temp10992_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10992_169 () (_ BitVec 64))
(declare-fun temp10992_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10992_171 () (_ BitVec 64))
(declare-fun temp10992_172 () (_ BitVec 64))
(declare-fun temp10992_173 () (_ BitVec 64))
(declare-fun temp10992_174 () (_ BitVec 64))
(declare-fun temp10992_175 () (_ BitVec 64))
(declare-fun temp10992_176 () (_ BitVec 64))
(declare-fun temp10992_177 () (_ BitVec 64))
(declare-fun temp10992_178 () (_ BitVec 64))
(declare-fun temp10992_179 () (_ BitVec 64))
(declare-fun temp10992_180 () (_ BitVec 64))
(declare-fun temp10992_181 () (_ BitVec 64))
(declare-fun temp10992_182 () (_ BitVec 64))
(declare-fun temp10992_183 () (_ BitVec 64))
(declare-fun temp10992_184 () (_ BitVec 64))
(declare-fun temp10992_185 () (_ BitVec 64))
(declare-fun temp10992_186 () (_ BitVec 64))
(declare-fun temp10992_187 () (_ BitVec 64))
(declare-fun temp10992_188 () (_ BitVec 64))
(declare-fun temp10992_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10992_190 () (_ BitVec 64))
(declare-fun temp10992_192 () (_ BitVec 64))
(declare-fun temp10992_193 () (_ BitVec 64))
(declare-fun temp10992_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10992_194 () (_ BitVec 64))
(declare-fun temp10992_195 () (_ BitVec 64))
(declare-fun temp10992_197 () (_ BitVec 64))
(declare-fun temp10992_198 () (_ BitVec 64))
(declare-fun temp10992_196 () (_ BitVec 64))
(declare-fun temp10992_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10992_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10992_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10992_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10992_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10992_204 () (_ BitVec 64))
(declare-fun temp10992_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10992_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10992_207 () (_ BitVec 64))
(declare-fun temp10992_208 () (_ BitVec 64))
(declare-fun temp10992_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10992_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10992_211 () (_ BitVec 64))
(declare-fun temp10992_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10992_213 () (_ BitVec 64))
(declare-fun temp10992_214 () (_ BitVec 64))
(declare-fun temp10992_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10992_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10992_217 () (_ BitVec 64))
(declare-fun temp10992_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10992_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10992_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var4600208 () (_ BitVec 64))
(declare-fun var4862352 () (_ BitVec 64))
(declare-fun temp10992_221 () (_ BitVec 64))
(declare-fun var212414 () (_ BitVec 64))
(declare-fun temp10992_222 () (_ BitVec 64))
(declare-fun temp10992_223 () (_ BitVec 64))
(declare-fun var5191299 () (_ BitVec 64))
(declare-fun var5191301 () (_ BitVec 64))
(declare-fun var5256844 () (_ BitVec 64))
(declare-fun var5256845 () (_ BitVec 64))
(declare-fun temp10992_224 () (_ BitVec 64))
(assert (= temp10992_1 #x0000000000000001))
(assert (= var77203 temp10992_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10992_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10992_2)))
(assert (= temp10992_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10992_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10992_4 #x0000000000000000))
(assert (= var210941 temp10992_4))
(assert (= temp10992_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10992_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10992_6 #x0000000000000000))
(assert (= var210986 temp10992_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10992_7 #x0000000000000000))
(assert (= temp10992_8 temp10992_7))
(assert (= temp10992_9 (select ARGNAME_padding_NAMEEND_VAL temp10992_8)))
(assert (= temp10992_10 #x0000000000000001))
(assert (= temp10992_11 temp10992_10))
(assert (= temp10992_12 (select ARGNAME_padding_NAMEEND_VAL temp10992_11)))
(assert (= temp10992_13 #x0000000000000002))
(assert (= temp10992_14 temp10992_13))
(assert (= temp10992_15 (select ARGNAME_padding_NAMEEND_VAL temp10992_14)))
(assert (= temp10992_16 #x0000000000000003))
(assert (= temp10992_17 temp10992_16))
(assert (= temp10992_18 (select ARGNAME_padding_NAMEEND_VAL temp10992_17)))
(assert (= temp10992_19 #x0000000000000004))
(assert (= temp10992_20 temp10992_19))
(assert (= temp10992_21 (select ARGNAME_padding_NAMEEND_VAL temp10992_20)))
(assert (= temp10992_22 #x0000000000000005))
(assert (= temp10992_23 temp10992_22))
(assert (= temp10992_24 (select ARGNAME_padding_NAMEEND_VAL temp10992_23)))
(assert (= temp10992_25 #x0000000000000000))
(assert (= temp10992_26 #x0000000000000000))
(assert (= temp10992_27 temp10992_26))
(assert (= temp10992_28 (select ARGNAME_padding_NAMEEND_VAL temp10992_27)))
(assert (= temp10992_29 #x0000000000000000))
(assert (= temp10992_30 #x0000000000000001))
(assert (= temp10992_31 temp10992_30))
(assert (= temp10992_32 (select ARGNAME_padding_NAMEEND_VAL temp10992_31)))
(assert (= temp10992_33 #x0000000000000000))
(assert (= temp10992_34 #x0000000000000002))
(assert (= temp10992_35 temp10992_34))
(assert (= temp10992_36 (select ARGNAME_padding_NAMEEND_VAL temp10992_35)))
(assert (= temp10992_37 #x0000000000000000))
(assert (= temp10992_38 #x0000000000000003))
(assert (= temp10992_39 temp10992_38))
(assert (= temp10992_40 (select ARGNAME_padding_NAMEEND_VAL temp10992_39)))
(assert (= temp10992_41 #x0000000000000000))
(assert (= temp10992_42 #x0000000000000004))
(assert (= temp10992_43 temp10992_42))
(assert (= temp10992_44 (select ARGNAME_padding_NAMEEND_VAL temp10992_43)))
(assert (= temp10992_45 #x0000000000000000))
(assert (= temp10992_46 #x0000000000000005))
(assert (= temp10992_47 temp10992_46))
(assert (= temp10992_48 (select ARGNAME_padding_NAMEEND_VAL temp10992_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10992_28 temp10992_25)
             (bvslt temp10992_32 temp10992_29)
             (bvslt temp10992_36 temp10992_33)
             (bvslt temp10992_40 temp10992_37)
             (bvslt temp10992_44 temp10992_41)
             (bvslt temp10992_48 temp10992_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10992_49 #x0000000000000000))
(assert (= var1191714 temp10992_49))
(assert (= temp10992_50 #x0000000000000000))
(assert (= temp10992_51 temp10992_50))
(assert (= temp10992_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10992_51)))
(assert (= temp10992_53 #x0000000000000001))
(assert (= temp10992_54 temp10992_53))
(assert (= temp10992_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10992_54)))
(assert (= temp10992_56 #x0000000000000002))
(assert (= temp10992_57 temp10992_56))
(assert (= temp10992_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10992_57)))
(assert (= temp10992_59 #x0000000000000003))
(assert (= temp10992_60 temp10992_59))
(assert (= temp10992_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10992_60)))
(assert (= temp10992_62 #x0000000000000004))
(assert (= temp10992_63 temp10992_62))
(assert (= temp10992_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10992_63)))
(assert (= temp10992_65 #x0000000000000005))
(assert (= temp10992_66 temp10992_65))
(assert (= temp10992_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10992_66)))
(assert (= temp10992_68 #x0000000000000000))
(assert (= temp10992_69 #x0000000000000000))
(assert (= temp10992_70 temp10992_69))
(assert (= temp10992_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10992_70)))
(assert (= temp10992_72 #x0000000000000000))
(assert (= temp10992_73 #x0000000000000001))
(assert (= temp10992_74 temp10992_73))
(assert (= temp10992_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10992_74)))
(assert (= temp10992_76 #x0000000000000000))
(assert (= temp10992_77 #x0000000000000002))
(assert (= temp10992_78 temp10992_77))
(assert (= temp10992_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10992_78)))
(assert (= temp10992_80 #x0000000000000000))
(assert (= temp10992_81 #x0000000000000003))
(assert (= temp10992_82 temp10992_81))
(assert (= temp10992_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10992_82)))
(assert (= temp10992_84 #x0000000000000000))
(assert (= temp10992_85 #x0000000000000004))
(assert (= temp10992_86 temp10992_85))
(assert (= temp10992_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10992_86)))
(assert (= temp10992_88 #x0000000000000000))
(assert (= temp10992_89 #x0000000000000005))
(assert (= temp10992_90 temp10992_89))
(assert (= temp10992_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10992_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10992_71 temp10992_68)
             (bvslt temp10992_75 temp10992_72)
             (bvslt temp10992_79 temp10992_76)
             (bvslt temp10992_83 temp10992_80)
             (bvslt temp10992_87 temp10992_84)
             (bvslt temp10992_91 temp10992_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10992_92 #x0000000000000000))
(assert (= var1191725 temp10992_92))
(assert (= temp10992_93 #x0000000000000000))
(assert (= temp10992_94 temp10992_93))
(assert (= temp10992_95 (select ARGNAME_stride_NAMEEND_VAL temp10992_94)))
(assert (= temp10992_96 #x0000000000000001))
(assert (= temp10992_97 temp10992_96))
(assert (= temp10992_98 (select ARGNAME_stride_NAMEEND_VAL temp10992_97)))
(assert (= temp10992_99 #x0000000000000002))
(assert (= temp10992_100 temp10992_99))
(assert (= temp10992_101 (select ARGNAME_stride_NAMEEND_VAL temp10992_100)))
(assert (= temp10992_102 #x0000000000000003))
(assert (= temp10992_103 temp10992_102))
(assert (= temp10992_104 (select ARGNAME_stride_NAMEEND_VAL temp10992_103)))
(assert (= temp10992_105 #x0000000000000004))
(assert (= temp10992_106 temp10992_105))
(assert (= temp10992_107 (select ARGNAME_stride_NAMEEND_VAL temp10992_106)))
(assert (= temp10992_108 #x0000000000000005))
(assert (= temp10992_109 temp10992_108))
(assert (= temp10992_110 (select ARGNAME_stride_NAMEEND_VAL temp10992_109)))
(assert (= temp10992_111 #x0000000000000000))
(assert (= temp10992_112 #x0000000000000000))
(assert (= temp10992_113 temp10992_112))
(assert (= temp10992_114 (select ARGNAME_stride_NAMEEND_VAL temp10992_113)))
(assert (= temp10992_115 #x0000000000000000))
(assert (= temp10992_116 #x0000000000000001))
(assert (= temp10992_117 temp10992_116))
(assert (= temp10992_118 (select ARGNAME_stride_NAMEEND_VAL temp10992_117)))
(assert (= temp10992_119 #x0000000000000000))
(assert (= temp10992_120 #x0000000000000002))
(assert (= temp10992_121 temp10992_120))
(assert (= temp10992_122 (select ARGNAME_stride_NAMEEND_VAL temp10992_121)))
(assert (= temp10992_123 #x0000000000000000))
(assert (= temp10992_124 #x0000000000000003))
(assert (= temp10992_125 temp10992_124))
(assert (= temp10992_126 (select ARGNAME_stride_NAMEEND_VAL temp10992_125)))
(assert (= temp10992_127 #x0000000000000000))
(assert (= temp10992_128 #x0000000000000004))
(assert (= temp10992_129 temp10992_128))
(assert (= temp10992_130 (select ARGNAME_stride_NAMEEND_VAL temp10992_129)))
(assert (= temp10992_131 #x0000000000000000))
(assert (= temp10992_132 #x0000000000000005))
(assert (= temp10992_133 temp10992_132))
(assert (= temp10992_134 (select ARGNAME_stride_NAMEEND_VAL temp10992_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10992_114 temp10992_111)
             (bvsle temp10992_118 temp10992_115)
             (bvsle temp10992_122 temp10992_119)
             (bvsle temp10992_126 temp10992_123)
             (bvsle temp10992_130 temp10992_127)
             (bvsle temp10992_134 temp10992_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10992_135 #x0000000000000000))
(assert (= var1191735 temp10992_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10992_136 #x0000000000000001))
(assert (= var1191747 temp10992_136))
(assert (= temp10992_137 #x0000000000000000))
(assert (= var1179826 temp10992_137))
(assert (= temp10992_138 #x0000000000000000))
(assert (= temp10992_139 temp10992_138))
(assert (= temp10992_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10992_139)))
(assert (= temp10992_141 #x0000000000000001))
(assert (= temp10992_142 temp10992_141))
(assert (= temp10992_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10992_142)))
(assert (= temp10992_144 #x0000000000000002))
(assert (= temp10992_145 temp10992_144))
(assert (= temp10992_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10992_145)))
(assert (= temp10992_147 #x0000000000000003))
(assert (= temp10992_148 temp10992_147))
(assert (= temp10992_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10992_148)))
(assert (= temp10992_150 #x0000000000000004))
(assert (= temp10992_151 temp10992_150))
(assert (= temp10992_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10992_151)))
(assert (= temp10992_153 #x0000000000000005))
(assert (= temp10992_154 temp10992_153))
(assert (= temp10992_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10992_154)))
(assert (= temp10992_157 var1179826))
(assert (= temp10992_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10992_157)))
(assert (= temp10992_156 temp10992_158))
(assert (= var1191780
   (ite (bvslt temp10992_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10992_159 #x0000000000000000))
(assert (= var1191780 temp10992_159))
(assert (= temp10992_160 #x0000000000000000))
(assert (= var1179826 temp10992_160))
(assert (= temp10992_162 var1179826))
(assert (= temp10992_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10992_162)))
(assert (= temp10992_161 temp10992_163))
(assert (= var1191802 (bvsmod temp10992_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10992_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10992_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10992_165 #x0000000000000001))
(assert (= var1191803 temp10992_165))
(assert (= temp10992_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10992_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10992_167 #x0000000000000001))
(assert (= var1191823 temp10992_167))
(assert (= temp10992_168 #x0000000000000001))
(assert (= var1180714 temp10992_168))
(assert (= temp10992_169 #x0000000000000000))
(assert (= temp10992_170 temp10992_169))
(assert (= temp10992_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10992_170)))
(assert (= temp10992_172 #x0000000000000001))
(assert (= temp10992_173 temp10992_172))
(assert (= temp10992_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10992_173)))
(assert (= temp10992_175 #x0000000000000002))
(assert (= temp10992_176 temp10992_175))
(assert (= temp10992_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10992_176)))
(assert (= temp10992_178 #x0000000000000003))
(assert (= temp10992_179 temp10992_178))
(assert (= temp10992_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10992_179)))
(assert (= temp10992_181 #x0000000000000004))
(assert (= temp10992_182 temp10992_181))
(assert (= temp10992_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10992_182)))
(assert (= temp10992_184 #x0000000000000005))
(assert (= temp10992_185 temp10992_184))
(assert (= temp10992_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10992_185)))
(assert (= temp10992_187 #x0000000000000000))
(assert (= temp10992_188
   (ite (bvslt var1180714 temp10992_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10992_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10992_188)))
(assert (= var1191831 temp10992_189))
(assert (bvslt (ite (bvslt var1180714 temp10992_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10992_190 #x0000000000000001))
(assert (= var1180714 temp10992_190))
(assert (= temp10992_192 var1180714))
(assert (= temp10992_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10992_192)))
(assert (= temp10992_191 temp10992_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10992_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10992_194 #x0000000000000001))
(assert (= var1191836 temp10992_194))
(assert (= temp10992_195 #x0000000000000000))
(assert (= var1179826 temp10992_195))
(assert (= temp10992_197 var1179826))
(assert (= temp10992_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10992_197)))
(assert (= temp10992_196 temp10992_198))
(assert (= temp10992_199 #x0000000000000002))
(assert (= var1586025 temp10992_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10992_200 #x0000000000000001))
(assert (= var1191993 temp10992_200))
(assert (= temp10992_201 #x0000000000000001))
(assert (= var2700303 temp10992_201))
(assert (= temp10992_202 #x0000000000000001))
(assert (= var2962447 temp10992_202))
(assert (= temp10992_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10992_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10992_204 #x0000000000000001))
(assert (= var211058 temp10992_204))
(assert (= temp10992_205 #x0000000000000001))
(assert (= var211188 temp10992_205))
(assert (= var3879401 var211188))
(assert (= temp10992_206 #x0000000000000000))
(assert (= var3866802 temp10992_206))
(assert (= temp10992_207 #x0000000000000000))
(assert (= temp10992_208
   (ite (bvslt var3866802 temp10992_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10992_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10992_208)))
(assert (= var3879420 temp10992_209))
(assert (bvslt (ite (bvslt var3866802 temp10992_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10992_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10992_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10992_211 #x0000000000000000))
(assert (= var3879421 temp10992_211))
(assert (= temp10992_212 #x0000000000000001))
(assert (= var3867690 temp10992_212))
(assert (= temp10992_213 #x0000000000000000))
(assert (= temp10992_214
   (ite (bvslt var3867690 temp10992_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10992_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10992_214)))
(assert (= var3879423 temp10992_215))
(assert (bvslt (ite (bvslt var3867690 temp10992_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10992_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10992_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10992_217 #x0000000000000001))
(assert (= var3879424 temp10992_217))
(assert (= temp10992_218 #x0000000000000000))
(assert (= var4133117 temp10992_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10992_219 #x0000000000000002))
(assert (= var4339331 temp10992_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10992_220 #x0000000000000000))
(assert (= var4404892 temp10992_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var4600208 var211201))
(assert (= var4862352 var211201))
(assert (= temp10992_221 #x0000000000000001))
(assert (= var212414
   (ite (= ARGNAME_groups_NAMEEND temp10992_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10992_222 #x0000000000000001))
(assert (= var212414 temp10992_222))
(assert (= temp10992_223 #x0000000000000002))
(assert (= var5191299 temp10992_223))
(assert (= var5191301 (bvsub ARGNAME_weight_NAMEEND_DIM var5191299)))
(assert (= var5256844 var5191299))
(assert (= var5256845 var5191301))
(assert (= temp10992_224 #x0000000000000001))
(assert (= var211058 temp10992_224))
(model-add temp10992_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10992_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10992_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10992_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





