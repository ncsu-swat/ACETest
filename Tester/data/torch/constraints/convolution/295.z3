(declare-fun temp393_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp393_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp393_3 () (_ BitVec 64))
(declare-fun temp393_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp393_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp393_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp393_7 () (_ BitVec 64))
(declare-fun temp393_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp393_9 () (_ BitVec 64))
(declare-fun temp393_10 () (_ BitVec 64))
(declare-fun temp393_11 () (_ BitVec 64))
(declare-fun temp393_12 () (_ BitVec 64))
(declare-fun temp393_13 () (_ BitVec 64))
(declare-fun temp393_14 () (_ BitVec 64))
(declare-fun temp393_15 () (_ BitVec 64))
(declare-fun temp393_16 () (_ BitVec 64))
(declare-fun temp393_17 () (_ BitVec 64))
(declare-fun temp393_18 () (_ BitVec 64))
(declare-fun temp393_19 () (_ BitVec 64))
(declare-fun temp393_20 () (_ BitVec 64))
(declare-fun temp393_21 () (_ BitVec 64))
(declare-fun temp393_22 () (_ BitVec 64))
(declare-fun temp393_23 () (_ BitVec 64))
(declare-fun temp393_24 () (_ BitVec 64))
(declare-fun temp393_25 () (_ BitVec 64))
(declare-fun temp393_26 () (_ BitVec 64))
(declare-fun temp393_27 () (_ BitVec 64))
(declare-fun temp393_28 () (_ BitVec 64))
(declare-fun temp393_29 () (_ BitVec 64))
(declare-fun temp393_30 () (_ BitVec 64))
(declare-fun temp393_31 () (_ BitVec 64))
(declare-fun temp393_32 () (_ BitVec 64))
(declare-fun temp393_33 () (_ BitVec 64))
(declare-fun temp393_34 () (_ BitVec 64))
(declare-fun temp393_35 () (_ BitVec 64))
(declare-fun temp393_36 () (_ BitVec 64))
(declare-fun temp393_37 () (_ BitVec 64))
(declare-fun temp393_38 () (_ BitVec 64))
(declare-fun temp393_39 () (_ BitVec 64))
(declare-fun temp393_40 () (_ BitVec 64))
(declare-fun temp393_41 () (_ BitVec 64))
(declare-fun temp393_42 () (_ BitVec 64))
(declare-fun temp393_43 () (_ BitVec 64))
(declare-fun temp393_44 () (_ BitVec 64))
(declare-fun temp393_45 () (_ BitVec 64))
(declare-fun temp393_46 () (_ BitVec 64))
(declare-fun temp393_47 () (_ BitVec 64))
(declare-fun temp393_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp393_49 () (_ BitVec 64))
(declare-fun temp393_50 () (_ BitVec 64))
(declare-fun temp393_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp393_52 () (_ BitVec 64))
(declare-fun temp393_53 () (_ BitVec 64))
(declare-fun temp393_54 () (_ BitVec 64))
(declare-fun temp393_55 () (_ BitVec 64))
(declare-fun temp393_56 () (_ BitVec 64))
(declare-fun temp393_57 () (_ BitVec 64))
(declare-fun temp393_58 () (_ BitVec 64))
(declare-fun temp393_59 () (_ BitVec 64))
(declare-fun temp393_60 () (_ BitVec 64))
(declare-fun temp393_61 () (_ BitVec 64))
(declare-fun temp393_62 () (_ BitVec 64))
(declare-fun temp393_63 () (_ BitVec 64))
(declare-fun temp393_64 () (_ BitVec 64))
(declare-fun temp393_65 () (_ BitVec 64))
(declare-fun temp393_66 () (_ BitVec 64))
(declare-fun temp393_67 () (_ BitVec 64))
(declare-fun temp393_68 () (_ BitVec 64))
(declare-fun temp393_69 () (_ BitVec 64))
(declare-fun temp393_70 () (_ BitVec 64))
(declare-fun temp393_71 () (_ BitVec 64))
(declare-fun temp393_72 () (_ BitVec 64))
(declare-fun temp393_73 () (_ BitVec 64))
(declare-fun temp393_74 () (_ BitVec 64))
(declare-fun temp393_75 () (_ BitVec 64))
(declare-fun temp393_76 () (_ BitVec 64))
(declare-fun temp393_77 () (_ BitVec 64))
(declare-fun temp393_78 () (_ BitVec 64))
(declare-fun temp393_79 () (_ BitVec 64))
(declare-fun temp393_80 () (_ BitVec 64))
(declare-fun temp393_81 () (_ BitVec 64))
(declare-fun temp393_82 () (_ BitVec 64))
(declare-fun temp393_83 () (_ BitVec 64))
(declare-fun temp393_84 () (_ BitVec 64))
(declare-fun temp393_85 () (_ BitVec 64))
(declare-fun temp393_86 () (_ BitVec 64))
(declare-fun temp393_87 () (_ BitVec 64))
(declare-fun temp393_88 () (_ BitVec 64))
(declare-fun temp393_89 () (_ BitVec 64))
(declare-fun temp393_90 () (_ BitVec 64))
(declare-fun temp393_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp393_92 () (_ BitVec 64))
(declare-fun temp393_93 () (_ BitVec 64))
(declare-fun temp393_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp393_95 () (_ BitVec 64))
(declare-fun temp393_96 () (_ BitVec 64))
(declare-fun temp393_97 () (_ BitVec 64))
(declare-fun temp393_98 () (_ BitVec 64))
(declare-fun temp393_99 () (_ BitVec 64))
(declare-fun temp393_100 () (_ BitVec 64))
(declare-fun temp393_101 () (_ BitVec 64))
(declare-fun temp393_102 () (_ BitVec 64))
(declare-fun temp393_103 () (_ BitVec 64))
(declare-fun temp393_104 () (_ BitVec 64))
(declare-fun temp393_105 () (_ BitVec 64))
(declare-fun temp393_106 () (_ BitVec 64))
(declare-fun temp393_107 () (_ BitVec 64))
(declare-fun temp393_108 () (_ BitVec 64))
(declare-fun temp393_109 () (_ BitVec 64))
(declare-fun temp393_110 () (_ BitVec 64))
(declare-fun temp393_111 () (_ BitVec 64))
(declare-fun temp393_112 () (_ BitVec 64))
(declare-fun temp393_113 () (_ BitVec 64))
(declare-fun temp393_114 () (_ BitVec 64))
(declare-fun temp393_115 () (_ BitVec 64))
(declare-fun temp393_116 () (_ BitVec 64))
(declare-fun temp393_117 () (_ BitVec 64))
(declare-fun temp393_118 () (_ BitVec 64))
(declare-fun temp393_119 () (_ BitVec 64))
(declare-fun temp393_120 () (_ BitVec 64))
(declare-fun temp393_121 () (_ BitVec 64))
(declare-fun temp393_122 () (_ BitVec 64))
(declare-fun temp393_123 () (_ BitVec 64))
(declare-fun temp393_124 () (_ BitVec 64))
(declare-fun temp393_125 () (_ BitVec 64))
(declare-fun temp393_126 () (_ BitVec 64))
(declare-fun temp393_127 () (_ BitVec 64))
(declare-fun temp393_128 () (_ BitVec 64))
(declare-fun temp393_129 () (_ BitVec 64))
(declare-fun temp393_130 () (_ BitVec 64))
(declare-fun temp393_131 () (_ BitVec 64))
(declare-fun temp393_132 () (_ BitVec 64))
(declare-fun temp393_133 () (_ BitVec 64))
(declare-fun temp393_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp393_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp393_136 () (_ BitVec 64))
(declare-fun temp393_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp393_138 () (_ BitVec 64))
(declare-fun temp393_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp393_140 () (_ BitVec 64))
(declare-fun temp393_141 () (_ BitVec 64))
(declare-fun temp393_142 () (_ BitVec 64))
(declare-fun temp393_143 () (_ BitVec 64))
(declare-fun temp393_144 () (_ BitVec 64))
(declare-fun temp393_145 () (_ BitVec 64))
(declare-fun temp393_146 () (_ BitVec 64))
(declare-fun temp393_147 () (_ BitVec 64))
(declare-fun temp393_148 () (_ BitVec 64))
(declare-fun temp393_149 () (_ BitVec 64))
(declare-fun temp393_150 () (_ BitVec 64))
(declare-fun temp393_151 () (_ BitVec 64))
(declare-fun temp393_152 () (_ BitVec 64))
(declare-fun temp393_153 () (_ BitVec 64))
(declare-fun temp393_154 () (_ BitVec 64))
(declare-fun temp393_155 () (_ BitVec 64))
(declare-fun temp393_157 () (_ BitVec 64))
(declare-fun temp393_158 () (_ BitVec 64))
(declare-fun temp393_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp393_159 () (_ BitVec 64))
(declare-fun temp393_160 () (_ BitVec 64))
(declare-fun temp393_162 () (_ BitVec 64))
(declare-fun temp393_163 () (_ BitVec 64))
(declare-fun temp393_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp393_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp393_165 () (_ BitVec 64))
(declare-fun temp393_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp393_167 () (_ BitVec 64))
(declare-fun temp393_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp393_169 () (_ BitVec 64))
(declare-fun temp393_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp393_171 () (_ BitVec 64))
(declare-fun temp393_172 () (_ BitVec 64))
(declare-fun temp393_173 () (_ BitVec 64))
(declare-fun temp393_174 () (_ BitVec 64))
(declare-fun temp393_175 () (_ BitVec 64))
(declare-fun temp393_176 () (_ BitVec 64))
(declare-fun temp393_177 () (_ BitVec 64))
(declare-fun temp393_178 () (_ BitVec 64))
(declare-fun temp393_179 () (_ BitVec 64))
(declare-fun temp393_180 () (_ BitVec 64))
(declare-fun temp393_181 () (_ BitVec 64))
(declare-fun temp393_182 () (_ BitVec 64))
(declare-fun temp393_183 () (_ BitVec 64))
(declare-fun temp393_184 () (_ BitVec 64))
(declare-fun temp393_185 () (_ BitVec 64))
(declare-fun temp393_186 () (_ BitVec 64))
(declare-fun temp393_187 () (_ BitVec 64))
(declare-fun temp393_188 () (_ BitVec 64))
(declare-fun temp393_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp393_190 () (_ BitVec 64))
(declare-fun temp393_192 () (_ BitVec 64))
(declare-fun temp393_193 () (_ BitVec 64))
(declare-fun temp393_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp393_194 () (_ BitVec 64))
(declare-fun temp393_195 () (_ BitVec 64))
(declare-fun temp393_197 () (_ BitVec 64))
(declare-fun temp393_198 () (_ BitVec 64))
(declare-fun temp393_196 () (_ BitVec 64))
(declare-fun temp393_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp393_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp393_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp393_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp393_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp393_204 () (_ BitVec 64))
(declare-fun temp393_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp393_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp393_207 () (_ BitVec 64))
(declare-fun temp393_208 () (_ BitVec 64))
(declare-fun temp393_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp393_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp393_211 () (_ BitVec 64))
(declare-fun temp393_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp393_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp393_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var5124496 () (_ BitVec 64))
(declare-fun var5386640 () (_ BitVec 64))
(declare-fun temp393_215 () (_ BitVec 64))
(assert (= temp393_1 #x0000000000000001))
(assert (= var77203 temp393_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp393_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp393_2)))
(assert (= temp393_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp393_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp393_4 #x0000000000000000))
(assert (= var210941 temp393_4))
(assert (= temp393_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp393_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp393_6 #x0000000000000000))
(assert (= var210986 temp393_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp393_7 #x0000000000000000))
(assert (= temp393_8 temp393_7))
(assert (= temp393_9 (select ARGNAME_padding_NAMEEND_VAL temp393_8)))
(assert (= temp393_10 #x0000000000000001))
(assert (= temp393_11 temp393_10))
(assert (= temp393_12 (select ARGNAME_padding_NAMEEND_VAL temp393_11)))
(assert (= temp393_13 #x0000000000000002))
(assert (= temp393_14 temp393_13))
(assert (= temp393_15 (select ARGNAME_padding_NAMEEND_VAL temp393_14)))
(assert (= temp393_16 #x0000000000000003))
(assert (= temp393_17 temp393_16))
(assert (= temp393_18 (select ARGNAME_padding_NAMEEND_VAL temp393_17)))
(assert (= temp393_19 #x0000000000000004))
(assert (= temp393_20 temp393_19))
(assert (= temp393_21 (select ARGNAME_padding_NAMEEND_VAL temp393_20)))
(assert (= temp393_22 #x0000000000000005))
(assert (= temp393_23 temp393_22))
(assert (= temp393_24 (select ARGNAME_padding_NAMEEND_VAL temp393_23)))
(assert (= temp393_25 #x0000000000000000))
(assert (= temp393_26 #x0000000000000000))
(assert (= temp393_27 temp393_26))
(assert (= temp393_28 (select ARGNAME_padding_NAMEEND_VAL temp393_27)))
(assert (= temp393_29 #x0000000000000000))
(assert (= temp393_30 #x0000000000000001))
(assert (= temp393_31 temp393_30))
(assert (= temp393_32 (select ARGNAME_padding_NAMEEND_VAL temp393_31)))
(assert (= temp393_33 #x0000000000000000))
(assert (= temp393_34 #x0000000000000002))
(assert (= temp393_35 temp393_34))
(assert (= temp393_36 (select ARGNAME_padding_NAMEEND_VAL temp393_35)))
(assert (= temp393_37 #x0000000000000000))
(assert (= temp393_38 #x0000000000000003))
(assert (= temp393_39 temp393_38))
(assert (= temp393_40 (select ARGNAME_padding_NAMEEND_VAL temp393_39)))
(assert (= temp393_41 #x0000000000000000))
(assert (= temp393_42 #x0000000000000004))
(assert (= temp393_43 temp393_42))
(assert (= temp393_44 (select ARGNAME_padding_NAMEEND_VAL temp393_43)))
(assert (= temp393_45 #x0000000000000000))
(assert (= temp393_46 #x0000000000000005))
(assert (= temp393_47 temp393_46))
(assert (= temp393_48 (select ARGNAME_padding_NAMEEND_VAL temp393_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp393_28 temp393_25)
             (bvslt temp393_32 temp393_29)
             (bvslt temp393_36 temp393_33)
             (bvslt temp393_40 temp393_37)
             (bvslt temp393_44 temp393_41)
             (bvslt temp393_48 temp393_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp393_49 #x0000000000000000))
(assert (= var1191714 temp393_49))
(assert (= temp393_50 #x0000000000000000))
(assert (= temp393_51 temp393_50))
(assert (= temp393_52 (select ARGNAME_output_padding_NAMEEND_VAL temp393_51)))
(assert (= temp393_53 #x0000000000000001))
(assert (= temp393_54 temp393_53))
(assert (= temp393_55 (select ARGNAME_output_padding_NAMEEND_VAL temp393_54)))
(assert (= temp393_56 #x0000000000000002))
(assert (= temp393_57 temp393_56))
(assert (= temp393_58 (select ARGNAME_output_padding_NAMEEND_VAL temp393_57)))
(assert (= temp393_59 #x0000000000000003))
(assert (= temp393_60 temp393_59))
(assert (= temp393_61 (select ARGNAME_output_padding_NAMEEND_VAL temp393_60)))
(assert (= temp393_62 #x0000000000000004))
(assert (= temp393_63 temp393_62))
(assert (= temp393_64 (select ARGNAME_output_padding_NAMEEND_VAL temp393_63)))
(assert (= temp393_65 #x0000000000000005))
(assert (= temp393_66 temp393_65))
(assert (= temp393_67 (select ARGNAME_output_padding_NAMEEND_VAL temp393_66)))
(assert (= temp393_68 #x0000000000000000))
(assert (= temp393_69 #x0000000000000000))
(assert (= temp393_70 temp393_69))
(assert (= temp393_71 (select ARGNAME_output_padding_NAMEEND_VAL temp393_70)))
(assert (= temp393_72 #x0000000000000000))
(assert (= temp393_73 #x0000000000000001))
(assert (= temp393_74 temp393_73))
(assert (= temp393_75 (select ARGNAME_output_padding_NAMEEND_VAL temp393_74)))
(assert (= temp393_76 #x0000000000000000))
(assert (= temp393_77 #x0000000000000002))
(assert (= temp393_78 temp393_77))
(assert (= temp393_79 (select ARGNAME_output_padding_NAMEEND_VAL temp393_78)))
(assert (= temp393_80 #x0000000000000000))
(assert (= temp393_81 #x0000000000000003))
(assert (= temp393_82 temp393_81))
(assert (= temp393_83 (select ARGNAME_output_padding_NAMEEND_VAL temp393_82)))
(assert (= temp393_84 #x0000000000000000))
(assert (= temp393_85 #x0000000000000004))
(assert (= temp393_86 temp393_85))
(assert (= temp393_87 (select ARGNAME_output_padding_NAMEEND_VAL temp393_86)))
(assert (= temp393_88 #x0000000000000000))
(assert (= temp393_89 #x0000000000000005))
(assert (= temp393_90 temp393_89))
(assert (= temp393_91 (select ARGNAME_output_padding_NAMEEND_VAL temp393_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp393_71 temp393_68)
             (bvslt temp393_75 temp393_72)
             (bvslt temp393_79 temp393_76)
             (bvslt temp393_83 temp393_80)
             (bvslt temp393_87 temp393_84)
             (bvslt temp393_91 temp393_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp393_92 #x0000000000000000))
(assert (= var1191725 temp393_92))
(assert (= temp393_93 #x0000000000000000))
(assert (= temp393_94 temp393_93))
(assert (= temp393_95 (select ARGNAME_stride_NAMEEND_VAL temp393_94)))
(assert (= temp393_96 #x0000000000000001))
(assert (= temp393_97 temp393_96))
(assert (= temp393_98 (select ARGNAME_stride_NAMEEND_VAL temp393_97)))
(assert (= temp393_99 #x0000000000000002))
(assert (= temp393_100 temp393_99))
(assert (= temp393_101 (select ARGNAME_stride_NAMEEND_VAL temp393_100)))
(assert (= temp393_102 #x0000000000000003))
(assert (= temp393_103 temp393_102))
(assert (= temp393_104 (select ARGNAME_stride_NAMEEND_VAL temp393_103)))
(assert (= temp393_105 #x0000000000000004))
(assert (= temp393_106 temp393_105))
(assert (= temp393_107 (select ARGNAME_stride_NAMEEND_VAL temp393_106)))
(assert (= temp393_108 #x0000000000000005))
(assert (= temp393_109 temp393_108))
(assert (= temp393_110 (select ARGNAME_stride_NAMEEND_VAL temp393_109)))
(assert (= temp393_111 #x0000000000000000))
(assert (= temp393_112 #x0000000000000000))
(assert (= temp393_113 temp393_112))
(assert (= temp393_114 (select ARGNAME_stride_NAMEEND_VAL temp393_113)))
(assert (= temp393_115 #x0000000000000000))
(assert (= temp393_116 #x0000000000000001))
(assert (= temp393_117 temp393_116))
(assert (= temp393_118 (select ARGNAME_stride_NAMEEND_VAL temp393_117)))
(assert (= temp393_119 #x0000000000000000))
(assert (= temp393_120 #x0000000000000002))
(assert (= temp393_121 temp393_120))
(assert (= temp393_122 (select ARGNAME_stride_NAMEEND_VAL temp393_121)))
(assert (= temp393_123 #x0000000000000000))
(assert (= temp393_124 #x0000000000000003))
(assert (= temp393_125 temp393_124))
(assert (= temp393_126 (select ARGNAME_stride_NAMEEND_VAL temp393_125)))
(assert (= temp393_127 #x0000000000000000))
(assert (= temp393_128 #x0000000000000004))
(assert (= temp393_129 temp393_128))
(assert (= temp393_130 (select ARGNAME_stride_NAMEEND_VAL temp393_129)))
(assert (= temp393_131 #x0000000000000000))
(assert (= temp393_132 #x0000000000000005))
(assert (= temp393_133 temp393_132))
(assert (= temp393_134 (select ARGNAME_stride_NAMEEND_VAL temp393_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp393_114 temp393_111)
             (bvsle temp393_118 temp393_115)
             (bvsle temp393_122 temp393_119)
             (bvsle temp393_126 temp393_123)
             (bvsle temp393_130 temp393_127)
             (bvsle temp393_134 temp393_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp393_135 #x0000000000000000))
(assert (= var1191735 temp393_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp393_136 #x0000000000000001))
(assert (= var1191747 temp393_136))
(assert (= temp393_137 #x0000000000000000))
(assert (= var1179826 temp393_137))
(assert (= temp393_138 #x0000000000000000))
(assert (= temp393_139 temp393_138))
(assert (= temp393_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp393_139)))
(assert (= temp393_141 #x0000000000000001))
(assert (= temp393_142 temp393_141))
(assert (= temp393_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp393_142)))
(assert (= temp393_144 #x0000000000000002))
(assert (= temp393_145 temp393_144))
(assert (= temp393_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp393_145)))
(assert (= temp393_147 #x0000000000000003))
(assert (= temp393_148 temp393_147))
(assert (= temp393_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp393_148)))
(assert (= temp393_150 #x0000000000000004))
(assert (= temp393_151 temp393_150))
(assert (= temp393_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp393_151)))
(assert (= temp393_153 #x0000000000000005))
(assert (= temp393_154 temp393_153))
(assert (= temp393_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp393_154)))
(assert (= temp393_157 var1179826))
(assert (= temp393_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp393_157)))
(assert (= temp393_156 temp393_158))
(assert (= var1191780
   (ite (bvslt temp393_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp393_159 #x0000000000000000))
(assert (= var1191780 temp393_159))
(assert (= temp393_160 #x0000000000000000))
(assert (= var1179826 temp393_160))
(assert (= temp393_162 var1179826))
(assert (= temp393_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp393_162)))
(assert (= temp393_161 temp393_163))
(assert (= var1191802 (bvsmod temp393_161 ARGNAME_groups_NAMEEND)))
(assert (= temp393_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp393_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp393_165 #x0000000000000001))
(assert (= var1191803 temp393_165))
(assert (= temp393_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp393_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp393_167 #x0000000000000001))
(assert (= var1191823 temp393_167))
(assert (= temp393_168 #x0000000000000001))
(assert (= var1180714 temp393_168))
(assert (= temp393_169 #x0000000000000000))
(assert (= temp393_170 temp393_169))
(assert (= temp393_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp393_170)))
(assert (= temp393_172 #x0000000000000001))
(assert (= temp393_173 temp393_172))
(assert (= temp393_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp393_173)))
(assert (= temp393_175 #x0000000000000002))
(assert (= temp393_176 temp393_175))
(assert (= temp393_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp393_176)))
(assert (= temp393_178 #x0000000000000003))
(assert (= temp393_179 temp393_178))
(assert (= temp393_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp393_179)))
(assert (= temp393_181 #x0000000000000004))
(assert (= temp393_182 temp393_181))
(assert (= temp393_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp393_182)))
(assert (= temp393_184 #x0000000000000005))
(assert (= temp393_185 temp393_184))
(assert (= temp393_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp393_185)))
(assert (= temp393_187 #x0000000000000000))
(assert (= temp393_188
   (ite (bvslt var1180714 temp393_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp393_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp393_188)))
(assert (= var1191831 temp393_189))
(assert (bvslt (ite (bvslt var1180714 temp393_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp393_190 #x0000000000000001))
(assert (= var1180714 temp393_190))
(assert (= temp393_192 var1180714))
(assert (= temp393_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp393_192)))
(assert (= temp393_191 temp393_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp393_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp393_194 #x0000000000000001))
(assert (= var1191836 temp393_194))
(assert (= temp393_195 #x0000000000000000))
(assert (= var1179826 temp393_195))
(assert (= temp393_197 var1179826))
(assert (= temp393_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp393_197)))
(assert (= temp393_196 temp393_198))
(assert (= temp393_199 #x0000000000000002))
(assert (= var1586025 temp393_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp393_200 #x0000000000000001))
(assert (= var1191993 temp393_200))
(assert (= temp393_201 #x0000000000000001))
(assert (= var2700303 temp393_201))
(assert (= temp393_202 #x0000000000000001))
(assert (= var2962447 temp393_202))
(assert (= temp393_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp393_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp393_204 #x0000000000000001))
(assert (= var211058 temp393_204))
(assert (= temp393_205 #x0000000000000001))
(assert (= var211188 temp393_205))
(assert (= var3879401 var211188))
(assert (= temp393_206 #x0000000000000000))
(assert (= var3866802 temp393_206))
(assert (= temp393_207 #x0000000000000000))
(assert (= temp393_208
   (ite (bvslt var3866802 temp393_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp393_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp393_208)))
(assert (= var3879420 temp393_209))
(assert (bvslt (ite (bvslt var3866802 temp393_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp393_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp393_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp393_211 #x0000000000000001))
(assert (= var3879421 temp393_211))
(assert (= temp393_212 #x0000000000000000))
(assert (= var4079423 temp393_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp393_213 #x0000000000000002))
(assert (= var4208259 temp393_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp393_214 #x0000000000000000))
(assert (= var4273820 temp393_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var5124496 var211201))
(assert (= var5386640 var211201))
(assert (= temp393_215 #x0000000000000001))
(assert (= var211058 temp393_215))
(model-add temp393_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp393_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp393_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp393_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





