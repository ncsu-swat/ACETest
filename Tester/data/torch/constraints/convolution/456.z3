(declare-fun temp608_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp608_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp608_3 () (_ BitVec 64))
(declare-fun temp608_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp608_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp608_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp608_7 () (_ BitVec 64))
(declare-fun temp608_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp608_9 () (_ BitVec 64))
(declare-fun temp608_10 () (_ BitVec 64))
(declare-fun temp608_11 () (_ BitVec 64))
(declare-fun temp608_12 () (_ BitVec 64))
(declare-fun temp608_13 () (_ BitVec 64))
(declare-fun temp608_14 () (_ BitVec 64))
(declare-fun temp608_15 () (_ BitVec 64))
(declare-fun temp608_16 () (_ BitVec 64))
(declare-fun temp608_17 () (_ BitVec 64))
(declare-fun temp608_18 () (_ BitVec 64))
(declare-fun temp608_19 () (_ BitVec 64))
(declare-fun temp608_20 () (_ BitVec 64))
(declare-fun temp608_21 () (_ BitVec 64))
(declare-fun temp608_22 () (_ BitVec 64))
(declare-fun temp608_23 () (_ BitVec 64))
(declare-fun temp608_24 () (_ BitVec 64))
(declare-fun temp608_25 () (_ BitVec 64))
(declare-fun temp608_26 () (_ BitVec 64))
(declare-fun temp608_27 () (_ BitVec 64))
(declare-fun temp608_28 () (_ BitVec 64))
(declare-fun temp608_29 () (_ BitVec 64))
(declare-fun temp608_30 () (_ BitVec 64))
(declare-fun temp608_31 () (_ BitVec 64))
(declare-fun temp608_32 () (_ BitVec 64))
(declare-fun temp608_33 () (_ BitVec 64))
(declare-fun temp608_34 () (_ BitVec 64))
(declare-fun temp608_35 () (_ BitVec 64))
(declare-fun temp608_36 () (_ BitVec 64))
(declare-fun temp608_37 () (_ BitVec 64))
(declare-fun temp608_38 () (_ BitVec 64))
(declare-fun temp608_39 () (_ BitVec 64))
(declare-fun temp608_40 () (_ BitVec 64))
(declare-fun temp608_41 () (_ BitVec 64))
(declare-fun temp608_42 () (_ BitVec 64))
(declare-fun temp608_43 () (_ BitVec 64))
(declare-fun temp608_44 () (_ BitVec 64))
(declare-fun temp608_45 () (_ BitVec 64))
(declare-fun temp608_46 () (_ BitVec 64))
(declare-fun temp608_47 () (_ BitVec 64))
(declare-fun temp608_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp608_49 () (_ BitVec 64))
(declare-fun temp608_50 () (_ BitVec 64))
(declare-fun temp608_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp608_52 () (_ BitVec 64))
(declare-fun temp608_53 () (_ BitVec 64))
(declare-fun temp608_54 () (_ BitVec 64))
(declare-fun temp608_55 () (_ BitVec 64))
(declare-fun temp608_56 () (_ BitVec 64))
(declare-fun temp608_57 () (_ BitVec 64))
(declare-fun temp608_58 () (_ BitVec 64))
(declare-fun temp608_59 () (_ BitVec 64))
(declare-fun temp608_60 () (_ BitVec 64))
(declare-fun temp608_61 () (_ BitVec 64))
(declare-fun temp608_62 () (_ BitVec 64))
(declare-fun temp608_63 () (_ BitVec 64))
(declare-fun temp608_64 () (_ BitVec 64))
(declare-fun temp608_65 () (_ BitVec 64))
(declare-fun temp608_66 () (_ BitVec 64))
(declare-fun temp608_67 () (_ BitVec 64))
(declare-fun temp608_68 () (_ BitVec 64))
(declare-fun temp608_69 () (_ BitVec 64))
(declare-fun temp608_70 () (_ BitVec 64))
(declare-fun temp608_71 () (_ BitVec 64))
(declare-fun temp608_72 () (_ BitVec 64))
(declare-fun temp608_73 () (_ BitVec 64))
(declare-fun temp608_74 () (_ BitVec 64))
(declare-fun temp608_75 () (_ BitVec 64))
(declare-fun temp608_76 () (_ BitVec 64))
(declare-fun temp608_77 () (_ BitVec 64))
(declare-fun temp608_78 () (_ BitVec 64))
(declare-fun temp608_79 () (_ BitVec 64))
(declare-fun temp608_80 () (_ BitVec 64))
(declare-fun temp608_81 () (_ BitVec 64))
(declare-fun temp608_82 () (_ BitVec 64))
(declare-fun temp608_83 () (_ BitVec 64))
(declare-fun temp608_84 () (_ BitVec 64))
(declare-fun temp608_85 () (_ BitVec 64))
(declare-fun temp608_86 () (_ BitVec 64))
(declare-fun temp608_87 () (_ BitVec 64))
(declare-fun temp608_88 () (_ BitVec 64))
(declare-fun temp608_89 () (_ BitVec 64))
(declare-fun temp608_90 () (_ BitVec 64))
(declare-fun temp608_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp608_92 () (_ BitVec 64))
(declare-fun temp608_93 () (_ BitVec 64))
(declare-fun temp608_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp608_95 () (_ BitVec 64))
(declare-fun temp608_96 () (_ BitVec 64))
(declare-fun temp608_97 () (_ BitVec 64))
(declare-fun temp608_98 () (_ BitVec 64))
(declare-fun temp608_99 () (_ BitVec 64))
(declare-fun temp608_100 () (_ BitVec 64))
(declare-fun temp608_101 () (_ BitVec 64))
(declare-fun temp608_102 () (_ BitVec 64))
(declare-fun temp608_103 () (_ BitVec 64))
(declare-fun temp608_104 () (_ BitVec 64))
(declare-fun temp608_105 () (_ BitVec 64))
(declare-fun temp608_106 () (_ BitVec 64))
(declare-fun temp608_107 () (_ BitVec 64))
(declare-fun temp608_108 () (_ BitVec 64))
(declare-fun temp608_109 () (_ BitVec 64))
(declare-fun temp608_110 () (_ BitVec 64))
(declare-fun temp608_111 () (_ BitVec 64))
(declare-fun temp608_112 () (_ BitVec 64))
(declare-fun temp608_113 () (_ BitVec 64))
(declare-fun temp608_114 () (_ BitVec 64))
(declare-fun temp608_115 () (_ BitVec 64))
(declare-fun temp608_116 () (_ BitVec 64))
(declare-fun temp608_117 () (_ BitVec 64))
(declare-fun temp608_118 () (_ BitVec 64))
(declare-fun temp608_119 () (_ BitVec 64))
(declare-fun temp608_120 () (_ BitVec 64))
(declare-fun temp608_121 () (_ BitVec 64))
(declare-fun temp608_122 () (_ BitVec 64))
(declare-fun temp608_123 () (_ BitVec 64))
(declare-fun temp608_124 () (_ BitVec 64))
(declare-fun temp608_125 () (_ BitVec 64))
(declare-fun temp608_126 () (_ BitVec 64))
(declare-fun temp608_127 () (_ BitVec 64))
(declare-fun temp608_128 () (_ BitVec 64))
(declare-fun temp608_129 () (_ BitVec 64))
(declare-fun temp608_130 () (_ BitVec 64))
(declare-fun temp608_131 () (_ BitVec 64))
(declare-fun temp608_132 () (_ BitVec 64))
(declare-fun temp608_133 () (_ BitVec 64))
(declare-fun temp608_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp608_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp608_136 () (_ BitVec 64))
(declare-fun temp608_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp608_138 () (_ BitVec 64))
(declare-fun temp608_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp608_140 () (_ BitVec 64))
(declare-fun temp608_141 () (_ BitVec 64))
(declare-fun temp608_142 () (_ BitVec 64))
(declare-fun temp608_143 () (_ BitVec 64))
(declare-fun temp608_144 () (_ BitVec 64))
(declare-fun temp608_145 () (_ BitVec 64))
(declare-fun temp608_146 () (_ BitVec 64))
(declare-fun temp608_147 () (_ BitVec 64))
(declare-fun temp608_148 () (_ BitVec 64))
(declare-fun temp608_149 () (_ BitVec 64))
(declare-fun temp608_150 () (_ BitVec 64))
(declare-fun temp608_151 () (_ BitVec 64))
(declare-fun temp608_152 () (_ BitVec 64))
(declare-fun temp608_153 () (_ BitVec 64))
(declare-fun temp608_154 () (_ BitVec 64))
(declare-fun temp608_155 () (_ BitVec 64))
(declare-fun temp608_157 () (_ BitVec 64))
(declare-fun temp608_158 () (_ BitVec 64))
(declare-fun temp608_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp608_159 () (_ BitVec 64))
(declare-fun temp608_160 () (_ BitVec 64))
(declare-fun temp608_162 () (_ BitVec 64))
(declare-fun temp608_163 () (_ BitVec 64))
(declare-fun temp608_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp608_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp608_165 () (_ BitVec 64))
(declare-fun temp608_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp608_167 () (_ BitVec 64))
(declare-fun temp608_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp608_169 () (_ BitVec 64))
(declare-fun temp608_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp608_171 () (_ BitVec 64))
(declare-fun temp608_172 () (_ BitVec 64))
(declare-fun temp608_173 () (_ BitVec 64))
(declare-fun temp608_174 () (_ BitVec 64))
(declare-fun temp608_175 () (_ BitVec 64))
(declare-fun temp608_176 () (_ BitVec 64))
(declare-fun temp608_177 () (_ BitVec 64))
(declare-fun temp608_178 () (_ BitVec 64))
(declare-fun temp608_179 () (_ BitVec 64))
(declare-fun temp608_180 () (_ BitVec 64))
(declare-fun temp608_181 () (_ BitVec 64))
(declare-fun temp608_182 () (_ BitVec 64))
(declare-fun temp608_183 () (_ BitVec 64))
(declare-fun temp608_184 () (_ BitVec 64))
(declare-fun temp608_185 () (_ BitVec 64))
(declare-fun temp608_186 () (_ BitVec 64))
(declare-fun temp608_187 () (_ BitVec 64))
(declare-fun temp608_188 () (_ BitVec 64))
(declare-fun temp608_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp608_190 () (_ BitVec 64))
(declare-fun temp608_192 () (_ BitVec 64))
(declare-fun temp608_193 () (_ BitVec 64))
(declare-fun temp608_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp608_194 () (_ BitVec 64))
(declare-fun temp608_195 () (_ BitVec 64))
(declare-fun temp608_197 () (_ BitVec 64))
(declare-fun temp608_198 () (_ BitVec 64))
(declare-fun temp608_196 () (_ BitVec 64))
(declare-fun temp608_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp608_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp608_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp608_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp608_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp608_204 () (_ BitVec 64))
(declare-fun temp608_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp608_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp608_207 () (_ BitVec 64))
(declare-fun temp608_208 () (_ BitVec 64))
(declare-fun temp608_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp608_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp608_211 () (_ BitVec 64))
(declare-fun temp608_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp608_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp608_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4993424 () (_ BitVec 64))
(declare-fun var211388 () (_ BitVec 64))
(declare-fun temp608_215 () (_ BitVec 64))
(declare-fun var211389 () (_ BitVec 64))
(declare-fun var5914445 () (_ BitVec 64))
(declare-fun temp608_216 () (_ BitVec 64))
(assert (= temp608_1 #x0000000000000001))
(assert (= var77203 temp608_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp608_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp608_2)))
(assert (= temp608_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp608_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp608_4 #x0000000000000000))
(assert (= var210941 temp608_4))
(assert (= temp608_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp608_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp608_6 #x0000000000000000))
(assert (= var210986 temp608_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp608_7 #x0000000000000000))
(assert (= temp608_8 temp608_7))
(assert (= temp608_9 (select ARGNAME_padding_NAMEEND_VAL temp608_8)))
(assert (= temp608_10 #x0000000000000001))
(assert (= temp608_11 temp608_10))
(assert (= temp608_12 (select ARGNAME_padding_NAMEEND_VAL temp608_11)))
(assert (= temp608_13 #x0000000000000002))
(assert (= temp608_14 temp608_13))
(assert (= temp608_15 (select ARGNAME_padding_NAMEEND_VAL temp608_14)))
(assert (= temp608_16 #x0000000000000003))
(assert (= temp608_17 temp608_16))
(assert (= temp608_18 (select ARGNAME_padding_NAMEEND_VAL temp608_17)))
(assert (= temp608_19 #x0000000000000004))
(assert (= temp608_20 temp608_19))
(assert (= temp608_21 (select ARGNAME_padding_NAMEEND_VAL temp608_20)))
(assert (= temp608_22 #x0000000000000005))
(assert (= temp608_23 temp608_22))
(assert (= temp608_24 (select ARGNAME_padding_NAMEEND_VAL temp608_23)))
(assert (= temp608_25 #x0000000000000000))
(assert (= temp608_26 #x0000000000000000))
(assert (= temp608_27 temp608_26))
(assert (= temp608_28 (select ARGNAME_padding_NAMEEND_VAL temp608_27)))
(assert (= temp608_29 #x0000000000000000))
(assert (= temp608_30 #x0000000000000001))
(assert (= temp608_31 temp608_30))
(assert (= temp608_32 (select ARGNAME_padding_NAMEEND_VAL temp608_31)))
(assert (= temp608_33 #x0000000000000000))
(assert (= temp608_34 #x0000000000000002))
(assert (= temp608_35 temp608_34))
(assert (= temp608_36 (select ARGNAME_padding_NAMEEND_VAL temp608_35)))
(assert (= temp608_37 #x0000000000000000))
(assert (= temp608_38 #x0000000000000003))
(assert (= temp608_39 temp608_38))
(assert (= temp608_40 (select ARGNAME_padding_NAMEEND_VAL temp608_39)))
(assert (= temp608_41 #x0000000000000000))
(assert (= temp608_42 #x0000000000000004))
(assert (= temp608_43 temp608_42))
(assert (= temp608_44 (select ARGNAME_padding_NAMEEND_VAL temp608_43)))
(assert (= temp608_45 #x0000000000000000))
(assert (= temp608_46 #x0000000000000005))
(assert (= temp608_47 temp608_46))
(assert (= temp608_48 (select ARGNAME_padding_NAMEEND_VAL temp608_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp608_28 temp608_25)
             (bvslt temp608_32 temp608_29)
             (bvslt temp608_36 temp608_33)
             (bvslt temp608_40 temp608_37)
             (bvslt temp608_44 temp608_41)
             (bvslt temp608_48 temp608_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp608_49 #x0000000000000000))
(assert (= var1191714 temp608_49))
(assert (= temp608_50 #x0000000000000000))
(assert (= temp608_51 temp608_50))
(assert (= temp608_52 (select ARGNAME_output_padding_NAMEEND_VAL temp608_51)))
(assert (= temp608_53 #x0000000000000001))
(assert (= temp608_54 temp608_53))
(assert (= temp608_55 (select ARGNAME_output_padding_NAMEEND_VAL temp608_54)))
(assert (= temp608_56 #x0000000000000002))
(assert (= temp608_57 temp608_56))
(assert (= temp608_58 (select ARGNAME_output_padding_NAMEEND_VAL temp608_57)))
(assert (= temp608_59 #x0000000000000003))
(assert (= temp608_60 temp608_59))
(assert (= temp608_61 (select ARGNAME_output_padding_NAMEEND_VAL temp608_60)))
(assert (= temp608_62 #x0000000000000004))
(assert (= temp608_63 temp608_62))
(assert (= temp608_64 (select ARGNAME_output_padding_NAMEEND_VAL temp608_63)))
(assert (= temp608_65 #x0000000000000005))
(assert (= temp608_66 temp608_65))
(assert (= temp608_67 (select ARGNAME_output_padding_NAMEEND_VAL temp608_66)))
(assert (= temp608_68 #x0000000000000000))
(assert (= temp608_69 #x0000000000000000))
(assert (= temp608_70 temp608_69))
(assert (= temp608_71 (select ARGNAME_output_padding_NAMEEND_VAL temp608_70)))
(assert (= temp608_72 #x0000000000000000))
(assert (= temp608_73 #x0000000000000001))
(assert (= temp608_74 temp608_73))
(assert (= temp608_75 (select ARGNAME_output_padding_NAMEEND_VAL temp608_74)))
(assert (= temp608_76 #x0000000000000000))
(assert (= temp608_77 #x0000000000000002))
(assert (= temp608_78 temp608_77))
(assert (= temp608_79 (select ARGNAME_output_padding_NAMEEND_VAL temp608_78)))
(assert (= temp608_80 #x0000000000000000))
(assert (= temp608_81 #x0000000000000003))
(assert (= temp608_82 temp608_81))
(assert (= temp608_83 (select ARGNAME_output_padding_NAMEEND_VAL temp608_82)))
(assert (= temp608_84 #x0000000000000000))
(assert (= temp608_85 #x0000000000000004))
(assert (= temp608_86 temp608_85))
(assert (= temp608_87 (select ARGNAME_output_padding_NAMEEND_VAL temp608_86)))
(assert (= temp608_88 #x0000000000000000))
(assert (= temp608_89 #x0000000000000005))
(assert (= temp608_90 temp608_89))
(assert (= temp608_91 (select ARGNAME_output_padding_NAMEEND_VAL temp608_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp608_71 temp608_68)
             (bvslt temp608_75 temp608_72)
             (bvslt temp608_79 temp608_76)
             (bvslt temp608_83 temp608_80)
             (bvslt temp608_87 temp608_84)
             (bvslt temp608_91 temp608_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp608_92 #x0000000000000000))
(assert (= var1191725 temp608_92))
(assert (= temp608_93 #x0000000000000000))
(assert (= temp608_94 temp608_93))
(assert (= temp608_95 (select ARGNAME_stride_NAMEEND_VAL temp608_94)))
(assert (= temp608_96 #x0000000000000001))
(assert (= temp608_97 temp608_96))
(assert (= temp608_98 (select ARGNAME_stride_NAMEEND_VAL temp608_97)))
(assert (= temp608_99 #x0000000000000002))
(assert (= temp608_100 temp608_99))
(assert (= temp608_101 (select ARGNAME_stride_NAMEEND_VAL temp608_100)))
(assert (= temp608_102 #x0000000000000003))
(assert (= temp608_103 temp608_102))
(assert (= temp608_104 (select ARGNAME_stride_NAMEEND_VAL temp608_103)))
(assert (= temp608_105 #x0000000000000004))
(assert (= temp608_106 temp608_105))
(assert (= temp608_107 (select ARGNAME_stride_NAMEEND_VAL temp608_106)))
(assert (= temp608_108 #x0000000000000005))
(assert (= temp608_109 temp608_108))
(assert (= temp608_110 (select ARGNAME_stride_NAMEEND_VAL temp608_109)))
(assert (= temp608_111 #x0000000000000000))
(assert (= temp608_112 #x0000000000000000))
(assert (= temp608_113 temp608_112))
(assert (= temp608_114 (select ARGNAME_stride_NAMEEND_VAL temp608_113)))
(assert (= temp608_115 #x0000000000000000))
(assert (= temp608_116 #x0000000000000001))
(assert (= temp608_117 temp608_116))
(assert (= temp608_118 (select ARGNAME_stride_NAMEEND_VAL temp608_117)))
(assert (= temp608_119 #x0000000000000000))
(assert (= temp608_120 #x0000000000000002))
(assert (= temp608_121 temp608_120))
(assert (= temp608_122 (select ARGNAME_stride_NAMEEND_VAL temp608_121)))
(assert (= temp608_123 #x0000000000000000))
(assert (= temp608_124 #x0000000000000003))
(assert (= temp608_125 temp608_124))
(assert (= temp608_126 (select ARGNAME_stride_NAMEEND_VAL temp608_125)))
(assert (= temp608_127 #x0000000000000000))
(assert (= temp608_128 #x0000000000000004))
(assert (= temp608_129 temp608_128))
(assert (= temp608_130 (select ARGNAME_stride_NAMEEND_VAL temp608_129)))
(assert (= temp608_131 #x0000000000000000))
(assert (= temp608_132 #x0000000000000005))
(assert (= temp608_133 temp608_132))
(assert (= temp608_134 (select ARGNAME_stride_NAMEEND_VAL temp608_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp608_114 temp608_111)
             (bvsle temp608_118 temp608_115)
             (bvsle temp608_122 temp608_119)
             (bvsle temp608_126 temp608_123)
             (bvsle temp608_130 temp608_127)
             (bvsle temp608_134 temp608_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp608_135 #x0000000000000000))
(assert (= var1191735 temp608_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp608_136 #x0000000000000001))
(assert (= var1191747 temp608_136))
(assert (= temp608_137 #x0000000000000000))
(assert (= var1179826 temp608_137))
(assert (= temp608_138 #x0000000000000000))
(assert (= temp608_139 temp608_138))
(assert (= temp608_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp608_139)))
(assert (= temp608_141 #x0000000000000001))
(assert (= temp608_142 temp608_141))
(assert (= temp608_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp608_142)))
(assert (= temp608_144 #x0000000000000002))
(assert (= temp608_145 temp608_144))
(assert (= temp608_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp608_145)))
(assert (= temp608_147 #x0000000000000003))
(assert (= temp608_148 temp608_147))
(assert (= temp608_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp608_148)))
(assert (= temp608_150 #x0000000000000004))
(assert (= temp608_151 temp608_150))
(assert (= temp608_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp608_151)))
(assert (= temp608_153 #x0000000000000005))
(assert (= temp608_154 temp608_153))
(assert (= temp608_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp608_154)))
(assert (= temp608_157 var1179826))
(assert (= temp608_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp608_157)))
(assert (= temp608_156 temp608_158))
(assert (= var1191780
   (ite (bvslt temp608_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp608_159 #x0000000000000000))
(assert (= var1191780 temp608_159))
(assert (= temp608_160 #x0000000000000000))
(assert (= var1179826 temp608_160))
(assert (= temp608_162 var1179826))
(assert (= temp608_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp608_162)))
(assert (= temp608_161 temp608_163))
(assert (= var1191802 (bvsmod temp608_161 ARGNAME_groups_NAMEEND)))
(assert (= temp608_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp608_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp608_165 #x0000000000000001))
(assert (= var1191803 temp608_165))
(assert (= temp608_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp608_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp608_167 #x0000000000000001))
(assert (= var1191823 temp608_167))
(assert (= temp608_168 #x0000000000000001))
(assert (= var1180714 temp608_168))
(assert (= temp608_169 #x0000000000000000))
(assert (= temp608_170 temp608_169))
(assert (= temp608_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp608_170)))
(assert (= temp608_172 #x0000000000000001))
(assert (= temp608_173 temp608_172))
(assert (= temp608_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp608_173)))
(assert (= temp608_175 #x0000000000000002))
(assert (= temp608_176 temp608_175))
(assert (= temp608_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp608_176)))
(assert (= temp608_178 #x0000000000000003))
(assert (= temp608_179 temp608_178))
(assert (= temp608_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp608_179)))
(assert (= temp608_181 #x0000000000000004))
(assert (= temp608_182 temp608_181))
(assert (= temp608_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp608_182)))
(assert (= temp608_184 #x0000000000000005))
(assert (= temp608_185 temp608_184))
(assert (= temp608_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp608_185)))
(assert (= temp608_187 #x0000000000000000))
(assert (= temp608_188
   (ite (bvslt var1180714 temp608_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp608_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp608_188)))
(assert (= var1191831 temp608_189))
(assert (bvslt (ite (bvslt var1180714 temp608_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp608_190 #x0000000000000001))
(assert (= var1180714 temp608_190))
(assert (= temp608_192 var1180714))
(assert (= temp608_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp608_192)))
(assert (= temp608_191 temp608_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp608_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp608_194 #x0000000000000001))
(assert (= var1191836 temp608_194))
(assert (= temp608_195 #x0000000000000000))
(assert (= var1179826 temp608_195))
(assert (= temp608_197 var1179826))
(assert (= temp608_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp608_197)))
(assert (= temp608_196 temp608_198))
(assert (= temp608_199 #x0000000000000002))
(assert (= var1586025 temp608_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp608_200 #x0000000000000001))
(assert (= var1191993 temp608_200))
(assert (= temp608_201 #x0000000000000001))
(assert (= var2700303 temp608_201))
(assert (= temp608_202 #x0000000000000001))
(assert (= var2962447 temp608_202))
(assert (= temp608_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp608_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp608_204 #x0000000000000001))
(assert (= var211058 temp608_204))
(assert (= temp608_205 #x0000000000000001))
(assert (= var211188 temp608_205))
(assert (= var3879401 var211188))
(assert (= temp608_206 #x0000000000000000))
(assert (= var3866802 temp608_206))
(assert (= temp608_207 #x0000000000000000))
(assert (= temp608_208
   (ite (bvslt var3866802 temp608_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp608_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp608_208)))
(assert (= var3879420 temp608_209))
(assert (bvslt (ite (bvslt var3866802 temp608_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp608_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp608_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp608_211 #x0000000000000001))
(assert (= var3879421 temp608_211))
(assert (= temp608_212 #x0000000000000000))
(assert (= var4079423 temp608_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp608_213 #x0000000000000002))
(assert (= var4208259 temp608_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp608_214 #x0000000000000000))
(assert (= var4273820 temp608_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4993424 var211201))
(assert (= var211388 var210913))
(assert (= temp608_215 #x0000000000000000))
(assert (= var211389
   (ite (distinct var211388 temp608_215) #x0000000000000001 #x0000000000000000)))
(assert (= var5914445 var211389))
(assert (= temp608_216 #x0000000000000001))
(assert (= var211058 temp608_216))
(model-add temp608_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp608_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp608_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp608_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





