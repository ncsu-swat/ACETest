(declare-fun temp10206_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10206_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10206_3 () (_ BitVec 64))
(declare-fun temp10206_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10206_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10206_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10206_7 () (_ BitVec 64))
(declare-fun temp10206_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10206_9 () (_ BitVec 64))
(declare-fun temp10206_10 () (_ BitVec 64))
(declare-fun temp10206_11 () (_ BitVec 64))
(declare-fun temp10206_12 () (_ BitVec 64))
(declare-fun temp10206_13 () (_ BitVec 64))
(declare-fun temp10206_14 () (_ BitVec 64))
(declare-fun temp10206_15 () (_ BitVec 64))
(declare-fun temp10206_16 () (_ BitVec 64))
(declare-fun temp10206_17 () (_ BitVec 64))
(declare-fun temp10206_18 () (_ BitVec 64))
(declare-fun temp10206_19 () (_ BitVec 64))
(declare-fun temp10206_20 () (_ BitVec 64))
(declare-fun temp10206_21 () (_ BitVec 64))
(declare-fun temp10206_22 () (_ BitVec 64))
(declare-fun temp10206_23 () (_ BitVec 64))
(declare-fun temp10206_24 () (_ BitVec 64))
(declare-fun temp10206_25 () (_ BitVec 64))
(declare-fun temp10206_26 () (_ BitVec 64))
(declare-fun temp10206_27 () (_ BitVec 64))
(declare-fun temp10206_28 () (_ BitVec 64))
(declare-fun temp10206_29 () (_ BitVec 64))
(declare-fun temp10206_30 () (_ BitVec 64))
(declare-fun temp10206_31 () (_ BitVec 64))
(declare-fun temp10206_32 () (_ BitVec 64))
(declare-fun temp10206_33 () (_ BitVec 64))
(declare-fun temp10206_34 () (_ BitVec 64))
(declare-fun temp10206_35 () (_ BitVec 64))
(declare-fun temp10206_36 () (_ BitVec 64))
(declare-fun temp10206_37 () (_ BitVec 64))
(declare-fun temp10206_38 () (_ BitVec 64))
(declare-fun temp10206_39 () (_ BitVec 64))
(declare-fun temp10206_40 () (_ BitVec 64))
(declare-fun temp10206_41 () (_ BitVec 64))
(declare-fun temp10206_42 () (_ BitVec 64))
(declare-fun temp10206_43 () (_ BitVec 64))
(declare-fun temp10206_44 () (_ BitVec 64))
(declare-fun temp10206_45 () (_ BitVec 64))
(declare-fun temp10206_46 () (_ BitVec 64))
(declare-fun temp10206_47 () (_ BitVec 64))
(declare-fun temp10206_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10206_49 () (_ BitVec 64))
(declare-fun temp10206_50 () (_ BitVec 64))
(declare-fun temp10206_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10206_52 () (_ BitVec 64))
(declare-fun temp10206_53 () (_ BitVec 64))
(declare-fun temp10206_54 () (_ BitVec 64))
(declare-fun temp10206_55 () (_ BitVec 64))
(declare-fun temp10206_56 () (_ BitVec 64))
(declare-fun temp10206_57 () (_ BitVec 64))
(declare-fun temp10206_58 () (_ BitVec 64))
(declare-fun temp10206_59 () (_ BitVec 64))
(declare-fun temp10206_60 () (_ BitVec 64))
(declare-fun temp10206_61 () (_ BitVec 64))
(declare-fun temp10206_62 () (_ BitVec 64))
(declare-fun temp10206_63 () (_ BitVec 64))
(declare-fun temp10206_64 () (_ BitVec 64))
(declare-fun temp10206_65 () (_ BitVec 64))
(declare-fun temp10206_66 () (_ BitVec 64))
(declare-fun temp10206_67 () (_ BitVec 64))
(declare-fun temp10206_68 () (_ BitVec 64))
(declare-fun temp10206_69 () (_ BitVec 64))
(declare-fun temp10206_70 () (_ BitVec 64))
(declare-fun temp10206_71 () (_ BitVec 64))
(declare-fun temp10206_72 () (_ BitVec 64))
(declare-fun temp10206_73 () (_ BitVec 64))
(declare-fun temp10206_74 () (_ BitVec 64))
(declare-fun temp10206_75 () (_ BitVec 64))
(declare-fun temp10206_76 () (_ BitVec 64))
(declare-fun temp10206_77 () (_ BitVec 64))
(declare-fun temp10206_78 () (_ BitVec 64))
(declare-fun temp10206_79 () (_ BitVec 64))
(declare-fun temp10206_80 () (_ BitVec 64))
(declare-fun temp10206_81 () (_ BitVec 64))
(declare-fun temp10206_82 () (_ BitVec 64))
(declare-fun temp10206_83 () (_ BitVec 64))
(declare-fun temp10206_84 () (_ BitVec 64))
(declare-fun temp10206_85 () (_ BitVec 64))
(declare-fun temp10206_86 () (_ BitVec 64))
(declare-fun temp10206_87 () (_ BitVec 64))
(declare-fun temp10206_88 () (_ BitVec 64))
(declare-fun temp10206_89 () (_ BitVec 64))
(declare-fun temp10206_90 () (_ BitVec 64))
(declare-fun temp10206_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10206_92 () (_ BitVec 64))
(declare-fun temp10206_93 () (_ BitVec 64))
(declare-fun temp10206_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10206_95 () (_ BitVec 64))
(declare-fun temp10206_96 () (_ BitVec 64))
(declare-fun temp10206_97 () (_ BitVec 64))
(declare-fun temp10206_98 () (_ BitVec 64))
(declare-fun temp10206_99 () (_ BitVec 64))
(declare-fun temp10206_100 () (_ BitVec 64))
(declare-fun temp10206_101 () (_ BitVec 64))
(declare-fun temp10206_102 () (_ BitVec 64))
(declare-fun temp10206_103 () (_ BitVec 64))
(declare-fun temp10206_104 () (_ BitVec 64))
(declare-fun temp10206_105 () (_ BitVec 64))
(declare-fun temp10206_106 () (_ BitVec 64))
(declare-fun temp10206_107 () (_ BitVec 64))
(declare-fun temp10206_108 () (_ BitVec 64))
(declare-fun temp10206_109 () (_ BitVec 64))
(declare-fun temp10206_110 () (_ BitVec 64))
(declare-fun temp10206_111 () (_ BitVec 64))
(declare-fun temp10206_112 () (_ BitVec 64))
(declare-fun temp10206_113 () (_ BitVec 64))
(declare-fun temp10206_114 () (_ BitVec 64))
(declare-fun temp10206_115 () (_ BitVec 64))
(declare-fun temp10206_116 () (_ BitVec 64))
(declare-fun temp10206_117 () (_ BitVec 64))
(declare-fun temp10206_118 () (_ BitVec 64))
(declare-fun temp10206_119 () (_ BitVec 64))
(declare-fun temp10206_120 () (_ BitVec 64))
(declare-fun temp10206_121 () (_ BitVec 64))
(declare-fun temp10206_122 () (_ BitVec 64))
(declare-fun temp10206_123 () (_ BitVec 64))
(declare-fun temp10206_124 () (_ BitVec 64))
(declare-fun temp10206_125 () (_ BitVec 64))
(declare-fun temp10206_126 () (_ BitVec 64))
(declare-fun temp10206_127 () (_ BitVec 64))
(declare-fun temp10206_128 () (_ BitVec 64))
(declare-fun temp10206_129 () (_ BitVec 64))
(declare-fun temp10206_130 () (_ BitVec 64))
(declare-fun temp10206_131 () (_ BitVec 64))
(declare-fun temp10206_132 () (_ BitVec 64))
(declare-fun temp10206_133 () (_ BitVec 64))
(declare-fun temp10206_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10206_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10206_136 () (_ BitVec 64))
(declare-fun temp10206_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10206_138 () (_ BitVec 64))
(declare-fun temp10206_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10206_140 () (_ BitVec 64))
(declare-fun temp10206_141 () (_ BitVec 64))
(declare-fun temp10206_142 () (_ BitVec 64))
(declare-fun temp10206_143 () (_ BitVec 64))
(declare-fun temp10206_144 () (_ BitVec 64))
(declare-fun temp10206_145 () (_ BitVec 64))
(declare-fun temp10206_146 () (_ BitVec 64))
(declare-fun temp10206_147 () (_ BitVec 64))
(declare-fun temp10206_148 () (_ BitVec 64))
(declare-fun temp10206_149 () (_ BitVec 64))
(declare-fun temp10206_150 () (_ BitVec 64))
(declare-fun temp10206_151 () (_ BitVec 64))
(declare-fun temp10206_152 () (_ BitVec 64))
(declare-fun temp10206_153 () (_ BitVec 64))
(declare-fun temp10206_154 () (_ BitVec 64))
(declare-fun temp10206_155 () (_ BitVec 64))
(declare-fun temp10206_157 () (_ BitVec 64))
(declare-fun temp10206_158 () (_ BitVec 64))
(declare-fun temp10206_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10206_159 () (_ BitVec 64))
(declare-fun temp10206_160 () (_ BitVec 64))
(declare-fun temp10206_162 () (_ BitVec 64))
(declare-fun temp10206_163 () (_ BitVec 64))
(declare-fun temp10206_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10206_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10206_165 () (_ BitVec 64))
(declare-fun temp10206_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10206_167 () (_ BitVec 64))
(declare-fun temp10206_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10206_169 () (_ BitVec 64))
(declare-fun temp10206_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10206_171 () (_ BitVec 64))
(declare-fun temp10206_172 () (_ BitVec 64))
(declare-fun temp10206_173 () (_ BitVec 64))
(declare-fun temp10206_174 () (_ BitVec 64))
(declare-fun temp10206_175 () (_ BitVec 64))
(declare-fun temp10206_176 () (_ BitVec 64))
(declare-fun temp10206_177 () (_ BitVec 64))
(declare-fun temp10206_178 () (_ BitVec 64))
(declare-fun temp10206_179 () (_ BitVec 64))
(declare-fun temp10206_180 () (_ BitVec 64))
(declare-fun temp10206_181 () (_ BitVec 64))
(declare-fun temp10206_182 () (_ BitVec 64))
(declare-fun temp10206_183 () (_ BitVec 64))
(declare-fun temp10206_184 () (_ BitVec 64))
(declare-fun temp10206_185 () (_ BitVec 64))
(declare-fun temp10206_186 () (_ BitVec 64))
(declare-fun temp10206_187 () (_ BitVec 64))
(declare-fun temp10206_188 () (_ BitVec 64))
(declare-fun temp10206_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10206_190 () (_ BitVec 64))
(declare-fun temp10206_192 () (_ BitVec 64))
(declare-fun temp10206_193 () (_ BitVec 64))
(declare-fun temp10206_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10206_194 () (_ BitVec 64))
(declare-fun temp10206_195 () (_ BitVec 64))
(declare-fun temp10206_197 () (_ BitVec 64))
(declare-fun temp10206_198 () (_ BitVec 64))
(declare-fun temp10206_196 () (_ BitVec 64))
(declare-fun temp10206_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10206_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10206_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10206_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10206_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10206_204 () (_ BitVec 64))
(declare-fun temp10206_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10206_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10206_207 () (_ BitVec 64))
(declare-fun temp10206_208 () (_ BitVec 64))
(declare-fun temp10206_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10206_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10206_211 () (_ BitVec 64))
(declare-fun temp10206_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10206_213 () (_ BitVec 64))
(declare-fun temp10206_214 () (_ BitVec 64))
(declare-fun temp10206_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10206_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10206_217 () (_ BitVec 64))
(declare-fun temp10206_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10206_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10206_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var5058960 () (_ BitVec 64))
(declare-fun var5321104 () (_ BitVec 64))
(declare-fun temp10206_221 () (_ BitVec 64))
(assert (= temp10206_1 #x0000000000000001))
(assert (= var77203 temp10206_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10206_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10206_2)))
(assert (= temp10206_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10206_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10206_4 #x0000000000000000))
(assert (= var210941 temp10206_4))
(assert (= temp10206_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10206_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10206_6 #x0000000000000000))
(assert (= var210986 temp10206_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10206_7 #x0000000000000000))
(assert (= temp10206_8 temp10206_7))
(assert (= temp10206_9 (select ARGNAME_padding_NAMEEND_VAL temp10206_8)))
(assert (= temp10206_10 #x0000000000000001))
(assert (= temp10206_11 temp10206_10))
(assert (= temp10206_12 (select ARGNAME_padding_NAMEEND_VAL temp10206_11)))
(assert (= temp10206_13 #x0000000000000002))
(assert (= temp10206_14 temp10206_13))
(assert (= temp10206_15 (select ARGNAME_padding_NAMEEND_VAL temp10206_14)))
(assert (= temp10206_16 #x0000000000000003))
(assert (= temp10206_17 temp10206_16))
(assert (= temp10206_18 (select ARGNAME_padding_NAMEEND_VAL temp10206_17)))
(assert (= temp10206_19 #x0000000000000004))
(assert (= temp10206_20 temp10206_19))
(assert (= temp10206_21 (select ARGNAME_padding_NAMEEND_VAL temp10206_20)))
(assert (= temp10206_22 #x0000000000000005))
(assert (= temp10206_23 temp10206_22))
(assert (= temp10206_24 (select ARGNAME_padding_NAMEEND_VAL temp10206_23)))
(assert (= temp10206_25 #x0000000000000000))
(assert (= temp10206_26 #x0000000000000000))
(assert (= temp10206_27 temp10206_26))
(assert (= temp10206_28 (select ARGNAME_padding_NAMEEND_VAL temp10206_27)))
(assert (= temp10206_29 #x0000000000000000))
(assert (= temp10206_30 #x0000000000000001))
(assert (= temp10206_31 temp10206_30))
(assert (= temp10206_32 (select ARGNAME_padding_NAMEEND_VAL temp10206_31)))
(assert (= temp10206_33 #x0000000000000000))
(assert (= temp10206_34 #x0000000000000002))
(assert (= temp10206_35 temp10206_34))
(assert (= temp10206_36 (select ARGNAME_padding_NAMEEND_VAL temp10206_35)))
(assert (= temp10206_37 #x0000000000000000))
(assert (= temp10206_38 #x0000000000000003))
(assert (= temp10206_39 temp10206_38))
(assert (= temp10206_40 (select ARGNAME_padding_NAMEEND_VAL temp10206_39)))
(assert (= temp10206_41 #x0000000000000000))
(assert (= temp10206_42 #x0000000000000004))
(assert (= temp10206_43 temp10206_42))
(assert (= temp10206_44 (select ARGNAME_padding_NAMEEND_VAL temp10206_43)))
(assert (= temp10206_45 #x0000000000000000))
(assert (= temp10206_46 #x0000000000000005))
(assert (= temp10206_47 temp10206_46))
(assert (= temp10206_48 (select ARGNAME_padding_NAMEEND_VAL temp10206_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10206_28 temp10206_25)
             (bvslt temp10206_32 temp10206_29)
             (bvslt temp10206_36 temp10206_33)
             (bvslt temp10206_40 temp10206_37)
             (bvslt temp10206_44 temp10206_41)
             (bvslt temp10206_48 temp10206_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10206_49 #x0000000000000000))
(assert (= var1191714 temp10206_49))
(assert (= temp10206_50 #x0000000000000000))
(assert (= temp10206_51 temp10206_50))
(assert (= temp10206_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10206_51)))
(assert (= temp10206_53 #x0000000000000001))
(assert (= temp10206_54 temp10206_53))
(assert (= temp10206_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10206_54)))
(assert (= temp10206_56 #x0000000000000002))
(assert (= temp10206_57 temp10206_56))
(assert (= temp10206_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10206_57)))
(assert (= temp10206_59 #x0000000000000003))
(assert (= temp10206_60 temp10206_59))
(assert (= temp10206_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10206_60)))
(assert (= temp10206_62 #x0000000000000004))
(assert (= temp10206_63 temp10206_62))
(assert (= temp10206_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10206_63)))
(assert (= temp10206_65 #x0000000000000005))
(assert (= temp10206_66 temp10206_65))
(assert (= temp10206_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10206_66)))
(assert (= temp10206_68 #x0000000000000000))
(assert (= temp10206_69 #x0000000000000000))
(assert (= temp10206_70 temp10206_69))
(assert (= temp10206_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10206_70)))
(assert (= temp10206_72 #x0000000000000000))
(assert (= temp10206_73 #x0000000000000001))
(assert (= temp10206_74 temp10206_73))
(assert (= temp10206_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10206_74)))
(assert (= temp10206_76 #x0000000000000000))
(assert (= temp10206_77 #x0000000000000002))
(assert (= temp10206_78 temp10206_77))
(assert (= temp10206_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10206_78)))
(assert (= temp10206_80 #x0000000000000000))
(assert (= temp10206_81 #x0000000000000003))
(assert (= temp10206_82 temp10206_81))
(assert (= temp10206_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10206_82)))
(assert (= temp10206_84 #x0000000000000000))
(assert (= temp10206_85 #x0000000000000004))
(assert (= temp10206_86 temp10206_85))
(assert (= temp10206_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10206_86)))
(assert (= temp10206_88 #x0000000000000000))
(assert (= temp10206_89 #x0000000000000005))
(assert (= temp10206_90 temp10206_89))
(assert (= temp10206_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10206_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10206_71 temp10206_68)
             (bvslt temp10206_75 temp10206_72)
             (bvslt temp10206_79 temp10206_76)
             (bvslt temp10206_83 temp10206_80)
             (bvslt temp10206_87 temp10206_84)
             (bvslt temp10206_91 temp10206_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10206_92 #x0000000000000000))
(assert (= var1191725 temp10206_92))
(assert (= temp10206_93 #x0000000000000000))
(assert (= temp10206_94 temp10206_93))
(assert (= temp10206_95 (select ARGNAME_stride_NAMEEND_VAL temp10206_94)))
(assert (= temp10206_96 #x0000000000000001))
(assert (= temp10206_97 temp10206_96))
(assert (= temp10206_98 (select ARGNAME_stride_NAMEEND_VAL temp10206_97)))
(assert (= temp10206_99 #x0000000000000002))
(assert (= temp10206_100 temp10206_99))
(assert (= temp10206_101 (select ARGNAME_stride_NAMEEND_VAL temp10206_100)))
(assert (= temp10206_102 #x0000000000000003))
(assert (= temp10206_103 temp10206_102))
(assert (= temp10206_104 (select ARGNAME_stride_NAMEEND_VAL temp10206_103)))
(assert (= temp10206_105 #x0000000000000004))
(assert (= temp10206_106 temp10206_105))
(assert (= temp10206_107 (select ARGNAME_stride_NAMEEND_VAL temp10206_106)))
(assert (= temp10206_108 #x0000000000000005))
(assert (= temp10206_109 temp10206_108))
(assert (= temp10206_110 (select ARGNAME_stride_NAMEEND_VAL temp10206_109)))
(assert (= temp10206_111 #x0000000000000000))
(assert (= temp10206_112 #x0000000000000000))
(assert (= temp10206_113 temp10206_112))
(assert (= temp10206_114 (select ARGNAME_stride_NAMEEND_VAL temp10206_113)))
(assert (= temp10206_115 #x0000000000000000))
(assert (= temp10206_116 #x0000000000000001))
(assert (= temp10206_117 temp10206_116))
(assert (= temp10206_118 (select ARGNAME_stride_NAMEEND_VAL temp10206_117)))
(assert (= temp10206_119 #x0000000000000000))
(assert (= temp10206_120 #x0000000000000002))
(assert (= temp10206_121 temp10206_120))
(assert (= temp10206_122 (select ARGNAME_stride_NAMEEND_VAL temp10206_121)))
(assert (= temp10206_123 #x0000000000000000))
(assert (= temp10206_124 #x0000000000000003))
(assert (= temp10206_125 temp10206_124))
(assert (= temp10206_126 (select ARGNAME_stride_NAMEEND_VAL temp10206_125)))
(assert (= temp10206_127 #x0000000000000000))
(assert (= temp10206_128 #x0000000000000004))
(assert (= temp10206_129 temp10206_128))
(assert (= temp10206_130 (select ARGNAME_stride_NAMEEND_VAL temp10206_129)))
(assert (= temp10206_131 #x0000000000000000))
(assert (= temp10206_132 #x0000000000000005))
(assert (= temp10206_133 temp10206_132))
(assert (= temp10206_134 (select ARGNAME_stride_NAMEEND_VAL temp10206_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10206_114 temp10206_111)
             (bvsle temp10206_118 temp10206_115)
             (bvsle temp10206_122 temp10206_119)
             (bvsle temp10206_126 temp10206_123)
             (bvsle temp10206_130 temp10206_127)
             (bvsle temp10206_134 temp10206_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10206_135 #x0000000000000000))
(assert (= var1191735 temp10206_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10206_136 #x0000000000000001))
(assert (= var1191747 temp10206_136))
(assert (= temp10206_137 #x0000000000000000))
(assert (= var1179826 temp10206_137))
(assert (= temp10206_138 #x0000000000000000))
(assert (= temp10206_139 temp10206_138))
(assert (= temp10206_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10206_139)))
(assert (= temp10206_141 #x0000000000000001))
(assert (= temp10206_142 temp10206_141))
(assert (= temp10206_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10206_142)))
(assert (= temp10206_144 #x0000000000000002))
(assert (= temp10206_145 temp10206_144))
(assert (= temp10206_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10206_145)))
(assert (= temp10206_147 #x0000000000000003))
(assert (= temp10206_148 temp10206_147))
(assert (= temp10206_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10206_148)))
(assert (= temp10206_150 #x0000000000000004))
(assert (= temp10206_151 temp10206_150))
(assert (= temp10206_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10206_151)))
(assert (= temp10206_153 #x0000000000000005))
(assert (= temp10206_154 temp10206_153))
(assert (= temp10206_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10206_154)))
(assert (= temp10206_157 var1179826))
(assert (= temp10206_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10206_157)))
(assert (= temp10206_156 temp10206_158))
(assert (= var1191780
   (ite (bvslt temp10206_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10206_159 #x0000000000000000))
(assert (= var1191780 temp10206_159))
(assert (= temp10206_160 #x0000000000000000))
(assert (= var1179826 temp10206_160))
(assert (= temp10206_162 var1179826))
(assert (= temp10206_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10206_162)))
(assert (= temp10206_161 temp10206_163))
(assert (= var1191802 (bvsmod temp10206_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10206_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10206_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10206_165 #x0000000000000001))
(assert (= var1191803 temp10206_165))
(assert (= temp10206_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10206_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10206_167 #x0000000000000001))
(assert (= var1191823 temp10206_167))
(assert (= temp10206_168 #x0000000000000001))
(assert (= var1180714 temp10206_168))
(assert (= temp10206_169 #x0000000000000000))
(assert (= temp10206_170 temp10206_169))
(assert (= temp10206_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10206_170)))
(assert (= temp10206_172 #x0000000000000001))
(assert (= temp10206_173 temp10206_172))
(assert (= temp10206_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10206_173)))
(assert (= temp10206_175 #x0000000000000002))
(assert (= temp10206_176 temp10206_175))
(assert (= temp10206_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10206_176)))
(assert (= temp10206_178 #x0000000000000003))
(assert (= temp10206_179 temp10206_178))
(assert (= temp10206_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10206_179)))
(assert (= temp10206_181 #x0000000000000004))
(assert (= temp10206_182 temp10206_181))
(assert (= temp10206_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10206_182)))
(assert (= temp10206_184 #x0000000000000005))
(assert (= temp10206_185 temp10206_184))
(assert (= temp10206_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10206_185)))
(assert (= temp10206_187 #x0000000000000000))
(assert (= temp10206_188
   (ite (bvslt var1180714 temp10206_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10206_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10206_188)))
(assert (= var1191831 temp10206_189))
(assert (bvslt (ite (bvslt var1180714 temp10206_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10206_190 #x0000000000000001))
(assert (= var1180714 temp10206_190))
(assert (= temp10206_192 var1180714))
(assert (= temp10206_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10206_192)))
(assert (= temp10206_191 temp10206_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10206_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10206_194 #x0000000000000001))
(assert (= var1191836 temp10206_194))
(assert (= temp10206_195 #x0000000000000000))
(assert (= var1179826 temp10206_195))
(assert (= temp10206_197 var1179826))
(assert (= temp10206_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10206_197)))
(assert (= temp10206_196 temp10206_198))
(assert (= temp10206_199 #x0000000000000002))
(assert (= var1586025 temp10206_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10206_200 #x0000000000000001))
(assert (= var1191993 temp10206_200))
(assert (= temp10206_201 #x0000000000000001))
(assert (= var2700303 temp10206_201))
(assert (= temp10206_202 #x0000000000000001))
(assert (= var2962447 temp10206_202))
(assert (= temp10206_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10206_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10206_204 #x0000000000000001))
(assert (= var211058 temp10206_204))
(assert (= temp10206_205 #x0000000000000001))
(assert (= var211188 temp10206_205))
(assert (= var3879401 var211188))
(assert (= temp10206_206 #x0000000000000000))
(assert (= var3866802 temp10206_206))
(assert (= temp10206_207 #x0000000000000000))
(assert (= temp10206_208
   (ite (bvslt var3866802 temp10206_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10206_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10206_208)))
(assert (= var3879420 temp10206_209))
(assert (bvslt (ite (bvslt var3866802 temp10206_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10206_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10206_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10206_211 #x0000000000000000))
(assert (= var3879421 temp10206_211))
(assert (= temp10206_212 #x0000000000000001))
(assert (= var3867690 temp10206_212))
(assert (= temp10206_213 #x0000000000000000))
(assert (= temp10206_214
   (ite (bvslt var3867690 temp10206_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10206_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10206_214)))
(assert (= var3879423 temp10206_215))
(assert (bvslt (ite (bvslt var3867690 temp10206_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10206_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10206_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10206_217 #x0000000000000001))
(assert (= var3879424 temp10206_217))
(assert (= temp10206_218 #x0000000000000000))
(assert (= var4079423 temp10206_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10206_219 #x0000000000000002))
(assert (= var4208259 temp10206_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10206_220 #x0000000000000000))
(assert (= var4273820 temp10206_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var5058960 var211201))
(assert (= var5321104 var211201))
(assert (= temp10206_221 #x0000000000000001))
(assert (= var211058 temp10206_221))
(model-add temp10206_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10206_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10206_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10206_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




