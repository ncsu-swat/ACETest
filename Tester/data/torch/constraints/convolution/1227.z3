(declare-fun temp10366_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10366_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10366_3 () (_ BitVec 64))
(declare-fun temp10366_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10366_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10366_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10366_7 () (_ BitVec 64))
(declare-fun temp10366_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10366_9 () (_ BitVec 64))
(declare-fun temp10366_10 () (_ BitVec 64))
(declare-fun temp10366_11 () (_ BitVec 64))
(declare-fun temp10366_12 () (_ BitVec 64))
(declare-fun temp10366_13 () (_ BitVec 64))
(declare-fun temp10366_14 () (_ BitVec 64))
(declare-fun temp10366_15 () (_ BitVec 64))
(declare-fun temp10366_16 () (_ BitVec 64))
(declare-fun temp10366_17 () (_ BitVec 64))
(declare-fun temp10366_18 () (_ BitVec 64))
(declare-fun temp10366_19 () (_ BitVec 64))
(declare-fun temp10366_20 () (_ BitVec 64))
(declare-fun temp10366_21 () (_ BitVec 64))
(declare-fun temp10366_22 () (_ BitVec 64))
(declare-fun temp10366_23 () (_ BitVec 64))
(declare-fun temp10366_24 () (_ BitVec 64))
(declare-fun temp10366_25 () (_ BitVec 64))
(declare-fun temp10366_26 () (_ BitVec 64))
(declare-fun temp10366_27 () (_ BitVec 64))
(declare-fun temp10366_28 () (_ BitVec 64))
(declare-fun temp10366_29 () (_ BitVec 64))
(declare-fun temp10366_30 () (_ BitVec 64))
(declare-fun temp10366_31 () (_ BitVec 64))
(declare-fun temp10366_32 () (_ BitVec 64))
(declare-fun temp10366_33 () (_ BitVec 64))
(declare-fun temp10366_34 () (_ BitVec 64))
(declare-fun temp10366_35 () (_ BitVec 64))
(declare-fun temp10366_36 () (_ BitVec 64))
(declare-fun temp10366_37 () (_ BitVec 64))
(declare-fun temp10366_38 () (_ BitVec 64))
(declare-fun temp10366_39 () (_ BitVec 64))
(declare-fun temp10366_40 () (_ BitVec 64))
(declare-fun temp10366_41 () (_ BitVec 64))
(declare-fun temp10366_42 () (_ BitVec 64))
(declare-fun temp10366_43 () (_ BitVec 64))
(declare-fun temp10366_44 () (_ BitVec 64))
(declare-fun temp10366_45 () (_ BitVec 64))
(declare-fun temp10366_46 () (_ BitVec 64))
(declare-fun temp10366_47 () (_ BitVec 64))
(declare-fun temp10366_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10366_49 () (_ BitVec 64))
(declare-fun temp10366_50 () (_ BitVec 64))
(declare-fun temp10366_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10366_52 () (_ BitVec 64))
(declare-fun temp10366_53 () (_ BitVec 64))
(declare-fun temp10366_54 () (_ BitVec 64))
(declare-fun temp10366_55 () (_ BitVec 64))
(declare-fun temp10366_56 () (_ BitVec 64))
(declare-fun temp10366_57 () (_ BitVec 64))
(declare-fun temp10366_58 () (_ BitVec 64))
(declare-fun temp10366_59 () (_ BitVec 64))
(declare-fun temp10366_60 () (_ BitVec 64))
(declare-fun temp10366_61 () (_ BitVec 64))
(declare-fun temp10366_62 () (_ BitVec 64))
(declare-fun temp10366_63 () (_ BitVec 64))
(declare-fun temp10366_64 () (_ BitVec 64))
(declare-fun temp10366_65 () (_ BitVec 64))
(declare-fun temp10366_66 () (_ BitVec 64))
(declare-fun temp10366_67 () (_ BitVec 64))
(declare-fun temp10366_68 () (_ BitVec 64))
(declare-fun temp10366_69 () (_ BitVec 64))
(declare-fun temp10366_70 () (_ BitVec 64))
(declare-fun temp10366_71 () (_ BitVec 64))
(declare-fun temp10366_72 () (_ BitVec 64))
(declare-fun temp10366_73 () (_ BitVec 64))
(declare-fun temp10366_74 () (_ BitVec 64))
(declare-fun temp10366_75 () (_ BitVec 64))
(declare-fun temp10366_76 () (_ BitVec 64))
(declare-fun temp10366_77 () (_ BitVec 64))
(declare-fun temp10366_78 () (_ BitVec 64))
(declare-fun temp10366_79 () (_ BitVec 64))
(declare-fun temp10366_80 () (_ BitVec 64))
(declare-fun temp10366_81 () (_ BitVec 64))
(declare-fun temp10366_82 () (_ BitVec 64))
(declare-fun temp10366_83 () (_ BitVec 64))
(declare-fun temp10366_84 () (_ BitVec 64))
(declare-fun temp10366_85 () (_ BitVec 64))
(declare-fun temp10366_86 () (_ BitVec 64))
(declare-fun temp10366_87 () (_ BitVec 64))
(declare-fun temp10366_88 () (_ BitVec 64))
(declare-fun temp10366_89 () (_ BitVec 64))
(declare-fun temp10366_90 () (_ BitVec 64))
(declare-fun temp10366_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10366_92 () (_ BitVec 64))
(declare-fun temp10366_93 () (_ BitVec 64))
(declare-fun temp10366_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10366_95 () (_ BitVec 64))
(declare-fun temp10366_96 () (_ BitVec 64))
(declare-fun temp10366_97 () (_ BitVec 64))
(declare-fun temp10366_98 () (_ BitVec 64))
(declare-fun temp10366_99 () (_ BitVec 64))
(declare-fun temp10366_100 () (_ BitVec 64))
(declare-fun temp10366_101 () (_ BitVec 64))
(declare-fun temp10366_102 () (_ BitVec 64))
(declare-fun temp10366_103 () (_ BitVec 64))
(declare-fun temp10366_104 () (_ BitVec 64))
(declare-fun temp10366_105 () (_ BitVec 64))
(declare-fun temp10366_106 () (_ BitVec 64))
(declare-fun temp10366_107 () (_ BitVec 64))
(declare-fun temp10366_108 () (_ BitVec 64))
(declare-fun temp10366_109 () (_ BitVec 64))
(declare-fun temp10366_110 () (_ BitVec 64))
(declare-fun temp10366_111 () (_ BitVec 64))
(declare-fun temp10366_112 () (_ BitVec 64))
(declare-fun temp10366_113 () (_ BitVec 64))
(declare-fun temp10366_114 () (_ BitVec 64))
(declare-fun temp10366_115 () (_ BitVec 64))
(declare-fun temp10366_116 () (_ BitVec 64))
(declare-fun temp10366_117 () (_ BitVec 64))
(declare-fun temp10366_118 () (_ BitVec 64))
(declare-fun temp10366_119 () (_ BitVec 64))
(declare-fun temp10366_120 () (_ BitVec 64))
(declare-fun temp10366_121 () (_ BitVec 64))
(declare-fun temp10366_122 () (_ BitVec 64))
(declare-fun temp10366_123 () (_ BitVec 64))
(declare-fun temp10366_124 () (_ BitVec 64))
(declare-fun temp10366_125 () (_ BitVec 64))
(declare-fun temp10366_126 () (_ BitVec 64))
(declare-fun temp10366_127 () (_ BitVec 64))
(declare-fun temp10366_128 () (_ BitVec 64))
(declare-fun temp10366_129 () (_ BitVec 64))
(declare-fun temp10366_130 () (_ BitVec 64))
(declare-fun temp10366_131 () (_ BitVec 64))
(declare-fun temp10366_132 () (_ BitVec 64))
(declare-fun temp10366_133 () (_ BitVec 64))
(declare-fun temp10366_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10366_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10366_136 () (_ BitVec 64))
(declare-fun temp10366_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10366_138 () (_ BitVec 64))
(declare-fun temp10366_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10366_140 () (_ BitVec 64))
(declare-fun temp10366_141 () (_ BitVec 64))
(declare-fun temp10366_142 () (_ BitVec 64))
(declare-fun temp10366_143 () (_ BitVec 64))
(declare-fun temp10366_144 () (_ BitVec 64))
(declare-fun temp10366_145 () (_ BitVec 64))
(declare-fun temp10366_146 () (_ BitVec 64))
(declare-fun temp10366_147 () (_ BitVec 64))
(declare-fun temp10366_148 () (_ BitVec 64))
(declare-fun temp10366_149 () (_ BitVec 64))
(declare-fun temp10366_150 () (_ BitVec 64))
(declare-fun temp10366_151 () (_ BitVec 64))
(declare-fun temp10366_152 () (_ BitVec 64))
(declare-fun temp10366_153 () (_ BitVec 64))
(declare-fun temp10366_154 () (_ BitVec 64))
(declare-fun temp10366_155 () (_ BitVec 64))
(declare-fun temp10366_157 () (_ BitVec 64))
(declare-fun temp10366_158 () (_ BitVec 64))
(declare-fun temp10366_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10366_159 () (_ BitVec 64))
(declare-fun temp10366_160 () (_ BitVec 64))
(declare-fun temp10366_162 () (_ BitVec 64))
(declare-fun temp10366_163 () (_ BitVec 64))
(declare-fun temp10366_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10366_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10366_165 () (_ BitVec 64))
(declare-fun temp10366_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10366_167 () (_ BitVec 64))
(declare-fun temp10366_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10366_169 () (_ BitVec 64))
(declare-fun temp10366_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10366_171 () (_ BitVec 64))
(declare-fun temp10366_172 () (_ BitVec 64))
(declare-fun temp10366_173 () (_ BitVec 64))
(declare-fun temp10366_174 () (_ BitVec 64))
(declare-fun temp10366_175 () (_ BitVec 64))
(declare-fun temp10366_176 () (_ BitVec 64))
(declare-fun temp10366_177 () (_ BitVec 64))
(declare-fun temp10366_178 () (_ BitVec 64))
(declare-fun temp10366_179 () (_ BitVec 64))
(declare-fun temp10366_180 () (_ BitVec 64))
(declare-fun temp10366_181 () (_ BitVec 64))
(declare-fun temp10366_182 () (_ BitVec 64))
(declare-fun temp10366_183 () (_ BitVec 64))
(declare-fun temp10366_184 () (_ BitVec 64))
(declare-fun temp10366_185 () (_ BitVec 64))
(declare-fun temp10366_186 () (_ BitVec 64))
(declare-fun temp10366_187 () (_ BitVec 64))
(declare-fun temp10366_188 () (_ BitVec 64))
(declare-fun temp10366_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10366_190 () (_ BitVec 64))
(declare-fun temp10366_192 () (_ BitVec 64))
(declare-fun temp10366_193 () (_ BitVec 64))
(declare-fun temp10366_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10366_194 () (_ BitVec 64))
(declare-fun temp10366_195 () (_ BitVec 64))
(declare-fun temp10366_197 () (_ BitVec 64))
(declare-fun temp10366_198 () (_ BitVec 64))
(declare-fun temp10366_196 () (_ BitVec 64))
(declare-fun temp10366_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10366_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10366_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10366_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10366_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10366_204 () (_ BitVec 64))
(declare-fun temp10366_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10366_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10366_207 () (_ BitVec 64))
(declare-fun temp10366_208 () (_ BitVec 64))
(declare-fun temp10366_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10366_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10366_211 () (_ BitVec 64))
(declare-fun temp10366_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10366_213 () (_ BitVec 64))
(declare-fun temp10366_214 () (_ BitVec 64))
(declare-fun temp10366_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10366_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10366_217 () (_ BitVec 64))
(declare-fun temp10366_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10366_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10366_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4927888 () (_ BitVec 64))
(declare-fun var5190032 () (_ BitVec 64))
(declare-fun temp10366_221 () (_ BitVec 64))
(declare-fun var5517712 () (_ BitVec 64))
(declare-fun temp10366_222 () (_ BitVec 64))
(assert (= temp10366_1 #x0000000000000001))
(assert (= var77203 temp10366_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10366_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10366_2)))
(assert (= temp10366_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10366_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10366_4 #x0000000000000000))
(assert (= var210941 temp10366_4))
(assert (= temp10366_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10366_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10366_6 #x0000000000000000))
(assert (= var210986 temp10366_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10366_7 #x0000000000000000))
(assert (= temp10366_8 temp10366_7))
(assert (= temp10366_9 (select ARGNAME_padding_NAMEEND_VAL temp10366_8)))
(assert (= temp10366_10 #x0000000000000001))
(assert (= temp10366_11 temp10366_10))
(assert (= temp10366_12 (select ARGNAME_padding_NAMEEND_VAL temp10366_11)))
(assert (= temp10366_13 #x0000000000000002))
(assert (= temp10366_14 temp10366_13))
(assert (= temp10366_15 (select ARGNAME_padding_NAMEEND_VAL temp10366_14)))
(assert (= temp10366_16 #x0000000000000003))
(assert (= temp10366_17 temp10366_16))
(assert (= temp10366_18 (select ARGNAME_padding_NAMEEND_VAL temp10366_17)))
(assert (= temp10366_19 #x0000000000000004))
(assert (= temp10366_20 temp10366_19))
(assert (= temp10366_21 (select ARGNAME_padding_NAMEEND_VAL temp10366_20)))
(assert (= temp10366_22 #x0000000000000005))
(assert (= temp10366_23 temp10366_22))
(assert (= temp10366_24 (select ARGNAME_padding_NAMEEND_VAL temp10366_23)))
(assert (= temp10366_25 #x0000000000000000))
(assert (= temp10366_26 #x0000000000000000))
(assert (= temp10366_27 temp10366_26))
(assert (= temp10366_28 (select ARGNAME_padding_NAMEEND_VAL temp10366_27)))
(assert (= temp10366_29 #x0000000000000000))
(assert (= temp10366_30 #x0000000000000001))
(assert (= temp10366_31 temp10366_30))
(assert (= temp10366_32 (select ARGNAME_padding_NAMEEND_VAL temp10366_31)))
(assert (= temp10366_33 #x0000000000000000))
(assert (= temp10366_34 #x0000000000000002))
(assert (= temp10366_35 temp10366_34))
(assert (= temp10366_36 (select ARGNAME_padding_NAMEEND_VAL temp10366_35)))
(assert (= temp10366_37 #x0000000000000000))
(assert (= temp10366_38 #x0000000000000003))
(assert (= temp10366_39 temp10366_38))
(assert (= temp10366_40 (select ARGNAME_padding_NAMEEND_VAL temp10366_39)))
(assert (= temp10366_41 #x0000000000000000))
(assert (= temp10366_42 #x0000000000000004))
(assert (= temp10366_43 temp10366_42))
(assert (= temp10366_44 (select ARGNAME_padding_NAMEEND_VAL temp10366_43)))
(assert (= temp10366_45 #x0000000000000000))
(assert (= temp10366_46 #x0000000000000005))
(assert (= temp10366_47 temp10366_46))
(assert (= temp10366_48 (select ARGNAME_padding_NAMEEND_VAL temp10366_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10366_28 temp10366_25)
             (bvslt temp10366_32 temp10366_29)
             (bvslt temp10366_36 temp10366_33)
             (bvslt temp10366_40 temp10366_37)
             (bvslt temp10366_44 temp10366_41)
             (bvslt temp10366_48 temp10366_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10366_49 #x0000000000000000))
(assert (= var1191714 temp10366_49))
(assert (= temp10366_50 #x0000000000000000))
(assert (= temp10366_51 temp10366_50))
(assert (= temp10366_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10366_51)))
(assert (= temp10366_53 #x0000000000000001))
(assert (= temp10366_54 temp10366_53))
(assert (= temp10366_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10366_54)))
(assert (= temp10366_56 #x0000000000000002))
(assert (= temp10366_57 temp10366_56))
(assert (= temp10366_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10366_57)))
(assert (= temp10366_59 #x0000000000000003))
(assert (= temp10366_60 temp10366_59))
(assert (= temp10366_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10366_60)))
(assert (= temp10366_62 #x0000000000000004))
(assert (= temp10366_63 temp10366_62))
(assert (= temp10366_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10366_63)))
(assert (= temp10366_65 #x0000000000000005))
(assert (= temp10366_66 temp10366_65))
(assert (= temp10366_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10366_66)))
(assert (= temp10366_68 #x0000000000000000))
(assert (= temp10366_69 #x0000000000000000))
(assert (= temp10366_70 temp10366_69))
(assert (= temp10366_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10366_70)))
(assert (= temp10366_72 #x0000000000000000))
(assert (= temp10366_73 #x0000000000000001))
(assert (= temp10366_74 temp10366_73))
(assert (= temp10366_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10366_74)))
(assert (= temp10366_76 #x0000000000000000))
(assert (= temp10366_77 #x0000000000000002))
(assert (= temp10366_78 temp10366_77))
(assert (= temp10366_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10366_78)))
(assert (= temp10366_80 #x0000000000000000))
(assert (= temp10366_81 #x0000000000000003))
(assert (= temp10366_82 temp10366_81))
(assert (= temp10366_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10366_82)))
(assert (= temp10366_84 #x0000000000000000))
(assert (= temp10366_85 #x0000000000000004))
(assert (= temp10366_86 temp10366_85))
(assert (= temp10366_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10366_86)))
(assert (= temp10366_88 #x0000000000000000))
(assert (= temp10366_89 #x0000000000000005))
(assert (= temp10366_90 temp10366_89))
(assert (= temp10366_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10366_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10366_71 temp10366_68)
             (bvslt temp10366_75 temp10366_72)
             (bvslt temp10366_79 temp10366_76)
             (bvslt temp10366_83 temp10366_80)
             (bvslt temp10366_87 temp10366_84)
             (bvslt temp10366_91 temp10366_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10366_92 #x0000000000000000))
(assert (= var1191725 temp10366_92))
(assert (= temp10366_93 #x0000000000000000))
(assert (= temp10366_94 temp10366_93))
(assert (= temp10366_95 (select ARGNAME_stride_NAMEEND_VAL temp10366_94)))
(assert (= temp10366_96 #x0000000000000001))
(assert (= temp10366_97 temp10366_96))
(assert (= temp10366_98 (select ARGNAME_stride_NAMEEND_VAL temp10366_97)))
(assert (= temp10366_99 #x0000000000000002))
(assert (= temp10366_100 temp10366_99))
(assert (= temp10366_101 (select ARGNAME_stride_NAMEEND_VAL temp10366_100)))
(assert (= temp10366_102 #x0000000000000003))
(assert (= temp10366_103 temp10366_102))
(assert (= temp10366_104 (select ARGNAME_stride_NAMEEND_VAL temp10366_103)))
(assert (= temp10366_105 #x0000000000000004))
(assert (= temp10366_106 temp10366_105))
(assert (= temp10366_107 (select ARGNAME_stride_NAMEEND_VAL temp10366_106)))
(assert (= temp10366_108 #x0000000000000005))
(assert (= temp10366_109 temp10366_108))
(assert (= temp10366_110 (select ARGNAME_stride_NAMEEND_VAL temp10366_109)))
(assert (= temp10366_111 #x0000000000000000))
(assert (= temp10366_112 #x0000000000000000))
(assert (= temp10366_113 temp10366_112))
(assert (= temp10366_114 (select ARGNAME_stride_NAMEEND_VAL temp10366_113)))
(assert (= temp10366_115 #x0000000000000000))
(assert (= temp10366_116 #x0000000000000001))
(assert (= temp10366_117 temp10366_116))
(assert (= temp10366_118 (select ARGNAME_stride_NAMEEND_VAL temp10366_117)))
(assert (= temp10366_119 #x0000000000000000))
(assert (= temp10366_120 #x0000000000000002))
(assert (= temp10366_121 temp10366_120))
(assert (= temp10366_122 (select ARGNAME_stride_NAMEEND_VAL temp10366_121)))
(assert (= temp10366_123 #x0000000000000000))
(assert (= temp10366_124 #x0000000000000003))
(assert (= temp10366_125 temp10366_124))
(assert (= temp10366_126 (select ARGNAME_stride_NAMEEND_VAL temp10366_125)))
(assert (= temp10366_127 #x0000000000000000))
(assert (= temp10366_128 #x0000000000000004))
(assert (= temp10366_129 temp10366_128))
(assert (= temp10366_130 (select ARGNAME_stride_NAMEEND_VAL temp10366_129)))
(assert (= temp10366_131 #x0000000000000000))
(assert (= temp10366_132 #x0000000000000005))
(assert (= temp10366_133 temp10366_132))
(assert (= temp10366_134 (select ARGNAME_stride_NAMEEND_VAL temp10366_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10366_114 temp10366_111)
             (bvsle temp10366_118 temp10366_115)
             (bvsle temp10366_122 temp10366_119)
             (bvsle temp10366_126 temp10366_123)
             (bvsle temp10366_130 temp10366_127)
             (bvsle temp10366_134 temp10366_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10366_135 #x0000000000000000))
(assert (= var1191735 temp10366_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10366_136 #x0000000000000001))
(assert (= var1191747 temp10366_136))
(assert (= temp10366_137 #x0000000000000000))
(assert (= var1179826 temp10366_137))
(assert (= temp10366_138 #x0000000000000000))
(assert (= temp10366_139 temp10366_138))
(assert (= temp10366_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10366_139)))
(assert (= temp10366_141 #x0000000000000001))
(assert (= temp10366_142 temp10366_141))
(assert (= temp10366_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10366_142)))
(assert (= temp10366_144 #x0000000000000002))
(assert (= temp10366_145 temp10366_144))
(assert (= temp10366_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10366_145)))
(assert (= temp10366_147 #x0000000000000003))
(assert (= temp10366_148 temp10366_147))
(assert (= temp10366_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10366_148)))
(assert (= temp10366_150 #x0000000000000004))
(assert (= temp10366_151 temp10366_150))
(assert (= temp10366_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10366_151)))
(assert (= temp10366_153 #x0000000000000005))
(assert (= temp10366_154 temp10366_153))
(assert (= temp10366_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10366_154)))
(assert (= temp10366_157 var1179826))
(assert (= temp10366_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10366_157)))
(assert (= temp10366_156 temp10366_158))
(assert (= var1191780
   (ite (bvslt temp10366_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10366_159 #x0000000000000000))
(assert (= var1191780 temp10366_159))
(assert (= temp10366_160 #x0000000000000000))
(assert (= var1179826 temp10366_160))
(assert (= temp10366_162 var1179826))
(assert (= temp10366_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10366_162)))
(assert (= temp10366_161 temp10366_163))
(assert (= var1191802 (bvsmod temp10366_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10366_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10366_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10366_165 #x0000000000000001))
(assert (= var1191803 temp10366_165))
(assert (= temp10366_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10366_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10366_167 #x0000000000000001))
(assert (= var1191823 temp10366_167))
(assert (= temp10366_168 #x0000000000000001))
(assert (= var1180714 temp10366_168))
(assert (= temp10366_169 #x0000000000000000))
(assert (= temp10366_170 temp10366_169))
(assert (= temp10366_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10366_170)))
(assert (= temp10366_172 #x0000000000000001))
(assert (= temp10366_173 temp10366_172))
(assert (= temp10366_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10366_173)))
(assert (= temp10366_175 #x0000000000000002))
(assert (= temp10366_176 temp10366_175))
(assert (= temp10366_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10366_176)))
(assert (= temp10366_178 #x0000000000000003))
(assert (= temp10366_179 temp10366_178))
(assert (= temp10366_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10366_179)))
(assert (= temp10366_181 #x0000000000000004))
(assert (= temp10366_182 temp10366_181))
(assert (= temp10366_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10366_182)))
(assert (= temp10366_184 #x0000000000000005))
(assert (= temp10366_185 temp10366_184))
(assert (= temp10366_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10366_185)))
(assert (= temp10366_187 #x0000000000000000))
(assert (= temp10366_188
   (ite (bvslt var1180714 temp10366_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10366_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10366_188)))
(assert (= var1191831 temp10366_189))
(assert (bvslt (ite (bvslt var1180714 temp10366_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10366_190 #x0000000000000001))
(assert (= var1180714 temp10366_190))
(assert (= temp10366_192 var1180714))
(assert (= temp10366_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10366_192)))
(assert (= temp10366_191 temp10366_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10366_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10366_194 #x0000000000000001))
(assert (= var1191836 temp10366_194))
(assert (= temp10366_195 #x0000000000000000))
(assert (= var1179826 temp10366_195))
(assert (= temp10366_197 var1179826))
(assert (= temp10366_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10366_197)))
(assert (= temp10366_196 temp10366_198))
(assert (= temp10366_199 #x0000000000000002))
(assert (= var1586025 temp10366_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10366_200 #x0000000000000001))
(assert (= var1191993 temp10366_200))
(assert (= temp10366_201 #x0000000000000001))
(assert (= var2700303 temp10366_201))
(assert (= temp10366_202 #x0000000000000001))
(assert (= var2962447 temp10366_202))
(assert (= temp10366_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10366_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10366_204 #x0000000000000001))
(assert (= var211058 temp10366_204))
(assert (= temp10366_205 #x0000000000000001))
(assert (= var211188 temp10366_205))
(assert (= var3879401 var211188))
(assert (= temp10366_206 #x0000000000000000))
(assert (= var3866802 temp10366_206))
(assert (= temp10366_207 #x0000000000000000))
(assert (= temp10366_208
   (ite (bvslt var3866802 temp10366_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10366_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10366_208)))
(assert (= var3879420 temp10366_209))
(assert (bvslt (ite (bvslt var3866802 temp10366_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10366_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10366_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10366_211 #x0000000000000000))
(assert (= var3879421 temp10366_211))
(assert (= temp10366_212 #x0000000000000001))
(assert (= var3867690 temp10366_212))
(assert (= temp10366_213 #x0000000000000000))
(assert (= temp10366_214
   (ite (bvslt var3867690 temp10366_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10366_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10366_214)))
(assert (= var3879423 temp10366_215))
(assert (bvslt (ite (bvslt var3867690 temp10366_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10366_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10366_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10366_217 #x0000000000000001))
(assert (= var3879424 temp10366_217))
(assert (= temp10366_218 #x0000000000000000))
(assert (= var4079423 temp10366_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10366_219 #x0000000000000002))
(assert (= var4208259 temp10366_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10366_220 #x0000000000000000))
(assert (= var4273820 temp10366_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4927888 var211201))
(assert (= var5190032 var211201))
(assert (= temp10366_221 #x0000000000000000))
(assert (= var5517712 temp10366_221))
(assert (= temp10366_222 #x0000000000000001))
(assert (= var211058 temp10366_222))
(model-add temp10366_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10366_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10366_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10366_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





