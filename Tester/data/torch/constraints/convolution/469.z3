(declare-fun temp625_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp625_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp625_3 () (_ BitVec 64))
(declare-fun temp625_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp625_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp625_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp625_7 () (_ BitVec 64))
(declare-fun temp625_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp625_9 () (_ BitVec 64))
(declare-fun temp625_10 () (_ BitVec 64))
(declare-fun temp625_11 () (_ BitVec 64))
(declare-fun temp625_12 () (_ BitVec 64))
(declare-fun temp625_13 () (_ BitVec 64))
(declare-fun temp625_14 () (_ BitVec 64))
(declare-fun temp625_15 () (_ BitVec 64))
(declare-fun temp625_16 () (_ BitVec 64))
(declare-fun temp625_17 () (_ BitVec 64))
(declare-fun temp625_18 () (_ BitVec 64))
(declare-fun temp625_19 () (_ BitVec 64))
(declare-fun temp625_20 () (_ BitVec 64))
(declare-fun temp625_21 () (_ BitVec 64))
(declare-fun temp625_22 () (_ BitVec 64))
(declare-fun temp625_23 () (_ BitVec 64))
(declare-fun temp625_24 () (_ BitVec 64))
(declare-fun temp625_25 () (_ BitVec 64))
(declare-fun temp625_26 () (_ BitVec 64))
(declare-fun temp625_27 () (_ BitVec 64))
(declare-fun temp625_28 () (_ BitVec 64))
(declare-fun temp625_29 () (_ BitVec 64))
(declare-fun temp625_30 () (_ BitVec 64))
(declare-fun temp625_31 () (_ BitVec 64))
(declare-fun temp625_32 () (_ BitVec 64))
(declare-fun temp625_33 () (_ BitVec 64))
(declare-fun temp625_34 () (_ BitVec 64))
(declare-fun temp625_35 () (_ BitVec 64))
(declare-fun temp625_36 () (_ BitVec 64))
(declare-fun temp625_37 () (_ BitVec 64))
(declare-fun temp625_38 () (_ BitVec 64))
(declare-fun temp625_39 () (_ BitVec 64))
(declare-fun temp625_40 () (_ BitVec 64))
(declare-fun temp625_41 () (_ BitVec 64))
(declare-fun temp625_42 () (_ BitVec 64))
(declare-fun temp625_43 () (_ BitVec 64))
(declare-fun temp625_44 () (_ BitVec 64))
(declare-fun temp625_45 () (_ BitVec 64))
(declare-fun temp625_46 () (_ BitVec 64))
(declare-fun temp625_47 () (_ BitVec 64))
(declare-fun temp625_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp625_49 () (_ BitVec 64))
(declare-fun temp625_50 () (_ BitVec 64))
(declare-fun temp625_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp625_52 () (_ BitVec 64))
(declare-fun temp625_53 () (_ BitVec 64))
(declare-fun temp625_54 () (_ BitVec 64))
(declare-fun temp625_55 () (_ BitVec 64))
(declare-fun temp625_56 () (_ BitVec 64))
(declare-fun temp625_57 () (_ BitVec 64))
(declare-fun temp625_58 () (_ BitVec 64))
(declare-fun temp625_59 () (_ BitVec 64))
(declare-fun temp625_60 () (_ BitVec 64))
(declare-fun temp625_61 () (_ BitVec 64))
(declare-fun temp625_62 () (_ BitVec 64))
(declare-fun temp625_63 () (_ BitVec 64))
(declare-fun temp625_64 () (_ BitVec 64))
(declare-fun temp625_65 () (_ BitVec 64))
(declare-fun temp625_66 () (_ BitVec 64))
(declare-fun temp625_67 () (_ BitVec 64))
(declare-fun temp625_68 () (_ BitVec 64))
(declare-fun temp625_69 () (_ BitVec 64))
(declare-fun temp625_70 () (_ BitVec 64))
(declare-fun temp625_71 () (_ BitVec 64))
(declare-fun temp625_72 () (_ BitVec 64))
(declare-fun temp625_73 () (_ BitVec 64))
(declare-fun temp625_74 () (_ BitVec 64))
(declare-fun temp625_75 () (_ BitVec 64))
(declare-fun temp625_76 () (_ BitVec 64))
(declare-fun temp625_77 () (_ BitVec 64))
(declare-fun temp625_78 () (_ BitVec 64))
(declare-fun temp625_79 () (_ BitVec 64))
(declare-fun temp625_80 () (_ BitVec 64))
(declare-fun temp625_81 () (_ BitVec 64))
(declare-fun temp625_82 () (_ BitVec 64))
(declare-fun temp625_83 () (_ BitVec 64))
(declare-fun temp625_84 () (_ BitVec 64))
(declare-fun temp625_85 () (_ BitVec 64))
(declare-fun temp625_86 () (_ BitVec 64))
(declare-fun temp625_87 () (_ BitVec 64))
(declare-fun temp625_88 () (_ BitVec 64))
(declare-fun temp625_89 () (_ BitVec 64))
(declare-fun temp625_90 () (_ BitVec 64))
(declare-fun temp625_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp625_92 () (_ BitVec 64))
(declare-fun temp625_93 () (_ BitVec 64))
(declare-fun temp625_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp625_95 () (_ BitVec 64))
(declare-fun temp625_96 () (_ BitVec 64))
(declare-fun temp625_97 () (_ BitVec 64))
(declare-fun temp625_98 () (_ BitVec 64))
(declare-fun temp625_99 () (_ BitVec 64))
(declare-fun temp625_100 () (_ BitVec 64))
(declare-fun temp625_101 () (_ BitVec 64))
(declare-fun temp625_102 () (_ BitVec 64))
(declare-fun temp625_103 () (_ BitVec 64))
(declare-fun temp625_104 () (_ BitVec 64))
(declare-fun temp625_105 () (_ BitVec 64))
(declare-fun temp625_106 () (_ BitVec 64))
(declare-fun temp625_107 () (_ BitVec 64))
(declare-fun temp625_108 () (_ BitVec 64))
(declare-fun temp625_109 () (_ BitVec 64))
(declare-fun temp625_110 () (_ BitVec 64))
(declare-fun temp625_111 () (_ BitVec 64))
(declare-fun temp625_112 () (_ BitVec 64))
(declare-fun temp625_113 () (_ BitVec 64))
(declare-fun temp625_114 () (_ BitVec 64))
(declare-fun temp625_115 () (_ BitVec 64))
(declare-fun temp625_116 () (_ BitVec 64))
(declare-fun temp625_117 () (_ BitVec 64))
(declare-fun temp625_118 () (_ BitVec 64))
(declare-fun temp625_119 () (_ BitVec 64))
(declare-fun temp625_120 () (_ BitVec 64))
(declare-fun temp625_121 () (_ BitVec 64))
(declare-fun temp625_122 () (_ BitVec 64))
(declare-fun temp625_123 () (_ BitVec 64))
(declare-fun temp625_124 () (_ BitVec 64))
(declare-fun temp625_125 () (_ BitVec 64))
(declare-fun temp625_126 () (_ BitVec 64))
(declare-fun temp625_127 () (_ BitVec 64))
(declare-fun temp625_128 () (_ BitVec 64))
(declare-fun temp625_129 () (_ BitVec 64))
(declare-fun temp625_130 () (_ BitVec 64))
(declare-fun temp625_131 () (_ BitVec 64))
(declare-fun temp625_132 () (_ BitVec 64))
(declare-fun temp625_133 () (_ BitVec 64))
(declare-fun temp625_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp625_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp625_136 () (_ BitVec 64))
(declare-fun temp625_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp625_138 () (_ BitVec 64))
(declare-fun temp625_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp625_140 () (_ BitVec 64))
(declare-fun temp625_141 () (_ BitVec 64))
(declare-fun temp625_142 () (_ BitVec 64))
(declare-fun temp625_143 () (_ BitVec 64))
(declare-fun temp625_144 () (_ BitVec 64))
(declare-fun temp625_145 () (_ BitVec 64))
(declare-fun temp625_146 () (_ BitVec 64))
(declare-fun temp625_147 () (_ BitVec 64))
(declare-fun temp625_148 () (_ BitVec 64))
(declare-fun temp625_149 () (_ BitVec 64))
(declare-fun temp625_150 () (_ BitVec 64))
(declare-fun temp625_151 () (_ BitVec 64))
(declare-fun temp625_152 () (_ BitVec 64))
(declare-fun temp625_153 () (_ BitVec 64))
(declare-fun temp625_154 () (_ BitVec 64))
(declare-fun temp625_155 () (_ BitVec 64))
(declare-fun temp625_157 () (_ BitVec 64))
(declare-fun temp625_158 () (_ BitVec 64))
(declare-fun temp625_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp625_159 () (_ BitVec 64))
(declare-fun temp625_160 () (_ BitVec 64))
(declare-fun temp625_162 () (_ BitVec 64))
(declare-fun temp625_163 () (_ BitVec 64))
(declare-fun temp625_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp625_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp625_165 () (_ BitVec 64))
(declare-fun temp625_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp625_167 () (_ BitVec 64))
(declare-fun temp625_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp625_169 () (_ BitVec 64))
(declare-fun temp625_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp625_171 () (_ BitVec 64))
(declare-fun temp625_172 () (_ BitVec 64))
(declare-fun temp625_173 () (_ BitVec 64))
(declare-fun temp625_174 () (_ BitVec 64))
(declare-fun temp625_175 () (_ BitVec 64))
(declare-fun temp625_176 () (_ BitVec 64))
(declare-fun temp625_177 () (_ BitVec 64))
(declare-fun temp625_178 () (_ BitVec 64))
(declare-fun temp625_179 () (_ BitVec 64))
(declare-fun temp625_180 () (_ BitVec 64))
(declare-fun temp625_181 () (_ BitVec 64))
(declare-fun temp625_182 () (_ BitVec 64))
(declare-fun temp625_183 () (_ BitVec 64))
(declare-fun temp625_184 () (_ BitVec 64))
(declare-fun temp625_185 () (_ BitVec 64))
(declare-fun temp625_186 () (_ BitVec 64))
(declare-fun temp625_187 () (_ BitVec 64))
(declare-fun temp625_188 () (_ BitVec 64))
(declare-fun temp625_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp625_190 () (_ BitVec 64))
(declare-fun temp625_192 () (_ BitVec 64))
(declare-fun temp625_193 () (_ BitVec 64))
(declare-fun temp625_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp625_194 () (_ BitVec 64))
(declare-fun temp625_195 () (_ BitVec 64))
(declare-fun temp625_197 () (_ BitVec 64))
(declare-fun temp625_198 () (_ BitVec 64))
(declare-fun temp625_196 () (_ BitVec 64))
(declare-fun temp625_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp625_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp625_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp625_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp625_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp625_204 () (_ BitVec 64))
(declare-fun temp625_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp625_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp625_207 () (_ BitVec 64))
(declare-fun temp625_208 () (_ BitVec 64))
(declare-fun temp625_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp625_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp625_211 () (_ BitVec 64))
(declare-fun temp625_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp625_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp625_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4796816 () (_ BitVec 64))
(declare-fun var211388 () (_ BitVec 64))
(declare-fun temp625_215 () (_ BitVec 64))
(declare-fun var211389 () (_ BitVec 64))
(declare-fun var5717837 () (_ BitVec 64))
(declare-fun temp625_216 () (_ BitVec 64))
(assert (= temp625_1 #x0000000000000001))
(assert (= var77203 temp625_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp625_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp625_2)))
(assert (= temp625_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp625_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp625_4 #x0000000000000000))
(assert (= var210941 temp625_4))
(assert (= temp625_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp625_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp625_6 #x0000000000000000))
(assert (= var210986 temp625_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp625_7 #x0000000000000000))
(assert (= temp625_8 temp625_7))
(assert (= temp625_9 (select ARGNAME_padding_NAMEEND_VAL temp625_8)))
(assert (= temp625_10 #x0000000000000001))
(assert (= temp625_11 temp625_10))
(assert (= temp625_12 (select ARGNAME_padding_NAMEEND_VAL temp625_11)))
(assert (= temp625_13 #x0000000000000002))
(assert (= temp625_14 temp625_13))
(assert (= temp625_15 (select ARGNAME_padding_NAMEEND_VAL temp625_14)))
(assert (= temp625_16 #x0000000000000003))
(assert (= temp625_17 temp625_16))
(assert (= temp625_18 (select ARGNAME_padding_NAMEEND_VAL temp625_17)))
(assert (= temp625_19 #x0000000000000004))
(assert (= temp625_20 temp625_19))
(assert (= temp625_21 (select ARGNAME_padding_NAMEEND_VAL temp625_20)))
(assert (= temp625_22 #x0000000000000005))
(assert (= temp625_23 temp625_22))
(assert (= temp625_24 (select ARGNAME_padding_NAMEEND_VAL temp625_23)))
(assert (= temp625_25 #x0000000000000000))
(assert (= temp625_26 #x0000000000000000))
(assert (= temp625_27 temp625_26))
(assert (= temp625_28 (select ARGNAME_padding_NAMEEND_VAL temp625_27)))
(assert (= temp625_29 #x0000000000000000))
(assert (= temp625_30 #x0000000000000001))
(assert (= temp625_31 temp625_30))
(assert (= temp625_32 (select ARGNAME_padding_NAMEEND_VAL temp625_31)))
(assert (= temp625_33 #x0000000000000000))
(assert (= temp625_34 #x0000000000000002))
(assert (= temp625_35 temp625_34))
(assert (= temp625_36 (select ARGNAME_padding_NAMEEND_VAL temp625_35)))
(assert (= temp625_37 #x0000000000000000))
(assert (= temp625_38 #x0000000000000003))
(assert (= temp625_39 temp625_38))
(assert (= temp625_40 (select ARGNAME_padding_NAMEEND_VAL temp625_39)))
(assert (= temp625_41 #x0000000000000000))
(assert (= temp625_42 #x0000000000000004))
(assert (= temp625_43 temp625_42))
(assert (= temp625_44 (select ARGNAME_padding_NAMEEND_VAL temp625_43)))
(assert (= temp625_45 #x0000000000000000))
(assert (= temp625_46 #x0000000000000005))
(assert (= temp625_47 temp625_46))
(assert (= temp625_48 (select ARGNAME_padding_NAMEEND_VAL temp625_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp625_28 temp625_25)
             (bvslt temp625_32 temp625_29)
             (bvslt temp625_36 temp625_33)
             (bvslt temp625_40 temp625_37)
             (bvslt temp625_44 temp625_41)
             (bvslt temp625_48 temp625_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp625_49 #x0000000000000000))
(assert (= var1191714 temp625_49))
(assert (= temp625_50 #x0000000000000000))
(assert (= temp625_51 temp625_50))
(assert (= temp625_52 (select ARGNAME_output_padding_NAMEEND_VAL temp625_51)))
(assert (= temp625_53 #x0000000000000001))
(assert (= temp625_54 temp625_53))
(assert (= temp625_55 (select ARGNAME_output_padding_NAMEEND_VAL temp625_54)))
(assert (= temp625_56 #x0000000000000002))
(assert (= temp625_57 temp625_56))
(assert (= temp625_58 (select ARGNAME_output_padding_NAMEEND_VAL temp625_57)))
(assert (= temp625_59 #x0000000000000003))
(assert (= temp625_60 temp625_59))
(assert (= temp625_61 (select ARGNAME_output_padding_NAMEEND_VAL temp625_60)))
(assert (= temp625_62 #x0000000000000004))
(assert (= temp625_63 temp625_62))
(assert (= temp625_64 (select ARGNAME_output_padding_NAMEEND_VAL temp625_63)))
(assert (= temp625_65 #x0000000000000005))
(assert (= temp625_66 temp625_65))
(assert (= temp625_67 (select ARGNAME_output_padding_NAMEEND_VAL temp625_66)))
(assert (= temp625_68 #x0000000000000000))
(assert (= temp625_69 #x0000000000000000))
(assert (= temp625_70 temp625_69))
(assert (= temp625_71 (select ARGNAME_output_padding_NAMEEND_VAL temp625_70)))
(assert (= temp625_72 #x0000000000000000))
(assert (= temp625_73 #x0000000000000001))
(assert (= temp625_74 temp625_73))
(assert (= temp625_75 (select ARGNAME_output_padding_NAMEEND_VAL temp625_74)))
(assert (= temp625_76 #x0000000000000000))
(assert (= temp625_77 #x0000000000000002))
(assert (= temp625_78 temp625_77))
(assert (= temp625_79 (select ARGNAME_output_padding_NAMEEND_VAL temp625_78)))
(assert (= temp625_80 #x0000000000000000))
(assert (= temp625_81 #x0000000000000003))
(assert (= temp625_82 temp625_81))
(assert (= temp625_83 (select ARGNAME_output_padding_NAMEEND_VAL temp625_82)))
(assert (= temp625_84 #x0000000000000000))
(assert (= temp625_85 #x0000000000000004))
(assert (= temp625_86 temp625_85))
(assert (= temp625_87 (select ARGNAME_output_padding_NAMEEND_VAL temp625_86)))
(assert (= temp625_88 #x0000000000000000))
(assert (= temp625_89 #x0000000000000005))
(assert (= temp625_90 temp625_89))
(assert (= temp625_91 (select ARGNAME_output_padding_NAMEEND_VAL temp625_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp625_71 temp625_68)
             (bvslt temp625_75 temp625_72)
             (bvslt temp625_79 temp625_76)
             (bvslt temp625_83 temp625_80)
             (bvslt temp625_87 temp625_84)
             (bvslt temp625_91 temp625_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp625_92 #x0000000000000000))
(assert (= var1191725 temp625_92))
(assert (= temp625_93 #x0000000000000000))
(assert (= temp625_94 temp625_93))
(assert (= temp625_95 (select ARGNAME_stride_NAMEEND_VAL temp625_94)))
(assert (= temp625_96 #x0000000000000001))
(assert (= temp625_97 temp625_96))
(assert (= temp625_98 (select ARGNAME_stride_NAMEEND_VAL temp625_97)))
(assert (= temp625_99 #x0000000000000002))
(assert (= temp625_100 temp625_99))
(assert (= temp625_101 (select ARGNAME_stride_NAMEEND_VAL temp625_100)))
(assert (= temp625_102 #x0000000000000003))
(assert (= temp625_103 temp625_102))
(assert (= temp625_104 (select ARGNAME_stride_NAMEEND_VAL temp625_103)))
(assert (= temp625_105 #x0000000000000004))
(assert (= temp625_106 temp625_105))
(assert (= temp625_107 (select ARGNAME_stride_NAMEEND_VAL temp625_106)))
(assert (= temp625_108 #x0000000000000005))
(assert (= temp625_109 temp625_108))
(assert (= temp625_110 (select ARGNAME_stride_NAMEEND_VAL temp625_109)))
(assert (= temp625_111 #x0000000000000000))
(assert (= temp625_112 #x0000000000000000))
(assert (= temp625_113 temp625_112))
(assert (= temp625_114 (select ARGNAME_stride_NAMEEND_VAL temp625_113)))
(assert (= temp625_115 #x0000000000000000))
(assert (= temp625_116 #x0000000000000001))
(assert (= temp625_117 temp625_116))
(assert (= temp625_118 (select ARGNAME_stride_NAMEEND_VAL temp625_117)))
(assert (= temp625_119 #x0000000000000000))
(assert (= temp625_120 #x0000000000000002))
(assert (= temp625_121 temp625_120))
(assert (= temp625_122 (select ARGNAME_stride_NAMEEND_VAL temp625_121)))
(assert (= temp625_123 #x0000000000000000))
(assert (= temp625_124 #x0000000000000003))
(assert (= temp625_125 temp625_124))
(assert (= temp625_126 (select ARGNAME_stride_NAMEEND_VAL temp625_125)))
(assert (= temp625_127 #x0000000000000000))
(assert (= temp625_128 #x0000000000000004))
(assert (= temp625_129 temp625_128))
(assert (= temp625_130 (select ARGNAME_stride_NAMEEND_VAL temp625_129)))
(assert (= temp625_131 #x0000000000000000))
(assert (= temp625_132 #x0000000000000005))
(assert (= temp625_133 temp625_132))
(assert (= temp625_134 (select ARGNAME_stride_NAMEEND_VAL temp625_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp625_114 temp625_111)
             (bvsle temp625_118 temp625_115)
             (bvsle temp625_122 temp625_119)
             (bvsle temp625_126 temp625_123)
             (bvsle temp625_130 temp625_127)
             (bvsle temp625_134 temp625_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp625_135 #x0000000000000000))
(assert (= var1191735 temp625_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp625_136 #x0000000000000001))
(assert (= var1191747 temp625_136))
(assert (= temp625_137 #x0000000000000000))
(assert (= var1179826 temp625_137))
(assert (= temp625_138 #x0000000000000000))
(assert (= temp625_139 temp625_138))
(assert (= temp625_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp625_139)))
(assert (= temp625_141 #x0000000000000001))
(assert (= temp625_142 temp625_141))
(assert (= temp625_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp625_142)))
(assert (= temp625_144 #x0000000000000002))
(assert (= temp625_145 temp625_144))
(assert (= temp625_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp625_145)))
(assert (= temp625_147 #x0000000000000003))
(assert (= temp625_148 temp625_147))
(assert (= temp625_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp625_148)))
(assert (= temp625_150 #x0000000000000004))
(assert (= temp625_151 temp625_150))
(assert (= temp625_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp625_151)))
(assert (= temp625_153 #x0000000000000005))
(assert (= temp625_154 temp625_153))
(assert (= temp625_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp625_154)))
(assert (= temp625_157 var1179826))
(assert (= temp625_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp625_157)))
(assert (= temp625_156 temp625_158))
(assert (= var1191780
   (ite (bvslt temp625_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp625_159 #x0000000000000000))
(assert (= var1191780 temp625_159))
(assert (= temp625_160 #x0000000000000000))
(assert (= var1179826 temp625_160))
(assert (= temp625_162 var1179826))
(assert (= temp625_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp625_162)))
(assert (= temp625_161 temp625_163))
(assert (= var1191802 (bvsmod temp625_161 ARGNAME_groups_NAMEEND)))
(assert (= temp625_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp625_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp625_165 #x0000000000000001))
(assert (= var1191803 temp625_165))
(assert (= temp625_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp625_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp625_167 #x0000000000000001))
(assert (= var1191823 temp625_167))
(assert (= temp625_168 #x0000000000000001))
(assert (= var1180714 temp625_168))
(assert (= temp625_169 #x0000000000000000))
(assert (= temp625_170 temp625_169))
(assert (= temp625_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp625_170)))
(assert (= temp625_172 #x0000000000000001))
(assert (= temp625_173 temp625_172))
(assert (= temp625_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp625_173)))
(assert (= temp625_175 #x0000000000000002))
(assert (= temp625_176 temp625_175))
(assert (= temp625_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp625_176)))
(assert (= temp625_178 #x0000000000000003))
(assert (= temp625_179 temp625_178))
(assert (= temp625_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp625_179)))
(assert (= temp625_181 #x0000000000000004))
(assert (= temp625_182 temp625_181))
(assert (= temp625_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp625_182)))
(assert (= temp625_184 #x0000000000000005))
(assert (= temp625_185 temp625_184))
(assert (= temp625_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp625_185)))
(assert (= temp625_187 #x0000000000000000))
(assert (= temp625_188
   (ite (bvslt var1180714 temp625_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp625_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp625_188)))
(assert (= var1191831 temp625_189))
(assert (bvslt (ite (bvslt var1180714 temp625_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp625_190 #x0000000000000001))
(assert (= var1180714 temp625_190))
(assert (= temp625_192 var1180714))
(assert (= temp625_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp625_192)))
(assert (= temp625_191 temp625_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp625_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp625_194 #x0000000000000001))
(assert (= var1191836 temp625_194))
(assert (= temp625_195 #x0000000000000000))
(assert (= var1179826 temp625_195))
(assert (= temp625_197 var1179826))
(assert (= temp625_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp625_197)))
(assert (= temp625_196 temp625_198))
(assert (= temp625_199 #x0000000000000002))
(assert (= var1586025 temp625_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp625_200 #x0000000000000001))
(assert (= var1191993 temp625_200))
(assert (= temp625_201 #x0000000000000001))
(assert (= var2700303 temp625_201))
(assert (= temp625_202 #x0000000000000001))
(assert (= var2962447 temp625_202))
(assert (= temp625_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp625_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp625_204 #x0000000000000001))
(assert (= var211058 temp625_204))
(assert (= temp625_205 #x0000000000000001))
(assert (= var211188 temp625_205))
(assert (= var3879401 var211188))
(assert (= temp625_206 #x0000000000000000))
(assert (= var3866802 temp625_206))
(assert (= temp625_207 #x0000000000000000))
(assert (= temp625_208
   (ite (bvslt var3866802 temp625_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp625_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp625_208)))
(assert (= var3879420 temp625_209))
(assert (bvslt (ite (bvslt var3866802 temp625_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp625_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp625_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp625_211 #x0000000000000001))
(assert (= var3879421 temp625_211))
(assert (= temp625_212 #x0000000000000000))
(assert (= var4079423 temp625_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp625_213 #x0000000000000002))
(assert (= var4208259 temp625_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp625_214 #x0000000000000000))
(assert (= var4273820 temp625_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4796816 var211201))
(assert (= var211388 var210913))
(assert (= temp625_215 #x0000000000000000))
(assert (= var211389
   (ite (distinct var211388 temp625_215) #x0000000000000001 #x0000000000000000)))
(assert (= var5717837 var211389))
(assert (= temp625_216 #x0000000000000001))
(assert (= var211058 temp625_216))
(model-add temp625_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp625_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp625_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp625_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





