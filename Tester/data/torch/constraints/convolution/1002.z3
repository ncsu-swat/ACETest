(declare-fun temp10002_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10002_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10002_3 () (_ BitVec 64))
(declare-fun temp10002_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10002_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10002_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10002_7 () (_ BitVec 64))
(declare-fun temp10002_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10002_9 () (_ BitVec 64))
(declare-fun temp10002_10 () (_ BitVec 64))
(declare-fun temp10002_11 () (_ BitVec 64))
(declare-fun temp10002_12 () (_ BitVec 64))
(declare-fun temp10002_13 () (_ BitVec 64))
(declare-fun temp10002_14 () (_ BitVec 64))
(declare-fun temp10002_15 () (_ BitVec 64))
(declare-fun temp10002_16 () (_ BitVec 64))
(declare-fun temp10002_17 () (_ BitVec 64))
(declare-fun temp10002_18 () (_ BitVec 64))
(declare-fun temp10002_19 () (_ BitVec 64))
(declare-fun temp10002_20 () (_ BitVec 64))
(declare-fun temp10002_21 () (_ BitVec 64))
(declare-fun temp10002_22 () (_ BitVec 64))
(declare-fun temp10002_23 () (_ BitVec 64))
(declare-fun temp10002_24 () (_ BitVec 64))
(declare-fun temp10002_25 () (_ BitVec 64))
(declare-fun temp10002_26 () (_ BitVec 64))
(declare-fun temp10002_27 () (_ BitVec 64))
(declare-fun temp10002_28 () (_ BitVec 64))
(declare-fun temp10002_29 () (_ BitVec 64))
(declare-fun temp10002_30 () (_ BitVec 64))
(declare-fun temp10002_31 () (_ BitVec 64))
(declare-fun temp10002_32 () (_ BitVec 64))
(declare-fun temp10002_33 () (_ BitVec 64))
(declare-fun temp10002_34 () (_ BitVec 64))
(declare-fun temp10002_35 () (_ BitVec 64))
(declare-fun temp10002_36 () (_ BitVec 64))
(declare-fun temp10002_37 () (_ BitVec 64))
(declare-fun temp10002_38 () (_ BitVec 64))
(declare-fun temp10002_39 () (_ BitVec 64))
(declare-fun temp10002_40 () (_ BitVec 64))
(declare-fun temp10002_41 () (_ BitVec 64))
(declare-fun temp10002_42 () (_ BitVec 64))
(declare-fun temp10002_43 () (_ BitVec 64))
(declare-fun temp10002_44 () (_ BitVec 64))
(declare-fun temp10002_45 () (_ BitVec 64))
(declare-fun temp10002_46 () (_ BitVec 64))
(declare-fun temp10002_47 () (_ BitVec 64))
(declare-fun temp10002_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10002_49 () (_ BitVec 64))
(declare-fun temp10002_50 () (_ BitVec 64))
(declare-fun temp10002_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10002_52 () (_ BitVec 64))
(declare-fun temp10002_53 () (_ BitVec 64))
(declare-fun temp10002_54 () (_ BitVec 64))
(declare-fun temp10002_55 () (_ BitVec 64))
(declare-fun temp10002_56 () (_ BitVec 64))
(declare-fun temp10002_57 () (_ BitVec 64))
(declare-fun temp10002_58 () (_ BitVec 64))
(declare-fun temp10002_59 () (_ BitVec 64))
(declare-fun temp10002_60 () (_ BitVec 64))
(declare-fun temp10002_61 () (_ BitVec 64))
(declare-fun temp10002_62 () (_ BitVec 64))
(declare-fun temp10002_63 () (_ BitVec 64))
(declare-fun temp10002_64 () (_ BitVec 64))
(declare-fun temp10002_65 () (_ BitVec 64))
(declare-fun temp10002_66 () (_ BitVec 64))
(declare-fun temp10002_67 () (_ BitVec 64))
(declare-fun temp10002_68 () (_ BitVec 64))
(declare-fun temp10002_69 () (_ BitVec 64))
(declare-fun temp10002_70 () (_ BitVec 64))
(declare-fun temp10002_71 () (_ BitVec 64))
(declare-fun temp10002_72 () (_ BitVec 64))
(declare-fun temp10002_73 () (_ BitVec 64))
(declare-fun temp10002_74 () (_ BitVec 64))
(declare-fun temp10002_75 () (_ BitVec 64))
(declare-fun temp10002_76 () (_ BitVec 64))
(declare-fun temp10002_77 () (_ BitVec 64))
(declare-fun temp10002_78 () (_ BitVec 64))
(declare-fun temp10002_79 () (_ BitVec 64))
(declare-fun temp10002_80 () (_ BitVec 64))
(declare-fun temp10002_81 () (_ BitVec 64))
(declare-fun temp10002_82 () (_ BitVec 64))
(declare-fun temp10002_83 () (_ BitVec 64))
(declare-fun temp10002_84 () (_ BitVec 64))
(declare-fun temp10002_85 () (_ BitVec 64))
(declare-fun temp10002_86 () (_ BitVec 64))
(declare-fun temp10002_87 () (_ BitVec 64))
(declare-fun temp10002_88 () (_ BitVec 64))
(declare-fun temp10002_89 () (_ BitVec 64))
(declare-fun temp10002_90 () (_ BitVec 64))
(declare-fun temp10002_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10002_92 () (_ BitVec 64))
(declare-fun temp10002_93 () (_ BitVec 64))
(declare-fun temp10002_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10002_95 () (_ BitVec 64))
(declare-fun temp10002_96 () (_ BitVec 64))
(declare-fun temp10002_97 () (_ BitVec 64))
(declare-fun temp10002_98 () (_ BitVec 64))
(declare-fun temp10002_99 () (_ BitVec 64))
(declare-fun temp10002_100 () (_ BitVec 64))
(declare-fun temp10002_101 () (_ BitVec 64))
(declare-fun temp10002_102 () (_ BitVec 64))
(declare-fun temp10002_103 () (_ BitVec 64))
(declare-fun temp10002_104 () (_ BitVec 64))
(declare-fun temp10002_105 () (_ BitVec 64))
(declare-fun temp10002_106 () (_ BitVec 64))
(declare-fun temp10002_107 () (_ BitVec 64))
(declare-fun temp10002_108 () (_ BitVec 64))
(declare-fun temp10002_109 () (_ BitVec 64))
(declare-fun temp10002_110 () (_ BitVec 64))
(declare-fun temp10002_111 () (_ BitVec 64))
(declare-fun temp10002_112 () (_ BitVec 64))
(declare-fun temp10002_113 () (_ BitVec 64))
(declare-fun temp10002_114 () (_ BitVec 64))
(declare-fun temp10002_115 () (_ BitVec 64))
(declare-fun temp10002_116 () (_ BitVec 64))
(declare-fun temp10002_117 () (_ BitVec 64))
(declare-fun temp10002_118 () (_ BitVec 64))
(declare-fun temp10002_119 () (_ BitVec 64))
(declare-fun temp10002_120 () (_ BitVec 64))
(declare-fun temp10002_121 () (_ BitVec 64))
(declare-fun temp10002_122 () (_ BitVec 64))
(declare-fun temp10002_123 () (_ BitVec 64))
(declare-fun temp10002_124 () (_ BitVec 64))
(declare-fun temp10002_125 () (_ BitVec 64))
(declare-fun temp10002_126 () (_ BitVec 64))
(declare-fun temp10002_127 () (_ BitVec 64))
(declare-fun temp10002_128 () (_ BitVec 64))
(declare-fun temp10002_129 () (_ BitVec 64))
(declare-fun temp10002_130 () (_ BitVec 64))
(declare-fun temp10002_131 () (_ BitVec 64))
(declare-fun temp10002_132 () (_ BitVec 64))
(declare-fun temp10002_133 () (_ BitVec 64))
(declare-fun temp10002_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10002_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10002_136 () (_ BitVec 64))
(declare-fun temp10002_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10002_138 () (_ BitVec 64))
(declare-fun temp10002_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10002_140 () (_ BitVec 64))
(declare-fun temp10002_141 () (_ BitVec 64))
(declare-fun temp10002_142 () (_ BitVec 64))
(declare-fun temp10002_143 () (_ BitVec 64))
(declare-fun temp10002_144 () (_ BitVec 64))
(declare-fun temp10002_145 () (_ BitVec 64))
(declare-fun temp10002_146 () (_ BitVec 64))
(declare-fun temp10002_147 () (_ BitVec 64))
(declare-fun temp10002_148 () (_ BitVec 64))
(declare-fun temp10002_149 () (_ BitVec 64))
(declare-fun temp10002_150 () (_ BitVec 64))
(declare-fun temp10002_151 () (_ BitVec 64))
(declare-fun temp10002_152 () (_ BitVec 64))
(declare-fun temp10002_153 () (_ BitVec 64))
(declare-fun temp10002_154 () (_ BitVec 64))
(declare-fun temp10002_155 () (_ BitVec 64))
(declare-fun temp10002_157 () (_ BitVec 64))
(declare-fun temp10002_158 () (_ BitVec 64))
(declare-fun temp10002_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10002_159 () (_ BitVec 64))
(declare-fun temp10002_160 () (_ BitVec 64))
(declare-fun temp10002_162 () (_ BitVec 64))
(declare-fun temp10002_163 () (_ BitVec 64))
(declare-fun temp10002_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10002_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10002_165 () (_ BitVec 64))
(declare-fun temp10002_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10002_167 () (_ BitVec 64))
(declare-fun temp10002_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10002_169 () (_ BitVec 64))
(declare-fun temp10002_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10002_171 () (_ BitVec 64))
(declare-fun temp10002_172 () (_ BitVec 64))
(declare-fun temp10002_173 () (_ BitVec 64))
(declare-fun temp10002_174 () (_ BitVec 64))
(declare-fun temp10002_175 () (_ BitVec 64))
(declare-fun temp10002_176 () (_ BitVec 64))
(declare-fun temp10002_177 () (_ BitVec 64))
(declare-fun temp10002_178 () (_ BitVec 64))
(declare-fun temp10002_179 () (_ BitVec 64))
(declare-fun temp10002_180 () (_ BitVec 64))
(declare-fun temp10002_181 () (_ BitVec 64))
(declare-fun temp10002_182 () (_ BitVec 64))
(declare-fun temp10002_183 () (_ BitVec 64))
(declare-fun temp10002_184 () (_ BitVec 64))
(declare-fun temp10002_185 () (_ BitVec 64))
(declare-fun temp10002_186 () (_ BitVec 64))
(declare-fun temp10002_187 () (_ BitVec 64))
(declare-fun temp10002_188 () (_ BitVec 64))
(declare-fun temp10002_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10002_190 () (_ BitVec 64))
(declare-fun temp10002_192 () (_ BitVec 64))
(declare-fun temp10002_193 () (_ BitVec 64))
(declare-fun temp10002_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10002_194 () (_ BitVec 64))
(declare-fun temp10002_195 () (_ BitVec 64))
(declare-fun temp10002_197 () (_ BitVec 64))
(declare-fun temp10002_198 () (_ BitVec 64))
(declare-fun temp10002_196 () (_ BitVec 64))
(declare-fun temp10002_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10002_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10002_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10002_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10002_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10002_204 () (_ BitVec 64))
(declare-fun temp10002_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10002_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10002_207 () (_ BitVec 64))
(declare-fun temp10002_208 () (_ BitVec 64))
(declare-fun temp10002_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10002_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10002_211 () (_ BitVec 64))
(declare-fun temp10002_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10002_213 () (_ BitVec 64))
(declare-fun temp10002_214 () (_ BitVec 64))
(declare-fun temp10002_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10002_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10002_217 () (_ BitVec 64))
(declare-fun temp10002_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10002_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10002_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4796816 () (_ BitVec 64))
(declare-fun var211494 () (_ BitVec 64))
(declare-fun temp10002_221 () (_ BitVec 64))
(declare-fun var211495 () (_ BitVec 64))
(declare-fun temp10002_222 () (_ BitVec 64))
(assert (= temp10002_1 #x0000000000000001))
(assert (= var77203 temp10002_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10002_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10002_2)))
(assert (= temp10002_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10002_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10002_4 #x0000000000000000))
(assert (= var210941 temp10002_4))
(assert (= temp10002_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10002_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10002_6 #x0000000000000000))
(assert (= var210986 temp10002_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10002_7 #x0000000000000000))
(assert (= temp10002_8 temp10002_7))
(assert (= temp10002_9 (select ARGNAME_padding_NAMEEND_VAL temp10002_8)))
(assert (= temp10002_10 #x0000000000000001))
(assert (= temp10002_11 temp10002_10))
(assert (= temp10002_12 (select ARGNAME_padding_NAMEEND_VAL temp10002_11)))
(assert (= temp10002_13 #x0000000000000002))
(assert (= temp10002_14 temp10002_13))
(assert (= temp10002_15 (select ARGNAME_padding_NAMEEND_VAL temp10002_14)))
(assert (= temp10002_16 #x0000000000000003))
(assert (= temp10002_17 temp10002_16))
(assert (= temp10002_18 (select ARGNAME_padding_NAMEEND_VAL temp10002_17)))
(assert (= temp10002_19 #x0000000000000004))
(assert (= temp10002_20 temp10002_19))
(assert (= temp10002_21 (select ARGNAME_padding_NAMEEND_VAL temp10002_20)))
(assert (= temp10002_22 #x0000000000000005))
(assert (= temp10002_23 temp10002_22))
(assert (= temp10002_24 (select ARGNAME_padding_NAMEEND_VAL temp10002_23)))
(assert (= temp10002_25 #x0000000000000000))
(assert (= temp10002_26 #x0000000000000000))
(assert (= temp10002_27 temp10002_26))
(assert (= temp10002_28 (select ARGNAME_padding_NAMEEND_VAL temp10002_27)))
(assert (= temp10002_29 #x0000000000000000))
(assert (= temp10002_30 #x0000000000000001))
(assert (= temp10002_31 temp10002_30))
(assert (= temp10002_32 (select ARGNAME_padding_NAMEEND_VAL temp10002_31)))
(assert (= temp10002_33 #x0000000000000000))
(assert (= temp10002_34 #x0000000000000002))
(assert (= temp10002_35 temp10002_34))
(assert (= temp10002_36 (select ARGNAME_padding_NAMEEND_VAL temp10002_35)))
(assert (= temp10002_37 #x0000000000000000))
(assert (= temp10002_38 #x0000000000000003))
(assert (= temp10002_39 temp10002_38))
(assert (= temp10002_40 (select ARGNAME_padding_NAMEEND_VAL temp10002_39)))
(assert (= temp10002_41 #x0000000000000000))
(assert (= temp10002_42 #x0000000000000004))
(assert (= temp10002_43 temp10002_42))
(assert (= temp10002_44 (select ARGNAME_padding_NAMEEND_VAL temp10002_43)))
(assert (= temp10002_45 #x0000000000000000))
(assert (= temp10002_46 #x0000000000000005))
(assert (= temp10002_47 temp10002_46))
(assert (= temp10002_48 (select ARGNAME_padding_NAMEEND_VAL temp10002_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10002_28 temp10002_25)
             (bvslt temp10002_32 temp10002_29)
             (bvslt temp10002_36 temp10002_33)
             (bvslt temp10002_40 temp10002_37)
             (bvslt temp10002_44 temp10002_41)
             (bvslt temp10002_48 temp10002_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10002_49 #x0000000000000000))
(assert (= var1191714 temp10002_49))
(assert (= temp10002_50 #x0000000000000000))
(assert (= temp10002_51 temp10002_50))
(assert (= temp10002_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10002_51)))
(assert (= temp10002_53 #x0000000000000001))
(assert (= temp10002_54 temp10002_53))
(assert (= temp10002_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10002_54)))
(assert (= temp10002_56 #x0000000000000002))
(assert (= temp10002_57 temp10002_56))
(assert (= temp10002_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10002_57)))
(assert (= temp10002_59 #x0000000000000003))
(assert (= temp10002_60 temp10002_59))
(assert (= temp10002_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10002_60)))
(assert (= temp10002_62 #x0000000000000004))
(assert (= temp10002_63 temp10002_62))
(assert (= temp10002_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10002_63)))
(assert (= temp10002_65 #x0000000000000005))
(assert (= temp10002_66 temp10002_65))
(assert (= temp10002_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10002_66)))
(assert (= temp10002_68 #x0000000000000000))
(assert (= temp10002_69 #x0000000000000000))
(assert (= temp10002_70 temp10002_69))
(assert (= temp10002_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10002_70)))
(assert (= temp10002_72 #x0000000000000000))
(assert (= temp10002_73 #x0000000000000001))
(assert (= temp10002_74 temp10002_73))
(assert (= temp10002_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10002_74)))
(assert (= temp10002_76 #x0000000000000000))
(assert (= temp10002_77 #x0000000000000002))
(assert (= temp10002_78 temp10002_77))
(assert (= temp10002_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10002_78)))
(assert (= temp10002_80 #x0000000000000000))
(assert (= temp10002_81 #x0000000000000003))
(assert (= temp10002_82 temp10002_81))
(assert (= temp10002_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10002_82)))
(assert (= temp10002_84 #x0000000000000000))
(assert (= temp10002_85 #x0000000000000004))
(assert (= temp10002_86 temp10002_85))
(assert (= temp10002_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10002_86)))
(assert (= temp10002_88 #x0000000000000000))
(assert (= temp10002_89 #x0000000000000005))
(assert (= temp10002_90 temp10002_89))
(assert (= temp10002_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10002_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10002_71 temp10002_68)
             (bvslt temp10002_75 temp10002_72)
             (bvslt temp10002_79 temp10002_76)
             (bvslt temp10002_83 temp10002_80)
             (bvslt temp10002_87 temp10002_84)
             (bvslt temp10002_91 temp10002_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10002_92 #x0000000000000000))
(assert (= var1191725 temp10002_92))
(assert (= temp10002_93 #x0000000000000000))
(assert (= temp10002_94 temp10002_93))
(assert (= temp10002_95 (select ARGNAME_stride_NAMEEND_VAL temp10002_94)))
(assert (= temp10002_96 #x0000000000000001))
(assert (= temp10002_97 temp10002_96))
(assert (= temp10002_98 (select ARGNAME_stride_NAMEEND_VAL temp10002_97)))
(assert (= temp10002_99 #x0000000000000002))
(assert (= temp10002_100 temp10002_99))
(assert (= temp10002_101 (select ARGNAME_stride_NAMEEND_VAL temp10002_100)))
(assert (= temp10002_102 #x0000000000000003))
(assert (= temp10002_103 temp10002_102))
(assert (= temp10002_104 (select ARGNAME_stride_NAMEEND_VAL temp10002_103)))
(assert (= temp10002_105 #x0000000000000004))
(assert (= temp10002_106 temp10002_105))
(assert (= temp10002_107 (select ARGNAME_stride_NAMEEND_VAL temp10002_106)))
(assert (= temp10002_108 #x0000000000000005))
(assert (= temp10002_109 temp10002_108))
(assert (= temp10002_110 (select ARGNAME_stride_NAMEEND_VAL temp10002_109)))
(assert (= temp10002_111 #x0000000000000000))
(assert (= temp10002_112 #x0000000000000000))
(assert (= temp10002_113 temp10002_112))
(assert (= temp10002_114 (select ARGNAME_stride_NAMEEND_VAL temp10002_113)))
(assert (= temp10002_115 #x0000000000000000))
(assert (= temp10002_116 #x0000000000000001))
(assert (= temp10002_117 temp10002_116))
(assert (= temp10002_118 (select ARGNAME_stride_NAMEEND_VAL temp10002_117)))
(assert (= temp10002_119 #x0000000000000000))
(assert (= temp10002_120 #x0000000000000002))
(assert (= temp10002_121 temp10002_120))
(assert (= temp10002_122 (select ARGNAME_stride_NAMEEND_VAL temp10002_121)))
(assert (= temp10002_123 #x0000000000000000))
(assert (= temp10002_124 #x0000000000000003))
(assert (= temp10002_125 temp10002_124))
(assert (= temp10002_126 (select ARGNAME_stride_NAMEEND_VAL temp10002_125)))
(assert (= temp10002_127 #x0000000000000000))
(assert (= temp10002_128 #x0000000000000004))
(assert (= temp10002_129 temp10002_128))
(assert (= temp10002_130 (select ARGNAME_stride_NAMEEND_VAL temp10002_129)))
(assert (= temp10002_131 #x0000000000000000))
(assert (= temp10002_132 #x0000000000000005))
(assert (= temp10002_133 temp10002_132))
(assert (= temp10002_134 (select ARGNAME_stride_NAMEEND_VAL temp10002_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10002_114 temp10002_111)
             (bvsle temp10002_118 temp10002_115)
             (bvsle temp10002_122 temp10002_119)
             (bvsle temp10002_126 temp10002_123)
             (bvsle temp10002_130 temp10002_127)
             (bvsle temp10002_134 temp10002_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10002_135 #x0000000000000000))
(assert (= var1191735 temp10002_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10002_136 #x0000000000000001))
(assert (= var1191747 temp10002_136))
(assert (= temp10002_137 #x0000000000000000))
(assert (= var1179826 temp10002_137))
(assert (= temp10002_138 #x0000000000000000))
(assert (= temp10002_139 temp10002_138))
(assert (= temp10002_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10002_139)))
(assert (= temp10002_141 #x0000000000000001))
(assert (= temp10002_142 temp10002_141))
(assert (= temp10002_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10002_142)))
(assert (= temp10002_144 #x0000000000000002))
(assert (= temp10002_145 temp10002_144))
(assert (= temp10002_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10002_145)))
(assert (= temp10002_147 #x0000000000000003))
(assert (= temp10002_148 temp10002_147))
(assert (= temp10002_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10002_148)))
(assert (= temp10002_150 #x0000000000000004))
(assert (= temp10002_151 temp10002_150))
(assert (= temp10002_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10002_151)))
(assert (= temp10002_153 #x0000000000000005))
(assert (= temp10002_154 temp10002_153))
(assert (= temp10002_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10002_154)))
(assert (= temp10002_157 var1179826))
(assert (= temp10002_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10002_157)))
(assert (= temp10002_156 temp10002_158))
(assert (= var1191780
   (ite (bvslt temp10002_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10002_159 #x0000000000000000))
(assert (= var1191780 temp10002_159))
(assert (= temp10002_160 #x0000000000000000))
(assert (= var1179826 temp10002_160))
(assert (= temp10002_162 var1179826))
(assert (= temp10002_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10002_162)))
(assert (= temp10002_161 temp10002_163))
(assert (= var1191802 (bvsmod temp10002_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10002_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10002_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10002_165 #x0000000000000001))
(assert (= var1191803 temp10002_165))
(assert (= temp10002_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10002_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10002_167 #x0000000000000001))
(assert (= var1191823 temp10002_167))
(assert (= temp10002_168 #x0000000000000001))
(assert (= var1180714 temp10002_168))
(assert (= temp10002_169 #x0000000000000000))
(assert (= temp10002_170 temp10002_169))
(assert (= temp10002_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10002_170)))
(assert (= temp10002_172 #x0000000000000001))
(assert (= temp10002_173 temp10002_172))
(assert (= temp10002_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10002_173)))
(assert (= temp10002_175 #x0000000000000002))
(assert (= temp10002_176 temp10002_175))
(assert (= temp10002_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10002_176)))
(assert (= temp10002_178 #x0000000000000003))
(assert (= temp10002_179 temp10002_178))
(assert (= temp10002_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10002_179)))
(assert (= temp10002_181 #x0000000000000004))
(assert (= temp10002_182 temp10002_181))
(assert (= temp10002_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10002_182)))
(assert (= temp10002_184 #x0000000000000005))
(assert (= temp10002_185 temp10002_184))
(assert (= temp10002_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10002_185)))
(assert (= temp10002_187 #x0000000000000000))
(assert (= temp10002_188
   (ite (bvslt var1180714 temp10002_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10002_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10002_188)))
(assert (= var1191831 temp10002_189))
(assert (bvslt (ite (bvslt var1180714 temp10002_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10002_190 #x0000000000000001))
(assert (= var1180714 temp10002_190))
(assert (= temp10002_192 var1180714))
(assert (= temp10002_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10002_192)))
(assert (= temp10002_191 temp10002_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10002_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10002_194 #x0000000000000001))
(assert (= var1191836 temp10002_194))
(assert (= temp10002_195 #x0000000000000000))
(assert (= var1179826 temp10002_195))
(assert (= temp10002_197 var1179826))
(assert (= temp10002_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10002_197)))
(assert (= temp10002_196 temp10002_198))
(assert (= temp10002_199 #x0000000000000002))
(assert (= var1586025 temp10002_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10002_200 #x0000000000000001))
(assert (= var1191993 temp10002_200))
(assert (= temp10002_201 #x0000000000000001))
(assert (= var2700303 temp10002_201))
(assert (= temp10002_202 #x0000000000000001))
(assert (= var2962447 temp10002_202))
(assert (= temp10002_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10002_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10002_204 #x0000000000000001))
(assert (= var211058 temp10002_204))
(assert (= temp10002_205 #x0000000000000001))
(assert (= var211188 temp10002_205))
(assert (= var3879401 var211188))
(assert (= temp10002_206 #x0000000000000000))
(assert (= var3866802 temp10002_206))
(assert (= temp10002_207 #x0000000000000000))
(assert (= temp10002_208
   (ite (bvslt var3866802 temp10002_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10002_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10002_208)))
(assert (= var3879420 temp10002_209))
(assert (bvslt (ite (bvslt var3866802 temp10002_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10002_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10002_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10002_211 #x0000000000000000))
(assert (= var3879421 temp10002_211))
(assert (= temp10002_212 #x0000000000000001))
(assert (= var3867690 temp10002_212))
(assert (= temp10002_213 #x0000000000000000))
(assert (= temp10002_214
   (ite (bvslt var3867690 temp10002_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10002_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10002_214)))
(assert (= var3879423 temp10002_215))
(assert (bvslt (ite (bvslt var3867690 temp10002_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10002_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10002_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10002_217 #x0000000000000001))
(assert (= var3879424 temp10002_217))
(assert (= temp10002_218 #x0000000000000000))
(assert (= var4079423 temp10002_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10002_219 #x0000000000000002))
(assert (= var4208259 temp10002_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10002_220 #x0000000000000000))
(assert (= var4273820 temp10002_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4796816 var211201))
(assert (= var211494 var210913))
(assert (= temp10002_221 #x0000000000000000))
(assert (= var211495
   (ite (distinct var211494 temp10002_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10002_222 #x0000000000000001))
(assert (= var211058 temp10002_222))
(model-add temp10002_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10002_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10002_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10002_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




