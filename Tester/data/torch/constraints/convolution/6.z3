(declare-fun temp8_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp8_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp8_3 () (_ BitVec 64))
(declare-fun temp8_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp8_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp8_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp8_7 () (_ BitVec 64))
(declare-fun temp8_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp8_9 () (_ BitVec 64))
(declare-fun temp8_10 () (_ BitVec 64))
(declare-fun temp8_11 () (_ BitVec 64))
(declare-fun temp8_12 () (_ BitVec 64))
(declare-fun temp8_13 () (_ BitVec 64))
(declare-fun temp8_14 () (_ BitVec 64))
(declare-fun temp8_15 () (_ BitVec 64))
(declare-fun temp8_16 () (_ BitVec 64))
(declare-fun temp8_17 () (_ BitVec 64))
(declare-fun temp8_18 () (_ BitVec 64))
(declare-fun temp8_19 () (_ BitVec 64))
(declare-fun temp8_20 () (_ BitVec 64))
(declare-fun temp8_21 () (_ BitVec 64))
(declare-fun temp8_22 () (_ BitVec 64))
(declare-fun temp8_23 () (_ BitVec 64))
(declare-fun temp8_24 () (_ BitVec 64))
(declare-fun temp8_25 () (_ BitVec 64))
(declare-fun temp8_26 () (_ BitVec 64))
(declare-fun temp8_27 () (_ BitVec 64))
(declare-fun temp8_28 () (_ BitVec 64))
(declare-fun temp8_29 () (_ BitVec 64))
(declare-fun temp8_30 () (_ BitVec 64))
(declare-fun temp8_31 () (_ BitVec 64))
(declare-fun temp8_32 () (_ BitVec 64))
(declare-fun temp8_33 () (_ BitVec 64))
(declare-fun temp8_34 () (_ BitVec 64))
(declare-fun temp8_35 () (_ BitVec 64))
(declare-fun temp8_36 () (_ BitVec 64))
(declare-fun temp8_37 () (_ BitVec 64))
(declare-fun temp8_38 () (_ BitVec 64))
(declare-fun temp8_39 () (_ BitVec 64))
(declare-fun temp8_40 () (_ BitVec 64))
(declare-fun temp8_41 () (_ BitVec 64))
(declare-fun temp8_42 () (_ BitVec 64))
(declare-fun temp8_43 () (_ BitVec 64))
(declare-fun temp8_44 () (_ BitVec 64))
(declare-fun temp8_45 () (_ BitVec 64))
(declare-fun temp8_46 () (_ BitVec 64))
(declare-fun temp8_47 () (_ BitVec 64))
(declare-fun temp8_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp8_49 () (_ BitVec 64))
(declare-fun temp8_50 () (_ BitVec 64))
(declare-fun temp8_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp8_52 () (_ BitVec 64))
(declare-fun temp8_53 () (_ BitVec 64))
(declare-fun temp8_54 () (_ BitVec 64))
(declare-fun temp8_55 () (_ BitVec 64))
(declare-fun temp8_56 () (_ BitVec 64))
(declare-fun temp8_57 () (_ BitVec 64))
(declare-fun temp8_58 () (_ BitVec 64))
(declare-fun temp8_59 () (_ BitVec 64))
(declare-fun temp8_60 () (_ BitVec 64))
(declare-fun temp8_61 () (_ BitVec 64))
(declare-fun temp8_62 () (_ BitVec 64))
(declare-fun temp8_63 () (_ BitVec 64))
(declare-fun temp8_64 () (_ BitVec 64))
(declare-fun temp8_65 () (_ BitVec 64))
(declare-fun temp8_66 () (_ BitVec 64))
(declare-fun temp8_67 () (_ BitVec 64))
(declare-fun temp8_68 () (_ BitVec 64))
(declare-fun temp8_69 () (_ BitVec 64))
(declare-fun temp8_70 () (_ BitVec 64))
(declare-fun temp8_71 () (_ BitVec 64))
(declare-fun temp8_72 () (_ BitVec 64))
(declare-fun temp8_73 () (_ BitVec 64))
(declare-fun temp8_74 () (_ BitVec 64))
(declare-fun temp8_75 () (_ BitVec 64))
(declare-fun temp8_76 () (_ BitVec 64))
(declare-fun temp8_77 () (_ BitVec 64))
(declare-fun temp8_78 () (_ BitVec 64))
(declare-fun temp8_79 () (_ BitVec 64))
(declare-fun temp8_80 () (_ BitVec 64))
(declare-fun temp8_81 () (_ BitVec 64))
(declare-fun temp8_82 () (_ BitVec 64))
(declare-fun temp8_83 () (_ BitVec 64))
(declare-fun temp8_84 () (_ BitVec 64))
(declare-fun temp8_85 () (_ BitVec 64))
(declare-fun temp8_86 () (_ BitVec 64))
(declare-fun temp8_87 () (_ BitVec 64))
(declare-fun temp8_88 () (_ BitVec 64))
(declare-fun temp8_89 () (_ BitVec 64))
(declare-fun temp8_90 () (_ BitVec 64))
(declare-fun temp8_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp8_92 () (_ BitVec 64))
(declare-fun temp8_93 () (_ BitVec 64))
(declare-fun temp8_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp8_95 () (_ BitVec 64))
(declare-fun temp8_96 () (_ BitVec 64))
(declare-fun temp8_97 () (_ BitVec 64))
(declare-fun temp8_98 () (_ BitVec 64))
(declare-fun temp8_99 () (_ BitVec 64))
(declare-fun temp8_100 () (_ BitVec 64))
(declare-fun temp8_101 () (_ BitVec 64))
(declare-fun temp8_102 () (_ BitVec 64))
(declare-fun temp8_103 () (_ BitVec 64))
(declare-fun temp8_104 () (_ BitVec 64))
(declare-fun temp8_105 () (_ BitVec 64))
(declare-fun temp8_106 () (_ BitVec 64))
(declare-fun temp8_107 () (_ BitVec 64))
(declare-fun temp8_108 () (_ BitVec 64))
(declare-fun temp8_109 () (_ BitVec 64))
(declare-fun temp8_110 () (_ BitVec 64))
(declare-fun temp8_111 () (_ BitVec 64))
(declare-fun temp8_112 () (_ BitVec 64))
(declare-fun temp8_113 () (_ BitVec 64))
(declare-fun temp8_114 () (_ BitVec 64))
(declare-fun temp8_115 () (_ BitVec 64))
(declare-fun temp8_116 () (_ BitVec 64))
(declare-fun temp8_117 () (_ BitVec 64))
(declare-fun temp8_118 () (_ BitVec 64))
(declare-fun temp8_119 () (_ BitVec 64))
(declare-fun temp8_120 () (_ BitVec 64))
(declare-fun temp8_121 () (_ BitVec 64))
(declare-fun temp8_122 () (_ BitVec 64))
(declare-fun temp8_123 () (_ BitVec 64))
(declare-fun temp8_124 () (_ BitVec 64))
(declare-fun temp8_125 () (_ BitVec 64))
(declare-fun temp8_126 () (_ BitVec 64))
(declare-fun temp8_127 () (_ BitVec 64))
(declare-fun temp8_128 () (_ BitVec 64))
(declare-fun temp8_129 () (_ BitVec 64))
(declare-fun temp8_130 () (_ BitVec 64))
(declare-fun temp8_131 () (_ BitVec 64))
(declare-fun temp8_132 () (_ BitVec 64))
(declare-fun temp8_133 () (_ BitVec 64))
(declare-fun temp8_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp8_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp8_136 () (_ BitVec 64))
(declare-fun temp8_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp8_138 () (_ BitVec 64))
(declare-fun temp8_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp8_140 () (_ BitVec 64))
(declare-fun temp8_141 () (_ BitVec 64))
(declare-fun temp8_142 () (_ BitVec 64))
(declare-fun temp8_143 () (_ BitVec 64))
(declare-fun temp8_144 () (_ BitVec 64))
(declare-fun temp8_145 () (_ BitVec 64))
(declare-fun temp8_146 () (_ BitVec 64))
(declare-fun temp8_147 () (_ BitVec 64))
(declare-fun temp8_148 () (_ BitVec 64))
(declare-fun temp8_149 () (_ BitVec 64))
(declare-fun temp8_150 () (_ BitVec 64))
(declare-fun temp8_151 () (_ BitVec 64))
(declare-fun temp8_152 () (_ BitVec 64))
(declare-fun temp8_153 () (_ BitVec 64))
(declare-fun temp8_154 () (_ BitVec 64))
(declare-fun temp8_155 () (_ BitVec 64))
(declare-fun temp8_157 () (_ BitVec 64))
(declare-fun temp8_158 () (_ BitVec 64))
(declare-fun temp8_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp8_159 () (_ BitVec 64))
(declare-fun temp8_160 () (_ BitVec 64))
(declare-fun temp8_162 () (_ BitVec 64))
(declare-fun temp8_163 () (_ BitVec 64))
(declare-fun temp8_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp8_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp8_165 () (_ BitVec 64))
(declare-fun temp8_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp8_167 () (_ BitVec 64))
(declare-fun temp8_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp8_169 () (_ BitVec 64))
(declare-fun temp8_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp8_171 () (_ BitVec 64))
(declare-fun temp8_172 () (_ BitVec 64))
(declare-fun temp8_173 () (_ BitVec 64))
(declare-fun temp8_174 () (_ BitVec 64))
(declare-fun temp8_175 () (_ BitVec 64))
(declare-fun temp8_176 () (_ BitVec 64))
(declare-fun temp8_177 () (_ BitVec 64))
(declare-fun temp8_178 () (_ BitVec 64))
(declare-fun temp8_179 () (_ BitVec 64))
(declare-fun temp8_180 () (_ BitVec 64))
(declare-fun temp8_181 () (_ BitVec 64))
(declare-fun temp8_182 () (_ BitVec 64))
(declare-fun temp8_183 () (_ BitVec 64))
(declare-fun temp8_184 () (_ BitVec 64))
(declare-fun temp8_185 () (_ BitVec 64))
(declare-fun temp8_186 () (_ BitVec 64))
(declare-fun temp8_187 () (_ BitVec 64))
(declare-fun temp8_188 () (_ BitVec 64))
(declare-fun temp8_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp8_190 () (_ BitVec 64))
(declare-fun temp8_192 () (_ BitVec 64))
(declare-fun temp8_193 () (_ BitVec 64))
(declare-fun temp8_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp8_194 () (_ BitVec 64))
(declare-fun temp8_195 () (_ BitVec 64))
(declare-fun temp8_197 () (_ BitVec 64))
(declare-fun temp8_198 () (_ BitVec 64))
(declare-fun temp8_196 () (_ BitVec 64))
(declare-fun temp8_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp8_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp8_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp8_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp8_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp8_204 () (_ BitVec 64))
(declare-fun temp8_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp8_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp8_207 () (_ BitVec 64))
(declare-fun temp8_208 () (_ BitVec 64))
(declare-fun temp8_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp8_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp8_211 () (_ BitVec 64))
(declare-fun temp8_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp8_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp8_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp8_215 () (_ BitVec 64))
(declare-fun var4469136 () (_ BitVec 64))
(declare-fun temp8_216 () (_ BitVec 64))
(assert (= temp8_1 #x0000000000000001))
(assert (= var77203 temp8_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp8_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp8_2)))
(assert (= temp8_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp8_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp8_4 #x0000000000000000))
(assert (= var210941 temp8_4))
(assert (= temp8_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp8_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp8_6 #x0000000000000000))
(assert (= var210986 temp8_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp8_7 #x0000000000000000))
(assert (= temp8_8 temp8_7))
(assert (= temp8_9 (select ARGNAME_padding_NAMEEND_VAL temp8_8)))
(assert (= temp8_10 #x0000000000000001))
(assert (= temp8_11 temp8_10))
(assert (= temp8_12 (select ARGNAME_padding_NAMEEND_VAL temp8_11)))
(assert (= temp8_13 #x0000000000000002))
(assert (= temp8_14 temp8_13))
(assert (= temp8_15 (select ARGNAME_padding_NAMEEND_VAL temp8_14)))
(assert (= temp8_16 #x0000000000000003))
(assert (= temp8_17 temp8_16))
(assert (= temp8_18 (select ARGNAME_padding_NAMEEND_VAL temp8_17)))
(assert (= temp8_19 #x0000000000000004))
(assert (= temp8_20 temp8_19))
(assert (= temp8_21 (select ARGNAME_padding_NAMEEND_VAL temp8_20)))
(assert (= temp8_22 #x0000000000000005))
(assert (= temp8_23 temp8_22))
(assert (= temp8_24 (select ARGNAME_padding_NAMEEND_VAL temp8_23)))
(assert (= temp8_25 #x0000000000000000))
(assert (= temp8_26 #x0000000000000000))
(assert (= temp8_27 temp8_26))
(assert (= temp8_28 (select ARGNAME_padding_NAMEEND_VAL temp8_27)))
(assert (= temp8_29 #x0000000000000000))
(assert (= temp8_30 #x0000000000000001))
(assert (= temp8_31 temp8_30))
(assert (= temp8_32 (select ARGNAME_padding_NAMEEND_VAL temp8_31)))
(assert (= temp8_33 #x0000000000000000))
(assert (= temp8_34 #x0000000000000002))
(assert (= temp8_35 temp8_34))
(assert (= temp8_36 (select ARGNAME_padding_NAMEEND_VAL temp8_35)))
(assert (= temp8_37 #x0000000000000000))
(assert (= temp8_38 #x0000000000000003))
(assert (= temp8_39 temp8_38))
(assert (= temp8_40 (select ARGNAME_padding_NAMEEND_VAL temp8_39)))
(assert (= temp8_41 #x0000000000000000))
(assert (= temp8_42 #x0000000000000004))
(assert (= temp8_43 temp8_42))
(assert (= temp8_44 (select ARGNAME_padding_NAMEEND_VAL temp8_43)))
(assert (= temp8_45 #x0000000000000000))
(assert (= temp8_46 #x0000000000000005))
(assert (= temp8_47 temp8_46))
(assert (= temp8_48 (select ARGNAME_padding_NAMEEND_VAL temp8_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp8_28 temp8_25)
             (bvslt temp8_32 temp8_29)
             (bvslt temp8_36 temp8_33)
             (bvslt temp8_40 temp8_37)
             (bvslt temp8_44 temp8_41)
             (bvslt temp8_48 temp8_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp8_49 #x0000000000000000))
(assert (= var1191714 temp8_49))
(assert (= temp8_50 #x0000000000000000))
(assert (= temp8_51 temp8_50))
(assert (= temp8_52 (select ARGNAME_output_padding_NAMEEND_VAL temp8_51)))
(assert (= temp8_53 #x0000000000000001))
(assert (= temp8_54 temp8_53))
(assert (= temp8_55 (select ARGNAME_output_padding_NAMEEND_VAL temp8_54)))
(assert (= temp8_56 #x0000000000000002))
(assert (= temp8_57 temp8_56))
(assert (= temp8_58 (select ARGNAME_output_padding_NAMEEND_VAL temp8_57)))
(assert (= temp8_59 #x0000000000000003))
(assert (= temp8_60 temp8_59))
(assert (= temp8_61 (select ARGNAME_output_padding_NAMEEND_VAL temp8_60)))
(assert (= temp8_62 #x0000000000000004))
(assert (= temp8_63 temp8_62))
(assert (= temp8_64 (select ARGNAME_output_padding_NAMEEND_VAL temp8_63)))
(assert (= temp8_65 #x0000000000000005))
(assert (= temp8_66 temp8_65))
(assert (= temp8_67 (select ARGNAME_output_padding_NAMEEND_VAL temp8_66)))
(assert (= temp8_68 #x0000000000000000))
(assert (= temp8_69 #x0000000000000000))
(assert (= temp8_70 temp8_69))
(assert (= temp8_71 (select ARGNAME_output_padding_NAMEEND_VAL temp8_70)))
(assert (= temp8_72 #x0000000000000000))
(assert (= temp8_73 #x0000000000000001))
(assert (= temp8_74 temp8_73))
(assert (= temp8_75 (select ARGNAME_output_padding_NAMEEND_VAL temp8_74)))
(assert (= temp8_76 #x0000000000000000))
(assert (= temp8_77 #x0000000000000002))
(assert (= temp8_78 temp8_77))
(assert (= temp8_79 (select ARGNAME_output_padding_NAMEEND_VAL temp8_78)))
(assert (= temp8_80 #x0000000000000000))
(assert (= temp8_81 #x0000000000000003))
(assert (= temp8_82 temp8_81))
(assert (= temp8_83 (select ARGNAME_output_padding_NAMEEND_VAL temp8_82)))
(assert (= temp8_84 #x0000000000000000))
(assert (= temp8_85 #x0000000000000004))
(assert (= temp8_86 temp8_85))
(assert (= temp8_87 (select ARGNAME_output_padding_NAMEEND_VAL temp8_86)))
(assert (= temp8_88 #x0000000000000000))
(assert (= temp8_89 #x0000000000000005))
(assert (= temp8_90 temp8_89))
(assert (= temp8_91 (select ARGNAME_output_padding_NAMEEND_VAL temp8_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp8_71 temp8_68)
             (bvslt temp8_75 temp8_72)
             (bvslt temp8_79 temp8_76)
             (bvslt temp8_83 temp8_80)
             (bvslt temp8_87 temp8_84)
             (bvslt temp8_91 temp8_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp8_92 #x0000000000000000))
(assert (= var1191725 temp8_92))
(assert (= temp8_93 #x0000000000000000))
(assert (= temp8_94 temp8_93))
(assert (= temp8_95 (select ARGNAME_stride_NAMEEND_VAL temp8_94)))
(assert (= temp8_96 #x0000000000000001))
(assert (= temp8_97 temp8_96))
(assert (= temp8_98 (select ARGNAME_stride_NAMEEND_VAL temp8_97)))
(assert (= temp8_99 #x0000000000000002))
(assert (= temp8_100 temp8_99))
(assert (= temp8_101 (select ARGNAME_stride_NAMEEND_VAL temp8_100)))
(assert (= temp8_102 #x0000000000000003))
(assert (= temp8_103 temp8_102))
(assert (= temp8_104 (select ARGNAME_stride_NAMEEND_VAL temp8_103)))
(assert (= temp8_105 #x0000000000000004))
(assert (= temp8_106 temp8_105))
(assert (= temp8_107 (select ARGNAME_stride_NAMEEND_VAL temp8_106)))
(assert (= temp8_108 #x0000000000000005))
(assert (= temp8_109 temp8_108))
(assert (= temp8_110 (select ARGNAME_stride_NAMEEND_VAL temp8_109)))
(assert (= temp8_111 #x0000000000000000))
(assert (= temp8_112 #x0000000000000000))
(assert (= temp8_113 temp8_112))
(assert (= temp8_114 (select ARGNAME_stride_NAMEEND_VAL temp8_113)))
(assert (= temp8_115 #x0000000000000000))
(assert (= temp8_116 #x0000000000000001))
(assert (= temp8_117 temp8_116))
(assert (= temp8_118 (select ARGNAME_stride_NAMEEND_VAL temp8_117)))
(assert (= temp8_119 #x0000000000000000))
(assert (= temp8_120 #x0000000000000002))
(assert (= temp8_121 temp8_120))
(assert (= temp8_122 (select ARGNAME_stride_NAMEEND_VAL temp8_121)))
(assert (= temp8_123 #x0000000000000000))
(assert (= temp8_124 #x0000000000000003))
(assert (= temp8_125 temp8_124))
(assert (= temp8_126 (select ARGNAME_stride_NAMEEND_VAL temp8_125)))
(assert (= temp8_127 #x0000000000000000))
(assert (= temp8_128 #x0000000000000004))
(assert (= temp8_129 temp8_128))
(assert (= temp8_130 (select ARGNAME_stride_NAMEEND_VAL temp8_129)))
(assert (= temp8_131 #x0000000000000000))
(assert (= temp8_132 #x0000000000000005))
(assert (= temp8_133 temp8_132))
(assert (= temp8_134 (select ARGNAME_stride_NAMEEND_VAL temp8_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp8_114 temp8_111)
             (bvsle temp8_118 temp8_115)
             (bvsle temp8_122 temp8_119)
             (bvsle temp8_126 temp8_123)
             (bvsle temp8_130 temp8_127)
             (bvsle temp8_134 temp8_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp8_135 #x0000000000000000))
(assert (= var1191735 temp8_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp8_136 #x0000000000000001))
(assert (= var1191747 temp8_136))
(assert (= temp8_137 #x0000000000000000))
(assert (= var1179826 temp8_137))
(assert (= temp8_138 #x0000000000000000))
(assert (= temp8_139 temp8_138))
(assert (= temp8_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp8_139)))
(assert (= temp8_141 #x0000000000000001))
(assert (= temp8_142 temp8_141))
(assert (= temp8_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp8_142)))
(assert (= temp8_144 #x0000000000000002))
(assert (= temp8_145 temp8_144))
(assert (= temp8_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp8_145)))
(assert (= temp8_147 #x0000000000000003))
(assert (= temp8_148 temp8_147))
(assert (= temp8_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp8_148)))
(assert (= temp8_150 #x0000000000000004))
(assert (= temp8_151 temp8_150))
(assert (= temp8_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp8_151)))
(assert (= temp8_153 #x0000000000000005))
(assert (= temp8_154 temp8_153))
(assert (= temp8_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp8_154)))
(assert (= temp8_157 var1179826))
(assert (= temp8_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp8_157)))
(assert (= temp8_156 temp8_158))
(assert (= var1191780
   (ite (bvslt temp8_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp8_159 #x0000000000000000))
(assert (= var1191780 temp8_159))
(assert (= temp8_160 #x0000000000000000))
(assert (= var1179826 temp8_160))
(assert (= temp8_162 var1179826))
(assert (= temp8_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp8_162)))
(assert (= temp8_161 temp8_163))
(assert (= var1191802 (bvsmod temp8_161 ARGNAME_groups_NAMEEND)))
(assert (= temp8_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp8_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp8_165 #x0000000000000001))
(assert (= var1191803 temp8_165))
(assert (= temp8_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp8_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp8_167 #x0000000000000001))
(assert (= var1191823 temp8_167))
(assert (= temp8_168 #x0000000000000001))
(assert (= var1180714 temp8_168))
(assert (= temp8_169 #x0000000000000000))
(assert (= temp8_170 temp8_169))
(assert (= temp8_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp8_170)))
(assert (= temp8_172 #x0000000000000001))
(assert (= temp8_173 temp8_172))
(assert (= temp8_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp8_173)))
(assert (= temp8_175 #x0000000000000002))
(assert (= temp8_176 temp8_175))
(assert (= temp8_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp8_176)))
(assert (= temp8_178 #x0000000000000003))
(assert (= temp8_179 temp8_178))
(assert (= temp8_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp8_179)))
(assert (= temp8_181 #x0000000000000004))
(assert (= temp8_182 temp8_181))
(assert (= temp8_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp8_182)))
(assert (= temp8_184 #x0000000000000005))
(assert (= temp8_185 temp8_184))
(assert (= temp8_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp8_185)))
(assert (= temp8_187 #x0000000000000000))
(assert (= temp8_188
   (ite (bvslt var1180714 temp8_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp8_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp8_188)))
(assert (= var1191831 temp8_189))
(assert (bvslt (ite (bvslt var1180714 temp8_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp8_190 #x0000000000000001))
(assert (= var1180714 temp8_190))
(assert (= temp8_192 var1180714))
(assert (= temp8_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp8_192)))
(assert (= temp8_191 temp8_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp8_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp8_194 #x0000000000000001))
(assert (= var1191836 temp8_194))
(assert (= temp8_195 #x0000000000000000))
(assert (= var1179826 temp8_195))
(assert (= temp8_197 var1179826))
(assert (= temp8_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp8_197)))
(assert (= temp8_196 temp8_198))
(assert (= temp8_199 #x0000000000000002))
(assert (= var1586025 temp8_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp8_200 #x0000000000000001))
(assert (= var1191993 temp8_200))
(assert (= temp8_201 #x0000000000000001))
(assert (= var2700303 temp8_201))
(assert (= temp8_202 #x0000000000000001))
(assert (= var2962447 temp8_202))
(assert (= temp8_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp8_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp8_204 #x0000000000000001))
(assert (= var211058 temp8_204))
(assert (= temp8_205 #x0000000000000001))
(assert (= var211188 temp8_205))
(assert (= var3879401 var211188))
(assert (= temp8_206 #x0000000000000000))
(assert (= var3866802 temp8_206))
(assert (= temp8_207 #x0000000000000000))
(assert (= temp8_208
   (ite (bvslt var3866802 temp8_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp8_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp8_208)))
(assert (= var3879420 temp8_209))
(assert (bvslt (ite (bvslt var3866802 temp8_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp8_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp8_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp8_211 #x0000000000000001))
(assert (= var3879421 temp8_211))
(assert (= temp8_212 #x0000000000000000))
(assert (= var4079423 temp8_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp8_213 #x0000000000000002))
(assert (= var4208259 temp8_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp8_214 #x0000000000000000))
(assert (= var4273820 temp8_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp8_215 #x0000000000000000))
(assert (= var4469136 temp8_215))
(assert (= temp8_216 #x0000000000000001))
(assert (= var211058 temp8_216))
(model-add temp8_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp8_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp8_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp8_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




