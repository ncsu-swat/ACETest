(declare-fun temp10993_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10993_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10993_3 () (_ BitVec 64))
(declare-fun temp10993_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10993_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10993_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10993_7 () (_ BitVec 64))
(declare-fun temp10993_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10993_9 () (_ BitVec 64))
(declare-fun temp10993_10 () (_ BitVec 64))
(declare-fun temp10993_11 () (_ BitVec 64))
(declare-fun temp10993_12 () (_ BitVec 64))
(declare-fun temp10993_13 () (_ BitVec 64))
(declare-fun temp10993_14 () (_ BitVec 64))
(declare-fun temp10993_15 () (_ BitVec 64))
(declare-fun temp10993_16 () (_ BitVec 64))
(declare-fun temp10993_17 () (_ BitVec 64))
(declare-fun temp10993_18 () (_ BitVec 64))
(declare-fun temp10993_19 () (_ BitVec 64))
(declare-fun temp10993_20 () (_ BitVec 64))
(declare-fun temp10993_21 () (_ BitVec 64))
(declare-fun temp10993_22 () (_ BitVec 64))
(declare-fun temp10993_23 () (_ BitVec 64))
(declare-fun temp10993_24 () (_ BitVec 64))
(declare-fun temp10993_25 () (_ BitVec 64))
(declare-fun temp10993_26 () (_ BitVec 64))
(declare-fun temp10993_27 () (_ BitVec 64))
(declare-fun temp10993_28 () (_ BitVec 64))
(declare-fun temp10993_29 () (_ BitVec 64))
(declare-fun temp10993_30 () (_ BitVec 64))
(declare-fun temp10993_31 () (_ BitVec 64))
(declare-fun temp10993_32 () (_ BitVec 64))
(declare-fun temp10993_33 () (_ BitVec 64))
(declare-fun temp10993_34 () (_ BitVec 64))
(declare-fun temp10993_35 () (_ BitVec 64))
(declare-fun temp10993_36 () (_ BitVec 64))
(declare-fun temp10993_37 () (_ BitVec 64))
(declare-fun temp10993_38 () (_ BitVec 64))
(declare-fun temp10993_39 () (_ BitVec 64))
(declare-fun temp10993_40 () (_ BitVec 64))
(declare-fun temp10993_41 () (_ BitVec 64))
(declare-fun temp10993_42 () (_ BitVec 64))
(declare-fun temp10993_43 () (_ BitVec 64))
(declare-fun temp10993_44 () (_ BitVec 64))
(declare-fun temp10993_45 () (_ BitVec 64))
(declare-fun temp10993_46 () (_ BitVec 64))
(declare-fun temp10993_47 () (_ BitVec 64))
(declare-fun temp10993_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10993_49 () (_ BitVec 64))
(declare-fun temp10993_50 () (_ BitVec 64))
(declare-fun temp10993_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10993_52 () (_ BitVec 64))
(declare-fun temp10993_53 () (_ BitVec 64))
(declare-fun temp10993_54 () (_ BitVec 64))
(declare-fun temp10993_55 () (_ BitVec 64))
(declare-fun temp10993_56 () (_ BitVec 64))
(declare-fun temp10993_57 () (_ BitVec 64))
(declare-fun temp10993_58 () (_ BitVec 64))
(declare-fun temp10993_59 () (_ BitVec 64))
(declare-fun temp10993_60 () (_ BitVec 64))
(declare-fun temp10993_61 () (_ BitVec 64))
(declare-fun temp10993_62 () (_ BitVec 64))
(declare-fun temp10993_63 () (_ BitVec 64))
(declare-fun temp10993_64 () (_ BitVec 64))
(declare-fun temp10993_65 () (_ BitVec 64))
(declare-fun temp10993_66 () (_ BitVec 64))
(declare-fun temp10993_67 () (_ BitVec 64))
(declare-fun temp10993_68 () (_ BitVec 64))
(declare-fun temp10993_69 () (_ BitVec 64))
(declare-fun temp10993_70 () (_ BitVec 64))
(declare-fun temp10993_71 () (_ BitVec 64))
(declare-fun temp10993_72 () (_ BitVec 64))
(declare-fun temp10993_73 () (_ BitVec 64))
(declare-fun temp10993_74 () (_ BitVec 64))
(declare-fun temp10993_75 () (_ BitVec 64))
(declare-fun temp10993_76 () (_ BitVec 64))
(declare-fun temp10993_77 () (_ BitVec 64))
(declare-fun temp10993_78 () (_ BitVec 64))
(declare-fun temp10993_79 () (_ BitVec 64))
(declare-fun temp10993_80 () (_ BitVec 64))
(declare-fun temp10993_81 () (_ BitVec 64))
(declare-fun temp10993_82 () (_ BitVec 64))
(declare-fun temp10993_83 () (_ BitVec 64))
(declare-fun temp10993_84 () (_ BitVec 64))
(declare-fun temp10993_85 () (_ BitVec 64))
(declare-fun temp10993_86 () (_ BitVec 64))
(declare-fun temp10993_87 () (_ BitVec 64))
(declare-fun temp10993_88 () (_ BitVec 64))
(declare-fun temp10993_89 () (_ BitVec 64))
(declare-fun temp10993_90 () (_ BitVec 64))
(declare-fun temp10993_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10993_92 () (_ BitVec 64))
(declare-fun temp10993_93 () (_ BitVec 64))
(declare-fun temp10993_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10993_95 () (_ BitVec 64))
(declare-fun temp10993_96 () (_ BitVec 64))
(declare-fun temp10993_97 () (_ BitVec 64))
(declare-fun temp10993_98 () (_ BitVec 64))
(declare-fun temp10993_99 () (_ BitVec 64))
(declare-fun temp10993_100 () (_ BitVec 64))
(declare-fun temp10993_101 () (_ BitVec 64))
(declare-fun temp10993_102 () (_ BitVec 64))
(declare-fun temp10993_103 () (_ BitVec 64))
(declare-fun temp10993_104 () (_ BitVec 64))
(declare-fun temp10993_105 () (_ BitVec 64))
(declare-fun temp10993_106 () (_ BitVec 64))
(declare-fun temp10993_107 () (_ BitVec 64))
(declare-fun temp10993_108 () (_ BitVec 64))
(declare-fun temp10993_109 () (_ BitVec 64))
(declare-fun temp10993_110 () (_ BitVec 64))
(declare-fun temp10993_111 () (_ BitVec 64))
(declare-fun temp10993_112 () (_ BitVec 64))
(declare-fun temp10993_113 () (_ BitVec 64))
(declare-fun temp10993_114 () (_ BitVec 64))
(declare-fun temp10993_115 () (_ BitVec 64))
(declare-fun temp10993_116 () (_ BitVec 64))
(declare-fun temp10993_117 () (_ BitVec 64))
(declare-fun temp10993_118 () (_ BitVec 64))
(declare-fun temp10993_119 () (_ BitVec 64))
(declare-fun temp10993_120 () (_ BitVec 64))
(declare-fun temp10993_121 () (_ BitVec 64))
(declare-fun temp10993_122 () (_ BitVec 64))
(declare-fun temp10993_123 () (_ BitVec 64))
(declare-fun temp10993_124 () (_ BitVec 64))
(declare-fun temp10993_125 () (_ BitVec 64))
(declare-fun temp10993_126 () (_ BitVec 64))
(declare-fun temp10993_127 () (_ BitVec 64))
(declare-fun temp10993_128 () (_ BitVec 64))
(declare-fun temp10993_129 () (_ BitVec 64))
(declare-fun temp10993_130 () (_ BitVec 64))
(declare-fun temp10993_131 () (_ BitVec 64))
(declare-fun temp10993_132 () (_ BitVec 64))
(declare-fun temp10993_133 () (_ BitVec 64))
(declare-fun temp10993_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10993_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10993_136 () (_ BitVec 64))
(declare-fun temp10993_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10993_138 () (_ BitVec 64))
(declare-fun temp10993_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10993_140 () (_ BitVec 64))
(declare-fun temp10993_141 () (_ BitVec 64))
(declare-fun temp10993_142 () (_ BitVec 64))
(declare-fun temp10993_143 () (_ BitVec 64))
(declare-fun temp10993_144 () (_ BitVec 64))
(declare-fun temp10993_145 () (_ BitVec 64))
(declare-fun temp10993_146 () (_ BitVec 64))
(declare-fun temp10993_147 () (_ BitVec 64))
(declare-fun temp10993_148 () (_ BitVec 64))
(declare-fun temp10993_149 () (_ BitVec 64))
(declare-fun temp10993_150 () (_ BitVec 64))
(declare-fun temp10993_151 () (_ BitVec 64))
(declare-fun temp10993_152 () (_ BitVec 64))
(declare-fun temp10993_153 () (_ BitVec 64))
(declare-fun temp10993_154 () (_ BitVec 64))
(declare-fun temp10993_155 () (_ BitVec 64))
(declare-fun temp10993_157 () (_ BitVec 64))
(declare-fun temp10993_158 () (_ BitVec 64))
(declare-fun temp10993_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10993_159 () (_ BitVec 64))
(declare-fun temp10993_160 () (_ BitVec 64))
(declare-fun temp10993_162 () (_ BitVec 64))
(declare-fun temp10993_163 () (_ BitVec 64))
(declare-fun temp10993_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10993_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10993_165 () (_ BitVec 64))
(declare-fun temp10993_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10993_167 () (_ BitVec 64))
(declare-fun temp10993_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10993_169 () (_ BitVec 64))
(declare-fun temp10993_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10993_171 () (_ BitVec 64))
(declare-fun temp10993_172 () (_ BitVec 64))
(declare-fun temp10993_173 () (_ BitVec 64))
(declare-fun temp10993_174 () (_ BitVec 64))
(declare-fun temp10993_175 () (_ BitVec 64))
(declare-fun temp10993_176 () (_ BitVec 64))
(declare-fun temp10993_177 () (_ BitVec 64))
(declare-fun temp10993_178 () (_ BitVec 64))
(declare-fun temp10993_179 () (_ BitVec 64))
(declare-fun temp10993_180 () (_ BitVec 64))
(declare-fun temp10993_181 () (_ BitVec 64))
(declare-fun temp10993_182 () (_ BitVec 64))
(declare-fun temp10993_183 () (_ BitVec 64))
(declare-fun temp10993_184 () (_ BitVec 64))
(declare-fun temp10993_185 () (_ BitVec 64))
(declare-fun temp10993_186 () (_ BitVec 64))
(declare-fun temp10993_187 () (_ BitVec 64))
(declare-fun temp10993_188 () (_ BitVec 64))
(declare-fun temp10993_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10993_190 () (_ BitVec 64))
(declare-fun temp10993_192 () (_ BitVec 64))
(declare-fun temp10993_193 () (_ BitVec 64))
(declare-fun temp10993_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10993_194 () (_ BitVec 64))
(declare-fun temp10993_195 () (_ BitVec 64))
(declare-fun temp10993_197 () (_ BitVec 64))
(declare-fun temp10993_198 () (_ BitVec 64))
(declare-fun temp10993_196 () (_ BitVec 64))
(declare-fun temp10993_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10993_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10993_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10993_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10993_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10993_204 () (_ BitVec 64))
(declare-fun temp10993_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10993_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10993_207 () (_ BitVec 64))
(declare-fun temp10993_208 () (_ BitVec 64))
(declare-fun temp10993_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10993_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10993_211 () (_ BitVec 64))
(declare-fun temp10993_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10993_213 () (_ BitVec 64))
(declare-fun temp10993_214 () (_ BitVec 64))
(declare-fun temp10993_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10993_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10993_217 () (_ BitVec 64))
(declare-fun temp10993_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10993_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10993_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var4600208 () (_ BitVec 64))
(declare-fun var4862352 () (_ BitVec 64))
(declare-fun temp10993_221 () (_ BitVec 64))
(declare-fun var212414 () (_ BitVec 64))
(declare-fun temp10993_222 () (_ BitVec 64))
(declare-fun temp10993_223 () (_ BitVec 64))
(declare-fun var5191299 () (_ BitVec 64))
(declare-fun var5191301 () (_ BitVec 64))
(declare-fun var5256844 () (_ BitVec 64))
(declare-fun var5256845 () (_ BitVec 64))
(declare-fun temp10993_224 () (_ BitVec 64))
(assert (= temp10993_1 #x0000000000000001))
(assert (= var77203 temp10993_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10993_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10993_2)))
(assert (= temp10993_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10993_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10993_4 #x0000000000000000))
(assert (= var210941 temp10993_4))
(assert (= temp10993_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10993_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10993_6 #x0000000000000000))
(assert (= var210986 temp10993_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10993_7 #x0000000000000000))
(assert (= temp10993_8 temp10993_7))
(assert (= temp10993_9 (select ARGNAME_padding_NAMEEND_VAL temp10993_8)))
(assert (= temp10993_10 #x0000000000000001))
(assert (= temp10993_11 temp10993_10))
(assert (= temp10993_12 (select ARGNAME_padding_NAMEEND_VAL temp10993_11)))
(assert (= temp10993_13 #x0000000000000002))
(assert (= temp10993_14 temp10993_13))
(assert (= temp10993_15 (select ARGNAME_padding_NAMEEND_VAL temp10993_14)))
(assert (= temp10993_16 #x0000000000000003))
(assert (= temp10993_17 temp10993_16))
(assert (= temp10993_18 (select ARGNAME_padding_NAMEEND_VAL temp10993_17)))
(assert (= temp10993_19 #x0000000000000004))
(assert (= temp10993_20 temp10993_19))
(assert (= temp10993_21 (select ARGNAME_padding_NAMEEND_VAL temp10993_20)))
(assert (= temp10993_22 #x0000000000000005))
(assert (= temp10993_23 temp10993_22))
(assert (= temp10993_24 (select ARGNAME_padding_NAMEEND_VAL temp10993_23)))
(assert (= temp10993_25 #x0000000000000000))
(assert (= temp10993_26 #x0000000000000000))
(assert (= temp10993_27 temp10993_26))
(assert (= temp10993_28 (select ARGNAME_padding_NAMEEND_VAL temp10993_27)))
(assert (= temp10993_29 #x0000000000000000))
(assert (= temp10993_30 #x0000000000000001))
(assert (= temp10993_31 temp10993_30))
(assert (= temp10993_32 (select ARGNAME_padding_NAMEEND_VAL temp10993_31)))
(assert (= temp10993_33 #x0000000000000000))
(assert (= temp10993_34 #x0000000000000002))
(assert (= temp10993_35 temp10993_34))
(assert (= temp10993_36 (select ARGNAME_padding_NAMEEND_VAL temp10993_35)))
(assert (= temp10993_37 #x0000000000000000))
(assert (= temp10993_38 #x0000000000000003))
(assert (= temp10993_39 temp10993_38))
(assert (= temp10993_40 (select ARGNAME_padding_NAMEEND_VAL temp10993_39)))
(assert (= temp10993_41 #x0000000000000000))
(assert (= temp10993_42 #x0000000000000004))
(assert (= temp10993_43 temp10993_42))
(assert (= temp10993_44 (select ARGNAME_padding_NAMEEND_VAL temp10993_43)))
(assert (= temp10993_45 #x0000000000000000))
(assert (= temp10993_46 #x0000000000000005))
(assert (= temp10993_47 temp10993_46))
(assert (= temp10993_48 (select ARGNAME_padding_NAMEEND_VAL temp10993_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10993_28 temp10993_25)
             (bvslt temp10993_32 temp10993_29)
             (bvslt temp10993_36 temp10993_33)
             (bvslt temp10993_40 temp10993_37)
             (bvslt temp10993_44 temp10993_41)
             (bvslt temp10993_48 temp10993_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10993_49 #x0000000000000000))
(assert (= var1191714 temp10993_49))
(assert (= temp10993_50 #x0000000000000000))
(assert (= temp10993_51 temp10993_50))
(assert (= temp10993_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10993_51)))
(assert (= temp10993_53 #x0000000000000001))
(assert (= temp10993_54 temp10993_53))
(assert (= temp10993_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10993_54)))
(assert (= temp10993_56 #x0000000000000002))
(assert (= temp10993_57 temp10993_56))
(assert (= temp10993_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10993_57)))
(assert (= temp10993_59 #x0000000000000003))
(assert (= temp10993_60 temp10993_59))
(assert (= temp10993_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10993_60)))
(assert (= temp10993_62 #x0000000000000004))
(assert (= temp10993_63 temp10993_62))
(assert (= temp10993_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10993_63)))
(assert (= temp10993_65 #x0000000000000005))
(assert (= temp10993_66 temp10993_65))
(assert (= temp10993_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10993_66)))
(assert (= temp10993_68 #x0000000000000000))
(assert (= temp10993_69 #x0000000000000000))
(assert (= temp10993_70 temp10993_69))
(assert (= temp10993_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10993_70)))
(assert (= temp10993_72 #x0000000000000000))
(assert (= temp10993_73 #x0000000000000001))
(assert (= temp10993_74 temp10993_73))
(assert (= temp10993_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10993_74)))
(assert (= temp10993_76 #x0000000000000000))
(assert (= temp10993_77 #x0000000000000002))
(assert (= temp10993_78 temp10993_77))
(assert (= temp10993_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10993_78)))
(assert (= temp10993_80 #x0000000000000000))
(assert (= temp10993_81 #x0000000000000003))
(assert (= temp10993_82 temp10993_81))
(assert (= temp10993_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10993_82)))
(assert (= temp10993_84 #x0000000000000000))
(assert (= temp10993_85 #x0000000000000004))
(assert (= temp10993_86 temp10993_85))
(assert (= temp10993_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10993_86)))
(assert (= temp10993_88 #x0000000000000000))
(assert (= temp10993_89 #x0000000000000005))
(assert (= temp10993_90 temp10993_89))
(assert (= temp10993_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10993_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10993_71 temp10993_68)
             (bvslt temp10993_75 temp10993_72)
             (bvslt temp10993_79 temp10993_76)
             (bvslt temp10993_83 temp10993_80)
             (bvslt temp10993_87 temp10993_84)
             (bvslt temp10993_91 temp10993_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10993_92 #x0000000000000000))
(assert (= var1191725 temp10993_92))
(assert (= temp10993_93 #x0000000000000000))
(assert (= temp10993_94 temp10993_93))
(assert (= temp10993_95 (select ARGNAME_stride_NAMEEND_VAL temp10993_94)))
(assert (= temp10993_96 #x0000000000000001))
(assert (= temp10993_97 temp10993_96))
(assert (= temp10993_98 (select ARGNAME_stride_NAMEEND_VAL temp10993_97)))
(assert (= temp10993_99 #x0000000000000002))
(assert (= temp10993_100 temp10993_99))
(assert (= temp10993_101 (select ARGNAME_stride_NAMEEND_VAL temp10993_100)))
(assert (= temp10993_102 #x0000000000000003))
(assert (= temp10993_103 temp10993_102))
(assert (= temp10993_104 (select ARGNAME_stride_NAMEEND_VAL temp10993_103)))
(assert (= temp10993_105 #x0000000000000004))
(assert (= temp10993_106 temp10993_105))
(assert (= temp10993_107 (select ARGNAME_stride_NAMEEND_VAL temp10993_106)))
(assert (= temp10993_108 #x0000000000000005))
(assert (= temp10993_109 temp10993_108))
(assert (= temp10993_110 (select ARGNAME_stride_NAMEEND_VAL temp10993_109)))
(assert (= temp10993_111 #x0000000000000000))
(assert (= temp10993_112 #x0000000000000000))
(assert (= temp10993_113 temp10993_112))
(assert (= temp10993_114 (select ARGNAME_stride_NAMEEND_VAL temp10993_113)))
(assert (= temp10993_115 #x0000000000000000))
(assert (= temp10993_116 #x0000000000000001))
(assert (= temp10993_117 temp10993_116))
(assert (= temp10993_118 (select ARGNAME_stride_NAMEEND_VAL temp10993_117)))
(assert (= temp10993_119 #x0000000000000000))
(assert (= temp10993_120 #x0000000000000002))
(assert (= temp10993_121 temp10993_120))
(assert (= temp10993_122 (select ARGNAME_stride_NAMEEND_VAL temp10993_121)))
(assert (= temp10993_123 #x0000000000000000))
(assert (= temp10993_124 #x0000000000000003))
(assert (= temp10993_125 temp10993_124))
(assert (= temp10993_126 (select ARGNAME_stride_NAMEEND_VAL temp10993_125)))
(assert (= temp10993_127 #x0000000000000000))
(assert (= temp10993_128 #x0000000000000004))
(assert (= temp10993_129 temp10993_128))
(assert (= temp10993_130 (select ARGNAME_stride_NAMEEND_VAL temp10993_129)))
(assert (= temp10993_131 #x0000000000000000))
(assert (= temp10993_132 #x0000000000000005))
(assert (= temp10993_133 temp10993_132))
(assert (= temp10993_134 (select ARGNAME_stride_NAMEEND_VAL temp10993_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10993_114 temp10993_111)
             (bvsle temp10993_118 temp10993_115)
             (bvsle temp10993_122 temp10993_119)
             (bvsle temp10993_126 temp10993_123)
             (bvsle temp10993_130 temp10993_127)
             (bvsle temp10993_134 temp10993_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10993_135 #x0000000000000000))
(assert (= var1191735 temp10993_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10993_136 #x0000000000000001))
(assert (= var1191747 temp10993_136))
(assert (= temp10993_137 #x0000000000000000))
(assert (= var1179826 temp10993_137))
(assert (= temp10993_138 #x0000000000000000))
(assert (= temp10993_139 temp10993_138))
(assert (= temp10993_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10993_139)))
(assert (= temp10993_141 #x0000000000000001))
(assert (= temp10993_142 temp10993_141))
(assert (= temp10993_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10993_142)))
(assert (= temp10993_144 #x0000000000000002))
(assert (= temp10993_145 temp10993_144))
(assert (= temp10993_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10993_145)))
(assert (= temp10993_147 #x0000000000000003))
(assert (= temp10993_148 temp10993_147))
(assert (= temp10993_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10993_148)))
(assert (= temp10993_150 #x0000000000000004))
(assert (= temp10993_151 temp10993_150))
(assert (= temp10993_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10993_151)))
(assert (= temp10993_153 #x0000000000000005))
(assert (= temp10993_154 temp10993_153))
(assert (= temp10993_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10993_154)))
(assert (= temp10993_157 var1179826))
(assert (= temp10993_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10993_157)))
(assert (= temp10993_156 temp10993_158))
(assert (= var1191780
   (ite (bvslt temp10993_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10993_159 #x0000000000000000))
(assert (= var1191780 temp10993_159))
(assert (= temp10993_160 #x0000000000000000))
(assert (= var1179826 temp10993_160))
(assert (= temp10993_162 var1179826))
(assert (= temp10993_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10993_162)))
(assert (= temp10993_161 temp10993_163))
(assert (= var1191802 (bvsmod temp10993_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10993_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10993_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10993_165 #x0000000000000001))
(assert (= var1191803 temp10993_165))
(assert (= temp10993_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10993_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10993_167 #x0000000000000001))
(assert (= var1191823 temp10993_167))
(assert (= temp10993_168 #x0000000000000001))
(assert (= var1180714 temp10993_168))
(assert (= temp10993_169 #x0000000000000000))
(assert (= temp10993_170 temp10993_169))
(assert (= temp10993_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10993_170)))
(assert (= temp10993_172 #x0000000000000001))
(assert (= temp10993_173 temp10993_172))
(assert (= temp10993_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10993_173)))
(assert (= temp10993_175 #x0000000000000002))
(assert (= temp10993_176 temp10993_175))
(assert (= temp10993_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10993_176)))
(assert (= temp10993_178 #x0000000000000003))
(assert (= temp10993_179 temp10993_178))
(assert (= temp10993_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10993_179)))
(assert (= temp10993_181 #x0000000000000004))
(assert (= temp10993_182 temp10993_181))
(assert (= temp10993_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10993_182)))
(assert (= temp10993_184 #x0000000000000005))
(assert (= temp10993_185 temp10993_184))
(assert (= temp10993_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10993_185)))
(assert (= temp10993_187 #x0000000000000000))
(assert (= temp10993_188
   (ite (bvslt var1180714 temp10993_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10993_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10993_188)))
(assert (= var1191831 temp10993_189))
(assert (bvslt (ite (bvslt var1180714 temp10993_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10993_190 #x0000000000000001))
(assert (= var1180714 temp10993_190))
(assert (= temp10993_192 var1180714))
(assert (= temp10993_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10993_192)))
(assert (= temp10993_191 temp10993_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10993_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10993_194 #x0000000000000001))
(assert (= var1191836 temp10993_194))
(assert (= temp10993_195 #x0000000000000000))
(assert (= var1179826 temp10993_195))
(assert (= temp10993_197 var1179826))
(assert (= temp10993_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10993_197)))
(assert (= temp10993_196 temp10993_198))
(assert (= temp10993_199 #x0000000000000002))
(assert (= var1586025 temp10993_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10993_200 #x0000000000000001))
(assert (= var1191993 temp10993_200))
(assert (= temp10993_201 #x0000000000000001))
(assert (= var2700303 temp10993_201))
(assert (= temp10993_202 #x0000000000000001))
(assert (= var2962447 temp10993_202))
(assert (= temp10993_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10993_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10993_204 #x0000000000000001))
(assert (= var211058 temp10993_204))
(assert (= temp10993_205 #x0000000000000001))
(assert (= var211188 temp10993_205))
(assert (= var3879401 var211188))
(assert (= temp10993_206 #x0000000000000000))
(assert (= var3866802 temp10993_206))
(assert (= temp10993_207 #x0000000000000000))
(assert (= temp10993_208
   (ite (bvslt var3866802 temp10993_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10993_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10993_208)))
(assert (= var3879420 temp10993_209))
(assert (bvslt (ite (bvslt var3866802 temp10993_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10993_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10993_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10993_211 #x0000000000000000))
(assert (= var3879421 temp10993_211))
(assert (= temp10993_212 #x0000000000000001))
(assert (= var3867690 temp10993_212))
(assert (= temp10993_213 #x0000000000000000))
(assert (= temp10993_214
   (ite (bvslt var3867690 temp10993_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10993_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10993_214)))
(assert (= var3879423 temp10993_215))
(assert (bvslt (ite (bvslt var3867690 temp10993_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10993_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10993_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10993_217 #x0000000000000001))
(assert (= var3879424 temp10993_217))
(assert (= temp10993_218 #x0000000000000000))
(assert (= var4133117 temp10993_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10993_219 #x0000000000000002))
(assert (= var4339331 temp10993_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10993_220 #x0000000000000000))
(assert (= var4404892 temp10993_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var4600208 var211201))
(assert (= var4862352 var211201))
(assert (= temp10993_221 #x0000000000000001))
(assert (= var212414
   (ite (= ARGNAME_groups_NAMEEND temp10993_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10993_222 #x0000000000000001))
(assert (= var212414 temp10993_222))
(assert (= temp10993_223 #x0000000000000002))
(assert (= var5191299 temp10993_223))
(assert (= var5191301 (bvsub ARGNAME_weight_NAMEEND_DIM var5191299)))
(assert (= var5256844 var5191299))
(assert (= var5256845 var5191301))
(assert (= temp10993_224 #x0000000000000001))
(assert (= var211058 temp10993_224))
(model-add temp10993_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10993_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10993_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10993_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




