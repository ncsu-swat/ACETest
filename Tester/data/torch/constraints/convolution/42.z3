(declare-fun temp56_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp56_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp56_3 () (_ BitVec 64))
(declare-fun temp56_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp56_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp56_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp56_7 () (_ BitVec 64))
(declare-fun temp56_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp56_9 () (_ BitVec 64))
(declare-fun temp56_10 () (_ BitVec 64))
(declare-fun temp56_11 () (_ BitVec 64))
(declare-fun temp56_12 () (_ BitVec 64))
(declare-fun temp56_13 () (_ BitVec 64))
(declare-fun temp56_14 () (_ BitVec 64))
(declare-fun temp56_15 () (_ BitVec 64))
(declare-fun temp56_16 () (_ BitVec 64))
(declare-fun temp56_17 () (_ BitVec 64))
(declare-fun temp56_18 () (_ BitVec 64))
(declare-fun temp56_19 () (_ BitVec 64))
(declare-fun temp56_20 () (_ BitVec 64))
(declare-fun temp56_21 () (_ BitVec 64))
(declare-fun temp56_22 () (_ BitVec 64))
(declare-fun temp56_23 () (_ BitVec 64))
(declare-fun temp56_24 () (_ BitVec 64))
(declare-fun temp56_25 () (_ BitVec 64))
(declare-fun temp56_26 () (_ BitVec 64))
(declare-fun temp56_27 () (_ BitVec 64))
(declare-fun temp56_28 () (_ BitVec 64))
(declare-fun temp56_29 () (_ BitVec 64))
(declare-fun temp56_30 () (_ BitVec 64))
(declare-fun temp56_31 () (_ BitVec 64))
(declare-fun temp56_32 () (_ BitVec 64))
(declare-fun temp56_33 () (_ BitVec 64))
(declare-fun temp56_34 () (_ BitVec 64))
(declare-fun temp56_35 () (_ BitVec 64))
(declare-fun temp56_36 () (_ BitVec 64))
(declare-fun temp56_37 () (_ BitVec 64))
(declare-fun temp56_38 () (_ BitVec 64))
(declare-fun temp56_39 () (_ BitVec 64))
(declare-fun temp56_40 () (_ BitVec 64))
(declare-fun temp56_41 () (_ BitVec 64))
(declare-fun temp56_42 () (_ BitVec 64))
(declare-fun temp56_43 () (_ BitVec 64))
(declare-fun temp56_44 () (_ BitVec 64))
(declare-fun temp56_45 () (_ BitVec 64))
(declare-fun temp56_46 () (_ BitVec 64))
(declare-fun temp56_47 () (_ BitVec 64))
(declare-fun temp56_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp56_49 () (_ BitVec 64))
(declare-fun temp56_50 () (_ BitVec 64))
(declare-fun temp56_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp56_52 () (_ BitVec 64))
(declare-fun temp56_53 () (_ BitVec 64))
(declare-fun temp56_54 () (_ BitVec 64))
(declare-fun temp56_55 () (_ BitVec 64))
(declare-fun temp56_56 () (_ BitVec 64))
(declare-fun temp56_57 () (_ BitVec 64))
(declare-fun temp56_58 () (_ BitVec 64))
(declare-fun temp56_59 () (_ BitVec 64))
(declare-fun temp56_60 () (_ BitVec 64))
(declare-fun temp56_61 () (_ BitVec 64))
(declare-fun temp56_62 () (_ BitVec 64))
(declare-fun temp56_63 () (_ BitVec 64))
(declare-fun temp56_64 () (_ BitVec 64))
(declare-fun temp56_65 () (_ BitVec 64))
(declare-fun temp56_66 () (_ BitVec 64))
(declare-fun temp56_67 () (_ BitVec 64))
(declare-fun temp56_68 () (_ BitVec 64))
(declare-fun temp56_69 () (_ BitVec 64))
(declare-fun temp56_70 () (_ BitVec 64))
(declare-fun temp56_71 () (_ BitVec 64))
(declare-fun temp56_72 () (_ BitVec 64))
(declare-fun temp56_73 () (_ BitVec 64))
(declare-fun temp56_74 () (_ BitVec 64))
(declare-fun temp56_75 () (_ BitVec 64))
(declare-fun temp56_76 () (_ BitVec 64))
(declare-fun temp56_77 () (_ BitVec 64))
(declare-fun temp56_78 () (_ BitVec 64))
(declare-fun temp56_79 () (_ BitVec 64))
(declare-fun temp56_80 () (_ BitVec 64))
(declare-fun temp56_81 () (_ BitVec 64))
(declare-fun temp56_82 () (_ BitVec 64))
(declare-fun temp56_83 () (_ BitVec 64))
(declare-fun temp56_84 () (_ BitVec 64))
(declare-fun temp56_85 () (_ BitVec 64))
(declare-fun temp56_86 () (_ BitVec 64))
(declare-fun temp56_87 () (_ BitVec 64))
(declare-fun temp56_88 () (_ BitVec 64))
(declare-fun temp56_89 () (_ BitVec 64))
(declare-fun temp56_90 () (_ BitVec 64))
(declare-fun temp56_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp56_92 () (_ BitVec 64))
(declare-fun temp56_93 () (_ BitVec 64))
(declare-fun temp56_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp56_95 () (_ BitVec 64))
(declare-fun temp56_96 () (_ BitVec 64))
(declare-fun temp56_97 () (_ BitVec 64))
(declare-fun temp56_98 () (_ BitVec 64))
(declare-fun temp56_99 () (_ BitVec 64))
(declare-fun temp56_100 () (_ BitVec 64))
(declare-fun temp56_101 () (_ BitVec 64))
(declare-fun temp56_102 () (_ BitVec 64))
(declare-fun temp56_103 () (_ BitVec 64))
(declare-fun temp56_104 () (_ BitVec 64))
(declare-fun temp56_105 () (_ BitVec 64))
(declare-fun temp56_106 () (_ BitVec 64))
(declare-fun temp56_107 () (_ BitVec 64))
(declare-fun temp56_108 () (_ BitVec 64))
(declare-fun temp56_109 () (_ BitVec 64))
(declare-fun temp56_110 () (_ BitVec 64))
(declare-fun temp56_111 () (_ BitVec 64))
(declare-fun temp56_112 () (_ BitVec 64))
(declare-fun temp56_113 () (_ BitVec 64))
(declare-fun temp56_114 () (_ BitVec 64))
(declare-fun temp56_115 () (_ BitVec 64))
(declare-fun temp56_116 () (_ BitVec 64))
(declare-fun temp56_117 () (_ BitVec 64))
(declare-fun temp56_118 () (_ BitVec 64))
(declare-fun temp56_119 () (_ BitVec 64))
(declare-fun temp56_120 () (_ BitVec 64))
(declare-fun temp56_121 () (_ BitVec 64))
(declare-fun temp56_122 () (_ BitVec 64))
(declare-fun temp56_123 () (_ BitVec 64))
(declare-fun temp56_124 () (_ BitVec 64))
(declare-fun temp56_125 () (_ BitVec 64))
(declare-fun temp56_126 () (_ BitVec 64))
(declare-fun temp56_127 () (_ BitVec 64))
(declare-fun temp56_128 () (_ BitVec 64))
(declare-fun temp56_129 () (_ BitVec 64))
(declare-fun temp56_130 () (_ BitVec 64))
(declare-fun temp56_131 () (_ BitVec 64))
(declare-fun temp56_132 () (_ BitVec 64))
(declare-fun temp56_133 () (_ BitVec 64))
(declare-fun temp56_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp56_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp56_136 () (_ BitVec 64))
(declare-fun temp56_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp56_138 () (_ BitVec 64))
(declare-fun temp56_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp56_140 () (_ BitVec 64))
(declare-fun temp56_141 () (_ BitVec 64))
(declare-fun temp56_142 () (_ BitVec 64))
(declare-fun temp56_143 () (_ BitVec 64))
(declare-fun temp56_144 () (_ BitVec 64))
(declare-fun temp56_145 () (_ BitVec 64))
(declare-fun temp56_146 () (_ BitVec 64))
(declare-fun temp56_147 () (_ BitVec 64))
(declare-fun temp56_148 () (_ BitVec 64))
(declare-fun temp56_149 () (_ BitVec 64))
(declare-fun temp56_150 () (_ BitVec 64))
(declare-fun temp56_151 () (_ BitVec 64))
(declare-fun temp56_152 () (_ BitVec 64))
(declare-fun temp56_153 () (_ BitVec 64))
(declare-fun temp56_154 () (_ BitVec 64))
(declare-fun temp56_155 () (_ BitVec 64))
(declare-fun temp56_157 () (_ BitVec 64))
(declare-fun temp56_158 () (_ BitVec 64))
(declare-fun temp56_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp56_159 () (_ BitVec 64))
(declare-fun temp56_160 () (_ BitVec 64))
(declare-fun temp56_162 () (_ BitVec 64))
(declare-fun temp56_163 () (_ BitVec 64))
(declare-fun temp56_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp56_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp56_165 () (_ BitVec 64))
(declare-fun temp56_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp56_167 () (_ BitVec 64))
(declare-fun temp56_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp56_169 () (_ BitVec 64))
(declare-fun temp56_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp56_171 () (_ BitVec 64))
(declare-fun temp56_172 () (_ BitVec 64))
(declare-fun temp56_173 () (_ BitVec 64))
(declare-fun temp56_174 () (_ BitVec 64))
(declare-fun temp56_175 () (_ BitVec 64))
(declare-fun temp56_176 () (_ BitVec 64))
(declare-fun temp56_177 () (_ BitVec 64))
(declare-fun temp56_178 () (_ BitVec 64))
(declare-fun temp56_179 () (_ BitVec 64))
(declare-fun temp56_180 () (_ BitVec 64))
(declare-fun temp56_181 () (_ BitVec 64))
(declare-fun temp56_182 () (_ BitVec 64))
(declare-fun temp56_183 () (_ BitVec 64))
(declare-fun temp56_184 () (_ BitVec 64))
(declare-fun temp56_185 () (_ BitVec 64))
(declare-fun temp56_186 () (_ BitVec 64))
(declare-fun temp56_187 () (_ BitVec 64))
(declare-fun temp56_188 () (_ BitVec 64))
(declare-fun temp56_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp56_190 () (_ BitVec 64))
(declare-fun temp56_192 () (_ BitVec 64))
(declare-fun temp56_193 () (_ BitVec 64))
(declare-fun temp56_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp56_194 () (_ BitVec 64))
(declare-fun temp56_195 () (_ BitVec 64))
(declare-fun temp56_197 () (_ BitVec 64))
(declare-fun temp56_198 () (_ BitVec 64))
(declare-fun temp56_196 () (_ BitVec 64))
(declare-fun temp56_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp56_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp56_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp56_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp56_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp56_204 () (_ BitVec 64))
(declare-fun temp56_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp56_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp56_207 () (_ BitVec 64))
(declare-fun temp56_208 () (_ BitVec 64))
(declare-fun temp56_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp56_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp56_211 () (_ BitVec 64))
(declare-fun temp56_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp56_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp56_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4993424 () (_ BitVec 64))
(declare-fun var211494 () (_ BitVec 64))
(declare-fun temp56_215 () (_ BitVec 64))
(declare-fun var211495 () (_ BitVec 64))
(declare-fun temp56_216 () (_ BitVec 64))
(assert (= temp56_1 #x0000000000000001))
(assert (= var77203 temp56_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp56_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp56_2)))
(assert (= temp56_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp56_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp56_4 #x0000000000000000))
(assert (= var210941 temp56_4))
(assert (= temp56_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp56_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp56_6 #x0000000000000000))
(assert (= var210986 temp56_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp56_7 #x0000000000000000))
(assert (= temp56_8 temp56_7))
(assert (= temp56_9 (select ARGNAME_padding_NAMEEND_VAL temp56_8)))
(assert (= temp56_10 #x0000000000000001))
(assert (= temp56_11 temp56_10))
(assert (= temp56_12 (select ARGNAME_padding_NAMEEND_VAL temp56_11)))
(assert (= temp56_13 #x0000000000000002))
(assert (= temp56_14 temp56_13))
(assert (= temp56_15 (select ARGNAME_padding_NAMEEND_VAL temp56_14)))
(assert (= temp56_16 #x0000000000000003))
(assert (= temp56_17 temp56_16))
(assert (= temp56_18 (select ARGNAME_padding_NAMEEND_VAL temp56_17)))
(assert (= temp56_19 #x0000000000000004))
(assert (= temp56_20 temp56_19))
(assert (= temp56_21 (select ARGNAME_padding_NAMEEND_VAL temp56_20)))
(assert (= temp56_22 #x0000000000000005))
(assert (= temp56_23 temp56_22))
(assert (= temp56_24 (select ARGNAME_padding_NAMEEND_VAL temp56_23)))
(assert (= temp56_25 #x0000000000000000))
(assert (= temp56_26 #x0000000000000000))
(assert (= temp56_27 temp56_26))
(assert (= temp56_28 (select ARGNAME_padding_NAMEEND_VAL temp56_27)))
(assert (= temp56_29 #x0000000000000000))
(assert (= temp56_30 #x0000000000000001))
(assert (= temp56_31 temp56_30))
(assert (= temp56_32 (select ARGNAME_padding_NAMEEND_VAL temp56_31)))
(assert (= temp56_33 #x0000000000000000))
(assert (= temp56_34 #x0000000000000002))
(assert (= temp56_35 temp56_34))
(assert (= temp56_36 (select ARGNAME_padding_NAMEEND_VAL temp56_35)))
(assert (= temp56_37 #x0000000000000000))
(assert (= temp56_38 #x0000000000000003))
(assert (= temp56_39 temp56_38))
(assert (= temp56_40 (select ARGNAME_padding_NAMEEND_VAL temp56_39)))
(assert (= temp56_41 #x0000000000000000))
(assert (= temp56_42 #x0000000000000004))
(assert (= temp56_43 temp56_42))
(assert (= temp56_44 (select ARGNAME_padding_NAMEEND_VAL temp56_43)))
(assert (= temp56_45 #x0000000000000000))
(assert (= temp56_46 #x0000000000000005))
(assert (= temp56_47 temp56_46))
(assert (= temp56_48 (select ARGNAME_padding_NAMEEND_VAL temp56_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp56_28 temp56_25)
             (bvslt temp56_32 temp56_29)
             (bvslt temp56_36 temp56_33)
             (bvslt temp56_40 temp56_37)
             (bvslt temp56_44 temp56_41)
             (bvslt temp56_48 temp56_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp56_49 #x0000000000000000))
(assert (= var1191714 temp56_49))
(assert (= temp56_50 #x0000000000000000))
(assert (= temp56_51 temp56_50))
(assert (= temp56_52 (select ARGNAME_output_padding_NAMEEND_VAL temp56_51)))
(assert (= temp56_53 #x0000000000000001))
(assert (= temp56_54 temp56_53))
(assert (= temp56_55 (select ARGNAME_output_padding_NAMEEND_VAL temp56_54)))
(assert (= temp56_56 #x0000000000000002))
(assert (= temp56_57 temp56_56))
(assert (= temp56_58 (select ARGNAME_output_padding_NAMEEND_VAL temp56_57)))
(assert (= temp56_59 #x0000000000000003))
(assert (= temp56_60 temp56_59))
(assert (= temp56_61 (select ARGNAME_output_padding_NAMEEND_VAL temp56_60)))
(assert (= temp56_62 #x0000000000000004))
(assert (= temp56_63 temp56_62))
(assert (= temp56_64 (select ARGNAME_output_padding_NAMEEND_VAL temp56_63)))
(assert (= temp56_65 #x0000000000000005))
(assert (= temp56_66 temp56_65))
(assert (= temp56_67 (select ARGNAME_output_padding_NAMEEND_VAL temp56_66)))
(assert (= temp56_68 #x0000000000000000))
(assert (= temp56_69 #x0000000000000000))
(assert (= temp56_70 temp56_69))
(assert (= temp56_71 (select ARGNAME_output_padding_NAMEEND_VAL temp56_70)))
(assert (= temp56_72 #x0000000000000000))
(assert (= temp56_73 #x0000000000000001))
(assert (= temp56_74 temp56_73))
(assert (= temp56_75 (select ARGNAME_output_padding_NAMEEND_VAL temp56_74)))
(assert (= temp56_76 #x0000000000000000))
(assert (= temp56_77 #x0000000000000002))
(assert (= temp56_78 temp56_77))
(assert (= temp56_79 (select ARGNAME_output_padding_NAMEEND_VAL temp56_78)))
(assert (= temp56_80 #x0000000000000000))
(assert (= temp56_81 #x0000000000000003))
(assert (= temp56_82 temp56_81))
(assert (= temp56_83 (select ARGNAME_output_padding_NAMEEND_VAL temp56_82)))
(assert (= temp56_84 #x0000000000000000))
(assert (= temp56_85 #x0000000000000004))
(assert (= temp56_86 temp56_85))
(assert (= temp56_87 (select ARGNAME_output_padding_NAMEEND_VAL temp56_86)))
(assert (= temp56_88 #x0000000000000000))
(assert (= temp56_89 #x0000000000000005))
(assert (= temp56_90 temp56_89))
(assert (= temp56_91 (select ARGNAME_output_padding_NAMEEND_VAL temp56_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp56_71 temp56_68)
             (bvslt temp56_75 temp56_72)
             (bvslt temp56_79 temp56_76)
             (bvslt temp56_83 temp56_80)
             (bvslt temp56_87 temp56_84)
             (bvslt temp56_91 temp56_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp56_92 #x0000000000000000))
(assert (= var1191725 temp56_92))
(assert (= temp56_93 #x0000000000000000))
(assert (= temp56_94 temp56_93))
(assert (= temp56_95 (select ARGNAME_stride_NAMEEND_VAL temp56_94)))
(assert (= temp56_96 #x0000000000000001))
(assert (= temp56_97 temp56_96))
(assert (= temp56_98 (select ARGNAME_stride_NAMEEND_VAL temp56_97)))
(assert (= temp56_99 #x0000000000000002))
(assert (= temp56_100 temp56_99))
(assert (= temp56_101 (select ARGNAME_stride_NAMEEND_VAL temp56_100)))
(assert (= temp56_102 #x0000000000000003))
(assert (= temp56_103 temp56_102))
(assert (= temp56_104 (select ARGNAME_stride_NAMEEND_VAL temp56_103)))
(assert (= temp56_105 #x0000000000000004))
(assert (= temp56_106 temp56_105))
(assert (= temp56_107 (select ARGNAME_stride_NAMEEND_VAL temp56_106)))
(assert (= temp56_108 #x0000000000000005))
(assert (= temp56_109 temp56_108))
(assert (= temp56_110 (select ARGNAME_stride_NAMEEND_VAL temp56_109)))
(assert (= temp56_111 #x0000000000000000))
(assert (= temp56_112 #x0000000000000000))
(assert (= temp56_113 temp56_112))
(assert (= temp56_114 (select ARGNAME_stride_NAMEEND_VAL temp56_113)))
(assert (= temp56_115 #x0000000000000000))
(assert (= temp56_116 #x0000000000000001))
(assert (= temp56_117 temp56_116))
(assert (= temp56_118 (select ARGNAME_stride_NAMEEND_VAL temp56_117)))
(assert (= temp56_119 #x0000000000000000))
(assert (= temp56_120 #x0000000000000002))
(assert (= temp56_121 temp56_120))
(assert (= temp56_122 (select ARGNAME_stride_NAMEEND_VAL temp56_121)))
(assert (= temp56_123 #x0000000000000000))
(assert (= temp56_124 #x0000000000000003))
(assert (= temp56_125 temp56_124))
(assert (= temp56_126 (select ARGNAME_stride_NAMEEND_VAL temp56_125)))
(assert (= temp56_127 #x0000000000000000))
(assert (= temp56_128 #x0000000000000004))
(assert (= temp56_129 temp56_128))
(assert (= temp56_130 (select ARGNAME_stride_NAMEEND_VAL temp56_129)))
(assert (= temp56_131 #x0000000000000000))
(assert (= temp56_132 #x0000000000000005))
(assert (= temp56_133 temp56_132))
(assert (= temp56_134 (select ARGNAME_stride_NAMEEND_VAL temp56_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp56_114 temp56_111)
             (bvsle temp56_118 temp56_115)
             (bvsle temp56_122 temp56_119)
             (bvsle temp56_126 temp56_123)
             (bvsle temp56_130 temp56_127)
             (bvsle temp56_134 temp56_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp56_135 #x0000000000000000))
(assert (= var1191735 temp56_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp56_136 #x0000000000000001))
(assert (= var1191747 temp56_136))
(assert (= temp56_137 #x0000000000000000))
(assert (= var1179826 temp56_137))
(assert (= temp56_138 #x0000000000000000))
(assert (= temp56_139 temp56_138))
(assert (= temp56_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp56_139)))
(assert (= temp56_141 #x0000000000000001))
(assert (= temp56_142 temp56_141))
(assert (= temp56_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp56_142)))
(assert (= temp56_144 #x0000000000000002))
(assert (= temp56_145 temp56_144))
(assert (= temp56_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp56_145)))
(assert (= temp56_147 #x0000000000000003))
(assert (= temp56_148 temp56_147))
(assert (= temp56_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp56_148)))
(assert (= temp56_150 #x0000000000000004))
(assert (= temp56_151 temp56_150))
(assert (= temp56_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp56_151)))
(assert (= temp56_153 #x0000000000000005))
(assert (= temp56_154 temp56_153))
(assert (= temp56_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp56_154)))
(assert (= temp56_157 var1179826))
(assert (= temp56_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp56_157)))
(assert (= temp56_156 temp56_158))
(assert (= var1191780
   (ite (bvslt temp56_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp56_159 #x0000000000000000))
(assert (= var1191780 temp56_159))
(assert (= temp56_160 #x0000000000000000))
(assert (= var1179826 temp56_160))
(assert (= temp56_162 var1179826))
(assert (= temp56_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp56_162)))
(assert (= temp56_161 temp56_163))
(assert (= var1191802 (bvsmod temp56_161 ARGNAME_groups_NAMEEND)))
(assert (= temp56_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp56_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp56_165 #x0000000000000001))
(assert (= var1191803 temp56_165))
(assert (= temp56_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp56_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp56_167 #x0000000000000001))
(assert (= var1191823 temp56_167))
(assert (= temp56_168 #x0000000000000001))
(assert (= var1180714 temp56_168))
(assert (= temp56_169 #x0000000000000000))
(assert (= temp56_170 temp56_169))
(assert (= temp56_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp56_170)))
(assert (= temp56_172 #x0000000000000001))
(assert (= temp56_173 temp56_172))
(assert (= temp56_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp56_173)))
(assert (= temp56_175 #x0000000000000002))
(assert (= temp56_176 temp56_175))
(assert (= temp56_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp56_176)))
(assert (= temp56_178 #x0000000000000003))
(assert (= temp56_179 temp56_178))
(assert (= temp56_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp56_179)))
(assert (= temp56_181 #x0000000000000004))
(assert (= temp56_182 temp56_181))
(assert (= temp56_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp56_182)))
(assert (= temp56_184 #x0000000000000005))
(assert (= temp56_185 temp56_184))
(assert (= temp56_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp56_185)))
(assert (= temp56_187 #x0000000000000000))
(assert (= temp56_188
   (ite (bvslt var1180714 temp56_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp56_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp56_188)))
(assert (= var1191831 temp56_189))
(assert (bvslt (ite (bvslt var1180714 temp56_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp56_190 #x0000000000000001))
(assert (= var1180714 temp56_190))
(assert (= temp56_192 var1180714))
(assert (= temp56_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp56_192)))
(assert (= temp56_191 temp56_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp56_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp56_194 #x0000000000000001))
(assert (= var1191836 temp56_194))
(assert (= temp56_195 #x0000000000000000))
(assert (= var1179826 temp56_195))
(assert (= temp56_197 var1179826))
(assert (= temp56_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp56_197)))
(assert (= temp56_196 temp56_198))
(assert (= temp56_199 #x0000000000000002))
(assert (= var1586025 temp56_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp56_200 #x0000000000000001))
(assert (= var1191993 temp56_200))
(assert (= temp56_201 #x0000000000000001))
(assert (= var2700303 temp56_201))
(assert (= temp56_202 #x0000000000000001))
(assert (= var2962447 temp56_202))
(assert (= temp56_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp56_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp56_204 #x0000000000000001))
(assert (= var211058 temp56_204))
(assert (= temp56_205 #x0000000000000001))
(assert (= var211188 temp56_205))
(assert (= var3879401 var211188))
(assert (= temp56_206 #x0000000000000000))
(assert (= var3866802 temp56_206))
(assert (= temp56_207 #x0000000000000000))
(assert (= temp56_208
   (ite (bvslt var3866802 temp56_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp56_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp56_208)))
(assert (= var3879420 temp56_209))
(assert (bvslt (ite (bvslt var3866802 temp56_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp56_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp56_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp56_211 #x0000000000000001))
(assert (= var3879421 temp56_211))
(assert (= temp56_212 #x0000000000000000))
(assert (= var4079423 temp56_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp56_213 #x0000000000000002))
(assert (= var4208259 temp56_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp56_214 #x0000000000000000))
(assert (= var4273820 temp56_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4993424 var211201))
(assert (= var211494 var210913))
(assert (= temp56_215 #x0000000000000000))
(assert (= var211495
   (ite (distinct var211494 temp56_215) #x0000000000000001 #x0000000000000000)))
(assert (= temp56_216 #x0000000000000001))
(assert (= var211058 temp56_216))
(model-add temp56_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp56_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp56_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp56_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))



