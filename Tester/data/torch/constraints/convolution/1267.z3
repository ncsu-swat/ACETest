(declare-fun temp10420_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10420_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10420_3 () (_ BitVec 64))
(declare-fun temp10420_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10420_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10420_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10420_7 () (_ BitVec 64))
(declare-fun temp10420_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10420_9 () (_ BitVec 64))
(declare-fun temp10420_10 () (_ BitVec 64))
(declare-fun temp10420_11 () (_ BitVec 64))
(declare-fun temp10420_12 () (_ BitVec 64))
(declare-fun temp10420_13 () (_ BitVec 64))
(declare-fun temp10420_14 () (_ BitVec 64))
(declare-fun temp10420_15 () (_ BitVec 64))
(declare-fun temp10420_16 () (_ BitVec 64))
(declare-fun temp10420_17 () (_ BitVec 64))
(declare-fun temp10420_18 () (_ BitVec 64))
(declare-fun temp10420_19 () (_ BitVec 64))
(declare-fun temp10420_20 () (_ BitVec 64))
(declare-fun temp10420_21 () (_ BitVec 64))
(declare-fun temp10420_22 () (_ BitVec 64))
(declare-fun temp10420_23 () (_ BitVec 64))
(declare-fun temp10420_24 () (_ BitVec 64))
(declare-fun temp10420_25 () (_ BitVec 64))
(declare-fun temp10420_26 () (_ BitVec 64))
(declare-fun temp10420_27 () (_ BitVec 64))
(declare-fun temp10420_28 () (_ BitVec 64))
(declare-fun temp10420_29 () (_ BitVec 64))
(declare-fun temp10420_30 () (_ BitVec 64))
(declare-fun temp10420_31 () (_ BitVec 64))
(declare-fun temp10420_32 () (_ BitVec 64))
(declare-fun temp10420_33 () (_ BitVec 64))
(declare-fun temp10420_34 () (_ BitVec 64))
(declare-fun temp10420_35 () (_ BitVec 64))
(declare-fun temp10420_36 () (_ BitVec 64))
(declare-fun temp10420_37 () (_ BitVec 64))
(declare-fun temp10420_38 () (_ BitVec 64))
(declare-fun temp10420_39 () (_ BitVec 64))
(declare-fun temp10420_40 () (_ BitVec 64))
(declare-fun temp10420_41 () (_ BitVec 64))
(declare-fun temp10420_42 () (_ BitVec 64))
(declare-fun temp10420_43 () (_ BitVec 64))
(declare-fun temp10420_44 () (_ BitVec 64))
(declare-fun temp10420_45 () (_ BitVec 64))
(declare-fun temp10420_46 () (_ BitVec 64))
(declare-fun temp10420_47 () (_ BitVec 64))
(declare-fun temp10420_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10420_49 () (_ BitVec 64))
(declare-fun temp10420_50 () (_ BitVec 64))
(declare-fun temp10420_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10420_52 () (_ BitVec 64))
(declare-fun temp10420_53 () (_ BitVec 64))
(declare-fun temp10420_54 () (_ BitVec 64))
(declare-fun temp10420_55 () (_ BitVec 64))
(declare-fun temp10420_56 () (_ BitVec 64))
(declare-fun temp10420_57 () (_ BitVec 64))
(declare-fun temp10420_58 () (_ BitVec 64))
(declare-fun temp10420_59 () (_ BitVec 64))
(declare-fun temp10420_60 () (_ BitVec 64))
(declare-fun temp10420_61 () (_ BitVec 64))
(declare-fun temp10420_62 () (_ BitVec 64))
(declare-fun temp10420_63 () (_ BitVec 64))
(declare-fun temp10420_64 () (_ BitVec 64))
(declare-fun temp10420_65 () (_ BitVec 64))
(declare-fun temp10420_66 () (_ BitVec 64))
(declare-fun temp10420_67 () (_ BitVec 64))
(declare-fun temp10420_68 () (_ BitVec 64))
(declare-fun temp10420_69 () (_ BitVec 64))
(declare-fun temp10420_70 () (_ BitVec 64))
(declare-fun temp10420_71 () (_ BitVec 64))
(declare-fun temp10420_72 () (_ BitVec 64))
(declare-fun temp10420_73 () (_ BitVec 64))
(declare-fun temp10420_74 () (_ BitVec 64))
(declare-fun temp10420_75 () (_ BitVec 64))
(declare-fun temp10420_76 () (_ BitVec 64))
(declare-fun temp10420_77 () (_ BitVec 64))
(declare-fun temp10420_78 () (_ BitVec 64))
(declare-fun temp10420_79 () (_ BitVec 64))
(declare-fun temp10420_80 () (_ BitVec 64))
(declare-fun temp10420_81 () (_ BitVec 64))
(declare-fun temp10420_82 () (_ BitVec 64))
(declare-fun temp10420_83 () (_ BitVec 64))
(declare-fun temp10420_84 () (_ BitVec 64))
(declare-fun temp10420_85 () (_ BitVec 64))
(declare-fun temp10420_86 () (_ BitVec 64))
(declare-fun temp10420_87 () (_ BitVec 64))
(declare-fun temp10420_88 () (_ BitVec 64))
(declare-fun temp10420_89 () (_ BitVec 64))
(declare-fun temp10420_90 () (_ BitVec 64))
(declare-fun temp10420_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10420_92 () (_ BitVec 64))
(declare-fun temp10420_93 () (_ BitVec 64))
(declare-fun temp10420_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10420_95 () (_ BitVec 64))
(declare-fun temp10420_96 () (_ BitVec 64))
(declare-fun temp10420_97 () (_ BitVec 64))
(declare-fun temp10420_98 () (_ BitVec 64))
(declare-fun temp10420_99 () (_ BitVec 64))
(declare-fun temp10420_100 () (_ BitVec 64))
(declare-fun temp10420_101 () (_ BitVec 64))
(declare-fun temp10420_102 () (_ BitVec 64))
(declare-fun temp10420_103 () (_ BitVec 64))
(declare-fun temp10420_104 () (_ BitVec 64))
(declare-fun temp10420_105 () (_ BitVec 64))
(declare-fun temp10420_106 () (_ BitVec 64))
(declare-fun temp10420_107 () (_ BitVec 64))
(declare-fun temp10420_108 () (_ BitVec 64))
(declare-fun temp10420_109 () (_ BitVec 64))
(declare-fun temp10420_110 () (_ BitVec 64))
(declare-fun temp10420_111 () (_ BitVec 64))
(declare-fun temp10420_112 () (_ BitVec 64))
(declare-fun temp10420_113 () (_ BitVec 64))
(declare-fun temp10420_114 () (_ BitVec 64))
(declare-fun temp10420_115 () (_ BitVec 64))
(declare-fun temp10420_116 () (_ BitVec 64))
(declare-fun temp10420_117 () (_ BitVec 64))
(declare-fun temp10420_118 () (_ BitVec 64))
(declare-fun temp10420_119 () (_ BitVec 64))
(declare-fun temp10420_120 () (_ BitVec 64))
(declare-fun temp10420_121 () (_ BitVec 64))
(declare-fun temp10420_122 () (_ BitVec 64))
(declare-fun temp10420_123 () (_ BitVec 64))
(declare-fun temp10420_124 () (_ BitVec 64))
(declare-fun temp10420_125 () (_ BitVec 64))
(declare-fun temp10420_126 () (_ BitVec 64))
(declare-fun temp10420_127 () (_ BitVec 64))
(declare-fun temp10420_128 () (_ BitVec 64))
(declare-fun temp10420_129 () (_ BitVec 64))
(declare-fun temp10420_130 () (_ BitVec 64))
(declare-fun temp10420_131 () (_ BitVec 64))
(declare-fun temp10420_132 () (_ BitVec 64))
(declare-fun temp10420_133 () (_ BitVec 64))
(declare-fun temp10420_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10420_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10420_136 () (_ BitVec 64))
(declare-fun temp10420_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10420_138 () (_ BitVec 64))
(declare-fun temp10420_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10420_140 () (_ BitVec 64))
(declare-fun temp10420_141 () (_ BitVec 64))
(declare-fun temp10420_142 () (_ BitVec 64))
(declare-fun temp10420_143 () (_ BitVec 64))
(declare-fun temp10420_144 () (_ BitVec 64))
(declare-fun temp10420_145 () (_ BitVec 64))
(declare-fun temp10420_146 () (_ BitVec 64))
(declare-fun temp10420_147 () (_ BitVec 64))
(declare-fun temp10420_148 () (_ BitVec 64))
(declare-fun temp10420_149 () (_ BitVec 64))
(declare-fun temp10420_150 () (_ BitVec 64))
(declare-fun temp10420_151 () (_ BitVec 64))
(declare-fun temp10420_152 () (_ BitVec 64))
(declare-fun temp10420_153 () (_ BitVec 64))
(declare-fun temp10420_154 () (_ BitVec 64))
(declare-fun temp10420_155 () (_ BitVec 64))
(declare-fun temp10420_157 () (_ BitVec 64))
(declare-fun temp10420_158 () (_ BitVec 64))
(declare-fun temp10420_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10420_159 () (_ BitVec 64))
(declare-fun temp10420_160 () (_ BitVec 64))
(declare-fun temp10420_162 () (_ BitVec 64))
(declare-fun temp10420_163 () (_ BitVec 64))
(declare-fun temp10420_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10420_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10420_165 () (_ BitVec 64))
(declare-fun temp10420_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10420_167 () (_ BitVec 64))
(declare-fun temp10420_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10420_169 () (_ BitVec 64))
(declare-fun temp10420_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10420_171 () (_ BitVec 64))
(declare-fun temp10420_172 () (_ BitVec 64))
(declare-fun temp10420_173 () (_ BitVec 64))
(declare-fun temp10420_174 () (_ BitVec 64))
(declare-fun temp10420_175 () (_ BitVec 64))
(declare-fun temp10420_176 () (_ BitVec 64))
(declare-fun temp10420_177 () (_ BitVec 64))
(declare-fun temp10420_178 () (_ BitVec 64))
(declare-fun temp10420_179 () (_ BitVec 64))
(declare-fun temp10420_180 () (_ BitVec 64))
(declare-fun temp10420_181 () (_ BitVec 64))
(declare-fun temp10420_182 () (_ BitVec 64))
(declare-fun temp10420_183 () (_ BitVec 64))
(declare-fun temp10420_184 () (_ BitVec 64))
(declare-fun temp10420_185 () (_ BitVec 64))
(declare-fun temp10420_186 () (_ BitVec 64))
(declare-fun temp10420_187 () (_ BitVec 64))
(declare-fun temp10420_188 () (_ BitVec 64))
(declare-fun temp10420_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10420_190 () (_ BitVec 64))
(declare-fun temp10420_192 () (_ BitVec 64))
(declare-fun temp10420_193 () (_ BitVec 64))
(declare-fun temp10420_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10420_194 () (_ BitVec 64))
(declare-fun temp10420_195 () (_ BitVec 64))
(declare-fun temp10420_197 () (_ BitVec 64))
(declare-fun temp10420_198 () (_ BitVec 64))
(declare-fun temp10420_196 () (_ BitVec 64))
(declare-fun temp10420_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10420_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10420_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10420_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10420_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10420_204 () (_ BitVec 64))
(declare-fun temp10420_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10420_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10420_207 () (_ BitVec 64))
(declare-fun temp10420_208 () (_ BitVec 64))
(declare-fun temp10420_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10420_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10420_211 () (_ BitVec 64))
(declare-fun temp10420_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10420_213 () (_ BitVec 64))
(declare-fun temp10420_214 () (_ BitVec 64))
(declare-fun temp10420_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10420_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10420_217 () (_ BitVec 64))
(declare-fun temp10420_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10420_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10420_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4469136 () (_ BitVec 64))
(declare-fun var4731280 () (_ BitVec 64))
(declare-fun temp10420_221 () (_ BitVec 64))
(declare-fun var212414 () (_ BitVec 64))
(declare-fun temp10420_222 () (_ BitVec 64))
(declare-fun temp10420_223 () (_ BitVec 64))
(declare-fun var5060227 () (_ BitVec 64))
(declare-fun var5060229 () (_ BitVec 64))
(declare-fun var5125772 () (_ BitVec 64))
(declare-fun var5125773 () (_ BitVec 64))
(declare-fun temp10420_224 () (_ BitVec 64))
(declare-fun temp10420_225 () (_ BitVec 64))
(declare-fun var5976852 () (_ BitVec 64))
(declare-fun var5976819 () (_ BitVec 64))
(declare-fun var5845383 () (_ BitVec 64))
(declare-fun var5845379 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp10420_226 () (_ BitVec 64))
(assert (= temp10420_1 #x0000000000000001))
(assert (= var77203 temp10420_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10420_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10420_2)))
(assert (= temp10420_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10420_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10420_4 #x0000000000000000))
(assert (= var210941 temp10420_4))
(assert (= temp10420_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10420_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10420_6 #x0000000000000000))
(assert (= var210986 temp10420_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10420_7 #x0000000000000000))
(assert (= temp10420_8 temp10420_7))
(assert (= temp10420_9 (select ARGNAME_padding_NAMEEND_VAL temp10420_8)))
(assert (= temp10420_10 #x0000000000000001))
(assert (= temp10420_11 temp10420_10))
(assert (= temp10420_12 (select ARGNAME_padding_NAMEEND_VAL temp10420_11)))
(assert (= temp10420_13 #x0000000000000002))
(assert (= temp10420_14 temp10420_13))
(assert (= temp10420_15 (select ARGNAME_padding_NAMEEND_VAL temp10420_14)))
(assert (= temp10420_16 #x0000000000000003))
(assert (= temp10420_17 temp10420_16))
(assert (= temp10420_18 (select ARGNAME_padding_NAMEEND_VAL temp10420_17)))
(assert (= temp10420_19 #x0000000000000004))
(assert (= temp10420_20 temp10420_19))
(assert (= temp10420_21 (select ARGNAME_padding_NAMEEND_VAL temp10420_20)))
(assert (= temp10420_22 #x0000000000000005))
(assert (= temp10420_23 temp10420_22))
(assert (= temp10420_24 (select ARGNAME_padding_NAMEEND_VAL temp10420_23)))
(assert (= temp10420_25 #x0000000000000000))
(assert (= temp10420_26 #x0000000000000000))
(assert (= temp10420_27 temp10420_26))
(assert (= temp10420_28 (select ARGNAME_padding_NAMEEND_VAL temp10420_27)))
(assert (= temp10420_29 #x0000000000000000))
(assert (= temp10420_30 #x0000000000000001))
(assert (= temp10420_31 temp10420_30))
(assert (= temp10420_32 (select ARGNAME_padding_NAMEEND_VAL temp10420_31)))
(assert (= temp10420_33 #x0000000000000000))
(assert (= temp10420_34 #x0000000000000002))
(assert (= temp10420_35 temp10420_34))
(assert (= temp10420_36 (select ARGNAME_padding_NAMEEND_VAL temp10420_35)))
(assert (= temp10420_37 #x0000000000000000))
(assert (= temp10420_38 #x0000000000000003))
(assert (= temp10420_39 temp10420_38))
(assert (= temp10420_40 (select ARGNAME_padding_NAMEEND_VAL temp10420_39)))
(assert (= temp10420_41 #x0000000000000000))
(assert (= temp10420_42 #x0000000000000004))
(assert (= temp10420_43 temp10420_42))
(assert (= temp10420_44 (select ARGNAME_padding_NAMEEND_VAL temp10420_43)))
(assert (= temp10420_45 #x0000000000000000))
(assert (= temp10420_46 #x0000000000000005))
(assert (= temp10420_47 temp10420_46))
(assert (= temp10420_48 (select ARGNAME_padding_NAMEEND_VAL temp10420_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10420_28 temp10420_25)
             (bvslt temp10420_32 temp10420_29)
             (bvslt temp10420_36 temp10420_33)
             (bvslt temp10420_40 temp10420_37)
             (bvslt temp10420_44 temp10420_41)
             (bvslt temp10420_48 temp10420_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10420_49 #x0000000000000000))
(assert (= var1191714 temp10420_49))
(assert (= temp10420_50 #x0000000000000000))
(assert (= temp10420_51 temp10420_50))
(assert (= temp10420_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10420_51)))
(assert (= temp10420_53 #x0000000000000001))
(assert (= temp10420_54 temp10420_53))
(assert (= temp10420_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10420_54)))
(assert (= temp10420_56 #x0000000000000002))
(assert (= temp10420_57 temp10420_56))
(assert (= temp10420_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10420_57)))
(assert (= temp10420_59 #x0000000000000003))
(assert (= temp10420_60 temp10420_59))
(assert (= temp10420_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10420_60)))
(assert (= temp10420_62 #x0000000000000004))
(assert (= temp10420_63 temp10420_62))
(assert (= temp10420_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10420_63)))
(assert (= temp10420_65 #x0000000000000005))
(assert (= temp10420_66 temp10420_65))
(assert (= temp10420_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10420_66)))
(assert (= temp10420_68 #x0000000000000000))
(assert (= temp10420_69 #x0000000000000000))
(assert (= temp10420_70 temp10420_69))
(assert (= temp10420_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10420_70)))
(assert (= temp10420_72 #x0000000000000000))
(assert (= temp10420_73 #x0000000000000001))
(assert (= temp10420_74 temp10420_73))
(assert (= temp10420_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10420_74)))
(assert (= temp10420_76 #x0000000000000000))
(assert (= temp10420_77 #x0000000000000002))
(assert (= temp10420_78 temp10420_77))
(assert (= temp10420_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10420_78)))
(assert (= temp10420_80 #x0000000000000000))
(assert (= temp10420_81 #x0000000000000003))
(assert (= temp10420_82 temp10420_81))
(assert (= temp10420_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10420_82)))
(assert (= temp10420_84 #x0000000000000000))
(assert (= temp10420_85 #x0000000000000004))
(assert (= temp10420_86 temp10420_85))
(assert (= temp10420_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10420_86)))
(assert (= temp10420_88 #x0000000000000000))
(assert (= temp10420_89 #x0000000000000005))
(assert (= temp10420_90 temp10420_89))
(assert (= temp10420_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10420_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10420_71 temp10420_68)
             (bvslt temp10420_75 temp10420_72)
             (bvslt temp10420_79 temp10420_76)
             (bvslt temp10420_83 temp10420_80)
             (bvslt temp10420_87 temp10420_84)
             (bvslt temp10420_91 temp10420_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10420_92 #x0000000000000000))
(assert (= var1191725 temp10420_92))
(assert (= temp10420_93 #x0000000000000000))
(assert (= temp10420_94 temp10420_93))
(assert (= temp10420_95 (select ARGNAME_stride_NAMEEND_VAL temp10420_94)))
(assert (= temp10420_96 #x0000000000000001))
(assert (= temp10420_97 temp10420_96))
(assert (= temp10420_98 (select ARGNAME_stride_NAMEEND_VAL temp10420_97)))
(assert (= temp10420_99 #x0000000000000002))
(assert (= temp10420_100 temp10420_99))
(assert (= temp10420_101 (select ARGNAME_stride_NAMEEND_VAL temp10420_100)))
(assert (= temp10420_102 #x0000000000000003))
(assert (= temp10420_103 temp10420_102))
(assert (= temp10420_104 (select ARGNAME_stride_NAMEEND_VAL temp10420_103)))
(assert (= temp10420_105 #x0000000000000004))
(assert (= temp10420_106 temp10420_105))
(assert (= temp10420_107 (select ARGNAME_stride_NAMEEND_VAL temp10420_106)))
(assert (= temp10420_108 #x0000000000000005))
(assert (= temp10420_109 temp10420_108))
(assert (= temp10420_110 (select ARGNAME_stride_NAMEEND_VAL temp10420_109)))
(assert (= temp10420_111 #x0000000000000000))
(assert (= temp10420_112 #x0000000000000000))
(assert (= temp10420_113 temp10420_112))
(assert (= temp10420_114 (select ARGNAME_stride_NAMEEND_VAL temp10420_113)))
(assert (= temp10420_115 #x0000000000000000))
(assert (= temp10420_116 #x0000000000000001))
(assert (= temp10420_117 temp10420_116))
(assert (= temp10420_118 (select ARGNAME_stride_NAMEEND_VAL temp10420_117)))
(assert (= temp10420_119 #x0000000000000000))
(assert (= temp10420_120 #x0000000000000002))
(assert (= temp10420_121 temp10420_120))
(assert (= temp10420_122 (select ARGNAME_stride_NAMEEND_VAL temp10420_121)))
(assert (= temp10420_123 #x0000000000000000))
(assert (= temp10420_124 #x0000000000000003))
(assert (= temp10420_125 temp10420_124))
(assert (= temp10420_126 (select ARGNAME_stride_NAMEEND_VAL temp10420_125)))
(assert (= temp10420_127 #x0000000000000000))
(assert (= temp10420_128 #x0000000000000004))
(assert (= temp10420_129 temp10420_128))
(assert (= temp10420_130 (select ARGNAME_stride_NAMEEND_VAL temp10420_129)))
(assert (= temp10420_131 #x0000000000000000))
(assert (= temp10420_132 #x0000000000000005))
(assert (= temp10420_133 temp10420_132))
(assert (= temp10420_134 (select ARGNAME_stride_NAMEEND_VAL temp10420_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10420_114 temp10420_111)
             (bvsle temp10420_118 temp10420_115)
             (bvsle temp10420_122 temp10420_119)
             (bvsle temp10420_126 temp10420_123)
             (bvsle temp10420_130 temp10420_127)
             (bvsle temp10420_134 temp10420_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10420_135 #x0000000000000000))
(assert (= var1191735 temp10420_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10420_136 #x0000000000000001))
(assert (= var1191747 temp10420_136))
(assert (= temp10420_137 #x0000000000000000))
(assert (= var1179826 temp10420_137))
(assert (= temp10420_138 #x0000000000000000))
(assert (= temp10420_139 temp10420_138))
(assert (= temp10420_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10420_139)))
(assert (= temp10420_141 #x0000000000000001))
(assert (= temp10420_142 temp10420_141))
(assert (= temp10420_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10420_142)))
(assert (= temp10420_144 #x0000000000000002))
(assert (= temp10420_145 temp10420_144))
(assert (= temp10420_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10420_145)))
(assert (= temp10420_147 #x0000000000000003))
(assert (= temp10420_148 temp10420_147))
(assert (= temp10420_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10420_148)))
(assert (= temp10420_150 #x0000000000000004))
(assert (= temp10420_151 temp10420_150))
(assert (= temp10420_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10420_151)))
(assert (= temp10420_153 #x0000000000000005))
(assert (= temp10420_154 temp10420_153))
(assert (= temp10420_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10420_154)))
(assert (= temp10420_157 var1179826))
(assert (= temp10420_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10420_157)))
(assert (= temp10420_156 temp10420_158))
(assert (= var1191780
   (ite (bvslt temp10420_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10420_159 #x0000000000000000))
(assert (= var1191780 temp10420_159))
(assert (= temp10420_160 #x0000000000000000))
(assert (= var1179826 temp10420_160))
(assert (= temp10420_162 var1179826))
(assert (= temp10420_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10420_162)))
(assert (= temp10420_161 temp10420_163))
(assert (= var1191802 (bvsmod temp10420_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10420_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10420_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10420_165 #x0000000000000001))
(assert (= var1191803 temp10420_165))
(assert (= temp10420_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10420_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10420_167 #x0000000000000001))
(assert (= var1191823 temp10420_167))
(assert (= temp10420_168 #x0000000000000001))
(assert (= var1180714 temp10420_168))
(assert (= temp10420_169 #x0000000000000000))
(assert (= temp10420_170 temp10420_169))
(assert (= temp10420_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10420_170)))
(assert (= temp10420_172 #x0000000000000001))
(assert (= temp10420_173 temp10420_172))
(assert (= temp10420_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10420_173)))
(assert (= temp10420_175 #x0000000000000002))
(assert (= temp10420_176 temp10420_175))
(assert (= temp10420_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10420_176)))
(assert (= temp10420_178 #x0000000000000003))
(assert (= temp10420_179 temp10420_178))
(assert (= temp10420_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10420_179)))
(assert (= temp10420_181 #x0000000000000004))
(assert (= temp10420_182 temp10420_181))
(assert (= temp10420_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10420_182)))
(assert (= temp10420_184 #x0000000000000005))
(assert (= temp10420_185 temp10420_184))
(assert (= temp10420_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10420_185)))
(assert (= temp10420_187 #x0000000000000000))
(assert (= temp10420_188
   (ite (bvslt var1180714 temp10420_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10420_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10420_188)))
(assert (= var1191831 temp10420_189))
(assert (bvslt (ite (bvslt var1180714 temp10420_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10420_190 #x0000000000000001))
(assert (= var1180714 temp10420_190))
(assert (= temp10420_192 var1180714))
(assert (= temp10420_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10420_192)))
(assert (= temp10420_191 temp10420_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10420_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10420_194 #x0000000000000001))
(assert (= var1191836 temp10420_194))
(assert (= temp10420_195 #x0000000000000000))
(assert (= var1179826 temp10420_195))
(assert (= temp10420_197 var1179826))
(assert (= temp10420_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10420_197)))
(assert (= temp10420_196 temp10420_198))
(assert (= temp10420_199 #x0000000000000002))
(assert (= var1586025 temp10420_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10420_200 #x0000000000000001))
(assert (= var1191993 temp10420_200))
(assert (= temp10420_201 #x0000000000000001))
(assert (= var2700303 temp10420_201))
(assert (= temp10420_202 #x0000000000000001))
(assert (= var2962447 temp10420_202))
(assert (= temp10420_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10420_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10420_204 #x0000000000000001))
(assert (= var211058 temp10420_204))
(assert (= temp10420_205 #x0000000000000001))
(assert (= var211188 temp10420_205))
(assert (= var3879401 var211188))
(assert (= temp10420_206 #x0000000000000000))
(assert (= var3866802 temp10420_206))
(assert (= temp10420_207 #x0000000000000000))
(assert (= temp10420_208
   (ite (bvslt var3866802 temp10420_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10420_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10420_208)))
(assert (= var3879420 temp10420_209))
(assert (bvslt (ite (bvslt var3866802 temp10420_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10420_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10420_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10420_211 #x0000000000000000))
(assert (= var3879421 temp10420_211))
(assert (= temp10420_212 #x0000000000000001))
(assert (= var3867690 temp10420_212))
(assert (= temp10420_213 #x0000000000000000))
(assert (= temp10420_214
   (ite (bvslt var3867690 temp10420_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10420_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10420_214)))
(assert (= var3879423 temp10420_215))
(assert (bvslt (ite (bvslt var3867690 temp10420_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10420_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10420_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10420_217 #x0000000000000001))
(assert (= var3879424 temp10420_217))
(assert (= temp10420_218 #x0000000000000000))
(assert (= var4079423 temp10420_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10420_219 #x0000000000000002))
(assert (= var4208259 temp10420_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10420_220 #x0000000000000000))
(assert (= var4273820 temp10420_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4469136 var211201))
(assert (= var4731280 var211201))
(assert (= temp10420_221 #x0000000000000001))
(assert (= var212414
   (ite (= ARGNAME_groups_NAMEEND temp10420_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10420_222 #x0000000000000001))
(assert (= var212414 temp10420_222))
(assert (= temp10420_223 #x0000000000000002))
(assert (= var5060227 temp10420_223))
(assert (= var5060229 (bvsub ARGNAME_weight_NAMEEND_DIM var5060227)))
(assert (= var5125772 var5060227))
(assert (= var5125773 var5060229))
(assert (= temp10420_224 #x0000000000000001))
(assert (= var211058 temp10420_224))
(assert (= temp10420_225 #x0000000000000000))
(assert (= var5976852 temp10420_225))
(assert (= var5976819 var5976852))
(assert (= var5845383 var5976819))
(assert (= var5845379 var5845383))
(assert (= var212669 var5845379))
(assert (= temp10420_226 #x0000000000000000))
(assert (= var212669 temp10420_226))
(model-add temp10420_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10420_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10420_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10420_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




