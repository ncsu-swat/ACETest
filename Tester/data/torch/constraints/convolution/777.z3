(declare-fun temp1036_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp1036_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1036_3 () (_ BitVec 64))
(declare-fun temp1036_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1036_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp1036_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1036_7 () (_ BitVec 64))
(declare-fun temp1036_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1036_9 () (_ BitVec 64))
(declare-fun temp1036_10 () (_ BitVec 64))
(declare-fun temp1036_11 () (_ BitVec 64))
(declare-fun temp1036_12 () (_ BitVec 64))
(declare-fun temp1036_13 () (_ BitVec 64))
(declare-fun temp1036_14 () (_ BitVec 64))
(declare-fun temp1036_15 () (_ BitVec 64))
(declare-fun temp1036_16 () (_ BitVec 64))
(declare-fun temp1036_17 () (_ BitVec 64))
(declare-fun temp1036_18 () (_ BitVec 64))
(declare-fun temp1036_19 () (_ BitVec 64))
(declare-fun temp1036_20 () (_ BitVec 64))
(declare-fun temp1036_21 () (_ BitVec 64))
(declare-fun temp1036_22 () (_ BitVec 64))
(declare-fun temp1036_23 () (_ BitVec 64))
(declare-fun temp1036_24 () (_ BitVec 64))
(declare-fun temp1036_25 () (_ BitVec 64))
(declare-fun temp1036_26 () (_ BitVec 64))
(declare-fun temp1036_27 () (_ BitVec 64))
(declare-fun temp1036_28 () (_ BitVec 64))
(declare-fun temp1036_29 () (_ BitVec 64))
(declare-fun temp1036_30 () (_ BitVec 64))
(declare-fun temp1036_31 () (_ BitVec 64))
(declare-fun temp1036_32 () (_ BitVec 64))
(declare-fun temp1036_33 () (_ BitVec 64))
(declare-fun temp1036_34 () (_ BitVec 64))
(declare-fun temp1036_35 () (_ BitVec 64))
(declare-fun temp1036_36 () (_ BitVec 64))
(declare-fun temp1036_37 () (_ BitVec 64))
(declare-fun temp1036_38 () (_ BitVec 64))
(declare-fun temp1036_39 () (_ BitVec 64))
(declare-fun temp1036_40 () (_ BitVec 64))
(declare-fun temp1036_41 () (_ BitVec 64))
(declare-fun temp1036_42 () (_ BitVec 64))
(declare-fun temp1036_43 () (_ BitVec 64))
(declare-fun temp1036_44 () (_ BitVec 64))
(declare-fun temp1036_45 () (_ BitVec 64))
(declare-fun temp1036_46 () (_ BitVec 64))
(declare-fun temp1036_47 () (_ BitVec 64))
(declare-fun temp1036_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp1036_49 () (_ BitVec 64))
(declare-fun temp1036_50 () (_ BitVec 64))
(declare-fun temp1036_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1036_52 () (_ BitVec 64))
(declare-fun temp1036_53 () (_ BitVec 64))
(declare-fun temp1036_54 () (_ BitVec 64))
(declare-fun temp1036_55 () (_ BitVec 64))
(declare-fun temp1036_56 () (_ BitVec 64))
(declare-fun temp1036_57 () (_ BitVec 64))
(declare-fun temp1036_58 () (_ BitVec 64))
(declare-fun temp1036_59 () (_ BitVec 64))
(declare-fun temp1036_60 () (_ BitVec 64))
(declare-fun temp1036_61 () (_ BitVec 64))
(declare-fun temp1036_62 () (_ BitVec 64))
(declare-fun temp1036_63 () (_ BitVec 64))
(declare-fun temp1036_64 () (_ BitVec 64))
(declare-fun temp1036_65 () (_ BitVec 64))
(declare-fun temp1036_66 () (_ BitVec 64))
(declare-fun temp1036_67 () (_ BitVec 64))
(declare-fun temp1036_68 () (_ BitVec 64))
(declare-fun temp1036_69 () (_ BitVec 64))
(declare-fun temp1036_70 () (_ BitVec 64))
(declare-fun temp1036_71 () (_ BitVec 64))
(declare-fun temp1036_72 () (_ BitVec 64))
(declare-fun temp1036_73 () (_ BitVec 64))
(declare-fun temp1036_74 () (_ BitVec 64))
(declare-fun temp1036_75 () (_ BitVec 64))
(declare-fun temp1036_76 () (_ BitVec 64))
(declare-fun temp1036_77 () (_ BitVec 64))
(declare-fun temp1036_78 () (_ BitVec 64))
(declare-fun temp1036_79 () (_ BitVec 64))
(declare-fun temp1036_80 () (_ BitVec 64))
(declare-fun temp1036_81 () (_ BitVec 64))
(declare-fun temp1036_82 () (_ BitVec 64))
(declare-fun temp1036_83 () (_ BitVec 64))
(declare-fun temp1036_84 () (_ BitVec 64))
(declare-fun temp1036_85 () (_ BitVec 64))
(declare-fun temp1036_86 () (_ BitVec 64))
(declare-fun temp1036_87 () (_ BitVec 64))
(declare-fun temp1036_88 () (_ BitVec 64))
(declare-fun temp1036_89 () (_ BitVec 64))
(declare-fun temp1036_90 () (_ BitVec 64))
(declare-fun temp1036_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp1036_92 () (_ BitVec 64))
(declare-fun temp1036_93 () (_ BitVec 64))
(declare-fun temp1036_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1036_95 () (_ BitVec 64))
(declare-fun temp1036_96 () (_ BitVec 64))
(declare-fun temp1036_97 () (_ BitVec 64))
(declare-fun temp1036_98 () (_ BitVec 64))
(declare-fun temp1036_99 () (_ BitVec 64))
(declare-fun temp1036_100 () (_ BitVec 64))
(declare-fun temp1036_101 () (_ BitVec 64))
(declare-fun temp1036_102 () (_ BitVec 64))
(declare-fun temp1036_103 () (_ BitVec 64))
(declare-fun temp1036_104 () (_ BitVec 64))
(declare-fun temp1036_105 () (_ BitVec 64))
(declare-fun temp1036_106 () (_ BitVec 64))
(declare-fun temp1036_107 () (_ BitVec 64))
(declare-fun temp1036_108 () (_ BitVec 64))
(declare-fun temp1036_109 () (_ BitVec 64))
(declare-fun temp1036_110 () (_ BitVec 64))
(declare-fun temp1036_111 () (_ BitVec 64))
(declare-fun temp1036_112 () (_ BitVec 64))
(declare-fun temp1036_113 () (_ BitVec 64))
(declare-fun temp1036_114 () (_ BitVec 64))
(declare-fun temp1036_115 () (_ BitVec 64))
(declare-fun temp1036_116 () (_ BitVec 64))
(declare-fun temp1036_117 () (_ BitVec 64))
(declare-fun temp1036_118 () (_ BitVec 64))
(declare-fun temp1036_119 () (_ BitVec 64))
(declare-fun temp1036_120 () (_ BitVec 64))
(declare-fun temp1036_121 () (_ BitVec 64))
(declare-fun temp1036_122 () (_ BitVec 64))
(declare-fun temp1036_123 () (_ BitVec 64))
(declare-fun temp1036_124 () (_ BitVec 64))
(declare-fun temp1036_125 () (_ BitVec 64))
(declare-fun temp1036_126 () (_ BitVec 64))
(declare-fun temp1036_127 () (_ BitVec 64))
(declare-fun temp1036_128 () (_ BitVec 64))
(declare-fun temp1036_129 () (_ BitVec 64))
(declare-fun temp1036_130 () (_ BitVec 64))
(declare-fun temp1036_131 () (_ BitVec 64))
(declare-fun temp1036_132 () (_ BitVec 64))
(declare-fun temp1036_133 () (_ BitVec 64))
(declare-fun temp1036_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp1036_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp1036_136 () (_ BitVec 64))
(declare-fun temp1036_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp1036_138 () (_ BitVec 64))
(declare-fun temp1036_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1036_140 () (_ BitVec 64))
(declare-fun temp1036_141 () (_ BitVec 64))
(declare-fun temp1036_142 () (_ BitVec 64))
(declare-fun temp1036_143 () (_ BitVec 64))
(declare-fun temp1036_144 () (_ BitVec 64))
(declare-fun temp1036_145 () (_ BitVec 64))
(declare-fun temp1036_146 () (_ BitVec 64))
(declare-fun temp1036_147 () (_ BitVec 64))
(declare-fun temp1036_148 () (_ BitVec 64))
(declare-fun temp1036_149 () (_ BitVec 64))
(declare-fun temp1036_150 () (_ BitVec 64))
(declare-fun temp1036_151 () (_ BitVec 64))
(declare-fun temp1036_152 () (_ BitVec 64))
(declare-fun temp1036_153 () (_ BitVec 64))
(declare-fun temp1036_154 () (_ BitVec 64))
(declare-fun temp1036_155 () (_ BitVec 64))
(declare-fun temp1036_157 () (_ BitVec 64))
(declare-fun temp1036_158 () (_ BitVec 64))
(declare-fun temp1036_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp1036_159 () (_ BitVec 64))
(declare-fun temp1036_160 () (_ BitVec 64))
(declare-fun temp1036_162 () (_ BitVec 64))
(declare-fun temp1036_163 () (_ BitVec 64))
(declare-fun temp1036_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp1036_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp1036_165 () (_ BitVec 64))
(declare-fun temp1036_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp1036_167 () (_ BitVec 64))
(declare-fun temp1036_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp1036_169 () (_ BitVec 64))
(declare-fun temp1036_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1036_171 () (_ BitVec 64))
(declare-fun temp1036_172 () (_ BitVec 64))
(declare-fun temp1036_173 () (_ BitVec 64))
(declare-fun temp1036_174 () (_ BitVec 64))
(declare-fun temp1036_175 () (_ BitVec 64))
(declare-fun temp1036_176 () (_ BitVec 64))
(declare-fun temp1036_177 () (_ BitVec 64))
(declare-fun temp1036_178 () (_ BitVec 64))
(declare-fun temp1036_179 () (_ BitVec 64))
(declare-fun temp1036_180 () (_ BitVec 64))
(declare-fun temp1036_181 () (_ BitVec 64))
(declare-fun temp1036_182 () (_ BitVec 64))
(declare-fun temp1036_183 () (_ BitVec 64))
(declare-fun temp1036_184 () (_ BitVec 64))
(declare-fun temp1036_185 () (_ BitVec 64))
(declare-fun temp1036_186 () (_ BitVec 64))
(declare-fun temp1036_187 () (_ BitVec 64))
(declare-fun temp1036_188 () (_ BitVec 64))
(declare-fun temp1036_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp1036_190 () (_ BitVec 64))
(declare-fun temp1036_192 () (_ BitVec 64))
(declare-fun temp1036_193 () (_ BitVec 64))
(declare-fun temp1036_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp1036_194 () (_ BitVec 64))
(declare-fun temp1036_195 () (_ BitVec 64))
(declare-fun temp1036_197 () (_ BitVec 64))
(declare-fun temp1036_198 () (_ BitVec 64))
(declare-fun temp1036_196 () (_ BitVec 64))
(declare-fun temp1036_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp1036_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp1036_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp1036_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp1036_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp1036_204 () (_ BitVec 64))
(declare-fun temp1036_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp1036_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp1036_207 () (_ BitVec 64))
(declare-fun temp1036_208 () (_ BitVec 64))
(declare-fun temp1036_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp1036_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp1036_211 () (_ BitVec 64))
(declare-fun temp1036_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp1036_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp1036_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp1036_215 () (_ BitVec 64))
(declare-fun temp1036_216 () (_ BitVec 64))
(declare-fun var5649172 () (_ BitVec 64))
(declare-fun var5649139 () (_ BitVec 64))
(declare-fun var5517703 () (_ BitVec 64))
(declare-fun var5517699 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp1036_217 () (_ BitVec 64))
(assert (= temp1036_1 #x0000000000000001))
(assert (= var77203 temp1036_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp1036_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp1036_2)))
(assert (= temp1036_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1036_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1036_4 #x0000000000000000))
(assert (= var210941 temp1036_4))
(assert (= temp1036_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp1036_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1036_6 #x0000000000000000))
(assert (= var210986 temp1036_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp1036_7 #x0000000000000000))
(assert (= temp1036_8 temp1036_7))
(assert (= temp1036_9 (select ARGNAME_padding_NAMEEND_VAL temp1036_8)))
(assert (= temp1036_10 #x0000000000000001))
(assert (= temp1036_11 temp1036_10))
(assert (= temp1036_12 (select ARGNAME_padding_NAMEEND_VAL temp1036_11)))
(assert (= temp1036_13 #x0000000000000002))
(assert (= temp1036_14 temp1036_13))
(assert (= temp1036_15 (select ARGNAME_padding_NAMEEND_VAL temp1036_14)))
(assert (= temp1036_16 #x0000000000000003))
(assert (= temp1036_17 temp1036_16))
(assert (= temp1036_18 (select ARGNAME_padding_NAMEEND_VAL temp1036_17)))
(assert (= temp1036_19 #x0000000000000004))
(assert (= temp1036_20 temp1036_19))
(assert (= temp1036_21 (select ARGNAME_padding_NAMEEND_VAL temp1036_20)))
(assert (= temp1036_22 #x0000000000000005))
(assert (= temp1036_23 temp1036_22))
(assert (= temp1036_24 (select ARGNAME_padding_NAMEEND_VAL temp1036_23)))
(assert (= temp1036_25 #x0000000000000000))
(assert (= temp1036_26 #x0000000000000000))
(assert (= temp1036_27 temp1036_26))
(assert (= temp1036_28 (select ARGNAME_padding_NAMEEND_VAL temp1036_27)))
(assert (= temp1036_29 #x0000000000000000))
(assert (= temp1036_30 #x0000000000000001))
(assert (= temp1036_31 temp1036_30))
(assert (= temp1036_32 (select ARGNAME_padding_NAMEEND_VAL temp1036_31)))
(assert (= temp1036_33 #x0000000000000000))
(assert (= temp1036_34 #x0000000000000002))
(assert (= temp1036_35 temp1036_34))
(assert (= temp1036_36 (select ARGNAME_padding_NAMEEND_VAL temp1036_35)))
(assert (= temp1036_37 #x0000000000000000))
(assert (= temp1036_38 #x0000000000000003))
(assert (= temp1036_39 temp1036_38))
(assert (= temp1036_40 (select ARGNAME_padding_NAMEEND_VAL temp1036_39)))
(assert (= temp1036_41 #x0000000000000000))
(assert (= temp1036_42 #x0000000000000004))
(assert (= temp1036_43 temp1036_42))
(assert (= temp1036_44 (select ARGNAME_padding_NAMEEND_VAL temp1036_43)))
(assert (= temp1036_45 #x0000000000000000))
(assert (= temp1036_46 #x0000000000000005))
(assert (= temp1036_47 temp1036_46))
(assert (= temp1036_48 (select ARGNAME_padding_NAMEEND_VAL temp1036_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp1036_28 temp1036_25)
             (bvslt temp1036_32 temp1036_29)
             (bvslt temp1036_36 temp1036_33)
             (bvslt temp1036_40 temp1036_37)
             (bvslt temp1036_44 temp1036_41)
             (bvslt temp1036_48 temp1036_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1036_49 #x0000000000000000))
(assert (= var1191714 temp1036_49))
(assert (= temp1036_50 #x0000000000000000))
(assert (= temp1036_51 temp1036_50))
(assert (= temp1036_52 (select ARGNAME_output_padding_NAMEEND_VAL temp1036_51)))
(assert (= temp1036_53 #x0000000000000001))
(assert (= temp1036_54 temp1036_53))
(assert (= temp1036_55 (select ARGNAME_output_padding_NAMEEND_VAL temp1036_54)))
(assert (= temp1036_56 #x0000000000000002))
(assert (= temp1036_57 temp1036_56))
(assert (= temp1036_58 (select ARGNAME_output_padding_NAMEEND_VAL temp1036_57)))
(assert (= temp1036_59 #x0000000000000003))
(assert (= temp1036_60 temp1036_59))
(assert (= temp1036_61 (select ARGNAME_output_padding_NAMEEND_VAL temp1036_60)))
(assert (= temp1036_62 #x0000000000000004))
(assert (= temp1036_63 temp1036_62))
(assert (= temp1036_64 (select ARGNAME_output_padding_NAMEEND_VAL temp1036_63)))
(assert (= temp1036_65 #x0000000000000005))
(assert (= temp1036_66 temp1036_65))
(assert (= temp1036_67 (select ARGNAME_output_padding_NAMEEND_VAL temp1036_66)))
(assert (= temp1036_68 #x0000000000000000))
(assert (= temp1036_69 #x0000000000000000))
(assert (= temp1036_70 temp1036_69))
(assert (= temp1036_71 (select ARGNAME_output_padding_NAMEEND_VAL temp1036_70)))
(assert (= temp1036_72 #x0000000000000000))
(assert (= temp1036_73 #x0000000000000001))
(assert (= temp1036_74 temp1036_73))
(assert (= temp1036_75 (select ARGNAME_output_padding_NAMEEND_VAL temp1036_74)))
(assert (= temp1036_76 #x0000000000000000))
(assert (= temp1036_77 #x0000000000000002))
(assert (= temp1036_78 temp1036_77))
(assert (= temp1036_79 (select ARGNAME_output_padding_NAMEEND_VAL temp1036_78)))
(assert (= temp1036_80 #x0000000000000000))
(assert (= temp1036_81 #x0000000000000003))
(assert (= temp1036_82 temp1036_81))
(assert (= temp1036_83 (select ARGNAME_output_padding_NAMEEND_VAL temp1036_82)))
(assert (= temp1036_84 #x0000000000000000))
(assert (= temp1036_85 #x0000000000000004))
(assert (= temp1036_86 temp1036_85))
(assert (= temp1036_87 (select ARGNAME_output_padding_NAMEEND_VAL temp1036_86)))
(assert (= temp1036_88 #x0000000000000000))
(assert (= temp1036_89 #x0000000000000005))
(assert (= temp1036_90 temp1036_89))
(assert (= temp1036_91 (select ARGNAME_output_padding_NAMEEND_VAL temp1036_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp1036_71 temp1036_68)
             (bvslt temp1036_75 temp1036_72)
             (bvslt temp1036_79 temp1036_76)
             (bvslt temp1036_83 temp1036_80)
             (bvslt temp1036_87 temp1036_84)
             (bvslt temp1036_91 temp1036_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1036_92 #x0000000000000000))
(assert (= var1191725 temp1036_92))
(assert (= temp1036_93 #x0000000000000000))
(assert (= temp1036_94 temp1036_93))
(assert (= temp1036_95 (select ARGNAME_stride_NAMEEND_VAL temp1036_94)))
(assert (= temp1036_96 #x0000000000000001))
(assert (= temp1036_97 temp1036_96))
(assert (= temp1036_98 (select ARGNAME_stride_NAMEEND_VAL temp1036_97)))
(assert (= temp1036_99 #x0000000000000002))
(assert (= temp1036_100 temp1036_99))
(assert (= temp1036_101 (select ARGNAME_stride_NAMEEND_VAL temp1036_100)))
(assert (= temp1036_102 #x0000000000000003))
(assert (= temp1036_103 temp1036_102))
(assert (= temp1036_104 (select ARGNAME_stride_NAMEEND_VAL temp1036_103)))
(assert (= temp1036_105 #x0000000000000004))
(assert (= temp1036_106 temp1036_105))
(assert (= temp1036_107 (select ARGNAME_stride_NAMEEND_VAL temp1036_106)))
(assert (= temp1036_108 #x0000000000000005))
(assert (= temp1036_109 temp1036_108))
(assert (= temp1036_110 (select ARGNAME_stride_NAMEEND_VAL temp1036_109)))
(assert (= temp1036_111 #x0000000000000000))
(assert (= temp1036_112 #x0000000000000000))
(assert (= temp1036_113 temp1036_112))
(assert (= temp1036_114 (select ARGNAME_stride_NAMEEND_VAL temp1036_113)))
(assert (= temp1036_115 #x0000000000000000))
(assert (= temp1036_116 #x0000000000000001))
(assert (= temp1036_117 temp1036_116))
(assert (= temp1036_118 (select ARGNAME_stride_NAMEEND_VAL temp1036_117)))
(assert (= temp1036_119 #x0000000000000000))
(assert (= temp1036_120 #x0000000000000002))
(assert (= temp1036_121 temp1036_120))
(assert (= temp1036_122 (select ARGNAME_stride_NAMEEND_VAL temp1036_121)))
(assert (= temp1036_123 #x0000000000000000))
(assert (= temp1036_124 #x0000000000000003))
(assert (= temp1036_125 temp1036_124))
(assert (= temp1036_126 (select ARGNAME_stride_NAMEEND_VAL temp1036_125)))
(assert (= temp1036_127 #x0000000000000000))
(assert (= temp1036_128 #x0000000000000004))
(assert (= temp1036_129 temp1036_128))
(assert (= temp1036_130 (select ARGNAME_stride_NAMEEND_VAL temp1036_129)))
(assert (= temp1036_131 #x0000000000000000))
(assert (= temp1036_132 #x0000000000000005))
(assert (= temp1036_133 temp1036_132))
(assert (= temp1036_134 (select ARGNAME_stride_NAMEEND_VAL temp1036_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp1036_114 temp1036_111)
             (bvsle temp1036_118 temp1036_115)
             (bvsle temp1036_122 temp1036_119)
             (bvsle temp1036_126 temp1036_123)
             (bvsle temp1036_130 temp1036_127)
             (bvsle temp1036_134 temp1036_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1036_135 #x0000000000000000))
(assert (= var1191735 temp1036_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1036_136 #x0000000000000001))
(assert (= var1191747 temp1036_136))
(assert (= temp1036_137 #x0000000000000000))
(assert (= var1179826 temp1036_137))
(assert (= temp1036_138 #x0000000000000000))
(assert (= temp1036_139 temp1036_138))
(assert (= temp1036_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1036_139)))
(assert (= temp1036_141 #x0000000000000001))
(assert (= temp1036_142 temp1036_141))
(assert (= temp1036_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1036_142)))
(assert (= temp1036_144 #x0000000000000002))
(assert (= temp1036_145 temp1036_144))
(assert (= temp1036_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1036_145)))
(assert (= temp1036_147 #x0000000000000003))
(assert (= temp1036_148 temp1036_147))
(assert (= temp1036_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1036_148)))
(assert (= temp1036_150 #x0000000000000004))
(assert (= temp1036_151 temp1036_150))
(assert (= temp1036_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1036_151)))
(assert (= temp1036_153 #x0000000000000005))
(assert (= temp1036_154 temp1036_153))
(assert (= temp1036_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1036_154)))
(assert (= temp1036_157 var1179826))
(assert (= temp1036_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1036_157)))
(assert (= temp1036_156 temp1036_158))
(assert (= var1191780
   (ite (bvslt temp1036_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1036_159 #x0000000000000000))
(assert (= var1191780 temp1036_159))
(assert (= temp1036_160 #x0000000000000000))
(assert (= var1179826 temp1036_160))
(assert (= temp1036_162 var1179826))
(assert (= temp1036_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1036_162)))
(assert (= temp1036_161 temp1036_163))
(assert (= var1191802 (bvsmod temp1036_161 ARGNAME_groups_NAMEEND)))
(assert (= temp1036_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp1036_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp1036_165 #x0000000000000001))
(assert (= var1191803 temp1036_165))
(assert (= temp1036_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp1036_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1036_167 #x0000000000000001))
(assert (= var1191823 temp1036_167))
(assert (= temp1036_168 #x0000000000000001))
(assert (= var1180714 temp1036_168))
(assert (= temp1036_169 #x0000000000000000))
(assert (= temp1036_170 temp1036_169))
(assert (= temp1036_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp1036_170)))
(assert (= temp1036_172 #x0000000000000001))
(assert (= temp1036_173 temp1036_172))
(assert (= temp1036_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp1036_173)))
(assert (= temp1036_175 #x0000000000000002))
(assert (= temp1036_176 temp1036_175))
(assert (= temp1036_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp1036_176)))
(assert (= temp1036_178 #x0000000000000003))
(assert (= temp1036_179 temp1036_178))
(assert (= temp1036_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp1036_179)))
(assert (= temp1036_181 #x0000000000000004))
(assert (= temp1036_182 temp1036_181))
(assert (= temp1036_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp1036_182)))
(assert (= temp1036_184 #x0000000000000005))
(assert (= temp1036_185 temp1036_184))
(assert (= temp1036_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp1036_185)))
(assert (= temp1036_187 #x0000000000000000))
(assert (= temp1036_188
   (ite (bvslt var1180714 temp1036_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp1036_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp1036_188)))
(assert (= var1191831 temp1036_189))
(assert (bvslt (ite (bvslt var1180714 temp1036_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1036_190 #x0000000000000001))
(assert (= var1180714 temp1036_190))
(assert (= temp1036_192 var1180714))
(assert (= temp1036_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1036_192)))
(assert (= temp1036_191 temp1036_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp1036_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp1036_194 #x0000000000000001))
(assert (= var1191836 temp1036_194))
(assert (= temp1036_195 #x0000000000000000))
(assert (= var1179826 temp1036_195))
(assert (= temp1036_197 var1179826))
(assert (= temp1036_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1036_197)))
(assert (= temp1036_196 temp1036_198))
(assert (= temp1036_199 #x0000000000000002))
(assert (= var1586025 temp1036_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp1036_200 #x0000000000000001))
(assert (= var1191993 temp1036_200))
(assert (= temp1036_201 #x0000000000000001))
(assert (= var2700303 temp1036_201))
(assert (= temp1036_202 #x0000000000000001))
(assert (= var2962447 temp1036_202))
(assert (= temp1036_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1036_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1036_204 #x0000000000000001))
(assert (= var211058 temp1036_204))
(assert (= temp1036_205 #x0000000000000001))
(assert (= var211188 temp1036_205))
(assert (= var3879401 var211188))
(assert (= temp1036_206 #x0000000000000000))
(assert (= var3866802 temp1036_206))
(assert (= temp1036_207 #x0000000000000000))
(assert (= temp1036_208
   (ite (bvslt var3866802 temp1036_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp1036_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp1036_208)))
(assert (= var3879420 temp1036_209))
(assert (bvslt (ite (bvslt var3866802 temp1036_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1036_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp1036_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp1036_211 #x0000000000000001))
(assert (= var3879421 temp1036_211))
(assert (= temp1036_212 #x0000000000000000))
(assert (= var4079423 temp1036_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp1036_213 #x0000000000000002))
(assert (= var4208259 temp1036_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1036_214 #x0000000000000000))
(assert (= var4273820 temp1036_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp1036_215 #x0000000000000001))
(assert (= var211058 temp1036_215))
(assert (= temp1036_216 #x0000000000000000))
(assert (= var5649172 temp1036_216))
(assert (= var5649139 var5649172))
(assert (= var5517703 var5649139))
(assert (= var5517699 var5517703))
(assert (= var212669 var5517699))
(assert (= temp1036_217 #x0000000000000000))
(assert (= var212669 temp1036_217))
(model-add temp1036_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp1036_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1036_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp1036_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




