(declare-fun temp10058_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10058_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10058_3 () (_ BitVec 64))
(declare-fun temp10058_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10058_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10058_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10058_7 () (_ BitVec 64))
(declare-fun temp10058_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10058_9 () (_ BitVec 64))
(declare-fun temp10058_10 () (_ BitVec 64))
(declare-fun temp10058_11 () (_ BitVec 64))
(declare-fun temp10058_12 () (_ BitVec 64))
(declare-fun temp10058_13 () (_ BitVec 64))
(declare-fun temp10058_14 () (_ BitVec 64))
(declare-fun temp10058_15 () (_ BitVec 64))
(declare-fun temp10058_16 () (_ BitVec 64))
(declare-fun temp10058_17 () (_ BitVec 64))
(declare-fun temp10058_18 () (_ BitVec 64))
(declare-fun temp10058_19 () (_ BitVec 64))
(declare-fun temp10058_20 () (_ BitVec 64))
(declare-fun temp10058_21 () (_ BitVec 64))
(declare-fun temp10058_22 () (_ BitVec 64))
(declare-fun temp10058_23 () (_ BitVec 64))
(declare-fun temp10058_24 () (_ BitVec 64))
(declare-fun temp10058_25 () (_ BitVec 64))
(declare-fun temp10058_26 () (_ BitVec 64))
(declare-fun temp10058_27 () (_ BitVec 64))
(declare-fun temp10058_28 () (_ BitVec 64))
(declare-fun temp10058_29 () (_ BitVec 64))
(declare-fun temp10058_30 () (_ BitVec 64))
(declare-fun temp10058_31 () (_ BitVec 64))
(declare-fun temp10058_32 () (_ BitVec 64))
(declare-fun temp10058_33 () (_ BitVec 64))
(declare-fun temp10058_34 () (_ BitVec 64))
(declare-fun temp10058_35 () (_ BitVec 64))
(declare-fun temp10058_36 () (_ BitVec 64))
(declare-fun temp10058_37 () (_ BitVec 64))
(declare-fun temp10058_38 () (_ BitVec 64))
(declare-fun temp10058_39 () (_ BitVec 64))
(declare-fun temp10058_40 () (_ BitVec 64))
(declare-fun temp10058_41 () (_ BitVec 64))
(declare-fun temp10058_42 () (_ BitVec 64))
(declare-fun temp10058_43 () (_ BitVec 64))
(declare-fun temp10058_44 () (_ BitVec 64))
(declare-fun temp10058_45 () (_ BitVec 64))
(declare-fun temp10058_46 () (_ BitVec 64))
(declare-fun temp10058_47 () (_ BitVec 64))
(declare-fun temp10058_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10058_49 () (_ BitVec 64))
(declare-fun temp10058_50 () (_ BitVec 64))
(declare-fun temp10058_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10058_52 () (_ BitVec 64))
(declare-fun temp10058_53 () (_ BitVec 64))
(declare-fun temp10058_54 () (_ BitVec 64))
(declare-fun temp10058_55 () (_ BitVec 64))
(declare-fun temp10058_56 () (_ BitVec 64))
(declare-fun temp10058_57 () (_ BitVec 64))
(declare-fun temp10058_58 () (_ BitVec 64))
(declare-fun temp10058_59 () (_ BitVec 64))
(declare-fun temp10058_60 () (_ BitVec 64))
(declare-fun temp10058_61 () (_ BitVec 64))
(declare-fun temp10058_62 () (_ BitVec 64))
(declare-fun temp10058_63 () (_ BitVec 64))
(declare-fun temp10058_64 () (_ BitVec 64))
(declare-fun temp10058_65 () (_ BitVec 64))
(declare-fun temp10058_66 () (_ BitVec 64))
(declare-fun temp10058_67 () (_ BitVec 64))
(declare-fun temp10058_68 () (_ BitVec 64))
(declare-fun temp10058_69 () (_ BitVec 64))
(declare-fun temp10058_70 () (_ BitVec 64))
(declare-fun temp10058_71 () (_ BitVec 64))
(declare-fun temp10058_72 () (_ BitVec 64))
(declare-fun temp10058_73 () (_ BitVec 64))
(declare-fun temp10058_74 () (_ BitVec 64))
(declare-fun temp10058_75 () (_ BitVec 64))
(declare-fun temp10058_76 () (_ BitVec 64))
(declare-fun temp10058_77 () (_ BitVec 64))
(declare-fun temp10058_78 () (_ BitVec 64))
(declare-fun temp10058_79 () (_ BitVec 64))
(declare-fun temp10058_80 () (_ BitVec 64))
(declare-fun temp10058_81 () (_ BitVec 64))
(declare-fun temp10058_82 () (_ BitVec 64))
(declare-fun temp10058_83 () (_ BitVec 64))
(declare-fun temp10058_84 () (_ BitVec 64))
(declare-fun temp10058_85 () (_ BitVec 64))
(declare-fun temp10058_86 () (_ BitVec 64))
(declare-fun temp10058_87 () (_ BitVec 64))
(declare-fun temp10058_88 () (_ BitVec 64))
(declare-fun temp10058_89 () (_ BitVec 64))
(declare-fun temp10058_90 () (_ BitVec 64))
(declare-fun temp10058_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10058_92 () (_ BitVec 64))
(declare-fun temp10058_93 () (_ BitVec 64))
(declare-fun temp10058_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10058_95 () (_ BitVec 64))
(declare-fun temp10058_96 () (_ BitVec 64))
(declare-fun temp10058_97 () (_ BitVec 64))
(declare-fun temp10058_98 () (_ BitVec 64))
(declare-fun temp10058_99 () (_ BitVec 64))
(declare-fun temp10058_100 () (_ BitVec 64))
(declare-fun temp10058_101 () (_ BitVec 64))
(declare-fun temp10058_102 () (_ BitVec 64))
(declare-fun temp10058_103 () (_ BitVec 64))
(declare-fun temp10058_104 () (_ BitVec 64))
(declare-fun temp10058_105 () (_ BitVec 64))
(declare-fun temp10058_106 () (_ BitVec 64))
(declare-fun temp10058_107 () (_ BitVec 64))
(declare-fun temp10058_108 () (_ BitVec 64))
(declare-fun temp10058_109 () (_ BitVec 64))
(declare-fun temp10058_110 () (_ BitVec 64))
(declare-fun temp10058_111 () (_ BitVec 64))
(declare-fun temp10058_112 () (_ BitVec 64))
(declare-fun temp10058_113 () (_ BitVec 64))
(declare-fun temp10058_114 () (_ BitVec 64))
(declare-fun temp10058_115 () (_ BitVec 64))
(declare-fun temp10058_116 () (_ BitVec 64))
(declare-fun temp10058_117 () (_ BitVec 64))
(declare-fun temp10058_118 () (_ BitVec 64))
(declare-fun temp10058_119 () (_ BitVec 64))
(declare-fun temp10058_120 () (_ BitVec 64))
(declare-fun temp10058_121 () (_ BitVec 64))
(declare-fun temp10058_122 () (_ BitVec 64))
(declare-fun temp10058_123 () (_ BitVec 64))
(declare-fun temp10058_124 () (_ BitVec 64))
(declare-fun temp10058_125 () (_ BitVec 64))
(declare-fun temp10058_126 () (_ BitVec 64))
(declare-fun temp10058_127 () (_ BitVec 64))
(declare-fun temp10058_128 () (_ BitVec 64))
(declare-fun temp10058_129 () (_ BitVec 64))
(declare-fun temp10058_130 () (_ BitVec 64))
(declare-fun temp10058_131 () (_ BitVec 64))
(declare-fun temp10058_132 () (_ BitVec 64))
(declare-fun temp10058_133 () (_ BitVec 64))
(declare-fun temp10058_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10058_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10058_136 () (_ BitVec 64))
(declare-fun temp10058_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10058_138 () (_ BitVec 64))
(declare-fun temp10058_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10058_140 () (_ BitVec 64))
(declare-fun temp10058_141 () (_ BitVec 64))
(declare-fun temp10058_142 () (_ BitVec 64))
(declare-fun temp10058_143 () (_ BitVec 64))
(declare-fun temp10058_144 () (_ BitVec 64))
(declare-fun temp10058_145 () (_ BitVec 64))
(declare-fun temp10058_146 () (_ BitVec 64))
(declare-fun temp10058_147 () (_ BitVec 64))
(declare-fun temp10058_148 () (_ BitVec 64))
(declare-fun temp10058_149 () (_ BitVec 64))
(declare-fun temp10058_150 () (_ BitVec 64))
(declare-fun temp10058_151 () (_ BitVec 64))
(declare-fun temp10058_152 () (_ BitVec 64))
(declare-fun temp10058_153 () (_ BitVec 64))
(declare-fun temp10058_154 () (_ BitVec 64))
(declare-fun temp10058_155 () (_ BitVec 64))
(declare-fun temp10058_157 () (_ BitVec 64))
(declare-fun temp10058_158 () (_ BitVec 64))
(declare-fun temp10058_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10058_159 () (_ BitVec 64))
(declare-fun temp10058_160 () (_ BitVec 64))
(declare-fun temp10058_162 () (_ BitVec 64))
(declare-fun temp10058_163 () (_ BitVec 64))
(declare-fun temp10058_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10058_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10058_165 () (_ BitVec 64))
(declare-fun temp10058_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10058_167 () (_ BitVec 64))
(declare-fun temp10058_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10058_169 () (_ BitVec 64))
(declare-fun temp10058_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10058_171 () (_ BitVec 64))
(declare-fun temp10058_172 () (_ BitVec 64))
(declare-fun temp10058_173 () (_ BitVec 64))
(declare-fun temp10058_174 () (_ BitVec 64))
(declare-fun temp10058_175 () (_ BitVec 64))
(declare-fun temp10058_176 () (_ BitVec 64))
(declare-fun temp10058_177 () (_ BitVec 64))
(declare-fun temp10058_178 () (_ BitVec 64))
(declare-fun temp10058_179 () (_ BitVec 64))
(declare-fun temp10058_180 () (_ BitVec 64))
(declare-fun temp10058_181 () (_ BitVec 64))
(declare-fun temp10058_182 () (_ BitVec 64))
(declare-fun temp10058_183 () (_ BitVec 64))
(declare-fun temp10058_184 () (_ BitVec 64))
(declare-fun temp10058_185 () (_ BitVec 64))
(declare-fun temp10058_186 () (_ BitVec 64))
(declare-fun temp10058_187 () (_ BitVec 64))
(declare-fun temp10058_188 () (_ BitVec 64))
(declare-fun temp10058_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10058_190 () (_ BitVec 64))
(declare-fun temp10058_192 () (_ BitVec 64))
(declare-fun temp10058_193 () (_ BitVec 64))
(declare-fun temp10058_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10058_194 () (_ BitVec 64))
(declare-fun temp10058_195 () (_ BitVec 64))
(declare-fun temp10058_197 () (_ BitVec 64))
(declare-fun temp10058_198 () (_ BitVec 64))
(declare-fun temp10058_196 () (_ BitVec 64))
(declare-fun temp10058_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10058_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10058_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10058_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10058_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10058_204 () (_ BitVec 64))
(declare-fun temp10058_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10058_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10058_207 () (_ BitVec 64))
(declare-fun temp10058_208 () (_ BitVec 64))
(declare-fun temp10058_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10058_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10058_211 () (_ BitVec 64))
(declare-fun temp10058_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10058_213 () (_ BitVec 64))
(declare-fun temp10058_214 () (_ BitVec 64))
(declare-fun temp10058_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10058_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10058_217 () (_ BitVec 64))
(declare-fun temp10058_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10058_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10058_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp10058_222 () (_ BitVec 64))
(declare-fun temp10058_221 () (_ BitVec 64))
(declare-fun temp10058_223 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp10058_224 () (_ BitVec 64))
(declare-fun temp10058_225 () (_ BitVec 64))
(declare-fun temp10058_226 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp10058_227 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp10058_228 () (_ BitVec 64))
(declare-fun temp10058_230 () (_ BitVec 64))
(declare-fun temp10058_229 () (_ BitVec 64))
(declare-fun temp10058_231 () (_ BitVec 64))
(assert (= temp10058_1 #x0000000000000001))
(assert (= var77203 temp10058_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10058_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10058_2)))
(assert (= temp10058_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10058_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10058_4 #x0000000000000000))
(assert (= var210941 temp10058_4))
(assert (= temp10058_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10058_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10058_6 #x0000000000000000))
(assert (= var210986 temp10058_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10058_7 #x0000000000000000))
(assert (= temp10058_8 temp10058_7))
(assert (= temp10058_9 (select ARGNAME_padding_NAMEEND_VAL temp10058_8)))
(assert (= temp10058_10 #x0000000000000001))
(assert (= temp10058_11 temp10058_10))
(assert (= temp10058_12 (select ARGNAME_padding_NAMEEND_VAL temp10058_11)))
(assert (= temp10058_13 #x0000000000000002))
(assert (= temp10058_14 temp10058_13))
(assert (= temp10058_15 (select ARGNAME_padding_NAMEEND_VAL temp10058_14)))
(assert (= temp10058_16 #x0000000000000003))
(assert (= temp10058_17 temp10058_16))
(assert (= temp10058_18 (select ARGNAME_padding_NAMEEND_VAL temp10058_17)))
(assert (= temp10058_19 #x0000000000000004))
(assert (= temp10058_20 temp10058_19))
(assert (= temp10058_21 (select ARGNAME_padding_NAMEEND_VAL temp10058_20)))
(assert (= temp10058_22 #x0000000000000005))
(assert (= temp10058_23 temp10058_22))
(assert (= temp10058_24 (select ARGNAME_padding_NAMEEND_VAL temp10058_23)))
(assert (= temp10058_25 #x0000000000000000))
(assert (= temp10058_26 #x0000000000000000))
(assert (= temp10058_27 temp10058_26))
(assert (= temp10058_28 (select ARGNAME_padding_NAMEEND_VAL temp10058_27)))
(assert (= temp10058_29 #x0000000000000000))
(assert (= temp10058_30 #x0000000000000001))
(assert (= temp10058_31 temp10058_30))
(assert (= temp10058_32 (select ARGNAME_padding_NAMEEND_VAL temp10058_31)))
(assert (= temp10058_33 #x0000000000000000))
(assert (= temp10058_34 #x0000000000000002))
(assert (= temp10058_35 temp10058_34))
(assert (= temp10058_36 (select ARGNAME_padding_NAMEEND_VAL temp10058_35)))
(assert (= temp10058_37 #x0000000000000000))
(assert (= temp10058_38 #x0000000000000003))
(assert (= temp10058_39 temp10058_38))
(assert (= temp10058_40 (select ARGNAME_padding_NAMEEND_VAL temp10058_39)))
(assert (= temp10058_41 #x0000000000000000))
(assert (= temp10058_42 #x0000000000000004))
(assert (= temp10058_43 temp10058_42))
(assert (= temp10058_44 (select ARGNAME_padding_NAMEEND_VAL temp10058_43)))
(assert (= temp10058_45 #x0000000000000000))
(assert (= temp10058_46 #x0000000000000005))
(assert (= temp10058_47 temp10058_46))
(assert (= temp10058_48 (select ARGNAME_padding_NAMEEND_VAL temp10058_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10058_28 temp10058_25)
             (bvslt temp10058_32 temp10058_29)
             (bvslt temp10058_36 temp10058_33)
             (bvslt temp10058_40 temp10058_37)
             (bvslt temp10058_44 temp10058_41)
             (bvslt temp10058_48 temp10058_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10058_49 #x0000000000000000))
(assert (= var1191714 temp10058_49))
(assert (= temp10058_50 #x0000000000000000))
(assert (= temp10058_51 temp10058_50))
(assert (= temp10058_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10058_51)))
(assert (= temp10058_53 #x0000000000000001))
(assert (= temp10058_54 temp10058_53))
(assert (= temp10058_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10058_54)))
(assert (= temp10058_56 #x0000000000000002))
(assert (= temp10058_57 temp10058_56))
(assert (= temp10058_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10058_57)))
(assert (= temp10058_59 #x0000000000000003))
(assert (= temp10058_60 temp10058_59))
(assert (= temp10058_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10058_60)))
(assert (= temp10058_62 #x0000000000000004))
(assert (= temp10058_63 temp10058_62))
(assert (= temp10058_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10058_63)))
(assert (= temp10058_65 #x0000000000000005))
(assert (= temp10058_66 temp10058_65))
(assert (= temp10058_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10058_66)))
(assert (= temp10058_68 #x0000000000000000))
(assert (= temp10058_69 #x0000000000000000))
(assert (= temp10058_70 temp10058_69))
(assert (= temp10058_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10058_70)))
(assert (= temp10058_72 #x0000000000000000))
(assert (= temp10058_73 #x0000000000000001))
(assert (= temp10058_74 temp10058_73))
(assert (= temp10058_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10058_74)))
(assert (= temp10058_76 #x0000000000000000))
(assert (= temp10058_77 #x0000000000000002))
(assert (= temp10058_78 temp10058_77))
(assert (= temp10058_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10058_78)))
(assert (= temp10058_80 #x0000000000000000))
(assert (= temp10058_81 #x0000000000000003))
(assert (= temp10058_82 temp10058_81))
(assert (= temp10058_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10058_82)))
(assert (= temp10058_84 #x0000000000000000))
(assert (= temp10058_85 #x0000000000000004))
(assert (= temp10058_86 temp10058_85))
(assert (= temp10058_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10058_86)))
(assert (= temp10058_88 #x0000000000000000))
(assert (= temp10058_89 #x0000000000000005))
(assert (= temp10058_90 temp10058_89))
(assert (= temp10058_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10058_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10058_71 temp10058_68)
             (bvslt temp10058_75 temp10058_72)
             (bvslt temp10058_79 temp10058_76)
             (bvslt temp10058_83 temp10058_80)
             (bvslt temp10058_87 temp10058_84)
             (bvslt temp10058_91 temp10058_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10058_92 #x0000000000000000))
(assert (= var1191725 temp10058_92))
(assert (= temp10058_93 #x0000000000000000))
(assert (= temp10058_94 temp10058_93))
(assert (= temp10058_95 (select ARGNAME_stride_NAMEEND_VAL temp10058_94)))
(assert (= temp10058_96 #x0000000000000001))
(assert (= temp10058_97 temp10058_96))
(assert (= temp10058_98 (select ARGNAME_stride_NAMEEND_VAL temp10058_97)))
(assert (= temp10058_99 #x0000000000000002))
(assert (= temp10058_100 temp10058_99))
(assert (= temp10058_101 (select ARGNAME_stride_NAMEEND_VAL temp10058_100)))
(assert (= temp10058_102 #x0000000000000003))
(assert (= temp10058_103 temp10058_102))
(assert (= temp10058_104 (select ARGNAME_stride_NAMEEND_VAL temp10058_103)))
(assert (= temp10058_105 #x0000000000000004))
(assert (= temp10058_106 temp10058_105))
(assert (= temp10058_107 (select ARGNAME_stride_NAMEEND_VAL temp10058_106)))
(assert (= temp10058_108 #x0000000000000005))
(assert (= temp10058_109 temp10058_108))
(assert (= temp10058_110 (select ARGNAME_stride_NAMEEND_VAL temp10058_109)))
(assert (= temp10058_111 #x0000000000000000))
(assert (= temp10058_112 #x0000000000000000))
(assert (= temp10058_113 temp10058_112))
(assert (= temp10058_114 (select ARGNAME_stride_NAMEEND_VAL temp10058_113)))
(assert (= temp10058_115 #x0000000000000000))
(assert (= temp10058_116 #x0000000000000001))
(assert (= temp10058_117 temp10058_116))
(assert (= temp10058_118 (select ARGNAME_stride_NAMEEND_VAL temp10058_117)))
(assert (= temp10058_119 #x0000000000000000))
(assert (= temp10058_120 #x0000000000000002))
(assert (= temp10058_121 temp10058_120))
(assert (= temp10058_122 (select ARGNAME_stride_NAMEEND_VAL temp10058_121)))
(assert (= temp10058_123 #x0000000000000000))
(assert (= temp10058_124 #x0000000000000003))
(assert (= temp10058_125 temp10058_124))
(assert (= temp10058_126 (select ARGNAME_stride_NAMEEND_VAL temp10058_125)))
(assert (= temp10058_127 #x0000000000000000))
(assert (= temp10058_128 #x0000000000000004))
(assert (= temp10058_129 temp10058_128))
(assert (= temp10058_130 (select ARGNAME_stride_NAMEEND_VAL temp10058_129)))
(assert (= temp10058_131 #x0000000000000000))
(assert (= temp10058_132 #x0000000000000005))
(assert (= temp10058_133 temp10058_132))
(assert (= temp10058_134 (select ARGNAME_stride_NAMEEND_VAL temp10058_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10058_114 temp10058_111)
             (bvsle temp10058_118 temp10058_115)
             (bvsle temp10058_122 temp10058_119)
             (bvsle temp10058_126 temp10058_123)
             (bvsle temp10058_130 temp10058_127)
             (bvsle temp10058_134 temp10058_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10058_135 #x0000000000000000))
(assert (= var1191735 temp10058_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10058_136 #x0000000000000001))
(assert (= var1191747 temp10058_136))
(assert (= temp10058_137 #x0000000000000000))
(assert (= var1179826 temp10058_137))
(assert (= temp10058_138 #x0000000000000000))
(assert (= temp10058_139 temp10058_138))
(assert (= temp10058_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10058_139)))
(assert (= temp10058_141 #x0000000000000001))
(assert (= temp10058_142 temp10058_141))
(assert (= temp10058_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10058_142)))
(assert (= temp10058_144 #x0000000000000002))
(assert (= temp10058_145 temp10058_144))
(assert (= temp10058_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10058_145)))
(assert (= temp10058_147 #x0000000000000003))
(assert (= temp10058_148 temp10058_147))
(assert (= temp10058_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10058_148)))
(assert (= temp10058_150 #x0000000000000004))
(assert (= temp10058_151 temp10058_150))
(assert (= temp10058_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10058_151)))
(assert (= temp10058_153 #x0000000000000005))
(assert (= temp10058_154 temp10058_153))
(assert (= temp10058_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10058_154)))
(assert (= temp10058_157 var1179826))
(assert (= temp10058_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10058_157)))
(assert (= temp10058_156 temp10058_158))
(assert (= var1191780
   (ite (bvslt temp10058_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10058_159 #x0000000000000000))
(assert (= var1191780 temp10058_159))
(assert (= temp10058_160 #x0000000000000000))
(assert (= var1179826 temp10058_160))
(assert (= temp10058_162 var1179826))
(assert (= temp10058_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10058_162)))
(assert (= temp10058_161 temp10058_163))
(assert (= var1191802 (bvsmod temp10058_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10058_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10058_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10058_165 #x0000000000000001))
(assert (= var1191803 temp10058_165))
(assert (= temp10058_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10058_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10058_167 #x0000000000000001))
(assert (= var1191823 temp10058_167))
(assert (= temp10058_168 #x0000000000000001))
(assert (= var1180714 temp10058_168))
(assert (= temp10058_169 #x0000000000000000))
(assert (= temp10058_170 temp10058_169))
(assert (= temp10058_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10058_170)))
(assert (= temp10058_172 #x0000000000000001))
(assert (= temp10058_173 temp10058_172))
(assert (= temp10058_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10058_173)))
(assert (= temp10058_175 #x0000000000000002))
(assert (= temp10058_176 temp10058_175))
(assert (= temp10058_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10058_176)))
(assert (= temp10058_178 #x0000000000000003))
(assert (= temp10058_179 temp10058_178))
(assert (= temp10058_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10058_179)))
(assert (= temp10058_181 #x0000000000000004))
(assert (= temp10058_182 temp10058_181))
(assert (= temp10058_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10058_182)))
(assert (= temp10058_184 #x0000000000000005))
(assert (= temp10058_185 temp10058_184))
(assert (= temp10058_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10058_185)))
(assert (= temp10058_187 #x0000000000000000))
(assert (= temp10058_188
   (ite (bvslt var1180714 temp10058_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10058_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10058_188)))
(assert (= var1191831 temp10058_189))
(assert (bvslt (ite (bvslt var1180714 temp10058_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10058_190 #x0000000000000001))
(assert (= var1180714 temp10058_190))
(assert (= temp10058_192 var1180714))
(assert (= temp10058_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10058_192)))
(assert (= temp10058_191 temp10058_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10058_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10058_194 #x0000000000000001))
(assert (= var1191836 temp10058_194))
(assert (= temp10058_195 #x0000000000000000))
(assert (= var1179826 temp10058_195))
(assert (= temp10058_197 var1179826))
(assert (= temp10058_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10058_197)))
(assert (= temp10058_196 temp10058_198))
(assert (= temp10058_199 #x0000000000000002))
(assert (= var1586025 temp10058_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10058_200 #x0000000000000001))
(assert (= var1191993 temp10058_200))
(assert (= temp10058_201 #x0000000000000001))
(assert (= var2700303 temp10058_201))
(assert (= temp10058_202 #x0000000000000001))
(assert (= var2962447 temp10058_202))
(assert (= temp10058_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10058_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10058_204 #x0000000000000001))
(assert (= var211058 temp10058_204))
(assert (= temp10058_205 #x0000000000000001))
(assert (= var211188 temp10058_205))
(assert (= var3879401 var211188))
(assert (= temp10058_206 #x0000000000000000))
(assert (= var3866802 temp10058_206))
(assert (= temp10058_207 #x0000000000000000))
(assert (= temp10058_208
   (ite (bvslt var3866802 temp10058_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10058_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10058_208)))
(assert (= var3879420 temp10058_209))
(assert (bvslt (ite (bvslt var3866802 temp10058_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10058_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10058_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10058_211 #x0000000000000000))
(assert (= var3879421 temp10058_211))
(assert (= temp10058_212 #x0000000000000001))
(assert (= var3867690 temp10058_212))
(assert (= temp10058_213 #x0000000000000000))
(assert (= temp10058_214
   (ite (bvslt var3867690 temp10058_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10058_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10058_214)))
(assert (= var3879423 temp10058_215))
(assert (bvslt (ite (bvslt var3867690 temp10058_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10058_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10058_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10058_217 #x0000000000000001))
(assert (= var3879424 temp10058_217))
(assert (= temp10058_218 #x0000000000000000))
(assert (= var4079423 temp10058_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10058_219 #x0000000000000002))
(assert (= var4208259 temp10058_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10058_220 #x0000000000000000))
(assert (= var4273820 temp10058_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp10058_222 #xffffffffffffffff))
(assert (= temp10058_221 temp10058_222))
(assert (= temp10058_223 #x0000000000000001))
(assert (= var197674 temp10058_223))
(assert (= temp10058_224 #x0000000000000000))
(assert (= temp10058_225
   (ite (bvslt var197674 temp10058_224)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp10058_226 (select ARGNAME_input_NAMEEND_DIMSIZE temp10058_225)))
(assert (= var211595 temp10058_226))
(assert (bvslt (ite (bvslt var197674 temp10058_224)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10058_227 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp10058_227) #x0000000000000001 #x0000000000000000)))
(assert (= temp10058_228 #x0000000000000001))
(assert (= var211596 temp10058_228))
(assert (= temp10058_230 #xffffffffffffffff))
(assert (= temp10058_229 temp10058_230))
(assert (= temp10058_231 #x0000000000000001))
(assert (= var211058 temp10058_231))
(model-add temp10058_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10058_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10058_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10058_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




