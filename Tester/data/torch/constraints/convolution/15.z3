(declare-fun temp20_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp20_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp20_3 () (_ BitVec 64))
(declare-fun temp20_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp20_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp20_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp20_7 () (_ BitVec 64))
(declare-fun temp20_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp20_9 () (_ BitVec 64))
(declare-fun temp20_10 () (_ BitVec 64))
(declare-fun temp20_11 () (_ BitVec 64))
(declare-fun temp20_12 () (_ BitVec 64))
(declare-fun temp20_13 () (_ BitVec 64))
(declare-fun temp20_14 () (_ BitVec 64))
(declare-fun temp20_15 () (_ BitVec 64))
(declare-fun temp20_16 () (_ BitVec 64))
(declare-fun temp20_17 () (_ BitVec 64))
(declare-fun temp20_18 () (_ BitVec 64))
(declare-fun temp20_19 () (_ BitVec 64))
(declare-fun temp20_20 () (_ BitVec 64))
(declare-fun temp20_21 () (_ BitVec 64))
(declare-fun temp20_22 () (_ BitVec 64))
(declare-fun temp20_23 () (_ BitVec 64))
(declare-fun temp20_24 () (_ BitVec 64))
(declare-fun temp20_25 () (_ BitVec 64))
(declare-fun temp20_26 () (_ BitVec 64))
(declare-fun temp20_27 () (_ BitVec 64))
(declare-fun temp20_28 () (_ BitVec 64))
(declare-fun temp20_29 () (_ BitVec 64))
(declare-fun temp20_30 () (_ BitVec 64))
(declare-fun temp20_31 () (_ BitVec 64))
(declare-fun temp20_32 () (_ BitVec 64))
(declare-fun temp20_33 () (_ BitVec 64))
(declare-fun temp20_34 () (_ BitVec 64))
(declare-fun temp20_35 () (_ BitVec 64))
(declare-fun temp20_36 () (_ BitVec 64))
(declare-fun temp20_37 () (_ BitVec 64))
(declare-fun temp20_38 () (_ BitVec 64))
(declare-fun temp20_39 () (_ BitVec 64))
(declare-fun temp20_40 () (_ BitVec 64))
(declare-fun temp20_41 () (_ BitVec 64))
(declare-fun temp20_42 () (_ BitVec 64))
(declare-fun temp20_43 () (_ BitVec 64))
(declare-fun temp20_44 () (_ BitVec 64))
(declare-fun temp20_45 () (_ BitVec 64))
(declare-fun temp20_46 () (_ BitVec 64))
(declare-fun temp20_47 () (_ BitVec 64))
(declare-fun temp20_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp20_49 () (_ BitVec 64))
(declare-fun temp20_50 () (_ BitVec 64))
(declare-fun temp20_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp20_52 () (_ BitVec 64))
(declare-fun temp20_53 () (_ BitVec 64))
(declare-fun temp20_54 () (_ BitVec 64))
(declare-fun temp20_55 () (_ BitVec 64))
(declare-fun temp20_56 () (_ BitVec 64))
(declare-fun temp20_57 () (_ BitVec 64))
(declare-fun temp20_58 () (_ BitVec 64))
(declare-fun temp20_59 () (_ BitVec 64))
(declare-fun temp20_60 () (_ BitVec 64))
(declare-fun temp20_61 () (_ BitVec 64))
(declare-fun temp20_62 () (_ BitVec 64))
(declare-fun temp20_63 () (_ BitVec 64))
(declare-fun temp20_64 () (_ BitVec 64))
(declare-fun temp20_65 () (_ BitVec 64))
(declare-fun temp20_66 () (_ BitVec 64))
(declare-fun temp20_67 () (_ BitVec 64))
(declare-fun temp20_68 () (_ BitVec 64))
(declare-fun temp20_69 () (_ BitVec 64))
(declare-fun temp20_70 () (_ BitVec 64))
(declare-fun temp20_71 () (_ BitVec 64))
(declare-fun temp20_72 () (_ BitVec 64))
(declare-fun temp20_73 () (_ BitVec 64))
(declare-fun temp20_74 () (_ BitVec 64))
(declare-fun temp20_75 () (_ BitVec 64))
(declare-fun temp20_76 () (_ BitVec 64))
(declare-fun temp20_77 () (_ BitVec 64))
(declare-fun temp20_78 () (_ BitVec 64))
(declare-fun temp20_79 () (_ BitVec 64))
(declare-fun temp20_80 () (_ BitVec 64))
(declare-fun temp20_81 () (_ BitVec 64))
(declare-fun temp20_82 () (_ BitVec 64))
(declare-fun temp20_83 () (_ BitVec 64))
(declare-fun temp20_84 () (_ BitVec 64))
(declare-fun temp20_85 () (_ BitVec 64))
(declare-fun temp20_86 () (_ BitVec 64))
(declare-fun temp20_87 () (_ BitVec 64))
(declare-fun temp20_88 () (_ BitVec 64))
(declare-fun temp20_89 () (_ BitVec 64))
(declare-fun temp20_90 () (_ BitVec 64))
(declare-fun temp20_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp20_92 () (_ BitVec 64))
(declare-fun temp20_93 () (_ BitVec 64))
(declare-fun temp20_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp20_95 () (_ BitVec 64))
(declare-fun temp20_96 () (_ BitVec 64))
(declare-fun temp20_97 () (_ BitVec 64))
(declare-fun temp20_98 () (_ BitVec 64))
(declare-fun temp20_99 () (_ BitVec 64))
(declare-fun temp20_100 () (_ BitVec 64))
(declare-fun temp20_101 () (_ BitVec 64))
(declare-fun temp20_102 () (_ BitVec 64))
(declare-fun temp20_103 () (_ BitVec 64))
(declare-fun temp20_104 () (_ BitVec 64))
(declare-fun temp20_105 () (_ BitVec 64))
(declare-fun temp20_106 () (_ BitVec 64))
(declare-fun temp20_107 () (_ BitVec 64))
(declare-fun temp20_108 () (_ BitVec 64))
(declare-fun temp20_109 () (_ BitVec 64))
(declare-fun temp20_110 () (_ BitVec 64))
(declare-fun temp20_111 () (_ BitVec 64))
(declare-fun temp20_112 () (_ BitVec 64))
(declare-fun temp20_113 () (_ BitVec 64))
(declare-fun temp20_114 () (_ BitVec 64))
(declare-fun temp20_115 () (_ BitVec 64))
(declare-fun temp20_116 () (_ BitVec 64))
(declare-fun temp20_117 () (_ BitVec 64))
(declare-fun temp20_118 () (_ BitVec 64))
(declare-fun temp20_119 () (_ BitVec 64))
(declare-fun temp20_120 () (_ BitVec 64))
(declare-fun temp20_121 () (_ BitVec 64))
(declare-fun temp20_122 () (_ BitVec 64))
(declare-fun temp20_123 () (_ BitVec 64))
(declare-fun temp20_124 () (_ BitVec 64))
(declare-fun temp20_125 () (_ BitVec 64))
(declare-fun temp20_126 () (_ BitVec 64))
(declare-fun temp20_127 () (_ BitVec 64))
(declare-fun temp20_128 () (_ BitVec 64))
(declare-fun temp20_129 () (_ BitVec 64))
(declare-fun temp20_130 () (_ BitVec 64))
(declare-fun temp20_131 () (_ BitVec 64))
(declare-fun temp20_132 () (_ BitVec 64))
(declare-fun temp20_133 () (_ BitVec 64))
(declare-fun temp20_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp20_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp20_136 () (_ BitVec 64))
(declare-fun temp20_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp20_138 () (_ BitVec 64))
(declare-fun temp20_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp20_140 () (_ BitVec 64))
(declare-fun temp20_141 () (_ BitVec 64))
(declare-fun temp20_142 () (_ BitVec 64))
(declare-fun temp20_143 () (_ BitVec 64))
(declare-fun temp20_144 () (_ BitVec 64))
(declare-fun temp20_145 () (_ BitVec 64))
(declare-fun temp20_146 () (_ BitVec 64))
(declare-fun temp20_147 () (_ BitVec 64))
(declare-fun temp20_148 () (_ BitVec 64))
(declare-fun temp20_149 () (_ BitVec 64))
(declare-fun temp20_150 () (_ BitVec 64))
(declare-fun temp20_151 () (_ BitVec 64))
(declare-fun temp20_152 () (_ BitVec 64))
(declare-fun temp20_153 () (_ BitVec 64))
(declare-fun temp20_154 () (_ BitVec 64))
(declare-fun temp20_155 () (_ BitVec 64))
(declare-fun temp20_157 () (_ BitVec 64))
(declare-fun temp20_158 () (_ BitVec 64))
(declare-fun temp20_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp20_159 () (_ BitVec 64))
(declare-fun temp20_160 () (_ BitVec 64))
(declare-fun temp20_162 () (_ BitVec 64))
(declare-fun temp20_163 () (_ BitVec 64))
(declare-fun temp20_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp20_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp20_165 () (_ BitVec 64))
(declare-fun temp20_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp20_167 () (_ BitVec 64))
(declare-fun temp20_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp20_169 () (_ BitVec 64))
(declare-fun temp20_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp20_171 () (_ BitVec 64))
(declare-fun temp20_172 () (_ BitVec 64))
(declare-fun temp20_173 () (_ BitVec 64))
(declare-fun temp20_174 () (_ BitVec 64))
(declare-fun temp20_175 () (_ BitVec 64))
(declare-fun temp20_176 () (_ BitVec 64))
(declare-fun temp20_177 () (_ BitVec 64))
(declare-fun temp20_178 () (_ BitVec 64))
(declare-fun temp20_179 () (_ BitVec 64))
(declare-fun temp20_180 () (_ BitVec 64))
(declare-fun temp20_181 () (_ BitVec 64))
(declare-fun temp20_182 () (_ BitVec 64))
(declare-fun temp20_183 () (_ BitVec 64))
(declare-fun temp20_184 () (_ BitVec 64))
(declare-fun temp20_185 () (_ BitVec 64))
(declare-fun temp20_186 () (_ BitVec 64))
(declare-fun temp20_187 () (_ BitVec 64))
(declare-fun temp20_188 () (_ BitVec 64))
(declare-fun temp20_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp20_190 () (_ BitVec 64))
(declare-fun temp20_192 () (_ BitVec 64))
(declare-fun temp20_193 () (_ BitVec 64))
(declare-fun temp20_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp20_194 () (_ BitVec 64))
(declare-fun temp20_195 () (_ BitVec 64))
(declare-fun temp20_197 () (_ BitVec 64))
(declare-fun temp20_198 () (_ BitVec 64))
(declare-fun temp20_196 () (_ BitVec 64))
(declare-fun temp20_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp20_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp20_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp20_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp20_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp20_204 () (_ BitVec 64))
(declare-fun temp20_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp20_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp20_207 () (_ BitVec 64))
(declare-fun temp20_208 () (_ BitVec 64))
(declare-fun temp20_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp20_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp20_211 () (_ BitVec 64))
(declare-fun temp20_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp20_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp20_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp20_215 () (_ BitVec 64))
(declare-fun var4469136 () (_ BitVec 64))
(declare-fun temp20_216 () (_ BitVec 64))
(declare-fun temp20_217 () (_ BitVec 64))
(declare-fun var5845780 () (_ BitVec 64))
(declare-fun var5845747 () (_ BitVec 64))
(declare-fun var5714311 () (_ BitVec 64))
(declare-fun var5714307 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp20_218 () (_ BitVec 64))
(assert (= temp20_1 #x0000000000000001))
(assert (= var77203 temp20_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp20_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp20_2)))
(assert (= temp20_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp20_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp20_4 #x0000000000000000))
(assert (= var210941 temp20_4))
(assert (= temp20_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp20_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp20_6 #x0000000000000000))
(assert (= var210986 temp20_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp20_7 #x0000000000000000))
(assert (= temp20_8 temp20_7))
(assert (= temp20_9 (select ARGNAME_padding_NAMEEND_VAL temp20_8)))
(assert (= temp20_10 #x0000000000000001))
(assert (= temp20_11 temp20_10))
(assert (= temp20_12 (select ARGNAME_padding_NAMEEND_VAL temp20_11)))
(assert (= temp20_13 #x0000000000000002))
(assert (= temp20_14 temp20_13))
(assert (= temp20_15 (select ARGNAME_padding_NAMEEND_VAL temp20_14)))
(assert (= temp20_16 #x0000000000000003))
(assert (= temp20_17 temp20_16))
(assert (= temp20_18 (select ARGNAME_padding_NAMEEND_VAL temp20_17)))
(assert (= temp20_19 #x0000000000000004))
(assert (= temp20_20 temp20_19))
(assert (= temp20_21 (select ARGNAME_padding_NAMEEND_VAL temp20_20)))
(assert (= temp20_22 #x0000000000000005))
(assert (= temp20_23 temp20_22))
(assert (= temp20_24 (select ARGNAME_padding_NAMEEND_VAL temp20_23)))
(assert (= temp20_25 #x0000000000000000))
(assert (= temp20_26 #x0000000000000000))
(assert (= temp20_27 temp20_26))
(assert (= temp20_28 (select ARGNAME_padding_NAMEEND_VAL temp20_27)))
(assert (= temp20_29 #x0000000000000000))
(assert (= temp20_30 #x0000000000000001))
(assert (= temp20_31 temp20_30))
(assert (= temp20_32 (select ARGNAME_padding_NAMEEND_VAL temp20_31)))
(assert (= temp20_33 #x0000000000000000))
(assert (= temp20_34 #x0000000000000002))
(assert (= temp20_35 temp20_34))
(assert (= temp20_36 (select ARGNAME_padding_NAMEEND_VAL temp20_35)))
(assert (= temp20_37 #x0000000000000000))
(assert (= temp20_38 #x0000000000000003))
(assert (= temp20_39 temp20_38))
(assert (= temp20_40 (select ARGNAME_padding_NAMEEND_VAL temp20_39)))
(assert (= temp20_41 #x0000000000000000))
(assert (= temp20_42 #x0000000000000004))
(assert (= temp20_43 temp20_42))
(assert (= temp20_44 (select ARGNAME_padding_NAMEEND_VAL temp20_43)))
(assert (= temp20_45 #x0000000000000000))
(assert (= temp20_46 #x0000000000000005))
(assert (= temp20_47 temp20_46))
(assert (= temp20_48 (select ARGNAME_padding_NAMEEND_VAL temp20_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp20_28 temp20_25)
             (bvslt temp20_32 temp20_29)
             (bvslt temp20_36 temp20_33)
             (bvslt temp20_40 temp20_37)
             (bvslt temp20_44 temp20_41)
             (bvslt temp20_48 temp20_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp20_49 #x0000000000000000))
(assert (= var1191714 temp20_49))
(assert (= temp20_50 #x0000000000000000))
(assert (= temp20_51 temp20_50))
(assert (= temp20_52 (select ARGNAME_output_padding_NAMEEND_VAL temp20_51)))
(assert (= temp20_53 #x0000000000000001))
(assert (= temp20_54 temp20_53))
(assert (= temp20_55 (select ARGNAME_output_padding_NAMEEND_VAL temp20_54)))
(assert (= temp20_56 #x0000000000000002))
(assert (= temp20_57 temp20_56))
(assert (= temp20_58 (select ARGNAME_output_padding_NAMEEND_VAL temp20_57)))
(assert (= temp20_59 #x0000000000000003))
(assert (= temp20_60 temp20_59))
(assert (= temp20_61 (select ARGNAME_output_padding_NAMEEND_VAL temp20_60)))
(assert (= temp20_62 #x0000000000000004))
(assert (= temp20_63 temp20_62))
(assert (= temp20_64 (select ARGNAME_output_padding_NAMEEND_VAL temp20_63)))
(assert (= temp20_65 #x0000000000000005))
(assert (= temp20_66 temp20_65))
(assert (= temp20_67 (select ARGNAME_output_padding_NAMEEND_VAL temp20_66)))
(assert (= temp20_68 #x0000000000000000))
(assert (= temp20_69 #x0000000000000000))
(assert (= temp20_70 temp20_69))
(assert (= temp20_71 (select ARGNAME_output_padding_NAMEEND_VAL temp20_70)))
(assert (= temp20_72 #x0000000000000000))
(assert (= temp20_73 #x0000000000000001))
(assert (= temp20_74 temp20_73))
(assert (= temp20_75 (select ARGNAME_output_padding_NAMEEND_VAL temp20_74)))
(assert (= temp20_76 #x0000000000000000))
(assert (= temp20_77 #x0000000000000002))
(assert (= temp20_78 temp20_77))
(assert (= temp20_79 (select ARGNAME_output_padding_NAMEEND_VAL temp20_78)))
(assert (= temp20_80 #x0000000000000000))
(assert (= temp20_81 #x0000000000000003))
(assert (= temp20_82 temp20_81))
(assert (= temp20_83 (select ARGNAME_output_padding_NAMEEND_VAL temp20_82)))
(assert (= temp20_84 #x0000000000000000))
(assert (= temp20_85 #x0000000000000004))
(assert (= temp20_86 temp20_85))
(assert (= temp20_87 (select ARGNAME_output_padding_NAMEEND_VAL temp20_86)))
(assert (= temp20_88 #x0000000000000000))
(assert (= temp20_89 #x0000000000000005))
(assert (= temp20_90 temp20_89))
(assert (= temp20_91 (select ARGNAME_output_padding_NAMEEND_VAL temp20_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp20_71 temp20_68)
             (bvslt temp20_75 temp20_72)
             (bvslt temp20_79 temp20_76)
             (bvslt temp20_83 temp20_80)
             (bvslt temp20_87 temp20_84)
             (bvslt temp20_91 temp20_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp20_92 #x0000000000000000))
(assert (= var1191725 temp20_92))
(assert (= temp20_93 #x0000000000000000))
(assert (= temp20_94 temp20_93))
(assert (= temp20_95 (select ARGNAME_stride_NAMEEND_VAL temp20_94)))
(assert (= temp20_96 #x0000000000000001))
(assert (= temp20_97 temp20_96))
(assert (= temp20_98 (select ARGNAME_stride_NAMEEND_VAL temp20_97)))
(assert (= temp20_99 #x0000000000000002))
(assert (= temp20_100 temp20_99))
(assert (= temp20_101 (select ARGNAME_stride_NAMEEND_VAL temp20_100)))
(assert (= temp20_102 #x0000000000000003))
(assert (= temp20_103 temp20_102))
(assert (= temp20_104 (select ARGNAME_stride_NAMEEND_VAL temp20_103)))
(assert (= temp20_105 #x0000000000000004))
(assert (= temp20_106 temp20_105))
(assert (= temp20_107 (select ARGNAME_stride_NAMEEND_VAL temp20_106)))
(assert (= temp20_108 #x0000000000000005))
(assert (= temp20_109 temp20_108))
(assert (= temp20_110 (select ARGNAME_stride_NAMEEND_VAL temp20_109)))
(assert (= temp20_111 #x0000000000000000))
(assert (= temp20_112 #x0000000000000000))
(assert (= temp20_113 temp20_112))
(assert (= temp20_114 (select ARGNAME_stride_NAMEEND_VAL temp20_113)))
(assert (= temp20_115 #x0000000000000000))
(assert (= temp20_116 #x0000000000000001))
(assert (= temp20_117 temp20_116))
(assert (= temp20_118 (select ARGNAME_stride_NAMEEND_VAL temp20_117)))
(assert (= temp20_119 #x0000000000000000))
(assert (= temp20_120 #x0000000000000002))
(assert (= temp20_121 temp20_120))
(assert (= temp20_122 (select ARGNAME_stride_NAMEEND_VAL temp20_121)))
(assert (= temp20_123 #x0000000000000000))
(assert (= temp20_124 #x0000000000000003))
(assert (= temp20_125 temp20_124))
(assert (= temp20_126 (select ARGNAME_stride_NAMEEND_VAL temp20_125)))
(assert (= temp20_127 #x0000000000000000))
(assert (= temp20_128 #x0000000000000004))
(assert (= temp20_129 temp20_128))
(assert (= temp20_130 (select ARGNAME_stride_NAMEEND_VAL temp20_129)))
(assert (= temp20_131 #x0000000000000000))
(assert (= temp20_132 #x0000000000000005))
(assert (= temp20_133 temp20_132))
(assert (= temp20_134 (select ARGNAME_stride_NAMEEND_VAL temp20_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp20_114 temp20_111)
             (bvsle temp20_118 temp20_115)
             (bvsle temp20_122 temp20_119)
             (bvsle temp20_126 temp20_123)
             (bvsle temp20_130 temp20_127)
             (bvsle temp20_134 temp20_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp20_135 #x0000000000000000))
(assert (= var1191735 temp20_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp20_136 #x0000000000000001))
(assert (= var1191747 temp20_136))
(assert (= temp20_137 #x0000000000000000))
(assert (= var1179826 temp20_137))
(assert (= temp20_138 #x0000000000000000))
(assert (= temp20_139 temp20_138))
(assert (= temp20_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp20_139)))
(assert (= temp20_141 #x0000000000000001))
(assert (= temp20_142 temp20_141))
(assert (= temp20_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp20_142)))
(assert (= temp20_144 #x0000000000000002))
(assert (= temp20_145 temp20_144))
(assert (= temp20_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp20_145)))
(assert (= temp20_147 #x0000000000000003))
(assert (= temp20_148 temp20_147))
(assert (= temp20_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp20_148)))
(assert (= temp20_150 #x0000000000000004))
(assert (= temp20_151 temp20_150))
(assert (= temp20_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp20_151)))
(assert (= temp20_153 #x0000000000000005))
(assert (= temp20_154 temp20_153))
(assert (= temp20_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp20_154)))
(assert (= temp20_157 var1179826))
(assert (= temp20_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp20_157)))
(assert (= temp20_156 temp20_158))
(assert (= var1191780
   (ite (bvslt temp20_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp20_159 #x0000000000000000))
(assert (= var1191780 temp20_159))
(assert (= temp20_160 #x0000000000000000))
(assert (= var1179826 temp20_160))
(assert (= temp20_162 var1179826))
(assert (= temp20_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp20_162)))
(assert (= temp20_161 temp20_163))
(assert (= var1191802 (bvsmod temp20_161 ARGNAME_groups_NAMEEND)))
(assert (= temp20_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp20_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp20_165 #x0000000000000001))
(assert (= var1191803 temp20_165))
(assert (= temp20_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp20_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp20_167 #x0000000000000001))
(assert (= var1191823 temp20_167))
(assert (= temp20_168 #x0000000000000001))
(assert (= var1180714 temp20_168))
(assert (= temp20_169 #x0000000000000000))
(assert (= temp20_170 temp20_169))
(assert (= temp20_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp20_170)))
(assert (= temp20_172 #x0000000000000001))
(assert (= temp20_173 temp20_172))
(assert (= temp20_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp20_173)))
(assert (= temp20_175 #x0000000000000002))
(assert (= temp20_176 temp20_175))
(assert (= temp20_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp20_176)))
(assert (= temp20_178 #x0000000000000003))
(assert (= temp20_179 temp20_178))
(assert (= temp20_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp20_179)))
(assert (= temp20_181 #x0000000000000004))
(assert (= temp20_182 temp20_181))
(assert (= temp20_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp20_182)))
(assert (= temp20_184 #x0000000000000005))
(assert (= temp20_185 temp20_184))
(assert (= temp20_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp20_185)))
(assert (= temp20_187 #x0000000000000000))
(assert (= temp20_188
   (ite (bvslt var1180714 temp20_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp20_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp20_188)))
(assert (= var1191831 temp20_189))
(assert (bvslt (ite (bvslt var1180714 temp20_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp20_190 #x0000000000000001))
(assert (= var1180714 temp20_190))
(assert (= temp20_192 var1180714))
(assert (= temp20_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp20_192)))
(assert (= temp20_191 temp20_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp20_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp20_194 #x0000000000000001))
(assert (= var1191836 temp20_194))
(assert (= temp20_195 #x0000000000000000))
(assert (= var1179826 temp20_195))
(assert (= temp20_197 var1179826))
(assert (= temp20_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp20_197)))
(assert (= temp20_196 temp20_198))
(assert (= temp20_199 #x0000000000000002))
(assert (= var1586025 temp20_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp20_200 #x0000000000000001))
(assert (= var1191993 temp20_200))
(assert (= temp20_201 #x0000000000000001))
(assert (= var2700303 temp20_201))
(assert (= temp20_202 #x0000000000000001))
(assert (= var2962447 temp20_202))
(assert (= temp20_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp20_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp20_204 #x0000000000000001))
(assert (= var211058 temp20_204))
(assert (= temp20_205 #x0000000000000001))
(assert (= var211188 temp20_205))
(assert (= var3879401 var211188))
(assert (= temp20_206 #x0000000000000000))
(assert (= var3866802 temp20_206))
(assert (= temp20_207 #x0000000000000000))
(assert (= temp20_208
   (ite (bvslt var3866802 temp20_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp20_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp20_208)))
(assert (= var3879420 temp20_209))
(assert (bvslt (ite (bvslt var3866802 temp20_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp20_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp20_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp20_211 #x0000000000000001))
(assert (= var3879421 temp20_211))
(assert (= temp20_212 #x0000000000000000))
(assert (= var4079423 temp20_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp20_213 #x0000000000000002))
(assert (= var4208259 temp20_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp20_214 #x0000000000000000))
(assert (= var4273820 temp20_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp20_215 #x0000000000000000))
(assert (= var4469136 temp20_215))
(assert (= temp20_216 #x0000000000000001))
(assert (= var211058 temp20_216))
(assert (= temp20_217 #x0000000000000000))
(assert (= var5845780 temp20_217))
(assert (= var5845747 var5845780))
(assert (= var5714311 var5845747))
(assert (= var5714307 var5714311))
(assert (= var212669 var5714307))
(assert (= temp20_218 #x0000000000000000))
(assert (= var212669 temp20_218))
(model-add temp20_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp20_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp20_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp20_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





