(declare-fun temp981_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp981_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp981_3 () (_ BitVec 64))
(declare-fun temp981_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp981_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp981_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp981_7 () (_ BitVec 64))
(declare-fun temp981_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp981_9 () (_ BitVec 64))
(declare-fun temp981_10 () (_ BitVec 64))
(declare-fun temp981_11 () (_ BitVec 64))
(declare-fun temp981_12 () (_ BitVec 64))
(declare-fun temp981_13 () (_ BitVec 64))
(declare-fun temp981_14 () (_ BitVec 64))
(declare-fun temp981_15 () (_ BitVec 64))
(declare-fun temp981_16 () (_ BitVec 64))
(declare-fun temp981_17 () (_ BitVec 64))
(declare-fun temp981_18 () (_ BitVec 64))
(declare-fun temp981_19 () (_ BitVec 64))
(declare-fun temp981_20 () (_ BitVec 64))
(declare-fun temp981_21 () (_ BitVec 64))
(declare-fun temp981_22 () (_ BitVec 64))
(declare-fun temp981_23 () (_ BitVec 64))
(declare-fun temp981_24 () (_ BitVec 64))
(declare-fun temp981_25 () (_ BitVec 64))
(declare-fun temp981_26 () (_ BitVec 64))
(declare-fun temp981_27 () (_ BitVec 64))
(declare-fun temp981_28 () (_ BitVec 64))
(declare-fun temp981_29 () (_ BitVec 64))
(declare-fun temp981_30 () (_ BitVec 64))
(declare-fun temp981_31 () (_ BitVec 64))
(declare-fun temp981_32 () (_ BitVec 64))
(declare-fun temp981_33 () (_ BitVec 64))
(declare-fun temp981_34 () (_ BitVec 64))
(declare-fun temp981_35 () (_ BitVec 64))
(declare-fun temp981_36 () (_ BitVec 64))
(declare-fun temp981_37 () (_ BitVec 64))
(declare-fun temp981_38 () (_ BitVec 64))
(declare-fun temp981_39 () (_ BitVec 64))
(declare-fun temp981_40 () (_ BitVec 64))
(declare-fun temp981_41 () (_ BitVec 64))
(declare-fun temp981_42 () (_ BitVec 64))
(declare-fun temp981_43 () (_ BitVec 64))
(declare-fun temp981_44 () (_ BitVec 64))
(declare-fun temp981_45 () (_ BitVec 64))
(declare-fun temp981_46 () (_ BitVec 64))
(declare-fun temp981_47 () (_ BitVec 64))
(declare-fun temp981_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp981_49 () (_ BitVec 64))
(declare-fun temp981_50 () (_ BitVec 64))
(declare-fun temp981_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp981_52 () (_ BitVec 64))
(declare-fun temp981_53 () (_ BitVec 64))
(declare-fun temp981_54 () (_ BitVec 64))
(declare-fun temp981_55 () (_ BitVec 64))
(declare-fun temp981_56 () (_ BitVec 64))
(declare-fun temp981_57 () (_ BitVec 64))
(declare-fun temp981_58 () (_ BitVec 64))
(declare-fun temp981_59 () (_ BitVec 64))
(declare-fun temp981_60 () (_ BitVec 64))
(declare-fun temp981_61 () (_ BitVec 64))
(declare-fun temp981_62 () (_ BitVec 64))
(declare-fun temp981_63 () (_ BitVec 64))
(declare-fun temp981_64 () (_ BitVec 64))
(declare-fun temp981_65 () (_ BitVec 64))
(declare-fun temp981_66 () (_ BitVec 64))
(declare-fun temp981_67 () (_ BitVec 64))
(declare-fun temp981_68 () (_ BitVec 64))
(declare-fun temp981_69 () (_ BitVec 64))
(declare-fun temp981_70 () (_ BitVec 64))
(declare-fun temp981_71 () (_ BitVec 64))
(declare-fun temp981_72 () (_ BitVec 64))
(declare-fun temp981_73 () (_ BitVec 64))
(declare-fun temp981_74 () (_ BitVec 64))
(declare-fun temp981_75 () (_ BitVec 64))
(declare-fun temp981_76 () (_ BitVec 64))
(declare-fun temp981_77 () (_ BitVec 64))
(declare-fun temp981_78 () (_ BitVec 64))
(declare-fun temp981_79 () (_ BitVec 64))
(declare-fun temp981_80 () (_ BitVec 64))
(declare-fun temp981_81 () (_ BitVec 64))
(declare-fun temp981_82 () (_ BitVec 64))
(declare-fun temp981_83 () (_ BitVec 64))
(declare-fun temp981_84 () (_ BitVec 64))
(declare-fun temp981_85 () (_ BitVec 64))
(declare-fun temp981_86 () (_ BitVec 64))
(declare-fun temp981_87 () (_ BitVec 64))
(declare-fun temp981_88 () (_ BitVec 64))
(declare-fun temp981_89 () (_ BitVec 64))
(declare-fun temp981_90 () (_ BitVec 64))
(declare-fun temp981_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp981_92 () (_ BitVec 64))
(declare-fun temp981_93 () (_ BitVec 64))
(declare-fun temp981_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp981_95 () (_ BitVec 64))
(declare-fun temp981_96 () (_ BitVec 64))
(declare-fun temp981_97 () (_ BitVec 64))
(declare-fun temp981_98 () (_ BitVec 64))
(declare-fun temp981_99 () (_ BitVec 64))
(declare-fun temp981_100 () (_ BitVec 64))
(declare-fun temp981_101 () (_ BitVec 64))
(declare-fun temp981_102 () (_ BitVec 64))
(declare-fun temp981_103 () (_ BitVec 64))
(declare-fun temp981_104 () (_ BitVec 64))
(declare-fun temp981_105 () (_ BitVec 64))
(declare-fun temp981_106 () (_ BitVec 64))
(declare-fun temp981_107 () (_ BitVec 64))
(declare-fun temp981_108 () (_ BitVec 64))
(declare-fun temp981_109 () (_ BitVec 64))
(declare-fun temp981_110 () (_ BitVec 64))
(declare-fun temp981_111 () (_ BitVec 64))
(declare-fun temp981_112 () (_ BitVec 64))
(declare-fun temp981_113 () (_ BitVec 64))
(declare-fun temp981_114 () (_ BitVec 64))
(declare-fun temp981_115 () (_ BitVec 64))
(declare-fun temp981_116 () (_ BitVec 64))
(declare-fun temp981_117 () (_ BitVec 64))
(declare-fun temp981_118 () (_ BitVec 64))
(declare-fun temp981_119 () (_ BitVec 64))
(declare-fun temp981_120 () (_ BitVec 64))
(declare-fun temp981_121 () (_ BitVec 64))
(declare-fun temp981_122 () (_ BitVec 64))
(declare-fun temp981_123 () (_ BitVec 64))
(declare-fun temp981_124 () (_ BitVec 64))
(declare-fun temp981_125 () (_ BitVec 64))
(declare-fun temp981_126 () (_ BitVec 64))
(declare-fun temp981_127 () (_ BitVec 64))
(declare-fun temp981_128 () (_ BitVec 64))
(declare-fun temp981_129 () (_ BitVec 64))
(declare-fun temp981_130 () (_ BitVec 64))
(declare-fun temp981_131 () (_ BitVec 64))
(declare-fun temp981_132 () (_ BitVec 64))
(declare-fun temp981_133 () (_ BitVec 64))
(declare-fun temp981_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp981_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp981_136 () (_ BitVec 64))
(declare-fun temp981_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp981_138 () (_ BitVec 64))
(declare-fun temp981_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp981_140 () (_ BitVec 64))
(declare-fun temp981_141 () (_ BitVec 64))
(declare-fun temp981_142 () (_ BitVec 64))
(declare-fun temp981_143 () (_ BitVec 64))
(declare-fun temp981_144 () (_ BitVec 64))
(declare-fun temp981_145 () (_ BitVec 64))
(declare-fun temp981_146 () (_ BitVec 64))
(declare-fun temp981_147 () (_ BitVec 64))
(declare-fun temp981_148 () (_ BitVec 64))
(declare-fun temp981_149 () (_ BitVec 64))
(declare-fun temp981_150 () (_ BitVec 64))
(declare-fun temp981_151 () (_ BitVec 64))
(declare-fun temp981_152 () (_ BitVec 64))
(declare-fun temp981_153 () (_ BitVec 64))
(declare-fun temp981_154 () (_ BitVec 64))
(declare-fun temp981_155 () (_ BitVec 64))
(declare-fun temp981_157 () (_ BitVec 64))
(declare-fun temp981_158 () (_ BitVec 64))
(declare-fun temp981_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp981_159 () (_ BitVec 64))
(declare-fun temp981_160 () (_ BitVec 64))
(declare-fun temp981_162 () (_ BitVec 64))
(declare-fun temp981_163 () (_ BitVec 64))
(declare-fun temp981_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp981_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp981_165 () (_ BitVec 64))
(declare-fun temp981_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp981_167 () (_ BitVec 64))
(declare-fun temp981_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp981_169 () (_ BitVec 64))
(declare-fun temp981_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp981_171 () (_ BitVec 64))
(declare-fun temp981_172 () (_ BitVec 64))
(declare-fun temp981_173 () (_ BitVec 64))
(declare-fun temp981_174 () (_ BitVec 64))
(declare-fun temp981_175 () (_ BitVec 64))
(declare-fun temp981_176 () (_ BitVec 64))
(declare-fun temp981_177 () (_ BitVec 64))
(declare-fun temp981_178 () (_ BitVec 64))
(declare-fun temp981_179 () (_ BitVec 64))
(declare-fun temp981_180 () (_ BitVec 64))
(declare-fun temp981_181 () (_ BitVec 64))
(declare-fun temp981_182 () (_ BitVec 64))
(declare-fun temp981_183 () (_ BitVec 64))
(declare-fun temp981_184 () (_ BitVec 64))
(declare-fun temp981_185 () (_ BitVec 64))
(declare-fun temp981_186 () (_ BitVec 64))
(declare-fun temp981_187 () (_ BitVec 64))
(declare-fun temp981_188 () (_ BitVec 64))
(declare-fun temp981_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp981_190 () (_ BitVec 64))
(declare-fun temp981_192 () (_ BitVec 64))
(declare-fun temp981_193 () (_ BitVec 64))
(declare-fun temp981_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp981_194 () (_ BitVec 64))
(declare-fun temp981_195 () (_ BitVec 64))
(declare-fun temp981_197 () (_ BitVec 64))
(declare-fun temp981_198 () (_ BitVec 64))
(declare-fun temp981_196 () (_ BitVec 64))
(declare-fun temp981_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp981_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp981_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp981_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp981_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp981_204 () (_ BitVec 64))
(declare-fun temp981_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp981_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp981_207 () (_ BitVec 64))
(declare-fun temp981_208 () (_ BitVec 64))
(declare-fun temp981_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp981_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp981_211 () (_ BitVec 64))
(declare-fun temp981_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp981_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp981_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var5124496 () (_ BitVec 64))
(declare-fun var5386640 () (_ BitVec 64))
(declare-fun temp981_215 () (_ BitVec 64))
(assert (= temp981_1 #x0000000000000001))
(assert (= var77203 temp981_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp981_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp981_2)))
(assert (= temp981_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp981_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp981_4 #x0000000000000000))
(assert (= var210941 temp981_4))
(assert (= temp981_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp981_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp981_6 #x0000000000000000))
(assert (= var210986 temp981_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp981_7 #x0000000000000000))
(assert (= temp981_8 temp981_7))
(assert (= temp981_9 (select ARGNAME_padding_NAMEEND_VAL temp981_8)))
(assert (= temp981_10 #x0000000000000001))
(assert (= temp981_11 temp981_10))
(assert (= temp981_12 (select ARGNAME_padding_NAMEEND_VAL temp981_11)))
(assert (= temp981_13 #x0000000000000002))
(assert (= temp981_14 temp981_13))
(assert (= temp981_15 (select ARGNAME_padding_NAMEEND_VAL temp981_14)))
(assert (= temp981_16 #x0000000000000003))
(assert (= temp981_17 temp981_16))
(assert (= temp981_18 (select ARGNAME_padding_NAMEEND_VAL temp981_17)))
(assert (= temp981_19 #x0000000000000004))
(assert (= temp981_20 temp981_19))
(assert (= temp981_21 (select ARGNAME_padding_NAMEEND_VAL temp981_20)))
(assert (= temp981_22 #x0000000000000005))
(assert (= temp981_23 temp981_22))
(assert (= temp981_24 (select ARGNAME_padding_NAMEEND_VAL temp981_23)))
(assert (= temp981_25 #x0000000000000000))
(assert (= temp981_26 #x0000000000000000))
(assert (= temp981_27 temp981_26))
(assert (= temp981_28 (select ARGNAME_padding_NAMEEND_VAL temp981_27)))
(assert (= temp981_29 #x0000000000000000))
(assert (= temp981_30 #x0000000000000001))
(assert (= temp981_31 temp981_30))
(assert (= temp981_32 (select ARGNAME_padding_NAMEEND_VAL temp981_31)))
(assert (= temp981_33 #x0000000000000000))
(assert (= temp981_34 #x0000000000000002))
(assert (= temp981_35 temp981_34))
(assert (= temp981_36 (select ARGNAME_padding_NAMEEND_VAL temp981_35)))
(assert (= temp981_37 #x0000000000000000))
(assert (= temp981_38 #x0000000000000003))
(assert (= temp981_39 temp981_38))
(assert (= temp981_40 (select ARGNAME_padding_NAMEEND_VAL temp981_39)))
(assert (= temp981_41 #x0000000000000000))
(assert (= temp981_42 #x0000000000000004))
(assert (= temp981_43 temp981_42))
(assert (= temp981_44 (select ARGNAME_padding_NAMEEND_VAL temp981_43)))
(assert (= temp981_45 #x0000000000000000))
(assert (= temp981_46 #x0000000000000005))
(assert (= temp981_47 temp981_46))
(assert (= temp981_48 (select ARGNAME_padding_NAMEEND_VAL temp981_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp981_28 temp981_25)
             (bvslt temp981_32 temp981_29)
             (bvslt temp981_36 temp981_33)
             (bvslt temp981_40 temp981_37)
             (bvslt temp981_44 temp981_41)
             (bvslt temp981_48 temp981_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp981_49 #x0000000000000000))
(assert (= var1191714 temp981_49))
(assert (= temp981_50 #x0000000000000000))
(assert (= temp981_51 temp981_50))
(assert (= temp981_52 (select ARGNAME_output_padding_NAMEEND_VAL temp981_51)))
(assert (= temp981_53 #x0000000000000001))
(assert (= temp981_54 temp981_53))
(assert (= temp981_55 (select ARGNAME_output_padding_NAMEEND_VAL temp981_54)))
(assert (= temp981_56 #x0000000000000002))
(assert (= temp981_57 temp981_56))
(assert (= temp981_58 (select ARGNAME_output_padding_NAMEEND_VAL temp981_57)))
(assert (= temp981_59 #x0000000000000003))
(assert (= temp981_60 temp981_59))
(assert (= temp981_61 (select ARGNAME_output_padding_NAMEEND_VAL temp981_60)))
(assert (= temp981_62 #x0000000000000004))
(assert (= temp981_63 temp981_62))
(assert (= temp981_64 (select ARGNAME_output_padding_NAMEEND_VAL temp981_63)))
(assert (= temp981_65 #x0000000000000005))
(assert (= temp981_66 temp981_65))
(assert (= temp981_67 (select ARGNAME_output_padding_NAMEEND_VAL temp981_66)))
(assert (= temp981_68 #x0000000000000000))
(assert (= temp981_69 #x0000000000000000))
(assert (= temp981_70 temp981_69))
(assert (= temp981_71 (select ARGNAME_output_padding_NAMEEND_VAL temp981_70)))
(assert (= temp981_72 #x0000000000000000))
(assert (= temp981_73 #x0000000000000001))
(assert (= temp981_74 temp981_73))
(assert (= temp981_75 (select ARGNAME_output_padding_NAMEEND_VAL temp981_74)))
(assert (= temp981_76 #x0000000000000000))
(assert (= temp981_77 #x0000000000000002))
(assert (= temp981_78 temp981_77))
(assert (= temp981_79 (select ARGNAME_output_padding_NAMEEND_VAL temp981_78)))
(assert (= temp981_80 #x0000000000000000))
(assert (= temp981_81 #x0000000000000003))
(assert (= temp981_82 temp981_81))
(assert (= temp981_83 (select ARGNAME_output_padding_NAMEEND_VAL temp981_82)))
(assert (= temp981_84 #x0000000000000000))
(assert (= temp981_85 #x0000000000000004))
(assert (= temp981_86 temp981_85))
(assert (= temp981_87 (select ARGNAME_output_padding_NAMEEND_VAL temp981_86)))
(assert (= temp981_88 #x0000000000000000))
(assert (= temp981_89 #x0000000000000005))
(assert (= temp981_90 temp981_89))
(assert (= temp981_91 (select ARGNAME_output_padding_NAMEEND_VAL temp981_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp981_71 temp981_68)
             (bvslt temp981_75 temp981_72)
             (bvslt temp981_79 temp981_76)
             (bvslt temp981_83 temp981_80)
             (bvslt temp981_87 temp981_84)
             (bvslt temp981_91 temp981_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp981_92 #x0000000000000000))
(assert (= var1191725 temp981_92))
(assert (= temp981_93 #x0000000000000000))
(assert (= temp981_94 temp981_93))
(assert (= temp981_95 (select ARGNAME_stride_NAMEEND_VAL temp981_94)))
(assert (= temp981_96 #x0000000000000001))
(assert (= temp981_97 temp981_96))
(assert (= temp981_98 (select ARGNAME_stride_NAMEEND_VAL temp981_97)))
(assert (= temp981_99 #x0000000000000002))
(assert (= temp981_100 temp981_99))
(assert (= temp981_101 (select ARGNAME_stride_NAMEEND_VAL temp981_100)))
(assert (= temp981_102 #x0000000000000003))
(assert (= temp981_103 temp981_102))
(assert (= temp981_104 (select ARGNAME_stride_NAMEEND_VAL temp981_103)))
(assert (= temp981_105 #x0000000000000004))
(assert (= temp981_106 temp981_105))
(assert (= temp981_107 (select ARGNAME_stride_NAMEEND_VAL temp981_106)))
(assert (= temp981_108 #x0000000000000005))
(assert (= temp981_109 temp981_108))
(assert (= temp981_110 (select ARGNAME_stride_NAMEEND_VAL temp981_109)))
(assert (= temp981_111 #x0000000000000000))
(assert (= temp981_112 #x0000000000000000))
(assert (= temp981_113 temp981_112))
(assert (= temp981_114 (select ARGNAME_stride_NAMEEND_VAL temp981_113)))
(assert (= temp981_115 #x0000000000000000))
(assert (= temp981_116 #x0000000000000001))
(assert (= temp981_117 temp981_116))
(assert (= temp981_118 (select ARGNAME_stride_NAMEEND_VAL temp981_117)))
(assert (= temp981_119 #x0000000000000000))
(assert (= temp981_120 #x0000000000000002))
(assert (= temp981_121 temp981_120))
(assert (= temp981_122 (select ARGNAME_stride_NAMEEND_VAL temp981_121)))
(assert (= temp981_123 #x0000000000000000))
(assert (= temp981_124 #x0000000000000003))
(assert (= temp981_125 temp981_124))
(assert (= temp981_126 (select ARGNAME_stride_NAMEEND_VAL temp981_125)))
(assert (= temp981_127 #x0000000000000000))
(assert (= temp981_128 #x0000000000000004))
(assert (= temp981_129 temp981_128))
(assert (= temp981_130 (select ARGNAME_stride_NAMEEND_VAL temp981_129)))
(assert (= temp981_131 #x0000000000000000))
(assert (= temp981_132 #x0000000000000005))
(assert (= temp981_133 temp981_132))
(assert (= temp981_134 (select ARGNAME_stride_NAMEEND_VAL temp981_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp981_114 temp981_111)
             (bvsle temp981_118 temp981_115)
             (bvsle temp981_122 temp981_119)
             (bvsle temp981_126 temp981_123)
             (bvsle temp981_130 temp981_127)
             (bvsle temp981_134 temp981_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp981_135 #x0000000000000000))
(assert (= var1191735 temp981_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp981_136 #x0000000000000001))
(assert (= var1191747 temp981_136))
(assert (= temp981_137 #x0000000000000000))
(assert (= var1179826 temp981_137))
(assert (= temp981_138 #x0000000000000000))
(assert (= temp981_139 temp981_138))
(assert (= temp981_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp981_139)))
(assert (= temp981_141 #x0000000000000001))
(assert (= temp981_142 temp981_141))
(assert (= temp981_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp981_142)))
(assert (= temp981_144 #x0000000000000002))
(assert (= temp981_145 temp981_144))
(assert (= temp981_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp981_145)))
(assert (= temp981_147 #x0000000000000003))
(assert (= temp981_148 temp981_147))
(assert (= temp981_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp981_148)))
(assert (= temp981_150 #x0000000000000004))
(assert (= temp981_151 temp981_150))
(assert (= temp981_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp981_151)))
(assert (= temp981_153 #x0000000000000005))
(assert (= temp981_154 temp981_153))
(assert (= temp981_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp981_154)))
(assert (= temp981_157 var1179826))
(assert (= temp981_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp981_157)))
(assert (= temp981_156 temp981_158))
(assert (= var1191780
   (ite (bvslt temp981_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp981_159 #x0000000000000000))
(assert (= var1191780 temp981_159))
(assert (= temp981_160 #x0000000000000000))
(assert (= var1179826 temp981_160))
(assert (= temp981_162 var1179826))
(assert (= temp981_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp981_162)))
(assert (= temp981_161 temp981_163))
(assert (= var1191802 (bvsmod temp981_161 ARGNAME_groups_NAMEEND)))
(assert (= temp981_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp981_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp981_165 #x0000000000000001))
(assert (= var1191803 temp981_165))
(assert (= temp981_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp981_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp981_167 #x0000000000000001))
(assert (= var1191823 temp981_167))
(assert (= temp981_168 #x0000000000000001))
(assert (= var1180714 temp981_168))
(assert (= temp981_169 #x0000000000000000))
(assert (= temp981_170 temp981_169))
(assert (= temp981_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp981_170)))
(assert (= temp981_172 #x0000000000000001))
(assert (= temp981_173 temp981_172))
(assert (= temp981_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp981_173)))
(assert (= temp981_175 #x0000000000000002))
(assert (= temp981_176 temp981_175))
(assert (= temp981_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp981_176)))
(assert (= temp981_178 #x0000000000000003))
(assert (= temp981_179 temp981_178))
(assert (= temp981_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp981_179)))
(assert (= temp981_181 #x0000000000000004))
(assert (= temp981_182 temp981_181))
(assert (= temp981_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp981_182)))
(assert (= temp981_184 #x0000000000000005))
(assert (= temp981_185 temp981_184))
(assert (= temp981_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp981_185)))
(assert (= temp981_187 #x0000000000000000))
(assert (= temp981_188
   (ite (bvslt var1180714 temp981_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp981_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp981_188)))
(assert (= var1191831 temp981_189))
(assert (bvslt (ite (bvslt var1180714 temp981_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp981_190 #x0000000000000001))
(assert (= var1180714 temp981_190))
(assert (= temp981_192 var1180714))
(assert (= temp981_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp981_192)))
(assert (= temp981_191 temp981_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp981_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp981_194 #x0000000000000001))
(assert (= var1191836 temp981_194))
(assert (= temp981_195 #x0000000000000000))
(assert (= var1179826 temp981_195))
(assert (= temp981_197 var1179826))
(assert (= temp981_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp981_197)))
(assert (= temp981_196 temp981_198))
(assert (= temp981_199 #x0000000000000002))
(assert (= var1586025 temp981_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp981_200 #x0000000000000001))
(assert (= var1191993 temp981_200))
(assert (= temp981_201 #x0000000000000001))
(assert (= var2700303 temp981_201))
(assert (= temp981_202 #x0000000000000001))
(assert (= var2962447 temp981_202))
(assert (= temp981_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp981_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp981_204 #x0000000000000001))
(assert (= var211058 temp981_204))
(assert (= temp981_205 #x0000000000000001))
(assert (= var211188 temp981_205))
(assert (= var3879401 var211188))
(assert (= temp981_206 #x0000000000000000))
(assert (= var3866802 temp981_206))
(assert (= temp981_207 #x0000000000000000))
(assert (= temp981_208
   (ite (bvslt var3866802 temp981_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp981_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp981_208)))
(assert (= var3879420 temp981_209))
(assert (bvslt (ite (bvslt var3866802 temp981_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp981_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp981_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp981_211 #x0000000000000001))
(assert (= var3879421 temp981_211))
(assert (= temp981_212 #x0000000000000000))
(assert (= var4079423 temp981_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp981_213 #x0000000000000002))
(assert (= var4208259 temp981_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp981_214 #x0000000000000000))
(assert (= var4273820 temp981_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var5124496 var211201))
(assert (= var5386640 var211201))
(assert (= temp981_215 #x0000000000000001))
(assert (= var211058 temp981_215))
(model-add temp981_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp981_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp981_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp981_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





