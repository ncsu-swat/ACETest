(declare-fun temp10826_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10826_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10826_3 () (_ BitVec 64))
(declare-fun temp10826_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10826_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10826_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10826_7 () (_ BitVec 64))
(declare-fun temp10826_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10826_9 () (_ BitVec 64))
(declare-fun temp10826_10 () (_ BitVec 64))
(declare-fun temp10826_11 () (_ BitVec 64))
(declare-fun temp10826_12 () (_ BitVec 64))
(declare-fun temp10826_13 () (_ BitVec 64))
(declare-fun temp10826_14 () (_ BitVec 64))
(declare-fun temp10826_15 () (_ BitVec 64))
(declare-fun temp10826_16 () (_ BitVec 64))
(declare-fun temp10826_17 () (_ BitVec 64))
(declare-fun temp10826_18 () (_ BitVec 64))
(declare-fun temp10826_19 () (_ BitVec 64))
(declare-fun temp10826_20 () (_ BitVec 64))
(declare-fun temp10826_21 () (_ BitVec 64))
(declare-fun temp10826_22 () (_ BitVec 64))
(declare-fun temp10826_23 () (_ BitVec 64))
(declare-fun temp10826_24 () (_ BitVec 64))
(declare-fun temp10826_25 () (_ BitVec 64))
(declare-fun temp10826_26 () (_ BitVec 64))
(declare-fun temp10826_27 () (_ BitVec 64))
(declare-fun temp10826_28 () (_ BitVec 64))
(declare-fun temp10826_29 () (_ BitVec 64))
(declare-fun temp10826_30 () (_ BitVec 64))
(declare-fun temp10826_31 () (_ BitVec 64))
(declare-fun temp10826_32 () (_ BitVec 64))
(declare-fun temp10826_33 () (_ BitVec 64))
(declare-fun temp10826_34 () (_ BitVec 64))
(declare-fun temp10826_35 () (_ BitVec 64))
(declare-fun temp10826_36 () (_ BitVec 64))
(declare-fun temp10826_37 () (_ BitVec 64))
(declare-fun temp10826_38 () (_ BitVec 64))
(declare-fun temp10826_39 () (_ BitVec 64))
(declare-fun temp10826_40 () (_ BitVec 64))
(declare-fun temp10826_41 () (_ BitVec 64))
(declare-fun temp10826_42 () (_ BitVec 64))
(declare-fun temp10826_43 () (_ BitVec 64))
(declare-fun temp10826_44 () (_ BitVec 64))
(declare-fun temp10826_45 () (_ BitVec 64))
(declare-fun temp10826_46 () (_ BitVec 64))
(declare-fun temp10826_47 () (_ BitVec 64))
(declare-fun temp10826_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10826_49 () (_ BitVec 64))
(declare-fun temp10826_50 () (_ BitVec 64))
(declare-fun temp10826_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10826_52 () (_ BitVec 64))
(declare-fun temp10826_53 () (_ BitVec 64))
(declare-fun temp10826_54 () (_ BitVec 64))
(declare-fun temp10826_55 () (_ BitVec 64))
(declare-fun temp10826_56 () (_ BitVec 64))
(declare-fun temp10826_57 () (_ BitVec 64))
(declare-fun temp10826_58 () (_ BitVec 64))
(declare-fun temp10826_59 () (_ BitVec 64))
(declare-fun temp10826_60 () (_ BitVec 64))
(declare-fun temp10826_61 () (_ BitVec 64))
(declare-fun temp10826_62 () (_ BitVec 64))
(declare-fun temp10826_63 () (_ BitVec 64))
(declare-fun temp10826_64 () (_ BitVec 64))
(declare-fun temp10826_65 () (_ BitVec 64))
(declare-fun temp10826_66 () (_ BitVec 64))
(declare-fun temp10826_67 () (_ BitVec 64))
(declare-fun temp10826_68 () (_ BitVec 64))
(declare-fun temp10826_69 () (_ BitVec 64))
(declare-fun temp10826_70 () (_ BitVec 64))
(declare-fun temp10826_71 () (_ BitVec 64))
(declare-fun temp10826_72 () (_ BitVec 64))
(declare-fun temp10826_73 () (_ BitVec 64))
(declare-fun temp10826_74 () (_ BitVec 64))
(declare-fun temp10826_75 () (_ BitVec 64))
(declare-fun temp10826_76 () (_ BitVec 64))
(declare-fun temp10826_77 () (_ BitVec 64))
(declare-fun temp10826_78 () (_ BitVec 64))
(declare-fun temp10826_79 () (_ BitVec 64))
(declare-fun temp10826_80 () (_ BitVec 64))
(declare-fun temp10826_81 () (_ BitVec 64))
(declare-fun temp10826_82 () (_ BitVec 64))
(declare-fun temp10826_83 () (_ BitVec 64))
(declare-fun temp10826_84 () (_ BitVec 64))
(declare-fun temp10826_85 () (_ BitVec 64))
(declare-fun temp10826_86 () (_ BitVec 64))
(declare-fun temp10826_87 () (_ BitVec 64))
(declare-fun temp10826_88 () (_ BitVec 64))
(declare-fun temp10826_89 () (_ BitVec 64))
(declare-fun temp10826_90 () (_ BitVec 64))
(declare-fun temp10826_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10826_92 () (_ BitVec 64))
(declare-fun temp10826_93 () (_ BitVec 64))
(declare-fun temp10826_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10826_95 () (_ BitVec 64))
(declare-fun temp10826_96 () (_ BitVec 64))
(declare-fun temp10826_97 () (_ BitVec 64))
(declare-fun temp10826_98 () (_ BitVec 64))
(declare-fun temp10826_99 () (_ BitVec 64))
(declare-fun temp10826_100 () (_ BitVec 64))
(declare-fun temp10826_101 () (_ BitVec 64))
(declare-fun temp10826_102 () (_ BitVec 64))
(declare-fun temp10826_103 () (_ BitVec 64))
(declare-fun temp10826_104 () (_ BitVec 64))
(declare-fun temp10826_105 () (_ BitVec 64))
(declare-fun temp10826_106 () (_ BitVec 64))
(declare-fun temp10826_107 () (_ BitVec 64))
(declare-fun temp10826_108 () (_ BitVec 64))
(declare-fun temp10826_109 () (_ BitVec 64))
(declare-fun temp10826_110 () (_ BitVec 64))
(declare-fun temp10826_111 () (_ BitVec 64))
(declare-fun temp10826_112 () (_ BitVec 64))
(declare-fun temp10826_113 () (_ BitVec 64))
(declare-fun temp10826_114 () (_ BitVec 64))
(declare-fun temp10826_115 () (_ BitVec 64))
(declare-fun temp10826_116 () (_ BitVec 64))
(declare-fun temp10826_117 () (_ BitVec 64))
(declare-fun temp10826_118 () (_ BitVec 64))
(declare-fun temp10826_119 () (_ BitVec 64))
(declare-fun temp10826_120 () (_ BitVec 64))
(declare-fun temp10826_121 () (_ BitVec 64))
(declare-fun temp10826_122 () (_ BitVec 64))
(declare-fun temp10826_123 () (_ BitVec 64))
(declare-fun temp10826_124 () (_ BitVec 64))
(declare-fun temp10826_125 () (_ BitVec 64))
(declare-fun temp10826_126 () (_ BitVec 64))
(declare-fun temp10826_127 () (_ BitVec 64))
(declare-fun temp10826_128 () (_ BitVec 64))
(declare-fun temp10826_129 () (_ BitVec 64))
(declare-fun temp10826_130 () (_ BitVec 64))
(declare-fun temp10826_131 () (_ BitVec 64))
(declare-fun temp10826_132 () (_ BitVec 64))
(declare-fun temp10826_133 () (_ BitVec 64))
(declare-fun temp10826_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10826_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10826_136 () (_ BitVec 64))
(declare-fun temp10826_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10826_138 () (_ BitVec 64))
(declare-fun temp10826_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10826_140 () (_ BitVec 64))
(declare-fun temp10826_141 () (_ BitVec 64))
(declare-fun temp10826_142 () (_ BitVec 64))
(declare-fun temp10826_143 () (_ BitVec 64))
(declare-fun temp10826_144 () (_ BitVec 64))
(declare-fun temp10826_145 () (_ BitVec 64))
(declare-fun temp10826_146 () (_ BitVec 64))
(declare-fun temp10826_147 () (_ BitVec 64))
(declare-fun temp10826_148 () (_ BitVec 64))
(declare-fun temp10826_149 () (_ BitVec 64))
(declare-fun temp10826_150 () (_ BitVec 64))
(declare-fun temp10826_151 () (_ BitVec 64))
(declare-fun temp10826_152 () (_ BitVec 64))
(declare-fun temp10826_153 () (_ BitVec 64))
(declare-fun temp10826_154 () (_ BitVec 64))
(declare-fun temp10826_155 () (_ BitVec 64))
(declare-fun temp10826_157 () (_ BitVec 64))
(declare-fun temp10826_158 () (_ BitVec 64))
(declare-fun temp10826_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10826_159 () (_ BitVec 64))
(declare-fun temp10826_160 () (_ BitVec 64))
(declare-fun temp10826_162 () (_ BitVec 64))
(declare-fun temp10826_163 () (_ BitVec 64))
(declare-fun temp10826_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10826_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10826_165 () (_ BitVec 64))
(declare-fun temp10826_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10826_167 () (_ BitVec 64))
(declare-fun temp10826_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10826_169 () (_ BitVec 64))
(declare-fun temp10826_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10826_171 () (_ BitVec 64))
(declare-fun temp10826_172 () (_ BitVec 64))
(declare-fun temp10826_173 () (_ BitVec 64))
(declare-fun temp10826_174 () (_ BitVec 64))
(declare-fun temp10826_175 () (_ BitVec 64))
(declare-fun temp10826_176 () (_ BitVec 64))
(declare-fun temp10826_177 () (_ BitVec 64))
(declare-fun temp10826_178 () (_ BitVec 64))
(declare-fun temp10826_179 () (_ BitVec 64))
(declare-fun temp10826_180 () (_ BitVec 64))
(declare-fun temp10826_181 () (_ BitVec 64))
(declare-fun temp10826_182 () (_ BitVec 64))
(declare-fun temp10826_183 () (_ BitVec 64))
(declare-fun temp10826_184 () (_ BitVec 64))
(declare-fun temp10826_185 () (_ BitVec 64))
(declare-fun temp10826_186 () (_ BitVec 64))
(declare-fun temp10826_187 () (_ BitVec 64))
(declare-fun temp10826_188 () (_ BitVec 64))
(declare-fun temp10826_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10826_190 () (_ BitVec 64))
(declare-fun temp10826_192 () (_ BitVec 64))
(declare-fun temp10826_193 () (_ BitVec 64))
(declare-fun temp10826_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10826_194 () (_ BitVec 64))
(declare-fun temp10826_195 () (_ BitVec 64))
(declare-fun temp10826_197 () (_ BitVec 64))
(declare-fun temp10826_198 () (_ BitVec 64))
(declare-fun temp10826_196 () (_ BitVec 64))
(declare-fun temp10826_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10826_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10826_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10826_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10826_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10826_204 () (_ BitVec 64))
(declare-fun temp10826_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10826_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10826_207 () (_ BitVec 64))
(declare-fun temp10826_208 () (_ BitVec 64))
(declare-fun temp10826_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10826_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10826_211 () (_ BitVec 64))
(declare-fun temp10826_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10826_213 () (_ BitVec 64))
(declare-fun temp10826_214 () (_ BitVec 64))
(declare-fun temp10826_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10826_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10826_217 () (_ BitVec 64))
(declare-fun temp10826_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10826_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10826_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var4993424 () (_ BitVec 64))
(declare-fun var5255568 () (_ BitVec 64))
(declare-fun temp10826_221 () (_ BitVec 64))
(declare-fun var5583248 () (_ BitVec 64))
(declare-fun temp10826_222 () (_ BitVec 64))
(assert (= temp10826_1 #x0000000000000001))
(assert (= var77203 temp10826_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10826_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10826_2)))
(assert (= temp10826_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10826_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10826_4 #x0000000000000000))
(assert (= var210941 temp10826_4))
(assert (= temp10826_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10826_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10826_6 #x0000000000000000))
(assert (= var210986 temp10826_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10826_7 #x0000000000000000))
(assert (= temp10826_8 temp10826_7))
(assert (= temp10826_9 (select ARGNAME_padding_NAMEEND_VAL temp10826_8)))
(assert (= temp10826_10 #x0000000000000001))
(assert (= temp10826_11 temp10826_10))
(assert (= temp10826_12 (select ARGNAME_padding_NAMEEND_VAL temp10826_11)))
(assert (= temp10826_13 #x0000000000000002))
(assert (= temp10826_14 temp10826_13))
(assert (= temp10826_15 (select ARGNAME_padding_NAMEEND_VAL temp10826_14)))
(assert (= temp10826_16 #x0000000000000003))
(assert (= temp10826_17 temp10826_16))
(assert (= temp10826_18 (select ARGNAME_padding_NAMEEND_VAL temp10826_17)))
(assert (= temp10826_19 #x0000000000000004))
(assert (= temp10826_20 temp10826_19))
(assert (= temp10826_21 (select ARGNAME_padding_NAMEEND_VAL temp10826_20)))
(assert (= temp10826_22 #x0000000000000005))
(assert (= temp10826_23 temp10826_22))
(assert (= temp10826_24 (select ARGNAME_padding_NAMEEND_VAL temp10826_23)))
(assert (= temp10826_25 #x0000000000000000))
(assert (= temp10826_26 #x0000000000000000))
(assert (= temp10826_27 temp10826_26))
(assert (= temp10826_28 (select ARGNAME_padding_NAMEEND_VAL temp10826_27)))
(assert (= temp10826_29 #x0000000000000000))
(assert (= temp10826_30 #x0000000000000001))
(assert (= temp10826_31 temp10826_30))
(assert (= temp10826_32 (select ARGNAME_padding_NAMEEND_VAL temp10826_31)))
(assert (= temp10826_33 #x0000000000000000))
(assert (= temp10826_34 #x0000000000000002))
(assert (= temp10826_35 temp10826_34))
(assert (= temp10826_36 (select ARGNAME_padding_NAMEEND_VAL temp10826_35)))
(assert (= temp10826_37 #x0000000000000000))
(assert (= temp10826_38 #x0000000000000003))
(assert (= temp10826_39 temp10826_38))
(assert (= temp10826_40 (select ARGNAME_padding_NAMEEND_VAL temp10826_39)))
(assert (= temp10826_41 #x0000000000000000))
(assert (= temp10826_42 #x0000000000000004))
(assert (= temp10826_43 temp10826_42))
(assert (= temp10826_44 (select ARGNAME_padding_NAMEEND_VAL temp10826_43)))
(assert (= temp10826_45 #x0000000000000000))
(assert (= temp10826_46 #x0000000000000005))
(assert (= temp10826_47 temp10826_46))
(assert (= temp10826_48 (select ARGNAME_padding_NAMEEND_VAL temp10826_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10826_28 temp10826_25)
             (bvslt temp10826_32 temp10826_29)
             (bvslt temp10826_36 temp10826_33)
             (bvslt temp10826_40 temp10826_37)
             (bvslt temp10826_44 temp10826_41)
             (bvslt temp10826_48 temp10826_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10826_49 #x0000000000000000))
(assert (= var1191714 temp10826_49))
(assert (= temp10826_50 #x0000000000000000))
(assert (= temp10826_51 temp10826_50))
(assert (= temp10826_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10826_51)))
(assert (= temp10826_53 #x0000000000000001))
(assert (= temp10826_54 temp10826_53))
(assert (= temp10826_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10826_54)))
(assert (= temp10826_56 #x0000000000000002))
(assert (= temp10826_57 temp10826_56))
(assert (= temp10826_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10826_57)))
(assert (= temp10826_59 #x0000000000000003))
(assert (= temp10826_60 temp10826_59))
(assert (= temp10826_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10826_60)))
(assert (= temp10826_62 #x0000000000000004))
(assert (= temp10826_63 temp10826_62))
(assert (= temp10826_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10826_63)))
(assert (= temp10826_65 #x0000000000000005))
(assert (= temp10826_66 temp10826_65))
(assert (= temp10826_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10826_66)))
(assert (= temp10826_68 #x0000000000000000))
(assert (= temp10826_69 #x0000000000000000))
(assert (= temp10826_70 temp10826_69))
(assert (= temp10826_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10826_70)))
(assert (= temp10826_72 #x0000000000000000))
(assert (= temp10826_73 #x0000000000000001))
(assert (= temp10826_74 temp10826_73))
(assert (= temp10826_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10826_74)))
(assert (= temp10826_76 #x0000000000000000))
(assert (= temp10826_77 #x0000000000000002))
(assert (= temp10826_78 temp10826_77))
(assert (= temp10826_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10826_78)))
(assert (= temp10826_80 #x0000000000000000))
(assert (= temp10826_81 #x0000000000000003))
(assert (= temp10826_82 temp10826_81))
(assert (= temp10826_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10826_82)))
(assert (= temp10826_84 #x0000000000000000))
(assert (= temp10826_85 #x0000000000000004))
(assert (= temp10826_86 temp10826_85))
(assert (= temp10826_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10826_86)))
(assert (= temp10826_88 #x0000000000000000))
(assert (= temp10826_89 #x0000000000000005))
(assert (= temp10826_90 temp10826_89))
(assert (= temp10826_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10826_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10826_71 temp10826_68)
             (bvslt temp10826_75 temp10826_72)
             (bvslt temp10826_79 temp10826_76)
             (bvslt temp10826_83 temp10826_80)
             (bvslt temp10826_87 temp10826_84)
             (bvslt temp10826_91 temp10826_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10826_92 #x0000000000000000))
(assert (= var1191725 temp10826_92))
(assert (= temp10826_93 #x0000000000000000))
(assert (= temp10826_94 temp10826_93))
(assert (= temp10826_95 (select ARGNAME_stride_NAMEEND_VAL temp10826_94)))
(assert (= temp10826_96 #x0000000000000001))
(assert (= temp10826_97 temp10826_96))
(assert (= temp10826_98 (select ARGNAME_stride_NAMEEND_VAL temp10826_97)))
(assert (= temp10826_99 #x0000000000000002))
(assert (= temp10826_100 temp10826_99))
(assert (= temp10826_101 (select ARGNAME_stride_NAMEEND_VAL temp10826_100)))
(assert (= temp10826_102 #x0000000000000003))
(assert (= temp10826_103 temp10826_102))
(assert (= temp10826_104 (select ARGNAME_stride_NAMEEND_VAL temp10826_103)))
(assert (= temp10826_105 #x0000000000000004))
(assert (= temp10826_106 temp10826_105))
(assert (= temp10826_107 (select ARGNAME_stride_NAMEEND_VAL temp10826_106)))
(assert (= temp10826_108 #x0000000000000005))
(assert (= temp10826_109 temp10826_108))
(assert (= temp10826_110 (select ARGNAME_stride_NAMEEND_VAL temp10826_109)))
(assert (= temp10826_111 #x0000000000000000))
(assert (= temp10826_112 #x0000000000000000))
(assert (= temp10826_113 temp10826_112))
(assert (= temp10826_114 (select ARGNAME_stride_NAMEEND_VAL temp10826_113)))
(assert (= temp10826_115 #x0000000000000000))
(assert (= temp10826_116 #x0000000000000001))
(assert (= temp10826_117 temp10826_116))
(assert (= temp10826_118 (select ARGNAME_stride_NAMEEND_VAL temp10826_117)))
(assert (= temp10826_119 #x0000000000000000))
(assert (= temp10826_120 #x0000000000000002))
(assert (= temp10826_121 temp10826_120))
(assert (= temp10826_122 (select ARGNAME_stride_NAMEEND_VAL temp10826_121)))
(assert (= temp10826_123 #x0000000000000000))
(assert (= temp10826_124 #x0000000000000003))
(assert (= temp10826_125 temp10826_124))
(assert (= temp10826_126 (select ARGNAME_stride_NAMEEND_VAL temp10826_125)))
(assert (= temp10826_127 #x0000000000000000))
(assert (= temp10826_128 #x0000000000000004))
(assert (= temp10826_129 temp10826_128))
(assert (= temp10826_130 (select ARGNAME_stride_NAMEEND_VAL temp10826_129)))
(assert (= temp10826_131 #x0000000000000000))
(assert (= temp10826_132 #x0000000000000005))
(assert (= temp10826_133 temp10826_132))
(assert (= temp10826_134 (select ARGNAME_stride_NAMEEND_VAL temp10826_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10826_114 temp10826_111)
             (bvsle temp10826_118 temp10826_115)
             (bvsle temp10826_122 temp10826_119)
             (bvsle temp10826_126 temp10826_123)
             (bvsle temp10826_130 temp10826_127)
             (bvsle temp10826_134 temp10826_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10826_135 #x0000000000000000))
(assert (= var1191735 temp10826_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10826_136 #x0000000000000001))
(assert (= var1191747 temp10826_136))
(assert (= temp10826_137 #x0000000000000000))
(assert (= var1179826 temp10826_137))
(assert (= temp10826_138 #x0000000000000000))
(assert (= temp10826_139 temp10826_138))
(assert (= temp10826_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10826_139)))
(assert (= temp10826_141 #x0000000000000001))
(assert (= temp10826_142 temp10826_141))
(assert (= temp10826_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10826_142)))
(assert (= temp10826_144 #x0000000000000002))
(assert (= temp10826_145 temp10826_144))
(assert (= temp10826_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10826_145)))
(assert (= temp10826_147 #x0000000000000003))
(assert (= temp10826_148 temp10826_147))
(assert (= temp10826_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10826_148)))
(assert (= temp10826_150 #x0000000000000004))
(assert (= temp10826_151 temp10826_150))
(assert (= temp10826_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10826_151)))
(assert (= temp10826_153 #x0000000000000005))
(assert (= temp10826_154 temp10826_153))
(assert (= temp10826_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10826_154)))
(assert (= temp10826_157 var1179826))
(assert (= temp10826_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10826_157)))
(assert (= temp10826_156 temp10826_158))
(assert (= var1191780
   (ite (bvslt temp10826_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10826_159 #x0000000000000000))
(assert (= var1191780 temp10826_159))
(assert (= temp10826_160 #x0000000000000000))
(assert (= var1179826 temp10826_160))
(assert (= temp10826_162 var1179826))
(assert (= temp10826_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10826_162)))
(assert (= temp10826_161 temp10826_163))
(assert (= var1191802 (bvsmod temp10826_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10826_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10826_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10826_165 #x0000000000000001))
(assert (= var1191803 temp10826_165))
(assert (= temp10826_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10826_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10826_167 #x0000000000000001))
(assert (= var1191823 temp10826_167))
(assert (= temp10826_168 #x0000000000000001))
(assert (= var1180714 temp10826_168))
(assert (= temp10826_169 #x0000000000000000))
(assert (= temp10826_170 temp10826_169))
(assert (= temp10826_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10826_170)))
(assert (= temp10826_172 #x0000000000000001))
(assert (= temp10826_173 temp10826_172))
(assert (= temp10826_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10826_173)))
(assert (= temp10826_175 #x0000000000000002))
(assert (= temp10826_176 temp10826_175))
(assert (= temp10826_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10826_176)))
(assert (= temp10826_178 #x0000000000000003))
(assert (= temp10826_179 temp10826_178))
(assert (= temp10826_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10826_179)))
(assert (= temp10826_181 #x0000000000000004))
(assert (= temp10826_182 temp10826_181))
(assert (= temp10826_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10826_182)))
(assert (= temp10826_184 #x0000000000000005))
(assert (= temp10826_185 temp10826_184))
(assert (= temp10826_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10826_185)))
(assert (= temp10826_187 #x0000000000000000))
(assert (= temp10826_188
   (ite (bvslt var1180714 temp10826_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10826_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10826_188)))
(assert (= var1191831 temp10826_189))
(assert (bvslt (ite (bvslt var1180714 temp10826_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10826_190 #x0000000000000001))
(assert (= var1180714 temp10826_190))
(assert (= temp10826_192 var1180714))
(assert (= temp10826_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10826_192)))
(assert (= temp10826_191 temp10826_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10826_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10826_194 #x0000000000000001))
(assert (= var1191836 temp10826_194))
(assert (= temp10826_195 #x0000000000000000))
(assert (= var1179826 temp10826_195))
(assert (= temp10826_197 var1179826))
(assert (= temp10826_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10826_197)))
(assert (= temp10826_196 temp10826_198))
(assert (= temp10826_199 #x0000000000000002))
(assert (= var1586025 temp10826_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10826_200 #x0000000000000001))
(assert (= var1191993 temp10826_200))
(assert (= temp10826_201 #x0000000000000001))
(assert (= var2700303 temp10826_201))
(assert (= temp10826_202 #x0000000000000001))
(assert (= var2962447 temp10826_202))
(assert (= temp10826_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10826_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10826_204 #x0000000000000001))
(assert (= var211058 temp10826_204))
(assert (= temp10826_205 #x0000000000000001))
(assert (= var211188 temp10826_205))
(assert (= var3879401 var211188))
(assert (= temp10826_206 #x0000000000000000))
(assert (= var3866802 temp10826_206))
(assert (= temp10826_207 #x0000000000000000))
(assert (= temp10826_208
   (ite (bvslt var3866802 temp10826_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10826_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10826_208)))
(assert (= var3879420 temp10826_209))
(assert (bvslt (ite (bvslt var3866802 temp10826_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10826_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10826_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10826_211 #x0000000000000000))
(assert (= var3879421 temp10826_211))
(assert (= temp10826_212 #x0000000000000001))
(assert (= var3867690 temp10826_212))
(assert (= temp10826_213 #x0000000000000000))
(assert (= temp10826_214
   (ite (bvslt var3867690 temp10826_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10826_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10826_214)))
(assert (= var3879423 temp10826_215))
(assert (bvslt (ite (bvslt var3867690 temp10826_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10826_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10826_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10826_217 #x0000000000000001))
(assert (= var3879424 temp10826_217))
(assert (= temp10826_218 #x0000000000000000))
(assert (= var4133117 temp10826_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10826_219 #x0000000000000002))
(assert (= var4339331 temp10826_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10826_220 #x0000000000000000))
(assert (= var4404892 temp10826_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var4993424 var211201))
(assert (= var5255568 var211201))
(assert (= temp10826_221 #x0000000000000000))
(assert (= var5583248 temp10826_221))
(assert (= temp10826_222 #x0000000000000001))
(assert (= var211058 temp10826_222))
(model-add temp10826_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10826_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10826_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10826_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




