(declare-fun temp10741_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10741_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10741_3 () (_ BitVec 64))
(declare-fun temp10741_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10741_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10741_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10741_7 () (_ BitVec 64))
(declare-fun temp10741_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10741_9 () (_ BitVec 64))
(declare-fun temp10741_10 () (_ BitVec 64))
(declare-fun temp10741_11 () (_ BitVec 64))
(declare-fun temp10741_12 () (_ BitVec 64))
(declare-fun temp10741_13 () (_ BitVec 64))
(declare-fun temp10741_14 () (_ BitVec 64))
(declare-fun temp10741_15 () (_ BitVec 64))
(declare-fun temp10741_16 () (_ BitVec 64))
(declare-fun temp10741_17 () (_ BitVec 64))
(declare-fun temp10741_18 () (_ BitVec 64))
(declare-fun temp10741_19 () (_ BitVec 64))
(declare-fun temp10741_20 () (_ BitVec 64))
(declare-fun temp10741_21 () (_ BitVec 64))
(declare-fun temp10741_22 () (_ BitVec 64))
(declare-fun temp10741_23 () (_ BitVec 64))
(declare-fun temp10741_24 () (_ BitVec 64))
(declare-fun temp10741_25 () (_ BitVec 64))
(declare-fun temp10741_26 () (_ BitVec 64))
(declare-fun temp10741_27 () (_ BitVec 64))
(declare-fun temp10741_28 () (_ BitVec 64))
(declare-fun temp10741_29 () (_ BitVec 64))
(declare-fun temp10741_30 () (_ BitVec 64))
(declare-fun temp10741_31 () (_ BitVec 64))
(declare-fun temp10741_32 () (_ BitVec 64))
(declare-fun temp10741_33 () (_ BitVec 64))
(declare-fun temp10741_34 () (_ BitVec 64))
(declare-fun temp10741_35 () (_ BitVec 64))
(declare-fun temp10741_36 () (_ BitVec 64))
(declare-fun temp10741_37 () (_ BitVec 64))
(declare-fun temp10741_38 () (_ BitVec 64))
(declare-fun temp10741_39 () (_ BitVec 64))
(declare-fun temp10741_40 () (_ BitVec 64))
(declare-fun temp10741_41 () (_ BitVec 64))
(declare-fun temp10741_42 () (_ BitVec 64))
(declare-fun temp10741_43 () (_ BitVec 64))
(declare-fun temp10741_44 () (_ BitVec 64))
(declare-fun temp10741_45 () (_ BitVec 64))
(declare-fun temp10741_46 () (_ BitVec 64))
(declare-fun temp10741_47 () (_ BitVec 64))
(declare-fun temp10741_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10741_49 () (_ BitVec 64))
(declare-fun temp10741_50 () (_ BitVec 64))
(declare-fun temp10741_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10741_52 () (_ BitVec 64))
(declare-fun temp10741_53 () (_ BitVec 64))
(declare-fun temp10741_54 () (_ BitVec 64))
(declare-fun temp10741_55 () (_ BitVec 64))
(declare-fun temp10741_56 () (_ BitVec 64))
(declare-fun temp10741_57 () (_ BitVec 64))
(declare-fun temp10741_58 () (_ BitVec 64))
(declare-fun temp10741_59 () (_ BitVec 64))
(declare-fun temp10741_60 () (_ BitVec 64))
(declare-fun temp10741_61 () (_ BitVec 64))
(declare-fun temp10741_62 () (_ BitVec 64))
(declare-fun temp10741_63 () (_ BitVec 64))
(declare-fun temp10741_64 () (_ BitVec 64))
(declare-fun temp10741_65 () (_ BitVec 64))
(declare-fun temp10741_66 () (_ BitVec 64))
(declare-fun temp10741_67 () (_ BitVec 64))
(declare-fun temp10741_68 () (_ BitVec 64))
(declare-fun temp10741_69 () (_ BitVec 64))
(declare-fun temp10741_70 () (_ BitVec 64))
(declare-fun temp10741_71 () (_ BitVec 64))
(declare-fun temp10741_72 () (_ BitVec 64))
(declare-fun temp10741_73 () (_ BitVec 64))
(declare-fun temp10741_74 () (_ BitVec 64))
(declare-fun temp10741_75 () (_ BitVec 64))
(declare-fun temp10741_76 () (_ BitVec 64))
(declare-fun temp10741_77 () (_ BitVec 64))
(declare-fun temp10741_78 () (_ BitVec 64))
(declare-fun temp10741_79 () (_ BitVec 64))
(declare-fun temp10741_80 () (_ BitVec 64))
(declare-fun temp10741_81 () (_ BitVec 64))
(declare-fun temp10741_82 () (_ BitVec 64))
(declare-fun temp10741_83 () (_ BitVec 64))
(declare-fun temp10741_84 () (_ BitVec 64))
(declare-fun temp10741_85 () (_ BitVec 64))
(declare-fun temp10741_86 () (_ BitVec 64))
(declare-fun temp10741_87 () (_ BitVec 64))
(declare-fun temp10741_88 () (_ BitVec 64))
(declare-fun temp10741_89 () (_ BitVec 64))
(declare-fun temp10741_90 () (_ BitVec 64))
(declare-fun temp10741_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10741_92 () (_ BitVec 64))
(declare-fun temp10741_93 () (_ BitVec 64))
(declare-fun temp10741_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10741_95 () (_ BitVec 64))
(declare-fun temp10741_96 () (_ BitVec 64))
(declare-fun temp10741_97 () (_ BitVec 64))
(declare-fun temp10741_98 () (_ BitVec 64))
(declare-fun temp10741_99 () (_ BitVec 64))
(declare-fun temp10741_100 () (_ BitVec 64))
(declare-fun temp10741_101 () (_ BitVec 64))
(declare-fun temp10741_102 () (_ BitVec 64))
(declare-fun temp10741_103 () (_ BitVec 64))
(declare-fun temp10741_104 () (_ BitVec 64))
(declare-fun temp10741_105 () (_ BitVec 64))
(declare-fun temp10741_106 () (_ BitVec 64))
(declare-fun temp10741_107 () (_ BitVec 64))
(declare-fun temp10741_108 () (_ BitVec 64))
(declare-fun temp10741_109 () (_ BitVec 64))
(declare-fun temp10741_110 () (_ BitVec 64))
(declare-fun temp10741_111 () (_ BitVec 64))
(declare-fun temp10741_112 () (_ BitVec 64))
(declare-fun temp10741_113 () (_ BitVec 64))
(declare-fun temp10741_114 () (_ BitVec 64))
(declare-fun temp10741_115 () (_ BitVec 64))
(declare-fun temp10741_116 () (_ BitVec 64))
(declare-fun temp10741_117 () (_ BitVec 64))
(declare-fun temp10741_118 () (_ BitVec 64))
(declare-fun temp10741_119 () (_ BitVec 64))
(declare-fun temp10741_120 () (_ BitVec 64))
(declare-fun temp10741_121 () (_ BitVec 64))
(declare-fun temp10741_122 () (_ BitVec 64))
(declare-fun temp10741_123 () (_ BitVec 64))
(declare-fun temp10741_124 () (_ BitVec 64))
(declare-fun temp10741_125 () (_ BitVec 64))
(declare-fun temp10741_126 () (_ BitVec 64))
(declare-fun temp10741_127 () (_ BitVec 64))
(declare-fun temp10741_128 () (_ BitVec 64))
(declare-fun temp10741_129 () (_ BitVec 64))
(declare-fun temp10741_130 () (_ BitVec 64))
(declare-fun temp10741_131 () (_ BitVec 64))
(declare-fun temp10741_132 () (_ BitVec 64))
(declare-fun temp10741_133 () (_ BitVec 64))
(declare-fun temp10741_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10741_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10741_136 () (_ BitVec 64))
(declare-fun temp10741_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10741_138 () (_ BitVec 64))
(declare-fun temp10741_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10741_140 () (_ BitVec 64))
(declare-fun temp10741_141 () (_ BitVec 64))
(declare-fun temp10741_142 () (_ BitVec 64))
(declare-fun temp10741_143 () (_ BitVec 64))
(declare-fun temp10741_144 () (_ BitVec 64))
(declare-fun temp10741_145 () (_ BitVec 64))
(declare-fun temp10741_146 () (_ BitVec 64))
(declare-fun temp10741_147 () (_ BitVec 64))
(declare-fun temp10741_148 () (_ BitVec 64))
(declare-fun temp10741_149 () (_ BitVec 64))
(declare-fun temp10741_150 () (_ BitVec 64))
(declare-fun temp10741_151 () (_ BitVec 64))
(declare-fun temp10741_152 () (_ BitVec 64))
(declare-fun temp10741_153 () (_ BitVec 64))
(declare-fun temp10741_154 () (_ BitVec 64))
(declare-fun temp10741_155 () (_ BitVec 64))
(declare-fun temp10741_157 () (_ BitVec 64))
(declare-fun temp10741_158 () (_ BitVec 64))
(declare-fun temp10741_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10741_159 () (_ BitVec 64))
(declare-fun temp10741_160 () (_ BitVec 64))
(declare-fun temp10741_162 () (_ BitVec 64))
(declare-fun temp10741_163 () (_ BitVec 64))
(declare-fun temp10741_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10741_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10741_165 () (_ BitVec 64))
(declare-fun temp10741_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10741_167 () (_ BitVec 64))
(declare-fun temp10741_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10741_169 () (_ BitVec 64))
(declare-fun temp10741_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10741_171 () (_ BitVec 64))
(declare-fun temp10741_172 () (_ BitVec 64))
(declare-fun temp10741_173 () (_ BitVec 64))
(declare-fun temp10741_174 () (_ BitVec 64))
(declare-fun temp10741_175 () (_ BitVec 64))
(declare-fun temp10741_176 () (_ BitVec 64))
(declare-fun temp10741_177 () (_ BitVec 64))
(declare-fun temp10741_178 () (_ BitVec 64))
(declare-fun temp10741_179 () (_ BitVec 64))
(declare-fun temp10741_180 () (_ BitVec 64))
(declare-fun temp10741_181 () (_ BitVec 64))
(declare-fun temp10741_182 () (_ BitVec 64))
(declare-fun temp10741_183 () (_ BitVec 64))
(declare-fun temp10741_184 () (_ BitVec 64))
(declare-fun temp10741_185 () (_ BitVec 64))
(declare-fun temp10741_186 () (_ BitVec 64))
(declare-fun temp10741_187 () (_ BitVec 64))
(declare-fun temp10741_188 () (_ BitVec 64))
(declare-fun temp10741_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10741_190 () (_ BitVec 64))
(declare-fun temp10741_192 () (_ BitVec 64))
(declare-fun temp10741_193 () (_ BitVec 64))
(declare-fun temp10741_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10741_194 () (_ BitVec 64))
(declare-fun temp10741_195 () (_ BitVec 64))
(declare-fun temp10741_197 () (_ BitVec 64))
(declare-fun temp10741_198 () (_ BitVec 64))
(declare-fun temp10741_196 () (_ BitVec 64))
(declare-fun temp10741_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10741_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10741_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10741_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10741_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10741_204 () (_ BitVec 64))
(declare-fun temp10741_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10741_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10741_207 () (_ BitVec 64))
(declare-fun temp10741_208 () (_ BitVec 64))
(declare-fun temp10741_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10741_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10741_211 () (_ BitVec 64))
(declare-fun temp10741_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10741_213 () (_ BitVec 64))
(declare-fun temp10741_214 () (_ BitVec 64))
(declare-fun temp10741_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10741_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10741_217 () (_ BitVec 64))
(declare-fun temp10741_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10741_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10741_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var4927888 () (_ BitVec 64))
(declare-fun var211820 () (_ BitVec 64))
(declare-fun temp10741_221 () (_ BitVec 64))
(declare-fun var211821 () (_ BitVec 64))
(declare-fun temp10741_222 () (_ BitVec 64))
(assert (= temp10741_1 #x0000000000000001))
(assert (= var77203 temp10741_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10741_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10741_2)))
(assert (= temp10741_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10741_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10741_4 #x0000000000000000))
(assert (= var210941 temp10741_4))
(assert (= temp10741_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10741_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10741_6 #x0000000000000000))
(assert (= var210986 temp10741_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10741_7 #x0000000000000000))
(assert (= temp10741_8 temp10741_7))
(assert (= temp10741_9 (select ARGNAME_padding_NAMEEND_VAL temp10741_8)))
(assert (= temp10741_10 #x0000000000000001))
(assert (= temp10741_11 temp10741_10))
(assert (= temp10741_12 (select ARGNAME_padding_NAMEEND_VAL temp10741_11)))
(assert (= temp10741_13 #x0000000000000002))
(assert (= temp10741_14 temp10741_13))
(assert (= temp10741_15 (select ARGNAME_padding_NAMEEND_VAL temp10741_14)))
(assert (= temp10741_16 #x0000000000000003))
(assert (= temp10741_17 temp10741_16))
(assert (= temp10741_18 (select ARGNAME_padding_NAMEEND_VAL temp10741_17)))
(assert (= temp10741_19 #x0000000000000004))
(assert (= temp10741_20 temp10741_19))
(assert (= temp10741_21 (select ARGNAME_padding_NAMEEND_VAL temp10741_20)))
(assert (= temp10741_22 #x0000000000000005))
(assert (= temp10741_23 temp10741_22))
(assert (= temp10741_24 (select ARGNAME_padding_NAMEEND_VAL temp10741_23)))
(assert (= temp10741_25 #x0000000000000000))
(assert (= temp10741_26 #x0000000000000000))
(assert (= temp10741_27 temp10741_26))
(assert (= temp10741_28 (select ARGNAME_padding_NAMEEND_VAL temp10741_27)))
(assert (= temp10741_29 #x0000000000000000))
(assert (= temp10741_30 #x0000000000000001))
(assert (= temp10741_31 temp10741_30))
(assert (= temp10741_32 (select ARGNAME_padding_NAMEEND_VAL temp10741_31)))
(assert (= temp10741_33 #x0000000000000000))
(assert (= temp10741_34 #x0000000000000002))
(assert (= temp10741_35 temp10741_34))
(assert (= temp10741_36 (select ARGNAME_padding_NAMEEND_VAL temp10741_35)))
(assert (= temp10741_37 #x0000000000000000))
(assert (= temp10741_38 #x0000000000000003))
(assert (= temp10741_39 temp10741_38))
(assert (= temp10741_40 (select ARGNAME_padding_NAMEEND_VAL temp10741_39)))
(assert (= temp10741_41 #x0000000000000000))
(assert (= temp10741_42 #x0000000000000004))
(assert (= temp10741_43 temp10741_42))
(assert (= temp10741_44 (select ARGNAME_padding_NAMEEND_VAL temp10741_43)))
(assert (= temp10741_45 #x0000000000000000))
(assert (= temp10741_46 #x0000000000000005))
(assert (= temp10741_47 temp10741_46))
(assert (= temp10741_48 (select ARGNAME_padding_NAMEEND_VAL temp10741_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10741_28 temp10741_25)
             (bvslt temp10741_32 temp10741_29)
             (bvslt temp10741_36 temp10741_33)
             (bvslt temp10741_40 temp10741_37)
             (bvslt temp10741_44 temp10741_41)
             (bvslt temp10741_48 temp10741_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10741_49 #x0000000000000000))
(assert (= var1191714 temp10741_49))
(assert (= temp10741_50 #x0000000000000000))
(assert (= temp10741_51 temp10741_50))
(assert (= temp10741_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10741_51)))
(assert (= temp10741_53 #x0000000000000001))
(assert (= temp10741_54 temp10741_53))
(assert (= temp10741_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10741_54)))
(assert (= temp10741_56 #x0000000000000002))
(assert (= temp10741_57 temp10741_56))
(assert (= temp10741_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10741_57)))
(assert (= temp10741_59 #x0000000000000003))
(assert (= temp10741_60 temp10741_59))
(assert (= temp10741_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10741_60)))
(assert (= temp10741_62 #x0000000000000004))
(assert (= temp10741_63 temp10741_62))
(assert (= temp10741_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10741_63)))
(assert (= temp10741_65 #x0000000000000005))
(assert (= temp10741_66 temp10741_65))
(assert (= temp10741_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10741_66)))
(assert (= temp10741_68 #x0000000000000000))
(assert (= temp10741_69 #x0000000000000000))
(assert (= temp10741_70 temp10741_69))
(assert (= temp10741_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10741_70)))
(assert (= temp10741_72 #x0000000000000000))
(assert (= temp10741_73 #x0000000000000001))
(assert (= temp10741_74 temp10741_73))
(assert (= temp10741_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10741_74)))
(assert (= temp10741_76 #x0000000000000000))
(assert (= temp10741_77 #x0000000000000002))
(assert (= temp10741_78 temp10741_77))
(assert (= temp10741_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10741_78)))
(assert (= temp10741_80 #x0000000000000000))
(assert (= temp10741_81 #x0000000000000003))
(assert (= temp10741_82 temp10741_81))
(assert (= temp10741_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10741_82)))
(assert (= temp10741_84 #x0000000000000000))
(assert (= temp10741_85 #x0000000000000004))
(assert (= temp10741_86 temp10741_85))
(assert (= temp10741_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10741_86)))
(assert (= temp10741_88 #x0000000000000000))
(assert (= temp10741_89 #x0000000000000005))
(assert (= temp10741_90 temp10741_89))
(assert (= temp10741_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10741_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10741_71 temp10741_68)
             (bvslt temp10741_75 temp10741_72)
             (bvslt temp10741_79 temp10741_76)
             (bvslt temp10741_83 temp10741_80)
             (bvslt temp10741_87 temp10741_84)
             (bvslt temp10741_91 temp10741_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10741_92 #x0000000000000000))
(assert (= var1191725 temp10741_92))
(assert (= temp10741_93 #x0000000000000000))
(assert (= temp10741_94 temp10741_93))
(assert (= temp10741_95 (select ARGNAME_stride_NAMEEND_VAL temp10741_94)))
(assert (= temp10741_96 #x0000000000000001))
(assert (= temp10741_97 temp10741_96))
(assert (= temp10741_98 (select ARGNAME_stride_NAMEEND_VAL temp10741_97)))
(assert (= temp10741_99 #x0000000000000002))
(assert (= temp10741_100 temp10741_99))
(assert (= temp10741_101 (select ARGNAME_stride_NAMEEND_VAL temp10741_100)))
(assert (= temp10741_102 #x0000000000000003))
(assert (= temp10741_103 temp10741_102))
(assert (= temp10741_104 (select ARGNAME_stride_NAMEEND_VAL temp10741_103)))
(assert (= temp10741_105 #x0000000000000004))
(assert (= temp10741_106 temp10741_105))
(assert (= temp10741_107 (select ARGNAME_stride_NAMEEND_VAL temp10741_106)))
(assert (= temp10741_108 #x0000000000000005))
(assert (= temp10741_109 temp10741_108))
(assert (= temp10741_110 (select ARGNAME_stride_NAMEEND_VAL temp10741_109)))
(assert (= temp10741_111 #x0000000000000000))
(assert (= temp10741_112 #x0000000000000000))
(assert (= temp10741_113 temp10741_112))
(assert (= temp10741_114 (select ARGNAME_stride_NAMEEND_VAL temp10741_113)))
(assert (= temp10741_115 #x0000000000000000))
(assert (= temp10741_116 #x0000000000000001))
(assert (= temp10741_117 temp10741_116))
(assert (= temp10741_118 (select ARGNAME_stride_NAMEEND_VAL temp10741_117)))
(assert (= temp10741_119 #x0000000000000000))
(assert (= temp10741_120 #x0000000000000002))
(assert (= temp10741_121 temp10741_120))
(assert (= temp10741_122 (select ARGNAME_stride_NAMEEND_VAL temp10741_121)))
(assert (= temp10741_123 #x0000000000000000))
(assert (= temp10741_124 #x0000000000000003))
(assert (= temp10741_125 temp10741_124))
(assert (= temp10741_126 (select ARGNAME_stride_NAMEEND_VAL temp10741_125)))
(assert (= temp10741_127 #x0000000000000000))
(assert (= temp10741_128 #x0000000000000004))
(assert (= temp10741_129 temp10741_128))
(assert (= temp10741_130 (select ARGNAME_stride_NAMEEND_VAL temp10741_129)))
(assert (= temp10741_131 #x0000000000000000))
(assert (= temp10741_132 #x0000000000000005))
(assert (= temp10741_133 temp10741_132))
(assert (= temp10741_134 (select ARGNAME_stride_NAMEEND_VAL temp10741_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10741_114 temp10741_111)
             (bvsle temp10741_118 temp10741_115)
             (bvsle temp10741_122 temp10741_119)
             (bvsle temp10741_126 temp10741_123)
             (bvsle temp10741_130 temp10741_127)
             (bvsle temp10741_134 temp10741_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10741_135 #x0000000000000000))
(assert (= var1191735 temp10741_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10741_136 #x0000000000000001))
(assert (= var1191747 temp10741_136))
(assert (= temp10741_137 #x0000000000000000))
(assert (= var1179826 temp10741_137))
(assert (= temp10741_138 #x0000000000000000))
(assert (= temp10741_139 temp10741_138))
(assert (= temp10741_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10741_139)))
(assert (= temp10741_141 #x0000000000000001))
(assert (= temp10741_142 temp10741_141))
(assert (= temp10741_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10741_142)))
(assert (= temp10741_144 #x0000000000000002))
(assert (= temp10741_145 temp10741_144))
(assert (= temp10741_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10741_145)))
(assert (= temp10741_147 #x0000000000000003))
(assert (= temp10741_148 temp10741_147))
(assert (= temp10741_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10741_148)))
(assert (= temp10741_150 #x0000000000000004))
(assert (= temp10741_151 temp10741_150))
(assert (= temp10741_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10741_151)))
(assert (= temp10741_153 #x0000000000000005))
(assert (= temp10741_154 temp10741_153))
(assert (= temp10741_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10741_154)))
(assert (= temp10741_157 var1179826))
(assert (= temp10741_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10741_157)))
(assert (= temp10741_156 temp10741_158))
(assert (= var1191780
   (ite (bvslt temp10741_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10741_159 #x0000000000000000))
(assert (= var1191780 temp10741_159))
(assert (= temp10741_160 #x0000000000000000))
(assert (= var1179826 temp10741_160))
(assert (= temp10741_162 var1179826))
(assert (= temp10741_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10741_162)))
(assert (= temp10741_161 temp10741_163))
(assert (= var1191802 (bvsmod temp10741_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10741_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10741_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10741_165 #x0000000000000001))
(assert (= var1191803 temp10741_165))
(assert (= temp10741_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10741_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10741_167 #x0000000000000001))
(assert (= var1191823 temp10741_167))
(assert (= temp10741_168 #x0000000000000001))
(assert (= var1180714 temp10741_168))
(assert (= temp10741_169 #x0000000000000000))
(assert (= temp10741_170 temp10741_169))
(assert (= temp10741_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10741_170)))
(assert (= temp10741_172 #x0000000000000001))
(assert (= temp10741_173 temp10741_172))
(assert (= temp10741_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10741_173)))
(assert (= temp10741_175 #x0000000000000002))
(assert (= temp10741_176 temp10741_175))
(assert (= temp10741_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10741_176)))
(assert (= temp10741_178 #x0000000000000003))
(assert (= temp10741_179 temp10741_178))
(assert (= temp10741_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10741_179)))
(assert (= temp10741_181 #x0000000000000004))
(assert (= temp10741_182 temp10741_181))
(assert (= temp10741_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10741_182)))
(assert (= temp10741_184 #x0000000000000005))
(assert (= temp10741_185 temp10741_184))
(assert (= temp10741_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10741_185)))
(assert (= temp10741_187 #x0000000000000000))
(assert (= temp10741_188
   (ite (bvslt var1180714 temp10741_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10741_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10741_188)))
(assert (= var1191831 temp10741_189))
(assert (bvslt (ite (bvslt var1180714 temp10741_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10741_190 #x0000000000000001))
(assert (= var1180714 temp10741_190))
(assert (= temp10741_192 var1180714))
(assert (= temp10741_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10741_192)))
(assert (= temp10741_191 temp10741_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10741_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10741_194 #x0000000000000001))
(assert (= var1191836 temp10741_194))
(assert (= temp10741_195 #x0000000000000000))
(assert (= var1179826 temp10741_195))
(assert (= temp10741_197 var1179826))
(assert (= temp10741_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10741_197)))
(assert (= temp10741_196 temp10741_198))
(assert (= temp10741_199 #x0000000000000002))
(assert (= var1586025 temp10741_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10741_200 #x0000000000000001))
(assert (= var1191993 temp10741_200))
(assert (= temp10741_201 #x0000000000000001))
(assert (= var2700303 temp10741_201))
(assert (= temp10741_202 #x0000000000000001))
(assert (= var2962447 temp10741_202))
(assert (= temp10741_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10741_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10741_204 #x0000000000000001))
(assert (= var211058 temp10741_204))
(assert (= temp10741_205 #x0000000000000001))
(assert (= var211188 temp10741_205))
(assert (= var3879401 var211188))
(assert (= temp10741_206 #x0000000000000000))
(assert (= var3866802 temp10741_206))
(assert (= temp10741_207 #x0000000000000000))
(assert (= temp10741_208
   (ite (bvslt var3866802 temp10741_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10741_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10741_208)))
(assert (= var3879420 temp10741_209))
(assert (bvslt (ite (bvslt var3866802 temp10741_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10741_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10741_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10741_211 #x0000000000000000))
(assert (= var3879421 temp10741_211))
(assert (= temp10741_212 #x0000000000000001))
(assert (= var3867690 temp10741_212))
(assert (= temp10741_213 #x0000000000000000))
(assert (= temp10741_214
   (ite (bvslt var3867690 temp10741_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10741_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10741_214)))
(assert (= var3879423 temp10741_215))
(assert (bvslt (ite (bvslt var3867690 temp10741_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10741_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10741_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10741_217 #x0000000000000001))
(assert (= var3879424 temp10741_217))
(assert (= temp10741_218 #x0000000000000000))
(assert (= var4133117 temp10741_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10741_219 #x0000000000000002))
(assert (= var4339331 temp10741_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10741_220 #x0000000000000000))
(assert (= var4404892 temp10741_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var4927888 var211201))
(assert (= var211820 var210913))
(assert (= temp10741_221 #x0000000000000000))
(assert (= var211821
   (ite (distinct var211820 temp10741_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10741_222 #x0000000000000001))
(assert (= var211058 temp10741_222))
(model-add temp10741_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10741_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10741_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10741_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




