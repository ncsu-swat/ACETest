(declare-fun temp10452_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10452_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10452_3 () (_ BitVec 64))
(declare-fun temp10452_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10452_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10452_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10452_7 () (_ BitVec 64))
(declare-fun temp10452_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10452_9 () (_ BitVec 64))
(declare-fun temp10452_10 () (_ BitVec 64))
(declare-fun temp10452_11 () (_ BitVec 64))
(declare-fun temp10452_12 () (_ BitVec 64))
(declare-fun temp10452_13 () (_ BitVec 64))
(declare-fun temp10452_14 () (_ BitVec 64))
(declare-fun temp10452_15 () (_ BitVec 64))
(declare-fun temp10452_16 () (_ BitVec 64))
(declare-fun temp10452_17 () (_ BitVec 64))
(declare-fun temp10452_18 () (_ BitVec 64))
(declare-fun temp10452_19 () (_ BitVec 64))
(declare-fun temp10452_20 () (_ BitVec 64))
(declare-fun temp10452_21 () (_ BitVec 64))
(declare-fun temp10452_22 () (_ BitVec 64))
(declare-fun temp10452_23 () (_ BitVec 64))
(declare-fun temp10452_24 () (_ BitVec 64))
(declare-fun temp10452_25 () (_ BitVec 64))
(declare-fun temp10452_26 () (_ BitVec 64))
(declare-fun temp10452_27 () (_ BitVec 64))
(declare-fun temp10452_28 () (_ BitVec 64))
(declare-fun temp10452_29 () (_ BitVec 64))
(declare-fun temp10452_30 () (_ BitVec 64))
(declare-fun temp10452_31 () (_ BitVec 64))
(declare-fun temp10452_32 () (_ BitVec 64))
(declare-fun temp10452_33 () (_ BitVec 64))
(declare-fun temp10452_34 () (_ BitVec 64))
(declare-fun temp10452_35 () (_ BitVec 64))
(declare-fun temp10452_36 () (_ BitVec 64))
(declare-fun temp10452_37 () (_ BitVec 64))
(declare-fun temp10452_38 () (_ BitVec 64))
(declare-fun temp10452_39 () (_ BitVec 64))
(declare-fun temp10452_40 () (_ BitVec 64))
(declare-fun temp10452_41 () (_ BitVec 64))
(declare-fun temp10452_42 () (_ BitVec 64))
(declare-fun temp10452_43 () (_ BitVec 64))
(declare-fun temp10452_44 () (_ BitVec 64))
(declare-fun temp10452_45 () (_ BitVec 64))
(declare-fun temp10452_46 () (_ BitVec 64))
(declare-fun temp10452_47 () (_ BitVec 64))
(declare-fun temp10452_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10452_49 () (_ BitVec 64))
(declare-fun temp10452_50 () (_ BitVec 64))
(declare-fun temp10452_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10452_52 () (_ BitVec 64))
(declare-fun temp10452_53 () (_ BitVec 64))
(declare-fun temp10452_54 () (_ BitVec 64))
(declare-fun temp10452_55 () (_ BitVec 64))
(declare-fun temp10452_56 () (_ BitVec 64))
(declare-fun temp10452_57 () (_ BitVec 64))
(declare-fun temp10452_58 () (_ BitVec 64))
(declare-fun temp10452_59 () (_ BitVec 64))
(declare-fun temp10452_60 () (_ BitVec 64))
(declare-fun temp10452_61 () (_ BitVec 64))
(declare-fun temp10452_62 () (_ BitVec 64))
(declare-fun temp10452_63 () (_ BitVec 64))
(declare-fun temp10452_64 () (_ BitVec 64))
(declare-fun temp10452_65 () (_ BitVec 64))
(declare-fun temp10452_66 () (_ BitVec 64))
(declare-fun temp10452_67 () (_ BitVec 64))
(declare-fun temp10452_68 () (_ BitVec 64))
(declare-fun temp10452_69 () (_ BitVec 64))
(declare-fun temp10452_70 () (_ BitVec 64))
(declare-fun temp10452_71 () (_ BitVec 64))
(declare-fun temp10452_72 () (_ BitVec 64))
(declare-fun temp10452_73 () (_ BitVec 64))
(declare-fun temp10452_74 () (_ BitVec 64))
(declare-fun temp10452_75 () (_ BitVec 64))
(declare-fun temp10452_76 () (_ BitVec 64))
(declare-fun temp10452_77 () (_ BitVec 64))
(declare-fun temp10452_78 () (_ BitVec 64))
(declare-fun temp10452_79 () (_ BitVec 64))
(declare-fun temp10452_80 () (_ BitVec 64))
(declare-fun temp10452_81 () (_ BitVec 64))
(declare-fun temp10452_82 () (_ BitVec 64))
(declare-fun temp10452_83 () (_ BitVec 64))
(declare-fun temp10452_84 () (_ BitVec 64))
(declare-fun temp10452_85 () (_ BitVec 64))
(declare-fun temp10452_86 () (_ BitVec 64))
(declare-fun temp10452_87 () (_ BitVec 64))
(declare-fun temp10452_88 () (_ BitVec 64))
(declare-fun temp10452_89 () (_ BitVec 64))
(declare-fun temp10452_90 () (_ BitVec 64))
(declare-fun temp10452_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10452_92 () (_ BitVec 64))
(declare-fun temp10452_93 () (_ BitVec 64))
(declare-fun temp10452_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10452_95 () (_ BitVec 64))
(declare-fun temp10452_96 () (_ BitVec 64))
(declare-fun temp10452_97 () (_ BitVec 64))
(declare-fun temp10452_98 () (_ BitVec 64))
(declare-fun temp10452_99 () (_ BitVec 64))
(declare-fun temp10452_100 () (_ BitVec 64))
(declare-fun temp10452_101 () (_ BitVec 64))
(declare-fun temp10452_102 () (_ BitVec 64))
(declare-fun temp10452_103 () (_ BitVec 64))
(declare-fun temp10452_104 () (_ BitVec 64))
(declare-fun temp10452_105 () (_ BitVec 64))
(declare-fun temp10452_106 () (_ BitVec 64))
(declare-fun temp10452_107 () (_ BitVec 64))
(declare-fun temp10452_108 () (_ BitVec 64))
(declare-fun temp10452_109 () (_ BitVec 64))
(declare-fun temp10452_110 () (_ BitVec 64))
(declare-fun temp10452_111 () (_ BitVec 64))
(declare-fun temp10452_112 () (_ BitVec 64))
(declare-fun temp10452_113 () (_ BitVec 64))
(declare-fun temp10452_114 () (_ BitVec 64))
(declare-fun temp10452_115 () (_ BitVec 64))
(declare-fun temp10452_116 () (_ BitVec 64))
(declare-fun temp10452_117 () (_ BitVec 64))
(declare-fun temp10452_118 () (_ BitVec 64))
(declare-fun temp10452_119 () (_ BitVec 64))
(declare-fun temp10452_120 () (_ BitVec 64))
(declare-fun temp10452_121 () (_ BitVec 64))
(declare-fun temp10452_122 () (_ BitVec 64))
(declare-fun temp10452_123 () (_ BitVec 64))
(declare-fun temp10452_124 () (_ BitVec 64))
(declare-fun temp10452_125 () (_ BitVec 64))
(declare-fun temp10452_126 () (_ BitVec 64))
(declare-fun temp10452_127 () (_ BitVec 64))
(declare-fun temp10452_128 () (_ BitVec 64))
(declare-fun temp10452_129 () (_ BitVec 64))
(declare-fun temp10452_130 () (_ BitVec 64))
(declare-fun temp10452_131 () (_ BitVec 64))
(declare-fun temp10452_132 () (_ BitVec 64))
(declare-fun temp10452_133 () (_ BitVec 64))
(declare-fun temp10452_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10452_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10452_136 () (_ BitVec 64))
(declare-fun temp10452_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10452_138 () (_ BitVec 64))
(declare-fun temp10452_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10452_140 () (_ BitVec 64))
(declare-fun temp10452_141 () (_ BitVec 64))
(declare-fun temp10452_142 () (_ BitVec 64))
(declare-fun temp10452_143 () (_ BitVec 64))
(declare-fun temp10452_144 () (_ BitVec 64))
(declare-fun temp10452_145 () (_ BitVec 64))
(declare-fun temp10452_146 () (_ BitVec 64))
(declare-fun temp10452_147 () (_ BitVec 64))
(declare-fun temp10452_148 () (_ BitVec 64))
(declare-fun temp10452_149 () (_ BitVec 64))
(declare-fun temp10452_150 () (_ BitVec 64))
(declare-fun temp10452_151 () (_ BitVec 64))
(declare-fun temp10452_152 () (_ BitVec 64))
(declare-fun temp10452_153 () (_ BitVec 64))
(declare-fun temp10452_154 () (_ BitVec 64))
(declare-fun temp10452_155 () (_ BitVec 64))
(declare-fun temp10452_157 () (_ BitVec 64))
(declare-fun temp10452_158 () (_ BitVec 64))
(declare-fun temp10452_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10452_159 () (_ BitVec 64))
(declare-fun temp10452_160 () (_ BitVec 64))
(declare-fun temp10452_162 () (_ BitVec 64))
(declare-fun temp10452_163 () (_ BitVec 64))
(declare-fun temp10452_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10452_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10452_165 () (_ BitVec 64))
(declare-fun temp10452_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10452_167 () (_ BitVec 64))
(declare-fun temp10452_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10452_169 () (_ BitVec 64))
(declare-fun temp10452_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10452_171 () (_ BitVec 64))
(declare-fun temp10452_172 () (_ BitVec 64))
(declare-fun temp10452_173 () (_ BitVec 64))
(declare-fun temp10452_174 () (_ BitVec 64))
(declare-fun temp10452_175 () (_ BitVec 64))
(declare-fun temp10452_176 () (_ BitVec 64))
(declare-fun temp10452_177 () (_ BitVec 64))
(declare-fun temp10452_178 () (_ BitVec 64))
(declare-fun temp10452_179 () (_ BitVec 64))
(declare-fun temp10452_180 () (_ BitVec 64))
(declare-fun temp10452_181 () (_ BitVec 64))
(declare-fun temp10452_182 () (_ BitVec 64))
(declare-fun temp10452_183 () (_ BitVec 64))
(declare-fun temp10452_184 () (_ BitVec 64))
(declare-fun temp10452_185 () (_ BitVec 64))
(declare-fun temp10452_186 () (_ BitVec 64))
(declare-fun temp10452_187 () (_ BitVec 64))
(declare-fun temp10452_188 () (_ BitVec 64))
(declare-fun temp10452_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10452_190 () (_ BitVec 64))
(declare-fun temp10452_192 () (_ BitVec 64))
(declare-fun temp10452_193 () (_ BitVec 64))
(declare-fun temp10452_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10452_194 () (_ BitVec 64))
(declare-fun temp10452_195 () (_ BitVec 64))
(declare-fun temp10452_197 () (_ BitVec 64))
(declare-fun temp10452_198 () (_ BitVec 64))
(declare-fun temp10452_196 () (_ BitVec 64))
(declare-fun temp10452_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10452_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10452_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10452_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10452_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10452_204 () (_ BitVec 64))
(declare-fun temp10452_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10452_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10452_207 () (_ BitVec 64))
(declare-fun temp10452_208 () (_ BitVec 64))
(declare-fun temp10452_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10452_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10452_211 () (_ BitVec 64))
(declare-fun temp10452_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10452_213 () (_ BitVec 64))
(declare-fun temp10452_214 () (_ BitVec 64))
(declare-fun temp10452_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10452_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10452_217 () (_ BitVec 64))
(declare-fun temp10452_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10452_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10452_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4469136 () (_ BitVec 64))
(declare-fun var4731280 () (_ BitVec 64))
(declare-fun temp10452_221 () (_ BitVec 64))
(declare-fun var212414 () (_ BitVec 64))
(declare-fun temp10452_222 () (_ BitVec 64))
(declare-fun temp10452_223 () (_ BitVec 64))
(declare-fun var5060227 () (_ BitVec 64))
(declare-fun var5060229 () (_ BitVec 64))
(declare-fun var5125772 () (_ BitVec 64))
(declare-fun var5125773 () (_ BitVec 64))
(declare-fun temp10452_224 () (_ BitVec 64))
(declare-fun temp10452_225 () (_ BitVec 64))
(declare-fun var6370068 () (_ BitVec 64))
(declare-fun var6370035 () (_ BitVec 64))
(declare-fun var6238599 () (_ BitVec 64))
(declare-fun var6238595 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp10452_226 () (_ BitVec 64))
(assert (= temp10452_1 #x0000000000000001))
(assert (= var77203 temp10452_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10452_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10452_2)))
(assert (= temp10452_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10452_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10452_4 #x0000000000000000))
(assert (= var210941 temp10452_4))
(assert (= temp10452_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10452_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10452_6 #x0000000000000000))
(assert (= var210986 temp10452_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10452_7 #x0000000000000000))
(assert (= temp10452_8 temp10452_7))
(assert (= temp10452_9 (select ARGNAME_padding_NAMEEND_VAL temp10452_8)))
(assert (= temp10452_10 #x0000000000000001))
(assert (= temp10452_11 temp10452_10))
(assert (= temp10452_12 (select ARGNAME_padding_NAMEEND_VAL temp10452_11)))
(assert (= temp10452_13 #x0000000000000002))
(assert (= temp10452_14 temp10452_13))
(assert (= temp10452_15 (select ARGNAME_padding_NAMEEND_VAL temp10452_14)))
(assert (= temp10452_16 #x0000000000000003))
(assert (= temp10452_17 temp10452_16))
(assert (= temp10452_18 (select ARGNAME_padding_NAMEEND_VAL temp10452_17)))
(assert (= temp10452_19 #x0000000000000004))
(assert (= temp10452_20 temp10452_19))
(assert (= temp10452_21 (select ARGNAME_padding_NAMEEND_VAL temp10452_20)))
(assert (= temp10452_22 #x0000000000000005))
(assert (= temp10452_23 temp10452_22))
(assert (= temp10452_24 (select ARGNAME_padding_NAMEEND_VAL temp10452_23)))
(assert (= temp10452_25 #x0000000000000000))
(assert (= temp10452_26 #x0000000000000000))
(assert (= temp10452_27 temp10452_26))
(assert (= temp10452_28 (select ARGNAME_padding_NAMEEND_VAL temp10452_27)))
(assert (= temp10452_29 #x0000000000000000))
(assert (= temp10452_30 #x0000000000000001))
(assert (= temp10452_31 temp10452_30))
(assert (= temp10452_32 (select ARGNAME_padding_NAMEEND_VAL temp10452_31)))
(assert (= temp10452_33 #x0000000000000000))
(assert (= temp10452_34 #x0000000000000002))
(assert (= temp10452_35 temp10452_34))
(assert (= temp10452_36 (select ARGNAME_padding_NAMEEND_VAL temp10452_35)))
(assert (= temp10452_37 #x0000000000000000))
(assert (= temp10452_38 #x0000000000000003))
(assert (= temp10452_39 temp10452_38))
(assert (= temp10452_40 (select ARGNAME_padding_NAMEEND_VAL temp10452_39)))
(assert (= temp10452_41 #x0000000000000000))
(assert (= temp10452_42 #x0000000000000004))
(assert (= temp10452_43 temp10452_42))
(assert (= temp10452_44 (select ARGNAME_padding_NAMEEND_VAL temp10452_43)))
(assert (= temp10452_45 #x0000000000000000))
(assert (= temp10452_46 #x0000000000000005))
(assert (= temp10452_47 temp10452_46))
(assert (= temp10452_48 (select ARGNAME_padding_NAMEEND_VAL temp10452_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10452_28 temp10452_25)
             (bvslt temp10452_32 temp10452_29)
             (bvslt temp10452_36 temp10452_33)
             (bvslt temp10452_40 temp10452_37)
             (bvslt temp10452_44 temp10452_41)
             (bvslt temp10452_48 temp10452_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10452_49 #x0000000000000000))
(assert (= var1191714 temp10452_49))
(assert (= temp10452_50 #x0000000000000000))
(assert (= temp10452_51 temp10452_50))
(assert (= temp10452_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10452_51)))
(assert (= temp10452_53 #x0000000000000001))
(assert (= temp10452_54 temp10452_53))
(assert (= temp10452_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10452_54)))
(assert (= temp10452_56 #x0000000000000002))
(assert (= temp10452_57 temp10452_56))
(assert (= temp10452_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10452_57)))
(assert (= temp10452_59 #x0000000000000003))
(assert (= temp10452_60 temp10452_59))
(assert (= temp10452_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10452_60)))
(assert (= temp10452_62 #x0000000000000004))
(assert (= temp10452_63 temp10452_62))
(assert (= temp10452_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10452_63)))
(assert (= temp10452_65 #x0000000000000005))
(assert (= temp10452_66 temp10452_65))
(assert (= temp10452_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10452_66)))
(assert (= temp10452_68 #x0000000000000000))
(assert (= temp10452_69 #x0000000000000000))
(assert (= temp10452_70 temp10452_69))
(assert (= temp10452_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10452_70)))
(assert (= temp10452_72 #x0000000000000000))
(assert (= temp10452_73 #x0000000000000001))
(assert (= temp10452_74 temp10452_73))
(assert (= temp10452_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10452_74)))
(assert (= temp10452_76 #x0000000000000000))
(assert (= temp10452_77 #x0000000000000002))
(assert (= temp10452_78 temp10452_77))
(assert (= temp10452_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10452_78)))
(assert (= temp10452_80 #x0000000000000000))
(assert (= temp10452_81 #x0000000000000003))
(assert (= temp10452_82 temp10452_81))
(assert (= temp10452_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10452_82)))
(assert (= temp10452_84 #x0000000000000000))
(assert (= temp10452_85 #x0000000000000004))
(assert (= temp10452_86 temp10452_85))
(assert (= temp10452_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10452_86)))
(assert (= temp10452_88 #x0000000000000000))
(assert (= temp10452_89 #x0000000000000005))
(assert (= temp10452_90 temp10452_89))
(assert (= temp10452_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10452_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10452_71 temp10452_68)
             (bvslt temp10452_75 temp10452_72)
             (bvslt temp10452_79 temp10452_76)
             (bvslt temp10452_83 temp10452_80)
             (bvslt temp10452_87 temp10452_84)
             (bvslt temp10452_91 temp10452_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10452_92 #x0000000000000000))
(assert (= var1191725 temp10452_92))
(assert (= temp10452_93 #x0000000000000000))
(assert (= temp10452_94 temp10452_93))
(assert (= temp10452_95 (select ARGNAME_stride_NAMEEND_VAL temp10452_94)))
(assert (= temp10452_96 #x0000000000000001))
(assert (= temp10452_97 temp10452_96))
(assert (= temp10452_98 (select ARGNAME_stride_NAMEEND_VAL temp10452_97)))
(assert (= temp10452_99 #x0000000000000002))
(assert (= temp10452_100 temp10452_99))
(assert (= temp10452_101 (select ARGNAME_stride_NAMEEND_VAL temp10452_100)))
(assert (= temp10452_102 #x0000000000000003))
(assert (= temp10452_103 temp10452_102))
(assert (= temp10452_104 (select ARGNAME_stride_NAMEEND_VAL temp10452_103)))
(assert (= temp10452_105 #x0000000000000004))
(assert (= temp10452_106 temp10452_105))
(assert (= temp10452_107 (select ARGNAME_stride_NAMEEND_VAL temp10452_106)))
(assert (= temp10452_108 #x0000000000000005))
(assert (= temp10452_109 temp10452_108))
(assert (= temp10452_110 (select ARGNAME_stride_NAMEEND_VAL temp10452_109)))
(assert (= temp10452_111 #x0000000000000000))
(assert (= temp10452_112 #x0000000000000000))
(assert (= temp10452_113 temp10452_112))
(assert (= temp10452_114 (select ARGNAME_stride_NAMEEND_VAL temp10452_113)))
(assert (= temp10452_115 #x0000000000000000))
(assert (= temp10452_116 #x0000000000000001))
(assert (= temp10452_117 temp10452_116))
(assert (= temp10452_118 (select ARGNAME_stride_NAMEEND_VAL temp10452_117)))
(assert (= temp10452_119 #x0000000000000000))
(assert (= temp10452_120 #x0000000000000002))
(assert (= temp10452_121 temp10452_120))
(assert (= temp10452_122 (select ARGNAME_stride_NAMEEND_VAL temp10452_121)))
(assert (= temp10452_123 #x0000000000000000))
(assert (= temp10452_124 #x0000000000000003))
(assert (= temp10452_125 temp10452_124))
(assert (= temp10452_126 (select ARGNAME_stride_NAMEEND_VAL temp10452_125)))
(assert (= temp10452_127 #x0000000000000000))
(assert (= temp10452_128 #x0000000000000004))
(assert (= temp10452_129 temp10452_128))
(assert (= temp10452_130 (select ARGNAME_stride_NAMEEND_VAL temp10452_129)))
(assert (= temp10452_131 #x0000000000000000))
(assert (= temp10452_132 #x0000000000000005))
(assert (= temp10452_133 temp10452_132))
(assert (= temp10452_134 (select ARGNAME_stride_NAMEEND_VAL temp10452_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10452_114 temp10452_111)
             (bvsle temp10452_118 temp10452_115)
             (bvsle temp10452_122 temp10452_119)
             (bvsle temp10452_126 temp10452_123)
             (bvsle temp10452_130 temp10452_127)
             (bvsle temp10452_134 temp10452_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10452_135 #x0000000000000000))
(assert (= var1191735 temp10452_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10452_136 #x0000000000000001))
(assert (= var1191747 temp10452_136))
(assert (= temp10452_137 #x0000000000000000))
(assert (= var1179826 temp10452_137))
(assert (= temp10452_138 #x0000000000000000))
(assert (= temp10452_139 temp10452_138))
(assert (= temp10452_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10452_139)))
(assert (= temp10452_141 #x0000000000000001))
(assert (= temp10452_142 temp10452_141))
(assert (= temp10452_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10452_142)))
(assert (= temp10452_144 #x0000000000000002))
(assert (= temp10452_145 temp10452_144))
(assert (= temp10452_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10452_145)))
(assert (= temp10452_147 #x0000000000000003))
(assert (= temp10452_148 temp10452_147))
(assert (= temp10452_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10452_148)))
(assert (= temp10452_150 #x0000000000000004))
(assert (= temp10452_151 temp10452_150))
(assert (= temp10452_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10452_151)))
(assert (= temp10452_153 #x0000000000000005))
(assert (= temp10452_154 temp10452_153))
(assert (= temp10452_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10452_154)))
(assert (= temp10452_157 var1179826))
(assert (= temp10452_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10452_157)))
(assert (= temp10452_156 temp10452_158))
(assert (= var1191780
   (ite (bvslt temp10452_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10452_159 #x0000000000000000))
(assert (= var1191780 temp10452_159))
(assert (= temp10452_160 #x0000000000000000))
(assert (= var1179826 temp10452_160))
(assert (= temp10452_162 var1179826))
(assert (= temp10452_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10452_162)))
(assert (= temp10452_161 temp10452_163))
(assert (= var1191802 (bvsmod temp10452_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10452_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10452_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10452_165 #x0000000000000001))
(assert (= var1191803 temp10452_165))
(assert (= temp10452_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10452_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10452_167 #x0000000000000001))
(assert (= var1191823 temp10452_167))
(assert (= temp10452_168 #x0000000000000001))
(assert (= var1180714 temp10452_168))
(assert (= temp10452_169 #x0000000000000000))
(assert (= temp10452_170 temp10452_169))
(assert (= temp10452_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10452_170)))
(assert (= temp10452_172 #x0000000000000001))
(assert (= temp10452_173 temp10452_172))
(assert (= temp10452_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10452_173)))
(assert (= temp10452_175 #x0000000000000002))
(assert (= temp10452_176 temp10452_175))
(assert (= temp10452_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10452_176)))
(assert (= temp10452_178 #x0000000000000003))
(assert (= temp10452_179 temp10452_178))
(assert (= temp10452_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10452_179)))
(assert (= temp10452_181 #x0000000000000004))
(assert (= temp10452_182 temp10452_181))
(assert (= temp10452_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10452_182)))
(assert (= temp10452_184 #x0000000000000005))
(assert (= temp10452_185 temp10452_184))
(assert (= temp10452_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10452_185)))
(assert (= temp10452_187 #x0000000000000000))
(assert (= temp10452_188
   (ite (bvslt var1180714 temp10452_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10452_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10452_188)))
(assert (= var1191831 temp10452_189))
(assert (bvslt (ite (bvslt var1180714 temp10452_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10452_190 #x0000000000000001))
(assert (= var1180714 temp10452_190))
(assert (= temp10452_192 var1180714))
(assert (= temp10452_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10452_192)))
(assert (= temp10452_191 temp10452_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10452_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10452_194 #x0000000000000001))
(assert (= var1191836 temp10452_194))
(assert (= temp10452_195 #x0000000000000000))
(assert (= var1179826 temp10452_195))
(assert (= temp10452_197 var1179826))
(assert (= temp10452_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10452_197)))
(assert (= temp10452_196 temp10452_198))
(assert (= temp10452_199 #x0000000000000002))
(assert (= var1586025 temp10452_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10452_200 #x0000000000000001))
(assert (= var1191993 temp10452_200))
(assert (= temp10452_201 #x0000000000000001))
(assert (= var2700303 temp10452_201))
(assert (= temp10452_202 #x0000000000000001))
(assert (= var2962447 temp10452_202))
(assert (= temp10452_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10452_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10452_204 #x0000000000000001))
(assert (= var211058 temp10452_204))
(assert (= temp10452_205 #x0000000000000001))
(assert (= var211188 temp10452_205))
(assert (= var3879401 var211188))
(assert (= temp10452_206 #x0000000000000000))
(assert (= var3866802 temp10452_206))
(assert (= temp10452_207 #x0000000000000000))
(assert (= temp10452_208
   (ite (bvslt var3866802 temp10452_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10452_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10452_208)))
(assert (= var3879420 temp10452_209))
(assert (bvslt (ite (bvslt var3866802 temp10452_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10452_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10452_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10452_211 #x0000000000000000))
(assert (= var3879421 temp10452_211))
(assert (= temp10452_212 #x0000000000000001))
(assert (= var3867690 temp10452_212))
(assert (= temp10452_213 #x0000000000000000))
(assert (= temp10452_214
   (ite (bvslt var3867690 temp10452_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10452_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10452_214)))
(assert (= var3879423 temp10452_215))
(assert (bvslt (ite (bvslt var3867690 temp10452_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10452_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10452_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10452_217 #x0000000000000001))
(assert (= var3879424 temp10452_217))
(assert (= temp10452_218 #x0000000000000000))
(assert (= var4079423 temp10452_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10452_219 #x0000000000000002))
(assert (= var4208259 temp10452_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10452_220 #x0000000000000000))
(assert (= var4273820 temp10452_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4469136 var211201))
(assert (= var4731280 var211201))
(assert (= temp10452_221 #x0000000000000001))
(assert (= var212414
   (ite (= ARGNAME_groups_NAMEEND temp10452_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10452_222 #x0000000000000001))
(assert (= var212414 temp10452_222))
(assert (= temp10452_223 #x0000000000000002))
(assert (= var5060227 temp10452_223))
(assert (= var5060229 (bvsub ARGNAME_weight_NAMEEND_DIM var5060227)))
(assert (= var5125772 var5060227))
(assert (= var5125773 var5060229))
(assert (= temp10452_224 #x0000000000000001))
(assert (= var211058 temp10452_224))
(assert (= temp10452_225 #x0000000000000000))
(assert (= var6370068 temp10452_225))
(assert (= var6370035 var6370068))
(assert (= var6238599 var6370035))
(assert (= var6238595 var6238599))
(assert (= var212669 var6238595))
(assert (= temp10452_226 #x0000000000000000))
(assert (= var212669 temp10452_226))
(model-add temp10452_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10452_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10452_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10452_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





