(declare-fun temp10962_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10962_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10962_3 () (_ BitVec 64))
(declare-fun temp10962_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10962_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10962_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10962_7 () (_ BitVec 64))
(declare-fun temp10962_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10962_9 () (_ BitVec 64))
(declare-fun temp10962_10 () (_ BitVec 64))
(declare-fun temp10962_11 () (_ BitVec 64))
(declare-fun temp10962_12 () (_ BitVec 64))
(declare-fun temp10962_13 () (_ BitVec 64))
(declare-fun temp10962_14 () (_ BitVec 64))
(declare-fun temp10962_15 () (_ BitVec 64))
(declare-fun temp10962_16 () (_ BitVec 64))
(declare-fun temp10962_17 () (_ BitVec 64))
(declare-fun temp10962_18 () (_ BitVec 64))
(declare-fun temp10962_19 () (_ BitVec 64))
(declare-fun temp10962_20 () (_ BitVec 64))
(declare-fun temp10962_21 () (_ BitVec 64))
(declare-fun temp10962_22 () (_ BitVec 64))
(declare-fun temp10962_23 () (_ BitVec 64))
(declare-fun temp10962_24 () (_ BitVec 64))
(declare-fun temp10962_25 () (_ BitVec 64))
(declare-fun temp10962_26 () (_ BitVec 64))
(declare-fun temp10962_27 () (_ BitVec 64))
(declare-fun temp10962_28 () (_ BitVec 64))
(declare-fun temp10962_29 () (_ BitVec 64))
(declare-fun temp10962_30 () (_ BitVec 64))
(declare-fun temp10962_31 () (_ BitVec 64))
(declare-fun temp10962_32 () (_ BitVec 64))
(declare-fun temp10962_33 () (_ BitVec 64))
(declare-fun temp10962_34 () (_ BitVec 64))
(declare-fun temp10962_35 () (_ BitVec 64))
(declare-fun temp10962_36 () (_ BitVec 64))
(declare-fun temp10962_37 () (_ BitVec 64))
(declare-fun temp10962_38 () (_ BitVec 64))
(declare-fun temp10962_39 () (_ BitVec 64))
(declare-fun temp10962_40 () (_ BitVec 64))
(declare-fun temp10962_41 () (_ BitVec 64))
(declare-fun temp10962_42 () (_ BitVec 64))
(declare-fun temp10962_43 () (_ BitVec 64))
(declare-fun temp10962_44 () (_ BitVec 64))
(declare-fun temp10962_45 () (_ BitVec 64))
(declare-fun temp10962_46 () (_ BitVec 64))
(declare-fun temp10962_47 () (_ BitVec 64))
(declare-fun temp10962_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10962_49 () (_ BitVec 64))
(declare-fun temp10962_50 () (_ BitVec 64))
(declare-fun temp10962_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10962_52 () (_ BitVec 64))
(declare-fun temp10962_53 () (_ BitVec 64))
(declare-fun temp10962_54 () (_ BitVec 64))
(declare-fun temp10962_55 () (_ BitVec 64))
(declare-fun temp10962_56 () (_ BitVec 64))
(declare-fun temp10962_57 () (_ BitVec 64))
(declare-fun temp10962_58 () (_ BitVec 64))
(declare-fun temp10962_59 () (_ BitVec 64))
(declare-fun temp10962_60 () (_ BitVec 64))
(declare-fun temp10962_61 () (_ BitVec 64))
(declare-fun temp10962_62 () (_ BitVec 64))
(declare-fun temp10962_63 () (_ BitVec 64))
(declare-fun temp10962_64 () (_ BitVec 64))
(declare-fun temp10962_65 () (_ BitVec 64))
(declare-fun temp10962_66 () (_ BitVec 64))
(declare-fun temp10962_67 () (_ BitVec 64))
(declare-fun temp10962_68 () (_ BitVec 64))
(declare-fun temp10962_69 () (_ BitVec 64))
(declare-fun temp10962_70 () (_ BitVec 64))
(declare-fun temp10962_71 () (_ BitVec 64))
(declare-fun temp10962_72 () (_ BitVec 64))
(declare-fun temp10962_73 () (_ BitVec 64))
(declare-fun temp10962_74 () (_ BitVec 64))
(declare-fun temp10962_75 () (_ BitVec 64))
(declare-fun temp10962_76 () (_ BitVec 64))
(declare-fun temp10962_77 () (_ BitVec 64))
(declare-fun temp10962_78 () (_ BitVec 64))
(declare-fun temp10962_79 () (_ BitVec 64))
(declare-fun temp10962_80 () (_ BitVec 64))
(declare-fun temp10962_81 () (_ BitVec 64))
(declare-fun temp10962_82 () (_ BitVec 64))
(declare-fun temp10962_83 () (_ BitVec 64))
(declare-fun temp10962_84 () (_ BitVec 64))
(declare-fun temp10962_85 () (_ BitVec 64))
(declare-fun temp10962_86 () (_ BitVec 64))
(declare-fun temp10962_87 () (_ BitVec 64))
(declare-fun temp10962_88 () (_ BitVec 64))
(declare-fun temp10962_89 () (_ BitVec 64))
(declare-fun temp10962_90 () (_ BitVec 64))
(declare-fun temp10962_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10962_92 () (_ BitVec 64))
(declare-fun temp10962_93 () (_ BitVec 64))
(declare-fun temp10962_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10962_95 () (_ BitVec 64))
(declare-fun temp10962_96 () (_ BitVec 64))
(declare-fun temp10962_97 () (_ BitVec 64))
(declare-fun temp10962_98 () (_ BitVec 64))
(declare-fun temp10962_99 () (_ BitVec 64))
(declare-fun temp10962_100 () (_ BitVec 64))
(declare-fun temp10962_101 () (_ BitVec 64))
(declare-fun temp10962_102 () (_ BitVec 64))
(declare-fun temp10962_103 () (_ BitVec 64))
(declare-fun temp10962_104 () (_ BitVec 64))
(declare-fun temp10962_105 () (_ BitVec 64))
(declare-fun temp10962_106 () (_ BitVec 64))
(declare-fun temp10962_107 () (_ BitVec 64))
(declare-fun temp10962_108 () (_ BitVec 64))
(declare-fun temp10962_109 () (_ BitVec 64))
(declare-fun temp10962_110 () (_ BitVec 64))
(declare-fun temp10962_111 () (_ BitVec 64))
(declare-fun temp10962_112 () (_ BitVec 64))
(declare-fun temp10962_113 () (_ BitVec 64))
(declare-fun temp10962_114 () (_ BitVec 64))
(declare-fun temp10962_115 () (_ BitVec 64))
(declare-fun temp10962_116 () (_ BitVec 64))
(declare-fun temp10962_117 () (_ BitVec 64))
(declare-fun temp10962_118 () (_ BitVec 64))
(declare-fun temp10962_119 () (_ BitVec 64))
(declare-fun temp10962_120 () (_ BitVec 64))
(declare-fun temp10962_121 () (_ BitVec 64))
(declare-fun temp10962_122 () (_ BitVec 64))
(declare-fun temp10962_123 () (_ BitVec 64))
(declare-fun temp10962_124 () (_ BitVec 64))
(declare-fun temp10962_125 () (_ BitVec 64))
(declare-fun temp10962_126 () (_ BitVec 64))
(declare-fun temp10962_127 () (_ BitVec 64))
(declare-fun temp10962_128 () (_ BitVec 64))
(declare-fun temp10962_129 () (_ BitVec 64))
(declare-fun temp10962_130 () (_ BitVec 64))
(declare-fun temp10962_131 () (_ BitVec 64))
(declare-fun temp10962_132 () (_ BitVec 64))
(declare-fun temp10962_133 () (_ BitVec 64))
(declare-fun temp10962_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10962_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10962_136 () (_ BitVec 64))
(declare-fun temp10962_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10962_138 () (_ BitVec 64))
(declare-fun temp10962_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10962_140 () (_ BitVec 64))
(declare-fun temp10962_141 () (_ BitVec 64))
(declare-fun temp10962_142 () (_ BitVec 64))
(declare-fun temp10962_143 () (_ BitVec 64))
(declare-fun temp10962_144 () (_ BitVec 64))
(declare-fun temp10962_145 () (_ BitVec 64))
(declare-fun temp10962_146 () (_ BitVec 64))
(declare-fun temp10962_147 () (_ BitVec 64))
(declare-fun temp10962_148 () (_ BitVec 64))
(declare-fun temp10962_149 () (_ BitVec 64))
(declare-fun temp10962_150 () (_ BitVec 64))
(declare-fun temp10962_151 () (_ BitVec 64))
(declare-fun temp10962_152 () (_ BitVec 64))
(declare-fun temp10962_153 () (_ BitVec 64))
(declare-fun temp10962_154 () (_ BitVec 64))
(declare-fun temp10962_155 () (_ BitVec 64))
(declare-fun temp10962_157 () (_ BitVec 64))
(declare-fun temp10962_158 () (_ BitVec 64))
(declare-fun temp10962_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10962_159 () (_ BitVec 64))
(declare-fun temp10962_160 () (_ BitVec 64))
(declare-fun temp10962_162 () (_ BitVec 64))
(declare-fun temp10962_163 () (_ BitVec 64))
(declare-fun temp10962_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10962_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10962_165 () (_ BitVec 64))
(declare-fun temp10962_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10962_167 () (_ BitVec 64))
(declare-fun temp10962_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10962_169 () (_ BitVec 64))
(declare-fun temp10962_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10962_171 () (_ BitVec 64))
(declare-fun temp10962_172 () (_ BitVec 64))
(declare-fun temp10962_173 () (_ BitVec 64))
(declare-fun temp10962_174 () (_ BitVec 64))
(declare-fun temp10962_175 () (_ BitVec 64))
(declare-fun temp10962_176 () (_ BitVec 64))
(declare-fun temp10962_177 () (_ BitVec 64))
(declare-fun temp10962_178 () (_ BitVec 64))
(declare-fun temp10962_179 () (_ BitVec 64))
(declare-fun temp10962_180 () (_ BitVec 64))
(declare-fun temp10962_181 () (_ BitVec 64))
(declare-fun temp10962_182 () (_ BitVec 64))
(declare-fun temp10962_183 () (_ BitVec 64))
(declare-fun temp10962_184 () (_ BitVec 64))
(declare-fun temp10962_185 () (_ BitVec 64))
(declare-fun temp10962_186 () (_ BitVec 64))
(declare-fun temp10962_187 () (_ BitVec 64))
(declare-fun temp10962_188 () (_ BitVec 64))
(declare-fun temp10962_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10962_190 () (_ BitVec 64))
(declare-fun temp10962_192 () (_ BitVec 64))
(declare-fun temp10962_193 () (_ BitVec 64))
(declare-fun temp10962_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10962_194 () (_ BitVec 64))
(declare-fun temp10962_195 () (_ BitVec 64))
(declare-fun temp10962_197 () (_ BitVec 64))
(declare-fun temp10962_198 () (_ BitVec 64))
(declare-fun temp10962_196 () (_ BitVec 64))
(declare-fun temp10962_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10962_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10962_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10962_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10962_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10962_204 () (_ BitVec 64))
(declare-fun temp10962_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10962_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10962_207 () (_ BitVec 64))
(declare-fun temp10962_208 () (_ BitVec 64))
(declare-fun temp10962_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10962_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10962_211 () (_ BitVec 64))
(declare-fun temp10962_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10962_213 () (_ BitVec 64))
(declare-fun temp10962_214 () (_ BitVec 64))
(declare-fun temp10962_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10962_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10962_217 () (_ BitVec 64))
(declare-fun temp10962_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10962_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10962_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp10962_221 () (_ BitVec 64))
(assert (= temp10962_1 #x0000000000000001))
(assert (= var77203 temp10962_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10962_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10962_2)))
(assert (= temp10962_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10962_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10962_4 #x0000000000000000))
(assert (= var210941 temp10962_4))
(assert (= temp10962_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10962_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10962_6 #x0000000000000000))
(assert (= var210986 temp10962_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10962_7 #x0000000000000000))
(assert (= temp10962_8 temp10962_7))
(assert (= temp10962_9 (select ARGNAME_padding_NAMEEND_VAL temp10962_8)))
(assert (= temp10962_10 #x0000000000000001))
(assert (= temp10962_11 temp10962_10))
(assert (= temp10962_12 (select ARGNAME_padding_NAMEEND_VAL temp10962_11)))
(assert (= temp10962_13 #x0000000000000002))
(assert (= temp10962_14 temp10962_13))
(assert (= temp10962_15 (select ARGNAME_padding_NAMEEND_VAL temp10962_14)))
(assert (= temp10962_16 #x0000000000000003))
(assert (= temp10962_17 temp10962_16))
(assert (= temp10962_18 (select ARGNAME_padding_NAMEEND_VAL temp10962_17)))
(assert (= temp10962_19 #x0000000000000004))
(assert (= temp10962_20 temp10962_19))
(assert (= temp10962_21 (select ARGNAME_padding_NAMEEND_VAL temp10962_20)))
(assert (= temp10962_22 #x0000000000000005))
(assert (= temp10962_23 temp10962_22))
(assert (= temp10962_24 (select ARGNAME_padding_NAMEEND_VAL temp10962_23)))
(assert (= temp10962_25 #x0000000000000000))
(assert (= temp10962_26 #x0000000000000000))
(assert (= temp10962_27 temp10962_26))
(assert (= temp10962_28 (select ARGNAME_padding_NAMEEND_VAL temp10962_27)))
(assert (= temp10962_29 #x0000000000000000))
(assert (= temp10962_30 #x0000000000000001))
(assert (= temp10962_31 temp10962_30))
(assert (= temp10962_32 (select ARGNAME_padding_NAMEEND_VAL temp10962_31)))
(assert (= temp10962_33 #x0000000000000000))
(assert (= temp10962_34 #x0000000000000002))
(assert (= temp10962_35 temp10962_34))
(assert (= temp10962_36 (select ARGNAME_padding_NAMEEND_VAL temp10962_35)))
(assert (= temp10962_37 #x0000000000000000))
(assert (= temp10962_38 #x0000000000000003))
(assert (= temp10962_39 temp10962_38))
(assert (= temp10962_40 (select ARGNAME_padding_NAMEEND_VAL temp10962_39)))
(assert (= temp10962_41 #x0000000000000000))
(assert (= temp10962_42 #x0000000000000004))
(assert (= temp10962_43 temp10962_42))
(assert (= temp10962_44 (select ARGNAME_padding_NAMEEND_VAL temp10962_43)))
(assert (= temp10962_45 #x0000000000000000))
(assert (= temp10962_46 #x0000000000000005))
(assert (= temp10962_47 temp10962_46))
(assert (= temp10962_48 (select ARGNAME_padding_NAMEEND_VAL temp10962_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10962_28 temp10962_25)
             (bvslt temp10962_32 temp10962_29)
             (bvslt temp10962_36 temp10962_33)
             (bvslt temp10962_40 temp10962_37)
             (bvslt temp10962_44 temp10962_41)
             (bvslt temp10962_48 temp10962_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10962_49 #x0000000000000000))
(assert (= var1191714 temp10962_49))
(assert (= temp10962_50 #x0000000000000000))
(assert (= temp10962_51 temp10962_50))
(assert (= temp10962_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10962_51)))
(assert (= temp10962_53 #x0000000000000001))
(assert (= temp10962_54 temp10962_53))
(assert (= temp10962_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10962_54)))
(assert (= temp10962_56 #x0000000000000002))
(assert (= temp10962_57 temp10962_56))
(assert (= temp10962_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10962_57)))
(assert (= temp10962_59 #x0000000000000003))
(assert (= temp10962_60 temp10962_59))
(assert (= temp10962_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10962_60)))
(assert (= temp10962_62 #x0000000000000004))
(assert (= temp10962_63 temp10962_62))
(assert (= temp10962_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10962_63)))
(assert (= temp10962_65 #x0000000000000005))
(assert (= temp10962_66 temp10962_65))
(assert (= temp10962_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10962_66)))
(assert (= temp10962_68 #x0000000000000000))
(assert (= temp10962_69 #x0000000000000000))
(assert (= temp10962_70 temp10962_69))
(assert (= temp10962_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10962_70)))
(assert (= temp10962_72 #x0000000000000000))
(assert (= temp10962_73 #x0000000000000001))
(assert (= temp10962_74 temp10962_73))
(assert (= temp10962_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10962_74)))
(assert (= temp10962_76 #x0000000000000000))
(assert (= temp10962_77 #x0000000000000002))
(assert (= temp10962_78 temp10962_77))
(assert (= temp10962_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10962_78)))
(assert (= temp10962_80 #x0000000000000000))
(assert (= temp10962_81 #x0000000000000003))
(assert (= temp10962_82 temp10962_81))
(assert (= temp10962_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10962_82)))
(assert (= temp10962_84 #x0000000000000000))
(assert (= temp10962_85 #x0000000000000004))
(assert (= temp10962_86 temp10962_85))
(assert (= temp10962_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10962_86)))
(assert (= temp10962_88 #x0000000000000000))
(assert (= temp10962_89 #x0000000000000005))
(assert (= temp10962_90 temp10962_89))
(assert (= temp10962_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10962_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10962_71 temp10962_68)
             (bvslt temp10962_75 temp10962_72)
             (bvslt temp10962_79 temp10962_76)
             (bvslt temp10962_83 temp10962_80)
             (bvslt temp10962_87 temp10962_84)
             (bvslt temp10962_91 temp10962_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10962_92 #x0000000000000000))
(assert (= var1191725 temp10962_92))
(assert (= temp10962_93 #x0000000000000000))
(assert (= temp10962_94 temp10962_93))
(assert (= temp10962_95 (select ARGNAME_stride_NAMEEND_VAL temp10962_94)))
(assert (= temp10962_96 #x0000000000000001))
(assert (= temp10962_97 temp10962_96))
(assert (= temp10962_98 (select ARGNAME_stride_NAMEEND_VAL temp10962_97)))
(assert (= temp10962_99 #x0000000000000002))
(assert (= temp10962_100 temp10962_99))
(assert (= temp10962_101 (select ARGNAME_stride_NAMEEND_VAL temp10962_100)))
(assert (= temp10962_102 #x0000000000000003))
(assert (= temp10962_103 temp10962_102))
(assert (= temp10962_104 (select ARGNAME_stride_NAMEEND_VAL temp10962_103)))
(assert (= temp10962_105 #x0000000000000004))
(assert (= temp10962_106 temp10962_105))
(assert (= temp10962_107 (select ARGNAME_stride_NAMEEND_VAL temp10962_106)))
(assert (= temp10962_108 #x0000000000000005))
(assert (= temp10962_109 temp10962_108))
(assert (= temp10962_110 (select ARGNAME_stride_NAMEEND_VAL temp10962_109)))
(assert (= temp10962_111 #x0000000000000000))
(assert (= temp10962_112 #x0000000000000000))
(assert (= temp10962_113 temp10962_112))
(assert (= temp10962_114 (select ARGNAME_stride_NAMEEND_VAL temp10962_113)))
(assert (= temp10962_115 #x0000000000000000))
(assert (= temp10962_116 #x0000000000000001))
(assert (= temp10962_117 temp10962_116))
(assert (= temp10962_118 (select ARGNAME_stride_NAMEEND_VAL temp10962_117)))
(assert (= temp10962_119 #x0000000000000000))
(assert (= temp10962_120 #x0000000000000002))
(assert (= temp10962_121 temp10962_120))
(assert (= temp10962_122 (select ARGNAME_stride_NAMEEND_VAL temp10962_121)))
(assert (= temp10962_123 #x0000000000000000))
(assert (= temp10962_124 #x0000000000000003))
(assert (= temp10962_125 temp10962_124))
(assert (= temp10962_126 (select ARGNAME_stride_NAMEEND_VAL temp10962_125)))
(assert (= temp10962_127 #x0000000000000000))
(assert (= temp10962_128 #x0000000000000004))
(assert (= temp10962_129 temp10962_128))
(assert (= temp10962_130 (select ARGNAME_stride_NAMEEND_VAL temp10962_129)))
(assert (= temp10962_131 #x0000000000000000))
(assert (= temp10962_132 #x0000000000000005))
(assert (= temp10962_133 temp10962_132))
(assert (= temp10962_134 (select ARGNAME_stride_NAMEEND_VAL temp10962_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10962_114 temp10962_111)
             (bvsle temp10962_118 temp10962_115)
             (bvsle temp10962_122 temp10962_119)
             (bvsle temp10962_126 temp10962_123)
             (bvsle temp10962_130 temp10962_127)
             (bvsle temp10962_134 temp10962_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10962_135 #x0000000000000000))
(assert (= var1191735 temp10962_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10962_136 #x0000000000000001))
(assert (= var1191747 temp10962_136))
(assert (= temp10962_137 #x0000000000000000))
(assert (= var1179826 temp10962_137))
(assert (= temp10962_138 #x0000000000000000))
(assert (= temp10962_139 temp10962_138))
(assert (= temp10962_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10962_139)))
(assert (= temp10962_141 #x0000000000000001))
(assert (= temp10962_142 temp10962_141))
(assert (= temp10962_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10962_142)))
(assert (= temp10962_144 #x0000000000000002))
(assert (= temp10962_145 temp10962_144))
(assert (= temp10962_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10962_145)))
(assert (= temp10962_147 #x0000000000000003))
(assert (= temp10962_148 temp10962_147))
(assert (= temp10962_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10962_148)))
(assert (= temp10962_150 #x0000000000000004))
(assert (= temp10962_151 temp10962_150))
(assert (= temp10962_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10962_151)))
(assert (= temp10962_153 #x0000000000000005))
(assert (= temp10962_154 temp10962_153))
(assert (= temp10962_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10962_154)))
(assert (= temp10962_157 var1179826))
(assert (= temp10962_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10962_157)))
(assert (= temp10962_156 temp10962_158))
(assert (= var1191780
   (ite (bvslt temp10962_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10962_159 #x0000000000000000))
(assert (= var1191780 temp10962_159))
(assert (= temp10962_160 #x0000000000000000))
(assert (= var1179826 temp10962_160))
(assert (= temp10962_162 var1179826))
(assert (= temp10962_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10962_162)))
(assert (= temp10962_161 temp10962_163))
(assert (= var1191802 (bvsmod temp10962_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10962_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10962_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10962_165 #x0000000000000001))
(assert (= var1191803 temp10962_165))
(assert (= temp10962_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10962_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10962_167 #x0000000000000001))
(assert (= var1191823 temp10962_167))
(assert (= temp10962_168 #x0000000000000001))
(assert (= var1180714 temp10962_168))
(assert (= temp10962_169 #x0000000000000000))
(assert (= temp10962_170 temp10962_169))
(assert (= temp10962_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10962_170)))
(assert (= temp10962_172 #x0000000000000001))
(assert (= temp10962_173 temp10962_172))
(assert (= temp10962_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10962_173)))
(assert (= temp10962_175 #x0000000000000002))
(assert (= temp10962_176 temp10962_175))
(assert (= temp10962_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10962_176)))
(assert (= temp10962_178 #x0000000000000003))
(assert (= temp10962_179 temp10962_178))
(assert (= temp10962_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10962_179)))
(assert (= temp10962_181 #x0000000000000004))
(assert (= temp10962_182 temp10962_181))
(assert (= temp10962_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10962_182)))
(assert (= temp10962_184 #x0000000000000005))
(assert (= temp10962_185 temp10962_184))
(assert (= temp10962_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10962_185)))
(assert (= temp10962_187 #x0000000000000000))
(assert (= temp10962_188
   (ite (bvslt var1180714 temp10962_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10962_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10962_188)))
(assert (= var1191831 temp10962_189))
(assert (bvslt (ite (bvslt var1180714 temp10962_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10962_190 #x0000000000000001))
(assert (= var1180714 temp10962_190))
(assert (= temp10962_192 var1180714))
(assert (= temp10962_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10962_192)))
(assert (= temp10962_191 temp10962_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10962_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10962_194 #x0000000000000001))
(assert (= var1191836 temp10962_194))
(assert (= temp10962_195 #x0000000000000000))
(assert (= var1179826 temp10962_195))
(assert (= temp10962_197 var1179826))
(assert (= temp10962_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10962_197)))
(assert (= temp10962_196 temp10962_198))
(assert (= temp10962_199 #x0000000000000002))
(assert (= var1586025 temp10962_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10962_200 #x0000000000000001))
(assert (= var1191993 temp10962_200))
(assert (= temp10962_201 #x0000000000000001))
(assert (= var2700303 temp10962_201))
(assert (= temp10962_202 #x0000000000000001))
(assert (= var2962447 temp10962_202))
(assert (= temp10962_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10962_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10962_204 #x0000000000000001))
(assert (= var211058 temp10962_204))
(assert (= temp10962_205 #x0000000000000001))
(assert (= var211188 temp10962_205))
(assert (= var3879401 var211188))
(assert (= temp10962_206 #x0000000000000000))
(assert (= var3866802 temp10962_206))
(assert (= temp10962_207 #x0000000000000000))
(assert (= temp10962_208
   (ite (bvslt var3866802 temp10962_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10962_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10962_208)))
(assert (= var3879420 temp10962_209))
(assert (bvslt (ite (bvslt var3866802 temp10962_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10962_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10962_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10962_211 #x0000000000000000))
(assert (= var3879421 temp10962_211))
(assert (= temp10962_212 #x0000000000000001))
(assert (= var3867690 temp10962_212))
(assert (= temp10962_213 #x0000000000000000))
(assert (= temp10962_214
   (ite (bvslt var3867690 temp10962_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10962_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10962_214)))
(assert (= var3879423 temp10962_215))
(assert (bvslt (ite (bvslt var3867690 temp10962_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10962_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10962_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10962_217 #x0000000000000001))
(assert (= var3879424 temp10962_217))
(assert (= temp10962_218 #x0000000000000000))
(assert (= var4133117 temp10962_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10962_219 #x0000000000000002))
(assert (= var4339331 temp10962_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10962_220 #x0000000000000000))
(assert (= var4404892 temp10962_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp10962_221 #x0000000000000001))
(assert (= var211058 temp10962_221))
(model-add temp10962_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10962_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10962_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10962_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))



