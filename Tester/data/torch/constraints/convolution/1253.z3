(declare-fun temp10401_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10401_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10401_3 () (_ BitVec 64))
(declare-fun temp10401_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10401_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10401_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10401_7 () (_ BitVec 64))
(declare-fun temp10401_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10401_9 () (_ BitVec 64))
(declare-fun temp10401_10 () (_ BitVec 64))
(declare-fun temp10401_11 () (_ BitVec 64))
(declare-fun temp10401_12 () (_ BitVec 64))
(declare-fun temp10401_13 () (_ BitVec 64))
(declare-fun temp10401_14 () (_ BitVec 64))
(declare-fun temp10401_15 () (_ BitVec 64))
(declare-fun temp10401_16 () (_ BitVec 64))
(declare-fun temp10401_17 () (_ BitVec 64))
(declare-fun temp10401_18 () (_ BitVec 64))
(declare-fun temp10401_19 () (_ BitVec 64))
(declare-fun temp10401_20 () (_ BitVec 64))
(declare-fun temp10401_21 () (_ BitVec 64))
(declare-fun temp10401_22 () (_ BitVec 64))
(declare-fun temp10401_23 () (_ BitVec 64))
(declare-fun temp10401_24 () (_ BitVec 64))
(declare-fun temp10401_25 () (_ BitVec 64))
(declare-fun temp10401_26 () (_ BitVec 64))
(declare-fun temp10401_27 () (_ BitVec 64))
(declare-fun temp10401_28 () (_ BitVec 64))
(declare-fun temp10401_29 () (_ BitVec 64))
(declare-fun temp10401_30 () (_ BitVec 64))
(declare-fun temp10401_31 () (_ BitVec 64))
(declare-fun temp10401_32 () (_ BitVec 64))
(declare-fun temp10401_33 () (_ BitVec 64))
(declare-fun temp10401_34 () (_ BitVec 64))
(declare-fun temp10401_35 () (_ BitVec 64))
(declare-fun temp10401_36 () (_ BitVec 64))
(declare-fun temp10401_37 () (_ BitVec 64))
(declare-fun temp10401_38 () (_ BitVec 64))
(declare-fun temp10401_39 () (_ BitVec 64))
(declare-fun temp10401_40 () (_ BitVec 64))
(declare-fun temp10401_41 () (_ BitVec 64))
(declare-fun temp10401_42 () (_ BitVec 64))
(declare-fun temp10401_43 () (_ BitVec 64))
(declare-fun temp10401_44 () (_ BitVec 64))
(declare-fun temp10401_45 () (_ BitVec 64))
(declare-fun temp10401_46 () (_ BitVec 64))
(declare-fun temp10401_47 () (_ BitVec 64))
(declare-fun temp10401_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10401_49 () (_ BitVec 64))
(declare-fun temp10401_50 () (_ BitVec 64))
(declare-fun temp10401_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10401_52 () (_ BitVec 64))
(declare-fun temp10401_53 () (_ BitVec 64))
(declare-fun temp10401_54 () (_ BitVec 64))
(declare-fun temp10401_55 () (_ BitVec 64))
(declare-fun temp10401_56 () (_ BitVec 64))
(declare-fun temp10401_57 () (_ BitVec 64))
(declare-fun temp10401_58 () (_ BitVec 64))
(declare-fun temp10401_59 () (_ BitVec 64))
(declare-fun temp10401_60 () (_ BitVec 64))
(declare-fun temp10401_61 () (_ BitVec 64))
(declare-fun temp10401_62 () (_ BitVec 64))
(declare-fun temp10401_63 () (_ BitVec 64))
(declare-fun temp10401_64 () (_ BitVec 64))
(declare-fun temp10401_65 () (_ BitVec 64))
(declare-fun temp10401_66 () (_ BitVec 64))
(declare-fun temp10401_67 () (_ BitVec 64))
(declare-fun temp10401_68 () (_ BitVec 64))
(declare-fun temp10401_69 () (_ BitVec 64))
(declare-fun temp10401_70 () (_ BitVec 64))
(declare-fun temp10401_71 () (_ BitVec 64))
(declare-fun temp10401_72 () (_ BitVec 64))
(declare-fun temp10401_73 () (_ BitVec 64))
(declare-fun temp10401_74 () (_ BitVec 64))
(declare-fun temp10401_75 () (_ BitVec 64))
(declare-fun temp10401_76 () (_ BitVec 64))
(declare-fun temp10401_77 () (_ BitVec 64))
(declare-fun temp10401_78 () (_ BitVec 64))
(declare-fun temp10401_79 () (_ BitVec 64))
(declare-fun temp10401_80 () (_ BitVec 64))
(declare-fun temp10401_81 () (_ BitVec 64))
(declare-fun temp10401_82 () (_ BitVec 64))
(declare-fun temp10401_83 () (_ BitVec 64))
(declare-fun temp10401_84 () (_ BitVec 64))
(declare-fun temp10401_85 () (_ BitVec 64))
(declare-fun temp10401_86 () (_ BitVec 64))
(declare-fun temp10401_87 () (_ BitVec 64))
(declare-fun temp10401_88 () (_ BitVec 64))
(declare-fun temp10401_89 () (_ BitVec 64))
(declare-fun temp10401_90 () (_ BitVec 64))
(declare-fun temp10401_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10401_92 () (_ BitVec 64))
(declare-fun temp10401_93 () (_ BitVec 64))
(declare-fun temp10401_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10401_95 () (_ BitVec 64))
(declare-fun temp10401_96 () (_ BitVec 64))
(declare-fun temp10401_97 () (_ BitVec 64))
(declare-fun temp10401_98 () (_ BitVec 64))
(declare-fun temp10401_99 () (_ BitVec 64))
(declare-fun temp10401_100 () (_ BitVec 64))
(declare-fun temp10401_101 () (_ BitVec 64))
(declare-fun temp10401_102 () (_ BitVec 64))
(declare-fun temp10401_103 () (_ BitVec 64))
(declare-fun temp10401_104 () (_ BitVec 64))
(declare-fun temp10401_105 () (_ BitVec 64))
(declare-fun temp10401_106 () (_ BitVec 64))
(declare-fun temp10401_107 () (_ BitVec 64))
(declare-fun temp10401_108 () (_ BitVec 64))
(declare-fun temp10401_109 () (_ BitVec 64))
(declare-fun temp10401_110 () (_ BitVec 64))
(declare-fun temp10401_111 () (_ BitVec 64))
(declare-fun temp10401_112 () (_ BitVec 64))
(declare-fun temp10401_113 () (_ BitVec 64))
(declare-fun temp10401_114 () (_ BitVec 64))
(declare-fun temp10401_115 () (_ BitVec 64))
(declare-fun temp10401_116 () (_ BitVec 64))
(declare-fun temp10401_117 () (_ BitVec 64))
(declare-fun temp10401_118 () (_ BitVec 64))
(declare-fun temp10401_119 () (_ BitVec 64))
(declare-fun temp10401_120 () (_ BitVec 64))
(declare-fun temp10401_121 () (_ BitVec 64))
(declare-fun temp10401_122 () (_ BitVec 64))
(declare-fun temp10401_123 () (_ BitVec 64))
(declare-fun temp10401_124 () (_ BitVec 64))
(declare-fun temp10401_125 () (_ BitVec 64))
(declare-fun temp10401_126 () (_ BitVec 64))
(declare-fun temp10401_127 () (_ BitVec 64))
(declare-fun temp10401_128 () (_ BitVec 64))
(declare-fun temp10401_129 () (_ BitVec 64))
(declare-fun temp10401_130 () (_ BitVec 64))
(declare-fun temp10401_131 () (_ BitVec 64))
(declare-fun temp10401_132 () (_ BitVec 64))
(declare-fun temp10401_133 () (_ BitVec 64))
(declare-fun temp10401_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10401_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10401_136 () (_ BitVec 64))
(declare-fun temp10401_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10401_138 () (_ BitVec 64))
(declare-fun temp10401_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10401_140 () (_ BitVec 64))
(declare-fun temp10401_141 () (_ BitVec 64))
(declare-fun temp10401_142 () (_ BitVec 64))
(declare-fun temp10401_143 () (_ BitVec 64))
(declare-fun temp10401_144 () (_ BitVec 64))
(declare-fun temp10401_145 () (_ BitVec 64))
(declare-fun temp10401_146 () (_ BitVec 64))
(declare-fun temp10401_147 () (_ BitVec 64))
(declare-fun temp10401_148 () (_ BitVec 64))
(declare-fun temp10401_149 () (_ BitVec 64))
(declare-fun temp10401_150 () (_ BitVec 64))
(declare-fun temp10401_151 () (_ BitVec 64))
(declare-fun temp10401_152 () (_ BitVec 64))
(declare-fun temp10401_153 () (_ BitVec 64))
(declare-fun temp10401_154 () (_ BitVec 64))
(declare-fun temp10401_155 () (_ BitVec 64))
(declare-fun temp10401_157 () (_ BitVec 64))
(declare-fun temp10401_158 () (_ BitVec 64))
(declare-fun temp10401_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10401_159 () (_ BitVec 64))
(declare-fun temp10401_160 () (_ BitVec 64))
(declare-fun temp10401_162 () (_ BitVec 64))
(declare-fun temp10401_163 () (_ BitVec 64))
(declare-fun temp10401_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10401_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10401_165 () (_ BitVec 64))
(declare-fun temp10401_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10401_167 () (_ BitVec 64))
(declare-fun temp10401_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10401_169 () (_ BitVec 64))
(declare-fun temp10401_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10401_171 () (_ BitVec 64))
(declare-fun temp10401_172 () (_ BitVec 64))
(declare-fun temp10401_173 () (_ BitVec 64))
(declare-fun temp10401_174 () (_ BitVec 64))
(declare-fun temp10401_175 () (_ BitVec 64))
(declare-fun temp10401_176 () (_ BitVec 64))
(declare-fun temp10401_177 () (_ BitVec 64))
(declare-fun temp10401_178 () (_ BitVec 64))
(declare-fun temp10401_179 () (_ BitVec 64))
(declare-fun temp10401_180 () (_ BitVec 64))
(declare-fun temp10401_181 () (_ BitVec 64))
(declare-fun temp10401_182 () (_ BitVec 64))
(declare-fun temp10401_183 () (_ BitVec 64))
(declare-fun temp10401_184 () (_ BitVec 64))
(declare-fun temp10401_185 () (_ BitVec 64))
(declare-fun temp10401_186 () (_ BitVec 64))
(declare-fun temp10401_187 () (_ BitVec 64))
(declare-fun temp10401_188 () (_ BitVec 64))
(declare-fun temp10401_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10401_190 () (_ BitVec 64))
(declare-fun temp10401_192 () (_ BitVec 64))
(declare-fun temp10401_193 () (_ BitVec 64))
(declare-fun temp10401_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10401_194 () (_ BitVec 64))
(declare-fun temp10401_195 () (_ BitVec 64))
(declare-fun temp10401_197 () (_ BitVec 64))
(declare-fun temp10401_198 () (_ BitVec 64))
(declare-fun temp10401_196 () (_ BitVec 64))
(declare-fun temp10401_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10401_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10401_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10401_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10401_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10401_204 () (_ BitVec 64))
(declare-fun temp10401_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10401_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10401_207 () (_ BitVec 64))
(declare-fun temp10401_208 () (_ BitVec 64))
(declare-fun temp10401_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10401_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10401_211 () (_ BitVec 64))
(declare-fun temp10401_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10401_213 () (_ BitVec 64))
(declare-fun temp10401_214 () (_ BitVec 64))
(declare-fun temp10401_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10401_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10401_217 () (_ BitVec 64))
(declare-fun temp10401_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10401_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10401_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp10401_221 () (_ BitVec 64))
(assert (= temp10401_1 #x0000000000000001))
(assert (= var77203 temp10401_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10401_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10401_2)))
(assert (= temp10401_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10401_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10401_4 #x0000000000000000))
(assert (= var210941 temp10401_4))
(assert (= temp10401_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10401_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10401_6 #x0000000000000000))
(assert (= var210986 temp10401_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10401_7 #x0000000000000000))
(assert (= temp10401_8 temp10401_7))
(assert (= temp10401_9 (select ARGNAME_padding_NAMEEND_VAL temp10401_8)))
(assert (= temp10401_10 #x0000000000000001))
(assert (= temp10401_11 temp10401_10))
(assert (= temp10401_12 (select ARGNAME_padding_NAMEEND_VAL temp10401_11)))
(assert (= temp10401_13 #x0000000000000002))
(assert (= temp10401_14 temp10401_13))
(assert (= temp10401_15 (select ARGNAME_padding_NAMEEND_VAL temp10401_14)))
(assert (= temp10401_16 #x0000000000000003))
(assert (= temp10401_17 temp10401_16))
(assert (= temp10401_18 (select ARGNAME_padding_NAMEEND_VAL temp10401_17)))
(assert (= temp10401_19 #x0000000000000004))
(assert (= temp10401_20 temp10401_19))
(assert (= temp10401_21 (select ARGNAME_padding_NAMEEND_VAL temp10401_20)))
(assert (= temp10401_22 #x0000000000000005))
(assert (= temp10401_23 temp10401_22))
(assert (= temp10401_24 (select ARGNAME_padding_NAMEEND_VAL temp10401_23)))
(assert (= temp10401_25 #x0000000000000000))
(assert (= temp10401_26 #x0000000000000000))
(assert (= temp10401_27 temp10401_26))
(assert (= temp10401_28 (select ARGNAME_padding_NAMEEND_VAL temp10401_27)))
(assert (= temp10401_29 #x0000000000000000))
(assert (= temp10401_30 #x0000000000000001))
(assert (= temp10401_31 temp10401_30))
(assert (= temp10401_32 (select ARGNAME_padding_NAMEEND_VAL temp10401_31)))
(assert (= temp10401_33 #x0000000000000000))
(assert (= temp10401_34 #x0000000000000002))
(assert (= temp10401_35 temp10401_34))
(assert (= temp10401_36 (select ARGNAME_padding_NAMEEND_VAL temp10401_35)))
(assert (= temp10401_37 #x0000000000000000))
(assert (= temp10401_38 #x0000000000000003))
(assert (= temp10401_39 temp10401_38))
(assert (= temp10401_40 (select ARGNAME_padding_NAMEEND_VAL temp10401_39)))
(assert (= temp10401_41 #x0000000000000000))
(assert (= temp10401_42 #x0000000000000004))
(assert (= temp10401_43 temp10401_42))
(assert (= temp10401_44 (select ARGNAME_padding_NAMEEND_VAL temp10401_43)))
(assert (= temp10401_45 #x0000000000000000))
(assert (= temp10401_46 #x0000000000000005))
(assert (= temp10401_47 temp10401_46))
(assert (= temp10401_48 (select ARGNAME_padding_NAMEEND_VAL temp10401_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10401_28 temp10401_25)
             (bvslt temp10401_32 temp10401_29)
             (bvslt temp10401_36 temp10401_33)
             (bvslt temp10401_40 temp10401_37)
             (bvslt temp10401_44 temp10401_41)
             (bvslt temp10401_48 temp10401_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10401_49 #x0000000000000000))
(assert (= var1191714 temp10401_49))
(assert (= temp10401_50 #x0000000000000000))
(assert (= temp10401_51 temp10401_50))
(assert (= temp10401_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10401_51)))
(assert (= temp10401_53 #x0000000000000001))
(assert (= temp10401_54 temp10401_53))
(assert (= temp10401_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10401_54)))
(assert (= temp10401_56 #x0000000000000002))
(assert (= temp10401_57 temp10401_56))
(assert (= temp10401_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10401_57)))
(assert (= temp10401_59 #x0000000000000003))
(assert (= temp10401_60 temp10401_59))
(assert (= temp10401_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10401_60)))
(assert (= temp10401_62 #x0000000000000004))
(assert (= temp10401_63 temp10401_62))
(assert (= temp10401_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10401_63)))
(assert (= temp10401_65 #x0000000000000005))
(assert (= temp10401_66 temp10401_65))
(assert (= temp10401_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10401_66)))
(assert (= temp10401_68 #x0000000000000000))
(assert (= temp10401_69 #x0000000000000000))
(assert (= temp10401_70 temp10401_69))
(assert (= temp10401_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10401_70)))
(assert (= temp10401_72 #x0000000000000000))
(assert (= temp10401_73 #x0000000000000001))
(assert (= temp10401_74 temp10401_73))
(assert (= temp10401_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10401_74)))
(assert (= temp10401_76 #x0000000000000000))
(assert (= temp10401_77 #x0000000000000002))
(assert (= temp10401_78 temp10401_77))
(assert (= temp10401_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10401_78)))
(assert (= temp10401_80 #x0000000000000000))
(assert (= temp10401_81 #x0000000000000003))
(assert (= temp10401_82 temp10401_81))
(assert (= temp10401_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10401_82)))
(assert (= temp10401_84 #x0000000000000000))
(assert (= temp10401_85 #x0000000000000004))
(assert (= temp10401_86 temp10401_85))
(assert (= temp10401_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10401_86)))
(assert (= temp10401_88 #x0000000000000000))
(assert (= temp10401_89 #x0000000000000005))
(assert (= temp10401_90 temp10401_89))
(assert (= temp10401_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10401_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10401_71 temp10401_68)
             (bvslt temp10401_75 temp10401_72)
             (bvslt temp10401_79 temp10401_76)
             (bvslt temp10401_83 temp10401_80)
             (bvslt temp10401_87 temp10401_84)
             (bvslt temp10401_91 temp10401_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10401_92 #x0000000000000000))
(assert (= var1191725 temp10401_92))
(assert (= temp10401_93 #x0000000000000000))
(assert (= temp10401_94 temp10401_93))
(assert (= temp10401_95 (select ARGNAME_stride_NAMEEND_VAL temp10401_94)))
(assert (= temp10401_96 #x0000000000000001))
(assert (= temp10401_97 temp10401_96))
(assert (= temp10401_98 (select ARGNAME_stride_NAMEEND_VAL temp10401_97)))
(assert (= temp10401_99 #x0000000000000002))
(assert (= temp10401_100 temp10401_99))
(assert (= temp10401_101 (select ARGNAME_stride_NAMEEND_VAL temp10401_100)))
(assert (= temp10401_102 #x0000000000000003))
(assert (= temp10401_103 temp10401_102))
(assert (= temp10401_104 (select ARGNAME_stride_NAMEEND_VAL temp10401_103)))
(assert (= temp10401_105 #x0000000000000004))
(assert (= temp10401_106 temp10401_105))
(assert (= temp10401_107 (select ARGNAME_stride_NAMEEND_VAL temp10401_106)))
(assert (= temp10401_108 #x0000000000000005))
(assert (= temp10401_109 temp10401_108))
(assert (= temp10401_110 (select ARGNAME_stride_NAMEEND_VAL temp10401_109)))
(assert (= temp10401_111 #x0000000000000000))
(assert (= temp10401_112 #x0000000000000000))
(assert (= temp10401_113 temp10401_112))
(assert (= temp10401_114 (select ARGNAME_stride_NAMEEND_VAL temp10401_113)))
(assert (= temp10401_115 #x0000000000000000))
(assert (= temp10401_116 #x0000000000000001))
(assert (= temp10401_117 temp10401_116))
(assert (= temp10401_118 (select ARGNAME_stride_NAMEEND_VAL temp10401_117)))
(assert (= temp10401_119 #x0000000000000000))
(assert (= temp10401_120 #x0000000000000002))
(assert (= temp10401_121 temp10401_120))
(assert (= temp10401_122 (select ARGNAME_stride_NAMEEND_VAL temp10401_121)))
(assert (= temp10401_123 #x0000000000000000))
(assert (= temp10401_124 #x0000000000000003))
(assert (= temp10401_125 temp10401_124))
(assert (= temp10401_126 (select ARGNAME_stride_NAMEEND_VAL temp10401_125)))
(assert (= temp10401_127 #x0000000000000000))
(assert (= temp10401_128 #x0000000000000004))
(assert (= temp10401_129 temp10401_128))
(assert (= temp10401_130 (select ARGNAME_stride_NAMEEND_VAL temp10401_129)))
(assert (= temp10401_131 #x0000000000000000))
(assert (= temp10401_132 #x0000000000000005))
(assert (= temp10401_133 temp10401_132))
(assert (= temp10401_134 (select ARGNAME_stride_NAMEEND_VAL temp10401_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10401_114 temp10401_111)
             (bvsle temp10401_118 temp10401_115)
             (bvsle temp10401_122 temp10401_119)
             (bvsle temp10401_126 temp10401_123)
             (bvsle temp10401_130 temp10401_127)
             (bvsle temp10401_134 temp10401_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10401_135 #x0000000000000000))
(assert (= var1191735 temp10401_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10401_136 #x0000000000000001))
(assert (= var1191747 temp10401_136))
(assert (= temp10401_137 #x0000000000000000))
(assert (= var1179826 temp10401_137))
(assert (= temp10401_138 #x0000000000000000))
(assert (= temp10401_139 temp10401_138))
(assert (= temp10401_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10401_139)))
(assert (= temp10401_141 #x0000000000000001))
(assert (= temp10401_142 temp10401_141))
(assert (= temp10401_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10401_142)))
(assert (= temp10401_144 #x0000000000000002))
(assert (= temp10401_145 temp10401_144))
(assert (= temp10401_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10401_145)))
(assert (= temp10401_147 #x0000000000000003))
(assert (= temp10401_148 temp10401_147))
(assert (= temp10401_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10401_148)))
(assert (= temp10401_150 #x0000000000000004))
(assert (= temp10401_151 temp10401_150))
(assert (= temp10401_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10401_151)))
(assert (= temp10401_153 #x0000000000000005))
(assert (= temp10401_154 temp10401_153))
(assert (= temp10401_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10401_154)))
(assert (= temp10401_157 var1179826))
(assert (= temp10401_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10401_157)))
(assert (= temp10401_156 temp10401_158))
(assert (= var1191780
   (ite (bvslt temp10401_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10401_159 #x0000000000000000))
(assert (= var1191780 temp10401_159))
(assert (= temp10401_160 #x0000000000000000))
(assert (= var1179826 temp10401_160))
(assert (= temp10401_162 var1179826))
(assert (= temp10401_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10401_162)))
(assert (= temp10401_161 temp10401_163))
(assert (= var1191802 (bvsmod temp10401_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10401_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10401_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10401_165 #x0000000000000001))
(assert (= var1191803 temp10401_165))
(assert (= temp10401_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10401_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10401_167 #x0000000000000001))
(assert (= var1191823 temp10401_167))
(assert (= temp10401_168 #x0000000000000001))
(assert (= var1180714 temp10401_168))
(assert (= temp10401_169 #x0000000000000000))
(assert (= temp10401_170 temp10401_169))
(assert (= temp10401_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10401_170)))
(assert (= temp10401_172 #x0000000000000001))
(assert (= temp10401_173 temp10401_172))
(assert (= temp10401_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10401_173)))
(assert (= temp10401_175 #x0000000000000002))
(assert (= temp10401_176 temp10401_175))
(assert (= temp10401_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10401_176)))
(assert (= temp10401_178 #x0000000000000003))
(assert (= temp10401_179 temp10401_178))
(assert (= temp10401_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10401_179)))
(assert (= temp10401_181 #x0000000000000004))
(assert (= temp10401_182 temp10401_181))
(assert (= temp10401_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10401_182)))
(assert (= temp10401_184 #x0000000000000005))
(assert (= temp10401_185 temp10401_184))
(assert (= temp10401_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10401_185)))
(assert (= temp10401_187 #x0000000000000000))
(assert (= temp10401_188
   (ite (bvslt var1180714 temp10401_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10401_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10401_188)))
(assert (= var1191831 temp10401_189))
(assert (bvslt (ite (bvslt var1180714 temp10401_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10401_190 #x0000000000000001))
(assert (= var1180714 temp10401_190))
(assert (= temp10401_192 var1180714))
(assert (= temp10401_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10401_192)))
(assert (= temp10401_191 temp10401_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10401_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10401_194 #x0000000000000001))
(assert (= var1191836 temp10401_194))
(assert (= temp10401_195 #x0000000000000000))
(assert (= var1179826 temp10401_195))
(assert (= temp10401_197 var1179826))
(assert (= temp10401_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10401_197)))
(assert (= temp10401_196 temp10401_198))
(assert (= temp10401_199 #x0000000000000002))
(assert (= var1586025 temp10401_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10401_200 #x0000000000000001))
(assert (= var1191993 temp10401_200))
(assert (= temp10401_201 #x0000000000000001))
(assert (= var2700303 temp10401_201))
(assert (= temp10401_202 #x0000000000000001))
(assert (= var2962447 temp10401_202))
(assert (= temp10401_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10401_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10401_204 #x0000000000000001))
(assert (= var211058 temp10401_204))
(assert (= temp10401_205 #x0000000000000001))
(assert (= var211188 temp10401_205))
(assert (= var3879401 var211188))
(assert (= temp10401_206 #x0000000000000000))
(assert (= var3866802 temp10401_206))
(assert (= temp10401_207 #x0000000000000000))
(assert (= temp10401_208
   (ite (bvslt var3866802 temp10401_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10401_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10401_208)))
(assert (= var3879420 temp10401_209))
(assert (bvslt (ite (bvslt var3866802 temp10401_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10401_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10401_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10401_211 #x0000000000000000))
(assert (= var3879421 temp10401_211))
(assert (= temp10401_212 #x0000000000000001))
(assert (= var3867690 temp10401_212))
(assert (= temp10401_213 #x0000000000000000))
(assert (= temp10401_214
   (ite (bvslt var3867690 temp10401_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10401_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10401_214)))
(assert (= var3879423 temp10401_215))
(assert (bvslt (ite (bvslt var3867690 temp10401_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10401_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10401_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10401_217 #x0000000000000001))
(assert (= var3879424 temp10401_217))
(assert (= temp10401_218 #x0000000000000000))
(assert (= var4079423 temp10401_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10401_219 #x0000000000000002))
(assert (= var4208259 temp10401_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10401_220 #x0000000000000000))
(assert (= var4273820 temp10401_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp10401_221 #x0000000000000001))
(assert (= var211058 temp10401_221))
(model-add temp10401_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10401_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10401_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10401_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




