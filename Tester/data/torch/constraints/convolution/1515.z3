(declare-fun temp10814_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10814_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10814_3 () (_ BitVec 64))
(declare-fun temp10814_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10814_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10814_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10814_7 () (_ BitVec 64))
(declare-fun temp10814_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10814_9 () (_ BitVec 64))
(declare-fun temp10814_10 () (_ BitVec 64))
(declare-fun temp10814_11 () (_ BitVec 64))
(declare-fun temp10814_12 () (_ BitVec 64))
(declare-fun temp10814_13 () (_ BitVec 64))
(declare-fun temp10814_14 () (_ BitVec 64))
(declare-fun temp10814_15 () (_ BitVec 64))
(declare-fun temp10814_16 () (_ BitVec 64))
(declare-fun temp10814_17 () (_ BitVec 64))
(declare-fun temp10814_18 () (_ BitVec 64))
(declare-fun temp10814_19 () (_ BitVec 64))
(declare-fun temp10814_20 () (_ BitVec 64))
(declare-fun temp10814_21 () (_ BitVec 64))
(declare-fun temp10814_22 () (_ BitVec 64))
(declare-fun temp10814_23 () (_ BitVec 64))
(declare-fun temp10814_24 () (_ BitVec 64))
(declare-fun temp10814_25 () (_ BitVec 64))
(declare-fun temp10814_26 () (_ BitVec 64))
(declare-fun temp10814_27 () (_ BitVec 64))
(declare-fun temp10814_28 () (_ BitVec 64))
(declare-fun temp10814_29 () (_ BitVec 64))
(declare-fun temp10814_30 () (_ BitVec 64))
(declare-fun temp10814_31 () (_ BitVec 64))
(declare-fun temp10814_32 () (_ BitVec 64))
(declare-fun temp10814_33 () (_ BitVec 64))
(declare-fun temp10814_34 () (_ BitVec 64))
(declare-fun temp10814_35 () (_ BitVec 64))
(declare-fun temp10814_36 () (_ BitVec 64))
(declare-fun temp10814_37 () (_ BitVec 64))
(declare-fun temp10814_38 () (_ BitVec 64))
(declare-fun temp10814_39 () (_ BitVec 64))
(declare-fun temp10814_40 () (_ BitVec 64))
(declare-fun temp10814_41 () (_ BitVec 64))
(declare-fun temp10814_42 () (_ BitVec 64))
(declare-fun temp10814_43 () (_ BitVec 64))
(declare-fun temp10814_44 () (_ BitVec 64))
(declare-fun temp10814_45 () (_ BitVec 64))
(declare-fun temp10814_46 () (_ BitVec 64))
(declare-fun temp10814_47 () (_ BitVec 64))
(declare-fun temp10814_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10814_49 () (_ BitVec 64))
(declare-fun temp10814_50 () (_ BitVec 64))
(declare-fun temp10814_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10814_52 () (_ BitVec 64))
(declare-fun temp10814_53 () (_ BitVec 64))
(declare-fun temp10814_54 () (_ BitVec 64))
(declare-fun temp10814_55 () (_ BitVec 64))
(declare-fun temp10814_56 () (_ BitVec 64))
(declare-fun temp10814_57 () (_ BitVec 64))
(declare-fun temp10814_58 () (_ BitVec 64))
(declare-fun temp10814_59 () (_ BitVec 64))
(declare-fun temp10814_60 () (_ BitVec 64))
(declare-fun temp10814_61 () (_ BitVec 64))
(declare-fun temp10814_62 () (_ BitVec 64))
(declare-fun temp10814_63 () (_ BitVec 64))
(declare-fun temp10814_64 () (_ BitVec 64))
(declare-fun temp10814_65 () (_ BitVec 64))
(declare-fun temp10814_66 () (_ BitVec 64))
(declare-fun temp10814_67 () (_ BitVec 64))
(declare-fun temp10814_68 () (_ BitVec 64))
(declare-fun temp10814_69 () (_ BitVec 64))
(declare-fun temp10814_70 () (_ BitVec 64))
(declare-fun temp10814_71 () (_ BitVec 64))
(declare-fun temp10814_72 () (_ BitVec 64))
(declare-fun temp10814_73 () (_ BitVec 64))
(declare-fun temp10814_74 () (_ BitVec 64))
(declare-fun temp10814_75 () (_ BitVec 64))
(declare-fun temp10814_76 () (_ BitVec 64))
(declare-fun temp10814_77 () (_ BitVec 64))
(declare-fun temp10814_78 () (_ BitVec 64))
(declare-fun temp10814_79 () (_ BitVec 64))
(declare-fun temp10814_80 () (_ BitVec 64))
(declare-fun temp10814_81 () (_ BitVec 64))
(declare-fun temp10814_82 () (_ BitVec 64))
(declare-fun temp10814_83 () (_ BitVec 64))
(declare-fun temp10814_84 () (_ BitVec 64))
(declare-fun temp10814_85 () (_ BitVec 64))
(declare-fun temp10814_86 () (_ BitVec 64))
(declare-fun temp10814_87 () (_ BitVec 64))
(declare-fun temp10814_88 () (_ BitVec 64))
(declare-fun temp10814_89 () (_ BitVec 64))
(declare-fun temp10814_90 () (_ BitVec 64))
(declare-fun temp10814_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10814_92 () (_ BitVec 64))
(declare-fun temp10814_93 () (_ BitVec 64))
(declare-fun temp10814_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10814_95 () (_ BitVec 64))
(declare-fun temp10814_96 () (_ BitVec 64))
(declare-fun temp10814_97 () (_ BitVec 64))
(declare-fun temp10814_98 () (_ BitVec 64))
(declare-fun temp10814_99 () (_ BitVec 64))
(declare-fun temp10814_100 () (_ BitVec 64))
(declare-fun temp10814_101 () (_ BitVec 64))
(declare-fun temp10814_102 () (_ BitVec 64))
(declare-fun temp10814_103 () (_ BitVec 64))
(declare-fun temp10814_104 () (_ BitVec 64))
(declare-fun temp10814_105 () (_ BitVec 64))
(declare-fun temp10814_106 () (_ BitVec 64))
(declare-fun temp10814_107 () (_ BitVec 64))
(declare-fun temp10814_108 () (_ BitVec 64))
(declare-fun temp10814_109 () (_ BitVec 64))
(declare-fun temp10814_110 () (_ BitVec 64))
(declare-fun temp10814_111 () (_ BitVec 64))
(declare-fun temp10814_112 () (_ BitVec 64))
(declare-fun temp10814_113 () (_ BitVec 64))
(declare-fun temp10814_114 () (_ BitVec 64))
(declare-fun temp10814_115 () (_ BitVec 64))
(declare-fun temp10814_116 () (_ BitVec 64))
(declare-fun temp10814_117 () (_ BitVec 64))
(declare-fun temp10814_118 () (_ BitVec 64))
(declare-fun temp10814_119 () (_ BitVec 64))
(declare-fun temp10814_120 () (_ BitVec 64))
(declare-fun temp10814_121 () (_ BitVec 64))
(declare-fun temp10814_122 () (_ BitVec 64))
(declare-fun temp10814_123 () (_ BitVec 64))
(declare-fun temp10814_124 () (_ BitVec 64))
(declare-fun temp10814_125 () (_ BitVec 64))
(declare-fun temp10814_126 () (_ BitVec 64))
(declare-fun temp10814_127 () (_ BitVec 64))
(declare-fun temp10814_128 () (_ BitVec 64))
(declare-fun temp10814_129 () (_ BitVec 64))
(declare-fun temp10814_130 () (_ BitVec 64))
(declare-fun temp10814_131 () (_ BitVec 64))
(declare-fun temp10814_132 () (_ BitVec 64))
(declare-fun temp10814_133 () (_ BitVec 64))
(declare-fun temp10814_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10814_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10814_136 () (_ BitVec 64))
(declare-fun temp10814_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10814_138 () (_ BitVec 64))
(declare-fun temp10814_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10814_140 () (_ BitVec 64))
(declare-fun temp10814_141 () (_ BitVec 64))
(declare-fun temp10814_142 () (_ BitVec 64))
(declare-fun temp10814_143 () (_ BitVec 64))
(declare-fun temp10814_144 () (_ BitVec 64))
(declare-fun temp10814_145 () (_ BitVec 64))
(declare-fun temp10814_146 () (_ BitVec 64))
(declare-fun temp10814_147 () (_ BitVec 64))
(declare-fun temp10814_148 () (_ BitVec 64))
(declare-fun temp10814_149 () (_ BitVec 64))
(declare-fun temp10814_150 () (_ BitVec 64))
(declare-fun temp10814_151 () (_ BitVec 64))
(declare-fun temp10814_152 () (_ BitVec 64))
(declare-fun temp10814_153 () (_ BitVec 64))
(declare-fun temp10814_154 () (_ BitVec 64))
(declare-fun temp10814_155 () (_ BitVec 64))
(declare-fun temp10814_157 () (_ BitVec 64))
(declare-fun temp10814_158 () (_ BitVec 64))
(declare-fun temp10814_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10814_159 () (_ BitVec 64))
(declare-fun temp10814_160 () (_ BitVec 64))
(declare-fun temp10814_162 () (_ BitVec 64))
(declare-fun temp10814_163 () (_ BitVec 64))
(declare-fun temp10814_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10814_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10814_165 () (_ BitVec 64))
(declare-fun temp10814_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10814_167 () (_ BitVec 64))
(declare-fun temp10814_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10814_169 () (_ BitVec 64))
(declare-fun temp10814_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10814_171 () (_ BitVec 64))
(declare-fun temp10814_172 () (_ BitVec 64))
(declare-fun temp10814_173 () (_ BitVec 64))
(declare-fun temp10814_174 () (_ BitVec 64))
(declare-fun temp10814_175 () (_ BitVec 64))
(declare-fun temp10814_176 () (_ BitVec 64))
(declare-fun temp10814_177 () (_ BitVec 64))
(declare-fun temp10814_178 () (_ BitVec 64))
(declare-fun temp10814_179 () (_ BitVec 64))
(declare-fun temp10814_180 () (_ BitVec 64))
(declare-fun temp10814_181 () (_ BitVec 64))
(declare-fun temp10814_182 () (_ BitVec 64))
(declare-fun temp10814_183 () (_ BitVec 64))
(declare-fun temp10814_184 () (_ BitVec 64))
(declare-fun temp10814_185 () (_ BitVec 64))
(declare-fun temp10814_186 () (_ BitVec 64))
(declare-fun temp10814_187 () (_ BitVec 64))
(declare-fun temp10814_188 () (_ BitVec 64))
(declare-fun temp10814_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10814_190 () (_ BitVec 64))
(declare-fun temp10814_192 () (_ BitVec 64))
(declare-fun temp10814_193 () (_ BitVec 64))
(declare-fun temp10814_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10814_194 () (_ BitVec 64))
(declare-fun temp10814_195 () (_ BitVec 64))
(declare-fun temp10814_197 () (_ BitVec 64))
(declare-fun temp10814_198 () (_ BitVec 64))
(declare-fun temp10814_196 () (_ BitVec 64))
(declare-fun temp10814_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10814_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10814_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10814_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10814_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10814_204 () (_ BitVec 64))
(declare-fun temp10814_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10814_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10814_207 () (_ BitVec 64))
(declare-fun temp10814_208 () (_ BitVec 64))
(declare-fun temp10814_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10814_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10814_211 () (_ BitVec 64))
(declare-fun temp10814_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10814_213 () (_ BitVec 64))
(declare-fun temp10814_214 () (_ BitVec 64))
(declare-fun temp10814_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10814_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10814_217 () (_ BitVec 64))
(declare-fun temp10814_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10814_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10814_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var5452176 () (_ BitVec 64))
(declare-fun var5714320 () (_ BitVec 64))
(declare-fun temp10814_221 () (_ BitVec 64))
(assert (= temp10814_1 #x0000000000000001))
(assert (= var77203 temp10814_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10814_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10814_2)))
(assert (= temp10814_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10814_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10814_4 #x0000000000000000))
(assert (= var210941 temp10814_4))
(assert (= temp10814_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10814_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10814_6 #x0000000000000000))
(assert (= var210986 temp10814_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10814_7 #x0000000000000000))
(assert (= temp10814_8 temp10814_7))
(assert (= temp10814_9 (select ARGNAME_padding_NAMEEND_VAL temp10814_8)))
(assert (= temp10814_10 #x0000000000000001))
(assert (= temp10814_11 temp10814_10))
(assert (= temp10814_12 (select ARGNAME_padding_NAMEEND_VAL temp10814_11)))
(assert (= temp10814_13 #x0000000000000002))
(assert (= temp10814_14 temp10814_13))
(assert (= temp10814_15 (select ARGNAME_padding_NAMEEND_VAL temp10814_14)))
(assert (= temp10814_16 #x0000000000000003))
(assert (= temp10814_17 temp10814_16))
(assert (= temp10814_18 (select ARGNAME_padding_NAMEEND_VAL temp10814_17)))
(assert (= temp10814_19 #x0000000000000004))
(assert (= temp10814_20 temp10814_19))
(assert (= temp10814_21 (select ARGNAME_padding_NAMEEND_VAL temp10814_20)))
(assert (= temp10814_22 #x0000000000000005))
(assert (= temp10814_23 temp10814_22))
(assert (= temp10814_24 (select ARGNAME_padding_NAMEEND_VAL temp10814_23)))
(assert (= temp10814_25 #x0000000000000000))
(assert (= temp10814_26 #x0000000000000000))
(assert (= temp10814_27 temp10814_26))
(assert (= temp10814_28 (select ARGNAME_padding_NAMEEND_VAL temp10814_27)))
(assert (= temp10814_29 #x0000000000000000))
(assert (= temp10814_30 #x0000000000000001))
(assert (= temp10814_31 temp10814_30))
(assert (= temp10814_32 (select ARGNAME_padding_NAMEEND_VAL temp10814_31)))
(assert (= temp10814_33 #x0000000000000000))
(assert (= temp10814_34 #x0000000000000002))
(assert (= temp10814_35 temp10814_34))
(assert (= temp10814_36 (select ARGNAME_padding_NAMEEND_VAL temp10814_35)))
(assert (= temp10814_37 #x0000000000000000))
(assert (= temp10814_38 #x0000000000000003))
(assert (= temp10814_39 temp10814_38))
(assert (= temp10814_40 (select ARGNAME_padding_NAMEEND_VAL temp10814_39)))
(assert (= temp10814_41 #x0000000000000000))
(assert (= temp10814_42 #x0000000000000004))
(assert (= temp10814_43 temp10814_42))
(assert (= temp10814_44 (select ARGNAME_padding_NAMEEND_VAL temp10814_43)))
(assert (= temp10814_45 #x0000000000000000))
(assert (= temp10814_46 #x0000000000000005))
(assert (= temp10814_47 temp10814_46))
(assert (= temp10814_48 (select ARGNAME_padding_NAMEEND_VAL temp10814_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10814_28 temp10814_25)
             (bvslt temp10814_32 temp10814_29)
             (bvslt temp10814_36 temp10814_33)
             (bvslt temp10814_40 temp10814_37)
             (bvslt temp10814_44 temp10814_41)
             (bvslt temp10814_48 temp10814_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10814_49 #x0000000000000000))
(assert (= var1191714 temp10814_49))
(assert (= temp10814_50 #x0000000000000000))
(assert (= temp10814_51 temp10814_50))
(assert (= temp10814_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10814_51)))
(assert (= temp10814_53 #x0000000000000001))
(assert (= temp10814_54 temp10814_53))
(assert (= temp10814_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10814_54)))
(assert (= temp10814_56 #x0000000000000002))
(assert (= temp10814_57 temp10814_56))
(assert (= temp10814_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10814_57)))
(assert (= temp10814_59 #x0000000000000003))
(assert (= temp10814_60 temp10814_59))
(assert (= temp10814_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10814_60)))
(assert (= temp10814_62 #x0000000000000004))
(assert (= temp10814_63 temp10814_62))
(assert (= temp10814_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10814_63)))
(assert (= temp10814_65 #x0000000000000005))
(assert (= temp10814_66 temp10814_65))
(assert (= temp10814_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10814_66)))
(assert (= temp10814_68 #x0000000000000000))
(assert (= temp10814_69 #x0000000000000000))
(assert (= temp10814_70 temp10814_69))
(assert (= temp10814_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10814_70)))
(assert (= temp10814_72 #x0000000000000000))
(assert (= temp10814_73 #x0000000000000001))
(assert (= temp10814_74 temp10814_73))
(assert (= temp10814_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10814_74)))
(assert (= temp10814_76 #x0000000000000000))
(assert (= temp10814_77 #x0000000000000002))
(assert (= temp10814_78 temp10814_77))
(assert (= temp10814_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10814_78)))
(assert (= temp10814_80 #x0000000000000000))
(assert (= temp10814_81 #x0000000000000003))
(assert (= temp10814_82 temp10814_81))
(assert (= temp10814_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10814_82)))
(assert (= temp10814_84 #x0000000000000000))
(assert (= temp10814_85 #x0000000000000004))
(assert (= temp10814_86 temp10814_85))
(assert (= temp10814_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10814_86)))
(assert (= temp10814_88 #x0000000000000000))
(assert (= temp10814_89 #x0000000000000005))
(assert (= temp10814_90 temp10814_89))
(assert (= temp10814_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10814_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10814_71 temp10814_68)
             (bvslt temp10814_75 temp10814_72)
             (bvslt temp10814_79 temp10814_76)
             (bvslt temp10814_83 temp10814_80)
             (bvslt temp10814_87 temp10814_84)
             (bvslt temp10814_91 temp10814_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10814_92 #x0000000000000000))
(assert (= var1191725 temp10814_92))
(assert (= temp10814_93 #x0000000000000000))
(assert (= temp10814_94 temp10814_93))
(assert (= temp10814_95 (select ARGNAME_stride_NAMEEND_VAL temp10814_94)))
(assert (= temp10814_96 #x0000000000000001))
(assert (= temp10814_97 temp10814_96))
(assert (= temp10814_98 (select ARGNAME_stride_NAMEEND_VAL temp10814_97)))
(assert (= temp10814_99 #x0000000000000002))
(assert (= temp10814_100 temp10814_99))
(assert (= temp10814_101 (select ARGNAME_stride_NAMEEND_VAL temp10814_100)))
(assert (= temp10814_102 #x0000000000000003))
(assert (= temp10814_103 temp10814_102))
(assert (= temp10814_104 (select ARGNAME_stride_NAMEEND_VAL temp10814_103)))
(assert (= temp10814_105 #x0000000000000004))
(assert (= temp10814_106 temp10814_105))
(assert (= temp10814_107 (select ARGNAME_stride_NAMEEND_VAL temp10814_106)))
(assert (= temp10814_108 #x0000000000000005))
(assert (= temp10814_109 temp10814_108))
(assert (= temp10814_110 (select ARGNAME_stride_NAMEEND_VAL temp10814_109)))
(assert (= temp10814_111 #x0000000000000000))
(assert (= temp10814_112 #x0000000000000000))
(assert (= temp10814_113 temp10814_112))
(assert (= temp10814_114 (select ARGNAME_stride_NAMEEND_VAL temp10814_113)))
(assert (= temp10814_115 #x0000000000000000))
(assert (= temp10814_116 #x0000000000000001))
(assert (= temp10814_117 temp10814_116))
(assert (= temp10814_118 (select ARGNAME_stride_NAMEEND_VAL temp10814_117)))
(assert (= temp10814_119 #x0000000000000000))
(assert (= temp10814_120 #x0000000000000002))
(assert (= temp10814_121 temp10814_120))
(assert (= temp10814_122 (select ARGNAME_stride_NAMEEND_VAL temp10814_121)))
(assert (= temp10814_123 #x0000000000000000))
(assert (= temp10814_124 #x0000000000000003))
(assert (= temp10814_125 temp10814_124))
(assert (= temp10814_126 (select ARGNAME_stride_NAMEEND_VAL temp10814_125)))
(assert (= temp10814_127 #x0000000000000000))
(assert (= temp10814_128 #x0000000000000004))
(assert (= temp10814_129 temp10814_128))
(assert (= temp10814_130 (select ARGNAME_stride_NAMEEND_VAL temp10814_129)))
(assert (= temp10814_131 #x0000000000000000))
(assert (= temp10814_132 #x0000000000000005))
(assert (= temp10814_133 temp10814_132))
(assert (= temp10814_134 (select ARGNAME_stride_NAMEEND_VAL temp10814_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10814_114 temp10814_111)
             (bvsle temp10814_118 temp10814_115)
             (bvsle temp10814_122 temp10814_119)
             (bvsle temp10814_126 temp10814_123)
             (bvsle temp10814_130 temp10814_127)
             (bvsle temp10814_134 temp10814_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10814_135 #x0000000000000000))
(assert (= var1191735 temp10814_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10814_136 #x0000000000000001))
(assert (= var1191747 temp10814_136))
(assert (= temp10814_137 #x0000000000000000))
(assert (= var1179826 temp10814_137))
(assert (= temp10814_138 #x0000000000000000))
(assert (= temp10814_139 temp10814_138))
(assert (= temp10814_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10814_139)))
(assert (= temp10814_141 #x0000000000000001))
(assert (= temp10814_142 temp10814_141))
(assert (= temp10814_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10814_142)))
(assert (= temp10814_144 #x0000000000000002))
(assert (= temp10814_145 temp10814_144))
(assert (= temp10814_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10814_145)))
(assert (= temp10814_147 #x0000000000000003))
(assert (= temp10814_148 temp10814_147))
(assert (= temp10814_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10814_148)))
(assert (= temp10814_150 #x0000000000000004))
(assert (= temp10814_151 temp10814_150))
(assert (= temp10814_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10814_151)))
(assert (= temp10814_153 #x0000000000000005))
(assert (= temp10814_154 temp10814_153))
(assert (= temp10814_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10814_154)))
(assert (= temp10814_157 var1179826))
(assert (= temp10814_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10814_157)))
(assert (= temp10814_156 temp10814_158))
(assert (= var1191780
   (ite (bvslt temp10814_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10814_159 #x0000000000000000))
(assert (= var1191780 temp10814_159))
(assert (= temp10814_160 #x0000000000000000))
(assert (= var1179826 temp10814_160))
(assert (= temp10814_162 var1179826))
(assert (= temp10814_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10814_162)))
(assert (= temp10814_161 temp10814_163))
(assert (= var1191802 (bvsmod temp10814_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10814_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10814_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10814_165 #x0000000000000001))
(assert (= var1191803 temp10814_165))
(assert (= temp10814_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10814_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10814_167 #x0000000000000001))
(assert (= var1191823 temp10814_167))
(assert (= temp10814_168 #x0000000000000001))
(assert (= var1180714 temp10814_168))
(assert (= temp10814_169 #x0000000000000000))
(assert (= temp10814_170 temp10814_169))
(assert (= temp10814_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10814_170)))
(assert (= temp10814_172 #x0000000000000001))
(assert (= temp10814_173 temp10814_172))
(assert (= temp10814_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10814_173)))
(assert (= temp10814_175 #x0000000000000002))
(assert (= temp10814_176 temp10814_175))
(assert (= temp10814_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10814_176)))
(assert (= temp10814_178 #x0000000000000003))
(assert (= temp10814_179 temp10814_178))
(assert (= temp10814_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10814_179)))
(assert (= temp10814_181 #x0000000000000004))
(assert (= temp10814_182 temp10814_181))
(assert (= temp10814_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10814_182)))
(assert (= temp10814_184 #x0000000000000005))
(assert (= temp10814_185 temp10814_184))
(assert (= temp10814_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10814_185)))
(assert (= temp10814_187 #x0000000000000000))
(assert (= temp10814_188
   (ite (bvslt var1180714 temp10814_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10814_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10814_188)))
(assert (= var1191831 temp10814_189))
(assert (bvslt (ite (bvslt var1180714 temp10814_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10814_190 #x0000000000000001))
(assert (= var1180714 temp10814_190))
(assert (= temp10814_192 var1180714))
(assert (= temp10814_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10814_192)))
(assert (= temp10814_191 temp10814_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10814_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10814_194 #x0000000000000001))
(assert (= var1191836 temp10814_194))
(assert (= temp10814_195 #x0000000000000000))
(assert (= var1179826 temp10814_195))
(assert (= temp10814_197 var1179826))
(assert (= temp10814_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10814_197)))
(assert (= temp10814_196 temp10814_198))
(assert (= temp10814_199 #x0000000000000002))
(assert (= var1586025 temp10814_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10814_200 #x0000000000000001))
(assert (= var1191993 temp10814_200))
(assert (= temp10814_201 #x0000000000000001))
(assert (= var2700303 temp10814_201))
(assert (= temp10814_202 #x0000000000000001))
(assert (= var2962447 temp10814_202))
(assert (= temp10814_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10814_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10814_204 #x0000000000000001))
(assert (= var211058 temp10814_204))
(assert (= temp10814_205 #x0000000000000001))
(assert (= var211188 temp10814_205))
(assert (= var3879401 var211188))
(assert (= temp10814_206 #x0000000000000000))
(assert (= var3866802 temp10814_206))
(assert (= temp10814_207 #x0000000000000000))
(assert (= temp10814_208
   (ite (bvslt var3866802 temp10814_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10814_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10814_208)))
(assert (= var3879420 temp10814_209))
(assert (bvslt (ite (bvslt var3866802 temp10814_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10814_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10814_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10814_211 #x0000000000000000))
(assert (= var3879421 temp10814_211))
(assert (= temp10814_212 #x0000000000000001))
(assert (= var3867690 temp10814_212))
(assert (= temp10814_213 #x0000000000000000))
(assert (= temp10814_214
   (ite (bvslt var3867690 temp10814_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10814_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10814_214)))
(assert (= var3879423 temp10814_215))
(assert (bvslt (ite (bvslt var3867690 temp10814_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10814_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10814_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10814_217 #x0000000000000001))
(assert (= var3879424 temp10814_217))
(assert (= temp10814_218 #x0000000000000000))
(assert (= var4133117 temp10814_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10814_219 #x0000000000000002))
(assert (= var4339331 temp10814_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10814_220 #x0000000000000000))
(assert (= var4404892 temp10814_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var5452176 var211201))
(assert (= var5714320 var211201))
(assert (= temp10814_221 #x0000000000000001))
(assert (= var211058 temp10814_221))
(model-add temp10814_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10814_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10814_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10814_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





