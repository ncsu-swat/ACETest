(declare-fun temp880_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp880_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp880_3 () (_ BitVec 64))
(declare-fun temp880_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp880_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp880_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp880_7 () (_ BitVec 64))
(declare-fun temp880_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp880_9 () (_ BitVec 64))
(declare-fun temp880_10 () (_ BitVec 64))
(declare-fun temp880_11 () (_ BitVec 64))
(declare-fun temp880_12 () (_ BitVec 64))
(declare-fun temp880_13 () (_ BitVec 64))
(declare-fun temp880_14 () (_ BitVec 64))
(declare-fun temp880_15 () (_ BitVec 64))
(declare-fun temp880_16 () (_ BitVec 64))
(declare-fun temp880_17 () (_ BitVec 64))
(declare-fun temp880_18 () (_ BitVec 64))
(declare-fun temp880_19 () (_ BitVec 64))
(declare-fun temp880_20 () (_ BitVec 64))
(declare-fun temp880_21 () (_ BitVec 64))
(declare-fun temp880_22 () (_ BitVec 64))
(declare-fun temp880_23 () (_ BitVec 64))
(declare-fun temp880_24 () (_ BitVec 64))
(declare-fun temp880_25 () (_ BitVec 64))
(declare-fun temp880_26 () (_ BitVec 64))
(declare-fun temp880_27 () (_ BitVec 64))
(declare-fun temp880_28 () (_ BitVec 64))
(declare-fun temp880_29 () (_ BitVec 64))
(declare-fun temp880_30 () (_ BitVec 64))
(declare-fun temp880_31 () (_ BitVec 64))
(declare-fun temp880_32 () (_ BitVec 64))
(declare-fun temp880_33 () (_ BitVec 64))
(declare-fun temp880_34 () (_ BitVec 64))
(declare-fun temp880_35 () (_ BitVec 64))
(declare-fun temp880_36 () (_ BitVec 64))
(declare-fun temp880_37 () (_ BitVec 64))
(declare-fun temp880_38 () (_ BitVec 64))
(declare-fun temp880_39 () (_ BitVec 64))
(declare-fun temp880_40 () (_ BitVec 64))
(declare-fun temp880_41 () (_ BitVec 64))
(declare-fun temp880_42 () (_ BitVec 64))
(declare-fun temp880_43 () (_ BitVec 64))
(declare-fun temp880_44 () (_ BitVec 64))
(declare-fun temp880_45 () (_ BitVec 64))
(declare-fun temp880_46 () (_ BitVec 64))
(declare-fun temp880_47 () (_ BitVec 64))
(declare-fun temp880_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp880_49 () (_ BitVec 64))
(declare-fun temp880_50 () (_ BitVec 64))
(declare-fun temp880_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp880_52 () (_ BitVec 64))
(declare-fun temp880_53 () (_ BitVec 64))
(declare-fun temp880_54 () (_ BitVec 64))
(declare-fun temp880_55 () (_ BitVec 64))
(declare-fun temp880_56 () (_ BitVec 64))
(declare-fun temp880_57 () (_ BitVec 64))
(declare-fun temp880_58 () (_ BitVec 64))
(declare-fun temp880_59 () (_ BitVec 64))
(declare-fun temp880_60 () (_ BitVec 64))
(declare-fun temp880_61 () (_ BitVec 64))
(declare-fun temp880_62 () (_ BitVec 64))
(declare-fun temp880_63 () (_ BitVec 64))
(declare-fun temp880_64 () (_ BitVec 64))
(declare-fun temp880_65 () (_ BitVec 64))
(declare-fun temp880_66 () (_ BitVec 64))
(declare-fun temp880_67 () (_ BitVec 64))
(declare-fun temp880_68 () (_ BitVec 64))
(declare-fun temp880_69 () (_ BitVec 64))
(declare-fun temp880_70 () (_ BitVec 64))
(declare-fun temp880_71 () (_ BitVec 64))
(declare-fun temp880_72 () (_ BitVec 64))
(declare-fun temp880_73 () (_ BitVec 64))
(declare-fun temp880_74 () (_ BitVec 64))
(declare-fun temp880_75 () (_ BitVec 64))
(declare-fun temp880_76 () (_ BitVec 64))
(declare-fun temp880_77 () (_ BitVec 64))
(declare-fun temp880_78 () (_ BitVec 64))
(declare-fun temp880_79 () (_ BitVec 64))
(declare-fun temp880_80 () (_ BitVec 64))
(declare-fun temp880_81 () (_ BitVec 64))
(declare-fun temp880_82 () (_ BitVec 64))
(declare-fun temp880_83 () (_ BitVec 64))
(declare-fun temp880_84 () (_ BitVec 64))
(declare-fun temp880_85 () (_ BitVec 64))
(declare-fun temp880_86 () (_ BitVec 64))
(declare-fun temp880_87 () (_ BitVec 64))
(declare-fun temp880_88 () (_ BitVec 64))
(declare-fun temp880_89 () (_ BitVec 64))
(declare-fun temp880_90 () (_ BitVec 64))
(declare-fun temp880_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp880_92 () (_ BitVec 64))
(declare-fun temp880_93 () (_ BitVec 64))
(declare-fun temp880_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp880_95 () (_ BitVec 64))
(declare-fun temp880_96 () (_ BitVec 64))
(declare-fun temp880_97 () (_ BitVec 64))
(declare-fun temp880_98 () (_ BitVec 64))
(declare-fun temp880_99 () (_ BitVec 64))
(declare-fun temp880_100 () (_ BitVec 64))
(declare-fun temp880_101 () (_ BitVec 64))
(declare-fun temp880_102 () (_ BitVec 64))
(declare-fun temp880_103 () (_ BitVec 64))
(declare-fun temp880_104 () (_ BitVec 64))
(declare-fun temp880_105 () (_ BitVec 64))
(declare-fun temp880_106 () (_ BitVec 64))
(declare-fun temp880_107 () (_ BitVec 64))
(declare-fun temp880_108 () (_ BitVec 64))
(declare-fun temp880_109 () (_ BitVec 64))
(declare-fun temp880_110 () (_ BitVec 64))
(declare-fun temp880_111 () (_ BitVec 64))
(declare-fun temp880_112 () (_ BitVec 64))
(declare-fun temp880_113 () (_ BitVec 64))
(declare-fun temp880_114 () (_ BitVec 64))
(declare-fun temp880_115 () (_ BitVec 64))
(declare-fun temp880_116 () (_ BitVec 64))
(declare-fun temp880_117 () (_ BitVec 64))
(declare-fun temp880_118 () (_ BitVec 64))
(declare-fun temp880_119 () (_ BitVec 64))
(declare-fun temp880_120 () (_ BitVec 64))
(declare-fun temp880_121 () (_ BitVec 64))
(declare-fun temp880_122 () (_ BitVec 64))
(declare-fun temp880_123 () (_ BitVec 64))
(declare-fun temp880_124 () (_ BitVec 64))
(declare-fun temp880_125 () (_ BitVec 64))
(declare-fun temp880_126 () (_ BitVec 64))
(declare-fun temp880_127 () (_ BitVec 64))
(declare-fun temp880_128 () (_ BitVec 64))
(declare-fun temp880_129 () (_ BitVec 64))
(declare-fun temp880_130 () (_ BitVec 64))
(declare-fun temp880_131 () (_ BitVec 64))
(declare-fun temp880_132 () (_ BitVec 64))
(declare-fun temp880_133 () (_ BitVec 64))
(declare-fun temp880_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp880_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp880_136 () (_ BitVec 64))
(declare-fun temp880_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp880_138 () (_ BitVec 64))
(declare-fun temp880_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp880_140 () (_ BitVec 64))
(declare-fun temp880_141 () (_ BitVec 64))
(declare-fun temp880_142 () (_ BitVec 64))
(declare-fun temp880_143 () (_ BitVec 64))
(declare-fun temp880_144 () (_ BitVec 64))
(declare-fun temp880_145 () (_ BitVec 64))
(declare-fun temp880_146 () (_ BitVec 64))
(declare-fun temp880_147 () (_ BitVec 64))
(declare-fun temp880_148 () (_ BitVec 64))
(declare-fun temp880_149 () (_ BitVec 64))
(declare-fun temp880_150 () (_ BitVec 64))
(declare-fun temp880_151 () (_ BitVec 64))
(declare-fun temp880_152 () (_ BitVec 64))
(declare-fun temp880_153 () (_ BitVec 64))
(declare-fun temp880_154 () (_ BitVec 64))
(declare-fun temp880_155 () (_ BitVec 64))
(declare-fun temp880_157 () (_ BitVec 64))
(declare-fun temp880_158 () (_ BitVec 64))
(declare-fun temp880_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp880_159 () (_ BitVec 64))
(declare-fun temp880_160 () (_ BitVec 64))
(declare-fun temp880_162 () (_ BitVec 64))
(declare-fun temp880_163 () (_ BitVec 64))
(declare-fun temp880_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp880_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp880_165 () (_ BitVec 64))
(declare-fun temp880_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp880_167 () (_ BitVec 64))
(declare-fun temp880_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp880_169 () (_ BitVec 64))
(declare-fun temp880_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp880_171 () (_ BitVec 64))
(declare-fun temp880_172 () (_ BitVec 64))
(declare-fun temp880_173 () (_ BitVec 64))
(declare-fun temp880_174 () (_ BitVec 64))
(declare-fun temp880_175 () (_ BitVec 64))
(declare-fun temp880_176 () (_ BitVec 64))
(declare-fun temp880_177 () (_ BitVec 64))
(declare-fun temp880_178 () (_ BitVec 64))
(declare-fun temp880_179 () (_ BitVec 64))
(declare-fun temp880_180 () (_ BitVec 64))
(declare-fun temp880_181 () (_ BitVec 64))
(declare-fun temp880_182 () (_ BitVec 64))
(declare-fun temp880_183 () (_ BitVec 64))
(declare-fun temp880_184 () (_ BitVec 64))
(declare-fun temp880_185 () (_ BitVec 64))
(declare-fun temp880_186 () (_ BitVec 64))
(declare-fun temp880_187 () (_ BitVec 64))
(declare-fun temp880_188 () (_ BitVec 64))
(declare-fun temp880_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp880_190 () (_ BitVec 64))
(declare-fun temp880_192 () (_ BitVec 64))
(declare-fun temp880_193 () (_ BitVec 64))
(declare-fun temp880_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp880_194 () (_ BitVec 64))
(declare-fun temp880_195 () (_ BitVec 64))
(declare-fun temp880_197 () (_ BitVec 64))
(declare-fun temp880_198 () (_ BitVec 64))
(declare-fun temp880_196 () (_ BitVec 64))
(declare-fun temp880_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp880_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp880_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp880_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp880_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp880_204 () (_ BitVec 64))
(declare-fun temp880_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp880_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp880_207 () (_ BitVec 64))
(declare-fun temp880_208 () (_ BitVec 64))
(declare-fun temp880_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp880_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp880_211 () (_ BitVec 64))
(declare-fun temp880_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp880_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp880_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var5321104 () (_ BitVec 64))
(declare-fun var5583248 () (_ BitVec 64))
(declare-fun temp880_215 () (_ BitVec 64))
(assert (= temp880_1 #x0000000000000001))
(assert (= var77203 temp880_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp880_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp880_2)))
(assert (= temp880_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp880_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp880_4 #x0000000000000000))
(assert (= var210941 temp880_4))
(assert (= temp880_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp880_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp880_6 #x0000000000000000))
(assert (= var210986 temp880_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp880_7 #x0000000000000000))
(assert (= temp880_8 temp880_7))
(assert (= temp880_9 (select ARGNAME_padding_NAMEEND_VAL temp880_8)))
(assert (= temp880_10 #x0000000000000001))
(assert (= temp880_11 temp880_10))
(assert (= temp880_12 (select ARGNAME_padding_NAMEEND_VAL temp880_11)))
(assert (= temp880_13 #x0000000000000002))
(assert (= temp880_14 temp880_13))
(assert (= temp880_15 (select ARGNAME_padding_NAMEEND_VAL temp880_14)))
(assert (= temp880_16 #x0000000000000003))
(assert (= temp880_17 temp880_16))
(assert (= temp880_18 (select ARGNAME_padding_NAMEEND_VAL temp880_17)))
(assert (= temp880_19 #x0000000000000004))
(assert (= temp880_20 temp880_19))
(assert (= temp880_21 (select ARGNAME_padding_NAMEEND_VAL temp880_20)))
(assert (= temp880_22 #x0000000000000005))
(assert (= temp880_23 temp880_22))
(assert (= temp880_24 (select ARGNAME_padding_NAMEEND_VAL temp880_23)))
(assert (= temp880_25 #x0000000000000000))
(assert (= temp880_26 #x0000000000000000))
(assert (= temp880_27 temp880_26))
(assert (= temp880_28 (select ARGNAME_padding_NAMEEND_VAL temp880_27)))
(assert (= temp880_29 #x0000000000000000))
(assert (= temp880_30 #x0000000000000001))
(assert (= temp880_31 temp880_30))
(assert (= temp880_32 (select ARGNAME_padding_NAMEEND_VAL temp880_31)))
(assert (= temp880_33 #x0000000000000000))
(assert (= temp880_34 #x0000000000000002))
(assert (= temp880_35 temp880_34))
(assert (= temp880_36 (select ARGNAME_padding_NAMEEND_VAL temp880_35)))
(assert (= temp880_37 #x0000000000000000))
(assert (= temp880_38 #x0000000000000003))
(assert (= temp880_39 temp880_38))
(assert (= temp880_40 (select ARGNAME_padding_NAMEEND_VAL temp880_39)))
(assert (= temp880_41 #x0000000000000000))
(assert (= temp880_42 #x0000000000000004))
(assert (= temp880_43 temp880_42))
(assert (= temp880_44 (select ARGNAME_padding_NAMEEND_VAL temp880_43)))
(assert (= temp880_45 #x0000000000000000))
(assert (= temp880_46 #x0000000000000005))
(assert (= temp880_47 temp880_46))
(assert (= temp880_48 (select ARGNAME_padding_NAMEEND_VAL temp880_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp880_28 temp880_25)
             (bvslt temp880_32 temp880_29)
             (bvslt temp880_36 temp880_33)
             (bvslt temp880_40 temp880_37)
             (bvslt temp880_44 temp880_41)
             (bvslt temp880_48 temp880_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp880_49 #x0000000000000000))
(assert (= var1191714 temp880_49))
(assert (= temp880_50 #x0000000000000000))
(assert (= temp880_51 temp880_50))
(assert (= temp880_52 (select ARGNAME_output_padding_NAMEEND_VAL temp880_51)))
(assert (= temp880_53 #x0000000000000001))
(assert (= temp880_54 temp880_53))
(assert (= temp880_55 (select ARGNAME_output_padding_NAMEEND_VAL temp880_54)))
(assert (= temp880_56 #x0000000000000002))
(assert (= temp880_57 temp880_56))
(assert (= temp880_58 (select ARGNAME_output_padding_NAMEEND_VAL temp880_57)))
(assert (= temp880_59 #x0000000000000003))
(assert (= temp880_60 temp880_59))
(assert (= temp880_61 (select ARGNAME_output_padding_NAMEEND_VAL temp880_60)))
(assert (= temp880_62 #x0000000000000004))
(assert (= temp880_63 temp880_62))
(assert (= temp880_64 (select ARGNAME_output_padding_NAMEEND_VAL temp880_63)))
(assert (= temp880_65 #x0000000000000005))
(assert (= temp880_66 temp880_65))
(assert (= temp880_67 (select ARGNAME_output_padding_NAMEEND_VAL temp880_66)))
(assert (= temp880_68 #x0000000000000000))
(assert (= temp880_69 #x0000000000000000))
(assert (= temp880_70 temp880_69))
(assert (= temp880_71 (select ARGNAME_output_padding_NAMEEND_VAL temp880_70)))
(assert (= temp880_72 #x0000000000000000))
(assert (= temp880_73 #x0000000000000001))
(assert (= temp880_74 temp880_73))
(assert (= temp880_75 (select ARGNAME_output_padding_NAMEEND_VAL temp880_74)))
(assert (= temp880_76 #x0000000000000000))
(assert (= temp880_77 #x0000000000000002))
(assert (= temp880_78 temp880_77))
(assert (= temp880_79 (select ARGNAME_output_padding_NAMEEND_VAL temp880_78)))
(assert (= temp880_80 #x0000000000000000))
(assert (= temp880_81 #x0000000000000003))
(assert (= temp880_82 temp880_81))
(assert (= temp880_83 (select ARGNAME_output_padding_NAMEEND_VAL temp880_82)))
(assert (= temp880_84 #x0000000000000000))
(assert (= temp880_85 #x0000000000000004))
(assert (= temp880_86 temp880_85))
(assert (= temp880_87 (select ARGNAME_output_padding_NAMEEND_VAL temp880_86)))
(assert (= temp880_88 #x0000000000000000))
(assert (= temp880_89 #x0000000000000005))
(assert (= temp880_90 temp880_89))
(assert (= temp880_91 (select ARGNAME_output_padding_NAMEEND_VAL temp880_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp880_71 temp880_68)
             (bvslt temp880_75 temp880_72)
             (bvslt temp880_79 temp880_76)
             (bvslt temp880_83 temp880_80)
             (bvslt temp880_87 temp880_84)
             (bvslt temp880_91 temp880_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp880_92 #x0000000000000000))
(assert (= var1191725 temp880_92))
(assert (= temp880_93 #x0000000000000000))
(assert (= temp880_94 temp880_93))
(assert (= temp880_95 (select ARGNAME_stride_NAMEEND_VAL temp880_94)))
(assert (= temp880_96 #x0000000000000001))
(assert (= temp880_97 temp880_96))
(assert (= temp880_98 (select ARGNAME_stride_NAMEEND_VAL temp880_97)))
(assert (= temp880_99 #x0000000000000002))
(assert (= temp880_100 temp880_99))
(assert (= temp880_101 (select ARGNAME_stride_NAMEEND_VAL temp880_100)))
(assert (= temp880_102 #x0000000000000003))
(assert (= temp880_103 temp880_102))
(assert (= temp880_104 (select ARGNAME_stride_NAMEEND_VAL temp880_103)))
(assert (= temp880_105 #x0000000000000004))
(assert (= temp880_106 temp880_105))
(assert (= temp880_107 (select ARGNAME_stride_NAMEEND_VAL temp880_106)))
(assert (= temp880_108 #x0000000000000005))
(assert (= temp880_109 temp880_108))
(assert (= temp880_110 (select ARGNAME_stride_NAMEEND_VAL temp880_109)))
(assert (= temp880_111 #x0000000000000000))
(assert (= temp880_112 #x0000000000000000))
(assert (= temp880_113 temp880_112))
(assert (= temp880_114 (select ARGNAME_stride_NAMEEND_VAL temp880_113)))
(assert (= temp880_115 #x0000000000000000))
(assert (= temp880_116 #x0000000000000001))
(assert (= temp880_117 temp880_116))
(assert (= temp880_118 (select ARGNAME_stride_NAMEEND_VAL temp880_117)))
(assert (= temp880_119 #x0000000000000000))
(assert (= temp880_120 #x0000000000000002))
(assert (= temp880_121 temp880_120))
(assert (= temp880_122 (select ARGNAME_stride_NAMEEND_VAL temp880_121)))
(assert (= temp880_123 #x0000000000000000))
(assert (= temp880_124 #x0000000000000003))
(assert (= temp880_125 temp880_124))
(assert (= temp880_126 (select ARGNAME_stride_NAMEEND_VAL temp880_125)))
(assert (= temp880_127 #x0000000000000000))
(assert (= temp880_128 #x0000000000000004))
(assert (= temp880_129 temp880_128))
(assert (= temp880_130 (select ARGNAME_stride_NAMEEND_VAL temp880_129)))
(assert (= temp880_131 #x0000000000000000))
(assert (= temp880_132 #x0000000000000005))
(assert (= temp880_133 temp880_132))
(assert (= temp880_134 (select ARGNAME_stride_NAMEEND_VAL temp880_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp880_114 temp880_111)
             (bvsle temp880_118 temp880_115)
             (bvsle temp880_122 temp880_119)
             (bvsle temp880_126 temp880_123)
             (bvsle temp880_130 temp880_127)
             (bvsle temp880_134 temp880_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp880_135 #x0000000000000000))
(assert (= var1191735 temp880_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp880_136 #x0000000000000001))
(assert (= var1191747 temp880_136))
(assert (= temp880_137 #x0000000000000000))
(assert (= var1179826 temp880_137))
(assert (= temp880_138 #x0000000000000000))
(assert (= temp880_139 temp880_138))
(assert (= temp880_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp880_139)))
(assert (= temp880_141 #x0000000000000001))
(assert (= temp880_142 temp880_141))
(assert (= temp880_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp880_142)))
(assert (= temp880_144 #x0000000000000002))
(assert (= temp880_145 temp880_144))
(assert (= temp880_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp880_145)))
(assert (= temp880_147 #x0000000000000003))
(assert (= temp880_148 temp880_147))
(assert (= temp880_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp880_148)))
(assert (= temp880_150 #x0000000000000004))
(assert (= temp880_151 temp880_150))
(assert (= temp880_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp880_151)))
(assert (= temp880_153 #x0000000000000005))
(assert (= temp880_154 temp880_153))
(assert (= temp880_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp880_154)))
(assert (= temp880_157 var1179826))
(assert (= temp880_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp880_157)))
(assert (= temp880_156 temp880_158))
(assert (= var1191780
   (ite (bvslt temp880_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp880_159 #x0000000000000000))
(assert (= var1191780 temp880_159))
(assert (= temp880_160 #x0000000000000000))
(assert (= var1179826 temp880_160))
(assert (= temp880_162 var1179826))
(assert (= temp880_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp880_162)))
(assert (= temp880_161 temp880_163))
(assert (= var1191802 (bvsmod temp880_161 ARGNAME_groups_NAMEEND)))
(assert (= temp880_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp880_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp880_165 #x0000000000000001))
(assert (= var1191803 temp880_165))
(assert (= temp880_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp880_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp880_167 #x0000000000000001))
(assert (= var1191823 temp880_167))
(assert (= temp880_168 #x0000000000000001))
(assert (= var1180714 temp880_168))
(assert (= temp880_169 #x0000000000000000))
(assert (= temp880_170 temp880_169))
(assert (= temp880_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp880_170)))
(assert (= temp880_172 #x0000000000000001))
(assert (= temp880_173 temp880_172))
(assert (= temp880_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp880_173)))
(assert (= temp880_175 #x0000000000000002))
(assert (= temp880_176 temp880_175))
(assert (= temp880_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp880_176)))
(assert (= temp880_178 #x0000000000000003))
(assert (= temp880_179 temp880_178))
(assert (= temp880_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp880_179)))
(assert (= temp880_181 #x0000000000000004))
(assert (= temp880_182 temp880_181))
(assert (= temp880_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp880_182)))
(assert (= temp880_184 #x0000000000000005))
(assert (= temp880_185 temp880_184))
(assert (= temp880_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp880_185)))
(assert (= temp880_187 #x0000000000000000))
(assert (= temp880_188
   (ite (bvslt var1180714 temp880_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp880_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp880_188)))
(assert (= var1191831 temp880_189))
(assert (bvslt (ite (bvslt var1180714 temp880_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp880_190 #x0000000000000001))
(assert (= var1180714 temp880_190))
(assert (= temp880_192 var1180714))
(assert (= temp880_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp880_192)))
(assert (= temp880_191 temp880_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp880_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp880_194 #x0000000000000001))
(assert (= var1191836 temp880_194))
(assert (= temp880_195 #x0000000000000000))
(assert (= var1179826 temp880_195))
(assert (= temp880_197 var1179826))
(assert (= temp880_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp880_197)))
(assert (= temp880_196 temp880_198))
(assert (= temp880_199 #x0000000000000002))
(assert (= var1586025 temp880_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp880_200 #x0000000000000001))
(assert (= var1191993 temp880_200))
(assert (= temp880_201 #x0000000000000001))
(assert (= var2700303 temp880_201))
(assert (= temp880_202 #x0000000000000001))
(assert (= var2962447 temp880_202))
(assert (= temp880_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp880_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp880_204 #x0000000000000001))
(assert (= var211058 temp880_204))
(assert (= temp880_205 #x0000000000000001))
(assert (= var211188 temp880_205))
(assert (= var3879401 var211188))
(assert (= temp880_206 #x0000000000000000))
(assert (= var3866802 temp880_206))
(assert (= temp880_207 #x0000000000000000))
(assert (= temp880_208
   (ite (bvslt var3866802 temp880_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp880_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp880_208)))
(assert (= var3879420 temp880_209))
(assert (bvslt (ite (bvslt var3866802 temp880_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp880_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp880_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp880_211 #x0000000000000001))
(assert (= var3879421 temp880_211))
(assert (= temp880_212 #x0000000000000000))
(assert (= var4079423 temp880_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp880_213 #x0000000000000002))
(assert (= var4208259 temp880_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp880_214 #x0000000000000000))
(assert (= var4273820 temp880_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var5321104 var211201))
(assert (= var5583248 var211201))
(assert (= temp880_215 #x0000000000000001))
(assert (= var211058 temp880_215))
(model-add temp880_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp880_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp880_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp880_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





