(declare-fun temp668_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp668_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp668_3 () (_ BitVec 64))
(declare-fun temp668_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp668_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp668_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp668_7 () (_ BitVec 64))
(declare-fun temp668_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp668_9 () (_ BitVec 64))
(declare-fun temp668_10 () (_ BitVec 64))
(declare-fun temp668_11 () (_ BitVec 64))
(declare-fun temp668_12 () (_ BitVec 64))
(declare-fun temp668_13 () (_ BitVec 64))
(declare-fun temp668_14 () (_ BitVec 64))
(declare-fun temp668_15 () (_ BitVec 64))
(declare-fun temp668_16 () (_ BitVec 64))
(declare-fun temp668_17 () (_ BitVec 64))
(declare-fun temp668_18 () (_ BitVec 64))
(declare-fun temp668_19 () (_ BitVec 64))
(declare-fun temp668_20 () (_ BitVec 64))
(declare-fun temp668_21 () (_ BitVec 64))
(declare-fun temp668_22 () (_ BitVec 64))
(declare-fun temp668_23 () (_ BitVec 64))
(declare-fun temp668_24 () (_ BitVec 64))
(declare-fun temp668_25 () (_ BitVec 64))
(declare-fun temp668_26 () (_ BitVec 64))
(declare-fun temp668_27 () (_ BitVec 64))
(declare-fun temp668_28 () (_ BitVec 64))
(declare-fun temp668_29 () (_ BitVec 64))
(declare-fun temp668_30 () (_ BitVec 64))
(declare-fun temp668_31 () (_ BitVec 64))
(declare-fun temp668_32 () (_ BitVec 64))
(declare-fun temp668_33 () (_ BitVec 64))
(declare-fun temp668_34 () (_ BitVec 64))
(declare-fun temp668_35 () (_ BitVec 64))
(declare-fun temp668_36 () (_ BitVec 64))
(declare-fun temp668_37 () (_ BitVec 64))
(declare-fun temp668_38 () (_ BitVec 64))
(declare-fun temp668_39 () (_ BitVec 64))
(declare-fun temp668_40 () (_ BitVec 64))
(declare-fun temp668_41 () (_ BitVec 64))
(declare-fun temp668_42 () (_ BitVec 64))
(declare-fun temp668_43 () (_ BitVec 64))
(declare-fun temp668_44 () (_ BitVec 64))
(declare-fun temp668_45 () (_ BitVec 64))
(declare-fun temp668_46 () (_ BitVec 64))
(declare-fun temp668_47 () (_ BitVec 64))
(declare-fun temp668_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp668_49 () (_ BitVec 64))
(declare-fun temp668_50 () (_ BitVec 64))
(declare-fun temp668_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp668_52 () (_ BitVec 64))
(declare-fun temp668_53 () (_ BitVec 64))
(declare-fun temp668_54 () (_ BitVec 64))
(declare-fun temp668_55 () (_ BitVec 64))
(declare-fun temp668_56 () (_ BitVec 64))
(declare-fun temp668_57 () (_ BitVec 64))
(declare-fun temp668_58 () (_ BitVec 64))
(declare-fun temp668_59 () (_ BitVec 64))
(declare-fun temp668_60 () (_ BitVec 64))
(declare-fun temp668_61 () (_ BitVec 64))
(declare-fun temp668_62 () (_ BitVec 64))
(declare-fun temp668_63 () (_ BitVec 64))
(declare-fun temp668_64 () (_ BitVec 64))
(declare-fun temp668_65 () (_ BitVec 64))
(declare-fun temp668_66 () (_ BitVec 64))
(declare-fun temp668_67 () (_ BitVec 64))
(declare-fun temp668_68 () (_ BitVec 64))
(declare-fun temp668_69 () (_ BitVec 64))
(declare-fun temp668_70 () (_ BitVec 64))
(declare-fun temp668_71 () (_ BitVec 64))
(declare-fun temp668_72 () (_ BitVec 64))
(declare-fun temp668_73 () (_ BitVec 64))
(declare-fun temp668_74 () (_ BitVec 64))
(declare-fun temp668_75 () (_ BitVec 64))
(declare-fun temp668_76 () (_ BitVec 64))
(declare-fun temp668_77 () (_ BitVec 64))
(declare-fun temp668_78 () (_ BitVec 64))
(declare-fun temp668_79 () (_ BitVec 64))
(declare-fun temp668_80 () (_ BitVec 64))
(declare-fun temp668_81 () (_ BitVec 64))
(declare-fun temp668_82 () (_ BitVec 64))
(declare-fun temp668_83 () (_ BitVec 64))
(declare-fun temp668_84 () (_ BitVec 64))
(declare-fun temp668_85 () (_ BitVec 64))
(declare-fun temp668_86 () (_ BitVec 64))
(declare-fun temp668_87 () (_ BitVec 64))
(declare-fun temp668_88 () (_ BitVec 64))
(declare-fun temp668_89 () (_ BitVec 64))
(declare-fun temp668_90 () (_ BitVec 64))
(declare-fun temp668_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp668_92 () (_ BitVec 64))
(declare-fun temp668_93 () (_ BitVec 64))
(declare-fun temp668_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp668_95 () (_ BitVec 64))
(declare-fun temp668_96 () (_ BitVec 64))
(declare-fun temp668_97 () (_ BitVec 64))
(declare-fun temp668_98 () (_ BitVec 64))
(declare-fun temp668_99 () (_ BitVec 64))
(declare-fun temp668_100 () (_ BitVec 64))
(declare-fun temp668_101 () (_ BitVec 64))
(declare-fun temp668_102 () (_ BitVec 64))
(declare-fun temp668_103 () (_ BitVec 64))
(declare-fun temp668_104 () (_ BitVec 64))
(declare-fun temp668_105 () (_ BitVec 64))
(declare-fun temp668_106 () (_ BitVec 64))
(declare-fun temp668_107 () (_ BitVec 64))
(declare-fun temp668_108 () (_ BitVec 64))
(declare-fun temp668_109 () (_ BitVec 64))
(declare-fun temp668_110 () (_ BitVec 64))
(declare-fun temp668_111 () (_ BitVec 64))
(declare-fun temp668_112 () (_ BitVec 64))
(declare-fun temp668_113 () (_ BitVec 64))
(declare-fun temp668_114 () (_ BitVec 64))
(declare-fun temp668_115 () (_ BitVec 64))
(declare-fun temp668_116 () (_ BitVec 64))
(declare-fun temp668_117 () (_ BitVec 64))
(declare-fun temp668_118 () (_ BitVec 64))
(declare-fun temp668_119 () (_ BitVec 64))
(declare-fun temp668_120 () (_ BitVec 64))
(declare-fun temp668_121 () (_ BitVec 64))
(declare-fun temp668_122 () (_ BitVec 64))
(declare-fun temp668_123 () (_ BitVec 64))
(declare-fun temp668_124 () (_ BitVec 64))
(declare-fun temp668_125 () (_ BitVec 64))
(declare-fun temp668_126 () (_ BitVec 64))
(declare-fun temp668_127 () (_ BitVec 64))
(declare-fun temp668_128 () (_ BitVec 64))
(declare-fun temp668_129 () (_ BitVec 64))
(declare-fun temp668_130 () (_ BitVec 64))
(declare-fun temp668_131 () (_ BitVec 64))
(declare-fun temp668_132 () (_ BitVec 64))
(declare-fun temp668_133 () (_ BitVec 64))
(declare-fun temp668_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp668_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp668_136 () (_ BitVec 64))
(declare-fun temp668_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp668_138 () (_ BitVec 64))
(declare-fun temp668_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp668_140 () (_ BitVec 64))
(declare-fun temp668_141 () (_ BitVec 64))
(declare-fun temp668_142 () (_ BitVec 64))
(declare-fun temp668_143 () (_ BitVec 64))
(declare-fun temp668_144 () (_ BitVec 64))
(declare-fun temp668_145 () (_ BitVec 64))
(declare-fun temp668_146 () (_ BitVec 64))
(declare-fun temp668_147 () (_ BitVec 64))
(declare-fun temp668_148 () (_ BitVec 64))
(declare-fun temp668_149 () (_ BitVec 64))
(declare-fun temp668_150 () (_ BitVec 64))
(declare-fun temp668_151 () (_ BitVec 64))
(declare-fun temp668_152 () (_ BitVec 64))
(declare-fun temp668_153 () (_ BitVec 64))
(declare-fun temp668_154 () (_ BitVec 64))
(declare-fun temp668_155 () (_ BitVec 64))
(declare-fun temp668_157 () (_ BitVec 64))
(declare-fun temp668_158 () (_ BitVec 64))
(declare-fun temp668_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp668_159 () (_ BitVec 64))
(declare-fun temp668_160 () (_ BitVec 64))
(declare-fun temp668_162 () (_ BitVec 64))
(declare-fun temp668_163 () (_ BitVec 64))
(declare-fun temp668_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp668_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp668_165 () (_ BitVec 64))
(declare-fun temp668_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp668_167 () (_ BitVec 64))
(declare-fun temp668_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp668_169 () (_ BitVec 64))
(declare-fun temp668_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp668_171 () (_ BitVec 64))
(declare-fun temp668_172 () (_ BitVec 64))
(declare-fun temp668_173 () (_ BitVec 64))
(declare-fun temp668_174 () (_ BitVec 64))
(declare-fun temp668_175 () (_ BitVec 64))
(declare-fun temp668_176 () (_ BitVec 64))
(declare-fun temp668_177 () (_ BitVec 64))
(declare-fun temp668_178 () (_ BitVec 64))
(declare-fun temp668_179 () (_ BitVec 64))
(declare-fun temp668_180 () (_ BitVec 64))
(declare-fun temp668_181 () (_ BitVec 64))
(declare-fun temp668_182 () (_ BitVec 64))
(declare-fun temp668_183 () (_ BitVec 64))
(declare-fun temp668_184 () (_ BitVec 64))
(declare-fun temp668_185 () (_ BitVec 64))
(declare-fun temp668_186 () (_ BitVec 64))
(declare-fun temp668_187 () (_ BitVec 64))
(declare-fun temp668_188 () (_ BitVec 64))
(declare-fun temp668_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp668_190 () (_ BitVec 64))
(declare-fun temp668_192 () (_ BitVec 64))
(declare-fun temp668_193 () (_ BitVec 64))
(declare-fun temp668_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp668_194 () (_ BitVec 64))
(declare-fun temp668_195 () (_ BitVec 64))
(declare-fun temp668_197 () (_ BitVec 64))
(declare-fun temp668_198 () (_ BitVec 64))
(declare-fun temp668_196 () (_ BitVec 64))
(declare-fun temp668_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp668_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp668_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp668_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp668_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp668_204 () (_ BitVec 64))
(declare-fun temp668_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp668_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp668_207 () (_ BitVec 64))
(declare-fun temp668_208 () (_ BitVec 64))
(declare-fun temp668_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp668_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp668_211 () (_ BitVec 64))
(declare-fun temp668_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp668_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp668_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4796816 () (_ BitVec 64))
(declare-fun var211494 () (_ BitVec 64))
(declare-fun temp668_215 () (_ BitVec 64))
(declare-fun var211495 () (_ BitVec 64))
(declare-fun temp668_217 () (_ BitVec 64))
(declare-fun temp668_216 () (_ BitVec 64))
(declare-fun temp668_218 () (_ BitVec 64))
(declare-fun var6753770 () (_ BitVec 64))
(declare-fun temp668_220 () (_ BitVec 64))
(declare-fun temp668_219 () (_ BitVec 64))
(declare-fun temp668_221 () (_ BitVec 64))
(declare-fun temp668_222 () (_ BitVec 64))
(declare-fun var7484180 () (_ BitVec 64))
(declare-fun var7484147 () (_ BitVec 64))
(declare-fun var7352711 () (_ BitVec 64))
(declare-fun var7352707 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp668_223 () (_ BitVec 64))
(assert (= temp668_1 #x0000000000000001))
(assert (= var77203 temp668_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp668_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp668_2)))
(assert (= temp668_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp668_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp668_4 #x0000000000000000))
(assert (= var210941 temp668_4))
(assert (= temp668_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp668_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp668_6 #x0000000000000000))
(assert (= var210986 temp668_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp668_7 #x0000000000000000))
(assert (= temp668_8 temp668_7))
(assert (= temp668_9 (select ARGNAME_padding_NAMEEND_VAL temp668_8)))
(assert (= temp668_10 #x0000000000000001))
(assert (= temp668_11 temp668_10))
(assert (= temp668_12 (select ARGNAME_padding_NAMEEND_VAL temp668_11)))
(assert (= temp668_13 #x0000000000000002))
(assert (= temp668_14 temp668_13))
(assert (= temp668_15 (select ARGNAME_padding_NAMEEND_VAL temp668_14)))
(assert (= temp668_16 #x0000000000000003))
(assert (= temp668_17 temp668_16))
(assert (= temp668_18 (select ARGNAME_padding_NAMEEND_VAL temp668_17)))
(assert (= temp668_19 #x0000000000000004))
(assert (= temp668_20 temp668_19))
(assert (= temp668_21 (select ARGNAME_padding_NAMEEND_VAL temp668_20)))
(assert (= temp668_22 #x0000000000000005))
(assert (= temp668_23 temp668_22))
(assert (= temp668_24 (select ARGNAME_padding_NAMEEND_VAL temp668_23)))
(assert (= temp668_25 #x0000000000000000))
(assert (= temp668_26 #x0000000000000000))
(assert (= temp668_27 temp668_26))
(assert (= temp668_28 (select ARGNAME_padding_NAMEEND_VAL temp668_27)))
(assert (= temp668_29 #x0000000000000000))
(assert (= temp668_30 #x0000000000000001))
(assert (= temp668_31 temp668_30))
(assert (= temp668_32 (select ARGNAME_padding_NAMEEND_VAL temp668_31)))
(assert (= temp668_33 #x0000000000000000))
(assert (= temp668_34 #x0000000000000002))
(assert (= temp668_35 temp668_34))
(assert (= temp668_36 (select ARGNAME_padding_NAMEEND_VAL temp668_35)))
(assert (= temp668_37 #x0000000000000000))
(assert (= temp668_38 #x0000000000000003))
(assert (= temp668_39 temp668_38))
(assert (= temp668_40 (select ARGNAME_padding_NAMEEND_VAL temp668_39)))
(assert (= temp668_41 #x0000000000000000))
(assert (= temp668_42 #x0000000000000004))
(assert (= temp668_43 temp668_42))
(assert (= temp668_44 (select ARGNAME_padding_NAMEEND_VAL temp668_43)))
(assert (= temp668_45 #x0000000000000000))
(assert (= temp668_46 #x0000000000000005))
(assert (= temp668_47 temp668_46))
(assert (= temp668_48 (select ARGNAME_padding_NAMEEND_VAL temp668_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp668_28 temp668_25)
             (bvslt temp668_32 temp668_29)
             (bvslt temp668_36 temp668_33)
             (bvslt temp668_40 temp668_37)
             (bvslt temp668_44 temp668_41)
             (bvslt temp668_48 temp668_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp668_49 #x0000000000000000))
(assert (= var1191714 temp668_49))
(assert (= temp668_50 #x0000000000000000))
(assert (= temp668_51 temp668_50))
(assert (= temp668_52 (select ARGNAME_output_padding_NAMEEND_VAL temp668_51)))
(assert (= temp668_53 #x0000000000000001))
(assert (= temp668_54 temp668_53))
(assert (= temp668_55 (select ARGNAME_output_padding_NAMEEND_VAL temp668_54)))
(assert (= temp668_56 #x0000000000000002))
(assert (= temp668_57 temp668_56))
(assert (= temp668_58 (select ARGNAME_output_padding_NAMEEND_VAL temp668_57)))
(assert (= temp668_59 #x0000000000000003))
(assert (= temp668_60 temp668_59))
(assert (= temp668_61 (select ARGNAME_output_padding_NAMEEND_VAL temp668_60)))
(assert (= temp668_62 #x0000000000000004))
(assert (= temp668_63 temp668_62))
(assert (= temp668_64 (select ARGNAME_output_padding_NAMEEND_VAL temp668_63)))
(assert (= temp668_65 #x0000000000000005))
(assert (= temp668_66 temp668_65))
(assert (= temp668_67 (select ARGNAME_output_padding_NAMEEND_VAL temp668_66)))
(assert (= temp668_68 #x0000000000000000))
(assert (= temp668_69 #x0000000000000000))
(assert (= temp668_70 temp668_69))
(assert (= temp668_71 (select ARGNAME_output_padding_NAMEEND_VAL temp668_70)))
(assert (= temp668_72 #x0000000000000000))
(assert (= temp668_73 #x0000000000000001))
(assert (= temp668_74 temp668_73))
(assert (= temp668_75 (select ARGNAME_output_padding_NAMEEND_VAL temp668_74)))
(assert (= temp668_76 #x0000000000000000))
(assert (= temp668_77 #x0000000000000002))
(assert (= temp668_78 temp668_77))
(assert (= temp668_79 (select ARGNAME_output_padding_NAMEEND_VAL temp668_78)))
(assert (= temp668_80 #x0000000000000000))
(assert (= temp668_81 #x0000000000000003))
(assert (= temp668_82 temp668_81))
(assert (= temp668_83 (select ARGNAME_output_padding_NAMEEND_VAL temp668_82)))
(assert (= temp668_84 #x0000000000000000))
(assert (= temp668_85 #x0000000000000004))
(assert (= temp668_86 temp668_85))
(assert (= temp668_87 (select ARGNAME_output_padding_NAMEEND_VAL temp668_86)))
(assert (= temp668_88 #x0000000000000000))
(assert (= temp668_89 #x0000000000000005))
(assert (= temp668_90 temp668_89))
(assert (= temp668_91 (select ARGNAME_output_padding_NAMEEND_VAL temp668_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp668_71 temp668_68)
             (bvslt temp668_75 temp668_72)
             (bvslt temp668_79 temp668_76)
             (bvslt temp668_83 temp668_80)
             (bvslt temp668_87 temp668_84)
             (bvslt temp668_91 temp668_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp668_92 #x0000000000000000))
(assert (= var1191725 temp668_92))
(assert (= temp668_93 #x0000000000000000))
(assert (= temp668_94 temp668_93))
(assert (= temp668_95 (select ARGNAME_stride_NAMEEND_VAL temp668_94)))
(assert (= temp668_96 #x0000000000000001))
(assert (= temp668_97 temp668_96))
(assert (= temp668_98 (select ARGNAME_stride_NAMEEND_VAL temp668_97)))
(assert (= temp668_99 #x0000000000000002))
(assert (= temp668_100 temp668_99))
(assert (= temp668_101 (select ARGNAME_stride_NAMEEND_VAL temp668_100)))
(assert (= temp668_102 #x0000000000000003))
(assert (= temp668_103 temp668_102))
(assert (= temp668_104 (select ARGNAME_stride_NAMEEND_VAL temp668_103)))
(assert (= temp668_105 #x0000000000000004))
(assert (= temp668_106 temp668_105))
(assert (= temp668_107 (select ARGNAME_stride_NAMEEND_VAL temp668_106)))
(assert (= temp668_108 #x0000000000000005))
(assert (= temp668_109 temp668_108))
(assert (= temp668_110 (select ARGNAME_stride_NAMEEND_VAL temp668_109)))
(assert (= temp668_111 #x0000000000000000))
(assert (= temp668_112 #x0000000000000000))
(assert (= temp668_113 temp668_112))
(assert (= temp668_114 (select ARGNAME_stride_NAMEEND_VAL temp668_113)))
(assert (= temp668_115 #x0000000000000000))
(assert (= temp668_116 #x0000000000000001))
(assert (= temp668_117 temp668_116))
(assert (= temp668_118 (select ARGNAME_stride_NAMEEND_VAL temp668_117)))
(assert (= temp668_119 #x0000000000000000))
(assert (= temp668_120 #x0000000000000002))
(assert (= temp668_121 temp668_120))
(assert (= temp668_122 (select ARGNAME_stride_NAMEEND_VAL temp668_121)))
(assert (= temp668_123 #x0000000000000000))
(assert (= temp668_124 #x0000000000000003))
(assert (= temp668_125 temp668_124))
(assert (= temp668_126 (select ARGNAME_stride_NAMEEND_VAL temp668_125)))
(assert (= temp668_127 #x0000000000000000))
(assert (= temp668_128 #x0000000000000004))
(assert (= temp668_129 temp668_128))
(assert (= temp668_130 (select ARGNAME_stride_NAMEEND_VAL temp668_129)))
(assert (= temp668_131 #x0000000000000000))
(assert (= temp668_132 #x0000000000000005))
(assert (= temp668_133 temp668_132))
(assert (= temp668_134 (select ARGNAME_stride_NAMEEND_VAL temp668_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp668_114 temp668_111)
             (bvsle temp668_118 temp668_115)
             (bvsle temp668_122 temp668_119)
             (bvsle temp668_126 temp668_123)
             (bvsle temp668_130 temp668_127)
             (bvsle temp668_134 temp668_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp668_135 #x0000000000000000))
(assert (= var1191735 temp668_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp668_136 #x0000000000000001))
(assert (= var1191747 temp668_136))
(assert (= temp668_137 #x0000000000000000))
(assert (= var1179826 temp668_137))
(assert (= temp668_138 #x0000000000000000))
(assert (= temp668_139 temp668_138))
(assert (= temp668_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp668_139)))
(assert (= temp668_141 #x0000000000000001))
(assert (= temp668_142 temp668_141))
(assert (= temp668_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp668_142)))
(assert (= temp668_144 #x0000000000000002))
(assert (= temp668_145 temp668_144))
(assert (= temp668_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp668_145)))
(assert (= temp668_147 #x0000000000000003))
(assert (= temp668_148 temp668_147))
(assert (= temp668_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp668_148)))
(assert (= temp668_150 #x0000000000000004))
(assert (= temp668_151 temp668_150))
(assert (= temp668_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp668_151)))
(assert (= temp668_153 #x0000000000000005))
(assert (= temp668_154 temp668_153))
(assert (= temp668_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp668_154)))
(assert (= temp668_157 var1179826))
(assert (= temp668_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp668_157)))
(assert (= temp668_156 temp668_158))
(assert (= var1191780
   (ite (bvslt temp668_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp668_159 #x0000000000000000))
(assert (= var1191780 temp668_159))
(assert (= temp668_160 #x0000000000000000))
(assert (= var1179826 temp668_160))
(assert (= temp668_162 var1179826))
(assert (= temp668_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp668_162)))
(assert (= temp668_161 temp668_163))
(assert (= var1191802 (bvsmod temp668_161 ARGNAME_groups_NAMEEND)))
(assert (= temp668_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp668_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp668_165 #x0000000000000001))
(assert (= var1191803 temp668_165))
(assert (= temp668_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp668_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp668_167 #x0000000000000001))
(assert (= var1191823 temp668_167))
(assert (= temp668_168 #x0000000000000001))
(assert (= var1180714 temp668_168))
(assert (= temp668_169 #x0000000000000000))
(assert (= temp668_170 temp668_169))
(assert (= temp668_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp668_170)))
(assert (= temp668_172 #x0000000000000001))
(assert (= temp668_173 temp668_172))
(assert (= temp668_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp668_173)))
(assert (= temp668_175 #x0000000000000002))
(assert (= temp668_176 temp668_175))
(assert (= temp668_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp668_176)))
(assert (= temp668_178 #x0000000000000003))
(assert (= temp668_179 temp668_178))
(assert (= temp668_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp668_179)))
(assert (= temp668_181 #x0000000000000004))
(assert (= temp668_182 temp668_181))
(assert (= temp668_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp668_182)))
(assert (= temp668_184 #x0000000000000005))
(assert (= temp668_185 temp668_184))
(assert (= temp668_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp668_185)))
(assert (= temp668_187 #x0000000000000000))
(assert (= temp668_188
   (ite (bvslt var1180714 temp668_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp668_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp668_188)))
(assert (= var1191831 temp668_189))
(assert (bvslt (ite (bvslt var1180714 temp668_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp668_190 #x0000000000000001))
(assert (= var1180714 temp668_190))
(assert (= temp668_192 var1180714))
(assert (= temp668_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp668_192)))
(assert (= temp668_191 temp668_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp668_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp668_194 #x0000000000000001))
(assert (= var1191836 temp668_194))
(assert (= temp668_195 #x0000000000000000))
(assert (= var1179826 temp668_195))
(assert (= temp668_197 var1179826))
(assert (= temp668_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp668_197)))
(assert (= temp668_196 temp668_198))
(assert (= temp668_199 #x0000000000000002))
(assert (= var1586025 temp668_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp668_200 #x0000000000000001))
(assert (= var1191993 temp668_200))
(assert (= temp668_201 #x0000000000000001))
(assert (= var2700303 temp668_201))
(assert (= temp668_202 #x0000000000000001))
(assert (= var2962447 temp668_202))
(assert (= temp668_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp668_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp668_204 #x0000000000000001))
(assert (= var211058 temp668_204))
(assert (= temp668_205 #x0000000000000001))
(assert (= var211188 temp668_205))
(assert (= var3879401 var211188))
(assert (= temp668_206 #x0000000000000000))
(assert (= var3866802 temp668_206))
(assert (= temp668_207 #x0000000000000000))
(assert (= temp668_208
   (ite (bvslt var3866802 temp668_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp668_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp668_208)))
(assert (= var3879420 temp668_209))
(assert (bvslt (ite (bvslt var3866802 temp668_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp668_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp668_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp668_211 #x0000000000000001))
(assert (= var3879421 temp668_211))
(assert (= temp668_212 #x0000000000000000))
(assert (= var4079423 temp668_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp668_213 #x0000000000000002))
(assert (= var4208259 temp668_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp668_214 #x0000000000000000))
(assert (= var4273820 temp668_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4796816 var211201))
(assert (= var211494 var210913))
(assert (= temp668_215 #x0000000000000000))
(assert (= var211495
   (ite (distinct var211494 temp668_215) #x0000000000000001 #x0000000000000000)))
(assert (= temp668_217 #x0000000000000001))
(assert (= temp668_216 temp668_217))
(assert (= temp668_218 #x0000000000000001))
(assert (= var6753770 temp668_218))
(assert (= temp668_220 #xffffffffffffffff))
(assert (= temp668_219 temp668_220))
(assert (= temp668_221 #x0000000000000001))
(assert (= var211058 temp668_221))
(assert (= temp668_222 #x0000000000000000))
(assert (= var7484180 temp668_222))
(assert (= var7484147 var7484180))
(assert (= var7352711 var7484147))
(assert (= var7352707 var7352711))
(assert (= var212669 var7352707))
(assert (= temp668_223 #x0000000000000000))
(assert (= var212669 temp668_223))
(model-add temp668_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp668_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp668_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp668_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





