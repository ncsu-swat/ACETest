(declare-fun temp680_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp680_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp680_3 () (_ BitVec 64))
(declare-fun temp680_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp680_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp680_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp680_7 () (_ BitVec 64))
(declare-fun temp680_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp680_9 () (_ BitVec 64))
(declare-fun temp680_10 () (_ BitVec 64))
(declare-fun temp680_11 () (_ BitVec 64))
(declare-fun temp680_12 () (_ BitVec 64))
(declare-fun temp680_13 () (_ BitVec 64))
(declare-fun temp680_14 () (_ BitVec 64))
(declare-fun temp680_15 () (_ BitVec 64))
(declare-fun temp680_16 () (_ BitVec 64))
(declare-fun temp680_17 () (_ BitVec 64))
(declare-fun temp680_18 () (_ BitVec 64))
(declare-fun temp680_19 () (_ BitVec 64))
(declare-fun temp680_20 () (_ BitVec 64))
(declare-fun temp680_21 () (_ BitVec 64))
(declare-fun temp680_22 () (_ BitVec 64))
(declare-fun temp680_23 () (_ BitVec 64))
(declare-fun temp680_24 () (_ BitVec 64))
(declare-fun temp680_25 () (_ BitVec 64))
(declare-fun temp680_26 () (_ BitVec 64))
(declare-fun temp680_27 () (_ BitVec 64))
(declare-fun temp680_28 () (_ BitVec 64))
(declare-fun temp680_29 () (_ BitVec 64))
(declare-fun temp680_30 () (_ BitVec 64))
(declare-fun temp680_31 () (_ BitVec 64))
(declare-fun temp680_32 () (_ BitVec 64))
(declare-fun temp680_33 () (_ BitVec 64))
(declare-fun temp680_34 () (_ BitVec 64))
(declare-fun temp680_35 () (_ BitVec 64))
(declare-fun temp680_36 () (_ BitVec 64))
(declare-fun temp680_37 () (_ BitVec 64))
(declare-fun temp680_38 () (_ BitVec 64))
(declare-fun temp680_39 () (_ BitVec 64))
(declare-fun temp680_40 () (_ BitVec 64))
(declare-fun temp680_41 () (_ BitVec 64))
(declare-fun temp680_42 () (_ BitVec 64))
(declare-fun temp680_43 () (_ BitVec 64))
(declare-fun temp680_44 () (_ BitVec 64))
(declare-fun temp680_45 () (_ BitVec 64))
(declare-fun temp680_46 () (_ BitVec 64))
(declare-fun temp680_47 () (_ BitVec 64))
(declare-fun temp680_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp680_49 () (_ BitVec 64))
(declare-fun temp680_50 () (_ BitVec 64))
(declare-fun temp680_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp680_52 () (_ BitVec 64))
(declare-fun temp680_53 () (_ BitVec 64))
(declare-fun temp680_54 () (_ BitVec 64))
(declare-fun temp680_55 () (_ BitVec 64))
(declare-fun temp680_56 () (_ BitVec 64))
(declare-fun temp680_57 () (_ BitVec 64))
(declare-fun temp680_58 () (_ BitVec 64))
(declare-fun temp680_59 () (_ BitVec 64))
(declare-fun temp680_60 () (_ BitVec 64))
(declare-fun temp680_61 () (_ BitVec 64))
(declare-fun temp680_62 () (_ BitVec 64))
(declare-fun temp680_63 () (_ BitVec 64))
(declare-fun temp680_64 () (_ BitVec 64))
(declare-fun temp680_65 () (_ BitVec 64))
(declare-fun temp680_66 () (_ BitVec 64))
(declare-fun temp680_67 () (_ BitVec 64))
(declare-fun temp680_68 () (_ BitVec 64))
(declare-fun temp680_69 () (_ BitVec 64))
(declare-fun temp680_70 () (_ BitVec 64))
(declare-fun temp680_71 () (_ BitVec 64))
(declare-fun temp680_72 () (_ BitVec 64))
(declare-fun temp680_73 () (_ BitVec 64))
(declare-fun temp680_74 () (_ BitVec 64))
(declare-fun temp680_75 () (_ BitVec 64))
(declare-fun temp680_76 () (_ BitVec 64))
(declare-fun temp680_77 () (_ BitVec 64))
(declare-fun temp680_78 () (_ BitVec 64))
(declare-fun temp680_79 () (_ BitVec 64))
(declare-fun temp680_80 () (_ BitVec 64))
(declare-fun temp680_81 () (_ BitVec 64))
(declare-fun temp680_82 () (_ BitVec 64))
(declare-fun temp680_83 () (_ BitVec 64))
(declare-fun temp680_84 () (_ BitVec 64))
(declare-fun temp680_85 () (_ BitVec 64))
(declare-fun temp680_86 () (_ BitVec 64))
(declare-fun temp680_87 () (_ BitVec 64))
(declare-fun temp680_88 () (_ BitVec 64))
(declare-fun temp680_89 () (_ BitVec 64))
(declare-fun temp680_90 () (_ BitVec 64))
(declare-fun temp680_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp680_92 () (_ BitVec 64))
(declare-fun temp680_93 () (_ BitVec 64))
(declare-fun temp680_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp680_95 () (_ BitVec 64))
(declare-fun temp680_96 () (_ BitVec 64))
(declare-fun temp680_97 () (_ BitVec 64))
(declare-fun temp680_98 () (_ BitVec 64))
(declare-fun temp680_99 () (_ BitVec 64))
(declare-fun temp680_100 () (_ BitVec 64))
(declare-fun temp680_101 () (_ BitVec 64))
(declare-fun temp680_102 () (_ BitVec 64))
(declare-fun temp680_103 () (_ BitVec 64))
(declare-fun temp680_104 () (_ BitVec 64))
(declare-fun temp680_105 () (_ BitVec 64))
(declare-fun temp680_106 () (_ BitVec 64))
(declare-fun temp680_107 () (_ BitVec 64))
(declare-fun temp680_108 () (_ BitVec 64))
(declare-fun temp680_109 () (_ BitVec 64))
(declare-fun temp680_110 () (_ BitVec 64))
(declare-fun temp680_111 () (_ BitVec 64))
(declare-fun temp680_112 () (_ BitVec 64))
(declare-fun temp680_113 () (_ BitVec 64))
(declare-fun temp680_114 () (_ BitVec 64))
(declare-fun temp680_115 () (_ BitVec 64))
(declare-fun temp680_116 () (_ BitVec 64))
(declare-fun temp680_117 () (_ BitVec 64))
(declare-fun temp680_118 () (_ BitVec 64))
(declare-fun temp680_119 () (_ BitVec 64))
(declare-fun temp680_120 () (_ BitVec 64))
(declare-fun temp680_121 () (_ BitVec 64))
(declare-fun temp680_122 () (_ BitVec 64))
(declare-fun temp680_123 () (_ BitVec 64))
(declare-fun temp680_124 () (_ BitVec 64))
(declare-fun temp680_125 () (_ BitVec 64))
(declare-fun temp680_126 () (_ BitVec 64))
(declare-fun temp680_127 () (_ BitVec 64))
(declare-fun temp680_128 () (_ BitVec 64))
(declare-fun temp680_129 () (_ BitVec 64))
(declare-fun temp680_130 () (_ BitVec 64))
(declare-fun temp680_131 () (_ BitVec 64))
(declare-fun temp680_132 () (_ BitVec 64))
(declare-fun temp680_133 () (_ BitVec 64))
(declare-fun temp680_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp680_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp680_136 () (_ BitVec 64))
(declare-fun temp680_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp680_138 () (_ BitVec 64))
(declare-fun temp680_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp680_140 () (_ BitVec 64))
(declare-fun temp680_141 () (_ BitVec 64))
(declare-fun temp680_142 () (_ BitVec 64))
(declare-fun temp680_143 () (_ BitVec 64))
(declare-fun temp680_144 () (_ BitVec 64))
(declare-fun temp680_145 () (_ BitVec 64))
(declare-fun temp680_146 () (_ BitVec 64))
(declare-fun temp680_147 () (_ BitVec 64))
(declare-fun temp680_148 () (_ BitVec 64))
(declare-fun temp680_149 () (_ BitVec 64))
(declare-fun temp680_150 () (_ BitVec 64))
(declare-fun temp680_151 () (_ BitVec 64))
(declare-fun temp680_152 () (_ BitVec 64))
(declare-fun temp680_153 () (_ BitVec 64))
(declare-fun temp680_154 () (_ BitVec 64))
(declare-fun temp680_155 () (_ BitVec 64))
(declare-fun temp680_157 () (_ BitVec 64))
(declare-fun temp680_158 () (_ BitVec 64))
(declare-fun temp680_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp680_159 () (_ BitVec 64))
(declare-fun temp680_160 () (_ BitVec 64))
(declare-fun temp680_162 () (_ BitVec 64))
(declare-fun temp680_163 () (_ BitVec 64))
(declare-fun temp680_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp680_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp680_165 () (_ BitVec 64))
(declare-fun temp680_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp680_167 () (_ BitVec 64))
(declare-fun temp680_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp680_169 () (_ BitVec 64))
(declare-fun temp680_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp680_171 () (_ BitVec 64))
(declare-fun temp680_172 () (_ BitVec 64))
(declare-fun temp680_173 () (_ BitVec 64))
(declare-fun temp680_174 () (_ BitVec 64))
(declare-fun temp680_175 () (_ BitVec 64))
(declare-fun temp680_176 () (_ BitVec 64))
(declare-fun temp680_177 () (_ BitVec 64))
(declare-fun temp680_178 () (_ BitVec 64))
(declare-fun temp680_179 () (_ BitVec 64))
(declare-fun temp680_180 () (_ BitVec 64))
(declare-fun temp680_181 () (_ BitVec 64))
(declare-fun temp680_182 () (_ BitVec 64))
(declare-fun temp680_183 () (_ BitVec 64))
(declare-fun temp680_184 () (_ BitVec 64))
(declare-fun temp680_185 () (_ BitVec 64))
(declare-fun temp680_186 () (_ BitVec 64))
(declare-fun temp680_187 () (_ BitVec 64))
(declare-fun temp680_188 () (_ BitVec 64))
(declare-fun temp680_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp680_190 () (_ BitVec 64))
(declare-fun temp680_192 () (_ BitVec 64))
(declare-fun temp680_193 () (_ BitVec 64))
(declare-fun temp680_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp680_194 () (_ BitVec 64))
(declare-fun temp680_195 () (_ BitVec 64))
(declare-fun temp680_197 () (_ BitVec 64))
(declare-fun temp680_198 () (_ BitVec 64))
(declare-fun temp680_196 () (_ BitVec 64))
(declare-fun temp680_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp680_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp680_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp680_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp680_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp680_204 () (_ BitVec 64))
(declare-fun temp680_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp680_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp680_207 () (_ BitVec 64))
(declare-fun temp680_208 () (_ BitVec 64))
(declare-fun temp680_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp680_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp680_211 () (_ BitVec 64))
(declare-fun temp680_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp680_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp680_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp680_216 () (_ BitVec 64))
(declare-fun temp680_215 () (_ BitVec 64))
(declare-fun temp680_217 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp680_218 () (_ BitVec 64))
(declare-fun temp680_219 () (_ BitVec 64))
(declare-fun temp680_220 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp680_221 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp680_222 () (_ BitVec 64))
(declare-fun temp680_224 () (_ BitVec 64))
(declare-fun temp680_223 () (_ BitVec 64))
(declare-fun temp680_225 () (_ BitVec 64))
(assert (= temp680_1 #x0000000000000001))
(assert (= var77203 temp680_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp680_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp680_2)))
(assert (= temp680_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp680_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp680_4 #x0000000000000000))
(assert (= var210941 temp680_4))
(assert (= temp680_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp680_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp680_6 #x0000000000000000))
(assert (= var210986 temp680_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp680_7 #x0000000000000000))
(assert (= temp680_8 temp680_7))
(assert (= temp680_9 (select ARGNAME_padding_NAMEEND_VAL temp680_8)))
(assert (= temp680_10 #x0000000000000001))
(assert (= temp680_11 temp680_10))
(assert (= temp680_12 (select ARGNAME_padding_NAMEEND_VAL temp680_11)))
(assert (= temp680_13 #x0000000000000002))
(assert (= temp680_14 temp680_13))
(assert (= temp680_15 (select ARGNAME_padding_NAMEEND_VAL temp680_14)))
(assert (= temp680_16 #x0000000000000003))
(assert (= temp680_17 temp680_16))
(assert (= temp680_18 (select ARGNAME_padding_NAMEEND_VAL temp680_17)))
(assert (= temp680_19 #x0000000000000004))
(assert (= temp680_20 temp680_19))
(assert (= temp680_21 (select ARGNAME_padding_NAMEEND_VAL temp680_20)))
(assert (= temp680_22 #x0000000000000005))
(assert (= temp680_23 temp680_22))
(assert (= temp680_24 (select ARGNAME_padding_NAMEEND_VAL temp680_23)))
(assert (= temp680_25 #x0000000000000000))
(assert (= temp680_26 #x0000000000000000))
(assert (= temp680_27 temp680_26))
(assert (= temp680_28 (select ARGNAME_padding_NAMEEND_VAL temp680_27)))
(assert (= temp680_29 #x0000000000000000))
(assert (= temp680_30 #x0000000000000001))
(assert (= temp680_31 temp680_30))
(assert (= temp680_32 (select ARGNAME_padding_NAMEEND_VAL temp680_31)))
(assert (= temp680_33 #x0000000000000000))
(assert (= temp680_34 #x0000000000000002))
(assert (= temp680_35 temp680_34))
(assert (= temp680_36 (select ARGNAME_padding_NAMEEND_VAL temp680_35)))
(assert (= temp680_37 #x0000000000000000))
(assert (= temp680_38 #x0000000000000003))
(assert (= temp680_39 temp680_38))
(assert (= temp680_40 (select ARGNAME_padding_NAMEEND_VAL temp680_39)))
(assert (= temp680_41 #x0000000000000000))
(assert (= temp680_42 #x0000000000000004))
(assert (= temp680_43 temp680_42))
(assert (= temp680_44 (select ARGNAME_padding_NAMEEND_VAL temp680_43)))
(assert (= temp680_45 #x0000000000000000))
(assert (= temp680_46 #x0000000000000005))
(assert (= temp680_47 temp680_46))
(assert (= temp680_48 (select ARGNAME_padding_NAMEEND_VAL temp680_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp680_28 temp680_25)
             (bvslt temp680_32 temp680_29)
             (bvslt temp680_36 temp680_33)
             (bvslt temp680_40 temp680_37)
             (bvslt temp680_44 temp680_41)
             (bvslt temp680_48 temp680_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp680_49 #x0000000000000000))
(assert (= var1191714 temp680_49))
(assert (= temp680_50 #x0000000000000000))
(assert (= temp680_51 temp680_50))
(assert (= temp680_52 (select ARGNAME_output_padding_NAMEEND_VAL temp680_51)))
(assert (= temp680_53 #x0000000000000001))
(assert (= temp680_54 temp680_53))
(assert (= temp680_55 (select ARGNAME_output_padding_NAMEEND_VAL temp680_54)))
(assert (= temp680_56 #x0000000000000002))
(assert (= temp680_57 temp680_56))
(assert (= temp680_58 (select ARGNAME_output_padding_NAMEEND_VAL temp680_57)))
(assert (= temp680_59 #x0000000000000003))
(assert (= temp680_60 temp680_59))
(assert (= temp680_61 (select ARGNAME_output_padding_NAMEEND_VAL temp680_60)))
(assert (= temp680_62 #x0000000000000004))
(assert (= temp680_63 temp680_62))
(assert (= temp680_64 (select ARGNAME_output_padding_NAMEEND_VAL temp680_63)))
(assert (= temp680_65 #x0000000000000005))
(assert (= temp680_66 temp680_65))
(assert (= temp680_67 (select ARGNAME_output_padding_NAMEEND_VAL temp680_66)))
(assert (= temp680_68 #x0000000000000000))
(assert (= temp680_69 #x0000000000000000))
(assert (= temp680_70 temp680_69))
(assert (= temp680_71 (select ARGNAME_output_padding_NAMEEND_VAL temp680_70)))
(assert (= temp680_72 #x0000000000000000))
(assert (= temp680_73 #x0000000000000001))
(assert (= temp680_74 temp680_73))
(assert (= temp680_75 (select ARGNAME_output_padding_NAMEEND_VAL temp680_74)))
(assert (= temp680_76 #x0000000000000000))
(assert (= temp680_77 #x0000000000000002))
(assert (= temp680_78 temp680_77))
(assert (= temp680_79 (select ARGNAME_output_padding_NAMEEND_VAL temp680_78)))
(assert (= temp680_80 #x0000000000000000))
(assert (= temp680_81 #x0000000000000003))
(assert (= temp680_82 temp680_81))
(assert (= temp680_83 (select ARGNAME_output_padding_NAMEEND_VAL temp680_82)))
(assert (= temp680_84 #x0000000000000000))
(assert (= temp680_85 #x0000000000000004))
(assert (= temp680_86 temp680_85))
(assert (= temp680_87 (select ARGNAME_output_padding_NAMEEND_VAL temp680_86)))
(assert (= temp680_88 #x0000000000000000))
(assert (= temp680_89 #x0000000000000005))
(assert (= temp680_90 temp680_89))
(assert (= temp680_91 (select ARGNAME_output_padding_NAMEEND_VAL temp680_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp680_71 temp680_68)
             (bvslt temp680_75 temp680_72)
             (bvslt temp680_79 temp680_76)
             (bvslt temp680_83 temp680_80)
             (bvslt temp680_87 temp680_84)
             (bvslt temp680_91 temp680_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp680_92 #x0000000000000000))
(assert (= var1191725 temp680_92))
(assert (= temp680_93 #x0000000000000000))
(assert (= temp680_94 temp680_93))
(assert (= temp680_95 (select ARGNAME_stride_NAMEEND_VAL temp680_94)))
(assert (= temp680_96 #x0000000000000001))
(assert (= temp680_97 temp680_96))
(assert (= temp680_98 (select ARGNAME_stride_NAMEEND_VAL temp680_97)))
(assert (= temp680_99 #x0000000000000002))
(assert (= temp680_100 temp680_99))
(assert (= temp680_101 (select ARGNAME_stride_NAMEEND_VAL temp680_100)))
(assert (= temp680_102 #x0000000000000003))
(assert (= temp680_103 temp680_102))
(assert (= temp680_104 (select ARGNAME_stride_NAMEEND_VAL temp680_103)))
(assert (= temp680_105 #x0000000000000004))
(assert (= temp680_106 temp680_105))
(assert (= temp680_107 (select ARGNAME_stride_NAMEEND_VAL temp680_106)))
(assert (= temp680_108 #x0000000000000005))
(assert (= temp680_109 temp680_108))
(assert (= temp680_110 (select ARGNAME_stride_NAMEEND_VAL temp680_109)))
(assert (= temp680_111 #x0000000000000000))
(assert (= temp680_112 #x0000000000000000))
(assert (= temp680_113 temp680_112))
(assert (= temp680_114 (select ARGNAME_stride_NAMEEND_VAL temp680_113)))
(assert (= temp680_115 #x0000000000000000))
(assert (= temp680_116 #x0000000000000001))
(assert (= temp680_117 temp680_116))
(assert (= temp680_118 (select ARGNAME_stride_NAMEEND_VAL temp680_117)))
(assert (= temp680_119 #x0000000000000000))
(assert (= temp680_120 #x0000000000000002))
(assert (= temp680_121 temp680_120))
(assert (= temp680_122 (select ARGNAME_stride_NAMEEND_VAL temp680_121)))
(assert (= temp680_123 #x0000000000000000))
(assert (= temp680_124 #x0000000000000003))
(assert (= temp680_125 temp680_124))
(assert (= temp680_126 (select ARGNAME_stride_NAMEEND_VAL temp680_125)))
(assert (= temp680_127 #x0000000000000000))
(assert (= temp680_128 #x0000000000000004))
(assert (= temp680_129 temp680_128))
(assert (= temp680_130 (select ARGNAME_stride_NAMEEND_VAL temp680_129)))
(assert (= temp680_131 #x0000000000000000))
(assert (= temp680_132 #x0000000000000005))
(assert (= temp680_133 temp680_132))
(assert (= temp680_134 (select ARGNAME_stride_NAMEEND_VAL temp680_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp680_114 temp680_111)
             (bvsle temp680_118 temp680_115)
             (bvsle temp680_122 temp680_119)
             (bvsle temp680_126 temp680_123)
             (bvsle temp680_130 temp680_127)
             (bvsle temp680_134 temp680_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp680_135 #x0000000000000000))
(assert (= var1191735 temp680_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp680_136 #x0000000000000001))
(assert (= var1191747 temp680_136))
(assert (= temp680_137 #x0000000000000000))
(assert (= var1179826 temp680_137))
(assert (= temp680_138 #x0000000000000000))
(assert (= temp680_139 temp680_138))
(assert (= temp680_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp680_139)))
(assert (= temp680_141 #x0000000000000001))
(assert (= temp680_142 temp680_141))
(assert (= temp680_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp680_142)))
(assert (= temp680_144 #x0000000000000002))
(assert (= temp680_145 temp680_144))
(assert (= temp680_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp680_145)))
(assert (= temp680_147 #x0000000000000003))
(assert (= temp680_148 temp680_147))
(assert (= temp680_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp680_148)))
(assert (= temp680_150 #x0000000000000004))
(assert (= temp680_151 temp680_150))
(assert (= temp680_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp680_151)))
(assert (= temp680_153 #x0000000000000005))
(assert (= temp680_154 temp680_153))
(assert (= temp680_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp680_154)))
(assert (= temp680_157 var1179826))
(assert (= temp680_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp680_157)))
(assert (= temp680_156 temp680_158))
(assert (= var1191780
   (ite (bvslt temp680_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp680_159 #x0000000000000000))
(assert (= var1191780 temp680_159))
(assert (= temp680_160 #x0000000000000000))
(assert (= var1179826 temp680_160))
(assert (= temp680_162 var1179826))
(assert (= temp680_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp680_162)))
(assert (= temp680_161 temp680_163))
(assert (= var1191802 (bvsmod temp680_161 ARGNAME_groups_NAMEEND)))
(assert (= temp680_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp680_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp680_165 #x0000000000000001))
(assert (= var1191803 temp680_165))
(assert (= temp680_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp680_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp680_167 #x0000000000000001))
(assert (= var1191823 temp680_167))
(assert (= temp680_168 #x0000000000000001))
(assert (= var1180714 temp680_168))
(assert (= temp680_169 #x0000000000000000))
(assert (= temp680_170 temp680_169))
(assert (= temp680_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp680_170)))
(assert (= temp680_172 #x0000000000000001))
(assert (= temp680_173 temp680_172))
(assert (= temp680_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp680_173)))
(assert (= temp680_175 #x0000000000000002))
(assert (= temp680_176 temp680_175))
(assert (= temp680_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp680_176)))
(assert (= temp680_178 #x0000000000000003))
(assert (= temp680_179 temp680_178))
(assert (= temp680_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp680_179)))
(assert (= temp680_181 #x0000000000000004))
(assert (= temp680_182 temp680_181))
(assert (= temp680_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp680_182)))
(assert (= temp680_184 #x0000000000000005))
(assert (= temp680_185 temp680_184))
(assert (= temp680_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp680_185)))
(assert (= temp680_187 #x0000000000000000))
(assert (= temp680_188
   (ite (bvslt var1180714 temp680_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp680_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp680_188)))
(assert (= var1191831 temp680_189))
(assert (bvslt (ite (bvslt var1180714 temp680_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp680_190 #x0000000000000001))
(assert (= var1180714 temp680_190))
(assert (= temp680_192 var1180714))
(assert (= temp680_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp680_192)))
(assert (= temp680_191 temp680_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp680_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp680_194 #x0000000000000001))
(assert (= var1191836 temp680_194))
(assert (= temp680_195 #x0000000000000000))
(assert (= var1179826 temp680_195))
(assert (= temp680_197 var1179826))
(assert (= temp680_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp680_197)))
(assert (= temp680_196 temp680_198))
(assert (= temp680_199 #x0000000000000002))
(assert (= var1586025 temp680_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp680_200 #x0000000000000001))
(assert (= var1191993 temp680_200))
(assert (= temp680_201 #x0000000000000001))
(assert (= var2700303 temp680_201))
(assert (= temp680_202 #x0000000000000001))
(assert (= var2962447 temp680_202))
(assert (= temp680_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp680_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp680_204 #x0000000000000001))
(assert (= var211058 temp680_204))
(assert (= temp680_205 #x0000000000000001))
(assert (= var211188 temp680_205))
(assert (= var3879401 var211188))
(assert (= temp680_206 #x0000000000000000))
(assert (= var3866802 temp680_206))
(assert (= temp680_207 #x0000000000000000))
(assert (= temp680_208
   (ite (bvslt var3866802 temp680_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp680_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp680_208)))
(assert (= var3879420 temp680_209))
(assert (bvslt (ite (bvslt var3866802 temp680_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp680_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp680_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp680_211 #x0000000000000001))
(assert (= var3879421 temp680_211))
(assert (= temp680_212 #x0000000000000000))
(assert (= var4079423 temp680_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp680_213 #x0000000000000002))
(assert (= var4208259 temp680_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp680_214 #x0000000000000000))
(assert (= var4273820 temp680_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp680_216 #xffffffffffffffff))
(assert (= temp680_215 temp680_216))
(assert (= temp680_217 #x0000000000000001))
(assert (= var197674 temp680_217))
(assert (= temp680_218 #x0000000000000000))
(assert (= temp680_219
   (ite (bvslt var197674 temp680_218)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp680_220 (select ARGNAME_input_NAMEEND_DIMSIZE temp680_219)))
(assert (= var211595 temp680_220))
(assert (bvslt (ite (bvslt var197674 temp680_218)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp680_221 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp680_221) #x0000000000000001 #x0000000000000000)))
(assert (= temp680_222 #x0000000000000001))
(assert (= var211596 temp680_222))
(assert (= temp680_224 #xffffffffffffffff))
(assert (= temp680_223 temp680_224))
(assert (= temp680_225 #x0000000000000001))
(assert (= var211058 temp680_225))
(model-add temp680_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp680_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp680_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp680_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




