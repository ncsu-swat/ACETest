(declare-fun temp11354_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp11354_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp11354_3 () (_ BitVec 64))
(declare-fun temp11354_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp11354_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp11354_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp11354_7 () (_ BitVec 64))
(declare-fun temp11354_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11354_9 () (_ BitVec 64))
(declare-fun temp11354_10 () (_ BitVec 64))
(declare-fun temp11354_11 () (_ BitVec 64))
(declare-fun temp11354_12 () (_ BitVec 64))
(declare-fun temp11354_13 () (_ BitVec 64))
(declare-fun temp11354_14 () (_ BitVec 64))
(declare-fun temp11354_15 () (_ BitVec 64))
(declare-fun temp11354_16 () (_ BitVec 64))
(declare-fun temp11354_17 () (_ BitVec 64))
(declare-fun temp11354_18 () (_ BitVec 64))
(declare-fun temp11354_19 () (_ BitVec 64))
(declare-fun temp11354_20 () (_ BitVec 64))
(declare-fun temp11354_21 () (_ BitVec 64))
(declare-fun temp11354_22 () (_ BitVec 64))
(declare-fun temp11354_23 () (_ BitVec 64))
(declare-fun temp11354_24 () (_ BitVec 64))
(declare-fun temp11354_25 () (_ BitVec 64))
(declare-fun temp11354_26 () (_ BitVec 64))
(declare-fun temp11354_27 () (_ BitVec 64))
(declare-fun temp11354_28 () (_ BitVec 64))
(declare-fun temp11354_29 () (_ BitVec 64))
(declare-fun temp11354_30 () (_ BitVec 64))
(declare-fun temp11354_31 () (_ BitVec 64))
(declare-fun temp11354_32 () (_ BitVec 64))
(declare-fun temp11354_33 () (_ BitVec 64))
(declare-fun temp11354_34 () (_ BitVec 64))
(declare-fun temp11354_35 () (_ BitVec 64))
(declare-fun temp11354_36 () (_ BitVec 64))
(declare-fun temp11354_37 () (_ BitVec 64))
(declare-fun temp11354_38 () (_ BitVec 64))
(declare-fun temp11354_39 () (_ BitVec 64))
(declare-fun temp11354_40 () (_ BitVec 64))
(declare-fun temp11354_41 () (_ BitVec 64))
(declare-fun temp11354_42 () (_ BitVec 64))
(declare-fun temp11354_43 () (_ BitVec 64))
(declare-fun temp11354_44 () (_ BitVec 64))
(declare-fun temp11354_45 () (_ BitVec 64))
(declare-fun temp11354_46 () (_ BitVec 64))
(declare-fun temp11354_47 () (_ BitVec 64))
(declare-fun temp11354_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp11354_49 () (_ BitVec 64))
(declare-fun temp11354_50 () (_ BitVec 64))
(declare-fun temp11354_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11354_52 () (_ BitVec 64))
(declare-fun temp11354_53 () (_ BitVec 64))
(declare-fun temp11354_54 () (_ BitVec 64))
(declare-fun temp11354_55 () (_ BitVec 64))
(declare-fun temp11354_56 () (_ BitVec 64))
(declare-fun temp11354_57 () (_ BitVec 64))
(declare-fun temp11354_58 () (_ BitVec 64))
(declare-fun temp11354_59 () (_ BitVec 64))
(declare-fun temp11354_60 () (_ BitVec 64))
(declare-fun temp11354_61 () (_ BitVec 64))
(declare-fun temp11354_62 () (_ BitVec 64))
(declare-fun temp11354_63 () (_ BitVec 64))
(declare-fun temp11354_64 () (_ BitVec 64))
(declare-fun temp11354_65 () (_ BitVec 64))
(declare-fun temp11354_66 () (_ BitVec 64))
(declare-fun temp11354_67 () (_ BitVec 64))
(declare-fun temp11354_68 () (_ BitVec 64))
(declare-fun temp11354_69 () (_ BitVec 64))
(declare-fun temp11354_70 () (_ BitVec 64))
(declare-fun temp11354_71 () (_ BitVec 64))
(declare-fun temp11354_72 () (_ BitVec 64))
(declare-fun temp11354_73 () (_ BitVec 64))
(declare-fun temp11354_74 () (_ BitVec 64))
(declare-fun temp11354_75 () (_ BitVec 64))
(declare-fun temp11354_76 () (_ BitVec 64))
(declare-fun temp11354_77 () (_ BitVec 64))
(declare-fun temp11354_78 () (_ BitVec 64))
(declare-fun temp11354_79 () (_ BitVec 64))
(declare-fun temp11354_80 () (_ BitVec 64))
(declare-fun temp11354_81 () (_ BitVec 64))
(declare-fun temp11354_82 () (_ BitVec 64))
(declare-fun temp11354_83 () (_ BitVec 64))
(declare-fun temp11354_84 () (_ BitVec 64))
(declare-fun temp11354_85 () (_ BitVec 64))
(declare-fun temp11354_86 () (_ BitVec 64))
(declare-fun temp11354_87 () (_ BitVec 64))
(declare-fun temp11354_88 () (_ BitVec 64))
(declare-fun temp11354_89 () (_ BitVec 64))
(declare-fun temp11354_90 () (_ BitVec 64))
(declare-fun temp11354_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp11354_92 () (_ BitVec 64))
(declare-fun temp11354_93 () (_ BitVec 64))
(declare-fun temp11354_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11354_95 () (_ BitVec 64))
(declare-fun temp11354_96 () (_ BitVec 64))
(declare-fun temp11354_97 () (_ BitVec 64))
(declare-fun temp11354_98 () (_ BitVec 64))
(declare-fun temp11354_99 () (_ BitVec 64))
(declare-fun temp11354_100 () (_ BitVec 64))
(declare-fun temp11354_101 () (_ BitVec 64))
(declare-fun temp11354_102 () (_ BitVec 64))
(declare-fun temp11354_103 () (_ BitVec 64))
(declare-fun temp11354_104 () (_ BitVec 64))
(declare-fun temp11354_105 () (_ BitVec 64))
(declare-fun temp11354_106 () (_ BitVec 64))
(declare-fun temp11354_107 () (_ BitVec 64))
(declare-fun temp11354_108 () (_ BitVec 64))
(declare-fun temp11354_109 () (_ BitVec 64))
(declare-fun temp11354_110 () (_ BitVec 64))
(declare-fun temp11354_111 () (_ BitVec 64))
(declare-fun temp11354_112 () (_ BitVec 64))
(declare-fun temp11354_113 () (_ BitVec 64))
(declare-fun temp11354_114 () (_ BitVec 64))
(declare-fun temp11354_115 () (_ BitVec 64))
(declare-fun temp11354_116 () (_ BitVec 64))
(declare-fun temp11354_117 () (_ BitVec 64))
(declare-fun temp11354_118 () (_ BitVec 64))
(declare-fun temp11354_119 () (_ BitVec 64))
(declare-fun temp11354_120 () (_ BitVec 64))
(declare-fun temp11354_121 () (_ BitVec 64))
(declare-fun temp11354_122 () (_ BitVec 64))
(declare-fun temp11354_123 () (_ BitVec 64))
(declare-fun temp11354_124 () (_ BitVec 64))
(declare-fun temp11354_125 () (_ BitVec 64))
(declare-fun temp11354_126 () (_ BitVec 64))
(declare-fun temp11354_127 () (_ BitVec 64))
(declare-fun temp11354_128 () (_ BitVec 64))
(declare-fun temp11354_129 () (_ BitVec 64))
(declare-fun temp11354_130 () (_ BitVec 64))
(declare-fun temp11354_131 () (_ BitVec 64))
(declare-fun temp11354_132 () (_ BitVec 64))
(declare-fun temp11354_133 () (_ BitVec 64))
(declare-fun temp11354_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp11354_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp11354_136 () (_ BitVec 64))
(declare-fun temp11354_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp11354_138 () (_ BitVec 64))
(declare-fun temp11354_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11354_140 () (_ BitVec 64))
(declare-fun temp11354_141 () (_ BitVec 64))
(declare-fun temp11354_142 () (_ BitVec 64))
(declare-fun temp11354_143 () (_ BitVec 64))
(declare-fun temp11354_144 () (_ BitVec 64))
(declare-fun temp11354_145 () (_ BitVec 64))
(declare-fun temp11354_146 () (_ BitVec 64))
(declare-fun temp11354_147 () (_ BitVec 64))
(declare-fun temp11354_148 () (_ BitVec 64))
(declare-fun temp11354_149 () (_ BitVec 64))
(declare-fun temp11354_150 () (_ BitVec 64))
(declare-fun temp11354_151 () (_ BitVec 64))
(declare-fun temp11354_152 () (_ BitVec 64))
(declare-fun temp11354_153 () (_ BitVec 64))
(declare-fun temp11354_154 () (_ BitVec 64))
(declare-fun temp11354_155 () (_ BitVec 64))
(declare-fun temp11354_157 () (_ BitVec 64))
(declare-fun temp11354_158 () (_ BitVec 64))
(declare-fun temp11354_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp11354_159 () (_ BitVec 64))
(declare-fun temp11354_160 () (_ BitVec 64))
(declare-fun temp11354_162 () (_ BitVec 64))
(declare-fun temp11354_163 () (_ BitVec 64))
(declare-fun temp11354_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp11354_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp11354_165 () (_ BitVec 64))
(declare-fun temp11354_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp11354_167 () (_ BitVec 64))
(declare-fun temp11354_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp11354_169 () (_ BitVec 64))
(declare-fun temp11354_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11354_171 () (_ BitVec 64))
(declare-fun temp11354_172 () (_ BitVec 64))
(declare-fun temp11354_173 () (_ BitVec 64))
(declare-fun temp11354_174 () (_ BitVec 64))
(declare-fun temp11354_175 () (_ BitVec 64))
(declare-fun temp11354_176 () (_ BitVec 64))
(declare-fun temp11354_177 () (_ BitVec 64))
(declare-fun temp11354_178 () (_ BitVec 64))
(declare-fun temp11354_179 () (_ BitVec 64))
(declare-fun temp11354_180 () (_ BitVec 64))
(declare-fun temp11354_181 () (_ BitVec 64))
(declare-fun temp11354_182 () (_ BitVec 64))
(declare-fun temp11354_183 () (_ BitVec 64))
(declare-fun temp11354_184 () (_ BitVec 64))
(declare-fun temp11354_185 () (_ BitVec 64))
(declare-fun temp11354_186 () (_ BitVec 64))
(declare-fun temp11354_187 () (_ BitVec 64))
(declare-fun temp11354_188 () (_ BitVec 64))
(declare-fun temp11354_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp11354_190 () (_ BitVec 64))
(declare-fun temp11354_192 () (_ BitVec 64))
(declare-fun temp11354_193 () (_ BitVec 64))
(declare-fun temp11354_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp11354_194 () (_ BitVec 64))
(declare-fun temp11354_195 () (_ BitVec 64))
(declare-fun temp11354_197 () (_ BitVec 64))
(declare-fun temp11354_198 () (_ BitVec 64))
(declare-fun temp11354_196 () (_ BitVec 64))
(declare-fun temp11354_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp11354_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp11354_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp11354_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp11354_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp11354_204 () (_ BitVec 64))
(declare-fun temp11354_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp11354_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp11354_207 () (_ BitVec 64))
(declare-fun temp11354_208 () (_ BitVec 64))
(declare-fun temp11354_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp11354_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp11354_211 () (_ BitVec 64))
(declare-fun temp11354_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp11354_213 () (_ BitVec 64))
(declare-fun temp11354_214 () (_ BitVec 64))
(declare-fun temp11354_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp11354_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp11354_217 () (_ BitVec 64))
(declare-fun temp11354_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp11354_219 () (_ BitVec 64))
(declare-fun var4404867 () (_ BitVec 64))
(declare-fun var4404869 () (_ BitVec 64))
(declare-fun var4470412 () (_ BitVec 64))
(declare-fun var4470413 () (_ BitVec 64))
(declare-fun var4470426 () (_ BitVec 64))
(declare-fun var4470428 () (_ BitVec 64))
(declare-fun temp11354_220 () (_ BitVec 64))
(declare-fun var4470453 () (_ BitVec 64))
(declare-fun var4470455 () (_ BitVec 64))
(declare-fun var4591443 () (_ BitVec 64))
(declare-fun temp11354_221 () (_ BitVec 64))
(assert (= temp11354_1 #x0000000000000001))
(assert (= var77203 temp11354_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp11354_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp11354_2)))
(assert (= temp11354_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp11354_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11354_4 #x0000000000000000))
(assert (= var210941 temp11354_4))
(assert (= temp11354_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp11354_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11354_6 #x0000000000000000))
(assert (= var210986 temp11354_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp11354_7 #x0000000000000000))
(assert (= temp11354_8 temp11354_7))
(assert (= temp11354_9 (select ARGNAME_padding_NAMEEND_VAL temp11354_8)))
(assert (= temp11354_10 #x0000000000000001))
(assert (= temp11354_11 temp11354_10))
(assert (= temp11354_12 (select ARGNAME_padding_NAMEEND_VAL temp11354_11)))
(assert (= temp11354_13 #x0000000000000002))
(assert (= temp11354_14 temp11354_13))
(assert (= temp11354_15 (select ARGNAME_padding_NAMEEND_VAL temp11354_14)))
(assert (= temp11354_16 #x0000000000000003))
(assert (= temp11354_17 temp11354_16))
(assert (= temp11354_18 (select ARGNAME_padding_NAMEEND_VAL temp11354_17)))
(assert (= temp11354_19 #x0000000000000004))
(assert (= temp11354_20 temp11354_19))
(assert (= temp11354_21 (select ARGNAME_padding_NAMEEND_VAL temp11354_20)))
(assert (= temp11354_22 #x0000000000000005))
(assert (= temp11354_23 temp11354_22))
(assert (= temp11354_24 (select ARGNAME_padding_NAMEEND_VAL temp11354_23)))
(assert (= temp11354_25 #x0000000000000000))
(assert (= temp11354_26 #x0000000000000000))
(assert (= temp11354_27 temp11354_26))
(assert (= temp11354_28 (select ARGNAME_padding_NAMEEND_VAL temp11354_27)))
(assert (= temp11354_29 #x0000000000000000))
(assert (= temp11354_30 #x0000000000000001))
(assert (= temp11354_31 temp11354_30))
(assert (= temp11354_32 (select ARGNAME_padding_NAMEEND_VAL temp11354_31)))
(assert (= temp11354_33 #x0000000000000000))
(assert (= temp11354_34 #x0000000000000002))
(assert (= temp11354_35 temp11354_34))
(assert (= temp11354_36 (select ARGNAME_padding_NAMEEND_VAL temp11354_35)))
(assert (= temp11354_37 #x0000000000000000))
(assert (= temp11354_38 #x0000000000000003))
(assert (= temp11354_39 temp11354_38))
(assert (= temp11354_40 (select ARGNAME_padding_NAMEEND_VAL temp11354_39)))
(assert (= temp11354_41 #x0000000000000000))
(assert (= temp11354_42 #x0000000000000004))
(assert (= temp11354_43 temp11354_42))
(assert (= temp11354_44 (select ARGNAME_padding_NAMEEND_VAL temp11354_43)))
(assert (= temp11354_45 #x0000000000000000))
(assert (= temp11354_46 #x0000000000000005))
(assert (= temp11354_47 temp11354_46))
(assert (= temp11354_48 (select ARGNAME_padding_NAMEEND_VAL temp11354_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp11354_28 temp11354_25)
             (bvslt temp11354_32 temp11354_29)
             (bvslt temp11354_36 temp11354_33)
             (bvslt temp11354_40 temp11354_37)
             (bvslt temp11354_44 temp11354_41)
             (bvslt temp11354_48 temp11354_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11354_49 #x0000000000000000))
(assert (= var1191714 temp11354_49))
(assert (= temp11354_50 #x0000000000000000))
(assert (= temp11354_51 temp11354_50))
(assert (= temp11354_52 (select ARGNAME_output_padding_NAMEEND_VAL temp11354_51)))
(assert (= temp11354_53 #x0000000000000001))
(assert (= temp11354_54 temp11354_53))
(assert (= temp11354_55 (select ARGNAME_output_padding_NAMEEND_VAL temp11354_54)))
(assert (= temp11354_56 #x0000000000000002))
(assert (= temp11354_57 temp11354_56))
(assert (= temp11354_58 (select ARGNAME_output_padding_NAMEEND_VAL temp11354_57)))
(assert (= temp11354_59 #x0000000000000003))
(assert (= temp11354_60 temp11354_59))
(assert (= temp11354_61 (select ARGNAME_output_padding_NAMEEND_VAL temp11354_60)))
(assert (= temp11354_62 #x0000000000000004))
(assert (= temp11354_63 temp11354_62))
(assert (= temp11354_64 (select ARGNAME_output_padding_NAMEEND_VAL temp11354_63)))
(assert (= temp11354_65 #x0000000000000005))
(assert (= temp11354_66 temp11354_65))
(assert (= temp11354_67 (select ARGNAME_output_padding_NAMEEND_VAL temp11354_66)))
(assert (= temp11354_68 #x0000000000000000))
(assert (= temp11354_69 #x0000000000000000))
(assert (= temp11354_70 temp11354_69))
(assert (= temp11354_71 (select ARGNAME_output_padding_NAMEEND_VAL temp11354_70)))
(assert (= temp11354_72 #x0000000000000000))
(assert (= temp11354_73 #x0000000000000001))
(assert (= temp11354_74 temp11354_73))
(assert (= temp11354_75 (select ARGNAME_output_padding_NAMEEND_VAL temp11354_74)))
(assert (= temp11354_76 #x0000000000000000))
(assert (= temp11354_77 #x0000000000000002))
(assert (= temp11354_78 temp11354_77))
(assert (= temp11354_79 (select ARGNAME_output_padding_NAMEEND_VAL temp11354_78)))
(assert (= temp11354_80 #x0000000000000000))
(assert (= temp11354_81 #x0000000000000003))
(assert (= temp11354_82 temp11354_81))
(assert (= temp11354_83 (select ARGNAME_output_padding_NAMEEND_VAL temp11354_82)))
(assert (= temp11354_84 #x0000000000000000))
(assert (= temp11354_85 #x0000000000000004))
(assert (= temp11354_86 temp11354_85))
(assert (= temp11354_87 (select ARGNAME_output_padding_NAMEEND_VAL temp11354_86)))
(assert (= temp11354_88 #x0000000000000000))
(assert (= temp11354_89 #x0000000000000005))
(assert (= temp11354_90 temp11354_89))
(assert (= temp11354_91 (select ARGNAME_output_padding_NAMEEND_VAL temp11354_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp11354_71 temp11354_68)
             (bvslt temp11354_75 temp11354_72)
             (bvslt temp11354_79 temp11354_76)
             (bvslt temp11354_83 temp11354_80)
             (bvslt temp11354_87 temp11354_84)
             (bvslt temp11354_91 temp11354_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11354_92 #x0000000000000000))
(assert (= var1191725 temp11354_92))
(assert (= temp11354_93 #x0000000000000000))
(assert (= temp11354_94 temp11354_93))
(assert (= temp11354_95 (select ARGNAME_stride_NAMEEND_VAL temp11354_94)))
(assert (= temp11354_96 #x0000000000000001))
(assert (= temp11354_97 temp11354_96))
(assert (= temp11354_98 (select ARGNAME_stride_NAMEEND_VAL temp11354_97)))
(assert (= temp11354_99 #x0000000000000002))
(assert (= temp11354_100 temp11354_99))
(assert (= temp11354_101 (select ARGNAME_stride_NAMEEND_VAL temp11354_100)))
(assert (= temp11354_102 #x0000000000000003))
(assert (= temp11354_103 temp11354_102))
(assert (= temp11354_104 (select ARGNAME_stride_NAMEEND_VAL temp11354_103)))
(assert (= temp11354_105 #x0000000000000004))
(assert (= temp11354_106 temp11354_105))
(assert (= temp11354_107 (select ARGNAME_stride_NAMEEND_VAL temp11354_106)))
(assert (= temp11354_108 #x0000000000000005))
(assert (= temp11354_109 temp11354_108))
(assert (= temp11354_110 (select ARGNAME_stride_NAMEEND_VAL temp11354_109)))
(assert (= temp11354_111 #x0000000000000000))
(assert (= temp11354_112 #x0000000000000000))
(assert (= temp11354_113 temp11354_112))
(assert (= temp11354_114 (select ARGNAME_stride_NAMEEND_VAL temp11354_113)))
(assert (= temp11354_115 #x0000000000000000))
(assert (= temp11354_116 #x0000000000000001))
(assert (= temp11354_117 temp11354_116))
(assert (= temp11354_118 (select ARGNAME_stride_NAMEEND_VAL temp11354_117)))
(assert (= temp11354_119 #x0000000000000000))
(assert (= temp11354_120 #x0000000000000002))
(assert (= temp11354_121 temp11354_120))
(assert (= temp11354_122 (select ARGNAME_stride_NAMEEND_VAL temp11354_121)))
(assert (= temp11354_123 #x0000000000000000))
(assert (= temp11354_124 #x0000000000000003))
(assert (= temp11354_125 temp11354_124))
(assert (= temp11354_126 (select ARGNAME_stride_NAMEEND_VAL temp11354_125)))
(assert (= temp11354_127 #x0000000000000000))
(assert (= temp11354_128 #x0000000000000004))
(assert (= temp11354_129 temp11354_128))
(assert (= temp11354_130 (select ARGNAME_stride_NAMEEND_VAL temp11354_129)))
(assert (= temp11354_131 #x0000000000000000))
(assert (= temp11354_132 #x0000000000000005))
(assert (= temp11354_133 temp11354_132))
(assert (= temp11354_134 (select ARGNAME_stride_NAMEEND_VAL temp11354_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp11354_114 temp11354_111)
             (bvsle temp11354_118 temp11354_115)
             (bvsle temp11354_122 temp11354_119)
             (bvsle temp11354_126 temp11354_123)
             (bvsle temp11354_130 temp11354_127)
             (bvsle temp11354_134 temp11354_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11354_135 #x0000000000000000))
(assert (= var1191735 temp11354_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11354_136 #x0000000000000001))
(assert (= var1191747 temp11354_136))
(assert (= temp11354_137 #x0000000000000000))
(assert (= var1179826 temp11354_137))
(assert (= temp11354_138 #x0000000000000000))
(assert (= temp11354_139 temp11354_138))
(assert (= temp11354_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11354_139)))
(assert (= temp11354_141 #x0000000000000001))
(assert (= temp11354_142 temp11354_141))
(assert (= temp11354_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11354_142)))
(assert (= temp11354_144 #x0000000000000002))
(assert (= temp11354_145 temp11354_144))
(assert (= temp11354_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11354_145)))
(assert (= temp11354_147 #x0000000000000003))
(assert (= temp11354_148 temp11354_147))
(assert (= temp11354_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11354_148)))
(assert (= temp11354_150 #x0000000000000004))
(assert (= temp11354_151 temp11354_150))
(assert (= temp11354_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11354_151)))
(assert (= temp11354_153 #x0000000000000005))
(assert (= temp11354_154 temp11354_153))
(assert (= temp11354_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11354_154)))
(assert (= temp11354_157 var1179826))
(assert (= temp11354_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11354_157)))
(assert (= temp11354_156 temp11354_158))
(assert (= var1191780
   (ite (bvslt temp11354_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11354_159 #x0000000000000000))
(assert (= var1191780 temp11354_159))
(assert (= temp11354_160 #x0000000000000000))
(assert (= var1179826 temp11354_160))
(assert (= temp11354_162 var1179826))
(assert (= temp11354_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11354_162)))
(assert (= temp11354_161 temp11354_163))
(assert (= var1191802 (bvsmod temp11354_161 ARGNAME_groups_NAMEEND)))
(assert (= temp11354_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp11354_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp11354_165 #x0000000000000001))
(assert (= var1191803 temp11354_165))
(assert (= temp11354_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp11354_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11354_167 #x0000000000000001))
(assert (= var1191823 temp11354_167))
(assert (= temp11354_168 #x0000000000000001))
(assert (= var1180714 temp11354_168))
(assert (= temp11354_169 #x0000000000000000))
(assert (= temp11354_170 temp11354_169))
(assert (= temp11354_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp11354_170)))
(assert (= temp11354_172 #x0000000000000001))
(assert (= temp11354_173 temp11354_172))
(assert (= temp11354_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp11354_173)))
(assert (= temp11354_175 #x0000000000000002))
(assert (= temp11354_176 temp11354_175))
(assert (= temp11354_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp11354_176)))
(assert (= temp11354_178 #x0000000000000003))
(assert (= temp11354_179 temp11354_178))
(assert (= temp11354_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp11354_179)))
(assert (= temp11354_181 #x0000000000000004))
(assert (= temp11354_182 temp11354_181))
(assert (= temp11354_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp11354_182)))
(assert (= temp11354_184 #x0000000000000005))
(assert (= temp11354_185 temp11354_184))
(assert (= temp11354_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp11354_185)))
(assert (= temp11354_187 #x0000000000000000))
(assert (= temp11354_188
   (ite (bvslt var1180714 temp11354_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp11354_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp11354_188)))
(assert (= var1191831 temp11354_189))
(assert (bvslt (ite (bvslt var1180714 temp11354_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11354_190 #x0000000000000001))
(assert (= var1180714 temp11354_190))
(assert (= temp11354_192 var1180714))
(assert (= temp11354_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11354_192)))
(assert (= temp11354_191 temp11354_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp11354_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp11354_194 #x0000000000000001))
(assert (= var1191836 temp11354_194))
(assert (= temp11354_195 #x0000000000000000))
(assert (= var1179826 temp11354_195))
(assert (= temp11354_197 var1179826))
(assert (= temp11354_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11354_197)))
(assert (= temp11354_196 temp11354_198))
(assert (= temp11354_199 #x0000000000000002))
(assert (= var1586025 temp11354_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp11354_200 #x0000000000000001))
(assert (= var1191993 temp11354_200))
(assert (= temp11354_201 #x0000000000000001))
(assert (= var2700303 temp11354_201))
(assert (= temp11354_202 #x0000000000000001))
(assert (= var2962447 temp11354_202))
(assert (= temp11354_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp11354_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11354_204 #x0000000000000001))
(assert (= var211058 temp11354_204))
(assert (= temp11354_205 #x0000000000000001))
(assert (= var211188 temp11354_205))
(assert (= var3879401 var211188))
(assert (= temp11354_206 #x0000000000000000))
(assert (= var3866802 temp11354_206))
(assert (= temp11354_207 #x0000000000000000))
(assert (= temp11354_208
   (ite (bvslt var3866802 temp11354_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp11354_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp11354_208)))
(assert (= var3879420 temp11354_209))
(assert (bvslt (ite (bvslt var3866802 temp11354_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11354_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp11354_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp11354_211 #x0000000000000000))
(assert (= var3879421 temp11354_211))
(assert (= temp11354_212 #x0000000000000001))
(assert (= var3867690 temp11354_212))
(assert (= temp11354_213 #x0000000000000000))
(assert (= temp11354_214
   (ite (bvslt var3867690 temp11354_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp11354_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp11354_214)))
(assert (= var3879423 temp11354_215))
(assert (bvslt (ite (bvslt var3867690 temp11354_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11354_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp11354_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp11354_217 #x0000000000000001))
(assert (= var3879424 temp11354_217))
(assert (= temp11354_218 #x0000000000000000))
(assert (= var4133117 temp11354_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp11354_219 #x0000000000000002))
(assert (= var4404867 temp11354_219))
(assert (= var4404869 (bvsub ARGNAME_weight_NAMEEND_DIM var4404867)))
(assert (= var4470412 var4404867))
(assert (= var4470413 var4404869))
(assert (= var4470426 (bvadd var4470413 var4470412)))
(assert (= var4470428
   (ite (bvsgt var4470426 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11354_220 #x0000000000000000))
(assert (= var4470428 temp11354_220))
(assert (= var4470453 var4470412))
(assert (= var4470455 var4470413))
(assert (= var4591443 var4470455))
(assert (= temp11354_221 #x0000000000000001))
(assert (= var211058 temp11354_221))
(model-add temp11354_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp11354_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp11354_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp11354_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




