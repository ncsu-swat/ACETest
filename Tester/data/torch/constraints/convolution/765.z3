(declare-fun temp1020_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp1020_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1020_3 () (_ BitVec 64))
(declare-fun temp1020_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1020_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp1020_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1020_7 () (_ BitVec 64))
(declare-fun temp1020_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1020_9 () (_ BitVec 64))
(declare-fun temp1020_10 () (_ BitVec 64))
(declare-fun temp1020_11 () (_ BitVec 64))
(declare-fun temp1020_12 () (_ BitVec 64))
(declare-fun temp1020_13 () (_ BitVec 64))
(declare-fun temp1020_14 () (_ BitVec 64))
(declare-fun temp1020_15 () (_ BitVec 64))
(declare-fun temp1020_16 () (_ BitVec 64))
(declare-fun temp1020_17 () (_ BitVec 64))
(declare-fun temp1020_18 () (_ BitVec 64))
(declare-fun temp1020_19 () (_ BitVec 64))
(declare-fun temp1020_20 () (_ BitVec 64))
(declare-fun temp1020_21 () (_ BitVec 64))
(declare-fun temp1020_22 () (_ BitVec 64))
(declare-fun temp1020_23 () (_ BitVec 64))
(declare-fun temp1020_24 () (_ BitVec 64))
(declare-fun temp1020_25 () (_ BitVec 64))
(declare-fun temp1020_26 () (_ BitVec 64))
(declare-fun temp1020_27 () (_ BitVec 64))
(declare-fun temp1020_28 () (_ BitVec 64))
(declare-fun temp1020_29 () (_ BitVec 64))
(declare-fun temp1020_30 () (_ BitVec 64))
(declare-fun temp1020_31 () (_ BitVec 64))
(declare-fun temp1020_32 () (_ BitVec 64))
(declare-fun temp1020_33 () (_ BitVec 64))
(declare-fun temp1020_34 () (_ BitVec 64))
(declare-fun temp1020_35 () (_ BitVec 64))
(declare-fun temp1020_36 () (_ BitVec 64))
(declare-fun temp1020_37 () (_ BitVec 64))
(declare-fun temp1020_38 () (_ BitVec 64))
(declare-fun temp1020_39 () (_ BitVec 64))
(declare-fun temp1020_40 () (_ BitVec 64))
(declare-fun temp1020_41 () (_ BitVec 64))
(declare-fun temp1020_42 () (_ BitVec 64))
(declare-fun temp1020_43 () (_ BitVec 64))
(declare-fun temp1020_44 () (_ BitVec 64))
(declare-fun temp1020_45 () (_ BitVec 64))
(declare-fun temp1020_46 () (_ BitVec 64))
(declare-fun temp1020_47 () (_ BitVec 64))
(declare-fun temp1020_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp1020_49 () (_ BitVec 64))
(declare-fun temp1020_50 () (_ BitVec 64))
(declare-fun temp1020_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1020_52 () (_ BitVec 64))
(declare-fun temp1020_53 () (_ BitVec 64))
(declare-fun temp1020_54 () (_ BitVec 64))
(declare-fun temp1020_55 () (_ BitVec 64))
(declare-fun temp1020_56 () (_ BitVec 64))
(declare-fun temp1020_57 () (_ BitVec 64))
(declare-fun temp1020_58 () (_ BitVec 64))
(declare-fun temp1020_59 () (_ BitVec 64))
(declare-fun temp1020_60 () (_ BitVec 64))
(declare-fun temp1020_61 () (_ BitVec 64))
(declare-fun temp1020_62 () (_ BitVec 64))
(declare-fun temp1020_63 () (_ BitVec 64))
(declare-fun temp1020_64 () (_ BitVec 64))
(declare-fun temp1020_65 () (_ BitVec 64))
(declare-fun temp1020_66 () (_ BitVec 64))
(declare-fun temp1020_67 () (_ BitVec 64))
(declare-fun temp1020_68 () (_ BitVec 64))
(declare-fun temp1020_69 () (_ BitVec 64))
(declare-fun temp1020_70 () (_ BitVec 64))
(declare-fun temp1020_71 () (_ BitVec 64))
(declare-fun temp1020_72 () (_ BitVec 64))
(declare-fun temp1020_73 () (_ BitVec 64))
(declare-fun temp1020_74 () (_ BitVec 64))
(declare-fun temp1020_75 () (_ BitVec 64))
(declare-fun temp1020_76 () (_ BitVec 64))
(declare-fun temp1020_77 () (_ BitVec 64))
(declare-fun temp1020_78 () (_ BitVec 64))
(declare-fun temp1020_79 () (_ BitVec 64))
(declare-fun temp1020_80 () (_ BitVec 64))
(declare-fun temp1020_81 () (_ BitVec 64))
(declare-fun temp1020_82 () (_ BitVec 64))
(declare-fun temp1020_83 () (_ BitVec 64))
(declare-fun temp1020_84 () (_ BitVec 64))
(declare-fun temp1020_85 () (_ BitVec 64))
(declare-fun temp1020_86 () (_ BitVec 64))
(declare-fun temp1020_87 () (_ BitVec 64))
(declare-fun temp1020_88 () (_ BitVec 64))
(declare-fun temp1020_89 () (_ BitVec 64))
(declare-fun temp1020_90 () (_ BitVec 64))
(declare-fun temp1020_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp1020_92 () (_ BitVec 64))
(declare-fun temp1020_93 () (_ BitVec 64))
(declare-fun temp1020_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1020_95 () (_ BitVec 64))
(declare-fun temp1020_96 () (_ BitVec 64))
(declare-fun temp1020_97 () (_ BitVec 64))
(declare-fun temp1020_98 () (_ BitVec 64))
(declare-fun temp1020_99 () (_ BitVec 64))
(declare-fun temp1020_100 () (_ BitVec 64))
(declare-fun temp1020_101 () (_ BitVec 64))
(declare-fun temp1020_102 () (_ BitVec 64))
(declare-fun temp1020_103 () (_ BitVec 64))
(declare-fun temp1020_104 () (_ BitVec 64))
(declare-fun temp1020_105 () (_ BitVec 64))
(declare-fun temp1020_106 () (_ BitVec 64))
(declare-fun temp1020_107 () (_ BitVec 64))
(declare-fun temp1020_108 () (_ BitVec 64))
(declare-fun temp1020_109 () (_ BitVec 64))
(declare-fun temp1020_110 () (_ BitVec 64))
(declare-fun temp1020_111 () (_ BitVec 64))
(declare-fun temp1020_112 () (_ BitVec 64))
(declare-fun temp1020_113 () (_ BitVec 64))
(declare-fun temp1020_114 () (_ BitVec 64))
(declare-fun temp1020_115 () (_ BitVec 64))
(declare-fun temp1020_116 () (_ BitVec 64))
(declare-fun temp1020_117 () (_ BitVec 64))
(declare-fun temp1020_118 () (_ BitVec 64))
(declare-fun temp1020_119 () (_ BitVec 64))
(declare-fun temp1020_120 () (_ BitVec 64))
(declare-fun temp1020_121 () (_ BitVec 64))
(declare-fun temp1020_122 () (_ BitVec 64))
(declare-fun temp1020_123 () (_ BitVec 64))
(declare-fun temp1020_124 () (_ BitVec 64))
(declare-fun temp1020_125 () (_ BitVec 64))
(declare-fun temp1020_126 () (_ BitVec 64))
(declare-fun temp1020_127 () (_ BitVec 64))
(declare-fun temp1020_128 () (_ BitVec 64))
(declare-fun temp1020_129 () (_ BitVec 64))
(declare-fun temp1020_130 () (_ BitVec 64))
(declare-fun temp1020_131 () (_ BitVec 64))
(declare-fun temp1020_132 () (_ BitVec 64))
(declare-fun temp1020_133 () (_ BitVec 64))
(declare-fun temp1020_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp1020_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp1020_136 () (_ BitVec 64))
(declare-fun temp1020_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp1020_138 () (_ BitVec 64))
(declare-fun temp1020_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1020_140 () (_ BitVec 64))
(declare-fun temp1020_141 () (_ BitVec 64))
(declare-fun temp1020_142 () (_ BitVec 64))
(declare-fun temp1020_143 () (_ BitVec 64))
(declare-fun temp1020_144 () (_ BitVec 64))
(declare-fun temp1020_145 () (_ BitVec 64))
(declare-fun temp1020_146 () (_ BitVec 64))
(declare-fun temp1020_147 () (_ BitVec 64))
(declare-fun temp1020_148 () (_ BitVec 64))
(declare-fun temp1020_149 () (_ BitVec 64))
(declare-fun temp1020_150 () (_ BitVec 64))
(declare-fun temp1020_151 () (_ BitVec 64))
(declare-fun temp1020_152 () (_ BitVec 64))
(declare-fun temp1020_153 () (_ BitVec 64))
(declare-fun temp1020_154 () (_ BitVec 64))
(declare-fun temp1020_155 () (_ BitVec 64))
(declare-fun temp1020_157 () (_ BitVec 64))
(declare-fun temp1020_158 () (_ BitVec 64))
(declare-fun temp1020_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp1020_159 () (_ BitVec 64))
(declare-fun temp1020_160 () (_ BitVec 64))
(declare-fun temp1020_162 () (_ BitVec 64))
(declare-fun temp1020_163 () (_ BitVec 64))
(declare-fun temp1020_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp1020_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp1020_165 () (_ BitVec 64))
(declare-fun temp1020_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp1020_167 () (_ BitVec 64))
(declare-fun temp1020_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp1020_169 () (_ BitVec 64))
(declare-fun temp1020_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1020_171 () (_ BitVec 64))
(declare-fun temp1020_172 () (_ BitVec 64))
(declare-fun temp1020_173 () (_ BitVec 64))
(declare-fun temp1020_174 () (_ BitVec 64))
(declare-fun temp1020_175 () (_ BitVec 64))
(declare-fun temp1020_176 () (_ BitVec 64))
(declare-fun temp1020_177 () (_ BitVec 64))
(declare-fun temp1020_178 () (_ BitVec 64))
(declare-fun temp1020_179 () (_ BitVec 64))
(declare-fun temp1020_180 () (_ BitVec 64))
(declare-fun temp1020_181 () (_ BitVec 64))
(declare-fun temp1020_182 () (_ BitVec 64))
(declare-fun temp1020_183 () (_ BitVec 64))
(declare-fun temp1020_184 () (_ BitVec 64))
(declare-fun temp1020_185 () (_ BitVec 64))
(declare-fun temp1020_186 () (_ BitVec 64))
(declare-fun temp1020_187 () (_ BitVec 64))
(declare-fun temp1020_188 () (_ BitVec 64))
(declare-fun temp1020_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp1020_190 () (_ BitVec 64))
(declare-fun temp1020_192 () (_ BitVec 64))
(declare-fun temp1020_193 () (_ BitVec 64))
(declare-fun temp1020_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp1020_194 () (_ BitVec 64))
(declare-fun temp1020_195 () (_ BitVec 64))
(declare-fun temp1020_197 () (_ BitVec 64))
(declare-fun temp1020_198 () (_ BitVec 64))
(declare-fun temp1020_196 () (_ BitVec 64))
(declare-fun temp1020_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp1020_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp1020_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp1020_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp1020_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp1020_204 () (_ BitVec 64))
(declare-fun temp1020_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp1020_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp1020_207 () (_ BitVec 64))
(declare-fun temp1020_208 () (_ BitVec 64))
(declare-fun temp1020_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp1020_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp1020_211 () (_ BitVec 64))
(declare-fun temp1020_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp1020_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp1020_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4927888 () (_ BitVec 64))
(declare-fun var5190032 () (_ BitVec 64))
(declare-fun temp1020_215 () (_ BitVec 64))
(declare-fun var5517712 () (_ BitVec 64))
(declare-fun temp1020_216 () (_ BitVec 64))
(declare-fun temp1020_217 () (_ BitVec 64))
(declare-fun var6959892 () (_ BitVec 64))
(declare-fun var6959859 () (_ BitVec 64))
(declare-fun var6828423 () (_ BitVec 64))
(declare-fun var6828419 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp1020_218 () (_ BitVec 64))
(assert (= temp1020_1 #x0000000000000001))
(assert (= var77203 temp1020_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp1020_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp1020_2)))
(assert (= temp1020_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1020_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1020_4 #x0000000000000000))
(assert (= var210941 temp1020_4))
(assert (= temp1020_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp1020_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1020_6 #x0000000000000000))
(assert (= var210986 temp1020_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp1020_7 #x0000000000000000))
(assert (= temp1020_8 temp1020_7))
(assert (= temp1020_9 (select ARGNAME_padding_NAMEEND_VAL temp1020_8)))
(assert (= temp1020_10 #x0000000000000001))
(assert (= temp1020_11 temp1020_10))
(assert (= temp1020_12 (select ARGNAME_padding_NAMEEND_VAL temp1020_11)))
(assert (= temp1020_13 #x0000000000000002))
(assert (= temp1020_14 temp1020_13))
(assert (= temp1020_15 (select ARGNAME_padding_NAMEEND_VAL temp1020_14)))
(assert (= temp1020_16 #x0000000000000003))
(assert (= temp1020_17 temp1020_16))
(assert (= temp1020_18 (select ARGNAME_padding_NAMEEND_VAL temp1020_17)))
(assert (= temp1020_19 #x0000000000000004))
(assert (= temp1020_20 temp1020_19))
(assert (= temp1020_21 (select ARGNAME_padding_NAMEEND_VAL temp1020_20)))
(assert (= temp1020_22 #x0000000000000005))
(assert (= temp1020_23 temp1020_22))
(assert (= temp1020_24 (select ARGNAME_padding_NAMEEND_VAL temp1020_23)))
(assert (= temp1020_25 #x0000000000000000))
(assert (= temp1020_26 #x0000000000000000))
(assert (= temp1020_27 temp1020_26))
(assert (= temp1020_28 (select ARGNAME_padding_NAMEEND_VAL temp1020_27)))
(assert (= temp1020_29 #x0000000000000000))
(assert (= temp1020_30 #x0000000000000001))
(assert (= temp1020_31 temp1020_30))
(assert (= temp1020_32 (select ARGNAME_padding_NAMEEND_VAL temp1020_31)))
(assert (= temp1020_33 #x0000000000000000))
(assert (= temp1020_34 #x0000000000000002))
(assert (= temp1020_35 temp1020_34))
(assert (= temp1020_36 (select ARGNAME_padding_NAMEEND_VAL temp1020_35)))
(assert (= temp1020_37 #x0000000000000000))
(assert (= temp1020_38 #x0000000000000003))
(assert (= temp1020_39 temp1020_38))
(assert (= temp1020_40 (select ARGNAME_padding_NAMEEND_VAL temp1020_39)))
(assert (= temp1020_41 #x0000000000000000))
(assert (= temp1020_42 #x0000000000000004))
(assert (= temp1020_43 temp1020_42))
(assert (= temp1020_44 (select ARGNAME_padding_NAMEEND_VAL temp1020_43)))
(assert (= temp1020_45 #x0000000000000000))
(assert (= temp1020_46 #x0000000000000005))
(assert (= temp1020_47 temp1020_46))
(assert (= temp1020_48 (select ARGNAME_padding_NAMEEND_VAL temp1020_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp1020_28 temp1020_25)
             (bvslt temp1020_32 temp1020_29)
             (bvslt temp1020_36 temp1020_33)
             (bvslt temp1020_40 temp1020_37)
             (bvslt temp1020_44 temp1020_41)
             (bvslt temp1020_48 temp1020_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1020_49 #x0000000000000000))
(assert (= var1191714 temp1020_49))
(assert (= temp1020_50 #x0000000000000000))
(assert (= temp1020_51 temp1020_50))
(assert (= temp1020_52 (select ARGNAME_output_padding_NAMEEND_VAL temp1020_51)))
(assert (= temp1020_53 #x0000000000000001))
(assert (= temp1020_54 temp1020_53))
(assert (= temp1020_55 (select ARGNAME_output_padding_NAMEEND_VAL temp1020_54)))
(assert (= temp1020_56 #x0000000000000002))
(assert (= temp1020_57 temp1020_56))
(assert (= temp1020_58 (select ARGNAME_output_padding_NAMEEND_VAL temp1020_57)))
(assert (= temp1020_59 #x0000000000000003))
(assert (= temp1020_60 temp1020_59))
(assert (= temp1020_61 (select ARGNAME_output_padding_NAMEEND_VAL temp1020_60)))
(assert (= temp1020_62 #x0000000000000004))
(assert (= temp1020_63 temp1020_62))
(assert (= temp1020_64 (select ARGNAME_output_padding_NAMEEND_VAL temp1020_63)))
(assert (= temp1020_65 #x0000000000000005))
(assert (= temp1020_66 temp1020_65))
(assert (= temp1020_67 (select ARGNAME_output_padding_NAMEEND_VAL temp1020_66)))
(assert (= temp1020_68 #x0000000000000000))
(assert (= temp1020_69 #x0000000000000000))
(assert (= temp1020_70 temp1020_69))
(assert (= temp1020_71 (select ARGNAME_output_padding_NAMEEND_VAL temp1020_70)))
(assert (= temp1020_72 #x0000000000000000))
(assert (= temp1020_73 #x0000000000000001))
(assert (= temp1020_74 temp1020_73))
(assert (= temp1020_75 (select ARGNAME_output_padding_NAMEEND_VAL temp1020_74)))
(assert (= temp1020_76 #x0000000000000000))
(assert (= temp1020_77 #x0000000000000002))
(assert (= temp1020_78 temp1020_77))
(assert (= temp1020_79 (select ARGNAME_output_padding_NAMEEND_VAL temp1020_78)))
(assert (= temp1020_80 #x0000000000000000))
(assert (= temp1020_81 #x0000000000000003))
(assert (= temp1020_82 temp1020_81))
(assert (= temp1020_83 (select ARGNAME_output_padding_NAMEEND_VAL temp1020_82)))
(assert (= temp1020_84 #x0000000000000000))
(assert (= temp1020_85 #x0000000000000004))
(assert (= temp1020_86 temp1020_85))
(assert (= temp1020_87 (select ARGNAME_output_padding_NAMEEND_VAL temp1020_86)))
(assert (= temp1020_88 #x0000000000000000))
(assert (= temp1020_89 #x0000000000000005))
(assert (= temp1020_90 temp1020_89))
(assert (= temp1020_91 (select ARGNAME_output_padding_NAMEEND_VAL temp1020_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp1020_71 temp1020_68)
             (bvslt temp1020_75 temp1020_72)
             (bvslt temp1020_79 temp1020_76)
             (bvslt temp1020_83 temp1020_80)
             (bvslt temp1020_87 temp1020_84)
             (bvslt temp1020_91 temp1020_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1020_92 #x0000000000000000))
(assert (= var1191725 temp1020_92))
(assert (= temp1020_93 #x0000000000000000))
(assert (= temp1020_94 temp1020_93))
(assert (= temp1020_95 (select ARGNAME_stride_NAMEEND_VAL temp1020_94)))
(assert (= temp1020_96 #x0000000000000001))
(assert (= temp1020_97 temp1020_96))
(assert (= temp1020_98 (select ARGNAME_stride_NAMEEND_VAL temp1020_97)))
(assert (= temp1020_99 #x0000000000000002))
(assert (= temp1020_100 temp1020_99))
(assert (= temp1020_101 (select ARGNAME_stride_NAMEEND_VAL temp1020_100)))
(assert (= temp1020_102 #x0000000000000003))
(assert (= temp1020_103 temp1020_102))
(assert (= temp1020_104 (select ARGNAME_stride_NAMEEND_VAL temp1020_103)))
(assert (= temp1020_105 #x0000000000000004))
(assert (= temp1020_106 temp1020_105))
(assert (= temp1020_107 (select ARGNAME_stride_NAMEEND_VAL temp1020_106)))
(assert (= temp1020_108 #x0000000000000005))
(assert (= temp1020_109 temp1020_108))
(assert (= temp1020_110 (select ARGNAME_stride_NAMEEND_VAL temp1020_109)))
(assert (= temp1020_111 #x0000000000000000))
(assert (= temp1020_112 #x0000000000000000))
(assert (= temp1020_113 temp1020_112))
(assert (= temp1020_114 (select ARGNAME_stride_NAMEEND_VAL temp1020_113)))
(assert (= temp1020_115 #x0000000000000000))
(assert (= temp1020_116 #x0000000000000001))
(assert (= temp1020_117 temp1020_116))
(assert (= temp1020_118 (select ARGNAME_stride_NAMEEND_VAL temp1020_117)))
(assert (= temp1020_119 #x0000000000000000))
(assert (= temp1020_120 #x0000000000000002))
(assert (= temp1020_121 temp1020_120))
(assert (= temp1020_122 (select ARGNAME_stride_NAMEEND_VAL temp1020_121)))
(assert (= temp1020_123 #x0000000000000000))
(assert (= temp1020_124 #x0000000000000003))
(assert (= temp1020_125 temp1020_124))
(assert (= temp1020_126 (select ARGNAME_stride_NAMEEND_VAL temp1020_125)))
(assert (= temp1020_127 #x0000000000000000))
(assert (= temp1020_128 #x0000000000000004))
(assert (= temp1020_129 temp1020_128))
(assert (= temp1020_130 (select ARGNAME_stride_NAMEEND_VAL temp1020_129)))
(assert (= temp1020_131 #x0000000000000000))
(assert (= temp1020_132 #x0000000000000005))
(assert (= temp1020_133 temp1020_132))
(assert (= temp1020_134 (select ARGNAME_stride_NAMEEND_VAL temp1020_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp1020_114 temp1020_111)
             (bvsle temp1020_118 temp1020_115)
             (bvsle temp1020_122 temp1020_119)
             (bvsle temp1020_126 temp1020_123)
             (bvsle temp1020_130 temp1020_127)
             (bvsle temp1020_134 temp1020_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1020_135 #x0000000000000000))
(assert (= var1191735 temp1020_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1020_136 #x0000000000000001))
(assert (= var1191747 temp1020_136))
(assert (= temp1020_137 #x0000000000000000))
(assert (= var1179826 temp1020_137))
(assert (= temp1020_138 #x0000000000000000))
(assert (= temp1020_139 temp1020_138))
(assert (= temp1020_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1020_139)))
(assert (= temp1020_141 #x0000000000000001))
(assert (= temp1020_142 temp1020_141))
(assert (= temp1020_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1020_142)))
(assert (= temp1020_144 #x0000000000000002))
(assert (= temp1020_145 temp1020_144))
(assert (= temp1020_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1020_145)))
(assert (= temp1020_147 #x0000000000000003))
(assert (= temp1020_148 temp1020_147))
(assert (= temp1020_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1020_148)))
(assert (= temp1020_150 #x0000000000000004))
(assert (= temp1020_151 temp1020_150))
(assert (= temp1020_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1020_151)))
(assert (= temp1020_153 #x0000000000000005))
(assert (= temp1020_154 temp1020_153))
(assert (= temp1020_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1020_154)))
(assert (= temp1020_157 var1179826))
(assert (= temp1020_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1020_157)))
(assert (= temp1020_156 temp1020_158))
(assert (= var1191780
   (ite (bvslt temp1020_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1020_159 #x0000000000000000))
(assert (= var1191780 temp1020_159))
(assert (= temp1020_160 #x0000000000000000))
(assert (= var1179826 temp1020_160))
(assert (= temp1020_162 var1179826))
(assert (= temp1020_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1020_162)))
(assert (= temp1020_161 temp1020_163))
(assert (= var1191802 (bvsmod temp1020_161 ARGNAME_groups_NAMEEND)))
(assert (= temp1020_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp1020_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp1020_165 #x0000000000000001))
(assert (= var1191803 temp1020_165))
(assert (= temp1020_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp1020_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1020_167 #x0000000000000001))
(assert (= var1191823 temp1020_167))
(assert (= temp1020_168 #x0000000000000001))
(assert (= var1180714 temp1020_168))
(assert (= temp1020_169 #x0000000000000000))
(assert (= temp1020_170 temp1020_169))
(assert (= temp1020_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp1020_170)))
(assert (= temp1020_172 #x0000000000000001))
(assert (= temp1020_173 temp1020_172))
(assert (= temp1020_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp1020_173)))
(assert (= temp1020_175 #x0000000000000002))
(assert (= temp1020_176 temp1020_175))
(assert (= temp1020_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp1020_176)))
(assert (= temp1020_178 #x0000000000000003))
(assert (= temp1020_179 temp1020_178))
(assert (= temp1020_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp1020_179)))
(assert (= temp1020_181 #x0000000000000004))
(assert (= temp1020_182 temp1020_181))
(assert (= temp1020_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp1020_182)))
(assert (= temp1020_184 #x0000000000000005))
(assert (= temp1020_185 temp1020_184))
(assert (= temp1020_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp1020_185)))
(assert (= temp1020_187 #x0000000000000000))
(assert (= temp1020_188
   (ite (bvslt var1180714 temp1020_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp1020_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp1020_188)))
(assert (= var1191831 temp1020_189))
(assert (bvslt (ite (bvslt var1180714 temp1020_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1020_190 #x0000000000000001))
(assert (= var1180714 temp1020_190))
(assert (= temp1020_192 var1180714))
(assert (= temp1020_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1020_192)))
(assert (= temp1020_191 temp1020_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp1020_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp1020_194 #x0000000000000001))
(assert (= var1191836 temp1020_194))
(assert (= temp1020_195 #x0000000000000000))
(assert (= var1179826 temp1020_195))
(assert (= temp1020_197 var1179826))
(assert (= temp1020_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1020_197)))
(assert (= temp1020_196 temp1020_198))
(assert (= temp1020_199 #x0000000000000002))
(assert (= var1586025 temp1020_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp1020_200 #x0000000000000001))
(assert (= var1191993 temp1020_200))
(assert (= temp1020_201 #x0000000000000001))
(assert (= var2700303 temp1020_201))
(assert (= temp1020_202 #x0000000000000001))
(assert (= var2962447 temp1020_202))
(assert (= temp1020_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1020_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1020_204 #x0000000000000001))
(assert (= var211058 temp1020_204))
(assert (= temp1020_205 #x0000000000000001))
(assert (= var211188 temp1020_205))
(assert (= var3879401 var211188))
(assert (= temp1020_206 #x0000000000000000))
(assert (= var3866802 temp1020_206))
(assert (= temp1020_207 #x0000000000000000))
(assert (= temp1020_208
   (ite (bvslt var3866802 temp1020_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp1020_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp1020_208)))
(assert (= var3879420 temp1020_209))
(assert (bvslt (ite (bvslt var3866802 temp1020_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1020_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp1020_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp1020_211 #x0000000000000001))
(assert (= var3879421 temp1020_211))
(assert (= temp1020_212 #x0000000000000000))
(assert (= var4079423 temp1020_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp1020_213 #x0000000000000002))
(assert (= var4208259 temp1020_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1020_214 #x0000000000000000))
(assert (= var4273820 temp1020_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4927888 var211201))
(assert (= var5190032 var211201))
(assert (= temp1020_215 #x0000000000000000))
(assert (= var5517712 temp1020_215))
(assert (= temp1020_216 #x0000000000000001))
(assert (= var211058 temp1020_216))
(assert (= temp1020_217 #x0000000000000000))
(assert (= var6959892 temp1020_217))
(assert (= var6959859 var6959892))
(assert (= var6828423 var6959859))
(assert (= var6828419 var6828423))
(assert (= var212669 var6828419))
(assert (= temp1020_218 #x0000000000000000))
(assert (= var212669 temp1020_218))
(model-add temp1020_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp1020_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1020_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp1020_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






