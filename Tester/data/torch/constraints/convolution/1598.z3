(declare-fun temp10925_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10925_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10925_3 () (_ BitVec 64))
(declare-fun temp10925_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10925_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10925_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10925_7 () (_ BitVec 64))
(declare-fun temp10925_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10925_9 () (_ BitVec 64))
(declare-fun temp10925_10 () (_ BitVec 64))
(declare-fun temp10925_11 () (_ BitVec 64))
(declare-fun temp10925_12 () (_ BitVec 64))
(declare-fun temp10925_13 () (_ BitVec 64))
(declare-fun temp10925_14 () (_ BitVec 64))
(declare-fun temp10925_15 () (_ BitVec 64))
(declare-fun temp10925_16 () (_ BitVec 64))
(declare-fun temp10925_17 () (_ BitVec 64))
(declare-fun temp10925_18 () (_ BitVec 64))
(declare-fun temp10925_19 () (_ BitVec 64))
(declare-fun temp10925_20 () (_ BitVec 64))
(declare-fun temp10925_21 () (_ BitVec 64))
(declare-fun temp10925_22 () (_ BitVec 64))
(declare-fun temp10925_23 () (_ BitVec 64))
(declare-fun temp10925_24 () (_ BitVec 64))
(declare-fun temp10925_25 () (_ BitVec 64))
(declare-fun temp10925_26 () (_ BitVec 64))
(declare-fun temp10925_27 () (_ BitVec 64))
(declare-fun temp10925_28 () (_ BitVec 64))
(declare-fun temp10925_29 () (_ BitVec 64))
(declare-fun temp10925_30 () (_ BitVec 64))
(declare-fun temp10925_31 () (_ BitVec 64))
(declare-fun temp10925_32 () (_ BitVec 64))
(declare-fun temp10925_33 () (_ BitVec 64))
(declare-fun temp10925_34 () (_ BitVec 64))
(declare-fun temp10925_35 () (_ BitVec 64))
(declare-fun temp10925_36 () (_ BitVec 64))
(declare-fun temp10925_37 () (_ BitVec 64))
(declare-fun temp10925_38 () (_ BitVec 64))
(declare-fun temp10925_39 () (_ BitVec 64))
(declare-fun temp10925_40 () (_ BitVec 64))
(declare-fun temp10925_41 () (_ BitVec 64))
(declare-fun temp10925_42 () (_ BitVec 64))
(declare-fun temp10925_43 () (_ BitVec 64))
(declare-fun temp10925_44 () (_ BitVec 64))
(declare-fun temp10925_45 () (_ BitVec 64))
(declare-fun temp10925_46 () (_ BitVec 64))
(declare-fun temp10925_47 () (_ BitVec 64))
(declare-fun temp10925_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10925_49 () (_ BitVec 64))
(declare-fun temp10925_50 () (_ BitVec 64))
(declare-fun temp10925_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10925_52 () (_ BitVec 64))
(declare-fun temp10925_53 () (_ BitVec 64))
(declare-fun temp10925_54 () (_ BitVec 64))
(declare-fun temp10925_55 () (_ BitVec 64))
(declare-fun temp10925_56 () (_ BitVec 64))
(declare-fun temp10925_57 () (_ BitVec 64))
(declare-fun temp10925_58 () (_ BitVec 64))
(declare-fun temp10925_59 () (_ BitVec 64))
(declare-fun temp10925_60 () (_ BitVec 64))
(declare-fun temp10925_61 () (_ BitVec 64))
(declare-fun temp10925_62 () (_ BitVec 64))
(declare-fun temp10925_63 () (_ BitVec 64))
(declare-fun temp10925_64 () (_ BitVec 64))
(declare-fun temp10925_65 () (_ BitVec 64))
(declare-fun temp10925_66 () (_ BitVec 64))
(declare-fun temp10925_67 () (_ BitVec 64))
(declare-fun temp10925_68 () (_ BitVec 64))
(declare-fun temp10925_69 () (_ BitVec 64))
(declare-fun temp10925_70 () (_ BitVec 64))
(declare-fun temp10925_71 () (_ BitVec 64))
(declare-fun temp10925_72 () (_ BitVec 64))
(declare-fun temp10925_73 () (_ BitVec 64))
(declare-fun temp10925_74 () (_ BitVec 64))
(declare-fun temp10925_75 () (_ BitVec 64))
(declare-fun temp10925_76 () (_ BitVec 64))
(declare-fun temp10925_77 () (_ BitVec 64))
(declare-fun temp10925_78 () (_ BitVec 64))
(declare-fun temp10925_79 () (_ BitVec 64))
(declare-fun temp10925_80 () (_ BitVec 64))
(declare-fun temp10925_81 () (_ BitVec 64))
(declare-fun temp10925_82 () (_ BitVec 64))
(declare-fun temp10925_83 () (_ BitVec 64))
(declare-fun temp10925_84 () (_ BitVec 64))
(declare-fun temp10925_85 () (_ BitVec 64))
(declare-fun temp10925_86 () (_ BitVec 64))
(declare-fun temp10925_87 () (_ BitVec 64))
(declare-fun temp10925_88 () (_ BitVec 64))
(declare-fun temp10925_89 () (_ BitVec 64))
(declare-fun temp10925_90 () (_ BitVec 64))
(declare-fun temp10925_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10925_92 () (_ BitVec 64))
(declare-fun temp10925_93 () (_ BitVec 64))
(declare-fun temp10925_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10925_95 () (_ BitVec 64))
(declare-fun temp10925_96 () (_ BitVec 64))
(declare-fun temp10925_97 () (_ BitVec 64))
(declare-fun temp10925_98 () (_ BitVec 64))
(declare-fun temp10925_99 () (_ BitVec 64))
(declare-fun temp10925_100 () (_ BitVec 64))
(declare-fun temp10925_101 () (_ BitVec 64))
(declare-fun temp10925_102 () (_ BitVec 64))
(declare-fun temp10925_103 () (_ BitVec 64))
(declare-fun temp10925_104 () (_ BitVec 64))
(declare-fun temp10925_105 () (_ BitVec 64))
(declare-fun temp10925_106 () (_ BitVec 64))
(declare-fun temp10925_107 () (_ BitVec 64))
(declare-fun temp10925_108 () (_ BitVec 64))
(declare-fun temp10925_109 () (_ BitVec 64))
(declare-fun temp10925_110 () (_ BitVec 64))
(declare-fun temp10925_111 () (_ BitVec 64))
(declare-fun temp10925_112 () (_ BitVec 64))
(declare-fun temp10925_113 () (_ BitVec 64))
(declare-fun temp10925_114 () (_ BitVec 64))
(declare-fun temp10925_115 () (_ BitVec 64))
(declare-fun temp10925_116 () (_ BitVec 64))
(declare-fun temp10925_117 () (_ BitVec 64))
(declare-fun temp10925_118 () (_ BitVec 64))
(declare-fun temp10925_119 () (_ BitVec 64))
(declare-fun temp10925_120 () (_ BitVec 64))
(declare-fun temp10925_121 () (_ BitVec 64))
(declare-fun temp10925_122 () (_ BitVec 64))
(declare-fun temp10925_123 () (_ BitVec 64))
(declare-fun temp10925_124 () (_ BitVec 64))
(declare-fun temp10925_125 () (_ BitVec 64))
(declare-fun temp10925_126 () (_ BitVec 64))
(declare-fun temp10925_127 () (_ BitVec 64))
(declare-fun temp10925_128 () (_ BitVec 64))
(declare-fun temp10925_129 () (_ BitVec 64))
(declare-fun temp10925_130 () (_ BitVec 64))
(declare-fun temp10925_131 () (_ BitVec 64))
(declare-fun temp10925_132 () (_ BitVec 64))
(declare-fun temp10925_133 () (_ BitVec 64))
(declare-fun temp10925_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10925_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10925_136 () (_ BitVec 64))
(declare-fun temp10925_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10925_138 () (_ BitVec 64))
(declare-fun temp10925_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10925_140 () (_ BitVec 64))
(declare-fun temp10925_141 () (_ BitVec 64))
(declare-fun temp10925_142 () (_ BitVec 64))
(declare-fun temp10925_143 () (_ BitVec 64))
(declare-fun temp10925_144 () (_ BitVec 64))
(declare-fun temp10925_145 () (_ BitVec 64))
(declare-fun temp10925_146 () (_ BitVec 64))
(declare-fun temp10925_147 () (_ BitVec 64))
(declare-fun temp10925_148 () (_ BitVec 64))
(declare-fun temp10925_149 () (_ BitVec 64))
(declare-fun temp10925_150 () (_ BitVec 64))
(declare-fun temp10925_151 () (_ BitVec 64))
(declare-fun temp10925_152 () (_ BitVec 64))
(declare-fun temp10925_153 () (_ BitVec 64))
(declare-fun temp10925_154 () (_ BitVec 64))
(declare-fun temp10925_155 () (_ BitVec 64))
(declare-fun temp10925_157 () (_ BitVec 64))
(declare-fun temp10925_158 () (_ BitVec 64))
(declare-fun temp10925_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10925_159 () (_ BitVec 64))
(declare-fun temp10925_160 () (_ BitVec 64))
(declare-fun temp10925_162 () (_ BitVec 64))
(declare-fun temp10925_163 () (_ BitVec 64))
(declare-fun temp10925_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10925_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10925_165 () (_ BitVec 64))
(declare-fun temp10925_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10925_167 () (_ BitVec 64))
(declare-fun temp10925_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10925_169 () (_ BitVec 64))
(declare-fun temp10925_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10925_171 () (_ BitVec 64))
(declare-fun temp10925_172 () (_ BitVec 64))
(declare-fun temp10925_173 () (_ BitVec 64))
(declare-fun temp10925_174 () (_ BitVec 64))
(declare-fun temp10925_175 () (_ BitVec 64))
(declare-fun temp10925_176 () (_ BitVec 64))
(declare-fun temp10925_177 () (_ BitVec 64))
(declare-fun temp10925_178 () (_ BitVec 64))
(declare-fun temp10925_179 () (_ BitVec 64))
(declare-fun temp10925_180 () (_ BitVec 64))
(declare-fun temp10925_181 () (_ BitVec 64))
(declare-fun temp10925_182 () (_ BitVec 64))
(declare-fun temp10925_183 () (_ BitVec 64))
(declare-fun temp10925_184 () (_ BitVec 64))
(declare-fun temp10925_185 () (_ BitVec 64))
(declare-fun temp10925_186 () (_ BitVec 64))
(declare-fun temp10925_187 () (_ BitVec 64))
(declare-fun temp10925_188 () (_ BitVec 64))
(declare-fun temp10925_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10925_190 () (_ BitVec 64))
(declare-fun temp10925_192 () (_ BitVec 64))
(declare-fun temp10925_193 () (_ BitVec 64))
(declare-fun temp10925_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10925_194 () (_ BitVec 64))
(declare-fun temp10925_195 () (_ BitVec 64))
(declare-fun temp10925_197 () (_ BitVec 64))
(declare-fun temp10925_198 () (_ BitVec 64))
(declare-fun temp10925_196 () (_ BitVec 64))
(declare-fun temp10925_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10925_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10925_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10925_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10925_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10925_204 () (_ BitVec 64))
(declare-fun temp10925_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10925_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10925_207 () (_ BitVec 64))
(declare-fun temp10925_208 () (_ BitVec 64))
(declare-fun temp10925_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10925_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10925_211 () (_ BitVec 64))
(declare-fun temp10925_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10925_213 () (_ BitVec 64))
(declare-fun temp10925_214 () (_ BitVec 64))
(declare-fun temp10925_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10925_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10925_217 () (_ BitVec 64))
(declare-fun temp10925_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10925_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10925_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var5255568 () (_ BitVec 64))
(declare-fun var5517712 () (_ BitVec 64))
(declare-fun temp10925_221 () (_ BitVec 64))
(declare-fun var5845392 () (_ BitVec 64))
(declare-fun temp10925_222 () (_ BitVec 64))
(assert (= temp10925_1 #x0000000000000001))
(assert (= var77203 temp10925_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10925_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10925_2)))
(assert (= temp10925_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10925_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10925_4 #x0000000000000000))
(assert (= var210941 temp10925_4))
(assert (= temp10925_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10925_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10925_6 #x0000000000000000))
(assert (= var210986 temp10925_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10925_7 #x0000000000000000))
(assert (= temp10925_8 temp10925_7))
(assert (= temp10925_9 (select ARGNAME_padding_NAMEEND_VAL temp10925_8)))
(assert (= temp10925_10 #x0000000000000001))
(assert (= temp10925_11 temp10925_10))
(assert (= temp10925_12 (select ARGNAME_padding_NAMEEND_VAL temp10925_11)))
(assert (= temp10925_13 #x0000000000000002))
(assert (= temp10925_14 temp10925_13))
(assert (= temp10925_15 (select ARGNAME_padding_NAMEEND_VAL temp10925_14)))
(assert (= temp10925_16 #x0000000000000003))
(assert (= temp10925_17 temp10925_16))
(assert (= temp10925_18 (select ARGNAME_padding_NAMEEND_VAL temp10925_17)))
(assert (= temp10925_19 #x0000000000000004))
(assert (= temp10925_20 temp10925_19))
(assert (= temp10925_21 (select ARGNAME_padding_NAMEEND_VAL temp10925_20)))
(assert (= temp10925_22 #x0000000000000005))
(assert (= temp10925_23 temp10925_22))
(assert (= temp10925_24 (select ARGNAME_padding_NAMEEND_VAL temp10925_23)))
(assert (= temp10925_25 #x0000000000000000))
(assert (= temp10925_26 #x0000000000000000))
(assert (= temp10925_27 temp10925_26))
(assert (= temp10925_28 (select ARGNAME_padding_NAMEEND_VAL temp10925_27)))
(assert (= temp10925_29 #x0000000000000000))
(assert (= temp10925_30 #x0000000000000001))
(assert (= temp10925_31 temp10925_30))
(assert (= temp10925_32 (select ARGNAME_padding_NAMEEND_VAL temp10925_31)))
(assert (= temp10925_33 #x0000000000000000))
(assert (= temp10925_34 #x0000000000000002))
(assert (= temp10925_35 temp10925_34))
(assert (= temp10925_36 (select ARGNAME_padding_NAMEEND_VAL temp10925_35)))
(assert (= temp10925_37 #x0000000000000000))
(assert (= temp10925_38 #x0000000000000003))
(assert (= temp10925_39 temp10925_38))
(assert (= temp10925_40 (select ARGNAME_padding_NAMEEND_VAL temp10925_39)))
(assert (= temp10925_41 #x0000000000000000))
(assert (= temp10925_42 #x0000000000000004))
(assert (= temp10925_43 temp10925_42))
(assert (= temp10925_44 (select ARGNAME_padding_NAMEEND_VAL temp10925_43)))
(assert (= temp10925_45 #x0000000000000000))
(assert (= temp10925_46 #x0000000000000005))
(assert (= temp10925_47 temp10925_46))
(assert (= temp10925_48 (select ARGNAME_padding_NAMEEND_VAL temp10925_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10925_28 temp10925_25)
             (bvslt temp10925_32 temp10925_29)
             (bvslt temp10925_36 temp10925_33)
             (bvslt temp10925_40 temp10925_37)
             (bvslt temp10925_44 temp10925_41)
             (bvslt temp10925_48 temp10925_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10925_49 #x0000000000000000))
(assert (= var1191714 temp10925_49))
(assert (= temp10925_50 #x0000000000000000))
(assert (= temp10925_51 temp10925_50))
(assert (= temp10925_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10925_51)))
(assert (= temp10925_53 #x0000000000000001))
(assert (= temp10925_54 temp10925_53))
(assert (= temp10925_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10925_54)))
(assert (= temp10925_56 #x0000000000000002))
(assert (= temp10925_57 temp10925_56))
(assert (= temp10925_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10925_57)))
(assert (= temp10925_59 #x0000000000000003))
(assert (= temp10925_60 temp10925_59))
(assert (= temp10925_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10925_60)))
(assert (= temp10925_62 #x0000000000000004))
(assert (= temp10925_63 temp10925_62))
(assert (= temp10925_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10925_63)))
(assert (= temp10925_65 #x0000000000000005))
(assert (= temp10925_66 temp10925_65))
(assert (= temp10925_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10925_66)))
(assert (= temp10925_68 #x0000000000000000))
(assert (= temp10925_69 #x0000000000000000))
(assert (= temp10925_70 temp10925_69))
(assert (= temp10925_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10925_70)))
(assert (= temp10925_72 #x0000000000000000))
(assert (= temp10925_73 #x0000000000000001))
(assert (= temp10925_74 temp10925_73))
(assert (= temp10925_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10925_74)))
(assert (= temp10925_76 #x0000000000000000))
(assert (= temp10925_77 #x0000000000000002))
(assert (= temp10925_78 temp10925_77))
(assert (= temp10925_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10925_78)))
(assert (= temp10925_80 #x0000000000000000))
(assert (= temp10925_81 #x0000000000000003))
(assert (= temp10925_82 temp10925_81))
(assert (= temp10925_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10925_82)))
(assert (= temp10925_84 #x0000000000000000))
(assert (= temp10925_85 #x0000000000000004))
(assert (= temp10925_86 temp10925_85))
(assert (= temp10925_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10925_86)))
(assert (= temp10925_88 #x0000000000000000))
(assert (= temp10925_89 #x0000000000000005))
(assert (= temp10925_90 temp10925_89))
(assert (= temp10925_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10925_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10925_71 temp10925_68)
             (bvslt temp10925_75 temp10925_72)
             (bvslt temp10925_79 temp10925_76)
             (bvslt temp10925_83 temp10925_80)
             (bvslt temp10925_87 temp10925_84)
             (bvslt temp10925_91 temp10925_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10925_92 #x0000000000000000))
(assert (= var1191725 temp10925_92))
(assert (= temp10925_93 #x0000000000000000))
(assert (= temp10925_94 temp10925_93))
(assert (= temp10925_95 (select ARGNAME_stride_NAMEEND_VAL temp10925_94)))
(assert (= temp10925_96 #x0000000000000001))
(assert (= temp10925_97 temp10925_96))
(assert (= temp10925_98 (select ARGNAME_stride_NAMEEND_VAL temp10925_97)))
(assert (= temp10925_99 #x0000000000000002))
(assert (= temp10925_100 temp10925_99))
(assert (= temp10925_101 (select ARGNAME_stride_NAMEEND_VAL temp10925_100)))
(assert (= temp10925_102 #x0000000000000003))
(assert (= temp10925_103 temp10925_102))
(assert (= temp10925_104 (select ARGNAME_stride_NAMEEND_VAL temp10925_103)))
(assert (= temp10925_105 #x0000000000000004))
(assert (= temp10925_106 temp10925_105))
(assert (= temp10925_107 (select ARGNAME_stride_NAMEEND_VAL temp10925_106)))
(assert (= temp10925_108 #x0000000000000005))
(assert (= temp10925_109 temp10925_108))
(assert (= temp10925_110 (select ARGNAME_stride_NAMEEND_VAL temp10925_109)))
(assert (= temp10925_111 #x0000000000000000))
(assert (= temp10925_112 #x0000000000000000))
(assert (= temp10925_113 temp10925_112))
(assert (= temp10925_114 (select ARGNAME_stride_NAMEEND_VAL temp10925_113)))
(assert (= temp10925_115 #x0000000000000000))
(assert (= temp10925_116 #x0000000000000001))
(assert (= temp10925_117 temp10925_116))
(assert (= temp10925_118 (select ARGNAME_stride_NAMEEND_VAL temp10925_117)))
(assert (= temp10925_119 #x0000000000000000))
(assert (= temp10925_120 #x0000000000000002))
(assert (= temp10925_121 temp10925_120))
(assert (= temp10925_122 (select ARGNAME_stride_NAMEEND_VAL temp10925_121)))
(assert (= temp10925_123 #x0000000000000000))
(assert (= temp10925_124 #x0000000000000003))
(assert (= temp10925_125 temp10925_124))
(assert (= temp10925_126 (select ARGNAME_stride_NAMEEND_VAL temp10925_125)))
(assert (= temp10925_127 #x0000000000000000))
(assert (= temp10925_128 #x0000000000000004))
(assert (= temp10925_129 temp10925_128))
(assert (= temp10925_130 (select ARGNAME_stride_NAMEEND_VAL temp10925_129)))
(assert (= temp10925_131 #x0000000000000000))
(assert (= temp10925_132 #x0000000000000005))
(assert (= temp10925_133 temp10925_132))
(assert (= temp10925_134 (select ARGNAME_stride_NAMEEND_VAL temp10925_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10925_114 temp10925_111)
             (bvsle temp10925_118 temp10925_115)
             (bvsle temp10925_122 temp10925_119)
             (bvsle temp10925_126 temp10925_123)
             (bvsle temp10925_130 temp10925_127)
             (bvsle temp10925_134 temp10925_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10925_135 #x0000000000000000))
(assert (= var1191735 temp10925_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10925_136 #x0000000000000001))
(assert (= var1191747 temp10925_136))
(assert (= temp10925_137 #x0000000000000000))
(assert (= var1179826 temp10925_137))
(assert (= temp10925_138 #x0000000000000000))
(assert (= temp10925_139 temp10925_138))
(assert (= temp10925_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10925_139)))
(assert (= temp10925_141 #x0000000000000001))
(assert (= temp10925_142 temp10925_141))
(assert (= temp10925_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10925_142)))
(assert (= temp10925_144 #x0000000000000002))
(assert (= temp10925_145 temp10925_144))
(assert (= temp10925_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10925_145)))
(assert (= temp10925_147 #x0000000000000003))
(assert (= temp10925_148 temp10925_147))
(assert (= temp10925_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10925_148)))
(assert (= temp10925_150 #x0000000000000004))
(assert (= temp10925_151 temp10925_150))
(assert (= temp10925_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10925_151)))
(assert (= temp10925_153 #x0000000000000005))
(assert (= temp10925_154 temp10925_153))
(assert (= temp10925_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10925_154)))
(assert (= temp10925_157 var1179826))
(assert (= temp10925_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10925_157)))
(assert (= temp10925_156 temp10925_158))
(assert (= var1191780
   (ite (bvslt temp10925_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10925_159 #x0000000000000000))
(assert (= var1191780 temp10925_159))
(assert (= temp10925_160 #x0000000000000000))
(assert (= var1179826 temp10925_160))
(assert (= temp10925_162 var1179826))
(assert (= temp10925_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10925_162)))
(assert (= temp10925_161 temp10925_163))
(assert (= var1191802 (bvsmod temp10925_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10925_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10925_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10925_165 #x0000000000000001))
(assert (= var1191803 temp10925_165))
(assert (= temp10925_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10925_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10925_167 #x0000000000000001))
(assert (= var1191823 temp10925_167))
(assert (= temp10925_168 #x0000000000000001))
(assert (= var1180714 temp10925_168))
(assert (= temp10925_169 #x0000000000000000))
(assert (= temp10925_170 temp10925_169))
(assert (= temp10925_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10925_170)))
(assert (= temp10925_172 #x0000000000000001))
(assert (= temp10925_173 temp10925_172))
(assert (= temp10925_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10925_173)))
(assert (= temp10925_175 #x0000000000000002))
(assert (= temp10925_176 temp10925_175))
(assert (= temp10925_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10925_176)))
(assert (= temp10925_178 #x0000000000000003))
(assert (= temp10925_179 temp10925_178))
(assert (= temp10925_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10925_179)))
(assert (= temp10925_181 #x0000000000000004))
(assert (= temp10925_182 temp10925_181))
(assert (= temp10925_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10925_182)))
(assert (= temp10925_184 #x0000000000000005))
(assert (= temp10925_185 temp10925_184))
(assert (= temp10925_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10925_185)))
(assert (= temp10925_187 #x0000000000000000))
(assert (= temp10925_188
   (ite (bvslt var1180714 temp10925_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10925_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10925_188)))
(assert (= var1191831 temp10925_189))
(assert (bvslt (ite (bvslt var1180714 temp10925_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10925_190 #x0000000000000001))
(assert (= var1180714 temp10925_190))
(assert (= temp10925_192 var1180714))
(assert (= temp10925_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10925_192)))
(assert (= temp10925_191 temp10925_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10925_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10925_194 #x0000000000000001))
(assert (= var1191836 temp10925_194))
(assert (= temp10925_195 #x0000000000000000))
(assert (= var1179826 temp10925_195))
(assert (= temp10925_197 var1179826))
(assert (= temp10925_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10925_197)))
(assert (= temp10925_196 temp10925_198))
(assert (= temp10925_199 #x0000000000000002))
(assert (= var1586025 temp10925_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10925_200 #x0000000000000001))
(assert (= var1191993 temp10925_200))
(assert (= temp10925_201 #x0000000000000001))
(assert (= var2700303 temp10925_201))
(assert (= temp10925_202 #x0000000000000001))
(assert (= var2962447 temp10925_202))
(assert (= temp10925_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10925_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10925_204 #x0000000000000001))
(assert (= var211058 temp10925_204))
(assert (= temp10925_205 #x0000000000000001))
(assert (= var211188 temp10925_205))
(assert (= var3879401 var211188))
(assert (= temp10925_206 #x0000000000000000))
(assert (= var3866802 temp10925_206))
(assert (= temp10925_207 #x0000000000000000))
(assert (= temp10925_208
   (ite (bvslt var3866802 temp10925_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10925_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10925_208)))
(assert (= var3879420 temp10925_209))
(assert (bvslt (ite (bvslt var3866802 temp10925_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10925_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10925_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10925_211 #x0000000000000000))
(assert (= var3879421 temp10925_211))
(assert (= temp10925_212 #x0000000000000001))
(assert (= var3867690 temp10925_212))
(assert (= temp10925_213 #x0000000000000000))
(assert (= temp10925_214
   (ite (bvslt var3867690 temp10925_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10925_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10925_214)))
(assert (= var3879423 temp10925_215))
(assert (bvslt (ite (bvslt var3867690 temp10925_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10925_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10925_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10925_217 #x0000000000000001))
(assert (= var3879424 temp10925_217))
(assert (= temp10925_218 #x0000000000000000))
(assert (= var4133117 temp10925_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10925_219 #x0000000000000002))
(assert (= var4339331 temp10925_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10925_220 #x0000000000000000))
(assert (= var4404892 temp10925_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var5255568 var211201))
(assert (= var5517712 var211201))
(assert (= temp10925_221 #x0000000000000000))
(assert (= var5845392 temp10925_221))
(assert (= temp10925_222 #x0000000000000001))
(assert (= var211058 temp10925_222))
(model-add temp10925_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10925_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10925_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10925_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




