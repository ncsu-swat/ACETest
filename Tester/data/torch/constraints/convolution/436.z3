(declare-fun temp581_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp581_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp581_3 () (_ BitVec 64))
(declare-fun temp581_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp581_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp581_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp581_7 () (_ BitVec 64))
(declare-fun temp581_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp581_9 () (_ BitVec 64))
(declare-fun temp581_10 () (_ BitVec 64))
(declare-fun temp581_11 () (_ BitVec 64))
(declare-fun temp581_12 () (_ BitVec 64))
(declare-fun temp581_13 () (_ BitVec 64))
(declare-fun temp581_14 () (_ BitVec 64))
(declare-fun temp581_15 () (_ BitVec 64))
(declare-fun temp581_16 () (_ BitVec 64))
(declare-fun temp581_17 () (_ BitVec 64))
(declare-fun temp581_18 () (_ BitVec 64))
(declare-fun temp581_19 () (_ BitVec 64))
(declare-fun temp581_20 () (_ BitVec 64))
(declare-fun temp581_21 () (_ BitVec 64))
(declare-fun temp581_22 () (_ BitVec 64))
(declare-fun temp581_23 () (_ BitVec 64))
(declare-fun temp581_24 () (_ BitVec 64))
(declare-fun temp581_25 () (_ BitVec 64))
(declare-fun temp581_26 () (_ BitVec 64))
(declare-fun temp581_27 () (_ BitVec 64))
(declare-fun temp581_28 () (_ BitVec 64))
(declare-fun temp581_29 () (_ BitVec 64))
(declare-fun temp581_30 () (_ BitVec 64))
(declare-fun temp581_31 () (_ BitVec 64))
(declare-fun temp581_32 () (_ BitVec 64))
(declare-fun temp581_33 () (_ BitVec 64))
(declare-fun temp581_34 () (_ BitVec 64))
(declare-fun temp581_35 () (_ BitVec 64))
(declare-fun temp581_36 () (_ BitVec 64))
(declare-fun temp581_37 () (_ BitVec 64))
(declare-fun temp581_38 () (_ BitVec 64))
(declare-fun temp581_39 () (_ BitVec 64))
(declare-fun temp581_40 () (_ BitVec 64))
(declare-fun temp581_41 () (_ BitVec 64))
(declare-fun temp581_42 () (_ BitVec 64))
(declare-fun temp581_43 () (_ BitVec 64))
(declare-fun temp581_44 () (_ BitVec 64))
(declare-fun temp581_45 () (_ BitVec 64))
(declare-fun temp581_46 () (_ BitVec 64))
(declare-fun temp581_47 () (_ BitVec 64))
(declare-fun temp581_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp581_49 () (_ BitVec 64))
(declare-fun temp581_50 () (_ BitVec 64))
(declare-fun temp581_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp581_52 () (_ BitVec 64))
(declare-fun temp581_53 () (_ BitVec 64))
(declare-fun temp581_54 () (_ BitVec 64))
(declare-fun temp581_55 () (_ BitVec 64))
(declare-fun temp581_56 () (_ BitVec 64))
(declare-fun temp581_57 () (_ BitVec 64))
(declare-fun temp581_58 () (_ BitVec 64))
(declare-fun temp581_59 () (_ BitVec 64))
(declare-fun temp581_60 () (_ BitVec 64))
(declare-fun temp581_61 () (_ BitVec 64))
(declare-fun temp581_62 () (_ BitVec 64))
(declare-fun temp581_63 () (_ BitVec 64))
(declare-fun temp581_64 () (_ BitVec 64))
(declare-fun temp581_65 () (_ BitVec 64))
(declare-fun temp581_66 () (_ BitVec 64))
(declare-fun temp581_67 () (_ BitVec 64))
(declare-fun temp581_68 () (_ BitVec 64))
(declare-fun temp581_69 () (_ BitVec 64))
(declare-fun temp581_70 () (_ BitVec 64))
(declare-fun temp581_71 () (_ BitVec 64))
(declare-fun temp581_72 () (_ BitVec 64))
(declare-fun temp581_73 () (_ BitVec 64))
(declare-fun temp581_74 () (_ BitVec 64))
(declare-fun temp581_75 () (_ BitVec 64))
(declare-fun temp581_76 () (_ BitVec 64))
(declare-fun temp581_77 () (_ BitVec 64))
(declare-fun temp581_78 () (_ BitVec 64))
(declare-fun temp581_79 () (_ BitVec 64))
(declare-fun temp581_80 () (_ BitVec 64))
(declare-fun temp581_81 () (_ BitVec 64))
(declare-fun temp581_82 () (_ BitVec 64))
(declare-fun temp581_83 () (_ BitVec 64))
(declare-fun temp581_84 () (_ BitVec 64))
(declare-fun temp581_85 () (_ BitVec 64))
(declare-fun temp581_86 () (_ BitVec 64))
(declare-fun temp581_87 () (_ BitVec 64))
(declare-fun temp581_88 () (_ BitVec 64))
(declare-fun temp581_89 () (_ BitVec 64))
(declare-fun temp581_90 () (_ BitVec 64))
(declare-fun temp581_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp581_92 () (_ BitVec 64))
(declare-fun temp581_93 () (_ BitVec 64))
(declare-fun temp581_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp581_95 () (_ BitVec 64))
(declare-fun temp581_96 () (_ BitVec 64))
(declare-fun temp581_97 () (_ BitVec 64))
(declare-fun temp581_98 () (_ BitVec 64))
(declare-fun temp581_99 () (_ BitVec 64))
(declare-fun temp581_100 () (_ BitVec 64))
(declare-fun temp581_101 () (_ BitVec 64))
(declare-fun temp581_102 () (_ BitVec 64))
(declare-fun temp581_103 () (_ BitVec 64))
(declare-fun temp581_104 () (_ BitVec 64))
(declare-fun temp581_105 () (_ BitVec 64))
(declare-fun temp581_106 () (_ BitVec 64))
(declare-fun temp581_107 () (_ BitVec 64))
(declare-fun temp581_108 () (_ BitVec 64))
(declare-fun temp581_109 () (_ BitVec 64))
(declare-fun temp581_110 () (_ BitVec 64))
(declare-fun temp581_111 () (_ BitVec 64))
(declare-fun temp581_112 () (_ BitVec 64))
(declare-fun temp581_113 () (_ BitVec 64))
(declare-fun temp581_114 () (_ BitVec 64))
(declare-fun temp581_115 () (_ BitVec 64))
(declare-fun temp581_116 () (_ BitVec 64))
(declare-fun temp581_117 () (_ BitVec 64))
(declare-fun temp581_118 () (_ BitVec 64))
(declare-fun temp581_119 () (_ BitVec 64))
(declare-fun temp581_120 () (_ BitVec 64))
(declare-fun temp581_121 () (_ BitVec 64))
(declare-fun temp581_122 () (_ BitVec 64))
(declare-fun temp581_123 () (_ BitVec 64))
(declare-fun temp581_124 () (_ BitVec 64))
(declare-fun temp581_125 () (_ BitVec 64))
(declare-fun temp581_126 () (_ BitVec 64))
(declare-fun temp581_127 () (_ BitVec 64))
(declare-fun temp581_128 () (_ BitVec 64))
(declare-fun temp581_129 () (_ BitVec 64))
(declare-fun temp581_130 () (_ BitVec 64))
(declare-fun temp581_131 () (_ BitVec 64))
(declare-fun temp581_132 () (_ BitVec 64))
(declare-fun temp581_133 () (_ BitVec 64))
(declare-fun temp581_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp581_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp581_136 () (_ BitVec 64))
(declare-fun temp581_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp581_138 () (_ BitVec 64))
(declare-fun temp581_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp581_140 () (_ BitVec 64))
(declare-fun temp581_141 () (_ BitVec 64))
(declare-fun temp581_142 () (_ BitVec 64))
(declare-fun temp581_143 () (_ BitVec 64))
(declare-fun temp581_144 () (_ BitVec 64))
(declare-fun temp581_145 () (_ BitVec 64))
(declare-fun temp581_146 () (_ BitVec 64))
(declare-fun temp581_147 () (_ BitVec 64))
(declare-fun temp581_148 () (_ BitVec 64))
(declare-fun temp581_149 () (_ BitVec 64))
(declare-fun temp581_150 () (_ BitVec 64))
(declare-fun temp581_151 () (_ BitVec 64))
(declare-fun temp581_152 () (_ BitVec 64))
(declare-fun temp581_153 () (_ BitVec 64))
(declare-fun temp581_154 () (_ BitVec 64))
(declare-fun temp581_155 () (_ BitVec 64))
(declare-fun temp581_157 () (_ BitVec 64))
(declare-fun temp581_158 () (_ BitVec 64))
(declare-fun temp581_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp581_159 () (_ BitVec 64))
(declare-fun temp581_160 () (_ BitVec 64))
(declare-fun temp581_162 () (_ BitVec 64))
(declare-fun temp581_163 () (_ BitVec 64))
(declare-fun temp581_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp581_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp581_165 () (_ BitVec 64))
(declare-fun temp581_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp581_167 () (_ BitVec 64))
(declare-fun temp581_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp581_169 () (_ BitVec 64))
(declare-fun temp581_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp581_171 () (_ BitVec 64))
(declare-fun temp581_172 () (_ BitVec 64))
(declare-fun temp581_173 () (_ BitVec 64))
(declare-fun temp581_174 () (_ BitVec 64))
(declare-fun temp581_175 () (_ BitVec 64))
(declare-fun temp581_176 () (_ BitVec 64))
(declare-fun temp581_177 () (_ BitVec 64))
(declare-fun temp581_178 () (_ BitVec 64))
(declare-fun temp581_179 () (_ BitVec 64))
(declare-fun temp581_180 () (_ BitVec 64))
(declare-fun temp581_181 () (_ BitVec 64))
(declare-fun temp581_182 () (_ BitVec 64))
(declare-fun temp581_183 () (_ BitVec 64))
(declare-fun temp581_184 () (_ BitVec 64))
(declare-fun temp581_185 () (_ BitVec 64))
(declare-fun temp581_186 () (_ BitVec 64))
(declare-fun temp581_187 () (_ BitVec 64))
(declare-fun temp581_188 () (_ BitVec 64))
(declare-fun temp581_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp581_190 () (_ BitVec 64))
(declare-fun temp581_192 () (_ BitVec 64))
(declare-fun temp581_193 () (_ BitVec 64))
(declare-fun temp581_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp581_194 () (_ BitVec 64))
(declare-fun temp581_195 () (_ BitVec 64))
(declare-fun temp581_197 () (_ BitVec 64))
(declare-fun temp581_198 () (_ BitVec 64))
(declare-fun temp581_196 () (_ BitVec 64))
(declare-fun temp581_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp581_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp581_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp581_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp581_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp581_204 () (_ BitVec 64))
(declare-fun temp581_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp581_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp581_207 () (_ BitVec 64))
(declare-fun temp581_208 () (_ BitVec 64))
(declare-fun temp581_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp581_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp581_211 () (_ BitVec 64))
(declare-fun temp581_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp581_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp581_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4469136 () (_ BitVec 64))
(declare-fun var4731280 () (_ BitVec 64))
(declare-fun temp581_215 () (_ BitVec 64))
(declare-fun var212414 () (_ BitVec 64))
(declare-fun temp581_216 () (_ BitVec 64))
(declare-fun temp581_217 () (_ BitVec 64))
(assert (= temp581_1 #x0000000000000001))
(assert (= var77203 temp581_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp581_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp581_2)))
(assert (= temp581_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp581_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp581_4 #x0000000000000000))
(assert (= var210941 temp581_4))
(assert (= temp581_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp581_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp581_6 #x0000000000000000))
(assert (= var210986 temp581_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp581_7 #x0000000000000000))
(assert (= temp581_8 temp581_7))
(assert (= temp581_9 (select ARGNAME_padding_NAMEEND_VAL temp581_8)))
(assert (= temp581_10 #x0000000000000001))
(assert (= temp581_11 temp581_10))
(assert (= temp581_12 (select ARGNAME_padding_NAMEEND_VAL temp581_11)))
(assert (= temp581_13 #x0000000000000002))
(assert (= temp581_14 temp581_13))
(assert (= temp581_15 (select ARGNAME_padding_NAMEEND_VAL temp581_14)))
(assert (= temp581_16 #x0000000000000003))
(assert (= temp581_17 temp581_16))
(assert (= temp581_18 (select ARGNAME_padding_NAMEEND_VAL temp581_17)))
(assert (= temp581_19 #x0000000000000004))
(assert (= temp581_20 temp581_19))
(assert (= temp581_21 (select ARGNAME_padding_NAMEEND_VAL temp581_20)))
(assert (= temp581_22 #x0000000000000005))
(assert (= temp581_23 temp581_22))
(assert (= temp581_24 (select ARGNAME_padding_NAMEEND_VAL temp581_23)))
(assert (= temp581_25 #x0000000000000000))
(assert (= temp581_26 #x0000000000000000))
(assert (= temp581_27 temp581_26))
(assert (= temp581_28 (select ARGNAME_padding_NAMEEND_VAL temp581_27)))
(assert (= temp581_29 #x0000000000000000))
(assert (= temp581_30 #x0000000000000001))
(assert (= temp581_31 temp581_30))
(assert (= temp581_32 (select ARGNAME_padding_NAMEEND_VAL temp581_31)))
(assert (= temp581_33 #x0000000000000000))
(assert (= temp581_34 #x0000000000000002))
(assert (= temp581_35 temp581_34))
(assert (= temp581_36 (select ARGNAME_padding_NAMEEND_VAL temp581_35)))
(assert (= temp581_37 #x0000000000000000))
(assert (= temp581_38 #x0000000000000003))
(assert (= temp581_39 temp581_38))
(assert (= temp581_40 (select ARGNAME_padding_NAMEEND_VAL temp581_39)))
(assert (= temp581_41 #x0000000000000000))
(assert (= temp581_42 #x0000000000000004))
(assert (= temp581_43 temp581_42))
(assert (= temp581_44 (select ARGNAME_padding_NAMEEND_VAL temp581_43)))
(assert (= temp581_45 #x0000000000000000))
(assert (= temp581_46 #x0000000000000005))
(assert (= temp581_47 temp581_46))
(assert (= temp581_48 (select ARGNAME_padding_NAMEEND_VAL temp581_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp581_28 temp581_25)
             (bvslt temp581_32 temp581_29)
             (bvslt temp581_36 temp581_33)
             (bvslt temp581_40 temp581_37)
             (bvslt temp581_44 temp581_41)
             (bvslt temp581_48 temp581_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp581_49 #x0000000000000000))
(assert (= var1191714 temp581_49))
(assert (= temp581_50 #x0000000000000000))
(assert (= temp581_51 temp581_50))
(assert (= temp581_52 (select ARGNAME_output_padding_NAMEEND_VAL temp581_51)))
(assert (= temp581_53 #x0000000000000001))
(assert (= temp581_54 temp581_53))
(assert (= temp581_55 (select ARGNAME_output_padding_NAMEEND_VAL temp581_54)))
(assert (= temp581_56 #x0000000000000002))
(assert (= temp581_57 temp581_56))
(assert (= temp581_58 (select ARGNAME_output_padding_NAMEEND_VAL temp581_57)))
(assert (= temp581_59 #x0000000000000003))
(assert (= temp581_60 temp581_59))
(assert (= temp581_61 (select ARGNAME_output_padding_NAMEEND_VAL temp581_60)))
(assert (= temp581_62 #x0000000000000004))
(assert (= temp581_63 temp581_62))
(assert (= temp581_64 (select ARGNAME_output_padding_NAMEEND_VAL temp581_63)))
(assert (= temp581_65 #x0000000000000005))
(assert (= temp581_66 temp581_65))
(assert (= temp581_67 (select ARGNAME_output_padding_NAMEEND_VAL temp581_66)))
(assert (= temp581_68 #x0000000000000000))
(assert (= temp581_69 #x0000000000000000))
(assert (= temp581_70 temp581_69))
(assert (= temp581_71 (select ARGNAME_output_padding_NAMEEND_VAL temp581_70)))
(assert (= temp581_72 #x0000000000000000))
(assert (= temp581_73 #x0000000000000001))
(assert (= temp581_74 temp581_73))
(assert (= temp581_75 (select ARGNAME_output_padding_NAMEEND_VAL temp581_74)))
(assert (= temp581_76 #x0000000000000000))
(assert (= temp581_77 #x0000000000000002))
(assert (= temp581_78 temp581_77))
(assert (= temp581_79 (select ARGNAME_output_padding_NAMEEND_VAL temp581_78)))
(assert (= temp581_80 #x0000000000000000))
(assert (= temp581_81 #x0000000000000003))
(assert (= temp581_82 temp581_81))
(assert (= temp581_83 (select ARGNAME_output_padding_NAMEEND_VAL temp581_82)))
(assert (= temp581_84 #x0000000000000000))
(assert (= temp581_85 #x0000000000000004))
(assert (= temp581_86 temp581_85))
(assert (= temp581_87 (select ARGNAME_output_padding_NAMEEND_VAL temp581_86)))
(assert (= temp581_88 #x0000000000000000))
(assert (= temp581_89 #x0000000000000005))
(assert (= temp581_90 temp581_89))
(assert (= temp581_91 (select ARGNAME_output_padding_NAMEEND_VAL temp581_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp581_71 temp581_68)
             (bvslt temp581_75 temp581_72)
             (bvslt temp581_79 temp581_76)
             (bvslt temp581_83 temp581_80)
             (bvslt temp581_87 temp581_84)
             (bvslt temp581_91 temp581_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp581_92 #x0000000000000000))
(assert (= var1191725 temp581_92))
(assert (= temp581_93 #x0000000000000000))
(assert (= temp581_94 temp581_93))
(assert (= temp581_95 (select ARGNAME_stride_NAMEEND_VAL temp581_94)))
(assert (= temp581_96 #x0000000000000001))
(assert (= temp581_97 temp581_96))
(assert (= temp581_98 (select ARGNAME_stride_NAMEEND_VAL temp581_97)))
(assert (= temp581_99 #x0000000000000002))
(assert (= temp581_100 temp581_99))
(assert (= temp581_101 (select ARGNAME_stride_NAMEEND_VAL temp581_100)))
(assert (= temp581_102 #x0000000000000003))
(assert (= temp581_103 temp581_102))
(assert (= temp581_104 (select ARGNAME_stride_NAMEEND_VAL temp581_103)))
(assert (= temp581_105 #x0000000000000004))
(assert (= temp581_106 temp581_105))
(assert (= temp581_107 (select ARGNAME_stride_NAMEEND_VAL temp581_106)))
(assert (= temp581_108 #x0000000000000005))
(assert (= temp581_109 temp581_108))
(assert (= temp581_110 (select ARGNAME_stride_NAMEEND_VAL temp581_109)))
(assert (= temp581_111 #x0000000000000000))
(assert (= temp581_112 #x0000000000000000))
(assert (= temp581_113 temp581_112))
(assert (= temp581_114 (select ARGNAME_stride_NAMEEND_VAL temp581_113)))
(assert (= temp581_115 #x0000000000000000))
(assert (= temp581_116 #x0000000000000001))
(assert (= temp581_117 temp581_116))
(assert (= temp581_118 (select ARGNAME_stride_NAMEEND_VAL temp581_117)))
(assert (= temp581_119 #x0000000000000000))
(assert (= temp581_120 #x0000000000000002))
(assert (= temp581_121 temp581_120))
(assert (= temp581_122 (select ARGNAME_stride_NAMEEND_VAL temp581_121)))
(assert (= temp581_123 #x0000000000000000))
(assert (= temp581_124 #x0000000000000003))
(assert (= temp581_125 temp581_124))
(assert (= temp581_126 (select ARGNAME_stride_NAMEEND_VAL temp581_125)))
(assert (= temp581_127 #x0000000000000000))
(assert (= temp581_128 #x0000000000000004))
(assert (= temp581_129 temp581_128))
(assert (= temp581_130 (select ARGNAME_stride_NAMEEND_VAL temp581_129)))
(assert (= temp581_131 #x0000000000000000))
(assert (= temp581_132 #x0000000000000005))
(assert (= temp581_133 temp581_132))
(assert (= temp581_134 (select ARGNAME_stride_NAMEEND_VAL temp581_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp581_114 temp581_111)
             (bvsle temp581_118 temp581_115)
             (bvsle temp581_122 temp581_119)
             (bvsle temp581_126 temp581_123)
             (bvsle temp581_130 temp581_127)
             (bvsle temp581_134 temp581_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp581_135 #x0000000000000000))
(assert (= var1191735 temp581_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp581_136 #x0000000000000001))
(assert (= var1191747 temp581_136))
(assert (= temp581_137 #x0000000000000000))
(assert (= var1179826 temp581_137))
(assert (= temp581_138 #x0000000000000000))
(assert (= temp581_139 temp581_138))
(assert (= temp581_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp581_139)))
(assert (= temp581_141 #x0000000000000001))
(assert (= temp581_142 temp581_141))
(assert (= temp581_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp581_142)))
(assert (= temp581_144 #x0000000000000002))
(assert (= temp581_145 temp581_144))
(assert (= temp581_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp581_145)))
(assert (= temp581_147 #x0000000000000003))
(assert (= temp581_148 temp581_147))
(assert (= temp581_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp581_148)))
(assert (= temp581_150 #x0000000000000004))
(assert (= temp581_151 temp581_150))
(assert (= temp581_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp581_151)))
(assert (= temp581_153 #x0000000000000005))
(assert (= temp581_154 temp581_153))
(assert (= temp581_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp581_154)))
(assert (= temp581_157 var1179826))
(assert (= temp581_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp581_157)))
(assert (= temp581_156 temp581_158))
(assert (= var1191780
   (ite (bvslt temp581_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp581_159 #x0000000000000000))
(assert (= var1191780 temp581_159))
(assert (= temp581_160 #x0000000000000000))
(assert (= var1179826 temp581_160))
(assert (= temp581_162 var1179826))
(assert (= temp581_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp581_162)))
(assert (= temp581_161 temp581_163))
(assert (= var1191802 (bvsmod temp581_161 ARGNAME_groups_NAMEEND)))
(assert (= temp581_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp581_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp581_165 #x0000000000000001))
(assert (= var1191803 temp581_165))
(assert (= temp581_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp581_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp581_167 #x0000000000000001))
(assert (= var1191823 temp581_167))
(assert (= temp581_168 #x0000000000000001))
(assert (= var1180714 temp581_168))
(assert (= temp581_169 #x0000000000000000))
(assert (= temp581_170 temp581_169))
(assert (= temp581_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp581_170)))
(assert (= temp581_172 #x0000000000000001))
(assert (= temp581_173 temp581_172))
(assert (= temp581_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp581_173)))
(assert (= temp581_175 #x0000000000000002))
(assert (= temp581_176 temp581_175))
(assert (= temp581_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp581_176)))
(assert (= temp581_178 #x0000000000000003))
(assert (= temp581_179 temp581_178))
(assert (= temp581_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp581_179)))
(assert (= temp581_181 #x0000000000000004))
(assert (= temp581_182 temp581_181))
(assert (= temp581_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp581_182)))
(assert (= temp581_184 #x0000000000000005))
(assert (= temp581_185 temp581_184))
(assert (= temp581_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp581_185)))
(assert (= temp581_187 #x0000000000000000))
(assert (= temp581_188
   (ite (bvslt var1180714 temp581_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp581_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp581_188)))
(assert (= var1191831 temp581_189))
(assert (bvslt (ite (bvslt var1180714 temp581_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp581_190 #x0000000000000001))
(assert (= var1180714 temp581_190))
(assert (= temp581_192 var1180714))
(assert (= temp581_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp581_192)))
(assert (= temp581_191 temp581_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp581_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp581_194 #x0000000000000001))
(assert (= var1191836 temp581_194))
(assert (= temp581_195 #x0000000000000000))
(assert (= var1179826 temp581_195))
(assert (= temp581_197 var1179826))
(assert (= temp581_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp581_197)))
(assert (= temp581_196 temp581_198))
(assert (= temp581_199 #x0000000000000002))
(assert (= var1586025 temp581_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp581_200 #x0000000000000001))
(assert (= var1191993 temp581_200))
(assert (= temp581_201 #x0000000000000001))
(assert (= var2700303 temp581_201))
(assert (= temp581_202 #x0000000000000001))
(assert (= var2962447 temp581_202))
(assert (= temp581_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp581_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp581_204 #x0000000000000001))
(assert (= var211058 temp581_204))
(assert (= temp581_205 #x0000000000000001))
(assert (= var211188 temp581_205))
(assert (= var3879401 var211188))
(assert (= temp581_206 #x0000000000000000))
(assert (= var3866802 temp581_206))
(assert (= temp581_207 #x0000000000000000))
(assert (= temp581_208
   (ite (bvslt var3866802 temp581_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp581_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp581_208)))
(assert (= var3879420 temp581_209))
(assert (bvslt (ite (bvslt var3866802 temp581_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp581_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp581_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp581_211 #x0000000000000001))
(assert (= var3879421 temp581_211))
(assert (= temp581_212 #x0000000000000000))
(assert (= var4079423 temp581_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp581_213 #x0000000000000002))
(assert (= var4208259 temp581_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp581_214 #x0000000000000000))
(assert (= var4273820 temp581_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4469136 var211201))
(assert (= var4731280 var211201))
(assert (= temp581_215 #x0000000000000001))
(assert (= var212414
   (ite (= ARGNAME_groups_NAMEEND temp581_215)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp581_216 #x0000000000000000))
(assert (= var212414 temp581_216))
(assert (= temp581_217 #x0000000000000001))
(assert (= var211058 temp581_217))
(model-add temp581_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp581_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp581_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp581_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





