(declare-fun temp10890_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10890_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10890_3 () (_ BitVec 64))
(declare-fun temp10890_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10890_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10890_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10890_7 () (_ BitVec 64))
(declare-fun temp10890_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10890_9 () (_ BitVec 64))
(declare-fun temp10890_10 () (_ BitVec 64))
(declare-fun temp10890_11 () (_ BitVec 64))
(declare-fun temp10890_12 () (_ BitVec 64))
(declare-fun temp10890_13 () (_ BitVec 64))
(declare-fun temp10890_14 () (_ BitVec 64))
(declare-fun temp10890_15 () (_ BitVec 64))
(declare-fun temp10890_16 () (_ BitVec 64))
(declare-fun temp10890_17 () (_ BitVec 64))
(declare-fun temp10890_18 () (_ BitVec 64))
(declare-fun temp10890_19 () (_ BitVec 64))
(declare-fun temp10890_20 () (_ BitVec 64))
(declare-fun temp10890_21 () (_ BitVec 64))
(declare-fun temp10890_22 () (_ BitVec 64))
(declare-fun temp10890_23 () (_ BitVec 64))
(declare-fun temp10890_24 () (_ BitVec 64))
(declare-fun temp10890_25 () (_ BitVec 64))
(declare-fun temp10890_26 () (_ BitVec 64))
(declare-fun temp10890_27 () (_ BitVec 64))
(declare-fun temp10890_28 () (_ BitVec 64))
(declare-fun temp10890_29 () (_ BitVec 64))
(declare-fun temp10890_30 () (_ BitVec 64))
(declare-fun temp10890_31 () (_ BitVec 64))
(declare-fun temp10890_32 () (_ BitVec 64))
(declare-fun temp10890_33 () (_ BitVec 64))
(declare-fun temp10890_34 () (_ BitVec 64))
(declare-fun temp10890_35 () (_ BitVec 64))
(declare-fun temp10890_36 () (_ BitVec 64))
(declare-fun temp10890_37 () (_ BitVec 64))
(declare-fun temp10890_38 () (_ BitVec 64))
(declare-fun temp10890_39 () (_ BitVec 64))
(declare-fun temp10890_40 () (_ BitVec 64))
(declare-fun temp10890_41 () (_ BitVec 64))
(declare-fun temp10890_42 () (_ BitVec 64))
(declare-fun temp10890_43 () (_ BitVec 64))
(declare-fun temp10890_44 () (_ BitVec 64))
(declare-fun temp10890_45 () (_ BitVec 64))
(declare-fun temp10890_46 () (_ BitVec 64))
(declare-fun temp10890_47 () (_ BitVec 64))
(declare-fun temp10890_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10890_49 () (_ BitVec 64))
(declare-fun temp10890_50 () (_ BitVec 64))
(declare-fun temp10890_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10890_52 () (_ BitVec 64))
(declare-fun temp10890_53 () (_ BitVec 64))
(declare-fun temp10890_54 () (_ BitVec 64))
(declare-fun temp10890_55 () (_ BitVec 64))
(declare-fun temp10890_56 () (_ BitVec 64))
(declare-fun temp10890_57 () (_ BitVec 64))
(declare-fun temp10890_58 () (_ BitVec 64))
(declare-fun temp10890_59 () (_ BitVec 64))
(declare-fun temp10890_60 () (_ BitVec 64))
(declare-fun temp10890_61 () (_ BitVec 64))
(declare-fun temp10890_62 () (_ BitVec 64))
(declare-fun temp10890_63 () (_ BitVec 64))
(declare-fun temp10890_64 () (_ BitVec 64))
(declare-fun temp10890_65 () (_ BitVec 64))
(declare-fun temp10890_66 () (_ BitVec 64))
(declare-fun temp10890_67 () (_ BitVec 64))
(declare-fun temp10890_68 () (_ BitVec 64))
(declare-fun temp10890_69 () (_ BitVec 64))
(declare-fun temp10890_70 () (_ BitVec 64))
(declare-fun temp10890_71 () (_ BitVec 64))
(declare-fun temp10890_72 () (_ BitVec 64))
(declare-fun temp10890_73 () (_ BitVec 64))
(declare-fun temp10890_74 () (_ BitVec 64))
(declare-fun temp10890_75 () (_ BitVec 64))
(declare-fun temp10890_76 () (_ BitVec 64))
(declare-fun temp10890_77 () (_ BitVec 64))
(declare-fun temp10890_78 () (_ BitVec 64))
(declare-fun temp10890_79 () (_ BitVec 64))
(declare-fun temp10890_80 () (_ BitVec 64))
(declare-fun temp10890_81 () (_ BitVec 64))
(declare-fun temp10890_82 () (_ BitVec 64))
(declare-fun temp10890_83 () (_ BitVec 64))
(declare-fun temp10890_84 () (_ BitVec 64))
(declare-fun temp10890_85 () (_ BitVec 64))
(declare-fun temp10890_86 () (_ BitVec 64))
(declare-fun temp10890_87 () (_ BitVec 64))
(declare-fun temp10890_88 () (_ BitVec 64))
(declare-fun temp10890_89 () (_ BitVec 64))
(declare-fun temp10890_90 () (_ BitVec 64))
(declare-fun temp10890_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10890_92 () (_ BitVec 64))
(declare-fun temp10890_93 () (_ BitVec 64))
(declare-fun temp10890_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10890_95 () (_ BitVec 64))
(declare-fun temp10890_96 () (_ BitVec 64))
(declare-fun temp10890_97 () (_ BitVec 64))
(declare-fun temp10890_98 () (_ BitVec 64))
(declare-fun temp10890_99 () (_ BitVec 64))
(declare-fun temp10890_100 () (_ BitVec 64))
(declare-fun temp10890_101 () (_ BitVec 64))
(declare-fun temp10890_102 () (_ BitVec 64))
(declare-fun temp10890_103 () (_ BitVec 64))
(declare-fun temp10890_104 () (_ BitVec 64))
(declare-fun temp10890_105 () (_ BitVec 64))
(declare-fun temp10890_106 () (_ BitVec 64))
(declare-fun temp10890_107 () (_ BitVec 64))
(declare-fun temp10890_108 () (_ BitVec 64))
(declare-fun temp10890_109 () (_ BitVec 64))
(declare-fun temp10890_110 () (_ BitVec 64))
(declare-fun temp10890_111 () (_ BitVec 64))
(declare-fun temp10890_112 () (_ BitVec 64))
(declare-fun temp10890_113 () (_ BitVec 64))
(declare-fun temp10890_114 () (_ BitVec 64))
(declare-fun temp10890_115 () (_ BitVec 64))
(declare-fun temp10890_116 () (_ BitVec 64))
(declare-fun temp10890_117 () (_ BitVec 64))
(declare-fun temp10890_118 () (_ BitVec 64))
(declare-fun temp10890_119 () (_ BitVec 64))
(declare-fun temp10890_120 () (_ BitVec 64))
(declare-fun temp10890_121 () (_ BitVec 64))
(declare-fun temp10890_122 () (_ BitVec 64))
(declare-fun temp10890_123 () (_ BitVec 64))
(declare-fun temp10890_124 () (_ BitVec 64))
(declare-fun temp10890_125 () (_ BitVec 64))
(declare-fun temp10890_126 () (_ BitVec 64))
(declare-fun temp10890_127 () (_ BitVec 64))
(declare-fun temp10890_128 () (_ BitVec 64))
(declare-fun temp10890_129 () (_ BitVec 64))
(declare-fun temp10890_130 () (_ BitVec 64))
(declare-fun temp10890_131 () (_ BitVec 64))
(declare-fun temp10890_132 () (_ BitVec 64))
(declare-fun temp10890_133 () (_ BitVec 64))
(declare-fun temp10890_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10890_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10890_136 () (_ BitVec 64))
(declare-fun temp10890_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10890_138 () (_ BitVec 64))
(declare-fun temp10890_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10890_140 () (_ BitVec 64))
(declare-fun temp10890_141 () (_ BitVec 64))
(declare-fun temp10890_142 () (_ BitVec 64))
(declare-fun temp10890_143 () (_ BitVec 64))
(declare-fun temp10890_144 () (_ BitVec 64))
(declare-fun temp10890_145 () (_ BitVec 64))
(declare-fun temp10890_146 () (_ BitVec 64))
(declare-fun temp10890_147 () (_ BitVec 64))
(declare-fun temp10890_148 () (_ BitVec 64))
(declare-fun temp10890_149 () (_ BitVec 64))
(declare-fun temp10890_150 () (_ BitVec 64))
(declare-fun temp10890_151 () (_ BitVec 64))
(declare-fun temp10890_152 () (_ BitVec 64))
(declare-fun temp10890_153 () (_ BitVec 64))
(declare-fun temp10890_154 () (_ BitVec 64))
(declare-fun temp10890_155 () (_ BitVec 64))
(declare-fun temp10890_157 () (_ BitVec 64))
(declare-fun temp10890_158 () (_ BitVec 64))
(declare-fun temp10890_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10890_159 () (_ BitVec 64))
(declare-fun temp10890_160 () (_ BitVec 64))
(declare-fun temp10890_162 () (_ BitVec 64))
(declare-fun temp10890_163 () (_ BitVec 64))
(declare-fun temp10890_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10890_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10890_165 () (_ BitVec 64))
(declare-fun temp10890_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10890_167 () (_ BitVec 64))
(declare-fun temp10890_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10890_169 () (_ BitVec 64))
(declare-fun temp10890_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10890_171 () (_ BitVec 64))
(declare-fun temp10890_172 () (_ BitVec 64))
(declare-fun temp10890_173 () (_ BitVec 64))
(declare-fun temp10890_174 () (_ BitVec 64))
(declare-fun temp10890_175 () (_ BitVec 64))
(declare-fun temp10890_176 () (_ BitVec 64))
(declare-fun temp10890_177 () (_ BitVec 64))
(declare-fun temp10890_178 () (_ BitVec 64))
(declare-fun temp10890_179 () (_ BitVec 64))
(declare-fun temp10890_180 () (_ BitVec 64))
(declare-fun temp10890_181 () (_ BitVec 64))
(declare-fun temp10890_182 () (_ BitVec 64))
(declare-fun temp10890_183 () (_ BitVec 64))
(declare-fun temp10890_184 () (_ BitVec 64))
(declare-fun temp10890_185 () (_ BitVec 64))
(declare-fun temp10890_186 () (_ BitVec 64))
(declare-fun temp10890_187 () (_ BitVec 64))
(declare-fun temp10890_188 () (_ BitVec 64))
(declare-fun temp10890_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10890_190 () (_ BitVec 64))
(declare-fun temp10890_192 () (_ BitVec 64))
(declare-fun temp10890_193 () (_ BitVec 64))
(declare-fun temp10890_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10890_194 () (_ BitVec 64))
(declare-fun temp10890_195 () (_ BitVec 64))
(declare-fun temp10890_197 () (_ BitVec 64))
(declare-fun temp10890_198 () (_ BitVec 64))
(declare-fun temp10890_196 () (_ BitVec 64))
(declare-fun temp10890_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10890_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10890_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10890_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10890_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10890_204 () (_ BitVec 64))
(declare-fun temp10890_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10890_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10890_207 () (_ BitVec 64))
(declare-fun temp10890_208 () (_ BitVec 64))
(declare-fun temp10890_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10890_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10890_211 () (_ BitVec 64))
(declare-fun temp10890_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10890_213 () (_ BitVec 64))
(declare-fun temp10890_214 () (_ BitVec 64))
(declare-fun temp10890_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10890_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10890_217 () (_ BitVec 64))
(declare-fun temp10890_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10890_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10890_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp10890_221 () (_ BitVec 64))
(assert (= temp10890_1 #x0000000000000001))
(assert (= var77203 temp10890_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10890_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10890_2)))
(assert (= temp10890_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10890_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10890_4 #x0000000000000000))
(assert (= var210941 temp10890_4))
(assert (= temp10890_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10890_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10890_6 #x0000000000000000))
(assert (= var210986 temp10890_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10890_7 #x0000000000000000))
(assert (= temp10890_8 temp10890_7))
(assert (= temp10890_9 (select ARGNAME_padding_NAMEEND_VAL temp10890_8)))
(assert (= temp10890_10 #x0000000000000001))
(assert (= temp10890_11 temp10890_10))
(assert (= temp10890_12 (select ARGNAME_padding_NAMEEND_VAL temp10890_11)))
(assert (= temp10890_13 #x0000000000000002))
(assert (= temp10890_14 temp10890_13))
(assert (= temp10890_15 (select ARGNAME_padding_NAMEEND_VAL temp10890_14)))
(assert (= temp10890_16 #x0000000000000003))
(assert (= temp10890_17 temp10890_16))
(assert (= temp10890_18 (select ARGNAME_padding_NAMEEND_VAL temp10890_17)))
(assert (= temp10890_19 #x0000000000000004))
(assert (= temp10890_20 temp10890_19))
(assert (= temp10890_21 (select ARGNAME_padding_NAMEEND_VAL temp10890_20)))
(assert (= temp10890_22 #x0000000000000005))
(assert (= temp10890_23 temp10890_22))
(assert (= temp10890_24 (select ARGNAME_padding_NAMEEND_VAL temp10890_23)))
(assert (= temp10890_25 #x0000000000000000))
(assert (= temp10890_26 #x0000000000000000))
(assert (= temp10890_27 temp10890_26))
(assert (= temp10890_28 (select ARGNAME_padding_NAMEEND_VAL temp10890_27)))
(assert (= temp10890_29 #x0000000000000000))
(assert (= temp10890_30 #x0000000000000001))
(assert (= temp10890_31 temp10890_30))
(assert (= temp10890_32 (select ARGNAME_padding_NAMEEND_VAL temp10890_31)))
(assert (= temp10890_33 #x0000000000000000))
(assert (= temp10890_34 #x0000000000000002))
(assert (= temp10890_35 temp10890_34))
(assert (= temp10890_36 (select ARGNAME_padding_NAMEEND_VAL temp10890_35)))
(assert (= temp10890_37 #x0000000000000000))
(assert (= temp10890_38 #x0000000000000003))
(assert (= temp10890_39 temp10890_38))
(assert (= temp10890_40 (select ARGNAME_padding_NAMEEND_VAL temp10890_39)))
(assert (= temp10890_41 #x0000000000000000))
(assert (= temp10890_42 #x0000000000000004))
(assert (= temp10890_43 temp10890_42))
(assert (= temp10890_44 (select ARGNAME_padding_NAMEEND_VAL temp10890_43)))
(assert (= temp10890_45 #x0000000000000000))
(assert (= temp10890_46 #x0000000000000005))
(assert (= temp10890_47 temp10890_46))
(assert (= temp10890_48 (select ARGNAME_padding_NAMEEND_VAL temp10890_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10890_28 temp10890_25)
             (bvslt temp10890_32 temp10890_29)
             (bvslt temp10890_36 temp10890_33)
             (bvslt temp10890_40 temp10890_37)
             (bvslt temp10890_44 temp10890_41)
             (bvslt temp10890_48 temp10890_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10890_49 #x0000000000000000))
(assert (= var1191714 temp10890_49))
(assert (= temp10890_50 #x0000000000000000))
(assert (= temp10890_51 temp10890_50))
(assert (= temp10890_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10890_51)))
(assert (= temp10890_53 #x0000000000000001))
(assert (= temp10890_54 temp10890_53))
(assert (= temp10890_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10890_54)))
(assert (= temp10890_56 #x0000000000000002))
(assert (= temp10890_57 temp10890_56))
(assert (= temp10890_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10890_57)))
(assert (= temp10890_59 #x0000000000000003))
(assert (= temp10890_60 temp10890_59))
(assert (= temp10890_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10890_60)))
(assert (= temp10890_62 #x0000000000000004))
(assert (= temp10890_63 temp10890_62))
(assert (= temp10890_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10890_63)))
(assert (= temp10890_65 #x0000000000000005))
(assert (= temp10890_66 temp10890_65))
(assert (= temp10890_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10890_66)))
(assert (= temp10890_68 #x0000000000000000))
(assert (= temp10890_69 #x0000000000000000))
(assert (= temp10890_70 temp10890_69))
(assert (= temp10890_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10890_70)))
(assert (= temp10890_72 #x0000000000000000))
(assert (= temp10890_73 #x0000000000000001))
(assert (= temp10890_74 temp10890_73))
(assert (= temp10890_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10890_74)))
(assert (= temp10890_76 #x0000000000000000))
(assert (= temp10890_77 #x0000000000000002))
(assert (= temp10890_78 temp10890_77))
(assert (= temp10890_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10890_78)))
(assert (= temp10890_80 #x0000000000000000))
(assert (= temp10890_81 #x0000000000000003))
(assert (= temp10890_82 temp10890_81))
(assert (= temp10890_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10890_82)))
(assert (= temp10890_84 #x0000000000000000))
(assert (= temp10890_85 #x0000000000000004))
(assert (= temp10890_86 temp10890_85))
(assert (= temp10890_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10890_86)))
(assert (= temp10890_88 #x0000000000000000))
(assert (= temp10890_89 #x0000000000000005))
(assert (= temp10890_90 temp10890_89))
(assert (= temp10890_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10890_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10890_71 temp10890_68)
             (bvslt temp10890_75 temp10890_72)
             (bvslt temp10890_79 temp10890_76)
             (bvslt temp10890_83 temp10890_80)
             (bvslt temp10890_87 temp10890_84)
             (bvslt temp10890_91 temp10890_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10890_92 #x0000000000000000))
(assert (= var1191725 temp10890_92))
(assert (= temp10890_93 #x0000000000000000))
(assert (= temp10890_94 temp10890_93))
(assert (= temp10890_95 (select ARGNAME_stride_NAMEEND_VAL temp10890_94)))
(assert (= temp10890_96 #x0000000000000001))
(assert (= temp10890_97 temp10890_96))
(assert (= temp10890_98 (select ARGNAME_stride_NAMEEND_VAL temp10890_97)))
(assert (= temp10890_99 #x0000000000000002))
(assert (= temp10890_100 temp10890_99))
(assert (= temp10890_101 (select ARGNAME_stride_NAMEEND_VAL temp10890_100)))
(assert (= temp10890_102 #x0000000000000003))
(assert (= temp10890_103 temp10890_102))
(assert (= temp10890_104 (select ARGNAME_stride_NAMEEND_VAL temp10890_103)))
(assert (= temp10890_105 #x0000000000000004))
(assert (= temp10890_106 temp10890_105))
(assert (= temp10890_107 (select ARGNAME_stride_NAMEEND_VAL temp10890_106)))
(assert (= temp10890_108 #x0000000000000005))
(assert (= temp10890_109 temp10890_108))
(assert (= temp10890_110 (select ARGNAME_stride_NAMEEND_VAL temp10890_109)))
(assert (= temp10890_111 #x0000000000000000))
(assert (= temp10890_112 #x0000000000000000))
(assert (= temp10890_113 temp10890_112))
(assert (= temp10890_114 (select ARGNAME_stride_NAMEEND_VAL temp10890_113)))
(assert (= temp10890_115 #x0000000000000000))
(assert (= temp10890_116 #x0000000000000001))
(assert (= temp10890_117 temp10890_116))
(assert (= temp10890_118 (select ARGNAME_stride_NAMEEND_VAL temp10890_117)))
(assert (= temp10890_119 #x0000000000000000))
(assert (= temp10890_120 #x0000000000000002))
(assert (= temp10890_121 temp10890_120))
(assert (= temp10890_122 (select ARGNAME_stride_NAMEEND_VAL temp10890_121)))
(assert (= temp10890_123 #x0000000000000000))
(assert (= temp10890_124 #x0000000000000003))
(assert (= temp10890_125 temp10890_124))
(assert (= temp10890_126 (select ARGNAME_stride_NAMEEND_VAL temp10890_125)))
(assert (= temp10890_127 #x0000000000000000))
(assert (= temp10890_128 #x0000000000000004))
(assert (= temp10890_129 temp10890_128))
(assert (= temp10890_130 (select ARGNAME_stride_NAMEEND_VAL temp10890_129)))
(assert (= temp10890_131 #x0000000000000000))
(assert (= temp10890_132 #x0000000000000005))
(assert (= temp10890_133 temp10890_132))
(assert (= temp10890_134 (select ARGNAME_stride_NAMEEND_VAL temp10890_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10890_114 temp10890_111)
             (bvsle temp10890_118 temp10890_115)
             (bvsle temp10890_122 temp10890_119)
             (bvsle temp10890_126 temp10890_123)
             (bvsle temp10890_130 temp10890_127)
             (bvsle temp10890_134 temp10890_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10890_135 #x0000000000000000))
(assert (= var1191735 temp10890_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10890_136 #x0000000000000001))
(assert (= var1191747 temp10890_136))
(assert (= temp10890_137 #x0000000000000000))
(assert (= var1179826 temp10890_137))
(assert (= temp10890_138 #x0000000000000000))
(assert (= temp10890_139 temp10890_138))
(assert (= temp10890_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10890_139)))
(assert (= temp10890_141 #x0000000000000001))
(assert (= temp10890_142 temp10890_141))
(assert (= temp10890_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10890_142)))
(assert (= temp10890_144 #x0000000000000002))
(assert (= temp10890_145 temp10890_144))
(assert (= temp10890_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10890_145)))
(assert (= temp10890_147 #x0000000000000003))
(assert (= temp10890_148 temp10890_147))
(assert (= temp10890_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10890_148)))
(assert (= temp10890_150 #x0000000000000004))
(assert (= temp10890_151 temp10890_150))
(assert (= temp10890_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10890_151)))
(assert (= temp10890_153 #x0000000000000005))
(assert (= temp10890_154 temp10890_153))
(assert (= temp10890_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10890_154)))
(assert (= temp10890_157 var1179826))
(assert (= temp10890_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10890_157)))
(assert (= temp10890_156 temp10890_158))
(assert (= var1191780
   (ite (bvslt temp10890_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10890_159 #x0000000000000000))
(assert (= var1191780 temp10890_159))
(assert (= temp10890_160 #x0000000000000000))
(assert (= var1179826 temp10890_160))
(assert (= temp10890_162 var1179826))
(assert (= temp10890_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10890_162)))
(assert (= temp10890_161 temp10890_163))
(assert (= var1191802 (bvsmod temp10890_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10890_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10890_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10890_165 #x0000000000000001))
(assert (= var1191803 temp10890_165))
(assert (= temp10890_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10890_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10890_167 #x0000000000000001))
(assert (= var1191823 temp10890_167))
(assert (= temp10890_168 #x0000000000000001))
(assert (= var1180714 temp10890_168))
(assert (= temp10890_169 #x0000000000000000))
(assert (= temp10890_170 temp10890_169))
(assert (= temp10890_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10890_170)))
(assert (= temp10890_172 #x0000000000000001))
(assert (= temp10890_173 temp10890_172))
(assert (= temp10890_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10890_173)))
(assert (= temp10890_175 #x0000000000000002))
(assert (= temp10890_176 temp10890_175))
(assert (= temp10890_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10890_176)))
(assert (= temp10890_178 #x0000000000000003))
(assert (= temp10890_179 temp10890_178))
(assert (= temp10890_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10890_179)))
(assert (= temp10890_181 #x0000000000000004))
(assert (= temp10890_182 temp10890_181))
(assert (= temp10890_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10890_182)))
(assert (= temp10890_184 #x0000000000000005))
(assert (= temp10890_185 temp10890_184))
(assert (= temp10890_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10890_185)))
(assert (= temp10890_187 #x0000000000000000))
(assert (= temp10890_188
   (ite (bvslt var1180714 temp10890_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10890_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10890_188)))
(assert (= var1191831 temp10890_189))
(assert (bvslt (ite (bvslt var1180714 temp10890_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10890_190 #x0000000000000001))
(assert (= var1180714 temp10890_190))
(assert (= temp10890_192 var1180714))
(assert (= temp10890_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10890_192)))
(assert (= temp10890_191 temp10890_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10890_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10890_194 #x0000000000000001))
(assert (= var1191836 temp10890_194))
(assert (= temp10890_195 #x0000000000000000))
(assert (= var1179826 temp10890_195))
(assert (= temp10890_197 var1179826))
(assert (= temp10890_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10890_197)))
(assert (= temp10890_196 temp10890_198))
(assert (= temp10890_199 #x0000000000000002))
(assert (= var1586025 temp10890_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10890_200 #x0000000000000001))
(assert (= var1191993 temp10890_200))
(assert (= temp10890_201 #x0000000000000001))
(assert (= var2700303 temp10890_201))
(assert (= temp10890_202 #x0000000000000001))
(assert (= var2962447 temp10890_202))
(assert (= temp10890_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10890_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10890_204 #x0000000000000001))
(assert (= var211058 temp10890_204))
(assert (= temp10890_205 #x0000000000000001))
(assert (= var211188 temp10890_205))
(assert (= var3879401 var211188))
(assert (= temp10890_206 #x0000000000000000))
(assert (= var3866802 temp10890_206))
(assert (= temp10890_207 #x0000000000000000))
(assert (= temp10890_208
   (ite (bvslt var3866802 temp10890_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10890_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10890_208)))
(assert (= var3879420 temp10890_209))
(assert (bvslt (ite (bvslt var3866802 temp10890_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10890_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10890_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10890_211 #x0000000000000000))
(assert (= var3879421 temp10890_211))
(assert (= temp10890_212 #x0000000000000001))
(assert (= var3867690 temp10890_212))
(assert (= temp10890_213 #x0000000000000000))
(assert (= temp10890_214
   (ite (bvslt var3867690 temp10890_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10890_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10890_214)))
(assert (= var3879423 temp10890_215))
(assert (bvslt (ite (bvslt var3867690 temp10890_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10890_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10890_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10890_217 #x0000000000000001))
(assert (= var3879424 temp10890_217))
(assert (= temp10890_218 #x0000000000000000))
(assert (= var4133117 temp10890_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10890_219 #x0000000000000002))
(assert (= var4339331 temp10890_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10890_220 #x0000000000000000))
(assert (= var4404892 temp10890_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp10890_221 #x0000000000000001))
(assert (= var211058 temp10890_221))
(model-add temp10890_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10890_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10890_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10890_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




