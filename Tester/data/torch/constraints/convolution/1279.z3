(declare-fun temp10436_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10436_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10436_3 () (_ BitVec 64))
(declare-fun temp10436_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10436_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10436_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10436_7 () (_ BitVec 64))
(declare-fun temp10436_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10436_9 () (_ BitVec 64))
(declare-fun temp10436_10 () (_ BitVec 64))
(declare-fun temp10436_11 () (_ BitVec 64))
(declare-fun temp10436_12 () (_ BitVec 64))
(declare-fun temp10436_13 () (_ BitVec 64))
(declare-fun temp10436_14 () (_ BitVec 64))
(declare-fun temp10436_15 () (_ BitVec 64))
(declare-fun temp10436_16 () (_ BitVec 64))
(declare-fun temp10436_17 () (_ BitVec 64))
(declare-fun temp10436_18 () (_ BitVec 64))
(declare-fun temp10436_19 () (_ BitVec 64))
(declare-fun temp10436_20 () (_ BitVec 64))
(declare-fun temp10436_21 () (_ BitVec 64))
(declare-fun temp10436_22 () (_ BitVec 64))
(declare-fun temp10436_23 () (_ BitVec 64))
(declare-fun temp10436_24 () (_ BitVec 64))
(declare-fun temp10436_25 () (_ BitVec 64))
(declare-fun temp10436_26 () (_ BitVec 64))
(declare-fun temp10436_27 () (_ BitVec 64))
(declare-fun temp10436_28 () (_ BitVec 64))
(declare-fun temp10436_29 () (_ BitVec 64))
(declare-fun temp10436_30 () (_ BitVec 64))
(declare-fun temp10436_31 () (_ BitVec 64))
(declare-fun temp10436_32 () (_ BitVec 64))
(declare-fun temp10436_33 () (_ BitVec 64))
(declare-fun temp10436_34 () (_ BitVec 64))
(declare-fun temp10436_35 () (_ BitVec 64))
(declare-fun temp10436_36 () (_ BitVec 64))
(declare-fun temp10436_37 () (_ BitVec 64))
(declare-fun temp10436_38 () (_ BitVec 64))
(declare-fun temp10436_39 () (_ BitVec 64))
(declare-fun temp10436_40 () (_ BitVec 64))
(declare-fun temp10436_41 () (_ BitVec 64))
(declare-fun temp10436_42 () (_ BitVec 64))
(declare-fun temp10436_43 () (_ BitVec 64))
(declare-fun temp10436_44 () (_ BitVec 64))
(declare-fun temp10436_45 () (_ BitVec 64))
(declare-fun temp10436_46 () (_ BitVec 64))
(declare-fun temp10436_47 () (_ BitVec 64))
(declare-fun temp10436_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10436_49 () (_ BitVec 64))
(declare-fun temp10436_50 () (_ BitVec 64))
(declare-fun temp10436_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10436_52 () (_ BitVec 64))
(declare-fun temp10436_53 () (_ BitVec 64))
(declare-fun temp10436_54 () (_ BitVec 64))
(declare-fun temp10436_55 () (_ BitVec 64))
(declare-fun temp10436_56 () (_ BitVec 64))
(declare-fun temp10436_57 () (_ BitVec 64))
(declare-fun temp10436_58 () (_ BitVec 64))
(declare-fun temp10436_59 () (_ BitVec 64))
(declare-fun temp10436_60 () (_ BitVec 64))
(declare-fun temp10436_61 () (_ BitVec 64))
(declare-fun temp10436_62 () (_ BitVec 64))
(declare-fun temp10436_63 () (_ BitVec 64))
(declare-fun temp10436_64 () (_ BitVec 64))
(declare-fun temp10436_65 () (_ BitVec 64))
(declare-fun temp10436_66 () (_ BitVec 64))
(declare-fun temp10436_67 () (_ BitVec 64))
(declare-fun temp10436_68 () (_ BitVec 64))
(declare-fun temp10436_69 () (_ BitVec 64))
(declare-fun temp10436_70 () (_ BitVec 64))
(declare-fun temp10436_71 () (_ BitVec 64))
(declare-fun temp10436_72 () (_ BitVec 64))
(declare-fun temp10436_73 () (_ BitVec 64))
(declare-fun temp10436_74 () (_ BitVec 64))
(declare-fun temp10436_75 () (_ BitVec 64))
(declare-fun temp10436_76 () (_ BitVec 64))
(declare-fun temp10436_77 () (_ BitVec 64))
(declare-fun temp10436_78 () (_ BitVec 64))
(declare-fun temp10436_79 () (_ BitVec 64))
(declare-fun temp10436_80 () (_ BitVec 64))
(declare-fun temp10436_81 () (_ BitVec 64))
(declare-fun temp10436_82 () (_ BitVec 64))
(declare-fun temp10436_83 () (_ BitVec 64))
(declare-fun temp10436_84 () (_ BitVec 64))
(declare-fun temp10436_85 () (_ BitVec 64))
(declare-fun temp10436_86 () (_ BitVec 64))
(declare-fun temp10436_87 () (_ BitVec 64))
(declare-fun temp10436_88 () (_ BitVec 64))
(declare-fun temp10436_89 () (_ BitVec 64))
(declare-fun temp10436_90 () (_ BitVec 64))
(declare-fun temp10436_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10436_92 () (_ BitVec 64))
(declare-fun temp10436_93 () (_ BitVec 64))
(declare-fun temp10436_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10436_95 () (_ BitVec 64))
(declare-fun temp10436_96 () (_ BitVec 64))
(declare-fun temp10436_97 () (_ BitVec 64))
(declare-fun temp10436_98 () (_ BitVec 64))
(declare-fun temp10436_99 () (_ BitVec 64))
(declare-fun temp10436_100 () (_ BitVec 64))
(declare-fun temp10436_101 () (_ BitVec 64))
(declare-fun temp10436_102 () (_ BitVec 64))
(declare-fun temp10436_103 () (_ BitVec 64))
(declare-fun temp10436_104 () (_ BitVec 64))
(declare-fun temp10436_105 () (_ BitVec 64))
(declare-fun temp10436_106 () (_ BitVec 64))
(declare-fun temp10436_107 () (_ BitVec 64))
(declare-fun temp10436_108 () (_ BitVec 64))
(declare-fun temp10436_109 () (_ BitVec 64))
(declare-fun temp10436_110 () (_ BitVec 64))
(declare-fun temp10436_111 () (_ BitVec 64))
(declare-fun temp10436_112 () (_ BitVec 64))
(declare-fun temp10436_113 () (_ BitVec 64))
(declare-fun temp10436_114 () (_ BitVec 64))
(declare-fun temp10436_115 () (_ BitVec 64))
(declare-fun temp10436_116 () (_ BitVec 64))
(declare-fun temp10436_117 () (_ BitVec 64))
(declare-fun temp10436_118 () (_ BitVec 64))
(declare-fun temp10436_119 () (_ BitVec 64))
(declare-fun temp10436_120 () (_ BitVec 64))
(declare-fun temp10436_121 () (_ BitVec 64))
(declare-fun temp10436_122 () (_ BitVec 64))
(declare-fun temp10436_123 () (_ BitVec 64))
(declare-fun temp10436_124 () (_ BitVec 64))
(declare-fun temp10436_125 () (_ BitVec 64))
(declare-fun temp10436_126 () (_ BitVec 64))
(declare-fun temp10436_127 () (_ BitVec 64))
(declare-fun temp10436_128 () (_ BitVec 64))
(declare-fun temp10436_129 () (_ BitVec 64))
(declare-fun temp10436_130 () (_ BitVec 64))
(declare-fun temp10436_131 () (_ BitVec 64))
(declare-fun temp10436_132 () (_ BitVec 64))
(declare-fun temp10436_133 () (_ BitVec 64))
(declare-fun temp10436_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10436_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10436_136 () (_ BitVec 64))
(declare-fun temp10436_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10436_138 () (_ BitVec 64))
(declare-fun temp10436_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10436_140 () (_ BitVec 64))
(declare-fun temp10436_141 () (_ BitVec 64))
(declare-fun temp10436_142 () (_ BitVec 64))
(declare-fun temp10436_143 () (_ BitVec 64))
(declare-fun temp10436_144 () (_ BitVec 64))
(declare-fun temp10436_145 () (_ BitVec 64))
(declare-fun temp10436_146 () (_ BitVec 64))
(declare-fun temp10436_147 () (_ BitVec 64))
(declare-fun temp10436_148 () (_ BitVec 64))
(declare-fun temp10436_149 () (_ BitVec 64))
(declare-fun temp10436_150 () (_ BitVec 64))
(declare-fun temp10436_151 () (_ BitVec 64))
(declare-fun temp10436_152 () (_ BitVec 64))
(declare-fun temp10436_153 () (_ BitVec 64))
(declare-fun temp10436_154 () (_ BitVec 64))
(declare-fun temp10436_155 () (_ BitVec 64))
(declare-fun temp10436_157 () (_ BitVec 64))
(declare-fun temp10436_158 () (_ BitVec 64))
(declare-fun temp10436_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10436_159 () (_ BitVec 64))
(declare-fun temp10436_160 () (_ BitVec 64))
(declare-fun temp10436_162 () (_ BitVec 64))
(declare-fun temp10436_163 () (_ BitVec 64))
(declare-fun temp10436_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10436_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10436_165 () (_ BitVec 64))
(declare-fun temp10436_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10436_167 () (_ BitVec 64))
(declare-fun temp10436_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10436_169 () (_ BitVec 64))
(declare-fun temp10436_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10436_171 () (_ BitVec 64))
(declare-fun temp10436_172 () (_ BitVec 64))
(declare-fun temp10436_173 () (_ BitVec 64))
(declare-fun temp10436_174 () (_ BitVec 64))
(declare-fun temp10436_175 () (_ BitVec 64))
(declare-fun temp10436_176 () (_ BitVec 64))
(declare-fun temp10436_177 () (_ BitVec 64))
(declare-fun temp10436_178 () (_ BitVec 64))
(declare-fun temp10436_179 () (_ BitVec 64))
(declare-fun temp10436_180 () (_ BitVec 64))
(declare-fun temp10436_181 () (_ BitVec 64))
(declare-fun temp10436_182 () (_ BitVec 64))
(declare-fun temp10436_183 () (_ BitVec 64))
(declare-fun temp10436_184 () (_ BitVec 64))
(declare-fun temp10436_185 () (_ BitVec 64))
(declare-fun temp10436_186 () (_ BitVec 64))
(declare-fun temp10436_187 () (_ BitVec 64))
(declare-fun temp10436_188 () (_ BitVec 64))
(declare-fun temp10436_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10436_190 () (_ BitVec 64))
(declare-fun temp10436_192 () (_ BitVec 64))
(declare-fun temp10436_193 () (_ BitVec 64))
(declare-fun temp10436_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10436_194 () (_ BitVec 64))
(declare-fun temp10436_195 () (_ BitVec 64))
(declare-fun temp10436_197 () (_ BitVec 64))
(declare-fun temp10436_198 () (_ BitVec 64))
(declare-fun temp10436_196 () (_ BitVec 64))
(declare-fun temp10436_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10436_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10436_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10436_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10436_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10436_204 () (_ BitVec 64))
(declare-fun temp10436_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10436_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10436_207 () (_ BitVec 64))
(declare-fun temp10436_208 () (_ BitVec 64))
(declare-fun temp10436_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10436_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10436_211 () (_ BitVec 64))
(declare-fun temp10436_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10436_213 () (_ BitVec 64))
(declare-fun temp10436_214 () (_ BitVec 64))
(declare-fun temp10436_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10436_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10436_217 () (_ BitVec 64))
(declare-fun temp10436_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10436_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10436_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4469136 () (_ BitVec 64))
(declare-fun var4731280 () (_ BitVec 64))
(declare-fun temp10436_221 () (_ BitVec 64))
(declare-fun var212414 () (_ BitVec 64))
(declare-fun temp10436_222 () (_ BitVec 64))
(declare-fun temp10436_223 () (_ BitVec 64))
(declare-fun var5060227 () (_ BitVec 64))
(declare-fun var5060229 () (_ BitVec 64))
(declare-fun var5125772 () (_ BitVec 64))
(declare-fun var5125773 () (_ BitVec 64))
(declare-fun temp10436_224 () (_ BitVec 64))
(declare-fun temp10436_225 () (_ BitVec 64))
(declare-fun var6173460 () (_ BitVec 64))
(declare-fun var6173427 () (_ BitVec 64))
(declare-fun var6041991 () (_ BitVec 64))
(declare-fun var6041987 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp10436_226 () (_ BitVec 64))
(assert (= temp10436_1 #x0000000000000001))
(assert (= var77203 temp10436_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10436_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10436_2)))
(assert (= temp10436_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10436_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10436_4 #x0000000000000000))
(assert (= var210941 temp10436_4))
(assert (= temp10436_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10436_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10436_6 #x0000000000000000))
(assert (= var210986 temp10436_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10436_7 #x0000000000000000))
(assert (= temp10436_8 temp10436_7))
(assert (= temp10436_9 (select ARGNAME_padding_NAMEEND_VAL temp10436_8)))
(assert (= temp10436_10 #x0000000000000001))
(assert (= temp10436_11 temp10436_10))
(assert (= temp10436_12 (select ARGNAME_padding_NAMEEND_VAL temp10436_11)))
(assert (= temp10436_13 #x0000000000000002))
(assert (= temp10436_14 temp10436_13))
(assert (= temp10436_15 (select ARGNAME_padding_NAMEEND_VAL temp10436_14)))
(assert (= temp10436_16 #x0000000000000003))
(assert (= temp10436_17 temp10436_16))
(assert (= temp10436_18 (select ARGNAME_padding_NAMEEND_VAL temp10436_17)))
(assert (= temp10436_19 #x0000000000000004))
(assert (= temp10436_20 temp10436_19))
(assert (= temp10436_21 (select ARGNAME_padding_NAMEEND_VAL temp10436_20)))
(assert (= temp10436_22 #x0000000000000005))
(assert (= temp10436_23 temp10436_22))
(assert (= temp10436_24 (select ARGNAME_padding_NAMEEND_VAL temp10436_23)))
(assert (= temp10436_25 #x0000000000000000))
(assert (= temp10436_26 #x0000000000000000))
(assert (= temp10436_27 temp10436_26))
(assert (= temp10436_28 (select ARGNAME_padding_NAMEEND_VAL temp10436_27)))
(assert (= temp10436_29 #x0000000000000000))
(assert (= temp10436_30 #x0000000000000001))
(assert (= temp10436_31 temp10436_30))
(assert (= temp10436_32 (select ARGNAME_padding_NAMEEND_VAL temp10436_31)))
(assert (= temp10436_33 #x0000000000000000))
(assert (= temp10436_34 #x0000000000000002))
(assert (= temp10436_35 temp10436_34))
(assert (= temp10436_36 (select ARGNAME_padding_NAMEEND_VAL temp10436_35)))
(assert (= temp10436_37 #x0000000000000000))
(assert (= temp10436_38 #x0000000000000003))
(assert (= temp10436_39 temp10436_38))
(assert (= temp10436_40 (select ARGNAME_padding_NAMEEND_VAL temp10436_39)))
(assert (= temp10436_41 #x0000000000000000))
(assert (= temp10436_42 #x0000000000000004))
(assert (= temp10436_43 temp10436_42))
(assert (= temp10436_44 (select ARGNAME_padding_NAMEEND_VAL temp10436_43)))
(assert (= temp10436_45 #x0000000000000000))
(assert (= temp10436_46 #x0000000000000005))
(assert (= temp10436_47 temp10436_46))
(assert (= temp10436_48 (select ARGNAME_padding_NAMEEND_VAL temp10436_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10436_28 temp10436_25)
             (bvslt temp10436_32 temp10436_29)
             (bvslt temp10436_36 temp10436_33)
             (bvslt temp10436_40 temp10436_37)
             (bvslt temp10436_44 temp10436_41)
             (bvslt temp10436_48 temp10436_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10436_49 #x0000000000000000))
(assert (= var1191714 temp10436_49))
(assert (= temp10436_50 #x0000000000000000))
(assert (= temp10436_51 temp10436_50))
(assert (= temp10436_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10436_51)))
(assert (= temp10436_53 #x0000000000000001))
(assert (= temp10436_54 temp10436_53))
(assert (= temp10436_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10436_54)))
(assert (= temp10436_56 #x0000000000000002))
(assert (= temp10436_57 temp10436_56))
(assert (= temp10436_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10436_57)))
(assert (= temp10436_59 #x0000000000000003))
(assert (= temp10436_60 temp10436_59))
(assert (= temp10436_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10436_60)))
(assert (= temp10436_62 #x0000000000000004))
(assert (= temp10436_63 temp10436_62))
(assert (= temp10436_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10436_63)))
(assert (= temp10436_65 #x0000000000000005))
(assert (= temp10436_66 temp10436_65))
(assert (= temp10436_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10436_66)))
(assert (= temp10436_68 #x0000000000000000))
(assert (= temp10436_69 #x0000000000000000))
(assert (= temp10436_70 temp10436_69))
(assert (= temp10436_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10436_70)))
(assert (= temp10436_72 #x0000000000000000))
(assert (= temp10436_73 #x0000000000000001))
(assert (= temp10436_74 temp10436_73))
(assert (= temp10436_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10436_74)))
(assert (= temp10436_76 #x0000000000000000))
(assert (= temp10436_77 #x0000000000000002))
(assert (= temp10436_78 temp10436_77))
(assert (= temp10436_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10436_78)))
(assert (= temp10436_80 #x0000000000000000))
(assert (= temp10436_81 #x0000000000000003))
(assert (= temp10436_82 temp10436_81))
(assert (= temp10436_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10436_82)))
(assert (= temp10436_84 #x0000000000000000))
(assert (= temp10436_85 #x0000000000000004))
(assert (= temp10436_86 temp10436_85))
(assert (= temp10436_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10436_86)))
(assert (= temp10436_88 #x0000000000000000))
(assert (= temp10436_89 #x0000000000000005))
(assert (= temp10436_90 temp10436_89))
(assert (= temp10436_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10436_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10436_71 temp10436_68)
             (bvslt temp10436_75 temp10436_72)
             (bvslt temp10436_79 temp10436_76)
             (bvslt temp10436_83 temp10436_80)
             (bvslt temp10436_87 temp10436_84)
             (bvslt temp10436_91 temp10436_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10436_92 #x0000000000000000))
(assert (= var1191725 temp10436_92))
(assert (= temp10436_93 #x0000000000000000))
(assert (= temp10436_94 temp10436_93))
(assert (= temp10436_95 (select ARGNAME_stride_NAMEEND_VAL temp10436_94)))
(assert (= temp10436_96 #x0000000000000001))
(assert (= temp10436_97 temp10436_96))
(assert (= temp10436_98 (select ARGNAME_stride_NAMEEND_VAL temp10436_97)))
(assert (= temp10436_99 #x0000000000000002))
(assert (= temp10436_100 temp10436_99))
(assert (= temp10436_101 (select ARGNAME_stride_NAMEEND_VAL temp10436_100)))
(assert (= temp10436_102 #x0000000000000003))
(assert (= temp10436_103 temp10436_102))
(assert (= temp10436_104 (select ARGNAME_stride_NAMEEND_VAL temp10436_103)))
(assert (= temp10436_105 #x0000000000000004))
(assert (= temp10436_106 temp10436_105))
(assert (= temp10436_107 (select ARGNAME_stride_NAMEEND_VAL temp10436_106)))
(assert (= temp10436_108 #x0000000000000005))
(assert (= temp10436_109 temp10436_108))
(assert (= temp10436_110 (select ARGNAME_stride_NAMEEND_VAL temp10436_109)))
(assert (= temp10436_111 #x0000000000000000))
(assert (= temp10436_112 #x0000000000000000))
(assert (= temp10436_113 temp10436_112))
(assert (= temp10436_114 (select ARGNAME_stride_NAMEEND_VAL temp10436_113)))
(assert (= temp10436_115 #x0000000000000000))
(assert (= temp10436_116 #x0000000000000001))
(assert (= temp10436_117 temp10436_116))
(assert (= temp10436_118 (select ARGNAME_stride_NAMEEND_VAL temp10436_117)))
(assert (= temp10436_119 #x0000000000000000))
(assert (= temp10436_120 #x0000000000000002))
(assert (= temp10436_121 temp10436_120))
(assert (= temp10436_122 (select ARGNAME_stride_NAMEEND_VAL temp10436_121)))
(assert (= temp10436_123 #x0000000000000000))
(assert (= temp10436_124 #x0000000000000003))
(assert (= temp10436_125 temp10436_124))
(assert (= temp10436_126 (select ARGNAME_stride_NAMEEND_VAL temp10436_125)))
(assert (= temp10436_127 #x0000000000000000))
(assert (= temp10436_128 #x0000000000000004))
(assert (= temp10436_129 temp10436_128))
(assert (= temp10436_130 (select ARGNAME_stride_NAMEEND_VAL temp10436_129)))
(assert (= temp10436_131 #x0000000000000000))
(assert (= temp10436_132 #x0000000000000005))
(assert (= temp10436_133 temp10436_132))
(assert (= temp10436_134 (select ARGNAME_stride_NAMEEND_VAL temp10436_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10436_114 temp10436_111)
             (bvsle temp10436_118 temp10436_115)
             (bvsle temp10436_122 temp10436_119)
             (bvsle temp10436_126 temp10436_123)
             (bvsle temp10436_130 temp10436_127)
             (bvsle temp10436_134 temp10436_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10436_135 #x0000000000000000))
(assert (= var1191735 temp10436_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10436_136 #x0000000000000001))
(assert (= var1191747 temp10436_136))
(assert (= temp10436_137 #x0000000000000000))
(assert (= var1179826 temp10436_137))
(assert (= temp10436_138 #x0000000000000000))
(assert (= temp10436_139 temp10436_138))
(assert (= temp10436_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10436_139)))
(assert (= temp10436_141 #x0000000000000001))
(assert (= temp10436_142 temp10436_141))
(assert (= temp10436_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10436_142)))
(assert (= temp10436_144 #x0000000000000002))
(assert (= temp10436_145 temp10436_144))
(assert (= temp10436_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10436_145)))
(assert (= temp10436_147 #x0000000000000003))
(assert (= temp10436_148 temp10436_147))
(assert (= temp10436_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10436_148)))
(assert (= temp10436_150 #x0000000000000004))
(assert (= temp10436_151 temp10436_150))
(assert (= temp10436_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10436_151)))
(assert (= temp10436_153 #x0000000000000005))
(assert (= temp10436_154 temp10436_153))
(assert (= temp10436_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10436_154)))
(assert (= temp10436_157 var1179826))
(assert (= temp10436_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10436_157)))
(assert (= temp10436_156 temp10436_158))
(assert (= var1191780
   (ite (bvslt temp10436_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10436_159 #x0000000000000000))
(assert (= var1191780 temp10436_159))
(assert (= temp10436_160 #x0000000000000000))
(assert (= var1179826 temp10436_160))
(assert (= temp10436_162 var1179826))
(assert (= temp10436_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10436_162)))
(assert (= temp10436_161 temp10436_163))
(assert (= var1191802 (bvsmod temp10436_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10436_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10436_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10436_165 #x0000000000000001))
(assert (= var1191803 temp10436_165))
(assert (= temp10436_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10436_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10436_167 #x0000000000000001))
(assert (= var1191823 temp10436_167))
(assert (= temp10436_168 #x0000000000000001))
(assert (= var1180714 temp10436_168))
(assert (= temp10436_169 #x0000000000000000))
(assert (= temp10436_170 temp10436_169))
(assert (= temp10436_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10436_170)))
(assert (= temp10436_172 #x0000000000000001))
(assert (= temp10436_173 temp10436_172))
(assert (= temp10436_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10436_173)))
(assert (= temp10436_175 #x0000000000000002))
(assert (= temp10436_176 temp10436_175))
(assert (= temp10436_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10436_176)))
(assert (= temp10436_178 #x0000000000000003))
(assert (= temp10436_179 temp10436_178))
(assert (= temp10436_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10436_179)))
(assert (= temp10436_181 #x0000000000000004))
(assert (= temp10436_182 temp10436_181))
(assert (= temp10436_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10436_182)))
(assert (= temp10436_184 #x0000000000000005))
(assert (= temp10436_185 temp10436_184))
(assert (= temp10436_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10436_185)))
(assert (= temp10436_187 #x0000000000000000))
(assert (= temp10436_188
   (ite (bvslt var1180714 temp10436_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10436_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10436_188)))
(assert (= var1191831 temp10436_189))
(assert (bvslt (ite (bvslt var1180714 temp10436_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10436_190 #x0000000000000001))
(assert (= var1180714 temp10436_190))
(assert (= temp10436_192 var1180714))
(assert (= temp10436_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10436_192)))
(assert (= temp10436_191 temp10436_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10436_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10436_194 #x0000000000000001))
(assert (= var1191836 temp10436_194))
(assert (= temp10436_195 #x0000000000000000))
(assert (= var1179826 temp10436_195))
(assert (= temp10436_197 var1179826))
(assert (= temp10436_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10436_197)))
(assert (= temp10436_196 temp10436_198))
(assert (= temp10436_199 #x0000000000000002))
(assert (= var1586025 temp10436_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10436_200 #x0000000000000001))
(assert (= var1191993 temp10436_200))
(assert (= temp10436_201 #x0000000000000001))
(assert (= var2700303 temp10436_201))
(assert (= temp10436_202 #x0000000000000001))
(assert (= var2962447 temp10436_202))
(assert (= temp10436_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10436_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10436_204 #x0000000000000001))
(assert (= var211058 temp10436_204))
(assert (= temp10436_205 #x0000000000000001))
(assert (= var211188 temp10436_205))
(assert (= var3879401 var211188))
(assert (= temp10436_206 #x0000000000000000))
(assert (= var3866802 temp10436_206))
(assert (= temp10436_207 #x0000000000000000))
(assert (= temp10436_208
   (ite (bvslt var3866802 temp10436_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10436_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10436_208)))
(assert (= var3879420 temp10436_209))
(assert (bvslt (ite (bvslt var3866802 temp10436_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10436_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10436_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10436_211 #x0000000000000000))
(assert (= var3879421 temp10436_211))
(assert (= temp10436_212 #x0000000000000001))
(assert (= var3867690 temp10436_212))
(assert (= temp10436_213 #x0000000000000000))
(assert (= temp10436_214
   (ite (bvslt var3867690 temp10436_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10436_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10436_214)))
(assert (= var3879423 temp10436_215))
(assert (bvslt (ite (bvslt var3867690 temp10436_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10436_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10436_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10436_217 #x0000000000000001))
(assert (= var3879424 temp10436_217))
(assert (= temp10436_218 #x0000000000000000))
(assert (= var4079423 temp10436_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10436_219 #x0000000000000002))
(assert (= var4208259 temp10436_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10436_220 #x0000000000000000))
(assert (= var4273820 temp10436_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4469136 var211201))
(assert (= var4731280 var211201))
(assert (= temp10436_221 #x0000000000000001))
(assert (= var212414
   (ite (= ARGNAME_groups_NAMEEND temp10436_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10436_222 #x0000000000000001))
(assert (= var212414 temp10436_222))
(assert (= temp10436_223 #x0000000000000002))
(assert (= var5060227 temp10436_223))
(assert (= var5060229 (bvsub ARGNAME_weight_NAMEEND_DIM var5060227)))
(assert (= var5125772 var5060227))
(assert (= var5125773 var5060229))
(assert (= temp10436_224 #x0000000000000001))
(assert (= var211058 temp10436_224))
(assert (= temp10436_225 #x0000000000000000))
(assert (= var6173460 temp10436_225))
(assert (= var6173427 var6173460))
(assert (= var6041991 var6173427))
(assert (= var6041987 var6041991))
(assert (= var212669 var6041987))
(assert (= temp10436_226 #x0000000000000000))
(assert (= var212669 temp10436_226))
(model-add temp10436_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10436_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10436_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10436_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




