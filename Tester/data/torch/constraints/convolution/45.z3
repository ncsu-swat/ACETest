(declare-fun temp60_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp60_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp60_3 () (_ BitVec 64))
(declare-fun temp60_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp60_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp60_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp60_7 () (_ BitVec 64))
(declare-fun temp60_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp60_9 () (_ BitVec 64))
(declare-fun temp60_10 () (_ BitVec 64))
(declare-fun temp60_11 () (_ BitVec 64))
(declare-fun temp60_12 () (_ BitVec 64))
(declare-fun temp60_13 () (_ BitVec 64))
(declare-fun temp60_14 () (_ BitVec 64))
(declare-fun temp60_15 () (_ BitVec 64))
(declare-fun temp60_16 () (_ BitVec 64))
(declare-fun temp60_17 () (_ BitVec 64))
(declare-fun temp60_18 () (_ BitVec 64))
(declare-fun temp60_19 () (_ BitVec 64))
(declare-fun temp60_20 () (_ BitVec 64))
(declare-fun temp60_21 () (_ BitVec 64))
(declare-fun temp60_22 () (_ BitVec 64))
(declare-fun temp60_23 () (_ BitVec 64))
(declare-fun temp60_24 () (_ BitVec 64))
(declare-fun temp60_25 () (_ BitVec 64))
(declare-fun temp60_26 () (_ BitVec 64))
(declare-fun temp60_27 () (_ BitVec 64))
(declare-fun temp60_28 () (_ BitVec 64))
(declare-fun temp60_29 () (_ BitVec 64))
(declare-fun temp60_30 () (_ BitVec 64))
(declare-fun temp60_31 () (_ BitVec 64))
(declare-fun temp60_32 () (_ BitVec 64))
(declare-fun temp60_33 () (_ BitVec 64))
(declare-fun temp60_34 () (_ BitVec 64))
(declare-fun temp60_35 () (_ BitVec 64))
(declare-fun temp60_36 () (_ BitVec 64))
(declare-fun temp60_37 () (_ BitVec 64))
(declare-fun temp60_38 () (_ BitVec 64))
(declare-fun temp60_39 () (_ BitVec 64))
(declare-fun temp60_40 () (_ BitVec 64))
(declare-fun temp60_41 () (_ BitVec 64))
(declare-fun temp60_42 () (_ BitVec 64))
(declare-fun temp60_43 () (_ BitVec 64))
(declare-fun temp60_44 () (_ BitVec 64))
(declare-fun temp60_45 () (_ BitVec 64))
(declare-fun temp60_46 () (_ BitVec 64))
(declare-fun temp60_47 () (_ BitVec 64))
(declare-fun temp60_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp60_49 () (_ BitVec 64))
(declare-fun temp60_50 () (_ BitVec 64))
(declare-fun temp60_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp60_52 () (_ BitVec 64))
(declare-fun temp60_53 () (_ BitVec 64))
(declare-fun temp60_54 () (_ BitVec 64))
(declare-fun temp60_55 () (_ BitVec 64))
(declare-fun temp60_56 () (_ BitVec 64))
(declare-fun temp60_57 () (_ BitVec 64))
(declare-fun temp60_58 () (_ BitVec 64))
(declare-fun temp60_59 () (_ BitVec 64))
(declare-fun temp60_60 () (_ BitVec 64))
(declare-fun temp60_61 () (_ BitVec 64))
(declare-fun temp60_62 () (_ BitVec 64))
(declare-fun temp60_63 () (_ BitVec 64))
(declare-fun temp60_64 () (_ BitVec 64))
(declare-fun temp60_65 () (_ BitVec 64))
(declare-fun temp60_66 () (_ BitVec 64))
(declare-fun temp60_67 () (_ BitVec 64))
(declare-fun temp60_68 () (_ BitVec 64))
(declare-fun temp60_69 () (_ BitVec 64))
(declare-fun temp60_70 () (_ BitVec 64))
(declare-fun temp60_71 () (_ BitVec 64))
(declare-fun temp60_72 () (_ BitVec 64))
(declare-fun temp60_73 () (_ BitVec 64))
(declare-fun temp60_74 () (_ BitVec 64))
(declare-fun temp60_75 () (_ BitVec 64))
(declare-fun temp60_76 () (_ BitVec 64))
(declare-fun temp60_77 () (_ BitVec 64))
(declare-fun temp60_78 () (_ BitVec 64))
(declare-fun temp60_79 () (_ BitVec 64))
(declare-fun temp60_80 () (_ BitVec 64))
(declare-fun temp60_81 () (_ BitVec 64))
(declare-fun temp60_82 () (_ BitVec 64))
(declare-fun temp60_83 () (_ BitVec 64))
(declare-fun temp60_84 () (_ BitVec 64))
(declare-fun temp60_85 () (_ BitVec 64))
(declare-fun temp60_86 () (_ BitVec 64))
(declare-fun temp60_87 () (_ BitVec 64))
(declare-fun temp60_88 () (_ BitVec 64))
(declare-fun temp60_89 () (_ BitVec 64))
(declare-fun temp60_90 () (_ BitVec 64))
(declare-fun temp60_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp60_92 () (_ BitVec 64))
(declare-fun temp60_93 () (_ BitVec 64))
(declare-fun temp60_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp60_95 () (_ BitVec 64))
(declare-fun temp60_96 () (_ BitVec 64))
(declare-fun temp60_97 () (_ BitVec 64))
(declare-fun temp60_98 () (_ BitVec 64))
(declare-fun temp60_99 () (_ BitVec 64))
(declare-fun temp60_100 () (_ BitVec 64))
(declare-fun temp60_101 () (_ BitVec 64))
(declare-fun temp60_102 () (_ BitVec 64))
(declare-fun temp60_103 () (_ BitVec 64))
(declare-fun temp60_104 () (_ BitVec 64))
(declare-fun temp60_105 () (_ BitVec 64))
(declare-fun temp60_106 () (_ BitVec 64))
(declare-fun temp60_107 () (_ BitVec 64))
(declare-fun temp60_108 () (_ BitVec 64))
(declare-fun temp60_109 () (_ BitVec 64))
(declare-fun temp60_110 () (_ BitVec 64))
(declare-fun temp60_111 () (_ BitVec 64))
(declare-fun temp60_112 () (_ BitVec 64))
(declare-fun temp60_113 () (_ BitVec 64))
(declare-fun temp60_114 () (_ BitVec 64))
(declare-fun temp60_115 () (_ BitVec 64))
(declare-fun temp60_116 () (_ BitVec 64))
(declare-fun temp60_117 () (_ BitVec 64))
(declare-fun temp60_118 () (_ BitVec 64))
(declare-fun temp60_119 () (_ BitVec 64))
(declare-fun temp60_120 () (_ BitVec 64))
(declare-fun temp60_121 () (_ BitVec 64))
(declare-fun temp60_122 () (_ BitVec 64))
(declare-fun temp60_123 () (_ BitVec 64))
(declare-fun temp60_124 () (_ BitVec 64))
(declare-fun temp60_125 () (_ BitVec 64))
(declare-fun temp60_126 () (_ BitVec 64))
(declare-fun temp60_127 () (_ BitVec 64))
(declare-fun temp60_128 () (_ BitVec 64))
(declare-fun temp60_129 () (_ BitVec 64))
(declare-fun temp60_130 () (_ BitVec 64))
(declare-fun temp60_131 () (_ BitVec 64))
(declare-fun temp60_132 () (_ BitVec 64))
(declare-fun temp60_133 () (_ BitVec 64))
(declare-fun temp60_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp60_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp60_136 () (_ BitVec 64))
(declare-fun temp60_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp60_138 () (_ BitVec 64))
(declare-fun temp60_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp60_140 () (_ BitVec 64))
(declare-fun temp60_141 () (_ BitVec 64))
(declare-fun temp60_142 () (_ BitVec 64))
(declare-fun temp60_143 () (_ BitVec 64))
(declare-fun temp60_144 () (_ BitVec 64))
(declare-fun temp60_145 () (_ BitVec 64))
(declare-fun temp60_146 () (_ BitVec 64))
(declare-fun temp60_147 () (_ BitVec 64))
(declare-fun temp60_148 () (_ BitVec 64))
(declare-fun temp60_149 () (_ BitVec 64))
(declare-fun temp60_150 () (_ BitVec 64))
(declare-fun temp60_151 () (_ BitVec 64))
(declare-fun temp60_152 () (_ BitVec 64))
(declare-fun temp60_153 () (_ BitVec 64))
(declare-fun temp60_154 () (_ BitVec 64))
(declare-fun temp60_155 () (_ BitVec 64))
(declare-fun temp60_157 () (_ BitVec 64))
(declare-fun temp60_158 () (_ BitVec 64))
(declare-fun temp60_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp60_159 () (_ BitVec 64))
(declare-fun temp60_160 () (_ BitVec 64))
(declare-fun temp60_162 () (_ BitVec 64))
(declare-fun temp60_163 () (_ BitVec 64))
(declare-fun temp60_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp60_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp60_165 () (_ BitVec 64))
(declare-fun temp60_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp60_167 () (_ BitVec 64))
(declare-fun temp60_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp60_169 () (_ BitVec 64))
(declare-fun temp60_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp60_171 () (_ BitVec 64))
(declare-fun temp60_172 () (_ BitVec 64))
(declare-fun temp60_173 () (_ BitVec 64))
(declare-fun temp60_174 () (_ BitVec 64))
(declare-fun temp60_175 () (_ BitVec 64))
(declare-fun temp60_176 () (_ BitVec 64))
(declare-fun temp60_177 () (_ BitVec 64))
(declare-fun temp60_178 () (_ BitVec 64))
(declare-fun temp60_179 () (_ BitVec 64))
(declare-fun temp60_180 () (_ BitVec 64))
(declare-fun temp60_181 () (_ BitVec 64))
(declare-fun temp60_182 () (_ BitVec 64))
(declare-fun temp60_183 () (_ BitVec 64))
(declare-fun temp60_184 () (_ BitVec 64))
(declare-fun temp60_185 () (_ BitVec 64))
(declare-fun temp60_186 () (_ BitVec 64))
(declare-fun temp60_187 () (_ BitVec 64))
(declare-fun temp60_188 () (_ BitVec 64))
(declare-fun temp60_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp60_190 () (_ BitVec 64))
(declare-fun temp60_192 () (_ BitVec 64))
(declare-fun temp60_193 () (_ BitVec 64))
(declare-fun temp60_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp60_194 () (_ BitVec 64))
(declare-fun temp60_195 () (_ BitVec 64))
(declare-fun temp60_197 () (_ BitVec 64))
(declare-fun temp60_198 () (_ BitVec 64))
(declare-fun temp60_196 () (_ BitVec 64))
(declare-fun temp60_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp60_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp60_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp60_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp60_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp60_204 () (_ BitVec 64))
(declare-fun temp60_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp60_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp60_207 () (_ BitVec 64))
(declare-fun temp60_208 () (_ BitVec 64))
(declare-fun temp60_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp60_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp60_211 () (_ BitVec 64))
(declare-fun temp60_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp60_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp60_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4993424 () (_ BitVec 64))
(declare-fun var211494 () (_ BitVec 64))
(declare-fun temp60_215 () (_ BitVec 64))
(declare-fun var211495 () (_ BitVec 64))
(declare-fun temp60_216 () (_ BitVec 64))
(declare-fun temp60_217 () (_ BitVec 64))
(declare-fun var6632212 () (_ BitVec 64))
(declare-fun var6632179 () (_ BitVec 64))
(declare-fun var6500743 () (_ BitVec 64))
(declare-fun var6500739 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp60_218 () (_ BitVec 64))
(assert (= temp60_1 #x0000000000000001))
(assert (= var77203 temp60_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp60_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp60_2)))
(assert (= temp60_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp60_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp60_4 #x0000000000000000))
(assert (= var210941 temp60_4))
(assert (= temp60_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp60_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp60_6 #x0000000000000000))
(assert (= var210986 temp60_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp60_7 #x0000000000000000))
(assert (= temp60_8 temp60_7))
(assert (= temp60_9 (select ARGNAME_padding_NAMEEND_VAL temp60_8)))
(assert (= temp60_10 #x0000000000000001))
(assert (= temp60_11 temp60_10))
(assert (= temp60_12 (select ARGNAME_padding_NAMEEND_VAL temp60_11)))
(assert (= temp60_13 #x0000000000000002))
(assert (= temp60_14 temp60_13))
(assert (= temp60_15 (select ARGNAME_padding_NAMEEND_VAL temp60_14)))
(assert (= temp60_16 #x0000000000000003))
(assert (= temp60_17 temp60_16))
(assert (= temp60_18 (select ARGNAME_padding_NAMEEND_VAL temp60_17)))
(assert (= temp60_19 #x0000000000000004))
(assert (= temp60_20 temp60_19))
(assert (= temp60_21 (select ARGNAME_padding_NAMEEND_VAL temp60_20)))
(assert (= temp60_22 #x0000000000000005))
(assert (= temp60_23 temp60_22))
(assert (= temp60_24 (select ARGNAME_padding_NAMEEND_VAL temp60_23)))
(assert (= temp60_25 #x0000000000000000))
(assert (= temp60_26 #x0000000000000000))
(assert (= temp60_27 temp60_26))
(assert (= temp60_28 (select ARGNAME_padding_NAMEEND_VAL temp60_27)))
(assert (= temp60_29 #x0000000000000000))
(assert (= temp60_30 #x0000000000000001))
(assert (= temp60_31 temp60_30))
(assert (= temp60_32 (select ARGNAME_padding_NAMEEND_VAL temp60_31)))
(assert (= temp60_33 #x0000000000000000))
(assert (= temp60_34 #x0000000000000002))
(assert (= temp60_35 temp60_34))
(assert (= temp60_36 (select ARGNAME_padding_NAMEEND_VAL temp60_35)))
(assert (= temp60_37 #x0000000000000000))
(assert (= temp60_38 #x0000000000000003))
(assert (= temp60_39 temp60_38))
(assert (= temp60_40 (select ARGNAME_padding_NAMEEND_VAL temp60_39)))
(assert (= temp60_41 #x0000000000000000))
(assert (= temp60_42 #x0000000000000004))
(assert (= temp60_43 temp60_42))
(assert (= temp60_44 (select ARGNAME_padding_NAMEEND_VAL temp60_43)))
(assert (= temp60_45 #x0000000000000000))
(assert (= temp60_46 #x0000000000000005))
(assert (= temp60_47 temp60_46))
(assert (= temp60_48 (select ARGNAME_padding_NAMEEND_VAL temp60_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp60_28 temp60_25)
             (bvslt temp60_32 temp60_29)
             (bvslt temp60_36 temp60_33)
             (bvslt temp60_40 temp60_37)
             (bvslt temp60_44 temp60_41)
             (bvslt temp60_48 temp60_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp60_49 #x0000000000000000))
(assert (= var1191714 temp60_49))
(assert (= temp60_50 #x0000000000000000))
(assert (= temp60_51 temp60_50))
(assert (= temp60_52 (select ARGNAME_output_padding_NAMEEND_VAL temp60_51)))
(assert (= temp60_53 #x0000000000000001))
(assert (= temp60_54 temp60_53))
(assert (= temp60_55 (select ARGNAME_output_padding_NAMEEND_VAL temp60_54)))
(assert (= temp60_56 #x0000000000000002))
(assert (= temp60_57 temp60_56))
(assert (= temp60_58 (select ARGNAME_output_padding_NAMEEND_VAL temp60_57)))
(assert (= temp60_59 #x0000000000000003))
(assert (= temp60_60 temp60_59))
(assert (= temp60_61 (select ARGNAME_output_padding_NAMEEND_VAL temp60_60)))
(assert (= temp60_62 #x0000000000000004))
(assert (= temp60_63 temp60_62))
(assert (= temp60_64 (select ARGNAME_output_padding_NAMEEND_VAL temp60_63)))
(assert (= temp60_65 #x0000000000000005))
(assert (= temp60_66 temp60_65))
(assert (= temp60_67 (select ARGNAME_output_padding_NAMEEND_VAL temp60_66)))
(assert (= temp60_68 #x0000000000000000))
(assert (= temp60_69 #x0000000000000000))
(assert (= temp60_70 temp60_69))
(assert (= temp60_71 (select ARGNAME_output_padding_NAMEEND_VAL temp60_70)))
(assert (= temp60_72 #x0000000000000000))
(assert (= temp60_73 #x0000000000000001))
(assert (= temp60_74 temp60_73))
(assert (= temp60_75 (select ARGNAME_output_padding_NAMEEND_VAL temp60_74)))
(assert (= temp60_76 #x0000000000000000))
(assert (= temp60_77 #x0000000000000002))
(assert (= temp60_78 temp60_77))
(assert (= temp60_79 (select ARGNAME_output_padding_NAMEEND_VAL temp60_78)))
(assert (= temp60_80 #x0000000000000000))
(assert (= temp60_81 #x0000000000000003))
(assert (= temp60_82 temp60_81))
(assert (= temp60_83 (select ARGNAME_output_padding_NAMEEND_VAL temp60_82)))
(assert (= temp60_84 #x0000000000000000))
(assert (= temp60_85 #x0000000000000004))
(assert (= temp60_86 temp60_85))
(assert (= temp60_87 (select ARGNAME_output_padding_NAMEEND_VAL temp60_86)))
(assert (= temp60_88 #x0000000000000000))
(assert (= temp60_89 #x0000000000000005))
(assert (= temp60_90 temp60_89))
(assert (= temp60_91 (select ARGNAME_output_padding_NAMEEND_VAL temp60_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp60_71 temp60_68)
             (bvslt temp60_75 temp60_72)
             (bvslt temp60_79 temp60_76)
             (bvslt temp60_83 temp60_80)
             (bvslt temp60_87 temp60_84)
             (bvslt temp60_91 temp60_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp60_92 #x0000000000000000))
(assert (= var1191725 temp60_92))
(assert (= temp60_93 #x0000000000000000))
(assert (= temp60_94 temp60_93))
(assert (= temp60_95 (select ARGNAME_stride_NAMEEND_VAL temp60_94)))
(assert (= temp60_96 #x0000000000000001))
(assert (= temp60_97 temp60_96))
(assert (= temp60_98 (select ARGNAME_stride_NAMEEND_VAL temp60_97)))
(assert (= temp60_99 #x0000000000000002))
(assert (= temp60_100 temp60_99))
(assert (= temp60_101 (select ARGNAME_stride_NAMEEND_VAL temp60_100)))
(assert (= temp60_102 #x0000000000000003))
(assert (= temp60_103 temp60_102))
(assert (= temp60_104 (select ARGNAME_stride_NAMEEND_VAL temp60_103)))
(assert (= temp60_105 #x0000000000000004))
(assert (= temp60_106 temp60_105))
(assert (= temp60_107 (select ARGNAME_stride_NAMEEND_VAL temp60_106)))
(assert (= temp60_108 #x0000000000000005))
(assert (= temp60_109 temp60_108))
(assert (= temp60_110 (select ARGNAME_stride_NAMEEND_VAL temp60_109)))
(assert (= temp60_111 #x0000000000000000))
(assert (= temp60_112 #x0000000000000000))
(assert (= temp60_113 temp60_112))
(assert (= temp60_114 (select ARGNAME_stride_NAMEEND_VAL temp60_113)))
(assert (= temp60_115 #x0000000000000000))
(assert (= temp60_116 #x0000000000000001))
(assert (= temp60_117 temp60_116))
(assert (= temp60_118 (select ARGNAME_stride_NAMEEND_VAL temp60_117)))
(assert (= temp60_119 #x0000000000000000))
(assert (= temp60_120 #x0000000000000002))
(assert (= temp60_121 temp60_120))
(assert (= temp60_122 (select ARGNAME_stride_NAMEEND_VAL temp60_121)))
(assert (= temp60_123 #x0000000000000000))
(assert (= temp60_124 #x0000000000000003))
(assert (= temp60_125 temp60_124))
(assert (= temp60_126 (select ARGNAME_stride_NAMEEND_VAL temp60_125)))
(assert (= temp60_127 #x0000000000000000))
(assert (= temp60_128 #x0000000000000004))
(assert (= temp60_129 temp60_128))
(assert (= temp60_130 (select ARGNAME_stride_NAMEEND_VAL temp60_129)))
(assert (= temp60_131 #x0000000000000000))
(assert (= temp60_132 #x0000000000000005))
(assert (= temp60_133 temp60_132))
(assert (= temp60_134 (select ARGNAME_stride_NAMEEND_VAL temp60_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp60_114 temp60_111)
             (bvsle temp60_118 temp60_115)
             (bvsle temp60_122 temp60_119)
             (bvsle temp60_126 temp60_123)
             (bvsle temp60_130 temp60_127)
             (bvsle temp60_134 temp60_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp60_135 #x0000000000000000))
(assert (= var1191735 temp60_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp60_136 #x0000000000000001))
(assert (= var1191747 temp60_136))
(assert (= temp60_137 #x0000000000000000))
(assert (= var1179826 temp60_137))
(assert (= temp60_138 #x0000000000000000))
(assert (= temp60_139 temp60_138))
(assert (= temp60_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp60_139)))
(assert (= temp60_141 #x0000000000000001))
(assert (= temp60_142 temp60_141))
(assert (= temp60_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp60_142)))
(assert (= temp60_144 #x0000000000000002))
(assert (= temp60_145 temp60_144))
(assert (= temp60_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp60_145)))
(assert (= temp60_147 #x0000000000000003))
(assert (= temp60_148 temp60_147))
(assert (= temp60_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp60_148)))
(assert (= temp60_150 #x0000000000000004))
(assert (= temp60_151 temp60_150))
(assert (= temp60_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp60_151)))
(assert (= temp60_153 #x0000000000000005))
(assert (= temp60_154 temp60_153))
(assert (= temp60_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp60_154)))
(assert (= temp60_157 var1179826))
(assert (= temp60_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp60_157)))
(assert (= temp60_156 temp60_158))
(assert (= var1191780
   (ite (bvslt temp60_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp60_159 #x0000000000000000))
(assert (= var1191780 temp60_159))
(assert (= temp60_160 #x0000000000000000))
(assert (= var1179826 temp60_160))
(assert (= temp60_162 var1179826))
(assert (= temp60_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp60_162)))
(assert (= temp60_161 temp60_163))
(assert (= var1191802 (bvsmod temp60_161 ARGNAME_groups_NAMEEND)))
(assert (= temp60_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp60_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp60_165 #x0000000000000001))
(assert (= var1191803 temp60_165))
(assert (= temp60_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp60_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp60_167 #x0000000000000001))
(assert (= var1191823 temp60_167))
(assert (= temp60_168 #x0000000000000001))
(assert (= var1180714 temp60_168))
(assert (= temp60_169 #x0000000000000000))
(assert (= temp60_170 temp60_169))
(assert (= temp60_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp60_170)))
(assert (= temp60_172 #x0000000000000001))
(assert (= temp60_173 temp60_172))
(assert (= temp60_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp60_173)))
(assert (= temp60_175 #x0000000000000002))
(assert (= temp60_176 temp60_175))
(assert (= temp60_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp60_176)))
(assert (= temp60_178 #x0000000000000003))
(assert (= temp60_179 temp60_178))
(assert (= temp60_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp60_179)))
(assert (= temp60_181 #x0000000000000004))
(assert (= temp60_182 temp60_181))
(assert (= temp60_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp60_182)))
(assert (= temp60_184 #x0000000000000005))
(assert (= temp60_185 temp60_184))
(assert (= temp60_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp60_185)))
(assert (= temp60_187 #x0000000000000000))
(assert (= temp60_188
   (ite (bvslt var1180714 temp60_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp60_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp60_188)))
(assert (= var1191831 temp60_189))
(assert (bvslt (ite (bvslt var1180714 temp60_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp60_190 #x0000000000000001))
(assert (= var1180714 temp60_190))
(assert (= temp60_192 var1180714))
(assert (= temp60_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp60_192)))
(assert (= temp60_191 temp60_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp60_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp60_194 #x0000000000000001))
(assert (= var1191836 temp60_194))
(assert (= temp60_195 #x0000000000000000))
(assert (= var1179826 temp60_195))
(assert (= temp60_197 var1179826))
(assert (= temp60_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp60_197)))
(assert (= temp60_196 temp60_198))
(assert (= temp60_199 #x0000000000000002))
(assert (= var1586025 temp60_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp60_200 #x0000000000000001))
(assert (= var1191993 temp60_200))
(assert (= temp60_201 #x0000000000000001))
(assert (= var2700303 temp60_201))
(assert (= temp60_202 #x0000000000000001))
(assert (= var2962447 temp60_202))
(assert (= temp60_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp60_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp60_204 #x0000000000000001))
(assert (= var211058 temp60_204))
(assert (= temp60_205 #x0000000000000001))
(assert (= var211188 temp60_205))
(assert (= var3879401 var211188))
(assert (= temp60_206 #x0000000000000000))
(assert (= var3866802 temp60_206))
(assert (= temp60_207 #x0000000000000000))
(assert (= temp60_208
   (ite (bvslt var3866802 temp60_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp60_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp60_208)))
(assert (= var3879420 temp60_209))
(assert (bvslt (ite (bvslt var3866802 temp60_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp60_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp60_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp60_211 #x0000000000000001))
(assert (= var3879421 temp60_211))
(assert (= temp60_212 #x0000000000000000))
(assert (= var4079423 temp60_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp60_213 #x0000000000000002))
(assert (= var4208259 temp60_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp60_214 #x0000000000000000))
(assert (= var4273820 temp60_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4993424 var211201))
(assert (= var211494 var210913))
(assert (= temp60_215 #x0000000000000000))
(assert (= var211495
   (ite (distinct var211494 temp60_215) #x0000000000000001 #x0000000000000000)))
(assert (= temp60_216 #x0000000000000001))
(assert (= var211058 temp60_216))
(assert (= temp60_217 #x0000000000000000))
(assert (= var6632212 temp60_217))
(assert (= var6632179 var6632212))
(assert (= var6500743 var6632179))
(assert (= var6500739 var6500743))
(assert (= var212669 var6500739))
(assert (= temp60_218 #x0000000000000000))
(assert (= var212669 temp60_218))
(model-add temp60_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp60_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp60_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp60_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




