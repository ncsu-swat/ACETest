(declare-fun temp58_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp58_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp58_3 () (_ BitVec 64))
(declare-fun temp58_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp58_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp58_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp58_7 () (_ BitVec 64))
(declare-fun temp58_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp58_9 () (_ BitVec 64))
(declare-fun temp58_10 () (_ BitVec 64))
(declare-fun temp58_11 () (_ BitVec 64))
(declare-fun temp58_12 () (_ BitVec 64))
(declare-fun temp58_13 () (_ BitVec 64))
(declare-fun temp58_14 () (_ BitVec 64))
(declare-fun temp58_15 () (_ BitVec 64))
(declare-fun temp58_16 () (_ BitVec 64))
(declare-fun temp58_17 () (_ BitVec 64))
(declare-fun temp58_18 () (_ BitVec 64))
(declare-fun temp58_19 () (_ BitVec 64))
(declare-fun temp58_20 () (_ BitVec 64))
(declare-fun temp58_21 () (_ BitVec 64))
(declare-fun temp58_22 () (_ BitVec 64))
(declare-fun temp58_23 () (_ BitVec 64))
(declare-fun temp58_24 () (_ BitVec 64))
(declare-fun temp58_25 () (_ BitVec 64))
(declare-fun temp58_26 () (_ BitVec 64))
(declare-fun temp58_27 () (_ BitVec 64))
(declare-fun temp58_28 () (_ BitVec 64))
(declare-fun temp58_29 () (_ BitVec 64))
(declare-fun temp58_30 () (_ BitVec 64))
(declare-fun temp58_31 () (_ BitVec 64))
(declare-fun temp58_32 () (_ BitVec 64))
(declare-fun temp58_33 () (_ BitVec 64))
(declare-fun temp58_34 () (_ BitVec 64))
(declare-fun temp58_35 () (_ BitVec 64))
(declare-fun temp58_36 () (_ BitVec 64))
(declare-fun temp58_37 () (_ BitVec 64))
(declare-fun temp58_38 () (_ BitVec 64))
(declare-fun temp58_39 () (_ BitVec 64))
(declare-fun temp58_40 () (_ BitVec 64))
(declare-fun temp58_41 () (_ BitVec 64))
(declare-fun temp58_42 () (_ BitVec 64))
(declare-fun temp58_43 () (_ BitVec 64))
(declare-fun temp58_44 () (_ BitVec 64))
(declare-fun temp58_45 () (_ BitVec 64))
(declare-fun temp58_46 () (_ BitVec 64))
(declare-fun temp58_47 () (_ BitVec 64))
(declare-fun temp58_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp58_49 () (_ BitVec 64))
(declare-fun temp58_50 () (_ BitVec 64))
(declare-fun temp58_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp58_52 () (_ BitVec 64))
(declare-fun temp58_53 () (_ BitVec 64))
(declare-fun temp58_54 () (_ BitVec 64))
(declare-fun temp58_55 () (_ BitVec 64))
(declare-fun temp58_56 () (_ BitVec 64))
(declare-fun temp58_57 () (_ BitVec 64))
(declare-fun temp58_58 () (_ BitVec 64))
(declare-fun temp58_59 () (_ BitVec 64))
(declare-fun temp58_60 () (_ BitVec 64))
(declare-fun temp58_61 () (_ BitVec 64))
(declare-fun temp58_62 () (_ BitVec 64))
(declare-fun temp58_63 () (_ BitVec 64))
(declare-fun temp58_64 () (_ BitVec 64))
(declare-fun temp58_65 () (_ BitVec 64))
(declare-fun temp58_66 () (_ BitVec 64))
(declare-fun temp58_67 () (_ BitVec 64))
(declare-fun temp58_68 () (_ BitVec 64))
(declare-fun temp58_69 () (_ BitVec 64))
(declare-fun temp58_70 () (_ BitVec 64))
(declare-fun temp58_71 () (_ BitVec 64))
(declare-fun temp58_72 () (_ BitVec 64))
(declare-fun temp58_73 () (_ BitVec 64))
(declare-fun temp58_74 () (_ BitVec 64))
(declare-fun temp58_75 () (_ BitVec 64))
(declare-fun temp58_76 () (_ BitVec 64))
(declare-fun temp58_77 () (_ BitVec 64))
(declare-fun temp58_78 () (_ BitVec 64))
(declare-fun temp58_79 () (_ BitVec 64))
(declare-fun temp58_80 () (_ BitVec 64))
(declare-fun temp58_81 () (_ BitVec 64))
(declare-fun temp58_82 () (_ BitVec 64))
(declare-fun temp58_83 () (_ BitVec 64))
(declare-fun temp58_84 () (_ BitVec 64))
(declare-fun temp58_85 () (_ BitVec 64))
(declare-fun temp58_86 () (_ BitVec 64))
(declare-fun temp58_87 () (_ BitVec 64))
(declare-fun temp58_88 () (_ BitVec 64))
(declare-fun temp58_89 () (_ BitVec 64))
(declare-fun temp58_90 () (_ BitVec 64))
(declare-fun temp58_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp58_92 () (_ BitVec 64))
(declare-fun temp58_93 () (_ BitVec 64))
(declare-fun temp58_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp58_95 () (_ BitVec 64))
(declare-fun temp58_96 () (_ BitVec 64))
(declare-fun temp58_97 () (_ BitVec 64))
(declare-fun temp58_98 () (_ BitVec 64))
(declare-fun temp58_99 () (_ BitVec 64))
(declare-fun temp58_100 () (_ BitVec 64))
(declare-fun temp58_101 () (_ BitVec 64))
(declare-fun temp58_102 () (_ BitVec 64))
(declare-fun temp58_103 () (_ BitVec 64))
(declare-fun temp58_104 () (_ BitVec 64))
(declare-fun temp58_105 () (_ BitVec 64))
(declare-fun temp58_106 () (_ BitVec 64))
(declare-fun temp58_107 () (_ BitVec 64))
(declare-fun temp58_108 () (_ BitVec 64))
(declare-fun temp58_109 () (_ BitVec 64))
(declare-fun temp58_110 () (_ BitVec 64))
(declare-fun temp58_111 () (_ BitVec 64))
(declare-fun temp58_112 () (_ BitVec 64))
(declare-fun temp58_113 () (_ BitVec 64))
(declare-fun temp58_114 () (_ BitVec 64))
(declare-fun temp58_115 () (_ BitVec 64))
(declare-fun temp58_116 () (_ BitVec 64))
(declare-fun temp58_117 () (_ BitVec 64))
(declare-fun temp58_118 () (_ BitVec 64))
(declare-fun temp58_119 () (_ BitVec 64))
(declare-fun temp58_120 () (_ BitVec 64))
(declare-fun temp58_121 () (_ BitVec 64))
(declare-fun temp58_122 () (_ BitVec 64))
(declare-fun temp58_123 () (_ BitVec 64))
(declare-fun temp58_124 () (_ BitVec 64))
(declare-fun temp58_125 () (_ BitVec 64))
(declare-fun temp58_126 () (_ BitVec 64))
(declare-fun temp58_127 () (_ BitVec 64))
(declare-fun temp58_128 () (_ BitVec 64))
(declare-fun temp58_129 () (_ BitVec 64))
(declare-fun temp58_130 () (_ BitVec 64))
(declare-fun temp58_131 () (_ BitVec 64))
(declare-fun temp58_132 () (_ BitVec 64))
(declare-fun temp58_133 () (_ BitVec 64))
(declare-fun temp58_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp58_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp58_136 () (_ BitVec 64))
(declare-fun temp58_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp58_138 () (_ BitVec 64))
(declare-fun temp58_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp58_140 () (_ BitVec 64))
(declare-fun temp58_141 () (_ BitVec 64))
(declare-fun temp58_142 () (_ BitVec 64))
(declare-fun temp58_143 () (_ BitVec 64))
(declare-fun temp58_144 () (_ BitVec 64))
(declare-fun temp58_145 () (_ BitVec 64))
(declare-fun temp58_146 () (_ BitVec 64))
(declare-fun temp58_147 () (_ BitVec 64))
(declare-fun temp58_148 () (_ BitVec 64))
(declare-fun temp58_149 () (_ BitVec 64))
(declare-fun temp58_150 () (_ BitVec 64))
(declare-fun temp58_151 () (_ BitVec 64))
(declare-fun temp58_152 () (_ BitVec 64))
(declare-fun temp58_153 () (_ BitVec 64))
(declare-fun temp58_154 () (_ BitVec 64))
(declare-fun temp58_155 () (_ BitVec 64))
(declare-fun temp58_157 () (_ BitVec 64))
(declare-fun temp58_158 () (_ BitVec 64))
(declare-fun temp58_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp58_159 () (_ BitVec 64))
(declare-fun temp58_160 () (_ BitVec 64))
(declare-fun temp58_162 () (_ BitVec 64))
(declare-fun temp58_163 () (_ BitVec 64))
(declare-fun temp58_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp58_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp58_165 () (_ BitVec 64))
(declare-fun temp58_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp58_167 () (_ BitVec 64))
(declare-fun temp58_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp58_169 () (_ BitVec 64))
(declare-fun temp58_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp58_171 () (_ BitVec 64))
(declare-fun temp58_172 () (_ BitVec 64))
(declare-fun temp58_173 () (_ BitVec 64))
(declare-fun temp58_174 () (_ BitVec 64))
(declare-fun temp58_175 () (_ BitVec 64))
(declare-fun temp58_176 () (_ BitVec 64))
(declare-fun temp58_177 () (_ BitVec 64))
(declare-fun temp58_178 () (_ BitVec 64))
(declare-fun temp58_179 () (_ BitVec 64))
(declare-fun temp58_180 () (_ BitVec 64))
(declare-fun temp58_181 () (_ BitVec 64))
(declare-fun temp58_182 () (_ BitVec 64))
(declare-fun temp58_183 () (_ BitVec 64))
(declare-fun temp58_184 () (_ BitVec 64))
(declare-fun temp58_185 () (_ BitVec 64))
(declare-fun temp58_186 () (_ BitVec 64))
(declare-fun temp58_187 () (_ BitVec 64))
(declare-fun temp58_188 () (_ BitVec 64))
(declare-fun temp58_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp58_190 () (_ BitVec 64))
(declare-fun temp58_192 () (_ BitVec 64))
(declare-fun temp58_193 () (_ BitVec 64))
(declare-fun temp58_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp58_194 () (_ BitVec 64))
(declare-fun temp58_195 () (_ BitVec 64))
(declare-fun temp58_197 () (_ BitVec 64))
(declare-fun temp58_198 () (_ BitVec 64))
(declare-fun temp58_196 () (_ BitVec 64))
(declare-fun temp58_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp58_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp58_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp58_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp58_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp58_204 () (_ BitVec 64))
(declare-fun temp58_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp58_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp58_207 () (_ BitVec 64))
(declare-fun temp58_208 () (_ BitVec 64))
(declare-fun temp58_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp58_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp58_211 () (_ BitVec 64))
(declare-fun temp58_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp58_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp58_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4993424 () (_ BitVec 64))
(declare-fun var211494 () (_ BitVec 64))
(declare-fun temp58_215 () (_ BitVec 64))
(declare-fun var211495 () (_ BitVec 64))
(declare-fun temp58_216 () (_ BitVec 64))
(assert (= temp58_1 #x0000000000000001))
(assert (= var77203 temp58_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp58_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp58_2)))
(assert (= temp58_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp58_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp58_4 #x0000000000000000))
(assert (= var210941 temp58_4))
(assert (= temp58_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp58_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp58_6 #x0000000000000000))
(assert (= var210986 temp58_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp58_7 #x0000000000000000))
(assert (= temp58_8 temp58_7))
(assert (= temp58_9 (select ARGNAME_padding_NAMEEND_VAL temp58_8)))
(assert (= temp58_10 #x0000000000000001))
(assert (= temp58_11 temp58_10))
(assert (= temp58_12 (select ARGNAME_padding_NAMEEND_VAL temp58_11)))
(assert (= temp58_13 #x0000000000000002))
(assert (= temp58_14 temp58_13))
(assert (= temp58_15 (select ARGNAME_padding_NAMEEND_VAL temp58_14)))
(assert (= temp58_16 #x0000000000000003))
(assert (= temp58_17 temp58_16))
(assert (= temp58_18 (select ARGNAME_padding_NAMEEND_VAL temp58_17)))
(assert (= temp58_19 #x0000000000000004))
(assert (= temp58_20 temp58_19))
(assert (= temp58_21 (select ARGNAME_padding_NAMEEND_VAL temp58_20)))
(assert (= temp58_22 #x0000000000000005))
(assert (= temp58_23 temp58_22))
(assert (= temp58_24 (select ARGNAME_padding_NAMEEND_VAL temp58_23)))
(assert (= temp58_25 #x0000000000000000))
(assert (= temp58_26 #x0000000000000000))
(assert (= temp58_27 temp58_26))
(assert (= temp58_28 (select ARGNAME_padding_NAMEEND_VAL temp58_27)))
(assert (= temp58_29 #x0000000000000000))
(assert (= temp58_30 #x0000000000000001))
(assert (= temp58_31 temp58_30))
(assert (= temp58_32 (select ARGNAME_padding_NAMEEND_VAL temp58_31)))
(assert (= temp58_33 #x0000000000000000))
(assert (= temp58_34 #x0000000000000002))
(assert (= temp58_35 temp58_34))
(assert (= temp58_36 (select ARGNAME_padding_NAMEEND_VAL temp58_35)))
(assert (= temp58_37 #x0000000000000000))
(assert (= temp58_38 #x0000000000000003))
(assert (= temp58_39 temp58_38))
(assert (= temp58_40 (select ARGNAME_padding_NAMEEND_VAL temp58_39)))
(assert (= temp58_41 #x0000000000000000))
(assert (= temp58_42 #x0000000000000004))
(assert (= temp58_43 temp58_42))
(assert (= temp58_44 (select ARGNAME_padding_NAMEEND_VAL temp58_43)))
(assert (= temp58_45 #x0000000000000000))
(assert (= temp58_46 #x0000000000000005))
(assert (= temp58_47 temp58_46))
(assert (= temp58_48 (select ARGNAME_padding_NAMEEND_VAL temp58_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp58_28 temp58_25)
             (bvslt temp58_32 temp58_29)
             (bvslt temp58_36 temp58_33)
             (bvslt temp58_40 temp58_37)
             (bvslt temp58_44 temp58_41)
             (bvslt temp58_48 temp58_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp58_49 #x0000000000000000))
(assert (= var1191714 temp58_49))
(assert (= temp58_50 #x0000000000000000))
(assert (= temp58_51 temp58_50))
(assert (= temp58_52 (select ARGNAME_output_padding_NAMEEND_VAL temp58_51)))
(assert (= temp58_53 #x0000000000000001))
(assert (= temp58_54 temp58_53))
(assert (= temp58_55 (select ARGNAME_output_padding_NAMEEND_VAL temp58_54)))
(assert (= temp58_56 #x0000000000000002))
(assert (= temp58_57 temp58_56))
(assert (= temp58_58 (select ARGNAME_output_padding_NAMEEND_VAL temp58_57)))
(assert (= temp58_59 #x0000000000000003))
(assert (= temp58_60 temp58_59))
(assert (= temp58_61 (select ARGNAME_output_padding_NAMEEND_VAL temp58_60)))
(assert (= temp58_62 #x0000000000000004))
(assert (= temp58_63 temp58_62))
(assert (= temp58_64 (select ARGNAME_output_padding_NAMEEND_VAL temp58_63)))
(assert (= temp58_65 #x0000000000000005))
(assert (= temp58_66 temp58_65))
(assert (= temp58_67 (select ARGNAME_output_padding_NAMEEND_VAL temp58_66)))
(assert (= temp58_68 #x0000000000000000))
(assert (= temp58_69 #x0000000000000000))
(assert (= temp58_70 temp58_69))
(assert (= temp58_71 (select ARGNAME_output_padding_NAMEEND_VAL temp58_70)))
(assert (= temp58_72 #x0000000000000000))
(assert (= temp58_73 #x0000000000000001))
(assert (= temp58_74 temp58_73))
(assert (= temp58_75 (select ARGNAME_output_padding_NAMEEND_VAL temp58_74)))
(assert (= temp58_76 #x0000000000000000))
(assert (= temp58_77 #x0000000000000002))
(assert (= temp58_78 temp58_77))
(assert (= temp58_79 (select ARGNAME_output_padding_NAMEEND_VAL temp58_78)))
(assert (= temp58_80 #x0000000000000000))
(assert (= temp58_81 #x0000000000000003))
(assert (= temp58_82 temp58_81))
(assert (= temp58_83 (select ARGNAME_output_padding_NAMEEND_VAL temp58_82)))
(assert (= temp58_84 #x0000000000000000))
(assert (= temp58_85 #x0000000000000004))
(assert (= temp58_86 temp58_85))
(assert (= temp58_87 (select ARGNAME_output_padding_NAMEEND_VAL temp58_86)))
(assert (= temp58_88 #x0000000000000000))
(assert (= temp58_89 #x0000000000000005))
(assert (= temp58_90 temp58_89))
(assert (= temp58_91 (select ARGNAME_output_padding_NAMEEND_VAL temp58_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp58_71 temp58_68)
             (bvslt temp58_75 temp58_72)
             (bvslt temp58_79 temp58_76)
             (bvslt temp58_83 temp58_80)
             (bvslt temp58_87 temp58_84)
             (bvslt temp58_91 temp58_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp58_92 #x0000000000000000))
(assert (= var1191725 temp58_92))
(assert (= temp58_93 #x0000000000000000))
(assert (= temp58_94 temp58_93))
(assert (= temp58_95 (select ARGNAME_stride_NAMEEND_VAL temp58_94)))
(assert (= temp58_96 #x0000000000000001))
(assert (= temp58_97 temp58_96))
(assert (= temp58_98 (select ARGNAME_stride_NAMEEND_VAL temp58_97)))
(assert (= temp58_99 #x0000000000000002))
(assert (= temp58_100 temp58_99))
(assert (= temp58_101 (select ARGNAME_stride_NAMEEND_VAL temp58_100)))
(assert (= temp58_102 #x0000000000000003))
(assert (= temp58_103 temp58_102))
(assert (= temp58_104 (select ARGNAME_stride_NAMEEND_VAL temp58_103)))
(assert (= temp58_105 #x0000000000000004))
(assert (= temp58_106 temp58_105))
(assert (= temp58_107 (select ARGNAME_stride_NAMEEND_VAL temp58_106)))
(assert (= temp58_108 #x0000000000000005))
(assert (= temp58_109 temp58_108))
(assert (= temp58_110 (select ARGNAME_stride_NAMEEND_VAL temp58_109)))
(assert (= temp58_111 #x0000000000000000))
(assert (= temp58_112 #x0000000000000000))
(assert (= temp58_113 temp58_112))
(assert (= temp58_114 (select ARGNAME_stride_NAMEEND_VAL temp58_113)))
(assert (= temp58_115 #x0000000000000000))
(assert (= temp58_116 #x0000000000000001))
(assert (= temp58_117 temp58_116))
(assert (= temp58_118 (select ARGNAME_stride_NAMEEND_VAL temp58_117)))
(assert (= temp58_119 #x0000000000000000))
(assert (= temp58_120 #x0000000000000002))
(assert (= temp58_121 temp58_120))
(assert (= temp58_122 (select ARGNAME_stride_NAMEEND_VAL temp58_121)))
(assert (= temp58_123 #x0000000000000000))
(assert (= temp58_124 #x0000000000000003))
(assert (= temp58_125 temp58_124))
(assert (= temp58_126 (select ARGNAME_stride_NAMEEND_VAL temp58_125)))
(assert (= temp58_127 #x0000000000000000))
(assert (= temp58_128 #x0000000000000004))
(assert (= temp58_129 temp58_128))
(assert (= temp58_130 (select ARGNAME_stride_NAMEEND_VAL temp58_129)))
(assert (= temp58_131 #x0000000000000000))
(assert (= temp58_132 #x0000000000000005))
(assert (= temp58_133 temp58_132))
(assert (= temp58_134 (select ARGNAME_stride_NAMEEND_VAL temp58_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp58_114 temp58_111)
             (bvsle temp58_118 temp58_115)
             (bvsle temp58_122 temp58_119)
             (bvsle temp58_126 temp58_123)
             (bvsle temp58_130 temp58_127)
             (bvsle temp58_134 temp58_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp58_135 #x0000000000000000))
(assert (= var1191735 temp58_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp58_136 #x0000000000000001))
(assert (= var1191747 temp58_136))
(assert (= temp58_137 #x0000000000000000))
(assert (= var1179826 temp58_137))
(assert (= temp58_138 #x0000000000000000))
(assert (= temp58_139 temp58_138))
(assert (= temp58_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp58_139)))
(assert (= temp58_141 #x0000000000000001))
(assert (= temp58_142 temp58_141))
(assert (= temp58_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp58_142)))
(assert (= temp58_144 #x0000000000000002))
(assert (= temp58_145 temp58_144))
(assert (= temp58_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp58_145)))
(assert (= temp58_147 #x0000000000000003))
(assert (= temp58_148 temp58_147))
(assert (= temp58_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp58_148)))
(assert (= temp58_150 #x0000000000000004))
(assert (= temp58_151 temp58_150))
(assert (= temp58_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp58_151)))
(assert (= temp58_153 #x0000000000000005))
(assert (= temp58_154 temp58_153))
(assert (= temp58_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp58_154)))
(assert (= temp58_157 var1179826))
(assert (= temp58_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp58_157)))
(assert (= temp58_156 temp58_158))
(assert (= var1191780
   (ite (bvslt temp58_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp58_159 #x0000000000000000))
(assert (= var1191780 temp58_159))
(assert (= temp58_160 #x0000000000000000))
(assert (= var1179826 temp58_160))
(assert (= temp58_162 var1179826))
(assert (= temp58_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp58_162)))
(assert (= temp58_161 temp58_163))
(assert (= var1191802 (bvsmod temp58_161 ARGNAME_groups_NAMEEND)))
(assert (= temp58_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp58_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp58_165 #x0000000000000001))
(assert (= var1191803 temp58_165))
(assert (= temp58_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp58_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp58_167 #x0000000000000001))
(assert (= var1191823 temp58_167))
(assert (= temp58_168 #x0000000000000001))
(assert (= var1180714 temp58_168))
(assert (= temp58_169 #x0000000000000000))
(assert (= temp58_170 temp58_169))
(assert (= temp58_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp58_170)))
(assert (= temp58_172 #x0000000000000001))
(assert (= temp58_173 temp58_172))
(assert (= temp58_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp58_173)))
(assert (= temp58_175 #x0000000000000002))
(assert (= temp58_176 temp58_175))
(assert (= temp58_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp58_176)))
(assert (= temp58_178 #x0000000000000003))
(assert (= temp58_179 temp58_178))
(assert (= temp58_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp58_179)))
(assert (= temp58_181 #x0000000000000004))
(assert (= temp58_182 temp58_181))
(assert (= temp58_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp58_182)))
(assert (= temp58_184 #x0000000000000005))
(assert (= temp58_185 temp58_184))
(assert (= temp58_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp58_185)))
(assert (= temp58_187 #x0000000000000000))
(assert (= temp58_188
   (ite (bvslt var1180714 temp58_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp58_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp58_188)))
(assert (= var1191831 temp58_189))
(assert (bvslt (ite (bvslt var1180714 temp58_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp58_190 #x0000000000000001))
(assert (= var1180714 temp58_190))
(assert (= temp58_192 var1180714))
(assert (= temp58_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp58_192)))
(assert (= temp58_191 temp58_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp58_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp58_194 #x0000000000000001))
(assert (= var1191836 temp58_194))
(assert (= temp58_195 #x0000000000000000))
(assert (= var1179826 temp58_195))
(assert (= temp58_197 var1179826))
(assert (= temp58_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp58_197)))
(assert (= temp58_196 temp58_198))
(assert (= temp58_199 #x0000000000000002))
(assert (= var1586025 temp58_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp58_200 #x0000000000000001))
(assert (= var1191993 temp58_200))
(assert (= temp58_201 #x0000000000000001))
(assert (= var2700303 temp58_201))
(assert (= temp58_202 #x0000000000000001))
(assert (= var2962447 temp58_202))
(assert (= temp58_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp58_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp58_204 #x0000000000000001))
(assert (= var211058 temp58_204))
(assert (= temp58_205 #x0000000000000001))
(assert (= var211188 temp58_205))
(assert (= var3879401 var211188))
(assert (= temp58_206 #x0000000000000000))
(assert (= var3866802 temp58_206))
(assert (= temp58_207 #x0000000000000000))
(assert (= temp58_208
   (ite (bvslt var3866802 temp58_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp58_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp58_208)))
(assert (= var3879420 temp58_209))
(assert (bvslt (ite (bvslt var3866802 temp58_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp58_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp58_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp58_211 #x0000000000000001))
(assert (= var3879421 temp58_211))
(assert (= temp58_212 #x0000000000000000))
(assert (= var4079423 temp58_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp58_213 #x0000000000000002))
(assert (= var4208259 temp58_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp58_214 #x0000000000000000))
(assert (= var4273820 temp58_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4993424 var211201))
(assert (= var211494 var210913))
(assert (= temp58_215 #x0000000000000000))
(assert (= var211495
   (ite (distinct var211494 temp58_215) #x0000000000000001 #x0000000000000000)))
(assert (= temp58_216 #x0000000000000001))
(assert (= var211058 temp58_216))
(model-add temp58_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp58_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp58_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp58_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




