(declare-fun temp62_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp62_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp62_3 () (_ BitVec 64))
(declare-fun temp62_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp62_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp62_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp62_7 () (_ BitVec 64))
(declare-fun temp62_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp62_9 () (_ BitVec 64))
(declare-fun temp62_10 () (_ BitVec 64))
(declare-fun temp62_11 () (_ BitVec 64))
(declare-fun temp62_12 () (_ BitVec 64))
(declare-fun temp62_13 () (_ BitVec 64))
(declare-fun temp62_14 () (_ BitVec 64))
(declare-fun temp62_15 () (_ BitVec 64))
(declare-fun temp62_16 () (_ BitVec 64))
(declare-fun temp62_17 () (_ BitVec 64))
(declare-fun temp62_18 () (_ BitVec 64))
(declare-fun temp62_19 () (_ BitVec 64))
(declare-fun temp62_20 () (_ BitVec 64))
(declare-fun temp62_21 () (_ BitVec 64))
(declare-fun temp62_22 () (_ BitVec 64))
(declare-fun temp62_23 () (_ BitVec 64))
(declare-fun temp62_24 () (_ BitVec 64))
(declare-fun temp62_25 () (_ BitVec 64))
(declare-fun temp62_26 () (_ BitVec 64))
(declare-fun temp62_27 () (_ BitVec 64))
(declare-fun temp62_28 () (_ BitVec 64))
(declare-fun temp62_29 () (_ BitVec 64))
(declare-fun temp62_30 () (_ BitVec 64))
(declare-fun temp62_31 () (_ BitVec 64))
(declare-fun temp62_32 () (_ BitVec 64))
(declare-fun temp62_33 () (_ BitVec 64))
(declare-fun temp62_34 () (_ BitVec 64))
(declare-fun temp62_35 () (_ BitVec 64))
(declare-fun temp62_36 () (_ BitVec 64))
(declare-fun temp62_37 () (_ BitVec 64))
(declare-fun temp62_38 () (_ BitVec 64))
(declare-fun temp62_39 () (_ BitVec 64))
(declare-fun temp62_40 () (_ BitVec 64))
(declare-fun temp62_41 () (_ BitVec 64))
(declare-fun temp62_42 () (_ BitVec 64))
(declare-fun temp62_43 () (_ BitVec 64))
(declare-fun temp62_44 () (_ BitVec 64))
(declare-fun temp62_45 () (_ BitVec 64))
(declare-fun temp62_46 () (_ BitVec 64))
(declare-fun temp62_47 () (_ BitVec 64))
(declare-fun temp62_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp62_49 () (_ BitVec 64))
(declare-fun temp62_50 () (_ BitVec 64))
(declare-fun temp62_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp62_52 () (_ BitVec 64))
(declare-fun temp62_53 () (_ BitVec 64))
(declare-fun temp62_54 () (_ BitVec 64))
(declare-fun temp62_55 () (_ BitVec 64))
(declare-fun temp62_56 () (_ BitVec 64))
(declare-fun temp62_57 () (_ BitVec 64))
(declare-fun temp62_58 () (_ BitVec 64))
(declare-fun temp62_59 () (_ BitVec 64))
(declare-fun temp62_60 () (_ BitVec 64))
(declare-fun temp62_61 () (_ BitVec 64))
(declare-fun temp62_62 () (_ BitVec 64))
(declare-fun temp62_63 () (_ BitVec 64))
(declare-fun temp62_64 () (_ BitVec 64))
(declare-fun temp62_65 () (_ BitVec 64))
(declare-fun temp62_66 () (_ BitVec 64))
(declare-fun temp62_67 () (_ BitVec 64))
(declare-fun temp62_68 () (_ BitVec 64))
(declare-fun temp62_69 () (_ BitVec 64))
(declare-fun temp62_70 () (_ BitVec 64))
(declare-fun temp62_71 () (_ BitVec 64))
(declare-fun temp62_72 () (_ BitVec 64))
(declare-fun temp62_73 () (_ BitVec 64))
(declare-fun temp62_74 () (_ BitVec 64))
(declare-fun temp62_75 () (_ BitVec 64))
(declare-fun temp62_76 () (_ BitVec 64))
(declare-fun temp62_77 () (_ BitVec 64))
(declare-fun temp62_78 () (_ BitVec 64))
(declare-fun temp62_79 () (_ BitVec 64))
(declare-fun temp62_80 () (_ BitVec 64))
(declare-fun temp62_81 () (_ BitVec 64))
(declare-fun temp62_82 () (_ BitVec 64))
(declare-fun temp62_83 () (_ BitVec 64))
(declare-fun temp62_84 () (_ BitVec 64))
(declare-fun temp62_85 () (_ BitVec 64))
(declare-fun temp62_86 () (_ BitVec 64))
(declare-fun temp62_87 () (_ BitVec 64))
(declare-fun temp62_88 () (_ BitVec 64))
(declare-fun temp62_89 () (_ BitVec 64))
(declare-fun temp62_90 () (_ BitVec 64))
(declare-fun temp62_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp62_92 () (_ BitVec 64))
(declare-fun temp62_93 () (_ BitVec 64))
(declare-fun temp62_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp62_95 () (_ BitVec 64))
(declare-fun temp62_96 () (_ BitVec 64))
(declare-fun temp62_97 () (_ BitVec 64))
(declare-fun temp62_98 () (_ BitVec 64))
(declare-fun temp62_99 () (_ BitVec 64))
(declare-fun temp62_100 () (_ BitVec 64))
(declare-fun temp62_101 () (_ BitVec 64))
(declare-fun temp62_102 () (_ BitVec 64))
(declare-fun temp62_103 () (_ BitVec 64))
(declare-fun temp62_104 () (_ BitVec 64))
(declare-fun temp62_105 () (_ BitVec 64))
(declare-fun temp62_106 () (_ BitVec 64))
(declare-fun temp62_107 () (_ BitVec 64))
(declare-fun temp62_108 () (_ BitVec 64))
(declare-fun temp62_109 () (_ BitVec 64))
(declare-fun temp62_110 () (_ BitVec 64))
(declare-fun temp62_111 () (_ BitVec 64))
(declare-fun temp62_112 () (_ BitVec 64))
(declare-fun temp62_113 () (_ BitVec 64))
(declare-fun temp62_114 () (_ BitVec 64))
(declare-fun temp62_115 () (_ BitVec 64))
(declare-fun temp62_116 () (_ BitVec 64))
(declare-fun temp62_117 () (_ BitVec 64))
(declare-fun temp62_118 () (_ BitVec 64))
(declare-fun temp62_119 () (_ BitVec 64))
(declare-fun temp62_120 () (_ BitVec 64))
(declare-fun temp62_121 () (_ BitVec 64))
(declare-fun temp62_122 () (_ BitVec 64))
(declare-fun temp62_123 () (_ BitVec 64))
(declare-fun temp62_124 () (_ BitVec 64))
(declare-fun temp62_125 () (_ BitVec 64))
(declare-fun temp62_126 () (_ BitVec 64))
(declare-fun temp62_127 () (_ BitVec 64))
(declare-fun temp62_128 () (_ BitVec 64))
(declare-fun temp62_129 () (_ BitVec 64))
(declare-fun temp62_130 () (_ BitVec 64))
(declare-fun temp62_131 () (_ BitVec 64))
(declare-fun temp62_132 () (_ BitVec 64))
(declare-fun temp62_133 () (_ BitVec 64))
(declare-fun temp62_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp62_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp62_136 () (_ BitVec 64))
(declare-fun temp62_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp62_138 () (_ BitVec 64))
(declare-fun temp62_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp62_140 () (_ BitVec 64))
(declare-fun temp62_141 () (_ BitVec 64))
(declare-fun temp62_142 () (_ BitVec 64))
(declare-fun temp62_143 () (_ BitVec 64))
(declare-fun temp62_144 () (_ BitVec 64))
(declare-fun temp62_145 () (_ BitVec 64))
(declare-fun temp62_146 () (_ BitVec 64))
(declare-fun temp62_147 () (_ BitVec 64))
(declare-fun temp62_148 () (_ BitVec 64))
(declare-fun temp62_149 () (_ BitVec 64))
(declare-fun temp62_150 () (_ BitVec 64))
(declare-fun temp62_151 () (_ BitVec 64))
(declare-fun temp62_152 () (_ BitVec 64))
(declare-fun temp62_153 () (_ BitVec 64))
(declare-fun temp62_154 () (_ BitVec 64))
(declare-fun temp62_155 () (_ BitVec 64))
(declare-fun temp62_157 () (_ BitVec 64))
(declare-fun temp62_158 () (_ BitVec 64))
(declare-fun temp62_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp62_159 () (_ BitVec 64))
(declare-fun temp62_160 () (_ BitVec 64))
(declare-fun temp62_162 () (_ BitVec 64))
(declare-fun temp62_163 () (_ BitVec 64))
(declare-fun temp62_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp62_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp62_165 () (_ BitVec 64))
(declare-fun temp62_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp62_167 () (_ BitVec 64))
(declare-fun temp62_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp62_169 () (_ BitVec 64))
(declare-fun temp62_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp62_171 () (_ BitVec 64))
(declare-fun temp62_172 () (_ BitVec 64))
(declare-fun temp62_173 () (_ BitVec 64))
(declare-fun temp62_174 () (_ BitVec 64))
(declare-fun temp62_175 () (_ BitVec 64))
(declare-fun temp62_176 () (_ BitVec 64))
(declare-fun temp62_177 () (_ BitVec 64))
(declare-fun temp62_178 () (_ BitVec 64))
(declare-fun temp62_179 () (_ BitVec 64))
(declare-fun temp62_180 () (_ BitVec 64))
(declare-fun temp62_181 () (_ BitVec 64))
(declare-fun temp62_182 () (_ BitVec 64))
(declare-fun temp62_183 () (_ BitVec 64))
(declare-fun temp62_184 () (_ BitVec 64))
(declare-fun temp62_185 () (_ BitVec 64))
(declare-fun temp62_186 () (_ BitVec 64))
(declare-fun temp62_187 () (_ BitVec 64))
(declare-fun temp62_188 () (_ BitVec 64))
(declare-fun temp62_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp62_190 () (_ BitVec 64))
(declare-fun temp62_192 () (_ BitVec 64))
(declare-fun temp62_193 () (_ BitVec 64))
(declare-fun temp62_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp62_194 () (_ BitVec 64))
(declare-fun temp62_195 () (_ BitVec 64))
(declare-fun temp62_197 () (_ BitVec 64))
(declare-fun temp62_198 () (_ BitVec 64))
(declare-fun temp62_196 () (_ BitVec 64))
(declare-fun temp62_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp62_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp62_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp62_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp62_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp62_204 () (_ BitVec 64))
(declare-fun temp62_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp62_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp62_207 () (_ BitVec 64))
(declare-fun temp62_208 () (_ BitVec 64))
(declare-fun temp62_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp62_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp62_211 () (_ BitVec 64))
(declare-fun temp62_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp62_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp62_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4993424 () (_ BitVec 64))
(declare-fun var211494 () (_ BitVec 64))
(declare-fun temp62_215 () (_ BitVec 64))
(declare-fun var211495 () (_ BitVec 64))
(declare-fun temp62_216 () (_ BitVec 64))
(assert (= temp62_1 #x0000000000000001))
(assert (= var77203 temp62_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp62_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp62_2)))
(assert (= temp62_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp62_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp62_4 #x0000000000000000))
(assert (= var210941 temp62_4))
(assert (= temp62_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp62_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp62_6 #x0000000000000000))
(assert (= var210986 temp62_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp62_7 #x0000000000000000))
(assert (= temp62_8 temp62_7))
(assert (= temp62_9 (select ARGNAME_padding_NAMEEND_VAL temp62_8)))
(assert (= temp62_10 #x0000000000000001))
(assert (= temp62_11 temp62_10))
(assert (= temp62_12 (select ARGNAME_padding_NAMEEND_VAL temp62_11)))
(assert (= temp62_13 #x0000000000000002))
(assert (= temp62_14 temp62_13))
(assert (= temp62_15 (select ARGNAME_padding_NAMEEND_VAL temp62_14)))
(assert (= temp62_16 #x0000000000000003))
(assert (= temp62_17 temp62_16))
(assert (= temp62_18 (select ARGNAME_padding_NAMEEND_VAL temp62_17)))
(assert (= temp62_19 #x0000000000000004))
(assert (= temp62_20 temp62_19))
(assert (= temp62_21 (select ARGNAME_padding_NAMEEND_VAL temp62_20)))
(assert (= temp62_22 #x0000000000000005))
(assert (= temp62_23 temp62_22))
(assert (= temp62_24 (select ARGNAME_padding_NAMEEND_VAL temp62_23)))
(assert (= temp62_25 #x0000000000000000))
(assert (= temp62_26 #x0000000000000000))
(assert (= temp62_27 temp62_26))
(assert (= temp62_28 (select ARGNAME_padding_NAMEEND_VAL temp62_27)))
(assert (= temp62_29 #x0000000000000000))
(assert (= temp62_30 #x0000000000000001))
(assert (= temp62_31 temp62_30))
(assert (= temp62_32 (select ARGNAME_padding_NAMEEND_VAL temp62_31)))
(assert (= temp62_33 #x0000000000000000))
(assert (= temp62_34 #x0000000000000002))
(assert (= temp62_35 temp62_34))
(assert (= temp62_36 (select ARGNAME_padding_NAMEEND_VAL temp62_35)))
(assert (= temp62_37 #x0000000000000000))
(assert (= temp62_38 #x0000000000000003))
(assert (= temp62_39 temp62_38))
(assert (= temp62_40 (select ARGNAME_padding_NAMEEND_VAL temp62_39)))
(assert (= temp62_41 #x0000000000000000))
(assert (= temp62_42 #x0000000000000004))
(assert (= temp62_43 temp62_42))
(assert (= temp62_44 (select ARGNAME_padding_NAMEEND_VAL temp62_43)))
(assert (= temp62_45 #x0000000000000000))
(assert (= temp62_46 #x0000000000000005))
(assert (= temp62_47 temp62_46))
(assert (= temp62_48 (select ARGNAME_padding_NAMEEND_VAL temp62_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp62_28 temp62_25)
             (bvslt temp62_32 temp62_29)
             (bvslt temp62_36 temp62_33)
             (bvslt temp62_40 temp62_37)
             (bvslt temp62_44 temp62_41)
             (bvslt temp62_48 temp62_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp62_49 #x0000000000000000))
(assert (= var1191714 temp62_49))
(assert (= temp62_50 #x0000000000000000))
(assert (= temp62_51 temp62_50))
(assert (= temp62_52 (select ARGNAME_output_padding_NAMEEND_VAL temp62_51)))
(assert (= temp62_53 #x0000000000000001))
(assert (= temp62_54 temp62_53))
(assert (= temp62_55 (select ARGNAME_output_padding_NAMEEND_VAL temp62_54)))
(assert (= temp62_56 #x0000000000000002))
(assert (= temp62_57 temp62_56))
(assert (= temp62_58 (select ARGNAME_output_padding_NAMEEND_VAL temp62_57)))
(assert (= temp62_59 #x0000000000000003))
(assert (= temp62_60 temp62_59))
(assert (= temp62_61 (select ARGNAME_output_padding_NAMEEND_VAL temp62_60)))
(assert (= temp62_62 #x0000000000000004))
(assert (= temp62_63 temp62_62))
(assert (= temp62_64 (select ARGNAME_output_padding_NAMEEND_VAL temp62_63)))
(assert (= temp62_65 #x0000000000000005))
(assert (= temp62_66 temp62_65))
(assert (= temp62_67 (select ARGNAME_output_padding_NAMEEND_VAL temp62_66)))
(assert (= temp62_68 #x0000000000000000))
(assert (= temp62_69 #x0000000000000000))
(assert (= temp62_70 temp62_69))
(assert (= temp62_71 (select ARGNAME_output_padding_NAMEEND_VAL temp62_70)))
(assert (= temp62_72 #x0000000000000000))
(assert (= temp62_73 #x0000000000000001))
(assert (= temp62_74 temp62_73))
(assert (= temp62_75 (select ARGNAME_output_padding_NAMEEND_VAL temp62_74)))
(assert (= temp62_76 #x0000000000000000))
(assert (= temp62_77 #x0000000000000002))
(assert (= temp62_78 temp62_77))
(assert (= temp62_79 (select ARGNAME_output_padding_NAMEEND_VAL temp62_78)))
(assert (= temp62_80 #x0000000000000000))
(assert (= temp62_81 #x0000000000000003))
(assert (= temp62_82 temp62_81))
(assert (= temp62_83 (select ARGNAME_output_padding_NAMEEND_VAL temp62_82)))
(assert (= temp62_84 #x0000000000000000))
(assert (= temp62_85 #x0000000000000004))
(assert (= temp62_86 temp62_85))
(assert (= temp62_87 (select ARGNAME_output_padding_NAMEEND_VAL temp62_86)))
(assert (= temp62_88 #x0000000000000000))
(assert (= temp62_89 #x0000000000000005))
(assert (= temp62_90 temp62_89))
(assert (= temp62_91 (select ARGNAME_output_padding_NAMEEND_VAL temp62_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp62_71 temp62_68)
             (bvslt temp62_75 temp62_72)
             (bvslt temp62_79 temp62_76)
             (bvslt temp62_83 temp62_80)
             (bvslt temp62_87 temp62_84)
             (bvslt temp62_91 temp62_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp62_92 #x0000000000000000))
(assert (= var1191725 temp62_92))
(assert (= temp62_93 #x0000000000000000))
(assert (= temp62_94 temp62_93))
(assert (= temp62_95 (select ARGNAME_stride_NAMEEND_VAL temp62_94)))
(assert (= temp62_96 #x0000000000000001))
(assert (= temp62_97 temp62_96))
(assert (= temp62_98 (select ARGNAME_stride_NAMEEND_VAL temp62_97)))
(assert (= temp62_99 #x0000000000000002))
(assert (= temp62_100 temp62_99))
(assert (= temp62_101 (select ARGNAME_stride_NAMEEND_VAL temp62_100)))
(assert (= temp62_102 #x0000000000000003))
(assert (= temp62_103 temp62_102))
(assert (= temp62_104 (select ARGNAME_stride_NAMEEND_VAL temp62_103)))
(assert (= temp62_105 #x0000000000000004))
(assert (= temp62_106 temp62_105))
(assert (= temp62_107 (select ARGNAME_stride_NAMEEND_VAL temp62_106)))
(assert (= temp62_108 #x0000000000000005))
(assert (= temp62_109 temp62_108))
(assert (= temp62_110 (select ARGNAME_stride_NAMEEND_VAL temp62_109)))
(assert (= temp62_111 #x0000000000000000))
(assert (= temp62_112 #x0000000000000000))
(assert (= temp62_113 temp62_112))
(assert (= temp62_114 (select ARGNAME_stride_NAMEEND_VAL temp62_113)))
(assert (= temp62_115 #x0000000000000000))
(assert (= temp62_116 #x0000000000000001))
(assert (= temp62_117 temp62_116))
(assert (= temp62_118 (select ARGNAME_stride_NAMEEND_VAL temp62_117)))
(assert (= temp62_119 #x0000000000000000))
(assert (= temp62_120 #x0000000000000002))
(assert (= temp62_121 temp62_120))
(assert (= temp62_122 (select ARGNAME_stride_NAMEEND_VAL temp62_121)))
(assert (= temp62_123 #x0000000000000000))
(assert (= temp62_124 #x0000000000000003))
(assert (= temp62_125 temp62_124))
(assert (= temp62_126 (select ARGNAME_stride_NAMEEND_VAL temp62_125)))
(assert (= temp62_127 #x0000000000000000))
(assert (= temp62_128 #x0000000000000004))
(assert (= temp62_129 temp62_128))
(assert (= temp62_130 (select ARGNAME_stride_NAMEEND_VAL temp62_129)))
(assert (= temp62_131 #x0000000000000000))
(assert (= temp62_132 #x0000000000000005))
(assert (= temp62_133 temp62_132))
(assert (= temp62_134 (select ARGNAME_stride_NAMEEND_VAL temp62_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp62_114 temp62_111)
             (bvsle temp62_118 temp62_115)
             (bvsle temp62_122 temp62_119)
             (bvsle temp62_126 temp62_123)
             (bvsle temp62_130 temp62_127)
             (bvsle temp62_134 temp62_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp62_135 #x0000000000000000))
(assert (= var1191735 temp62_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp62_136 #x0000000000000001))
(assert (= var1191747 temp62_136))
(assert (= temp62_137 #x0000000000000000))
(assert (= var1179826 temp62_137))
(assert (= temp62_138 #x0000000000000000))
(assert (= temp62_139 temp62_138))
(assert (= temp62_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp62_139)))
(assert (= temp62_141 #x0000000000000001))
(assert (= temp62_142 temp62_141))
(assert (= temp62_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp62_142)))
(assert (= temp62_144 #x0000000000000002))
(assert (= temp62_145 temp62_144))
(assert (= temp62_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp62_145)))
(assert (= temp62_147 #x0000000000000003))
(assert (= temp62_148 temp62_147))
(assert (= temp62_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp62_148)))
(assert (= temp62_150 #x0000000000000004))
(assert (= temp62_151 temp62_150))
(assert (= temp62_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp62_151)))
(assert (= temp62_153 #x0000000000000005))
(assert (= temp62_154 temp62_153))
(assert (= temp62_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp62_154)))
(assert (= temp62_157 var1179826))
(assert (= temp62_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp62_157)))
(assert (= temp62_156 temp62_158))
(assert (= var1191780
   (ite (bvslt temp62_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp62_159 #x0000000000000000))
(assert (= var1191780 temp62_159))
(assert (= temp62_160 #x0000000000000000))
(assert (= var1179826 temp62_160))
(assert (= temp62_162 var1179826))
(assert (= temp62_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp62_162)))
(assert (= temp62_161 temp62_163))
(assert (= var1191802 (bvsmod temp62_161 ARGNAME_groups_NAMEEND)))
(assert (= temp62_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp62_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp62_165 #x0000000000000001))
(assert (= var1191803 temp62_165))
(assert (= temp62_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp62_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp62_167 #x0000000000000001))
(assert (= var1191823 temp62_167))
(assert (= temp62_168 #x0000000000000001))
(assert (= var1180714 temp62_168))
(assert (= temp62_169 #x0000000000000000))
(assert (= temp62_170 temp62_169))
(assert (= temp62_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp62_170)))
(assert (= temp62_172 #x0000000000000001))
(assert (= temp62_173 temp62_172))
(assert (= temp62_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp62_173)))
(assert (= temp62_175 #x0000000000000002))
(assert (= temp62_176 temp62_175))
(assert (= temp62_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp62_176)))
(assert (= temp62_178 #x0000000000000003))
(assert (= temp62_179 temp62_178))
(assert (= temp62_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp62_179)))
(assert (= temp62_181 #x0000000000000004))
(assert (= temp62_182 temp62_181))
(assert (= temp62_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp62_182)))
(assert (= temp62_184 #x0000000000000005))
(assert (= temp62_185 temp62_184))
(assert (= temp62_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp62_185)))
(assert (= temp62_187 #x0000000000000000))
(assert (= temp62_188
   (ite (bvslt var1180714 temp62_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp62_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp62_188)))
(assert (= var1191831 temp62_189))
(assert (bvslt (ite (bvslt var1180714 temp62_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp62_190 #x0000000000000001))
(assert (= var1180714 temp62_190))
(assert (= temp62_192 var1180714))
(assert (= temp62_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp62_192)))
(assert (= temp62_191 temp62_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp62_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp62_194 #x0000000000000001))
(assert (= var1191836 temp62_194))
(assert (= temp62_195 #x0000000000000000))
(assert (= var1179826 temp62_195))
(assert (= temp62_197 var1179826))
(assert (= temp62_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp62_197)))
(assert (= temp62_196 temp62_198))
(assert (= temp62_199 #x0000000000000002))
(assert (= var1586025 temp62_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp62_200 #x0000000000000001))
(assert (= var1191993 temp62_200))
(assert (= temp62_201 #x0000000000000001))
(assert (= var2700303 temp62_201))
(assert (= temp62_202 #x0000000000000001))
(assert (= var2962447 temp62_202))
(assert (= temp62_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp62_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp62_204 #x0000000000000001))
(assert (= var211058 temp62_204))
(assert (= temp62_205 #x0000000000000001))
(assert (= var211188 temp62_205))
(assert (= var3879401 var211188))
(assert (= temp62_206 #x0000000000000000))
(assert (= var3866802 temp62_206))
(assert (= temp62_207 #x0000000000000000))
(assert (= temp62_208
   (ite (bvslt var3866802 temp62_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp62_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp62_208)))
(assert (= var3879420 temp62_209))
(assert (bvslt (ite (bvslt var3866802 temp62_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp62_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp62_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp62_211 #x0000000000000001))
(assert (= var3879421 temp62_211))
(assert (= temp62_212 #x0000000000000000))
(assert (= var4079423 temp62_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp62_213 #x0000000000000002))
(assert (= var4208259 temp62_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp62_214 #x0000000000000000))
(assert (= var4273820 temp62_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4993424 var211201))
(assert (= var211494 var210913))
(assert (= temp62_215 #x0000000000000000))
(assert (= var211495
   (ite (distinct var211494 temp62_215) #x0000000000000001 #x0000000000000000)))
(assert (= temp62_216 #x0000000000000001))
(assert (= var211058 temp62_216))
(model-add temp62_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp62_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp62_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp62_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





