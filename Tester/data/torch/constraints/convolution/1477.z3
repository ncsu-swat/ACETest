(declare-fun temp10764_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10764_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10764_3 () (_ BitVec 64))
(declare-fun temp10764_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10764_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10764_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10764_7 () (_ BitVec 64))
(declare-fun temp10764_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10764_9 () (_ BitVec 64))
(declare-fun temp10764_10 () (_ BitVec 64))
(declare-fun temp10764_11 () (_ BitVec 64))
(declare-fun temp10764_12 () (_ BitVec 64))
(declare-fun temp10764_13 () (_ BitVec 64))
(declare-fun temp10764_14 () (_ BitVec 64))
(declare-fun temp10764_15 () (_ BitVec 64))
(declare-fun temp10764_16 () (_ BitVec 64))
(declare-fun temp10764_17 () (_ BitVec 64))
(declare-fun temp10764_18 () (_ BitVec 64))
(declare-fun temp10764_19 () (_ BitVec 64))
(declare-fun temp10764_20 () (_ BitVec 64))
(declare-fun temp10764_21 () (_ BitVec 64))
(declare-fun temp10764_22 () (_ BitVec 64))
(declare-fun temp10764_23 () (_ BitVec 64))
(declare-fun temp10764_24 () (_ BitVec 64))
(declare-fun temp10764_25 () (_ BitVec 64))
(declare-fun temp10764_26 () (_ BitVec 64))
(declare-fun temp10764_27 () (_ BitVec 64))
(declare-fun temp10764_28 () (_ BitVec 64))
(declare-fun temp10764_29 () (_ BitVec 64))
(declare-fun temp10764_30 () (_ BitVec 64))
(declare-fun temp10764_31 () (_ BitVec 64))
(declare-fun temp10764_32 () (_ BitVec 64))
(declare-fun temp10764_33 () (_ BitVec 64))
(declare-fun temp10764_34 () (_ BitVec 64))
(declare-fun temp10764_35 () (_ BitVec 64))
(declare-fun temp10764_36 () (_ BitVec 64))
(declare-fun temp10764_37 () (_ BitVec 64))
(declare-fun temp10764_38 () (_ BitVec 64))
(declare-fun temp10764_39 () (_ BitVec 64))
(declare-fun temp10764_40 () (_ BitVec 64))
(declare-fun temp10764_41 () (_ BitVec 64))
(declare-fun temp10764_42 () (_ BitVec 64))
(declare-fun temp10764_43 () (_ BitVec 64))
(declare-fun temp10764_44 () (_ BitVec 64))
(declare-fun temp10764_45 () (_ BitVec 64))
(declare-fun temp10764_46 () (_ BitVec 64))
(declare-fun temp10764_47 () (_ BitVec 64))
(declare-fun temp10764_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10764_49 () (_ BitVec 64))
(declare-fun temp10764_50 () (_ BitVec 64))
(declare-fun temp10764_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10764_52 () (_ BitVec 64))
(declare-fun temp10764_53 () (_ BitVec 64))
(declare-fun temp10764_54 () (_ BitVec 64))
(declare-fun temp10764_55 () (_ BitVec 64))
(declare-fun temp10764_56 () (_ BitVec 64))
(declare-fun temp10764_57 () (_ BitVec 64))
(declare-fun temp10764_58 () (_ BitVec 64))
(declare-fun temp10764_59 () (_ BitVec 64))
(declare-fun temp10764_60 () (_ BitVec 64))
(declare-fun temp10764_61 () (_ BitVec 64))
(declare-fun temp10764_62 () (_ BitVec 64))
(declare-fun temp10764_63 () (_ BitVec 64))
(declare-fun temp10764_64 () (_ BitVec 64))
(declare-fun temp10764_65 () (_ BitVec 64))
(declare-fun temp10764_66 () (_ BitVec 64))
(declare-fun temp10764_67 () (_ BitVec 64))
(declare-fun temp10764_68 () (_ BitVec 64))
(declare-fun temp10764_69 () (_ BitVec 64))
(declare-fun temp10764_70 () (_ BitVec 64))
(declare-fun temp10764_71 () (_ BitVec 64))
(declare-fun temp10764_72 () (_ BitVec 64))
(declare-fun temp10764_73 () (_ BitVec 64))
(declare-fun temp10764_74 () (_ BitVec 64))
(declare-fun temp10764_75 () (_ BitVec 64))
(declare-fun temp10764_76 () (_ BitVec 64))
(declare-fun temp10764_77 () (_ BitVec 64))
(declare-fun temp10764_78 () (_ BitVec 64))
(declare-fun temp10764_79 () (_ BitVec 64))
(declare-fun temp10764_80 () (_ BitVec 64))
(declare-fun temp10764_81 () (_ BitVec 64))
(declare-fun temp10764_82 () (_ BitVec 64))
(declare-fun temp10764_83 () (_ BitVec 64))
(declare-fun temp10764_84 () (_ BitVec 64))
(declare-fun temp10764_85 () (_ BitVec 64))
(declare-fun temp10764_86 () (_ BitVec 64))
(declare-fun temp10764_87 () (_ BitVec 64))
(declare-fun temp10764_88 () (_ BitVec 64))
(declare-fun temp10764_89 () (_ BitVec 64))
(declare-fun temp10764_90 () (_ BitVec 64))
(declare-fun temp10764_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10764_92 () (_ BitVec 64))
(declare-fun temp10764_93 () (_ BitVec 64))
(declare-fun temp10764_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10764_95 () (_ BitVec 64))
(declare-fun temp10764_96 () (_ BitVec 64))
(declare-fun temp10764_97 () (_ BitVec 64))
(declare-fun temp10764_98 () (_ BitVec 64))
(declare-fun temp10764_99 () (_ BitVec 64))
(declare-fun temp10764_100 () (_ BitVec 64))
(declare-fun temp10764_101 () (_ BitVec 64))
(declare-fun temp10764_102 () (_ BitVec 64))
(declare-fun temp10764_103 () (_ BitVec 64))
(declare-fun temp10764_104 () (_ BitVec 64))
(declare-fun temp10764_105 () (_ BitVec 64))
(declare-fun temp10764_106 () (_ BitVec 64))
(declare-fun temp10764_107 () (_ BitVec 64))
(declare-fun temp10764_108 () (_ BitVec 64))
(declare-fun temp10764_109 () (_ BitVec 64))
(declare-fun temp10764_110 () (_ BitVec 64))
(declare-fun temp10764_111 () (_ BitVec 64))
(declare-fun temp10764_112 () (_ BitVec 64))
(declare-fun temp10764_113 () (_ BitVec 64))
(declare-fun temp10764_114 () (_ BitVec 64))
(declare-fun temp10764_115 () (_ BitVec 64))
(declare-fun temp10764_116 () (_ BitVec 64))
(declare-fun temp10764_117 () (_ BitVec 64))
(declare-fun temp10764_118 () (_ BitVec 64))
(declare-fun temp10764_119 () (_ BitVec 64))
(declare-fun temp10764_120 () (_ BitVec 64))
(declare-fun temp10764_121 () (_ BitVec 64))
(declare-fun temp10764_122 () (_ BitVec 64))
(declare-fun temp10764_123 () (_ BitVec 64))
(declare-fun temp10764_124 () (_ BitVec 64))
(declare-fun temp10764_125 () (_ BitVec 64))
(declare-fun temp10764_126 () (_ BitVec 64))
(declare-fun temp10764_127 () (_ BitVec 64))
(declare-fun temp10764_128 () (_ BitVec 64))
(declare-fun temp10764_129 () (_ BitVec 64))
(declare-fun temp10764_130 () (_ BitVec 64))
(declare-fun temp10764_131 () (_ BitVec 64))
(declare-fun temp10764_132 () (_ BitVec 64))
(declare-fun temp10764_133 () (_ BitVec 64))
(declare-fun temp10764_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10764_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10764_136 () (_ BitVec 64))
(declare-fun temp10764_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10764_138 () (_ BitVec 64))
(declare-fun temp10764_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10764_140 () (_ BitVec 64))
(declare-fun temp10764_141 () (_ BitVec 64))
(declare-fun temp10764_142 () (_ BitVec 64))
(declare-fun temp10764_143 () (_ BitVec 64))
(declare-fun temp10764_144 () (_ BitVec 64))
(declare-fun temp10764_145 () (_ BitVec 64))
(declare-fun temp10764_146 () (_ BitVec 64))
(declare-fun temp10764_147 () (_ BitVec 64))
(declare-fun temp10764_148 () (_ BitVec 64))
(declare-fun temp10764_149 () (_ BitVec 64))
(declare-fun temp10764_150 () (_ BitVec 64))
(declare-fun temp10764_151 () (_ BitVec 64))
(declare-fun temp10764_152 () (_ BitVec 64))
(declare-fun temp10764_153 () (_ BitVec 64))
(declare-fun temp10764_154 () (_ BitVec 64))
(declare-fun temp10764_155 () (_ BitVec 64))
(declare-fun temp10764_157 () (_ BitVec 64))
(declare-fun temp10764_158 () (_ BitVec 64))
(declare-fun temp10764_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10764_159 () (_ BitVec 64))
(declare-fun temp10764_160 () (_ BitVec 64))
(declare-fun temp10764_162 () (_ BitVec 64))
(declare-fun temp10764_163 () (_ BitVec 64))
(declare-fun temp10764_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10764_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10764_165 () (_ BitVec 64))
(declare-fun temp10764_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10764_167 () (_ BitVec 64))
(declare-fun temp10764_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10764_169 () (_ BitVec 64))
(declare-fun temp10764_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10764_171 () (_ BitVec 64))
(declare-fun temp10764_172 () (_ BitVec 64))
(declare-fun temp10764_173 () (_ BitVec 64))
(declare-fun temp10764_174 () (_ BitVec 64))
(declare-fun temp10764_175 () (_ BitVec 64))
(declare-fun temp10764_176 () (_ BitVec 64))
(declare-fun temp10764_177 () (_ BitVec 64))
(declare-fun temp10764_178 () (_ BitVec 64))
(declare-fun temp10764_179 () (_ BitVec 64))
(declare-fun temp10764_180 () (_ BitVec 64))
(declare-fun temp10764_181 () (_ BitVec 64))
(declare-fun temp10764_182 () (_ BitVec 64))
(declare-fun temp10764_183 () (_ BitVec 64))
(declare-fun temp10764_184 () (_ BitVec 64))
(declare-fun temp10764_185 () (_ BitVec 64))
(declare-fun temp10764_186 () (_ BitVec 64))
(declare-fun temp10764_187 () (_ BitVec 64))
(declare-fun temp10764_188 () (_ BitVec 64))
(declare-fun temp10764_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10764_190 () (_ BitVec 64))
(declare-fun temp10764_192 () (_ BitVec 64))
(declare-fun temp10764_193 () (_ BitVec 64))
(declare-fun temp10764_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10764_194 () (_ BitVec 64))
(declare-fun temp10764_195 () (_ BitVec 64))
(declare-fun temp10764_197 () (_ BitVec 64))
(declare-fun temp10764_198 () (_ BitVec 64))
(declare-fun temp10764_196 () (_ BitVec 64))
(declare-fun temp10764_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10764_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10764_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10764_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10764_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10764_204 () (_ BitVec 64))
(declare-fun temp10764_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10764_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10764_207 () (_ BitVec 64))
(declare-fun temp10764_208 () (_ BitVec 64))
(declare-fun temp10764_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10764_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10764_211 () (_ BitVec 64))
(declare-fun temp10764_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10764_213 () (_ BitVec 64))
(declare-fun temp10764_214 () (_ BitVec 64))
(declare-fun temp10764_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10764_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10764_217 () (_ BitVec 64))
(declare-fun temp10764_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10764_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10764_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var4927888 () (_ BitVec 64))
(declare-fun var211962 () (_ BitVec 64))
(declare-fun temp10764_221 () (_ BitVec 64))
(declare-fun var211963 () (_ BitVec 64))
(declare-fun temp10764_222 () (_ BitVec 64))
(declare-fun temp10764_223 () (_ BitVec 64))
(declare-fun var6566676 () (_ BitVec 64))
(declare-fun var6566643 () (_ BitVec 64))
(declare-fun var6435207 () (_ BitVec 64))
(declare-fun var6435203 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp10764_224 () (_ BitVec 64))
(assert (= temp10764_1 #x0000000000000001))
(assert (= var77203 temp10764_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10764_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10764_2)))
(assert (= temp10764_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10764_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10764_4 #x0000000000000000))
(assert (= var210941 temp10764_4))
(assert (= temp10764_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10764_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10764_6 #x0000000000000000))
(assert (= var210986 temp10764_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10764_7 #x0000000000000000))
(assert (= temp10764_8 temp10764_7))
(assert (= temp10764_9 (select ARGNAME_padding_NAMEEND_VAL temp10764_8)))
(assert (= temp10764_10 #x0000000000000001))
(assert (= temp10764_11 temp10764_10))
(assert (= temp10764_12 (select ARGNAME_padding_NAMEEND_VAL temp10764_11)))
(assert (= temp10764_13 #x0000000000000002))
(assert (= temp10764_14 temp10764_13))
(assert (= temp10764_15 (select ARGNAME_padding_NAMEEND_VAL temp10764_14)))
(assert (= temp10764_16 #x0000000000000003))
(assert (= temp10764_17 temp10764_16))
(assert (= temp10764_18 (select ARGNAME_padding_NAMEEND_VAL temp10764_17)))
(assert (= temp10764_19 #x0000000000000004))
(assert (= temp10764_20 temp10764_19))
(assert (= temp10764_21 (select ARGNAME_padding_NAMEEND_VAL temp10764_20)))
(assert (= temp10764_22 #x0000000000000005))
(assert (= temp10764_23 temp10764_22))
(assert (= temp10764_24 (select ARGNAME_padding_NAMEEND_VAL temp10764_23)))
(assert (= temp10764_25 #x0000000000000000))
(assert (= temp10764_26 #x0000000000000000))
(assert (= temp10764_27 temp10764_26))
(assert (= temp10764_28 (select ARGNAME_padding_NAMEEND_VAL temp10764_27)))
(assert (= temp10764_29 #x0000000000000000))
(assert (= temp10764_30 #x0000000000000001))
(assert (= temp10764_31 temp10764_30))
(assert (= temp10764_32 (select ARGNAME_padding_NAMEEND_VAL temp10764_31)))
(assert (= temp10764_33 #x0000000000000000))
(assert (= temp10764_34 #x0000000000000002))
(assert (= temp10764_35 temp10764_34))
(assert (= temp10764_36 (select ARGNAME_padding_NAMEEND_VAL temp10764_35)))
(assert (= temp10764_37 #x0000000000000000))
(assert (= temp10764_38 #x0000000000000003))
(assert (= temp10764_39 temp10764_38))
(assert (= temp10764_40 (select ARGNAME_padding_NAMEEND_VAL temp10764_39)))
(assert (= temp10764_41 #x0000000000000000))
(assert (= temp10764_42 #x0000000000000004))
(assert (= temp10764_43 temp10764_42))
(assert (= temp10764_44 (select ARGNAME_padding_NAMEEND_VAL temp10764_43)))
(assert (= temp10764_45 #x0000000000000000))
(assert (= temp10764_46 #x0000000000000005))
(assert (= temp10764_47 temp10764_46))
(assert (= temp10764_48 (select ARGNAME_padding_NAMEEND_VAL temp10764_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10764_28 temp10764_25)
             (bvslt temp10764_32 temp10764_29)
             (bvslt temp10764_36 temp10764_33)
             (bvslt temp10764_40 temp10764_37)
             (bvslt temp10764_44 temp10764_41)
             (bvslt temp10764_48 temp10764_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10764_49 #x0000000000000000))
(assert (= var1191714 temp10764_49))
(assert (= temp10764_50 #x0000000000000000))
(assert (= temp10764_51 temp10764_50))
(assert (= temp10764_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10764_51)))
(assert (= temp10764_53 #x0000000000000001))
(assert (= temp10764_54 temp10764_53))
(assert (= temp10764_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10764_54)))
(assert (= temp10764_56 #x0000000000000002))
(assert (= temp10764_57 temp10764_56))
(assert (= temp10764_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10764_57)))
(assert (= temp10764_59 #x0000000000000003))
(assert (= temp10764_60 temp10764_59))
(assert (= temp10764_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10764_60)))
(assert (= temp10764_62 #x0000000000000004))
(assert (= temp10764_63 temp10764_62))
(assert (= temp10764_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10764_63)))
(assert (= temp10764_65 #x0000000000000005))
(assert (= temp10764_66 temp10764_65))
(assert (= temp10764_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10764_66)))
(assert (= temp10764_68 #x0000000000000000))
(assert (= temp10764_69 #x0000000000000000))
(assert (= temp10764_70 temp10764_69))
(assert (= temp10764_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10764_70)))
(assert (= temp10764_72 #x0000000000000000))
(assert (= temp10764_73 #x0000000000000001))
(assert (= temp10764_74 temp10764_73))
(assert (= temp10764_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10764_74)))
(assert (= temp10764_76 #x0000000000000000))
(assert (= temp10764_77 #x0000000000000002))
(assert (= temp10764_78 temp10764_77))
(assert (= temp10764_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10764_78)))
(assert (= temp10764_80 #x0000000000000000))
(assert (= temp10764_81 #x0000000000000003))
(assert (= temp10764_82 temp10764_81))
(assert (= temp10764_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10764_82)))
(assert (= temp10764_84 #x0000000000000000))
(assert (= temp10764_85 #x0000000000000004))
(assert (= temp10764_86 temp10764_85))
(assert (= temp10764_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10764_86)))
(assert (= temp10764_88 #x0000000000000000))
(assert (= temp10764_89 #x0000000000000005))
(assert (= temp10764_90 temp10764_89))
(assert (= temp10764_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10764_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10764_71 temp10764_68)
             (bvslt temp10764_75 temp10764_72)
             (bvslt temp10764_79 temp10764_76)
             (bvslt temp10764_83 temp10764_80)
             (bvslt temp10764_87 temp10764_84)
             (bvslt temp10764_91 temp10764_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10764_92 #x0000000000000000))
(assert (= var1191725 temp10764_92))
(assert (= temp10764_93 #x0000000000000000))
(assert (= temp10764_94 temp10764_93))
(assert (= temp10764_95 (select ARGNAME_stride_NAMEEND_VAL temp10764_94)))
(assert (= temp10764_96 #x0000000000000001))
(assert (= temp10764_97 temp10764_96))
(assert (= temp10764_98 (select ARGNAME_stride_NAMEEND_VAL temp10764_97)))
(assert (= temp10764_99 #x0000000000000002))
(assert (= temp10764_100 temp10764_99))
(assert (= temp10764_101 (select ARGNAME_stride_NAMEEND_VAL temp10764_100)))
(assert (= temp10764_102 #x0000000000000003))
(assert (= temp10764_103 temp10764_102))
(assert (= temp10764_104 (select ARGNAME_stride_NAMEEND_VAL temp10764_103)))
(assert (= temp10764_105 #x0000000000000004))
(assert (= temp10764_106 temp10764_105))
(assert (= temp10764_107 (select ARGNAME_stride_NAMEEND_VAL temp10764_106)))
(assert (= temp10764_108 #x0000000000000005))
(assert (= temp10764_109 temp10764_108))
(assert (= temp10764_110 (select ARGNAME_stride_NAMEEND_VAL temp10764_109)))
(assert (= temp10764_111 #x0000000000000000))
(assert (= temp10764_112 #x0000000000000000))
(assert (= temp10764_113 temp10764_112))
(assert (= temp10764_114 (select ARGNAME_stride_NAMEEND_VAL temp10764_113)))
(assert (= temp10764_115 #x0000000000000000))
(assert (= temp10764_116 #x0000000000000001))
(assert (= temp10764_117 temp10764_116))
(assert (= temp10764_118 (select ARGNAME_stride_NAMEEND_VAL temp10764_117)))
(assert (= temp10764_119 #x0000000000000000))
(assert (= temp10764_120 #x0000000000000002))
(assert (= temp10764_121 temp10764_120))
(assert (= temp10764_122 (select ARGNAME_stride_NAMEEND_VAL temp10764_121)))
(assert (= temp10764_123 #x0000000000000000))
(assert (= temp10764_124 #x0000000000000003))
(assert (= temp10764_125 temp10764_124))
(assert (= temp10764_126 (select ARGNAME_stride_NAMEEND_VAL temp10764_125)))
(assert (= temp10764_127 #x0000000000000000))
(assert (= temp10764_128 #x0000000000000004))
(assert (= temp10764_129 temp10764_128))
(assert (= temp10764_130 (select ARGNAME_stride_NAMEEND_VAL temp10764_129)))
(assert (= temp10764_131 #x0000000000000000))
(assert (= temp10764_132 #x0000000000000005))
(assert (= temp10764_133 temp10764_132))
(assert (= temp10764_134 (select ARGNAME_stride_NAMEEND_VAL temp10764_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10764_114 temp10764_111)
             (bvsle temp10764_118 temp10764_115)
             (bvsle temp10764_122 temp10764_119)
             (bvsle temp10764_126 temp10764_123)
             (bvsle temp10764_130 temp10764_127)
             (bvsle temp10764_134 temp10764_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10764_135 #x0000000000000000))
(assert (= var1191735 temp10764_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10764_136 #x0000000000000001))
(assert (= var1191747 temp10764_136))
(assert (= temp10764_137 #x0000000000000000))
(assert (= var1179826 temp10764_137))
(assert (= temp10764_138 #x0000000000000000))
(assert (= temp10764_139 temp10764_138))
(assert (= temp10764_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10764_139)))
(assert (= temp10764_141 #x0000000000000001))
(assert (= temp10764_142 temp10764_141))
(assert (= temp10764_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10764_142)))
(assert (= temp10764_144 #x0000000000000002))
(assert (= temp10764_145 temp10764_144))
(assert (= temp10764_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10764_145)))
(assert (= temp10764_147 #x0000000000000003))
(assert (= temp10764_148 temp10764_147))
(assert (= temp10764_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10764_148)))
(assert (= temp10764_150 #x0000000000000004))
(assert (= temp10764_151 temp10764_150))
(assert (= temp10764_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10764_151)))
(assert (= temp10764_153 #x0000000000000005))
(assert (= temp10764_154 temp10764_153))
(assert (= temp10764_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10764_154)))
(assert (= temp10764_157 var1179826))
(assert (= temp10764_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10764_157)))
(assert (= temp10764_156 temp10764_158))
(assert (= var1191780
   (ite (bvslt temp10764_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10764_159 #x0000000000000000))
(assert (= var1191780 temp10764_159))
(assert (= temp10764_160 #x0000000000000000))
(assert (= var1179826 temp10764_160))
(assert (= temp10764_162 var1179826))
(assert (= temp10764_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10764_162)))
(assert (= temp10764_161 temp10764_163))
(assert (= var1191802 (bvsmod temp10764_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10764_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10764_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10764_165 #x0000000000000001))
(assert (= var1191803 temp10764_165))
(assert (= temp10764_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10764_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10764_167 #x0000000000000001))
(assert (= var1191823 temp10764_167))
(assert (= temp10764_168 #x0000000000000001))
(assert (= var1180714 temp10764_168))
(assert (= temp10764_169 #x0000000000000000))
(assert (= temp10764_170 temp10764_169))
(assert (= temp10764_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10764_170)))
(assert (= temp10764_172 #x0000000000000001))
(assert (= temp10764_173 temp10764_172))
(assert (= temp10764_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10764_173)))
(assert (= temp10764_175 #x0000000000000002))
(assert (= temp10764_176 temp10764_175))
(assert (= temp10764_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10764_176)))
(assert (= temp10764_178 #x0000000000000003))
(assert (= temp10764_179 temp10764_178))
(assert (= temp10764_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10764_179)))
(assert (= temp10764_181 #x0000000000000004))
(assert (= temp10764_182 temp10764_181))
(assert (= temp10764_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10764_182)))
(assert (= temp10764_184 #x0000000000000005))
(assert (= temp10764_185 temp10764_184))
(assert (= temp10764_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10764_185)))
(assert (= temp10764_187 #x0000000000000000))
(assert (= temp10764_188
   (ite (bvslt var1180714 temp10764_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10764_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10764_188)))
(assert (= var1191831 temp10764_189))
(assert (bvslt (ite (bvslt var1180714 temp10764_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10764_190 #x0000000000000001))
(assert (= var1180714 temp10764_190))
(assert (= temp10764_192 var1180714))
(assert (= temp10764_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10764_192)))
(assert (= temp10764_191 temp10764_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10764_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10764_194 #x0000000000000001))
(assert (= var1191836 temp10764_194))
(assert (= temp10764_195 #x0000000000000000))
(assert (= var1179826 temp10764_195))
(assert (= temp10764_197 var1179826))
(assert (= temp10764_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10764_197)))
(assert (= temp10764_196 temp10764_198))
(assert (= temp10764_199 #x0000000000000002))
(assert (= var1586025 temp10764_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10764_200 #x0000000000000001))
(assert (= var1191993 temp10764_200))
(assert (= temp10764_201 #x0000000000000001))
(assert (= var2700303 temp10764_201))
(assert (= temp10764_202 #x0000000000000001))
(assert (= var2962447 temp10764_202))
(assert (= temp10764_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10764_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10764_204 #x0000000000000001))
(assert (= var211058 temp10764_204))
(assert (= temp10764_205 #x0000000000000001))
(assert (= var211188 temp10764_205))
(assert (= var3879401 var211188))
(assert (= temp10764_206 #x0000000000000000))
(assert (= var3866802 temp10764_206))
(assert (= temp10764_207 #x0000000000000000))
(assert (= temp10764_208
   (ite (bvslt var3866802 temp10764_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10764_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10764_208)))
(assert (= var3879420 temp10764_209))
(assert (bvslt (ite (bvslt var3866802 temp10764_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10764_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10764_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10764_211 #x0000000000000000))
(assert (= var3879421 temp10764_211))
(assert (= temp10764_212 #x0000000000000001))
(assert (= var3867690 temp10764_212))
(assert (= temp10764_213 #x0000000000000000))
(assert (= temp10764_214
   (ite (bvslt var3867690 temp10764_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10764_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10764_214)))
(assert (= var3879423 temp10764_215))
(assert (bvslt (ite (bvslt var3867690 temp10764_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10764_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10764_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10764_217 #x0000000000000001))
(assert (= var3879424 temp10764_217))
(assert (= temp10764_218 #x0000000000000000))
(assert (= var4133117 temp10764_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10764_219 #x0000000000000002))
(assert (= var4339331 temp10764_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10764_220 #x0000000000000000))
(assert (= var4404892 temp10764_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var4927888 var211201))
(assert (= var211962 var210913))
(assert (= temp10764_221 #x0000000000000000))
(assert (= var211963
   (ite (distinct var211962 temp10764_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10764_222 #x0000000000000001))
(assert (= var211058 temp10764_222))
(assert (= temp10764_223 #x0000000000000000))
(assert (= var6566676 temp10764_223))
(assert (= var6566643 var6566676))
(assert (= var6435207 var6566643))
(assert (= var6435203 var6435207))
(assert (= var212669 var6435203))
(assert (= temp10764_224 #x0000000000000000))
(assert (= var212669 temp10764_224))
(model-add temp10764_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10764_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10764_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10764_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





