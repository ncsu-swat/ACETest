(declare-fun temp278_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp278_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp278_3 () (_ BitVec 64))
(declare-fun temp278_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp278_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp278_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp278_7 () (_ BitVec 64))
(declare-fun temp278_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp278_9 () (_ BitVec 64))
(declare-fun temp278_10 () (_ BitVec 64))
(declare-fun temp278_11 () (_ BitVec 64))
(declare-fun temp278_12 () (_ BitVec 64))
(declare-fun temp278_13 () (_ BitVec 64))
(declare-fun temp278_14 () (_ BitVec 64))
(declare-fun temp278_15 () (_ BitVec 64))
(declare-fun temp278_16 () (_ BitVec 64))
(declare-fun temp278_17 () (_ BitVec 64))
(declare-fun temp278_18 () (_ BitVec 64))
(declare-fun temp278_19 () (_ BitVec 64))
(declare-fun temp278_20 () (_ BitVec 64))
(declare-fun temp278_21 () (_ BitVec 64))
(declare-fun temp278_22 () (_ BitVec 64))
(declare-fun temp278_23 () (_ BitVec 64))
(declare-fun temp278_24 () (_ BitVec 64))
(declare-fun temp278_25 () (_ BitVec 64))
(declare-fun temp278_26 () (_ BitVec 64))
(declare-fun temp278_27 () (_ BitVec 64))
(declare-fun temp278_28 () (_ BitVec 64))
(declare-fun temp278_29 () (_ BitVec 64))
(declare-fun temp278_30 () (_ BitVec 64))
(declare-fun temp278_31 () (_ BitVec 64))
(declare-fun temp278_32 () (_ BitVec 64))
(declare-fun temp278_33 () (_ BitVec 64))
(declare-fun temp278_34 () (_ BitVec 64))
(declare-fun temp278_35 () (_ BitVec 64))
(declare-fun temp278_36 () (_ BitVec 64))
(declare-fun temp278_37 () (_ BitVec 64))
(declare-fun temp278_38 () (_ BitVec 64))
(declare-fun temp278_39 () (_ BitVec 64))
(declare-fun temp278_40 () (_ BitVec 64))
(declare-fun temp278_41 () (_ BitVec 64))
(declare-fun temp278_42 () (_ BitVec 64))
(declare-fun temp278_43 () (_ BitVec 64))
(declare-fun temp278_44 () (_ BitVec 64))
(declare-fun temp278_45 () (_ BitVec 64))
(declare-fun temp278_46 () (_ BitVec 64))
(declare-fun temp278_47 () (_ BitVec 64))
(declare-fun temp278_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp278_49 () (_ BitVec 64))
(declare-fun temp278_50 () (_ BitVec 64))
(declare-fun temp278_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp278_52 () (_ BitVec 64))
(declare-fun temp278_53 () (_ BitVec 64))
(declare-fun temp278_54 () (_ BitVec 64))
(declare-fun temp278_55 () (_ BitVec 64))
(declare-fun temp278_56 () (_ BitVec 64))
(declare-fun temp278_57 () (_ BitVec 64))
(declare-fun temp278_58 () (_ BitVec 64))
(declare-fun temp278_59 () (_ BitVec 64))
(declare-fun temp278_60 () (_ BitVec 64))
(declare-fun temp278_61 () (_ BitVec 64))
(declare-fun temp278_62 () (_ BitVec 64))
(declare-fun temp278_63 () (_ BitVec 64))
(declare-fun temp278_64 () (_ BitVec 64))
(declare-fun temp278_65 () (_ BitVec 64))
(declare-fun temp278_66 () (_ BitVec 64))
(declare-fun temp278_67 () (_ BitVec 64))
(declare-fun temp278_68 () (_ BitVec 64))
(declare-fun temp278_69 () (_ BitVec 64))
(declare-fun temp278_70 () (_ BitVec 64))
(declare-fun temp278_71 () (_ BitVec 64))
(declare-fun temp278_72 () (_ BitVec 64))
(declare-fun temp278_73 () (_ BitVec 64))
(declare-fun temp278_74 () (_ BitVec 64))
(declare-fun temp278_75 () (_ BitVec 64))
(declare-fun temp278_76 () (_ BitVec 64))
(declare-fun temp278_77 () (_ BitVec 64))
(declare-fun temp278_78 () (_ BitVec 64))
(declare-fun temp278_79 () (_ BitVec 64))
(declare-fun temp278_80 () (_ BitVec 64))
(declare-fun temp278_81 () (_ BitVec 64))
(declare-fun temp278_82 () (_ BitVec 64))
(declare-fun temp278_83 () (_ BitVec 64))
(declare-fun temp278_84 () (_ BitVec 64))
(declare-fun temp278_85 () (_ BitVec 64))
(declare-fun temp278_86 () (_ BitVec 64))
(declare-fun temp278_87 () (_ BitVec 64))
(declare-fun temp278_88 () (_ BitVec 64))
(declare-fun temp278_89 () (_ BitVec 64))
(declare-fun temp278_90 () (_ BitVec 64))
(declare-fun temp278_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp278_92 () (_ BitVec 64))
(declare-fun temp278_93 () (_ BitVec 64))
(declare-fun temp278_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp278_95 () (_ BitVec 64))
(declare-fun temp278_96 () (_ BitVec 64))
(declare-fun temp278_97 () (_ BitVec 64))
(declare-fun temp278_98 () (_ BitVec 64))
(declare-fun temp278_99 () (_ BitVec 64))
(declare-fun temp278_100 () (_ BitVec 64))
(declare-fun temp278_101 () (_ BitVec 64))
(declare-fun temp278_102 () (_ BitVec 64))
(declare-fun temp278_103 () (_ BitVec 64))
(declare-fun temp278_104 () (_ BitVec 64))
(declare-fun temp278_105 () (_ BitVec 64))
(declare-fun temp278_106 () (_ BitVec 64))
(declare-fun temp278_107 () (_ BitVec 64))
(declare-fun temp278_108 () (_ BitVec 64))
(declare-fun temp278_109 () (_ BitVec 64))
(declare-fun temp278_110 () (_ BitVec 64))
(declare-fun temp278_111 () (_ BitVec 64))
(declare-fun temp278_112 () (_ BitVec 64))
(declare-fun temp278_113 () (_ BitVec 64))
(declare-fun temp278_114 () (_ BitVec 64))
(declare-fun temp278_115 () (_ BitVec 64))
(declare-fun temp278_116 () (_ BitVec 64))
(declare-fun temp278_117 () (_ BitVec 64))
(declare-fun temp278_118 () (_ BitVec 64))
(declare-fun temp278_119 () (_ BitVec 64))
(declare-fun temp278_120 () (_ BitVec 64))
(declare-fun temp278_121 () (_ BitVec 64))
(declare-fun temp278_122 () (_ BitVec 64))
(declare-fun temp278_123 () (_ BitVec 64))
(declare-fun temp278_124 () (_ BitVec 64))
(declare-fun temp278_125 () (_ BitVec 64))
(declare-fun temp278_126 () (_ BitVec 64))
(declare-fun temp278_127 () (_ BitVec 64))
(declare-fun temp278_128 () (_ BitVec 64))
(declare-fun temp278_129 () (_ BitVec 64))
(declare-fun temp278_130 () (_ BitVec 64))
(declare-fun temp278_131 () (_ BitVec 64))
(declare-fun temp278_132 () (_ BitVec 64))
(declare-fun temp278_133 () (_ BitVec 64))
(declare-fun temp278_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp278_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp278_136 () (_ BitVec 64))
(declare-fun temp278_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp278_138 () (_ BitVec 64))
(declare-fun temp278_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp278_140 () (_ BitVec 64))
(declare-fun temp278_141 () (_ BitVec 64))
(declare-fun temp278_142 () (_ BitVec 64))
(declare-fun temp278_143 () (_ BitVec 64))
(declare-fun temp278_144 () (_ BitVec 64))
(declare-fun temp278_145 () (_ BitVec 64))
(declare-fun temp278_146 () (_ BitVec 64))
(declare-fun temp278_147 () (_ BitVec 64))
(declare-fun temp278_148 () (_ BitVec 64))
(declare-fun temp278_149 () (_ BitVec 64))
(declare-fun temp278_150 () (_ BitVec 64))
(declare-fun temp278_151 () (_ BitVec 64))
(declare-fun temp278_152 () (_ BitVec 64))
(declare-fun temp278_153 () (_ BitVec 64))
(declare-fun temp278_154 () (_ BitVec 64))
(declare-fun temp278_155 () (_ BitVec 64))
(declare-fun temp278_157 () (_ BitVec 64))
(declare-fun temp278_158 () (_ BitVec 64))
(declare-fun temp278_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp278_159 () (_ BitVec 64))
(declare-fun temp278_160 () (_ BitVec 64))
(declare-fun temp278_162 () (_ BitVec 64))
(declare-fun temp278_163 () (_ BitVec 64))
(declare-fun temp278_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp278_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp278_165 () (_ BitVec 64))
(declare-fun temp278_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp278_167 () (_ BitVec 64))
(declare-fun temp278_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp278_169 () (_ BitVec 64))
(declare-fun temp278_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp278_171 () (_ BitVec 64))
(declare-fun temp278_172 () (_ BitVec 64))
(declare-fun temp278_173 () (_ BitVec 64))
(declare-fun temp278_174 () (_ BitVec 64))
(declare-fun temp278_175 () (_ BitVec 64))
(declare-fun temp278_176 () (_ BitVec 64))
(declare-fun temp278_177 () (_ BitVec 64))
(declare-fun temp278_178 () (_ BitVec 64))
(declare-fun temp278_179 () (_ BitVec 64))
(declare-fun temp278_180 () (_ BitVec 64))
(declare-fun temp278_181 () (_ BitVec 64))
(declare-fun temp278_182 () (_ BitVec 64))
(declare-fun temp278_183 () (_ BitVec 64))
(declare-fun temp278_184 () (_ BitVec 64))
(declare-fun temp278_185 () (_ BitVec 64))
(declare-fun temp278_186 () (_ BitVec 64))
(declare-fun temp278_187 () (_ BitVec 64))
(declare-fun temp278_188 () (_ BitVec 64))
(declare-fun temp278_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp278_190 () (_ BitVec 64))
(declare-fun temp278_192 () (_ BitVec 64))
(declare-fun temp278_193 () (_ BitVec 64))
(declare-fun temp278_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp278_194 () (_ BitVec 64))
(declare-fun temp278_195 () (_ BitVec 64))
(declare-fun temp278_197 () (_ BitVec 64))
(declare-fun temp278_198 () (_ BitVec 64))
(declare-fun temp278_196 () (_ BitVec 64))
(declare-fun temp278_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp278_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp278_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp278_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp278_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp278_204 () (_ BitVec 64))
(declare-fun temp278_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp278_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp278_207 () (_ BitVec 64))
(declare-fun temp278_208 () (_ BitVec 64))
(declare-fun temp278_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp278_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp278_211 () (_ BitVec 64))
(declare-fun temp278_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp278_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp278_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var5058960 () (_ BitVec 64))
(declare-fun var5321104 () (_ BitVec 64))
(declare-fun temp278_215 () (_ BitVec 64))
(assert (= temp278_1 #x0000000000000001))
(assert (= var77203 temp278_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp278_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp278_2)))
(assert (= temp278_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp278_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp278_4 #x0000000000000000))
(assert (= var210941 temp278_4))
(assert (= temp278_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp278_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp278_6 #x0000000000000000))
(assert (= var210986 temp278_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp278_7 #x0000000000000000))
(assert (= temp278_8 temp278_7))
(assert (= temp278_9 (select ARGNAME_padding_NAMEEND_VAL temp278_8)))
(assert (= temp278_10 #x0000000000000001))
(assert (= temp278_11 temp278_10))
(assert (= temp278_12 (select ARGNAME_padding_NAMEEND_VAL temp278_11)))
(assert (= temp278_13 #x0000000000000002))
(assert (= temp278_14 temp278_13))
(assert (= temp278_15 (select ARGNAME_padding_NAMEEND_VAL temp278_14)))
(assert (= temp278_16 #x0000000000000003))
(assert (= temp278_17 temp278_16))
(assert (= temp278_18 (select ARGNAME_padding_NAMEEND_VAL temp278_17)))
(assert (= temp278_19 #x0000000000000004))
(assert (= temp278_20 temp278_19))
(assert (= temp278_21 (select ARGNAME_padding_NAMEEND_VAL temp278_20)))
(assert (= temp278_22 #x0000000000000005))
(assert (= temp278_23 temp278_22))
(assert (= temp278_24 (select ARGNAME_padding_NAMEEND_VAL temp278_23)))
(assert (= temp278_25 #x0000000000000000))
(assert (= temp278_26 #x0000000000000000))
(assert (= temp278_27 temp278_26))
(assert (= temp278_28 (select ARGNAME_padding_NAMEEND_VAL temp278_27)))
(assert (= temp278_29 #x0000000000000000))
(assert (= temp278_30 #x0000000000000001))
(assert (= temp278_31 temp278_30))
(assert (= temp278_32 (select ARGNAME_padding_NAMEEND_VAL temp278_31)))
(assert (= temp278_33 #x0000000000000000))
(assert (= temp278_34 #x0000000000000002))
(assert (= temp278_35 temp278_34))
(assert (= temp278_36 (select ARGNAME_padding_NAMEEND_VAL temp278_35)))
(assert (= temp278_37 #x0000000000000000))
(assert (= temp278_38 #x0000000000000003))
(assert (= temp278_39 temp278_38))
(assert (= temp278_40 (select ARGNAME_padding_NAMEEND_VAL temp278_39)))
(assert (= temp278_41 #x0000000000000000))
(assert (= temp278_42 #x0000000000000004))
(assert (= temp278_43 temp278_42))
(assert (= temp278_44 (select ARGNAME_padding_NAMEEND_VAL temp278_43)))
(assert (= temp278_45 #x0000000000000000))
(assert (= temp278_46 #x0000000000000005))
(assert (= temp278_47 temp278_46))
(assert (= temp278_48 (select ARGNAME_padding_NAMEEND_VAL temp278_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp278_28 temp278_25)
             (bvslt temp278_32 temp278_29)
             (bvslt temp278_36 temp278_33)
             (bvslt temp278_40 temp278_37)
             (bvslt temp278_44 temp278_41)
             (bvslt temp278_48 temp278_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp278_49 #x0000000000000000))
(assert (= var1191714 temp278_49))
(assert (= temp278_50 #x0000000000000000))
(assert (= temp278_51 temp278_50))
(assert (= temp278_52 (select ARGNAME_output_padding_NAMEEND_VAL temp278_51)))
(assert (= temp278_53 #x0000000000000001))
(assert (= temp278_54 temp278_53))
(assert (= temp278_55 (select ARGNAME_output_padding_NAMEEND_VAL temp278_54)))
(assert (= temp278_56 #x0000000000000002))
(assert (= temp278_57 temp278_56))
(assert (= temp278_58 (select ARGNAME_output_padding_NAMEEND_VAL temp278_57)))
(assert (= temp278_59 #x0000000000000003))
(assert (= temp278_60 temp278_59))
(assert (= temp278_61 (select ARGNAME_output_padding_NAMEEND_VAL temp278_60)))
(assert (= temp278_62 #x0000000000000004))
(assert (= temp278_63 temp278_62))
(assert (= temp278_64 (select ARGNAME_output_padding_NAMEEND_VAL temp278_63)))
(assert (= temp278_65 #x0000000000000005))
(assert (= temp278_66 temp278_65))
(assert (= temp278_67 (select ARGNAME_output_padding_NAMEEND_VAL temp278_66)))
(assert (= temp278_68 #x0000000000000000))
(assert (= temp278_69 #x0000000000000000))
(assert (= temp278_70 temp278_69))
(assert (= temp278_71 (select ARGNAME_output_padding_NAMEEND_VAL temp278_70)))
(assert (= temp278_72 #x0000000000000000))
(assert (= temp278_73 #x0000000000000001))
(assert (= temp278_74 temp278_73))
(assert (= temp278_75 (select ARGNAME_output_padding_NAMEEND_VAL temp278_74)))
(assert (= temp278_76 #x0000000000000000))
(assert (= temp278_77 #x0000000000000002))
(assert (= temp278_78 temp278_77))
(assert (= temp278_79 (select ARGNAME_output_padding_NAMEEND_VAL temp278_78)))
(assert (= temp278_80 #x0000000000000000))
(assert (= temp278_81 #x0000000000000003))
(assert (= temp278_82 temp278_81))
(assert (= temp278_83 (select ARGNAME_output_padding_NAMEEND_VAL temp278_82)))
(assert (= temp278_84 #x0000000000000000))
(assert (= temp278_85 #x0000000000000004))
(assert (= temp278_86 temp278_85))
(assert (= temp278_87 (select ARGNAME_output_padding_NAMEEND_VAL temp278_86)))
(assert (= temp278_88 #x0000000000000000))
(assert (= temp278_89 #x0000000000000005))
(assert (= temp278_90 temp278_89))
(assert (= temp278_91 (select ARGNAME_output_padding_NAMEEND_VAL temp278_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp278_71 temp278_68)
             (bvslt temp278_75 temp278_72)
             (bvslt temp278_79 temp278_76)
             (bvslt temp278_83 temp278_80)
             (bvslt temp278_87 temp278_84)
             (bvslt temp278_91 temp278_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp278_92 #x0000000000000000))
(assert (= var1191725 temp278_92))
(assert (= temp278_93 #x0000000000000000))
(assert (= temp278_94 temp278_93))
(assert (= temp278_95 (select ARGNAME_stride_NAMEEND_VAL temp278_94)))
(assert (= temp278_96 #x0000000000000001))
(assert (= temp278_97 temp278_96))
(assert (= temp278_98 (select ARGNAME_stride_NAMEEND_VAL temp278_97)))
(assert (= temp278_99 #x0000000000000002))
(assert (= temp278_100 temp278_99))
(assert (= temp278_101 (select ARGNAME_stride_NAMEEND_VAL temp278_100)))
(assert (= temp278_102 #x0000000000000003))
(assert (= temp278_103 temp278_102))
(assert (= temp278_104 (select ARGNAME_stride_NAMEEND_VAL temp278_103)))
(assert (= temp278_105 #x0000000000000004))
(assert (= temp278_106 temp278_105))
(assert (= temp278_107 (select ARGNAME_stride_NAMEEND_VAL temp278_106)))
(assert (= temp278_108 #x0000000000000005))
(assert (= temp278_109 temp278_108))
(assert (= temp278_110 (select ARGNAME_stride_NAMEEND_VAL temp278_109)))
(assert (= temp278_111 #x0000000000000000))
(assert (= temp278_112 #x0000000000000000))
(assert (= temp278_113 temp278_112))
(assert (= temp278_114 (select ARGNAME_stride_NAMEEND_VAL temp278_113)))
(assert (= temp278_115 #x0000000000000000))
(assert (= temp278_116 #x0000000000000001))
(assert (= temp278_117 temp278_116))
(assert (= temp278_118 (select ARGNAME_stride_NAMEEND_VAL temp278_117)))
(assert (= temp278_119 #x0000000000000000))
(assert (= temp278_120 #x0000000000000002))
(assert (= temp278_121 temp278_120))
(assert (= temp278_122 (select ARGNAME_stride_NAMEEND_VAL temp278_121)))
(assert (= temp278_123 #x0000000000000000))
(assert (= temp278_124 #x0000000000000003))
(assert (= temp278_125 temp278_124))
(assert (= temp278_126 (select ARGNAME_stride_NAMEEND_VAL temp278_125)))
(assert (= temp278_127 #x0000000000000000))
(assert (= temp278_128 #x0000000000000004))
(assert (= temp278_129 temp278_128))
(assert (= temp278_130 (select ARGNAME_stride_NAMEEND_VAL temp278_129)))
(assert (= temp278_131 #x0000000000000000))
(assert (= temp278_132 #x0000000000000005))
(assert (= temp278_133 temp278_132))
(assert (= temp278_134 (select ARGNAME_stride_NAMEEND_VAL temp278_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp278_114 temp278_111)
             (bvsle temp278_118 temp278_115)
             (bvsle temp278_122 temp278_119)
             (bvsle temp278_126 temp278_123)
             (bvsle temp278_130 temp278_127)
             (bvsle temp278_134 temp278_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp278_135 #x0000000000000000))
(assert (= var1191735 temp278_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp278_136 #x0000000000000001))
(assert (= var1191747 temp278_136))
(assert (= temp278_137 #x0000000000000000))
(assert (= var1179826 temp278_137))
(assert (= temp278_138 #x0000000000000000))
(assert (= temp278_139 temp278_138))
(assert (= temp278_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp278_139)))
(assert (= temp278_141 #x0000000000000001))
(assert (= temp278_142 temp278_141))
(assert (= temp278_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp278_142)))
(assert (= temp278_144 #x0000000000000002))
(assert (= temp278_145 temp278_144))
(assert (= temp278_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp278_145)))
(assert (= temp278_147 #x0000000000000003))
(assert (= temp278_148 temp278_147))
(assert (= temp278_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp278_148)))
(assert (= temp278_150 #x0000000000000004))
(assert (= temp278_151 temp278_150))
(assert (= temp278_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp278_151)))
(assert (= temp278_153 #x0000000000000005))
(assert (= temp278_154 temp278_153))
(assert (= temp278_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp278_154)))
(assert (= temp278_157 var1179826))
(assert (= temp278_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp278_157)))
(assert (= temp278_156 temp278_158))
(assert (= var1191780
   (ite (bvslt temp278_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp278_159 #x0000000000000000))
(assert (= var1191780 temp278_159))
(assert (= temp278_160 #x0000000000000000))
(assert (= var1179826 temp278_160))
(assert (= temp278_162 var1179826))
(assert (= temp278_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp278_162)))
(assert (= temp278_161 temp278_163))
(assert (= var1191802 (bvsmod temp278_161 ARGNAME_groups_NAMEEND)))
(assert (= temp278_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp278_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp278_165 #x0000000000000001))
(assert (= var1191803 temp278_165))
(assert (= temp278_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp278_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp278_167 #x0000000000000001))
(assert (= var1191823 temp278_167))
(assert (= temp278_168 #x0000000000000001))
(assert (= var1180714 temp278_168))
(assert (= temp278_169 #x0000000000000000))
(assert (= temp278_170 temp278_169))
(assert (= temp278_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp278_170)))
(assert (= temp278_172 #x0000000000000001))
(assert (= temp278_173 temp278_172))
(assert (= temp278_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp278_173)))
(assert (= temp278_175 #x0000000000000002))
(assert (= temp278_176 temp278_175))
(assert (= temp278_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp278_176)))
(assert (= temp278_178 #x0000000000000003))
(assert (= temp278_179 temp278_178))
(assert (= temp278_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp278_179)))
(assert (= temp278_181 #x0000000000000004))
(assert (= temp278_182 temp278_181))
(assert (= temp278_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp278_182)))
(assert (= temp278_184 #x0000000000000005))
(assert (= temp278_185 temp278_184))
(assert (= temp278_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp278_185)))
(assert (= temp278_187 #x0000000000000000))
(assert (= temp278_188
   (ite (bvslt var1180714 temp278_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp278_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp278_188)))
(assert (= var1191831 temp278_189))
(assert (bvslt (ite (bvslt var1180714 temp278_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp278_190 #x0000000000000001))
(assert (= var1180714 temp278_190))
(assert (= temp278_192 var1180714))
(assert (= temp278_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp278_192)))
(assert (= temp278_191 temp278_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp278_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp278_194 #x0000000000000001))
(assert (= var1191836 temp278_194))
(assert (= temp278_195 #x0000000000000000))
(assert (= var1179826 temp278_195))
(assert (= temp278_197 var1179826))
(assert (= temp278_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp278_197)))
(assert (= temp278_196 temp278_198))
(assert (= temp278_199 #x0000000000000002))
(assert (= var1586025 temp278_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp278_200 #x0000000000000001))
(assert (= var1191993 temp278_200))
(assert (= temp278_201 #x0000000000000001))
(assert (= var2700303 temp278_201))
(assert (= temp278_202 #x0000000000000001))
(assert (= var2962447 temp278_202))
(assert (= temp278_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp278_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp278_204 #x0000000000000001))
(assert (= var211058 temp278_204))
(assert (= temp278_205 #x0000000000000001))
(assert (= var211188 temp278_205))
(assert (= var3879401 var211188))
(assert (= temp278_206 #x0000000000000000))
(assert (= var3866802 temp278_206))
(assert (= temp278_207 #x0000000000000000))
(assert (= temp278_208
   (ite (bvslt var3866802 temp278_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp278_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp278_208)))
(assert (= var3879420 temp278_209))
(assert (bvslt (ite (bvslt var3866802 temp278_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp278_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp278_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp278_211 #x0000000000000001))
(assert (= var3879421 temp278_211))
(assert (= temp278_212 #x0000000000000000))
(assert (= var4079423 temp278_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp278_213 #x0000000000000002))
(assert (= var4208259 temp278_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp278_214 #x0000000000000000))
(assert (= var4273820 temp278_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var5058960 var211201))
(assert (= var5321104 var211201))
(assert (= temp278_215 #x0000000000000001))
(assert (= var211058 temp278_215))
(model-add temp278_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp278_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp278_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp278_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))



