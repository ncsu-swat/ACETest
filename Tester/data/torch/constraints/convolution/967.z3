(declare-fun temp1289_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp1289_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1289_3 () (_ BitVec 64))
(declare-fun temp1289_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1289_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp1289_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1289_7 () (_ BitVec 64))
(declare-fun temp1289_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1289_9 () (_ BitVec 64))
(declare-fun temp1289_10 () (_ BitVec 64))
(declare-fun temp1289_11 () (_ BitVec 64))
(declare-fun temp1289_12 () (_ BitVec 64))
(declare-fun temp1289_13 () (_ BitVec 64))
(declare-fun temp1289_14 () (_ BitVec 64))
(declare-fun temp1289_15 () (_ BitVec 64))
(declare-fun temp1289_16 () (_ BitVec 64))
(declare-fun temp1289_17 () (_ BitVec 64))
(declare-fun temp1289_18 () (_ BitVec 64))
(declare-fun temp1289_19 () (_ BitVec 64))
(declare-fun temp1289_20 () (_ BitVec 64))
(declare-fun temp1289_21 () (_ BitVec 64))
(declare-fun temp1289_22 () (_ BitVec 64))
(declare-fun temp1289_23 () (_ BitVec 64))
(declare-fun temp1289_24 () (_ BitVec 64))
(declare-fun temp1289_25 () (_ BitVec 64))
(declare-fun temp1289_26 () (_ BitVec 64))
(declare-fun temp1289_27 () (_ BitVec 64))
(declare-fun temp1289_28 () (_ BitVec 64))
(declare-fun temp1289_29 () (_ BitVec 64))
(declare-fun temp1289_30 () (_ BitVec 64))
(declare-fun temp1289_31 () (_ BitVec 64))
(declare-fun temp1289_32 () (_ BitVec 64))
(declare-fun temp1289_33 () (_ BitVec 64))
(declare-fun temp1289_34 () (_ BitVec 64))
(declare-fun temp1289_35 () (_ BitVec 64))
(declare-fun temp1289_36 () (_ BitVec 64))
(declare-fun temp1289_37 () (_ BitVec 64))
(declare-fun temp1289_38 () (_ BitVec 64))
(declare-fun temp1289_39 () (_ BitVec 64))
(declare-fun temp1289_40 () (_ BitVec 64))
(declare-fun temp1289_41 () (_ BitVec 64))
(declare-fun temp1289_42 () (_ BitVec 64))
(declare-fun temp1289_43 () (_ BitVec 64))
(declare-fun temp1289_44 () (_ BitVec 64))
(declare-fun temp1289_45 () (_ BitVec 64))
(declare-fun temp1289_46 () (_ BitVec 64))
(declare-fun temp1289_47 () (_ BitVec 64))
(declare-fun temp1289_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp1289_49 () (_ BitVec 64))
(declare-fun temp1289_50 () (_ BitVec 64))
(declare-fun temp1289_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1289_52 () (_ BitVec 64))
(declare-fun temp1289_53 () (_ BitVec 64))
(declare-fun temp1289_54 () (_ BitVec 64))
(declare-fun temp1289_55 () (_ BitVec 64))
(declare-fun temp1289_56 () (_ BitVec 64))
(declare-fun temp1289_57 () (_ BitVec 64))
(declare-fun temp1289_58 () (_ BitVec 64))
(declare-fun temp1289_59 () (_ BitVec 64))
(declare-fun temp1289_60 () (_ BitVec 64))
(declare-fun temp1289_61 () (_ BitVec 64))
(declare-fun temp1289_62 () (_ BitVec 64))
(declare-fun temp1289_63 () (_ BitVec 64))
(declare-fun temp1289_64 () (_ BitVec 64))
(declare-fun temp1289_65 () (_ BitVec 64))
(declare-fun temp1289_66 () (_ BitVec 64))
(declare-fun temp1289_67 () (_ BitVec 64))
(declare-fun temp1289_68 () (_ BitVec 64))
(declare-fun temp1289_69 () (_ BitVec 64))
(declare-fun temp1289_70 () (_ BitVec 64))
(declare-fun temp1289_71 () (_ BitVec 64))
(declare-fun temp1289_72 () (_ BitVec 64))
(declare-fun temp1289_73 () (_ BitVec 64))
(declare-fun temp1289_74 () (_ BitVec 64))
(declare-fun temp1289_75 () (_ BitVec 64))
(declare-fun temp1289_76 () (_ BitVec 64))
(declare-fun temp1289_77 () (_ BitVec 64))
(declare-fun temp1289_78 () (_ BitVec 64))
(declare-fun temp1289_79 () (_ BitVec 64))
(declare-fun temp1289_80 () (_ BitVec 64))
(declare-fun temp1289_81 () (_ BitVec 64))
(declare-fun temp1289_82 () (_ BitVec 64))
(declare-fun temp1289_83 () (_ BitVec 64))
(declare-fun temp1289_84 () (_ BitVec 64))
(declare-fun temp1289_85 () (_ BitVec 64))
(declare-fun temp1289_86 () (_ BitVec 64))
(declare-fun temp1289_87 () (_ BitVec 64))
(declare-fun temp1289_88 () (_ BitVec 64))
(declare-fun temp1289_89 () (_ BitVec 64))
(declare-fun temp1289_90 () (_ BitVec 64))
(declare-fun temp1289_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp1289_92 () (_ BitVec 64))
(declare-fun temp1289_93 () (_ BitVec 64))
(declare-fun temp1289_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1289_95 () (_ BitVec 64))
(declare-fun temp1289_96 () (_ BitVec 64))
(declare-fun temp1289_97 () (_ BitVec 64))
(declare-fun temp1289_98 () (_ BitVec 64))
(declare-fun temp1289_99 () (_ BitVec 64))
(declare-fun temp1289_100 () (_ BitVec 64))
(declare-fun temp1289_101 () (_ BitVec 64))
(declare-fun temp1289_102 () (_ BitVec 64))
(declare-fun temp1289_103 () (_ BitVec 64))
(declare-fun temp1289_104 () (_ BitVec 64))
(declare-fun temp1289_105 () (_ BitVec 64))
(declare-fun temp1289_106 () (_ BitVec 64))
(declare-fun temp1289_107 () (_ BitVec 64))
(declare-fun temp1289_108 () (_ BitVec 64))
(declare-fun temp1289_109 () (_ BitVec 64))
(declare-fun temp1289_110 () (_ BitVec 64))
(declare-fun temp1289_111 () (_ BitVec 64))
(declare-fun temp1289_112 () (_ BitVec 64))
(declare-fun temp1289_113 () (_ BitVec 64))
(declare-fun temp1289_114 () (_ BitVec 64))
(declare-fun temp1289_115 () (_ BitVec 64))
(declare-fun temp1289_116 () (_ BitVec 64))
(declare-fun temp1289_117 () (_ BitVec 64))
(declare-fun temp1289_118 () (_ BitVec 64))
(declare-fun temp1289_119 () (_ BitVec 64))
(declare-fun temp1289_120 () (_ BitVec 64))
(declare-fun temp1289_121 () (_ BitVec 64))
(declare-fun temp1289_122 () (_ BitVec 64))
(declare-fun temp1289_123 () (_ BitVec 64))
(declare-fun temp1289_124 () (_ BitVec 64))
(declare-fun temp1289_125 () (_ BitVec 64))
(declare-fun temp1289_126 () (_ BitVec 64))
(declare-fun temp1289_127 () (_ BitVec 64))
(declare-fun temp1289_128 () (_ BitVec 64))
(declare-fun temp1289_129 () (_ BitVec 64))
(declare-fun temp1289_130 () (_ BitVec 64))
(declare-fun temp1289_131 () (_ BitVec 64))
(declare-fun temp1289_132 () (_ BitVec 64))
(declare-fun temp1289_133 () (_ BitVec 64))
(declare-fun temp1289_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp1289_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp1289_136 () (_ BitVec 64))
(declare-fun temp1289_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp1289_138 () (_ BitVec 64))
(declare-fun temp1289_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1289_140 () (_ BitVec 64))
(declare-fun temp1289_141 () (_ BitVec 64))
(declare-fun temp1289_142 () (_ BitVec 64))
(declare-fun temp1289_143 () (_ BitVec 64))
(declare-fun temp1289_144 () (_ BitVec 64))
(declare-fun temp1289_145 () (_ BitVec 64))
(declare-fun temp1289_146 () (_ BitVec 64))
(declare-fun temp1289_147 () (_ BitVec 64))
(declare-fun temp1289_148 () (_ BitVec 64))
(declare-fun temp1289_149 () (_ BitVec 64))
(declare-fun temp1289_150 () (_ BitVec 64))
(declare-fun temp1289_151 () (_ BitVec 64))
(declare-fun temp1289_152 () (_ BitVec 64))
(declare-fun temp1289_153 () (_ BitVec 64))
(declare-fun temp1289_154 () (_ BitVec 64))
(declare-fun temp1289_155 () (_ BitVec 64))
(declare-fun temp1289_157 () (_ BitVec 64))
(declare-fun temp1289_158 () (_ BitVec 64))
(declare-fun temp1289_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp1289_159 () (_ BitVec 64))
(declare-fun temp1289_160 () (_ BitVec 64))
(declare-fun temp1289_162 () (_ BitVec 64))
(declare-fun temp1289_163 () (_ BitVec 64))
(declare-fun temp1289_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp1289_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp1289_165 () (_ BitVec 64))
(declare-fun temp1289_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp1289_167 () (_ BitVec 64))
(declare-fun temp1289_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp1289_169 () (_ BitVec 64))
(declare-fun temp1289_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1289_171 () (_ BitVec 64))
(declare-fun temp1289_172 () (_ BitVec 64))
(declare-fun temp1289_173 () (_ BitVec 64))
(declare-fun temp1289_174 () (_ BitVec 64))
(declare-fun temp1289_175 () (_ BitVec 64))
(declare-fun temp1289_176 () (_ BitVec 64))
(declare-fun temp1289_177 () (_ BitVec 64))
(declare-fun temp1289_178 () (_ BitVec 64))
(declare-fun temp1289_179 () (_ BitVec 64))
(declare-fun temp1289_180 () (_ BitVec 64))
(declare-fun temp1289_181 () (_ BitVec 64))
(declare-fun temp1289_182 () (_ BitVec 64))
(declare-fun temp1289_183 () (_ BitVec 64))
(declare-fun temp1289_184 () (_ BitVec 64))
(declare-fun temp1289_185 () (_ BitVec 64))
(declare-fun temp1289_186 () (_ BitVec 64))
(declare-fun temp1289_187 () (_ BitVec 64))
(declare-fun temp1289_188 () (_ BitVec 64))
(declare-fun temp1289_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp1289_190 () (_ BitVec 64))
(declare-fun temp1289_192 () (_ BitVec 64))
(declare-fun temp1289_193 () (_ BitVec 64))
(declare-fun temp1289_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp1289_194 () (_ BitVec 64))
(declare-fun temp1289_195 () (_ BitVec 64))
(declare-fun temp1289_197 () (_ BitVec 64))
(declare-fun temp1289_198 () (_ BitVec 64))
(declare-fun temp1289_196 () (_ BitVec 64))
(declare-fun temp1289_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp1289_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp1289_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp1289_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp1289_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp1289_204 () (_ BitVec 64))
(declare-fun temp1289_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp1289_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp1289_207 () (_ BitVec 64))
(declare-fun temp1289_208 () (_ BitVec 64))
(declare-fun temp1289_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp1289_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp1289_211 () (_ BitVec 64))
(declare-fun temp1289_212 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp1289_213 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp1289_214 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp1289_216 () (_ BitVec 64))
(declare-fun temp1289_215 () (_ BitVec 64))
(declare-fun temp1289_217 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp1289_218 () (_ BitVec 64))
(declare-fun temp1289_219 () (_ BitVec 64))
(declare-fun temp1289_220 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp1289_221 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp1289_222 () (_ BitVec 64))
(declare-fun temp1289_224 () (_ BitVec 64))
(declare-fun temp1289_223 () (_ BitVec 64))
(declare-fun temp1289_225 () (_ BitVec 64))
(assert (= temp1289_1 #x0000000000000001))
(assert (= var77203 temp1289_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp1289_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp1289_2)))
(assert (= temp1289_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1289_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1289_4 #x0000000000000000))
(assert (= var210941 temp1289_4))
(assert (= temp1289_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp1289_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1289_6 #x0000000000000000))
(assert (= var210986 temp1289_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp1289_7 #x0000000000000000))
(assert (= temp1289_8 temp1289_7))
(assert (= temp1289_9 (select ARGNAME_padding_NAMEEND_VAL temp1289_8)))
(assert (= temp1289_10 #x0000000000000001))
(assert (= temp1289_11 temp1289_10))
(assert (= temp1289_12 (select ARGNAME_padding_NAMEEND_VAL temp1289_11)))
(assert (= temp1289_13 #x0000000000000002))
(assert (= temp1289_14 temp1289_13))
(assert (= temp1289_15 (select ARGNAME_padding_NAMEEND_VAL temp1289_14)))
(assert (= temp1289_16 #x0000000000000003))
(assert (= temp1289_17 temp1289_16))
(assert (= temp1289_18 (select ARGNAME_padding_NAMEEND_VAL temp1289_17)))
(assert (= temp1289_19 #x0000000000000004))
(assert (= temp1289_20 temp1289_19))
(assert (= temp1289_21 (select ARGNAME_padding_NAMEEND_VAL temp1289_20)))
(assert (= temp1289_22 #x0000000000000005))
(assert (= temp1289_23 temp1289_22))
(assert (= temp1289_24 (select ARGNAME_padding_NAMEEND_VAL temp1289_23)))
(assert (= temp1289_25 #x0000000000000000))
(assert (= temp1289_26 #x0000000000000000))
(assert (= temp1289_27 temp1289_26))
(assert (= temp1289_28 (select ARGNAME_padding_NAMEEND_VAL temp1289_27)))
(assert (= temp1289_29 #x0000000000000000))
(assert (= temp1289_30 #x0000000000000001))
(assert (= temp1289_31 temp1289_30))
(assert (= temp1289_32 (select ARGNAME_padding_NAMEEND_VAL temp1289_31)))
(assert (= temp1289_33 #x0000000000000000))
(assert (= temp1289_34 #x0000000000000002))
(assert (= temp1289_35 temp1289_34))
(assert (= temp1289_36 (select ARGNAME_padding_NAMEEND_VAL temp1289_35)))
(assert (= temp1289_37 #x0000000000000000))
(assert (= temp1289_38 #x0000000000000003))
(assert (= temp1289_39 temp1289_38))
(assert (= temp1289_40 (select ARGNAME_padding_NAMEEND_VAL temp1289_39)))
(assert (= temp1289_41 #x0000000000000000))
(assert (= temp1289_42 #x0000000000000004))
(assert (= temp1289_43 temp1289_42))
(assert (= temp1289_44 (select ARGNAME_padding_NAMEEND_VAL temp1289_43)))
(assert (= temp1289_45 #x0000000000000000))
(assert (= temp1289_46 #x0000000000000005))
(assert (= temp1289_47 temp1289_46))
(assert (= temp1289_48 (select ARGNAME_padding_NAMEEND_VAL temp1289_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp1289_28 temp1289_25)
             (bvslt temp1289_32 temp1289_29)
             (bvslt temp1289_36 temp1289_33)
             (bvslt temp1289_40 temp1289_37)
             (bvslt temp1289_44 temp1289_41)
             (bvslt temp1289_48 temp1289_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1289_49 #x0000000000000000))
(assert (= var1191714 temp1289_49))
(assert (= temp1289_50 #x0000000000000000))
(assert (= temp1289_51 temp1289_50))
(assert (= temp1289_52 (select ARGNAME_output_padding_NAMEEND_VAL temp1289_51)))
(assert (= temp1289_53 #x0000000000000001))
(assert (= temp1289_54 temp1289_53))
(assert (= temp1289_55 (select ARGNAME_output_padding_NAMEEND_VAL temp1289_54)))
(assert (= temp1289_56 #x0000000000000002))
(assert (= temp1289_57 temp1289_56))
(assert (= temp1289_58 (select ARGNAME_output_padding_NAMEEND_VAL temp1289_57)))
(assert (= temp1289_59 #x0000000000000003))
(assert (= temp1289_60 temp1289_59))
(assert (= temp1289_61 (select ARGNAME_output_padding_NAMEEND_VAL temp1289_60)))
(assert (= temp1289_62 #x0000000000000004))
(assert (= temp1289_63 temp1289_62))
(assert (= temp1289_64 (select ARGNAME_output_padding_NAMEEND_VAL temp1289_63)))
(assert (= temp1289_65 #x0000000000000005))
(assert (= temp1289_66 temp1289_65))
(assert (= temp1289_67 (select ARGNAME_output_padding_NAMEEND_VAL temp1289_66)))
(assert (= temp1289_68 #x0000000000000000))
(assert (= temp1289_69 #x0000000000000000))
(assert (= temp1289_70 temp1289_69))
(assert (= temp1289_71 (select ARGNAME_output_padding_NAMEEND_VAL temp1289_70)))
(assert (= temp1289_72 #x0000000000000000))
(assert (= temp1289_73 #x0000000000000001))
(assert (= temp1289_74 temp1289_73))
(assert (= temp1289_75 (select ARGNAME_output_padding_NAMEEND_VAL temp1289_74)))
(assert (= temp1289_76 #x0000000000000000))
(assert (= temp1289_77 #x0000000000000002))
(assert (= temp1289_78 temp1289_77))
(assert (= temp1289_79 (select ARGNAME_output_padding_NAMEEND_VAL temp1289_78)))
(assert (= temp1289_80 #x0000000000000000))
(assert (= temp1289_81 #x0000000000000003))
(assert (= temp1289_82 temp1289_81))
(assert (= temp1289_83 (select ARGNAME_output_padding_NAMEEND_VAL temp1289_82)))
(assert (= temp1289_84 #x0000000000000000))
(assert (= temp1289_85 #x0000000000000004))
(assert (= temp1289_86 temp1289_85))
(assert (= temp1289_87 (select ARGNAME_output_padding_NAMEEND_VAL temp1289_86)))
(assert (= temp1289_88 #x0000000000000000))
(assert (= temp1289_89 #x0000000000000005))
(assert (= temp1289_90 temp1289_89))
(assert (= temp1289_91 (select ARGNAME_output_padding_NAMEEND_VAL temp1289_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp1289_71 temp1289_68)
             (bvslt temp1289_75 temp1289_72)
             (bvslt temp1289_79 temp1289_76)
             (bvslt temp1289_83 temp1289_80)
             (bvslt temp1289_87 temp1289_84)
             (bvslt temp1289_91 temp1289_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1289_92 #x0000000000000000))
(assert (= var1191725 temp1289_92))
(assert (= temp1289_93 #x0000000000000000))
(assert (= temp1289_94 temp1289_93))
(assert (= temp1289_95 (select ARGNAME_stride_NAMEEND_VAL temp1289_94)))
(assert (= temp1289_96 #x0000000000000001))
(assert (= temp1289_97 temp1289_96))
(assert (= temp1289_98 (select ARGNAME_stride_NAMEEND_VAL temp1289_97)))
(assert (= temp1289_99 #x0000000000000002))
(assert (= temp1289_100 temp1289_99))
(assert (= temp1289_101 (select ARGNAME_stride_NAMEEND_VAL temp1289_100)))
(assert (= temp1289_102 #x0000000000000003))
(assert (= temp1289_103 temp1289_102))
(assert (= temp1289_104 (select ARGNAME_stride_NAMEEND_VAL temp1289_103)))
(assert (= temp1289_105 #x0000000000000004))
(assert (= temp1289_106 temp1289_105))
(assert (= temp1289_107 (select ARGNAME_stride_NAMEEND_VAL temp1289_106)))
(assert (= temp1289_108 #x0000000000000005))
(assert (= temp1289_109 temp1289_108))
(assert (= temp1289_110 (select ARGNAME_stride_NAMEEND_VAL temp1289_109)))
(assert (= temp1289_111 #x0000000000000000))
(assert (= temp1289_112 #x0000000000000000))
(assert (= temp1289_113 temp1289_112))
(assert (= temp1289_114 (select ARGNAME_stride_NAMEEND_VAL temp1289_113)))
(assert (= temp1289_115 #x0000000000000000))
(assert (= temp1289_116 #x0000000000000001))
(assert (= temp1289_117 temp1289_116))
(assert (= temp1289_118 (select ARGNAME_stride_NAMEEND_VAL temp1289_117)))
(assert (= temp1289_119 #x0000000000000000))
(assert (= temp1289_120 #x0000000000000002))
(assert (= temp1289_121 temp1289_120))
(assert (= temp1289_122 (select ARGNAME_stride_NAMEEND_VAL temp1289_121)))
(assert (= temp1289_123 #x0000000000000000))
(assert (= temp1289_124 #x0000000000000003))
(assert (= temp1289_125 temp1289_124))
(assert (= temp1289_126 (select ARGNAME_stride_NAMEEND_VAL temp1289_125)))
(assert (= temp1289_127 #x0000000000000000))
(assert (= temp1289_128 #x0000000000000004))
(assert (= temp1289_129 temp1289_128))
(assert (= temp1289_130 (select ARGNAME_stride_NAMEEND_VAL temp1289_129)))
(assert (= temp1289_131 #x0000000000000000))
(assert (= temp1289_132 #x0000000000000005))
(assert (= temp1289_133 temp1289_132))
(assert (= temp1289_134 (select ARGNAME_stride_NAMEEND_VAL temp1289_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp1289_114 temp1289_111)
             (bvsle temp1289_118 temp1289_115)
             (bvsle temp1289_122 temp1289_119)
             (bvsle temp1289_126 temp1289_123)
             (bvsle temp1289_130 temp1289_127)
             (bvsle temp1289_134 temp1289_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1289_135 #x0000000000000000))
(assert (= var1191735 temp1289_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1289_136 #x0000000000000001))
(assert (= var1191747 temp1289_136))
(assert (= temp1289_137 #x0000000000000000))
(assert (= var1179826 temp1289_137))
(assert (= temp1289_138 #x0000000000000000))
(assert (= temp1289_139 temp1289_138))
(assert (= temp1289_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1289_139)))
(assert (= temp1289_141 #x0000000000000001))
(assert (= temp1289_142 temp1289_141))
(assert (= temp1289_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1289_142)))
(assert (= temp1289_144 #x0000000000000002))
(assert (= temp1289_145 temp1289_144))
(assert (= temp1289_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1289_145)))
(assert (= temp1289_147 #x0000000000000003))
(assert (= temp1289_148 temp1289_147))
(assert (= temp1289_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1289_148)))
(assert (= temp1289_150 #x0000000000000004))
(assert (= temp1289_151 temp1289_150))
(assert (= temp1289_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1289_151)))
(assert (= temp1289_153 #x0000000000000005))
(assert (= temp1289_154 temp1289_153))
(assert (= temp1289_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1289_154)))
(assert (= temp1289_157 var1179826))
(assert (= temp1289_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1289_157)))
(assert (= temp1289_156 temp1289_158))
(assert (= var1191780
   (ite (bvslt temp1289_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1289_159 #x0000000000000000))
(assert (= var1191780 temp1289_159))
(assert (= temp1289_160 #x0000000000000000))
(assert (= var1179826 temp1289_160))
(assert (= temp1289_162 var1179826))
(assert (= temp1289_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1289_162)))
(assert (= temp1289_161 temp1289_163))
(assert (= var1191802 (bvsmod temp1289_161 ARGNAME_groups_NAMEEND)))
(assert (= temp1289_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp1289_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp1289_165 #x0000000000000001))
(assert (= var1191803 temp1289_165))
(assert (= temp1289_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp1289_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1289_167 #x0000000000000001))
(assert (= var1191823 temp1289_167))
(assert (= temp1289_168 #x0000000000000001))
(assert (= var1180714 temp1289_168))
(assert (= temp1289_169 #x0000000000000000))
(assert (= temp1289_170 temp1289_169))
(assert (= temp1289_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp1289_170)))
(assert (= temp1289_172 #x0000000000000001))
(assert (= temp1289_173 temp1289_172))
(assert (= temp1289_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp1289_173)))
(assert (= temp1289_175 #x0000000000000002))
(assert (= temp1289_176 temp1289_175))
(assert (= temp1289_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp1289_176)))
(assert (= temp1289_178 #x0000000000000003))
(assert (= temp1289_179 temp1289_178))
(assert (= temp1289_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp1289_179)))
(assert (= temp1289_181 #x0000000000000004))
(assert (= temp1289_182 temp1289_181))
(assert (= temp1289_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp1289_182)))
(assert (= temp1289_184 #x0000000000000005))
(assert (= temp1289_185 temp1289_184))
(assert (= temp1289_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp1289_185)))
(assert (= temp1289_187 #x0000000000000000))
(assert (= temp1289_188
   (ite (bvslt var1180714 temp1289_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp1289_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp1289_188)))
(assert (= var1191831 temp1289_189))
(assert (bvslt (ite (bvslt var1180714 temp1289_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1289_190 #x0000000000000001))
(assert (= var1180714 temp1289_190))
(assert (= temp1289_192 var1180714))
(assert (= temp1289_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1289_192)))
(assert (= temp1289_191 temp1289_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp1289_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp1289_194 #x0000000000000001))
(assert (= var1191836 temp1289_194))
(assert (= temp1289_195 #x0000000000000000))
(assert (= var1179826 temp1289_195))
(assert (= temp1289_197 var1179826))
(assert (= temp1289_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1289_197)))
(assert (= temp1289_196 temp1289_198))
(assert (= temp1289_199 #x0000000000000002))
(assert (= var1586025 temp1289_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp1289_200 #x0000000000000001))
(assert (= var1191993 temp1289_200))
(assert (= temp1289_201 #x0000000000000001))
(assert (= var2700303 temp1289_201))
(assert (= temp1289_202 #x0000000000000001))
(assert (= var2962447 temp1289_202))
(assert (= temp1289_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1289_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1289_204 #x0000000000000001))
(assert (= var211058 temp1289_204))
(assert (= temp1289_205 #x0000000000000001))
(assert (= var211188 temp1289_205))
(assert (= var3879401 var211188))
(assert (= temp1289_206 #x0000000000000000))
(assert (= var3866802 temp1289_206))
(assert (= temp1289_207 #x0000000000000000))
(assert (= temp1289_208
   (ite (bvslt var3866802 temp1289_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp1289_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp1289_208)))
(assert (= var3879420 temp1289_209))
(assert (bvslt (ite (bvslt var3866802 temp1289_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1289_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp1289_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp1289_211 #x0000000000000001))
(assert (= var3879421 temp1289_211))
(assert (= temp1289_212 #x0000000000000000))
(assert (= var4133117 temp1289_212))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp1289_213 #x0000000000000002))
(assert (= var4339331 temp1289_213))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1289_214 #x0000000000000000))
(assert (= var4404892 temp1289_214))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp1289_216 #xffffffffffffffff))
(assert (= temp1289_215 temp1289_216))
(assert (= temp1289_217 #x0000000000000001))
(assert (= var197674 temp1289_217))
(assert (= temp1289_218 #x0000000000000000))
(assert (= temp1289_219
   (ite (bvslt var197674 temp1289_218)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp1289_220 (select ARGNAME_input_NAMEEND_DIMSIZE temp1289_219)))
(assert (= var211595 temp1289_220))
(assert (bvslt (ite (bvslt var197674 temp1289_218)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1289_221 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp1289_221) #x0000000000000001 #x0000000000000000)))
(assert (= temp1289_222 #x0000000000000001))
(assert (= var211596 temp1289_222))
(assert (= temp1289_224 #xffffffffffffffff))
(assert (= temp1289_223 temp1289_224))
(assert (= temp1289_225 #x0000000000000001))
(assert (= var211058 temp1289_225))
(model-add temp1289_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp1289_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1289_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp1289_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





