(declare-fun temp10985_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10985_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10985_3 () (_ BitVec 64))
(declare-fun temp10985_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10985_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10985_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10985_7 () (_ BitVec 64))
(declare-fun temp10985_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10985_9 () (_ BitVec 64))
(declare-fun temp10985_10 () (_ BitVec 64))
(declare-fun temp10985_11 () (_ BitVec 64))
(declare-fun temp10985_12 () (_ BitVec 64))
(declare-fun temp10985_13 () (_ BitVec 64))
(declare-fun temp10985_14 () (_ BitVec 64))
(declare-fun temp10985_15 () (_ BitVec 64))
(declare-fun temp10985_16 () (_ BitVec 64))
(declare-fun temp10985_17 () (_ BitVec 64))
(declare-fun temp10985_18 () (_ BitVec 64))
(declare-fun temp10985_19 () (_ BitVec 64))
(declare-fun temp10985_20 () (_ BitVec 64))
(declare-fun temp10985_21 () (_ BitVec 64))
(declare-fun temp10985_22 () (_ BitVec 64))
(declare-fun temp10985_23 () (_ BitVec 64))
(declare-fun temp10985_24 () (_ BitVec 64))
(declare-fun temp10985_25 () (_ BitVec 64))
(declare-fun temp10985_26 () (_ BitVec 64))
(declare-fun temp10985_27 () (_ BitVec 64))
(declare-fun temp10985_28 () (_ BitVec 64))
(declare-fun temp10985_29 () (_ BitVec 64))
(declare-fun temp10985_30 () (_ BitVec 64))
(declare-fun temp10985_31 () (_ BitVec 64))
(declare-fun temp10985_32 () (_ BitVec 64))
(declare-fun temp10985_33 () (_ BitVec 64))
(declare-fun temp10985_34 () (_ BitVec 64))
(declare-fun temp10985_35 () (_ BitVec 64))
(declare-fun temp10985_36 () (_ BitVec 64))
(declare-fun temp10985_37 () (_ BitVec 64))
(declare-fun temp10985_38 () (_ BitVec 64))
(declare-fun temp10985_39 () (_ BitVec 64))
(declare-fun temp10985_40 () (_ BitVec 64))
(declare-fun temp10985_41 () (_ BitVec 64))
(declare-fun temp10985_42 () (_ BitVec 64))
(declare-fun temp10985_43 () (_ BitVec 64))
(declare-fun temp10985_44 () (_ BitVec 64))
(declare-fun temp10985_45 () (_ BitVec 64))
(declare-fun temp10985_46 () (_ BitVec 64))
(declare-fun temp10985_47 () (_ BitVec 64))
(declare-fun temp10985_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10985_49 () (_ BitVec 64))
(declare-fun temp10985_50 () (_ BitVec 64))
(declare-fun temp10985_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10985_52 () (_ BitVec 64))
(declare-fun temp10985_53 () (_ BitVec 64))
(declare-fun temp10985_54 () (_ BitVec 64))
(declare-fun temp10985_55 () (_ BitVec 64))
(declare-fun temp10985_56 () (_ BitVec 64))
(declare-fun temp10985_57 () (_ BitVec 64))
(declare-fun temp10985_58 () (_ BitVec 64))
(declare-fun temp10985_59 () (_ BitVec 64))
(declare-fun temp10985_60 () (_ BitVec 64))
(declare-fun temp10985_61 () (_ BitVec 64))
(declare-fun temp10985_62 () (_ BitVec 64))
(declare-fun temp10985_63 () (_ BitVec 64))
(declare-fun temp10985_64 () (_ BitVec 64))
(declare-fun temp10985_65 () (_ BitVec 64))
(declare-fun temp10985_66 () (_ BitVec 64))
(declare-fun temp10985_67 () (_ BitVec 64))
(declare-fun temp10985_68 () (_ BitVec 64))
(declare-fun temp10985_69 () (_ BitVec 64))
(declare-fun temp10985_70 () (_ BitVec 64))
(declare-fun temp10985_71 () (_ BitVec 64))
(declare-fun temp10985_72 () (_ BitVec 64))
(declare-fun temp10985_73 () (_ BitVec 64))
(declare-fun temp10985_74 () (_ BitVec 64))
(declare-fun temp10985_75 () (_ BitVec 64))
(declare-fun temp10985_76 () (_ BitVec 64))
(declare-fun temp10985_77 () (_ BitVec 64))
(declare-fun temp10985_78 () (_ BitVec 64))
(declare-fun temp10985_79 () (_ BitVec 64))
(declare-fun temp10985_80 () (_ BitVec 64))
(declare-fun temp10985_81 () (_ BitVec 64))
(declare-fun temp10985_82 () (_ BitVec 64))
(declare-fun temp10985_83 () (_ BitVec 64))
(declare-fun temp10985_84 () (_ BitVec 64))
(declare-fun temp10985_85 () (_ BitVec 64))
(declare-fun temp10985_86 () (_ BitVec 64))
(declare-fun temp10985_87 () (_ BitVec 64))
(declare-fun temp10985_88 () (_ BitVec 64))
(declare-fun temp10985_89 () (_ BitVec 64))
(declare-fun temp10985_90 () (_ BitVec 64))
(declare-fun temp10985_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10985_92 () (_ BitVec 64))
(declare-fun temp10985_93 () (_ BitVec 64))
(declare-fun temp10985_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10985_95 () (_ BitVec 64))
(declare-fun temp10985_96 () (_ BitVec 64))
(declare-fun temp10985_97 () (_ BitVec 64))
(declare-fun temp10985_98 () (_ BitVec 64))
(declare-fun temp10985_99 () (_ BitVec 64))
(declare-fun temp10985_100 () (_ BitVec 64))
(declare-fun temp10985_101 () (_ BitVec 64))
(declare-fun temp10985_102 () (_ BitVec 64))
(declare-fun temp10985_103 () (_ BitVec 64))
(declare-fun temp10985_104 () (_ BitVec 64))
(declare-fun temp10985_105 () (_ BitVec 64))
(declare-fun temp10985_106 () (_ BitVec 64))
(declare-fun temp10985_107 () (_ BitVec 64))
(declare-fun temp10985_108 () (_ BitVec 64))
(declare-fun temp10985_109 () (_ BitVec 64))
(declare-fun temp10985_110 () (_ BitVec 64))
(declare-fun temp10985_111 () (_ BitVec 64))
(declare-fun temp10985_112 () (_ BitVec 64))
(declare-fun temp10985_113 () (_ BitVec 64))
(declare-fun temp10985_114 () (_ BitVec 64))
(declare-fun temp10985_115 () (_ BitVec 64))
(declare-fun temp10985_116 () (_ BitVec 64))
(declare-fun temp10985_117 () (_ BitVec 64))
(declare-fun temp10985_118 () (_ BitVec 64))
(declare-fun temp10985_119 () (_ BitVec 64))
(declare-fun temp10985_120 () (_ BitVec 64))
(declare-fun temp10985_121 () (_ BitVec 64))
(declare-fun temp10985_122 () (_ BitVec 64))
(declare-fun temp10985_123 () (_ BitVec 64))
(declare-fun temp10985_124 () (_ BitVec 64))
(declare-fun temp10985_125 () (_ BitVec 64))
(declare-fun temp10985_126 () (_ BitVec 64))
(declare-fun temp10985_127 () (_ BitVec 64))
(declare-fun temp10985_128 () (_ BitVec 64))
(declare-fun temp10985_129 () (_ BitVec 64))
(declare-fun temp10985_130 () (_ BitVec 64))
(declare-fun temp10985_131 () (_ BitVec 64))
(declare-fun temp10985_132 () (_ BitVec 64))
(declare-fun temp10985_133 () (_ BitVec 64))
(declare-fun temp10985_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10985_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10985_136 () (_ BitVec 64))
(declare-fun temp10985_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10985_138 () (_ BitVec 64))
(declare-fun temp10985_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10985_140 () (_ BitVec 64))
(declare-fun temp10985_141 () (_ BitVec 64))
(declare-fun temp10985_142 () (_ BitVec 64))
(declare-fun temp10985_143 () (_ BitVec 64))
(declare-fun temp10985_144 () (_ BitVec 64))
(declare-fun temp10985_145 () (_ BitVec 64))
(declare-fun temp10985_146 () (_ BitVec 64))
(declare-fun temp10985_147 () (_ BitVec 64))
(declare-fun temp10985_148 () (_ BitVec 64))
(declare-fun temp10985_149 () (_ BitVec 64))
(declare-fun temp10985_150 () (_ BitVec 64))
(declare-fun temp10985_151 () (_ BitVec 64))
(declare-fun temp10985_152 () (_ BitVec 64))
(declare-fun temp10985_153 () (_ BitVec 64))
(declare-fun temp10985_154 () (_ BitVec 64))
(declare-fun temp10985_155 () (_ BitVec 64))
(declare-fun temp10985_157 () (_ BitVec 64))
(declare-fun temp10985_158 () (_ BitVec 64))
(declare-fun temp10985_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10985_159 () (_ BitVec 64))
(declare-fun temp10985_160 () (_ BitVec 64))
(declare-fun temp10985_162 () (_ BitVec 64))
(declare-fun temp10985_163 () (_ BitVec 64))
(declare-fun temp10985_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10985_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10985_165 () (_ BitVec 64))
(declare-fun temp10985_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10985_167 () (_ BitVec 64))
(declare-fun temp10985_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10985_169 () (_ BitVec 64))
(declare-fun temp10985_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10985_171 () (_ BitVec 64))
(declare-fun temp10985_172 () (_ BitVec 64))
(declare-fun temp10985_173 () (_ BitVec 64))
(declare-fun temp10985_174 () (_ BitVec 64))
(declare-fun temp10985_175 () (_ BitVec 64))
(declare-fun temp10985_176 () (_ BitVec 64))
(declare-fun temp10985_177 () (_ BitVec 64))
(declare-fun temp10985_178 () (_ BitVec 64))
(declare-fun temp10985_179 () (_ BitVec 64))
(declare-fun temp10985_180 () (_ BitVec 64))
(declare-fun temp10985_181 () (_ BitVec 64))
(declare-fun temp10985_182 () (_ BitVec 64))
(declare-fun temp10985_183 () (_ BitVec 64))
(declare-fun temp10985_184 () (_ BitVec 64))
(declare-fun temp10985_185 () (_ BitVec 64))
(declare-fun temp10985_186 () (_ BitVec 64))
(declare-fun temp10985_187 () (_ BitVec 64))
(declare-fun temp10985_188 () (_ BitVec 64))
(declare-fun temp10985_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10985_190 () (_ BitVec 64))
(declare-fun temp10985_192 () (_ BitVec 64))
(declare-fun temp10985_193 () (_ BitVec 64))
(declare-fun temp10985_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10985_194 () (_ BitVec 64))
(declare-fun temp10985_195 () (_ BitVec 64))
(declare-fun temp10985_197 () (_ BitVec 64))
(declare-fun temp10985_198 () (_ BitVec 64))
(declare-fun temp10985_196 () (_ BitVec 64))
(declare-fun temp10985_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10985_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10985_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10985_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10985_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10985_204 () (_ BitVec 64))
(declare-fun temp10985_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10985_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10985_207 () (_ BitVec 64))
(declare-fun temp10985_208 () (_ BitVec 64))
(declare-fun temp10985_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10985_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10985_211 () (_ BitVec 64))
(declare-fun temp10985_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10985_213 () (_ BitVec 64))
(declare-fun temp10985_214 () (_ BitVec 64))
(declare-fun temp10985_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10985_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10985_217 () (_ BitVec 64))
(declare-fun temp10985_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10985_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10985_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp10985_221 () (_ BitVec 64))
(assert (= temp10985_1 #x0000000000000001))
(assert (= var77203 temp10985_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10985_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10985_2)))
(assert (= temp10985_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10985_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10985_4 #x0000000000000000))
(assert (= var210941 temp10985_4))
(assert (= temp10985_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10985_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10985_6 #x0000000000000000))
(assert (= var210986 temp10985_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10985_7 #x0000000000000000))
(assert (= temp10985_8 temp10985_7))
(assert (= temp10985_9 (select ARGNAME_padding_NAMEEND_VAL temp10985_8)))
(assert (= temp10985_10 #x0000000000000001))
(assert (= temp10985_11 temp10985_10))
(assert (= temp10985_12 (select ARGNAME_padding_NAMEEND_VAL temp10985_11)))
(assert (= temp10985_13 #x0000000000000002))
(assert (= temp10985_14 temp10985_13))
(assert (= temp10985_15 (select ARGNAME_padding_NAMEEND_VAL temp10985_14)))
(assert (= temp10985_16 #x0000000000000003))
(assert (= temp10985_17 temp10985_16))
(assert (= temp10985_18 (select ARGNAME_padding_NAMEEND_VAL temp10985_17)))
(assert (= temp10985_19 #x0000000000000004))
(assert (= temp10985_20 temp10985_19))
(assert (= temp10985_21 (select ARGNAME_padding_NAMEEND_VAL temp10985_20)))
(assert (= temp10985_22 #x0000000000000005))
(assert (= temp10985_23 temp10985_22))
(assert (= temp10985_24 (select ARGNAME_padding_NAMEEND_VAL temp10985_23)))
(assert (= temp10985_25 #x0000000000000000))
(assert (= temp10985_26 #x0000000000000000))
(assert (= temp10985_27 temp10985_26))
(assert (= temp10985_28 (select ARGNAME_padding_NAMEEND_VAL temp10985_27)))
(assert (= temp10985_29 #x0000000000000000))
(assert (= temp10985_30 #x0000000000000001))
(assert (= temp10985_31 temp10985_30))
(assert (= temp10985_32 (select ARGNAME_padding_NAMEEND_VAL temp10985_31)))
(assert (= temp10985_33 #x0000000000000000))
(assert (= temp10985_34 #x0000000000000002))
(assert (= temp10985_35 temp10985_34))
(assert (= temp10985_36 (select ARGNAME_padding_NAMEEND_VAL temp10985_35)))
(assert (= temp10985_37 #x0000000000000000))
(assert (= temp10985_38 #x0000000000000003))
(assert (= temp10985_39 temp10985_38))
(assert (= temp10985_40 (select ARGNAME_padding_NAMEEND_VAL temp10985_39)))
(assert (= temp10985_41 #x0000000000000000))
(assert (= temp10985_42 #x0000000000000004))
(assert (= temp10985_43 temp10985_42))
(assert (= temp10985_44 (select ARGNAME_padding_NAMEEND_VAL temp10985_43)))
(assert (= temp10985_45 #x0000000000000000))
(assert (= temp10985_46 #x0000000000000005))
(assert (= temp10985_47 temp10985_46))
(assert (= temp10985_48 (select ARGNAME_padding_NAMEEND_VAL temp10985_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10985_28 temp10985_25)
             (bvslt temp10985_32 temp10985_29)
             (bvslt temp10985_36 temp10985_33)
             (bvslt temp10985_40 temp10985_37)
             (bvslt temp10985_44 temp10985_41)
             (bvslt temp10985_48 temp10985_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10985_49 #x0000000000000000))
(assert (= var1191714 temp10985_49))
(assert (= temp10985_50 #x0000000000000000))
(assert (= temp10985_51 temp10985_50))
(assert (= temp10985_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10985_51)))
(assert (= temp10985_53 #x0000000000000001))
(assert (= temp10985_54 temp10985_53))
(assert (= temp10985_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10985_54)))
(assert (= temp10985_56 #x0000000000000002))
(assert (= temp10985_57 temp10985_56))
(assert (= temp10985_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10985_57)))
(assert (= temp10985_59 #x0000000000000003))
(assert (= temp10985_60 temp10985_59))
(assert (= temp10985_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10985_60)))
(assert (= temp10985_62 #x0000000000000004))
(assert (= temp10985_63 temp10985_62))
(assert (= temp10985_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10985_63)))
(assert (= temp10985_65 #x0000000000000005))
(assert (= temp10985_66 temp10985_65))
(assert (= temp10985_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10985_66)))
(assert (= temp10985_68 #x0000000000000000))
(assert (= temp10985_69 #x0000000000000000))
(assert (= temp10985_70 temp10985_69))
(assert (= temp10985_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10985_70)))
(assert (= temp10985_72 #x0000000000000000))
(assert (= temp10985_73 #x0000000000000001))
(assert (= temp10985_74 temp10985_73))
(assert (= temp10985_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10985_74)))
(assert (= temp10985_76 #x0000000000000000))
(assert (= temp10985_77 #x0000000000000002))
(assert (= temp10985_78 temp10985_77))
(assert (= temp10985_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10985_78)))
(assert (= temp10985_80 #x0000000000000000))
(assert (= temp10985_81 #x0000000000000003))
(assert (= temp10985_82 temp10985_81))
(assert (= temp10985_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10985_82)))
(assert (= temp10985_84 #x0000000000000000))
(assert (= temp10985_85 #x0000000000000004))
(assert (= temp10985_86 temp10985_85))
(assert (= temp10985_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10985_86)))
(assert (= temp10985_88 #x0000000000000000))
(assert (= temp10985_89 #x0000000000000005))
(assert (= temp10985_90 temp10985_89))
(assert (= temp10985_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10985_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10985_71 temp10985_68)
             (bvslt temp10985_75 temp10985_72)
             (bvslt temp10985_79 temp10985_76)
             (bvslt temp10985_83 temp10985_80)
             (bvslt temp10985_87 temp10985_84)
             (bvslt temp10985_91 temp10985_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10985_92 #x0000000000000000))
(assert (= var1191725 temp10985_92))
(assert (= temp10985_93 #x0000000000000000))
(assert (= temp10985_94 temp10985_93))
(assert (= temp10985_95 (select ARGNAME_stride_NAMEEND_VAL temp10985_94)))
(assert (= temp10985_96 #x0000000000000001))
(assert (= temp10985_97 temp10985_96))
(assert (= temp10985_98 (select ARGNAME_stride_NAMEEND_VAL temp10985_97)))
(assert (= temp10985_99 #x0000000000000002))
(assert (= temp10985_100 temp10985_99))
(assert (= temp10985_101 (select ARGNAME_stride_NAMEEND_VAL temp10985_100)))
(assert (= temp10985_102 #x0000000000000003))
(assert (= temp10985_103 temp10985_102))
(assert (= temp10985_104 (select ARGNAME_stride_NAMEEND_VAL temp10985_103)))
(assert (= temp10985_105 #x0000000000000004))
(assert (= temp10985_106 temp10985_105))
(assert (= temp10985_107 (select ARGNAME_stride_NAMEEND_VAL temp10985_106)))
(assert (= temp10985_108 #x0000000000000005))
(assert (= temp10985_109 temp10985_108))
(assert (= temp10985_110 (select ARGNAME_stride_NAMEEND_VAL temp10985_109)))
(assert (= temp10985_111 #x0000000000000000))
(assert (= temp10985_112 #x0000000000000000))
(assert (= temp10985_113 temp10985_112))
(assert (= temp10985_114 (select ARGNAME_stride_NAMEEND_VAL temp10985_113)))
(assert (= temp10985_115 #x0000000000000000))
(assert (= temp10985_116 #x0000000000000001))
(assert (= temp10985_117 temp10985_116))
(assert (= temp10985_118 (select ARGNAME_stride_NAMEEND_VAL temp10985_117)))
(assert (= temp10985_119 #x0000000000000000))
(assert (= temp10985_120 #x0000000000000002))
(assert (= temp10985_121 temp10985_120))
(assert (= temp10985_122 (select ARGNAME_stride_NAMEEND_VAL temp10985_121)))
(assert (= temp10985_123 #x0000000000000000))
(assert (= temp10985_124 #x0000000000000003))
(assert (= temp10985_125 temp10985_124))
(assert (= temp10985_126 (select ARGNAME_stride_NAMEEND_VAL temp10985_125)))
(assert (= temp10985_127 #x0000000000000000))
(assert (= temp10985_128 #x0000000000000004))
(assert (= temp10985_129 temp10985_128))
(assert (= temp10985_130 (select ARGNAME_stride_NAMEEND_VAL temp10985_129)))
(assert (= temp10985_131 #x0000000000000000))
(assert (= temp10985_132 #x0000000000000005))
(assert (= temp10985_133 temp10985_132))
(assert (= temp10985_134 (select ARGNAME_stride_NAMEEND_VAL temp10985_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10985_114 temp10985_111)
             (bvsle temp10985_118 temp10985_115)
             (bvsle temp10985_122 temp10985_119)
             (bvsle temp10985_126 temp10985_123)
             (bvsle temp10985_130 temp10985_127)
             (bvsle temp10985_134 temp10985_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10985_135 #x0000000000000000))
(assert (= var1191735 temp10985_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10985_136 #x0000000000000001))
(assert (= var1191747 temp10985_136))
(assert (= temp10985_137 #x0000000000000000))
(assert (= var1179826 temp10985_137))
(assert (= temp10985_138 #x0000000000000000))
(assert (= temp10985_139 temp10985_138))
(assert (= temp10985_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10985_139)))
(assert (= temp10985_141 #x0000000000000001))
(assert (= temp10985_142 temp10985_141))
(assert (= temp10985_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10985_142)))
(assert (= temp10985_144 #x0000000000000002))
(assert (= temp10985_145 temp10985_144))
(assert (= temp10985_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10985_145)))
(assert (= temp10985_147 #x0000000000000003))
(assert (= temp10985_148 temp10985_147))
(assert (= temp10985_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10985_148)))
(assert (= temp10985_150 #x0000000000000004))
(assert (= temp10985_151 temp10985_150))
(assert (= temp10985_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10985_151)))
(assert (= temp10985_153 #x0000000000000005))
(assert (= temp10985_154 temp10985_153))
(assert (= temp10985_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10985_154)))
(assert (= temp10985_157 var1179826))
(assert (= temp10985_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10985_157)))
(assert (= temp10985_156 temp10985_158))
(assert (= var1191780
   (ite (bvslt temp10985_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10985_159 #x0000000000000000))
(assert (= var1191780 temp10985_159))
(assert (= temp10985_160 #x0000000000000000))
(assert (= var1179826 temp10985_160))
(assert (= temp10985_162 var1179826))
(assert (= temp10985_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10985_162)))
(assert (= temp10985_161 temp10985_163))
(assert (= var1191802 (bvsmod temp10985_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10985_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10985_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10985_165 #x0000000000000001))
(assert (= var1191803 temp10985_165))
(assert (= temp10985_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10985_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10985_167 #x0000000000000001))
(assert (= var1191823 temp10985_167))
(assert (= temp10985_168 #x0000000000000001))
(assert (= var1180714 temp10985_168))
(assert (= temp10985_169 #x0000000000000000))
(assert (= temp10985_170 temp10985_169))
(assert (= temp10985_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10985_170)))
(assert (= temp10985_172 #x0000000000000001))
(assert (= temp10985_173 temp10985_172))
(assert (= temp10985_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10985_173)))
(assert (= temp10985_175 #x0000000000000002))
(assert (= temp10985_176 temp10985_175))
(assert (= temp10985_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10985_176)))
(assert (= temp10985_178 #x0000000000000003))
(assert (= temp10985_179 temp10985_178))
(assert (= temp10985_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10985_179)))
(assert (= temp10985_181 #x0000000000000004))
(assert (= temp10985_182 temp10985_181))
(assert (= temp10985_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10985_182)))
(assert (= temp10985_184 #x0000000000000005))
(assert (= temp10985_185 temp10985_184))
(assert (= temp10985_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10985_185)))
(assert (= temp10985_187 #x0000000000000000))
(assert (= temp10985_188
   (ite (bvslt var1180714 temp10985_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10985_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10985_188)))
(assert (= var1191831 temp10985_189))
(assert (bvslt (ite (bvslt var1180714 temp10985_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10985_190 #x0000000000000001))
(assert (= var1180714 temp10985_190))
(assert (= temp10985_192 var1180714))
(assert (= temp10985_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10985_192)))
(assert (= temp10985_191 temp10985_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10985_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10985_194 #x0000000000000001))
(assert (= var1191836 temp10985_194))
(assert (= temp10985_195 #x0000000000000000))
(assert (= var1179826 temp10985_195))
(assert (= temp10985_197 var1179826))
(assert (= temp10985_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10985_197)))
(assert (= temp10985_196 temp10985_198))
(assert (= temp10985_199 #x0000000000000002))
(assert (= var1586025 temp10985_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10985_200 #x0000000000000001))
(assert (= var1191993 temp10985_200))
(assert (= temp10985_201 #x0000000000000001))
(assert (= var2700303 temp10985_201))
(assert (= temp10985_202 #x0000000000000001))
(assert (= var2962447 temp10985_202))
(assert (= temp10985_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10985_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10985_204 #x0000000000000001))
(assert (= var211058 temp10985_204))
(assert (= temp10985_205 #x0000000000000001))
(assert (= var211188 temp10985_205))
(assert (= var3879401 var211188))
(assert (= temp10985_206 #x0000000000000000))
(assert (= var3866802 temp10985_206))
(assert (= temp10985_207 #x0000000000000000))
(assert (= temp10985_208
   (ite (bvslt var3866802 temp10985_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10985_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10985_208)))
(assert (= var3879420 temp10985_209))
(assert (bvslt (ite (bvslt var3866802 temp10985_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10985_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10985_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10985_211 #x0000000000000000))
(assert (= var3879421 temp10985_211))
(assert (= temp10985_212 #x0000000000000001))
(assert (= var3867690 temp10985_212))
(assert (= temp10985_213 #x0000000000000000))
(assert (= temp10985_214
   (ite (bvslt var3867690 temp10985_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10985_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10985_214)))
(assert (= var3879423 temp10985_215))
(assert (bvslt (ite (bvslt var3867690 temp10985_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10985_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10985_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10985_217 #x0000000000000001))
(assert (= var3879424 temp10985_217))
(assert (= temp10985_218 #x0000000000000000))
(assert (= var4133117 temp10985_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10985_219 #x0000000000000002))
(assert (= var4339331 temp10985_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10985_220 #x0000000000000000))
(assert (= var4404892 temp10985_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp10985_221 #x0000000000000001))
(assert (= var211058 temp10985_221))
(model-add temp10985_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10985_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10985_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10985_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




