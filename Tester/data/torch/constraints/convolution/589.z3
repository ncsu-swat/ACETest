(declare-fun temp785_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp785_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp785_3 () (_ BitVec 64))
(declare-fun temp785_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp785_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp785_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp785_7 () (_ BitVec 64))
(declare-fun temp785_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp785_9 () (_ BitVec 64))
(declare-fun temp785_10 () (_ BitVec 64))
(declare-fun temp785_11 () (_ BitVec 64))
(declare-fun temp785_12 () (_ BitVec 64))
(declare-fun temp785_13 () (_ BitVec 64))
(declare-fun temp785_14 () (_ BitVec 64))
(declare-fun temp785_15 () (_ BitVec 64))
(declare-fun temp785_16 () (_ BitVec 64))
(declare-fun temp785_17 () (_ BitVec 64))
(declare-fun temp785_18 () (_ BitVec 64))
(declare-fun temp785_19 () (_ BitVec 64))
(declare-fun temp785_20 () (_ BitVec 64))
(declare-fun temp785_21 () (_ BitVec 64))
(declare-fun temp785_22 () (_ BitVec 64))
(declare-fun temp785_23 () (_ BitVec 64))
(declare-fun temp785_24 () (_ BitVec 64))
(declare-fun temp785_25 () (_ BitVec 64))
(declare-fun temp785_26 () (_ BitVec 64))
(declare-fun temp785_27 () (_ BitVec 64))
(declare-fun temp785_28 () (_ BitVec 64))
(declare-fun temp785_29 () (_ BitVec 64))
(declare-fun temp785_30 () (_ BitVec 64))
(declare-fun temp785_31 () (_ BitVec 64))
(declare-fun temp785_32 () (_ BitVec 64))
(declare-fun temp785_33 () (_ BitVec 64))
(declare-fun temp785_34 () (_ BitVec 64))
(declare-fun temp785_35 () (_ BitVec 64))
(declare-fun temp785_36 () (_ BitVec 64))
(declare-fun temp785_37 () (_ BitVec 64))
(declare-fun temp785_38 () (_ BitVec 64))
(declare-fun temp785_39 () (_ BitVec 64))
(declare-fun temp785_40 () (_ BitVec 64))
(declare-fun temp785_41 () (_ BitVec 64))
(declare-fun temp785_42 () (_ BitVec 64))
(declare-fun temp785_43 () (_ BitVec 64))
(declare-fun temp785_44 () (_ BitVec 64))
(declare-fun temp785_45 () (_ BitVec 64))
(declare-fun temp785_46 () (_ BitVec 64))
(declare-fun temp785_47 () (_ BitVec 64))
(declare-fun temp785_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp785_49 () (_ BitVec 64))
(declare-fun temp785_50 () (_ BitVec 64))
(declare-fun temp785_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp785_52 () (_ BitVec 64))
(declare-fun temp785_53 () (_ BitVec 64))
(declare-fun temp785_54 () (_ BitVec 64))
(declare-fun temp785_55 () (_ BitVec 64))
(declare-fun temp785_56 () (_ BitVec 64))
(declare-fun temp785_57 () (_ BitVec 64))
(declare-fun temp785_58 () (_ BitVec 64))
(declare-fun temp785_59 () (_ BitVec 64))
(declare-fun temp785_60 () (_ BitVec 64))
(declare-fun temp785_61 () (_ BitVec 64))
(declare-fun temp785_62 () (_ BitVec 64))
(declare-fun temp785_63 () (_ BitVec 64))
(declare-fun temp785_64 () (_ BitVec 64))
(declare-fun temp785_65 () (_ BitVec 64))
(declare-fun temp785_66 () (_ BitVec 64))
(declare-fun temp785_67 () (_ BitVec 64))
(declare-fun temp785_68 () (_ BitVec 64))
(declare-fun temp785_69 () (_ BitVec 64))
(declare-fun temp785_70 () (_ BitVec 64))
(declare-fun temp785_71 () (_ BitVec 64))
(declare-fun temp785_72 () (_ BitVec 64))
(declare-fun temp785_73 () (_ BitVec 64))
(declare-fun temp785_74 () (_ BitVec 64))
(declare-fun temp785_75 () (_ BitVec 64))
(declare-fun temp785_76 () (_ BitVec 64))
(declare-fun temp785_77 () (_ BitVec 64))
(declare-fun temp785_78 () (_ BitVec 64))
(declare-fun temp785_79 () (_ BitVec 64))
(declare-fun temp785_80 () (_ BitVec 64))
(declare-fun temp785_81 () (_ BitVec 64))
(declare-fun temp785_82 () (_ BitVec 64))
(declare-fun temp785_83 () (_ BitVec 64))
(declare-fun temp785_84 () (_ BitVec 64))
(declare-fun temp785_85 () (_ BitVec 64))
(declare-fun temp785_86 () (_ BitVec 64))
(declare-fun temp785_87 () (_ BitVec 64))
(declare-fun temp785_88 () (_ BitVec 64))
(declare-fun temp785_89 () (_ BitVec 64))
(declare-fun temp785_90 () (_ BitVec 64))
(declare-fun temp785_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp785_92 () (_ BitVec 64))
(declare-fun temp785_93 () (_ BitVec 64))
(declare-fun temp785_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp785_95 () (_ BitVec 64))
(declare-fun temp785_96 () (_ BitVec 64))
(declare-fun temp785_97 () (_ BitVec 64))
(declare-fun temp785_98 () (_ BitVec 64))
(declare-fun temp785_99 () (_ BitVec 64))
(declare-fun temp785_100 () (_ BitVec 64))
(declare-fun temp785_101 () (_ BitVec 64))
(declare-fun temp785_102 () (_ BitVec 64))
(declare-fun temp785_103 () (_ BitVec 64))
(declare-fun temp785_104 () (_ BitVec 64))
(declare-fun temp785_105 () (_ BitVec 64))
(declare-fun temp785_106 () (_ BitVec 64))
(declare-fun temp785_107 () (_ BitVec 64))
(declare-fun temp785_108 () (_ BitVec 64))
(declare-fun temp785_109 () (_ BitVec 64))
(declare-fun temp785_110 () (_ BitVec 64))
(declare-fun temp785_111 () (_ BitVec 64))
(declare-fun temp785_112 () (_ BitVec 64))
(declare-fun temp785_113 () (_ BitVec 64))
(declare-fun temp785_114 () (_ BitVec 64))
(declare-fun temp785_115 () (_ BitVec 64))
(declare-fun temp785_116 () (_ BitVec 64))
(declare-fun temp785_117 () (_ BitVec 64))
(declare-fun temp785_118 () (_ BitVec 64))
(declare-fun temp785_119 () (_ BitVec 64))
(declare-fun temp785_120 () (_ BitVec 64))
(declare-fun temp785_121 () (_ BitVec 64))
(declare-fun temp785_122 () (_ BitVec 64))
(declare-fun temp785_123 () (_ BitVec 64))
(declare-fun temp785_124 () (_ BitVec 64))
(declare-fun temp785_125 () (_ BitVec 64))
(declare-fun temp785_126 () (_ BitVec 64))
(declare-fun temp785_127 () (_ BitVec 64))
(declare-fun temp785_128 () (_ BitVec 64))
(declare-fun temp785_129 () (_ BitVec 64))
(declare-fun temp785_130 () (_ BitVec 64))
(declare-fun temp785_131 () (_ BitVec 64))
(declare-fun temp785_132 () (_ BitVec 64))
(declare-fun temp785_133 () (_ BitVec 64))
(declare-fun temp785_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp785_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp785_136 () (_ BitVec 64))
(declare-fun temp785_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp785_138 () (_ BitVec 64))
(declare-fun temp785_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp785_140 () (_ BitVec 64))
(declare-fun temp785_141 () (_ BitVec 64))
(declare-fun temp785_142 () (_ BitVec 64))
(declare-fun temp785_143 () (_ BitVec 64))
(declare-fun temp785_144 () (_ BitVec 64))
(declare-fun temp785_145 () (_ BitVec 64))
(declare-fun temp785_146 () (_ BitVec 64))
(declare-fun temp785_147 () (_ BitVec 64))
(declare-fun temp785_148 () (_ BitVec 64))
(declare-fun temp785_149 () (_ BitVec 64))
(declare-fun temp785_150 () (_ BitVec 64))
(declare-fun temp785_151 () (_ BitVec 64))
(declare-fun temp785_152 () (_ BitVec 64))
(declare-fun temp785_153 () (_ BitVec 64))
(declare-fun temp785_154 () (_ BitVec 64))
(declare-fun temp785_155 () (_ BitVec 64))
(declare-fun temp785_157 () (_ BitVec 64))
(declare-fun temp785_158 () (_ BitVec 64))
(declare-fun temp785_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp785_159 () (_ BitVec 64))
(declare-fun temp785_160 () (_ BitVec 64))
(declare-fun temp785_162 () (_ BitVec 64))
(declare-fun temp785_163 () (_ BitVec 64))
(declare-fun temp785_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp785_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp785_165 () (_ BitVec 64))
(declare-fun temp785_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp785_167 () (_ BitVec 64))
(declare-fun temp785_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp785_169 () (_ BitVec 64))
(declare-fun temp785_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp785_171 () (_ BitVec 64))
(declare-fun temp785_172 () (_ BitVec 64))
(declare-fun temp785_173 () (_ BitVec 64))
(declare-fun temp785_174 () (_ BitVec 64))
(declare-fun temp785_175 () (_ BitVec 64))
(declare-fun temp785_176 () (_ BitVec 64))
(declare-fun temp785_177 () (_ BitVec 64))
(declare-fun temp785_178 () (_ BitVec 64))
(declare-fun temp785_179 () (_ BitVec 64))
(declare-fun temp785_180 () (_ BitVec 64))
(declare-fun temp785_181 () (_ BitVec 64))
(declare-fun temp785_182 () (_ BitVec 64))
(declare-fun temp785_183 () (_ BitVec 64))
(declare-fun temp785_184 () (_ BitVec 64))
(declare-fun temp785_185 () (_ BitVec 64))
(declare-fun temp785_186 () (_ BitVec 64))
(declare-fun temp785_187 () (_ BitVec 64))
(declare-fun temp785_188 () (_ BitVec 64))
(declare-fun temp785_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp785_190 () (_ BitVec 64))
(declare-fun temp785_192 () (_ BitVec 64))
(declare-fun temp785_193 () (_ BitVec 64))
(declare-fun temp785_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp785_194 () (_ BitVec 64))
(declare-fun temp785_195 () (_ BitVec 64))
(declare-fun temp785_197 () (_ BitVec 64))
(declare-fun temp785_198 () (_ BitVec 64))
(declare-fun temp785_196 () (_ BitVec 64))
(declare-fun temp785_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp785_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp785_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp785_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp785_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp785_204 () (_ BitVec 64))
(declare-fun temp785_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp785_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp785_207 () (_ BitVec 64))
(declare-fun temp785_208 () (_ BitVec 64))
(declare-fun temp785_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp785_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp785_211 () (_ BitVec 64))
(declare-fun temp785_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp785_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp785_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp785_216 () (_ BitVec 64))
(declare-fun temp785_215 () (_ BitVec 64))
(declare-fun temp785_217 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp785_218 () (_ BitVec 64))
(declare-fun temp785_219 () (_ BitVec 64))
(declare-fun temp785_220 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp785_221 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp785_222 () (_ BitVec 64))
(declare-fun temp785_223 () (_ BitVec 64))
(assert (= temp785_1 #x0000000000000001))
(assert (= var77203 temp785_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp785_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp785_2)))
(assert (= temp785_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp785_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp785_4 #x0000000000000000))
(assert (= var210941 temp785_4))
(assert (= temp785_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp785_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp785_6 #x0000000000000000))
(assert (= var210986 temp785_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp785_7 #x0000000000000000))
(assert (= temp785_8 temp785_7))
(assert (= temp785_9 (select ARGNAME_padding_NAMEEND_VAL temp785_8)))
(assert (= temp785_10 #x0000000000000001))
(assert (= temp785_11 temp785_10))
(assert (= temp785_12 (select ARGNAME_padding_NAMEEND_VAL temp785_11)))
(assert (= temp785_13 #x0000000000000002))
(assert (= temp785_14 temp785_13))
(assert (= temp785_15 (select ARGNAME_padding_NAMEEND_VAL temp785_14)))
(assert (= temp785_16 #x0000000000000003))
(assert (= temp785_17 temp785_16))
(assert (= temp785_18 (select ARGNAME_padding_NAMEEND_VAL temp785_17)))
(assert (= temp785_19 #x0000000000000004))
(assert (= temp785_20 temp785_19))
(assert (= temp785_21 (select ARGNAME_padding_NAMEEND_VAL temp785_20)))
(assert (= temp785_22 #x0000000000000005))
(assert (= temp785_23 temp785_22))
(assert (= temp785_24 (select ARGNAME_padding_NAMEEND_VAL temp785_23)))
(assert (= temp785_25 #x0000000000000000))
(assert (= temp785_26 #x0000000000000000))
(assert (= temp785_27 temp785_26))
(assert (= temp785_28 (select ARGNAME_padding_NAMEEND_VAL temp785_27)))
(assert (= temp785_29 #x0000000000000000))
(assert (= temp785_30 #x0000000000000001))
(assert (= temp785_31 temp785_30))
(assert (= temp785_32 (select ARGNAME_padding_NAMEEND_VAL temp785_31)))
(assert (= temp785_33 #x0000000000000000))
(assert (= temp785_34 #x0000000000000002))
(assert (= temp785_35 temp785_34))
(assert (= temp785_36 (select ARGNAME_padding_NAMEEND_VAL temp785_35)))
(assert (= temp785_37 #x0000000000000000))
(assert (= temp785_38 #x0000000000000003))
(assert (= temp785_39 temp785_38))
(assert (= temp785_40 (select ARGNAME_padding_NAMEEND_VAL temp785_39)))
(assert (= temp785_41 #x0000000000000000))
(assert (= temp785_42 #x0000000000000004))
(assert (= temp785_43 temp785_42))
(assert (= temp785_44 (select ARGNAME_padding_NAMEEND_VAL temp785_43)))
(assert (= temp785_45 #x0000000000000000))
(assert (= temp785_46 #x0000000000000005))
(assert (= temp785_47 temp785_46))
(assert (= temp785_48 (select ARGNAME_padding_NAMEEND_VAL temp785_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp785_28 temp785_25)
             (bvslt temp785_32 temp785_29)
             (bvslt temp785_36 temp785_33)
             (bvslt temp785_40 temp785_37)
             (bvslt temp785_44 temp785_41)
             (bvslt temp785_48 temp785_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp785_49 #x0000000000000000))
(assert (= var1191714 temp785_49))
(assert (= temp785_50 #x0000000000000000))
(assert (= temp785_51 temp785_50))
(assert (= temp785_52 (select ARGNAME_output_padding_NAMEEND_VAL temp785_51)))
(assert (= temp785_53 #x0000000000000001))
(assert (= temp785_54 temp785_53))
(assert (= temp785_55 (select ARGNAME_output_padding_NAMEEND_VAL temp785_54)))
(assert (= temp785_56 #x0000000000000002))
(assert (= temp785_57 temp785_56))
(assert (= temp785_58 (select ARGNAME_output_padding_NAMEEND_VAL temp785_57)))
(assert (= temp785_59 #x0000000000000003))
(assert (= temp785_60 temp785_59))
(assert (= temp785_61 (select ARGNAME_output_padding_NAMEEND_VAL temp785_60)))
(assert (= temp785_62 #x0000000000000004))
(assert (= temp785_63 temp785_62))
(assert (= temp785_64 (select ARGNAME_output_padding_NAMEEND_VAL temp785_63)))
(assert (= temp785_65 #x0000000000000005))
(assert (= temp785_66 temp785_65))
(assert (= temp785_67 (select ARGNAME_output_padding_NAMEEND_VAL temp785_66)))
(assert (= temp785_68 #x0000000000000000))
(assert (= temp785_69 #x0000000000000000))
(assert (= temp785_70 temp785_69))
(assert (= temp785_71 (select ARGNAME_output_padding_NAMEEND_VAL temp785_70)))
(assert (= temp785_72 #x0000000000000000))
(assert (= temp785_73 #x0000000000000001))
(assert (= temp785_74 temp785_73))
(assert (= temp785_75 (select ARGNAME_output_padding_NAMEEND_VAL temp785_74)))
(assert (= temp785_76 #x0000000000000000))
(assert (= temp785_77 #x0000000000000002))
(assert (= temp785_78 temp785_77))
(assert (= temp785_79 (select ARGNAME_output_padding_NAMEEND_VAL temp785_78)))
(assert (= temp785_80 #x0000000000000000))
(assert (= temp785_81 #x0000000000000003))
(assert (= temp785_82 temp785_81))
(assert (= temp785_83 (select ARGNAME_output_padding_NAMEEND_VAL temp785_82)))
(assert (= temp785_84 #x0000000000000000))
(assert (= temp785_85 #x0000000000000004))
(assert (= temp785_86 temp785_85))
(assert (= temp785_87 (select ARGNAME_output_padding_NAMEEND_VAL temp785_86)))
(assert (= temp785_88 #x0000000000000000))
(assert (= temp785_89 #x0000000000000005))
(assert (= temp785_90 temp785_89))
(assert (= temp785_91 (select ARGNAME_output_padding_NAMEEND_VAL temp785_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp785_71 temp785_68)
             (bvslt temp785_75 temp785_72)
             (bvslt temp785_79 temp785_76)
             (bvslt temp785_83 temp785_80)
             (bvslt temp785_87 temp785_84)
             (bvslt temp785_91 temp785_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp785_92 #x0000000000000000))
(assert (= var1191725 temp785_92))
(assert (= temp785_93 #x0000000000000000))
(assert (= temp785_94 temp785_93))
(assert (= temp785_95 (select ARGNAME_stride_NAMEEND_VAL temp785_94)))
(assert (= temp785_96 #x0000000000000001))
(assert (= temp785_97 temp785_96))
(assert (= temp785_98 (select ARGNAME_stride_NAMEEND_VAL temp785_97)))
(assert (= temp785_99 #x0000000000000002))
(assert (= temp785_100 temp785_99))
(assert (= temp785_101 (select ARGNAME_stride_NAMEEND_VAL temp785_100)))
(assert (= temp785_102 #x0000000000000003))
(assert (= temp785_103 temp785_102))
(assert (= temp785_104 (select ARGNAME_stride_NAMEEND_VAL temp785_103)))
(assert (= temp785_105 #x0000000000000004))
(assert (= temp785_106 temp785_105))
(assert (= temp785_107 (select ARGNAME_stride_NAMEEND_VAL temp785_106)))
(assert (= temp785_108 #x0000000000000005))
(assert (= temp785_109 temp785_108))
(assert (= temp785_110 (select ARGNAME_stride_NAMEEND_VAL temp785_109)))
(assert (= temp785_111 #x0000000000000000))
(assert (= temp785_112 #x0000000000000000))
(assert (= temp785_113 temp785_112))
(assert (= temp785_114 (select ARGNAME_stride_NAMEEND_VAL temp785_113)))
(assert (= temp785_115 #x0000000000000000))
(assert (= temp785_116 #x0000000000000001))
(assert (= temp785_117 temp785_116))
(assert (= temp785_118 (select ARGNAME_stride_NAMEEND_VAL temp785_117)))
(assert (= temp785_119 #x0000000000000000))
(assert (= temp785_120 #x0000000000000002))
(assert (= temp785_121 temp785_120))
(assert (= temp785_122 (select ARGNAME_stride_NAMEEND_VAL temp785_121)))
(assert (= temp785_123 #x0000000000000000))
(assert (= temp785_124 #x0000000000000003))
(assert (= temp785_125 temp785_124))
(assert (= temp785_126 (select ARGNAME_stride_NAMEEND_VAL temp785_125)))
(assert (= temp785_127 #x0000000000000000))
(assert (= temp785_128 #x0000000000000004))
(assert (= temp785_129 temp785_128))
(assert (= temp785_130 (select ARGNAME_stride_NAMEEND_VAL temp785_129)))
(assert (= temp785_131 #x0000000000000000))
(assert (= temp785_132 #x0000000000000005))
(assert (= temp785_133 temp785_132))
(assert (= temp785_134 (select ARGNAME_stride_NAMEEND_VAL temp785_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp785_114 temp785_111)
             (bvsle temp785_118 temp785_115)
             (bvsle temp785_122 temp785_119)
             (bvsle temp785_126 temp785_123)
             (bvsle temp785_130 temp785_127)
             (bvsle temp785_134 temp785_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp785_135 #x0000000000000000))
(assert (= var1191735 temp785_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp785_136 #x0000000000000001))
(assert (= var1191747 temp785_136))
(assert (= temp785_137 #x0000000000000000))
(assert (= var1179826 temp785_137))
(assert (= temp785_138 #x0000000000000000))
(assert (= temp785_139 temp785_138))
(assert (= temp785_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp785_139)))
(assert (= temp785_141 #x0000000000000001))
(assert (= temp785_142 temp785_141))
(assert (= temp785_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp785_142)))
(assert (= temp785_144 #x0000000000000002))
(assert (= temp785_145 temp785_144))
(assert (= temp785_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp785_145)))
(assert (= temp785_147 #x0000000000000003))
(assert (= temp785_148 temp785_147))
(assert (= temp785_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp785_148)))
(assert (= temp785_150 #x0000000000000004))
(assert (= temp785_151 temp785_150))
(assert (= temp785_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp785_151)))
(assert (= temp785_153 #x0000000000000005))
(assert (= temp785_154 temp785_153))
(assert (= temp785_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp785_154)))
(assert (= temp785_157 var1179826))
(assert (= temp785_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp785_157)))
(assert (= temp785_156 temp785_158))
(assert (= var1191780
   (ite (bvslt temp785_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp785_159 #x0000000000000000))
(assert (= var1191780 temp785_159))
(assert (= temp785_160 #x0000000000000000))
(assert (= var1179826 temp785_160))
(assert (= temp785_162 var1179826))
(assert (= temp785_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp785_162)))
(assert (= temp785_161 temp785_163))
(assert (= var1191802 (bvsmod temp785_161 ARGNAME_groups_NAMEEND)))
(assert (= temp785_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp785_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp785_165 #x0000000000000001))
(assert (= var1191803 temp785_165))
(assert (= temp785_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp785_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp785_167 #x0000000000000001))
(assert (= var1191823 temp785_167))
(assert (= temp785_168 #x0000000000000001))
(assert (= var1180714 temp785_168))
(assert (= temp785_169 #x0000000000000000))
(assert (= temp785_170 temp785_169))
(assert (= temp785_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp785_170)))
(assert (= temp785_172 #x0000000000000001))
(assert (= temp785_173 temp785_172))
(assert (= temp785_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp785_173)))
(assert (= temp785_175 #x0000000000000002))
(assert (= temp785_176 temp785_175))
(assert (= temp785_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp785_176)))
(assert (= temp785_178 #x0000000000000003))
(assert (= temp785_179 temp785_178))
(assert (= temp785_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp785_179)))
(assert (= temp785_181 #x0000000000000004))
(assert (= temp785_182 temp785_181))
(assert (= temp785_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp785_182)))
(assert (= temp785_184 #x0000000000000005))
(assert (= temp785_185 temp785_184))
(assert (= temp785_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp785_185)))
(assert (= temp785_187 #x0000000000000000))
(assert (= temp785_188
   (ite (bvslt var1180714 temp785_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp785_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp785_188)))
(assert (= var1191831 temp785_189))
(assert (bvslt (ite (bvslt var1180714 temp785_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp785_190 #x0000000000000001))
(assert (= var1180714 temp785_190))
(assert (= temp785_192 var1180714))
(assert (= temp785_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp785_192)))
(assert (= temp785_191 temp785_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp785_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp785_194 #x0000000000000001))
(assert (= var1191836 temp785_194))
(assert (= temp785_195 #x0000000000000000))
(assert (= var1179826 temp785_195))
(assert (= temp785_197 var1179826))
(assert (= temp785_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp785_197)))
(assert (= temp785_196 temp785_198))
(assert (= temp785_199 #x0000000000000002))
(assert (= var1586025 temp785_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp785_200 #x0000000000000001))
(assert (= var1191993 temp785_200))
(assert (= temp785_201 #x0000000000000001))
(assert (= var2700303 temp785_201))
(assert (= temp785_202 #x0000000000000001))
(assert (= var2962447 temp785_202))
(assert (= temp785_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp785_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp785_204 #x0000000000000001))
(assert (= var211058 temp785_204))
(assert (= temp785_205 #x0000000000000001))
(assert (= var211188 temp785_205))
(assert (= var3879401 var211188))
(assert (= temp785_206 #x0000000000000000))
(assert (= var3866802 temp785_206))
(assert (= temp785_207 #x0000000000000000))
(assert (= temp785_208
   (ite (bvslt var3866802 temp785_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp785_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp785_208)))
(assert (= var3879420 temp785_209))
(assert (bvslt (ite (bvslt var3866802 temp785_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp785_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp785_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp785_211 #x0000000000000001))
(assert (= var3879421 temp785_211))
(assert (= temp785_212 #x0000000000000000))
(assert (= var4079423 temp785_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp785_213 #x0000000000000002))
(assert (= var4208259 temp785_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp785_214 #x0000000000000000))
(assert (= var4273820 temp785_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp785_216 #xffffffffffffffff))
(assert (= temp785_215 temp785_216))
(assert (= temp785_217 #x0000000000000001))
(assert (= var197674 temp785_217))
(assert (= temp785_218 #x0000000000000000))
(assert (= temp785_219
   (ite (bvslt var197674 temp785_218)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp785_220 (select ARGNAME_input_NAMEEND_DIMSIZE temp785_219)))
(assert (= var211595 temp785_220))
(assert (bvslt (ite (bvslt var197674 temp785_218)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp785_221 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp785_221) #x0000000000000001 #x0000000000000000)))
(assert (= temp785_222 #x0000000000000000))
(assert (= var211596 temp785_222))
(assert (= temp785_223 #x0000000000000001))
(assert (= var211058 temp785_223))
(model-add temp785_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp785_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp785_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp785_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




