(declare-fun temp10778_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10778_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10778_3 () (_ BitVec 64))
(declare-fun temp10778_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10778_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10778_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10778_7 () (_ BitVec 64))
(declare-fun temp10778_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10778_9 () (_ BitVec 64))
(declare-fun temp10778_10 () (_ BitVec 64))
(declare-fun temp10778_11 () (_ BitVec 64))
(declare-fun temp10778_12 () (_ BitVec 64))
(declare-fun temp10778_13 () (_ BitVec 64))
(declare-fun temp10778_14 () (_ BitVec 64))
(declare-fun temp10778_15 () (_ BitVec 64))
(declare-fun temp10778_16 () (_ BitVec 64))
(declare-fun temp10778_17 () (_ BitVec 64))
(declare-fun temp10778_18 () (_ BitVec 64))
(declare-fun temp10778_19 () (_ BitVec 64))
(declare-fun temp10778_20 () (_ BitVec 64))
(declare-fun temp10778_21 () (_ BitVec 64))
(declare-fun temp10778_22 () (_ BitVec 64))
(declare-fun temp10778_23 () (_ BitVec 64))
(declare-fun temp10778_24 () (_ BitVec 64))
(declare-fun temp10778_25 () (_ BitVec 64))
(declare-fun temp10778_26 () (_ BitVec 64))
(declare-fun temp10778_27 () (_ BitVec 64))
(declare-fun temp10778_28 () (_ BitVec 64))
(declare-fun temp10778_29 () (_ BitVec 64))
(declare-fun temp10778_30 () (_ BitVec 64))
(declare-fun temp10778_31 () (_ BitVec 64))
(declare-fun temp10778_32 () (_ BitVec 64))
(declare-fun temp10778_33 () (_ BitVec 64))
(declare-fun temp10778_34 () (_ BitVec 64))
(declare-fun temp10778_35 () (_ BitVec 64))
(declare-fun temp10778_36 () (_ BitVec 64))
(declare-fun temp10778_37 () (_ BitVec 64))
(declare-fun temp10778_38 () (_ BitVec 64))
(declare-fun temp10778_39 () (_ BitVec 64))
(declare-fun temp10778_40 () (_ BitVec 64))
(declare-fun temp10778_41 () (_ BitVec 64))
(declare-fun temp10778_42 () (_ BitVec 64))
(declare-fun temp10778_43 () (_ BitVec 64))
(declare-fun temp10778_44 () (_ BitVec 64))
(declare-fun temp10778_45 () (_ BitVec 64))
(declare-fun temp10778_46 () (_ BitVec 64))
(declare-fun temp10778_47 () (_ BitVec 64))
(declare-fun temp10778_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10778_49 () (_ BitVec 64))
(declare-fun temp10778_50 () (_ BitVec 64))
(declare-fun temp10778_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10778_52 () (_ BitVec 64))
(declare-fun temp10778_53 () (_ BitVec 64))
(declare-fun temp10778_54 () (_ BitVec 64))
(declare-fun temp10778_55 () (_ BitVec 64))
(declare-fun temp10778_56 () (_ BitVec 64))
(declare-fun temp10778_57 () (_ BitVec 64))
(declare-fun temp10778_58 () (_ BitVec 64))
(declare-fun temp10778_59 () (_ BitVec 64))
(declare-fun temp10778_60 () (_ BitVec 64))
(declare-fun temp10778_61 () (_ BitVec 64))
(declare-fun temp10778_62 () (_ BitVec 64))
(declare-fun temp10778_63 () (_ BitVec 64))
(declare-fun temp10778_64 () (_ BitVec 64))
(declare-fun temp10778_65 () (_ BitVec 64))
(declare-fun temp10778_66 () (_ BitVec 64))
(declare-fun temp10778_67 () (_ BitVec 64))
(declare-fun temp10778_68 () (_ BitVec 64))
(declare-fun temp10778_69 () (_ BitVec 64))
(declare-fun temp10778_70 () (_ BitVec 64))
(declare-fun temp10778_71 () (_ BitVec 64))
(declare-fun temp10778_72 () (_ BitVec 64))
(declare-fun temp10778_73 () (_ BitVec 64))
(declare-fun temp10778_74 () (_ BitVec 64))
(declare-fun temp10778_75 () (_ BitVec 64))
(declare-fun temp10778_76 () (_ BitVec 64))
(declare-fun temp10778_77 () (_ BitVec 64))
(declare-fun temp10778_78 () (_ BitVec 64))
(declare-fun temp10778_79 () (_ BitVec 64))
(declare-fun temp10778_80 () (_ BitVec 64))
(declare-fun temp10778_81 () (_ BitVec 64))
(declare-fun temp10778_82 () (_ BitVec 64))
(declare-fun temp10778_83 () (_ BitVec 64))
(declare-fun temp10778_84 () (_ BitVec 64))
(declare-fun temp10778_85 () (_ BitVec 64))
(declare-fun temp10778_86 () (_ BitVec 64))
(declare-fun temp10778_87 () (_ BitVec 64))
(declare-fun temp10778_88 () (_ BitVec 64))
(declare-fun temp10778_89 () (_ BitVec 64))
(declare-fun temp10778_90 () (_ BitVec 64))
(declare-fun temp10778_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10778_92 () (_ BitVec 64))
(declare-fun temp10778_93 () (_ BitVec 64))
(declare-fun temp10778_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10778_95 () (_ BitVec 64))
(declare-fun temp10778_96 () (_ BitVec 64))
(declare-fun temp10778_97 () (_ BitVec 64))
(declare-fun temp10778_98 () (_ BitVec 64))
(declare-fun temp10778_99 () (_ BitVec 64))
(declare-fun temp10778_100 () (_ BitVec 64))
(declare-fun temp10778_101 () (_ BitVec 64))
(declare-fun temp10778_102 () (_ BitVec 64))
(declare-fun temp10778_103 () (_ BitVec 64))
(declare-fun temp10778_104 () (_ BitVec 64))
(declare-fun temp10778_105 () (_ BitVec 64))
(declare-fun temp10778_106 () (_ BitVec 64))
(declare-fun temp10778_107 () (_ BitVec 64))
(declare-fun temp10778_108 () (_ BitVec 64))
(declare-fun temp10778_109 () (_ BitVec 64))
(declare-fun temp10778_110 () (_ BitVec 64))
(declare-fun temp10778_111 () (_ BitVec 64))
(declare-fun temp10778_112 () (_ BitVec 64))
(declare-fun temp10778_113 () (_ BitVec 64))
(declare-fun temp10778_114 () (_ BitVec 64))
(declare-fun temp10778_115 () (_ BitVec 64))
(declare-fun temp10778_116 () (_ BitVec 64))
(declare-fun temp10778_117 () (_ BitVec 64))
(declare-fun temp10778_118 () (_ BitVec 64))
(declare-fun temp10778_119 () (_ BitVec 64))
(declare-fun temp10778_120 () (_ BitVec 64))
(declare-fun temp10778_121 () (_ BitVec 64))
(declare-fun temp10778_122 () (_ BitVec 64))
(declare-fun temp10778_123 () (_ BitVec 64))
(declare-fun temp10778_124 () (_ BitVec 64))
(declare-fun temp10778_125 () (_ BitVec 64))
(declare-fun temp10778_126 () (_ BitVec 64))
(declare-fun temp10778_127 () (_ BitVec 64))
(declare-fun temp10778_128 () (_ BitVec 64))
(declare-fun temp10778_129 () (_ BitVec 64))
(declare-fun temp10778_130 () (_ BitVec 64))
(declare-fun temp10778_131 () (_ BitVec 64))
(declare-fun temp10778_132 () (_ BitVec 64))
(declare-fun temp10778_133 () (_ BitVec 64))
(declare-fun temp10778_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10778_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10778_136 () (_ BitVec 64))
(declare-fun temp10778_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10778_138 () (_ BitVec 64))
(declare-fun temp10778_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10778_140 () (_ BitVec 64))
(declare-fun temp10778_141 () (_ BitVec 64))
(declare-fun temp10778_142 () (_ BitVec 64))
(declare-fun temp10778_143 () (_ BitVec 64))
(declare-fun temp10778_144 () (_ BitVec 64))
(declare-fun temp10778_145 () (_ BitVec 64))
(declare-fun temp10778_146 () (_ BitVec 64))
(declare-fun temp10778_147 () (_ BitVec 64))
(declare-fun temp10778_148 () (_ BitVec 64))
(declare-fun temp10778_149 () (_ BitVec 64))
(declare-fun temp10778_150 () (_ BitVec 64))
(declare-fun temp10778_151 () (_ BitVec 64))
(declare-fun temp10778_152 () (_ BitVec 64))
(declare-fun temp10778_153 () (_ BitVec 64))
(declare-fun temp10778_154 () (_ BitVec 64))
(declare-fun temp10778_155 () (_ BitVec 64))
(declare-fun temp10778_157 () (_ BitVec 64))
(declare-fun temp10778_158 () (_ BitVec 64))
(declare-fun temp10778_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10778_159 () (_ BitVec 64))
(declare-fun temp10778_160 () (_ BitVec 64))
(declare-fun temp10778_162 () (_ BitVec 64))
(declare-fun temp10778_163 () (_ BitVec 64))
(declare-fun temp10778_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10778_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10778_165 () (_ BitVec 64))
(declare-fun temp10778_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10778_167 () (_ BitVec 64))
(declare-fun temp10778_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10778_169 () (_ BitVec 64))
(declare-fun temp10778_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10778_171 () (_ BitVec 64))
(declare-fun temp10778_172 () (_ BitVec 64))
(declare-fun temp10778_173 () (_ BitVec 64))
(declare-fun temp10778_174 () (_ BitVec 64))
(declare-fun temp10778_175 () (_ BitVec 64))
(declare-fun temp10778_176 () (_ BitVec 64))
(declare-fun temp10778_177 () (_ BitVec 64))
(declare-fun temp10778_178 () (_ BitVec 64))
(declare-fun temp10778_179 () (_ BitVec 64))
(declare-fun temp10778_180 () (_ BitVec 64))
(declare-fun temp10778_181 () (_ BitVec 64))
(declare-fun temp10778_182 () (_ BitVec 64))
(declare-fun temp10778_183 () (_ BitVec 64))
(declare-fun temp10778_184 () (_ BitVec 64))
(declare-fun temp10778_185 () (_ BitVec 64))
(declare-fun temp10778_186 () (_ BitVec 64))
(declare-fun temp10778_187 () (_ BitVec 64))
(declare-fun temp10778_188 () (_ BitVec 64))
(declare-fun temp10778_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10778_190 () (_ BitVec 64))
(declare-fun temp10778_192 () (_ BitVec 64))
(declare-fun temp10778_193 () (_ BitVec 64))
(declare-fun temp10778_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10778_194 () (_ BitVec 64))
(declare-fun temp10778_195 () (_ BitVec 64))
(declare-fun temp10778_197 () (_ BitVec 64))
(declare-fun temp10778_198 () (_ BitVec 64))
(declare-fun temp10778_196 () (_ BitVec 64))
(declare-fun temp10778_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10778_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10778_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10778_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10778_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10778_204 () (_ BitVec 64))
(declare-fun temp10778_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10778_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10778_207 () (_ BitVec 64))
(declare-fun temp10778_208 () (_ BitVec 64))
(declare-fun temp10778_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10778_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10778_211 () (_ BitVec 64))
(declare-fun temp10778_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10778_213 () (_ BitVec 64))
(declare-fun temp10778_214 () (_ BitVec 64))
(declare-fun temp10778_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10778_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10778_217 () (_ BitVec 64))
(declare-fun temp10778_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10778_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10778_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var5190032 () (_ BitVec 64))
(declare-fun var5452176 () (_ BitVec 64))
(declare-fun temp10778_221 () (_ BitVec 64))
(declare-fun var5779856 () (_ BitVec 64))
(declare-fun temp10778_222 () (_ BitVec 64))
(assert (= temp10778_1 #x0000000000000001))
(assert (= var77203 temp10778_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10778_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10778_2)))
(assert (= temp10778_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10778_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10778_4 #x0000000000000000))
(assert (= var210941 temp10778_4))
(assert (= temp10778_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10778_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10778_6 #x0000000000000000))
(assert (= var210986 temp10778_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10778_7 #x0000000000000000))
(assert (= temp10778_8 temp10778_7))
(assert (= temp10778_9 (select ARGNAME_padding_NAMEEND_VAL temp10778_8)))
(assert (= temp10778_10 #x0000000000000001))
(assert (= temp10778_11 temp10778_10))
(assert (= temp10778_12 (select ARGNAME_padding_NAMEEND_VAL temp10778_11)))
(assert (= temp10778_13 #x0000000000000002))
(assert (= temp10778_14 temp10778_13))
(assert (= temp10778_15 (select ARGNAME_padding_NAMEEND_VAL temp10778_14)))
(assert (= temp10778_16 #x0000000000000003))
(assert (= temp10778_17 temp10778_16))
(assert (= temp10778_18 (select ARGNAME_padding_NAMEEND_VAL temp10778_17)))
(assert (= temp10778_19 #x0000000000000004))
(assert (= temp10778_20 temp10778_19))
(assert (= temp10778_21 (select ARGNAME_padding_NAMEEND_VAL temp10778_20)))
(assert (= temp10778_22 #x0000000000000005))
(assert (= temp10778_23 temp10778_22))
(assert (= temp10778_24 (select ARGNAME_padding_NAMEEND_VAL temp10778_23)))
(assert (= temp10778_25 #x0000000000000000))
(assert (= temp10778_26 #x0000000000000000))
(assert (= temp10778_27 temp10778_26))
(assert (= temp10778_28 (select ARGNAME_padding_NAMEEND_VAL temp10778_27)))
(assert (= temp10778_29 #x0000000000000000))
(assert (= temp10778_30 #x0000000000000001))
(assert (= temp10778_31 temp10778_30))
(assert (= temp10778_32 (select ARGNAME_padding_NAMEEND_VAL temp10778_31)))
(assert (= temp10778_33 #x0000000000000000))
(assert (= temp10778_34 #x0000000000000002))
(assert (= temp10778_35 temp10778_34))
(assert (= temp10778_36 (select ARGNAME_padding_NAMEEND_VAL temp10778_35)))
(assert (= temp10778_37 #x0000000000000000))
(assert (= temp10778_38 #x0000000000000003))
(assert (= temp10778_39 temp10778_38))
(assert (= temp10778_40 (select ARGNAME_padding_NAMEEND_VAL temp10778_39)))
(assert (= temp10778_41 #x0000000000000000))
(assert (= temp10778_42 #x0000000000000004))
(assert (= temp10778_43 temp10778_42))
(assert (= temp10778_44 (select ARGNAME_padding_NAMEEND_VAL temp10778_43)))
(assert (= temp10778_45 #x0000000000000000))
(assert (= temp10778_46 #x0000000000000005))
(assert (= temp10778_47 temp10778_46))
(assert (= temp10778_48 (select ARGNAME_padding_NAMEEND_VAL temp10778_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10778_28 temp10778_25)
             (bvslt temp10778_32 temp10778_29)
             (bvslt temp10778_36 temp10778_33)
             (bvslt temp10778_40 temp10778_37)
             (bvslt temp10778_44 temp10778_41)
             (bvslt temp10778_48 temp10778_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10778_49 #x0000000000000000))
(assert (= var1191714 temp10778_49))
(assert (= temp10778_50 #x0000000000000000))
(assert (= temp10778_51 temp10778_50))
(assert (= temp10778_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10778_51)))
(assert (= temp10778_53 #x0000000000000001))
(assert (= temp10778_54 temp10778_53))
(assert (= temp10778_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10778_54)))
(assert (= temp10778_56 #x0000000000000002))
(assert (= temp10778_57 temp10778_56))
(assert (= temp10778_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10778_57)))
(assert (= temp10778_59 #x0000000000000003))
(assert (= temp10778_60 temp10778_59))
(assert (= temp10778_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10778_60)))
(assert (= temp10778_62 #x0000000000000004))
(assert (= temp10778_63 temp10778_62))
(assert (= temp10778_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10778_63)))
(assert (= temp10778_65 #x0000000000000005))
(assert (= temp10778_66 temp10778_65))
(assert (= temp10778_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10778_66)))
(assert (= temp10778_68 #x0000000000000000))
(assert (= temp10778_69 #x0000000000000000))
(assert (= temp10778_70 temp10778_69))
(assert (= temp10778_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10778_70)))
(assert (= temp10778_72 #x0000000000000000))
(assert (= temp10778_73 #x0000000000000001))
(assert (= temp10778_74 temp10778_73))
(assert (= temp10778_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10778_74)))
(assert (= temp10778_76 #x0000000000000000))
(assert (= temp10778_77 #x0000000000000002))
(assert (= temp10778_78 temp10778_77))
(assert (= temp10778_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10778_78)))
(assert (= temp10778_80 #x0000000000000000))
(assert (= temp10778_81 #x0000000000000003))
(assert (= temp10778_82 temp10778_81))
(assert (= temp10778_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10778_82)))
(assert (= temp10778_84 #x0000000000000000))
(assert (= temp10778_85 #x0000000000000004))
(assert (= temp10778_86 temp10778_85))
(assert (= temp10778_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10778_86)))
(assert (= temp10778_88 #x0000000000000000))
(assert (= temp10778_89 #x0000000000000005))
(assert (= temp10778_90 temp10778_89))
(assert (= temp10778_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10778_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10778_71 temp10778_68)
             (bvslt temp10778_75 temp10778_72)
             (bvslt temp10778_79 temp10778_76)
             (bvslt temp10778_83 temp10778_80)
             (bvslt temp10778_87 temp10778_84)
             (bvslt temp10778_91 temp10778_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10778_92 #x0000000000000000))
(assert (= var1191725 temp10778_92))
(assert (= temp10778_93 #x0000000000000000))
(assert (= temp10778_94 temp10778_93))
(assert (= temp10778_95 (select ARGNAME_stride_NAMEEND_VAL temp10778_94)))
(assert (= temp10778_96 #x0000000000000001))
(assert (= temp10778_97 temp10778_96))
(assert (= temp10778_98 (select ARGNAME_stride_NAMEEND_VAL temp10778_97)))
(assert (= temp10778_99 #x0000000000000002))
(assert (= temp10778_100 temp10778_99))
(assert (= temp10778_101 (select ARGNAME_stride_NAMEEND_VAL temp10778_100)))
(assert (= temp10778_102 #x0000000000000003))
(assert (= temp10778_103 temp10778_102))
(assert (= temp10778_104 (select ARGNAME_stride_NAMEEND_VAL temp10778_103)))
(assert (= temp10778_105 #x0000000000000004))
(assert (= temp10778_106 temp10778_105))
(assert (= temp10778_107 (select ARGNAME_stride_NAMEEND_VAL temp10778_106)))
(assert (= temp10778_108 #x0000000000000005))
(assert (= temp10778_109 temp10778_108))
(assert (= temp10778_110 (select ARGNAME_stride_NAMEEND_VAL temp10778_109)))
(assert (= temp10778_111 #x0000000000000000))
(assert (= temp10778_112 #x0000000000000000))
(assert (= temp10778_113 temp10778_112))
(assert (= temp10778_114 (select ARGNAME_stride_NAMEEND_VAL temp10778_113)))
(assert (= temp10778_115 #x0000000000000000))
(assert (= temp10778_116 #x0000000000000001))
(assert (= temp10778_117 temp10778_116))
(assert (= temp10778_118 (select ARGNAME_stride_NAMEEND_VAL temp10778_117)))
(assert (= temp10778_119 #x0000000000000000))
(assert (= temp10778_120 #x0000000000000002))
(assert (= temp10778_121 temp10778_120))
(assert (= temp10778_122 (select ARGNAME_stride_NAMEEND_VAL temp10778_121)))
(assert (= temp10778_123 #x0000000000000000))
(assert (= temp10778_124 #x0000000000000003))
(assert (= temp10778_125 temp10778_124))
(assert (= temp10778_126 (select ARGNAME_stride_NAMEEND_VAL temp10778_125)))
(assert (= temp10778_127 #x0000000000000000))
(assert (= temp10778_128 #x0000000000000004))
(assert (= temp10778_129 temp10778_128))
(assert (= temp10778_130 (select ARGNAME_stride_NAMEEND_VAL temp10778_129)))
(assert (= temp10778_131 #x0000000000000000))
(assert (= temp10778_132 #x0000000000000005))
(assert (= temp10778_133 temp10778_132))
(assert (= temp10778_134 (select ARGNAME_stride_NAMEEND_VAL temp10778_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10778_114 temp10778_111)
             (bvsle temp10778_118 temp10778_115)
             (bvsle temp10778_122 temp10778_119)
             (bvsle temp10778_126 temp10778_123)
             (bvsle temp10778_130 temp10778_127)
             (bvsle temp10778_134 temp10778_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10778_135 #x0000000000000000))
(assert (= var1191735 temp10778_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10778_136 #x0000000000000001))
(assert (= var1191747 temp10778_136))
(assert (= temp10778_137 #x0000000000000000))
(assert (= var1179826 temp10778_137))
(assert (= temp10778_138 #x0000000000000000))
(assert (= temp10778_139 temp10778_138))
(assert (= temp10778_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10778_139)))
(assert (= temp10778_141 #x0000000000000001))
(assert (= temp10778_142 temp10778_141))
(assert (= temp10778_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10778_142)))
(assert (= temp10778_144 #x0000000000000002))
(assert (= temp10778_145 temp10778_144))
(assert (= temp10778_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10778_145)))
(assert (= temp10778_147 #x0000000000000003))
(assert (= temp10778_148 temp10778_147))
(assert (= temp10778_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10778_148)))
(assert (= temp10778_150 #x0000000000000004))
(assert (= temp10778_151 temp10778_150))
(assert (= temp10778_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10778_151)))
(assert (= temp10778_153 #x0000000000000005))
(assert (= temp10778_154 temp10778_153))
(assert (= temp10778_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10778_154)))
(assert (= temp10778_157 var1179826))
(assert (= temp10778_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10778_157)))
(assert (= temp10778_156 temp10778_158))
(assert (= var1191780
   (ite (bvslt temp10778_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10778_159 #x0000000000000000))
(assert (= var1191780 temp10778_159))
(assert (= temp10778_160 #x0000000000000000))
(assert (= var1179826 temp10778_160))
(assert (= temp10778_162 var1179826))
(assert (= temp10778_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10778_162)))
(assert (= temp10778_161 temp10778_163))
(assert (= var1191802 (bvsmod temp10778_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10778_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10778_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10778_165 #x0000000000000001))
(assert (= var1191803 temp10778_165))
(assert (= temp10778_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10778_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10778_167 #x0000000000000001))
(assert (= var1191823 temp10778_167))
(assert (= temp10778_168 #x0000000000000001))
(assert (= var1180714 temp10778_168))
(assert (= temp10778_169 #x0000000000000000))
(assert (= temp10778_170 temp10778_169))
(assert (= temp10778_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10778_170)))
(assert (= temp10778_172 #x0000000000000001))
(assert (= temp10778_173 temp10778_172))
(assert (= temp10778_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10778_173)))
(assert (= temp10778_175 #x0000000000000002))
(assert (= temp10778_176 temp10778_175))
(assert (= temp10778_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10778_176)))
(assert (= temp10778_178 #x0000000000000003))
(assert (= temp10778_179 temp10778_178))
(assert (= temp10778_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10778_179)))
(assert (= temp10778_181 #x0000000000000004))
(assert (= temp10778_182 temp10778_181))
(assert (= temp10778_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10778_182)))
(assert (= temp10778_184 #x0000000000000005))
(assert (= temp10778_185 temp10778_184))
(assert (= temp10778_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10778_185)))
(assert (= temp10778_187 #x0000000000000000))
(assert (= temp10778_188
   (ite (bvslt var1180714 temp10778_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10778_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10778_188)))
(assert (= var1191831 temp10778_189))
(assert (bvslt (ite (bvslt var1180714 temp10778_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10778_190 #x0000000000000001))
(assert (= var1180714 temp10778_190))
(assert (= temp10778_192 var1180714))
(assert (= temp10778_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10778_192)))
(assert (= temp10778_191 temp10778_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10778_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10778_194 #x0000000000000001))
(assert (= var1191836 temp10778_194))
(assert (= temp10778_195 #x0000000000000000))
(assert (= var1179826 temp10778_195))
(assert (= temp10778_197 var1179826))
(assert (= temp10778_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10778_197)))
(assert (= temp10778_196 temp10778_198))
(assert (= temp10778_199 #x0000000000000002))
(assert (= var1586025 temp10778_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10778_200 #x0000000000000001))
(assert (= var1191993 temp10778_200))
(assert (= temp10778_201 #x0000000000000001))
(assert (= var2700303 temp10778_201))
(assert (= temp10778_202 #x0000000000000001))
(assert (= var2962447 temp10778_202))
(assert (= temp10778_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10778_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10778_204 #x0000000000000001))
(assert (= var211058 temp10778_204))
(assert (= temp10778_205 #x0000000000000001))
(assert (= var211188 temp10778_205))
(assert (= var3879401 var211188))
(assert (= temp10778_206 #x0000000000000000))
(assert (= var3866802 temp10778_206))
(assert (= temp10778_207 #x0000000000000000))
(assert (= temp10778_208
   (ite (bvslt var3866802 temp10778_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10778_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10778_208)))
(assert (= var3879420 temp10778_209))
(assert (bvslt (ite (bvslt var3866802 temp10778_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10778_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10778_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10778_211 #x0000000000000000))
(assert (= var3879421 temp10778_211))
(assert (= temp10778_212 #x0000000000000001))
(assert (= var3867690 temp10778_212))
(assert (= temp10778_213 #x0000000000000000))
(assert (= temp10778_214
   (ite (bvslt var3867690 temp10778_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10778_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10778_214)))
(assert (= var3879423 temp10778_215))
(assert (bvslt (ite (bvslt var3867690 temp10778_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10778_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10778_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10778_217 #x0000000000000001))
(assert (= var3879424 temp10778_217))
(assert (= temp10778_218 #x0000000000000000))
(assert (= var4133117 temp10778_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10778_219 #x0000000000000002))
(assert (= var4339331 temp10778_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10778_220 #x0000000000000000))
(assert (= var4404892 temp10778_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var5190032 var211201))
(assert (= var5452176 var211201))
(assert (= temp10778_221 #x0000000000000000))
(assert (= var5779856 temp10778_221))
(assert (= temp10778_222 #x0000000000000001))
(assert (= var211058 temp10778_222))
(model-add temp10778_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10778_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10778_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10778_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




