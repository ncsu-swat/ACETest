(declare-fun temp108_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp108_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp108_3 () (_ BitVec 64))
(declare-fun temp108_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp108_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp108_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp108_7 () (_ BitVec 64))
(declare-fun temp108_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp108_9 () (_ BitVec 64))
(declare-fun temp108_10 () (_ BitVec 64))
(declare-fun temp108_11 () (_ BitVec 64))
(declare-fun temp108_12 () (_ BitVec 64))
(declare-fun temp108_13 () (_ BitVec 64))
(declare-fun temp108_14 () (_ BitVec 64))
(declare-fun temp108_15 () (_ BitVec 64))
(declare-fun temp108_16 () (_ BitVec 64))
(declare-fun temp108_17 () (_ BitVec 64))
(declare-fun temp108_18 () (_ BitVec 64))
(declare-fun temp108_19 () (_ BitVec 64))
(declare-fun temp108_20 () (_ BitVec 64))
(declare-fun temp108_21 () (_ BitVec 64))
(declare-fun temp108_22 () (_ BitVec 64))
(declare-fun temp108_23 () (_ BitVec 64))
(declare-fun temp108_24 () (_ BitVec 64))
(declare-fun temp108_25 () (_ BitVec 64))
(declare-fun temp108_26 () (_ BitVec 64))
(declare-fun temp108_27 () (_ BitVec 64))
(declare-fun temp108_28 () (_ BitVec 64))
(declare-fun temp108_29 () (_ BitVec 64))
(declare-fun temp108_30 () (_ BitVec 64))
(declare-fun temp108_31 () (_ BitVec 64))
(declare-fun temp108_32 () (_ BitVec 64))
(declare-fun temp108_33 () (_ BitVec 64))
(declare-fun temp108_34 () (_ BitVec 64))
(declare-fun temp108_35 () (_ BitVec 64))
(declare-fun temp108_36 () (_ BitVec 64))
(declare-fun temp108_37 () (_ BitVec 64))
(declare-fun temp108_38 () (_ BitVec 64))
(declare-fun temp108_39 () (_ BitVec 64))
(declare-fun temp108_40 () (_ BitVec 64))
(declare-fun temp108_41 () (_ BitVec 64))
(declare-fun temp108_42 () (_ BitVec 64))
(declare-fun temp108_43 () (_ BitVec 64))
(declare-fun temp108_44 () (_ BitVec 64))
(declare-fun temp108_45 () (_ BitVec 64))
(declare-fun temp108_46 () (_ BitVec 64))
(declare-fun temp108_47 () (_ BitVec 64))
(declare-fun temp108_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp108_49 () (_ BitVec 64))
(declare-fun temp108_50 () (_ BitVec 64))
(declare-fun temp108_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp108_52 () (_ BitVec 64))
(declare-fun temp108_53 () (_ BitVec 64))
(declare-fun temp108_54 () (_ BitVec 64))
(declare-fun temp108_55 () (_ BitVec 64))
(declare-fun temp108_56 () (_ BitVec 64))
(declare-fun temp108_57 () (_ BitVec 64))
(declare-fun temp108_58 () (_ BitVec 64))
(declare-fun temp108_59 () (_ BitVec 64))
(declare-fun temp108_60 () (_ BitVec 64))
(declare-fun temp108_61 () (_ BitVec 64))
(declare-fun temp108_62 () (_ BitVec 64))
(declare-fun temp108_63 () (_ BitVec 64))
(declare-fun temp108_64 () (_ BitVec 64))
(declare-fun temp108_65 () (_ BitVec 64))
(declare-fun temp108_66 () (_ BitVec 64))
(declare-fun temp108_67 () (_ BitVec 64))
(declare-fun temp108_68 () (_ BitVec 64))
(declare-fun temp108_69 () (_ BitVec 64))
(declare-fun temp108_70 () (_ BitVec 64))
(declare-fun temp108_71 () (_ BitVec 64))
(declare-fun temp108_72 () (_ BitVec 64))
(declare-fun temp108_73 () (_ BitVec 64))
(declare-fun temp108_74 () (_ BitVec 64))
(declare-fun temp108_75 () (_ BitVec 64))
(declare-fun temp108_76 () (_ BitVec 64))
(declare-fun temp108_77 () (_ BitVec 64))
(declare-fun temp108_78 () (_ BitVec 64))
(declare-fun temp108_79 () (_ BitVec 64))
(declare-fun temp108_80 () (_ BitVec 64))
(declare-fun temp108_81 () (_ BitVec 64))
(declare-fun temp108_82 () (_ BitVec 64))
(declare-fun temp108_83 () (_ BitVec 64))
(declare-fun temp108_84 () (_ BitVec 64))
(declare-fun temp108_85 () (_ BitVec 64))
(declare-fun temp108_86 () (_ BitVec 64))
(declare-fun temp108_87 () (_ BitVec 64))
(declare-fun temp108_88 () (_ BitVec 64))
(declare-fun temp108_89 () (_ BitVec 64))
(declare-fun temp108_90 () (_ BitVec 64))
(declare-fun temp108_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp108_92 () (_ BitVec 64))
(declare-fun temp108_93 () (_ BitVec 64))
(declare-fun temp108_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp108_95 () (_ BitVec 64))
(declare-fun temp108_96 () (_ BitVec 64))
(declare-fun temp108_97 () (_ BitVec 64))
(declare-fun temp108_98 () (_ BitVec 64))
(declare-fun temp108_99 () (_ BitVec 64))
(declare-fun temp108_100 () (_ BitVec 64))
(declare-fun temp108_101 () (_ BitVec 64))
(declare-fun temp108_102 () (_ BitVec 64))
(declare-fun temp108_103 () (_ BitVec 64))
(declare-fun temp108_104 () (_ BitVec 64))
(declare-fun temp108_105 () (_ BitVec 64))
(declare-fun temp108_106 () (_ BitVec 64))
(declare-fun temp108_107 () (_ BitVec 64))
(declare-fun temp108_108 () (_ BitVec 64))
(declare-fun temp108_109 () (_ BitVec 64))
(declare-fun temp108_110 () (_ BitVec 64))
(declare-fun temp108_111 () (_ BitVec 64))
(declare-fun temp108_112 () (_ BitVec 64))
(declare-fun temp108_113 () (_ BitVec 64))
(declare-fun temp108_114 () (_ BitVec 64))
(declare-fun temp108_115 () (_ BitVec 64))
(declare-fun temp108_116 () (_ BitVec 64))
(declare-fun temp108_117 () (_ BitVec 64))
(declare-fun temp108_118 () (_ BitVec 64))
(declare-fun temp108_119 () (_ BitVec 64))
(declare-fun temp108_120 () (_ BitVec 64))
(declare-fun temp108_121 () (_ BitVec 64))
(declare-fun temp108_122 () (_ BitVec 64))
(declare-fun temp108_123 () (_ BitVec 64))
(declare-fun temp108_124 () (_ BitVec 64))
(declare-fun temp108_125 () (_ BitVec 64))
(declare-fun temp108_126 () (_ BitVec 64))
(declare-fun temp108_127 () (_ BitVec 64))
(declare-fun temp108_128 () (_ BitVec 64))
(declare-fun temp108_129 () (_ BitVec 64))
(declare-fun temp108_130 () (_ BitVec 64))
(declare-fun temp108_131 () (_ BitVec 64))
(declare-fun temp108_132 () (_ BitVec 64))
(declare-fun temp108_133 () (_ BitVec 64))
(declare-fun temp108_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp108_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp108_136 () (_ BitVec 64))
(declare-fun temp108_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp108_138 () (_ BitVec 64))
(declare-fun temp108_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp108_140 () (_ BitVec 64))
(declare-fun temp108_141 () (_ BitVec 64))
(declare-fun temp108_142 () (_ BitVec 64))
(declare-fun temp108_143 () (_ BitVec 64))
(declare-fun temp108_144 () (_ BitVec 64))
(declare-fun temp108_145 () (_ BitVec 64))
(declare-fun temp108_146 () (_ BitVec 64))
(declare-fun temp108_147 () (_ BitVec 64))
(declare-fun temp108_148 () (_ BitVec 64))
(declare-fun temp108_149 () (_ BitVec 64))
(declare-fun temp108_150 () (_ BitVec 64))
(declare-fun temp108_151 () (_ BitVec 64))
(declare-fun temp108_152 () (_ BitVec 64))
(declare-fun temp108_153 () (_ BitVec 64))
(declare-fun temp108_154 () (_ BitVec 64))
(declare-fun temp108_155 () (_ BitVec 64))
(declare-fun temp108_157 () (_ BitVec 64))
(declare-fun temp108_158 () (_ BitVec 64))
(declare-fun temp108_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp108_159 () (_ BitVec 64))
(declare-fun temp108_160 () (_ BitVec 64))
(declare-fun temp108_162 () (_ BitVec 64))
(declare-fun temp108_163 () (_ BitVec 64))
(declare-fun temp108_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp108_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp108_165 () (_ BitVec 64))
(declare-fun temp108_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp108_167 () (_ BitVec 64))
(declare-fun temp108_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp108_169 () (_ BitVec 64))
(declare-fun temp108_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp108_171 () (_ BitVec 64))
(declare-fun temp108_172 () (_ BitVec 64))
(declare-fun temp108_173 () (_ BitVec 64))
(declare-fun temp108_174 () (_ BitVec 64))
(declare-fun temp108_175 () (_ BitVec 64))
(declare-fun temp108_176 () (_ BitVec 64))
(declare-fun temp108_177 () (_ BitVec 64))
(declare-fun temp108_178 () (_ BitVec 64))
(declare-fun temp108_179 () (_ BitVec 64))
(declare-fun temp108_180 () (_ BitVec 64))
(declare-fun temp108_181 () (_ BitVec 64))
(declare-fun temp108_182 () (_ BitVec 64))
(declare-fun temp108_183 () (_ BitVec 64))
(declare-fun temp108_184 () (_ BitVec 64))
(declare-fun temp108_185 () (_ BitVec 64))
(declare-fun temp108_186 () (_ BitVec 64))
(declare-fun temp108_187 () (_ BitVec 64))
(declare-fun temp108_188 () (_ BitVec 64))
(declare-fun temp108_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp108_190 () (_ BitVec 64))
(declare-fun temp108_192 () (_ BitVec 64))
(declare-fun temp108_193 () (_ BitVec 64))
(declare-fun temp108_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp108_194 () (_ BitVec 64))
(declare-fun temp108_195 () (_ BitVec 64))
(declare-fun temp108_197 () (_ BitVec 64))
(declare-fun temp108_198 () (_ BitVec 64))
(declare-fun temp108_196 () (_ BitVec 64))
(declare-fun temp108_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp108_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp108_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp108_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp108_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp108_204 () (_ BitVec 64))
(declare-fun temp108_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp108_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp108_207 () (_ BitVec 64))
(declare-fun temp108_208 () (_ BitVec 64))
(declare-fun temp108_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp108_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp108_211 () (_ BitVec 64))
(declare-fun temp108_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp108_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp108_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp108_216 () (_ BitVec 64))
(declare-fun temp108_215 () (_ BitVec 64))
(declare-fun temp108_217 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp108_218 () (_ BitVec 64))
(declare-fun temp108_219 () (_ BitVec 64))
(declare-fun temp108_220 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp108_221 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp108_222 () (_ BitVec 64))
(declare-fun temp108_224 () (_ BitVec 64))
(declare-fun temp108_223 () (_ BitVec 64))
(declare-fun temp108_225 () (_ BitVec 64))
(declare-fun temp108_226 () (_ BitVec 64))
(declare-fun var5518100 () (_ BitVec 64))
(declare-fun var5518067 () (_ BitVec 64))
(declare-fun var5386631 () (_ BitVec 64))
(declare-fun var5386627 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp108_227 () (_ BitVec 64))
(assert (= temp108_1 #x0000000000000001))
(assert (= var77203 temp108_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp108_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp108_2)))
(assert (= temp108_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp108_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp108_4 #x0000000000000000))
(assert (= var210941 temp108_4))
(assert (= temp108_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp108_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp108_6 #x0000000000000000))
(assert (= var210986 temp108_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp108_7 #x0000000000000000))
(assert (= temp108_8 temp108_7))
(assert (= temp108_9 (select ARGNAME_padding_NAMEEND_VAL temp108_8)))
(assert (= temp108_10 #x0000000000000001))
(assert (= temp108_11 temp108_10))
(assert (= temp108_12 (select ARGNAME_padding_NAMEEND_VAL temp108_11)))
(assert (= temp108_13 #x0000000000000002))
(assert (= temp108_14 temp108_13))
(assert (= temp108_15 (select ARGNAME_padding_NAMEEND_VAL temp108_14)))
(assert (= temp108_16 #x0000000000000003))
(assert (= temp108_17 temp108_16))
(assert (= temp108_18 (select ARGNAME_padding_NAMEEND_VAL temp108_17)))
(assert (= temp108_19 #x0000000000000004))
(assert (= temp108_20 temp108_19))
(assert (= temp108_21 (select ARGNAME_padding_NAMEEND_VAL temp108_20)))
(assert (= temp108_22 #x0000000000000005))
(assert (= temp108_23 temp108_22))
(assert (= temp108_24 (select ARGNAME_padding_NAMEEND_VAL temp108_23)))
(assert (= temp108_25 #x0000000000000000))
(assert (= temp108_26 #x0000000000000000))
(assert (= temp108_27 temp108_26))
(assert (= temp108_28 (select ARGNAME_padding_NAMEEND_VAL temp108_27)))
(assert (= temp108_29 #x0000000000000000))
(assert (= temp108_30 #x0000000000000001))
(assert (= temp108_31 temp108_30))
(assert (= temp108_32 (select ARGNAME_padding_NAMEEND_VAL temp108_31)))
(assert (= temp108_33 #x0000000000000000))
(assert (= temp108_34 #x0000000000000002))
(assert (= temp108_35 temp108_34))
(assert (= temp108_36 (select ARGNAME_padding_NAMEEND_VAL temp108_35)))
(assert (= temp108_37 #x0000000000000000))
(assert (= temp108_38 #x0000000000000003))
(assert (= temp108_39 temp108_38))
(assert (= temp108_40 (select ARGNAME_padding_NAMEEND_VAL temp108_39)))
(assert (= temp108_41 #x0000000000000000))
(assert (= temp108_42 #x0000000000000004))
(assert (= temp108_43 temp108_42))
(assert (= temp108_44 (select ARGNAME_padding_NAMEEND_VAL temp108_43)))
(assert (= temp108_45 #x0000000000000000))
(assert (= temp108_46 #x0000000000000005))
(assert (= temp108_47 temp108_46))
(assert (= temp108_48 (select ARGNAME_padding_NAMEEND_VAL temp108_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp108_28 temp108_25)
             (bvslt temp108_32 temp108_29)
             (bvslt temp108_36 temp108_33)
             (bvslt temp108_40 temp108_37)
             (bvslt temp108_44 temp108_41)
             (bvslt temp108_48 temp108_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp108_49 #x0000000000000000))
(assert (= var1191714 temp108_49))
(assert (= temp108_50 #x0000000000000000))
(assert (= temp108_51 temp108_50))
(assert (= temp108_52 (select ARGNAME_output_padding_NAMEEND_VAL temp108_51)))
(assert (= temp108_53 #x0000000000000001))
(assert (= temp108_54 temp108_53))
(assert (= temp108_55 (select ARGNAME_output_padding_NAMEEND_VAL temp108_54)))
(assert (= temp108_56 #x0000000000000002))
(assert (= temp108_57 temp108_56))
(assert (= temp108_58 (select ARGNAME_output_padding_NAMEEND_VAL temp108_57)))
(assert (= temp108_59 #x0000000000000003))
(assert (= temp108_60 temp108_59))
(assert (= temp108_61 (select ARGNAME_output_padding_NAMEEND_VAL temp108_60)))
(assert (= temp108_62 #x0000000000000004))
(assert (= temp108_63 temp108_62))
(assert (= temp108_64 (select ARGNAME_output_padding_NAMEEND_VAL temp108_63)))
(assert (= temp108_65 #x0000000000000005))
(assert (= temp108_66 temp108_65))
(assert (= temp108_67 (select ARGNAME_output_padding_NAMEEND_VAL temp108_66)))
(assert (= temp108_68 #x0000000000000000))
(assert (= temp108_69 #x0000000000000000))
(assert (= temp108_70 temp108_69))
(assert (= temp108_71 (select ARGNAME_output_padding_NAMEEND_VAL temp108_70)))
(assert (= temp108_72 #x0000000000000000))
(assert (= temp108_73 #x0000000000000001))
(assert (= temp108_74 temp108_73))
(assert (= temp108_75 (select ARGNAME_output_padding_NAMEEND_VAL temp108_74)))
(assert (= temp108_76 #x0000000000000000))
(assert (= temp108_77 #x0000000000000002))
(assert (= temp108_78 temp108_77))
(assert (= temp108_79 (select ARGNAME_output_padding_NAMEEND_VAL temp108_78)))
(assert (= temp108_80 #x0000000000000000))
(assert (= temp108_81 #x0000000000000003))
(assert (= temp108_82 temp108_81))
(assert (= temp108_83 (select ARGNAME_output_padding_NAMEEND_VAL temp108_82)))
(assert (= temp108_84 #x0000000000000000))
(assert (= temp108_85 #x0000000000000004))
(assert (= temp108_86 temp108_85))
(assert (= temp108_87 (select ARGNAME_output_padding_NAMEEND_VAL temp108_86)))
(assert (= temp108_88 #x0000000000000000))
(assert (= temp108_89 #x0000000000000005))
(assert (= temp108_90 temp108_89))
(assert (= temp108_91 (select ARGNAME_output_padding_NAMEEND_VAL temp108_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp108_71 temp108_68)
             (bvslt temp108_75 temp108_72)
             (bvslt temp108_79 temp108_76)
             (bvslt temp108_83 temp108_80)
             (bvslt temp108_87 temp108_84)
             (bvslt temp108_91 temp108_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp108_92 #x0000000000000000))
(assert (= var1191725 temp108_92))
(assert (= temp108_93 #x0000000000000000))
(assert (= temp108_94 temp108_93))
(assert (= temp108_95 (select ARGNAME_stride_NAMEEND_VAL temp108_94)))
(assert (= temp108_96 #x0000000000000001))
(assert (= temp108_97 temp108_96))
(assert (= temp108_98 (select ARGNAME_stride_NAMEEND_VAL temp108_97)))
(assert (= temp108_99 #x0000000000000002))
(assert (= temp108_100 temp108_99))
(assert (= temp108_101 (select ARGNAME_stride_NAMEEND_VAL temp108_100)))
(assert (= temp108_102 #x0000000000000003))
(assert (= temp108_103 temp108_102))
(assert (= temp108_104 (select ARGNAME_stride_NAMEEND_VAL temp108_103)))
(assert (= temp108_105 #x0000000000000004))
(assert (= temp108_106 temp108_105))
(assert (= temp108_107 (select ARGNAME_stride_NAMEEND_VAL temp108_106)))
(assert (= temp108_108 #x0000000000000005))
(assert (= temp108_109 temp108_108))
(assert (= temp108_110 (select ARGNAME_stride_NAMEEND_VAL temp108_109)))
(assert (= temp108_111 #x0000000000000000))
(assert (= temp108_112 #x0000000000000000))
(assert (= temp108_113 temp108_112))
(assert (= temp108_114 (select ARGNAME_stride_NAMEEND_VAL temp108_113)))
(assert (= temp108_115 #x0000000000000000))
(assert (= temp108_116 #x0000000000000001))
(assert (= temp108_117 temp108_116))
(assert (= temp108_118 (select ARGNAME_stride_NAMEEND_VAL temp108_117)))
(assert (= temp108_119 #x0000000000000000))
(assert (= temp108_120 #x0000000000000002))
(assert (= temp108_121 temp108_120))
(assert (= temp108_122 (select ARGNAME_stride_NAMEEND_VAL temp108_121)))
(assert (= temp108_123 #x0000000000000000))
(assert (= temp108_124 #x0000000000000003))
(assert (= temp108_125 temp108_124))
(assert (= temp108_126 (select ARGNAME_stride_NAMEEND_VAL temp108_125)))
(assert (= temp108_127 #x0000000000000000))
(assert (= temp108_128 #x0000000000000004))
(assert (= temp108_129 temp108_128))
(assert (= temp108_130 (select ARGNAME_stride_NAMEEND_VAL temp108_129)))
(assert (= temp108_131 #x0000000000000000))
(assert (= temp108_132 #x0000000000000005))
(assert (= temp108_133 temp108_132))
(assert (= temp108_134 (select ARGNAME_stride_NAMEEND_VAL temp108_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp108_114 temp108_111)
             (bvsle temp108_118 temp108_115)
             (bvsle temp108_122 temp108_119)
             (bvsle temp108_126 temp108_123)
             (bvsle temp108_130 temp108_127)
             (bvsle temp108_134 temp108_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp108_135 #x0000000000000000))
(assert (= var1191735 temp108_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp108_136 #x0000000000000001))
(assert (= var1191747 temp108_136))
(assert (= temp108_137 #x0000000000000000))
(assert (= var1179826 temp108_137))
(assert (= temp108_138 #x0000000000000000))
(assert (= temp108_139 temp108_138))
(assert (= temp108_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp108_139)))
(assert (= temp108_141 #x0000000000000001))
(assert (= temp108_142 temp108_141))
(assert (= temp108_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp108_142)))
(assert (= temp108_144 #x0000000000000002))
(assert (= temp108_145 temp108_144))
(assert (= temp108_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp108_145)))
(assert (= temp108_147 #x0000000000000003))
(assert (= temp108_148 temp108_147))
(assert (= temp108_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp108_148)))
(assert (= temp108_150 #x0000000000000004))
(assert (= temp108_151 temp108_150))
(assert (= temp108_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp108_151)))
(assert (= temp108_153 #x0000000000000005))
(assert (= temp108_154 temp108_153))
(assert (= temp108_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp108_154)))
(assert (= temp108_157 var1179826))
(assert (= temp108_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp108_157)))
(assert (= temp108_156 temp108_158))
(assert (= var1191780
   (ite (bvslt temp108_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp108_159 #x0000000000000000))
(assert (= var1191780 temp108_159))
(assert (= temp108_160 #x0000000000000000))
(assert (= var1179826 temp108_160))
(assert (= temp108_162 var1179826))
(assert (= temp108_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp108_162)))
(assert (= temp108_161 temp108_163))
(assert (= var1191802 (bvsmod temp108_161 ARGNAME_groups_NAMEEND)))
(assert (= temp108_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp108_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp108_165 #x0000000000000001))
(assert (= var1191803 temp108_165))
(assert (= temp108_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp108_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp108_167 #x0000000000000001))
(assert (= var1191823 temp108_167))
(assert (= temp108_168 #x0000000000000001))
(assert (= var1180714 temp108_168))
(assert (= temp108_169 #x0000000000000000))
(assert (= temp108_170 temp108_169))
(assert (= temp108_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp108_170)))
(assert (= temp108_172 #x0000000000000001))
(assert (= temp108_173 temp108_172))
(assert (= temp108_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp108_173)))
(assert (= temp108_175 #x0000000000000002))
(assert (= temp108_176 temp108_175))
(assert (= temp108_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp108_176)))
(assert (= temp108_178 #x0000000000000003))
(assert (= temp108_179 temp108_178))
(assert (= temp108_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp108_179)))
(assert (= temp108_181 #x0000000000000004))
(assert (= temp108_182 temp108_181))
(assert (= temp108_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp108_182)))
(assert (= temp108_184 #x0000000000000005))
(assert (= temp108_185 temp108_184))
(assert (= temp108_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp108_185)))
(assert (= temp108_187 #x0000000000000000))
(assert (= temp108_188
   (ite (bvslt var1180714 temp108_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp108_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp108_188)))
(assert (= var1191831 temp108_189))
(assert (bvslt (ite (bvslt var1180714 temp108_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp108_190 #x0000000000000001))
(assert (= var1180714 temp108_190))
(assert (= temp108_192 var1180714))
(assert (= temp108_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp108_192)))
(assert (= temp108_191 temp108_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp108_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp108_194 #x0000000000000001))
(assert (= var1191836 temp108_194))
(assert (= temp108_195 #x0000000000000000))
(assert (= var1179826 temp108_195))
(assert (= temp108_197 var1179826))
(assert (= temp108_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp108_197)))
(assert (= temp108_196 temp108_198))
(assert (= temp108_199 #x0000000000000002))
(assert (= var1586025 temp108_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp108_200 #x0000000000000001))
(assert (= var1191993 temp108_200))
(assert (= temp108_201 #x0000000000000001))
(assert (= var2700303 temp108_201))
(assert (= temp108_202 #x0000000000000001))
(assert (= var2962447 temp108_202))
(assert (= temp108_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp108_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp108_204 #x0000000000000001))
(assert (= var211058 temp108_204))
(assert (= temp108_205 #x0000000000000001))
(assert (= var211188 temp108_205))
(assert (= var3879401 var211188))
(assert (= temp108_206 #x0000000000000000))
(assert (= var3866802 temp108_206))
(assert (= temp108_207 #x0000000000000000))
(assert (= temp108_208
   (ite (bvslt var3866802 temp108_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp108_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp108_208)))
(assert (= var3879420 temp108_209))
(assert (bvslt (ite (bvslt var3866802 temp108_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp108_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp108_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp108_211 #x0000000000000001))
(assert (= var3879421 temp108_211))
(assert (= temp108_212 #x0000000000000000))
(assert (= var4079423 temp108_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp108_213 #x0000000000000002))
(assert (= var4208259 temp108_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp108_214 #x0000000000000000))
(assert (= var4273820 temp108_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp108_216 #xffffffffffffffff))
(assert (= temp108_215 temp108_216))
(assert (= temp108_217 #x0000000000000001))
(assert (= var197674 temp108_217))
(assert (= temp108_218 #x0000000000000000))
(assert (= temp108_219
   (ite (bvslt var197674 temp108_218)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp108_220 (select ARGNAME_input_NAMEEND_DIMSIZE temp108_219)))
(assert (= var211595 temp108_220))
(assert (bvslt (ite (bvslt var197674 temp108_218)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp108_221 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp108_221) #x0000000000000001 #x0000000000000000)))
(assert (= temp108_222 #x0000000000000001))
(assert (= var211596 temp108_222))
(assert (= temp108_224 #xffffffffffffffff))
(assert (= temp108_223 temp108_224))
(assert (= temp108_225 #x0000000000000001))
(assert (= var211058 temp108_225))
(assert (= temp108_226 #x0000000000000000))
(assert (= var5518100 temp108_226))
(assert (= var5518067 var5518100))
(assert (= var5386631 var5518067))
(assert (= var5386627 var5386631))
(assert (= var212669 var5386627))
(assert (= temp108_227 #x0000000000000000))
(assert (= var212669 temp108_227))
(model-add temp108_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp108_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp108_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp108_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






