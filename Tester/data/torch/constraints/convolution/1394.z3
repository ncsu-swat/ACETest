(declare-fun temp10589_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10589_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10589_3 () (_ BitVec 64))
(declare-fun temp10589_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10589_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10589_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10589_7 () (_ BitVec 64))
(declare-fun temp10589_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10589_9 () (_ BitVec 64))
(declare-fun temp10589_10 () (_ BitVec 64))
(declare-fun temp10589_11 () (_ BitVec 64))
(declare-fun temp10589_12 () (_ BitVec 64))
(declare-fun temp10589_13 () (_ BitVec 64))
(declare-fun temp10589_14 () (_ BitVec 64))
(declare-fun temp10589_15 () (_ BitVec 64))
(declare-fun temp10589_16 () (_ BitVec 64))
(declare-fun temp10589_17 () (_ BitVec 64))
(declare-fun temp10589_18 () (_ BitVec 64))
(declare-fun temp10589_19 () (_ BitVec 64))
(declare-fun temp10589_20 () (_ BitVec 64))
(declare-fun temp10589_21 () (_ BitVec 64))
(declare-fun temp10589_22 () (_ BitVec 64))
(declare-fun temp10589_23 () (_ BitVec 64))
(declare-fun temp10589_24 () (_ BitVec 64))
(declare-fun temp10589_25 () (_ BitVec 64))
(declare-fun temp10589_26 () (_ BitVec 64))
(declare-fun temp10589_27 () (_ BitVec 64))
(declare-fun temp10589_28 () (_ BitVec 64))
(declare-fun temp10589_29 () (_ BitVec 64))
(declare-fun temp10589_30 () (_ BitVec 64))
(declare-fun temp10589_31 () (_ BitVec 64))
(declare-fun temp10589_32 () (_ BitVec 64))
(declare-fun temp10589_33 () (_ BitVec 64))
(declare-fun temp10589_34 () (_ BitVec 64))
(declare-fun temp10589_35 () (_ BitVec 64))
(declare-fun temp10589_36 () (_ BitVec 64))
(declare-fun temp10589_37 () (_ BitVec 64))
(declare-fun temp10589_38 () (_ BitVec 64))
(declare-fun temp10589_39 () (_ BitVec 64))
(declare-fun temp10589_40 () (_ BitVec 64))
(declare-fun temp10589_41 () (_ BitVec 64))
(declare-fun temp10589_42 () (_ BitVec 64))
(declare-fun temp10589_43 () (_ BitVec 64))
(declare-fun temp10589_44 () (_ BitVec 64))
(declare-fun temp10589_45 () (_ BitVec 64))
(declare-fun temp10589_46 () (_ BitVec 64))
(declare-fun temp10589_47 () (_ BitVec 64))
(declare-fun temp10589_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10589_49 () (_ BitVec 64))
(declare-fun temp10589_50 () (_ BitVec 64))
(declare-fun temp10589_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10589_52 () (_ BitVec 64))
(declare-fun temp10589_53 () (_ BitVec 64))
(declare-fun temp10589_54 () (_ BitVec 64))
(declare-fun temp10589_55 () (_ BitVec 64))
(declare-fun temp10589_56 () (_ BitVec 64))
(declare-fun temp10589_57 () (_ BitVec 64))
(declare-fun temp10589_58 () (_ BitVec 64))
(declare-fun temp10589_59 () (_ BitVec 64))
(declare-fun temp10589_60 () (_ BitVec 64))
(declare-fun temp10589_61 () (_ BitVec 64))
(declare-fun temp10589_62 () (_ BitVec 64))
(declare-fun temp10589_63 () (_ BitVec 64))
(declare-fun temp10589_64 () (_ BitVec 64))
(declare-fun temp10589_65 () (_ BitVec 64))
(declare-fun temp10589_66 () (_ BitVec 64))
(declare-fun temp10589_67 () (_ BitVec 64))
(declare-fun temp10589_68 () (_ BitVec 64))
(declare-fun temp10589_69 () (_ BitVec 64))
(declare-fun temp10589_70 () (_ BitVec 64))
(declare-fun temp10589_71 () (_ BitVec 64))
(declare-fun temp10589_72 () (_ BitVec 64))
(declare-fun temp10589_73 () (_ BitVec 64))
(declare-fun temp10589_74 () (_ BitVec 64))
(declare-fun temp10589_75 () (_ BitVec 64))
(declare-fun temp10589_76 () (_ BitVec 64))
(declare-fun temp10589_77 () (_ BitVec 64))
(declare-fun temp10589_78 () (_ BitVec 64))
(declare-fun temp10589_79 () (_ BitVec 64))
(declare-fun temp10589_80 () (_ BitVec 64))
(declare-fun temp10589_81 () (_ BitVec 64))
(declare-fun temp10589_82 () (_ BitVec 64))
(declare-fun temp10589_83 () (_ BitVec 64))
(declare-fun temp10589_84 () (_ BitVec 64))
(declare-fun temp10589_85 () (_ BitVec 64))
(declare-fun temp10589_86 () (_ BitVec 64))
(declare-fun temp10589_87 () (_ BitVec 64))
(declare-fun temp10589_88 () (_ BitVec 64))
(declare-fun temp10589_89 () (_ BitVec 64))
(declare-fun temp10589_90 () (_ BitVec 64))
(declare-fun temp10589_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10589_92 () (_ BitVec 64))
(declare-fun temp10589_93 () (_ BitVec 64))
(declare-fun temp10589_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10589_95 () (_ BitVec 64))
(declare-fun temp10589_96 () (_ BitVec 64))
(declare-fun temp10589_97 () (_ BitVec 64))
(declare-fun temp10589_98 () (_ BitVec 64))
(declare-fun temp10589_99 () (_ BitVec 64))
(declare-fun temp10589_100 () (_ BitVec 64))
(declare-fun temp10589_101 () (_ BitVec 64))
(declare-fun temp10589_102 () (_ BitVec 64))
(declare-fun temp10589_103 () (_ BitVec 64))
(declare-fun temp10589_104 () (_ BitVec 64))
(declare-fun temp10589_105 () (_ BitVec 64))
(declare-fun temp10589_106 () (_ BitVec 64))
(declare-fun temp10589_107 () (_ BitVec 64))
(declare-fun temp10589_108 () (_ BitVec 64))
(declare-fun temp10589_109 () (_ BitVec 64))
(declare-fun temp10589_110 () (_ BitVec 64))
(declare-fun temp10589_111 () (_ BitVec 64))
(declare-fun temp10589_112 () (_ BitVec 64))
(declare-fun temp10589_113 () (_ BitVec 64))
(declare-fun temp10589_114 () (_ BitVec 64))
(declare-fun temp10589_115 () (_ BitVec 64))
(declare-fun temp10589_116 () (_ BitVec 64))
(declare-fun temp10589_117 () (_ BitVec 64))
(declare-fun temp10589_118 () (_ BitVec 64))
(declare-fun temp10589_119 () (_ BitVec 64))
(declare-fun temp10589_120 () (_ BitVec 64))
(declare-fun temp10589_121 () (_ BitVec 64))
(declare-fun temp10589_122 () (_ BitVec 64))
(declare-fun temp10589_123 () (_ BitVec 64))
(declare-fun temp10589_124 () (_ BitVec 64))
(declare-fun temp10589_125 () (_ BitVec 64))
(declare-fun temp10589_126 () (_ BitVec 64))
(declare-fun temp10589_127 () (_ BitVec 64))
(declare-fun temp10589_128 () (_ BitVec 64))
(declare-fun temp10589_129 () (_ BitVec 64))
(declare-fun temp10589_130 () (_ BitVec 64))
(declare-fun temp10589_131 () (_ BitVec 64))
(declare-fun temp10589_132 () (_ BitVec 64))
(declare-fun temp10589_133 () (_ BitVec 64))
(declare-fun temp10589_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10589_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10589_136 () (_ BitVec 64))
(declare-fun temp10589_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10589_138 () (_ BitVec 64))
(declare-fun temp10589_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10589_140 () (_ BitVec 64))
(declare-fun temp10589_141 () (_ BitVec 64))
(declare-fun temp10589_142 () (_ BitVec 64))
(declare-fun temp10589_143 () (_ BitVec 64))
(declare-fun temp10589_144 () (_ BitVec 64))
(declare-fun temp10589_145 () (_ BitVec 64))
(declare-fun temp10589_146 () (_ BitVec 64))
(declare-fun temp10589_147 () (_ BitVec 64))
(declare-fun temp10589_148 () (_ BitVec 64))
(declare-fun temp10589_149 () (_ BitVec 64))
(declare-fun temp10589_150 () (_ BitVec 64))
(declare-fun temp10589_151 () (_ BitVec 64))
(declare-fun temp10589_152 () (_ BitVec 64))
(declare-fun temp10589_153 () (_ BitVec 64))
(declare-fun temp10589_154 () (_ BitVec 64))
(declare-fun temp10589_155 () (_ BitVec 64))
(declare-fun temp10589_157 () (_ BitVec 64))
(declare-fun temp10589_158 () (_ BitVec 64))
(declare-fun temp10589_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10589_159 () (_ BitVec 64))
(declare-fun temp10589_160 () (_ BitVec 64))
(declare-fun temp10589_162 () (_ BitVec 64))
(declare-fun temp10589_163 () (_ BitVec 64))
(declare-fun temp10589_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10589_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10589_165 () (_ BitVec 64))
(declare-fun temp10589_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10589_167 () (_ BitVec 64))
(declare-fun temp10589_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10589_169 () (_ BitVec 64))
(declare-fun temp10589_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10589_171 () (_ BitVec 64))
(declare-fun temp10589_172 () (_ BitVec 64))
(declare-fun temp10589_173 () (_ BitVec 64))
(declare-fun temp10589_174 () (_ BitVec 64))
(declare-fun temp10589_175 () (_ BitVec 64))
(declare-fun temp10589_176 () (_ BitVec 64))
(declare-fun temp10589_177 () (_ BitVec 64))
(declare-fun temp10589_178 () (_ BitVec 64))
(declare-fun temp10589_179 () (_ BitVec 64))
(declare-fun temp10589_180 () (_ BitVec 64))
(declare-fun temp10589_181 () (_ BitVec 64))
(declare-fun temp10589_182 () (_ BitVec 64))
(declare-fun temp10589_183 () (_ BitVec 64))
(declare-fun temp10589_184 () (_ BitVec 64))
(declare-fun temp10589_185 () (_ BitVec 64))
(declare-fun temp10589_186 () (_ BitVec 64))
(declare-fun temp10589_187 () (_ BitVec 64))
(declare-fun temp10589_188 () (_ BitVec 64))
(declare-fun temp10589_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10589_190 () (_ BitVec 64))
(declare-fun temp10589_192 () (_ BitVec 64))
(declare-fun temp10589_193 () (_ BitVec 64))
(declare-fun temp10589_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10589_194 () (_ BitVec 64))
(declare-fun temp10589_195 () (_ BitVec 64))
(declare-fun temp10589_197 () (_ BitVec 64))
(declare-fun temp10589_198 () (_ BitVec 64))
(declare-fun temp10589_196 () (_ BitVec 64))
(declare-fun temp10589_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10589_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10589_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10589_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10589_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10589_204 () (_ BitVec 64))
(declare-fun temp10589_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10589_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10589_207 () (_ BitVec 64))
(declare-fun temp10589_208 () (_ BitVec 64))
(declare-fun temp10589_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10589_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10589_211 () (_ BitVec 64))
(declare-fun temp10589_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10589_213 () (_ BitVec 64))
(declare-fun temp10589_214 () (_ BitVec 64))
(declare-fun temp10589_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10589_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10589_217 () (_ BitVec 64))
(declare-fun temp10589_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10589_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10589_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var4927888 () (_ BitVec 64))
(declare-fun var211494 () (_ BitVec 64))
(declare-fun temp10589_221 () (_ BitVec 64))
(declare-fun var211495 () (_ BitVec 64))
(declare-fun temp10589_222 () (_ BitVec 64))
(assert (= temp10589_1 #x0000000000000001))
(assert (= var77203 temp10589_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10589_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10589_2)))
(assert (= temp10589_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10589_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10589_4 #x0000000000000000))
(assert (= var210941 temp10589_4))
(assert (= temp10589_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10589_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10589_6 #x0000000000000000))
(assert (= var210986 temp10589_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10589_7 #x0000000000000000))
(assert (= temp10589_8 temp10589_7))
(assert (= temp10589_9 (select ARGNAME_padding_NAMEEND_VAL temp10589_8)))
(assert (= temp10589_10 #x0000000000000001))
(assert (= temp10589_11 temp10589_10))
(assert (= temp10589_12 (select ARGNAME_padding_NAMEEND_VAL temp10589_11)))
(assert (= temp10589_13 #x0000000000000002))
(assert (= temp10589_14 temp10589_13))
(assert (= temp10589_15 (select ARGNAME_padding_NAMEEND_VAL temp10589_14)))
(assert (= temp10589_16 #x0000000000000003))
(assert (= temp10589_17 temp10589_16))
(assert (= temp10589_18 (select ARGNAME_padding_NAMEEND_VAL temp10589_17)))
(assert (= temp10589_19 #x0000000000000004))
(assert (= temp10589_20 temp10589_19))
(assert (= temp10589_21 (select ARGNAME_padding_NAMEEND_VAL temp10589_20)))
(assert (= temp10589_22 #x0000000000000005))
(assert (= temp10589_23 temp10589_22))
(assert (= temp10589_24 (select ARGNAME_padding_NAMEEND_VAL temp10589_23)))
(assert (= temp10589_25 #x0000000000000000))
(assert (= temp10589_26 #x0000000000000000))
(assert (= temp10589_27 temp10589_26))
(assert (= temp10589_28 (select ARGNAME_padding_NAMEEND_VAL temp10589_27)))
(assert (= temp10589_29 #x0000000000000000))
(assert (= temp10589_30 #x0000000000000001))
(assert (= temp10589_31 temp10589_30))
(assert (= temp10589_32 (select ARGNAME_padding_NAMEEND_VAL temp10589_31)))
(assert (= temp10589_33 #x0000000000000000))
(assert (= temp10589_34 #x0000000000000002))
(assert (= temp10589_35 temp10589_34))
(assert (= temp10589_36 (select ARGNAME_padding_NAMEEND_VAL temp10589_35)))
(assert (= temp10589_37 #x0000000000000000))
(assert (= temp10589_38 #x0000000000000003))
(assert (= temp10589_39 temp10589_38))
(assert (= temp10589_40 (select ARGNAME_padding_NAMEEND_VAL temp10589_39)))
(assert (= temp10589_41 #x0000000000000000))
(assert (= temp10589_42 #x0000000000000004))
(assert (= temp10589_43 temp10589_42))
(assert (= temp10589_44 (select ARGNAME_padding_NAMEEND_VAL temp10589_43)))
(assert (= temp10589_45 #x0000000000000000))
(assert (= temp10589_46 #x0000000000000005))
(assert (= temp10589_47 temp10589_46))
(assert (= temp10589_48 (select ARGNAME_padding_NAMEEND_VAL temp10589_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10589_28 temp10589_25)
             (bvslt temp10589_32 temp10589_29)
             (bvslt temp10589_36 temp10589_33)
             (bvslt temp10589_40 temp10589_37)
             (bvslt temp10589_44 temp10589_41)
             (bvslt temp10589_48 temp10589_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10589_49 #x0000000000000000))
(assert (= var1191714 temp10589_49))
(assert (= temp10589_50 #x0000000000000000))
(assert (= temp10589_51 temp10589_50))
(assert (= temp10589_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10589_51)))
(assert (= temp10589_53 #x0000000000000001))
(assert (= temp10589_54 temp10589_53))
(assert (= temp10589_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10589_54)))
(assert (= temp10589_56 #x0000000000000002))
(assert (= temp10589_57 temp10589_56))
(assert (= temp10589_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10589_57)))
(assert (= temp10589_59 #x0000000000000003))
(assert (= temp10589_60 temp10589_59))
(assert (= temp10589_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10589_60)))
(assert (= temp10589_62 #x0000000000000004))
(assert (= temp10589_63 temp10589_62))
(assert (= temp10589_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10589_63)))
(assert (= temp10589_65 #x0000000000000005))
(assert (= temp10589_66 temp10589_65))
(assert (= temp10589_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10589_66)))
(assert (= temp10589_68 #x0000000000000000))
(assert (= temp10589_69 #x0000000000000000))
(assert (= temp10589_70 temp10589_69))
(assert (= temp10589_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10589_70)))
(assert (= temp10589_72 #x0000000000000000))
(assert (= temp10589_73 #x0000000000000001))
(assert (= temp10589_74 temp10589_73))
(assert (= temp10589_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10589_74)))
(assert (= temp10589_76 #x0000000000000000))
(assert (= temp10589_77 #x0000000000000002))
(assert (= temp10589_78 temp10589_77))
(assert (= temp10589_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10589_78)))
(assert (= temp10589_80 #x0000000000000000))
(assert (= temp10589_81 #x0000000000000003))
(assert (= temp10589_82 temp10589_81))
(assert (= temp10589_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10589_82)))
(assert (= temp10589_84 #x0000000000000000))
(assert (= temp10589_85 #x0000000000000004))
(assert (= temp10589_86 temp10589_85))
(assert (= temp10589_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10589_86)))
(assert (= temp10589_88 #x0000000000000000))
(assert (= temp10589_89 #x0000000000000005))
(assert (= temp10589_90 temp10589_89))
(assert (= temp10589_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10589_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10589_71 temp10589_68)
             (bvslt temp10589_75 temp10589_72)
             (bvslt temp10589_79 temp10589_76)
             (bvslt temp10589_83 temp10589_80)
             (bvslt temp10589_87 temp10589_84)
             (bvslt temp10589_91 temp10589_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10589_92 #x0000000000000000))
(assert (= var1191725 temp10589_92))
(assert (= temp10589_93 #x0000000000000000))
(assert (= temp10589_94 temp10589_93))
(assert (= temp10589_95 (select ARGNAME_stride_NAMEEND_VAL temp10589_94)))
(assert (= temp10589_96 #x0000000000000001))
(assert (= temp10589_97 temp10589_96))
(assert (= temp10589_98 (select ARGNAME_stride_NAMEEND_VAL temp10589_97)))
(assert (= temp10589_99 #x0000000000000002))
(assert (= temp10589_100 temp10589_99))
(assert (= temp10589_101 (select ARGNAME_stride_NAMEEND_VAL temp10589_100)))
(assert (= temp10589_102 #x0000000000000003))
(assert (= temp10589_103 temp10589_102))
(assert (= temp10589_104 (select ARGNAME_stride_NAMEEND_VAL temp10589_103)))
(assert (= temp10589_105 #x0000000000000004))
(assert (= temp10589_106 temp10589_105))
(assert (= temp10589_107 (select ARGNAME_stride_NAMEEND_VAL temp10589_106)))
(assert (= temp10589_108 #x0000000000000005))
(assert (= temp10589_109 temp10589_108))
(assert (= temp10589_110 (select ARGNAME_stride_NAMEEND_VAL temp10589_109)))
(assert (= temp10589_111 #x0000000000000000))
(assert (= temp10589_112 #x0000000000000000))
(assert (= temp10589_113 temp10589_112))
(assert (= temp10589_114 (select ARGNAME_stride_NAMEEND_VAL temp10589_113)))
(assert (= temp10589_115 #x0000000000000000))
(assert (= temp10589_116 #x0000000000000001))
(assert (= temp10589_117 temp10589_116))
(assert (= temp10589_118 (select ARGNAME_stride_NAMEEND_VAL temp10589_117)))
(assert (= temp10589_119 #x0000000000000000))
(assert (= temp10589_120 #x0000000000000002))
(assert (= temp10589_121 temp10589_120))
(assert (= temp10589_122 (select ARGNAME_stride_NAMEEND_VAL temp10589_121)))
(assert (= temp10589_123 #x0000000000000000))
(assert (= temp10589_124 #x0000000000000003))
(assert (= temp10589_125 temp10589_124))
(assert (= temp10589_126 (select ARGNAME_stride_NAMEEND_VAL temp10589_125)))
(assert (= temp10589_127 #x0000000000000000))
(assert (= temp10589_128 #x0000000000000004))
(assert (= temp10589_129 temp10589_128))
(assert (= temp10589_130 (select ARGNAME_stride_NAMEEND_VAL temp10589_129)))
(assert (= temp10589_131 #x0000000000000000))
(assert (= temp10589_132 #x0000000000000005))
(assert (= temp10589_133 temp10589_132))
(assert (= temp10589_134 (select ARGNAME_stride_NAMEEND_VAL temp10589_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10589_114 temp10589_111)
             (bvsle temp10589_118 temp10589_115)
             (bvsle temp10589_122 temp10589_119)
             (bvsle temp10589_126 temp10589_123)
             (bvsle temp10589_130 temp10589_127)
             (bvsle temp10589_134 temp10589_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10589_135 #x0000000000000000))
(assert (= var1191735 temp10589_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10589_136 #x0000000000000001))
(assert (= var1191747 temp10589_136))
(assert (= temp10589_137 #x0000000000000000))
(assert (= var1179826 temp10589_137))
(assert (= temp10589_138 #x0000000000000000))
(assert (= temp10589_139 temp10589_138))
(assert (= temp10589_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10589_139)))
(assert (= temp10589_141 #x0000000000000001))
(assert (= temp10589_142 temp10589_141))
(assert (= temp10589_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10589_142)))
(assert (= temp10589_144 #x0000000000000002))
(assert (= temp10589_145 temp10589_144))
(assert (= temp10589_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10589_145)))
(assert (= temp10589_147 #x0000000000000003))
(assert (= temp10589_148 temp10589_147))
(assert (= temp10589_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10589_148)))
(assert (= temp10589_150 #x0000000000000004))
(assert (= temp10589_151 temp10589_150))
(assert (= temp10589_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10589_151)))
(assert (= temp10589_153 #x0000000000000005))
(assert (= temp10589_154 temp10589_153))
(assert (= temp10589_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10589_154)))
(assert (= temp10589_157 var1179826))
(assert (= temp10589_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10589_157)))
(assert (= temp10589_156 temp10589_158))
(assert (= var1191780
   (ite (bvslt temp10589_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10589_159 #x0000000000000000))
(assert (= var1191780 temp10589_159))
(assert (= temp10589_160 #x0000000000000000))
(assert (= var1179826 temp10589_160))
(assert (= temp10589_162 var1179826))
(assert (= temp10589_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10589_162)))
(assert (= temp10589_161 temp10589_163))
(assert (= var1191802 (bvsmod temp10589_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10589_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10589_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10589_165 #x0000000000000001))
(assert (= var1191803 temp10589_165))
(assert (= temp10589_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10589_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10589_167 #x0000000000000001))
(assert (= var1191823 temp10589_167))
(assert (= temp10589_168 #x0000000000000001))
(assert (= var1180714 temp10589_168))
(assert (= temp10589_169 #x0000000000000000))
(assert (= temp10589_170 temp10589_169))
(assert (= temp10589_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10589_170)))
(assert (= temp10589_172 #x0000000000000001))
(assert (= temp10589_173 temp10589_172))
(assert (= temp10589_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10589_173)))
(assert (= temp10589_175 #x0000000000000002))
(assert (= temp10589_176 temp10589_175))
(assert (= temp10589_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10589_176)))
(assert (= temp10589_178 #x0000000000000003))
(assert (= temp10589_179 temp10589_178))
(assert (= temp10589_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10589_179)))
(assert (= temp10589_181 #x0000000000000004))
(assert (= temp10589_182 temp10589_181))
(assert (= temp10589_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10589_182)))
(assert (= temp10589_184 #x0000000000000005))
(assert (= temp10589_185 temp10589_184))
(assert (= temp10589_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10589_185)))
(assert (= temp10589_187 #x0000000000000000))
(assert (= temp10589_188
   (ite (bvslt var1180714 temp10589_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10589_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10589_188)))
(assert (= var1191831 temp10589_189))
(assert (bvslt (ite (bvslt var1180714 temp10589_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10589_190 #x0000000000000001))
(assert (= var1180714 temp10589_190))
(assert (= temp10589_192 var1180714))
(assert (= temp10589_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10589_192)))
(assert (= temp10589_191 temp10589_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10589_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10589_194 #x0000000000000001))
(assert (= var1191836 temp10589_194))
(assert (= temp10589_195 #x0000000000000000))
(assert (= var1179826 temp10589_195))
(assert (= temp10589_197 var1179826))
(assert (= temp10589_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10589_197)))
(assert (= temp10589_196 temp10589_198))
(assert (= temp10589_199 #x0000000000000002))
(assert (= var1586025 temp10589_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10589_200 #x0000000000000001))
(assert (= var1191993 temp10589_200))
(assert (= temp10589_201 #x0000000000000001))
(assert (= var2700303 temp10589_201))
(assert (= temp10589_202 #x0000000000000001))
(assert (= var2962447 temp10589_202))
(assert (= temp10589_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10589_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10589_204 #x0000000000000001))
(assert (= var211058 temp10589_204))
(assert (= temp10589_205 #x0000000000000001))
(assert (= var211188 temp10589_205))
(assert (= var3879401 var211188))
(assert (= temp10589_206 #x0000000000000000))
(assert (= var3866802 temp10589_206))
(assert (= temp10589_207 #x0000000000000000))
(assert (= temp10589_208
   (ite (bvslt var3866802 temp10589_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10589_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10589_208)))
(assert (= var3879420 temp10589_209))
(assert (bvslt (ite (bvslt var3866802 temp10589_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10589_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10589_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10589_211 #x0000000000000000))
(assert (= var3879421 temp10589_211))
(assert (= temp10589_212 #x0000000000000001))
(assert (= var3867690 temp10589_212))
(assert (= temp10589_213 #x0000000000000000))
(assert (= temp10589_214
   (ite (bvslt var3867690 temp10589_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10589_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10589_214)))
(assert (= var3879423 temp10589_215))
(assert (bvslt (ite (bvslt var3867690 temp10589_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10589_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10589_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10589_217 #x0000000000000001))
(assert (= var3879424 temp10589_217))
(assert (= temp10589_218 #x0000000000000000))
(assert (= var4133117 temp10589_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10589_219 #x0000000000000002))
(assert (= var4339331 temp10589_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10589_220 #x0000000000000000))
(assert (= var4404892 temp10589_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var4927888 var211201))
(assert (= var211494 var210913))
(assert (= temp10589_221 #x0000000000000000))
(assert (= var211495
   (ite (distinct var211494 temp10589_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10589_222 #x0000000000000001))
(assert (= var211058 temp10589_222))
(model-add temp10589_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10589_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10589_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10589_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





