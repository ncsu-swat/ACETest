(declare-fun temp10908_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10908_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10908_3 () (_ BitVec 64))
(declare-fun temp10908_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10908_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10908_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10908_7 () (_ BitVec 64))
(declare-fun temp10908_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10908_9 () (_ BitVec 64))
(declare-fun temp10908_10 () (_ BitVec 64))
(declare-fun temp10908_11 () (_ BitVec 64))
(declare-fun temp10908_12 () (_ BitVec 64))
(declare-fun temp10908_13 () (_ BitVec 64))
(declare-fun temp10908_14 () (_ BitVec 64))
(declare-fun temp10908_15 () (_ BitVec 64))
(declare-fun temp10908_16 () (_ BitVec 64))
(declare-fun temp10908_17 () (_ BitVec 64))
(declare-fun temp10908_18 () (_ BitVec 64))
(declare-fun temp10908_19 () (_ BitVec 64))
(declare-fun temp10908_20 () (_ BitVec 64))
(declare-fun temp10908_21 () (_ BitVec 64))
(declare-fun temp10908_22 () (_ BitVec 64))
(declare-fun temp10908_23 () (_ BitVec 64))
(declare-fun temp10908_24 () (_ BitVec 64))
(declare-fun temp10908_25 () (_ BitVec 64))
(declare-fun temp10908_26 () (_ BitVec 64))
(declare-fun temp10908_27 () (_ BitVec 64))
(declare-fun temp10908_28 () (_ BitVec 64))
(declare-fun temp10908_29 () (_ BitVec 64))
(declare-fun temp10908_30 () (_ BitVec 64))
(declare-fun temp10908_31 () (_ BitVec 64))
(declare-fun temp10908_32 () (_ BitVec 64))
(declare-fun temp10908_33 () (_ BitVec 64))
(declare-fun temp10908_34 () (_ BitVec 64))
(declare-fun temp10908_35 () (_ BitVec 64))
(declare-fun temp10908_36 () (_ BitVec 64))
(declare-fun temp10908_37 () (_ BitVec 64))
(declare-fun temp10908_38 () (_ BitVec 64))
(declare-fun temp10908_39 () (_ BitVec 64))
(declare-fun temp10908_40 () (_ BitVec 64))
(declare-fun temp10908_41 () (_ BitVec 64))
(declare-fun temp10908_42 () (_ BitVec 64))
(declare-fun temp10908_43 () (_ BitVec 64))
(declare-fun temp10908_44 () (_ BitVec 64))
(declare-fun temp10908_45 () (_ BitVec 64))
(declare-fun temp10908_46 () (_ BitVec 64))
(declare-fun temp10908_47 () (_ BitVec 64))
(declare-fun temp10908_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10908_49 () (_ BitVec 64))
(declare-fun temp10908_50 () (_ BitVec 64))
(declare-fun temp10908_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10908_52 () (_ BitVec 64))
(declare-fun temp10908_53 () (_ BitVec 64))
(declare-fun temp10908_54 () (_ BitVec 64))
(declare-fun temp10908_55 () (_ BitVec 64))
(declare-fun temp10908_56 () (_ BitVec 64))
(declare-fun temp10908_57 () (_ BitVec 64))
(declare-fun temp10908_58 () (_ BitVec 64))
(declare-fun temp10908_59 () (_ BitVec 64))
(declare-fun temp10908_60 () (_ BitVec 64))
(declare-fun temp10908_61 () (_ BitVec 64))
(declare-fun temp10908_62 () (_ BitVec 64))
(declare-fun temp10908_63 () (_ BitVec 64))
(declare-fun temp10908_64 () (_ BitVec 64))
(declare-fun temp10908_65 () (_ BitVec 64))
(declare-fun temp10908_66 () (_ BitVec 64))
(declare-fun temp10908_67 () (_ BitVec 64))
(declare-fun temp10908_68 () (_ BitVec 64))
(declare-fun temp10908_69 () (_ BitVec 64))
(declare-fun temp10908_70 () (_ BitVec 64))
(declare-fun temp10908_71 () (_ BitVec 64))
(declare-fun temp10908_72 () (_ BitVec 64))
(declare-fun temp10908_73 () (_ BitVec 64))
(declare-fun temp10908_74 () (_ BitVec 64))
(declare-fun temp10908_75 () (_ BitVec 64))
(declare-fun temp10908_76 () (_ BitVec 64))
(declare-fun temp10908_77 () (_ BitVec 64))
(declare-fun temp10908_78 () (_ BitVec 64))
(declare-fun temp10908_79 () (_ BitVec 64))
(declare-fun temp10908_80 () (_ BitVec 64))
(declare-fun temp10908_81 () (_ BitVec 64))
(declare-fun temp10908_82 () (_ BitVec 64))
(declare-fun temp10908_83 () (_ BitVec 64))
(declare-fun temp10908_84 () (_ BitVec 64))
(declare-fun temp10908_85 () (_ BitVec 64))
(declare-fun temp10908_86 () (_ BitVec 64))
(declare-fun temp10908_87 () (_ BitVec 64))
(declare-fun temp10908_88 () (_ BitVec 64))
(declare-fun temp10908_89 () (_ BitVec 64))
(declare-fun temp10908_90 () (_ BitVec 64))
(declare-fun temp10908_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10908_92 () (_ BitVec 64))
(declare-fun temp10908_93 () (_ BitVec 64))
(declare-fun temp10908_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10908_95 () (_ BitVec 64))
(declare-fun temp10908_96 () (_ BitVec 64))
(declare-fun temp10908_97 () (_ BitVec 64))
(declare-fun temp10908_98 () (_ BitVec 64))
(declare-fun temp10908_99 () (_ BitVec 64))
(declare-fun temp10908_100 () (_ BitVec 64))
(declare-fun temp10908_101 () (_ BitVec 64))
(declare-fun temp10908_102 () (_ BitVec 64))
(declare-fun temp10908_103 () (_ BitVec 64))
(declare-fun temp10908_104 () (_ BitVec 64))
(declare-fun temp10908_105 () (_ BitVec 64))
(declare-fun temp10908_106 () (_ BitVec 64))
(declare-fun temp10908_107 () (_ BitVec 64))
(declare-fun temp10908_108 () (_ BitVec 64))
(declare-fun temp10908_109 () (_ BitVec 64))
(declare-fun temp10908_110 () (_ BitVec 64))
(declare-fun temp10908_111 () (_ BitVec 64))
(declare-fun temp10908_112 () (_ BitVec 64))
(declare-fun temp10908_113 () (_ BitVec 64))
(declare-fun temp10908_114 () (_ BitVec 64))
(declare-fun temp10908_115 () (_ BitVec 64))
(declare-fun temp10908_116 () (_ BitVec 64))
(declare-fun temp10908_117 () (_ BitVec 64))
(declare-fun temp10908_118 () (_ BitVec 64))
(declare-fun temp10908_119 () (_ BitVec 64))
(declare-fun temp10908_120 () (_ BitVec 64))
(declare-fun temp10908_121 () (_ BitVec 64))
(declare-fun temp10908_122 () (_ BitVec 64))
(declare-fun temp10908_123 () (_ BitVec 64))
(declare-fun temp10908_124 () (_ BitVec 64))
(declare-fun temp10908_125 () (_ BitVec 64))
(declare-fun temp10908_126 () (_ BitVec 64))
(declare-fun temp10908_127 () (_ BitVec 64))
(declare-fun temp10908_128 () (_ BitVec 64))
(declare-fun temp10908_129 () (_ BitVec 64))
(declare-fun temp10908_130 () (_ BitVec 64))
(declare-fun temp10908_131 () (_ BitVec 64))
(declare-fun temp10908_132 () (_ BitVec 64))
(declare-fun temp10908_133 () (_ BitVec 64))
(declare-fun temp10908_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10908_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10908_136 () (_ BitVec 64))
(declare-fun temp10908_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10908_138 () (_ BitVec 64))
(declare-fun temp10908_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10908_140 () (_ BitVec 64))
(declare-fun temp10908_141 () (_ BitVec 64))
(declare-fun temp10908_142 () (_ BitVec 64))
(declare-fun temp10908_143 () (_ BitVec 64))
(declare-fun temp10908_144 () (_ BitVec 64))
(declare-fun temp10908_145 () (_ BitVec 64))
(declare-fun temp10908_146 () (_ BitVec 64))
(declare-fun temp10908_147 () (_ BitVec 64))
(declare-fun temp10908_148 () (_ BitVec 64))
(declare-fun temp10908_149 () (_ BitVec 64))
(declare-fun temp10908_150 () (_ BitVec 64))
(declare-fun temp10908_151 () (_ BitVec 64))
(declare-fun temp10908_152 () (_ BitVec 64))
(declare-fun temp10908_153 () (_ BitVec 64))
(declare-fun temp10908_154 () (_ BitVec 64))
(declare-fun temp10908_155 () (_ BitVec 64))
(declare-fun temp10908_157 () (_ BitVec 64))
(declare-fun temp10908_158 () (_ BitVec 64))
(declare-fun temp10908_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10908_159 () (_ BitVec 64))
(declare-fun temp10908_160 () (_ BitVec 64))
(declare-fun temp10908_162 () (_ BitVec 64))
(declare-fun temp10908_163 () (_ BitVec 64))
(declare-fun temp10908_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10908_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10908_165 () (_ BitVec 64))
(declare-fun temp10908_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10908_167 () (_ BitVec 64))
(declare-fun temp10908_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10908_169 () (_ BitVec 64))
(declare-fun temp10908_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10908_171 () (_ BitVec 64))
(declare-fun temp10908_172 () (_ BitVec 64))
(declare-fun temp10908_173 () (_ BitVec 64))
(declare-fun temp10908_174 () (_ BitVec 64))
(declare-fun temp10908_175 () (_ BitVec 64))
(declare-fun temp10908_176 () (_ BitVec 64))
(declare-fun temp10908_177 () (_ BitVec 64))
(declare-fun temp10908_178 () (_ BitVec 64))
(declare-fun temp10908_179 () (_ BitVec 64))
(declare-fun temp10908_180 () (_ BitVec 64))
(declare-fun temp10908_181 () (_ BitVec 64))
(declare-fun temp10908_182 () (_ BitVec 64))
(declare-fun temp10908_183 () (_ BitVec 64))
(declare-fun temp10908_184 () (_ BitVec 64))
(declare-fun temp10908_185 () (_ BitVec 64))
(declare-fun temp10908_186 () (_ BitVec 64))
(declare-fun temp10908_187 () (_ BitVec 64))
(declare-fun temp10908_188 () (_ BitVec 64))
(declare-fun temp10908_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10908_190 () (_ BitVec 64))
(declare-fun temp10908_192 () (_ BitVec 64))
(declare-fun temp10908_193 () (_ BitVec 64))
(declare-fun temp10908_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10908_194 () (_ BitVec 64))
(declare-fun temp10908_195 () (_ BitVec 64))
(declare-fun temp10908_197 () (_ BitVec 64))
(declare-fun temp10908_198 () (_ BitVec 64))
(declare-fun temp10908_196 () (_ BitVec 64))
(declare-fun temp10908_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10908_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10908_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10908_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10908_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10908_204 () (_ BitVec 64))
(declare-fun temp10908_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10908_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10908_207 () (_ BitVec 64))
(declare-fun temp10908_208 () (_ BitVec 64))
(declare-fun temp10908_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10908_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10908_211 () (_ BitVec 64))
(declare-fun temp10908_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10908_213 () (_ BitVec 64))
(declare-fun temp10908_214 () (_ BitVec 64))
(declare-fun temp10908_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10908_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10908_217 () (_ BitVec 64))
(declare-fun temp10908_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10908_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10908_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var5255568 () (_ BitVec 64))
(declare-fun var5517712 () (_ BitVec 64))
(declare-fun temp10908_221 () (_ BitVec 64))
(declare-fun temp10908_222 () (_ BitVec 64))
(declare-fun var7156500 () (_ BitVec 64))
(declare-fun var7156467 () (_ BitVec 64))
(declare-fun var7025031 () (_ BitVec 64))
(declare-fun var7025027 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp10908_223 () (_ BitVec 64))
(assert (= temp10908_1 #x0000000000000001))
(assert (= var77203 temp10908_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10908_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10908_2)))
(assert (= temp10908_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10908_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10908_4 #x0000000000000000))
(assert (= var210941 temp10908_4))
(assert (= temp10908_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10908_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10908_6 #x0000000000000000))
(assert (= var210986 temp10908_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10908_7 #x0000000000000000))
(assert (= temp10908_8 temp10908_7))
(assert (= temp10908_9 (select ARGNAME_padding_NAMEEND_VAL temp10908_8)))
(assert (= temp10908_10 #x0000000000000001))
(assert (= temp10908_11 temp10908_10))
(assert (= temp10908_12 (select ARGNAME_padding_NAMEEND_VAL temp10908_11)))
(assert (= temp10908_13 #x0000000000000002))
(assert (= temp10908_14 temp10908_13))
(assert (= temp10908_15 (select ARGNAME_padding_NAMEEND_VAL temp10908_14)))
(assert (= temp10908_16 #x0000000000000003))
(assert (= temp10908_17 temp10908_16))
(assert (= temp10908_18 (select ARGNAME_padding_NAMEEND_VAL temp10908_17)))
(assert (= temp10908_19 #x0000000000000004))
(assert (= temp10908_20 temp10908_19))
(assert (= temp10908_21 (select ARGNAME_padding_NAMEEND_VAL temp10908_20)))
(assert (= temp10908_22 #x0000000000000005))
(assert (= temp10908_23 temp10908_22))
(assert (= temp10908_24 (select ARGNAME_padding_NAMEEND_VAL temp10908_23)))
(assert (= temp10908_25 #x0000000000000000))
(assert (= temp10908_26 #x0000000000000000))
(assert (= temp10908_27 temp10908_26))
(assert (= temp10908_28 (select ARGNAME_padding_NAMEEND_VAL temp10908_27)))
(assert (= temp10908_29 #x0000000000000000))
(assert (= temp10908_30 #x0000000000000001))
(assert (= temp10908_31 temp10908_30))
(assert (= temp10908_32 (select ARGNAME_padding_NAMEEND_VAL temp10908_31)))
(assert (= temp10908_33 #x0000000000000000))
(assert (= temp10908_34 #x0000000000000002))
(assert (= temp10908_35 temp10908_34))
(assert (= temp10908_36 (select ARGNAME_padding_NAMEEND_VAL temp10908_35)))
(assert (= temp10908_37 #x0000000000000000))
(assert (= temp10908_38 #x0000000000000003))
(assert (= temp10908_39 temp10908_38))
(assert (= temp10908_40 (select ARGNAME_padding_NAMEEND_VAL temp10908_39)))
(assert (= temp10908_41 #x0000000000000000))
(assert (= temp10908_42 #x0000000000000004))
(assert (= temp10908_43 temp10908_42))
(assert (= temp10908_44 (select ARGNAME_padding_NAMEEND_VAL temp10908_43)))
(assert (= temp10908_45 #x0000000000000000))
(assert (= temp10908_46 #x0000000000000005))
(assert (= temp10908_47 temp10908_46))
(assert (= temp10908_48 (select ARGNAME_padding_NAMEEND_VAL temp10908_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10908_28 temp10908_25)
             (bvslt temp10908_32 temp10908_29)
             (bvslt temp10908_36 temp10908_33)
             (bvslt temp10908_40 temp10908_37)
             (bvslt temp10908_44 temp10908_41)
             (bvslt temp10908_48 temp10908_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10908_49 #x0000000000000000))
(assert (= var1191714 temp10908_49))
(assert (= temp10908_50 #x0000000000000000))
(assert (= temp10908_51 temp10908_50))
(assert (= temp10908_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10908_51)))
(assert (= temp10908_53 #x0000000000000001))
(assert (= temp10908_54 temp10908_53))
(assert (= temp10908_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10908_54)))
(assert (= temp10908_56 #x0000000000000002))
(assert (= temp10908_57 temp10908_56))
(assert (= temp10908_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10908_57)))
(assert (= temp10908_59 #x0000000000000003))
(assert (= temp10908_60 temp10908_59))
(assert (= temp10908_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10908_60)))
(assert (= temp10908_62 #x0000000000000004))
(assert (= temp10908_63 temp10908_62))
(assert (= temp10908_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10908_63)))
(assert (= temp10908_65 #x0000000000000005))
(assert (= temp10908_66 temp10908_65))
(assert (= temp10908_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10908_66)))
(assert (= temp10908_68 #x0000000000000000))
(assert (= temp10908_69 #x0000000000000000))
(assert (= temp10908_70 temp10908_69))
(assert (= temp10908_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10908_70)))
(assert (= temp10908_72 #x0000000000000000))
(assert (= temp10908_73 #x0000000000000001))
(assert (= temp10908_74 temp10908_73))
(assert (= temp10908_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10908_74)))
(assert (= temp10908_76 #x0000000000000000))
(assert (= temp10908_77 #x0000000000000002))
(assert (= temp10908_78 temp10908_77))
(assert (= temp10908_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10908_78)))
(assert (= temp10908_80 #x0000000000000000))
(assert (= temp10908_81 #x0000000000000003))
(assert (= temp10908_82 temp10908_81))
(assert (= temp10908_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10908_82)))
(assert (= temp10908_84 #x0000000000000000))
(assert (= temp10908_85 #x0000000000000004))
(assert (= temp10908_86 temp10908_85))
(assert (= temp10908_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10908_86)))
(assert (= temp10908_88 #x0000000000000000))
(assert (= temp10908_89 #x0000000000000005))
(assert (= temp10908_90 temp10908_89))
(assert (= temp10908_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10908_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10908_71 temp10908_68)
             (bvslt temp10908_75 temp10908_72)
             (bvslt temp10908_79 temp10908_76)
             (bvslt temp10908_83 temp10908_80)
             (bvslt temp10908_87 temp10908_84)
             (bvslt temp10908_91 temp10908_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10908_92 #x0000000000000000))
(assert (= var1191725 temp10908_92))
(assert (= temp10908_93 #x0000000000000000))
(assert (= temp10908_94 temp10908_93))
(assert (= temp10908_95 (select ARGNAME_stride_NAMEEND_VAL temp10908_94)))
(assert (= temp10908_96 #x0000000000000001))
(assert (= temp10908_97 temp10908_96))
(assert (= temp10908_98 (select ARGNAME_stride_NAMEEND_VAL temp10908_97)))
(assert (= temp10908_99 #x0000000000000002))
(assert (= temp10908_100 temp10908_99))
(assert (= temp10908_101 (select ARGNAME_stride_NAMEEND_VAL temp10908_100)))
(assert (= temp10908_102 #x0000000000000003))
(assert (= temp10908_103 temp10908_102))
(assert (= temp10908_104 (select ARGNAME_stride_NAMEEND_VAL temp10908_103)))
(assert (= temp10908_105 #x0000000000000004))
(assert (= temp10908_106 temp10908_105))
(assert (= temp10908_107 (select ARGNAME_stride_NAMEEND_VAL temp10908_106)))
(assert (= temp10908_108 #x0000000000000005))
(assert (= temp10908_109 temp10908_108))
(assert (= temp10908_110 (select ARGNAME_stride_NAMEEND_VAL temp10908_109)))
(assert (= temp10908_111 #x0000000000000000))
(assert (= temp10908_112 #x0000000000000000))
(assert (= temp10908_113 temp10908_112))
(assert (= temp10908_114 (select ARGNAME_stride_NAMEEND_VAL temp10908_113)))
(assert (= temp10908_115 #x0000000000000000))
(assert (= temp10908_116 #x0000000000000001))
(assert (= temp10908_117 temp10908_116))
(assert (= temp10908_118 (select ARGNAME_stride_NAMEEND_VAL temp10908_117)))
(assert (= temp10908_119 #x0000000000000000))
(assert (= temp10908_120 #x0000000000000002))
(assert (= temp10908_121 temp10908_120))
(assert (= temp10908_122 (select ARGNAME_stride_NAMEEND_VAL temp10908_121)))
(assert (= temp10908_123 #x0000000000000000))
(assert (= temp10908_124 #x0000000000000003))
(assert (= temp10908_125 temp10908_124))
(assert (= temp10908_126 (select ARGNAME_stride_NAMEEND_VAL temp10908_125)))
(assert (= temp10908_127 #x0000000000000000))
(assert (= temp10908_128 #x0000000000000004))
(assert (= temp10908_129 temp10908_128))
(assert (= temp10908_130 (select ARGNAME_stride_NAMEEND_VAL temp10908_129)))
(assert (= temp10908_131 #x0000000000000000))
(assert (= temp10908_132 #x0000000000000005))
(assert (= temp10908_133 temp10908_132))
(assert (= temp10908_134 (select ARGNAME_stride_NAMEEND_VAL temp10908_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10908_114 temp10908_111)
             (bvsle temp10908_118 temp10908_115)
             (bvsle temp10908_122 temp10908_119)
             (bvsle temp10908_126 temp10908_123)
             (bvsle temp10908_130 temp10908_127)
             (bvsle temp10908_134 temp10908_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10908_135 #x0000000000000000))
(assert (= var1191735 temp10908_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10908_136 #x0000000000000001))
(assert (= var1191747 temp10908_136))
(assert (= temp10908_137 #x0000000000000000))
(assert (= var1179826 temp10908_137))
(assert (= temp10908_138 #x0000000000000000))
(assert (= temp10908_139 temp10908_138))
(assert (= temp10908_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10908_139)))
(assert (= temp10908_141 #x0000000000000001))
(assert (= temp10908_142 temp10908_141))
(assert (= temp10908_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10908_142)))
(assert (= temp10908_144 #x0000000000000002))
(assert (= temp10908_145 temp10908_144))
(assert (= temp10908_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10908_145)))
(assert (= temp10908_147 #x0000000000000003))
(assert (= temp10908_148 temp10908_147))
(assert (= temp10908_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10908_148)))
(assert (= temp10908_150 #x0000000000000004))
(assert (= temp10908_151 temp10908_150))
(assert (= temp10908_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10908_151)))
(assert (= temp10908_153 #x0000000000000005))
(assert (= temp10908_154 temp10908_153))
(assert (= temp10908_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10908_154)))
(assert (= temp10908_157 var1179826))
(assert (= temp10908_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10908_157)))
(assert (= temp10908_156 temp10908_158))
(assert (= var1191780
   (ite (bvslt temp10908_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10908_159 #x0000000000000000))
(assert (= var1191780 temp10908_159))
(assert (= temp10908_160 #x0000000000000000))
(assert (= var1179826 temp10908_160))
(assert (= temp10908_162 var1179826))
(assert (= temp10908_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10908_162)))
(assert (= temp10908_161 temp10908_163))
(assert (= var1191802 (bvsmod temp10908_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10908_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10908_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10908_165 #x0000000000000001))
(assert (= var1191803 temp10908_165))
(assert (= temp10908_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10908_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10908_167 #x0000000000000001))
(assert (= var1191823 temp10908_167))
(assert (= temp10908_168 #x0000000000000001))
(assert (= var1180714 temp10908_168))
(assert (= temp10908_169 #x0000000000000000))
(assert (= temp10908_170 temp10908_169))
(assert (= temp10908_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10908_170)))
(assert (= temp10908_172 #x0000000000000001))
(assert (= temp10908_173 temp10908_172))
(assert (= temp10908_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10908_173)))
(assert (= temp10908_175 #x0000000000000002))
(assert (= temp10908_176 temp10908_175))
(assert (= temp10908_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10908_176)))
(assert (= temp10908_178 #x0000000000000003))
(assert (= temp10908_179 temp10908_178))
(assert (= temp10908_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10908_179)))
(assert (= temp10908_181 #x0000000000000004))
(assert (= temp10908_182 temp10908_181))
(assert (= temp10908_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10908_182)))
(assert (= temp10908_184 #x0000000000000005))
(assert (= temp10908_185 temp10908_184))
(assert (= temp10908_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10908_185)))
(assert (= temp10908_187 #x0000000000000000))
(assert (= temp10908_188
   (ite (bvslt var1180714 temp10908_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10908_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10908_188)))
(assert (= var1191831 temp10908_189))
(assert (bvslt (ite (bvslt var1180714 temp10908_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10908_190 #x0000000000000001))
(assert (= var1180714 temp10908_190))
(assert (= temp10908_192 var1180714))
(assert (= temp10908_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10908_192)))
(assert (= temp10908_191 temp10908_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10908_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10908_194 #x0000000000000001))
(assert (= var1191836 temp10908_194))
(assert (= temp10908_195 #x0000000000000000))
(assert (= var1179826 temp10908_195))
(assert (= temp10908_197 var1179826))
(assert (= temp10908_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10908_197)))
(assert (= temp10908_196 temp10908_198))
(assert (= temp10908_199 #x0000000000000002))
(assert (= var1586025 temp10908_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10908_200 #x0000000000000001))
(assert (= var1191993 temp10908_200))
(assert (= temp10908_201 #x0000000000000001))
(assert (= var2700303 temp10908_201))
(assert (= temp10908_202 #x0000000000000001))
(assert (= var2962447 temp10908_202))
(assert (= temp10908_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10908_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10908_204 #x0000000000000001))
(assert (= var211058 temp10908_204))
(assert (= temp10908_205 #x0000000000000001))
(assert (= var211188 temp10908_205))
(assert (= var3879401 var211188))
(assert (= temp10908_206 #x0000000000000000))
(assert (= var3866802 temp10908_206))
(assert (= temp10908_207 #x0000000000000000))
(assert (= temp10908_208
   (ite (bvslt var3866802 temp10908_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10908_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10908_208)))
(assert (= var3879420 temp10908_209))
(assert (bvslt (ite (bvslt var3866802 temp10908_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10908_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10908_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10908_211 #x0000000000000000))
(assert (= var3879421 temp10908_211))
(assert (= temp10908_212 #x0000000000000001))
(assert (= var3867690 temp10908_212))
(assert (= temp10908_213 #x0000000000000000))
(assert (= temp10908_214
   (ite (bvslt var3867690 temp10908_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10908_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10908_214)))
(assert (= var3879423 temp10908_215))
(assert (bvslt (ite (bvslt var3867690 temp10908_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10908_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10908_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10908_217 #x0000000000000001))
(assert (= var3879424 temp10908_217))
(assert (= temp10908_218 #x0000000000000000))
(assert (= var4133117 temp10908_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10908_219 #x0000000000000002))
(assert (= var4339331 temp10908_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10908_220 #x0000000000000000))
(assert (= var4404892 temp10908_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var5255568 var211201))
(assert (= var5517712 var211201))
(assert (= temp10908_221 #x0000000000000001))
(assert (= var211058 temp10908_221))
(assert (= temp10908_222 #x0000000000000000))
(assert (= var7156500 temp10908_222))
(assert (= var7156467 var7156500))
(assert (= var7025031 var7156467))
(assert (= var7025027 var7025031))
(assert (= var212669 var7025027))
(assert (= temp10908_223 #x0000000000000000))
(assert (= var212669 temp10908_223))
(model-add temp10908_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10908_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10908_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10908_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





