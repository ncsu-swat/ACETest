(declare-fun temp10825_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10825_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10825_3 () (_ BitVec 64))
(declare-fun temp10825_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10825_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10825_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10825_7 () (_ BitVec 64))
(declare-fun temp10825_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10825_9 () (_ BitVec 64))
(declare-fun temp10825_10 () (_ BitVec 64))
(declare-fun temp10825_11 () (_ BitVec 64))
(declare-fun temp10825_12 () (_ BitVec 64))
(declare-fun temp10825_13 () (_ BitVec 64))
(declare-fun temp10825_14 () (_ BitVec 64))
(declare-fun temp10825_15 () (_ BitVec 64))
(declare-fun temp10825_16 () (_ BitVec 64))
(declare-fun temp10825_17 () (_ BitVec 64))
(declare-fun temp10825_18 () (_ BitVec 64))
(declare-fun temp10825_19 () (_ BitVec 64))
(declare-fun temp10825_20 () (_ BitVec 64))
(declare-fun temp10825_21 () (_ BitVec 64))
(declare-fun temp10825_22 () (_ BitVec 64))
(declare-fun temp10825_23 () (_ BitVec 64))
(declare-fun temp10825_24 () (_ BitVec 64))
(declare-fun temp10825_25 () (_ BitVec 64))
(declare-fun temp10825_26 () (_ BitVec 64))
(declare-fun temp10825_27 () (_ BitVec 64))
(declare-fun temp10825_28 () (_ BitVec 64))
(declare-fun temp10825_29 () (_ BitVec 64))
(declare-fun temp10825_30 () (_ BitVec 64))
(declare-fun temp10825_31 () (_ BitVec 64))
(declare-fun temp10825_32 () (_ BitVec 64))
(declare-fun temp10825_33 () (_ BitVec 64))
(declare-fun temp10825_34 () (_ BitVec 64))
(declare-fun temp10825_35 () (_ BitVec 64))
(declare-fun temp10825_36 () (_ BitVec 64))
(declare-fun temp10825_37 () (_ BitVec 64))
(declare-fun temp10825_38 () (_ BitVec 64))
(declare-fun temp10825_39 () (_ BitVec 64))
(declare-fun temp10825_40 () (_ BitVec 64))
(declare-fun temp10825_41 () (_ BitVec 64))
(declare-fun temp10825_42 () (_ BitVec 64))
(declare-fun temp10825_43 () (_ BitVec 64))
(declare-fun temp10825_44 () (_ BitVec 64))
(declare-fun temp10825_45 () (_ BitVec 64))
(declare-fun temp10825_46 () (_ BitVec 64))
(declare-fun temp10825_47 () (_ BitVec 64))
(declare-fun temp10825_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10825_49 () (_ BitVec 64))
(declare-fun temp10825_50 () (_ BitVec 64))
(declare-fun temp10825_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10825_52 () (_ BitVec 64))
(declare-fun temp10825_53 () (_ BitVec 64))
(declare-fun temp10825_54 () (_ BitVec 64))
(declare-fun temp10825_55 () (_ BitVec 64))
(declare-fun temp10825_56 () (_ BitVec 64))
(declare-fun temp10825_57 () (_ BitVec 64))
(declare-fun temp10825_58 () (_ BitVec 64))
(declare-fun temp10825_59 () (_ BitVec 64))
(declare-fun temp10825_60 () (_ BitVec 64))
(declare-fun temp10825_61 () (_ BitVec 64))
(declare-fun temp10825_62 () (_ BitVec 64))
(declare-fun temp10825_63 () (_ BitVec 64))
(declare-fun temp10825_64 () (_ BitVec 64))
(declare-fun temp10825_65 () (_ BitVec 64))
(declare-fun temp10825_66 () (_ BitVec 64))
(declare-fun temp10825_67 () (_ BitVec 64))
(declare-fun temp10825_68 () (_ BitVec 64))
(declare-fun temp10825_69 () (_ BitVec 64))
(declare-fun temp10825_70 () (_ BitVec 64))
(declare-fun temp10825_71 () (_ BitVec 64))
(declare-fun temp10825_72 () (_ BitVec 64))
(declare-fun temp10825_73 () (_ BitVec 64))
(declare-fun temp10825_74 () (_ BitVec 64))
(declare-fun temp10825_75 () (_ BitVec 64))
(declare-fun temp10825_76 () (_ BitVec 64))
(declare-fun temp10825_77 () (_ BitVec 64))
(declare-fun temp10825_78 () (_ BitVec 64))
(declare-fun temp10825_79 () (_ BitVec 64))
(declare-fun temp10825_80 () (_ BitVec 64))
(declare-fun temp10825_81 () (_ BitVec 64))
(declare-fun temp10825_82 () (_ BitVec 64))
(declare-fun temp10825_83 () (_ BitVec 64))
(declare-fun temp10825_84 () (_ BitVec 64))
(declare-fun temp10825_85 () (_ BitVec 64))
(declare-fun temp10825_86 () (_ BitVec 64))
(declare-fun temp10825_87 () (_ BitVec 64))
(declare-fun temp10825_88 () (_ BitVec 64))
(declare-fun temp10825_89 () (_ BitVec 64))
(declare-fun temp10825_90 () (_ BitVec 64))
(declare-fun temp10825_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10825_92 () (_ BitVec 64))
(declare-fun temp10825_93 () (_ BitVec 64))
(declare-fun temp10825_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10825_95 () (_ BitVec 64))
(declare-fun temp10825_96 () (_ BitVec 64))
(declare-fun temp10825_97 () (_ BitVec 64))
(declare-fun temp10825_98 () (_ BitVec 64))
(declare-fun temp10825_99 () (_ BitVec 64))
(declare-fun temp10825_100 () (_ BitVec 64))
(declare-fun temp10825_101 () (_ BitVec 64))
(declare-fun temp10825_102 () (_ BitVec 64))
(declare-fun temp10825_103 () (_ BitVec 64))
(declare-fun temp10825_104 () (_ BitVec 64))
(declare-fun temp10825_105 () (_ BitVec 64))
(declare-fun temp10825_106 () (_ BitVec 64))
(declare-fun temp10825_107 () (_ BitVec 64))
(declare-fun temp10825_108 () (_ BitVec 64))
(declare-fun temp10825_109 () (_ BitVec 64))
(declare-fun temp10825_110 () (_ BitVec 64))
(declare-fun temp10825_111 () (_ BitVec 64))
(declare-fun temp10825_112 () (_ BitVec 64))
(declare-fun temp10825_113 () (_ BitVec 64))
(declare-fun temp10825_114 () (_ BitVec 64))
(declare-fun temp10825_115 () (_ BitVec 64))
(declare-fun temp10825_116 () (_ BitVec 64))
(declare-fun temp10825_117 () (_ BitVec 64))
(declare-fun temp10825_118 () (_ BitVec 64))
(declare-fun temp10825_119 () (_ BitVec 64))
(declare-fun temp10825_120 () (_ BitVec 64))
(declare-fun temp10825_121 () (_ BitVec 64))
(declare-fun temp10825_122 () (_ BitVec 64))
(declare-fun temp10825_123 () (_ BitVec 64))
(declare-fun temp10825_124 () (_ BitVec 64))
(declare-fun temp10825_125 () (_ BitVec 64))
(declare-fun temp10825_126 () (_ BitVec 64))
(declare-fun temp10825_127 () (_ BitVec 64))
(declare-fun temp10825_128 () (_ BitVec 64))
(declare-fun temp10825_129 () (_ BitVec 64))
(declare-fun temp10825_130 () (_ BitVec 64))
(declare-fun temp10825_131 () (_ BitVec 64))
(declare-fun temp10825_132 () (_ BitVec 64))
(declare-fun temp10825_133 () (_ BitVec 64))
(declare-fun temp10825_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10825_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10825_136 () (_ BitVec 64))
(declare-fun temp10825_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10825_138 () (_ BitVec 64))
(declare-fun temp10825_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10825_140 () (_ BitVec 64))
(declare-fun temp10825_141 () (_ BitVec 64))
(declare-fun temp10825_142 () (_ BitVec 64))
(declare-fun temp10825_143 () (_ BitVec 64))
(declare-fun temp10825_144 () (_ BitVec 64))
(declare-fun temp10825_145 () (_ BitVec 64))
(declare-fun temp10825_146 () (_ BitVec 64))
(declare-fun temp10825_147 () (_ BitVec 64))
(declare-fun temp10825_148 () (_ BitVec 64))
(declare-fun temp10825_149 () (_ BitVec 64))
(declare-fun temp10825_150 () (_ BitVec 64))
(declare-fun temp10825_151 () (_ BitVec 64))
(declare-fun temp10825_152 () (_ BitVec 64))
(declare-fun temp10825_153 () (_ BitVec 64))
(declare-fun temp10825_154 () (_ BitVec 64))
(declare-fun temp10825_155 () (_ BitVec 64))
(declare-fun temp10825_157 () (_ BitVec 64))
(declare-fun temp10825_158 () (_ BitVec 64))
(declare-fun temp10825_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10825_159 () (_ BitVec 64))
(declare-fun temp10825_160 () (_ BitVec 64))
(declare-fun temp10825_162 () (_ BitVec 64))
(declare-fun temp10825_163 () (_ BitVec 64))
(declare-fun temp10825_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10825_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10825_165 () (_ BitVec 64))
(declare-fun temp10825_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10825_167 () (_ BitVec 64))
(declare-fun temp10825_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10825_169 () (_ BitVec 64))
(declare-fun temp10825_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10825_171 () (_ BitVec 64))
(declare-fun temp10825_172 () (_ BitVec 64))
(declare-fun temp10825_173 () (_ BitVec 64))
(declare-fun temp10825_174 () (_ BitVec 64))
(declare-fun temp10825_175 () (_ BitVec 64))
(declare-fun temp10825_176 () (_ BitVec 64))
(declare-fun temp10825_177 () (_ BitVec 64))
(declare-fun temp10825_178 () (_ BitVec 64))
(declare-fun temp10825_179 () (_ BitVec 64))
(declare-fun temp10825_180 () (_ BitVec 64))
(declare-fun temp10825_181 () (_ BitVec 64))
(declare-fun temp10825_182 () (_ BitVec 64))
(declare-fun temp10825_183 () (_ BitVec 64))
(declare-fun temp10825_184 () (_ BitVec 64))
(declare-fun temp10825_185 () (_ BitVec 64))
(declare-fun temp10825_186 () (_ BitVec 64))
(declare-fun temp10825_187 () (_ BitVec 64))
(declare-fun temp10825_188 () (_ BitVec 64))
(declare-fun temp10825_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10825_190 () (_ BitVec 64))
(declare-fun temp10825_192 () (_ BitVec 64))
(declare-fun temp10825_193 () (_ BitVec 64))
(declare-fun temp10825_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10825_194 () (_ BitVec 64))
(declare-fun temp10825_195 () (_ BitVec 64))
(declare-fun temp10825_197 () (_ BitVec 64))
(declare-fun temp10825_198 () (_ BitVec 64))
(declare-fun temp10825_196 () (_ BitVec 64))
(declare-fun temp10825_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10825_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10825_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10825_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10825_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10825_204 () (_ BitVec 64))
(declare-fun temp10825_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10825_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10825_207 () (_ BitVec 64))
(declare-fun temp10825_208 () (_ BitVec 64))
(declare-fun temp10825_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10825_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10825_211 () (_ BitVec 64))
(declare-fun temp10825_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10825_213 () (_ BitVec 64))
(declare-fun temp10825_214 () (_ BitVec 64))
(declare-fun temp10825_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10825_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10825_217 () (_ BitVec 64))
(declare-fun temp10825_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10825_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10825_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var4993424 () (_ BitVec 64))
(declare-fun var5255568 () (_ BitVec 64))
(declare-fun temp10825_221 () (_ BitVec 64))
(declare-fun var5583248 () (_ BitVec 64))
(declare-fun temp10825_222 () (_ BitVec 64))
(assert (= temp10825_1 #x0000000000000001))
(assert (= var77203 temp10825_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10825_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10825_2)))
(assert (= temp10825_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10825_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10825_4 #x0000000000000000))
(assert (= var210941 temp10825_4))
(assert (= temp10825_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10825_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10825_6 #x0000000000000000))
(assert (= var210986 temp10825_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10825_7 #x0000000000000000))
(assert (= temp10825_8 temp10825_7))
(assert (= temp10825_9 (select ARGNAME_padding_NAMEEND_VAL temp10825_8)))
(assert (= temp10825_10 #x0000000000000001))
(assert (= temp10825_11 temp10825_10))
(assert (= temp10825_12 (select ARGNAME_padding_NAMEEND_VAL temp10825_11)))
(assert (= temp10825_13 #x0000000000000002))
(assert (= temp10825_14 temp10825_13))
(assert (= temp10825_15 (select ARGNAME_padding_NAMEEND_VAL temp10825_14)))
(assert (= temp10825_16 #x0000000000000003))
(assert (= temp10825_17 temp10825_16))
(assert (= temp10825_18 (select ARGNAME_padding_NAMEEND_VAL temp10825_17)))
(assert (= temp10825_19 #x0000000000000004))
(assert (= temp10825_20 temp10825_19))
(assert (= temp10825_21 (select ARGNAME_padding_NAMEEND_VAL temp10825_20)))
(assert (= temp10825_22 #x0000000000000005))
(assert (= temp10825_23 temp10825_22))
(assert (= temp10825_24 (select ARGNAME_padding_NAMEEND_VAL temp10825_23)))
(assert (= temp10825_25 #x0000000000000000))
(assert (= temp10825_26 #x0000000000000000))
(assert (= temp10825_27 temp10825_26))
(assert (= temp10825_28 (select ARGNAME_padding_NAMEEND_VAL temp10825_27)))
(assert (= temp10825_29 #x0000000000000000))
(assert (= temp10825_30 #x0000000000000001))
(assert (= temp10825_31 temp10825_30))
(assert (= temp10825_32 (select ARGNAME_padding_NAMEEND_VAL temp10825_31)))
(assert (= temp10825_33 #x0000000000000000))
(assert (= temp10825_34 #x0000000000000002))
(assert (= temp10825_35 temp10825_34))
(assert (= temp10825_36 (select ARGNAME_padding_NAMEEND_VAL temp10825_35)))
(assert (= temp10825_37 #x0000000000000000))
(assert (= temp10825_38 #x0000000000000003))
(assert (= temp10825_39 temp10825_38))
(assert (= temp10825_40 (select ARGNAME_padding_NAMEEND_VAL temp10825_39)))
(assert (= temp10825_41 #x0000000000000000))
(assert (= temp10825_42 #x0000000000000004))
(assert (= temp10825_43 temp10825_42))
(assert (= temp10825_44 (select ARGNAME_padding_NAMEEND_VAL temp10825_43)))
(assert (= temp10825_45 #x0000000000000000))
(assert (= temp10825_46 #x0000000000000005))
(assert (= temp10825_47 temp10825_46))
(assert (= temp10825_48 (select ARGNAME_padding_NAMEEND_VAL temp10825_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10825_28 temp10825_25)
             (bvslt temp10825_32 temp10825_29)
             (bvslt temp10825_36 temp10825_33)
             (bvslt temp10825_40 temp10825_37)
             (bvslt temp10825_44 temp10825_41)
             (bvslt temp10825_48 temp10825_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10825_49 #x0000000000000000))
(assert (= var1191714 temp10825_49))
(assert (= temp10825_50 #x0000000000000000))
(assert (= temp10825_51 temp10825_50))
(assert (= temp10825_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10825_51)))
(assert (= temp10825_53 #x0000000000000001))
(assert (= temp10825_54 temp10825_53))
(assert (= temp10825_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10825_54)))
(assert (= temp10825_56 #x0000000000000002))
(assert (= temp10825_57 temp10825_56))
(assert (= temp10825_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10825_57)))
(assert (= temp10825_59 #x0000000000000003))
(assert (= temp10825_60 temp10825_59))
(assert (= temp10825_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10825_60)))
(assert (= temp10825_62 #x0000000000000004))
(assert (= temp10825_63 temp10825_62))
(assert (= temp10825_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10825_63)))
(assert (= temp10825_65 #x0000000000000005))
(assert (= temp10825_66 temp10825_65))
(assert (= temp10825_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10825_66)))
(assert (= temp10825_68 #x0000000000000000))
(assert (= temp10825_69 #x0000000000000000))
(assert (= temp10825_70 temp10825_69))
(assert (= temp10825_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10825_70)))
(assert (= temp10825_72 #x0000000000000000))
(assert (= temp10825_73 #x0000000000000001))
(assert (= temp10825_74 temp10825_73))
(assert (= temp10825_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10825_74)))
(assert (= temp10825_76 #x0000000000000000))
(assert (= temp10825_77 #x0000000000000002))
(assert (= temp10825_78 temp10825_77))
(assert (= temp10825_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10825_78)))
(assert (= temp10825_80 #x0000000000000000))
(assert (= temp10825_81 #x0000000000000003))
(assert (= temp10825_82 temp10825_81))
(assert (= temp10825_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10825_82)))
(assert (= temp10825_84 #x0000000000000000))
(assert (= temp10825_85 #x0000000000000004))
(assert (= temp10825_86 temp10825_85))
(assert (= temp10825_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10825_86)))
(assert (= temp10825_88 #x0000000000000000))
(assert (= temp10825_89 #x0000000000000005))
(assert (= temp10825_90 temp10825_89))
(assert (= temp10825_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10825_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10825_71 temp10825_68)
             (bvslt temp10825_75 temp10825_72)
             (bvslt temp10825_79 temp10825_76)
             (bvslt temp10825_83 temp10825_80)
             (bvslt temp10825_87 temp10825_84)
             (bvslt temp10825_91 temp10825_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10825_92 #x0000000000000000))
(assert (= var1191725 temp10825_92))
(assert (= temp10825_93 #x0000000000000000))
(assert (= temp10825_94 temp10825_93))
(assert (= temp10825_95 (select ARGNAME_stride_NAMEEND_VAL temp10825_94)))
(assert (= temp10825_96 #x0000000000000001))
(assert (= temp10825_97 temp10825_96))
(assert (= temp10825_98 (select ARGNAME_stride_NAMEEND_VAL temp10825_97)))
(assert (= temp10825_99 #x0000000000000002))
(assert (= temp10825_100 temp10825_99))
(assert (= temp10825_101 (select ARGNAME_stride_NAMEEND_VAL temp10825_100)))
(assert (= temp10825_102 #x0000000000000003))
(assert (= temp10825_103 temp10825_102))
(assert (= temp10825_104 (select ARGNAME_stride_NAMEEND_VAL temp10825_103)))
(assert (= temp10825_105 #x0000000000000004))
(assert (= temp10825_106 temp10825_105))
(assert (= temp10825_107 (select ARGNAME_stride_NAMEEND_VAL temp10825_106)))
(assert (= temp10825_108 #x0000000000000005))
(assert (= temp10825_109 temp10825_108))
(assert (= temp10825_110 (select ARGNAME_stride_NAMEEND_VAL temp10825_109)))
(assert (= temp10825_111 #x0000000000000000))
(assert (= temp10825_112 #x0000000000000000))
(assert (= temp10825_113 temp10825_112))
(assert (= temp10825_114 (select ARGNAME_stride_NAMEEND_VAL temp10825_113)))
(assert (= temp10825_115 #x0000000000000000))
(assert (= temp10825_116 #x0000000000000001))
(assert (= temp10825_117 temp10825_116))
(assert (= temp10825_118 (select ARGNAME_stride_NAMEEND_VAL temp10825_117)))
(assert (= temp10825_119 #x0000000000000000))
(assert (= temp10825_120 #x0000000000000002))
(assert (= temp10825_121 temp10825_120))
(assert (= temp10825_122 (select ARGNAME_stride_NAMEEND_VAL temp10825_121)))
(assert (= temp10825_123 #x0000000000000000))
(assert (= temp10825_124 #x0000000000000003))
(assert (= temp10825_125 temp10825_124))
(assert (= temp10825_126 (select ARGNAME_stride_NAMEEND_VAL temp10825_125)))
(assert (= temp10825_127 #x0000000000000000))
(assert (= temp10825_128 #x0000000000000004))
(assert (= temp10825_129 temp10825_128))
(assert (= temp10825_130 (select ARGNAME_stride_NAMEEND_VAL temp10825_129)))
(assert (= temp10825_131 #x0000000000000000))
(assert (= temp10825_132 #x0000000000000005))
(assert (= temp10825_133 temp10825_132))
(assert (= temp10825_134 (select ARGNAME_stride_NAMEEND_VAL temp10825_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10825_114 temp10825_111)
             (bvsle temp10825_118 temp10825_115)
             (bvsle temp10825_122 temp10825_119)
             (bvsle temp10825_126 temp10825_123)
             (bvsle temp10825_130 temp10825_127)
             (bvsle temp10825_134 temp10825_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10825_135 #x0000000000000000))
(assert (= var1191735 temp10825_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10825_136 #x0000000000000001))
(assert (= var1191747 temp10825_136))
(assert (= temp10825_137 #x0000000000000000))
(assert (= var1179826 temp10825_137))
(assert (= temp10825_138 #x0000000000000000))
(assert (= temp10825_139 temp10825_138))
(assert (= temp10825_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10825_139)))
(assert (= temp10825_141 #x0000000000000001))
(assert (= temp10825_142 temp10825_141))
(assert (= temp10825_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10825_142)))
(assert (= temp10825_144 #x0000000000000002))
(assert (= temp10825_145 temp10825_144))
(assert (= temp10825_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10825_145)))
(assert (= temp10825_147 #x0000000000000003))
(assert (= temp10825_148 temp10825_147))
(assert (= temp10825_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10825_148)))
(assert (= temp10825_150 #x0000000000000004))
(assert (= temp10825_151 temp10825_150))
(assert (= temp10825_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10825_151)))
(assert (= temp10825_153 #x0000000000000005))
(assert (= temp10825_154 temp10825_153))
(assert (= temp10825_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10825_154)))
(assert (= temp10825_157 var1179826))
(assert (= temp10825_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10825_157)))
(assert (= temp10825_156 temp10825_158))
(assert (= var1191780
   (ite (bvslt temp10825_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10825_159 #x0000000000000000))
(assert (= var1191780 temp10825_159))
(assert (= temp10825_160 #x0000000000000000))
(assert (= var1179826 temp10825_160))
(assert (= temp10825_162 var1179826))
(assert (= temp10825_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10825_162)))
(assert (= temp10825_161 temp10825_163))
(assert (= var1191802 (bvsmod temp10825_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10825_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10825_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10825_165 #x0000000000000001))
(assert (= var1191803 temp10825_165))
(assert (= temp10825_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10825_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10825_167 #x0000000000000001))
(assert (= var1191823 temp10825_167))
(assert (= temp10825_168 #x0000000000000001))
(assert (= var1180714 temp10825_168))
(assert (= temp10825_169 #x0000000000000000))
(assert (= temp10825_170 temp10825_169))
(assert (= temp10825_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10825_170)))
(assert (= temp10825_172 #x0000000000000001))
(assert (= temp10825_173 temp10825_172))
(assert (= temp10825_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10825_173)))
(assert (= temp10825_175 #x0000000000000002))
(assert (= temp10825_176 temp10825_175))
(assert (= temp10825_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10825_176)))
(assert (= temp10825_178 #x0000000000000003))
(assert (= temp10825_179 temp10825_178))
(assert (= temp10825_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10825_179)))
(assert (= temp10825_181 #x0000000000000004))
(assert (= temp10825_182 temp10825_181))
(assert (= temp10825_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10825_182)))
(assert (= temp10825_184 #x0000000000000005))
(assert (= temp10825_185 temp10825_184))
(assert (= temp10825_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10825_185)))
(assert (= temp10825_187 #x0000000000000000))
(assert (= temp10825_188
   (ite (bvslt var1180714 temp10825_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10825_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10825_188)))
(assert (= var1191831 temp10825_189))
(assert (bvslt (ite (bvslt var1180714 temp10825_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10825_190 #x0000000000000001))
(assert (= var1180714 temp10825_190))
(assert (= temp10825_192 var1180714))
(assert (= temp10825_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10825_192)))
(assert (= temp10825_191 temp10825_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10825_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10825_194 #x0000000000000001))
(assert (= var1191836 temp10825_194))
(assert (= temp10825_195 #x0000000000000000))
(assert (= var1179826 temp10825_195))
(assert (= temp10825_197 var1179826))
(assert (= temp10825_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10825_197)))
(assert (= temp10825_196 temp10825_198))
(assert (= temp10825_199 #x0000000000000002))
(assert (= var1586025 temp10825_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10825_200 #x0000000000000001))
(assert (= var1191993 temp10825_200))
(assert (= temp10825_201 #x0000000000000001))
(assert (= var2700303 temp10825_201))
(assert (= temp10825_202 #x0000000000000001))
(assert (= var2962447 temp10825_202))
(assert (= temp10825_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10825_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10825_204 #x0000000000000001))
(assert (= var211058 temp10825_204))
(assert (= temp10825_205 #x0000000000000001))
(assert (= var211188 temp10825_205))
(assert (= var3879401 var211188))
(assert (= temp10825_206 #x0000000000000000))
(assert (= var3866802 temp10825_206))
(assert (= temp10825_207 #x0000000000000000))
(assert (= temp10825_208
   (ite (bvslt var3866802 temp10825_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10825_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10825_208)))
(assert (= var3879420 temp10825_209))
(assert (bvslt (ite (bvslt var3866802 temp10825_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10825_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10825_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10825_211 #x0000000000000000))
(assert (= var3879421 temp10825_211))
(assert (= temp10825_212 #x0000000000000001))
(assert (= var3867690 temp10825_212))
(assert (= temp10825_213 #x0000000000000000))
(assert (= temp10825_214
   (ite (bvslt var3867690 temp10825_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10825_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10825_214)))
(assert (= var3879423 temp10825_215))
(assert (bvslt (ite (bvslt var3867690 temp10825_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10825_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10825_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10825_217 #x0000000000000001))
(assert (= var3879424 temp10825_217))
(assert (= temp10825_218 #x0000000000000000))
(assert (= var4133117 temp10825_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10825_219 #x0000000000000002))
(assert (= var4339331 temp10825_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10825_220 #x0000000000000000))
(assert (= var4404892 temp10825_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var4993424 var211201))
(assert (= var5255568 var211201))
(assert (= temp10825_221 #x0000000000000000))
(assert (= var5583248 temp10825_221))
(assert (= temp10825_222 #x0000000000000001))
(assert (= var211058 temp10825_222))
(model-add temp10825_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10825_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10825_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10825_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




