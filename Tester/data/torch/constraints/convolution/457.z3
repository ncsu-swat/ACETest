(declare-fun temp609_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp609_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp609_3 () (_ BitVec 64))
(declare-fun temp609_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp609_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp609_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp609_7 () (_ BitVec 64))
(declare-fun temp609_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp609_9 () (_ BitVec 64))
(declare-fun temp609_10 () (_ BitVec 64))
(declare-fun temp609_11 () (_ BitVec 64))
(declare-fun temp609_12 () (_ BitVec 64))
(declare-fun temp609_13 () (_ BitVec 64))
(declare-fun temp609_14 () (_ BitVec 64))
(declare-fun temp609_15 () (_ BitVec 64))
(declare-fun temp609_16 () (_ BitVec 64))
(declare-fun temp609_17 () (_ BitVec 64))
(declare-fun temp609_18 () (_ BitVec 64))
(declare-fun temp609_19 () (_ BitVec 64))
(declare-fun temp609_20 () (_ BitVec 64))
(declare-fun temp609_21 () (_ BitVec 64))
(declare-fun temp609_22 () (_ BitVec 64))
(declare-fun temp609_23 () (_ BitVec 64))
(declare-fun temp609_24 () (_ BitVec 64))
(declare-fun temp609_25 () (_ BitVec 64))
(declare-fun temp609_26 () (_ BitVec 64))
(declare-fun temp609_27 () (_ BitVec 64))
(declare-fun temp609_28 () (_ BitVec 64))
(declare-fun temp609_29 () (_ BitVec 64))
(declare-fun temp609_30 () (_ BitVec 64))
(declare-fun temp609_31 () (_ BitVec 64))
(declare-fun temp609_32 () (_ BitVec 64))
(declare-fun temp609_33 () (_ BitVec 64))
(declare-fun temp609_34 () (_ BitVec 64))
(declare-fun temp609_35 () (_ BitVec 64))
(declare-fun temp609_36 () (_ BitVec 64))
(declare-fun temp609_37 () (_ BitVec 64))
(declare-fun temp609_38 () (_ BitVec 64))
(declare-fun temp609_39 () (_ BitVec 64))
(declare-fun temp609_40 () (_ BitVec 64))
(declare-fun temp609_41 () (_ BitVec 64))
(declare-fun temp609_42 () (_ BitVec 64))
(declare-fun temp609_43 () (_ BitVec 64))
(declare-fun temp609_44 () (_ BitVec 64))
(declare-fun temp609_45 () (_ BitVec 64))
(declare-fun temp609_46 () (_ BitVec 64))
(declare-fun temp609_47 () (_ BitVec 64))
(declare-fun temp609_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp609_49 () (_ BitVec 64))
(declare-fun temp609_50 () (_ BitVec 64))
(declare-fun temp609_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp609_52 () (_ BitVec 64))
(declare-fun temp609_53 () (_ BitVec 64))
(declare-fun temp609_54 () (_ BitVec 64))
(declare-fun temp609_55 () (_ BitVec 64))
(declare-fun temp609_56 () (_ BitVec 64))
(declare-fun temp609_57 () (_ BitVec 64))
(declare-fun temp609_58 () (_ BitVec 64))
(declare-fun temp609_59 () (_ BitVec 64))
(declare-fun temp609_60 () (_ BitVec 64))
(declare-fun temp609_61 () (_ BitVec 64))
(declare-fun temp609_62 () (_ BitVec 64))
(declare-fun temp609_63 () (_ BitVec 64))
(declare-fun temp609_64 () (_ BitVec 64))
(declare-fun temp609_65 () (_ BitVec 64))
(declare-fun temp609_66 () (_ BitVec 64))
(declare-fun temp609_67 () (_ BitVec 64))
(declare-fun temp609_68 () (_ BitVec 64))
(declare-fun temp609_69 () (_ BitVec 64))
(declare-fun temp609_70 () (_ BitVec 64))
(declare-fun temp609_71 () (_ BitVec 64))
(declare-fun temp609_72 () (_ BitVec 64))
(declare-fun temp609_73 () (_ BitVec 64))
(declare-fun temp609_74 () (_ BitVec 64))
(declare-fun temp609_75 () (_ BitVec 64))
(declare-fun temp609_76 () (_ BitVec 64))
(declare-fun temp609_77 () (_ BitVec 64))
(declare-fun temp609_78 () (_ BitVec 64))
(declare-fun temp609_79 () (_ BitVec 64))
(declare-fun temp609_80 () (_ BitVec 64))
(declare-fun temp609_81 () (_ BitVec 64))
(declare-fun temp609_82 () (_ BitVec 64))
(declare-fun temp609_83 () (_ BitVec 64))
(declare-fun temp609_84 () (_ BitVec 64))
(declare-fun temp609_85 () (_ BitVec 64))
(declare-fun temp609_86 () (_ BitVec 64))
(declare-fun temp609_87 () (_ BitVec 64))
(declare-fun temp609_88 () (_ BitVec 64))
(declare-fun temp609_89 () (_ BitVec 64))
(declare-fun temp609_90 () (_ BitVec 64))
(declare-fun temp609_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp609_92 () (_ BitVec 64))
(declare-fun temp609_93 () (_ BitVec 64))
(declare-fun temp609_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp609_95 () (_ BitVec 64))
(declare-fun temp609_96 () (_ BitVec 64))
(declare-fun temp609_97 () (_ BitVec 64))
(declare-fun temp609_98 () (_ BitVec 64))
(declare-fun temp609_99 () (_ BitVec 64))
(declare-fun temp609_100 () (_ BitVec 64))
(declare-fun temp609_101 () (_ BitVec 64))
(declare-fun temp609_102 () (_ BitVec 64))
(declare-fun temp609_103 () (_ BitVec 64))
(declare-fun temp609_104 () (_ BitVec 64))
(declare-fun temp609_105 () (_ BitVec 64))
(declare-fun temp609_106 () (_ BitVec 64))
(declare-fun temp609_107 () (_ BitVec 64))
(declare-fun temp609_108 () (_ BitVec 64))
(declare-fun temp609_109 () (_ BitVec 64))
(declare-fun temp609_110 () (_ BitVec 64))
(declare-fun temp609_111 () (_ BitVec 64))
(declare-fun temp609_112 () (_ BitVec 64))
(declare-fun temp609_113 () (_ BitVec 64))
(declare-fun temp609_114 () (_ BitVec 64))
(declare-fun temp609_115 () (_ BitVec 64))
(declare-fun temp609_116 () (_ BitVec 64))
(declare-fun temp609_117 () (_ BitVec 64))
(declare-fun temp609_118 () (_ BitVec 64))
(declare-fun temp609_119 () (_ BitVec 64))
(declare-fun temp609_120 () (_ BitVec 64))
(declare-fun temp609_121 () (_ BitVec 64))
(declare-fun temp609_122 () (_ BitVec 64))
(declare-fun temp609_123 () (_ BitVec 64))
(declare-fun temp609_124 () (_ BitVec 64))
(declare-fun temp609_125 () (_ BitVec 64))
(declare-fun temp609_126 () (_ BitVec 64))
(declare-fun temp609_127 () (_ BitVec 64))
(declare-fun temp609_128 () (_ BitVec 64))
(declare-fun temp609_129 () (_ BitVec 64))
(declare-fun temp609_130 () (_ BitVec 64))
(declare-fun temp609_131 () (_ BitVec 64))
(declare-fun temp609_132 () (_ BitVec 64))
(declare-fun temp609_133 () (_ BitVec 64))
(declare-fun temp609_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp609_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp609_136 () (_ BitVec 64))
(declare-fun temp609_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp609_138 () (_ BitVec 64))
(declare-fun temp609_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp609_140 () (_ BitVec 64))
(declare-fun temp609_141 () (_ BitVec 64))
(declare-fun temp609_142 () (_ BitVec 64))
(declare-fun temp609_143 () (_ BitVec 64))
(declare-fun temp609_144 () (_ BitVec 64))
(declare-fun temp609_145 () (_ BitVec 64))
(declare-fun temp609_146 () (_ BitVec 64))
(declare-fun temp609_147 () (_ BitVec 64))
(declare-fun temp609_148 () (_ BitVec 64))
(declare-fun temp609_149 () (_ BitVec 64))
(declare-fun temp609_150 () (_ BitVec 64))
(declare-fun temp609_151 () (_ BitVec 64))
(declare-fun temp609_152 () (_ BitVec 64))
(declare-fun temp609_153 () (_ BitVec 64))
(declare-fun temp609_154 () (_ BitVec 64))
(declare-fun temp609_155 () (_ BitVec 64))
(declare-fun temp609_157 () (_ BitVec 64))
(declare-fun temp609_158 () (_ BitVec 64))
(declare-fun temp609_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp609_159 () (_ BitVec 64))
(declare-fun temp609_160 () (_ BitVec 64))
(declare-fun temp609_162 () (_ BitVec 64))
(declare-fun temp609_163 () (_ BitVec 64))
(declare-fun temp609_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp609_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp609_165 () (_ BitVec 64))
(declare-fun temp609_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp609_167 () (_ BitVec 64))
(declare-fun temp609_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp609_169 () (_ BitVec 64))
(declare-fun temp609_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp609_171 () (_ BitVec 64))
(declare-fun temp609_172 () (_ BitVec 64))
(declare-fun temp609_173 () (_ BitVec 64))
(declare-fun temp609_174 () (_ BitVec 64))
(declare-fun temp609_175 () (_ BitVec 64))
(declare-fun temp609_176 () (_ BitVec 64))
(declare-fun temp609_177 () (_ BitVec 64))
(declare-fun temp609_178 () (_ BitVec 64))
(declare-fun temp609_179 () (_ BitVec 64))
(declare-fun temp609_180 () (_ BitVec 64))
(declare-fun temp609_181 () (_ BitVec 64))
(declare-fun temp609_182 () (_ BitVec 64))
(declare-fun temp609_183 () (_ BitVec 64))
(declare-fun temp609_184 () (_ BitVec 64))
(declare-fun temp609_185 () (_ BitVec 64))
(declare-fun temp609_186 () (_ BitVec 64))
(declare-fun temp609_187 () (_ BitVec 64))
(declare-fun temp609_188 () (_ BitVec 64))
(declare-fun temp609_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp609_190 () (_ BitVec 64))
(declare-fun temp609_192 () (_ BitVec 64))
(declare-fun temp609_193 () (_ BitVec 64))
(declare-fun temp609_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp609_194 () (_ BitVec 64))
(declare-fun temp609_195 () (_ BitVec 64))
(declare-fun temp609_197 () (_ BitVec 64))
(declare-fun temp609_198 () (_ BitVec 64))
(declare-fun temp609_196 () (_ BitVec 64))
(declare-fun temp609_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp609_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp609_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp609_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp609_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp609_204 () (_ BitVec 64))
(declare-fun temp609_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp609_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp609_207 () (_ BitVec 64))
(declare-fun temp609_208 () (_ BitVec 64))
(declare-fun temp609_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp609_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp609_211 () (_ BitVec 64))
(declare-fun temp609_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp609_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp609_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4993424 () (_ BitVec 64))
(declare-fun var211388 () (_ BitVec 64))
(declare-fun temp609_215 () (_ BitVec 64))
(declare-fun var211389 () (_ BitVec 64))
(declare-fun var5914445 () (_ BitVec 64))
(declare-fun temp609_216 () (_ BitVec 64))
(assert (= temp609_1 #x0000000000000001))
(assert (= var77203 temp609_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp609_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp609_2)))
(assert (= temp609_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp609_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp609_4 #x0000000000000000))
(assert (= var210941 temp609_4))
(assert (= temp609_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp609_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp609_6 #x0000000000000000))
(assert (= var210986 temp609_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp609_7 #x0000000000000000))
(assert (= temp609_8 temp609_7))
(assert (= temp609_9 (select ARGNAME_padding_NAMEEND_VAL temp609_8)))
(assert (= temp609_10 #x0000000000000001))
(assert (= temp609_11 temp609_10))
(assert (= temp609_12 (select ARGNAME_padding_NAMEEND_VAL temp609_11)))
(assert (= temp609_13 #x0000000000000002))
(assert (= temp609_14 temp609_13))
(assert (= temp609_15 (select ARGNAME_padding_NAMEEND_VAL temp609_14)))
(assert (= temp609_16 #x0000000000000003))
(assert (= temp609_17 temp609_16))
(assert (= temp609_18 (select ARGNAME_padding_NAMEEND_VAL temp609_17)))
(assert (= temp609_19 #x0000000000000004))
(assert (= temp609_20 temp609_19))
(assert (= temp609_21 (select ARGNAME_padding_NAMEEND_VAL temp609_20)))
(assert (= temp609_22 #x0000000000000005))
(assert (= temp609_23 temp609_22))
(assert (= temp609_24 (select ARGNAME_padding_NAMEEND_VAL temp609_23)))
(assert (= temp609_25 #x0000000000000000))
(assert (= temp609_26 #x0000000000000000))
(assert (= temp609_27 temp609_26))
(assert (= temp609_28 (select ARGNAME_padding_NAMEEND_VAL temp609_27)))
(assert (= temp609_29 #x0000000000000000))
(assert (= temp609_30 #x0000000000000001))
(assert (= temp609_31 temp609_30))
(assert (= temp609_32 (select ARGNAME_padding_NAMEEND_VAL temp609_31)))
(assert (= temp609_33 #x0000000000000000))
(assert (= temp609_34 #x0000000000000002))
(assert (= temp609_35 temp609_34))
(assert (= temp609_36 (select ARGNAME_padding_NAMEEND_VAL temp609_35)))
(assert (= temp609_37 #x0000000000000000))
(assert (= temp609_38 #x0000000000000003))
(assert (= temp609_39 temp609_38))
(assert (= temp609_40 (select ARGNAME_padding_NAMEEND_VAL temp609_39)))
(assert (= temp609_41 #x0000000000000000))
(assert (= temp609_42 #x0000000000000004))
(assert (= temp609_43 temp609_42))
(assert (= temp609_44 (select ARGNAME_padding_NAMEEND_VAL temp609_43)))
(assert (= temp609_45 #x0000000000000000))
(assert (= temp609_46 #x0000000000000005))
(assert (= temp609_47 temp609_46))
(assert (= temp609_48 (select ARGNAME_padding_NAMEEND_VAL temp609_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp609_28 temp609_25)
             (bvslt temp609_32 temp609_29)
             (bvslt temp609_36 temp609_33)
             (bvslt temp609_40 temp609_37)
             (bvslt temp609_44 temp609_41)
             (bvslt temp609_48 temp609_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp609_49 #x0000000000000000))
(assert (= var1191714 temp609_49))
(assert (= temp609_50 #x0000000000000000))
(assert (= temp609_51 temp609_50))
(assert (= temp609_52 (select ARGNAME_output_padding_NAMEEND_VAL temp609_51)))
(assert (= temp609_53 #x0000000000000001))
(assert (= temp609_54 temp609_53))
(assert (= temp609_55 (select ARGNAME_output_padding_NAMEEND_VAL temp609_54)))
(assert (= temp609_56 #x0000000000000002))
(assert (= temp609_57 temp609_56))
(assert (= temp609_58 (select ARGNAME_output_padding_NAMEEND_VAL temp609_57)))
(assert (= temp609_59 #x0000000000000003))
(assert (= temp609_60 temp609_59))
(assert (= temp609_61 (select ARGNAME_output_padding_NAMEEND_VAL temp609_60)))
(assert (= temp609_62 #x0000000000000004))
(assert (= temp609_63 temp609_62))
(assert (= temp609_64 (select ARGNAME_output_padding_NAMEEND_VAL temp609_63)))
(assert (= temp609_65 #x0000000000000005))
(assert (= temp609_66 temp609_65))
(assert (= temp609_67 (select ARGNAME_output_padding_NAMEEND_VAL temp609_66)))
(assert (= temp609_68 #x0000000000000000))
(assert (= temp609_69 #x0000000000000000))
(assert (= temp609_70 temp609_69))
(assert (= temp609_71 (select ARGNAME_output_padding_NAMEEND_VAL temp609_70)))
(assert (= temp609_72 #x0000000000000000))
(assert (= temp609_73 #x0000000000000001))
(assert (= temp609_74 temp609_73))
(assert (= temp609_75 (select ARGNAME_output_padding_NAMEEND_VAL temp609_74)))
(assert (= temp609_76 #x0000000000000000))
(assert (= temp609_77 #x0000000000000002))
(assert (= temp609_78 temp609_77))
(assert (= temp609_79 (select ARGNAME_output_padding_NAMEEND_VAL temp609_78)))
(assert (= temp609_80 #x0000000000000000))
(assert (= temp609_81 #x0000000000000003))
(assert (= temp609_82 temp609_81))
(assert (= temp609_83 (select ARGNAME_output_padding_NAMEEND_VAL temp609_82)))
(assert (= temp609_84 #x0000000000000000))
(assert (= temp609_85 #x0000000000000004))
(assert (= temp609_86 temp609_85))
(assert (= temp609_87 (select ARGNAME_output_padding_NAMEEND_VAL temp609_86)))
(assert (= temp609_88 #x0000000000000000))
(assert (= temp609_89 #x0000000000000005))
(assert (= temp609_90 temp609_89))
(assert (= temp609_91 (select ARGNAME_output_padding_NAMEEND_VAL temp609_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp609_71 temp609_68)
             (bvslt temp609_75 temp609_72)
             (bvslt temp609_79 temp609_76)
             (bvslt temp609_83 temp609_80)
             (bvslt temp609_87 temp609_84)
             (bvslt temp609_91 temp609_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp609_92 #x0000000000000000))
(assert (= var1191725 temp609_92))
(assert (= temp609_93 #x0000000000000000))
(assert (= temp609_94 temp609_93))
(assert (= temp609_95 (select ARGNAME_stride_NAMEEND_VAL temp609_94)))
(assert (= temp609_96 #x0000000000000001))
(assert (= temp609_97 temp609_96))
(assert (= temp609_98 (select ARGNAME_stride_NAMEEND_VAL temp609_97)))
(assert (= temp609_99 #x0000000000000002))
(assert (= temp609_100 temp609_99))
(assert (= temp609_101 (select ARGNAME_stride_NAMEEND_VAL temp609_100)))
(assert (= temp609_102 #x0000000000000003))
(assert (= temp609_103 temp609_102))
(assert (= temp609_104 (select ARGNAME_stride_NAMEEND_VAL temp609_103)))
(assert (= temp609_105 #x0000000000000004))
(assert (= temp609_106 temp609_105))
(assert (= temp609_107 (select ARGNAME_stride_NAMEEND_VAL temp609_106)))
(assert (= temp609_108 #x0000000000000005))
(assert (= temp609_109 temp609_108))
(assert (= temp609_110 (select ARGNAME_stride_NAMEEND_VAL temp609_109)))
(assert (= temp609_111 #x0000000000000000))
(assert (= temp609_112 #x0000000000000000))
(assert (= temp609_113 temp609_112))
(assert (= temp609_114 (select ARGNAME_stride_NAMEEND_VAL temp609_113)))
(assert (= temp609_115 #x0000000000000000))
(assert (= temp609_116 #x0000000000000001))
(assert (= temp609_117 temp609_116))
(assert (= temp609_118 (select ARGNAME_stride_NAMEEND_VAL temp609_117)))
(assert (= temp609_119 #x0000000000000000))
(assert (= temp609_120 #x0000000000000002))
(assert (= temp609_121 temp609_120))
(assert (= temp609_122 (select ARGNAME_stride_NAMEEND_VAL temp609_121)))
(assert (= temp609_123 #x0000000000000000))
(assert (= temp609_124 #x0000000000000003))
(assert (= temp609_125 temp609_124))
(assert (= temp609_126 (select ARGNAME_stride_NAMEEND_VAL temp609_125)))
(assert (= temp609_127 #x0000000000000000))
(assert (= temp609_128 #x0000000000000004))
(assert (= temp609_129 temp609_128))
(assert (= temp609_130 (select ARGNAME_stride_NAMEEND_VAL temp609_129)))
(assert (= temp609_131 #x0000000000000000))
(assert (= temp609_132 #x0000000000000005))
(assert (= temp609_133 temp609_132))
(assert (= temp609_134 (select ARGNAME_stride_NAMEEND_VAL temp609_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp609_114 temp609_111)
             (bvsle temp609_118 temp609_115)
             (bvsle temp609_122 temp609_119)
             (bvsle temp609_126 temp609_123)
             (bvsle temp609_130 temp609_127)
             (bvsle temp609_134 temp609_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp609_135 #x0000000000000000))
(assert (= var1191735 temp609_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp609_136 #x0000000000000001))
(assert (= var1191747 temp609_136))
(assert (= temp609_137 #x0000000000000000))
(assert (= var1179826 temp609_137))
(assert (= temp609_138 #x0000000000000000))
(assert (= temp609_139 temp609_138))
(assert (= temp609_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp609_139)))
(assert (= temp609_141 #x0000000000000001))
(assert (= temp609_142 temp609_141))
(assert (= temp609_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp609_142)))
(assert (= temp609_144 #x0000000000000002))
(assert (= temp609_145 temp609_144))
(assert (= temp609_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp609_145)))
(assert (= temp609_147 #x0000000000000003))
(assert (= temp609_148 temp609_147))
(assert (= temp609_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp609_148)))
(assert (= temp609_150 #x0000000000000004))
(assert (= temp609_151 temp609_150))
(assert (= temp609_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp609_151)))
(assert (= temp609_153 #x0000000000000005))
(assert (= temp609_154 temp609_153))
(assert (= temp609_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp609_154)))
(assert (= temp609_157 var1179826))
(assert (= temp609_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp609_157)))
(assert (= temp609_156 temp609_158))
(assert (= var1191780
   (ite (bvslt temp609_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp609_159 #x0000000000000000))
(assert (= var1191780 temp609_159))
(assert (= temp609_160 #x0000000000000000))
(assert (= var1179826 temp609_160))
(assert (= temp609_162 var1179826))
(assert (= temp609_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp609_162)))
(assert (= temp609_161 temp609_163))
(assert (= var1191802 (bvsmod temp609_161 ARGNAME_groups_NAMEEND)))
(assert (= temp609_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp609_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp609_165 #x0000000000000001))
(assert (= var1191803 temp609_165))
(assert (= temp609_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp609_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp609_167 #x0000000000000001))
(assert (= var1191823 temp609_167))
(assert (= temp609_168 #x0000000000000001))
(assert (= var1180714 temp609_168))
(assert (= temp609_169 #x0000000000000000))
(assert (= temp609_170 temp609_169))
(assert (= temp609_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp609_170)))
(assert (= temp609_172 #x0000000000000001))
(assert (= temp609_173 temp609_172))
(assert (= temp609_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp609_173)))
(assert (= temp609_175 #x0000000000000002))
(assert (= temp609_176 temp609_175))
(assert (= temp609_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp609_176)))
(assert (= temp609_178 #x0000000000000003))
(assert (= temp609_179 temp609_178))
(assert (= temp609_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp609_179)))
(assert (= temp609_181 #x0000000000000004))
(assert (= temp609_182 temp609_181))
(assert (= temp609_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp609_182)))
(assert (= temp609_184 #x0000000000000005))
(assert (= temp609_185 temp609_184))
(assert (= temp609_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp609_185)))
(assert (= temp609_187 #x0000000000000000))
(assert (= temp609_188
   (ite (bvslt var1180714 temp609_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp609_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp609_188)))
(assert (= var1191831 temp609_189))
(assert (bvslt (ite (bvslt var1180714 temp609_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp609_190 #x0000000000000001))
(assert (= var1180714 temp609_190))
(assert (= temp609_192 var1180714))
(assert (= temp609_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp609_192)))
(assert (= temp609_191 temp609_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp609_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp609_194 #x0000000000000001))
(assert (= var1191836 temp609_194))
(assert (= temp609_195 #x0000000000000000))
(assert (= var1179826 temp609_195))
(assert (= temp609_197 var1179826))
(assert (= temp609_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp609_197)))
(assert (= temp609_196 temp609_198))
(assert (= temp609_199 #x0000000000000002))
(assert (= var1586025 temp609_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp609_200 #x0000000000000001))
(assert (= var1191993 temp609_200))
(assert (= temp609_201 #x0000000000000001))
(assert (= var2700303 temp609_201))
(assert (= temp609_202 #x0000000000000001))
(assert (= var2962447 temp609_202))
(assert (= temp609_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp609_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp609_204 #x0000000000000001))
(assert (= var211058 temp609_204))
(assert (= temp609_205 #x0000000000000001))
(assert (= var211188 temp609_205))
(assert (= var3879401 var211188))
(assert (= temp609_206 #x0000000000000000))
(assert (= var3866802 temp609_206))
(assert (= temp609_207 #x0000000000000000))
(assert (= temp609_208
   (ite (bvslt var3866802 temp609_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp609_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp609_208)))
(assert (= var3879420 temp609_209))
(assert (bvslt (ite (bvslt var3866802 temp609_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp609_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp609_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp609_211 #x0000000000000001))
(assert (= var3879421 temp609_211))
(assert (= temp609_212 #x0000000000000000))
(assert (= var4079423 temp609_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp609_213 #x0000000000000002))
(assert (= var4208259 temp609_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp609_214 #x0000000000000000))
(assert (= var4273820 temp609_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4993424 var211201))
(assert (= var211388 var210913))
(assert (= temp609_215 #x0000000000000000))
(assert (= var211389
   (ite (distinct var211388 temp609_215) #x0000000000000001 #x0000000000000000)))
(assert (= var5914445 var211389))
(assert (= temp609_216 #x0000000000000001))
(assert (= var211058 temp609_216))
(model-add temp609_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp609_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp609_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp609_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




