(declare-fun temp1333_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp1333_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1333_3 () (_ BitVec 64))
(declare-fun temp1333_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1333_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp1333_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1333_7 () (_ BitVec 64))
(declare-fun temp1333_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1333_9 () (_ BitVec 64))
(declare-fun temp1333_10 () (_ BitVec 64))
(declare-fun temp1333_11 () (_ BitVec 64))
(declare-fun temp1333_12 () (_ BitVec 64))
(declare-fun temp1333_13 () (_ BitVec 64))
(declare-fun temp1333_14 () (_ BitVec 64))
(declare-fun temp1333_15 () (_ BitVec 64))
(declare-fun temp1333_16 () (_ BitVec 64))
(declare-fun temp1333_17 () (_ BitVec 64))
(declare-fun temp1333_18 () (_ BitVec 64))
(declare-fun temp1333_19 () (_ BitVec 64))
(declare-fun temp1333_20 () (_ BitVec 64))
(declare-fun temp1333_21 () (_ BitVec 64))
(declare-fun temp1333_22 () (_ BitVec 64))
(declare-fun temp1333_23 () (_ BitVec 64))
(declare-fun temp1333_24 () (_ BitVec 64))
(declare-fun temp1333_25 () (_ BitVec 64))
(declare-fun temp1333_26 () (_ BitVec 64))
(declare-fun temp1333_27 () (_ BitVec 64))
(declare-fun temp1333_28 () (_ BitVec 64))
(declare-fun temp1333_29 () (_ BitVec 64))
(declare-fun temp1333_30 () (_ BitVec 64))
(declare-fun temp1333_31 () (_ BitVec 64))
(declare-fun temp1333_32 () (_ BitVec 64))
(declare-fun temp1333_33 () (_ BitVec 64))
(declare-fun temp1333_34 () (_ BitVec 64))
(declare-fun temp1333_35 () (_ BitVec 64))
(declare-fun temp1333_36 () (_ BitVec 64))
(declare-fun temp1333_37 () (_ BitVec 64))
(declare-fun temp1333_38 () (_ BitVec 64))
(declare-fun temp1333_39 () (_ BitVec 64))
(declare-fun temp1333_40 () (_ BitVec 64))
(declare-fun temp1333_41 () (_ BitVec 64))
(declare-fun temp1333_42 () (_ BitVec 64))
(declare-fun temp1333_43 () (_ BitVec 64))
(declare-fun temp1333_44 () (_ BitVec 64))
(declare-fun temp1333_45 () (_ BitVec 64))
(declare-fun temp1333_46 () (_ BitVec 64))
(declare-fun temp1333_47 () (_ BitVec 64))
(declare-fun temp1333_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp1333_49 () (_ BitVec 64))
(declare-fun temp1333_50 () (_ BitVec 64))
(declare-fun temp1333_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1333_52 () (_ BitVec 64))
(declare-fun temp1333_53 () (_ BitVec 64))
(declare-fun temp1333_54 () (_ BitVec 64))
(declare-fun temp1333_55 () (_ BitVec 64))
(declare-fun temp1333_56 () (_ BitVec 64))
(declare-fun temp1333_57 () (_ BitVec 64))
(declare-fun temp1333_58 () (_ BitVec 64))
(declare-fun temp1333_59 () (_ BitVec 64))
(declare-fun temp1333_60 () (_ BitVec 64))
(declare-fun temp1333_61 () (_ BitVec 64))
(declare-fun temp1333_62 () (_ BitVec 64))
(declare-fun temp1333_63 () (_ BitVec 64))
(declare-fun temp1333_64 () (_ BitVec 64))
(declare-fun temp1333_65 () (_ BitVec 64))
(declare-fun temp1333_66 () (_ BitVec 64))
(declare-fun temp1333_67 () (_ BitVec 64))
(declare-fun temp1333_68 () (_ BitVec 64))
(declare-fun temp1333_69 () (_ BitVec 64))
(declare-fun temp1333_70 () (_ BitVec 64))
(declare-fun temp1333_71 () (_ BitVec 64))
(declare-fun temp1333_72 () (_ BitVec 64))
(declare-fun temp1333_73 () (_ BitVec 64))
(declare-fun temp1333_74 () (_ BitVec 64))
(declare-fun temp1333_75 () (_ BitVec 64))
(declare-fun temp1333_76 () (_ BitVec 64))
(declare-fun temp1333_77 () (_ BitVec 64))
(declare-fun temp1333_78 () (_ BitVec 64))
(declare-fun temp1333_79 () (_ BitVec 64))
(declare-fun temp1333_80 () (_ BitVec 64))
(declare-fun temp1333_81 () (_ BitVec 64))
(declare-fun temp1333_82 () (_ BitVec 64))
(declare-fun temp1333_83 () (_ BitVec 64))
(declare-fun temp1333_84 () (_ BitVec 64))
(declare-fun temp1333_85 () (_ BitVec 64))
(declare-fun temp1333_86 () (_ BitVec 64))
(declare-fun temp1333_87 () (_ BitVec 64))
(declare-fun temp1333_88 () (_ BitVec 64))
(declare-fun temp1333_89 () (_ BitVec 64))
(declare-fun temp1333_90 () (_ BitVec 64))
(declare-fun temp1333_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp1333_92 () (_ BitVec 64))
(declare-fun temp1333_93 () (_ BitVec 64))
(declare-fun temp1333_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1333_95 () (_ BitVec 64))
(declare-fun temp1333_96 () (_ BitVec 64))
(declare-fun temp1333_97 () (_ BitVec 64))
(declare-fun temp1333_98 () (_ BitVec 64))
(declare-fun temp1333_99 () (_ BitVec 64))
(declare-fun temp1333_100 () (_ BitVec 64))
(declare-fun temp1333_101 () (_ BitVec 64))
(declare-fun temp1333_102 () (_ BitVec 64))
(declare-fun temp1333_103 () (_ BitVec 64))
(declare-fun temp1333_104 () (_ BitVec 64))
(declare-fun temp1333_105 () (_ BitVec 64))
(declare-fun temp1333_106 () (_ BitVec 64))
(declare-fun temp1333_107 () (_ BitVec 64))
(declare-fun temp1333_108 () (_ BitVec 64))
(declare-fun temp1333_109 () (_ BitVec 64))
(declare-fun temp1333_110 () (_ BitVec 64))
(declare-fun temp1333_111 () (_ BitVec 64))
(declare-fun temp1333_112 () (_ BitVec 64))
(declare-fun temp1333_113 () (_ BitVec 64))
(declare-fun temp1333_114 () (_ BitVec 64))
(declare-fun temp1333_115 () (_ BitVec 64))
(declare-fun temp1333_116 () (_ BitVec 64))
(declare-fun temp1333_117 () (_ BitVec 64))
(declare-fun temp1333_118 () (_ BitVec 64))
(declare-fun temp1333_119 () (_ BitVec 64))
(declare-fun temp1333_120 () (_ BitVec 64))
(declare-fun temp1333_121 () (_ BitVec 64))
(declare-fun temp1333_122 () (_ BitVec 64))
(declare-fun temp1333_123 () (_ BitVec 64))
(declare-fun temp1333_124 () (_ BitVec 64))
(declare-fun temp1333_125 () (_ BitVec 64))
(declare-fun temp1333_126 () (_ BitVec 64))
(declare-fun temp1333_127 () (_ BitVec 64))
(declare-fun temp1333_128 () (_ BitVec 64))
(declare-fun temp1333_129 () (_ BitVec 64))
(declare-fun temp1333_130 () (_ BitVec 64))
(declare-fun temp1333_131 () (_ BitVec 64))
(declare-fun temp1333_132 () (_ BitVec 64))
(declare-fun temp1333_133 () (_ BitVec 64))
(declare-fun temp1333_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp1333_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp1333_136 () (_ BitVec 64))
(declare-fun temp1333_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp1333_138 () (_ BitVec 64))
(declare-fun temp1333_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1333_140 () (_ BitVec 64))
(declare-fun temp1333_141 () (_ BitVec 64))
(declare-fun temp1333_142 () (_ BitVec 64))
(declare-fun temp1333_143 () (_ BitVec 64))
(declare-fun temp1333_144 () (_ BitVec 64))
(declare-fun temp1333_145 () (_ BitVec 64))
(declare-fun temp1333_146 () (_ BitVec 64))
(declare-fun temp1333_147 () (_ BitVec 64))
(declare-fun temp1333_148 () (_ BitVec 64))
(declare-fun temp1333_149 () (_ BitVec 64))
(declare-fun temp1333_150 () (_ BitVec 64))
(declare-fun temp1333_151 () (_ BitVec 64))
(declare-fun temp1333_152 () (_ BitVec 64))
(declare-fun temp1333_153 () (_ BitVec 64))
(declare-fun temp1333_154 () (_ BitVec 64))
(declare-fun temp1333_155 () (_ BitVec 64))
(declare-fun temp1333_157 () (_ BitVec 64))
(declare-fun temp1333_158 () (_ BitVec 64))
(declare-fun temp1333_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp1333_159 () (_ BitVec 64))
(declare-fun temp1333_160 () (_ BitVec 64))
(declare-fun temp1333_162 () (_ BitVec 64))
(declare-fun temp1333_163 () (_ BitVec 64))
(declare-fun temp1333_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp1333_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp1333_165 () (_ BitVec 64))
(declare-fun temp1333_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp1333_167 () (_ BitVec 64))
(declare-fun temp1333_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp1333_169 () (_ BitVec 64))
(declare-fun temp1333_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1333_171 () (_ BitVec 64))
(declare-fun temp1333_172 () (_ BitVec 64))
(declare-fun temp1333_173 () (_ BitVec 64))
(declare-fun temp1333_174 () (_ BitVec 64))
(declare-fun temp1333_175 () (_ BitVec 64))
(declare-fun temp1333_176 () (_ BitVec 64))
(declare-fun temp1333_177 () (_ BitVec 64))
(declare-fun temp1333_178 () (_ BitVec 64))
(declare-fun temp1333_179 () (_ BitVec 64))
(declare-fun temp1333_180 () (_ BitVec 64))
(declare-fun temp1333_181 () (_ BitVec 64))
(declare-fun temp1333_182 () (_ BitVec 64))
(declare-fun temp1333_183 () (_ BitVec 64))
(declare-fun temp1333_184 () (_ BitVec 64))
(declare-fun temp1333_185 () (_ BitVec 64))
(declare-fun temp1333_186 () (_ BitVec 64))
(declare-fun temp1333_187 () (_ BitVec 64))
(declare-fun temp1333_188 () (_ BitVec 64))
(declare-fun temp1333_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp1333_190 () (_ BitVec 64))
(declare-fun temp1333_192 () (_ BitVec 64))
(declare-fun temp1333_193 () (_ BitVec 64))
(declare-fun temp1333_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp1333_194 () (_ BitVec 64))
(declare-fun temp1333_195 () (_ BitVec 64))
(declare-fun temp1333_197 () (_ BitVec 64))
(declare-fun temp1333_198 () (_ BitVec 64))
(declare-fun temp1333_196 () (_ BitVec 64))
(declare-fun temp1333_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp1333_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp1333_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp1333_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp1333_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp1333_204 () (_ BitVec 64))
(declare-fun temp1333_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp1333_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp1333_207 () (_ BitVec 64))
(declare-fun temp1333_208 () (_ BitVec 64))
(declare-fun temp1333_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp1333_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp1333_211 () (_ BitVec 64))
(declare-fun temp1333_212 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp1333_213 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp1333_214 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp1333_216 () (_ BitVec 64))
(declare-fun temp1333_215 () (_ BitVec 64))
(declare-fun temp1333_217 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp1333_218 () (_ BitVec 64))
(declare-fun temp1333_219 () (_ BitVec 64))
(declare-fun temp1333_220 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp1333_221 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp1333_222 () (_ BitVec 64))
(declare-fun temp1333_223 () (_ BitVec 64))
(assert (= temp1333_1 #x0000000000000001))
(assert (= var77203 temp1333_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp1333_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp1333_2)))
(assert (= temp1333_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1333_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1333_4 #x0000000000000000))
(assert (= var210941 temp1333_4))
(assert (= temp1333_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp1333_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1333_6 #x0000000000000000))
(assert (= var210986 temp1333_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp1333_7 #x0000000000000000))
(assert (= temp1333_8 temp1333_7))
(assert (= temp1333_9 (select ARGNAME_padding_NAMEEND_VAL temp1333_8)))
(assert (= temp1333_10 #x0000000000000001))
(assert (= temp1333_11 temp1333_10))
(assert (= temp1333_12 (select ARGNAME_padding_NAMEEND_VAL temp1333_11)))
(assert (= temp1333_13 #x0000000000000002))
(assert (= temp1333_14 temp1333_13))
(assert (= temp1333_15 (select ARGNAME_padding_NAMEEND_VAL temp1333_14)))
(assert (= temp1333_16 #x0000000000000003))
(assert (= temp1333_17 temp1333_16))
(assert (= temp1333_18 (select ARGNAME_padding_NAMEEND_VAL temp1333_17)))
(assert (= temp1333_19 #x0000000000000004))
(assert (= temp1333_20 temp1333_19))
(assert (= temp1333_21 (select ARGNAME_padding_NAMEEND_VAL temp1333_20)))
(assert (= temp1333_22 #x0000000000000005))
(assert (= temp1333_23 temp1333_22))
(assert (= temp1333_24 (select ARGNAME_padding_NAMEEND_VAL temp1333_23)))
(assert (= temp1333_25 #x0000000000000000))
(assert (= temp1333_26 #x0000000000000000))
(assert (= temp1333_27 temp1333_26))
(assert (= temp1333_28 (select ARGNAME_padding_NAMEEND_VAL temp1333_27)))
(assert (= temp1333_29 #x0000000000000000))
(assert (= temp1333_30 #x0000000000000001))
(assert (= temp1333_31 temp1333_30))
(assert (= temp1333_32 (select ARGNAME_padding_NAMEEND_VAL temp1333_31)))
(assert (= temp1333_33 #x0000000000000000))
(assert (= temp1333_34 #x0000000000000002))
(assert (= temp1333_35 temp1333_34))
(assert (= temp1333_36 (select ARGNAME_padding_NAMEEND_VAL temp1333_35)))
(assert (= temp1333_37 #x0000000000000000))
(assert (= temp1333_38 #x0000000000000003))
(assert (= temp1333_39 temp1333_38))
(assert (= temp1333_40 (select ARGNAME_padding_NAMEEND_VAL temp1333_39)))
(assert (= temp1333_41 #x0000000000000000))
(assert (= temp1333_42 #x0000000000000004))
(assert (= temp1333_43 temp1333_42))
(assert (= temp1333_44 (select ARGNAME_padding_NAMEEND_VAL temp1333_43)))
(assert (= temp1333_45 #x0000000000000000))
(assert (= temp1333_46 #x0000000000000005))
(assert (= temp1333_47 temp1333_46))
(assert (= temp1333_48 (select ARGNAME_padding_NAMEEND_VAL temp1333_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp1333_28 temp1333_25)
             (bvslt temp1333_32 temp1333_29)
             (bvslt temp1333_36 temp1333_33)
             (bvslt temp1333_40 temp1333_37)
             (bvslt temp1333_44 temp1333_41)
             (bvslt temp1333_48 temp1333_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1333_49 #x0000000000000000))
(assert (= var1191714 temp1333_49))
(assert (= temp1333_50 #x0000000000000000))
(assert (= temp1333_51 temp1333_50))
(assert (= temp1333_52 (select ARGNAME_output_padding_NAMEEND_VAL temp1333_51)))
(assert (= temp1333_53 #x0000000000000001))
(assert (= temp1333_54 temp1333_53))
(assert (= temp1333_55 (select ARGNAME_output_padding_NAMEEND_VAL temp1333_54)))
(assert (= temp1333_56 #x0000000000000002))
(assert (= temp1333_57 temp1333_56))
(assert (= temp1333_58 (select ARGNAME_output_padding_NAMEEND_VAL temp1333_57)))
(assert (= temp1333_59 #x0000000000000003))
(assert (= temp1333_60 temp1333_59))
(assert (= temp1333_61 (select ARGNAME_output_padding_NAMEEND_VAL temp1333_60)))
(assert (= temp1333_62 #x0000000000000004))
(assert (= temp1333_63 temp1333_62))
(assert (= temp1333_64 (select ARGNAME_output_padding_NAMEEND_VAL temp1333_63)))
(assert (= temp1333_65 #x0000000000000005))
(assert (= temp1333_66 temp1333_65))
(assert (= temp1333_67 (select ARGNAME_output_padding_NAMEEND_VAL temp1333_66)))
(assert (= temp1333_68 #x0000000000000000))
(assert (= temp1333_69 #x0000000000000000))
(assert (= temp1333_70 temp1333_69))
(assert (= temp1333_71 (select ARGNAME_output_padding_NAMEEND_VAL temp1333_70)))
(assert (= temp1333_72 #x0000000000000000))
(assert (= temp1333_73 #x0000000000000001))
(assert (= temp1333_74 temp1333_73))
(assert (= temp1333_75 (select ARGNAME_output_padding_NAMEEND_VAL temp1333_74)))
(assert (= temp1333_76 #x0000000000000000))
(assert (= temp1333_77 #x0000000000000002))
(assert (= temp1333_78 temp1333_77))
(assert (= temp1333_79 (select ARGNAME_output_padding_NAMEEND_VAL temp1333_78)))
(assert (= temp1333_80 #x0000000000000000))
(assert (= temp1333_81 #x0000000000000003))
(assert (= temp1333_82 temp1333_81))
(assert (= temp1333_83 (select ARGNAME_output_padding_NAMEEND_VAL temp1333_82)))
(assert (= temp1333_84 #x0000000000000000))
(assert (= temp1333_85 #x0000000000000004))
(assert (= temp1333_86 temp1333_85))
(assert (= temp1333_87 (select ARGNAME_output_padding_NAMEEND_VAL temp1333_86)))
(assert (= temp1333_88 #x0000000000000000))
(assert (= temp1333_89 #x0000000000000005))
(assert (= temp1333_90 temp1333_89))
(assert (= temp1333_91 (select ARGNAME_output_padding_NAMEEND_VAL temp1333_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp1333_71 temp1333_68)
             (bvslt temp1333_75 temp1333_72)
             (bvslt temp1333_79 temp1333_76)
             (bvslt temp1333_83 temp1333_80)
             (bvslt temp1333_87 temp1333_84)
             (bvslt temp1333_91 temp1333_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1333_92 #x0000000000000000))
(assert (= var1191725 temp1333_92))
(assert (= temp1333_93 #x0000000000000000))
(assert (= temp1333_94 temp1333_93))
(assert (= temp1333_95 (select ARGNAME_stride_NAMEEND_VAL temp1333_94)))
(assert (= temp1333_96 #x0000000000000001))
(assert (= temp1333_97 temp1333_96))
(assert (= temp1333_98 (select ARGNAME_stride_NAMEEND_VAL temp1333_97)))
(assert (= temp1333_99 #x0000000000000002))
(assert (= temp1333_100 temp1333_99))
(assert (= temp1333_101 (select ARGNAME_stride_NAMEEND_VAL temp1333_100)))
(assert (= temp1333_102 #x0000000000000003))
(assert (= temp1333_103 temp1333_102))
(assert (= temp1333_104 (select ARGNAME_stride_NAMEEND_VAL temp1333_103)))
(assert (= temp1333_105 #x0000000000000004))
(assert (= temp1333_106 temp1333_105))
(assert (= temp1333_107 (select ARGNAME_stride_NAMEEND_VAL temp1333_106)))
(assert (= temp1333_108 #x0000000000000005))
(assert (= temp1333_109 temp1333_108))
(assert (= temp1333_110 (select ARGNAME_stride_NAMEEND_VAL temp1333_109)))
(assert (= temp1333_111 #x0000000000000000))
(assert (= temp1333_112 #x0000000000000000))
(assert (= temp1333_113 temp1333_112))
(assert (= temp1333_114 (select ARGNAME_stride_NAMEEND_VAL temp1333_113)))
(assert (= temp1333_115 #x0000000000000000))
(assert (= temp1333_116 #x0000000000000001))
(assert (= temp1333_117 temp1333_116))
(assert (= temp1333_118 (select ARGNAME_stride_NAMEEND_VAL temp1333_117)))
(assert (= temp1333_119 #x0000000000000000))
(assert (= temp1333_120 #x0000000000000002))
(assert (= temp1333_121 temp1333_120))
(assert (= temp1333_122 (select ARGNAME_stride_NAMEEND_VAL temp1333_121)))
(assert (= temp1333_123 #x0000000000000000))
(assert (= temp1333_124 #x0000000000000003))
(assert (= temp1333_125 temp1333_124))
(assert (= temp1333_126 (select ARGNAME_stride_NAMEEND_VAL temp1333_125)))
(assert (= temp1333_127 #x0000000000000000))
(assert (= temp1333_128 #x0000000000000004))
(assert (= temp1333_129 temp1333_128))
(assert (= temp1333_130 (select ARGNAME_stride_NAMEEND_VAL temp1333_129)))
(assert (= temp1333_131 #x0000000000000000))
(assert (= temp1333_132 #x0000000000000005))
(assert (= temp1333_133 temp1333_132))
(assert (= temp1333_134 (select ARGNAME_stride_NAMEEND_VAL temp1333_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp1333_114 temp1333_111)
             (bvsle temp1333_118 temp1333_115)
             (bvsle temp1333_122 temp1333_119)
             (bvsle temp1333_126 temp1333_123)
             (bvsle temp1333_130 temp1333_127)
             (bvsle temp1333_134 temp1333_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1333_135 #x0000000000000000))
(assert (= var1191735 temp1333_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1333_136 #x0000000000000001))
(assert (= var1191747 temp1333_136))
(assert (= temp1333_137 #x0000000000000000))
(assert (= var1179826 temp1333_137))
(assert (= temp1333_138 #x0000000000000000))
(assert (= temp1333_139 temp1333_138))
(assert (= temp1333_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1333_139)))
(assert (= temp1333_141 #x0000000000000001))
(assert (= temp1333_142 temp1333_141))
(assert (= temp1333_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1333_142)))
(assert (= temp1333_144 #x0000000000000002))
(assert (= temp1333_145 temp1333_144))
(assert (= temp1333_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1333_145)))
(assert (= temp1333_147 #x0000000000000003))
(assert (= temp1333_148 temp1333_147))
(assert (= temp1333_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1333_148)))
(assert (= temp1333_150 #x0000000000000004))
(assert (= temp1333_151 temp1333_150))
(assert (= temp1333_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1333_151)))
(assert (= temp1333_153 #x0000000000000005))
(assert (= temp1333_154 temp1333_153))
(assert (= temp1333_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1333_154)))
(assert (= temp1333_157 var1179826))
(assert (= temp1333_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1333_157)))
(assert (= temp1333_156 temp1333_158))
(assert (= var1191780
   (ite (bvslt temp1333_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1333_159 #x0000000000000000))
(assert (= var1191780 temp1333_159))
(assert (= temp1333_160 #x0000000000000000))
(assert (= var1179826 temp1333_160))
(assert (= temp1333_162 var1179826))
(assert (= temp1333_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1333_162)))
(assert (= temp1333_161 temp1333_163))
(assert (= var1191802 (bvsmod temp1333_161 ARGNAME_groups_NAMEEND)))
(assert (= temp1333_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp1333_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp1333_165 #x0000000000000001))
(assert (= var1191803 temp1333_165))
(assert (= temp1333_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp1333_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1333_167 #x0000000000000001))
(assert (= var1191823 temp1333_167))
(assert (= temp1333_168 #x0000000000000001))
(assert (= var1180714 temp1333_168))
(assert (= temp1333_169 #x0000000000000000))
(assert (= temp1333_170 temp1333_169))
(assert (= temp1333_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp1333_170)))
(assert (= temp1333_172 #x0000000000000001))
(assert (= temp1333_173 temp1333_172))
(assert (= temp1333_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp1333_173)))
(assert (= temp1333_175 #x0000000000000002))
(assert (= temp1333_176 temp1333_175))
(assert (= temp1333_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp1333_176)))
(assert (= temp1333_178 #x0000000000000003))
(assert (= temp1333_179 temp1333_178))
(assert (= temp1333_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp1333_179)))
(assert (= temp1333_181 #x0000000000000004))
(assert (= temp1333_182 temp1333_181))
(assert (= temp1333_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp1333_182)))
(assert (= temp1333_184 #x0000000000000005))
(assert (= temp1333_185 temp1333_184))
(assert (= temp1333_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp1333_185)))
(assert (= temp1333_187 #x0000000000000000))
(assert (= temp1333_188
   (ite (bvslt var1180714 temp1333_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp1333_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp1333_188)))
(assert (= var1191831 temp1333_189))
(assert (bvslt (ite (bvslt var1180714 temp1333_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1333_190 #x0000000000000001))
(assert (= var1180714 temp1333_190))
(assert (= temp1333_192 var1180714))
(assert (= temp1333_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1333_192)))
(assert (= temp1333_191 temp1333_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp1333_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp1333_194 #x0000000000000001))
(assert (= var1191836 temp1333_194))
(assert (= temp1333_195 #x0000000000000000))
(assert (= var1179826 temp1333_195))
(assert (= temp1333_197 var1179826))
(assert (= temp1333_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1333_197)))
(assert (= temp1333_196 temp1333_198))
(assert (= temp1333_199 #x0000000000000002))
(assert (= var1586025 temp1333_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp1333_200 #x0000000000000001))
(assert (= var1191993 temp1333_200))
(assert (= temp1333_201 #x0000000000000001))
(assert (= var2700303 temp1333_201))
(assert (= temp1333_202 #x0000000000000001))
(assert (= var2962447 temp1333_202))
(assert (= temp1333_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1333_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1333_204 #x0000000000000001))
(assert (= var211058 temp1333_204))
(assert (= temp1333_205 #x0000000000000001))
(assert (= var211188 temp1333_205))
(assert (= var3879401 var211188))
(assert (= temp1333_206 #x0000000000000000))
(assert (= var3866802 temp1333_206))
(assert (= temp1333_207 #x0000000000000000))
(assert (= temp1333_208
   (ite (bvslt var3866802 temp1333_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp1333_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp1333_208)))
(assert (= var3879420 temp1333_209))
(assert (bvslt (ite (bvslt var3866802 temp1333_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1333_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp1333_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp1333_211 #x0000000000000001))
(assert (= var3879421 temp1333_211))
(assert (= temp1333_212 #x0000000000000000))
(assert (= var4133117 temp1333_212))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp1333_213 #x0000000000000002))
(assert (= var4339331 temp1333_213))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1333_214 #x0000000000000000))
(assert (= var4404892 temp1333_214))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp1333_216 #xffffffffffffffff))
(assert (= temp1333_215 temp1333_216))
(assert (= temp1333_217 #x0000000000000001))
(assert (= var197674 temp1333_217))
(assert (= temp1333_218 #x0000000000000000))
(assert (= temp1333_219
   (ite (bvslt var197674 temp1333_218)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp1333_220 (select ARGNAME_input_NAMEEND_DIMSIZE temp1333_219)))
(assert (= var211595 temp1333_220))
(assert (bvslt (ite (bvslt var197674 temp1333_218)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1333_221 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp1333_221) #x0000000000000001 #x0000000000000000)))
(assert (= temp1333_222 #x0000000000000000))
(assert (= var211596 temp1333_222))
(assert (= temp1333_223 #x0000000000000001))
(assert (= var211058 temp1333_223))
(model-add temp1333_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp1333_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1333_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp1333_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





