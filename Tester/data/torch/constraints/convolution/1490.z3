(declare-fun temp10781_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10781_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10781_3 () (_ BitVec 64))
(declare-fun temp10781_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10781_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10781_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10781_7 () (_ BitVec 64))
(declare-fun temp10781_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10781_9 () (_ BitVec 64))
(declare-fun temp10781_10 () (_ BitVec 64))
(declare-fun temp10781_11 () (_ BitVec 64))
(declare-fun temp10781_12 () (_ BitVec 64))
(declare-fun temp10781_13 () (_ BitVec 64))
(declare-fun temp10781_14 () (_ BitVec 64))
(declare-fun temp10781_15 () (_ BitVec 64))
(declare-fun temp10781_16 () (_ BitVec 64))
(declare-fun temp10781_17 () (_ BitVec 64))
(declare-fun temp10781_18 () (_ BitVec 64))
(declare-fun temp10781_19 () (_ BitVec 64))
(declare-fun temp10781_20 () (_ BitVec 64))
(declare-fun temp10781_21 () (_ BitVec 64))
(declare-fun temp10781_22 () (_ BitVec 64))
(declare-fun temp10781_23 () (_ BitVec 64))
(declare-fun temp10781_24 () (_ BitVec 64))
(declare-fun temp10781_25 () (_ BitVec 64))
(declare-fun temp10781_26 () (_ BitVec 64))
(declare-fun temp10781_27 () (_ BitVec 64))
(declare-fun temp10781_28 () (_ BitVec 64))
(declare-fun temp10781_29 () (_ BitVec 64))
(declare-fun temp10781_30 () (_ BitVec 64))
(declare-fun temp10781_31 () (_ BitVec 64))
(declare-fun temp10781_32 () (_ BitVec 64))
(declare-fun temp10781_33 () (_ BitVec 64))
(declare-fun temp10781_34 () (_ BitVec 64))
(declare-fun temp10781_35 () (_ BitVec 64))
(declare-fun temp10781_36 () (_ BitVec 64))
(declare-fun temp10781_37 () (_ BitVec 64))
(declare-fun temp10781_38 () (_ BitVec 64))
(declare-fun temp10781_39 () (_ BitVec 64))
(declare-fun temp10781_40 () (_ BitVec 64))
(declare-fun temp10781_41 () (_ BitVec 64))
(declare-fun temp10781_42 () (_ BitVec 64))
(declare-fun temp10781_43 () (_ BitVec 64))
(declare-fun temp10781_44 () (_ BitVec 64))
(declare-fun temp10781_45 () (_ BitVec 64))
(declare-fun temp10781_46 () (_ BitVec 64))
(declare-fun temp10781_47 () (_ BitVec 64))
(declare-fun temp10781_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10781_49 () (_ BitVec 64))
(declare-fun temp10781_50 () (_ BitVec 64))
(declare-fun temp10781_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10781_52 () (_ BitVec 64))
(declare-fun temp10781_53 () (_ BitVec 64))
(declare-fun temp10781_54 () (_ BitVec 64))
(declare-fun temp10781_55 () (_ BitVec 64))
(declare-fun temp10781_56 () (_ BitVec 64))
(declare-fun temp10781_57 () (_ BitVec 64))
(declare-fun temp10781_58 () (_ BitVec 64))
(declare-fun temp10781_59 () (_ BitVec 64))
(declare-fun temp10781_60 () (_ BitVec 64))
(declare-fun temp10781_61 () (_ BitVec 64))
(declare-fun temp10781_62 () (_ BitVec 64))
(declare-fun temp10781_63 () (_ BitVec 64))
(declare-fun temp10781_64 () (_ BitVec 64))
(declare-fun temp10781_65 () (_ BitVec 64))
(declare-fun temp10781_66 () (_ BitVec 64))
(declare-fun temp10781_67 () (_ BitVec 64))
(declare-fun temp10781_68 () (_ BitVec 64))
(declare-fun temp10781_69 () (_ BitVec 64))
(declare-fun temp10781_70 () (_ BitVec 64))
(declare-fun temp10781_71 () (_ BitVec 64))
(declare-fun temp10781_72 () (_ BitVec 64))
(declare-fun temp10781_73 () (_ BitVec 64))
(declare-fun temp10781_74 () (_ BitVec 64))
(declare-fun temp10781_75 () (_ BitVec 64))
(declare-fun temp10781_76 () (_ BitVec 64))
(declare-fun temp10781_77 () (_ BitVec 64))
(declare-fun temp10781_78 () (_ BitVec 64))
(declare-fun temp10781_79 () (_ BitVec 64))
(declare-fun temp10781_80 () (_ BitVec 64))
(declare-fun temp10781_81 () (_ BitVec 64))
(declare-fun temp10781_82 () (_ BitVec 64))
(declare-fun temp10781_83 () (_ BitVec 64))
(declare-fun temp10781_84 () (_ BitVec 64))
(declare-fun temp10781_85 () (_ BitVec 64))
(declare-fun temp10781_86 () (_ BitVec 64))
(declare-fun temp10781_87 () (_ BitVec 64))
(declare-fun temp10781_88 () (_ BitVec 64))
(declare-fun temp10781_89 () (_ BitVec 64))
(declare-fun temp10781_90 () (_ BitVec 64))
(declare-fun temp10781_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10781_92 () (_ BitVec 64))
(declare-fun temp10781_93 () (_ BitVec 64))
(declare-fun temp10781_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10781_95 () (_ BitVec 64))
(declare-fun temp10781_96 () (_ BitVec 64))
(declare-fun temp10781_97 () (_ BitVec 64))
(declare-fun temp10781_98 () (_ BitVec 64))
(declare-fun temp10781_99 () (_ BitVec 64))
(declare-fun temp10781_100 () (_ BitVec 64))
(declare-fun temp10781_101 () (_ BitVec 64))
(declare-fun temp10781_102 () (_ BitVec 64))
(declare-fun temp10781_103 () (_ BitVec 64))
(declare-fun temp10781_104 () (_ BitVec 64))
(declare-fun temp10781_105 () (_ BitVec 64))
(declare-fun temp10781_106 () (_ BitVec 64))
(declare-fun temp10781_107 () (_ BitVec 64))
(declare-fun temp10781_108 () (_ BitVec 64))
(declare-fun temp10781_109 () (_ BitVec 64))
(declare-fun temp10781_110 () (_ BitVec 64))
(declare-fun temp10781_111 () (_ BitVec 64))
(declare-fun temp10781_112 () (_ BitVec 64))
(declare-fun temp10781_113 () (_ BitVec 64))
(declare-fun temp10781_114 () (_ BitVec 64))
(declare-fun temp10781_115 () (_ BitVec 64))
(declare-fun temp10781_116 () (_ BitVec 64))
(declare-fun temp10781_117 () (_ BitVec 64))
(declare-fun temp10781_118 () (_ BitVec 64))
(declare-fun temp10781_119 () (_ BitVec 64))
(declare-fun temp10781_120 () (_ BitVec 64))
(declare-fun temp10781_121 () (_ BitVec 64))
(declare-fun temp10781_122 () (_ BitVec 64))
(declare-fun temp10781_123 () (_ BitVec 64))
(declare-fun temp10781_124 () (_ BitVec 64))
(declare-fun temp10781_125 () (_ BitVec 64))
(declare-fun temp10781_126 () (_ BitVec 64))
(declare-fun temp10781_127 () (_ BitVec 64))
(declare-fun temp10781_128 () (_ BitVec 64))
(declare-fun temp10781_129 () (_ BitVec 64))
(declare-fun temp10781_130 () (_ BitVec 64))
(declare-fun temp10781_131 () (_ BitVec 64))
(declare-fun temp10781_132 () (_ BitVec 64))
(declare-fun temp10781_133 () (_ BitVec 64))
(declare-fun temp10781_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10781_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10781_136 () (_ BitVec 64))
(declare-fun temp10781_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10781_138 () (_ BitVec 64))
(declare-fun temp10781_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10781_140 () (_ BitVec 64))
(declare-fun temp10781_141 () (_ BitVec 64))
(declare-fun temp10781_142 () (_ BitVec 64))
(declare-fun temp10781_143 () (_ BitVec 64))
(declare-fun temp10781_144 () (_ BitVec 64))
(declare-fun temp10781_145 () (_ BitVec 64))
(declare-fun temp10781_146 () (_ BitVec 64))
(declare-fun temp10781_147 () (_ BitVec 64))
(declare-fun temp10781_148 () (_ BitVec 64))
(declare-fun temp10781_149 () (_ BitVec 64))
(declare-fun temp10781_150 () (_ BitVec 64))
(declare-fun temp10781_151 () (_ BitVec 64))
(declare-fun temp10781_152 () (_ BitVec 64))
(declare-fun temp10781_153 () (_ BitVec 64))
(declare-fun temp10781_154 () (_ BitVec 64))
(declare-fun temp10781_155 () (_ BitVec 64))
(declare-fun temp10781_157 () (_ BitVec 64))
(declare-fun temp10781_158 () (_ BitVec 64))
(declare-fun temp10781_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10781_159 () (_ BitVec 64))
(declare-fun temp10781_160 () (_ BitVec 64))
(declare-fun temp10781_162 () (_ BitVec 64))
(declare-fun temp10781_163 () (_ BitVec 64))
(declare-fun temp10781_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10781_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10781_165 () (_ BitVec 64))
(declare-fun temp10781_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10781_167 () (_ BitVec 64))
(declare-fun temp10781_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10781_169 () (_ BitVec 64))
(declare-fun temp10781_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10781_171 () (_ BitVec 64))
(declare-fun temp10781_172 () (_ BitVec 64))
(declare-fun temp10781_173 () (_ BitVec 64))
(declare-fun temp10781_174 () (_ BitVec 64))
(declare-fun temp10781_175 () (_ BitVec 64))
(declare-fun temp10781_176 () (_ BitVec 64))
(declare-fun temp10781_177 () (_ BitVec 64))
(declare-fun temp10781_178 () (_ BitVec 64))
(declare-fun temp10781_179 () (_ BitVec 64))
(declare-fun temp10781_180 () (_ BitVec 64))
(declare-fun temp10781_181 () (_ BitVec 64))
(declare-fun temp10781_182 () (_ BitVec 64))
(declare-fun temp10781_183 () (_ BitVec 64))
(declare-fun temp10781_184 () (_ BitVec 64))
(declare-fun temp10781_185 () (_ BitVec 64))
(declare-fun temp10781_186 () (_ BitVec 64))
(declare-fun temp10781_187 () (_ BitVec 64))
(declare-fun temp10781_188 () (_ BitVec 64))
(declare-fun temp10781_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10781_190 () (_ BitVec 64))
(declare-fun temp10781_192 () (_ BitVec 64))
(declare-fun temp10781_193 () (_ BitVec 64))
(declare-fun temp10781_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10781_194 () (_ BitVec 64))
(declare-fun temp10781_195 () (_ BitVec 64))
(declare-fun temp10781_197 () (_ BitVec 64))
(declare-fun temp10781_198 () (_ BitVec 64))
(declare-fun temp10781_196 () (_ BitVec 64))
(declare-fun temp10781_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10781_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10781_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10781_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10781_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10781_204 () (_ BitVec 64))
(declare-fun temp10781_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10781_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10781_207 () (_ BitVec 64))
(declare-fun temp10781_208 () (_ BitVec 64))
(declare-fun temp10781_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10781_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10781_211 () (_ BitVec 64))
(declare-fun temp10781_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10781_213 () (_ BitVec 64))
(declare-fun temp10781_214 () (_ BitVec 64))
(declare-fun temp10781_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10781_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10781_217 () (_ BitVec 64))
(declare-fun temp10781_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10781_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10781_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var5190032 () (_ BitVec 64))
(declare-fun var5452176 () (_ BitVec 64))
(declare-fun temp10781_221 () (_ BitVec 64))
(declare-fun var5779856 () (_ BitVec 64))
(declare-fun temp10781_222 () (_ BitVec 64))
(assert (= temp10781_1 #x0000000000000001))
(assert (= var77203 temp10781_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10781_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10781_2)))
(assert (= temp10781_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10781_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10781_4 #x0000000000000000))
(assert (= var210941 temp10781_4))
(assert (= temp10781_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10781_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10781_6 #x0000000000000000))
(assert (= var210986 temp10781_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10781_7 #x0000000000000000))
(assert (= temp10781_8 temp10781_7))
(assert (= temp10781_9 (select ARGNAME_padding_NAMEEND_VAL temp10781_8)))
(assert (= temp10781_10 #x0000000000000001))
(assert (= temp10781_11 temp10781_10))
(assert (= temp10781_12 (select ARGNAME_padding_NAMEEND_VAL temp10781_11)))
(assert (= temp10781_13 #x0000000000000002))
(assert (= temp10781_14 temp10781_13))
(assert (= temp10781_15 (select ARGNAME_padding_NAMEEND_VAL temp10781_14)))
(assert (= temp10781_16 #x0000000000000003))
(assert (= temp10781_17 temp10781_16))
(assert (= temp10781_18 (select ARGNAME_padding_NAMEEND_VAL temp10781_17)))
(assert (= temp10781_19 #x0000000000000004))
(assert (= temp10781_20 temp10781_19))
(assert (= temp10781_21 (select ARGNAME_padding_NAMEEND_VAL temp10781_20)))
(assert (= temp10781_22 #x0000000000000005))
(assert (= temp10781_23 temp10781_22))
(assert (= temp10781_24 (select ARGNAME_padding_NAMEEND_VAL temp10781_23)))
(assert (= temp10781_25 #x0000000000000000))
(assert (= temp10781_26 #x0000000000000000))
(assert (= temp10781_27 temp10781_26))
(assert (= temp10781_28 (select ARGNAME_padding_NAMEEND_VAL temp10781_27)))
(assert (= temp10781_29 #x0000000000000000))
(assert (= temp10781_30 #x0000000000000001))
(assert (= temp10781_31 temp10781_30))
(assert (= temp10781_32 (select ARGNAME_padding_NAMEEND_VAL temp10781_31)))
(assert (= temp10781_33 #x0000000000000000))
(assert (= temp10781_34 #x0000000000000002))
(assert (= temp10781_35 temp10781_34))
(assert (= temp10781_36 (select ARGNAME_padding_NAMEEND_VAL temp10781_35)))
(assert (= temp10781_37 #x0000000000000000))
(assert (= temp10781_38 #x0000000000000003))
(assert (= temp10781_39 temp10781_38))
(assert (= temp10781_40 (select ARGNAME_padding_NAMEEND_VAL temp10781_39)))
(assert (= temp10781_41 #x0000000000000000))
(assert (= temp10781_42 #x0000000000000004))
(assert (= temp10781_43 temp10781_42))
(assert (= temp10781_44 (select ARGNAME_padding_NAMEEND_VAL temp10781_43)))
(assert (= temp10781_45 #x0000000000000000))
(assert (= temp10781_46 #x0000000000000005))
(assert (= temp10781_47 temp10781_46))
(assert (= temp10781_48 (select ARGNAME_padding_NAMEEND_VAL temp10781_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10781_28 temp10781_25)
             (bvslt temp10781_32 temp10781_29)
             (bvslt temp10781_36 temp10781_33)
             (bvslt temp10781_40 temp10781_37)
             (bvslt temp10781_44 temp10781_41)
             (bvslt temp10781_48 temp10781_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10781_49 #x0000000000000000))
(assert (= var1191714 temp10781_49))
(assert (= temp10781_50 #x0000000000000000))
(assert (= temp10781_51 temp10781_50))
(assert (= temp10781_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10781_51)))
(assert (= temp10781_53 #x0000000000000001))
(assert (= temp10781_54 temp10781_53))
(assert (= temp10781_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10781_54)))
(assert (= temp10781_56 #x0000000000000002))
(assert (= temp10781_57 temp10781_56))
(assert (= temp10781_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10781_57)))
(assert (= temp10781_59 #x0000000000000003))
(assert (= temp10781_60 temp10781_59))
(assert (= temp10781_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10781_60)))
(assert (= temp10781_62 #x0000000000000004))
(assert (= temp10781_63 temp10781_62))
(assert (= temp10781_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10781_63)))
(assert (= temp10781_65 #x0000000000000005))
(assert (= temp10781_66 temp10781_65))
(assert (= temp10781_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10781_66)))
(assert (= temp10781_68 #x0000000000000000))
(assert (= temp10781_69 #x0000000000000000))
(assert (= temp10781_70 temp10781_69))
(assert (= temp10781_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10781_70)))
(assert (= temp10781_72 #x0000000000000000))
(assert (= temp10781_73 #x0000000000000001))
(assert (= temp10781_74 temp10781_73))
(assert (= temp10781_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10781_74)))
(assert (= temp10781_76 #x0000000000000000))
(assert (= temp10781_77 #x0000000000000002))
(assert (= temp10781_78 temp10781_77))
(assert (= temp10781_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10781_78)))
(assert (= temp10781_80 #x0000000000000000))
(assert (= temp10781_81 #x0000000000000003))
(assert (= temp10781_82 temp10781_81))
(assert (= temp10781_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10781_82)))
(assert (= temp10781_84 #x0000000000000000))
(assert (= temp10781_85 #x0000000000000004))
(assert (= temp10781_86 temp10781_85))
(assert (= temp10781_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10781_86)))
(assert (= temp10781_88 #x0000000000000000))
(assert (= temp10781_89 #x0000000000000005))
(assert (= temp10781_90 temp10781_89))
(assert (= temp10781_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10781_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10781_71 temp10781_68)
             (bvslt temp10781_75 temp10781_72)
             (bvslt temp10781_79 temp10781_76)
             (bvslt temp10781_83 temp10781_80)
             (bvslt temp10781_87 temp10781_84)
             (bvslt temp10781_91 temp10781_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10781_92 #x0000000000000000))
(assert (= var1191725 temp10781_92))
(assert (= temp10781_93 #x0000000000000000))
(assert (= temp10781_94 temp10781_93))
(assert (= temp10781_95 (select ARGNAME_stride_NAMEEND_VAL temp10781_94)))
(assert (= temp10781_96 #x0000000000000001))
(assert (= temp10781_97 temp10781_96))
(assert (= temp10781_98 (select ARGNAME_stride_NAMEEND_VAL temp10781_97)))
(assert (= temp10781_99 #x0000000000000002))
(assert (= temp10781_100 temp10781_99))
(assert (= temp10781_101 (select ARGNAME_stride_NAMEEND_VAL temp10781_100)))
(assert (= temp10781_102 #x0000000000000003))
(assert (= temp10781_103 temp10781_102))
(assert (= temp10781_104 (select ARGNAME_stride_NAMEEND_VAL temp10781_103)))
(assert (= temp10781_105 #x0000000000000004))
(assert (= temp10781_106 temp10781_105))
(assert (= temp10781_107 (select ARGNAME_stride_NAMEEND_VAL temp10781_106)))
(assert (= temp10781_108 #x0000000000000005))
(assert (= temp10781_109 temp10781_108))
(assert (= temp10781_110 (select ARGNAME_stride_NAMEEND_VAL temp10781_109)))
(assert (= temp10781_111 #x0000000000000000))
(assert (= temp10781_112 #x0000000000000000))
(assert (= temp10781_113 temp10781_112))
(assert (= temp10781_114 (select ARGNAME_stride_NAMEEND_VAL temp10781_113)))
(assert (= temp10781_115 #x0000000000000000))
(assert (= temp10781_116 #x0000000000000001))
(assert (= temp10781_117 temp10781_116))
(assert (= temp10781_118 (select ARGNAME_stride_NAMEEND_VAL temp10781_117)))
(assert (= temp10781_119 #x0000000000000000))
(assert (= temp10781_120 #x0000000000000002))
(assert (= temp10781_121 temp10781_120))
(assert (= temp10781_122 (select ARGNAME_stride_NAMEEND_VAL temp10781_121)))
(assert (= temp10781_123 #x0000000000000000))
(assert (= temp10781_124 #x0000000000000003))
(assert (= temp10781_125 temp10781_124))
(assert (= temp10781_126 (select ARGNAME_stride_NAMEEND_VAL temp10781_125)))
(assert (= temp10781_127 #x0000000000000000))
(assert (= temp10781_128 #x0000000000000004))
(assert (= temp10781_129 temp10781_128))
(assert (= temp10781_130 (select ARGNAME_stride_NAMEEND_VAL temp10781_129)))
(assert (= temp10781_131 #x0000000000000000))
(assert (= temp10781_132 #x0000000000000005))
(assert (= temp10781_133 temp10781_132))
(assert (= temp10781_134 (select ARGNAME_stride_NAMEEND_VAL temp10781_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10781_114 temp10781_111)
             (bvsle temp10781_118 temp10781_115)
             (bvsle temp10781_122 temp10781_119)
             (bvsle temp10781_126 temp10781_123)
             (bvsle temp10781_130 temp10781_127)
             (bvsle temp10781_134 temp10781_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10781_135 #x0000000000000000))
(assert (= var1191735 temp10781_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10781_136 #x0000000000000001))
(assert (= var1191747 temp10781_136))
(assert (= temp10781_137 #x0000000000000000))
(assert (= var1179826 temp10781_137))
(assert (= temp10781_138 #x0000000000000000))
(assert (= temp10781_139 temp10781_138))
(assert (= temp10781_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10781_139)))
(assert (= temp10781_141 #x0000000000000001))
(assert (= temp10781_142 temp10781_141))
(assert (= temp10781_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10781_142)))
(assert (= temp10781_144 #x0000000000000002))
(assert (= temp10781_145 temp10781_144))
(assert (= temp10781_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10781_145)))
(assert (= temp10781_147 #x0000000000000003))
(assert (= temp10781_148 temp10781_147))
(assert (= temp10781_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10781_148)))
(assert (= temp10781_150 #x0000000000000004))
(assert (= temp10781_151 temp10781_150))
(assert (= temp10781_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10781_151)))
(assert (= temp10781_153 #x0000000000000005))
(assert (= temp10781_154 temp10781_153))
(assert (= temp10781_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10781_154)))
(assert (= temp10781_157 var1179826))
(assert (= temp10781_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10781_157)))
(assert (= temp10781_156 temp10781_158))
(assert (= var1191780
   (ite (bvslt temp10781_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10781_159 #x0000000000000000))
(assert (= var1191780 temp10781_159))
(assert (= temp10781_160 #x0000000000000000))
(assert (= var1179826 temp10781_160))
(assert (= temp10781_162 var1179826))
(assert (= temp10781_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10781_162)))
(assert (= temp10781_161 temp10781_163))
(assert (= var1191802 (bvsmod temp10781_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10781_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10781_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10781_165 #x0000000000000001))
(assert (= var1191803 temp10781_165))
(assert (= temp10781_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10781_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10781_167 #x0000000000000001))
(assert (= var1191823 temp10781_167))
(assert (= temp10781_168 #x0000000000000001))
(assert (= var1180714 temp10781_168))
(assert (= temp10781_169 #x0000000000000000))
(assert (= temp10781_170 temp10781_169))
(assert (= temp10781_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10781_170)))
(assert (= temp10781_172 #x0000000000000001))
(assert (= temp10781_173 temp10781_172))
(assert (= temp10781_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10781_173)))
(assert (= temp10781_175 #x0000000000000002))
(assert (= temp10781_176 temp10781_175))
(assert (= temp10781_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10781_176)))
(assert (= temp10781_178 #x0000000000000003))
(assert (= temp10781_179 temp10781_178))
(assert (= temp10781_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10781_179)))
(assert (= temp10781_181 #x0000000000000004))
(assert (= temp10781_182 temp10781_181))
(assert (= temp10781_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10781_182)))
(assert (= temp10781_184 #x0000000000000005))
(assert (= temp10781_185 temp10781_184))
(assert (= temp10781_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10781_185)))
(assert (= temp10781_187 #x0000000000000000))
(assert (= temp10781_188
   (ite (bvslt var1180714 temp10781_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10781_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10781_188)))
(assert (= var1191831 temp10781_189))
(assert (bvslt (ite (bvslt var1180714 temp10781_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10781_190 #x0000000000000001))
(assert (= var1180714 temp10781_190))
(assert (= temp10781_192 var1180714))
(assert (= temp10781_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10781_192)))
(assert (= temp10781_191 temp10781_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10781_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10781_194 #x0000000000000001))
(assert (= var1191836 temp10781_194))
(assert (= temp10781_195 #x0000000000000000))
(assert (= var1179826 temp10781_195))
(assert (= temp10781_197 var1179826))
(assert (= temp10781_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10781_197)))
(assert (= temp10781_196 temp10781_198))
(assert (= temp10781_199 #x0000000000000002))
(assert (= var1586025 temp10781_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10781_200 #x0000000000000001))
(assert (= var1191993 temp10781_200))
(assert (= temp10781_201 #x0000000000000001))
(assert (= var2700303 temp10781_201))
(assert (= temp10781_202 #x0000000000000001))
(assert (= var2962447 temp10781_202))
(assert (= temp10781_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10781_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10781_204 #x0000000000000001))
(assert (= var211058 temp10781_204))
(assert (= temp10781_205 #x0000000000000001))
(assert (= var211188 temp10781_205))
(assert (= var3879401 var211188))
(assert (= temp10781_206 #x0000000000000000))
(assert (= var3866802 temp10781_206))
(assert (= temp10781_207 #x0000000000000000))
(assert (= temp10781_208
   (ite (bvslt var3866802 temp10781_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10781_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10781_208)))
(assert (= var3879420 temp10781_209))
(assert (bvslt (ite (bvslt var3866802 temp10781_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10781_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10781_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10781_211 #x0000000000000000))
(assert (= var3879421 temp10781_211))
(assert (= temp10781_212 #x0000000000000001))
(assert (= var3867690 temp10781_212))
(assert (= temp10781_213 #x0000000000000000))
(assert (= temp10781_214
   (ite (bvslt var3867690 temp10781_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10781_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10781_214)))
(assert (= var3879423 temp10781_215))
(assert (bvslt (ite (bvslt var3867690 temp10781_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10781_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10781_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10781_217 #x0000000000000001))
(assert (= var3879424 temp10781_217))
(assert (= temp10781_218 #x0000000000000000))
(assert (= var4133117 temp10781_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10781_219 #x0000000000000002))
(assert (= var4339331 temp10781_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10781_220 #x0000000000000000))
(assert (= var4404892 temp10781_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var5190032 var211201))
(assert (= var5452176 var211201))
(assert (= temp10781_221 #x0000000000000000))
(assert (= var5779856 temp10781_221))
(assert (= temp10781_222 #x0000000000000001))
(assert (= var211058 temp10781_222))
(model-add temp10781_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10781_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10781_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10781_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))



