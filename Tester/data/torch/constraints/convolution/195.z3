(declare-fun temp260_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp260_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp260_3 () (_ BitVec 64))
(declare-fun temp260_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp260_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp260_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp260_7 () (_ BitVec 64))
(declare-fun temp260_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp260_9 () (_ BitVec 64))
(declare-fun temp260_10 () (_ BitVec 64))
(declare-fun temp260_11 () (_ BitVec 64))
(declare-fun temp260_12 () (_ BitVec 64))
(declare-fun temp260_13 () (_ BitVec 64))
(declare-fun temp260_14 () (_ BitVec 64))
(declare-fun temp260_15 () (_ BitVec 64))
(declare-fun temp260_16 () (_ BitVec 64))
(declare-fun temp260_17 () (_ BitVec 64))
(declare-fun temp260_18 () (_ BitVec 64))
(declare-fun temp260_19 () (_ BitVec 64))
(declare-fun temp260_20 () (_ BitVec 64))
(declare-fun temp260_21 () (_ BitVec 64))
(declare-fun temp260_22 () (_ BitVec 64))
(declare-fun temp260_23 () (_ BitVec 64))
(declare-fun temp260_24 () (_ BitVec 64))
(declare-fun temp260_25 () (_ BitVec 64))
(declare-fun temp260_26 () (_ BitVec 64))
(declare-fun temp260_27 () (_ BitVec 64))
(declare-fun temp260_28 () (_ BitVec 64))
(declare-fun temp260_29 () (_ BitVec 64))
(declare-fun temp260_30 () (_ BitVec 64))
(declare-fun temp260_31 () (_ BitVec 64))
(declare-fun temp260_32 () (_ BitVec 64))
(declare-fun temp260_33 () (_ BitVec 64))
(declare-fun temp260_34 () (_ BitVec 64))
(declare-fun temp260_35 () (_ BitVec 64))
(declare-fun temp260_36 () (_ BitVec 64))
(declare-fun temp260_37 () (_ BitVec 64))
(declare-fun temp260_38 () (_ BitVec 64))
(declare-fun temp260_39 () (_ BitVec 64))
(declare-fun temp260_40 () (_ BitVec 64))
(declare-fun temp260_41 () (_ BitVec 64))
(declare-fun temp260_42 () (_ BitVec 64))
(declare-fun temp260_43 () (_ BitVec 64))
(declare-fun temp260_44 () (_ BitVec 64))
(declare-fun temp260_45 () (_ BitVec 64))
(declare-fun temp260_46 () (_ BitVec 64))
(declare-fun temp260_47 () (_ BitVec 64))
(declare-fun temp260_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp260_49 () (_ BitVec 64))
(declare-fun temp260_50 () (_ BitVec 64))
(declare-fun temp260_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp260_52 () (_ BitVec 64))
(declare-fun temp260_53 () (_ BitVec 64))
(declare-fun temp260_54 () (_ BitVec 64))
(declare-fun temp260_55 () (_ BitVec 64))
(declare-fun temp260_56 () (_ BitVec 64))
(declare-fun temp260_57 () (_ BitVec 64))
(declare-fun temp260_58 () (_ BitVec 64))
(declare-fun temp260_59 () (_ BitVec 64))
(declare-fun temp260_60 () (_ BitVec 64))
(declare-fun temp260_61 () (_ BitVec 64))
(declare-fun temp260_62 () (_ BitVec 64))
(declare-fun temp260_63 () (_ BitVec 64))
(declare-fun temp260_64 () (_ BitVec 64))
(declare-fun temp260_65 () (_ BitVec 64))
(declare-fun temp260_66 () (_ BitVec 64))
(declare-fun temp260_67 () (_ BitVec 64))
(declare-fun temp260_68 () (_ BitVec 64))
(declare-fun temp260_69 () (_ BitVec 64))
(declare-fun temp260_70 () (_ BitVec 64))
(declare-fun temp260_71 () (_ BitVec 64))
(declare-fun temp260_72 () (_ BitVec 64))
(declare-fun temp260_73 () (_ BitVec 64))
(declare-fun temp260_74 () (_ BitVec 64))
(declare-fun temp260_75 () (_ BitVec 64))
(declare-fun temp260_76 () (_ BitVec 64))
(declare-fun temp260_77 () (_ BitVec 64))
(declare-fun temp260_78 () (_ BitVec 64))
(declare-fun temp260_79 () (_ BitVec 64))
(declare-fun temp260_80 () (_ BitVec 64))
(declare-fun temp260_81 () (_ BitVec 64))
(declare-fun temp260_82 () (_ BitVec 64))
(declare-fun temp260_83 () (_ BitVec 64))
(declare-fun temp260_84 () (_ BitVec 64))
(declare-fun temp260_85 () (_ BitVec 64))
(declare-fun temp260_86 () (_ BitVec 64))
(declare-fun temp260_87 () (_ BitVec 64))
(declare-fun temp260_88 () (_ BitVec 64))
(declare-fun temp260_89 () (_ BitVec 64))
(declare-fun temp260_90 () (_ BitVec 64))
(declare-fun temp260_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp260_92 () (_ BitVec 64))
(declare-fun temp260_93 () (_ BitVec 64))
(declare-fun temp260_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp260_95 () (_ BitVec 64))
(declare-fun temp260_96 () (_ BitVec 64))
(declare-fun temp260_97 () (_ BitVec 64))
(declare-fun temp260_98 () (_ BitVec 64))
(declare-fun temp260_99 () (_ BitVec 64))
(declare-fun temp260_100 () (_ BitVec 64))
(declare-fun temp260_101 () (_ BitVec 64))
(declare-fun temp260_102 () (_ BitVec 64))
(declare-fun temp260_103 () (_ BitVec 64))
(declare-fun temp260_104 () (_ BitVec 64))
(declare-fun temp260_105 () (_ BitVec 64))
(declare-fun temp260_106 () (_ BitVec 64))
(declare-fun temp260_107 () (_ BitVec 64))
(declare-fun temp260_108 () (_ BitVec 64))
(declare-fun temp260_109 () (_ BitVec 64))
(declare-fun temp260_110 () (_ BitVec 64))
(declare-fun temp260_111 () (_ BitVec 64))
(declare-fun temp260_112 () (_ BitVec 64))
(declare-fun temp260_113 () (_ BitVec 64))
(declare-fun temp260_114 () (_ BitVec 64))
(declare-fun temp260_115 () (_ BitVec 64))
(declare-fun temp260_116 () (_ BitVec 64))
(declare-fun temp260_117 () (_ BitVec 64))
(declare-fun temp260_118 () (_ BitVec 64))
(declare-fun temp260_119 () (_ BitVec 64))
(declare-fun temp260_120 () (_ BitVec 64))
(declare-fun temp260_121 () (_ BitVec 64))
(declare-fun temp260_122 () (_ BitVec 64))
(declare-fun temp260_123 () (_ BitVec 64))
(declare-fun temp260_124 () (_ BitVec 64))
(declare-fun temp260_125 () (_ BitVec 64))
(declare-fun temp260_126 () (_ BitVec 64))
(declare-fun temp260_127 () (_ BitVec 64))
(declare-fun temp260_128 () (_ BitVec 64))
(declare-fun temp260_129 () (_ BitVec 64))
(declare-fun temp260_130 () (_ BitVec 64))
(declare-fun temp260_131 () (_ BitVec 64))
(declare-fun temp260_132 () (_ BitVec 64))
(declare-fun temp260_133 () (_ BitVec 64))
(declare-fun temp260_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp260_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp260_136 () (_ BitVec 64))
(declare-fun temp260_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp260_138 () (_ BitVec 64))
(declare-fun temp260_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp260_140 () (_ BitVec 64))
(declare-fun temp260_141 () (_ BitVec 64))
(declare-fun temp260_142 () (_ BitVec 64))
(declare-fun temp260_143 () (_ BitVec 64))
(declare-fun temp260_144 () (_ BitVec 64))
(declare-fun temp260_145 () (_ BitVec 64))
(declare-fun temp260_146 () (_ BitVec 64))
(declare-fun temp260_147 () (_ BitVec 64))
(declare-fun temp260_148 () (_ BitVec 64))
(declare-fun temp260_149 () (_ BitVec 64))
(declare-fun temp260_150 () (_ BitVec 64))
(declare-fun temp260_151 () (_ BitVec 64))
(declare-fun temp260_152 () (_ BitVec 64))
(declare-fun temp260_153 () (_ BitVec 64))
(declare-fun temp260_154 () (_ BitVec 64))
(declare-fun temp260_155 () (_ BitVec 64))
(declare-fun temp260_157 () (_ BitVec 64))
(declare-fun temp260_158 () (_ BitVec 64))
(declare-fun temp260_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp260_159 () (_ BitVec 64))
(declare-fun temp260_160 () (_ BitVec 64))
(declare-fun temp260_162 () (_ BitVec 64))
(declare-fun temp260_163 () (_ BitVec 64))
(declare-fun temp260_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp260_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp260_165 () (_ BitVec 64))
(declare-fun temp260_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp260_167 () (_ BitVec 64))
(declare-fun temp260_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp260_169 () (_ BitVec 64))
(declare-fun temp260_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp260_171 () (_ BitVec 64))
(declare-fun temp260_172 () (_ BitVec 64))
(declare-fun temp260_173 () (_ BitVec 64))
(declare-fun temp260_174 () (_ BitVec 64))
(declare-fun temp260_175 () (_ BitVec 64))
(declare-fun temp260_176 () (_ BitVec 64))
(declare-fun temp260_177 () (_ BitVec 64))
(declare-fun temp260_178 () (_ BitVec 64))
(declare-fun temp260_179 () (_ BitVec 64))
(declare-fun temp260_180 () (_ BitVec 64))
(declare-fun temp260_181 () (_ BitVec 64))
(declare-fun temp260_182 () (_ BitVec 64))
(declare-fun temp260_183 () (_ BitVec 64))
(declare-fun temp260_184 () (_ BitVec 64))
(declare-fun temp260_185 () (_ BitVec 64))
(declare-fun temp260_186 () (_ BitVec 64))
(declare-fun temp260_187 () (_ BitVec 64))
(declare-fun temp260_188 () (_ BitVec 64))
(declare-fun temp260_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp260_190 () (_ BitVec 64))
(declare-fun temp260_192 () (_ BitVec 64))
(declare-fun temp260_193 () (_ BitVec 64))
(declare-fun temp260_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp260_194 () (_ BitVec 64))
(declare-fun temp260_195 () (_ BitVec 64))
(declare-fun temp260_197 () (_ BitVec 64))
(declare-fun temp260_198 () (_ BitVec 64))
(declare-fun temp260_196 () (_ BitVec 64))
(declare-fun temp260_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp260_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp260_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp260_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp260_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp260_204 () (_ BitVec 64))
(declare-fun temp260_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp260_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp260_207 () (_ BitVec 64))
(declare-fun temp260_208 () (_ BitVec 64))
(declare-fun temp260_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp260_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp260_211 () (_ BitVec 64))
(declare-fun temp260_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp260_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp260_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp260_215 () (_ BitVec 64))
(declare-fun temp260_216 () (_ BitVec 64))
(declare-fun var6238996 () (_ BitVec 64))
(declare-fun var6238963 () (_ BitVec 64))
(declare-fun var6107527 () (_ BitVec 64))
(declare-fun var6107523 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp260_217 () (_ BitVec 64))
(assert (= temp260_1 #x0000000000000001))
(assert (= var77203 temp260_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp260_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp260_2)))
(assert (= temp260_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp260_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp260_4 #x0000000000000000))
(assert (= var210941 temp260_4))
(assert (= temp260_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp260_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp260_6 #x0000000000000000))
(assert (= var210986 temp260_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp260_7 #x0000000000000000))
(assert (= temp260_8 temp260_7))
(assert (= temp260_9 (select ARGNAME_padding_NAMEEND_VAL temp260_8)))
(assert (= temp260_10 #x0000000000000001))
(assert (= temp260_11 temp260_10))
(assert (= temp260_12 (select ARGNAME_padding_NAMEEND_VAL temp260_11)))
(assert (= temp260_13 #x0000000000000002))
(assert (= temp260_14 temp260_13))
(assert (= temp260_15 (select ARGNAME_padding_NAMEEND_VAL temp260_14)))
(assert (= temp260_16 #x0000000000000003))
(assert (= temp260_17 temp260_16))
(assert (= temp260_18 (select ARGNAME_padding_NAMEEND_VAL temp260_17)))
(assert (= temp260_19 #x0000000000000004))
(assert (= temp260_20 temp260_19))
(assert (= temp260_21 (select ARGNAME_padding_NAMEEND_VAL temp260_20)))
(assert (= temp260_22 #x0000000000000005))
(assert (= temp260_23 temp260_22))
(assert (= temp260_24 (select ARGNAME_padding_NAMEEND_VAL temp260_23)))
(assert (= temp260_25 #x0000000000000000))
(assert (= temp260_26 #x0000000000000000))
(assert (= temp260_27 temp260_26))
(assert (= temp260_28 (select ARGNAME_padding_NAMEEND_VAL temp260_27)))
(assert (= temp260_29 #x0000000000000000))
(assert (= temp260_30 #x0000000000000001))
(assert (= temp260_31 temp260_30))
(assert (= temp260_32 (select ARGNAME_padding_NAMEEND_VAL temp260_31)))
(assert (= temp260_33 #x0000000000000000))
(assert (= temp260_34 #x0000000000000002))
(assert (= temp260_35 temp260_34))
(assert (= temp260_36 (select ARGNAME_padding_NAMEEND_VAL temp260_35)))
(assert (= temp260_37 #x0000000000000000))
(assert (= temp260_38 #x0000000000000003))
(assert (= temp260_39 temp260_38))
(assert (= temp260_40 (select ARGNAME_padding_NAMEEND_VAL temp260_39)))
(assert (= temp260_41 #x0000000000000000))
(assert (= temp260_42 #x0000000000000004))
(assert (= temp260_43 temp260_42))
(assert (= temp260_44 (select ARGNAME_padding_NAMEEND_VAL temp260_43)))
(assert (= temp260_45 #x0000000000000000))
(assert (= temp260_46 #x0000000000000005))
(assert (= temp260_47 temp260_46))
(assert (= temp260_48 (select ARGNAME_padding_NAMEEND_VAL temp260_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp260_28 temp260_25)
             (bvslt temp260_32 temp260_29)
             (bvslt temp260_36 temp260_33)
             (bvslt temp260_40 temp260_37)
             (bvslt temp260_44 temp260_41)
             (bvslt temp260_48 temp260_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp260_49 #x0000000000000000))
(assert (= var1191714 temp260_49))
(assert (= temp260_50 #x0000000000000000))
(assert (= temp260_51 temp260_50))
(assert (= temp260_52 (select ARGNAME_output_padding_NAMEEND_VAL temp260_51)))
(assert (= temp260_53 #x0000000000000001))
(assert (= temp260_54 temp260_53))
(assert (= temp260_55 (select ARGNAME_output_padding_NAMEEND_VAL temp260_54)))
(assert (= temp260_56 #x0000000000000002))
(assert (= temp260_57 temp260_56))
(assert (= temp260_58 (select ARGNAME_output_padding_NAMEEND_VAL temp260_57)))
(assert (= temp260_59 #x0000000000000003))
(assert (= temp260_60 temp260_59))
(assert (= temp260_61 (select ARGNAME_output_padding_NAMEEND_VAL temp260_60)))
(assert (= temp260_62 #x0000000000000004))
(assert (= temp260_63 temp260_62))
(assert (= temp260_64 (select ARGNAME_output_padding_NAMEEND_VAL temp260_63)))
(assert (= temp260_65 #x0000000000000005))
(assert (= temp260_66 temp260_65))
(assert (= temp260_67 (select ARGNAME_output_padding_NAMEEND_VAL temp260_66)))
(assert (= temp260_68 #x0000000000000000))
(assert (= temp260_69 #x0000000000000000))
(assert (= temp260_70 temp260_69))
(assert (= temp260_71 (select ARGNAME_output_padding_NAMEEND_VAL temp260_70)))
(assert (= temp260_72 #x0000000000000000))
(assert (= temp260_73 #x0000000000000001))
(assert (= temp260_74 temp260_73))
(assert (= temp260_75 (select ARGNAME_output_padding_NAMEEND_VAL temp260_74)))
(assert (= temp260_76 #x0000000000000000))
(assert (= temp260_77 #x0000000000000002))
(assert (= temp260_78 temp260_77))
(assert (= temp260_79 (select ARGNAME_output_padding_NAMEEND_VAL temp260_78)))
(assert (= temp260_80 #x0000000000000000))
(assert (= temp260_81 #x0000000000000003))
(assert (= temp260_82 temp260_81))
(assert (= temp260_83 (select ARGNAME_output_padding_NAMEEND_VAL temp260_82)))
(assert (= temp260_84 #x0000000000000000))
(assert (= temp260_85 #x0000000000000004))
(assert (= temp260_86 temp260_85))
(assert (= temp260_87 (select ARGNAME_output_padding_NAMEEND_VAL temp260_86)))
(assert (= temp260_88 #x0000000000000000))
(assert (= temp260_89 #x0000000000000005))
(assert (= temp260_90 temp260_89))
(assert (= temp260_91 (select ARGNAME_output_padding_NAMEEND_VAL temp260_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp260_71 temp260_68)
             (bvslt temp260_75 temp260_72)
             (bvslt temp260_79 temp260_76)
             (bvslt temp260_83 temp260_80)
             (bvslt temp260_87 temp260_84)
             (bvslt temp260_91 temp260_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp260_92 #x0000000000000000))
(assert (= var1191725 temp260_92))
(assert (= temp260_93 #x0000000000000000))
(assert (= temp260_94 temp260_93))
(assert (= temp260_95 (select ARGNAME_stride_NAMEEND_VAL temp260_94)))
(assert (= temp260_96 #x0000000000000001))
(assert (= temp260_97 temp260_96))
(assert (= temp260_98 (select ARGNAME_stride_NAMEEND_VAL temp260_97)))
(assert (= temp260_99 #x0000000000000002))
(assert (= temp260_100 temp260_99))
(assert (= temp260_101 (select ARGNAME_stride_NAMEEND_VAL temp260_100)))
(assert (= temp260_102 #x0000000000000003))
(assert (= temp260_103 temp260_102))
(assert (= temp260_104 (select ARGNAME_stride_NAMEEND_VAL temp260_103)))
(assert (= temp260_105 #x0000000000000004))
(assert (= temp260_106 temp260_105))
(assert (= temp260_107 (select ARGNAME_stride_NAMEEND_VAL temp260_106)))
(assert (= temp260_108 #x0000000000000005))
(assert (= temp260_109 temp260_108))
(assert (= temp260_110 (select ARGNAME_stride_NAMEEND_VAL temp260_109)))
(assert (= temp260_111 #x0000000000000000))
(assert (= temp260_112 #x0000000000000000))
(assert (= temp260_113 temp260_112))
(assert (= temp260_114 (select ARGNAME_stride_NAMEEND_VAL temp260_113)))
(assert (= temp260_115 #x0000000000000000))
(assert (= temp260_116 #x0000000000000001))
(assert (= temp260_117 temp260_116))
(assert (= temp260_118 (select ARGNAME_stride_NAMEEND_VAL temp260_117)))
(assert (= temp260_119 #x0000000000000000))
(assert (= temp260_120 #x0000000000000002))
(assert (= temp260_121 temp260_120))
(assert (= temp260_122 (select ARGNAME_stride_NAMEEND_VAL temp260_121)))
(assert (= temp260_123 #x0000000000000000))
(assert (= temp260_124 #x0000000000000003))
(assert (= temp260_125 temp260_124))
(assert (= temp260_126 (select ARGNAME_stride_NAMEEND_VAL temp260_125)))
(assert (= temp260_127 #x0000000000000000))
(assert (= temp260_128 #x0000000000000004))
(assert (= temp260_129 temp260_128))
(assert (= temp260_130 (select ARGNAME_stride_NAMEEND_VAL temp260_129)))
(assert (= temp260_131 #x0000000000000000))
(assert (= temp260_132 #x0000000000000005))
(assert (= temp260_133 temp260_132))
(assert (= temp260_134 (select ARGNAME_stride_NAMEEND_VAL temp260_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp260_114 temp260_111)
             (bvsle temp260_118 temp260_115)
             (bvsle temp260_122 temp260_119)
             (bvsle temp260_126 temp260_123)
             (bvsle temp260_130 temp260_127)
             (bvsle temp260_134 temp260_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp260_135 #x0000000000000000))
(assert (= var1191735 temp260_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp260_136 #x0000000000000001))
(assert (= var1191747 temp260_136))
(assert (= temp260_137 #x0000000000000000))
(assert (= var1179826 temp260_137))
(assert (= temp260_138 #x0000000000000000))
(assert (= temp260_139 temp260_138))
(assert (= temp260_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp260_139)))
(assert (= temp260_141 #x0000000000000001))
(assert (= temp260_142 temp260_141))
(assert (= temp260_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp260_142)))
(assert (= temp260_144 #x0000000000000002))
(assert (= temp260_145 temp260_144))
(assert (= temp260_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp260_145)))
(assert (= temp260_147 #x0000000000000003))
(assert (= temp260_148 temp260_147))
(assert (= temp260_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp260_148)))
(assert (= temp260_150 #x0000000000000004))
(assert (= temp260_151 temp260_150))
(assert (= temp260_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp260_151)))
(assert (= temp260_153 #x0000000000000005))
(assert (= temp260_154 temp260_153))
(assert (= temp260_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp260_154)))
(assert (= temp260_157 var1179826))
(assert (= temp260_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp260_157)))
(assert (= temp260_156 temp260_158))
(assert (= var1191780
   (ite (bvslt temp260_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp260_159 #x0000000000000000))
(assert (= var1191780 temp260_159))
(assert (= temp260_160 #x0000000000000000))
(assert (= var1179826 temp260_160))
(assert (= temp260_162 var1179826))
(assert (= temp260_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp260_162)))
(assert (= temp260_161 temp260_163))
(assert (= var1191802 (bvsmod temp260_161 ARGNAME_groups_NAMEEND)))
(assert (= temp260_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp260_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp260_165 #x0000000000000001))
(assert (= var1191803 temp260_165))
(assert (= temp260_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp260_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp260_167 #x0000000000000001))
(assert (= var1191823 temp260_167))
(assert (= temp260_168 #x0000000000000001))
(assert (= var1180714 temp260_168))
(assert (= temp260_169 #x0000000000000000))
(assert (= temp260_170 temp260_169))
(assert (= temp260_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp260_170)))
(assert (= temp260_172 #x0000000000000001))
(assert (= temp260_173 temp260_172))
(assert (= temp260_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp260_173)))
(assert (= temp260_175 #x0000000000000002))
(assert (= temp260_176 temp260_175))
(assert (= temp260_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp260_176)))
(assert (= temp260_178 #x0000000000000003))
(assert (= temp260_179 temp260_178))
(assert (= temp260_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp260_179)))
(assert (= temp260_181 #x0000000000000004))
(assert (= temp260_182 temp260_181))
(assert (= temp260_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp260_182)))
(assert (= temp260_184 #x0000000000000005))
(assert (= temp260_185 temp260_184))
(assert (= temp260_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp260_185)))
(assert (= temp260_187 #x0000000000000000))
(assert (= temp260_188
   (ite (bvslt var1180714 temp260_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp260_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp260_188)))
(assert (= var1191831 temp260_189))
(assert (bvslt (ite (bvslt var1180714 temp260_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp260_190 #x0000000000000001))
(assert (= var1180714 temp260_190))
(assert (= temp260_192 var1180714))
(assert (= temp260_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp260_192)))
(assert (= temp260_191 temp260_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp260_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp260_194 #x0000000000000001))
(assert (= var1191836 temp260_194))
(assert (= temp260_195 #x0000000000000000))
(assert (= var1179826 temp260_195))
(assert (= temp260_197 var1179826))
(assert (= temp260_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp260_197)))
(assert (= temp260_196 temp260_198))
(assert (= temp260_199 #x0000000000000002))
(assert (= var1586025 temp260_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp260_200 #x0000000000000001))
(assert (= var1191993 temp260_200))
(assert (= temp260_201 #x0000000000000001))
(assert (= var2700303 temp260_201))
(assert (= temp260_202 #x0000000000000001))
(assert (= var2962447 temp260_202))
(assert (= temp260_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp260_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp260_204 #x0000000000000001))
(assert (= var211058 temp260_204))
(assert (= temp260_205 #x0000000000000001))
(assert (= var211188 temp260_205))
(assert (= var3879401 var211188))
(assert (= temp260_206 #x0000000000000000))
(assert (= var3866802 temp260_206))
(assert (= temp260_207 #x0000000000000000))
(assert (= temp260_208
   (ite (bvslt var3866802 temp260_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp260_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp260_208)))
(assert (= var3879420 temp260_209))
(assert (bvslt (ite (bvslt var3866802 temp260_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp260_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp260_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp260_211 #x0000000000000001))
(assert (= var3879421 temp260_211))
(assert (= temp260_212 #x0000000000000000))
(assert (= var4079423 temp260_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp260_213 #x0000000000000002))
(assert (= var4208259 temp260_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp260_214 #x0000000000000000))
(assert (= var4273820 temp260_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp260_215 #x0000000000000001))
(assert (= var211058 temp260_215))
(assert (= temp260_216 #x0000000000000000))
(assert (= var6238996 temp260_216))
(assert (= var6238963 var6238996))
(assert (= var6107527 var6238963))
(assert (= var6107523 var6107527))
(assert (= var212669 var6107523))
(assert (= temp260_217 #x0000000000000000))
(assert (= var212669 temp260_217))
(model-add temp260_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp260_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp260_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp260_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




