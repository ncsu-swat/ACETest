(declare-fun temp10889_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10889_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10889_3 () (_ BitVec 64))
(declare-fun temp10889_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10889_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10889_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10889_7 () (_ BitVec 64))
(declare-fun temp10889_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10889_9 () (_ BitVec 64))
(declare-fun temp10889_10 () (_ BitVec 64))
(declare-fun temp10889_11 () (_ BitVec 64))
(declare-fun temp10889_12 () (_ BitVec 64))
(declare-fun temp10889_13 () (_ BitVec 64))
(declare-fun temp10889_14 () (_ BitVec 64))
(declare-fun temp10889_15 () (_ BitVec 64))
(declare-fun temp10889_16 () (_ BitVec 64))
(declare-fun temp10889_17 () (_ BitVec 64))
(declare-fun temp10889_18 () (_ BitVec 64))
(declare-fun temp10889_19 () (_ BitVec 64))
(declare-fun temp10889_20 () (_ BitVec 64))
(declare-fun temp10889_21 () (_ BitVec 64))
(declare-fun temp10889_22 () (_ BitVec 64))
(declare-fun temp10889_23 () (_ BitVec 64))
(declare-fun temp10889_24 () (_ BitVec 64))
(declare-fun temp10889_25 () (_ BitVec 64))
(declare-fun temp10889_26 () (_ BitVec 64))
(declare-fun temp10889_27 () (_ BitVec 64))
(declare-fun temp10889_28 () (_ BitVec 64))
(declare-fun temp10889_29 () (_ BitVec 64))
(declare-fun temp10889_30 () (_ BitVec 64))
(declare-fun temp10889_31 () (_ BitVec 64))
(declare-fun temp10889_32 () (_ BitVec 64))
(declare-fun temp10889_33 () (_ BitVec 64))
(declare-fun temp10889_34 () (_ BitVec 64))
(declare-fun temp10889_35 () (_ BitVec 64))
(declare-fun temp10889_36 () (_ BitVec 64))
(declare-fun temp10889_37 () (_ BitVec 64))
(declare-fun temp10889_38 () (_ BitVec 64))
(declare-fun temp10889_39 () (_ BitVec 64))
(declare-fun temp10889_40 () (_ BitVec 64))
(declare-fun temp10889_41 () (_ BitVec 64))
(declare-fun temp10889_42 () (_ BitVec 64))
(declare-fun temp10889_43 () (_ BitVec 64))
(declare-fun temp10889_44 () (_ BitVec 64))
(declare-fun temp10889_45 () (_ BitVec 64))
(declare-fun temp10889_46 () (_ BitVec 64))
(declare-fun temp10889_47 () (_ BitVec 64))
(declare-fun temp10889_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10889_49 () (_ BitVec 64))
(declare-fun temp10889_50 () (_ BitVec 64))
(declare-fun temp10889_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10889_52 () (_ BitVec 64))
(declare-fun temp10889_53 () (_ BitVec 64))
(declare-fun temp10889_54 () (_ BitVec 64))
(declare-fun temp10889_55 () (_ BitVec 64))
(declare-fun temp10889_56 () (_ BitVec 64))
(declare-fun temp10889_57 () (_ BitVec 64))
(declare-fun temp10889_58 () (_ BitVec 64))
(declare-fun temp10889_59 () (_ BitVec 64))
(declare-fun temp10889_60 () (_ BitVec 64))
(declare-fun temp10889_61 () (_ BitVec 64))
(declare-fun temp10889_62 () (_ BitVec 64))
(declare-fun temp10889_63 () (_ BitVec 64))
(declare-fun temp10889_64 () (_ BitVec 64))
(declare-fun temp10889_65 () (_ BitVec 64))
(declare-fun temp10889_66 () (_ BitVec 64))
(declare-fun temp10889_67 () (_ BitVec 64))
(declare-fun temp10889_68 () (_ BitVec 64))
(declare-fun temp10889_69 () (_ BitVec 64))
(declare-fun temp10889_70 () (_ BitVec 64))
(declare-fun temp10889_71 () (_ BitVec 64))
(declare-fun temp10889_72 () (_ BitVec 64))
(declare-fun temp10889_73 () (_ BitVec 64))
(declare-fun temp10889_74 () (_ BitVec 64))
(declare-fun temp10889_75 () (_ BitVec 64))
(declare-fun temp10889_76 () (_ BitVec 64))
(declare-fun temp10889_77 () (_ BitVec 64))
(declare-fun temp10889_78 () (_ BitVec 64))
(declare-fun temp10889_79 () (_ BitVec 64))
(declare-fun temp10889_80 () (_ BitVec 64))
(declare-fun temp10889_81 () (_ BitVec 64))
(declare-fun temp10889_82 () (_ BitVec 64))
(declare-fun temp10889_83 () (_ BitVec 64))
(declare-fun temp10889_84 () (_ BitVec 64))
(declare-fun temp10889_85 () (_ BitVec 64))
(declare-fun temp10889_86 () (_ BitVec 64))
(declare-fun temp10889_87 () (_ BitVec 64))
(declare-fun temp10889_88 () (_ BitVec 64))
(declare-fun temp10889_89 () (_ BitVec 64))
(declare-fun temp10889_90 () (_ BitVec 64))
(declare-fun temp10889_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10889_92 () (_ BitVec 64))
(declare-fun temp10889_93 () (_ BitVec 64))
(declare-fun temp10889_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10889_95 () (_ BitVec 64))
(declare-fun temp10889_96 () (_ BitVec 64))
(declare-fun temp10889_97 () (_ BitVec 64))
(declare-fun temp10889_98 () (_ BitVec 64))
(declare-fun temp10889_99 () (_ BitVec 64))
(declare-fun temp10889_100 () (_ BitVec 64))
(declare-fun temp10889_101 () (_ BitVec 64))
(declare-fun temp10889_102 () (_ BitVec 64))
(declare-fun temp10889_103 () (_ BitVec 64))
(declare-fun temp10889_104 () (_ BitVec 64))
(declare-fun temp10889_105 () (_ BitVec 64))
(declare-fun temp10889_106 () (_ BitVec 64))
(declare-fun temp10889_107 () (_ BitVec 64))
(declare-fun temp10889_108 () (_ BitVec 64))
(declare-fun temp10889_109 () (_ BitVec 64))
(declare-fun temp10889_110 () (_ BitVec 64))
(declare-fun temp10889_111 () (_ BitVec 64))
(declare-fun temp10889_112 () (_ BitVec 64))
(declare-fun temp10889_113 () (_ BitVec 64))
(declare-fun temp10889_114 () (_ BitVec 64))
(declare-fun temp10889_115 () (_ BitVec 64))
(declare-fun temp10889_116 () (_ BitVec 64))
(declare-fun temp10889_117 () (_ BitVec 64))
(declare-fun temp10889_118 () (_ BitVec 64))
(declare-fun temp10889_119 () (_ BitVec 64))
(declare-fun temp10889_120 () (_ BitVec 64))
(declare-fun temp10889_121 () (_ BitVec 64))
(declare-fun temp10889_122 () (_ BitVec 64))
(declare-fun temp10889_123 () (_ BitVec 64))
(declare-fun temp10889_124 () (_ BitVec 64))
(declare-fun temp10889_125 () (_ BitVec 64))
(declare-fun temp10889_126 () (_ BitVec 64))
(declare-fun temp10889_127 () (_ BitVec 64))
(declare-fun temp10889_128 () (_ BitVec 64))
(declare-fun temp10889_129 () (_ BitVec 64))
(declare-fun temp10889_130 () (_ BitVec 64))
(declare-fun temp10889_131 () (_ BitVec 64))
(declare-fun temp10889_132 () (_ BitVec 64))
(declare-fun temp10889_133 () (_ BitVec 64))
(declare-fun temp10889_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10889_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10889_136 () (_ BitVec 64))
(declare-fun temp10889_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10889_138 () (_ BitVec 64))
(declare-fun temp10889_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10889_140 () (_ BitVec 64))
(declare-fun temp10889_141 () (_ BitVec 64))
(declare-fun temp10889_142 () (_ BitVec 64))
(declare-fun temp10889_143 () (_ BitVec 64))
(declare-fun temp10889_144 () (_ BitVec 64))
(declare-fun temp10889_145 () (_ BitVec 64))
(declare-fun temp10889_146 () (_ BitVec 64))
(declare-fun temp10889_147 () (_ BitVec 64))
(declare-fun temp10889_148 () (_ BitVec 64))
(declare-fun temp10889_149 () (_ BitVec 64))
(declare-fun temp10889_150 () (_ BitVec 64))
(declare-fun temp10889_151 () (_ BitVec 64))
(declare-fun temp10889_152 () (_ BitVec 64))
(declare-fun temp10889_153 () (_ BitVec 64))
(declare-fun temp10889_154 () (_ BitVec 64))
(declare-fun temp10889_155 () (_ BitVec 64))
(declare-fun temp10889_157 () (_ BitVec 64))
(declare-fun temp10889_158 () (_ BitVec 64))
(declare-fun temp10889_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10889_159 () (_ BitVec 64))
(declare-fun temp10889_160 () (_ BitVec 64))
(declare-fun temp10889_162 () (_ BitVec 64))
(declare-fun temp10889_163 () (_ BitVec 64))
(declare-fun temp10889_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10889_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10889_165 () (_ BitVec 64))
(declare-fun temp10889_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10889_167 () (_ BitVec 64))
(declare-fun temp10889_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10889_169 () (_ BitVec 64))
(declare-fun temp10889_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10889_171 () (_ BitVec 64))
(declare-fun temp10889_172 () (_ BitVec 64))
(declare-fun temp10889_173 () (_ BitVec 64))
(declare-fun temp10889_174 () (_ BitVec 64))
(declare-fun temp10889_175 () (_ BitVec 64))
(declare-fun temp10889_176 () (_ BitVec 64))
(declare-fun temp10889_177 () (_ BitVec 64))
(declare-fun temp10889_178 () (_ BitVec 64))
(declare-fun temp10889_179 () (_ BitVec 64))
(declare-fun temp10889_180 () (_ BitVec 64))
(declare-fun temp10889_181 () (_ BitVec 64))
(declare-fun temp10889_182 () (_ BitVec 64))
(declare-fun temp10889_183 () (_ BitVec 64))
(declare-fun temp10889_184 () (_ BitVec 64))
(declare-fun temp10889_185 () (_ BitVec 64))
(declare-fun temp10889_186 () (_ BitVec 64))
(declare-fun temp10889_187 () (_ BitVec 64))
(declare-fun temp10889_188 () (_ BitVec 64))
(declare-fun temp10889_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10889_190 () (_ BitVec 64))
(declare-fun temp10889_192 () (_ BitVec 64))
(declare-fun temp10889_193 () (_ BitVec 64))
(declare-fun temp10889_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10889_194 () (_ BitVec 64))
(declare-fun temp10889_195 () (_ BitVec 64))
(declare-fun temp10889_197 () (_ BitVec 64))
(declare-fun temp10889_198 () (_ BitVec 64))
(declare-fun temp10889_196 () (_ BitVec 64))
(declare-fun temp10889_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10889_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10889_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10889_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10889_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10889_204 () (_ BitVec 64))
(declare-fun temp10889_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10889_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10889_207 () (_ BitVec 64))
(declare-fun temp10889_208 () (_ BitVec 64))
(declare-fun temp10889_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10889_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10889_211 () (_ BitVec 64))
(declare-fun temp10889_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10889_213 () (_ BitVec 64))
(declare-fun temp10889_214 () (_ BitVec 64))
(declare-fun temp10889_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10889_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10889_217 () (_ BitVec 64))
(declare-fun temp10889_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10889_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10889_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp10889_221 () (_ BitVec 64))
(assert (= temp10889_1 #x0000000000000001))
(assert (= var77203 temp10889_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10889_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10889_2)))
(assert (= temp10889_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10889_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10889_4 #x0000000000000000))
(assert (= var210941 temp10889_4))
(assert (= temp10889_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10889_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10889_6 #x0000000000000000))
(assert (= var210986 temp10889_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10889_7 #x0000000000000000))
(assert (= temp10889_8 temp10889_7))
(assert (= temp10889_9 (select ARGNAME_padding_NAMEEND_VAL temp10889_8)))
(assert (= temp10889_10 #x0000000000000001))
(assert (= temp10889_11 temp10889_10))
(assert (= temp10889_12 (select ARGNAME_padding_NAMEEND_VAL temp10889_11)))
(assert (= temp10889_13 #x0000000000000002))
(assert (= temp10889_14 temp10889_13))
(assert (= temp10889_15 (select ARGNAME_padding_NAMEEND_VAL temp10889_14)))
(assert (= temp10889_16 #x0000000000000003))
(assert (= temp10889_17 temp10889_16))
(assert (= temp10889_18 (select ARGNAME_padding_NAMEEND_VAL temp10889_17)))
(assert (= temp10889_19 #x0000000000000004))
(assert (= temp10889_20 temp10889_19))
(assert (= temp10889_21 (select ARGNAME_padding_NAMEEND_VAL temp10889_20)))
(assert (= temp10889_22 #x0000000000000005))
(assert (= temp10889_23 temp10889_22))
(assert (= temp10889_24 (select ARGNAME_padding_NAMEEND_VAL temp10889_23)))
(assert (= temp10889_25 #x0000000000000000))
(assert (= temp10889_26 #x0000000000000000))
(assert (= temp10889_27 temp10889_26))
(assert (= temp10889_28 (select ARGNAME_padding_NAMEEND_VAL temp10889_27)))
(assert (= temp10889_29 #x0000000000000000))
(assert (= temp10889_30 #x0000000000000001))
(assert (= temp10889_31 temp10889_30))
(assert (= temp10889_32 (select ARGNAME_padding_NAMEEND_VAL temp10889_31)))
(assert (= temp10889_33 #x0000000000000000))
(assert (= temp10889_34 #x0000000000000002))
(assert (= temp10889_35 temp10889_34))
(assert (= temp10889_36 (select ARGNAME_padding_NAMEEND_VAL temp10889_35)))
(assert (= temp10889_37 #x0000000000000000))
(assert (= temp10889_38 #x0000000000000003))
(assert (= temp10889_39 temp10889_38))
(assert (= temp10889_40 (select ARGNAME_padding_NAMEEND_VAL temp10889_39)))
(assert (= temp10889_41 #x0000000000000000))
(assert (= temp10889_42 #x0000000000000004))
(assert (= temp10889_43 temp10889_42))
(assert (= temp10889_44 (select ARGNAME_padding_NAMEEND_VAL temp10889_43)))
(assert (= temp10889_45 #x0000000000000000))
(assert (= temp10889_46 #x0000000000000005))
(assert (= temp10889_47 temp10889_46))
(assert (= temp10889_48 (select ARGNAME_padding_NAMEEND_VAL temp10889_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10889_28 temp10889_25)
             (bvslt temp10889_32 temp10889_29)
             (bvslt temp10889_36 temp10889_33)
             (bvslt temp10889_40 temp10889_37)
             (bvslt temp10889_44 temp10889_41)
             (bvslt temp10889_48 temp10889_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10889_49 #x0000000000000000))
(assert (= var1191714 temp10889_49))
(assert (= temp10889_50 #x0000000000000000))
(assert (= temp10889_51 temp10889_50))
(assert (= temp10889_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10889_51)))
(assert (= temp10889_53 #x0000000000000001))
(assert (= temp10889_54 temp10889_53))
(assert (= temp10889_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10889_54)))
(assert (= temp10889_56 #x0000000000000002))
(assert (= temp10889_57 temp10889_56))
(assert (= temp10889_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10889_57)))
(assert (= temp10889_59 #x0000000000000003))
(assert (= temp10889_60 temp10889_59))
(assert (= temp10889_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10889_60)))
(assert (= temp10889_62 #x0000000000000004))
(assert (= temp10889_63 temp10889_62))
(assert (= temp10889_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10889_63)))
(assert (= temp10889_65 #x0000000000000005))
(assert (= temp10889_66 temp10889_65))
(assert (= temp10889_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10889_66)))
(assert (= temp10889_68 #x0000000000000000))
(assert (= temp10889_69 #x0000000000000000))
(assert (= temp10889_70 temp10889_69))
(assert (= temp10889_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10889_70)))
(assert (= temp10889_72 #x0000000000000000))
(assert (= temp10889_73 #x0000000000000001))
(assert (= temp10889_74 temp10889_73))
(assert (= temp10889_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10889_74)))
(assert (= temp10889_76 #x0000000000000000))
(assert (= temp10889_77 #x0000000000000002))
(assert (= temp10889_78 temp10889_77))
(assert (= temp10889_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10889_78)))
(assert (= temp10889_80 #x0000000000000000))
(assert (= temp10889_81 #x0000000000000003))
(assert (= temp10889_82 temp10889_81))
(assert (= temp10889_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10889_82)))
(assert (= temp10889_84 #x0000000000000000))
(assert (= temp10889_85 #x0000000000000004))
(assert (= temp10889_86 temp10889_85))
(assert (= temp10889_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10889_86)))
(assert (= temp10889_88 #x0000000000000000))
(assert (= temp10889_89 #x0000000000000005))
(assert (= temp10889_90 temp10889_89))
(assert (= temp10889_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10889_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10889_71 temp10889_68)
             (bvslt temp10889_75 temp10889_72)
             (bvslt temp10889_79 temp10889_76)
             (bvslt temp10889_83 temp10889_80)
             (bvslt temp10889_87 temp10889_84)
             (bvslt temp10889_91 temp10889_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10889_92 #x0000000000000000))
(assert (= var1191725 temp10889_92))
(assert (= temp10889_93 #x0000000000000000))
(assert (= temp10889_94 temp10889_93))
(assert (= temp10889_95 (select ARGNAME_stride_NAMEEND_VAL temp10889_94)))
(assert (= temp10889_96 #x0000000000000001))
(assert (= temp10889_97 temp10889_96))
(assert (= temp10889_98 (select ARGNAME_stride_NAMEEND_VAL temp10889_97)))
(assert (= temp10889_99 #x0000000000000002))
(assert (= temp10889_100 temp10889_99))
(assert (= temp10889_101 (select ARGNAME_stride_NAMEEND_VAL temp10889_100)))
(assert (= temp10889_102 #x0000000000000003))
(assert (= temp10889_103 temp10889_102))
(assert (= temp10889_104 (select ARGNAME_stride_NAMEEND_VAL temp10889_103)))
(assert (= temp10889_105 #x0000000000000004))
(assert (= temp10889_106 temp10889_105))
(assert (= temp10889_107 (select ARGNAME_stride_NAMEEND_VAL temp10889_106)))
(assert (= temp10889_108 #x0000000000000005))
(assert (= temp10889_109 temp10889_108))
(assert (= temp10889_110 (select ARGNAME_stride_NAMEEND_VAL temp10889_109)))
(assert (= temp10889_111 #x0000000000000000))
(assert (= temp10889_112 #x0000000000000000))
(assert (= temp10889_113 temp10889_112))
(assert (= temp10889_114 (select ARGNAME_stride_NAMEEND_VAL temp10889_113)))
(assert (= temp10889_115 #x0000000000000000))
(assert (= temp10889_116 #x0000000000000001))
(assert (= temp10889_117 temp10889_116))
(assert (= temp10889_118 (select ARGNAME_stride_NAMEEND_VAL temp10889_117)))
(assert (= temp10889_119 #x0000000000000000))
(assert (= temp10889_120 #x0000000000000002))
(assert (= temp10889_121 temp10889_120))
(assert (= temp10889_122 (select ARGNAME_stride_NAMEEND_VAL temp10889_121)))
(assert (= temp10889_123 #x0000000000000000))
(assert (= temp10889_124 #x0000000000000003))
(assert (= temp10889_125 temp10889_124))
(assert (= temp10889_126 (select ARGNAME_stride_NAMEEND_VAL temp10889_125)))
(assert (= temp10889_127 #x0000000000000000))
(assert (= temp10889_128 #x0000000000000004))
(assert (= temp10889_129 temp10889_128))
(assert (= temp10889_130 (select ARGNAME_stride_NAMEEND_VAL temp10889_129)))
(assert (= temp10889_131 #x0000000000000000))
(assert (= temp10889_132 #x0000000000000005))
(assert (= temp10889_133 temp10889_132))
(assert (= temp10889_134 (select ARGNAME_stride_NAMEEND_VAL temp10889_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10889_114 temp10889_111)
             (bvsle temp10889_118 temp10889_115)
             (bvsle temp10889_122 temp10889_119)
             (bvsle temp10889_126 temp10889_123)
             (bvsle temp10889_130 temp10889_127)
             (bvsle temp10889_134 temp10889_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10889_135 #x0000000000000000))
(assert (= var1191735 temp10889_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10889_136 #x0000000000000001))
(assert (= var1191747 temp10889_136))
(assert (= temp10889_137 #x0000000000000000))
(assert (= var1179826 temp10889_137))
(assert (= temp10889_138 #x0000000000000000))
(assert (= temp10889_139 temp10889_138))
(assert (= temp10889_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10889_139)))
(assert (= temp10889_141 #x0000000000000001))
(assert (= temp10889_142 temp10889_141))
(assert (= temp10889_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10889_142)))
(assert (= temp10889_144 #x0000000000000002))
(assert (= temp10889_145 temp10889_144))
(assert (= temp10889_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10889_145)))
(assert (= temp10889_147 #x0000000000000003))
(assert (= temp10889_148 temp10889_147))
(assert (= temp10889_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10889_148)))
(assert (= temp10889_150 #x0000000000000004))
(assert (= temp10889_151 temp10889_150))
(assert (= temp10889_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10889_151)))
(assert (= temp10889_153 #x0000000000000005))
(assert (= temp10889_154 temp10889_153))
(assert (= temp10889_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10889_154)))
(assert (= temp10889_157 var1179826))
(assert (= temp10889_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10889_157)))
(assert (= temp10889_156 temp10889_158))
(assert (= var1191780
   (ite (bvslt temp10889_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10889_159 #x0000000000000000))
(assert (= var1191780 temp10889_159))
(assert (= temp10889_160 #x0000000000000000))
(assert (= var1179826 temp10889_160))
(assert (= temp10889_162 var1179826))
(assert (= temp10889_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10889_162)))
(assert (= temp10889_161 temp10889_163))
(assert (= var1191802 (bvsmod temp10889_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10889_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10889_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10889_165 #x0000000000000001))
(assert (= var1191803 temp10889_165))
(assert (= temp10889_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10889_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10889_167 #x0000000000000001))
(assert (= var1191823 temp10889_167))
(assert (= temp10889_168 #x0000000000000001))
(assert (= var1180714 temp10889_168))
(assert (= temp10889_169 #x0000000000000000))
(assert (= temp10889_170 temp10889_169))
(assert (= temp10889_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10889_170)))
(assert (= temp10889_172 #x0000000000000001))
(assert (= temp10889_173 temp10889_172))
(assert (= temp10889_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10889_173)))
(assert (= temp10889_175 #x0000000000000002))
(assert (= temp10889_176 temp10889_175))
(assert (= temp10889_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10889_176)))
(assert (= temp10889_178 #x0000000000000003))
(assert (= temp10889_179 temp10889_178))
(assert (= temp10889_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10889_179)))
(assert (= temp10889_181 #x0000000000000004))
(assert (= temp10889_182 temp10889_181))
(assert (= temp10889_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10889_182)))
(assert (= temp10889_184 #x0000000000000005))
(assert (= temp10889_185 temp10889_184))
(assert (= temp10889_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10889_185)))
(assert (= temp10889_187 #x0000000000000000))
(assert (= temp10889_188
   (ite (bvslt var1180714 temp10889_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10889_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10889_188)))
(assert (= var1191831 temp10889_189))
(assert (bvslt (ite (bvslt var1180714 temp10889_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10889_190 #x0000000000000001))
(assert (= var1180714 temp10889_190))
(assert (= temp10889_192 var1180714))
(assert (= temp10889_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10889_192)))
(assert (= temp10889_191 temp10889_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10889_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10889_194 #x0000000000000001))
(assert (= var1191836 temp10889_194))
(assert (= temp10889_195 #x0000000000000000))
(assert (= var1179826 temp10889_195))
(assert (= temp10889_197 var1179826))
(assert (= temp10889_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10889_197)))
(assert (= temp10889_196 temp10889_198))
(assert (= temp10889_199 #x0000000000000002))
(assert (= var1586025 temp10889_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10889_200 #x0000000000000001))
(assert (= var1191993 temp10889_200))
(assert (= temp10889_201 #x0000000000000001))
(assert (= var2700303 temp10889_201))
(assert (= temp10889_202 #x0000000000000001))
(assert (= var2962447 temp10889_202))
(assert (= temp10889_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10889_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10889_204 #x0000000000000001))
(assert (= var211058 temp10889_204))
(assert (= temp10889_205 #x0000000000000001))
(assert (= var211188 temp10889_205))
(assert (= var3879401 var211188))
(assert (= temp10889_206 #x0000000000000000))
(assert (= var3866802 temp10889_206))
(assert (= temp10889_207 #x0000000000000000))
(assert (= temp10889_208
   (ite (bvslt var3866802 temp10889_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10889_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10889_208)))
(assert (= var3879420 temp10889_209))
(assert (bvslt (ite (bvslt var3866802 temp10889_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10889_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10889_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10889_211 #x0000000000000000))
(assert (= var3879421 temp10889_211))
(assert (= temp10889_212 #x0000000000000001))
(assert (= var3867690 temp10889_212))
(assert (= temp10889_213 #x0000000000000000))
(assert (= temp10889_214
   (ite (bvslt var3867690 temp10889_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10889_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10889_214)))
(assert (= var3879423 temp10889_215))
(assert (bvslt (ite (bvslt var3867690 temp10889_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10889_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10889_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10889_217 #x0000000000000001))
(assert (= var3879424 temp10889_217))
(assert (= temp10889_218 #x0000000000000000))
(assert (= var4133117 temp10889_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10889_219 #x0000000000000002))
(assert (= var4339331 temp10889_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10889_220 #x0000000000000000))
(assert (= var4404892 temp10889_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp10889_221 #x0000000000000001))
(assert (= var211058 temp10889_221))
(model-add temp10889_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10889_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10889_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10889_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




