(declare-fun temp10921_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10921_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10921_3 () (_ BitVec 64))
(declare-fun temp10921_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10921_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10921_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10921_7 () (_ BitVec 64))
(declare-fun temp10921_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10921_9 () (_ BitVec 64))
(declare-fun temp10921_10 () (_ BitVec 64))
(declare-fun temp10921_11 () (_ BitVec 64))
(declare-fun temp10921_12 () (_ BitVec 64))
(declare-fun temp10921_13 () (_ BitVec 64))
(declare-fun temp10921_14 () (_ BitVec 64))
(declare-fun temp10921_15 () (_ BitVec 64))
(declare-fun temp10921_16 () (_ BitVec 64))
(declare-fun temp10921_17 () (_ BitVec 64))
(declare-fun temp10921_18 () (_ BitVec 64))
(declare-fun temp10921_19 () (_ BitVec 64))
(declare-fun temp10921_20 () (_ BitVec 64))
(declare-fun temp10921_21 () (_ BitVec 64))
(declare-fun temp10921_22 () (_ BitVec 64))
(declare-fun temp10921_23 () (_ BitVec 64))
(declare-fun temp10921_24 () (_ BitVec 64))
(declare-fun temp10921_25 () (_ BitVec 64))
(declare-fun temp10921_26 () (_ BitVec 64))
(declare-fun temp10921_27 () (_ BitVec 64))
(declare-fun temp10921_28 () (_ BitVec 64))
(declare-fun temp10921_29 () (_ BitVec 64))
(declare-fun temp10921_30 () (_ BitVec 64))
(declare-fun temp10921_31 () (_ BitVec 64))
(declare-fun temp10921_32 () (_ BitVec 64))
(declare-fun temp10921_33 () (_ BitVec 64))
(declare-fun temp10921_34 () (_ BitVec 64))
(declare-fun temp10921_35 () (_ BitVec 64))
(declare-fun temp10921_36 () (_ BitVec 64))
(declare-fun temp10921_37 () (_ BitVec 64))
(declare-fun temp10921_38 () (_ BitVec 64))
(declare-fun temp10921_39 () (_ BitVec 64))
(declare-fun temp10921_40 () (_ BitVec 64))
(declare-fun temp10921_41 () (_ BitVec 64))
(declare-fun temp10921_42 () (_ BitVec 64))
(declare-fun temp10921_43 () (_ BitVec 64))
(declare-fun temp10921_44 () (_ BitVec 64))
(declare-fun temp10921_45 () (_ BitVec 64))
(declare-fun temp10921_46 () (_ BitVec 64))
(declare-fun temp10921_47 () (_ BitVec 64))
(declare-fun temp10921_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10921_49 () (_ BitVec 64))
(declare-fun temp10921_50 () (_ BitVec 64))
(declare-fun temp10921_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10921_52 () (_ BitVec 64))
(declare-fun temp10921_53 () (_ BitVec 64))
(declare-fun temp10921_54 () (_ BitVec 64))
(declare-fun temp10921_55 () (_ BitVec 64))
(declare-fun temp10921_56 () (_ BitVec 64))
(declare-fun temp10921_57 () (_ BitVec 64))
(declare-fun temp10921_58 () (_ BitVec 64))
(declare-fun temp10921_59 () (_ BitVec 64))
(declare-fun temp10921_60 () (_ BitVec 64))
(declare-fun temp10921_61 () (_ BitVec 64))
(declare-fun temp10921_62 () (_ BitVec 64))
(declare-fun temp10921_63 () (_ BitVec 64))
(declare-fun temp10921_64 () (_ BitVec 64))
(declare-fun temp10921_65 () (_ BitVec 64))
(declare-fun temp10921_66 () (_ BitVec 64))
(declare-fun temp10921_67 () (_ BitVec 64))
(declare-fun temp10921_68 () (_ BitVec 64))
(declare-fun temp10921_69 () (_ BitVec 64))
(declare-fun temp10921_70 () (_ BitVec 64))
(declare-fun temp10921_71 () (_ BitVec 64))
(declare-fun temp10921_72 () (_ BitVec 64))
(declare-fun temp10921_73 () (_ BitVec 64))
(declare-fun temp10921_74 () (_ BitVec 64))
(declare-fun temp10921_75 () (_ BitVec 64))
(declare-fun temp10921_76 () (_ BitVec 64))
(declare-fun temp10921_77 () (_ BitVec 64))
(declare-fun temp10921_78 () (_ BitVec 64))
(declare-fun temp10921_79 () (_ BitVec 64))
(declare-fun temp10921_80 () (_ BitVec 64))
(declare-fun temp10921_81 () (_ BitVec 64))
(declare-fun temp10921_82 () (_ BitVec 64))
(declare-fun temp10921_83 () (_ BitVec 64))
(declare-fun temp10921_84 () (_ BitVec 64))
(declare-fun temp10921_85 () (_ BitVec 64))
(declare-fun temp10921_86 () (_ BitVec 64))
(declare-fun temp10921_87 () (_ BitVec 64))
(declare-fun temp10921_88 () (_ BitVec 64))
(declare-fun temp10921_89 () (_ BitVec 64))
(declare-fun temp10921_90 () (_ BitVec 64))
(declare-fun temp10921_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10921_92 () (_ BitVec 64))
(declare-fun temp10921_93 () (_ BitVec 64))
(declare-fun temp10921_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10921_95 () (_ BitVec 64))
(declare-fun temp10921_96 () (_ BitVec 64))
(declare-fun temp10921_97 () (_ BitVec 64))
(declare-fun temp10921_98 () (_ BitVec 64))
(declare-fun temp10921_99 () (_ BitVec 64))
(declare-fun temp10921_100 () (_ BitVec 64))
(declare-fun temp10921_101 () (_ BitVec 64))
(declare-fun temp10921_102 () (_ BitVec 64))
(declare-fun temp10921_103 () (_ BitVec 64))
(declare-fun temp10921_104 () (_ BitVec 64))
(declare-fun temp10921_105 () (_ BitVec 64))
(declare-fun temp10921_106 () (_ BitVec 64))
(declare-fun temp10921_107 () (_ BitVec 64))
(declare-fun temp10921_108 () (_ BitVec 64))
(declare-fun temp10921_109 () (_ BitVec 64))
(declare-fun temp10921_110 () (_ BitVec 64))
(declare-fun temp10921_111 () (_ BitVec 64))
(declare-fun temp10921_112 () (_ BitVec 64))
(declare-fun temp10921_113 () (_ BitVec 64))
(declare-fun temp10921_114 () (_ BitVec 64))
(declare-fun temp10921_115 () (_ BitVec 64))
(declare-fun temp10921_116 () (_ BitVec 64))
(declare-fun temp10921_117 () (_ BitVec 64))
(declare-fun temp10921_118 () (_ BitVec 64))
(declare-fun temp10921_119 () (_ BitVec 64))
(declare-fun temp10921_120 () (_ BitVec 64))
(declare-fun temp10921_121 () (_ BitVec 64))
(declare-fun temp10921_122 () (_ BitVec 64))
(declare-fun temp10921_123 () (_ BitVec 64))
(declare-fun temp10921_124 () (_ BitVec 64))
(declare-fun temp10921_125 () (_ BitVec 64))
(declare-fun temp10921_126 () (_ BitVec 64))
(declare-fun temp10921_127 () (_ BitVec 64))
(declare-fun temp10921_128 () (_ BitVec 64))
(declare-fun temp10921_129 () (_ BitVec 64))
(declare-fun temp10921_130 () (_ BitVec 64))
(declare-fun temp10921_131 () (_ BitVec 64))
(declare-fun temp10921_132 () (_ BitVec 64))
(declare-fun temp10921_133 () (_ BitVec 64))
(declare-fun temp10921_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10921_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10921_136 () (_ BitVec 64))
(declare-fun temp10921_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10921_138 () (_ BitVec 64))
(declare-fun temp10921_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10921_140 () (_ BitVec 64))
(declare-fun temp10921_141 () (_ BitVec 64))
(declare-fun temp10921_142 () (_ BitVec 64))
(declare-fun temp10921_143 () (_ BitVec 64))
(declare-fun temp10921_144 () (_ BitVec 64))
(declare-fun temp10921_145 () (_ BitVec 64))
(declare-fun temp10921_146 () (_ BitVec 64))
(declare-fun temp10921_147 () (_ BitVec 64))
(declare-fun temp10921_148 () (_ BitVec 64))
(declare-fun temp10921_149 () (_ BitVec 64))
(declare-fun temp10921_150 () (_ BitVec 64))
(declare-fun temp10921_151 () (_ BitVec 64))
(declare-fun temp10921_152 () (_ BitVec 64))
(declare-fun temp10921_153 () (_ BitVec 64))
(declare-fun temp10921_154 () (_ BitVec 64))
(declare-fun temp10921_155 () (_ BitVec 64))
(declare-fun temp10921_157 () (_ BitVec 64))
(declare-fun temp10921_158 () (_ BitVec 64))
(declare-fun temp10921_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10921_159 () (_ BitVec 64))
(declare-fun temp10921_160 () (_ BitVec 64))
(declare-fun temp10921_162 () (_ BitVec 64))
(declare-fun temp10921_163 () (_ BitVec 64))
(declare-fun temp10921_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10921_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10921_165 () (_ BitVec 64))
(declare-fun temp10921_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10921_167 () (_ BitVec 64))
(declare-fun temp10921_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10921_169 () (_ BitVec 64))
(declare-fun temp10921_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10921_171 () (_ BitVec 64))
(declare-fun temp10921_172 () (_ BitVec 64))
(declare-fun temp10921_173 () (_ BitVec 64))
(declare-fun temp10921_174 () (_ BitVec 64))
(declare-fun temp10921_175 () (_ BitVec 64))
(declare-fun temp10921_176 () (_ BitVec 64))
(declare-fun temp10921_177 () (_ BitVec 64))
(declare-fun temp10921_178 () (_ BitVec 64))
(declare-fun temp10921_179 () (_ BitVec 64))
(declare-fun temp10921_180 () (_ BitVec 64))
(declare-fun temp10921_181 () (_ BitVec 64))
(declare-fun temp10921_182 () (_ BitVec 64))
(declare-fun temp10921_183 () (_ BitVec 64))
(declare-fun temp10921_184 () (_ BitVec 64))
(declare-fun temp10921_185 () (_ BitVec 64))
(declare-fun temp10921_186 () (_ BitVec 64))
(declare-fun temp10921_187 () (_ BitVec 64))
(declare-fun temp10921_188 () (_ BitVec 64))
(declare-fun temp10921_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10921_190 () (_ BitVec 64))
(declare-fun temp10921_192 () (_ BitVec 64))
(declare-fun temp10921_193 () (_ BitVec 64))
(declare-fun temp10921_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10921_194 () (_ BitVec 64))
(declare-fun temp10921_195 () (_ BitVec 64))
(declare-fun temp10921_197 () (_ BitVec 64))
(declare-fun temp10921_198 () (_ BitVec 64))
(declare-fun temp10921_196 () (_ BitVec 64))
(declare-fun temp10921_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10921_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10921_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10921_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10921_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10921_204 () (_ BitVec 64))
(declare-fun temp10921_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10921_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10921_207 () (_ BitVec 64))
(declare-fun temp10921_208 () (_ BitVec 64))
(declare-fun temp10921_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10921_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10921_211 () (_ BitVec 64))
(declare-fun temp10921_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10921_213 () (_ BitVec 64))
(declare-fun temp10921_214 () (_ BitVec 64))
(declare-fun temp10921_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10921_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10921_217 () (_ BitVec 64))
(declare-fun temp10921_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10921_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10921_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var5255568 () (_ BitVec 64))
(declare-fun var5517712 () (_ BitVec 64))
(declare-fun temp10921_221 () (_ BitVec 64))
(declare-fun var5845392 () (_ BitVec 64))
(declare-fun temp10921_222 () (_ BitVec 64))
(assert (= temp10921_1 #x0000000000000001))
(assert (= var77203 temp10921_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10921_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10921_2)))
(assert (= temp10921_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10921_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10921_4 #x0000000000000000))
(assert (= var210941 temp10921_4))
(assert (= temp10921_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10921_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10921_6 #x0000000000000000))
(assert (= var210986 temp10921_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10921_7 #x0000000000000000))
(assert (= temp10921_8 temp10921_7))
(assert (= temp10921_9 (select ARGNAME_padding_NAMEEND_VAL temp10921_8)))
(assert (= temp10921_10 #x0000000000000001))
(assert (= temp10921_11 temp10921_10))
(assert (= temp10921_12 (select ARGNAME_padding_NAMEEND_VAL temp10921_11)))
(assert (= temp10921_13 #x0000000000000002))
(assert (= temp10921_14 temp10921_13))
(assert (= temp10921_15 (select ARGNAME_padding_NAMEEND_VAL temp10921_14)))
(assert (= temp10921_16 #x0000000000000003))
(assert (= temp10921_17 temp10921_16))
(assert (= temp10921_18 (select ARGNAME_padding_NAMEEND_VAL temp10921_17)))
(assert (= temp10921_19 #x0000000000000004))
(assert (= temp10921_20 temp10921_19))
(assert (= temp10921_21 (select ARGNAME_padding_NAMEEND_VAL temp10921_20)))
(assert (= temp10921_22 #x0000000000000005))
(assert (= temp10921_23 temp10921_22))
(assert (= temp10921_24 (select ARGNAME_padding_NAMEEND_VAL temp10921_23)))
(assert (= temp10921_25 #x0000000000000000))
(assert (= temp10921_26 #x0000000000000000))
(assert (= temp10921_27 temp10921_26))
(assert (= temp10921_28 (select ARGNAME_padding_NAMEEND_VAL temp10921_27)))
(assert (= temp10921_29 #x0000000000000000))
(assert (= temp10921_30 #x0000000000000001))
(assert (= temp10921_31 temp10921_30))
(assert (= temp10921_32 (select ARGNAME_padding_NAMEEND_VAL temp10921_31)))
(assert (= temp10921_33 #x0000000000000000))
(assert (= temp10921_34 #x0000000000000002))
(assert (= temp10921_35 temp10921_34))
(assert (= temp10921_36 (select ARGNAME_padding_NAMEEND_VAL temp10921_35)))
(assert (= temp10921_37 #x0000000000000000))
(assert (= temp10921_38 #x0000000000000003))
(assert (= temp10921_39 temp10921_38))
(assert (= temp10921_40 (select ARGNAME_padding_NAMEEND_VAL temp10921_39)))
(assert (= temp10921_41 #x0000000000000000))
(assert (= temp10921_42 #x0000000000000004))
(assert (= temp10921_43 temp10921_42))
(assert (= temp10921_44 (select ARGNAME_padding_NAMEEND_VAL temp10921_43)))
(assert (= temp10921_45 #x0000000000000000))
(assert (= temp10921_46 #x0000000000000005))
(assert (= temp10921_47 temp10921_46))
(assert (= temp10921_48 (select ARGNAME_padding_NAMEEND_VAL temp10921_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10921_28 temp10921_25)
             (bvslt temp10921_32 temp10921_29)
             (bvslt temp10921_36 temp10921_33)
             (bvslt temp10921_40 temp10921_37)
             (bvslt temp10921_44 temp10921_41)
             (bvslt temp10921_48 temp10921_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10921_49 #x0000000000000000))
(assert (= var1191714 temp10921_49))
(assert (= temp10921_50 #x0000000000000000))
(assert (= temp10921_51 temp10921_50))
(assert (= temp10921_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10921_51)))
(assert (= temp10921_53 #x0000000000000001))
(assert (= temp10921_54 temp10921_53))
(assert (= temp10921_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10921_54)))
(assert (= temp10921_56 #x0000000000000002))
(assert (= temp10921_57 temp10921_56))
(assert (= temp10921_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10921_57)))
(assert (= temp10921_59 #x0000000000000003))
(assert (= temp10921_60 temp10921_59))
(assert (= temp10921_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10921_60)))
(assert (= temp10921_62 #x0000000000000004))
(assert (= temp10921_63 temp10921_62))
(assert (= temp10921_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10921_63)))
(assert (= temp10921_65 #x0000000000000005))
(assert (= temp10921_66 temp10921_65))
(assert (= temp10921_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10921_66)))
(assert (= temp10921_68 #x0000000000000000))
(assert (= temp10921_69 #x0000000000000000))
(assert (= temp10921_70 temp10921_69))
(assert (= temp10921_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10921_70)))
(assert (= temp10921_72 #x0000000000000000))
(assert (= temp10921_73 #x0000000000000001))
(assert (= temp10921_74 temp10921_73))
(assert (= temp10921_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10921_74)))
(assert (= temp10921_76 #x0000000000000000))
(assert (= temp10921_77 #x0000000000000002))
(assert (= temp10921_78 temp10921_77))
(assert (= temp10921_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10921_78)))
(assert (= temp10921_80 #x0000000000000000))
(assert (= temp10921_81 #x0000000000000003))
(assert (= temp10921_82 temp10921_81))
(assert (= temp10921_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10921_82)))
(assert (= temp10921_84 #x0000000000000000))
(assert (= temp10921_85 #x0000000000000004))
(assert (= temp10921_86 temp10921_85))
(assert (= temp10921_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10921_86)))
(assert (= temp10921_88 #x0000000000000000))
(assert (= temp10921_89 #x0000000000000005))
(assert (= temp10921_90 temp10921_89))
(assert (= temp10921_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10921_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10921_71 temp10921_68)
             (bvslt temp10921_75 temp10921_72)
             (bvslt temp10921_79 temp10921_76)
             (bvslt temp10921_83 temp10921_80)
             (bvslt temp10921_87 temp10921_84)
             (bvslt temp10921_91 temp10921_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10921_92 #x0000000000000000))
(assert (= var1191725 temp10921_92))
(assert (= temp10921_93 #x0000000000000000))
(assert (= temp10921_94 temp10921_93))
(assert (= temp10921_95 (select ARGNAME_stride_NAMEEND_VAL temp10921_94)))
(assert (= temp10921_96 #x0000000000000001))
(assert (= temp10921_97 temp10921_96))
(assert (= temp10921_98 (select ARGNAME_stride_NAMEEND_VAL temp10921_97)))
(assert (= temp10921_99 #x0000000000000002))
(assert (= temp10921_100 temp10921_99))
(assert (= temp10921_101 (select ARGNAME_stride_NAMEEND_VAL temp10921_100)))
(assert (= temp10921_102 #x0000000000000003))
(assert (= temp10921_103 temp10921_102))
(assert (= temp10921_104 (select ARGNAME_stride_NAMEEND_VAL temp10921_103)))
(assert (= temp10921_105 #x0000000000000004))
(assert (= temp10921_106 temp10921_105))
(assert (= temp10921_107 (select ARGNAME_stride_NAMEEND_VAL temp10921_106)))
(assert (= temp10921_108 #x0000000000000005))
(assert (= temp10921_109 temp10921_108))
(assert (= temp10921_110 (select ARGNAME_stride_NAMEEND_VAL temp10921_109)))
(assert (= temp10921_111 #x0000000000000000))
(assert (= temp10921_112 #x0000000000000000))
(assert (= temp10921_113 temp10921_112))
(assert (= temp10921_114 (select ARGNAME_stride_NAMEEND_VAL temp10921_113)))
(assert (= temp10921_115 #x0000000000000000))
(assert (= temp10921_116 #x0000000000000001))
(assert (= temp10921_117 temp10921_116))
(assert (= temp10921_118 (select ARGNAME_stride_NAMEEND_VAL temp10921_117)))
(assert (= temp10921_119 #x0000000000000000))
(assert (= temp10921_120 #x0000000000000002))
(assert (= temp10921_121 temp10921_120))
(assert (= temp10921_122 (select ARGNAME_stride_NAMEEND_VAL temp10921_121)))
(assert (= temp10921_123 #x0000000000000000))
(assert (= temp10921_124 #x0000000000000003))
(assert (= temp10921_125 temp10921_124))
(assert (= temp10921_126 (select ARGNAME_stride_NAMEEND_VAL temp10921_125)))
(assert (= temp10921_127 #x0000000000000000))
(assert (= temp10921_128 #x0000000000000004))
(assert (= temp10921_129 temp10921_128))
(assert (= temp10921_130 (select ARGNAME_stride_NAMEEND_VAL temp10921_129)))
(assert (= temp10921_131 #x0000000000000000))
(assert (= temp10921_132 #x0000000000000005))
(assert (= temp10921_133 temp10921_132))
(assert (= temp10921_134 (select ARGNAME_stride_NAMEEND_VAL temp10921_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10921_114 temp10921_111)
             (bvsle temp10921_118 temp10921_115)
             (bvsle temp10921_122 temp10921_119)
             (bvsle temp10921_126 temp10921_123)
             (bvsle temp10921_130 temp10921_127)
             (bvsle temp10921_134 temp10921_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10921_135 #x0000000000000000))
(assert (= var1191735 temp10921_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10921_136 #x0000000000000001))
(assert (= var1191747 temp10921_136))
(assert (= temp10921_137 #x0000000000000000))
(assert (= var1179826 temp10921_137))
(assert (= temp10921_138 #x0000000000000000))
(assert (= temp10921_139 temp10921_138))
(assert (= temp10921_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10921_139)))
(assert (= temp10921_141 #x0000000000000001))
(assert (= temp10921_142 temp10921_141))
(assert (= temp10921_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10921_142)))
(assert (= temp10921_144 #x0000000000000002))
(assert (= temp10921_145 temp10921_144))
(assert (= temp10921_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10921_145)))
(assert (= temp10921_147 #x0000000000000003))
(assert (= temp10921_148 temp10921_147))
(assert (= temp10921_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10921_148)))
(assert (= temp10921_150 #x0000000000000004))
(assert (= temp10921_151 temp10921_150))
(assert (= temp10921_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10921_151)))
(assert (= temp10921_153 #x0000000000000005))
(assert (= temp10921_154 temp10921_153))
(assert (= temp10921_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10921_154)))
(assert (= temp10921_157 var1179826))
(assert (= temp10921_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10921_157)))
(assert (= temp10921_156 temp10921_158))
(assert (= var1191780
   (ite (bvslt temp10921_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10921_159 #x0000000000000000))
(assert (= var1191780 temp10921_159))
(assert (= temp10921_160 #x0000000000000000))
(assert (= var1179826 temp10921_160))
(assert (= temp10921_162 var1179826))
(assert (= temp10921_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10921_162)))
(assert (= temp10921_161 temp10921_163))
(assert (= var1191802 (bvsmod temp10921_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10921_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10921_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10921_165 #x0000000000000001))
(assert (= var1191803 temp10921_165))
(assert (= temp10921_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10921_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10921_167 #x0000000000000001))
(assert (= var1191823 temp10921_167))
(assert (= temp10921_168 #x0000000000000001))
(assert (= var1180714 temp10921_168))
(assert (= temp10921_169 #x0000000000000000))
(assert (= temp10921_170 temp10921_169))
(assert (= temp10921_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10921_170)))
(assert (= temp10921_172 #x0000000000000001))
(assert (= temp10921_173 temp10921_172))
(assert (= temp10921_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10921_173)))
(assert (= temp10921_175 #x0000000000000002))
(assert (= temp10921_176 temp10921_175))
(assert (= temp10921_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10921_176)))
(assert (= temp10921_178 #x0000000000000003))
(assert (= temp10921_179 temp10921_178))
(assert (= temp10921_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10921_179)))
(assert (= temp10921_181 #x0000000000000004))
(assert (= temp10921_182 temp10921_181))
(assert (= temp10921_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10921_182)))
(assert (= temp10921_184 #x0000000000000005))
(assert (= temp10921_185 temp10921_184))
(assert (= temp10921_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10921_185)))
(assert (= temp10921_187 #x0000000000000000))
(assert (= temp10921_188
   (ite (bvslt var1180714 temp10921_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10921_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10921_188)))
(assert (= var1191831 temp10921_189))
(assert (bvslt (ite (bvslt var1180714 temp10921_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10921_190 #x0000000000000001))
(assert (= var1180714 temp10921_190))
(assert (= temp10921_192 var1180714))
(assert (= temp10921_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10921_192)))
(assert (= temp10921_191 temp10921_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10921_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10921_194 #x0000000000000001))
(assert (= var1191836 temp10921_194))
(assert (= temp10921_195 #x0000000000000000))
(assert (= var1179826 temp10921_195))
(assert (= temp10921_197 var1179826))
(assert (= temp10921_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10921_197)))
(assert (= temp10921_196 temp10921_198))
(assert (= temp10921_199 #x0000000000000002))
(assert (= var1586025 temp10921_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10921_200 #x0000000000000001))
(assert (= var1191993 temp10921_200))
(assert (= temp10921_201 #x0000000000000001))
(assert (= var2700303 temp10921_201))
(assert (= temp10921_202 #x0000000000000001))
(assert (= var2962447 temp10921_202))
(assert (= temp10921_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10921_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10921_204 #x0000000000000001))
(assert (= var211058 temp10921_204))
(assert (= temp10921_205 #x0000000000000001))
(assert (= var211188 temp10921_205))
(assert (= var3879401 var211188))
(assert (= temp10921_206 #x0000000000000000))
(assert (= var3866802 temp10921_206))
(assert (= temp10921_207 #x0000000000000000))
(assert (= temp10921_208
   (ite (bvslt var3866802 temp10921_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10921_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10921_208)))
(assert (= var3879420 temp10921_209))
(assert (bvslt (ite (bvslt var3866802 temp10921_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10921_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10921_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10921_211 #x0000000000000000))
(assert (= var3879421 temp10921_211))
(assert (= temp10921_212 #x0000000000000001))
(assert (= var3867690 temp10921_212))
(assert (= temp10921_213 #x0000000000000000))
(assert (= temp10921_214
   (ite (bvslt var3867690 temp10921_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10921_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10921_214)))
(assert (= var3879423 temp10921_215))
(assert (bvslt (ite (bvslt var3867690 temp10921_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10921_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10921_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10921_217 #x0000000000000001))
(assert (= var3879424 temp10921_217))
(assert (= temp10921_218 #x0000000000000000))
(assert (= var4133117 temp10921_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10921_219 #x0000000000000002))
(assert (= var4339331 temp10921_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10921_220 #x0000000000000000))
(assert (= var4404892 temp10921_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var5255568 var211201))
(assert (= var5517712 var211201))
(assert (= temp10921_221 #x0000000000000000))
(assert (= var5845392 temp10921_221))
(assert (= temp10921_222 #x0000000000000001))
(assert (= var211058 temp10921_222))
(model-add temp10921_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10921_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10921_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10921_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





