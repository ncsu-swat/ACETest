(declare-fun temp10245_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10245_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10245_3 () (_ BitVec 64))
(declare-fun temp10245_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10245_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10245_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10245_7 () (_ BitVec 64))
(declare-fun temp10245_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10245_9 () (_ BitVec 64))
(declare-fun temp10245_10 () (_ BitVec 64))
(declare-fun temp10245_11 () (_ BitVec 64))
(declare-fun temp10245_12 () (_ BitVec 64))
(declare-fun temp10245_13 () (_ BitVec 64))
(declare-fun temp10245_14 () (_ BitVec 64))
(declare-fun temp10245_15 () (_ BitVec 64))
(declare-fun temp10245_16 () (_ BitVec 64))
(declare-fun temp10245_17 () (_ BitVec 64))
(declare-fun temp10245_18 () (_ BitVec 64))
(declare-fun temp10245_19 () (_ BitVec 64))
(declare-fun temp10245_20 () (_ BitVec 64))
(declare-fun temp10245_21 () (_ BitVec 64))
(declare-fun temp10245_22 () (_ BitVec 64))
(declare-fun temp10245_23 () (_ BitVec 64))
(declare-fun temp10245_24 () (_ BitVec 64))
(declare-fun temp10245_25 () (_ BitVec 64))
(declare-fun temp10245_26 () (_ BitVec 64))
(declare-fun temp10245_27 () (_ BitVec 64))
(declare-fun temp10245_28 () (_ BitVec 64))
(declare-fun temp10245_29 () (_ BitVec 64))
(declare-fun temp10245_30 () (_ BitVec 64))
(declare-fun temp10245_31 () (_ BitVec 64))
(declare-fun temp10245_32 () (_ BitVec 64))
(declare-fun temp10245_33 () (_ BitVec 64))
(declare-fun temp10245_34 () (_ BitVec 64))
(declare-fun temp10245_35 () (_ BitVec 64))
(declare-fun temp10245_36 () (_ BitVec 64))
(declare-fun temp10245_37 () (_ BitVec 64))
(declare-fun temp10245_38 () (_ BitVec 64))
(declare-fun temp10245_39 () (_ BitVec 64))
(declare-fun temp10245_40 () (_ BitVec 64))
(declare-fun temp10245_41 () (_ BitVec 64))
(declare-fun temp10245_42 () (_ BitVec 64))
(declare-fun temp10245_43 () (_ BitVec 64))
(declare-fun temp10245_44 () (_ BitVec 64))
(declare-fun temp10245_45 () (_ BitVec 64))
(declare-fun temp10245_46 () (_ BitVec 64))
(declare-fun temp10245_47 () (_ BitVec 64))
(declare-fun temp10245_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10245_49 () (_ BitVec 64))
(declare-fun temp10245_50 () (_ BitVec 64))
(declare-fun temp10245_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10245_52 () (_ BitVec 64))
(declare-fun temp10245_53 () (_ BitVec 64))
(declare-fun temp10245_54 () (_ BitVec 64))
(declare-fun temp10245_55 () (_ BitVec 64))
(declare-fun temp10245_56 () (_ BitVec 64))
(declare-fun temp10245_57 () (_ BitVec 64))
(declare-fun temp10245_58 () (_ BitVec 64))
(declare-fun temp10245_59 () (_ BitVec 64))
(declare-fun temp10245_60 () (_ BitVec 64))
(declare-fun temp10245_61 () (_ BitVec 64))
(declare-fun temp10245_62 () (_ BitVec 64))
(declare-fun temp10245_63 () (_ BitVec 64))
(declare-fun temp10245_64 () (_ BitVec 64))
(declare-fun temp10245_65 () (_ BitVec 64))
(declare-fun temp10245_66 () (_ BitVec 64))
(declare-fun temp10245_67 () (_ BitVec 64))
(declare-fun temp10245_68 () (_ BitVec 64))
(declare-fun temp10245_69 () (_ BitVec 64))
(declare-fun temp10245_70 () (_ BitVec 64))
(declare-fun temp10245_71 () (_ BitVec 64))
(declare-fun temp10245_72 () (_ BitVec 64))
(declare-fun temp10245_73 () (_ BitVec 64))
(declare-fun temp10245_74 () (_ BitVec 64))
(declare-fun temp10245_75 () (_ BitVec 64))
(declare-fun temp10245_76 () (_ BitVec 64))
(declare-fun temp10245_77 () (_ BitVec 64))
(declare-fun temp10245_78 () (_ BitVec 64))
(declare-fun temp10245_79 () (_ BitVec 64))
(declare-fun temp10245_80 () (_ BitVec 64))
(declare-fun temp10245_81 () (_ BitVec 64))
(declare-fun temp10245_82 () (_ BitVec 64))
(declare-fun temp10245_83 () (_ BitVec 64))
(declare-fun temp10245_84 () (_ BitVec 64))
(declare-fun temp10245_85 () (_ BitVec 64))
(declare-fun temp10245_86 () (_ BitVec 64))
(declare-fun temp10245_87 () (_ BitVec 64))
(declare-fun temp10245_88 () (_ BitVec 64))
(declare-fun temp10245_89 () (_ BitVec 64))
(declare-fun temp10245_90 () (_ BitVec 64))
(declare-fun temp10245_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10245_92 () (_ BitVec 64))
(declare-fun temp10245_93 () (_ BitVec 64))
(declare-fun temp10245_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10245_95 () (_ BitVec 64))
(declare-fun temp10245_96 () (_ BitVec 64))
(declare-fun temp10245_97 () (_ BitVec 64))
(declare-fun temp10245_98 () (_ BitVec 64))
(declare-fun temp10245_99 () (_ BitVec 64))
(declare-fun temp10245_100 () (_ BitVec 64))
(declare-fun temp10245_101 () (_ BitVec 64))
(declare-fun temp10245_102 () (_ BitVec 64))
(declare-fun temp10245_103 () (_ BitVec 64))
(declare-fun temp10245_104 () (_ BitVec 64))
(declare-fun temp10245_105 () (_ BitVec 64))
(declare-fun temp10245_106 () (_ BitVec 64))
(declare-fun temp10245_107 () (_ BitVec 64))
(declare-fun temp10245_108 () (_ BitVec 64))
(declare-fun temp10245_109 () (_ BitVec 64))
(declare-fun temp10245_110 () (_ BitVec 64))
(declare-fun temp10245_111 () (_ BitVec 64))
(declare-fun temp10245_112 () (_ BitVec 64))
(declare-fun temp10245_113 () (_ BitVec 64))
(declare-fun temp10245_114 () (_ BitVec 64))
(declare-fun temp10245_115 () (_ BitVec 64))
(declare-fun temp10245_116 () (_ BitVec 64))
(declare-fun temp10245_117 () (_ BitVec 64))
(declare-fun temp10245_118 () (_ BitVec 64))
(declare-fun temp10245_119 () (_ BitVec 64))
(declare-fun temp10245_120 () (_ BitVec 64))
(declare-fun temp10245_121 () (_ BitVec 64))
(declare-fun temp10245_122 () (_ BitVec 64))
(declare-fun temp10245_123 () (_ BitVec 64))
(declare-fun temp10245_124 () (_ BitVec 64))
(declare-fun temp10245_125 () (_ BitVec 64))
(declare-fun temp10245_126 () (_ BitVec 64))
(declare-fun temp10245_127 () (_ BitVec 64))
(declare-fun temp10245_128 () (_ BitVec 64))
(declare-fun temp10245_129 () (_ BitVec 64))
(declare-fun temp10245_130 () (_ BitVec 64))
(declare-fun temp10245_131 () (_ BitVec 64))
(declare-fun temp10245_132 () (_ BitVec 64))
(declare-fun temp10245_133 () (_ BitVec 64))
(declare-fun temp10245_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10245_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10245_136 () (_ BitVec 64))
(declare-fun temp10245_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10245_138 () (_ BitVec 64))
(declare-fun temp10245_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10245_140 () (_ BitVec 64))
(declare-fun temp10245_141 () (_ BitVec 64))
(declare-fun temp10245_142 () (_ BitVec 64))
(declare-fun temp10245_143 () (_ BitVec 64))
(declare-fun temp10245_144 () (_ BitVec 64))
(declare-fun temp10245_145 () (_ BitVec 64))
(declare-fun temp10245_146 () (_ BitVec 64))
(declare-fun temp10245_147 () (_ BitVec 64))
(declare-fun temp10245_148 () (_ BitVec 64))
(declare-fun temp10245_149 () (_ BitVec 64))
(declare-fun temp10245_150 () (_ BitVec 64))
(declare-fun temp10245_151 () (_ BitVec 64))
(declare-fun temp10245_152 () (_ BitVec 64))
(declare-fun temp10245_153 () (_ BitVec 64))
(declare-fun temp10245_154 () (_ BitVec 64))
(declare-fun temp10245_155 () (_ BitVec 64))
(declare-fun temp10245_157 () (_ BitVec 64))
(declare-fun temp10245_158 () (_ BitVec 64))
(declare-fun temp10245_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10245_159 () (_ BitVec 64))
(declare-fun temp10245_160 () (_ BitVec 64))
(declare-fun temp10245_162 () (_ BitVec 64))
(declare-fun temp10245_163 () (_ BitVec 64))
(declare-fun temp10245_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10245_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10245_165 () (_ BitVec 64))
(declare-fun temp10245_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10245_167 () (_ BitVec 64))
(declare-fun temp10245_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10245_169 () (_ BitVec 64))
(declare-fun temp10245_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10245_171 () (_ BitVec 64))
(declare-fun temp10245_172 () (_ BitVec 64))
(declare-fun temp10245_173 () (_ BitVec 64))
(declare-fun temp10245_174 () (_ BitVec 64))
(declare-fun temp10245_175 () (_ BitVec 64))
(declare-fun temp10245_176 () (_ BitVec 64))
(declare-fun temp10245_177 () (_ BitVec 64))
(declare-fun temp10245_178 () (_ BitVec 64))
(declare-fun temp10245_179 () (_ BitVec 64))
(declare-fun temp10245_180 () (_ BitVec 64))
(declare-fun temp10245_181 () (_ BitVec 64))
(declare-fun temp10245_182 () (_ BitVec 64))
(declare-fun temp10245_183 () (_ BitVec 64))
(declare-fun temp10245_184 () (_ BitVec 64))
(declare-fun temp10245_185 () (_ BitVec 64))
(declare-fun temp10245_186 () (_ BitVec 64))
(declare-fun temp10245_187 () (_ BitVec 64))
(declare-fun temp10245_188 () (_ BitVec 64))
(declare-fun temp10245_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10245_190 () (_ BitVec 64))
(declare-fun temp10245_192 () (_ BitVec 64))
(declare-fun temp10245_193 () (_ BitVec 64))
(declare-fun temp10245_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10245_194 () (_ BitVec 64))
(declare-fun temp10245_195 () (_ BitVec 64))
(declare-fun temp10245_197 () (_ BitVec 64))
(declare-fun temp10245_198 () (_ BitVec 64))
(declare-fun temp10245_196 () (_ BitVec 64))
(declare-fun temp10245_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10245_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10245_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10245_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10245_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10245_204 () (_ BitVec 64))
(declare-fun temp10245_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10245_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10245_207 () (_ BitVec 64))
(declare-fun temp10245_208 () (_ BitVec 64))
(declare-fun temp10245_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10245_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10245_211 () (_ BitVec 64))
(declare-fun temp10245_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10245_213 () (_ BitVec 64))
(declare-fun temp10245_214 () (_ BitVec 64))
(declare-fun temp10245_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10245_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10245_217 () (_ BitVec 64))
(declare-fun temp10245_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10245_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10245_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4862352 () (_ BitVec 64))
(declare-fun var5124496 () (_ BitVec 64))
(declare-fun temp10245_221 () (_ BitVec 64))
(declare-fun var5452176 () (_ BitVec 64))
(declare-fun temp10245_222 () (_ BitVec 64))
(assert (= temp10245_1 #x0000000000000001))
(assert (= var77203 temp10245_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10245_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10245_2)))
(assert (= temp10245_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10245_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10245_4 #x0000000000000000))
(assert (= var210941 temp10245_4))
(assert (= temp10245_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10245_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10245_6 #x0000000000000000))
(assert (= var210986 temp10245_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10245_7 #x0000000000000000))
(assert (= temp10245_8 temp10245_7))
(assert (= temp10245_9 (select ARGNAME_padding_NAMEEND_VAL temp10245_8)))
(assert (= temp10245_10 #x0000000000000001))
(assert (= temp10245_11 temp10245_10))
(assert (= temp10245_12 (select ARGNAME_padding_NAMEEND_VAL temp10245_11)))
(assert (= temp10245_13 #x0000000000000002))
(assert (= temp10245_14 temp10245_13))
(assert (= temp10245_15 (select ARGNAME_padding_NAMEEND_VAL temp10245_14)))
(assert (= temp10245_16 #x0000000000000003))
(assert (= temp10245_17 temp10245_16))
(assert (= temp10245_18 (select ARGNAME_padding_NAMEEND_VAL temp10245_17)))
(assert (= temp10245_19 #x0000000000000004))
(assert (= temp10245_20 temp10245_19))
(assert (= temp10245_21 (select ARGNAME_padding_NAMEEND_VAL temp10245_20)))
(assert (= temp10245_22 #x0000000000000005))
(assert (= temp10245_23 temp10245_22))
(assert (= temp10245_24 (select ARGNAME_padding_NAMEEND_VAL temp10245_23)))
(assert (= temp10245_25 #x0000000000000000))
(assert (= temp10245_26 #x0000000000000000))
(assert (= temp10245_27 temp10245_26))
(assert (= temp10245_28 (select ARGNAME_padding_NAMEEND_VAL temp10245_27)))
(assert (= temp10245_29 #x0000000000000000))
(assert (= temp10245_30 #x0000000000000001))
(assert (= temp10245_31 temp10245_30))
(assert (= temp10245_32 (select ARGNAME_padding_NAMEEND_VAL temp10245_31)))
(assert (= temp10245_33 #x0000000000000000))
(assert (= temp10245_34 #x0000000000000002))
(assert (= temp10245_35 temp10245_34))
(assert (= temp10245_36 (select ARGNAME_padding_NAMEEND_VAL temp10245_35)))
(assert (= temp10245_37 #x0000000000000000))
(assert (= temp10245_38 #x0000000000000003))
(assert (= temp10245_39 temp10245_38))
(assert (= temp10245_40 (select ARGNAME_padding_NAMEEND_VAL temp10245_39)))
(assert (= temp10245_41 #x0000000000000000))
(assert (= temp10245_42 #x0000000000000004))
(assert (= temp10245_43 temp10245_42))
(assert (= temp10245_44 (select ARGNAME_padding_NAMEEND_VAL temp10245_43)))
(assert (= temp10245_45 #x0000000000000000))
(assert (= temp10245_46 #x0000000000000005))
(assert (= temp10245_47 temp10245_46))
(assert (= temp10245_48 (select ARGNAME_padding_NAMEEND_VAL temp10245_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10245_28 temp10245_25)
             (bvslt temp10245_32 temp10245_29)
             (bvslt temp10245_36 temp10245_33)
             (bvslt temp10245_40 temp10245_37)
             (bvslt temp10245_44 temp10245_41)
             (bvslt temp10245_48 temp10245_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10245_49 #x0000000000000000))
(assert (= var1191714 temp10245_49))
(assert (= temp10245_50 #x0000000000000000))
(assert (= temp10245_51 temp10245_50))
(assert (= temp10245_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10245_51)))
(assert (= temp10245_53 #x0000000000000001))
(assert (= temp10245_54 temp10245_53))
(assert (= temp10245_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10245_54)))
(assert (= temp10245_56 #x0000000000000002))
(assert (= temp10245_57 temp10245_56))
(assert (= temp10245_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10245_57)))
(assert (= temp10245_59 #x0000000000000003))
(assert (= temp10245_60 temp10245_59))
(assert (= temp10245_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10245_60)))
(assert (= temp10245_62 #x0000000000000004))
(assert (= temp10245_63 temp10245_62))
(assert (= temp10245_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10245_63)))
(assert (= temp10245_65 #x0000000000000005))
(assert (= temp10245_66 temp10245_65))
(assert (= temp10245_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10245_66)))
(assert (= temp10245_68 #x0000000000000000))
(assert (= temp10245_69 #x0000000000000000))
(assert (= temp10245_70 temp10245_69))
(assert (= temp10245_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10245_70)))
(assert (= temp10245_72 #x0000000000000000))
(assert (= temp10245_73 #x0000000000000001))
(assert (= temp10245_74 temp10245_73))
(assert (= temp10245_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10245_74)))
(assert (= temp10245_76 #x0000000000000000))
(assert (= temp10245_77 #x0000000000000002))
(assert (= temp10245_78 temp10245_77))
(assert (= temp10245_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10245_78)))
(assert (= temp10245_80 #x0000000000000000))
(assert (= temp10245_81 #x0000000000000003))
(assert (= temp10245_82 temp10245_81))
(assert (= temp10245_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10245_82)))
(assert (= temp10245_84 #x0000000000000000))
(assert (= temp10245_85 #x0000000000000004))
(assert (= temp10245_86 temp10245_85))
(assert (= temp10245_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10245_86)))
(assert (= temp10245_88 #x0000000000000000))
(assert (= temp10245_89 #x0000000000000005))
(assert (= temp10245_90 temp10245_89))
(assert (= temp10245_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10245_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10245_71 temp10245_68)
             (bvslt temp10245_75 temp10245_72)
             (bvslt temp10245_79 temp10245_76)
             (bvslt temp10245_83 temp10245_80)
             (bvslt temp10245_87 temp10245_84)
             (bvslt temp10245_91 temp10245_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10245_92 #x0000000000000000))
(assert (= var1191725 temp10245_92))
(assert (= temp10245_93 #x0000000000000000))
(assert (= temp10245_94 temp10245_93))
(assert (= temp10245_95 (select ARGNAME_stride_NAMEEND_VAL temp10245_94)))
(assert (= temp10245_96 #x0000000000000001))
(assert (= temp10245_97 temp10245_96))
(assert (= temp10245_98 (select ARGNAME_stride_NAMEEND_VAL temp10245_97)))
(assert (= temp10245_99 #x0000000000000002))
(assert (= temp10245_100 temp10245_99))
(assert (= temp10245_101 (select ARGNAME_stride_NAMEEND_VAL temp10245_100)))
(assert (= temp10245_102 #x0000000000000003))
(assert (= temp10245_103 temp10245_102))
(assert (= temp10245_104 (select ARGNAME_stride_NAMEEND_VAL temp10245_103)))
(assert (= temp10245_105 #x0000000000000004))
(assert (= temp10245_106 temp10245_105))
(assert (= temp10245_107 (select ARGNAME_stride_NAMEEND_VAL temp10245_106)))
(assert (= temp10245_108 #x0000000000000005))
(assert (= temp10245_109 temp10245_108))
(assert (= temp10245_110 (select ARGNAME_stride_NAMEEND_VAL temp10245_109)))
(assert (= temp10245_111 #x0000000000000000))
(assert (= temp10245_112 #x0000000000000000))
(assert (= temp10245_113 temp10245_112))
(assert (= temp10245_114 (select ARGNAME_stride_NAMEEND_VAL temp10245_113)))
(assert (= temp10245_115 #x0000000000000000))
(assert (= temp10245_116 #x0000000000000001))
(assert (= temp10245_117 temp10245_116))
(assert (= temp10245_118 (select ARGNAME_stride_NAMEEND_VAL temp10245_117)))
(assert (= temp10245_119 #x0000000000000000))
(assert (= temp10245_120 #x0000000000000002))
(assert (= temp10245_121 temp10245_120))
(assert (= temp10245_122 (select ARGNAME_stride_NAMEEND_VAL temp10245_121)))
(assert (= temp10245_123 #x0000000000000000))
(assert (= temp10245_124 #x0000000000000003))
(assert (= temp10245_125 temp10245_124))
(assert (= temp10245_126 (select ARGNAME_stride_NAMEEND_VAL temp10245_125)))
(assert (= temp10245_127 #x0000000000000000))
(assert (= temp10245_128 #x0000000000000004))
(assert (= temp10245_129 temp10245_128))
(assert (= temp10245_130 (select ARGNAME_stride_NAMEEND_VAL temp10245_129)))
(assert (= temp10245_131 #x0000000000000000))
(assert (= temp10245_132 #x0000000000000005))
(assert (= temp10245_133 temp10245_132))
(assert (= temp10245_134 (select ARGNAME_stride_NAMEEND_VAL temp10245_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10245_114 temp10245_111)
             (bvsle temp10245_118 temp10245_115)
             (bvsle temp10245_122 temp10245_119)
             (bvsle temp10245_126 temp10245_123)
             (bvsle temp10245_130 temp10245_127)
             (bvsle temp10245_134 temp10245_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10245_135 #x0000000000000000))
(assert (= var1191735 temp10245_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10245_136 #x0000000000000001))
(assert (= var1191747 temp10245_136))
(assert (= temp10245_137 #x0000000000000000))
(assert (= var1179826 temp10245_137))
(assert (= temp10245_138 #x0000000000000000))
(assert (= temp10245_139 temp10245_138))
(assert (= temp10245_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10245_139)))
(assert (= temp10245_141 #x0000000000000001))
(assert (= temp10245_142 temp10245_141))
(assert (= temp10245_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10245_142)))
(assert (= temp10245_144 #x0000000000000002))
(assert (= temp10245_145 temp10245_144))
(assert (= temp10245_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10245_145)))
(assert (= temp10245_147 #x0000000000000003))
(assert (= temp10245_148 temp10245_147))
(assert (= temp10245_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10245_148)))
(assert (= temp10245_150 #x0000000000000004))
(assert (= temp10245_151 temp10245_150))
(assert (= temp10245_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10245_151)))
(assert (= temp10245_153 #x0000000000000005))
(assert (= temp10245_154 temp10245_153))
(assert (= temp10245_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10245_154)))
(assert (= temp10245_157 var1179826))
(assert (= temp10245_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10245_157)))
(assert (= temp10245_156 temp10245_158))
(assert (= var1191780
   (ite (bvslt temp10245_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10245_159 #x0000000000000000))
(assert (= var1191780 temp10245_159))
(assert (= temp10245_160 #x0000000000000000))
(assert (= var1179826 temp10245_160))
(assert (= temp10245_162 var1179826))
(assert (= temp10245_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10245_162)))
(assert (= temp10245_161 temp10245_163))
(assert (= var1191802 (bvsmod temp10245_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10245_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10245_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10245_165 #x0000000000000001))
(assert (= var1191803 temp10245_165))
(assert (= temp10245_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10245_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10245_167 #x0000000000000001))
(assert (= var1191823 temp10245_167))
(assert (= temp10245_168 #x0000000000000001))
(assert (= var1180714 temp10245_168))
(assert (= temp10245_169 #x0000000000000000))
(assert (= temp10245_170 temp10245_169))
(assert (= temp10245_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10245_170)))
(assert (= temp10245_172 #x0000000000000001))
(assert (= temp10245_173 temp10245_172))
(assert (= temp10245_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10245_173)))
(assert (= temp10245_175 #x0000000000000002))
(assert (= temp10245_176 temp10245_175))
(assert (= temp10245_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10245_176)))
(assert (= temp10245_178 #x0000000000000003))
(assert (= temp10245_179 temp10245_178))
(assert (= temp10245_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10245_179)))
(assert (= temp10245_181 #x0000000000000004))
(assert (= temp10245_182 temp10245_181))
(assert (= temp10245_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10245_182)))
(assert (= temp10245_184 #x0000000000000005))
(assert (= temp10245_185 temp10245_184))
(assert (= temp10245_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10245_185)))
(assert (= temp10245_187 #x0000000000000000))
(assert (= temp10245_188
   (ite (bvslt var1180714 temp10245_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10245_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10245_188)))
(assert (= var1191831 temp10245_189))
(assert (bvslt (ite (bvslt var1180714 temp10245_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10245_190 #x0000000000000001))
(assert (= var1180714 temp10245_190))
(assert (= temp10245_192 var1180714))
(assert (= temp10245_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10245_192)))
(assert (= temp10245_191 temp10245_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10245_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10245_194 #x0000000000000001))
(assert (= var1191836 temp10245_194))
(assert (= temp10245_195 #x0000000000000000))
(assert (= var1179826 temp10245_195))
(assert (= temp10245_197 var1179826))
(assert (= temp10245_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10245_197)))
(assert (= temp10245_196 temp10245_198))
(assert (= temp10245_199 #x0000000000000002))
(assert (= var1586025 temp10245_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10245_200 #x0000000000000001))
(assert (= var1191993 temp10245_200))
(assert (= temp10245_201 #x0000000000000001))
(assert (= var2700303 temp10245_201))
(assert (= temp10245_202 #x0000000000000001))
(assert (= var2962447 temp10245_202))
(assert (= temp10245_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10245_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10245_204 #x0000000000000001))
(assert (= var211058 temp10245_204))
(assert (= temp10245_205 #x0000000000000001))
(assert (= var211188 temp10245_205))
(assert (= var3879401 var211188))
(assert (= temp10245_206 #x0000000000000000))
(assert (= var3866802 temp10245_206))
(assert (= temp10245_207 #x0000000000000000))
(assert (= temp10245_208
   (ite (bvslt var3866802 temp10245_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10245_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10245_208)))
(assert (= var3879420 temp10245_209))
(assert (bvslt (ite (bvslt var3866802 temp10245_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10245_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10245_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10245_211 #x0000000000000000))
(assert (= var3879421 temp10245_211))
(assert (= temp10245_212 #x0000000000000001))
(assert (= var3867690 temp10245_212))
(assert (= temp10245_213 #x0000000000000000))
(assert (= temp10245_214
   (ite (bvslt var3867690 temp10245_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10245_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10245_214)))
(assert (= var3879423 temp10245_215))
(assert (bvslt (ite (bvslt var3867690 temp10245_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10245_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10245_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10245_217 #x0000000000000001))
(assert (= var3879424 temp10245_217))
(assert (= temp10245_218 #x0000000000000000))
(assert (= var4079423 temp10245_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10245_219 #x0000000000000002))
(assert (= var4208259 temp10245_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10245_220 #x0000000000000000))
(assert (= var4273820 temp10245_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4862352 var211201))
(assert (= var5124496 var211201))
(assert (= temp10245_221 #x0000000000000000))
(assert (= var5452176 temp10245_221))
(assert (= temp10245_222 #x0000000000000001))
(assert (= var211058 temp10245_222))
(model-add temp10245_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10245_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10245_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10245_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





