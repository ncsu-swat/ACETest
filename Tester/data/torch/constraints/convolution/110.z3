(declare-fun temp146_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp146_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp146_3 () (_ BitVec 64))
(declare-fun temp146_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp146_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp146_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp146_7 () (_ BitVec 64))
(declare-fun temp146_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp146_9 () (_ BitVec 64))
(declare-fun temp146_10 () (_ BitVec 64))
(declare-fun temp146_11 () (_ BitVec 64))
(declare-fun temp146_12 () (_ BitVec 64))
(declare-fun temp146_13 () (_ BitVec 64))
(declare-fun temp146_14 () (_ BitVec 64))
(declare-fun temp146_15 () (_ BitVec 64))
(declare-fun temp146_16 () (_ BitVec 64))
(declare-fun temp146_17 () (_ BitVec 64))
(declare-fun temp146_18 () (_ BitVec 64))
(declare-fun temp146_19 () (_ BitVec 64))
(declare-fun temp146_20 () (_ BitVec 64))
(declare-fun temp146_21 () (_ BitVec 64))
(declare-fun temp146_22 () (_ BitVec 64))
(declare-fun temp146_23 () (_ BitVec 64))
(declare-fun temp146_24 () (_ BitVec 64))
(declare-fun temp146_25 () (_ BitVec 64))
(declare-fun temp146_26 () (_ BitVec 64))
(declare-fun temp146_27 () (_ BitVec 64))
(declare-fun temp146_28 () (_ BitVec 64))
(declare-fun temp146_29 () (_ BitVec 64))
(declare-fun temp146_30 () (_ BitVec 64))
(declare-fun temp146_31 () (_ BitVec 64))
(declare-fun temp146_32 () (_ BitVec 64))
(declare-fun temp146_33 () (_ BitVec 64))
(declare-fun temp146_34 () (_ BitVec 64))
(declare-fun temp146_35 () (_ BitVec 64))
(declare-fun temp146_36 () (_ BitVec 64))
(declare-fun temp146_37 () (_ BitVec 64))
(declare-fun temp146_38 () (_ BitVec 64))
(declare-fun temp146_39 () (_ BitVec 64))
(declare-fun temp146_40 () (_ BitVec 64))
(declare-fun temp146_41 () (_ BitVec 64))
(declare-fun temp146_42 () (_ BitVec 64))
(declare-fun temp146_43 () (_ BitVec 64))
(declare-fun temp146_44 () (_ BitVec 64))
(declare-fun temp146_45 () (_ BitVec 64))
(declare-fun temp146_46 () (_ BitVec 64))
(declare-fun temp146_47 () (_ BitVec 64))
(declare-fun temp146_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp146_49 () (_ BitVec 64))
(declare-fun temp146_50 () (_ BitVec 64))
(declare-fun temp146_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp146_52 () (_ BitVec 64))
(declare-fun temp146_53 () (_ BitVec 64))
(declare-fun temp146_54 () (_ BitVec 64))
(declare-fun temp146_55 () (_ BitVec 64))
(declare-fun temp146_56 () (_ BitVec 64))
(declare-fun temp146_57 () (_ BitVec 64))
(declare-fun temp146_58 () (_ BitVec 64))
(declare-fun temp146_59 () (_ BitVec 64))
(declare-fun temp146_60 () (_ BitVec 64))
(declare-fun temp146_61 () (_ BitVec 64))
(declare-fun temp146_62 () (_ BitVec 64))
(declare-fun temp146_63 () (_ BitVec 64))
(declare-fun temp146_64 () (_ BitVec 64))
(declare-fun temp146_65 () (_ BitVec 64))
(declare-fun temp146_66 () (_ BitVec 64))
(declare-fun temp146_67 () (_ BitVec 64))
(declare-fun temp146_68 () (_ BitVec 64))
(declare-fun temp146_69 () (_ BitVec 64))
(declare-fun temp146_70 () (_ BitVec 64))
(declare-fun temp146_71 () (_ BitVec 64))
(declare-fun temp146_72 () (_ BitVec 64))
(declare-fun temp146_73 () (_ BitVec 64))
(declare-fun temp146_74 () (_ BitVec 64))
(declare-fun temp146_75 () (_ BitVec 64))
(declare-fun temp146_76 () (_ BitVec 64))
(declare-fun temp146_77 () (_ BitVec 64))
(declare-fun temp146_78 () (_ BitVec 64))
(declare-fun temp146_79 () (_ BitVec 64))
(declare-fun temp146_80 () (_ BitVec 64))
(declare-fun temp146_81 () (_ BitVec 64))
(declare-fun temp146_82 () (_ BitVec 64))
(declare-fun temp146_83 () (_ BitVec 64))
(declare-fun temp146_84 () (_ BitVec 64))
(declare-fun temp146_85 () (_ BitVec 64))
(declare-fun temp146_86 () (_ BitVec 64))
(declare-fun temp146_87 () (_ BitVec 64))
(declare-fun temp146_88 () (_ BitVec 64))
(declare-fun temp146_89 () (_ BitVec 64))
(declare-fun temp146_90 () (_ BitVec 64))
(declare-fun temp146_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp146_92 () (_ BitVec 64))
(declare-fun temp146_93 () (_ BitVec 64))
(declare-fun temp146_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp146_95 () (_ BitVec 64))
(declare-fun temp146_96 () (_ BitVec 64))
(declare-fun temp146_97 () (_ BitVec 64))
(declare-fun temp146_98 () (_ BitVec 64))
(declare-fun temp146_99 () (_ BitVec 64))
(declare-fun temp146_100 () (_ BitVec 64))
(declare-fun temp146_101 () (_ BitVec 64))
(declare-fun temp146_102 () (_ BitVec 64))
(declare-fun temp146_103 () (_ BitVec 64))
(declare-fun temp146_104 () (_ BitVec 64))
(declare-fun temp146_105 () (_ BitVec 64))
(declare-fun temp146_106 () (_ BitVec 64))
(declare-fun temp146_107 () (_ BitVec 64))
(declare-fun temp146_108 () (_ BitVec 64))
(declare-fun temp146_109 () (_ BitVec 64))
(declare-fun temp146_110 () (_ BitVec 64))
(declare-fun temp146_111 () (_ BitVec 64))
(declare-fun temp146_112 () (_ BitVec 64))
(declare-fun temp146_113 () (_ BitVec 64))
(declare-fun temp146_114 () (_ BitVec 64))
(declare-fun temp146_115 () (_ BitVec 64))
(declare-fun temp146_116 () (_ BitVec 64))
(declare-fun temp146_117 () (_ BitVec 64))
(declare-fun temp146_118 () (_ BitVec 64))
(declare-fun temp146_119 () (_ BitVec 64))
(declare-fun temp146_120 () (_ BitVec 64))
(declare-fun temp146_121 () (_ BitVec 64))
(declare-fun temp146_122 () (_ BitVec 64))
(declare-fun temp146_123 () (_ BitVec 64))
(declare-fun temp146_124 () (_ BitVec 64))
(declare-fun temp146_125 () (_ BitVec 64))
(declare-fun temp146_126 () (_ BitVec 64))
(declare-fun temp146_127 () (_ BitVec 64))
(declare-fun temp146_128 () (_ BitVec 64))
(declare-fun temp146_129 () (_ BitVec 64))
(declare-fun temp146_130 () (_ BitVec 64))
(declare-fun temp146_131 () (_ BitVec 64))
(declare-fun temp146_132 () (_ BitVec 64))
(declare-fun temp146_133 () (_ BitVec 64))
(declare-fun temp146_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp146_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp146_136 () (_ BitVec 64))
(declare-fun temp146_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp146_138 () (_ BitVec 64))
(declare-fun temp146_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp146_140 () (_ BitVec 64))
(declare-fun temp146_141 () (_ BitVec 64))
(declare-fun temp146_142 () (_ BitVec 64))
(declare-fun temp146_143 () (_ BitVec 64))
(declare-fun temp146_144 () (_ BitVec 64))
(declare-fun temp146_145 () (_ BitVec 64))
(declare-fun temp146_146 () (_ BitVec 64))
(declare-fun temp146_147 () (_ BitVec 64))
(declare-fun temp146_148 () (_ BitVec 64))
(declare-fun temp146_149 () (_ BitVec 64))
(declare-fun temp146_150 () (_ BitVec 64))
(declare-fun temp146_151 () (_ BitVec 64))
(declare-fun temp146_152 () (_ BitVec 64))
(declare-fun temp146_153 () (_ BitVec 64))
(declare-fun temp146_154 () (_ BitVec 64))
(declare-fun temp146_155 () (_ BitVec 64))
(declare-fun temp146_157 () (_ BitVec 64))
(declare-fun temp146_158 () (_ BitVec 64))
(declare-fun temp146_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp146_159 () (_ BitVec 64))
(declare-fun temp146_160 () (_ BitVec 64))
(declare-fun temp146_162 () (_ BitVec 64))
(declare-fun temp146_163 () (_ BitVec 64))
(declare-fun temp146_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp146_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp146_165 () (_ BitVec 64))
(declare-fun temp146_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp146_167 () (_ BitVec 64))
(declare-fun temp146_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp146_169 () (_ BitVec 64))
(declare-fun temp146_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp146_171 () (_ BitVec 64))
(declare-fun temp146_172 () (_ BitVec 64))
(declare-fun temp146_173 () (_ BitVec 64))
(declare-fun temp146_174 () (_ BitVec 64))
(declare-fun temp146_175 () (_ BitVec 64))
(declare-fun temp146_176 () (_ BitVec 64))
(declare-fun temp146_177 () (_ BitVec 64))
(declare-fun temp146_178 () (_ BitVec 64))
(declare-fun temp146_179 () (_ BitVec 64))
(declare-fun temp146_180 () (_ BitVec 64))
(declare-fun temp146_181 () (_ BitVec 64))
(declare-fun temp146_182 () (_ BitVec 64))
(declare-fun temp146_183 () (_ BitVec 64))
(declare-fun temp146_184 () (_ BitVec 64))
(declare-fun temp146_185 () (_ BitVec 64))
(declare-fun temp146_186 () (_ BitVec 64))
(declare-fun temp146_187 () (_ BitVec 64))
(declare-fun temp146_188 () (_ BitVec 64))
(declare-fun temp146_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp146_190 () (_ BitVec 64))
(declare-fun temp146_192 () (_ BitVec 64))
(declare-fun temp146_193 () (_ BitVec 64))
(declare-fun temp146_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp146_194 () (_ BitVec 64))
(declare-fun temp146_195 () (_ BitVec 64))
(declare-fun temp146_197 () (_ BitVec 64))
(declare-fun temp146_198 () (_ BitVec 64))
(declare-fun temp146_196 () (_ BitVec 64))
(declare-fun temp146_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp146_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp146_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp146_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp146_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp146_204 () (_ BitVec 64))
(declare-fun temp146_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp146_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp146_207 () (_ BitVec 64))
(declare-fun temp146_208 () (_ BitVec 64))
(declare-fun temp146_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp146_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp146_211 () (_ BitVec 64))
(declare-fun temp146_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp146_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp146_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp146_216 () (_ BitVec 64))
(declare-fun temp146_215 () (_ BitVec 64))
(declare-fun temp146_217 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp146_218 () (_ BitVec 64))
(declare-fun temp146_219 () (_ BitVec 64))
(declare-fun temp146_220 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp146_221 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp146_222 () (_ BitVec 64))
(declare-fun temp146_224 () (_ BitVec 64))
(declare-fun temp146_223 () (_ BitVec 64))
(declare-fun temp146_225 () (_ BitVec 64))
(assert (= temp146_1 #x0000000000000001))
(assert (= var77203 temp146_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp146_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp146_2)))
(assert (= temp146_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp146_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp146_4 #x0000000000000000))
(assert (= var210941 temp146_4))
(assert (= temp146_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp146_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp146_6 #x0000000000000000))
(assert (= var210986 temp146_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp146_7 #x0000000000000000))
(assert (= temp146_8 temp146_7))
(assert (= temp146_9 (select ARGNAME_padding_NAMEEND_VAL temp146_8)))
(assert (= temp146_10 #x0000000000000001))
(assert (= temp146_11 temp146_10))
(assert (= temp146_12 (select ARGNAME_padding_NAMEEND_VAL temp146_11)))
(assert (= temp146_13 #x0000000000000002))
(assert (= temp146_14 temp146_13))
(assert (= temp146_15 (select ARGNAME_padding_NAMEEND_VAL temp146_14)))
(assert (= temp146_16 #x0000000000000003))
(assert (= temp146_17 temp146_16))
(assert (= temp146_18 (select ARGNAME_padding_NAMEEND_VAL temp146_17)))
(assert (= temp146_19 #x0000000000000004))
(assert (= temp146_20 temp146_19))
(assert (= temp146_21 (select ARGNAME_padding_NAMEEND_VAL temp146_20)))
(assert (= temp146_22 #x0000000000000005))
(assert (= temp146_23 temp146_22))
(assert (= temp146_24 (select ARGNAME_padding_NAMEEND_VAL temp146_23)))
(assert (= temp146_25 #x0000000000000000))
(assert (= temp146_26 #x0000000000000000))
(assert (= temp146_27 temp146_26))
(assert (= temp146_28 (select ARGNAME_padding_NAMEEND_VAL temp146_27)))
(assert (= temp146_29 #x0000000000000000))
(assert (= temp146_30 #x0000000000000001))
(assert (= temp146_31 temp146_30))
(assert (= temp146_32 (select ARGNAME_padding_NAMEEND_VAL temp146_31)))
(assert (= temp146_33 #x0000000000000000))
(assert (= temp146_34 #x0000000000000002))
(assert (= temp146_35 temp146_34))
(assert (= temp146_36 (select ARGNAME_padding_NAMEEND_VAL temp146_35)))
(assert (= temp146_37 #x0000000000000000))
(assert (= temp146_38 #x0000000000000003))
(assert (= temp146_39 temp146_38))
(assert (= temp146_40 (select ARGNAME_padding_NAMEEND_VAL temp146_39)))
(assert (= temp146_41 #x0000000000000000))
(assert (= temp146_42 #x0000000000000004))
(assert (= temp146_43 temp146_42))
(assert (= temp146_44 (select ARGNAME_padding_NAMEEND_VAL temp146_43)))
(assert (= temp146_45 #x0000000000000000))
(assert (= temp146_46 #x0000000000000005))
(assert (= temp146_47 temp146_46))
(assert (= temp146_48 (select ARGNAME_padding_NAMEEND_VAL temp146_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp146_28 temp146_25)
             (bvslt temp146_32 temp146_29)
             (bvslt temp146_36 temp146_33)
             (bvslt temp146_40 temp146_37)
             (bvslt temp146_44 temp146_41)
             (bvslt temp146_48 temp146_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp146_49 #x0000000000000000))
(assert (= var1191714 temp146_49))
(assert (= temp146_50 #x0000000000000000))
(assert (= temp146_51 temp146_50))
(assert (= temp146_52 (select ARGNAME_output_padding_NAMEEND_VAL temp146_51)))
(assert (= temp146_53 #x0000000000000001))
(assert (= temp146_54 temp146_53))
(assert (= temp146_55 (select ARGNAME_output_padding_NAMEEND_VAL temp146_54)))
(assert (= temp146_56 #x0000000000000002))
(assert (= temp146_57 temp146_56))
(assert (= temp146_58 (select ARGNAME_output_padding_NAMEEND_VAL temp146_57)))
(assert (= temp146_59 #x0000000000000003))
(assert (= temp146_60 temp146_59))
(assert (= temp146_61 (select ARGNAME_output_padding_NAMEEND_VAL temp146_60)))
(assert (= temp146_62 #x0000000000000004))
(assert (= temp146_63 temp146_62))
(assert (= temp146_64 (select ARGNAME_output_padding_NAMEEND_VAL temp146_63)))
(assert (= temp146_65 #x0000000000000005))
(assert (= temp146_66 temp146_65))
(assert (= temp146_67 (select ARGNAME_output_padding_NAMEEND_VAL temp146_66)))
(assert (= temp146_68 #x0000000000000000))
(assert (= temp146_69 #x0000000000000000))
(assert (= temp146_70 temp146_69))
(assert (= temp146_71 (select ARGNAME_output_padding_NAMEEND_VAL temp146_70)))
(assert (= temp146_72 #x0000000000000000))
(assert (= temp146_73 #x0000000000000001))
(assert (= temp146_74 temp146_73))
(assert (= temp146_75 (select ARGNAME_output_padding_NAMEEND_VAL temp146_74)))
(assert (= temp146_76 #x0000000000000000))
(assert (= temp146_77 #x0000000000000002))
(assert (= temp146_78 temp146_77))
(assert (= temp146_79 (select ARGNAME_output_padding_NAMEEND_VAL temp146_78)))
(assert (= temp146_80 #x0000000000000000))
(assert (= temp146_81 #x0000000000000003))
(assert (= temp146_82 temp146_81))
(assert (= temp146_83 (select ARGNAME_output_padding_NAMEEND_VAL temp146_82)))
(assert (= temp146_84 #x0000000000000000))
(assert (= temp146_85 #x0000000000000004))
(assert (= temp146_86 temp146_85))
(assert (= temp146_87 (select ARGNAME_output_padding_NAMEEND_VAL temp146_86)))
(assert (= temp146_88 #x0000000000000000))
(assert (= temp146_89 #x0000000000000005))
(assert (= temp146_90 temp146_89))
(assert (= temp146_91 (select ARGNAME_output_padding_NAMEEND_VAL temp146_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp146_71 temp146_68)
             (bvslt temp146_75 temp146_72)
             (bvslt temp146_79 temp146_76)
             (bvslt temp146_83 temp146_80)
             (bvslt temp146_87 temp146_84)
             (bvslt temp146_91 temp146_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp146_92 #x0000000000000000))
(assert (= var1191725 temp146_92))
(assert (= temp146_93 #x0000000000000000))
(assert (= temp146_94 temp146_93))
(assert (= temp146_95 (select ARGNAME_stride_NAMEEND_VAL temp146_94)))
(assert (= temp146_96 #x0000000000000001))
(assert (= temp146_97 temp146_96))
(assert (= temp146_98 (select ARGNAME_stride_NAMEEND_VAL temp146_97)))
(assert (= temp146_99 #x0000000000000002))
(assert (= temp146_100 temp146_99))
(assert (= temp146_101 (select ARGNAME_stride_NAMEEND_VAL temp146_100)))
(assert (= temp146_102 #x0000000000000003))
(assert (= temp146_103 temp146_102))
(assert (= temp146_104 (select ARGNAME_stride_NAMEEND_VAL temp146_103)))
(assert (= temp146_105 #x0000000000000004))
(assert (= temp146_106 temp146_105))
(assert (= temp146_107 (select ARGNAME_stride_NAMEEND_VAL temp146_106)))
(assert (= temp146_108 #x0000000000000005))
(assert (= temp146_109 temp146_108))
(assert (= temp146_110 (select ARGNAME_stride_NAMEEND_VAL temp146_109)))
(assert (= temp146_111 #x0000000000000000))
(assert (= temp146_112 #x0000000000000000))
(assert (= temp146_113 temp146_112))
(assert (= temp146_114 (select ARGNAME_stride_NAMEEND_VAL temp146_113)))
(assert (= temp146_115 #x0000000000000000))
(assert (= temp146_116 #x0000000000000001))
(assert (= temp146_117 temp146_116))
(assert (= temp146_118 (select ARGNAME_stride_NAMEEND_VAL temp146_117)))
(assert (= temp146_119 #x0000000000000000))
(assert (= temp146_120 #x0000000000000002))
(assert (= temp146_121 temp146_120))
(assert (= temp146_122 (select ARGNAME_stride_NAMEEND_VAL temp146_121)))
(assert (= temp146_123 #x0000000000000000))
(assert (= temp146_124 #x0000000000000003))
(assert (= temp146_125 temp146_124))
(assert (= temp146_126 (select ARGNAME_stride_NAMEEND_VAL temp146_125)))
(assert (= temp146_127 #x0000000000000000))
(assert (= temp146_128 #x0000000000000004))
(assert (= temp146_129 temp146_128))
(assert (= temp146_130 (select ARGNAME_stride_NAMEEND_VAL temp146_129)))
(assert (= temp146_131 #x0000000000000000))
(assert (= temp146_132 #x0000000000000005))
(assert (= temp146_133 temp146_132))
(assert (= temp146_134 (select ARGNAME_stride_NAMEEND_VAL temp146_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp146_114 temp146_111)
             (bvsle temp146_118 temp146_115)
             (bvsle temp146_122 temp146_119)
             (bvsle temp146_126 temp146_123)
             (bvsle temp146_130 temp146_127)
             (bvsle temp146_134 temp146_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp146_135 #x0000000000000000))
(assert (= var1191735 temp146_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp146_136 #x0000000000000001))
(assert (= var1191747 temp146_136))
(assert (= temp146_137 #x0000000000000000))
(assert (= var1179826 temp146_137))
(assert (= temp146_138 #x0000000000000000))
(assert (= temp146_139 temp146_138))
(assert (= temp146_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp146_139)))
(assert (= temp146_141 #x0000000000000001))
(assert (= temp146_142 temp146_141))
(assert (= temp146_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp146_142)))
(assert (= temp146_144 #x0000000000000002))
(assert (= temp146_145 temp146_144))
(assert (= temp146_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp146_145)))
(assert (= temp146_147 #x0000000000000003))
(assert (= temp146_148 temp146_147))
(assert (= temp146_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp146_148)))
(assert (= temp146_150 #x0000000000000004))
(assert (= temp146_151 temp146_150))
(assert (= temp146_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp146_151)))
(assert (= temp146_153 #x0000000000000005))
(assert (= temp146_154 temp146_153))
(assert (= temp146_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp146_154)))
(assert (= temp146_157 var1179826))
(assert (= temp146_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp146_157)))
(assert (= temp146_156 temp146_158))
(assert (= var1191780
   (ite (bvslt temp146_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp146_159 #x0000000000000000))
(assert (= var1191780 temp146_159))
(assert (= temp146_160 #x0000000000000000))
(assert (= var1179826 temp146_160))
(assert (= temp146_162 var1179826))
(assert (= temp146_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp146_162)))
(assert (= temp146_161 temp146_163))
(assert (= var1191802 (bvsmod temp146_161 ARGNAME_groups_NAMEEND)))
(assert (= temp146_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp146_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp146_165 #x0000000000000001))
(assert (= var1191803 temp146_165))
(assert (= temp146_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp146_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp146_167 #x0000000000000001))
(assert (= var1191823 temp146_167))
(assert (= temp146_168 #x0000000000000001))
(assert (= var1180714 temp146_168))
(assert (= temp146_169 #x0000000000000000))
(assert (= temp146_170 temp146_169))
(assert (= temp146_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp146_170)))
(assert (= temp146_172 #x0000000000000001))
(assert (= temp146_173 temp146_172))
(assert (= temp146_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp146_173)))
(assert (= temp146_175 #x0000000000000002))
(assert (= temp146_176 temp146_175))
(assert (= temp146_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp146_176)))
(assert (= temp146_178 #x0000000000000003))
(assert (= temp146_179 temp146_178))
(assert (= temp146_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp146_179)))
(assert (= temp146_181 #x0000000000000004))
(assert (= temp146_182 temp146_181))
(assert (= temp146_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp146_182)))
(assert (= temp146_184 #x0000000000000005))
(assert (= temp146_185 temp146_184))
(assert (= temp146_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp146_185)))
(assert (= temp146_187 #x0000000000000000))
(assert (= temp146_188
   (ite (bvslt var1180714 temp146_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp146_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp146_188)))
(assert (= var1191831 temp146_189))
(assert (bvslt (ite (bvslt var1180714 temp146_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp146_190 #x0000000000000001))
(assert (= var1180714 temp146_190))
(assert (= temp146_192 var1180714))
(assert (= temp146_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp146_192)))
(assert (= temp146_191 temp146_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp146_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp146_194 #x0000000000000001))
(assert (= var1191836 temp146_194))
(assert (= temp146_195 #x0000000000000000))
(assert (= var1179826 temp146_195))
(assert (= temp146_197 var1179826))
(assert (= temp146_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp146_197)))
(assert (= temp146_196 temp146_198))
(assert (= temp146_199 #x0000000000000002))
(assert (= var1586025 temp146_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp146_200 #x0000000000000001))
(assert (= var1191993 temp146_200))
(assert (= temp146_201 #x0000000000000001))
(assert (= var2700303 temp146_201))
(assert (= temp146_202 #x0000000000000001))
(assert (= var2962447 temp146_202))
(assert (= temp146_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp146_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp146_204 #x0000000000000001))
(assert (= var211058 temp146_204))
(assert (= temp146_205 #x0000000000000001))
(assert (= var211188 temp146_205))
(assert (= var3879401 var211188))
(assert (= temp146_206 #x0000000000000000))
(assert (= var3866802 temp146_206))
(assert (= temp146_207 #x0000000000000000))
(assert (= temp146_208
   (ite (bvslt var3866802 temp146_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp146_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp146_208)))
(assert (= var3879420 temp146_209))
(assert (bvslt (ite (bvslt var3866802 temp146_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp146_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp146_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp146_211 #x0000000000000001))
(assert (= var3879421 temp146_211))
(assert (= temp146_212 #x0000000000000000))
(assert (= var4079423 temp146_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp146_213 #x0000000000000002))
(assert (= var4208259 temp146_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp146_214 #x0000000000000000))
(assert (= var4273820 temp146_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp146_216 #xffffffffffffffff))
(assert (= temp146_215 temp146_216))
(assert (= temp146_217 #x0000000000000001))
(assert (= var197674 temp146_217))
(assert (= temp146_218 #x0000000000000000))
(assert (= temp146_219
   (ite (bvslt var197674 temp146_218)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp146_220 (select ARGNAME_input_NAMEEND_DIMSIZE temp146_219)))
(assert (= var211595 temp146_220))
(assert (bvslt (ite (bvslt var197674 temp146_218)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp146_221 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp146_221) #x0000000000000001 #x0000000000000000)))
(assert (= temp146_222 #x0000000000000001))
(assert (= var211596 temp146_222))
(assert (= temp146_224 #xffffffffffffffff))
(assert (= temp146_223 temp146_224))
(assert (= temp146_225 #x0000000000000001))
(assert (= var211058 temp146_225))
(model-add temp146_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp146_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp146_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp146_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






