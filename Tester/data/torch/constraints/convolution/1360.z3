(declare-fun temp10544_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10544_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10544_3 () (_ BitVec 64))
(declare-fun temp10544_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10544_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10544_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10544_7 () (_ BitVec 64))
(declare-fun temp10544_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10544_9 () (_ BitVec 64))
(declare-fun temp10544_10 () (_ BitVec 64))
(declare-fun temp10544_11 () (_ BitVec 64))
(declare-fun temp10544_12 () (_ BitVec 64))
(declare-fun temp10544_13 () (_ BitVec 64))
(declare-fun temp10544_14 () (_ BitVec 64))
(declare-fun temp10544_15 () (_ BitVec 64))
(declare-fun temp10544_16 () (_ BitVec 64))
(declare-fun temp10544_17 () (_ BitVec 64))
(declare-fun temp10544_18 () (_ BitVec 64))
(declare-fun temp10544_19 () (_ BitVec 64))
(declare-fun temp10544_20 () (_ BitVec 64))
(declare-fun temp10544_21 () (_ BitVec 64))
(declare-fun temp10544_22 () (_ BitVec 64))
(declare-fun temp10544_23 () (_ BitVec 64))
(declare-fun temp10544_24 () (_ BitVec 64))
(declare-fun temp10544_25 () (_ BitVec 64))
(declare-fun temp10544_26 () (_ BitVec 64))
(declare-fun temp10544_27 () (_ BitVec 64))
(declare-fun temp10544_28 () (_ BitVec 64))
(declare-fun temp10544_29 () (_ BitVec 64))
(declare-fun temp10544_30 () (_ BitVec 64))
(declare-fun temp10544_31 () (_ BitVec 64))
(declare-fun temp10544_32 () (_ BitVec 64))
(declare-fun temp10544_33 () (_ BitVec 64))
(declare-fun temp10544_34 () (_ BitVec 64))
(declare-fun temp10544_35 () (_ BitVec 64))
(declare-fun temp10544_36 () (_ BitVec 64))
(declare-fun temp10544_37 () (_ BitVec 64))
(declare-fun temp10544_38 () (_ BitVec 64))
(declare-fun temp10544_39 () (_ BitVec 64))
(declare-fun temp10544_40 () (_ BitVec 64))
(declare-fun temp10544_41 () (_ BitVec 64))
(declare-fun temp10544_42 () (_ BitVec 64))
(declare-fun temp10544_43 () (_ BitVec 64))
(declare-fun temp10544_44 () (_ BitVec 64))
(declare-fun temp10544_45 () (_ BitVec 64))
(declare-fun temp10544_46 () (_ BitVec 64))
(declare-fun temp10544_47 () (_ BitVec 64))
(declare-fun temp10544_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10544_49 () (_ BitVec 64))
(declare-fun temp10544_50 () (_ BitVec 64))
(declare-fun temp10544_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10544_52 () (_ BitVec 64))
(declare-fun temp10544_53 () (_ BitVec 64))
(declare-fun temp10544_54 () (_ BitVec 64))
(declare-fun temp10544_55 () (_ BitVec 64))
(declare-fun temp10544_56 () (_ BitVec 64))
(declare-fun temp10544_57 () (_ BitVec 64))
(declare-fun temp10544_58 () (_ BitVec 64))
(declare-fun temp10544_59 () (_ BitVec 64))
(declare-fun temp10544_60 () (_ BitVec 64))
(declare-fun temp10544_61 () (_ BitVec 64))
(declare-fun temp10544_62 () (_ BitVec 64))
(declare-fun temp10544_63 () (_ BitVec 64))
(declare-fun temp10544_64 () (_ BitVec 64))
(declare-fun temp10544_65 () (_ BitVec 64))
(declare-fun temp10544_66 () (_ BitVec 64))
(declare-fun temp10544_67 () (_ BitVec 64))
(declare-fun temp10544_68 () (_ BitVec 64))
(declare-fun temp10544_69 () (_ BitVec 64))
(declare-fun temp10544_70 () (_ BitVec 64))
(declare-fun temp10544_71 () (_ BitVec 64))
(declare-fun temp10544_72 () (_ BitVec 64))
(declare-fun temp10544_73 () (_ BitVec 64))
(declare-fun temp10544_74 () (_ BitVec 64))
(declare-fun temp10544_75 () (_ BitVec 64))
(declare-fun temp10544_76 () (_ BitVec 64))
(declare-fun temp10544_77 () (_ BitVec 64))
(declare-fun temp10544_78 () (_ BitVec 64))
(declare-fun temp10544_79 () (_ BitVec 64))
(declare-fun temp10544_80 () (_ BitVec 64))
(declare-fun temp10544_81 () (_ BitVec 64))
(declare-fun temp10544_82 () (_ BitVec 64))
(declare-fun temp10544_83 () (_ BitVec 64))
(declare-fun temp10544_84 () (_ BitVec 64))
(declare-fun temp10544_85 () (_ BitVec 64))
(declare-fun temp10544_86 () (_ BitVec 64))
(declare-fun temp10544_87 () (_ BitVec 64))
(declare-fun temp10544_88 () (_ BitVec 64))
(declare-fun temp10544_89 () (_ BitVec 64))
(declare-fun temp10544_90 () (_ BitVec 64))
(declare-fun temp10544_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10544_92 () (_ BitVec 64))
(declare-fun temp10544_93 () (_ BitVec 64))
(declare-fun temp10544_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10544_95 () (_ BitVec 64))
(declare-fun temp10544_96 () (_ BitVec 64))
(declare-fun temp10544_97 () (_ BitVec 64))
(declare-fun temp10544_98 () (_ BitVec 64))
(declare-fun temp10544_99 () (_ BitVec 64))
(declare-fun temp10544_100 () (_ BitVec 64))
(declare-fun temp10544_101 () (_ BitVec 64))
(declare-fun temp10544_102 () (_ BitVec 64))
(declare-fun temp10544_103 () (_ BitVec 64))
(declare-fun temp10544_104 () (_ BitVec 64))
(declare-fun temp10544_105 () (_ BitVec 64))
(declare-fun temp10544_106 () (_ BitVec 64))
(declare-fun temp10544_107 () (_ BitVec 64))
(declare-fun temp10544_108 () (_ BitVec 64))
(declare-fun temp10544_109 () (_ BitVec 64))
(declare-fun temp10544_110 () (_ BitVec 64))
(declare-fun temp10544_111 () (_ BitVec 64))
(declare-fun temp10544_112 () (_ BitVec 64))
(declare-fun temp10544_113 () (_ BitVec 64))
(declare-fun temp10544_114 () (_ BitVec 64))
(declare-fun temp10544_115 () (_ BitVec 64))
(declare-fun temp10544_116 () (_ BitVec 64))
(declare-fun temp10544_117 () (_ BitVec 64))
(declare-fun temp10544_118 () (_ BitVec 64))
(declare-fun temp10544_119 () (_ BitVec 64))
(declare-fun temp10544_120 () (_ BitVec 64))
(declare-fun temp10544_121 () (_ BitVec 64))
(declare-fun temp10544_122 () (_ BitVec 64))
(declare-fun temp10544_123 () (_ BitVec 64))
(declare-fun temp10544_124 () (_ BitVec 64))
(declare-fun temp10544_125 () (_ BitVec 64))
(declare-fun temp10544_126 () (_ BitVec 64))
(declare-fun temp10544_127 () (_ BitVec 64))
(declare-fun temp10544_128 () (_ BitVec 64))
(declare-fun temp10544_129 () (_ BitVec 64))
(declare-fun temp10544_130 () (_ BitVec 64))
(declare-fun temp10544_131 () (_ BitVec 64))
(declare-fun temp10544_132 () (_ BitVec 64))
(declare-fun temp10544_133 () (_ BitVec 64))
(declare-fun temp10544_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10544_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10544_136 () (_ BitVec 64))
(declare-fun temp10544_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10544_138 () (_ BitVec 64))
(declare-fun temp10544_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10544_140 () (_ BitVec 64))
(declare-fun temp10544_141 () (_ BitVec 64))
(declare-fun temp10544_142 () (_ BitVec 64))
(declare-fun temp10544_143 () (_ BitVec 64))
(declare-fun temp10544_144 () (_ BitVec 64))
(declare-fun temp10544_145 () (_ BitVec 64))
(declare-fun temp10544_146 () (_ BitVec 64))
(declare-fun temp10544_147 () (_ BitVec 64))
(declare-fun temp10544_148 () (_ BitVec 64))
(declare-fun temp10544_149 () (_ BitVec 64))
(declare-fun temp10544_150 () (_ BitVec 64))
(declare-fun temp10544_151 () (_ BitVec 64))
(declare-fun temp10544_152 () (_ BitVec 64))
(declare-fun temp10544_153 () (_ BitVec 64))
(declare-fun temp10544_154 () (_ BitVec 64))
(declare-fun temp10544_155 () (_ BitVec 64))
(declare-fun temp10544_157 () (_ BitVec 64))
(declare-fun temp10544_158 () (_ BitVec 64))
(declare-fun temp10544_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10544_159 () (_ BitVec 64))
(declare-fun temp10544_160 () (_ BitVec 64))
(declare-fun temp10544_162 () (_ BitVec 64))
(declare-fun temp10544_163 () (_ BitVec 64))
(declare-fun temp10544_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10544_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10544_165 () (_ BitVec 64))
(declare-fun temp10544_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10544_167 () (_ BitVec 64))
(declare-fun temp10544_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10544_169 () (_ BitVec 64))
(declare-fun temp10544_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10544_171 () (_ BitVec 64))
(declare-fun temp10544_172 () (_ BitVec 64))
(declare-fun temp10544_173 () (_ BitVec 64))
(declare-fun temp10544_174 () (_ BitVec 64))
(declare-fun temp10544_175 () (_ BitVec 64))
(declare-fun temp10544_176 () (_ BitVec 64))
(declare-fun temp10544_177 () (_ BitVec 64))
(declare-fun temp10544_178 () (_ BitVec 64))
(declare-fun temp10544_179 () (_ BitVec 64))
(declare-fun temp10544_180 () (_ BitVec 64))
(declare-fun temp10544_181 () (_ BitVec 64))
(declare-fun temp10544_182 () (_ BitVec 64))
(declare-fun temp10544_183 () (_ BitVec 64))
(declare-fun temp10544_184 () (_ BitVec 64))
(declare-fun temp10544_185 () (_ BitVec 64))
(declare-fun temp10544_186 () (_ BitVec 64))
(declare-fun temp10544_187 () (_ BitVec 64))
(declare-fun temp10544_188 () (_ BitVec 64))
(declare-fun temp10544_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10544_190 () (_ BitVec 64))
(declare-fun temp10544_192 () (_ BitVec 64))
(declare-fun temp10544_193 () (_ BitVec 64))
(declare-fun temp10544_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10544_194 () (_ BitVec 64))
(declare-fun temp10544_195 () (_ BitVec 64))
(declare-fun temp10544_197 () (_ BitVec 64))
(declare-fun temp10544_198 () (_ BitVec 64))
(declare-fun temp10544_196 () (_ BitVec 64))
(declare-fun temp10544_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10544_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10544_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10544_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10544_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10544_204 () (_ BitVec 64))
(declare-fun temp10544_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10544_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10544_207 () (_ BitVec 64))
(declare-fun temp10544_208 () (_ BitVec 64))
(declare-fun temp10544_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10544_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10544_211 () (_ BitVec 64))
(declare-fun temp10544_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10544_213 () (_ BitVec 64))
(declare-fun temp10544_214 () (_ BitVec 64))
(declare-fun temp10544_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10544_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10544_217 () (_ BitVec 64))
(declare-fun temp10544_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10544_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10544_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var5124496 () (_ BitVec 64))
(declare-fun var211388 () (_ BitVec 64))
(declare-fun temp10544_221 () (_ BitVec 64))
(declare-fun var211389 () (_ BitVec 64))
(declare-fun var6045517 () (_ BitVec 64))
(declare-fun temp10544_223 () (_ BitVec 64))
(declare-fun temp10544_222 () (_ BitVec 64))
(declare-fun temp10544_224 () (_ BitVec 64))
(declare-fun var6884842 () (_ BitVec 64))
(declare-fun temp10544_226 () (_ BitVec 64))
(declare-fun temp10544_225 () (_ BitVec 64))
(declare-fun temp10544_227 () (_ BitVec 64))
(assert (= temp10544_1 #x0000000000000001))
(assert (= var77203 temp10544_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10544_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10544_2)))
(assert (= temp10544_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10544_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10544_4 #x0000000000000000))
(assert (= var210941 temp10544_4))
(assert (= temp10544_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10544_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10544_6 #x0000000000000000))
(assert (= var210986 temp10544_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10544_7 #x0000000000000000))
(assert (= temp10544_8 temp10544_7))
(assert (= temp10544_9 (select ARGNAME_padding_NAMEEND_VAL temp10544_8)))
(assert (= temp10544_10 #x0000000000000001))
(assert (= temp10544_11 temp10544_10))
(assert (= temp10544_12 (select ARGNAME_padding_NAMEEND_VAL temp10544_11)))
(assert (= temp10544_13 #x0000000000000002))
(assert (= temp10544_14 temp10544_13))
(assert (= temp10544_15 (select ARGNAME_padding_NAMEEND_VAL temp10544_14)))
(assert (= temp10544_16 #x0000000000000003))
(assert (= temp10544_17 temp10544_16))
(assert (= temp10544_18 (select ARGNAME_padding_NAMEEND_VAL temp10544_17)))
(assert (= temp10544_19 #x0000000000000004))
(assert (= temp10544_20 temp10544_19))
(assert (= temp10544_21 (select ARGNAME_padding_NAMEEND_VAL temp10544_20)))
(assert (= temp10544_22 #x0000000000000005))
(assert (= temp10544_23 temp10544_22))
(assert (= temp10544_24 (select ARGNAME_padding_NAMEEND_VAL temp10544_23)))
(assert (= temp10544_25 #x0000000000000000))
(assert (= temp10544_26 #x0000000000000000))
(assert (= temp10544_27 temp10544_26))
(assert (= temp10544_28 (select ARGNAME_padding_NAMEEND_VAL temp10544_27)))
(assert (= temp10544_29 #x0000000000000000))
(assert (= temp10544_30 #x0000000000000001))
(assert (= temp10544_31 temp10544_30))
(assert (= temp10544_32 (select ARGNAME_padding_NAMEEND_VAL temp10544_31)))
(assert (= temp10544_33 #x0000000000000000))
(assert (= temp10544_34 #x0000000000000002))
(assert (= temp10544_35 temp10544_34))
(assert (= temp10544_36 (select ARGNAME_padding_NAMEEND_VAL temp10544_35)))
(assert (= temp10544_37 #x0000000000000000))
(assert (= temp10544_38 #x0000000000000003))
(assert (= temp10544_39 temp10544_38))
(assert (= temp10544_40 (select ARGNAME_padding_NAMEEND_VAL temp10544_39)))
(assert (= temp10544_41 #x0000000000000000))
(assert (= temp10544_42 #x0000000000000004))
(assert (= temp10544_43 temp10544_42))
(assert (= temp10544_44 (select ARGNAME_padding_NAMEEND_VAL temp10544_43)))
(assert (= temp10544_45 #x0000000000000000))
(assert (= temp10544_46 #x0000000000000005))
(assert (= temp10544_47 temp10544_46))
(assert (= temp10544_48 (select ARGNAME_padding_NAMEEND_VAL temp10544_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10544_28 temp10544_25)
             (bvslt temp10544_32 temp10544_29)
             (bvslt temp10544_36 temp10544_33)
             (bvslt temp10544_40 temp10544_37)
             (bvslt temp10544_44 temp10544_41)
             (bvslt temp10544_48 temp10544_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10544_49 #x0000000000000000))
(assert (= var1191714 temp10544_49))
(assert (= temp10544_50 #x0000000000000000))
(assert (= temp10544_51 temp10544_50))
(assert (= temp10544_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10544_51)))
(assert (= temp10544_53 #x0000000000000001))
(assert (= temp10544_54 temp10544_53))
(assert (= temp10544_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10544_54)))
(assert (= temp10544_56 #x0000000000000002))
(assert (= temp10544_57 temp10544_56))
(assert (= temp10544_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10544_57)))
(assert (= temp10544_59 #x0000000000000003))
(assert (= temp10544_60 temp10544_59))
(assert (= temp10544_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10544_60)))
(assert (= temp10544_62 #x0000000000000004))
(assert (= temp10544_63 temp10544_62))
(assert (= temp10544_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10544_63)))
(assert (= temp10544_65 #x0000000000000005))
(assert (= temp10544_66 temp10544_65))
(assert (= temp10544_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10544_66)))
(assert (= temp10544_68 #x0000000000000000))
(assert (= temp10544_69 #x0000000000000000))
(assert (= temp10544_70 temp10544_69))
(assert (= temp10544_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10544_70)))
(assert (= temp10544_72 #x0000000000000000))
(assert (= temp10544_73 #x0000000000000001))
(assert (= temp10544_74 temp10544_73))
(assert (= temp10544_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10544_74)))
(assert (= temp10544_76 #x0000000000000000))
(assert (= temp10544_77 #x0000000000000002))
(assert (= temp10544_78 temp10544_77))
(assert (= temp10544_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10544_78)))
(assert (= temp10544_80 #x0000000000000000))
(assert (= temp10544_81 #x0000000000000003))
(assert (= temp10544_82 temp10544_81))
(assert (= temp10544_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10544_82)))
(assert (= temp10544_84 #x0000000000000000))
(assert (= temp10544_85 #x0000000000000004))
(assert (= temp10544_86 temp10544_85))
(assert (= temp10544_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10544_86)))
(assert (= temp10544_88 #x0000000000000000))
(assert (= temp10544_89 #x0000000000000005))
(assert (= temp10544_90 temp10544_89))
(assert (= temp10544_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10544_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10544_71 temp10544_68)
             (bvslt temp10544_75 temp10544_72)
             (bvslt temp10544_79 temp10544_76)
             (bvslt temp10544_83 temp10544_80)
             (bvslt temp10544_87 temp10544_84)
             (bvslt temp10544_91 temp10544_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10544_92 #x0000000000000000))
(assert (= var1191725 temp10544_92))
(assert (= temp10544_93 #x0000000000000000))
(assert (= temp10544_94 temp10544_93))
(assert (= temp10544_95 (select ARGNAME_stride_NAMEEND_VAL temp10544_94)))
(assert (= temp10544_96 #x0000000000000001))
(assert (= temp10544_97 temp10544_96))
(assert (= temp10544_98 (select ARGNAME_stride_NAMEEND_VAL temp10544_97)))
(assert (= temp10544_99 #x0000000000000002))
(assert (= temp10544_100 temp10544_99))
(assert (= temp10544_101 (select ARGNAME_stride_NAMEEND_VAL temp10544_100)))
(assert (= temp10544_102 #x0000000000000003))
(assert (= temp10544_103 temp10544_102))
(assert (= temp10544_104 (select ARGNAME_stride_NAMEEND_VAL temp10544_103)))
(assert (= temp10544_105 #x0000000000000004))
(assert (= temp10544_106 temp10544_105))
(assert (= temp10544_107 (select ARGNAME_stride_NAMEEND_VAL temp10544_106)))
(assert (= temp10544_108 #x0000000000000005))
(assert (= temp10544_109 temp10544_108))
(assert (= temp10544_110 (select ARGNAME_stride_NAMEEND_VAL temp10544_109)))
(assert (= temp10544_111 #x0000000000000000))
(assert (= temp10544_112 #x0000000000000000))
(assert (= temp10544_113 temp10544_112))
(assert (= temp10544_114 (select ARGNAME_stride_NAMEEND_VAL temp10544_113)))
(assert (= temp10544_115 #x0000000000000000))
(assert (= temp10544_116 #x0000000000000001))
(assert (= temp10544_117 temp10544_116))
(assert (= temp10544_118 (select ARGNAME_stride_NAMEEND_VAL temp10544_117)))
(assert (= temp10544_119 #x0000000000000000))
(assert (= temp10544_120 #x0000000000000002))
(assert (= temp10544_121 temp10544_120))
(assert (= temp10544_122 (select ARGNAME_stride_NAMEEND_VAL temp10544_121)))
(assert (= temp10544_123 #x0000000000000000))
(assert (= temp10544_124 #x0000000000000003))
(assert (= temp10544_125 temp10544_124))
(assert (= temp10544_126 (select ARGNAME_stride_NAMEEND_VAL temp10544_125)))
(assert (= temp10544_127 #x0000000000000000))
(assert (= temp10544_128 #x0000000000000004))
(assert (= temp10544_129 temp10544_128))
(assert (= temp10544_130 (select ARGNAME_stride_NAMEEND_VAL temp10544_129)))
(assert (= temp10544_131 #x0000000000000000))
(assert (= temp10544_132 #x0000000000000005))
(assert (= temp10544_133 temp10544_132))
(assert (= temp10544_134 (select ARGNAME_stride_NAMEEND_VAL temp10544_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10544_114 temp10544_111)
             (bvsle temp10544_118 temp10544_115)
             (bvsle temp10544_122 temp10544_119)
             (bvsle temp10544_126 temp10544_123)
             (bvsle temp10544_130 temp10544_127)
             (bvsle temp10544_134 temp10544_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10544_135 #x0000000000000000))
(assert (= var1191735 temp10544_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10544_136 #x0000000000000001))
(assert (= var1191747 temp10544_136))
(assert (= temp10544_137 #x0000000000000000))
(assert (= var1179826 temp10544_137))
(assert (= temp10544_138 #x0000000000000000))
(assert (= temp10544_139 temp10544_138))
(assert (= temp10544_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10544_139)))
(assert (= temp10544_141 #x0000000000000001))
(assert (= temp10544_142 temp10544_141))
(assert (= temp10544_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10544_142)))
(assert (= temp10544_144 #x0000000000000002))
(assert (= temp10544_145 temp10544_144))
(assert (= temp10544_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10544_145)))
(assert (= temp10544_147 #x0000000000000003))
(assert (= temp10544_148 temp10544_147))
(assert (= temp10544_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10544_148)))
(assert (= temp10544_150 #x0000000000000004))
(assert (= temp10544_151 temp10544_150))
(assert (= temp10544_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10544_151)))
(assert (= temp10544_153 #x0000000000000005))
(assert (= temp10544_154 temp10544_153))
(assert (= temp10544_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10544_154)))
(assert (= temp10544_157 var1179826))
(assert (= temp10544_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10544_157)))
(assert (= temp10544_156 temp10544_158))
(assert (= var1191780
   (ite (bvslt temp10544_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10544_159 #x0000000000000000))
(assert (= var1191780 temp10544_159))
(assert (= temp10544_160 #x0000000000000000))
(assert (= var1179826 temp10544_160))
(assert (= temp10544_162 var1179826))
(assert (= temp10544_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10544_162)))
(assert (= temp10544_161 temp10544_163))
(assert (= var1191802 (bvsmod temp10544_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10544_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10544_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10544_165 #x0000000000000001))
(assert (= var1191803 temp10544_165))
(assert (= temp10544_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10544_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10544_167 #x0000000000000001))
(assert (= var1191823 temp10544_167))
(assert (= temp10544_168 #x0000000000000001))
(assert (= var1180714 temp10544_168))
(assert (= temp10544_169 #x0000000000000000))
(assert (= temp10544_170 temp10544_169))
(assert (= temp10544_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10544_170)))
(assert (= temp10544_172 #x0000000000000001))
(assert (= temp10544_173 temp10544_172))
(assert (= temp10544_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10544_173)))
(assert (= temp10544_175 #x0000000000000002))
(assert (= temp10544_176 temp10544_175))
(assert (= temp10544_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10544_176)))
(assert (= temp10544_178 #x0000000000000003))
(assert (= temp10544_179 temp10544_178))
(assert (= temp10544_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10544_179)))
(assert (= temp10544_181 #x0000000000000004))
(assert (= temp10544_182 temp10544_181))
(assert (= temp10544_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10544_182)))
(assert (= temp10544_184 #x0000000000000005))
(assert (= temp10544_185 temp10544_184))
(assert (= temp10544_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10544_185)))
(assert (= temp10544_187 #x0000000000000000))
(assert (= temp10544_188
   (ite (bvslt var1180714 temp10544_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10544_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10544_188)))
(assert (= var1191831 temp10544_189))
(assert (bvslt (ite (bvslt var1180714 temp10544_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10544_190 #x0000000000000001))
(assert (= var1180714 temp10544_190))
(assert (= temp10544_192 var1180714))
(assert (= temp10544_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10544_192)))
(assert (= temp10544_191 temp10544_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10544_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10544_194 #x0000000000000001))
(assert (= var1191836 temp10544_194))
(assert (= temp10544_195 #x0000000000000000))
(assert (= var1179826 temp10544_195))
(assert (= temp10544_197 var1179826))
(assert (= temp10544_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10544_197)))
(assert (= temp10544_196 temp10544_198))
(assert (= temp10544_199 #x0000000000000002))
(assert (= var1586025 temp10544_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10544_200 #x0000000000000001))
(assert (= var1191993 temp10544_200))
(assert (= temp10544_201 #x0000000000000001))
(assert (= var2700303 temp10544_201))
(assert (= temp10544_202 #x0000000000000001))
(assert (= var2962447 temp10544_202))
(assert (= temp10544_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10544_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10544_204 #x0000000000000001))
(assert (= var211058 temp10544_204))
(assert (= temp10544_205 #x0000000000000001))
(assert (= var211188 temp10544_205))
(assert (= var3879401 var211188))
(assert (= temp10544_206 #x0000000000000000))
(assert (= var3866802 temp10544_206))
(assert (= temp10544_207 #x0000000000000000))
(assert (= temp10544_208
   (ite (bvslt var3866802 temp10544_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10544_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10544_208)))
(assert (= var3879420 temp10544_209))
(assert (bvslt (ite (bvslt var3866802 temp10544_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10544_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10544_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10544_211 #x0000000000000000))
(assert (= var3879421 temp10544_211))
(assert (= temp10544_212 #x0000000000000001))
(assert (= var3867690 temp10544_212))
(assert (= temp10544_213 #x0000000000000000))
(assert (= temp10544_214
   (ite (bvslt var3867690 temp10544_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10544_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10544_214)))
(assert (= var3879423 temp10544_215))
(assert (bvslt (ite (bvslt var3867690 temp10544_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10544_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10544_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10544_217 #x0000000000000001))
(assert (= var3879424 temp10544_217))
(assert (= temp10544_218 #x0000000000000000))
(assert (= var4133117 temp10544_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10544_219 #x0000000000000002))
(assert (= var4339331 temp10544_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10544_220 #x0000000000000000))
(assert (= var4404892 temp10544_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var5124496 var211201))
(assert (= var211388 var210913))
(assert (= temp10544_221 #x0000000000000000))
(assert (= var211389
   (ite (distinct var211388 temp10544_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var6045517 var211389))
(assert (= temp10544_223 #x0000000000000001))
(assert (= temp10544_222 temp10544_223))
(assert (= temp10544_224 #x0000000000000001))
(assert (= var6884842 temp10544_224))
(assert (= temp10544_226 #xffffffffffffffff))
(assert (= temp10544_225 temp10544_226))
(assert (= temp10544_227 #x0000000000000001))
(assert (= var211058 temp10544_227))
(model-add temp10544_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10544_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10544_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10544_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





