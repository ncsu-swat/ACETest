(declare-fun temp10960_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10960_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10960_3 () (_ BitVec 64))
(declare-fun temp10960_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10960_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10960_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10960_7 () (_ BitVec 64))
(declare-fun temp10960_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10960_9 () (_ BitVec 64))
(declare-fun temp10960_10 () (_ BitVec 64))
(declare-fun temp10960_11 () (_ BitVec 64))
(declare-fun temp10960_12 () (_ BitVec 64))
(declare-fun temp10960_13 () (_ BitVec 64))
(declare-fun temp10960_14 () (_ BitVec 64))
(declare-fun temp10960_15 () (_ BitVec 64))
(declare-fun temp10960_16 () (_ BitVec 64))
(declare-fun temp10960_17 () (_ BitVec 64))
(declare-fun temp10960_18 () (_ BitVec 64))
(declare-fun temp10960_19 () (_ BitVec 64))
(declare-fun temp10960_20 () (_ BitVec 64))
(declare-fun temp10960_21 () (_ BitVec 64))
(declare-fun temp10960_22 () (_ BitVec 64))
(declare-fun temp10960_23 () (_ BitVec 64))
(declare-fun temp10960_24 () (_ BitVec 64))
(declare-fun temp10960_25 () (_ BitVec 64))
(declare-fun temp10960_26 () (_ BitVec 64))
(declare-fun temp10960_27 () (_ BitVec 64))
(declare-fun temp10960_28 () (_ BitVec 64))
(declare-fun temp10960_29 () (_ BitVec 64))
(declare-fun temp10960_30 () (_ BitVec 64))
(declare-fun temp10960_31 () (_ BitVec 64))
(declare-fun temp10960_32 () (_ BitVec 64))
(declare-fun temp10960_33 () (_ BitVec 64))
(declare-fun temp10960_34 () (_ BitVec 64))
(declare-fun temp10960_35 () (_ BitVec 64))
(declare-fun temp10960_36 () (_ BitVec 64))
(declare-fun temp10960_37 () (_ BitVec 64))
(declare-fun temp10960_38 () (_ BitVec 64))
(declare-fun temp10960_39 () (_ BitVec 64))
(declare-fun temp10960_40 () (_ BitVec 64))
(declare-fun temp10960_41 () (_ BitVec 64))
(declare-fun temp10960_42 () (_ BitVec 64))
(declare-fun temp10960_43 () (_ BitVec 64))
(declare-fun temp10960_44 () (_ BitVec 64))
(declare-fun temp10960_45 () (_ BitVec 64))
(declare-fun temp10960_46 () (_ BitVec 64))
(declare-fun temp10960_47 () (_ BitVec 64))
(declare-fun temp10960_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10960_49 () (_ BitVec 64))
(declare-fun temp10960_50 () (_ BitVec 64))
(declare-fun temp10960_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10960_52 () (_ BitVec 64))
(declare-fun temp10960_53 () (_ BitVec 64))
(declare-fun temp10960_54 () (_ BitVec 64))
(declare-fun temp10960_55 () (_ BitVec 64))
(declare-fun temp10960_56 () (_ BitVec 64))
(declare-fun temp10960_57 () (_ BitVec 64))
(declare-fun temp10960_58 () (_ BitVec 64))
(declare-fun temp10960_59 () (_ BitVec 64))
(declare-fun temp10960_60 () (_ BitVec 64))
(declare-fun temp10960_61 () (_ BitVec 64))
(declare-fun temp10960_62 () (_ BitVec 64))
(declare-fun temp10960_63 () (_ BitVec 64))
(declare-fun temp10960_64 () (_ BitVec 64))
(declare-fun temp10960_65 () (_ BitVec 64))
(declare-fun temp10960_66 () (_ BitVec 64))
(declare-fun temp10960_67 () (_ BitVec 64))
(declare-fun temp10960_68 () (_ BitVec 64))
(declare-fun temp10960_69 () (_ BitVec 64))
(declare-fun temp10960_70 () (_ BitVec 64))
(declare-fun temp10960_71 () (_ BitVec 64))
(declare-fun temp10960_72 () (_ BitVec 64))
(declare-fun temp10960_73 () (_ BitVec 64))
(declare-fun temp10960_74 () (_ BitVec 64))
(declare-fun temp10960_75 () (_ BitVec 64))
(declare-fun temp10960_76 () (_ BitVec 64))
(declare-fun temp10960_77 () (_ BitVec 64))
(declare-fun temp10960_78 () (_ BitVec 64))
(declare-fun temp10960_79 () (_ BitVec 64))
(declare-fun temp10960_80 () (_ BitVec 64))
(declare-fun temp10960_81 () (_ BitVec 64))
(declare-fun temp10960_82 () (_ BitVec 64))
(declare-fun temp10960_83 () (_ BitVec 64))
(declare-fun temp10960_84 () (_ BitVec 64))
(declare-fun temp10960_85 () (_ BitVec 64))
(declare-fun temp10960_86 () (_ BitVec 64))
(declare-fun temp10960_87 () (_ BitVec 64))
(declare-fun temp10960_88 () (_ BitVec 64))
(declare-fun temp10960_89 () (_ BitVec 64))
(declare-fun temp10960_90 () (_ BitVec 64))
(declare-fun temp10960_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10960_92 () (_ BitVec 64))
(declare-fun temp10960_93 () (_ BitVec 64))
(declare-fun temp10960_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10960_95 () (_ BitVec 64))
(declare-fun temp10960_96 () (_ BitVec 64))
(declare-fun temp10960_97 () (_ BitVec 64))
(declare-fun temp10960_98 () (_ BitVec 64))
(declare-fun temp10960_99 () (_ BitVec 64))
(declare-fun temp10960_100 () (_ BitVec 64))
(declare-fun temp10960_101 () (_ BitVec 64))
(declare-fun temp10960_102 () (_ BitVec 64))
(declare-fun temp10960_103 () (_ BitVec 64))
(declare-fun temp10960_104 () (_ BitVec 64))
(declare-fun temp10960_105 () (_ BitVec 64))
(declare-fun temp10960_106 () (_ BitVec 64))
(declare-fun temp10960_107 () (_ BitVec 64))
(declare-fun temp10960_108 () (_ BitVec 64))
(declare-fun temp10960_109 () (_ BitVec 64))
(declare-fun temp10960_110 () (_ BitVec 64))
(declare-fun temp10960_111 () (_ BitVec 64))
(declare-fun temp10960_112 () (_ BitVec 64))
(declare-fun temp10960_113 () (_ BitVec 64))
(declare-fun temp10960_114 () (_ BitVec 64))
(declare-fun temp10960_115 () (_ BitVec 64))
(declare-fun temp10960_116 () (_ BitVec 64))
(declare-fun temp10960_117 () (_ BitVec 64))
(declare-fun temp10960_118 () (_ BitVec 64))
(declare-fun temp10960_119 () (_ BitVec 64))
(declare-fun temp10960_120 () (_ BitVec 64))
(declare-fun temp10960_121 () (_ BitVec 64))
(declare-fun temp10960_122 () (_ BitVec 64))
(declare-fun temp10960_123 () (_ BitVec 64))
(declare-fun temp10960_124 () (_ BitVec 64))
(declare-fun temp10960_125 () (_ BitVec 64))
(declare-fun temp10960_126 () (_ BitVec 64))
(declare-fun temp10960_127 () (_ BitVec 64))
(declare-fun temp10960_128 () (_ BitVec 64))
(declare-fun temp10960_129 () (_ BitVec 64))
(declare-fun temp10960_130 () (_ BitVec 64))
(declare-fun temp10960_131 () (_ BitVec 64))
(declare-fun temp10960_132 () (_ BitVec 64))
(declare-fun temp10960_133 () (_ BitVec 64))
(declare-fun temp10960_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10960_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10960_136 () (_ BitVec 64))
(declare-fun temp10960_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10960_138 () (_ BitVec 64))
(declare-fun temp10960_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10960_140 () (_ BitVec 64))
(declare-fun temp10960_141 () (_ BitVec 64))
(declare-fun temp10960_142 () (_ BitVec 64))
(declare-fun temp10960_143 () (_ BitVec 64))
(declare-fun temp10960_144 () (_ BitVec 64))
(declare-fun temp10960_145 () (_ BitVec 64))
(declare-fun temp10960_146 () (_ BitVec 64))
(declare-fun temp10960_147 () (_ BitVec 64))
(declare-fun temp10960_148 () (_ BitVec 64))
(declare-fun temp10960_149 () (_ BitVec 64))
(declare-fun temp10960_150 () (_ BitVec 64))
(declare-fun temp10960_151 () (_ BitVec 64))
(declare-fun temp10960_152 () (_ BitVec 64))
(declare-fun temp10960_153 () (_ BitVec 64))
(declare-fun temp10960_154 () (_ BitVec 64))
(declare-fun temp10960_155 () (_ BitVec 64))
(declare-fun temp10960_157 () (_ BitVec 64))
(declare-fun temp10960_158 () (_ BitVec 64))
(declare-fun temp10960_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10960_159 () (_ BitVec 64))
(declare-fun temp10960_160 () (_ BitVec 64))
(declare-fun temp10960_162 () (_ BitVec 64))
(declare-fun temp10960_163 () (_ BitVec 64))
(declare-fun temp10960_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10960_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10960_165 () (_ BitVec 64))
(declare-fun temp10960_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10960_167 () (_ BitVec 64))
(declare-fun temp10960_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10960_169 () (_ BitVec 64))
(declare-fun temp10960_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10960_171 () (_ BitVec 64))
(declare-fun temp10960_172 () (_ BitVec 64))
(declare-fun temp10960_173 () (_ BitVec 64))
(declare-fun temp10960_174 () (_ BitVec 64))
(declare-fun temp10960_175 () (_ BitVec 64))
(declare-fun temp10960_176 () (_ BitVec 64))
(declare-fun temp10960_177 () (_ BitVec 64))
(declare-fun temp10960_178 () (_ BitVec 64))
(declare-fun temp10960_179 () (_ BitVec 64))
(declare-fun temp10960_180 () (_ BitVec 64))
(declare-fun temp10960_181 () (_ BitVec 64))
(declare-fun temp10960_182 () (_ BitVec 64))
(declare-fun temp10960_183 () (_ BitVec 64))
(declare-fun temp10960_184 () (_ BitVec 64))
(declare-fun temp10960_185 () (_ BitVec 64))
(declare-fun temp10960_186 () (_ BitVec 64))
(declare-fun temp10960_187 () (_ BitVec 64))
(declare-fun temp10960_188 () (_ BitVec 64))
(declare-fun temp10960_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10960_190 () (_ BitVec 64))
(declare-fun temp10960_192 () (_ BitVec 64))
(declare-fun temp10960_193 () (_ BitVec 64))
(declare-fun temp10960_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10960_194 () (_ BitVec 64))
(declare-fun temp10960_195 () (_ BitVec 64))
(declare-fun temp10960_197 () (_ BitVec 64))
(declare-fun temp10960_198 () (_ BitVec 64))
(declare-fun temp10960_196 () (_ BitVec 64))
(declare-fun temp10960_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10960_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10960_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10960_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10960_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10960_204 () (_ BitVec 64))
(declare-fun temp10960_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10960_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10960_207 () (_ BitVec 64))
(declare-fun temp10960_208 () (_ BitVec 64))
(declare-fun temp10960_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10960_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10960_211 () (_ BitVec 64))
(declare-fun temp10960_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10960_213 () (_ BitVec 64))
(declare-fun temp10960_214 () (_ BitVec 64))
(declare-fun temp10960_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10960_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10960_217 () (_ BitVec 64))
(declare-fun temp10960_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10960_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10960_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp10960_221 () (_ BitVec 64))
(assert (= temp10960_1 #x0000000000000001))
(assert (= var77203 temp10960_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10960_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10960_2)))
(assert (= temp10960_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10960_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10960_4 #x0000000000000000))
(assert (= var210941 temp10960_4))
(assert (= temp10960_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10960_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10960_6 #x0000000000000000))
(assert (= var210986 temp10960_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10960_7 #x0000000000000000))
(assert (= temp10960_8 temp10960_7))
(assert (= temp10960_9 (select ARGNAME_padding_NAMEEND_VAL temp10960_8)))
(assert (= temp10960_10 #x0000000000000001))
(assert (= temp10960_11 temp10960_10))
(assert (= temp10960_12 (select ARGNAME_padding_NAMEEND_VAL temp10960_11)))
(assert (= temp10960_13 #x0000000000000002))
(assert (= temp10960_14 temp10960_13))
(assert (= temp10960_15 (select ARGNAME_padding_NAMEEND_VAL temp10960_14)))
(assert (= temp10960_16 #x0000000000000003))
(assert (= temp10960_17 temp10960_16))
(assert (= temp10960_18 (select ARGNAME_padding_NAMEEND_VAL temp10960_17)))
(assert (= temp10960_19 #x0000000000000004))
(assert (= temp10960_20 temp10960_19))
(assert (= temp10960_21 (select ARGNAME_padding_NAMEEND_VAL temp10960_20)))
(assert (= temp10960_22 #x0000000000000005))
(assert (= temp10960_23 temp10960_22))
(assert (= temp10960_24 (select ARGNAME_padding_NAMEEND_VAL temp10960_23)))
(assert (= temp10960_25 #x0000000000000000))
(assert (= temp10960_26 #x0000000000000000))
(assert (= temp10960_27 temp10960_26))
(assert (= temp10960_28 (select ARGNAME_padding_NAMEEND_VAL temp10960_27)))
(assert (= temp10960_29 #x0000000000000000))
(assert (= temp10960_30 #x0000000000000001))
(assert (= temp10960_31 temp10960_30))
(assert (= temp10960_32 (select ARGNAME_padding_NAMEEND_VAL temp10960_31)))
(assert (= temp10960_33 #x0000000000000000))
(assert (= temp10960_34 #x0000000000000002))
(assert (= temp10960_35 temp10960_34))
(assert (= temp10960_36 (select ARGNAME_padding_NAMEEND_VAL temp10960_35)))
(assert (= temp10960_37 #x0000000000000000))
(assert (= temp10960_38 #x0000000000000003))
(assert (= temp10960_39 temp10960_38))
(assert (= temp10960_40 (select ARGNAME_padding_NAMEEND_VAL temp10960_39)))
(assert (= temp10960_41 #x0000000000000000))
(assert (= temp10960_42 #x0000000000000004))
(assert (= temp10960_43 temp10960_42))
(assert (= temp10960_44 (select ARGNAME_padding_NAMEEND_VAL temp10960_43)))
(assert (= temp10960_45 #x0000000000000000))
(assert (= temp10960_46 #x0000000000000005))
(assert (= temp10960_47 temp10960_46))
(assert (= temp10960_48 (select ARGNAME_padding_NAMEEND_VAL temp10960_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10960_28 temp10960_25)
             (bvslt temp10960_32 temp10960_29)
             (bvslt temp10960_36 temp10960_33)
             (bvslt temp10960_40 temp10960_37)
             (bvslt temp10960_44 temp10960_41)
             (bvslt temp10960_48 temp10960_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10960_49 #x0000000000000000))
(assert (= var1191714 temp10960_49))
(assert (= temp10960_50 #x0000000000000000))
(assert (= temp10960_51 temp10960_50))
(assert (= temp10960_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10960_51)))
(assert (= temp10960_53 #x0000000000000001))
(assert (= temp10960_54 temp10960_53))
(assert (= temp10960_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10960_54)))
(assert (= temp10960_56 #x0000000000000002))
(assert (= temp10960_57 temp10960_56))
(assert (= temp10960_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10960_57)))
(assert (= temp10960_59 #x0000000000000003))
(assert (= temp10960_60 temp10960_59))
(assert (= temp10960_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10960_60)))
(assert (= temp10960_62 #x0000000000000004))
(assert (= temp10960_63 temp10960_62))
(assert (= temp10960_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10960_63)))
(assert (= temp10960_65 #x0000000000000005))
(assert (= temp10960_66 temp10960_65))
(assert (= temp10960_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10960_66)))
(assert (= temp10960_68 #x0000000000000000))
(assert (= temp10960_69 #x0000000000000000))
(assert (= temp10960_70 temp10960_69))
(assert (= temp10960_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10960_70)))
(assert (= temp10960_72 #x0000000000000000))
(assert (= temp10960_73 #x0000000000000001))
(assert (= temp10960_74 temp10960_73))
(assert (= temp10960_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10960_74)))
(assert (= temp10960_76 #x0000000000000000))
(assert (= temp10960_77 #x0000000000000002))
(assert (= temp10960_78 temp10960_77))
(assert (= temp10960_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10960_78)))
(assert (= temp10960_80 #x0000000000000000))
(assert (= temp10960_81 #x0000000000000003))
(assert (= temp10960_82 temp10960_81))
(assert (= temp10960_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10960_82)))
(assert (= temp10960_84 #x0000000000000000))
(assert (= temp10960_85 #x0000000000000004))
(assert (= temp10960_86 temp10960_85))
(assert (= temp10960_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10960_86)))
(assert (= temp10960_88 #x0000000000000000))
(assert (= temp10960_89 #x0000000000000005))
(assert (= temp10960_90 temp10960_89))
(assert (= temp10960_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10960_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10960_71 temp10960_68)
             (bvslt temp10960_75 temp10960_72)
             (bvslt temp10960_79 temp10960_76)
             (bvslt temp10960_83 temp10960_80)
             (bvslt temp10960_87 temp10960_84)
             (bvslt temp10960_91 temp10960_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10960_92 #x0000000000000000))
(assert (= var1191725 temp10960_92))
(assert (= temp10960_93 #x0000000000000000))
(assert (= temp10960_94 temp10960_93))
(assert (= temp10960_95 (select ARGNAME_stride_NAMEEND_VAL temp10960_94)))
(assert (= temp10960_96 #x0000000000000001))
(assert (= temp10960_97 temp10960_96))
(assert (= temp10960_98 (select ARGNAME_stride_NAMEEND_VAL temp10960_97)))
(assert (= temp10960_99 #x0000000000000002))
(assert (= temp10960_100 temp10960_99))
(assert (= temp10960_101 (select ARGNAME_stride_NAMEEND_VAL temp10960_100)))
(assert (= temp10960_102 #x0000000000000003))
(assert (= temp10960_103 temp10960_102))
(assert (= temp10960_104 (select ARGNAME_stride_NAMEEND_VAL temp10960_103)))
(assert (= temp10960_105 #x0000000000000004))
(assert (= temp10960_106 temp10960_105))
(assert (= temp10960_107 (select ARGNAME_stride_NAMEEND_VAL temp10960_106)))
(assert (= temp10960_108 #x0000000000000005))
(assert (= temp10960_109 temp10960_108))
(assert (= temp10960_110 (select ARGNAME_stride_NAMEEND_VAL temp10960_109)))
(assert (= temp10960_111 #x0000000000000000))
(assert (= temp10960_112 #x0000000000000000))
(assert (= temp10960_113 temp10960_112))
(assert (= temp10960_114 (select ARGNAME_stride_NAMEEND_VAL temp10960_113)))
(assert (= temp10960_115 #x0000000000000000))
(assert (= temp10960_116 #x0000000000000001))
(assert (= temp10960_117 temp10960_116))
(assert (= temp10960_118 (select ARGNAME_stride_NAMEEND_VAL temp10960_117)))
(assert (= temp10960_119 #x0000000000000000))
(assert (= temp10960_120 #x0000000000000002))
(assert (= temp10960_121 temp10960_120))
(assert (= temp10960_122 (select ARGNAME_stride_NAMEEND_VAL temp10960_121)))
(assert (= temp10960_123 #x0000000000000000))
(assert (= temp10960_124 #x0000000000000003))
(assert (= temp10960_125 temp10960_124))
(assert (= temp10960_126 (select ARGNAME_stride_NAMEEND_VAL temp10960_125)))
(assert (= temp10960_127 #x0000000000000000))
(assert (= temp10960_128 #x0000000000000004))
(assert (= temp10960_129 temp10960_128))
(assert (= temp10960_130 (select ARGNAME_stride_NAMEEND_VAL temp10960_129)))
(assert (= temp10960_131 #x0000000000000000))
(assert (= temp10960_132 #x0000000000000005))
(assert (= temp10960_133 temp10960_132))
(assert (= temp10960_134 (select ARGNAME_stride_NAMEEND_VAL temp10960_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10960_114 temp10960_111)
             (bvsle temp10960_118 temp10960_115)
             (bvsle temp10960_122 temp10960_119)
             (bvsle temp10960_126 temp10960_123)
             (bvsle temp10960_130 temp10960_127)
             (bvsle temp10960_134 temp10960_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10960_135 #x0000000000000000))
(assert (= var1191735 temp10960_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10960_136 #x0000000000000001))
(assert (= var1191747 temp10960_136))
(assert (= temp10960_137 #x0000000000000000))
(assert (= var1179826 temp10960_137))
(assert (= temp10960_138 #x0000000000000000))
(assert (= temp10960_139 temp10960_138))
(assert (= temp10960_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10960_139)))
(assert (= temp10960_141 #x0000000000000001))
(assert (= temp10960_142 temp10960_141))
(assert (= temp10960_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10960_142)))
(assert (= temp10960_144 #x0000000000000002))
(assert (= temp10960_145 temp10960_144))
(assert (= temp10960_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10960_145)))
(assert (= temp10960_147 #x0000000000000003))
(assert (= temp10960_148 temp10960_147))
(assert (= temp10960_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10960_148)))
(assert (= temp10960_150 #x0000000000000004))
(assert (= temp10960_151 temp10960_150))
(assert (= temp10960_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10960_151)))
(assert (= temp10960_153 #x0000000000000005))
(assert (= temp10960_154 temp10960_153))
(assert (= temp10960_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10960_154)))
(assert (= temp10960_157 var1179826))
(assert (= temp10960_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10960_157)))
(assert (= temp10960_156 temp10960_158))
(assert (= var1191780
   (ite (bvslt temp10960_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10960_159 #x0000000000000000))
(assert (= var1191780 temp10960_159))
(assert (= temp10960_160 #x0000000000000000))
(assert (= var1179826 temp10960_160))
(assert (= temp10960_162 var1179826))
(assert (= temp10960_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10960_162)))
(assert (= temp10960_161 temp10960_163))
(assert (= var1191802 (bvsmod temp10960_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10960_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10960_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10960_165 #x0000000000000001))
(assert (= var1191803 temp10960_165))
(assert (= temp10960_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10960_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10960_167 #x0000000000000001))
(assert (= var1191823 temp10960_167))
(assert (= temp10960_168 #x0000000000000001))
(assert (= var1180714 temp10960_168))
(assert (= temp10960_169 #x0000000000000000))
(assert (= temp10960_170 temp10960_169))
(assert (= temp10960_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10960_170)))
(assert (= temp10960_172 #x0000000000000001))
(assert (= temp10960_173 temp10960_172))
(assert (= temp10960_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10960_173)))
(assert (= temp10960_175 #x0000000000000002))
(assert (= temp10960_176 temp10960_175))
(assert (= temp10960_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10960_176)))
(assert (= temp10960_178 #x0000000000000003))
(assert (= temp10960_179 temp10960_178))
(assert (= temp10960_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10960_179)))
(assert (= temp10960_181 #x0000000000000004))
(assert (= temp10960_182 temp10960_181))
(assert (= temp10960_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10960_182)))
(assert (= temp10960_184 #x0000000000000005))
(assert (= temp10960_185 temp10960_184))
(assert (= temp10960_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10960_185)))
(assert (= temp10960_187 #x0000000000000000))
(assert (= temp10960_188
   (ite (bvslt var1180714 temp10960_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10960_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10960_188)))
(assert (= var1191831 temp10960_189))
(assert (bvslt (ite (bvslt var1180714 temp10960_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10960_190 #x0000000000000001))
(assert (= var1180714 temp10960_190))
(assert (= temp10960_192 var1180714))
(assert (= temp10960_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10960_192)))
(assert (= temp10960_191 temp10960_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10960_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10960_194 #x0000000000000001))
(assert (= var1191836 temp10960_194))
(assert (= temp10960_195 #x0000000000000000))
(assert (= var1179826 temp10960_195))
(assert (= temp10960_197 var1179826))
(assert (= temp10960_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10960_197)))
(assert (= temp10960_196 temp10960_198))
(assert (= temp10960_199 #x0000000000000002))
(assert (= var1586025 temp10960_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10960_200 #x0000000000000001))
(assert (= var1191993 temp10960_200))
(assert (= temp10960_201 #x0000000000000001))
(assert (= var2700303 temp10960_201))
(assert (= temp10960_202 #x0000000000000001))
(assert (= var2962447 temp10960_202))
(assert (= temp10960_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10960_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10960_204 #x0000000000000001))
(assert (= var211058 temp10960_204))
(assert (= temp10960_205 #x0000000000000001))
(assert (= var211188 temp10960_205))
(assert (= var3879401 var211188))
(assert (= temp10960_206 #x0000000000000000))
(assert (= var3866802 temp10960_206))
(assert (= temp10960_207 #x0000000000000000))
(assert (= temp10960_208
   (ite (bvslt var3866802 temp10960_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10960_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10960_208)))
(assert (= var3879420 temp10960_209))
(assert (bvslt (ite (bvslt var3866802 temp10960_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10960_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10960_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10960_211 #x0000000000000000))
(assert (= var3879421 temp10960_211))
(assert (= temp10960_212 #x0000000000000001))
(assert (= var3867690 temp10960_212))
(assert (= temp10960_213 #x0000000000000000))
(assert (= temp10960_214
   (ite (bvslt var3867690 temp10960_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10960_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10960_214)))
(assert (= var3879423 temp10960_215))
(assert (bvslt (ite (bvslt var3867690 temp10960_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10960_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10960_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10960_217 #x0000000000000001))
(assert (= var3879424 temp10960_217))
(assert (= temp10960_218 #x0000000000000000))
(assert (= var4133117 temp10960_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10960_219 #x0000000000000002))
(assert (= var4339331 temp10960_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10960_220 #x0000000000000000))
(assert (= var4404892 temp10960_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp10960_221 #x0000000000000001))
(assert (= var211058 temp10960_221))
(model-add temp10960_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10960_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10960_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10960_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






