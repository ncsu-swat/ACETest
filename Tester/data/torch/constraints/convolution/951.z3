(declare-fun temp1268_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp1268_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1268_3 () (_ BitVec 64))
(declare-fun temp1268_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1268_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp1268_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1268_7 () (_ BitVec 64))
(declare-fun temp1268_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1268_9 () (_ BitVec 64))
(declare-fun temp1268_10 () (_ BitVec 64))
(declare-fun temp1268_11 () (_ BitVec 64))
(declare-fun temp1268_12 () (_ BitVec 64))
(declare-fun temp1268_13 () (_ BitVec 64))
(declare-fun temp1268_14 () (_ BitVec 64))
(declare-fun temp1268_15 () (_ BitVec 64))
(declare-fun temp1268_16 () (_ BitVec 64))
(declare-fun temp1268_17 () (_ BitVec 64))
(declare-fun temp1268_18 () (_ BitVec 64))
(declare-fun temp1268_19 () (_ BitVec 64))
(declare-fun temp1268_20 () (_ BitVec 64))
(declare-fun temp1268_21 () (_ BitVec 64))
(declare-fun temp1268_22 () (_ BitVec 64))
(declare-fun temp1268_23 () (_ BitVec 64))
(declare-fun temp1268_24 () (_ BitVec 64))
(declare-fun temp1268_25 () (_ BitVec 64))
(declare-fun temp1268_26 () (_ BitVec 64))
(declare-fun temp1268_27 () (_ BitVec 64))
(declare-fun temp1268_28 () (_ BitVec 64))
(declare-fun temp1268_29 () (_ BitVec 64))
(declare-fun temp1268_30 () (_ BitVec 64))
(declare-fun temp1268_31 () (_ BitVec 64))
(declare-fun temp1268_32 () (_ BitVec 64))
(declare-fun temp1268_33 () (_ BitVec 64))
(declare-fun temp1268_34 () (_ BitVec 64))
(declare-fun temp1268_35 () (_ BitVec 64))
(declare-fun temp1268_36 () (_ BitVec 64))
(declare-fun temp1268_37 () (_ BitVec 64))
(declare-fun temp1268_38 () (_ BitVec 64))
(declare-fun temp1268_39 () (_ BitVec 64))
(declare-fun temp1268_40 () (_ BitVec 64))
(declare-fun temp1268_41 () (_ BitVec 64))
(declare-fun temp1268_42 () (_ BitVec 64))
(declare-fun temp1268_43 () (_ BitVec 64))
(declare-fun temp1268_44 () (_ BitVec 64))
(declare-fun temp1268_45 () (_ BitVec 64))
(declare-fun temp1268_46 () (_ BitVec 64))
(declare-fun temp1268_47 () (_ BitVec 64))
(declare-fun temp1268_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp1268_49 () (_ BitVec 64))
(declare-fun temp1268_50 () (_ BitVec 64))
(declare-fun temp1268_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1268_52 () (_ BitVec 64))
(declare-fun temp1268_53 () (_ BitVec 64))
(declare-fun temp1268_54 () (_ BitVec 64))
(declare-fun temp1268_55 () (_ BitVec 64))
(declare-fun temp1268_56 () (_ BitVec 64))
(declare-fun temp1268_57 () (_ BitVec 64))
(declare-fun temp1268_58 () (_ BitVec 64))
(declare-fun temp1268_59 () (_ BitVec 64))
(declare-fun temp1268_60 () (_ BitVec 64))
(declare-fun temp1268_61 () (_ BitVec 64))
(declare-fun temp1268_62 () (_ BitVec 64))
(declare-fun temp1268_63 () (_ BitVec 64))
(declare-fun temp1268_64 () (_ BitVec 64))
(declare-fun temp1268_65 () (_ BitVec 64))
(declare-fun temp1268_66 () (_ BitVec 64))
(declare-fun temp1268_67 () (_ BitVec 64))
(declare-fun temp1268_68 () (_ BitVec 64))
(declare-fun temp1268_69 () (_ BitVec 64))
(declare-fun temp1268_70 () (_ BitVec 64))
(declare-fun temp1268_71 () (_ BitVec 64))
(declare-fun temp1268_72 () (_ BitVec 64))
(declare-fun temp1268_73 () (_ BitVec 64))
(declare-fun temp1268_74 () (_ BitVec 64))
(declare-fun temp1268_75 () (_ BitVec 64))
(declare-fun temp1268_76 () (_ BitVec 64))
(declare-fun temp1268_77 () (_ BitVec 64))
(declare-fun temp1268_78 () (_ BitVec 64))
(declare-fun temp1268_79 () (_ BitVec 64))
(declare-fun temp1268_80 () (_ BitVec 64))
(declare-fun temp1268_81 () (_ BitVec 64))
(declare-fun temp1268_82 () (_ BitVec 64))
(declare-fun temp1268_83 () (_ BitVec 64))
(declare-fun temp1268_84 () (_ BitVec 64))
(declare-fun temp1268_85 () (_ BitVec 64))
(declare-fun temp1268_86 () (_ BitVec 64))
(declare-fun temp1268_87 () (_ BitVec 64))
(declare-fun temp1268_88 () (_ BitVec 64))
(declare-fun temp1268_89 () (_ BitVec 64))
(declare-fun temp1268_90 () (_ BitVec 64))
(declare-fun temp1268_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp1268_92 () (_ BitVec 64))
(declare-fun temp1268_93 () (_ BitVec 64))
(declare-fun temp1268_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1268_95 () (_ BitVec 64))
(declare-fun temp1268_96 () (_ BitVec 64))
(declare-fun temp1268_97 () (_ BitVec 64))
(declare-fun temp1268_98 () (_ BitVec 64))
(declare-fun temp1268_99 () (_ BitVec 64))
(declare-fun temp1268_100 () (_ BitVec 64))
(declare-fun temp1268_101 () (_ BitVec 64))
(declare-fun temp1268_102 () (_ BitVec 64))
(declare-fun temp1268_103 () (_ BitVec 64))
(declare-fun temp1268_104 () (_ BitVec 64))
(declare-fun temp1268_105 () (_ BitVec 64))
(declare-fun temp1268_106 () (_ BitVec 64))
(declare-fun temp1268_107 () (_ BitVec 64))
(declare-fun temp1268_108 () (_ BitVec 64))
(declare-fun temp1268_109 () (_ BitVec 64))
(declare-fun temp1268_110 () (_ BitVec 64))
(declare-fun temp1268_111 () (_ BitVec 64))
(declare-fun temp1268_112 () (_ BitVec 64))
(declare-fun temp1268_113 () (_ BitVec 64))
(declare-fun temp1268_114 () (_ BitVec 64))
(declare-fun temp1268_115 () (_ BitVec 64))
(declare-fun temp1268_116 () (_ BitVec 64))
(declare-fun temp1268_117 () (_ BitVec 64))
(declare-fun temp1268_118 () (_ BitVec 64))
(declare-fun temp1268_119 () (_ BitVec 64))
(declare-fun temp1268_120 () (_ BitVec 64))
(declare-fun temp1268_121 () (_ BitVec 64))
(declare-fun temp1268_122 () (_ BitVec 64))
(declare-fun temp1268_123 () (_ BitVec 64))
(declare-fun temp1268_124 () (_ BitVec 64))
(declare-fun temp1268_125 () (_ BitVec 64))
(declare-fun temp1268_126 () (_ BitVec 64))
(declare-fun temp1268_127 () (_ BitVec 64))
(declare-fun temp1268_128 () (_ BitVec 64))
(declare-fun temp1268_129 () (_ BitVec 64))
(declare-fun temp1268_130 () (_ BitVec 64))
(declare-fun temp1268_131 () (_ BitVec 64))
(declare-fun temp1268_132 () (_ BitVec 64))
(declare-fun temp1268_133 () (_ BitVec 64))
(declare-fun temp1268_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp1268_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp1268_136 () (_ BitVec 64))
(declare-fun temp1268_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp1268_138 () (_ BitVec 64))
(declare-fun temp1268_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1268_140 () (_ BitVec 64))
(declare-fun temp1268_141 () (_ BitVec 64))
(declare-fun temp1268_142 () (_ BitVec 64))
(declare-fun temp1268_143 () (_ BitVec 64))
(declare-fun temp1268_144 () (_ BitVec 64))
(declare-fun temp1268_145 () (_ BitVec 64))
(declare-fun temp1268_146 () (_ BitVec 64))
(declare-fun temp1268_147 () (_ BitVec 64))
(declare-fun temp1268_148 () (_ BitVec 64))
(declare-fun temp1268_149 () (_ BitVec 64))
(declare-fun temp1268_150 () (_ BitVec 64))
(declare-fun temp1268_151 () (_ BitVec 64))
(declare-fun temp1268_152 () (_ BitVec 64))
(declare-fun temp1268_153 () (_ BitVec 64))
(declare-fun temp1268_154 () (_ BitVec 64))
(declare-fun temp1268_155 () (_ BitVec 64))
(declare-fun temp1268_157 () (_ BitVec 64))
(declare-fun temp1268_158 () (_ BitVec 64))
(declare-fun temp1268_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp1268_159 () (_ BitVec 64))
(declare-fun temp1268_160 () (_ BitVec 64))
(declare-fun temp1268_162 () (_ BitVec 64))
(declare-fun temp1268_163 () (_ BitVec 64))
(declare-fun temp1268_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp1268_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp1268_165 () (_ BitVec 64))
(declare-fun temp1268_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp1268_167 () (_ BitVec 64))
(declare-fun temp1268_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp1268_169 () (_ BitVec 64))
(declare-fun temp1268_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1268_171 () (_ BitVec 64))
(declare-fun temp1268_172 () (_ BitVec 64))
(declare-fun temp1268_173 () (_ BitVec 64))
(declare-fun temp1268_174 () (_ BitVec 64))
(declare-fun temp1268_175 () (_ BitVec 64))
(declare-fun temp1268_176 () (_ BitVec 64))
(declare-fun temp1268_177 () (_ BitVec 64))
(declare-fun temp1268_178 () (_ BitVec 64))
(declare-fun temp1268_179 () (_ BitVec 64))
(declare-fun temp1268_180 () (_ BitVec 64))
(declare-fun temp1268_181 () (_ BitVec 64))
(declare-fun temp1268_182 () (_ BitVec 64))
(declare-fun temp1268_183 () (_ BitVec 64))
(declare-fun temp1268_184 () (_ BitVec 64))
(declare-fun temp1268_185 () (_ BitVec 64))
(declare-fun temp1268_186 () (_ BitVec 64))
(declare-fun temp1268_187 () (_ BitVec 64))
(declare-fun temp1268_188 () (_ BitVec 64))
(declare-fun temp1268_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp1268_190 () (_ BitVec 64))
(declare-fun temp1268_192 () (_ BitVec 64))
(declare-fun temp1268_193 () (_ BitVec 64))
(declare-fun temp1268_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp1268_194 () (_ BitVec 64))
(declare-fun temp1268_195 () (_ BitVec 64))
(declare-fun temp1268_197 () (_ BitVec 64))
(declare-fun temp1268_198 () (_ BitVec 64))
(declare-fun temp1268_196 () (_ BitVec 64))
(declare-fun temp1268_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp1268_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp1268_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp1268_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp1268_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp1268_204 () (_ BitVec 64))
(declare-fun temp1268_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp1268_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp1268_207 () (_ BitVec 64))
(declare-fun temp1268_208 () (_ BitVec 64))
(declare-fun temp1268_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp1268_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp1268_211 () (_ BitVec 64))
(declare-fun temp1268_212 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp1268_213 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp1268_214 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp1268_216 () (_ BitVec 64))
(declare-fun temp1268_215 () (_ BitVec 64))
(declare-fun temp1268_217 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp1268_218 () (_ BitVec 64))
(declare-fun temp1268_219 () (_ BitVec 64))
(declare-fun temp1268_220 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp1268_221 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp1268_222 () (_ BitVec 64))
(declare-fun temp1268_224 () (_ BitVec 64))
(declare-fun temp1268_223 () (_ BitVec 64))
(declare-fun temp1268_225 () (_ BitVec 64))
(declare-fun temp1268_226 () (_ BitVec 64))
(declare-fun var5649172 () (_ BitVec 64))
(declare-fun var5649139 () (_ BitVec 64))
(declare-fun var5517703 () (_ BitVec 64))
(declare-fun var5517699 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp1268_227 () (_ BitVec 64))
(assert (= temp1268_1 #x0000000000000001))
(assert (= var77203 temp1268_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp1268_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp1268_2)))
(assert (= temp1268_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1268_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1268_4 #x0000000000000000))
(assert (= var210941 temp1268_4))
(assert (= temp1268_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp1268_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1268_6 #x0000000000000000))
(assert (= var210986 temp1268_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp1268_7 #x0000000000000000))
(assert (= temp1268_8 temp1268_7))
(assert (= temp1268_9 (select ARGNAME_padding_NAMEEND_VAL temp1268_8)))
(assert (= temp1268_10 #x0000000000000001))
(assert (= temp1268_11 temp1268_10))
(assert (= temp1268_12 (select ARGNAME_padding_NAMEEND_VAL temp1268_11)))
(assert (= temp1268_13 #x0000000000000002))
(assert (= temp1268_14 temp1268_13))
(assert (= temp1268_15 (select ARGNAME_padding_NAMEEND_VAL temp1268_14)))
(assert (= temp1268_16 #x0000000000000003))
(assert (= temp1268_17 temp1268_16))
(assert (= temp1268_18 (select ARGNAME_padding_NAMEEND_VAL temp1268_17)))
(assert (= temp1268_19 #x0000000000000004))
(assert (= temp1268_20 temp1268_19))
(assert (= temp1268_21 (select ARGNAME_padding_NAMEEND_VAL temp1268_20)))
(assert (= temp1268_22 #x0000000000000005))
(assert (= temp1268_23 temp1268_22))
(assert (= temp1268_24 (select ARGNAME_padding_NAMEEND_VAL temp1268_23)))
(assert (= temp1268_25 #x0000000000000000))
(assert (= temp1268_26 #x0000000000000000))
(assert (= temp1268_27 temp1268_26))
(assert (= temp1268_28 (select ARGNAME_padding_NAMEEND_VAL temp1268_27)))
(assert (= temp1268_29 #x0000000000000000))
(assert (= temp1268_30 #x0000000000000001))
(assert (= temp1268_31 temp1268_30))
(assert (= temp1268_32 (select ARGNAME_padding_NAMEEND_VAL temp1268_31)))
(assert (= temp1268_33 #x0000000000000000))
(assert (= temp1268_34 #x0000000000000002))
(assert (= temp1268_35 temp1268_34))
(assert (= temp1268_36 (select ARGNAME_padding_NAMEEND_VAL temp1268_35)))
(assert (= temp1268_37 #x0000000000000000))
(assert (= temp1268_38 #x0000000000000003))
(assert (= temp1268_39 temp1268_38))
(assert (= temp1268_40 (select ARGNAME_padding_NAMEEND_VAL temp1268_39)))
(assert (= temp1268_41 #x0000000000000000))
(assert (= temp1268_42 #x0000000000000004))
(assert (= temp1268_43 temp1268_42))
(assert (= temp1268_44 (select ARGNAME_padding_NAMEEND_VAL temp1268_43)))
(assert (= temp1268_45 #x0000000000000000))
(assert (= temp1268_46 #x0000000000000005))
(assert (= temp1268_47 temp1268_46))
(assert (= temp1268_48 (select ARGNAME_padding_NAMEEND_VAL temp1268_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp1268_28 temp1268_25)
             (bvslt temp1268_32 temp1268_29)
             (bvslt temp1268_36 temp1268_33)
             (bvslt temp1268_40 temp1268_37)
             (bvslt temp1268_44 temp1268_41)
             (bvslt temp1268_48 temp1268_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1268_49 #x0000000000000000))
(assert (= var1191714 temp1268_49))
(assert (= temp1268_50 #x0000000000000000))
(assert (= temp1268_51 temp1268_50))
(assert (= temp1268_52 (select ARGNAME_output_padding_NAMEEND_VAL temp1268_51)))
(assert (= temp1268_53 #x0000000000000001))
(assert (= temp1268_54 temp1268_53))
(assert (= temp1268_55 (select ARGNAME_output_padding_NAMEEND_VAL temp1268_54)))
(assert (= temp1268_56 #x0000000000000002))
(assert (= temp1268_57 temp1268_56))
(assert (= temp1268_58 (select ARGNAME_output_padding_NAMEEND_VAL temp1268_57)))
(assert (= temp1268_59 #x0000000000000003))
(assert (= temp1268_60 temp1268_59))
(assert (= temp1268_61 (select ARGNAME_output_padding_NAMEEND_VAL temp1268_60)))
(assert (= temp1268_62 #x0000000000000004))
(assert (= temp1268_63 temp1268_62))
(assert (= temp1268_64 (select ARGNAME_output_padding_NAMEEND_VAL temp1268_63)))
(assert (= temp1268_65 #x0000000000000005))
(assert (= temp1268_66 temp1268_65))
(assert (= temp1268_67 (select ARGNAME_output_padding_NAMEEND_VAL temp1268_66)))
(assert (= temp1268_68 #x0000000000000000))
(assert (= temp1268_69 #x0000000000000000))
(assert (= temp1268_70 temp1268_69))
(assert (= temp1268_71 (select ARGNAME_output_padding_NAMEEND_VAL temp1268_70)))
(assert (= temp1268_72 #x0000000000000000))
(assert (= temp1268_73 #x0000000000000001))
(assert (= temp1268_74 temp1268_73))
(assert (= temp1268_75 (select ARGNAME_output_padding_NAMEEND_VAL temp1268_74)))
(assert (= temp1268_76 #x0000000000000000))
(assert (= temp1268_77 #x0000000000000002))
(assert (= temp1268_78 temp1268_77))
(assert (= temp1268_79 (select ARGNAME_output_padding_NAMEEND_VAL temp1268_78)))
(assert (= temp1268_80 #x0000000000000000))
(assert (= temp1268_81 #x0000000000000003))
(assert (= temp1268_82 temp1268_81))
(assert (= temp1268_83 (select ARGNAME_output_padding_NAMEEND_VAL temp1268_82)))
(assert (= temp1268_84 #x0000000000000000))
(assert (= temp1268_85 #x0000000000000004))
(assert (= temp1268_86 temp1268_85))
(assert (= temp1268_87 (select ARGNAME_output_padding_NAMEEND_VAL temp1268_86)))
(assert (= temp1268_88 #x0000000000000000))
(assert (= temp1268_89 #x0000000000000005))
(assert (= temp1268_90 temp1268_89))
(assert (= temp1268_91 (select ARGNAME_output_padding_NAMEEND_VAL temp1268_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp1268_71 temp1268_68)
             (bvslt temp1268_75 temp1268_72)
             (bvslt temp1268_79 temp1268_76)
             (bvslt temp1268_83 temp1268_80)
             (bvslt temp1268_87 temp1268_84)
             (bvslt temp1268_91 temp1268_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1268_92 #x0000000000000000))
(assert (= var1191725 temp1268_92))
(assert (= temp1268_93 #x0000000000000000))
(assert (= temp1268_94 temp1268_93))
(assert (= temp1268_95 (select ARGNAME_stride_NAMEEND_VAL temp1268_94)))
(assert (= temp1268_96 #x0000000000000001))
(assert (= temp1268_97 temp1268_96))
(assert (= temp1268_98 (select ARGNAME_stride_NAMEEND_VAL temp1268_97)))
(assert (= temp1268_99 #x0000000000000002))
(assert (= temp1268_100 temp1268_99))
(assert (= temp1268_101 (select ARGNAME_stride_NAMEEND_VAL temp1268_100)))
(assert (= temp1268_102 #x0000000000000003))
(assert (= temp1268_103 temp1268_102))
(assert (= temp1268_104 (select ARGNAME_stride_NAMEEND_VAL temp1268_103)))
(assert (= temp1268_105 #x0000000000000004))
(assert (= temp1268_106 temp1268_105))
(assert (= temp1268_107 (select ARGNAME_stride_NAMEEND_VAL temp1268_106)))
(assert (= temp1268_108 #x0000000000000005))
(assert (= temp1268_109 temp1268_108))
(assert (= temp1268_110 (select ARGNAME_stride_NAMEEND_VAL temp1268_109)))
(assert (= temp1268_111 #x0000000000000000))
(assert (= temp1268_112 #x0000000000000000))
(assert (= temp1268_113 temp1268_112))
(assert (= temp1268_114 (select ARGNAME_stride_NAMEEND_VAL temp1268_113)))
(assert (= temp1268_115 #x0000000000000000))
(assert (= temp1268_116 #x0000000000000001))
(assert (= temp1268_117 temp1268_116))
(assert (= temp1268_118 (select ARGNAME_stride_NAMEEND_VAL temp1268_117)))
(assert (= temp1268_119 #x0000000000000000))
(assert (= temp1268_120 #x0000000000000002))
(assert (= temp1268_121 temp1268_120))
(assert (= temp1268_122 (select ARGNAME_stride_NAMEEND_VAL temp1268_121)))
(assert (= temp1268_123 #x0000000000000000))
(assert (= temp1268_124 #x0000000000000003))
(assert (= temp1268_125 temp1268_124))
(assert (= temp1268_126 (select ARGNAME_stride_NAMEEND_VAL temp1268_125)))
(assert (= temp1268_127 #x0000000000000000))
(assert (= temp1268_128 #x0000000000000004))
(assert (= temp1268_129 temp1268_128))
(assert (= temp1268_130 (select ARGNAME_stride_NAMEEND_VAL temp1268_129)))
(assert (= temp1268_131 #x0000000000000000))
(assert (= temp1268_132 #x0000000000000005))
(assert (= temp1268_133 temp1268_132))
(assert (= temp1268_134 (select ARGNAME_stride_NAMEEND_VAL temp1268_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp1268_114 temp1268_111)
             (bvsle temp1268_118 temp1268_115)
             (bvsle temp1268_122 temp1268_119)
             (bvsle temp1268_126 temp1268_123)
             (bvsle temp1268_130 temp1268_127)
             (bvsle temp1268_134 temp1268_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1268_135 #x0000000000000000))
(assert (= var1191735 temp1268_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1268_136 #x0000000000000001))
(assert (= var1191747 temp1268_136))
(assert (= temp1268_137 #x0000000000000000))
(assert (= var1179826 temp1268_137))
(assert (= temp1268_138 #x0000000000000000))
(assert (= temp1268_139 temp1268_138))
(assert (= temp1268_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1268_139)))
(assert (= temp1268_141 #x0000000000000001))
(assert (= temp1268_142 temp1268_141))
(assert (= temp1268_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1268_142)))
(assert (= temp1268_144 #x0000000000000002))
(assert (= temp1268_145 temp1268_144))
(assert (= temp1268_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1268_145)))
(assert (= temp1268_147 #x0000000000000003))
(assert (= temp1268_148 temp1268_147))
(assert (= temp1268_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1268_148)))
(assert (= temp1268_150 #x0000000000000004))
(assert (= temp1268_151 temp1268_150))
(assert (= temp1268_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1268_151)))
(assert (= temp1268_153 #x0000000000000005))
(assert (= temp1268_154 temp1268_153))
(assert (= temp1268_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1268_154)))
(assert (= temp1268_157 var1179826))
(assert (= temp1268_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1268_157)))
(assert (= temp1268_156 temp1268_158))
(assert (= var1191780
   (ite (bvslt temp1268_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1268_159 #x0000000000000000))
(assert (= var1191780 temp1268_159))
(assert (= temp1268_160 #x0000000000000000))
(assert (= var1179826 temp1268_160))
(assert (= temp1268_162 var1179826))
(assert (= temp1268_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1268_162)))
(assert (= temp1268_161 temp1268_163))
(assert (= var1191802 (bvsmod temp1268_161 ARGNAME_groups_NAMEEND)))
(assert (= temp1268_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp1268_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp1268_165 #x0000000000000001))
(assert (= var1191803 temp1268_165))
(assert (= temp1268_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp1268_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1268_167 #x0000000000000001))
(assert (= var1191823 temp1268_167))
(assert (= temp1268_168 #x0000000000000001))
(assert (= var1180714 temp1268_168))
(assert (= temp1268_169 #x0000000000000000))
(assert (= temp1268_170 temp1268_169))
(assert (= temp1268_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp1268_170)))
(assert (= temp1268_172 #x0000000000000001))
(assert (= temp1268_173 temp1268_172))
(assert (= temp1268_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp1268_173)))
(assert (= temp1268_175 #x0000000000000002))
(assert (= temp1268_176 temp1268_175))
(assert (= temp1268_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp1268_176)))
(assert (= temp1268_178 #x0000000000000003))
(assert (= temp1268_179 temp1268_178))
(assert (= temp1268_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp1268_179)))
(assert (= temp1268_181 #x0000000000000004))
(assert (= temp1268_182 temp1268_181))
(assert (= temp1268_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp1268_182)))
(assert (= temp1268_184 #x0000000000000005))
(assert (= temp1268_185 temp1268_184))
(assert (= temp1268_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp1268_185)))
(assert (= temp1268_187 #x0000000000000000))
(assert (= temp1268_188
   (ite (bvslt var1180714 temp1268_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp1268_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp1268_188)))
(assert (= var1191831 temp1268_189))
(assert (bvslt (ite (bvslt var1180714 temp1268_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1268_190 #x0000000000000001))
(assert (= var1180714 temp1268_190))
(assert (= temp1268_192 var1180714))
(assert (= temp1268_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1268_192)))
(assert (= temp1268_191 temp1268_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp1268_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp1268_194 #x0000000000000001))
(assert (= var1191836 temp1268_194))
(assert (= temp1268_195 #x0000000000000000))
(assert (= var1179826 temp1268_195))
(assert (= temp1268_197 var1179826))
(assert (= temp1268_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1268_197)))
(assert (= temp1268_196 temp1268_198))
(assert (= temp1268_199 #x0000000000000002))
(assert (= var1586025 temp1268_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp1268_200 #x0000000000000001))
(assert (= var1191993 temp1268_200))
(assert (= temp1268_201 #x0000000000000001))
(assert (= var2700303 temp1268_201))
(assert (= temp1268_202 #x0000000000000001))
(assert (= var2962447 temp1268_202))
(assert (= temp1268_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1268_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1268_204 #x0000000000000001))
(assert (= var211058 temp1268_204))
(assert (= temp1268_205 #x0000000000000001))
(assert (= var211188 temp1268_205))
(assert (= var3879401 var211188))
(assert (= temp1268_206 #x0000000000000000))
(assert (= var3866802 temp1268_206))
(assert (= temp1268_207 #x0000000000000000))
(assert (= temp1268_208
   (ite (bvslt var3866802 temp1268_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp1268_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp1268_208)))
(assert (= var3879420 temp1268_209))
(assert (bvslt (ite (bvslt var3866802 temp1268_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1268_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp1268_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp1268_211 #x0000000000000001))
(assert (= var3879421 temp1268_211))
(assert (= temp1268_212 #x0000000000000000))
(assert (= var4133117 temp1268_212))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp1268_213 #x0000000000000002))
(assert (= var4339331 temp1268_213))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1268_214 #x0000000000000000))
(assert (= var4404892 temp1268_214))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp1268_216 #xffffffffffffffff))
(assert (= temp1268_215 temp1268_216))
(assert (= temp1268_217 #x0000000000000001))
(assert (= var197674 temp1268_217))
(assert (= temp1268_218 #x0000000000000000))
(assert (= temp1268_219
   (ite (bvslt var197674 temp1268_218)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp1268_220 (select ARGNAME_input_NAMEEND_DIMSIZE temp1268_219)))
(assert (= var211595 temp1268_220))
(assert (bvslt (ite (bvslt var197674 temp1268_218)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1268_221 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp1268_221) #x0000000000000001 #x0000000000000000)))
(assert (= temp1268_222 #x0000000000000001))
(assert (= var211596 temp1268_222))
(assert (= temp1268_224 #xffffffffffffffff))
(assert (= temp1268_223 temp1268_224))
(assert (= temp1268_225 #x0000000000000001))
(assert (= var211058 temp1268_225))
(assert (= temp1268_226 #x0000000000000000))
(assert (= var5649172 temp1268_226))
(assert (= var5649139 var5649172))
(assert (= var5517703 var5649139))
(assert (= var5517699 var5517703))
(assert (= var212669 var5517699))
(assert (= temp1268_227 #x0000000000000000))
(assert (= var212669 temp1268_227))
(model-add temp1268_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp1268_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1268_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp1268_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






