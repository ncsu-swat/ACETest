(declare-fun temp10978_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10978_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10978_3 () (_ BitVec 64))
(declare-fun temp10978_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10978_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10978_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10978_7 () (_ BitVec 64))
(declare-fun temp10978_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10978_9 () (_ BitVec 64))
(declare-fun temp10978_10 () (_ BitVec 64))
(declare-fun temp10978_11 () (_ BitVec 64))
(declare-fun temp10978_12 () (_ BitVec 64))
(declare-fun temp10978_13 () (_ BitVec 64))
(declare-fun temp10978_14 () (_ BitVec 64))
(declare-fun temp10978_15 () (_ BitVec 64))
(declare-fun temp10978_16 () (_ BitVec 64))
(declare-fun temp10978_17 () (_ BitVec 64))
(declare-fun temp10978_18 () (_ BitVec 64))
(declare-fun temp10978_19 () (_ BitVec 64))
(declare-fun temp10978_20 () (_ BitVec 64))
(declare-fun temp10978_21 () (_ BitVec 64))
(declare-fun temp10978_22 () (_ BitVec 64))
(declare-fun temp10978_23 () (_ BitVec 64))
(declare-fun temp10978_24 () (_ BitVec 64))
(declare-fun temp10978_25 () (_ BitVec 64))
(declare-fun temp10978_26 () (_ BitVec 64))
(declare-fun temp10978_27 () (_ BitVec 64))
(declare-fun temp10978_28 () (_ BitVec 64))
(declare-fun temp10978_29 () (_ BitVec 64))
(declare-fun temp10978_30 () (_ BitVec 64))
(declare-fun temp10978_31 () (_ BitVec 64))
(declare-fun temp10978_32 () (_ BitVec 64))
(declare-fun temp10978_33 () (_ BitVec 64))
(declare-fun temp10978_34 () (_ BitVec 64))
(declare-fun temp10978_35 () (_ BitVec 64))
(declare-fun temp10978_36 () (_ BitVec 64))
(declare-fun temp10978_37 () (_ BitVec 64))
(declare-fun temp10978_38 () (_ BitVec 64))
(declare-fun temp10978_39 () (_ BitVec 64))
(declare-fun temp10978_40 () (_ BitVec 64))
(declare-fun temp10978_41 () (_ BitVec 64))
(declare-fun temp10978_42 () (_ BitVec 64))
(declare-fun temp10978_43 () (_ BitVec 64))
(declare-fun temp10978_44 () (_ BitVec 64))
(declare-fun temp10978_45 () (_ BitVec 64))
(declare-fun temp10978_46 () (_ BitVec 64))
(declare-fun temp10978_47 () (_ BitVec 64))
(declare-fun temp10978_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10978_49 () (_ BitVec 64))
(declare-fun temp10978_50 () (_ BitVec 64))
(declare-fun temp10978_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10978_52 () (_ BitVec 64))
(declare-fun temp10978_53 () (_ BitVec 64))
(declare-fun temp10978_54 () (_ BitVec 64))
(declare-fun temp10978_55 () (_ BitVec 64))
(declare-fun temp10978_56 () (_ BitVec 64))
(declare-fun temp10978_57 () (_ BitVec 64))
(declare-fun temp10978_58 () (_ BitVec 64))
(declare-fun temp10978_59 () (_ BitVec 64))
(declare-fun temp10978_60 () (_ BitVec 64))
(declare-fun temp10978_61 () (_ BitVec 64))
(declare-fun temp10978_62 () (_ BitVec 64))
(declare-fun temp10978_63 () (_ BitVec 64))
(declare-fun temp10978_64 () (_ BitVec 64))
(declare-fun temp10978_65 () (_ BitVec 64))
(declare-fun temp10978_66 () (_ BitVec 64))
(declare-fun temp10978_67 () (_ BitVec 64))
(declare-fun temp10978_68 () (_ BitVec 64))
(declare-fun temp10978_69 () (_ BitVec 64))
(declare-fun temp10978_70 () (_ BitVec 64))
(declare-fun temp10978_71 () (_ BitVec 64))
(declare-fun temp10978_72 () (_ BitVec 64))
(declare-fun temp10978_73 () (_ BitVec 64))
(declare-fun temp10978_74 () (_ BitVec 64))
(declare-fun temp10978_75 () (_ BitVec 64))
(declare-fun temp10978_76 () (_ BitVec 64))
(declare-fun temp10978_77 () (_ BitVec 64))
(declare-fun temp10978_78 () (_ BitVec 64))
(declare-fun temp10978_79 () (_ BitVec 64))
(declare-fun temp10978_80 () (_ BitVec 64))
(declare-fun temp10978_81 () (_ BitVec 64))
(declare-fun temp10978_82 () (_ BitVec 64))
(declare-fun temp10978_83 () (_ BitVec 64))
(declare-fun temp10978_84 () (_ BitVec 64))
(declare-fun temp10978_85 () (_ BitVec 64))
(declare-fun temp10978_86 () (_ BitVec 64))
(declare-fun temp10978_87 () (_ BitVec 64))
(declare-fun temp10978_88 () (_ BitVec 64))
(declare-fun temp10978_89 () (_ BitVec 64))
(declare-fun temp10978_90 () (_ BitVec 64))
(declare-fun temp10978_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10978_92 () (_ BitVec 64))
(declare-fun temp10978_93 () (_ BitVec 64))
(declare-fun temp10978_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10978_95 () (_ BitVec 64))
(declare-fun temp10978_96 () (_ BitVec 64))
(declare-fun temp10978_97 () (_ BitVec 64))
(declare-fun temp10978_98 () (_ BitVec 64))
(declare-fun temp10978_99 () (_ BitVec 64))
(declare-fun temp10978_100 () (_ BitVec 64))
(declare-fun temp10978_101 () (_ BitVec 64))
(declare-fun temp10978_102 () (_ BitVec 64))
(declare-fun temp10978_103 () (_ BitVec 64))
(declare-fun temp10978_104 () (_ BitVec 64))
(declare-fun temp10978_105 () (_ BitVec 64))
(declare-fun temp10978_106 () (_ BitVec 64))
(declare-fun temp10978_107 () (_ BitVec 64))
(declare-fun temp10978_108 () (_ BitVec 64))
(declare-fun temp10978_109 () (_ BitVec 64))
(declare-fun temp10978_110 () (_ BitVec 64))
(declare-fun temp10978_111 () (_ BitVec 64))
(declare-fun temp10978_112 () (_ BitVec 64))
(declare-fun temp10978_113 () (_ BitVec 64))
(declare-fun temp10978_114 () (_ BitVec 64))
(declare-fun temp10978_115 () (_ BitVec 64))
(declare-fun temp10978_116 () (_ BitVec 64))
(declare-fun temp10978_117 () (_ BitVec 64))
(declare-fun temp10978_118 () (_ BitVec 64))
(declare-fun temp10978_119 () (_ BitVec 64))
(declare-fun temp10978_120 () (_ BitVec 64))
(declare-fun temp10978_121 () (_ BitVec 64))
(declare-fun temp10978_122 () (_ BitVec 64))
(declare-fun temp10978_123 () (_ BitVec 64))
(declare-fun temp10978_124 () (_ BitVec 64))
(declare-fun temp10978_125 () (_ BitVec 64))
(declare-fun temp10978_126 () (_ BitVec 64))
(declare-fun temp10978_127 () (_ BitVec 64))
(declare-fun temp10978_128 () (_ BitVec 64))
(declare-fun temp10978_129 () (_ BitVec 64))
(declare-fun temp10978_130 () (_ BitVec 64))
(declare-fun temp10978_131 () (_ BitVec 64))
(declare-fun temp10978_132 () (_ BitVec 64))
(declare-fun temp10978_133 () (_ BitVec 64))
(declare-fun temp10978_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10978_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10978_136 () (_ BitVec 64))
(declare-fun temp10978_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10978_138 () (_ BitVec 64))
(declare-fun temp10978_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10978_140 () (_ BitVec 64))
(declare-fun temp10978_141 () (_ BitVec 64))
(declare-fun temp10978_142 () (_ BitVec 64))
(declare-fun temp10978_143 () (_ BitVec 64))
(declare-fun temp10978_144 () (_ BitVec 64))
(declare-fun temp10978_145 () (_ BitVec 64))
(declare-fun temp10978_146 () (_ BitVec 64))
(declare-fun temp10978_147 () (_ BitVec 64))
(declare-fun temp10978_148 () (_ BitVec 64))
(declare-fun temp10978_149 () (_ BitVec 64))
(declare-fun temp10978_150 () (_ BitVec 64))
(declare-fun temp10978_151 () (_ BitVec 64))
(declare-fun temp10978_152 () (_ BitVec 64))
(declare-fun temp10978_153 () (_ BitVec 64))
(declare-fun temp10978_154 () (_ BitVec 64))
(declare-fun temp10978_155 () (_ BitVec 64))
(declare-fun temp10978_157 () (_ BitVec 64))
(declare-fun temp10978_158 () (_ BitVec 64))
(declare-fun temp10978_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10978_159 () (_ BitVec 64))
(declare-fun temp10978_160 () (_ BitVec 64))
(declare-fun temp10978_162 () (_ BitVec 64))
(declare-fun temp10978_163 () (_ BitVec 64))
(declare-fun temp10978_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10978_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10978_165 () (_ BitVec 64))
(declare-fun temp10978_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10978_167 () (_ BitVec 64))
(declare-fun temp10978_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10978_169 () (_ BitVec 64))
(declare-fun temp10978_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10978_171 () (_ BitVec 64))
(declare-fun temp10978_172 () (_ BitVec 64))
(declare-fun temp10978_173 () (_ BitVec 64))
(declare-fun temp10978_174 () (_ BitVec 64))
(declare-fun temp10978_175 () (_ BitVec 64))
(declare-fun temp10978_176 () (_ BitVec 64))
(declare-fun temp10978_177 () (_ BitVec 64))
(declare-fun temp10978_178 () (_ BitVec 64))
(declare-fun temp10978_179 () (_ BitVec 64))
(declare-fun temp10978_180 () (_ BitVec 64))
(declare-fun temp10978_181 () (_ BitVec 64))
(declare-fun temp10978_182 () (_ BitVec 64))
(declare-fun temp10978_183 () (_ BitVec 64))
(declare-fun temp10978_184 () (_ BitVec 64))
(declare-fun temp10978_185 () (_ BitVec 64))
(declare-fun temp10978_186 () (_ BitVec 64))
(declare-fun temp10978_187 () (_ BitVec 64))
(declare-fun temp10978_188 () (_ BitVec 64))
(declare-fun temp10978_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10978_190 () (_ BitVec 64))
(declare-fun temp10978_192 () (_ BitVec 64))
(declare-fun temp10978_193 () (_ BitVec 64))
(declare-fun temp10978_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10978_194 () (_ BitVec 64))
(declare-fun temp10978_195 () (_ BitVec 64))
(declare-fun temp10978_197 () (_ BitVec 64))
(declare-fun temp10978_198 () (_ BitVec 64))
(declare-fun temp10978_196 () (_ BitVec 64))
(declare-fun temp10978_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10978_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10978_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10978_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10978_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10978_204 () (_ BitVec 64))
(declare-fun temp10978_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10978_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10978_207 () (_ BitVec 64))
(declare-fun temp10978_208 () (_ BitVec 64))
(declare-fun temp10978_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10978_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10978_211 () (_ BitVec 64))
(declare-fun temp10978_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10978_213 () (_ BitVec 64))
(declare-fun temp10978_214 () (_ BitVec 64))
(declare-fun temp10978_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10978_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10978_217 () (_ BitVec 64))
(declare-fun temp10978_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10978_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10978_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp10978_221 () (_ BitVec 64))
(assert (= temp10978_1 #x0000000000000001))
(assert (= var77203 temp10978_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10978_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10978_2)))
(assert (= temp10978_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10978_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10978_4 #x0000000000000000))
(assert (= var210941 temp10978_4))
(assert (= temp10978_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10978_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10978_6 #x0000000000000000))
(assert (= var210986 temp10978_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10978_7 #x0000000000000000))
(assert (= temp10978_8 temp10978_7))
(assert (= temp10978_9 (select ARGNAME_padding_NAMEEND_VAL temp10978_8)))
(assert (= temp10978_10 #x0000000000000001))
(assert (= temp10978_11 temp10978_10))
(assert (= temp10978_12 (select ARGNAME_padding_NAMEEND_VAL temp10978_11)))
(assert (= temp10978_13 #x0000000000000002))
(assert (= temp10978_14 temp10978_13))
(assert (= temp10978_15 (select ARGNAME_padding_NAMEEND_VAL temp10978_14)))
(assert (= temp10978_16 #x0000000000000003))
(assert (= temp10978_17 temp10978_16))
(assert (= temp10978_18 (select ARGNAME_padding_NAMEEND_VAL temp10978_17)))
(assert (= temp10978_19 #x0000000000000004))
(assert (= temp10978_20 temp10978_19))
(assert (= temp10978_21 (select ARGNAME_padding_NAMEEND_VAL temp10978_20)))
(assert (= temp10978_22 #x0000000000000005))
(assert (= temp10978_23 temp10978_22))
(assert (= temp10978_24 (select ARGNAME_padding_NAMEEND_VAL temp10978_23)))
(assert (= temp10978_25 #x0000000000000000))
(assert (= temp10978_26 #x0000000000000000))
(assert (= temp10978_27 temp10978_26))
(assert (= temp10978_28 (select ARGNAME_padding_NAMEEND_VAL temp10978_27)))
(assert (= temp10978_29 #x0000000000000000))
(assert (= temp10978_30 #x0000000000000001))
(assert (= temp10978_31 temp10978_30))
(assert (= temp10978_32 (select ARGNAME_padding_NAMEEND_VAL temp10978_31)))
(assert (= temp10978_33 #x0000000000000000))
(assert (= temp10978_34 #x0000000000000002))
(assert (= temp10978_35 temp10978_34))
(assert (= temp10978_36 (select ARGNAME_padding_NAMEEND_VAL temp10978_35)))
(assert (= temp10978_37 #x0000000000000000))
(assert (= temp10978_38 #x0000000000000003))
(assert (= temp10978_39 temp10978_38))
(assert (= temp10978_40 (select ARGNAME_padding_NAMEEND_VAL temp10978_39)))
(assert (= temp10978_41 #x0000000000000000))
(assert (= temp10978_42 #x0000000000000004))
(assert (= temp10978_43 temp10978_42))
(assert (= temp10978_44 (select ARGNAME_padding_NAMEEND_VAL temp10978_43)))
(assert (= temp10978_45 #x0000000000000000))
(assert (= temp10978_46 #x0000000000000005))
(assert (= temp10978_47 temp10978_46))
(assert (= temp10978_48 (select ARGNAME_padding_NAMEEND_VAL temp10978_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10978_28 temp10978_25)
             (bvslt temp10978_32 temp10978_29)
             (bvslt temp10978_36 temp10978_33)
             (bvslt temp10978_40 temp10978_37)
             (bvslt temp10978_44 temp10978_41)
             (bvslt temp10978_48 temp10978_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10978_49 #x0000000000000000))
(assert (= var1191714 temp10978_49))
(assert (= temp10978_50 #x0000000000000000))
(assert (= temp10978_51 temp10978_50))
(assert (= temp10978_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10978_51)))
(assert (= temp10978_53 #x0000000000000001))
(assert (= temp10978_54 temp10978_53))
(assert (= temp10978_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10978_54)))
(assert (= temp10978_56 #x0000000000000002))
(assert (= temp10978_57 temp10978_56))
(assert (= temp10978_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10978_57)))
(assert (= temp10978_59 #x0000000000000003))
(assert (= temp10978_60 temp10978_59))
(assert (= temp10978_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10978_60)))
(assert (= temp10978_62 #x0000000000000004))
(assert (= temp10978_63 temp10978_62))
(assert (= temp10978_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10978_63)))
(assert (= temp10978_65 #x0000000000000005))
(assert (= temp10978_66 temp10978_65))
(assert (= temp10978_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10978_66)))
(assert (= temp10978_68 #x0000000000000000))
(assert (= temp10978_69 #x0000000000000000))
(assert (= temp10978_70 temp10978_69))
(assert (= temp10978_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10978_70)))
(assert (= temp10978_72 #x0000000000000000))
(assert (= temp10978_73 #x0000000000000001))
(assert (= temp10978_74 temp10978_73))
(assert (= temp10978_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10978_74)))
(assert (= temp10978_76 #x0000000000000000))
(assert (= temp10978_77 #x0000000000000002))
(assert (= temp10978_78 temp10978_77))
(assert (= temp10978_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10978_78)))
(assert (= temp10978_80 #x0000000000000000))
(assert (= temp10978_81 #x0000000000000003))
(assert (= temp10978_82 temp10978_81))
(assert (= temp10978_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10978_82)))
(assert (= temp10978_84 #x0000000000000000))
(assert (= temp10978_85 #x0000000000000004))
(assert (= temp10978_86 temp10978_85))
(assert (= temp10978_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10978_86)))
(assert (= temp10978_88 #x0000000000000000))
(assert (= temp10978_89 #x0000000000000005))
(assert (= temp10978_90 temp10978_89))
(assert (= temp10978_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10978_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10978_71 temp10978_68)
             (bvslt temp10978_75 temp10978_72)
             (bvslt temp10978_79 temp10978_76)
             (bvslt temp10978_83 temp10978_80)
             (bvslt temp10978_87 temp10978_84)
             (bvslt temp10978_91 temp10978_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10978_92 #x0000000000000000))
(assert (= var1191725 temp10978_92))
(assert (= temp10978_93 #x0000000000000000))
(assert (= temp10978_94 temp10978_93))
(assert (= temp10978_95 (select ARGNAME_stride_NAMEEND_VAL temp10978_94)))
(assert (= temp10978_96 #x0000000000000001))
(assert (= temp10978_97 temp10978_96))
(assert (= temp10978_98 (select ARGNAME_stride_NAMEEND_VAL temp10978_97)))
(assert (= temp10978_99 #x0000000000000002))
(assert (= temp10978_100 temp10978_99))
(assert (= temp10978_101 (select ARGNAME_stride_NAMEEND_VAL temp10978_100)))
(assert (= temp10978_102 #x0000000000000003))
(assert (= temp10978_103 temp10978_102))
(assert (= temp10978_104 (select ARGNAME_stride_NAMEEND_VAL temp10978_103)))
(assert (= temp10978_105 #x0000000000000004))
(assert (= temp10978_106 temp10978_105))
(assert (= temp10978_107 (select ARGNAME_stride_NAMEEND_VAL temp10978_106)))
(assert (= temp10978_108 #x0000000000000005))
(assert (= temp10978_109 temp10978_108))
(assert (= temp10978_110 (select ARGNAME_stride_NAMEEND_VAL temp10978_109)))
(assert (= temp10978_111 #x0000000000000000))
(assert (= temp10978_112 #x0000000000000000))
(assert (= temp10978_113 temp10978_112))
(assert (= temp10978_114 (select ARGNAME_stride_NAMEEND_VAL temp10978_113)))
(assert (= temp10978_115 #x0000000000000000))
(assert (= temp10978_116 #x0000000000000001))
(assert (= temp10978_117 temp10978_116))
(assert (= temp10978_118 (select ARGNAME_stride_NAMEEND_VAL temp10978_117)))
(assert (= temp10978_119 #x0000000000000000))
(assert (= temp10978_120 #x0000000000000002))
(assert (= temp10978_121 temp10978_120))
(assert (= temp10978_122 (select ARGNAME_stride_NAMEEND_VAL temp10978_121)))
(assert (= temp10978_123 #x0000000000000000))
(assert (= temp10978_124 #x0000000000000003))
(assert (= temp10978_125 temp10978_124))
(assert (= temp10978_126 (select ARGNAME_stride_NAMEEND_VAL temp10978_125)))
(assert (= temp10978_127 #x0000000000000000))
(assert (= temp10978_128 #x0000000000000004))
(assert (= temp10978_129 temp10978_128))
(assert (= temp10978_130 (select ARGNAME_stride_NAMEEND_VAL temp10978_129)))
(assert (= temp10978_131 #x0000000000000000))
(assert (= temp10978_132 #x0000000000000005))
(assert (= temp10978_133 temp10978_132))
(assert (= temp10978_134 (select ARGNAME_stride_NAMEEND_VAL temp10978_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10978_114 temp10978_111)
             (bvsle temp10978_118 temp10978_115)
             (bvsle temp10978_122 temp10978_119)
             (bvsle temp10978_126 temp10978_123)
             (bvsle temp10978_130 temp10978_127)
             (bvsle temp10978_134 temp10978_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10978_135 #x0000000000000000))
(assert (= var1191735 temp10978_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10978_136 #x0000000000000001))
(assert (= var1191747 temp10978_136))
(assert (= temp10978_137 #x0000000000000000))
(assert (= var1179826 temp10978_137))
(assert (= temp10978_138 #x0000000000000000))
(assert (= temp10978_139 temp10978_138))
(assert (= temp10978_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10978_139)))
(assert (= temp10978_141 #x0000000000000001))
(assert (= temp10978_142 temp10978_141))
(assert (= temp10978_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10978_142)))
(assert (= temp10978_144 #x0000000000000002))
(assert (= temp10978_145 temp10978_144))
(assert (= temp10978_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10978_145)))
(assert (= temp10978_147 #x0000000000000003))
(assert (= temp10978_148 temp10978_147))
(assert (= temp10978_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10978_148)))
(assert (= temp10978_150 #x0000000000000004))
(assert (= temp10978_151 temp10978_150))
(assert (= temp10978_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10978_151)))
(assert (= temp10978_153 #x0000000000000005))
(assert (= temp10978_154 temp10978_153))
(assert (= temp10978_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10978_154)))
(assert (= temp10978_157 var1179826))
(assert (= temp10978_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10978_157)))
(assert (= temp10978_156 temp10978_158))
(assert (= var1191780
   (ite (bvslt temp10978_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10978_159 #x0000000000000000))
(assert (= var1191780 temp10978_159))
(assert (= temp10978_160 #x0000000000000000))
(assert (= var1179826 temp10978_160))
(assert (= temp10978_162 var1179826))
(assert (= temp10978_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10978_162)))
(assert (= temp10978_161 temp10978_163))
(assert (= var1191802 (bvsmod temp10978_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10978_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10978_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10978_165 #x0000000000000001))
(assert (= var1191803 temp10978_165))
(assert (= temp10978_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10978_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10978_167 #x0000000000000001))
(assert (= var1191823 temp10978_167))
(assert (= temp10978_168 #x0000000000000001))
(assert (= var1180714 temp10978_168))
(assert (= temp10978_169 #x0000000000000000))
(assert (= temp10978_170 temp10978_169))
(assert (= temp10978_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10978_170)))
(assert (= temp10978_172 #x0000000000000001))
(assert (= temp10978_173 temp10978_172))
(assert (= temp10978_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10978_173)))
(assert (= temp10978_175 #x0000000000000002))
(assert (= temp10978_176 temp10978_175))
(assert (= temp10978_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10978_176)))
(assert (= temp10978_178 #x0000000000000003))
(assert (= temp10978_179 temp10978_178))
(assert (= temp10978_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10978_179)))
(assert (= temp10978_181 #x0000000000000004))
(assert (= temp10978_182 temp10978_181))
(assert (= temp10978_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10978_182)))
(assert (= temp10978_184 #x0000000000000005))
(assert (= temp10978_185 temp10978_184))
(assert (= temp10978_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10978_185)))
(assert (= temp10978_187 #x0000000000000000))
(assert (= temp10978_188
   (ite (bvslt var1180714 temp10978_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10978_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10978_188)))
(assert (= var1191831 temp10978_189))
(assert (bvslt (ite (bvslt var1180714 temp10978_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10978_190 #x0000000000000001))
(assert (= var1180714 temp10978_190))
(assert (= temp10978_192 var1180714))
(assert (= temp10978_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10978_192)))
(assert (= temp10978_191 temp10978_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10978_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10978_194 #x0000000000000001))
(assert (= var1191836 temp10978_194))
(assert (= temp10978_195 #x0000000000000000))
(assert (= var1179826 temp10978_195))
(assert (= temp10978_197 var1179826))
(assert (= temp10978_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10978_197)))
(assert (= temp10978_196 temp10978_198))
(assert (= temp10978_199 #x0000000000000002))
(assert (= var1586025 temp10978_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10978_200 #x0000000000000001))
(assert (= var1191993 temp10978_200))
(assert (= temp10978_201 #x0000000000000001))
(assert (= var2700303 temp10978_201))
(assert (= temp10978_202 #x0000000000000001))
(assert (= var2962447 temp10978_202))
(assert (= temp10978_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10978_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10978_204 #x0000000000000001))
(assert (= var211058 temp10978_204))
(assert (= temp10978_205 #x0000000000000001))
(assert (= var211188 temp10978_205))
(assert (= var3879401 var211188))
(assert (= temp10978_206 #x0000000000000000))
(assert (= var3866802 temp10978_206))
(assert (= temp10978_207 #x0000000000000000))
(assert (= temp10978_208
   (ite (bvslt var3866802 temp10978_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10978_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10978_208)))
(assert (= var3879420 temp10978_209))
(assert (bvslt (ite (bvslt var3866802 temp10978_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10978_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10978_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10978_211 #x0000000000000000))
(assert (= var3879421 temp10978_211))
(assert (= temp10978_212 #x0000000000000001))
(assert (= var3867690 temp10978_212))
(assert (= temp10978_213 #x0000000000000000))
(assert (= temp10978_214
   (ite (bvslt var3867690 temp10978_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10978_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10978_214)))
(assert (= var3879423 temp10978_215))
(assert (bvslt (ite (bvslt var3867690 temp10978_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10978_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10978_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10978_217 #x0000000000000001))
(assert (= var3879424 temp10978_217))
(assert (= temp10978_218 #x0000000000000000))
(assert (= var4133117 temp10978_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10978_219 #x0000000000000002))
(assert (= var4339331 temp10978_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10978_220 #x0000000000000000))
(assert (= var4404892 temp10978_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp10978_221 #x0000000000000001))
(assert (= var211058 temp10978_221))
(model-add temp10978_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10978_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10978_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10978_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





