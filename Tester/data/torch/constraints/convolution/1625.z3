(declare-fun temp10961_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10961_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10961_3 () (_ BitVec 64))
(declare-fun temp10961_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10961_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10961_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10961_7 () (_ BitVec 64))
(declare-fun temp10961_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10961_9 () (_ BitVec 64))
(declare-fun temp10961_10 () (_ BitVec 64))
(declare-fun temp10961_11 () (_ BitVec 64))
(declare-fun temp10961_12 () (_ BitVec 64))
(declare-fun temp10961_13 () (_ BitVec 64))
(declare-fun temp10961_14 () (_ BitVec 64))
(declare-fun temp10961_15 () (_ BitVec 64))
(declare-fun temp10961_16 () (_ BitVec 64))
(declare-fun temp10961_17 () (_ BitVec 64))
(declare-fun temp10961_18 () (_ BitVec 64))
(declare-fun temp10961_19 () (_ BitVec 64))
(declare-fun temp10961_20 () (_ BitVec 64))
(declare-fun temp10961_21 () (_ BitVec 64))
(declare-fun temp10961_22 () (_ BitVec 64))
(declare-fun temp10961_23 () (_ BitVec 64))
(declare-fun temp10961_24 () (_ BitVec 64))
(declare-fun temp10961_25 () (_ BitVec 64))
(declare-fun temp10961_26 () (_ BitVec 64))
(declare-fun temp10961_27 () (_ BitVec 64))
(declare-fun temp10961_28 () (_ BitVec 64))
(declare-fun temp10961_29 () (_ BitVec 64))
(declare-fun temp10961_30 () (_ BitVec 64))
(declare-fun temp10961_31 () (_ BitVec 64))
(declare-fun temp10961_32 () (_ BitVec 64))
(declare-fun temp10961_33 () (_ BitVec 64))
(declare-fun temp10961_34 () (_ BitVec 64))
(declare-fun temp10961_35 () (_ BitVec 64))
(declare-fun temp10961_36 () (_ BitVec 64))
(declare-fun temp10961_37 () (_ BitVec 64))
(declare-fun temp10961_38 () (_ BitVec 64))
(declare-fun temp10961_39 () (_ BitVec 64))
(declare-fun temp10961_40 () (_ BitVec 64))
(declare-fun temp10961_41 () (_ BitVec 64))
(declare-fun temp10961_42 () (_ BitVec 64))
(declare-fun temp10961_43 () (_ BitVec 64))
(declare-fun temp10961_44 () (_ BitVec 64))
(declare-fun temp10961_45 () (_ BitVec 64))
(declare-fun temp10961_46 () (_ BitVec 64))
(declare-fun temp10961_47 () (_ BitVec 64))
(declare-fun temp10961_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10961_49 () (_ BitVec 64))
(declare-fun temp10961_50 () (_ BitVec 64))
(declare-fun temp10961_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10961_52 () (_ BitVec 64))
(declare-fun temp10961_53 () (_ BitVec 64))
(declare-fun temp10961_54 () (_ BitVec 64))
(declare-fun temp10961_55 () (_ BitVec 64))
(declare-fun temp10961_56 () (_ BitVec 64))
(declare-fun temp10961_57 () (_ BitVec 64))
(declare-fun temp10961_58 () (_ BitVec 64))
(declare-fun temp10961_59 () (_ BitVec 64))
(declare-fun temp10961_60 () (_ BitVec 64))
(declare-fun temp10961_61 () (_ BitVec 64))
(declare-fun temp10961_62 () (_ BitVec 64))
(declare-fun temp10961_63 () (_ BitVec 64))
(declare-fun temp10961_64 () (_ BitVec 64))
(declare-fun temp10961_65 () (_ BitVec 64))
(declare-fun temp10961_66 () (_ BitVec 64))
(declare-fun temp10961_67 () (_ BitVec 64))
(declare-fun temp10961_68 () (_ BitVec 64))
(declare-fun temp10961_69 () (_ BitVec 64))
(declare-fun temp10961_70 () (_ BitVec 64))
(declare-fun temp10961_71 () (_ BitVec 64))
(declare-fun temp10961_72 () (_ BitVec 64))
(declare-fun temp10961_73 () (_ BitVec 64))
(declare-fun temp10961_74 () (_ BitVec 64))
(declare-fun temp10961_75 () (_ BitVec 64))
(declare-fun temp10961_76 () (_ BitVec 64))
(declare-fun temp10961_77 () (_ BitVec 64))
(declare-fun temp10961_78 () (_ BitVec 64))
(declare-fun temp10961_79 () (_ BitVec 64))
(declare-fun temp10961_80 () (_ BitVec 64))
(declare-fun temp10961_81 () (_ BitVec 64))
(declare-fun temp10961_82 () (_ BitVec 64))
(declare-fun temp10961_83 () (_ BitVec 64))
(declare-fun temp10961_84 () (_ BitVec 64))
(declare-fun temp10961_85 () (_ BitVec 64))
(declare-fun temp10961_86 () (_ BitVec 64))
(declare-fun temp10961_87 () (_ BitVec 64))
(declare-fun temp10961_88 () (_ BitVec 64))
(declare-fun temp10961_89 () (_ BitVec 64))
(declare-fun temp10961_90 () (_ BitVec 64))
(declare-fun temp10961_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10961_92 () (_ BitVec 64))
(declare-fun temp10961_93 () (_ BitVec 64))
(declare-fun temp10961_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10961_95 () (_ BitVec 64))
(declare-fun temp10961_96 () (_ BitVec 64))
(declare-fun temp10961_97 () (_ BitVec 64))
(declare-fun temp10961_98 () (_ BitVec 64))
(declare-fun temp10961_99 () (_ BitVec 64))
(declare-fun temp10961_100 () (_ BitVec 64))
(declare-fun temp10961_101 () (_ BitVec 64))
(declare-fun temp10961_102 () (_ BitVec 64))
(declare-fun temp10961_103 () (_ BitVec 64))
(declare-fun temp10961_104 () (_ BitVec 64))
(declare-fun temp10961_105 () (_ BitVec 64))
(declare-fun temp10961_106 () (_ BitVec 64))
(declare-fun temp10961_107 () (_ BitVec 64))
(declare-fun temp10961_108 () (_ BitVec 64))
(declare-fun temp10961_109 () (_ BitVec 64))
(declare-fun temp10961_110 () (_ BitVec 64))
(declare-fun temp10961_111 () (_ BitVec 64))
(declare-fun temp10961_112 () (_ BitVec 64))
(declare-fun temp10961_113 () (_ BitVec 64))
(declare-fun temp10961_114 () (_ BitVec 64))
(declare-fun temp10961_115 () (_ BitVec 64))
(declare-fun temp10961_116 () (_ BitVec 64))
(declare-fun temp10961_117 () (_ BitVec 64))
(declare-fun temp10961_118 () (_ BitVec 64))
(declare-fun temp10961_119 () (_ BitVec 64))
(declare-fun temp10961_120 () (_ BitVec 64))
(declare-fun temp10961_121 () (_ BitVec 64))
(declare-fun temp10961_122 () (_ BitVec 64))
(declare-fun temp10961_123 () (_ BitVec 64))
(declare-fun temp10961_124 () (_ BitVec 64))
(declare-fun temp10961_125 () (_ BitVec 64))
(declare-fun temp10961_126 () (_ BitVec 64))
(declare-fun temp10961_127 () (_ BitVec 64))
(declare-fun temp10961_128 () (_ BitVec 64))
(declare-fun temp10961_129 () (_ BitVec 64))
(declare-fun temp10961_130 () (_ BitVec 64))
(declare-fun temp10961_131 () (_ BitVec 64))
(declare-fun temp10961_132 () (_ BitVec 64))
(declare-fun temp10961_133 () (_ BitVec 64))
(declare-fun temp10961_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10961_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10961_136 () (_ BitVec 64))
(declare-fun temp10961_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10961_138 () (_ BitVec 64))
(declare-fun temp10961_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10961_140 () (_ BitVec 64))
(declare-fun temp10961_141 () (_ BitVec 64))
(declare-fun temp10961_142 () (_ BitVec 64))
(declare-fun temp10961_143 () (_ BitVec 64))
(declare-fun temp10961_144 () (_ BitVec 64))
(declare-fun temp10961_145 () (_ BitVec 64))
(declare-fun temp10961_146 () (_ BitVec 64))
(declare-fun temp10961_147 () (_ BitVec 64))
(declare-fun temp10961_148 () (_ BitVec 64))
(declare-fun temp10961_149 () (_ BitVec 64))
(declare-fun temp10961_150 () (_ BitVec 64))
(declare-fun temp10961_151 () (_ BitVec 64))
(declare-fun temp10961_152 () (_ BitVec 64))
(declare-fun temp10961_153 () (_ BitVec 64))
(declare-fun temp10961_154 () (_ BitVec 64))
(declare-fun temp10961_155 () (_ BitVec 64))
(declare-fun temp10961_157 () (_ BitVec 64))
(declare-fun temp10961_158 () (_ BitVec 64))
(declare-fun temp10961_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10961_159 () (_ BitVec 64))
(declare-fun temp10961_160 () (_ BitVec 64))
(declare-fun temp10961_162 () (_ BitVec 64))
(declare-fun temp10961_163 () (_ BitVec 64))
(declare-fun temp10961_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10961_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10961_165 () (_ BitVec 64))
(declare-fun temp10961_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10961_167 () (_ BitVec 64))
(declare-fun temp10961_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10961_169 () (_ BitVec 64))
(declare-fun temp10961_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10961_171 () (_ BitVec 64))
(declare-fun temp10961_172 () (_ BitVec 64))
(declare-fun temp10961_173 () (_ BitVec 64))
(declare-fun temp10961_174 () (_ BitVec 64))
(declare-fun temp10961_175 () (_ BitVec 64))
(declare-fun temp10961_176 () (_ BitVec 64))
(declare-fun temp10961_177 () (_ BitVec 64))
(declare-fun temp10961_178 () (_ BitVec 64))
(declare-fun temp10961_179 () (_ BitVec 64))
(declare-fun temp10961_180 () (_ BitVec 64))
(declare-fun temp10961_181 () (_ BitVec 64))
(declare-fun temp10961_182 () (_ BitVec 64))
(declare-fun temp10961_183 () (_ BitVec 64))
(declare-fun temp10961_184 () (_ BitVec 64))
(declare-fun temp10961_185 () (_ BitVec 64))
(declare-fun temp10961_186 () (_ BitVec 64))
(declare-fun temp10961_187 () (_ BitVec 64))
(declare-fun temp10961_188 () (_ BitVec 64))
(declare-fun temp10961_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10961_190 () (_ BitVec 64))
(declare-fun temp10961_192 () (_ BitVec 64))
(declare-fun temp10961_193 () (_ BitVec 64))
(declare-fun temp10961_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10961_194 () (_ BitVec 64))
(declare-fun temp10961_195 () (_ BitVec 64))
(declare-fun temp10961_197 () (_ BitVec 64))
(declare-fun temp10961_198 () (_ BitVec 64))
(declare-fun temp10961_196 () (_ BitVec 64))
(declare-fun temp10961_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10961_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10961_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10961_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10961_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10961_204 () (_ BitVec 64))
(declare-fun temp10961_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10961_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10961_207 () (_ BitVec 64))
(declare-fun temp10961_208 () (_ BitVec 64))
(declare-fun temp10961_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10961_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10961_211 () (_ BitVec 64))
(declare-fun temp10961_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10961_213 () (_ BitVec 64))
(declare-fun temp10961_214 () (_ BitVec 64))
(declare-fun temp10961_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10961_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10961_217 () (_ BitVec 64))
(declare-fun temp10961_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10961_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10961_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp10961_221 () (_ BitVec 64))
(assert (= temp10961_1 #x0000000000000001))
(assert (= var77203 temp10961_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10961_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10961_2)))
(assert (= temp10961_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10961_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10961_4 #x0000000000000000))
(assert (= var210941 temp10961_4))
(assert (= temp10961_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10961_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10961_6 #x0000000000000000))
(assert (= var210986 temp10961_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10961_7 #x0000000000000000))
(assert (= temp10961_8 temp10961_7))
(assert (= temp10961_9 (select ARGNAME_padding_NAMEEND_VAL temp10961_8)))
(assert (= temp10961_10 #x0000000000000001))
(assert (= temp10961_11 temp10961_10))
(assert (= temp10961_12 (select ARGNAME_padding_NAMEEND_VAL temp10961_11)))
(assert (= temp10961_13 #x0000000000000002))
(assert (= temp10961_14 temp10961_13))
(assert (= temp10961_15 (select ARGNAME_padding_NAMEEND_VAL temp10961_14)))
(assert (= temp10961_16 #x0000000000000003))
(assert (= temp10961_17 temp10961_16))
(assert (= temp10961_18 (select ARGNAME_padding_NAMEEND_VAL temp10961_17)))
(assert (= temp10961_19 #x0000000000000004))
(assert (= temp10961_20 temp10961_19))
(assert (= temp10961_21 (select ARGNAME_padding_NAMEEND_VAL temp10961_20)))
(assert (= temp10961_22 #x0000000000000005))
(assert (= temp10961_23 temp10961_22))
(assert (= temp10961_24 (select ARGNAME_padding_NAMEEND_VAL temp10961_23)))
(assert (= temp10961_25 #x0000000000000000))
(assert (= temp10961_26 #x0000000000000000))
(assert (= temp10961_27 temp10961_26))
(assert (= temp10961_28 (select ARGNAME_padding_NAMEEND_VAL temp10961_27)))
(assert (= temp10961_29 #x0000000000000000))
(assert (= temp10961_30 #x0000000000000001))
(assert (= temp10961_31 temp10961_30))
(assert (= temp10961_32 (select ARGNAME_padding_NAMEEND_VAL temp10961_31)))
(assert (= temp10961_33 #x0000000000000000))
(assert (= temp10961_34 #x0000000000000002))
(assert (= temp10961_35 temp10961_34))
(assert (= temp10961_36 (select ARGNAME_padding_NAMEEND_VAL temp10961_35)))
(assert (= temp10961_37 #x0000000000000000))
(assert (= temp10961_38 #x0000000000000003))
(assert (= temp10961_39 temp10961_38))
(assert (= temp10961_40 (select ARGNAME_padding_NAMEEND_VAL temp10961_39)))
(assert (= temp10961_41 #x0000000000000000))
(assert (= temp10961_42 #x0000000000000004))
(assert (= temp10961_43 temp10961_42))
(assert (= temp10961_44 (select ARGNAME_padding_NAMEEND_VAL temp10961_43)))
(assert (= temp10961_45 #x0000000000000000))
(assert (= temp10961_46 #x0000000000000005))
(assert (= temp10961_47 temp10961_46))
(assert (= temp10961_48 (select ARGNAME_padding_NAMEEND_VAL temp10961_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10961_28 temp10961_25)
             (bvslt temp10961_32 temp10961_29)
             (bvslt temp10961_36 temp10961_33)
             (bvslt temp10961_40 temp10961_37)
             (bvslt temp10961_44 temp10961_41)
             (bvslt temp10961_48 temp10961_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10961_49 #x0000000000000000))
(assert (= var1191714 temp10961_49))
(assert (= temp10961_50 #x0000000000000000))
(assert (= temp10961_51 temp10961_50))
(assert (= temp10961_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10961_51)))
(assert (= temp10961_53 #x0000000000000001))
(assert (= temp10961_54 temp10961_53))
(assert (= temp10961_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10961_54)))
(assert (= temp10961_56 #x0000000000000002))
(assert (= temp10961_57 temp10961_56))
(assert (= temp10961_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10961_57)))
(assert (= temp10961_59 #x0000000000000003))
(assert (= temp10961_60 temp10961_59))
(assert (= temp10961_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10961_60)))
(assert (= temp10961_62 #x0000000000000004))
(assert (= temp10961_63 temp10961_62))
(assert (= temp10961_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10961_63)))
(assert (= temp10961_65 #x0000000000000005))
(assert (= temp10961_66 temp10961_65))
(assert (= temp10961_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10961_66)))
(assert (= temp10961_68 #x0000000000000000))
(assert (= temp10961_69 #x0000000000000000))
(assert (= temp10961_70 temp10961_69))
(assert (= temp10961_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10961_70)))
(assert (= temp10961_72 #x0000000000000000))
(assert (= temp10961_73 #x0000000000000001))
(assert (= temp10961_74 temp10961_73))
(assert (= temp10961_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10961_74)))
(assert (= temp10961_76 #x0000000000000000))
(assert (= temp10961_77 #x0000000000000002))
(assert (= temp10961_78 temp10961_77))
(assert (= temp10961_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10961_78)))
(assert (= temp10961_80 #x0000000000000000))
(assert (= temp10961_81 #x0000000000000003))
(assert (= temp10961_82 temp10961_81))
(assert (= temp10961_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10961_82)))
(assert (= temp10961_84 #x0000000000000000))
(assert (= temp10961_85 #x0000000000000004))
(assert (= temp10961_86 temp10961_85))
(assert (= temp10961_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10961_86)))
(assert (= temp10961_88 #x0000000000000000))
(assert (= temp10961_89 #x0000000000000005))
(assert (= temp10961_90 temp10961_89))
(assert (= temp10961_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10961_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10961_71 temp10961_68)
             (bvslt temp10961_75 temp10961_72)
             (bvslt temp10961_79 temp10961_76)
             (bvslt temp10961_83 temp10961_80)
             (bvslt temp10961_87 temp10961_84)
             (bvslt temp10961_91 temp10961_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10961_92 #x0000000000000000))
(assert (= var1191725 temp10961_92))
(assert (= temp10961_93 #x0000000000000000))
(assert (= temp10961_94 temp10961_93))
(assert (= temp10961_95 (select ARGNAME_stride_NAMEEND_VAL temp10961_94)))
(assert (= temp10961_96 #x0000000000000001))
(assert (= temp10961_97 temp10961_96))
(assert (= temp10961_98 (select ARGNAME_stride_NAMEEND_VAL temp10961_97)))
(assert (= temp10961_99 #x0000000000000002))
(assert (= temp10961_100 temp10961_99))
(assert (= temp10961_101 (select ARGNAME_stride_NAMEEND_VAL temp10961_100)))
(assert (= temp10961_102 #x0000000000000003))
(assert (= temp10961_103 temp10961_102))
(assert (= temp10961_104 (select ARGNAME_stride_NAMEEND_VAL temp10961_103)))
(assert (= temp10961_105 #x0000000000000004))
(assert (= temp10961_106 temp10961_105))
(assert (= temp10961_107 (select ARGNAME_stride_NAMEEND_VAL temp10961_106)))
(assert (= temp10961_108 #x0000000000000005))
(assert (= temp10961_109 temp10961_108))
(assert (= temp10961_110 (select ARGNAME_stride_NAMEEND_VAL temp10961_109)))
(assert (= temp10961_111 #x0000000000000000))
(assert (= temp10961_112 #x0000000000000000))
(assert (= temp10961_113 temp10961_112))
(assert (= temp10961_114 (select ARGNAME_stride_NAMEEND_VAL temp10961_113)))
(assert (= temp10961_115 #x0000000000000000))
(assert (= temp10961_116 #x0000000000000001))
(assert (= temp10961_117 temp10961_116))
(assert (= temp10961_118 (select ARGNAME_stride_NAMEEND_VAL temp10961_117)))
(assert (= temp10961_119 #x0000000000000000))
(assert (= temp10961_120 #x0000000000000002))
(assert (= temp10961_121 temp10961_120))
(assert (= temp10961_122 (select ARGNAME_stride_NAMEEND_VAL temp10961_121)))
(assert (= temp10961_123 #x0000000000000000))
(assert (= temp10961_124 #x0000000000000003))
(assert (= temp10961_125 temp10961_124))
(assert (= temp10961_126 (select ARGNAME_stride_NAMEEND_VAL temp10961_125)))
(assert (= temp10961_127 #x0000000000000000))
(assert (= temp10961_128 #x0000000000000004))
(assert (= temp10961_129 temp10961_128))
(assert (= temp10961_130 (select ARGNAME_stride_NAMEEND_VAL temp10961_129)))
(assert (= temp10961_131 #x0000000000000000))
(assert (= temp10961_132 #x0000000000000005))
(assert (= temp10961_133 temp10961_132))
(assert (= temp10961_134 (select ARGNAME_stride_NAMEEND_VAL temp10961_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10961_114 temp10961_111)
             (bvsle temp10961_118 temp10961_115)
             (bvsle temp10961_122 temp10961_119)
             (bvsle temp10961_126 temp10961_123)
             (bvsle temp10961_130 temp10961_127)
             (bvsle temp10961_134 temp10961_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10961_135 #x0000000000000000))
(assert (= var1191735 temp10961_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10961_136 #x0000000000000001))
(assert (= var1191747 temp10961_136))
(assert (= temp10961_137 #x0000000000000000))
(assert (= var1179826 temp10961_137))
(assert (= temp10961_138 #x0000000000000000))
(assert (= temp10961_139 temp10961_138))
(assert (= temp10961_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10961_139)))
(assert (= temp10961_141 #x0000000000000001))
(assert (= temp10961_142 temp10961_141))
(assert (= temp10961_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10961_142)))
(assert (= temp10961_144 #x0000000000000002))
(assert (= temp10961_145 temp10961_144))
(assert (= temp10961_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10961_145)))
(assert (= temp10961_147 #x0000000000000003))
(assert (= temp10961_148 temp10961_147))
(assert (= temp10961_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10961_148)))
(assert (= temp10961_150 #x0000000000000004))
(assert (= temp10961_151 temp10961_150))
(assert (= temp10961_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10961_151)))
(assert (= temp10961_153 #x0000000000000005))
(assert (= temp10961_154 temp10961_153))
(assert (= temp10961_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10961_154)))
(assert (= temp10961_157 var1179826))
(assert (= temp10961_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10961_157)))
(assert (= temp10961_156 temp10961_158))
(assert (= var1191780
   (ite (bvslt temp10961_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10961_159 #x0000000000000000))
(assert (= var1191780 temp10961_159))
(assert (= temp10961_160 #x0000000000000000))
(assert (= var1179826 temp10961_160))
(assert (= temp10961_162 var1179826))
(assert (= temp10961_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10961_162)))
(assert (= temp10961_161 temp10961_163))
(assert (= var1191802 (bvsmod temp10961_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10961_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10961_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10961_165 #x0000000000000001))
(assert (= var1191803 temp10961_165))
(assert (= temp10961_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10961_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10961_167 #x0000000000000001))
(assert (= var1191823 temp10961_167))
(assert (= temp10961_168 #x0000000000000001))
(assert (= var1180714 temp10961_168))
(assert (= temp10961_169 #x0000000000000000))
(assert (= temp10961_170 temp10961_169))
(assert (= temp10961_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10961_170)))
(assert (= temp10961_172 #x0000000000000001))
(assert (= temp10961_173 temp10961_172))
(assert (= temp10961_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10961_173)))
(assert (= temp10961_175 #x0000000000000002))
(assert (= temp10961_176 temp10961_175))
(assert (= temp10961_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10961_176)))
(assert (= temp10961_178 #x0000000000000003))
(assert (= temp10961_179 temp10961_178))
(assert (= temp10961_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10961_179)))
(assert (= temp10961_181 #x0000000000000004))
(assert (= temp10961_182 temp10961_181))
(assert (= temp10961_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10961_182)))
(assert (= temp10961_184 #x0000000000000005))
(assert (= temp10961_185 temp10961_184))
(assert (= temp10961_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10961_185)))
(assert (= temp10961_187 #x0000000000000000))
(assert (= temp10961_188
   (ite (bvslt var1180714 temp10961_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10961_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10961_188)))
(assert (= var1191831 temp10961_189))
(assert (bvslt (ite (bvslt var1180714 temp10961_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10961_190 #x0000000000000001))
(assert (= var1180714 temp10961_190))
(assert (= temp10961_192 var1180714))
(assert (= temp10961_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10961_192)))
(assert (= temp10961_191 temp10961_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10961_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10961_194 #x0000000000000001))
(assert (= var1191836 temp10961_194))
(assert (= temp10961_195 #x0000000000000000))
(assert (= var1179826 temp10961_195))
(assert (= temp10961_197 var1179826))
(assert (= temp10961_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10961_197)))
(assert (= temp10961_196 temp10961_198))
(assert (= temp10961_199 #x0000000000000002))
(assert (= var1586025 temp10961_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10961_200 #x0000000000000001))
(assert (= var1191993 temp10961_200))
(assert (= temp10961_201 #x0000000000000001))
(assert (= var2700303 temp10961_201))
(assert (= temp10961_202 #x0000000000000001))
(assert (= var2962447 temp10961_202))
(assert (= temp10961_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10961_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10961_204 #x0000000000000001))
(assert (= var211058 temp10961_204))
(assert (= temp10961_205 #x0000000000000001))
(assert (= var211188 temp10961_205))
(assert (= var3879401 var211188))
(assert (= temp10961_206 #x0000000000000000))
(assert (= var3866802 temp10961_206))
(assert (= temp10961_207 #x0000000000000000))
(assert (= temp10961_208
   (ite (bvslt var3866802 temp10961_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10961_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10961_208)))
(assert (= var3879420 temp10961_209))
(assert (bvslt (ite (bvslt var3866802 temp10961_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10961_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10961_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10961_211 #x0000000000000000))
(assert (= var3879421 temp10961_211))
(assert (= temp10961_212 #x0000000000000001))
(assert (= var3867690 temp10961_212))
(assert (= temp10961_213 #x0000000000000000))
(assert (= temp10961_214
   (ite (bvslt var3867690 temp10961_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10961_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10961_214)))
(assert (= var3879423 temp10961_215))
(assert (bvslt (ite (bvslt var3867690 temp10961_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10961_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10961_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10961_217 #x0000000000000001))
(assert (= var3879424 temp10961_217))
(assert (= temp10961_218 #x0000000000000000))
(assert (= var4133117 temp10961_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10961_219 #x0000000000000002))
(assert (= var4339331 temp10961_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10961_220 #x0000000000000000))
(assert (= var4404892 temp10961_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp10961_221 #x0000000000000001))
(assert (= var211058 temp10961_221))
(model-add temp10961_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10961_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10961_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10961_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




