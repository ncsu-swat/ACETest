(declare-fun temp10365_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10365_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10365_3 () (_ BitVec 64))
(declare-fun temp10365_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10365_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10365_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10365_7 () (_ BitVec 64))
(declare-fun temp10365_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10365_9 () (_ BitVec 64))
(declare-fun temp10365_10 () (_ BitVec 64))
(declare-fun temp10365_11 () (_ BitVec 64))
(declare-fun temp10365_12 () (_ BitVec 64))
(declare-fun temp10365_13 () (_ BitVec 64))
(declare-fun temp10365_14 () (_ BitVec 64))
(declare-fun temp10365_15 () (_ BitVec 64))
(declare-fun temp10365_16 () (_ BitVec 64))
(declare-fun temp10365_17 () (_ BitVec 64))
(declare-fun temp10365_18 () (_ BitVec 64))
(declare-fun temp10365_19 () (_ BitVec 64))
(declare-fun temp10365_20 () (_ BitVec 64))
(declare-fun temp10365_21 () (_ BitVec 64))
(declare-fun temp10365_22 () (_ BitVec 64))
(declare-fun temp10365_23 () (_ BitVec 64))
(declare-fun temp10365_24 () (_ BitVec 64))
(declare-fun temp10365_25 () (_ BitVec 64))
(declare-fun temp10365_26 () (_ BitVec 64))
(declare-fun temp10365_27 () (_ BitVec 64))
(declare-fun temp10365_28 () (_ BitVec 64))
(declare-fun temp10365_29 () (_ BitVec 64))
(declare-fun temp10365_30 () (_ BitVec 64))
(declare-fun temp10365_31 () (_ BitVec 64))
(declare-fun temp10365_32 () (_ BitVec 64))
(declare-fun temp10365_33 () (_ BitVec 64))
(declare-fun temp10365_34 () (_ BitVec 64))
(declare-fun temp10365_35 () (_ BitVec 64))
(declare-fun temp10365_36 () (_ BitVec 64))
(declare-fun temp10365_37 () (_ BitVec 64))
(declare-fun temp10365_38 () (_ BitVec 64))
(declare-fun temp10365_39 () (_ BitVec 64))
(declare-fun temp10365_40 () (_ BitVec 64))
(declare-fun temp10365_41 () (_ BitVec 64))
(declare-fun temp10365_42 () (_ BitVec 64))
(declare-fun temp10365_43 () (_ BitVec 64))
(declare-fun temp10365_44 () (_ BitVec 64))
(declare-fun temp10365_45 () (_ BitVec 64))
(declare-fun temp10365_46 () (_ BitVec 64))
(declare-fun temp10365_47 () (_ BitVec 64))
(declare-fun temp10365_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10365_49 () (_ BitVec 64))
(declare-fun temp10365_50 () (_ BitVec 64))
(declare-fun temp10365_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10365_52 () (_ BitVec 64))
(declare-fun temp10365_53 () (_ BitVec 64))
(declare-fun temp10365_54 () (_ BitVec 64))
(declare-fun temp10365_55 () (_ BitVec 64))
(declare-fun temp10365_56 () (_ BitVec 64))
(declare-fun temp10365_57 () (_ BitVec 64))
(declare-fun temp10365_58 () (_ BitVec 64))
(declare-fun temp10365_59 () (_ BitVec 64))
(declare-fun temp10365_60 () (_ BitVec 64))
(declare-fun temp10365_61 () (_ BitVec 64))
(declare-fun temp10365_62 () (_ BitVec 64))
(declare-fun temp10365_63 () (_ BitVec 64))
(declare-fun temp10365_64 () (_ BitVec 64))
(declare-fun temp10365_65 () (_ BitVec 64))
(declare-fun temp10365_66 () (_ BitVec 64))
(declare-fun temp10365_67 () (_ BitVec 64))
(declare-fun temp10365_68 () (_ BitVec 64))
(declare-fun temp10365_69 () (_ BitVec 64))
(declare-fun temp10365_70 () (_ BitVec 64))
(declare-fun temp10365_71 () (_ BitVec 64))
(declare-fun temp10365_72 () (_ BitVec 64))
(declare-fun temp10365_73 () (_ BitVec 64))
(declare-fun temp10365_74 () (_ BitVec 64))
(declare-fun temp10365_75 () (_ BitVec 64))
(declare-fun temp10365_76 () (_ BitVec 64))
(declare-fun temp10365_77 () (_ BitVec 64))
(declare-fun temp10365_78 () (_ BitVec 64))
(declare-fun temp10365_79 () (_ BitVec 64))
(declare-fun temp10365_80 () (_ BitVec 64))
(declare-fun temp10365_81 () (_ BitVec 64))
(declare-fun temp10365_82 () (_ BitVec 64))
(declare-fun temp10365_83 () (_ BitVec 64))
(declare-fun temp10365_84 () (_ BitVec 64))
(declare-fun temp10365_85 () (_ BitVec 64))
(declare-fun temp10365_86 () (_ BitVec 64))
(declare-fun temp10365_87 () (_ BitVec 64))
(declare-fun temp10365_88 () (_ BitVec 64))
(declare-fun temp10365_89 () (_ BitVec 64))
(declare-fun temp10365_90 () (_ BitVec 64))
(declare-fun temp10365_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10365_92 () (_ BitVec 64))
(declare-fun temp10365_93 () (_ BitVec 64))
(declare-fun temp10365_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10365_95 () (_ BitVec 64))
(declare-fun temp10365_96 () (_ BitVec 64))
(declare-fun temp10365_97 () (_ BitVec 64))
(declare-fun temp10365_98 () (_ BitVec 64))
(declare-fun temp10365_99 () (_ BitVec 64))
(declare-fun temp10365_100 () (_ BitVec 64))
(declare-fun temp10365_101 () (_ BitVec 64))
(declare-fun temp10365_102 () (_ BitVec 64))
(declare-fun temp10365_103 () (_ BitVec 64))
(declare-fun temp10365_104 () (_ BitVec 64))
(declare-fun temp10365_105 () (_ BitVec 64))
(declare-fun temp10365_106 () (_ BitVec 64))
(declare-fun temp10365_107 () (_ BitVec 64))
(declare-fun temp10365_108 () (_ BitVec 64))
(declare-fun temp10365_109 () (_ BitVec 64))
(declare-fun temp10365_110 () (_ BitVec 64))
(declare-fun temp10365_111 () (_ BitVec 64))
(declare-fun temp10365_112 () (_ BitVec 64))
(declare-fun temp10365_113 () (_ BitVec 64))
(declare-fun temp10365_114 () (_ BitVec 64))
(declare-fun temp10365_115 () (_ BitVec 64))
(declare-fun temp10365_116 () (_ BitVec 64))
(declare-fun temp10365_117 () (_ BitVec 64))
(declare-fun temp10365_118 () (_ BitVec 64))
(declare-fun temp10365_119 () (_ BitVec 64))
(declare-fun temp10365_120 () (_ BitVec 64))
(declare-fun temp10365_121 () (_ BitVec 64))
(declare-fun temp10365_122 () (_ BitVec 64))
(declare-fun temp10365_123 () (_ BitVec 64))
(declare-fun temp10365_124 () (_ BitVec 64))
(declare-fun temp10365_125 () (_ BitVec 64))
(declare-fun temp10365_126 () (_ BitVec 64))
(declare-fun temp10365_127 () (_ BitVec 64))
(declare-fun temp10365_128 () (_ BitVec 64))
(declare-fun temp10365_129 () (_ BitVec 64))
(declare-fun temp10365_130 () (_ BitVec 64))
(declare-fun temp10365_131 () (_ BitVec 64))
(declare-fun temp10365_132 () (_ BitVec 64))
(declare-fun temp10365_133 () (_ BitVec 64))
(declare-fun temp10365_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10365_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10365_136 () (_ BitVec 64))
(declare-fun temp10365_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10365_138 () (_ BitVec 64))
(declare-fun temp10365_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10365_140 () (_ BitVec 64))
(declare-fun temp10365_141 () (_ BitVec 64))
(declare-fun temp10365_142 () (_ BitVec 64))
(declare-fun temp10365_143 () (_ BitVec 64))
(declare-fun temp10365_144 () (_ BitVec 64))
(declare-fun temp10365_145 () (_ BitVec 64))
(declare-fun temp10365_146 () (_ BitVec 64))
(declare-fun temp10365_147 () (_ BitVec 64))
(declare-fun temp10365_148 () (_ BitVec 64))
(declare-fun temp10365_149 () (_ BitVec 64))
(declare-fun temp10365_150 () (_ BitVec 64))
(declare-fun temp10365_151 () (_ BitVec 64))
(declare-fun temp10365_152 () (_ BitVec 64))
(declare-fun temp10365_153 () (_ BitVec 64))
(declare-fun temp10365_154 () (_ BitVec 64))
(declare-fun temp10365_155 () (_ BitVec 64))
(declare-fun temp10365_157 () (_ BitVec 64))
(declare-fun temp10365_158 () (_ BitVec 64))
(declare-fun temp10365_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10365_159 () (_ BitVec 64))
(declare-fun temp10365_160 () (_ BitVec 64))
(declare-fun temp10365_162 () (_ BitVec 64))
(declare-fun temp10365_163 () (_ BitVec 64))
(declare-fun temp10365_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10365_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10365_165 () (_ BitVec 64))
(declare-fun temp10365_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10365_167 () (_ BitVec 64))
(declare-fun temp10365_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10365_169 () (_ BitVec 64))
(declare-fun temp10365_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10365_171 () (_ BitVec 64))
(declare-fun temp10365_172 () (_ BitVec 64))
(declare-fun temp10365_173 () (_ BitVec 64))
(declare-fun temp10365_174 () (_ BitVec 64))
(declare-fun temp10365_175 () (_ BitVec 64))
(declare-fun temp10365_176 () (_ BitVec 64))
(declare-fun temp10365_177 () (_ BitVec 64))
(declare-fun temp10365_178 () (_ BitVec 64))
(declare-fun temp10365_179 () (_ BitVec 64))
(declare-fun temp10365_180 () (_ BitVec 64))
(declare-fun temp10365_181 () (_ BitVec 64))
(declare-fun temp10365_182 () (_ BitVec 64))
(declare-fun temp10365_183 () (_ BitVec 64))
(declare-fun temp10365_184 () (_ BitVec 64))
(declare-fun temp10365_185 () (_ BitVec 64))
(declare-fun temp10365_186 () (_ BitVec 64))
(declare-fun temp10365_187 () (_ BitVec 64))
(declare-fun temp10365_188 () (_ BitVec 64))
(declare-fun temp10365_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10365_190 () (_ BitVec 64))
(declare-fun temp10365_192 () (_ BitVec 64))
(declare-fun temp10365_193 () (_ BitVec 64))
(declare-fun temp10365_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10365_194 () (_ BitVec 64))
(declare-fun temp10365_195 () (_ BitVec 64))
(declare-fun temp10365_197 () (_ BitVec 64))
(declare-fun temp10365_198 () (_ BitVec 64))
(declare-fun temp10365_196 () (_ BitVec 64))
(declare-fun temp10365_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10365_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10365_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10365_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10365_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10365_204 () (_ BitVec 64))
(declare-fun temp10365_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10365_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10365_207 () (_ BitVec 64))
(declare-fun temp10365_208 () (_ BitVec 64))
(declare-fun temp10365_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10365_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10365_211 () (_ BitVec 64))
(declare-fun temp10365_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10365_213 () (_ BitVec 64))
(declare-fun temp10365_214 () (_ BitVec 64))
(declare-fun temp10365_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10365_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10365_217 () (_ BitVec 64))
(declare-fun temp10365_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10365_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10365_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4927888 () (_ BitVec 64))
(declare-fun var5190032 () (_ BitVec 64))
(declare-fun temp10365_221 () (_ BitVec 64))
(declare-fun var5517712 () (_ BitVec 64))
(declare-fun temp10365_222 () (_ BitVec 64))
(assert (= temp10365_1 #x0000000000000001))
(assert (= var77203 temp10365_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10365_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10365_2)))
(assert (= temp10365_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10365_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10365_4 #x0000000000000000))
(assert (= var210941 temp10365_4))
(assert (= temp10365_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10365_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10365_6 #x0000000000000000))
(assert (= var210986 temp10365_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10365_7 #x0000000000000000))
(assert (= temp10365_8 temp10365_7))
(assert (= temp10365_9 (select ARGNAME_padding_NAMEEND_VAL temp10365_8)))
(assert (= temp10365_10 #x0000000000000001))
(assert (= temp10365_11 temp10365_10))
(assert (= temp10365_12 (select ARGNAME_padding_NAMEEND_VAL temp10365_11)))
(assert (= temp10365_13 #x0000000000000002))
(assert (= temp10365_14 temp10365_13))
(assert (= temp10365_15 (select ARGNAME_padding_NAMEEND_VAL temp10365_14)))
(assert (= temp10365_16 #x0000000000000003))
(assert (= temp10365_17 temp10365_16))
(assert (= temp10365_18 (select ARGNAME_padding_NAMEEND_VAL temp10365_17)))
(assert (= temp10365_19 #x0000000000000004))
(assert (= temp10365_20 temp10365_19))
(assert (= temp10365_21 (select ARGNAME_padding_NAMEEND_VAL temp10365_20)))
(assert (= temp10365_22 #x0000000000000005))
(assert (= temp10365_23 temp10365_22))
(assert (= temp10365_24 (select ARGNAME_padding_NAMEEND_VAL temp10365_23)))
(assert (= temp10365_25 #x0000000000000000))
(assert (= temp10365_26 #x0000000000000000))
(assert (= temp10365_27 temp10365_26))
(assert (= temp10365_28 (select ARGNAME_padding_NAMEEND_VAL temp10365_27)))
(assert (= temp10365_29 #x0000000000000000))
(assert (= temp10365_30 #x0000000000000001))
(assert (= temp10365_31 temp10365_30))
(assert (= temp10365_32 (select ARGNAME_padding_NAMEEND_VAL temp10365_31)))
(assert (= temp10365_33 #x0000000000000000))
(assert (= temp10365_34 #x0000000000000002))
(assert (= temp10365_35 temp10365_34))
(assert (= temp10365_36 (select ARGNAME_padding_NAMEEND_VAL temp10365_35)))
(assert (= temp10365_37 #x0000000000000000))
(assert (= temp10365_38 #x0000000000000003))
(assert (= temp10365_39 temp10365_38))
(assert (= temp10365_40 (select ARGNAME_padding_NAMEEND_VAL temp10365_39)))
(assert (= temp10365_41 #x0000000000000000))
(assert (= temp10365_42 #x0000000000000004))
(assert (= temp10365_43 temp10365_42))
(assert (= temp10365_44 (select ARGNAME_padding_NAMEEND_VAL temp10365_43)))
(assert (= temp10365_45 #x0000000000000000))
(assert (= temp10365_46 #x0000000000000005))
(assert (= temp10365_47 temp10365_46))
(assert (= temp10365_48 (select ARGNAME_padding_NAMEEND_VAL temp10365_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10365_28 temp10365_25)
             (bvslt temp10365_32 temp10365_29)
             (bvslt temp10365_36 temp10365_33)
             (bvslt temp10365_40 temp10365_37)
             (bvslt temp10365_44 temp10365_41)
             (bvslt temp10365_48 temp10365_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10365_49 #x0000000000000000))
(assert (= var1191714 temp10365_49))
(assert (= temp10365_50 #x0000000000000000))
(assert (= temp10365_51 temp10365_50))
(assert (= temp10365_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10365_51)))
(assert (= temp10365_53 #x0000000000000001))
(assert (= temp10365_54 temp10365_53))
(assert (= temp10365_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10365_54)))
(assert (= temp10365_56 #x0000000000000002))
(assert (= temp10365_57 temp10365_56))
(assert (= temp10365_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10365_57)))
(assert (= temp10365_59 #x0000000000000003))
(assert (= temp10365_60 temp10365_59))
(assert (= temp10365_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10365_60)))
(assert (= temp10365_62 #x0000000000000004))
(assert (= temp10365_63 temp10365_62))
(assert (= temp10365_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10365_63)))
(assert (= temp10365_65 #x0000000000000005))
(assert (= temp10365_66 temp10365_65))
(assert (= temp10365_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10365_66)))
(assert (= temp10365_68 #x0000000000000000))
(assert (= temp10365_69 #x0000000000000000))
(assert (= temp10365_70 temp10365_69))
(assert (= temp10365_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10365_70)))
(assert (= temp10365_72 #x0000000000000000))
(assert (= temp10365_73 #x0000000000000001))
(assert (= temp10365_74 temp10365_73))
(assert (= temp10365_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10365_74)))
(assert (= temp10365_76 #x0000000000000000))
(assert (= temp10365_77 #x0000000000000002))
(assert (= temp10365_78 temp10365_77))
(assert (= temp10365_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10365_78)))
(assert (= temp10365_80 #x0000000000000000))
(assert (= temp10365_81 #x0000000000000003))
(assert (= temp10365_82 temp10365_81))
(assert (= temp10365_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10365_82)))
(assert (= temp10365_84 #x0000000000000000))
(assert (= temp10365_85 #x0000000000000004))
(assert (= temp10365_86 temp10365_85))
(assert (= temp10365_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10365_86)))
(assert (= temp10365_88 #x0000000000000000))
(assert (= temp10365_89 #x0000000000000005))
(assert (= temp10365_90 temp10365_89))
(assert (= temp10365_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10365_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10365_71 temp10365_68)
             (bvslt temp10365_75 temp10365_72)
             (bvslt temp10365_79 temp10365_76)
             (bvslt temp10365_83 temp10365_80)
             (bvslt temp10365_87 temp10365_84)
             (bvslt temp10365_91 temp10365_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10365_92 #x0000000000000000))
(assert (= var1191725 temp10365_92))
(assert (= temp10365_93 #x0000000000000000))
(assert (= temp10365_94 temp10365_93))
(assert (= temp10365_95 (select ARGNAME_stride_NAMEEND_VAL temp10365_94)))
(assert (= temp10365_96 #x0000000000000001))
(assert (= temp10365_97 temp10365_96))
(assert (= temp10365_98 (select ARGNAME_stride_NAMEEND_VAL temp10365_97)))
(assert (= temp10365_99 #x0000000000000002))
(assert (= temp10365_100 temp10365_99))
(assert (= temp10365_101 (select ARGNAME_stride_NAMEEND_VAL temp10365_100)))
(assert (= temp10365_102 #x0000000000000003))
(assert (= temp10365_103 temp10365_102))
(assert (= temp10365_104 (select ARGNAME_stride_NAMEEND_VAL temp10365_103)))
(assert (= temp10365_105 #x0000000000000004))
(assert (= temp10365_106 temp10365_105))
(assert (= temp10365_107 (select ARGNAME_stride_NAMEEND_VAL temp10365_106)))
(assert (= temp10365_108 #x0000000000000005))
(assert (= temp10365_109 temp10365_108))
(assert (= temp10365_110 (select ARGNAME_stride_NAMEEND_VAL temp10365_109)))
(assert (= temp10365_111 #x0000000000000000))
(assert (= temp10365_112 #x0000000000000000))
(assert (= temp10365_113 temp10365_112))
(assert (= temp10365_114 (select ARGNAME_stride_NAMEEND_VAL temp10365_113)))
(assert (= temp10365_115 #x0000000000000000))
(assert (= temp10365_116 #x0000000000000001))
(assert (= temp10365_117 temp10365_116))
(assert (= temp10365_118 (select ARGNAME_stride_NAMEEND_VAL temp10365_117)))
(assert (= temp10365_119 #x0000000000000000))
(assert (= temp10365_120 #x0000000000000002))
(assert (= temp10365_121 temp10365_120))
(assert (= temp10365_122 (select ARGNAME_stride_NAMEEND_VAL temp10365_121)))
(assert (= temp10365_123 #x0000000000000000))
(assert (= temp10365_124 #x0000000000000003))
(assert (= temp10365_125 temp10365_124))
(assert (= temp10365_126 (select ARGNAME_stride_NAMEEND_VAL temp10365_125)))
(assert (= temp10365_127 #x0000000000000000))
(assert (= temp10365_128 #x0000000000000004))
(assert (= temp10365_129 temp10365_128))
(assert (= temp10365_130 (select ARGNAME_stride_NAMEEND_VAL temp10365_129)))
(assert (= temp10365_131 #x0000000000000000))
(assert (= temp10365_132 #x0000000000000005))
(assert (= temp10365_133 temp10365_132))
(assert (= temp10365_134 (select ARGNAME_stride_NAMEEND_VAL temp10365_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10365_114 temp10365_111)
             (bvsle temp10365_118 temp10365_115)
             (bvsle temp10365_122 temp10365_119)
             (bvsle temp10365_126 temp10365_123)
             (bvsle temp10365_130 temp10365_127)
             (bvsle temp10365_134 temp10365_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10365_135 #x0000000000000000))
(assert (= var1191735 temp10365_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10365_136 #x0000000000000001))
(assert (= var1191747 temp10365_136))
(assert (= temp10365_137 #x0000000000000000))
(assert (= var1179826 temp10365_137))
(assert (= temp10365_138 #x0000000000000000))
(assert (= temp10365_139 temp10365_138))
(assert (= temp10365_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10365_139)))
(assert (= temp10365_141 #x0000000000000001))
(assert (= temp10365_142 temp10365_141))
(assert (= temp10365_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10365_142)))
(assert (= temp10365_144 #x0000000000000002))
(assert (= temp10365_145 temp10365_144))
(assert (= temp10365_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10365_145)))
(assert (= temp10365_147 #x0000000000000003))
(assert (= temp10365_148 temp10365_147))
(assert (= temp10365_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10365_148)))
(assert (= temp10365_150 #x0000000000000004))
(assert (= temp10365_151 temp10365_150))
(assert (= temp10365_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10365_151)))
(assert (= temp10365_153 #x0000000000000005))
(assert (= temp10365_154 temp10365_153))
(assert (= temp10365_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10365_154)))
(assert (= temp10365_157 var1179826))
(assert (= temp10365_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10365_157)))
(assert (= temp10365_156 temp10365_158))
(assert (= var1191780
   (ite (bvslt temp10365_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10365_159 #x0000000000000000))
(assert (= var1191780 temp10365_159))
(assert (= temp10365_160 #x0000000000000000))
(assert (= var1179826 temp10365_160))
(assert (= temp10365_162 var1179826))
(assert (= temp10365_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10365_162)))
(assert (= temp10365_161 temp10365_163))
(assert (= var1191802 (bvsmod temp10365_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10365_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10365_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10365_165 #x0000000000000001))
(assert (= var1191803 temp10365_165))
(assert (= temp10365_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10365_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10365_167 #x0000000000000001))
(assert (= var1191823 temp10365_167))
(assert (= temp10365_168 #x0000000000000001))
(assert (= var1180714 temp10365_168))
(assert (= temp10365_169 #x0000000000000000))
(assert (= temp10365_170 temp10365_169))
(assert (= temp10365_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10365_170)))
(assert (= temp10365_172 #x0000000000000001))
(assert (= temp10365_173 temp10365_172))
(assert (= temp10365_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10365_173)))
(assert (= temp10365_175 #x0000000000000002))
(assert (= temp10365_176 temp10365_175))
(assert (= temp10365_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10365_176)))
(assert (= temp10365_178 #x0000000000000003))
(assert (= temp10365_179 temp10365_178))
(assert (= temp10365_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10365_179)))
(assert (= temp10365_181 #x0000000000000004))
(assert (= temp10365_182 temp10365_181))
(assert (= temp10365_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10365_182)))
(assert (= temp10365_184 #x0000000000000005))
(assert (= temp10365_185 temp10365_184))
(assert (= temp10365_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10365_185)))
(assert (= temp10365_187 #x0000000000000000))
(assert (= temp10365_188
   (ite (bvslt var1180714 temp10365_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10365_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10365_188)))
(assert (= var1191831 temp10365_189))
(assert (bvslt (ite (bvslt var1180714 temp10365_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10365_190 #x0000000000000001))
(assert (= var1180714 temp10365_190))
(assert (= temp10365_192 var1180714))
(assert (= temp10365_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10365_192)))
(assert (= temp10365_191 temp10365_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10365_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10365_194 #x0000000000000001))
(assert (= var1191836 temp10365_194))
(assert (= temp10365_195 #x0000000000000000))
(assert (= var1179826 temp10365_195))
(assert (= temp10365_197 var1179826))
(assert (= temp10365_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10365_197)))
(assert (= temp10365_196 temp10365_198))
(assert (= temp10365_199 #x0000000000000002))
(assert (= var1586025 temp10365_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10365_200 #x0000000000000001))
(assert (= var1191993 temp10365_200))
(assert (= temp10365_201 #x0000000000000001))
(assert (= var2700303 temp10365_201))
(assert (= temp10365_202 #x0000000000000001))
(assert (= var2962447 temp10365_202))
(assert (= temp10365_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10365_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10365_204 #x0000000000000001))
(assert (= var211058 temp10365_204))
(assert (= temp10365_205 #x0000000000000001))
(assert (= var211188 temp10365_205))
(assert (= var3879401 var211188))
(assert (= temp10365_206 #x0000000000000000))
(assert (= var3866802 temp10365_206))
(assert (= temp10365_207 #x0000000000000000))
(assert (= temp10365_208
   (ite (bvslt var3866802 temp10365_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10365_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10365_208)))
(assert (= var3879420 temp10365_209))
(assert (bvslt (ite (bvslt var3866802 temp10365_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10365_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10365_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10365_211 #x0000000000000000))
(assert (= var3879421 temp10365_211))
(assert (= temp10365_212 #x0000000000000001))
(assert (= var3867690 temp10365_212))
(assert (= temp10365_213 #x0000000000000000))
(assert (= temp10365_214
   (ite (bvslt var3867690 temp10365_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10365_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10365_214)))
(assert (= var3879423 temp10365_215))
(assert (bvslt (ite (bvslt var3867690 temp10365_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10365_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10365_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10365_217 #x0000000000000001))
(assert (= var3879424 temp10365_217))
(assert (= temp10365_218 #x0000000000000000))
(assert (= var4079423 temp10365_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10365_219 #x0000000000000002))
(assert (= var4208259 temp10365_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10365_220 #x0000000000000000))
(assert (= var4273820 temp10365_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4927888 var211201))
(assert (= var5190032 var211201))
(assert (= temp10365_221 #x0000000000000000))
(assert (= var5517712 temp10365_221))
(assert (= temp10365_222 #x0000000000000001))
(assert (= var211058 temp10365_222))
(model-add temp10365_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10365_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10365_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10365_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




