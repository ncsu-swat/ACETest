(declare-fun temp10508_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10508_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10508_3 () (_ BitVec 64))
(declare-fun temp10508_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10508_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10508_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10508_7 () (_ BitVec 64))
(declare-fun temp10508_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10508_9 () (_ BitVec 64))
(declare-fun temp10508_10 () (_ BitVec 64))
(declare-fun temp10508_11 () (_ BitVec 64))
(declare-fun temp10508_12 () (_ BitVec 64))
(declare-fun temp10508_13 () (_ BitVec 64))
(declare-fun temp10508_14 () (_ BitVec 64))
(declare-fun temp10508_15 () (_ BitVec 64))
(declare-fun temp10508_16 () (_ BitVec 64))
(declare-fun temp10508_17 () (_ BitVec 64))
(declare-fun temp10508_18 () (_ BitVec 64))
(declare-fun temp10508_19 () (_ BitVec 64))
(declare-fun temp10508_20 () (_ BitVec 64))
(declare-fun temp10508_21 () (_ BitVec 64))
(declare-fun temp10508_22 () (_ BitVec 64))
(declare-fun temp10508_23 () (_ BitVec 64))
(declare-fun temp10508_24 () (_ BitVec 64))
(declare-fun temp10508_25 () (_ BitVec 64))
(declare-fun temp10508_26 () (_ BitVec 64))
(declare-fun temp10508_27 () (_ BitVec 64))
(declare-fun temp10508_28 () (_ BitVec 64))
(declare-fun temp10508_29 () (_ BitVec 64))
(declare-fun temp10508_30 () (_ BitVec 64))
(declare-fun temp10508_31 () (_ BitVec 64))
(declare-fun temp10508_32 () (_ BitVec 64))
(declare-fun temp10508_33 () (_ BitVec 64))
(declare-fun temp10508_34 () (_ BitVec 64))
(declare-fun temp10508_35 () (_ BitVec 64))
(declare-fun temp10508_36 () (_ BitVec 64))
(declare-fun temp10508_37 () (_ BitVec 64))
(declare-fun temp10508_38 () (_ BitVec 64))
(declare-fun temp10508_39 () (_ BitVec 64))
(declare-fun temp10508_40 () (_ BitVec 64))
(declare-fun temp10508_41 () (_ BitVec 64))
(declare-fun temp10508_42 () (_ BitVec 64))
(declare-fun temp10508_43 () (_ BitVec 64))
(declare-fun temp10508_44 () (_ BitVec 64))
(declare-fun temp10508_45 () (_ BitVec 64))
(declare-fun temp10508_46 () (_ BitVec 64))
(declare-fun temp10508_47 () (_ BitVec 64))
(declare-fun temp10508_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10508_49 () (_ BitVec 64))
(declare-fun temp10508_50 () (_ BitVec 64))
(declare-fun temp10508_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10508_52 () (_ BitVec 64))
(declare-fun temp10508_53 () (_ BitVec 64))
(declare-fun temp10508_54 () (_ BitVec 64))
(declare-fun temp10508_55 () (_ BitVec 64))
(declare-fun temp10508_56 () (_ BitVec 64))
(declare-fun temp10508_57 () (_ BitVec 64))
(declare-fun temp10508_58 () (_ BitVec 64))
(declare-fun temp10508_59 () (_ BitVec 64))
(declare-fun temp10508_60 () (_ BitVec 64))
(declare-fun temp10508_61 () (_ BitVec 64))
(declare-fun temp10508_62 () (_ BitVec 64))
(declare-fun temp10508_63 () (_ BitVec 64))
(declare-fun temp10508_64 () (_ BitVec 64))
(declare-fun temp10508_65 () (_ BitVec 64))
(declare-fun temp10508_66 () (_ BitVec 64))
(declare-fun temp10508_67 () (_ BitVec 64))
(declare-fun temp10508_68 () (_ BitVec 64))
(declare-fun temp10508_69 () (_ BitVec 64))
(declare-fun temp10508_70 () (_ BitVec 64))
(declare-fun temp10508_71 () (_ BitVec 64))
(declare-fun temp10508_72 () (_ BitVec 64))
(declare-fun temp10508_73 () (_ BitVec 64))
(declare-fun temp10508_74 () (_ BitVec 64))
(declare-fun temp10508_75 () (_ BitVec 64))
(declare-fun temp10508_76 () (_ BitVec 64))
(declare-fun temp10508_77 () (_ BitVec 64))
(declare-fun temp10508_78 () (_ BitVec 64))
(declare-fun temp10508_79 () (_ BitVec 64))
(declare-fun temp10508_80 () (_ BitVec 64))
(declare-fun temp10508_81 () (_ BitVec 64))
(declare-fun temp10508_82 () (_ BitVec 64))
(declare-fun temp10508_83 () (_ BitVec 64))
(declare-fun temp10508_84 () (_ BitVec 64))
(declare-fun temp10508_85 () (_ BitVec 64))
(declare-fun temp10508_86 () (_ BitVec 64))
(declare-fun temp10508_87 () (_ BitVec 64))
(declare-fun temp10508_88 () (_ BitVec 64))
(declare-fun temp10508_89 () (_ BitVec 64))
(declare-fun temp10508_90 () (_ BitVec 64))
(declare-fun temp10508_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10508_92 () (_ BitVec 64))
(declare-fun temp10508_93 () (_ BitVec 64))
(declare-fun temp10508_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10508_95 () (_ BitVec 64))
(declare-fun temp10508_96 () (_ BitVec 64))
(declare-fun temp10508_97 () (_ BitVec 64))
(declare-fun temp10508_98 () (_ BitVec 64))
(declare-fun temp10508_99 () (_ BitVec 64))
(declare-fun temp10508_100 () (_ BitVec 64))
(declare-fun temp10508_101 () (_ BitVec 64))
(declare-fun temp10508_102 () (_ BitVec 64))
(declare-fun temp10508_103 () (_ BitVec 64))
(declare-fun temp10508_104 () (_ BitVec 64))
(declare-fun temp10508_105 () (_ BitVec 64))
(declare-fun temp10508_106 () (_ BitVec 64))
(declare-fun temp10508_107 () (_ BitVec 64))
(declare-fun temp10508_108 () (_ BitVec 64))
(declare-fun temp10508_109 () (_ BitVec 64))
(declare-fun temp10508_110 () (_ BitVec 64))
(declare-fun temp10508_111 () (_ BitVec 64))
(declare-fun temp10508_112 () (_ BitVec 64))
(declare-fun temp10508_113 () (_ BitVec 64))
(declare-fun temp10508_114 () (_ BitVec 64))
(declare-fun temp10508_115 () (_ BitVec 64))
(declare-fun temp10508_116 () (_ BitVec 64))
(declare-fun temp10508_117 () (_ BitVec 64))
(declare-fun temp10508_118 () (_ BitVec 64))
(declare-fun temp10508_119 () (_ BitVec 64))
(declare-fun temp10508_120 () (_ BitVec 64))
(declare-fun temp10508_121 () (_ BitVec 64))
(declare-fun temp10508_122 () (_ BitVec 64))
(declare-fun temp10508_123 () (_ BitVec 64))
(declare-fun temp10508_124 () (_ BitVec 64))
(declare-fun temp10508_125 () (_ BitVec 64))
(declare-fun temp10508_126 () (_ BitVec 64))
(declare-fun temp10508_127 () (_ BitVec 64))
(declare-fun temp10508_128 () (_ BitVec 64))
(declare-fun temp10508_129 () (_ BitVec 64))
(declare-fun temp10508_130 () (_ BitVec 64))
(declare-fun temp10508_131 () (_ BitVec 64))
(declare-fun temp10508_132 () (_ BitVec 64))
(declare-fun temp10508_133 () (_ BitVec 64))
(declare-fun temp10508_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10508_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10508_136 () (_ BitVec 64))
(declare-fun temp10508_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10508_138 () (_ BitVec 64))
(declare-fun temp10508_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10508_140 () (_ BitVec 64))
(declare-fun temp10508_141 () (_ BitVec 64))
(declare-fun temp10508_142 () (_ BitVec 64))
(declare-fun temp10508_143 () (_ BitVec 64))
(declare-fun temp10508_144 () (_ BitVec 64))
(declare-fun temp10508_145 () (_ BitVec 64))
(declare-fun temp10508_146 () (_ BitVec 64))
(declare-fun temp10508_147 () (_ BitVec 64))
(declare-fun temp10508_148 () (_ BitVec 64))
(declare-fun temp10508_149 () (_ BitVec 64))
(declare-fun temp10508_150 () (_ BitVec 64))
(declare-fun temp10508_151 () (_ BitVec 64))
(declare-fun temp10508_152 () (_ BitVec 64))
(declare-fun temp10508_153 () (_ BitVec 64))
(declare-fun temp10508_154 () (_ BitVec 64))
(declare-fun temp10508_155 () (_ BitVec 64))
(declare-fun temp10508_157 () (_ BitVec 64))
(declare-fun temp10508_158 () (_ BitVec 64))
(declare-fun temp10508_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10508_159 () (_ BitVec 64))
(declare-fun temp10508_160 () (_ BitVec 64))
(declare-fun temp10508_162 () (_ BitVec 64))
(declare-fun temp10508_163 () (_ BitVec 64))
(declare-fun temp10508_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10508_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10508_165 () (_ BitVec 64))
(declare-fun temp10508_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10508_167 () (_ BitVec 64))
(declare-fun temp10508_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10508_169 () (_ BitVec 64))
(declare-fun temp10508_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10508_171 () (_ BitVec 64))
(declare-fun temp10508_172 () (_ BitVec 64))
(declare-fun temp10508_173 () (_ BitVec 64))
(declare-fun temp10508_174 () (_ BitVec 64))
(declare-fun temp10508_175 () (_ BitVec 64))
(declare-fun temp10508_176 () (_ BitVec 64))
(declare-fun temp10508_177 () (_ BitVec 64))
(declare-fun temp10508_178 () (_ BitVec 64))
(declare-fun temp10508_179 () (_ BitVec 64))
(declare-fun temp10508_180 () (_ BitVec 64))
(declare-fun temp10508_181 () (_ BitVec 64))
(declare-fun temp10508_182 () (_ BitVec 64))
(declare-fun temp10508_183 () (_ BitVec 64))
(declare-fun temp10508_184 () (_ BitVec 64))
(declare-fun temp10508_185 () (_ BitVec 64))
(declare-fun temp10508_186 () (_ BitVec 64))
(declare-fun temp10508_187 () (_ BitVec 64))
(declare-fun temp10508_188 () (_ BitVec 64))
(declare-fun temp10508_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10508_190 () (_ BitVec 64))
(declare-fun temp10508_192 () (_ BitVec 64))
(declare-fun temp10508_193 () (_ BitVec 64))
(declare-fun temp10508_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10508_194 () (_ BitVec 64))
(declare-fun temp10508_195 () (_ BitVec 64))
(declare-fun temp10508_197 () (_ BitVec 64))
(declare-fun temp10508_198 () (_ BitVec 64))
(declare-fun temp10508_196 () (_ BitVec 64))
(declare-fun temp10508_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10508_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10508_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10508_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10508_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10508_204 () (_ BitVec 64))
(declare-fun temp10508_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10508_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10508_207 () (_ BitVec 64))
(declare-fun temp10508_208 () (_ BitVec 64))
(declare-fun temp10508_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10508_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10508_211 () (_ BitVec 64))
(declare-fun temp10508_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10508_213 () (_ BitVec 64))
(declare-fun temp10508_214 () (_ BitVec 64))
(declare-fun temp10508_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10508_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10508_217 () (_ BitVec 64))
(declare-fun temp10508_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10508_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10508_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4469136 () (_ BitVec 64))
(declare-fun var4731280 () (_ BitVec 64))
(declare-fun temp10508_221 () (_ BitVec 64))
(declare-fun var212414 () (_ BitVec 64))
(declare-fun temp10508_222 () (_ BitVec 64))
(declare-fun temp10508_223 () (_ BitVec 64))
(declare-fun temp10508_224 () (_ BitVec 64))
(declare-fun var5321492 () (_ BitVec 64))
(declare-fun var5321459 () (_ BitVec 64))
(declare-fun var5190023 () (_ BitVec 64))
(declare-fun var5190019 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp10508_225 () (_ BitVec 64))
(assert (= temp10508_1 #x0000000000000001))
(assert (= var77203 temp10508_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10508_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10508_2)))
(assert (= temp10508_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10508_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10508_4 #x0000000000000000))
(assert (= var210941 temp10508_4))
(assert (= temp10508_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10508_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10508_6 #x0000000000000000))
(assert (= var210986 temp10508_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10508_7 #x0000000000000000))
(assert (= temp10508_8 temp10508_7))
(assert (= temp10508_9 (select ARGNAME_padding_NAMEEND_VAL temp10508_8)))
(assert (= temp10508_10 #x0000000000000001))
(assert (= temp10508_11 temp10508_10))
(assert (= temp10508_12 (select ARGNAME_padding_NAMEEND_VAL temp10508_11)))
(assert (= temp10508_13 #x0000000000000002))
(assert (= temp10508_14 temp10508_13))
(assert (= temp10508_15 (select ARGNAME_padding_NAMEEND_VAL temp10508_14)))
(assert (= temp10508_16 #x0000000000000003))
(assert (= temp10508_17 temp10508_16))
(assert (= temp10508_18 (select ARGNAME_padding_NAMEEND_VAL temp10508_17)))
(assert (= temp10508_19 #x0000000000000004))
(assert (= temp10508_20 temp10508_19))
(assert (= temp10508_21 (select ARGNAME_padding_NAMEEND_VAL temp10508_20)))
(assert (= temp10508_22 #x0000000000000005))
(assert (= temp10508_23 temp10508_22))
(assert (= temp10508_24 (select ARGNAME_padding_NAMEEND_VAL temp10508_23)))
(assert (= temp10508_25 #x0000000000000000))
(assert (= temp10508_26 #x0000000000000000))
(assert (= temp10508_27 temp10508_26))
(assert (= temp10508_28 (select ARGNAME_padding_NAMEEND_VAL temp10508_27)))
(assert (= temp10508_29 #x0000000000000000))
(assert (= temp10508_30 #x0000000000000001))
(assert (= temp10508_31 temp10508_30))
(assert (= temp10508_32 (select ARGNAME_padding_NAMEEND_VAL temp10508_31)))
(assert (= temp10508_33 #x0000000000000000))
(assert (= temp10508_34 #x0000000000000002))
(assert (= temp10508_35 temp10508_34))
(assert (= temp10508_36 (select ARGNAME_padding_NAMEEND_VAL temp10508_35)))
(assert (= temp10508_37 #x0000000000000000))
(assert (= temp10508_38 #x0000000000000003))
(assert (= temp10508_39 temp10508_38))
(assert (= temp10508_40 (select ARGNAME_padding_NAMEEND_VAL temp10508_39)))
(assert (= temp10508_41 #x0000000000000000))
(assert (= temp10508_42 #x0000000000000004))
(assert (= temp10508_43 temp10508_42))
(assert (= temp10508_44 (select ARGNAME_padding_NAMEEND_VAL temp10508_43)))
(assert (= temp10508_45 #x0000000000000000))
(assert (= temp10508_46 #x0000000000000005))
(assert (= temp10508_47 temp10508_46))
(assert (= temp10508_48 (select ARGNAME_padding_NAMEEND_VAL temp10508_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10508_28 temp10508_25)
             (bvslt temp10508_32 temp10508_29)
             (bvslt temp10508_36 temp10508_33)
             (bvslt temp10508_40 temp10508_37)
             (bvslt temp10508_44 temp10508_41)
             (bvslt temp10508_48 temp10508_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10508_49 #x0000000000000000))
(assert (= var1191714 temp10508_49))
(assert (= temp10508_50 #x0000000000000000))
(assert (= temp10508_51 temp10508_50))
(assert (= temp10508_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10508_51)))
(assert (= temp10508_53 #x0000000000000001))
(assert (= temp10508_54 temp10508_53))
(assert (= temp10508_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10508_54)))
(assert (= temp10508_56 #x0000000000000002))
(assert (= temp10508_57 temp10508_56))
(assert (= temp10508_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10508_57)))
(assert (= temp10508_59 #x0000000000000003))
(assert (= temp10508_60 temp10508_59))
(assert (= temp10508_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10508_60)))
(assert (= temp10508_62 #x0000000000000004))
(assert (= temp10508_63 temp10508_62))
(assert (= temp10508_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10508_63)))
(assert (= temp10508_65 #x0000000000000005))
(assert (= temp10508_66 temp10508_65))
(assert (= temp10508_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10508_66)))
(assert (= temp10508_68 #x0000000000000000))
(assert (= temp10508_69 #x0000000000000000))
(assert (= temp10508_70 temp10508_69))
(assert (= temp10508_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10508_70)))
(assert (= temp10508_72 #x0000000000000000))
(assert (= temp10508_73 #x0000000000000001))
(assert (= temp10508_74 temp10508_73))
(assert (= temp10508_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10508_74)))
(assert (= temp10508_76 #x0000000000000000))
(assert (= temp10508_77 #x0000000000000002))
(assert (= temp10508_78 temp10508_77))
(assert (= temp10508_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10508_78)))
(assert (= temp10508_80 #x0000000000000000))
(assert (= temp10508_81 #x0000000000000003))
(assert (= temp10508_82 temp10508_81))
(assert (= temp10508_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10508_82)))
(assert (= temp10508_84 #x0000000000000000))
(assert (= temp10508_85 #x0000000000000004))
(assert (= temp10508_86 temp10508_85))
(assert (= temp10508_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10508_86)))
(assert (= temp10508_88 #x0000000000000000))
(assert (= temp10508_89 #x0000000000000005))
(assert (= temp10508_90 temp10508_89))
(assert (= temp10508_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10508_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10508_71 temp10508_68)
             (bvslt temp10508_75 temp10508_72)
             (bvslt temp10508_79 temp10508_76)
             (bvslt temp10508_83 temp10508_80)
             (bvslt temp10508_87 temp10508_84)
             (bvslt temp10508_91 temp10508_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10508_92 #x0000000000000000))
(assert (= var1191725 temp10508_92))
(assert (= temp10508_93 #x0000000000000000))
(assert (= temp10508_94 temp10508_93))
(assert (= temp10508_95 (select ARGNAME_stride_NAMEEND_VAL temp10508_94)))
(assert (= temp10508_96 #x0000000000000001))
(assert (= temp10508_97 temp10508_96))
(assert (= temp10508_98 (select ARGNAME_stride_NAMEEND_VAL temp10508_97)))
(assert (= temp10508_99 #x0000000000000002))
(assert (= temp10508_100 temp10508_99))
(assert (= temp10508_101 (select ARGNAME_stride_NAMEEND_VAL temp10508_100)))
(assert (= temp10508_102 #x0000000000000003))
(assert (= temp10508_103 temp10508_102))
(assert (= temp10508_104 (select ARGNAME_stride_NAMEEND_VAL temp10508_103)))
(assert (= temp10508_105 #x0000000000000004))
(assert (= temp10508_106 temp10508_105))
(assert (= temp10508_107 (select ARGNAME_stride_NAMEEND_VAL temp10508_106)))
(assert (= temp10508_108 #x0000000000000005))
(assert (= temp10508_109 temp10508_108))
(assert (= temp10508_110 (select ARGNAME_stride_NAMEEND_VAL temp10508_109)))
(assert (= temp10508_111 #x0000000000000000))
(assert (= temp10508_112 #x0000000000000000))
(assert (= temp10508_113 temp10508_112))
(assert (= temp10508_114 (select ARGNAME_stride_NAMEEND_VAL temp10508_113)))
(assert (= temp10508_115 #x0000000000000000))
(assert (= temp10508_116 #x0000000000000001))
(assert (= temp10508_117 temp10508_116))
(assert (= temp10508_118 (select ARGNAME_stride_NAMEEND_VAL temp10508_117)))
(assert (= temp10508_119 #x0000000000000000))
(assert (= temp10508_120 #x0000000000000002))
(assert (= temp10508_121 temp10508_120))
(assert (= temp10508_122 (select ARGNAME_stride_NAMEEND_VAL temp10508_121)))
(assert (= temp10508_123 #x0000000000000000))
(assert (= temp10508_124 #x0000000000000003))
(assert (= temp10508_125 temp10508_124))
(assert (= temp10508_126 (select ARGNAME_stride_NAMEEND_VAL temp10508_125)))
(assert (= temp10508_127 #x0000000000000000))
(assert (= temp10508_128 #x0000000000000004))
(assert (= temp10508_129 temp10508_128))
(assert (= temp10508_130 (select ARGNAME_stride_NAMEEND_VAL temp10508_129)))
(assert (= temp10508_131 #x0000000000000000))
(assert (= temp10508_132 #x0000000000000005))
(assert (= temp10508_133 temp10508_132))
(assert (= temp10508_134 (select ARGNAME_stride_NAMEEND_VAL temp10508_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10508_114 temp10508_111)
             (bvsle temp10508_118 temp10508_115)
             (bvsle temp10508_122 temp10508_119)
             (bvsle temp10508_126 temp10508_123)
             (bvsle temp10508_130 temp10508_127)
             (bvsle temp10508_134 temp10508_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10508_135 #x0000000000000000))
(assert (= var1191735 temp10508_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10508_136 #x0000000000000001))
(assert (= var1191747 temp10508_136))
(assert (= temp10508_137 #x0000000000000000))
(assert (= var1179826 temp10508_137))
(assert (= temp10508_138 #x0000000000000000))
(assert (= temp10508_139 temp10508_138))
(assert (= temp10508_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10508_139)))
(assert (= temp10508_141 #x0000000000000001))
(assert (= temp10508_142 temp10508_141))
(assert (= temp10508_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10508_142)))
(assert (= temp10508_144 #x0000000000000002))
(assert (= temp10508_145 temp10508_144))
(assert (= temp10508_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10508_145)))
(assert (= temp10508_147 #x0000000000000003))
(assert (= temp10508_148 temp10508_147))
(assert (= temp10508_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10508_148)))
(assert (= temp10508_150 #x0000000000000004))
(assert (= temp10508_151 temp10508_150))
(assert (= temp10508_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10508_151)))
(assert (= temp10508_153 #x0000000000000005))
(assert (= temp10508_154 temp10508_153))
(assert (= temp10508_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10508_154)))
(assert (= temp10508_157 var1179826))
(assert (= temp10508_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10508_157)))
(assert (= temp10508_156 temp10508_158))
(assert (= var1191780
   (ite (bvslt temp10508_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10508_159 #x0000000000000000))
(assert (= var1191780 temp10508_159))
(assert (= temp10508_160 #x0000000000000000))
(assert (= var1179826 temp10508_160))
(assert (= temp10508_162 var1179826))
(assert (= temp10508_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10508_162)))
(assert (= temp10508_161 temp10508_163))
(assert (= var1191802 (bvsmod temp10508_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10508_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10508_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10508_165 #x0000000000000001))
(assert (= var1191803 temp10508_165))
(assert (= temp10508_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10508_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10508_167 #x0000000000000001))
(assert (= var1191823 temp10508_167))
(assert (= temp10508_168 #x0000000000000001))
(assert (= var1180714 temp10508_168))
(assert (= temp10508_169 #x0000000000000000))
(assert (= temp10508_170 temp10508_169))
(assert (= temp10508_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10508_170)))
(assert (= temp10508_172 #x0000000000000001))
(assert (= temp10508_173 temp10508_172))
(assert (= temp10508_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10508_173)))
(assert (= temp10508_175 #x0000000000000002))
(assert (= temp10508_176 temp10508_175))
(assert (= temp10508_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10508_176)))
(assert (= temp10508_178 #x0000000000000003))
(assert (= temp10508_179 temp10508_178))
(assert (= temp10508_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10508_179)))
(assert (= temp10508_181 #x0000000000000004))
(assert (= temp10508_182 temp10508_181))
(assert (= temp10508_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10508_182)))
(assert (= temp10508_184 #x0000000000000005))
(assert (= temp10508_185 temp10508_184))
(assert (= temp10508_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10508_185)))
(assert (= temp10508_187 #x0000000000000000))
(assert (= temp10508_188
   (ite (bvslt var1180714 temp10508_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10508_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10508_188)))
(assert (= var1191831 temp10508_189))
(assert (bvslt (ite (bvslt var1180714 temp10508_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10508_190 #x0000000000000001))
(assert (= var1180714 temp10508_190))
(assert (= temp10508_192 var1180714))
(assert (= temp10508_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10508_192)))
(assert (= temp10508_191 temp10508_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10508_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10508_194 #x0000000000000001))
(assert (= var1191836 temp10508_194))
(assert (= temp10508_195 #x0000000000000000))
(assert (= var1179826 temp10508_195))
(assert (= temp10508_197 var1179826))
(assert (= temp10508_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10508_197)))
(assert (= temp10508_196 temp10508_198))
(assert (= temp10508_199 #x0000000000000002))
(assert (= var1586025 temp10508_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10508_200 #x0000000000000001))
(assert (= var1191993 temp10508_200))
(assert (= temp10508_201 #x0000000000000001))
(assert (= var2700303 temp10508_201))
(assert (= temp10508_202 #x0000000000000001))
(assert (= var2962447 temp10508_202))
(assert (= temp10508_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10508_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10508_204 #x0000000000000001))
(assert (= var211058 temp10508_204))
(assert (= temp10508_205 #x0000000000000001))
(assert (= var211188 temp10508_205))
(assert (= var3879401 var211188))
(assert (= temp10508_206 #x0000000000000000))
(assert (= var3866802 temp10508_206))
(assert (= temp10508_207 #x0000000000000000))
(assert (= temp10508_208
   (ite (bvslt var3866802 temp10508_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10508_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10508_208)))
(assert (= var3879420 temp10508_209))
(assert (bvslt (ite (bvslt var3866802 temp10508_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10508_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10508_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10508_211 #x0000000000000000))
(assert (= var3879421 temp10508_211))
(assert (= temp10508_212 #x0000000000000001))
(assert (= var3867690 temp10508_212))
(assert (= temp10508_213 #x0000000000000000))
(assert (= temp10508_214
   (ite (bvslt var3867690 temp10508_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10508_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10508_214)))
(assert (= var3879423 temp10508_215))
(assert (bvslt (ite (bvslt var3867690 temp10508_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10508_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10508_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10508_217 #x0000000000000001))
(assert (= var3879424 temp10508_217))
(assert (= temp10508_218 #x0000000000000000))
(assert (= var4079423 temp10508_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10508_219 #x0000000000000002))
(assert (= var4208259 temp10508_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10508_220 #x0000000000000000))
(assert (= var4273820 temp10508_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4469136 var211201))
(assert (= var4731280 var211201))
(assert (= temp10508_221 #x0000000000000001))
(assert (= var212414
   (ite (= ARGNAME_groups_NAMEEND temp10508_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10508_222 #x0000000000000000))
(assert (= var212414 temp10508_222))
(assert (= temp10508_223 #x0000000000000001))
(assert (= var211058 temp10508_223))
(assert (= temp10508_224 #x0000000000000000))
(assert (= var5321492 temp10508_224))
(assert (= var5321459 var5321492))
(assert (= var5190023 var5321459))
(assert (= var5190019 var5190023))
(assert (= var212669 var5190019))
(assert (= temp10508_225 #x0000000000000000))
(assert (= var212669 temp10508_225))
(model-add temp10508_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10508_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10508_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10508_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))



