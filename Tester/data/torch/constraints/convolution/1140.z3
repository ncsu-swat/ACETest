(declare-fun temp10250_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10250_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10250_3 () (_ BitVec 64))
(declare-fun temp10250_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10250_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10250_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10250_7 () (_ BitVec 64))
(declare-fun temp10250_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10250_9 () (_ BitVec 64))
(declare-fun temp10250_10 () (_ BitVec 64))
(declare-fun temp10250_11 () (_ BitVec 64))
(declare-fun temp10250_12 () (_ BitVec 64))
(declare-fun temp10250_13 () (_ BitVec 64))
(declare-fun temp10250_14 () (_ BitVec 64))
(declare-fun temp10250_15 () (_ BitVec 64))
(declare-fun temp10250_16 () (_ BitVec 64))
(declare-fun temp10250_17 () (_ BitVec 64))
(declare-fun temp10250_18 () (_ BitVec 64))
(declare-fun temp10250_19 () (_ BitVec 64))
(declare-fun temp10250_20 () (_ BitVec 64))
(declare-fun temp10250_21 () (_ BitVec 64))
(declare-fun temp10250_22 () (_ BitVec 64))
(declare-fun temp10250_23 () (_ BitVec 64))
(declare-fun temp10250_24 () (_ BitVec 64))
(declare-fun temp10250_25 () (_ BitVec 64))
(declare-fun temp10250_26 () (_ BitVec 64))
(declare-fun temp10250_27 () (_ BitVec 64))
(declare-fun temp10250_28 () (_ BitVec 64))
(declare-fun temp10250_29 () (_ BitVec 64))
(declare-fun temp10250_30 () (_ BitVec 64))
(declare-fun temp10250_31 () (_ BitVec 64))
(declare-fun temp10250_32 () (_ BitVec 64))
(declare-fun temp10250_33 () (_ BitVec 64))
(declare-fun temp10250_34 () (_ BitVec 64))
(declare-fun temp10250_35 () (_ BitVec 64))
(declare-fun temp10250_36 () (_ BitVec 64))
(declare-fun temp10250_37 () (_ BitVec 64))
(declare-fun temp10250_38 () (_ BitVec 64))
(declare-fun temp10250_39 () (_ BitVec 64))
(declare-fun temp10250_40 () (_ BitVec 64))
(declare-fun temp10250_41 () (_ BitVec 64))
(declare-fun temp10250_42 () (_ BitVec 64))
(declare-fun temp10250_43 () (_ BitVec 64))
(declare-fun temp10250_44 () (_ BitVec 64))
(declare-fun temp10250_45 () (_ BitVec 64))
(declare-fun temp10250_46 () (_ BitVec 64))
(declare-fun temp10250_47 () (_ BitVec 64))
(declare-fun temp10250_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10250_49 () (_ BitVec 64))
(declare-fun temp10250_50 () (_ BitVec 64))
(declare-fun temp10250_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10250_52 () (_ BitVec 64))
(declare-fun temp10250_53 () (_ BitVec 64))
(declare-fun temp10250_54 () (_ BitVec 64))
(declare-fun temp10250_55 () (_ BitVec 64))
(declare-fun temp10250_56 () (_ BitVec 64))
(declare-fun temp10250_57 () (_ BitVec 64))
(declare-fun temp10250_58 () (_ BitVec 64))
(declare-fun temp10250_59 () (_ BitVec 64))
(declare-fun temp10250_60 () (_ BitVec 64))
(declare-fun temp10250_61 () (_ BitVec 64))
(declare-fun temp10250_62 () (_ BitVec 64))
(declare-fun temp10250_63 () (_ BitVec 64))
(declare-fun temp10250_64 () (_ BitVec 64))
(declare-fun temp10250_65 () (_ BitVec 64))
(declare-fun temp10250_66 () (_ BitVec 64))
(declare-fun temp10250_67 () (_ BitVec 64))
(declare-fun temp10250_68 () (_ BitVec 64))
(declare-fun temp10250_69 () (_ BitVec 64))
(declare-fun temp10250_70 () (_ BitVec 64))
(declare-fun temp10250_71 () (_ BitVec 64))
(declare-fun temp10250_72 () (_ BitVec 64))
(declare-fun temp10250_73 () (_ BitVec 64))
(declare-fun temp10250_74 () (_ BitVec 64))
(declare-fun temp10250_75 () (_ BitVec 64))
(declare-fun temp10250_76 () (_ BitVec 64))
(declare-fun temp10250_77 () (_ BitVec 64))
(declare-fun temp10250_78 () (_ BitVec 64))
(declare-fun temp10250_79 () (_ BitVec 64))
(declare-fun temp10250_80 () (_ BitVec 64))
(declare-fun temp10250_81 () (_ BitVec 64))
(declare-fun temp10250_82 () (_ BitVec 64))
(declare-fun temp10250_83 () (_ BitVec 64))
(declare-fun temp10250_84 () (_ BitVec 64))
(declare-fun temp10250_85 () (_ BitVec 64))
(declare-fun temp10250_86 () (_ BitVec 64))
(declare-fun temp10250_87 () (_ BitVec 64))
(declare-fun temp10250_88 () (_ BitVec 64))
(declare-fun temp10250_89 () (_ BitVec 64))
(declare-fun temp10250_90 () (_ BitVec 64))
(declare-fun temp10250_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10250_92 () (_ BitVec 64))
(declare-fun temp10250_93 () (_ BitVec 64))
(declare-fun temp10250_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10250_95 () (_ BitVec 64))
(declare-fun temp10250_96 () (_ BitVec 64))
(declare-fun temp10250_97 () (_ BitVec 64))
(declare-fun temp10250_98 () (_ BitVec 64))
(declare-fun temp10250_99 () (_ BitVec 64))
(declare-fun temp10250_100 () (_ BitVec 64))
(declare-fun temp10250_101 () (_ BitVec 64))
(declare-fun temp10250_102 () (_ BitVec 64))
(declare-fun temp10250_103 () (_ BitVec 64))
(declare-fun temp10250_104 () (_ BitVec 64))
(declare-fun temp10250_105 () (_ BitVec 64))
(declare-fun temp10250_106 () (_ BitVec 64))
(declare-fun temp10250_107 () (_ BitVec 64))
(declare-fun temp10250_108 () (_ BitVec 64))
(declare-fun temp10250_109 () (_ BitVec 64))
(declare-fun temp10250_110 () (_ BitVec 64))
(declare-fun temp10250_111 () (_ BitVec 64))
(declare-fun temp10250_112 () (_ BitVec 64))
(declare-fun temp10250_113 () (_ BitVec 64))
(declare-fun temp10250_114 () (_ BitVec 64))
(declare-fun temp10250_115 () (_ BitVec 64))
(declare-fun temp10250_116 () (_ BitVec 64))
(declare-fun temp10250_117 () (_ BitVec 64))
(declare-fun temp10250_118 () (_ BitVec 64))
(declare-fun temp10250_119 () (_ BitVec 64))
(declare-fun temp10250_120 () (_ BitVec 64))
(declare-fun temp10250_121 () (_ BitVec 64))
(declare-fun temp10250_122 () (_ BitVec 64))
(declare-fun temp10250_123 () (_ BitVec 64))
(declare-fun temp10250_124 () (_ BitVec 64))
(declare-fun temp10250_125 () (_ BitVec 64))
(declare-fun temp10250_126 () (_ BitVec 64))
(declare-fun temp10250_127 () (_ BitVec 64))
(declare-fun temp10250_128 () (_ BitVec 64))
(declare-fun temp10250_129 () (_ BitVec 64))
(declare-fun temp10250_130 () (_ BitVec 64))
(declare-fun temp10250_131 () (_ BitVec 64))
(declare-fun temp10250_132 () (_ BitVec 64))
(declare-fun temp10250_133 () (_ BitVec 64))
(declare-fun temp10250_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10250_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10250_136 () (_ BitVec 64))
(declare-fun temp10250_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10250_138 () (_ BitVec 64))
(declare-fun temp10250_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10250_140 () (_ BitVec 64))
(declare-fun temp10250_141 () (_ BitVec 64))
(declare-fun temp10250_142 () (_ BitVec 64))
(declare-fun temp10250_143 () (_ BitVec 64))
(declare-fun temp10250_144 () (_ BitVec 64))
(declare-fun temp10250_145 () (_ BitVec 64))
(declare-fun temp10250_146 () (_ BitVec 64))
(declare-fun temp10250_147 () (_ BitVec 64))
(declare-fun temp10250_148 () (_ BitVec 64))
(declare-fun temp10250_149 () (_ BitVec 64))
(declare-fun temp10250_150 () (_ BitVec 64))
(declare-fun temp10250_151 () (_ BitVec 64))
(declare-fun temp10250_152 () (_ BitVec 64))
(declare-fun temp10250_153 () (_ BitVec 64))
(declare-fun temp10250_154 () (_ BitVec 64))
(declare-fun temp10250_155 () (_ BitVec 64))
(declare-fun temp10250_157 () (_ BitVec 64))
(declare-fun temp10250_158 () (_ BitVec 64))
(declare-fun temp10250_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10250_159 () (_ BitVec 64))
(declare-fun temp10250_160 () (_ BitVec 64))
(declare-fun temp10250_162 () (_ BitVec 64))
(declare-fun temp10250_163 () (_ BitVec 64))
(declare-fun temp10250_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10250_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10250_165 () (_ BitVec 64))
(declare-fun temp10250_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10250_167 () (_ BitVec 64))
(declare-fun temp10250_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10250_169 () (_ BitVec 64))
(declare-fun temp10250_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10250_171 () (_ BitVec 64))
(declare-fun temp10250_172 () (_ BitVec 64))
(declare-fun temp10250_173 () (_ BitVec 64))
(declare-fun temp10250_174 () (_ BitVec 64))
(declare-fun temp10250_175 () (_ BitVec 64))
(declare-fun temp10250_176 () (_ BitVec 64))
(declare-fun temp10250_177 () (_ BitVec 64))
(declare-fun temp10250_178 () (_ BitVec 64))
(declare-fun temp10250_179 () (_ BitVec 64))
(declare-fun temp10250_180 () (_ BitVec 64))
(declare-fun temp10250_181 () (_ BitVec 64))
(declare-fun temp10250_182 () (_ BitVec 64))
(declare-fun temp10250_183 () (_ BitVec 64))
(declare-fun temp10250_184 () (_ BitVec 64))
(declare-fun temp10250_185 () (_ BitVec 64))
(declare-fun temp10250_186 () (_ BitVec 64))
(declare-fun temp10250_187 () (_ BitVec 64))
(declare-fun temp10250_188 () (_ BitVec 64))
(declare-fun temp10250_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10250_190 () (_ BitVec 64))
(declare-fun temp10250_192 () (_ BitVec 64))
(declare-fun temp10250_193 () (_ BitVec 64))
(declare-fun temp10250_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10250_194 () (_ BitVec 64))
(declare-fun temp10250_195 () (_ BitVec 64))
(declare-fun temp10250_197 () (_ BitVec 64))
(declare-fun temp10250_198 () (_ BitVec 64))
(declare-fun temp10250_196 () (_ BitVec 64))
(declare-fun temp10250_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10250_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10250_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10250_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10250_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10250_204 () (_ BitVec 64))
(declare-fun temp10250_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10250_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10250_207 () (_ BitVec 64))
(declare-fun temp10250_208 () (_ BitVec 64))
(declare-fun temp10250_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10250_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10250_211 () (_ BitVec 64))
(declare-fun temp10250_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10250_213 () (_ BitVec 64))
(declare-fun temp10250_214 () (_ BitVec 64))
(declare-fun temp10250_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10250_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10250_217 () (_ BitVec 64))
(declare-fun temp10250_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10250_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10250_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4862352 () (_ BitVec 64))
(declare-fun var5124496 () (_ BitVec 64))
(declare-fun temp10250_221 () (_ BitVec 64))
(assert (= temp10250_1 #x0000000000000001))
(assert (= var77203 temp10250_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10250_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10250_2)))
(assert (= temp10250_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10250_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10250_4 #x0000000000000000))
(assert (= var210941 temp10250_4))
(assert (= temp10250_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10250_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10250_6 #x0000000000000000))
(assert (= var210986 temp10250_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10250_7 #x0000000000000000))
(assert (= temp10250_8 temp10250_7))
(assert (= temp10250_9 (select ARGNAME_padding_NAMEEND_VAL temp10250_8)))
(assert (= temp10250_10 #x0000000000000001))
(assert (= temp10250_11 temp10250_10))
(assert (= temp10250_12 (select ARGNAME_padding_NAMEEND_VAL temp10250_11)))
(assert (= temp10250_13 #x0000000000000002))
(assert (= temp10250_14 temp10250_13))
(assert (= temp10250_15 (select ARGNAME_padding_NAMEEND_VAL temp10250_14)))
(assert (= temp10250_16 #x0000000000000003))
(assert (= temp10250_17 temp10250_16))
(assert (= temp10250_18 (select ARGNAME_padding_NAMEEND_VAL temp10250_17)))
(assert (= temp10250_19 #x0000000000000004))
(assert (= temp10250_20 temp10250_19))
(assert (= temp10250_21 (select ARGNAME_padding_NAMEEND_VAL temp10250_20)))
(assert (= temp10250_22 #x0000000000000005))
(assert (= temp10250_23 temp10250_22))
(assert (= temp10250_24 (select ARGNAME_padding_NAMEEND_VAL temp10250_23)))
(assert (= temp10250_25 #x0000000000000000))
(assert (= temp10250_26 #x0000000000000000))
(assert (= temp10250_27 temp10250_26))
(assert (= temp10250_28 (select ARGNAME_padding_NAMEEND_VAL temp10250_27)))
(assert (= temp10250_29 #x0000000000000000))
(assert (= temp10250_30 #x0000000000000001))
(assert (= temp10250_31 temp10250_30))
(assert (= temp10250_32 (select ARGNAME_padding_NAMEEND_VAL temp10250_31)))
(assert (= temp10250_33 #x0000000000000000))
(assert (= temp10250_34 #x0000000000000002))
(assert (= temp10250_35 temp10250_34))
(assert (= temp10250_36 (select ARGNAME_padding_NAMEEND_VAL temp10250_35)))
(assert (= temp10250_37 #x0000000000000000))
(assert (= temp10250_38 #x0000000000000003))
(assert (= temp10250_39 temp10250_38))
(assert (= temp10250_40 (select ARGNAME_padding_NAMEEND_VAL temp10250_39)))
(assert (= temp10250_41 #x0000000000000000))
(assert (= temp10250_42 #x0000000000000004))
(assert (= temp10250_43 temp10250_42))
(assert (= temp10250_44 (select ARGNAME_padding_NAMEEND_VAL temp10250_43)))
(assert (= temp10250_45 #x0000000000000000))
(assert (= temp10250_46 #x0000000000000005))
(assert (= temp10250_47 temp10250_46))
(assert (= temp10250_48 (select ARGNAME_padding_NAMEEND_VAL temp10250_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10250_28 temp10250_25)
             (bvslt temp10250_32 temp10250_29)
             (bvslt temp10250_36 temp10250_33)
             (bvslt temp10250_40 temp10250_37)
             (bvslt temp10250_44 temp10250_41)
             (bvslt temp10250_48 temp10250_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10250_49 #x0000000000000000))
(assert (= var1191714 temp10250_49))
(assert (= temp10250_50 #x0000000000000000))
(assert (= temp10250_51 temp10250_50))
(assert (= temp10250_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10250_51)))
(assert (= temp10250_53 #x0000000000000001))
(assert (= temp10250_54 temp10250_53))
(assert (= temp10250_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10250_54)))
(assert (= temp10250_56 #x0000000000000002))
(assert (= temp10250_57 temp10250_56))
(assert (= temp10250_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10250_57)))
(assert (= temp10250_59 #x0000000000000003))
(assert (= temp10250_60 temp10250_59))
(assert (= temp10250_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10250_60)))
(assert (= temp10250_62 #x0000000000000004))
(assert (= temp10250_63 temp10250_62))
(assert (= temp10250_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10250_63)))
(assert (= temp10250_65 #x0000000000000005))
(assert (= temp10250_66 temp10250_65))
(assert (= temp10250_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10250_66)))
(assert (= temp10250_68 #x0000000000000000))
(assert (= temp10250_69 #x0000000000000000))
(assert (= temp10250_70 temp10250_69))
(assert (= temp10250_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10250_70)))
(assert (= temp10250_72 #x0000000000000000))
(assert (= temp10250_73 #x0000000000000001))
(assert (= temp10250_74 temp10250_73))
(assert (= temp10250_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10250_74)))
(assert (= temp10250_76 #x0000000000000000))
(assert (= temp10250_77 #x0000000000000002))
(assert (= temp10250_78 temp10250_77))
(assert (= temp10250_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10250_78)))
(assert (= temp10250_80 #x0000000000000000))
(assert (= temp10250_81 #x0000000000000003))
(assert (= temp10250_82 temp10250_81))
(assert (= temp10250_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10250_82)))
(assert (= temp10250_84 #x0000000000000000))
(assert (= temp10250_85 #x0000000000000004))
(assert (= temp10250_86 temp10250_85))
(assert (= temp10250_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10250_86)))
(assert (= temp10250_88 #x0000000000000000))
(assert (= temp10250_89 #x0000000000000005))
(assert (= temp10250_90 temp10250_89))
(assert (= temp10250_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10250_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10250_71 temp10250_68)
             (bvslt temp10250_75 temp10250_72)
             (bvslt temp10250_79 temp10250_76)
             (bvslt temp10250_83 temp10250_80)
             (bvslt temp10250_87 temp10250_84)
             (bvslt temp10250_91 temp10250_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10250_92 #x0000000000000000))
(assert (= var1191725 temp10250_92))
(assert (= temp10250_93 #x0000000000000000))
(assert (= temp10250_94 temp10250_93))
(assert (= temp10250_95 (select ARGNAME_stride_NAMEEND_VAL temp10250_94)))
(assert (= temp10250_96 #x0000000000000001))
(assert (= temp10250_97 temp10250_96))
(assert (= temp10250_98 (select ARGNAME_stride_NAMEEND_VAL temp10250_97)))
(assert (= temp10250_99 #x0000000000000002))
(assert (= temp10250_100 temp10250_99))
(assert (= temp10250_101 (select ARGNAME_stride_NAMEEND_VAL temp10250_100)))
(assert (= temp10250_102 #x0000000000000003))
(assert (= temp10250_103 temp10250_102))
(assert (= temp10250_104 (select ARGNAME_stride_NAMEEND_VAL temp10250_103)))
(assert (= temp10250_105 #x0000000000000004))
(assert (= temp10250_106 temp10250_105))
(assert (= temp10250_107 (select ARGNAME_stride_NAMEEND_VAL temp10250_106)))
(assert (= temp10250_108 #x0000000000000005))
(assert (= temp10250_109 temp10250_108))
(assert (= temp10250_110 (select ARGNAME_stride_NAMEEND_VAL temp10250_109)))
(assert (= temp10250_111 #x0000000000000000))
(assert (= temp10250_112 #x0000000000000000))
(assert (= temp10250_113 temp10250_112))
(assert (= temp10250_114 (select ARGNAME_stride_NAMEEND_VAL temp10250_113)))
(assert (= temp10250_115 #x0000000000000000))
(assert (= temp10250_116 #x0000000000000001))
(assert (= temp10250_117 temp10250_116))
(assert (= temp10250_118 (select ARGNAME_stride_NAMEEND_VAL temp10250_117)))
(assert (= temp10250_119 #x0000000000000000))
(assert (= temp10250_120 #x0000000000000002))
(assert (= temp10250_121 temp10250_120))
(assert (= temp10250_122 (select ARGNAME_stride_NAMEEND_VAL temp10250_121)))
(assert (= temp10250_123 #x0000000000000000))
(assert (= temp10250_124 #x0000000000000003))
(assert (= temp10250_125 temp10250_124))
(assert (= temp10250_126 (select ARGNAME_stride_NAMEEND_VAL temp10250_125)))
(assert (= temp10250_127 #x0000000000000000))
(assert (= temp10250_128 #x0000000000000004))
(assert (= temp10250_129 temp10250_128))
(assert (= temp10250_130 (select ARGNAME_stride_NAMEEND_VAL temp10250_129)))
(assert (= temp10250_131 #x0000000000000000))
(assert (= temp10250_132 #x0000000000000005))
(assert (= temp10250_133 temp10250_132))
(assert (= temp10250_134 (select ARGNAME_stride_NAMEEND_VAL temp10250_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10250_114 temp10250_111)
             (bvsle temp10250_118 temp10250_115)
             (bvsle temp10250_122 temp10250_119)
             (bvsle temp10250_126 temp10250_123)
             (bvsle temp10250_130 temp10250_127)
             (bvsle temp10250_134 temp10250_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10250_135 #x0000000000000000))
(assert (= var1191735 temp10250_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10250_136 #x0000000000000001))
(assert (= var1191747 temp10250_136))
(assert (= temp10250_137 #x0000000000000000))
(assert (= var1179826 temp10250_137))
(assert (= temp10250_138 #x0000000000000000))
(assert (= temp10250_139 temp10250_138))
(assert (= temp10250_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10250_139)))
(assert (= temp10250_141 #x0000000000000001))
(assert (= temp10250_142 temp10250_141))
(assert (= temp10250_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10250_142)))
(assert (= temp10250_144 #x0000000000000002))
(assert (= temp10250_145 temp10250_144))
(assert (= temp10250_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10250_145)))
(assert (= temp10250_147 #x0000000000000003))
(assert (= temp10250_148 temp10250_147))
(assert (= temp10250_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10250_148)))
(assert (= temp10250_150 #x0000000000000004))
(assert (= temp10250_151 temp10250_150))
(assert (= temp10250_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10250_151)))
(assert (= temp10250_153 #x0000000000000005))
(assert (= temp10250_154 temp10250_153))
(assert (= temp10250_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10250_154)))
(assert (= temp10250_157 var1179826))
(assert (= temp10250_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10250_157)))
(assert (= temp10250_156 temp10250_158))
(assert (= var1191780
   (ite (bvslt temp10250_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10250_159 #x0000000000000000))
(assert (= var1191780 temp10250_159))
(assert (= temp10250_160 #x0000000000000000))
(assert (= var1179826 temp10250_160))
(assert (= temp10250_162 var1179826))
(assert (= temp10250_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10250_162)))
(assert (= temp10250_161 temp10250_163))
(assert (= var1191802 (bvsmod temp10250_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10250_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10250_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10250_165 #x0000000000000001))
(assert (= var1191803 temp10250_165))
(assert (= temp10250_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10250_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10250_167 #x0000000000000001))
(assert (= var1191823 temp10250_167))
(assert (= temp10250_168 #x0000000000000001))
(assert (= var1180714 temp10250_168))
(assert (= temp10250_169 #x0000000000000000))
(assert (= temp10250_170 temp10250_169))
(assert (= temp10250_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10250_170)))
(assert (= temp10250_172 #x0000000000000001))
(assert (= temp10250_173 temp10250_172))
(assert (= temp10250_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10250_173)))
(assert (= temp10250_175 #x0000000000000002))
(assert (= temp10250_176 temp10250_175))
(assert (= temp10250_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10250_176)))
(assert (= temp10250_178 #x0000000000000003))
(assert (= temp10250_179 temp10250_178))
(assert (= temp10250_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10250_179)))
(assert (= temp10250_181 #x0000000000000004))
(assert (= temp10250_182 temp10250_181))
(assert (= temp10250_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10250_182)))
(assert (= temp10250_184 #x0000000000000005))
(assert (= temp10250_185 temp10250_184))
(assert (= temp10250_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10250_185)))
(assert (= temp10250_187 #x0000000000000000))
(assert (= temp10250_188
   (ite (bvslt var1180714 temp10250_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10250_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10250_188)))
(assert (= var1191831 temp10250_189))
(assert (bvslt (ite (bvslt var1180714 temp10250_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10250_190 #x0000000000000001))
(assert (= var1180714 temp10250_190))
(assert (= temp10250_192 var1180714))
(assert (= temp10250_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10250_192)))
(assert (= temp10250_191 temp10250_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10250_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10250_194 #x0000000000000001))
(assert (= var1191836 temp10250_194))
(assert (= temp10250_195 #x0000000000000000))
(assert (= var1179826 temp10250_195))
(assert (= temp10250_197 var1179826))
(assert (= temp10250_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10250_197)))
(assert (= temp10250_196 temp10250_198))
(assert (= temp10250_199 #x0000000000000002))
(assert (= var1586025 temp10250_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10250_200 #x0000000000000001))
(assert (= var1191993 temp10250_200))
(assert (= temp10250_201 #x0000000000000001))
(assert (= var2700303 temp10250_201))
(assert (= temp10250_202 #x0000000000000001))
(assert (= var2962447 temp10250_202))
(assert (= temp10250_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10250_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10250_204 #x0000000000000001))
(assert (= var211058 temp10250_204))
(assert (= temp10250_205 #x0000000000000001))
(assert (= var211188 temp10250_205))
(assert (= var3879401 var211188))
(assert (= temp10250_206 #x0000000000000000))
(assert (= var3866802 temp10250_206))
(assert (= temp10250_207 #x0000000000000000))
(assert (= temp10250_208
   (ite (bvslt var3866802 temp10250_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10250_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10250_208)))
(assert (= var3879420 temp10250_209))
(assert (bvslt (ite (bvslt var3866802 temp10250_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10250_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10250_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10250_211 #x0000000000000000))
(assert (= var3879421 temp10250_211))
(assert (= temp10250_212 #x0000000000000001))
(assert (= var3867690 temp10250_212))
(assert (= temp10250_213 #x0000000000000000))
(assert (= temp10250_214
   (ite (bvslt var3867690 temp10250_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10250_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10250_214)))
(assert (= var3879423 temp10250_215))
(assert (bvslt (ite (bvslt var3867690 temp10250_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10250_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10250_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10250_217 #x0000000000000001))
(assert (= var3879424 temp10250_217))
(assert (= temp10250_218 #x0000000000000000))
(assert (= var4079423 temp10250_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10250_219 #x0000000000000002))
(assert (= var4208259 temp10250_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10250_220 #x0000000000000000))
(assert (= var4273820 temp10250_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4862352 var211201))
(assert (= var5124496 var211201))
(assert (= temp10250_221 #x0000000000000001))
(assert (= var211058 temp10250_221))
(model-add temp10250_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10250_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10250_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10250_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




