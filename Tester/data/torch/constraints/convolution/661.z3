(declare-fun temp881_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp881_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp881_3 () (_ BitVec 64))
(declare-fun temp881_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp881_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp881_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp881_7 () (_ BitVec 64))
(declare-fun temp881_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp881_9 () (_ BitVec 64))
(declare-fun temp881_10 () (_ BitVec 64))
(declare-fun temp881_11 () (_ BitVec 64))
(declare-fun temp881_12 () (_ BitVec 64))
(declare-fun temp881_13 () (_ BitVec 64))
(declare-fun temp881_14 () (_ BitVec 64))
(declare-fun temp881_15 () (_ BitVec 64))
(declare-fun temp881_16 () (_ BitVec 64))
(declare-fun temp881_17 () (_ BitVec 64))
(declare-fun temp881_18 () (_ BitVec 64))
(declare-fun temp881_19 () (_ BitVec 64))
(declare-fun temp881_20 () (_ BitVec 64))
(declare-fun temp881_21 () (_ BitVec 64))
(declare-fun temp881_22 () (_ BitVec 64))
(declare-fun temp881_23 () (_ BitVec 64))
(declare-fun temp881_24 () (_ BitVec 64))
(declare-fun temp881_25 () (_ BitVec 64))
(declare-fun temp881_26 () (_ BitVec 64))
(declare-fun temp881_27 () (_ BitVec 64))
(declare-fun temp881_28 () (_ BitVec 64))
(declare-fun temp881_29 () (_ BitVec 64))
(declare-fun temp881_30 () (_ BitVec 64))
(declare-fun temp881_31 () (_ BitVec 64))
(declare-fun temp881_32 () (_ BitVec 64))
(declare-fun temp881_33 () (_ BitVec 64))
(declare-fun temp881_34 () (_ BitVec 64))
(declare-fun temp881_35 () (_ BitVec 64))
(declare-fun temp881_36 () (_ BitVec 64))
(declare-fun temp881_37 () (_ BitVec 64))
(declare-fun temp881_38 () (_ BitVec 64))
(declare-fun temp881_39 () (_ BitVec 64))
(declare-fun temp881_40 () (_ BitVec 64))
(declare-fun temp881_41 () (_ BitVec 64))
(declare-fun temp881_42 () (_ BitVec 64))
(declare-fun temp881_43 () (_ BitVec 64))
(declare-fun temp881_44 () (_ BitVec 64))
(declare-fun temp881_45 () (_ BitVec 64))
(declare-fun temp881_46 () (_ BitVec 64))
(declare-fun temp881_47 () (_ BitVec 64))
(declare-fun temp881_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp881_49 () (_ BitVec 64))
(declare-fun temp881_50 () (_ BitVec 64))
(declare-fun temp881_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp881_52 () (_ BitVec 64))
(declare-fun temp881_53 () (_ BitVec 64))
(declare-fun temp881_54 () (_ BitVec 64))
(declare-fun temp881_55 () (_ BitVec 64))
(declare-fun temp881_56 () (_ BitVec 64))
(declare-fun temp881_57 () (_ BitVec 64))
(declare-fun temp881_58 () (_ BitVec 64))
(declare-fun temp881_59 () (_ BitVec 64))
(declare-fun temp881_60 () (_ BitVec 64))
(declare-fun temp881_61 () (_ BitVec 64))
(declare-fun temp881_62 () (_ BitVec 64))
(declare-fun temp881_63 () (_ BitVec 64))
(declare-fun temp881_64 () (_ BitVec 64))
(declare-fun temp881_65 () (_ BitVec 64))
(declare-fun temp881_66 () (_ BitVec 64))
(declare-fun temp881_67 () (_ BitVec 64))
(declare-fun temp881_68 () (_ BitVec 64))
(declare-fun temp881_69 () (_ BitVec 64))
(declare-fun temp881_70 () (_ BitVec 64))
(declare-fun temp881_71 () (_ BitVec 64))
(declare-fun temp881_72 () (_ BitVec 64))
(declare-fun temp881_73 () (_ BitVec 64))
(declare-fun temp881_74 () (_ BitVec 64))
(declare-fun temp881_75 () (_ BitVec 64))
(declare-fun temp881_76 () (_ BitVec 64))
(declare-fun temp881_77 () (_ BitVec 64))
(declare-fun temp881_78 () (_ BitVec 64))
(declare-fun temp881_79 () (_ BitVec 64))
(declare-fun temp881_80 () (_ BitVec 64))
(declare-fun temp881_81 () (_ BitVec 64))
(declare-fun temp881_82 () (_ BitVec 64))
(declare-fun temp881_83 () (_ BitVec 64))
(declare-fun temp881_84 () (_ BitVec 64))
(declare-fun temp881_85 () (_ BitVec 64))
(declare-fun temp881_86 () (_ BitVec 64))
(declare-fun temp881_87 () (_ BitVec 64))
(declare-fun temp881_88 () (_ BitVec 64))
(declare-fun temp881_89 () (_ BitVec 64))
(declare-fun temp881_90 () (_ BitVec 64))
(declare-fun temp881_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp881_92 () (_ BitVec 64))
(declare-fun temp881_93 () (_ BitVec 64))
(declare-fun temp881_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp881_95 () (_ BitVec 64))
(declare-fun temp881_96 () (_ BitVec 64))
(declare-fun temp881_97 () (_ BitVec 64))
(declare-fun temp881_98 () (_ BitVec 64))
(declare-fun temp881_99 () (_ BitVec 64))
(declare-fun temp881_100 () (_ BitVec 64))
(declare-fun temp881_101 () (_ BitVec 64))
(declare-fun temp881_102 () (_ BitVec 64))
(declare-fun temp881_103 () (_ BitVec 64))
(declare-fun temp881_104 () (_ BitVec 64))
(declare-fun temp881_105 () (_ BitVec 64))
(declare-fun temp881_106 () (_ BitVec 64))
(declare-fun temp881_107 () (_ BitVec 64))
(declare-fun temp881_108 () (_ BitVec 64))
(declare-fun temp881_109 () (_ BitVec 64))
(declare-fun temp881_110 () (_ BitVec 64))
(declare-fun temp881_111 () (_ BitVec 64))
(declare-fun temp881_112 () (_ BitVec 64))
(declare-fun temp881_113 () (_ BitVec 64))
(declare-fun temp881_114 () (_ BitVec 64))
(declare-fun temp881_115 () (_ BitVec 64))
(declare-fun temp881_116 () (_ BitVec 64))
(declare-fun temp881_117 () (_ BitVec 64))
(declare-fun temp881_118 () (_ BitVec 64))
(declare-fun temp881_119 () (_ BitVec 64))
(declare-fun temp881_120 () (_ BitVec 64))
(declare-fun temp881_121 () (_ BitVec 64))
(declare-fun temp881_122 () (_ BitVec 64))
(declare-fun temp881_123 () (_ BitVec 64))
(declare-fun temp881_124 () (_ BitVec 64))
(declare-fun temp881_125 () (_ BitVec 64))
(declare-fun temp881_126 () (_ BitVec 64))
(declare-fun temp881_127 () (_ BitVec 64))
(declare-fun temp881_128 () (_ BitVec 64))
(declare-fun temp881_129 () (_ BitVec 64))
(declare-fun temp881_130 () (_ BitVec 64))
(declare-fun temp881_131 () (_ BitVec 64))
(declare-fun temp881_132 () (_ BitVec 64))
(declare-fun temp881_133 () (_ BitVec 64))
(declare-fun temp881_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp881_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp881_136 () (_ BitVec 64))
(declare-fun temp881_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp881_138 () (_ BitVec 64))
(declare-fun temp881_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp881_140 () (_ BitVec 64))
(declare-fun temp881_141 () (_ BitVec 64))
(declare-fun temp881_142 () (_ BitVec 64))
(declare-fun temp881_143 () (_ BitVec 64))
(declare-fun temp881_144 () (_ BitVec 64))
(declare-fun temp881_145 () (_ BitVec 64))
(declare-fun temp881_146 () (_ BitVec 64))
(declare-fun temp881_147 () (_ BitVec 64))
(declare-fun temp881_148 () (_ BitVec 64))
(declare-fun temp881_149 () (_ BitVec 64))
(declare-fun temp881_150 () (_ BitVec 64))
(declare-fun temp881_151 () (_ BitVec 64))
(declare-fun temp881_152 () (_ BitVec 64))
(declare-fun temp881_153 () (_ BitVec 64))
(declare-fun temp881_154 () (_ BitVec 64))
(declare-fun temp881_155 () (_ BitVec 64))
(declare-fun temp881_157 () (_ BitVec 64))
(declare-fun temp881_158 () (_ BitVec 64))
(declare-fun temp881_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp881_159 () (_ BitVec 64))
(declare-fun temp881_160 () (_ BitVec 64))
(declare-fun temp881_162 () (_ BitVec 64))
(declare-fun temp881_163 () (_ BitVec 64))
(declare-fun temp881_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp881_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp881_165 () (_ BitVec 64))
(declare-fun temp881_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp881_167 () (_ BitVec 64))
(declare-fun temp881_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp881_169 () (_ BitVec 64))
(declare-fun temp881_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp881_171 () (_ BitVec 64))
(declare-fun temp881_172 () (_ BitVec 64))
(declare-fun temp881_173 () (_ BitVec 64))
(declare-fun temp881_174 () (_ BitVec 64))
(declare-fun temp881_175 () (_ BitVec 64))
(declare-fun temp881_176 () (_ BitVec 64))
(declare-fun temp881_177 () (_ BitVec 64))
(declare-fun temp881_178 () (_ BitVec 64))
(declare-fun temp881_179 () (_ BitVec 64))
(declare-fun temp881_180 () (_ BitVec 64))
(declare-fun temp881_181 () (_ BitVec 64))
(declare-fun temp881_182 () (_ BitVec 64))
(declare-fun temp881_183 () (_ BitVec 64))
(declare-fun temp881_184 () (_ BitVec 64))
(declare-fun temp881_185 () (_ BitVec 64))
(declare-fun temp881_186 () (_ BitVec 64))
(declare-fun temp881_187 () (_ BitVec 64))
(declare-fun temp881_188 () (_ BitVec 64))
(declare-fun temp881_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp881_190 () (_ BitVec 64))
(declare-fun temp881_192 () (_ BitVec 64))
(declare-fun temp881_193 () (_ BitVec 64))
(declare-fun temp881_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp881_194 () (_ BitVec 64))
(declare-fun temp881_195 () (_ BitVec 64))
(declare-fun temp881_197 () (_ BitVec 64))
(declare-fun temp881_198 () (_ BitVec 64))
(declare-fun temp881_196 () (_ BitVec 64))
(declare-fun temp881_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp881_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp881_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp881_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp881_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp881_204 () (_ BitVec 64))
(declare-fun temp881_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp881_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp881_207 () (_ BitVec 64))
(declare-fun temp881_208 () (_ BitVec 64))
(declare-fun temp881_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp881_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp881_211 () (_ BitVec 64))
(declare-fun temp881_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp881_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp881_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var5321104 () (_ BitVec 64))
(declare-fun var5583248 () (_ BitVec 64))
(declare-fun temp881_215 () (_ BitVec 64))
(assert (= temp881_1 #x0000000000000001))
(assert (= var77203 temp881_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp881_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp881_2)))
(assert (= temp881_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp881_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp881_4 #x0000000000000000))
(assert (= var210941 temp881_4))
(assert (= temp881_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp881_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp881_6 #x0000000000000000))
(assert (= var210986 temp881_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp881_7 #x0000000000000000))
(assert (= temp881_8 temp881_7))
(assert (= temp881_9 (select ARGNAME_padding_NAMEEND_VAL temp881_8)))
(assert (= temp881_10 #x0000000000000001))
(assert (= temp881_11 temp881_10))
(assert (= temp881_12 (select ARGNAME_padding_NAMEEND_VAL temp881_11)))
(assert (= temp881_13 #x0000000000000002))
(assert (= temp881_14 temp881_13))
(assert (= temp881_15 (select ARGNAME_padding_NAMEEND_VAL temp881_14)))
(assert (= temp881_16 #x0000000000000003))
(assert (= temp881_17 temp881_16))
(assert (= temp881_18 (select ARGNAME_padding_NAMEEND_VAL temp881_17)))
(assert (= temp881_19 #x0000000000000004))
(assert (= temp881_20 temp881_19))
(assert (= temp881_21 (select ARGNAME_padding_NAMEEND_VAL temp881_20)))
(assert (= temp881_22 #x0000000000000005))
(assert (= temp881_23 temp881_22))
(assert (= temp881_24 (select ARGNAME_padding_NAMEEND_VAL temp881_23)))
(assert (= temp881_25 #x0000000000000000))
(assert (= temp881_26 #x0000000000000000))
(assert (= temp881_27 temp881_26))
(assert (= temp881_28 (select ARGNAME_padding_NAMEEND_VAL temp881_27)))
(assert (= temp881_29 #x0000000000000000))
(assert (= temp881_30 #x0000000000000001))
(assert (= temp881_31 temp881_30))
(assert (= temp881_32 (select ARGNAME_padding_NAMEEND_VAL temp881_31)))
(assert (= temp881_33 #x0000000000000000))
(assert (= temp881_34 #x0000000000000002))
(assert (= temp881_35 temp881_34))
(assert (= temp881_36 (select ARGNAME_padding_NAMEEND_VAL temp881_35)))
(assert (= temp881_37 #x0000000000000000))
(assert (= temp881_38 #x0000000000000003))
(assert (= temp881_39 temp881_38))
(assert (= temp881_40 (select ARGNAME_padding_NAMEEND_VAL temp881_39)))
(assert (= temp881_41 #x0000000000000000))
(assert (= temp881_42 #x0000000000000004))
(assert (= temp881_43 temp881_42))
(assert (= temp881_44 (select ARGNAME_padding_NAMEEND_VAL temp881_43)))
(assert (= temp881_45 #x0000000000000000))
(assert (= temp881_46 #x0000000000000005))
(assert (= temp881_47 temp881_46))
(assert (= temp881_48 (select ARGNAME_padding_NAMEEND_VAL temp881_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp881_28 temp881_25)
             (bvslt temp881_32 temp881_29)
             (bvslt temp881_36 temp881_33)
             (bvslt temp881_40 temp881_37)
             (bvslt temp881_44 temp881_41)
             (bvslt temp881_48 temp881_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp881_49 #x0000000000000000))
(assert (= var1191714 temp881_49))
(assert (= temp881_50 #x0000000000000000))
(assert (= temp881_51 temp881_50))
(assert (= temp881_52 (select ARGNAME_output_padding_NAMEEND_VAL temp881_51)))
(assert (= temp881_53 #x0000000000000001))
(assert (= temp881_54 temp881_53))
(assert (= temp881_55 (select ARGNAME_output_padding_NAMEEND_VAL temp881_54)))
(assert (= temp881_56 #x0000000000000002))
(assert (= temp881_57 temp881_56))
(assert (= temp881_58 (select ARGNAME_output_padding_NAMEEND_VAL temp881_57)))
(assert (= temp881_59 #x0000000000000003))
(assert (= temp881_60 temp881_59))
(assert (= temp881_61 (select ARGNAME_output_padding_NAMEEND_VAL temp881_60)))
(assert (= temp881_62 #x0000000000000004))
(assert (= temp881_63 temp881_62))
(assert (= temp881_64 (select ARGNAME_output_padding_NAMEEND_VAL temp881_63)))
(assert (= temp881_65 #x0000000000000005))
(assert (= temp881_66 temp881_65))
(assert (= temp881_67 (select ARGNAME_output_padding_NAMEEND_VAL temp881_66)))
(assert (= temp881_68 #x0000000000000000))
(assert (= temp881_69 #x0000000000000000))
(assert (= temp881_70 temp881_69))
(assert (= temp881_71 (select ARGNAME_output_padding_NAMEEND_VAL temp881_70)))
(assert (= temp881_72 #x0000000000000000))
(assert (= temp881_73 #x0000000000000001))
(assert (= temp881_74 temp881_73))
(assert (= temp881_75 (select ARGNAME_output_padding_NAMEEND_VAL temp881_74)))
(assert (= temp881_76 #x0000000000000000))
(assert (= temp881_77 #x0000000000000002))
(assert (= temp881_78 temp881_77))
(assert (= temp881_79 (select ARGNAME_output_padding_NAMEEND_VAL temp881_78)))
(assert (= temp881_80 #x0000000000000000))
(assert (= temp881_81 #x0000000000000003))
(assert (= temp881_82 temp881_81))
(assert (= temp881_83 (select ARGNAME_output_padding_NAMEEND_VAL temp881_82)))
(assert (= temp881_84 #x0000000000000000))
(assert (= temp881_85 #x0000000000000004))
(assert (= temp881_86 temp881_85))
(assert (= temp881_87 (select ARGNAME_output_padding_NAMEEND_VAL temp881_86)))
(assert (= temp881_88 #x0000000000000000))
(assert (= temp881_89 #x0000000000000005))
(assert (= temp881_90 temp881_89))
(assert (= temp881_91 (select ARGNAME_output_padding_NAMEEND_VAL temp881_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp881_71 temp881_68)
             (bvslt temp881_75 temp881_72)
             (bvslt temp881_79 temp881_76)
             (bvslt temp881_83 temp881_80)
             (bvslt temp881_87 temp881_84)
             (bvslt temp881_91 temp881_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp881_92 #x0000000000000000))
(assert (= var1191725 temp881_92))
(assert (= temp881_93 #x0000000000000000))
(assert (= temp881_94 temp881_93))
(assert (= temp881_95 (select ARGNAME_stride_NAMEEND_VAL temp881_94)))
(assert (= temp881_96 #x0000000000000001))
(assert (= temp881_97 temp881_96))
(assert (= temp881_98 (select ARGNAME_stride_NAMEEND_VAL temp881_97)))
(assert (= temp881_99 #x0000000000000002))
(assert (= temp881_100 temp881_99))
(assert (= temp881_101 (select ARGNAME_stride_NAMEEND_VAL temp881_100)))
(assert (= temp881_102 #x0000000000000003))
(assert (= temp881_103 temp881_102))
(assert (= temp881_104 (select ARGNAME_stride_NAMEEND_VAL temp881_103)))
(assert (= temp881_105 #x0000000000000004))
(assert (= temp881_106 temp881_105))
(assert (= temp881_107 (select ARGNAME_stride_NAMEEND_VAL temp881_106)))
(assert (= temp881_108 #x0000000000000005))
(assert (= temp881_109 temp881_108))
(assert (= temp881_110 (select ARGNAME_stride_NAMEEND_VAL temp881_109)))
(assert (= temp881_111 #x0000000000000000))
(assert (= temp881_112 #x0000000000000000))
(assert (= temp881_113 temp881_112))
(assert (= temp881_114 (select ARGNAME_stride_NAMEEND_VAL temp881_113)))
(assert (= temp881_115 #x0000000000000000))
(assert (= temp881_116 #x0000000000000001))
(assert (= temp881_117 temp881_116))
(assert (= temp881_118 (select ARGNAME_stride_NAMEEND_VAL temp881_117)))
(assert (= temp881_119 #x0000000000000000))
(assert (= temp881_120 #x0000000000000002))
(assert (= temp881_121 temp881_120))
(assert (= temp881_122 (select ARGNAME_stride_NAMEEND_VAL temp881_121)))
(assert (= temp881_123 #x0000000000000000))
(assert (= temp881_124 #x0000000000000003))
(assert (= temp881_125 temp881_124))
(assert (= temp881_126 (select ARGNAME_stride_NAMEEND_VAL temp881_125)))
(assert (= temp881_127 #x0000000000000000))
(assert (= temp881_128 #x0000000000000004))
(assert (= temp881_129 temp881_128))
(assert (= temp881_130 (select ARGNAME_stride_NAMEEND_VAL temp881_129)))
(assert (= temp881_131 #x0000000000000000))
(assert (= temp881_132 #x0000000000000005))
(assert (= temp881_133 temp881_132))
(assert (= temp881_134 (select ARGNAME_stride_NAMEEND_VAL temp881_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp881_114 temp881_111)
             (bvsle temp881_118 temp881_115)
             (bvsle temp881_122 temp881_119)
             (bvsle temp881_126 temp881_123)
             (bvsle temp881_130 temp881_127)
             (bvsle temp881_134 temp881_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp881_135 #x0000000000000000))
(assert (= var1191735 temp881_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp881_136 #x0000000000000001))
(assert (= var1191747 temp881_136))
(assert (= temp881_137 #x0000000000000000))
(assert (= var1179826 temp881_137))
(assert (= temp881_138 #x0000000000000000))
(assert (= temp881_139 temp881_138))
(assert (= temp881_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp881_139)))
(assert (= temp881_141 #x0000000000000001))
(assert (= temp881_142 temp881_141))
(assert (= temp881_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp881_142)))
(assert (= temp881_144 #x0000000000000002))
(assert (= temp881_145 temp881_144))
(assert (= temp881_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp881_145)))
(assert (= temp881_147 #x0000000000000003))
(assert (= temp881_148 temp881_147))
(assert (= temp881_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp881_148)))
(assert (= temp881_150 #x0000000000000004))
(assert (= temp881_151 temp881_150))
(assert (= temp881_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp881_151)))
(assert (= temp881_153 #x0000000000000005))
(assert (= temp881_154 temp881_153))
(assert (= temp881_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp881_154)))
(assert (= temp881_157 var1179826))
(assert (= temp881_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp881_157)))
(assert (= temp881_156 temp881_158))
(assert (= var1191780
   (ite (bvslt temp881_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp881_159 #x0000000000000000))
(assert (= var1191780 temp881_159))
(assert (= temp881_160 #x0000000000000000))
(assert (= var1179826 temp881_160))
(assert (= temp881_162 var1179826))
(assert (= temp881_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp881_162)))
(assert (= temp881_161 temp881_163))
(assert (= var1191802 (bvsmod temp881_161 ARGNAME_groups_NAMEEND)))
(assert (= temp881_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp881_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp881_165 #x0000000000000001))
(assert (= var1191803 temp881_165))
(assert (= temp881_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp881_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp881_167 #x0000000000000001))
(assert (= var1191823 temp881_167))
(assert (= temp881_168 #x0000000000000001))
(assert (= var1180714 temp881_168))
(assert (= temp881_169 #x0000000000000000))
(assert (= temp881_170 temp881_169))
(assert (= temp881_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp881_170)))
(assert (= temp881_172 #x0000000000000001))
(assert (= temp881_173 temp881_172))
(assert (= temp881_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp881_173)))
(assert (= temp881_175 #x0000000000000002))
(assert (= temp881_176 temp881_175))
(assert (= temp881_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp881_176)))
(assert (= temp881_178 #x0000000000000003))
(assert (= temp881_179 temp881_178))
(assert (= temp881_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp881_179)))
(assert (= temp881_181 #x0000000000000004))
(assert (= temp881_182 temp881_181))
(assert (= temp881_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp881_182)))
(assert (= temp881_184 #x0000000000000005))
(assert (= temp881_185 temp881_184))
(assert (= temp881_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp881_185)))
(assert (= temp881_187 #x0000000000000000))
(assert (= temp881_188
   (ite (bvslt var1180714 temp881_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp881_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp881_188)))
(assert (= var1191831 temp881_189))
(assert (bvslt (ite (bvslt var1180714 temp881_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp881_190 #x0000000000000001))
(assert (= var1180714 temp881_190))
(assert (= temp881_192 var1180714))
(assert (= temp881_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp881_192)))
(assert (= temp881_191 temp881_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp881_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp881_194 #x0000000000000001))
(assert (= var1191836 temp881_194))
(assert (= temp881_195 #x0000000000000000))
(assert (= var1179826 temp881_195))
(assert (= temp881_197 var1179826))
(assert (= temp881_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp881_197)))
(assert (= temp881_196 temp881_198))
(assert (= temp881_199 #x0000000000000002))
(assert (= var1586025 temp881_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp881_200 #x0000000000000001))
(assert (= var1191993 temp881_200))
(assert (= temp881_201 #x0000000000000001))
(assert (= var2700303 temp881_201))
(assert (= temp881_202 #x0000000000000001))
(assert (= var2962447 temp881_202))
(assert (= temp881_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp881_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp881_204 #x0000000000000001))
(assert (= var211058 temp881_204))
(assert (= temp881_205 #x0000000000000001))
(assert (= var211188 temp881_205))
(assert (= var3879401 var211188))
(assert (= temp881_206 #x0000000000000000))
(assert (= var3866802 temp881_206))
(assert (= temp881_207 #x0000000000000000))
(assert (= temp881_208
   (ite (bvslt var3866802 temp881_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp881_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp881_208)))
(assert (= var3879420 temp881_209))
(assert (bvslt (ite (bvslt var3866802 temp881_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp881_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp881_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp881_211 #x0000000000000001))
(assert (= var3879421 temp881_211))
(assert (= temp881_212 #x0000000000000000))
(assert (= var4079423 temp881_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp881_213 #x0000000000000002))
(assert (= var4208259 temp881_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp881_214 #x0000000000000000))
(assert (= var4273820 temp881_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var5321104 var211201))
(assert (= var5583248 var211201))
(assert (= temp881_215 #x0000000000000001))
(assert (= var211058 temp881_215))
(model-add temp881_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp881_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp881_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp881_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





