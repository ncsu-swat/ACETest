(declare-fun temp10001_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10001_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10001_3 () (_ BitVec 64))
(declare-fun temp10001_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10001_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10001_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10001_7 () (_ BitVec 64))
(declare-fun temp10001_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10001_9 () (_ BitVec 64))
(declare-fun temp10001_10 () (_ BitVec 64))
(declare-fun temp10001_11 () (_ BitVec 64))
(declare-fun temp10001_12 () (_ BitVec 64))
(declare-fun temp10001_13 () (_ BitVec 64))
(declare-fun temp10001_14 () (_ BitVec 64))
(declare-fun temp10001_15 () (_ BitVec 64))
(declare-fun temp10001_16 () (_ BitVec 64))
(declare-fun temp10001_17 () (_ BitVec 64))
(declare-fun temp10001_18 () (_ BitVec 64))
(declare-fun temp10001_19 () (_ BitVec 64))
(declare-fun temp10001_20 () (_ BitVec 64))
(declare-fun temp10001_21 () (_ BitVec 64))
(declare-fun temp10001_22 () (_ BitVec 64))
(declare-fun temp10001_23 () (_ BitVec 64))
(declare-fun temp10001_24 () (_ BitVec 64))
(declare-fun temp10001_25 () (_ BitVec 64))
(declare-fun temp10001_26 () (_ BitVec 64))
(declare-fun temp10001_27 () (_ BitVec 64))
(declare-fun temp10001_28 () (_ BitVec 64))
(declare-fun temp10001_29 () (_ BitVec 64))
(declare-fun temp10001_30 () (_ BitVec 64))
(declare-fun temp10001_31 () (_ BitVec 64))
(declare-fun temp10001_32 () (_ BitVec 64))
(declare-fun temp10001_33 () (_ BitVec 64))
(declare-fun temp10001_34 () (_ BitVec 64))
(declare-fun temp10001_35 () (_ BitVec 64))
(declare-fun temp10001_36 () (_ BitVec 64))
(declare-fun temp10001_37 () (_ BitVec 64))
(declare-fun temp10001_38 () (_ BitVec 64))
(declare-fun temp10001_39 () (_ BitVec 64))
(declare-fun temp10001_40 () (_ BitVec 64))
(declare-fun temp10001_41 () (_ BitVec 64))
(declare-fun temp10001_42 () (_ BitVec 64))
(declare-fun temp10001_43 () (_ BitVec 64))
(declare-fun temp10001_44 () (_ BitVec 64))
(declare-fun temp10001_45 () (_ BitVec 64))
(declare-fun temp10001_46 () (_ BitVec 64))
(declare-fun temp10001_47 () (_ BitVec 64))
(declare-fun temp10001_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10001_49 () (_ BitVec 64))
(declare-fun temp10001_50 () (_ BitVec 64))
(declare-fun temp10001_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10001_52 () (_ BitVec 64))
(declare-fun temp10001_53 () (_ BitVec 64))
(declare-fun temp10001_54 () (_ BitVec 64))
(declare-fun temp10001_55 () (_ BitVec 64))
(declare-fun temp10001_56 () (_ BitVec 64))
(declare-fun temp10001_57 () (_ BitVec 64))
(declare-fun temp10001_58 () (_ BitVec 64))
(declare-fun temp10001_59 () (_ BitVec 64))
(declare-fun temp10001_60 () (_ BitVec 64))
(declare-fun temp10001_61 () (_ BitVec 64))
(declare-fun temp10001_62 () (_ BitVec 64))
(declare-fun temp10001_63 () (_ BitVec 64))
(declare-fun temp10001_64 () (_ BitVec 64))
(declare-fun temp10001_65 () (_ BitVec 64))
(declare-fun temp10001_66 () (_ BitVec 64))
(declare-fun temp10001_67 () (_ BitVec 64))
(declare-fun temp10001_68 () (_ BitVec 64))
(declare-fun temp10001_69 () (_ BitVec 64))
(declare-fun temp10001_70 () (_ BitVec 64))
(declare-fun temp10001_71 () (_ BitVec 64))
(declare-fun temp10001_72 () (_ BitVec 64))
(declare-fun temp10001_73 () (_ BitVec 64))
(declare-fun temp10001_74 () (_ BitVec 64))
(declare-fun temp10001_75 () (_ BitVec 64))
(declare-fun temp10001_76 () (_ BitVec 64))
(declare-fun temp10001_77 () (_ BitVec 64))
(declare-fun temp10001_78 () (_ BitVec 64))
(declare-fun temp10001_79 () (_ BitVec 64))
(declare-fun temp10001_80 () (_ BitVec 64))
(declare-fun temp10001_81 () (_ BitVec 64))
(declare-fun temp10001_82 () (_ BitVec 64))
(declare-fun temp10001_83 () (_ BitVec 64))
(declare-fun temp10001_84 () (_ BitVec 64))
(declare-fun temp10001_85 () (_ BitVec 64))
(declare-fun temp10001_86 () (_ BitVec 64))
(declare-fun temp10001_87 () (_ BitVec 64))
(declare-fun temp10001_88 () (_ BitVec 64))
(declare-fun temp10001_89 () (_ BitVec 64))
(declare-fun temp10001_90 () (_ BitVec 64))
(declare-fun temp10001_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10001_92 () (_ BitVec 64))
(declare-fun temp10001_93 () (_ BitVec 64))
(declare-fun temp10001_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10001_95 () (_ BitVec 64))
(declare-fun temp10001_96 () (_ BitVec 64))
(declare-fun temp10001_97 () (_ BitVec 64))
(declare-fun temp10001_98 () (_ BitVec 64))
(declare-fun temp10001_99 () (_ BitVec 64))
(declare-fun temp10001_100 () (_ BitVec 64))
(declare-fun temp10001_101 () (_ BitVec 64))
(declare-fun temp10001_102 () (_ BitVec 64))
(declare-fun temp10001_103 () (_ BitVec 64))
(declare-fun temp10001_104 () (_ BitVec 64))
(declare-fun temp10001_105 () (_ BitVec 64))
(declare-fun temp10001_106 () (_ BitVec 64))
(declare-fun temp10001_107 () (_ BitVec 64))
(declare-fun temp10001_108 () (_ BitVec 64))
(declare-fun temp10001_109 () (_ BitVec 64))
(declare-fun temp10001_110 () (_ BitVec 64))
(declare-fun temp10001_111 () (_ BitVec 64))
(declare-fun temp10001_112 () (_ BitVec 64))
(declare-fun temp10001_113 () (_ BitVec 64))
(declare-fun temp10001_114 () (_ BitVec 64))
(declare-fun temp10001_115 () (_ BitVec 64))
(declare-fun temp10001_116 () (_ BitVec 64))
(declare-fun temp10001_117 () (_ BitVec 64))
(declare-fun temp10001_118 () (_ BitVec 64))
(declare-fun temp10001_119 () (_ BitVec 64))
(declare-fun temp10001_120 () (_ BitVec 64))
(declare-fun temp10001_121 () (_ BitVec 64))
(declare-fun temp10001_122 () (_ BitVec 64))
(declare-fun temp10001_123 () (_ BitVec 64))
(declare-fun temp10001_124 () (_ BitVec 64))
(declare-fun temp10001_125 () (_ BitVec 64))
(declare-fun temp10001_126 () (_ BitVec 64))
(declare-fun temp10001_127 () (_ BitVec 64))
(declare-fun temp10001_128 () (_ BitVec 64))
(declare-fun temp10001_129 () (_ BitVec 64))
(declare-fun temp10001_130 () (_ BitVec 64))
(declare-fun temp10001_131 () (_ BitVec 64))
(declare-fun temp10001_132 () (_ BitVec 64))
(declare-fun temp10001_133 () (_ BitVec 64))
(declare-fun temp10001_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10001_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10001_136 () (_ BitVec 64))
(declare-fun temp10001_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10001_138 () (_ BitVec 64))
(declare-fun temp10001_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10001_140 () (_ BitVec 64))
(declare-fun temp10001_141 () (_ BitVec 64))
(declare-fun temp10001_142 () (_ BitVec 64))
(declare-fun temp10001_143 () (_ BitVec 64))
(declare-fun temp10001_144 () (_ BitVec 64))
(declare-fun temp10001_145 () (_ BitVec 64))
(declare-fun temp10001_146 () (_ BitVec 64))
(declare-fun temp10001_147 () (_ BitVec 64))
(declare-fun temp10001_148 () (_ BitVec 64))
(declare-fun temp10001_149 () (_ BitVec 64))
(declare-fun temp10001_150 () (_ BitVec 64))
(declare-fun temp10001_151 () (_ BitVec 64))
(declare-fun temp10001_152 () (_ BitVec 64))
(declare-fun temp10001_153 () (_ BitVec 64))
(declare-fun temp10001_154 () (_ BitVec 64))
(declare-fun temp10001_155 () (_ BitVec 64))
(declare-fun temp10001_157 () (_ BitVec 64))
(declare-fun temp10001_158 () (_ BitVec 64))
(declare-fun temp10001_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10001_159 () (_ BitVec 64))
(declare-fun temp10001_160 () (_ BitVec 64))
(declare-fun temp10001_162 () (_ BitVec 64))
(declare-fun temp10001_163 () (_ BitVec 64))
(declare-fun temp10001_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10001_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10001_165 () (_ BitVec 64))
(declare-fun temp10001_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10001_167 () (_ BitVec 64))
(declare-fun temp10001_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10001_169 () (_ BitVec 64))
(declare-fun temp10001_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10001_171 () (_ BitVec 64))
(declare-fun temp10001_172 () (_ BitVec 64))
(declare-fun temp10001_173 () (_ BitVec 64))
(declare-fun temp10001_174 () (_ BitVec 64))
(declare-fun temp10001_175 () (_ BitVec 64))
(declare-fun temp10001_176 () (_ BitVec 64))
(declare-fun temp10001_177 () (_ BitVec 64))
(declare-fun temp10001_178 () (_ BitVec 64))
(declare-fun temp10001_179 () (_ BitVec 64))
(declare-fun temp10001_180 () (_ BitVec 64))
(declare-fun temp10001_181 () (_ BitVec 64))
(declare-fun temp10001_182 () (_ BitVec 64))
(declare-fun temp10001_183 () (_ BitVec 64))
(declare-fun temp10001_184 () (_ BitVec 64))
(declare-fun temp10001_185 () (_ BitVec 64))
(declare-fun temp10001_186 () (_ BitVec 64))
(declare-fun temp10001_187 () (_ BitVec 64))
(declare-fun temp10001_188 () (_ BitVec 64))
(declare-fun temp10001_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10001_190 () (_ BitVec 64))
(declare-fun temp10001_192 () (_ BitVec 64))
(declare-fun temp10001_193 () (_ BitVec 64))
(declare-fun temp10001_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10001_194 () (_ BitVec 64))
(declare-fun temp10001_195 () (_ BitVec 64))
(declare-fun temp10001_197 () (_ BitVec 64))
(declare-fun temp10001_198 () (_ BitVec 64))
(declare-fun temp10001_196 () (_ BitVec 64))
(declare-fun temp10001_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10001_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10001_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10001_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10001_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10001_204 () (_ BitVec 64))
(declare-fun temp10001_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10001_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10001_207 () (_ BitVec 64))
(declare-fun temp10001_208 () (_ BitVec 64))
(declare-fun temp10001_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10001_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10001_211 () (_ BitVec 64))
(declare-fun temp10001_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10001_213 () (_ BitVec 64))
(declare-fun temp10001_214 () (_ BitVec 64))
(declare-fun temp10001_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10001_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10001_217 () (_ BitVec 64))
(declare-fun temp10001_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10001_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10001_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4796816 () (_ BitVec 64))
(declare-fun var211494 () (_ BitVec 64))
(declare-fun temp10001_221 () (_ BitVec 64))
(declare-fun var211495 () (_ BitVec 64))
(declare-fun temp10001_222 () (_ BitVec 64))
(assert (= temp10001_1 #x0000000000000001))
(assert (= var77203 temp10001_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10001_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10001_2)))
(assert (= temp10001_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10001_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10001_4 #x0000000000000000))
(assert (= var210941 temp10001_4))
(assert (= temp10001_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10001_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10001_6 #x0000000000000000))
(assert (= var210986 temp10001_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10001_7 #x0000000000000000))
(assert (= temp10001_8 temp10001_7))
(assert (= temp10001_9 (select ARGNAME_padding_NAMEEND_VAL temp10001_8)))
(assert (= temp10001_10 #x0000000000000001))
(assert (= temp10001_11 temp10001_10))
(assert (= temp10001_12 (select ARGNAME_padding_NAMEEND_VAL temp10001_11)))
(assert (= temp10001_13 #x0000000000000002))
(assert (= temp10001_14 temp10001_13))
(assert (= temp10001_15 (select ARGNAME_padding_NAMEEND_VAL temp10001_14)))
(assert (= temp10001_16 #x0000000000000003))
(assert (= temp10001_17 temp10001_16))
(assert (= temp10001_18 (select ARGNAME_padding_NAMEEND_VAL temp10001_17)))
(assert (= temp10001_19 #x0000000000000004))
(assert (= temp10001_20 temp10001_19))
(assert (= temp10001_21 (select ARGNAME_padding_NAMEEND_VAL temp10001_20)))
(assert (= temp10001_22 #x0000000000000005))
(assert (= temp10001_23 temp10001_22))
(assert (= temp10001_24 (select ARGNAME_padding_NAMEEND_VAL temp10001_23)))
(assert (= temp10001_25 #x0000000000000000))
(assert (= temp10001_26 #x0000000000000000))
(assert (= temp10001_27 temp10001_26))
(assert (= temp10001_28 (select ARGNAME_padding_NAMEEND_VAL temp10001_27)))
(assert (= temp10001_29 #x0000000000000000))
(assert (= temp10001_30 #x0000000000000001))
(assert (= temp10001_31 temp10001_30))
(assert (= temp10001_32 (select ARGNAME_padding_NAMEEND_VAL temp10001_31)))
(assert (= temp10001_33 #x0000000000000000))
(assert (= temp10001_34 #x0000000000000002))
(assert (= temp10001_35 temp10001_34))
(assert (= temp10001_36 (select ARGNAME_padding_NAMEEND_VAL temp10001_35)))
(assert (= temp10001_37 #x0000000000000000))
(assert (= temp10001_38 #x0000000000000003))
(assert (= temp10001_39 temp10001_38))
(assert (= temp10001_40 (select ARGNAME_padding_NAMEEND_VAL temp10001_39)))
(assert (= temp10001_41 #x0000000000000000))
(assert (= temp10001_42 #x0000000000000004))
(assert (= temp10001_43 temp10001_42))
(assert (= temp10001_44 (select ARGNAME_padding_NAMEEND_VAL temp10001_43)))
(assert (= temp10001_45 #x0000000000000000))
(assert (= temp10001_46 #x0000000000000005))
(assert (= temp10001_47 temp10001_46))
(assert (= temp10001_48 (select ARGNAME_padding_NAMEEND_VAL temp10001_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10001_28 temp10001_25)
             (bvslt temp10001_32 temp10001_29)
             (bvslt temp10001_36 temp10001_33)
             (bvslt temp10001_40 temp10001_37)
             (bvslt temp10001_44 temp10001_41)
             (bvslt temp10001_48 temp10001_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10001_49 #x0000000000000000))
(assert (= var1191714 temp10001_49))
(assert (= temp10001_50 #x0000000000000000))
(assert (= temp10001_51 temp10001_50))
(assert (= temp10001_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10001_51)))
(assert (= temp10001_53 #x0000000000000001))
(assert (= temp10001_54 temp10001_53))
(assert (= temp10001_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10001_54)))
(assert (= temp10001_56 #x0000000000000002))
(assert (= temp10001_57 temp10001_56))
(assert (= temp10001_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10001_57)))
(assert (= temp10001_59 #x0000000000000003))
(assert (= temp10001_60 temp10001_59))
(assert (= temp10001_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10001_60)))
(assert (= temp10001_62 #x0000000000000004))
(assert (= temp10001_63 temp10001_62))
(assert (= temp10001_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10001_63)))
(assert (= temp10001_65 #x0000000000000005))
(assert (= temp10001_66 temp10001_65))
(assert (= temp10001_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10001_66)))
(assert (= temp10001_68 #x0000000000000000))
(assert (= temp10001_69 #x0000000000000000))
(assert (= temp10001_70 temp10001_69))
(assert (= temp10001_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10001_70)))
(assert (= temp10001_72 #x0000000000000000))
(assert (= temp10001_73 #x0000000000000001))
(assert (= temp10001_74 temp10001_73))
(assert (= temp10001_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10001_74)))
(assert (= temp10001_76 #x0000000000000000))
(assert (= temp10001_77 #x0000000000000002))
(assert (= temp10001_78 temp10001_77))
(assert (= temp10001_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10001_78)))
(assert (= temp10001_80 #x0000000000000000))
(assert (= temp10001_81 #x0000000000000003))
(assert (= temp10001_82 temp10001_81))
(assert (= temp10001_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10001_82)))
(assert (= temp10001_84 #x0000000000000000))
(assert (= temp10001_85 #x0000000000000004))
(assert (= temp10001_86 temp10001_85))
(assert (= temp10001_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10001_86)))
(assert (= temp10001_88 #x0000000000000000))
(assert (= temp10001_89 #x0000000000000005))
(assert (= temp10001_90 temp10001_89))
(assert (= temp10001_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10001_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10001_71 temp10001_68)
             (bvslt temp10001_75 temp10001_72)
             (bvslt temp10001_79 temp10001_76)
             (bvslt temp10001_83 temp10001_80)
             (bvslt temp10001_87 temp10001_84)
             (bvslt temp10001_91 temp10001_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10001_92 #x0000000000000000))
(assert (= var1191725 temp10001_92))
(assert (= temp10001_93 #x0000000000000000))
(assert (= temp10001_94 temp10001_93))
(assert (= temp10001_95 (select ARGNAME_stride_NAMEEND_VAL temp10001_94)))
(assert (= temp10001_96 #x0000000000000001))
(assert (= temp10001_97 temp10001_96))
(assert (= temp10001_98 (select ARGNAME_stride_NAMEEND_VAL temp10001_97)))
(assert (= temp10001_99 #x0000000000000002))
(assert (= temp10001_100 temp10001_99))
(assert (= temp10001_101 (select ARGNAME_stride_NAMEEND_VAL temp10001_100)))
(assert (= temp10001_102 #x0000000000000003))
(assert (= temp10001_103 temp10001_102))
(assert (= temp10001_104 (select ARGNAME_stride_NAMEEND_VAL temp10001_103)))
(assert (= temp10001_105 #x0000000000000004))
(assert (= temp10001_106 temp10001_105))
(assert (= temp10001_107 (select ARGNAME_stride_NAMEEND_VAL temp10001_106)))
(assert (= temp10001_108 #x0000000000000005))
(assert (= temp10001_109 temp10001_108))
(assert (= temp10001_110 (select ARGNAME_stride_NAMEEND_VAL temp10001_109)))
(assert (= temp10001_111 #x0000000000000000))
(assert (= temp10001_112 #x0000000000000000))
(assert (= temp10001_113 temp10001_112))
(assert (= temp10001_114 (select ARGNAME_stride_NAMEEND_VAL temp10001_113)))
(assert (= temp10001_115 #x0000000000000000))
(assert (= temp10001_116 #x0000000000000001))
(assert (= temp10001_117 temp10001_116))
(assert (= temp10001_118 (select ARGNAME_stride_NAMEEND_VAL temp10001_117)))
(assert (= temp10001_119 #x0000000000000000))
(assert (= temp10001_120 #x0000000000000002))
(assert (= temp10001_121 temp10001_120))
(assert (= temp10001_122 (select ARGNAME_stride_NAMEEND_VAL temp10001_121)))
(assert (= temp10001_123 #x0000000000000000))
(assert (= temp10001_124 #x0000000000000003))
(assert (= temp10001_125 temp10001_124))
(assert (= temp10001_126 (select ARGNAME_stride_NAMEEND_VAL temp10001_125)))
(assert (= temp10001_127 #x0000000000000000))
(assert (= temp10001_128 #x0000000000000004))
(assert (= temp10001_129 temp10001_128))
(assert (= temp10001_130 (select ARGNAME_stride_NAMEEND_VAL temp10001_129)))
(assert (= temp10001_131 #x0000000000000000))
(assert (= temp10001_132 #x0000000000000005))
(assert (= temp10001_133 temp10001_132))
(assert (= temp10001_134 (select ARGNAME_stride_NAMEEND_VAL temp10001_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10001_114 temp10001_111)
             (bvsle temp10001_118 temp10001_115)
             (bvsle temp10001_122 temp10001_119)
             (bvsle temp10001_126 temp10001_123)
             (bvsle temp10001_130 temp10001_127)
             (bvsle temp10001_134 temp10001_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10001_135 #x0000000000000000))
(assert (= var1191735 temp10001_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10001_136 #x0000000000000001))
(assert (= var1191747 temp10001_136))
(assert (= temp10001_137 #x0000000000000000))
(assert (= var1179826 temp10001_137))
(assert (= temp10001_138 #x0000000000000000))
(assert (= temp10001_139 temp10001_138))
(assert (= temp10001_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10001_139)))
(assert (= temp10001_141 #x0000000000000001))
(assert (= temp10001_142 temp10001_141))
(assert (= temp10001_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10001_142)))
(assert (= temp10001_144 #x0000000000000002))
(assert (= temp10001_145 temp10001_144))
(assert (= temp10001_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10001_145)))
(assert (= temp10001_147 #x0000000000000003))
(assert (= temp10001_148 temp10001_147))
(assert (= temp10001_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10001_148)))
(assert (= temp10001_150 #x0000000000000004))
(assert (= temp10001_151 temp10001_150))
(assert (= temp10001_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10001_151)))
(assert (= temp10001_153 #x0000000000000005))
(assert (= temp10001_154 temp10001_153))
(assert (= temp10001_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10001_154)))
(assert (= temp10001_157 var1179826))
(assert (= temp10001_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10001_157)))
(assert (= temp10001_156 temp10001_158))
(assert (= var1191780
   (ite (bvslt temp10001_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10001_159 #x0000000000000000))
(assert (= var1191780 temp10001_159))
(assert (= temp10001_160 #x0000000000000000))
(assert (= var1179826 temp10001_160))
(assert (= temp10001_162 var1179826))
(assert (= temp10001_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10001_162)))
(assert (= temp10001_161 temp10001_163))
(assert (= var1191802 (bvsmod temp10001_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10001_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10001_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10001_165 #x0000000000000001))
(assert (= var1191803 temp10001_165))
(assert (= temp10001_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10001_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10001_167 #x0000000000000001))
(assert (= var1191823 temp10001_167))
(assert (= temp10001_168 #x0000000000000001))
(assert (= var1180714 temp10001_168))
(assert (= temp10001_169 #x0000000000000000))
(assert (= temp10001_170 temp10001_169))
(assert (= temp10001_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10001_170)))
(assert (= temp10001_172 #x0000000000000001))
(assert (= temp10001_173 temp10001_172))
(assert (= temp10001_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10001_173)))
(assert (= temp10001_175 #x0000000000000002))
(assert (= temp10001_176 temp10001_175))
(assert (= temp10001_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10001_176)))
(assert (= temp10001_178 #x0000000000000003))
(assert (= temp10001_179 temp10001_178))
(assert (= temp10001_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10001_179)))
(assert (= temp10001_181 #x0000000000000004))
(assert (= temp10001_182 temp10001_181))
(assert (= temp10001_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10001_182)))
(assert (= temp10001_184 #x0000000000000005))
(assert (= temp10001_185 temp10001_184))
(assert (= temp10001_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10001_185)))
(assert (= temp10001_187 #x0000000000000000))
(assert (= temp10001_188
   (ite (bvslt var1180714 temp10001_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10001_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10001_188)))
(assert (= var1191831 temp10001_189))
(assert (bvslt (ite (bvslt var1180714 temp10001_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10001_190 #x0000000000000001))
(assert (= var1180714 temp10001_190))
(assert (= temp10001_192 var1180714))
(assert (= temp10001_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10001_192)))
(assert (= temp10001_191 temp10001_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10001_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10001_194 #x0000000000000001))
(assert (= var1191836 temp10001_194))
(assert (= temp10001_195 #x0000000000000000))
(assert (= var1179826 temp10001_195))
(assert (= temp10001_197 var1179826))
(assert (= temp10001_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10001_197)))
(assert (= temp10001_196 temp10001_198))
(assert (= temp10001_199 #x0000000000000002))
(assert (= var1586025 temp10001_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10001_200 #x0000000000000001))
(assert (= var1191993 temp10001_200))
(assert (= temp10001_201 #x0000000000000001))
(assert (= var2700303 temp10001_201))
(assert (= temp10001_202 #x0000000000000001))
(assert (= var2962447 temp10001_202))
(assert (= temp10001_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10001_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10001_204 #x0000000000000001))
(assert (= var211058 temp10001_204))
(assert (= temp10001_205 #x0000000000000001))
(assert (= var211188 temp10001_205))
(assert (= var3879401 var211188))
(assert (= temp10001_206 #x0000000000000000))
(assert (= var3866802 temp10001_206))
(assert (= temp10001_207 #x0000000000000000))
(assert (= temp10001_208
   (ite (bvslt var3866802 temp10001_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10001_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10001_208)))
(assert (= var3879420 temp10001_209))
(assert (bvslt (ite (bvslt var3866802 temp10001_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10001_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10001_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10001_211 #x0000000000000000))
(assert (= var3879421 temp10001_211))
(assert (= temp10001_212 #x0000000000000001))
(assert (= var3867690 temp10001_212))
(assert (= temp10001_213 #x0000000000000000))
(assert (= temp10001_214
   (ite (bvslt var3867690 temp10001_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10001_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10001_214)))
(assert (= var3879423 temp10001_215))
(assert (bvslt (ite (bvslt var3867690 temp10001_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10001_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10001_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10001_217 #x0000000000000001))
(assert (= var3879424 temp10001_217))
(assert (= temp10001_218 #x0000000000000000))
(assert (= var4079423 temp10001_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10001_219 #x0000000000000002))
(assert (= var4208259 temp10001_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10001_220 #x0000000000000000))
(assert (= var4273820 temp10001_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4796816 var211201))
(assert (= var211494 var210913))
(assert (= temp10001_221 #x0000000000000000))
(assert (= var211495
   (ite (distinct var211494 temp10001_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10001_222 #x0000000000000001))
(assert (= var211058 temp10001_222))
(model-add temp10001_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10001_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10001_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10001_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




