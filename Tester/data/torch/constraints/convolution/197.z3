(declare-fun temp262_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp262_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp262_3 () (_ BitVec 64))
(declare-fun temp262_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp262_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp262_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp262_7 () (_ BitVec 64))
(declare-fun temp262_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp262_9 () (_ BitVec 64))
(declare-fun temp262_10 () (_ BitVec 64))
(declare-fun temp262_11 () (_ BitVec 64))
(declare-fun temp262_12 () (_ BitVec 64))
(declare-fun temp262_13 () (_ BitVec 64))
(declare-fun temp262_14 () (_ BitVec 64))
(declare-fun temp262_15 () (_ BitVec 64))
(declare-fun temp262_16 () (_ BitVec 64))
(declare-fun temp262_17 () (_ BitVec 64))
(declare-fun temp262_18 () (_ BitVec 64))
(declare-fun temp262_19 () (_ BitVec 64))
(declare-fun temp262_20 () (_ BitVec 64))
(declare-fun temp262_21 () (_ BitVec 64))
(declare-fun temp262_22 () (_ BitVec 64))
(declare-fun temp262_23 () (_ BitVec 64))
(declare-fun temp262_24 () (_ BitVec 64))
(declare-fun temp262_25 () (_ BitVec 64))
(declare-fun temp262_26 () (_ BitVec 64))
(declare-fun temp262_27 () (_ BitVec 64))
(declare-fun temp262_28 () (_ BitVec 64))
(declare-fun temp262_29 () (_ BitVec 64))
(declare-fun temp262_30 () (_ BitVec 64))
(declare-fun temp262_31 () (_ BitVec 64))
(declare-fun temp262_32 () (_ BitVec 64))
(declare-fun temp262_33 () (_ BitVec 64))
(declare-fun temp262_34 () (_ BitVec 64))
(declare-fun temp262_35 () (_ BitVec 64))
(declare-fun temp262_36 () (_ BitVec 64))
(declare-fun temp262_37 () (_ BitVec 64))
(declare-fun temp262_38 () (_ BitVec 64))
(declare-fun temp262_39 () (_ BitVec 64))
(declare-fun temp262_40 () (_ BitVec 64))
(declare-fun temp262_41 () (_ BitVec 64))
(declare-fun temp262_42 () (_ BitVec 64))
(declare-fun temp262_43 () (_ BitVec 64))
(declare-fun temp262_44 () (_ BitVec 64))
(declare-fun temp262_45 () (_ BitVec 64))
(declare-fun temp262_46 () (_ BitVec 64))
(declare-fun temp262_47 () (_ BitVec 64))
(declare-fun temp262_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp262_49 () (_ BitVec 64))
(declare-fun temp262_50 () (_ BitVec 64))
(declare-fun temp262_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp262_52 () (_ BitVec 64))
(declare-fun temp262_53 () (_ BitVec 64))
(declare-fun temp262_54 () (_ BitVec 64))
(declare-fun temp262_55 () (_ BitVec 64))
(declare-fun temp262_56 () (_ BitVec 64))
(declare-fun temp262_57 () (_ BitVec 64))
(declare-fun temp262_58 () (_ BitVec 64))
(declare-fun temp262_59 () (_ BitVec 64))
(declare-fun temp262_60 () (_ BitVec 64))
(declare-fun temp262_61 () (_ BitVec 64))
(declare-fun temp262_62 () (_ BitVec 64))
(declare-fun temp262_63 () (_ BitVec 64))
(declare-fun temp262_64 () (_ BitVec 64))
(declare-fun temp262_65 () (_ BitVec 64))
(declare-fun temp262_66 () (_ BitVec 64))
(declare-fun temp262_67 () (_ BitVec 64))
(declare-fun temp262_68 () (_ BitVec 64))
(declare-fun temp262_69 () (_ BitVec 64))
(declare-fun temp262_70 () (_ BitVec 64))
(declare-fun temp262_71 () (_ BitVec 64))
(declare-fun temp262_72 () (_ BitVec 64))
(declare-fun temp262_73 () (_ BitVec 64))
(declare-fun temp262_74 () (_ BitVec 64))
(declare-fun temp262_75 () (_ BitVec 64))
(declare-fun temp262_76 () (_ BitVec 64))
(declare-fun temp262_77 () (_ BitVec 64))
(declare-fun temp262_78 () (_ BitVec 64))
(declare-fun temp262_79 () (_ BitVec 64))
(declare-fun temp262_80 () (_ BitVec 64))
(declare-fun temp262_81 () (_ BitVec 64))
(declare-fun temp262_82 () (_ BitVec 64))
(declare-fun temp262_83 () (_ BitVec 64))
(declare-fun temp262_84 () (_ BitVec 64))
(declare-fun temp262_85 () (_ BitVec 64))
(declare-fun temp262_86 () (_ BitVec 64))
(declare-fun temp262_87 () (_ BitVec 64))
(declare-fun temp262_88 () (_ BitVec 64))
(declare-fun temp262_89 () (_ BitVec 64))
(declare-fun temp262_90 () (_ BitVec 64))
(declare-fun temp262_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp262_92 () (_ BitVec 64))
(declare-fun temp262_93 () (_ BitVec 64))
(declare-fun temp262_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp262_95 () (_ BitVec 64))
(declare-fun temp262_96 () (_ BitVec 64))
(declare-fun temp262_97 () (_ BitVec 64))
(declare-fun temp262_98 () (_ BitVec 64))
(declare-fun temp262_99 () (_ BitVec 64))
(declare-fun temp262_100 () (_ BitVec 64))
(declare-fun temp262_101 () (_ BitVec 64))
(declare-fun temp262_102 () (_ BitVec 64))
(declare-fun temp262_103 () (_ BitVec 64))
(declare-fun temp262_104 () (_ BitVec 64))
(declare-fun temp262_105 () (_ BitVec 64))
(declare-fun temp262_106 () (_ BitVec 64))
(declare-fun temp262_107 () (_ BitVec 64))
(declare-fun temp262_108 () (_ BitVec 64))
(declare-fun temp262_109 () (_ BitVec 64))
(declare-fun temp262_110 () (_ BitVec 64))
(declare-fun temp262_111 () (_ BitVec 64))
(declare-fun temp262_112 () (_ BitVec 64))
(declare-fun temp262_113 () (_ BitVec 64))
(declare-fun temp262_114 () (_ BitVec 64))
(declare-fun temp262_115 () (_ BitVec 64))
(declare-fun temp262_116 () (_ BitVec 64))
(declare-fun temp262_117 () (_ BitVec 64))
(declare-fun temp262_118 () (_ BitVec 64))
(declare-fun temp262_119 () (_ BitVec 64))
(declare-fun temp262_120 () (_ BitVec 64))
(declare-fun temp262_121 () (_ BitVec 64))
(declare-fun temp262_122 () (_ BitVec 64))
(declare-fun temp262_123 () (_ BitVec 64))
(declare-fun temp262_124 () (_ BitVec 64))
(declare-fun temp262_125 () (_ BitVec 64))
(declare-fun temp262_126 () (_ BitVec 64))
(declare-fun temp262_127 () (_ BitVec 64))
(declare-fun temp262_128 () (_ BitVec 64))
(declare-fun temp262_129 () (_ BitVec 64))
(declare-fun temp262_130 () (_ BitVec 64))
(declare-fun temp262_131 () (_ BitVec 64))
(declare-fun temp262_132 () (_ BitVec 64))
(declare-fun temp262_133 () (_ BitVec 64))
(declare-fun temp262_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp262_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp262_136 () (_ BitVec 64))
(declare-fun temp262_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp262_138 () (_ BitVec 64))
(declare-fun temp262_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp262_140 () (_ BitVec 64))
(declare-fun temp262_141 () (_ BitVec 64))
(declare-fun temp262_142 () (_ BitVec 64))
(declare-fun temp262_143 () (_ BitVec 64))
(declare-fun temp262_144 () (_ BitVec 64))
(declare-fun temp262_145 () (_ BitVec 64))
(declare-fun temp262_146 () (_ BitVec 64))
(declare-fun temp262_147 () (_ BitVec 64))
(declare-fun temp262_148 () (_ BitVec 64))
(declare-fun temp262_149 () (_ BitVec 64))
(declare-fun temp262_150 () (_ BitVec 64))
(declare-fun temp262_151 () (_ BitVec 64))
(declare-fun temp262_152 () (_ BitVec 64))
(declare-fun temp262_153 () (_ BitVec 64))
(declare-fun temp262_154 () (_ BitVec 64))
(declare-fun temp262_155 () (_ BitVec 64))
(declare-fun temp262_157 () (_ BitVec 64))
(declare-fun temp262_158 () (_ BitVec 64))
(declare-fun temp262_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp262_159 () (_ BitVec 64))
(declare-fun temp262_160 () (_ BitVec 64))
(declare-fun temp262_162 () (_ BitVec 64))
(declare-fun temp262_163 () (_ BitVec 64))
(declare-fun temp262_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp262_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp262_165 () (_ BitVec 64))
(declare-fun temp262_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp262_167 () (_ BitVec 64))
(declare-fun temp262_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp262_169 () (_ BitVec 64))
(declare-fun temp262_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp262_171 () (_ BitVec 64))
(declare-fun temp262_172 () (_ BitVec 64))
(declare-fun temp262_173 () (_ BitVec 64))
(declare-fun temp262_174 () (_ BitVec 64))
(declare-fun temp262_175 () (_ BitVec 64))
(declare-fun temp262_176 () (_ BitVec 64))
(declare-fun temp262_177 () (_ BitVec 64))
(declare-fun temp262_178 () (_ BitVec 64))
(declare-fun temp262_179 () (_ BitVec 64))
(declare-fun temp262_180 () (_ BitVec 64))
(declare-fun temp262_181 () (_ BitVec 64))
(declare-fun temp262_182 () (_ BitVec 64))
(declare-fun temp262_183 () (_ BitVec 64))
(declare-fun temp262_184 () (_ BitVec 64))
(declare-fun temp262_185 () (_ BitVec 64))
(declare-fun temp262_186 () (_ BitVec 64))
(declare-fun temp262_187 () (_ BitVec 64))
(declare-fun temp262_188 () (_ BitVec 64))
(declare-fun temp262_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp262_190 () (_ BitVec 64))
(declare-fun temp262_192 () (_ BitVec 64))
(declare-fun temp262_193 () (_ BitVec 64))
(declare-fun temp262_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp262_194 () (_ BitVec 64))
(declare-fun temp262_195 () (_ BitVec 64))
(declare-fun temp262_197 () (_ BitVec 64))
(declare-fun temp262_198 () (_ BitVec 64))
(declare-fun temp262_196 () (_ BitVec 64))
(declare-fun temp262_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp262_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp262_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp262_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp262_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp262_204 () (_ BitVec 64))
(declare-fun temp262_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp262_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp262_207 () (_ BitVec 64))
(declare-fun temp262_208 () (_ BitVec 64))
(declare-fun temp262_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp262_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp262_211 () (_ BitVec 64))
(declare-fun temp262_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp262_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp262_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp262_215 () (_ BitVec 64))
(assert (= temp262_1 #x0000000000000001))
(assert (= var77203 temp262_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp262_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp262_2)))
(assert (= temp262_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp262_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp262_4 #x0000000000000000))
(assert (= var210941 temp262_4))
(assert (= temp262_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp262_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp262_6 #x0000000000000000))
(assert (= var210986 temp262_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp262_7 #x0000000000000000))
(assert (= temp262_8 temp262_7))
(assert (= temp262_9 (select ARGNAME_padding_NAMEEND_VAL temp262_8)))
(assert (= temp262_10 #x0000000000000001))
(assert (= temp262_11 temp262_10))
(assert (= temp262_12 (select ARGNAME_padding_NAMEEND_VAL temp262_11)))
(assert (= temp262_13 #x0000000000000002))
(assert (= temp262_14 temp262_13))
(assert (= temp262_15 (select ARGNAME_padding_NAMEEND_VAL temp262_14)))
(assert (= temp262_16 #x0000000000000003))
(assert (= temp262_17 temp262_16))
(assert (= temp262_18 (select ARGNAME_padding_NAMEEND_VAL temp262_17)))
(assert (= temp262_19 #x0000000000000004))
(assert (= temp262_20 temp262_19))
(assert (= temp262_21 (select ARGNAME_padding_NAMEEND_VAL temp262_20)))
(assert (= temp262_22 #x0000000000000005))
(assert (= temp262_23 temp262_22))
(assert (= temp262_24 (select ARGNAME_padding_NAMEEND_VAL temp262_23)))
(assert (= temp262_25 #x0000000000000000))
(assert (= temp262_26 #x0000000000000000))
(assert (= temp262_27 temp262_26))
(assert (= temp262_28 (select ARGNAME_padding_NAMEEND_VAL temp262_27)))
(assert (= temp262_29 #x0000000000000000))
(assert (= temp262_30 #x0000000000000001))
(assert (= temp262_31 temp262_30))
(assert (= temp262_32 (select ARGNAME_padding_NAMEEND_VAL temp262_31)))
(assert (= temp262_33 #x0000000000000000))
(assert (= temp262_34 #x0000000000000002))
(assert (= temp262_35 temp262_34))
(assert (= temp262_36 (select ARGNAME_padding_NAMEEND_VAL temp262_35)))
(assert (= temp262_37 #x0000000000000000))
(assert (= temp262_38 #x0000000000000003))
(assert (= temp262_39 temp262_38))
(assert (= temp262_40 (select ARGNAME_padding_NAMEEND_VAL temp262_39)))
(assert (= temp262_41 #x0000000000000000))
(assert (= temp262_42 #x0000000000000004))
(assert (= temp262_43 temp262_42))
(assert (= temp262_44 (select ARGNAME_padding_NAMEEND_VAL temp262_43)))
(assert (= temp262_45 #x0000000000000000))
(assert (= temp262_46 #x0000000000000005))
(assert (= temp262_47 temp262_46))
(assert (= temp262_48 (select ARGNAME_padding_NAMEEND_VAL temp262_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp262_28 temp262_25)
             (bvslt temp262_32 temp262_29)
             (bvslt temp262_36 temp262_33)
             (bvslt temp262_40 temp262_37)
             (bvslt temp262_44 temp262_41)
             (bvslt temp262_48 temp262_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp262_49 #x0000000000000000))
(assert (= var1191714 temp262_49))
(assert (= temp262_50 #x0000000000000000))
(assert (= temp262_51 temp262_50))
(assert (= temp262_52 (select ARGNAME_output_padding_NAMEEND_VAL temp262_51)))
(assert (= temp262_53 #x0000000000000001))
(assert (= temp262_54 temp262_53))
(assert (= temp262_55 (select ARGNAME_output_padding_NAMEEND_VAL temp262_54)))
(assert (= temp262_56 #x0000000000000002))
(assert (= temp262_57 temp262_56))
(assert (= temp262_58 (select ARGNAME_output_padding_NAMEEND_VAL temp262_57)))
(assert (= temp262_59 #x0000000000000003))
(assert (= temp262_60 temp262_59))
(assert (= temp262_61 (select ARGNAME_output_padding_NAMEEND_VAL temp262_60)))
(assert (= temp262_62 #x0000000000000004))
(assert (= temp262_63 temp262_62))
(assert (= temp262_64 (select ARGNAME_output_padding_NAMEEND_VAL temp262_63)))
(assert (= temp262_65 #x0000000000000005))
(assert (= temp262_66 temp262_65))
(assert (= temp262_67 (select ARGNAME_output_padding_NAMEEND_VAL temp262_66)))
(assert (= temp262_68 #x0000000000000000))
(assert (= temp262_69 #x0000000000000000))
(assert (= temp262_70 temp262_69))
(assert (= temp262_71 (select ARGNAME_output_padding_NAMEEND_VAL temp262_70)))
(assert (= temp262_72 #x0000000000000000))
(assert (= temp262_73 #x0000000000000001))
(assert (= temp262_74 temp262_73))
(assert (= temp262_75 (select ARGNAME_output_padding_NAMEEND_VAL temp262_74)))
(assert (= temp262_76 #x0000000000000000))
(assert (= temp262_77 #x0000000000000002))
(assert (= temp262_78 temp262_77))
(assert (= temp262_79 (select ARGNAME_output_padding_NAMEEND_VAL temp262_78)))
(assert (= temp262_80 #x0000000000000000))
(assert (= temp262_81 #x0000000000000003))
(assert (= temp262_82 temp262_81))
(assert (= temp262_83 (select ARGNAME_output_padding_NAMEEND_VAL temp262_82)))
(assert (= temp262_84 #x0000000000000000))
(assert (= temp262_85 #x0000000000000004))
(assert (= temp262_86 temp262_85))
(assert (= temp262_87 (select ARGNAME_output_padding_NAMEEND_VAL temp262_86)))
(assert (= temp262_88 #x0000000000000000))
(assert (= temp262_89 #x0000000000000005))
(assert (= temp262_90 temp262_89))
(assert (= temp262_91 (select ARGNAME_output_padding_NAMEEND_VAL temp262_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp262_71 temp262_68)
             (bvslt temp262_75 temp262_72)
             (bvslt temp262_79 temp262_76)
             (bvslt temp262_83 temp262_80)
             (bvslt temp262_87 temp262_84)
             (bvslt temp262_91 temp262_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp262_92 #x0000000000000000))
(assert (= var1191725 temp262_92))
(assert (= temp262_93 #x0000000000000000))
(assert (= temp262_94 temp262_93))
(assert (= temp262_95 (select ARGNAME_stride_NAMEEND_VAL temp262_94)))
(assert (= temp262_96 #x0000000000000001))
(assert (= temp262_97 temp262_96))
(assert (= temp262_98 (select ARGNAME_stride_NAMEEND_VAL temp262_97)))
(assert (= temp262_99 #x0000000000000002))
(assert (= temp262_100 temp262_99))
(assert (= temp262_101 (select ARGNAME_stride_NAMEEND_VAL temp262_100)))
(assert (= temp262_102 #x0000000000000003))
(assert (= temp262_103 temp262_102))
(assert (= temp262_104 (select ARGNAME_stride_NAMEEND_VAL temp262_103)))
(assert (= temp262_105 #x0000000000000004))
(assert (= temp262_106 temp262_105))
(assert (= temp262_107 (select ARGNAME_stride_NAMEEND_VAL temp262_106)))
(assert (= temp262_108 #x0000000000000005))
(assert (= temp262_109 temp262_108))
(assert (= temp262_110 (select ARGNAME_stride_NAMEEND_VAL temp262_109)))
(assert (= temp262_111 #x0000000000000000))
(assert (= temp262_112 #x0000000000000000))
(assert (= temp262_113 temp262_112))
(assert (= temp262_114 (select ARGNAME_stride_NAMEEND_VAL temp262_113)))
(assert (= temp262_115 #x0000000000000000))
(assert (= temp262_116 #x0000000000000001))
(assert (= temp262_117 temp262_116))
(assert (= temp262_118 (select ARGNAME_stride_NAMEEND_VAL temp262_117)))
(assert (= temp262_119 #x0000000000000000))
(assert (= temp262_120 #x0000000000000002))
(assert (= temp262_121 temp262_120))
(assert (= temp262_122 (select ARGNAME_stride_NAMEEND_VAL temp262_121)))
(assert (= temp262_123 #x0000000000000000))
(assert (= temp262_124 #x0000000000000003))
(assert (= temp262_125 temp262_124))
(assert (= temp262_126 (select ARGNAME_stride_NAMEEND_VAL temp262_125)))
(assert (= temp262_127 #x0000000000000000))
(assert (= temp262_128 #x0000000000000004))
(assert (= temp262_129 temp262_128))
(assert (= temp262_130 (select ARGNAME_stride_NAMEEND_VAL temp262_129)))
(assert (= temp262_131 #x0000000000000000))
(assert (= temp262_132 #x0000000000000005))
(assert (= temp262_133 temp262_132))
(assert (= temp262_134 (select ARGNAME_stride_NAMEEND_VAL temp262_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp262_114 temp262_111)
             (bvsle temp262_118 temp262_115)
             (bvsle temp262_122 temp262_119)
             (bvsle temp262_126 temp262_123)
             (bvsle temp262_130 temp262_127)
             (bvsle temp262_134 temp262_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp262_135 #x0000000000000000))
(assert (= var1191735 temp262_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp262_136 #x0000000000000001))
(assert (= var1191747 temp262_136))
(assert (= temp262_137 #x0000000000000000))
(assert (= var1179826 temp262_137))
(assert (= temp262_138 #x0000000000000000))
(assert (= temp262_139 temp262_138))
(assert (= temp262_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp262_139)))
(assert (= temp262_141 #x0000000000000001))
(assert (= temp262_142 temp262_141))
(assert (= temp262_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp262_142)))
(assert (= temp262_144 #x0000000000000002))
(assert (= temp262_145 temp262_144))
(assert (= temp262_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp262_145)))
(assert (= temp262_147 #x0000000000000003))
(assert (= temp262_148 temp262_147))
(assert (= temp262_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp262_148)))
(assert (= temp262_150 #x0000000000000004))
(assert (= temp262_151 temp262_150))
(assert (= temp262_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp262_151)))
(assert (= temp262_153 #x0000000000000005))
(assert (= temp262_154 temp262_153))
(assert (= temp262_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp262_154)))
(assert (= temp262_157 var1179826))
(assert (= temp262_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp262_157)))
(assert (= temp262_156 temp262_158))
(assert (= var1191780
   (ite (bvslt temp262_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp262_159 #x0000000000000000))
(assert (= var1191780 temp262_159))
(assert (= temp262_160 #x0000000000000000))
(assert (= var1179826 temp262_160))
(assert (= temp262_162 var1179826))
(assert (= temp262_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp262_162)))
(assert (= temp262_161 temp262_163))
(assert (= var1191802 (bvsmod temp262_161 ARGNAME_groups_NAMEEND)))
(assert (= temp262_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp262_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp262_165 #x0000000000000001))
(assert (= var1191803 temp262_165))
(assert (= temp262_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp262_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp262_167 #x0000000000000001))
(assert (= var1191823 temp262_167))
(assert (= temp262_168 #x0000000000000001))
(assert (= var1180714 temp262_168))
(assert (= temp262_169 #x0000000000000000))
(assert (= temp262_170 temp262_169))
(assert (= temp262_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp262_170)))
(assert (= temp262_172 #x0000000000000001))
(assert (= temp262_173 temp262_172))
(assert (= temp262_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp262_173)))
(assert (= temp262_175 #x0000000000000002))
(assert (= temp262_176 temp262_175))
(assert (= temp262_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp262_176)))
(assert (= temp262_178 #x0000000000000003))
(assert (= temp262_179 temp262_178))
(assert (= temp262_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp262_179)))
(assert (= temp262_181 #x0000000000000004))
(assert (= temp262_182 temp262_181))
(assert (= temp262_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp262_182)))
(assert (= temp262_184 #x0000000000000005))
(assert (= temp262_185 temp262_184))
(assert (= temp262_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp262_185)))
(assert (= temp262_187 #x0000000000000000))
(assert (= temp262_188
   (ite (bvslt var1180714 temp262_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp262_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp262_188)))
(assert (= var1191831 temp262_189))
(assert (bvslt (ite (bvslt var1180714 temp262_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp262_190 #x0000000000000001))
(assert (= var1180714 temp262_190))
(assert (= temp262_192 var1180714))
(assert (= temp262_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp262_192)))
(assert (= temp262_191 temp262_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp262_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp262_194 #x0000000000000001))
(assert (= var1191836 temp262_194))
(assert (= temp262_195 #x0000000000000000))
(assert (= var1179826 temp262_195))
(assert (= temp262_197 var1179826))
(assert (= temp262_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp262_197)))
(assert (= temp262_196 temp262_198))
(assert (= temp262_199 #x0000000000000002))
(assert (= var1586025 temp262_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp262_200 #x0000000000000001))
(assert (= var1191993 temp262_200))
(assert (= temp262_201 #x0000000000000001))
(assert (= var2700303 temp262_201))
(assert (= temp262_202 #x0000000000000001))
(assert (= var2962447 temp262_202))
(assert (= temp262_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp262_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp262_204 #x0000000000000001))
(assert (= var211058 temp262_204))
(assert (= temp262_205 #x0000000000000001))
(assert (= var211188 temp262_205))
(assert (= var3879401 var211188))
(assert (= temp262_206 #x0000000000000000))
(assert (= var3866802 temp262_206))
(assert (= temp262_207 #x0000000000000000))
(assert (= temp262_208
   (ite (bvslt var3866802 temp262_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp262_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp262_208)))
(assert (= var3879420 temp262_209))
(assert (bvslt (ite (bvslt var3866802 temp262_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp262_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp262_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp262_211 #x0000000000000001))
(assert (= var3879421 temp262_211))
(assert (= temp262_212 #x0000000000000000))
(assert (= var4079423 temp262_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp262_213 #x0000000000000002))
(assert (= var4208259 temp262_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp262_214 #x0000000000000000))
(assert (= var4273820 temp262_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp262_215 #x0000000000000001))
(assert (= var211058 temp262_215))
(model-add temp262_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp262_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp262_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp262_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




