(declare-fun temp10461_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10461_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10461_3 () (_ BitVec 64))
(declare-fun temp10461_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10461_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10461_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10461_7 () (_ BitVec 64))
(declare-fun temp10461_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10461_9 () (_ BitVec 64))
(declare-fun temp10461_10 () (_ BitVec 64))
(declare-fun temp10461_11 () (_ BitVec 64))
(declare-fun temp10461_12 () (_ BitVec 64))
(declare-fun temp10461_13 () (_ BitVec 64))
(declare-fun temp10461_14 () (_ BitVec 64))
(declare-fun temp10461_15 () (_ BitVec 64))
(declare-fun temp10461_16 () (_ BitVec 64))
(declare-fun temp10461_17 () (_ BitVec 64))
(declare-fun temp10461_18 () (_ BitVec 64))
(declare-fun temp10461_19 () (_ BitVec 64))
(declare-fun temp10461_20 () (_ BitVec 64))
(declare-fun temp10461_21 () (_ BitVec 64))
(declare-fun temp10461_22 () (_ BitVec 64))
(declare-fun temp10461_23 () (_ BitVec 64))
(declare-fun temp10461_24 () (_ BitVec 64))
(declare-fun temp10461_25 () (_ BitVec 64))
(declare-fun temp10461_26 () (_ BitVec 64))
(declare-fun temp10461_27 () (_ BitVec 64))
(declare-fun temp10461_28 () (_ BitVec 64))
(declare-fun temp10461_29 () (_ BitVec 64))
(declare-fun temp10461_30 () (_ BitVec 64))
(declare-fun temp10461_31 () (_ BitVec 64))
(declare-fun temp10461_32 () (_ BitVec 64))
(declare-fun temp10461_33 () (_ BitVec 64))
(declare-fun temp10461_34 () (_ BitVec 64))
(declare-fun temp10461_35 () (_ BitVec 64))
(declare-fun temp10461_36 () (_ BitVec 64))
(declare-fun temp10461_37 () (_ BitVec 64))
(declare-fun temp10461_38 () (_ BitVec 64))
(declare-fun temp10461_39 () (_ BitVec 64))
(declare-fun temp10461_40 () (_ BitVec 64))
(declare-fun temp10461_41 () (_ BitVec 64))
(declare-fun temp10461_42 () (_ BitVec 64))
(declare-fun temp10461_43 () (_ BitVec 64))
(declare-fun temp10461_44 () (_ BitVec 64))
(declare-fun temp10461_45 () (_ BitVec 64))
(declare-fun temp10461_46 () (_ BitVec 64))
(declare-fun temp10461_47 () (_ BitVec 64))
(declare-fun temp10461_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10461_49 () (_ BitVec 64))
(declare-fun temp10461_50 () (_ BitVec 64))
(declare-fun temp10461_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10461_52 () (_ BitVec 64))
(declare-fun temp10461_53 () (_ BitVec 64))
(declare-fun temp10461_54 () (_ BitVec 64))
(declare-fun temp10461_55 () (_ BitVec 64))
(declare-fun temp10461_56 () (_ BitVec 64))
(declare-fun temp10461_57 () (_ BitVec 64))
(declare-fun temp10461_58 () (_ BitVec 64))
(declare-fun temp10461_59 () (_ BitVec 64))
(declare-fun temp10461_60 () (_ BitVec 64))
(declare-fun temp10461_61 () (_ BitVec 64))
(declare-fun temp10461_62 () (_ BitVec 64))
(declare-fun temp10461_63 () (_ BitVec 64))
(declare-fun temp10461_64 () (_ BitVec 64))
(declare-fun temp10461_65 () (_ BitVec 64))
(declare-fun temp10461_66 () (_ BitVec 64))
(declare-fun temp10461_67 () (_ BitVec 64))
(declare-fun temp10461_68 () (_ BitVec 64))
(declare-fun temp10461_69 () (_ BitVec 64))
(declare-fun temp10461_70 () (_ BitVec 64))
(declare-fun temp10461_71 () (_ BitVec 64))
(declare-fun temp10461_72 () (_ BitVec 64))
(declare-fun temp10461_73 () (_ BitVec 64))
(declare-fun temp10461_74 () (_ BitVec 64))
(declare-fun temp10461_75 () (_ BitVec 64))
(declare-fun temp10461_76 () (_ BitVec 64))
(declare-fun temp10461_77 () (_ BitVec 64))
(declare-fun temp10461_78 () (_ BitVec 64))
(declare-fun temp10461_79 () (_ BitVec 64))
(declare-fun temp10461_80 () (_ BitVec 64))
(declare-fun temp10461_81 () (_ BitVec 64))
(declare-fun temp10461_82 () (_ BitVec 64))
(declare-fun temp10461_83 () (_ BitVec 64))
(declare-fun temp10461_84 () (_ BitVec 64))
(declare-fun temp10461_85 () (_ BitVec 64))
(declare-fun temp10461_86 () (_ BitVec 64))
(declare-fun temp10461_87 () (_ BitVec 64))
(declare-fun temp10461_88 () (_ BitVec 64))
(declare-fun temp10461_89 () (_ BitVec 64))
(declare-fun temp10461_90 () (_ BitVec 64))
(declare-fun temp10461_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10461_92 () (_ BitVec 64))
(declare-fun temp10461_93 () (_ BitVec 64))
(declare-fun temp10461_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10461_95 () (_ BitVec 64))
(declare-fun temp10461_96 () (_ BitVec 64))
(declare-fun temp10461_97 () (_ BitVec 64))
(declare-fun temp10461_98 () (_ BitVec 64))
(declare-fun temp10461_99 () (_ BitVec 64))
(declare-fun temp10461_100 () (_ BitVec 64))
(declare-fun temp10461_101 () (_ BitVec 64))
(declare-fun temp10461_102 () (_ BitVec 64))
(declare-fun temp10461_103 () (_ BitVec 64))
(declare-fun temp10461_104 () (_ BitVec 64))
(declare-fun temp10461_105 () (_ BitVec 64))
(declare-fun temp10461_106 () (_ BitVec 64))
(declare-fun temp10461_107 () (_ BitVec 64))
(declare-fun temp10461_108 () (_ BitVec 64))
(declare-fun temp10461_109 () (_ BitVec 64))
(declare-fun temp10461_110 () (_ BitVec 64))
(declare-fun temp10461_111 () (_ BitVec 64))
(declare-fun temp10461_112 () (_ BitVec 64))
(declare-fun temp10461_113 () (_ BitVec 64))
(declare-fun temp10461_114 () (_ BitVec 64))
(declare-fun temp10461_115 () (_ BitVec 64))
(declare-fun temp10461_116 () (_ BitVec 64))
(declare-fun temp10461_117 () (_ BitVec 64))
(declare-fun temp10461_118 () (_ BitVec 64))
(declare-fun temp10461_119 () (_ BitVec 64))
(declare-fun temp10461_120 () (_ BitVec 64))
(declare-fun temp10461_121 () (_ BitVec 64))
(declare-fun temp10461_122 () (_ BitVec 64))
(declare-fun temp10461_123 () (_ BitVec 64))
(declare-fun temp10461_124 () (_ BitVec 64))
(declare-fun temp10461_125 () (_ BitVec 64))
(declare-fun temp10461_126 () (_ BitVec 64))
(declare-fun temp10461_127 () (_ BitVec 64))
(declare-fun temp10461_128 () (_ BitVec 64))
(declare-fun temp10461_129 () (_ BitVec 64))
(declare-fun temp10461_130 () (_ BitVec 64))
(declare-fun temp10461_131 () (_ BitVec 64))
(declare-fun temp10461_132 () (_ BitVec 64))
(declare-fun temp10461_133 () (_ BitVec 64))
(declare-fun temp10461_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10461_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10461_136 () (_ BitVec 64))
(declare-fun temp10461_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10461_138 () (_ BitVec 64))
(declare-fun temp10461_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10461_140 () (_ BitVec 64))
(declare-fun temp10461_141 () (_ BitVec 64))
(declare-fun temp10461_142 () (_ BitVec 64))
(declare-fun temp10461_143 () (_ BitVec 64))
(declare-fun temp10461_144 () (_ BitVec 64))
(declare-fun temp10461_145 () (_ BitVec 64))
(declare-fun temp10461_146 () (_ BitVec 64))
(declare-fun temp10461_147 () (_ BitVec 64))
(declare-fun temp10461_148 () (_ BitVec 64))
(declare-fun temp10461_149 () (_ BitVec 64))
(declare-fun temp10461_150 () (_ BitVec 64))
(declare-fun temp10461_151 () (_ BitVec 64))
(declare-fun temp10461_152 () (_ BitVec 64))
(declare-fun temp10461_153 () (_ BitVec 64))
(declare-fun temp10461_154 () (_ BitVec 64))
(declare-fun temp10461_155 () (_ BitVec 64))
(declare-fun temp10461_157 () (_ BitVec 64))
(declare-fun temp10461_158 () (_ BitVec 64))
(declare-fun temp10461_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10461_159 () (_ BitVec 64))
(declare-fun temp10461_160 () (_ BitVec 64))
(declare-fun temp10461_162 () (_ BitVec 64))
(declare-fun temp10461_163 () (_ BitVec 64))
(declare-fun temp10461_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10461_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10461_165 () (_ BitVec 64))
(declare-fun temp10461_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10461_167 () (_ BitVec 64))
(declare-fun temp10461_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10461_169 () (_ BitVec 64))
(declare-fun temp10461_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10461_171 () (_ BitVec 64))
(declare-fun temp10461_172 () (_ BitVec 64))
(declare-fun temp10461_173 () (_ BitVec 64))
(declare-fun temp10461_174 () (_ BitVec 64))
(declare-fun temp10461_175 () (_ BitVec 64))
(declare-fun temp10461_176 () (_ BitVec 64))
(declare-fun temp10461_177 () (_ BitVec 64))
(declare-fun temp10461_178 () (_ BitVec 64))
(declare-fun temp10461_179 () (_ BitVec 64))
(declare-fun temp10461_180 () (_ BitVec 64))
(declare-fun temp10461_181 () (_ BitVec 64))
(declare-fun temp10461_182 () (_ BitVec 64))
(declare-fun temp10461_183 () (_ BitVec 64))
(declare-fun temp10461_184 () (_ BitVec 64))
(declare-fun temp10461_185 () (_ BitVec 64))
(declare-fun temp10461_186 () (_ BitVec 64))
(declare-fun temp10461_187 () (_ BitVec 64))
(declare-fun temp10461_188 () (_ BitVec 64))
(declare-fun temp10461_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10461_190 () (_ BitVec 64))
(declare-fun temp10461_192 () (_ BitVec 64))
(declare-fun temp10461_193 () (_ BitVec 64))
(declare-fun temp10461_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10461_194 () (_ BitVec 64))
(declare-fun temp10461_195 () (_ BitVec 64))
(declare-fun temp10461_197 () (_ BitVec 64))
(declare-fun temp10461_198 () (_ BitVec 64))
(declare-fun temp10461_196 () (_ BitVec 64))
(declare-fun temp10461_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10461_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10461_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10461_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10461_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10461_204 () (_ BitVec 64))
(declare-fun temp10461_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10461_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10461_207 () (_ BitVec 64))
(declare-fun temp10461_208 () (_ BitVec 64))
(declare-fun temp10461_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10461_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10461_211 () (_ BitVec 64))
(declare-fun temp10461_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10461_213 () (_ BitVec 64))
(declare-fun temp10461_214 () (_ BitVec 64))
(declare-fun temp10461_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10461_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10461_217 () (_ BitVec 64))
(declare-fun temp10461_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10461_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10461_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4469136 () (_ BitVec 64))
(declare-fun var4731280 () (_ BitVec 64))
(declare-fun temp10461_221 () (_ BitVec 64))
(declare-fun var212414 () (_ BitVec 64))
(declare-fun temp10461_222 () (_ BitVec 64))
(declare-fun temp10461_223 () (_ BitVec 64))
(declare-fun var5060227 () (_ BitVec 64))
(declare-fun var5125772 () (_ BitVec 64))
(declare-fun temp10461_224 () (_ BitVec 64))
(assert (= temp10461_1 #x0000000000000001))
(assert (= var77203 temp10461_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10461_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10461_2)))
(assert (= temp10461_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10461_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10461_4 #x0000000000000000))
(assert (= var210941 temp10461_4))
(assert (= temp10461_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10461_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10461_6 #x0000000000000000))
(assert (= var210986 temp10461_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10461_7 #x0000000000000000))
(assert (= temp10461_8 temp10461_7))
(assert (= temp10461_9 (select ARGNAME_padding_NAMEEND_VAL temp10461_8)))
(assert (= temp10461_10 #x0000000000000001))
(assert (= temp10461_11 temp10461_10))
(assert (= temp10461_12 (select ARGNAME_padding_NAMEEND_VAL temp10461_11)))
(assert (= temp10461_13 #x0000000000000002))
(assert (= temp10461_14 temp10461_13))
(assert (= temp10461_15 (select ARGNAME_padding_NAMEEND_VAL temp10461_14)))
(assert (= temp10461_16 #x0000000000000003))
(assert (= temp10461_17 temp10461_16))
(assert (= temp10461_18 (select ARGNAME_padding_NAMEEND_VAL temp10461_17)))
(assert (= temp10461_19 #x0000000000000004))
(assert (= temp10461_20 temp10461_19))
(assert (= temp10461_21 (select ARGNAME_padding_NAMEEND_VAL temp10461_20)))
(assert (= temp10461_22 #x0000000000000005))
(assert (= temp10461_23 temp10461_22))
(assert (= temp10461_24 (select ARGNAME_padding_NAMEEND_VAL temp10461_23)))
(assert (= temp10461_25 #x0000000000000000))
(assert (= temp10461_26 #x0000000000000000))
(assert (= temp10461_27 temp10461_26))
(assert (= temp10461_28 (select ARGNAME_padding_NAMEEND_VAL temp10461_27)))
(assert (= temp10461_29 #x0000000000000000))
(assert (= temp10461_30 #x0000000000000001))
(assert (= temp10461_31 temp10461_30))
(assert (= temp10461_32 (select ARGNAME_padding_NAMEEND_VAL temp10461_31)))
(assert (= temp10461_33 #x0000000000000000))
(assert (= temp10461_34 #x0000000000000002))
(assert (= temp10461_35 temp10461_34))
(assert (= temp10461_36 (select ARGNAME_padding_NAMEEND_VAL temp10461_35)))
(assert (= temp10461_37 #x0000000000000000))
(assert (= temp10461_38 #x0000000000000003))
(assert (= temp10461_39 temp10461_38))
(assert (= temp10461_40 (select ARGNAME_padding_NAMEEND_VAL temp10461_39)))
(assert (= temp10461_41 #x0000000000000000))
(assert (= temp10461_42 #x0000000000000004))
(assert (= temp10461_43 temp10461_42))
(assert (= temp10461_44 (select ARGNAME_padding_NAMEEND_VAL temp10461_43)))
(assert (= temp10461_45 #x0000000000000000))
(assert (= temp10461_46 #x0000000000000005))
(assert (= temp10461_47 temp10461_46))
(assert (= temp10461_48 (select ARGNAME_padding_NAMEEND_VAL temp10461_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10461_28 temp10461_25)
             (bvslt temp10461_32 temp10461_29)
             (bvslt temp10461_36 temp10461_33)
             (bvslt temp10461_40 temp10461_37)
             (bvslt temp10461_44 temp10461_41)
             (bvslt temp10461_48 temp10461_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10461_49 #x0000000000000000))
(assert (= var1191714 temp10461_49))
(assert (= temp10461_50 #x0000000000000000))
(assert (= temp10461_51 temp10461_50))
(assert (= temp10461_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10461_51)))
(assert (= temp10461_53 #x0000000000000001))
(assert (= temp10461_54 temp10461_53))
(assert (= temp10461_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10461_54)))
(assert (= temp10461_56 #x0000000000000002))
(assert (= temp10461_57 temp10461_56))
(assert (= temp10461_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10461_57)))
(assert (= temp10461_59 #x0000000000000003))
(assert (= temp10461_60 temp10461_59))
(assert (= temp10461_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10461_60)))
(assert (= temp10461_62 #x0000000000000004))
(assert (= temp10461_63 temp10461_62))
(assert (= temp10461_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10461_63)))
(assert (= temp10461_65 #x0000000000000005))
(assert (= temp10461_66 temp10461_65))
(assert (= temp10461_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10461_66)))
(assert (= temp10461_68 #x0000000000000000))
(assert (= temp10461_69 #x0000000000000000))
(assert (= temp10461_70 temp10461_69))
(assert (= temp10461_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10461_70)))
(assert (= temp10461_72 #x0000000000000000))
(assert (= temp10461_73 #x0000000000000001))
(assert (= temp10461_74 temp10461_73))
(assert (= temp10461_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10461_74)))
(assert (= temp10461_76 #x0000000000000000))
(assert (= temp10461_77 #x0000000000000002))
(assert (= temp10461_78 temp10461_77))
(assert (= temp10461_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10461_78)))
(assert (= temp10461_80 #x0000000000000000))
(assert (= temp10461_81 #x0000000000000003))
(assert (= temp10461_82 temp10461_81))
(assert (= temp10461_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10461_82)))
(assert (= temp10461_84 #x0000000000000000))
(assert (= temp10461_85 #x0000000000000004))
(assert (= temp10461_86 temp10461_85))
(assert (= temp10461_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10461_86)))
(assert (= temp10461_88 #x0000000000000000))
(assert (= temp10461_89 #x0000000000000005))
(assert (= temp10461_90 temp10461_89))
(assert (= temp10461_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10461_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10461_71 temp10461_68)
             (bvslt temp10461_75 temp10461_72)
             (bvslt temp10461_79 temp10461_76)
             (bvslt temp10461_83 temp10461_80)
             (bvslt temp10461_87 temp10461_84)
             (bvslt temp10461_91 temp10461_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10461_92 #x0000000000000000))
(assert (= var1191725 temp10461_92))
(assert (= temp10461_93 #x0000000000000000))
(assert (= temp10461_94 temp10461_93))
(assert (= temp10461_95 (select ARGNAME_stride_NAMEEND_VAL temp10461_94)))
(assert (= temp10461_96 #x0000000000000001))
(assert (= temp10461_97 temp10461_96))
(assert (= temp10461_98 (select ARGNAME_stride_NAMEEND_VAL temp10461_97)))
(assert (= temp10461_99 #x0000000000000002))
(assert (= temp10461_100 temp10461_99))
(assert (= temp10461_101 (select ARGNAME_stride_NAMEEND_VAL temp10461_100)))
(assert (= temp10461_102 #x0000000000000003))
(assert (= temp10461_103 temp10461_102))
(assert (= temp10461_104 (select ARGNAME_stride_NAMEEND_VAL temp10461_103)))
(assert (= temp10461_105 #x0000000000000004))
(assert (= temp10461_106 temp10461_105))
(assert (= temp10461_107 (select ARGNAME_stride_NAMEEND_VAL temp10461_106)))
(assert (= temp10461_108 #x0000000000000005))
(assert (= temp10461_109 temp10461_108))
(assert (= temp10461_110 (select ARGNAME_stride_NAMEEND_VAL temp10461_109)))
(assert (= temp10461_111 #x0000000000000000))
(assert (= temp10461_112 #x0000000000000000))
(assert (= temp10461_113 temp10461_112))
(assert (= temp10461_114 (select ARGNAME_stride_NAMEEND_VAL temp10461_113)))
(assert (= temp10461_115 #x0000000000000000))
(assert (= temp10461_116 #x0000000000000001))
(assert (= temp10461_117 temp10461_116))
(assert (= temp10461_118 (select ARGNAME_stride_NAMEEND_VAL temp10461_117)))
(assert (= temp10461_119 #x0000000000000000))
(assert (= temp10461_120 #x0000000000000002))
(assert (= temp10461_121 temp10461_120))
(assert (= temp10461_122 (select ARGNAME_stride_NAMEEND_VAL temp10461_121)))
(assert (= temp10461_123 #x0000000000000000))
(assert (= temp10461_124 #x0000000000000003))
(assert (= temp10461_125 temp10461_124))
(assert (= temp10461_126 (select ARGNAME_stride_NAMEEND_VAL temp10461_125)))
(assert (= temp10461_127 #x0000000000000000))
(assert (= temp10461_128 #x0000000000000004))
(assert (= temp10461_129 temp10461_128))
(assert (= temp10461_130 (select ARGNAME_stride_NAMEEND_VAL temp10461_129)))
(assert (= temp10461_131 #x0000000000000000))
(assert (= temp10461_132 #x0000000000000005))
(assert (= temp10461_133 temp10461_132))
(assert (= temp10461_134 (select ARGNAME_stride_NAMEEND_VAL temp10461_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10461_114 temp10461_111)
             (bvsle temp10461_118 temp10461_115)
             (bvsle temp10461_122 temp10461_119)
             (bvsle temp10461_126 temp10461_123)
             (bvsle temp10461_130 temp10461_127)
             (bvsle temp10461_134 temp10461_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10461_135 #x0000000000000000))
(assert (= var1191735 temp10461_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10461_136 #x0000000000000001))
(assert (= var1191747 temp10461_136))
(assert (= temp10461_137 #x0000000000000000))
(assert (= var1179826 temp10461_137))
(assert (= temp10461_138 #x0000000000000000))
(assert (= temp10461_139 temp10461_138))
(assert (= temp10461_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10461_139)))
(assert (= temp10461_141 #x0000000000000001))
(assert (= temp10461_142 temp10461_141))
(assert (= temp10461_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10461_142)))
(assert (= temp10461_144 #x0000000000000002))
(assert (= temp10461_145 temp10461_144))
(assert (= temp10461_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10461_145)))
(assert (= temp10461_147 #x0000000000000003))
(assert (= temp10461_148 temp10461_147))
(assert (= temp10461_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10461_148)))
(assert (= temp10461_150 #x0000000000000004))
(assert (= temp10461_151 temp10461_150))
(assert (= temp10461_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10461_151)))
(assert (= temp10461_153 #x0000000000000005))
(assert (= temp10461_154 temp10461_153))
(assert (= temp10461_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10461_154)))
(assert (= temp10461_157 var1179826))
(assert (= temp10461_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10461_157)))
(assert (= temp10461_156 temp10461_158))
(assert (= var1191780
   (ite (bvslt temp10461_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10461_159 #x0000000000000000))
(assert (= var1191780 temp10461_159))
(assert (= temp10461_160 #x0000000000000000))
(assert (= var1179826 temp10461_160))
(assert (= temp10461_162 var1179826))
(assert (= temp10461_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10461_162)))
(assert (= temp10461_161 temp10461_163))
(assert (= var1191802 (bvsmod temp10461_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10461_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10461_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10461_165 #x0000000000000001))
(assert (= var1191803 temp10461_165))
(assert (= temp10461_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10461_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10461_167 #x0000000000000001))
(assert (= var1191823 temp10461_167))
(assert (= temp10461_168 #x0000000000000001))
(assert (= var1180714 temp10461_168))
(assert (= temp10461_169 #x0000000000000000))
(assert (= temp10461_170 temp10461_169))
(assert (= temp10461_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10461_170)))
(assert (= temp10461_172 #x0000000000000001))
(assert (= temp10461_173 temp10461_172))
(assert (= temp10461_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10461_173)))
(assert (= temp10461_175 #x0000000000000002))
(assert (= temp10461_176 temp10461_175))
(assert (= temp10461_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10461_176)))
(assert (= temp10461_178 #x0000000000000003))
(assert (= temp10461_179 temp10461_178))
(assert (= temp10461_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10461_179)))
(assert (= temp10461_181 #x0000000000000004))
(assert (= temp10461_182 temp10461_181))
(assert (= temp10461_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10461_182)))
(assert (= temp10461_184 #x0000000000000005))
(assert (= temp10461_185 temp10461_184))
(assert (= temp10461_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10461_185)))
(assert (= temp10461_187 #x0000000000000000))
(assert (= temp10461_188
   (ite (bvslt var1180714 temp10461_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10461_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10461_188)))
(assert (= var1191831 temp10461_189))
(assert (bvslt (ite (bvslt var1180714 temp10461_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10461_190 #x0000000000000001))
(assert (= var1180714 temp10461_190))
(assert (= temp10461_192 var1180714))
(assert (= temp10461_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10461_192)))
(assert (= temp10461_191 temp10461_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10461_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10461_194 #x0000000000000001))
(assert (= var1191836 temp10461_194))
(assert (= temp10461_195 #x0000000000000000))
(assert (= var1179826 temp10461_195))
(assert (= temp10461_197 var1179826))
(assert (= temp10461_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10461_197)))
(assert (= temp10461_196 temp10461_198))
(assert (= temp10461_199 #x0000000000000002))
(assert (= var1586025 temp10461_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10461_200 #x0000000000000001))
(assert (= var1191993 temp10461_200))
(assert (= temp10461_201 #x0000000000000001))
(assert (= var2700303 temp10461_201))
(assert (= temp10461_202 #x0000000000000001))
(assert (= var2962447 temp10461_202))
(assert (= temp10461_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10461_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10461_204 #x0000000000000001))
(assert (= var211058 temp10461_204))
(assert (= temp10461_205 #x0000000000000001))
(assert (= var211188 temp10461_205))
(assert (= var3879401 var211188))
(assert (= temp10461_206 #x0000000000000000))
(assert (= var3866802 temp10461_206))
(assert (= temp10461_207 #x0000000000000000))
(assert (= temp10461_208
   (ite (bvslt var3866802 temp10461_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10461_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10461_208)))
(assert (= var3879420 temp10461_209))
(assert (bvslt (ite (bvslt var3866802 temp10461_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10461_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10461_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10461_211 #x0000000000000000))
(assert (= var3879421 temp10461_211))
(assert (= temp10461_212 #x0000000000000001))
(assert (= var3867690 temp10461_212))
(assert (= temp10461_213 #x0000000000000000))
(assert (= temp10461_214
   (ite (bvslt var3867690 temp10461_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10461_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10461_214)))
(assert (= var3879423 temp10461_215))
(assert (bvslt (ite (bvslt var3867690 temp10461_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10461_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10461_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10461_217 #x0000000000000001))
(assert (= var3879424 temp10461_217))
(assert (= temp10461_218 #x0000000000000000))
(assert (= var4079423 temp10461_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10461_219 #x0000000000000002))
(assert (= var4208259 temp10461_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10461_220 #x0000000000000000))
(assert (= var4273820 temp10461_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4469136 var211201))
(assert (= var4731280 var211201))
(assert (= temp10461_221 #x0000000000000001))
(assert (= var212414
   (ite (= ARGNAME_groups_NAMEEND temp10461_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10461_222 #x0000000000000000))
(assert (= var212414 temp10461_222))
(assert (= temp10461_223 #x0000000000000002))
(assert (= var5060227 temp10461_223))
(assert (= var5125772 var5060227))
(assert (= temp10461_224 #x0000000000000001))
(assert (= var211058 temp10461_224))
(model-add temp10461_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10461_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10461_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10461_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




