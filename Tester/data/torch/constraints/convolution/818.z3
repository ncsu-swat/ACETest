(declare-fun temp1090_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp1090_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1090_3 () (_ BitVec 64))
(declare-fun temp1090_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1090_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp1090_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1090_7 () (_ BitVec 64))
(declare-fun temp1090_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1090_9 () (_ BitVec 64))
(declare-fun temp1090_10 () (_ BitVec 64))
(declare-fun temp1090_11 () (_ BitVec 64))
(declare-fun temp1090_12 () (_ BitVec 64))
(declare-fun temp1090_13 () (_ BitVec 64))
(declare-fun temp1090_14 () (_ BitVec 64))
(declare-fun temp1090_15 () (_ BitVec 64))
(declare-fun temp1090_16 () (_ BitVec 64))
(declare-fun temp1090_17 () (_ BitVec 64))
(declare-fun temp1090_18 () (_ BitVec 64))
(declare-fun temp1090_19 () (_ BitVec 64))
(declare-fun temp1090_20 () (_ BitVec 64))
(declare-fun temp1090_21 () (_ BitVec 64))
(declare-fun temp1090_22 () (_ BitVec 64))
(declare-fun temp1090_23 () (_ BitVec 64))
(declare-fun temp1090_24 () (_ BitVec 64))
(declare-fun temp1090_25 () (_ BitVec 64))
(declare-fun temp1090_26 () (_ BitVec 64))
(declare-fun temp1090_27 () (_ BitVec 64))
(declare-fun temp1090_28 () (_ BitVec 64))
(declare-fun temp1090_29 () (_ BitVec 64))
(declare-fun temp1090_30 () (_ BitVec 64))
(declare-fun temp1090_31 () (_ BitVec 64))
(declare-fun temp1090_32 () (_ BitVec 64))
(declare-fun temp1090_33 () (_ BitVec 64))
(declare-fun temp1090_34 () (_ BitVec 64))
(declare-fun temp1090_35 () (_ BitVec 64))
(declare-fun temp1090_36 () (_ BitVec 64))
(declare-fun temp1090_37 () (_ BitVec 64))
(declare-fun temp1090_38 () (_ BitVec 64))
(declare-fun temp1090_39 () (_ BitVec 64))
(declare-fun temp1090_40 () (_ BitVec 64))
(declare-fun temp1090_41 () (_ BitVec 64))
(declare-fun temp1090_42 () (_ BitVec 64))
(declare-fun temp1090_43 () (_ BitVec 64))
(declare-fun temp1090_44 () (_ BitVec 64))
(declare-fun temp1090_45 () (_ BitVec 64))
(declare-fun temp1090_46 () (_ BitVec 64))
(declare-fun temp1090_47 () (_ BitVec 64))
(declare-fun temp1090_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp1090_49 () (_ BitVec 64))
(declare-fun temp1090_50 () (_ BitVec 64))
(declare-fun temp1090_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1090_52 () (_ BitVec 64))
(declare-fun temp1090_53 () (_ BitVec 64))
(declare-fun temp1090_54 () (_ BitVec 64))
(declare-fun temp1090_55 () (_ BitVec 64))
(declare-fun temp1090_56 () (_ BitVec 64))
(declare-fun temp1090_57 () (_ BitVec 64))
(declare-fun temp1090_58 () (_ BitVec 64))
(declare-fun temp1090_59 () (_ BitVec 64))
(declare-fun temp1090_60 () (_ BitVec 64))
(declare-fun temp1090_61 () (_ BitVec 64))
(declare-fun temp1090_62 () (_ BitVec 64))
(declare-fun temp1090_63 () (_ BitVec 64))
(declare-fun temp1090_64 () (_ BitVec 64))
(declare-fun temp1090_65 () (_ BitVec 64))
(declare-fun temp1090_66 () (_ BitVec 64))
(declare-fun temp1090_67 () (_ BitVec 64))
(declare-fun temp1090_68 () (_ BitVec 64))
(declare-fun temp1090_69 () (_ BitVec 64))
(declare-fun temp1090_70 () (_ BitVec 64))
(declare-fun temp1090_71 () (_ BitVec 64))
(declare-fun temp1090_72 () (_ BitVec 64))
(declare-fun temp1090_73 () (_ BitVec 64))
(declare-fun temp1090_74 () (_ BitVec 64))
(declare-fun temp1090_75 () (_ BitVec 64))
(declare-fun temp1090_76 () (_ BitVec 64))
(declare-fun temp1090_77 () (_ BitVec 64))
(declare-fun temp1090_78 () (_ BitVec 64))
(declare-fun temp1090_79 () (_ BitVec 64))
(declare-fun temp1090_80 () (_ BitVec 64))
(declare-fun temp1090_81 () (_ BitVec 64))
(declare-fun temp1090_82 () (_ BitVec 64))
(declare-fun temp1090_83 () (_ BitVec 64))
(declare-fun temp1090_84 () (_ BitVec 64))
(declare-fun temp1090_85 () (_ BitVec 64))
(declare-fun temp1090_86 () (_ BitVec 64))
(declare-fun temp1090_87 () (_ BitVec 64))
(declare-fun temp1090_88 () (_ BitVec 64))
(declare-fun temp1090_89 () (_ BitVec 64))
(declare-fun temp1090_90 () (_ BitVec 64))
(declare-fun temp1090_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp1090_92 () (_ BitVec 64))
(declare-fun temp1090_93 () (_ BitVec 64))
(declare-fun temp1090_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1090_95 () (_ BitVec 64))
(declare-fun temp1090_96 () (_ BitVec 64))
(declare-fun temp1090_97 () (_ BitVec 64))
(declare-fun temp1090_98 () (_ BitVec 64))
(declare-fun temp1090_99 () (_ BitVec 64))
(declare-fun temp1090_100 () (_ BitVec 64))
(declare-fun temp1090_101 () (_ BitVec 64))
(declare-fun temp1090_102 () (_ BitVec 64))
(declare-fun temp1090_103 () (_ BitVec 64))
(declare-fun temp1090_104 () (_ BitVec 64))
(declare-fun temp1090_105 () (_ BitVec 64))
(declare-fun temp1090_106 () (_ BitVec 64))
(declare-fun temp1090_107 () (_ BitVec 64))
(declare-fun temp1090_108 () (_ BitVec 64))
(declare-fun temp1090_109 () (_ BitVec 64))
(declare-fun temp1090_110 () (_ BitVec 64))
(declare-fun temp1090_111 () (_ BitVec 64))
(declare-fun temp1090_112 () (_ BitVec 64))
(declare-fun temp1090_113 () (_ BitVec 64))
(declare-fun temp1090_114 () (_ BitVec 64))
(declare-fun temp1090_115 () (_ BitVec 64))
(declare-fun temp1090_116 () (_ BitVec 64))
(declare-fun temp1090_117 () (_ BitVec 64))
(declare-fun temp1090_118 () (_ BitVec 64))
(declare-fun temp1090_119 () (_ BitVec 64))
(declare-fun temp1090_120 () (_ BitVec 64))
(declare-fun temp1090_121 () (_ BitVec 64))
(declare-fun temp1090_122 () (_ BitVec 64))
(declare-fun temp1090_123 () (_ BitVec 64))
(declare-fun temp1090_124 () (_ BitVec 64))
(declare-fun temp1090_125 () (_ BitVec 64))
(declare-fun temp1090_126 () (_ BitVec 64))
(declare-fun temp1090_127 () (_ BitVec 64))
(declare-fun temp1090_128 () (_ BitVec 64))
(declare-fun temp1090_129 () (_ BitVec 64))
(declare-fun temp1090_130 () (_ BitVec 64))
(declare-fun temp1090_131 () (_ BitVec 64))
(declare-fun temp1090_132 () (_ BitVec 64))
(declare-fun temp1090_133 () (_ BitVec 64))
(declare-fun temp1090_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp1090_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp1090_136 () (_ BitVec 64))
(declare-fun temp1090_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp1090_138 () (_ BitVec 64))
(declare-fun temp1090_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1090_140 () (_ BitVec 64))
(declare-fun temp1090_141 () (_ BitVec 64))
(declare-fun temp1090_142 () (_ BitVec 64))
(declare-fun temp1090_143 () (_ BitVec 64))
(declare-fun temp1090_144 () (_ BitVec 64))
(declare-fun temp1090_145 () (_ BitVec 64))
(declare-fun temp1090_146 () (_ BitVec 64))
(declare-fun temp1090_147 () (_ BitVec 64))
(declare-fun temp1090_148 () (_ BitVec 64))
(declare-fun temp1090_149 () (_ BitVec 64))
(declare-fun temp1090_150 () (_ BitVec 64))
(declare-fun temp1090_151 () (_ BitVec 64))
(declare-fun temp1090_152 () (_ BitVec 64))
(declare-fun temp1090_153 () (_ BitVec 64))
(declare-fun temp1090_154 () (_ BitVec 64))
(declare-fun temp1090_155 () (_ BitVec 64))
(declare-fun temp1090_157 () (_ BitVec 64))
(declare-fun temp1090_158 () (_ BitVec 64))
(declare-fun temp1090_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp1090_159 () (_ BitVec 64))
(declare-fun temp1090_160 () (_ BitVec 64))
(declare-fun temp1090_162 () (_ BitVec 64))
(declare-fun temp1090_163 () (_ BitVec 64))
(declare-fun temp1090_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp1090_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp1090_165 () (_ BitVec 64))
(declare-fun temp1090_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp1090_167 () (_ BitVec 64))
(declare-fun temp1090_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp1090_169 () (_ BitVec 64))
(declare-fun temp1090_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1090_171 () (_ BitVec 64))
(declare-fun temp1090_172 () (_ BitVec 64))
(declare-fun temp1090_173 () (_ BitVec 64))
(declare-fun temp1090_174 () (_ BitVec 64))
(declare-fun temp1090_175 () (_ BitVec 64))
(declare-fun temp1090_176 () (_ BitVec 64))
(declare-fun temp1090_177 () (_ BitVec 64))
(declare-fun temp1090_178 () (_ BitVec 64))
(declare-fun temp1090_179 () (_ BitVec 64))
(declare-fun temp1090_180 () (_ BitVec 64))
(declare-fun temp1090_181 () (_ BitVec 64))
(declare-fun temp1090_182 () (_ BitVec 64))
(declare-fun temp1090_183 () (_ BitVec 64))
(declare-fun temp1090_184 () (_ BitVec 64))
(declare-fun temp1090_185 () (_ BitVec 64))
(declare-fun temp1090_186 () (_ BitVec 64))
(declare-fun temp1090_187 () (_ BitVec 64))
(declare-fun temp1090_188 () (_ BitVec 64))
(declare-fun temp1090_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp1090_190 () (_ BitVec 64))
(declare-fun temp1090_192 () (_ BitVec 64))
(declare-fun temp1090_193 () (_ BitVec 64))
(declare-fun temp1090_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp1090_194 () (_ BitVec 64))
(declare-fun temp1090_195 () (_ BitVec 64))
(declare-fun temp1090_197 () (_ BitVec 64))
(declare-fun temp1090_198 () (_ BitVec 64))
(declare-fun temp1090_196 () (_ BitVec 64))
(declare-fun temp1090_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp1090_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp1090_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp1090_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp1090_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp1090_204 () (_ BitVec 64))
(declare-fun temp1090_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp1090_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp1090_207 () (_ BitVec 64))
(declare-fun temp1090_208 () (_ BitVec 64))
(declare-fun temp1090_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp1090_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp1090_211 () (_ BitVec 64))
(declare-fun temp1090_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp1090_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp1090_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4469136 () (_ BitVec 64))
(declare-fun var4731280 () (_ BitVec 64))
(declare-fun temp1090_215 () (_ BitVec 64))
(declare-fun var212414 () (_ BitVec 64))
(declare-fun temp1090_216 () (_ BitVec 64))
(declare-fun temp1090_217 () (_ BitVec 64))
(declare-fun var5060227 () (_ BitVec 64))
(declare-fun var5060229 () (_ BitVec 64))
(declare-fun var5125772 () (_ BitVec 64))
(declare-fun var5125773 () (_ BitVec 64))
(declare-fun temp1090_218 () (_ BitVec 64))
(assert (= temp1090_1 #x0000000000000001))
(assert (= var77203 temp1090_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp1090_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp1090_2)))
(assert (= temp1090_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1090_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1090_4 #x0000000000000000))
(assert (= var210941 temp1090_4))
(assert (= temp1090_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp1090_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1090_6 #x0000000000000000))
(assert (= var210986 temp1090_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp1090_7 #x0000000000000000))
(assert (= temp1090_8 temp1090_7))
(assert (= temp1090_9 (select ARGNAME_padding_NAMEEND_VAL temp1090_8)))
(assert (= temp1090_10 #x0000000000000001))
(assert (= temp1090_11 temp1090_10))
(assert (= temp1090_12 (select ARGNAME_padding_NAMEEND_VAL temp1090_11)))
(assert (= temp1090_13 #x0000000000000002))
(assert (= temp1090_14 temp1090_13))
(assert (= temp1090_15 (select ARGNAME_padding_NAMEEND_VAL temp1090_14)))
(assert (= temp1090_16 #x0000000000000003))
(assert (= temp1090_17 temp1090_16))
(assert (= temp1090_18 (select ARGNAME_padding_NAMEEND_VAL temp1090_17)))
(assert (= temp1090_19 #x0000000000000004))
(assert (= temp1090_20 temp1090_19))
(assert (= temp1090_21 (select ARGNAME_padding_NAMEEND_VAL temp1090_20)))
(assert (= temp1090_22 #x0000000000000005))
(assert (= temp1090_23 temp1090_22))
(assert (= temp1090_24 (select ARGNAME_padding_NAMEEND_VAL temp1090_23)))
(assert (= temp1090_25 #x0000000000000000))
(assert (= temp1090_26 #x0000000000000000))
(assert (= temp1090_27 temp1090_26))
(assert (= temp1090_28 (select ARGNAME_padding_NAMEEND_VAL temp1090_27)))
(assert (= temp1090_29 #x0000000000000000))
(assert (= temp1090_30 #x0000000000000001))
(assert (= temp1090_31 temp1090_30))
(assert (= temp1090_32 (select ARGNAME_padding_NAMEEND_VAL temp1090_31)))
(assert (= temp1090_33 #x0000000000000000))
(assert (= temp1090_34 #x0000000000000002))
(assert (= temp1090_35 temp1090_34))
(assert (= temp1090_36 (select ARGNAME_padding_NAMEEND_VAL temp1090_35)))
(assert (= temp1090_37 #x0000000000000000))
(assert (= temp1090_38 #x0000000000000003))
(assert (= temp1090_39 temp1090_38))
(assert (= temp1090_40 (select ARGNAME_padding_NAMEEND_VAL temp1090_39)))
(assert (= temp1090_41 #x0000000000000000))
(assert (= temp1090_42 #x0000000000000004))
(assert (= temp1090_43 temp1090_42))
(assert (= temp1090_44 (select ARGNAME_padding_NAMEEND_VAL temp1090_43)))
(assert (= temp1090_45 #x0000000000000000))
(assert (= temp1090_46 #x0000000000000005))
(assert (= temp1090_47 temp1090_46))
(assert (= temp1090_48 (select ARGNAME_padding_NAMEEND_VAL temp1090_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp1090_28 temp1090_25)
             (bvslt temp1090_32 temp1090_29)
             (bvslt temp1090_36 temp1090_33)
             (bvslt temp1090_40 temp1090_37)
             (bvslt temp1090_44 temp1090_41)
             (bvslt temp1090_48 temp1090_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1090_49 #x0000000000000000))
(assert (= var1191714 temp1090_49))
(assert (= temp1090_50 #x0000000000000000))
(assert (= temp1090_51 temp1090_50))
(assert (= temp1090_52 (select ARGNAME_output_padding_NAMEEND_VAL temp1090_51)))
(assert (= temp1090_53 #x0000000000000001))
(assert (= temp1090_54 temp1090_53))
(assert (= temp1090_55 (select ARGNAME_output_padding_NAMEEND_VAL temp1090_54)))
(assert (= temp1090_56 #x0000000000000002))
(assert (= temp1090_57 temp1090_56))
(assert (= temp1090_58 (select ARGNAME_output_padding_NAMEEND_VAL temp1090_57)))
(assert (= temp1090_59 #x0000000000000003))
(assert (= temp1090_60 temp1090_59))
(assert (= temp1090_61 (select ARGNAME_output_padding_NAMEEND_VAL temp1090_60)))
(assert (= temp1090_62 #x0000000000000004))
(assert (= temp1090_63 temp1090_62))
(assert (= temp1090_64 (select ARGNAME_output_padding_NAMEEND_VAL temp1090_63)))
(assert (= temp1090_65 #x0000000000000005))
(assert (= temp1090_66 temp1090_65))
(assert (= temp1090_67 (select ARGNAME_output_padding_NAMEEND_VAL temp1090_66)))
(assert (= temp1090_68 #x0000000000000000))
(assert (= temp1090_69 #x0000000000000000))
(assert (= temp1090_70 temp1090_69))
(assert (= temp1090_71 (select ARGNAME_output_padding_NAMEEND_VAL temp1090_70)))
(assert (= temp1090_72 #x0000000000000000))
(assert (= temp1090_73 #x0000000000000001))
(assert (= temp1090_74 temp1090_73))
(assert (= temp1090_75 (select ARGNAME_output_padding_NAMEEND_VAL temp1090_74)))
(assert (= temp1090_76 #x0000000000000000))
(assert (= temp1090_77 #x0000000000000002))
(assert (= temp1090_78 temp1090_77))
(assert (= temp1090_79 (select ARGNAME_output_padding_NAMEEND_VAL temp1090_78)))
(assert (= temp1090_80 #x0000000000000000))
(assert (= temp1090_81 #x0000000000000003))
(assert (= temp1090_82 temp1090_81))
(assert (= temp1090_83 (select ARGNAME_output_padding_NAMEEND_VAL temp1090_82)))
(assert (= temp1090_84 #x0000000000000000))
(assert (= temp1090_85 #x0000000000000004))
(assert (= temp1090_86 temp1090_85))
(assert (= temp1090_87 (select ARGNAME_output_padding_NAMEEND_VAL temp1090_86)))
(assert (= temp1090_88 #x0000000000000000))
(assert (= temp1090_89 #x0000000000000005))
(assert (= temp1090_90 temp1090_89))
(assert (= temp1090_91 (select ARGNAME_output_padding_NAMEEND_VAL temp1090_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp1090_71 temp1090_68)
             (bvslt temp1090_75 temp1090_72)
             (bvslt temp1090_79 temp1090_76)
             (bvslt temp1090_83 temp1090_80)
             (bvslt temp1090_87 temp1090_84)
             (bvslt temp1090_91 temp1090_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1090_92 #x0000000000000000))
(assert (= var1191725 temp1090_92))
(assert (= temp1090_93 #x0000000000000000))
(assert (= temp1090_94 temp1090_93))
(assert (= temp1090_95 (select ARGNAME_stride_NAMEEND_VAL temp1090_94)))
(assert (= temp1090_96 #x0000000000000001))
(assert (= temp1090_97 temp1090_96))
(assert (= temp1090_98 (select ARGNAME_stride_NAMEEND_VAL temp1090_97)))
(assert (= temp1090_99 #x0000000000000002))
(assert (= temp1090_100 temp1090_99))
(assert (= temp1090_101 (select ARGNAME_stride_NAMEEND_VAL temp1090_100)))
(assert (= temp1090_102 #x0000000000000003))
(assert (= temp1090_103 temp1090_102))
(assert (= temp1090_104 (select ARGNAME_stride_NAMEEND_VAL temp1090_103)))
(assert (= temp1090_105 #x0000000000000004))
(assert (= temp1090_106 temp1090_105))
(assert (= temp1090_107 (select ARGNAME_stride_NAMEEND_VAL temp1090_106)))
(assert (= temp1090_108 #x0000000000000005))
(assert (= temp1090_109 temp1090_108))
(assert (= temp1090_110 (select ARGNAME_stride_NAMEEND_VAL temp1090_109)))
(assert (= temp1090_111 #x0000000000000000))
(assert (= temp1090_112 #x0000000000000000))
(assert (= temp1090_113 temp1090_112))
(assert (= temp1090_114 (select ARGNAME_stride_NAMEEND_VAL temp1090_113)))
(assert (= temp1090_115 #x0000000000000000))
(assert (= temp1090_116 #x0000000000000001))
(assert (= temp1090_117 temp1090_116))
(assert (= temp1090_118 (select ARGNAME_stride_NAMEEND_VAL temp1090_117)))
(assert (= temp1090_119 #x0000000000000000))
(assert (= temp1090_120 #x0000000000000002))
(assert (= temp1090_121 temp1090_120))
(assert (= temp1090_122 (select ARGNAME_stride_NAMEEND_VAL temp1090_121)))
(assert (= temp1090_123 #x0000000000000000))
(assert (= temp1090_124 #x0000000000000003))
(assert (= temp1090_125 temp1090_124))
(assert (= temp1090_126 (select ARGNAME_stride_NAMEEND_VAL temp1090_125)))
(assert (= temp1090_127 #x0000000000000000))
(assert (= temp1090_128 #x0000000000000004))
(assert (= temp1090_129 temp1090_128))
(assert (= temp1090_130 (select ARGNAME_stride_NAMEEND_VAL temp1090_129)))
(assert (= temp1090_131 #x0000000000000000))
(assert (= temp1090_132 #x0000000000000005))
(assert (= temp1090_133 temp1090_132))
(assert (= temp1090_134 (select ARGNAME_stride_NAMEEND_VAL temp1090_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp1090_114 temp1090_111)
             (bvsle temp1090_118 temp1090_115)
             (bvsle temp1090_122 temp1090_119)
             (bvsle temp1090_126 temp1090_123)
             (bvsle temp1090_130 temp1090_127)
             (bvsle temp1090_134 temp1090_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1090_135 #x0000000000000000))
(assert (= var1191735 temp1090_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1090_136 #x0000000000000001))
(assert (= var1191747 temp1090_136))
(assert (= temp1090_137 #x0000000000000000))
(assert (= var1179826 temp1090_137))
(assert (= temp1090_138 #x0000000000000000))
(assert (= temp1090_139 temp1090_138))
(assert (= temp1090_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1090_139)))
(assert (= temp1090_141 #x0000000000000001))
(assert (= temp1090_142 temp1090_141))
(assert (= temp1090_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1090_142)))
(assert (= temp1090_144 #x0000000000000002))
(assert (= temp1090_145 temp1090_144))
(assert (= temp1090_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1090_145)))
(assert (= temp1090_147 #x0000000000000003))
(assert (= temp1090_148 temp1090_147))
(assert (= temp1090_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1090_148)))
(assert (= temp1090_150 #x0000000000000004))
(assert (= temp1090_151 temp1090_150))
(assert (= temp1090_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1090_151)))
(assert (= temp1090_153 #x0000000000000005))
(assert (= temp1090_154 temp1090_153))
(assert (= temp1090_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1090_154)))
(assert (= temp1090_157 var1179826))
(assert (= temp1090_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1090_157)))
(assert (= temp1090_156 temp1090_158))
(assert (= var1191780
   (ite (bvslt temp1090_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1090_159 #x0000000000000000))
(assert (= var1191780 temp1090_159))
(assert (= temp1090_160 #x0000000000000000))
(assert (= var1179826 temp1090_160))
(assert (= temp1090_162 var1179826))
(assert (= temp1090_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1090_162)))
(assert (= temp1090_161 temp1090_163))
(assert (= var1191802 (bvsmod temp1090_161 ARGNAME_groups_NAMEEND)))
(assert (= temp1090_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp1090_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp1090_165 #x0000000000000001))
(assert (= var1191803 temp1090_165))
(assert (= temp1090_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp1090_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1090_167 #x0000000000000001))
(assert (= var1191823 temp1090_167))
(assert (= temp1090_168 #x0000000000000001))
(assert (= var1180714 temp1090_168))
(assert (= temp1090_169 #x0000000000000000))
(assert (= temp1090_170 temp1090_169))
(assert (= temp1090_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp1090_170)))
(assert (= temp1090_172 #x0000000000000001))
(assert (= temp1090_173 temp1090_172))
(assert (= temp1090_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp1090_173)))
(assert (= temp1090_175 #x0000000000000002))
(assert (= temp1090_176 temp1090_175))
(assert (= temp1090_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp1090_176)))
(assert (= temp1090_178 #x0000000000000003))
(assert (= temp1090_179 temp1090_178))
(assert (= temp1090_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp1090_179)))
(assert (= temp1090_181 #x0000000000000004))
(assert (= temp1090_182 temp1090_181))
(assert (= temp1090_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp1090_182)))
(assert (= temp1090_184 #x0000000000000005))
(assert (= temp1090_185 temp1090_184))
(assert (= temp1090_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp1090_185)))
(assert (= temp1090_187 #x0000000000000000))
(assert (= temp1090_188
   (ite (bvslt var1180714 temp1090_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp1090_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp1090_188)))
(assert (= var1191831 temp1090_189))
(assert (bvslt (ite (bvslt var1180714 temp1090_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1090_190 #x0000000000000001))
(assert (= var1180714 temp1090_190))
(assert (= temp1090_192 var1180714))
(assert (= temp1090_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1090_192)))
(assert (= temp1090_191 temp1090_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp1090_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp1090_194 #x0000000000000001))
(assert (= var1191836 temp1090_194))
(assert (= temp1090_195 #x0000000000000000))
(assert (= var1179826 temp1090_195))
(assert (= temp1090_197 var1179826))
(assert (= temp1090_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1090_197)))
(assert (= temp1090_196 temp1090_198))
(assert (= temp1090_199 #x0000000000000002))
(assert (= var1586025 temp1090_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp1090_200 #x0000000000000001))
(assert (= var1191993 temp1090_200))
(assert (= temp1090_201 #x0000000000000001))
(assert (= var2700303 temp1090_201))
(assert (= temp1090_202 #x0000000000000001))
(assert (= var2962447 temp1090_202))
(assert (= temp1090_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1090_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1090_204 #x0000000000000001))
(assert (= var211058 temp1090_204))
(assert (= temp1090_205 #x0000000000000001))
(assert (= var211188 temp1090_205))
(assert (= var3879401 var211188))
(assert (= temp1090_206 #x0000000000000000))
(assert (= var3866802 temp1090_206))
(assert (= temp1090_207 #x0000000000000000))
(assert (= temp1090_208
   (ite (bvslt var3866802 temp1090_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp1090_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp1090_208)))
(assert (= var3879420 temp1090_209))
(assert (bvslt (ite (bvslt var3866802 temp1090_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1090_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp1090_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp1090_211 #x0000000000000001))
(assert (= var3879421 temp1090_211))
(assert (= temp1090_212 #x0000000000000000))
(assert (= var4079423 temp1090_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp1090_213 #x0000000000000002))
(assert (= var4208259 temp1090_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1090_214 #x0000000000000000))
(assert (= var4273820 temp1090_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4469136 var211201))
(assert (= var4731280 var211201))
(assert (= temp1090_215 #x0000000000000001))
(assert (= var212414
   (ite (= ARGNAME_groups_NAMEEND temp1090_215)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1090_216 #x0000000000000001))
(assert (= var212414 temp1090_216))
(assert (= temp1090_217 #x0000000000000002))
(assert (= var5060227 temp1090_217))
(assert (= var5060229 (bvsub ARGNAME_weight_NAMEEND_DIM var5060227)))
(assert (= var5125772 var5060227))
(assert (= var5125773 var5060229))
(assert (= temp1090_218 #x0000000000000001))
(assert (= var211058 temp1090_218))
(model-add temp1090_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp1090_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1090_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp1090_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





