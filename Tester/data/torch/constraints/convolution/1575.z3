(declare-fun temp10894_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10894_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10894_3 () (_ BitVec 64))
(declare-fun temp10894_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10894_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10894_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10894_7 () (_ BitVec 64))
(declare-fun temp10894_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10894_9 () (_ BitVec 64))
(declare-fun temp10894_10 () (_ BitVec 64))
(declare-fun temp10894_11 () (_ BitVec 64))
(declare-fun temp10894_12 () (_ BitVec 64))
(declare-fun temp10894_13 () (_ BitVec 64))
(declare-fun temp10894_14 () (_ BitVec 64))
(declare-fun temp10894_15 () (_ BitVec 64))
(declare-fun temp10894_16 () (_ BitVec 64))
(declare-fun temp10894_17 () (_ BitVec 64))
(declare-fun temp10894_18 () (_ BitVec 64))
(declare-fun temp10894_19 () (_ BitVec 64))
(declare-fun temp10894_20 () (_ BitVec 64))
(declare-fun temp10894_21 () (_ BitVec 64))
(declare-fun temp10894_22 () (_ BitVec 64))
(declare-fun temp10894_23 () (_ BitVec 64))
(declare-fun temp10894_24 () (_ BitVec 64))
(declare-fun temp10894_25 () (_ BitVec 64))
(declare-fun temp10894_26 () (_ BitVec 64))
(declare-fun temp10894_27 () (_ BitVec 64))
(declare-fun temp10894_28 () (_ BitVec 64))
(declare-fun temp10894_29 () (_ BitVec 64))
(declare-fun temp10894_30 () (_ BitVec 64))
(declare-fun temp10894_31 () (_ BitVec 64))
(declare-fun temp10894_32 () (_ BitVec 64))
(declare-fun temp10894_33 () (_ BitVec 64))
(declare-fun temp10894_34 () (_ BitVec 64))
(declare-fun temp10894_35 () (_ BitVec 64))
(declare-fun temp10894_36 () (_ BitVec 64))
(declare-fun temp10894_37 () (_ BitVec 64))
(declare-fun temp10894_38 () (_ BitVec 64))
(declare-fun temp10894_39 () (_ BitVec 64))
(declare-fun temp10894_40 () (_ BitVec 64))
(declare-fun temp10894_41 () (_ BitVec 64))
(declare-fun temp10894_42 () (_ BitVec 64))
(declare-fun temp10894_43 () (_ BitVec 64))
(declare-fun temp10894_44 () (_ BitVec 64))
(declare-fun temp10894_45 () (_ BitVec 64))
(declare-fun temp10894_46 () (_ BitVec 64))
(declare-fun temp10894_47 () (_ BitVec 64))
(declare-fun temp10894_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10894_49 () (_ BitVec 64))
(declare-fun temp10894_50 () (_ BitVec 64))
(declare-fun temp10894_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10894_52 () (_ BitVec 64))
(declare-fun temp10894_53 () (_ BitVec 64))
(declare-fun temp10894_54 () (_ BitVec 64))
(declare-fun temp10894_55 () (_ BitVec 64))
(declare-fun temp10894_56 () (_ BitVec 64))
(declare-fun temp10894_57 () (_ BitVec 64))
(declare-fun temp10894_58 () (_ BitVec 64))
(declare-fun temp10894_59 () (_ BitVec 64))
(declare-fun temp10894_60 () (_ BitVec 64))
(declare-fun temp10894_61 () (_ BitVec 64))
(declare-fun temp10894_62 () (_ BitVec 64))
(declare-fun temp10894_63 () (_ BitVec 64))
(declare-fun temp10894_64 () (_ BitVec 64))
(declare-fun temp10894_65 () (_ BitVec 64))
(declare-fun temp10894_66 () (_ BitVec 64))
(declare-fun temp10894_67 () (_ BitVec 64))
(declare-fun temp10894_68 () (_ BitVec 64))
(declare-fun temp10894_69 () (_ BitVec 64))
(declare-fun temp10894_70 () (_ BitVec 64))
(declare-fun temp10894_71 () (_ BitVec 64))
(declare-fun temp10894_72 () (_ BitVec 64))
(declare-fun temp10894_73 () (_ BitVec 64))
(declare-fun temp10894_74 () (_ BitVec 64))
(declare-fun temp10894_75 () (_ BitVec 64))
(declare-fun temp10894_76 () (_ BitVec 64))
(declare-fun temp10894_77 () (_ BitVec 64))
(declare-fun temp10894_78 () (_ BitVec 64))
(declare-fun temp10894_79 () (_ BitVec 64))
(declare-fun temp10894_80 () (_ BitVec 64))
(declare-fun temp10894_81 () (_ BitVec 64))
(declare-fun temp10894_82 () (_ BitVec 64))
(declare-fun temp10894_83 () (_ BitVec 64))
(declare-fun temp10894_84 () (_ BitVec 64))
(declare-fun temp10894_85 () (_ BitVec 64))
(declare-fun temp10894_86 () (_ BitVec 64))
(declare-fun temp10894_87 () (_ BitVec 64))
(declare-fun temp10894_88 () (_ BitVec 64))
(declare-fun temp10894_89 () (_ BitVec 64))
(declare-fun temp10894_90 () (_ BitVec 64))
(declare-fun temp10894_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10894_92 () (_ BitVec 64))
(declare-fun temp10894_93 () (_ BitVec 64))
(declare-fun temp10894_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10894_95 () (_ BitVec 64))
(declare-fun temp10894_96 () (_ BitVec 64))
(declare-fun temp10894_97 () (_ BitVec 64))
(declare-fun temp10894_98 () (_ BitVec 64))
(declare-fun temp10894_99 () (_ BitVec 64))
(declare-fun temp10894_100 () (_ BitVec 64))
(declare-fun temp10894_101 () (_ BitVec 64))
(declare-fun temp10894_102 () (_ BitVec 64))
(declare-fun temp10894_103 () (_ BitVec 64))
(declare-fun temp10894_104 () (_ BitVec 64))
(declare-fun temp10894_105 () (_ BitVec 64))
(declare-fun temp10894_106 () (_ BitVec 64))
(declare-fun temp10894_107 () (_ BitVec 64))
(declare-fun temp10894_108 () (_ BitVec 64))
(declare-fun temp10894_109 () (_ BitVec 64))
(declare-fun temp10894_110 () (_ BitVec 64))
(declare-fun temp10894_111 () (_ BitVec 64))
(declare-fun temp10894_112 () (_ BitVec 64))
(declare-fun temp10894_113 () (_ BitVec 64))
(declare-fun temp10894_114 () (_ BitVec 64))
(declare-fun temp10894_115 () (_ BitVec 64))
(declare-fun temp10894_116 () (_ BitVec 64))
(declare-fun temp10894_117 () (_ BitVec 64))
(declare-fun temp10894_118 () (_ BitVec 64))
(declare-fun temp10894_119 () (_ BitVec 64))
(declare-fun temp10894_120 () (_ BitVec 64))
(declare-fun temp10894_121 () (_ BitVec 64))
(declare-fun temp10894_122 () (_ BitVec 64))
(declare-fun temp10894_123 () (_ BitVec 64))
(declare-fun temp10894_124 () (_ BitVec 64))
(declare-fun temp10894_125 () (_ BitVec 64))
(declare-fun temp10894_126 () (_ BitVec 64))
(declare-fun temp10894_127 () (_ BitVec 64))
(declare-fun temp10894_128 () (_ BitVec 64))
(declare-fun temp10894_129 () (_ BitVec 64))
(declare-fun temp10894_130 () (_ BitVec 64))
(declare-fun temp10894_131 () (_ BitVec 64))
(declare-fun temp10894_132 () (_ BitVec 64))
(declare-fun temp10894_133 () (_ BitVec 64))
(declare-fun temp10894_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10894_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10894_136 () (_ BitVec 64))
(declare-fun temp10894_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10894_138 () (_ BitVec 64))
(declare-fun temp10894_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10894_140 () (_ BitVec 64))
(declare-fun temp10894_141 () (_ BitVec 64))
(declare-fun temp10894_142 () (_ BitVec 64))
(declare-fun temp10894_143 () (_ BitVec 64))
(declare-fun temp10894_144 () (_ BitVec 64))
(declare-fun temp10894_145 () (_ BitVec 64))
(declare-fun temp10894_146 () (_ BitVec 64))
(declare-fun temp10894_147 () (_ BitVec 64))
(declare-fun temp10894_148 () (_ BitVec 64))
(declare-fun temp10894_149 () (_ BitVec 64))
(declare-fun temp10894_150 () (_ BitVec 64))
(declare-fun temp10894_151 () (_ BitVec 64))
(declare-fun temp10894_152 () (_ BitVec 64))
(declare-fun temp10894_153 () (_ BitVec 64))
(declare-fun temp10894_154 () (_ BitVec 64))
(declare-fun temp10894_155 () (_ BitVec 64))
(declare-fun temp10894_157 () (_ BitVec 64))
(declare-fun temp10894_158 () (_ BitVec 64))
(declare-fun temp10894_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10894_159 () (_ BitVec 64))
(declare-fun temp10894_160 () (_ BitVec 64))
(declare-fun temp10894_162 () (_ BitVec 64))
(declare-fun temp10894_163 () (_ BitVec 64))
(declare-fun temp10894_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10894_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10894_165 () (_ BitVec 64))
(declare-fun temp10894_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10894_167 () (_ BitVec 64))
(declare-fun temp10894_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10894_169 () (_ BitVec 64))
(declare-fun temp10894_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10894_171 () (_ BitVec 64))
(declare-fun temp10894_172 () (_ BitVec 64))
(declare-fun temp10894_173 () (_ BitVec 64))
(declare-fun temp10894_174 () (_ BitVec 64))
(declare-fun temp10894_175 () (_ BitVec 64))
(declare-fun temp10894_176 () (_ BitVec 64))
(declare-fun temp10894_177 () (_ BitVec 64))
(declare-fun temp10894_178 () (_ BitVec 64))
(declare-fun temp10894_179 () (_ BitVec 64))
(declare-fun temp10894_180 () (_ BitVec 64))
(declare-fun temp10894_181 () (_ BitVec 64))
(declare-fun temp10894_182 () (_ BitVec 64))
(declare-fun temp10894_183 () (_ BitVec 64))
(declare-fun temp10894_184 () (_ BitVec 64))
(declare-fun temp10894_185 () (_ BitVec 64))
(declare-fun temp10894_186 () (_ BitVec 64))
(declare-fun temp10894_187 () (_ BitVec 64))
(declare-fun temp10894_188 () (_ BitVec 64))
(declare-fun temp10894_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10894_190 () (_ BitVec 64))
(declare-fun temp10894_192 () (_ BitVec 64))
(declare-fun temp10894_193 () (_ BitVec 64))
(declare-fun temp10894_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10894_194 () (_ BitVec 64))
(declare-fun temp10894_195 () (_ BitVec 64))
(declare-fun temp10894_197 () (_ BitVec 64))
(declare-fun temp10894_198 () (_ BitVec 64))
(declare-fun temp10894_196 () (_ BitVec 64))
(declare-fun temp10894_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10894_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10894_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10894_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10894_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10894_204 () (_ BitVec 64))
(declare-fun temp10894_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10894_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10894_207 () (_ BitVec 64))
(declare-fun temp10894_208 () (_ BitVec 64))
(declare-fun temp10894_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10894_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10894_211 () (_ BitVec 64))
(declare-fun temp10894_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10894_213 () (_ BitVec 64))
(declare-fun temp10894_214 () (_ BitVec 64))
(declare-fun temp10894_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10894_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10894_217 () (_ BitVec 64))
(declare-fun temp10894_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10894_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10894_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp10894_221 () (_ BitVec 64))
(assert (= temp10894_1 #x0000000000000001))
(assert (= var77203 temp10894_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10894_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10894_2)))
(assert (= temp10894_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10894_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10894_4 #x0000000000000000))
(assert (= var210941 temp10894_4))
(assert (= temp10894_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10894_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10894_6 #x0000000000000000))
(assert (= var210986 temp10894_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10894_7 #x0000000000000000))
(assert (= temp10894_8 temp10894_7))
(assert (= temp10894_9 (select ARGNAME_padding_NAMEEND_VAL temp10894_8)))
(assert (= temp10894_10 #x0000000000000001))
(assert (= temp10894_11 temp10894_10))
(assert (= temp10894_12 (select ARGNAME_padding_NAMEEND_VAL temp10894_11)))
(assert (= temp10894_13 #x0000000000000002))
(assert (= temp10894_14 temp10894_13))
(assert (= temp10894_15 (select ARGNAME_padding_NAMEEND_VAL temp10894_14)))
(assert (= temp10894_16 #x0000000000000003))
(assert (= temp10894_17 temp10894_16))
(assert (= temp10894_18 (select ARGNAME_padding_NAMEEND_VAL temp10894_17)))
(assert (= temp10894_19 #x0000000000000004))
(assert (= temp10894_20 temp10894_19))
(assert (= temp10894_21 (select ARGNAME_padding_NAMEEND_VAL temp10894_20)))
(assert (= temp10894_22 #x0000000000000005))
(assert (= temp10894_23 temp10894_22))
(assert (= temp10894_24 (select ARGNAME_padding_NAMEEND_VAL temp10894_23)))
(assert (= temp10894_25 #x0000000000000000))
(assert (= temp10894_26 #x0000000000000000))
(assert (= temp10894_27 temp10894_26))
(assert (= temp10894_28 (select ARGNAME_padding_NAMEEND_VAL temp10894_27)))
(assert (= temp10894_29 #x0000000000000000))
(assert (= temp10894_30 #x0000000000000001))
(assert (= temp10894_31 temp10894_30))
(assert (= temp10894_32 (select ARGNAME_padding_NAMEEND_VAL temp10894_31)))
(assert (= temp10894_33 #x0000000000000000))
(assert (= temp10894_34 #x0000000000000002))
(assert (= temp10894_35 temp10894_34))
(assert (= temp10894_36 (select ARGNAME_padding_NAMEEND_VAL temp10894_35)))
(assert (= temp10894_37 #x0000000000000000))
(assert (= temp10894_38 #x0000000000000003))
(assert (= temp10894_39 temp10894_38))
(assert (= temp10894_40 (select ARGNAME_padding_NAMEEND_VAL temp10894_39)))
(assert (= temp10894_41 #x0000000000000000))
(assert (= temp10894_42 #x0000000000000004))
(assert (= temp10894_43 temp10894_42))
(assert (= temp10894_44 (select ARGNAME_padding_NAMEEND_VAL temp10894_43)))
(assert (= temp10894_45 #x0000000000000000))
(assert (= temp10894_46 #x0000000000000005))
(assert (= temp10894_47 temp10894_46))
(assert (= temp10894_48 (select ARGNAME_padding_NAMEEND_VAL temp10894_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10894_28 temp10894_25)
             (bvslt temp10894_32 temp10894_29)
             (bvslt temp10894_36 temp10894_33)
             (bvslt temp10894_40 temp10894_37)
             (bvslt temp10894_44 temp10894_41)
             (bvslt temp10894_48 temp10894_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10894_49 #x0000000000000000))
(assert (= var1191714 temp10894_49))
(assert (= temp10894_50 #x0000000000000000))
(assert (= temp10894_51 temp10894_50))
(assert (= temp10894_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10894_51)))
(assert (= temp10894_53 #x0000000000000001))
(assert (= temp10894_54 temp10894_53))
(assert (= temp10894_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10894_54)))
(assert (= temp10894_56 #x0000000000000002))
(assert (= temp10894_57 temp10894_56))
(assert (= temp10894_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10894_57)))
(assert (= temp10894_59 #x0000000000000003))
(assert (= temp10894_60 temp10894_59))
(assert (= temp10894_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10894_60)))
(assert (= temp10894_62 #x0000000000000004))
(assert (= temp10894_63 temp10894_62))
(assert (= temp10894_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10894_63)))
(assert (= temp10894_65 #x0000000000000005))
(assert (= temp10894_66 temp10894_65))
(assert (= temp10894_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10894_66)))
(assert (= temp10894_68 #x0000000000000000))
(assert (= temp10894_69 #x0000000000000000))
(assert (= temp10894_70 temp10894_69))
(assert (= temp10894_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10894_70)))
(assert (= temp10894_72 #x0000000000000000))
(assert (= temp10894_73 #x0000000000000001))
(assert (= temp10894_74 temp10894_73))
(assert (= temp10894_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10894_74)))
(assert (= temp10894_76 #x0000000000000000))
(assert (= temp10894_77 #x0000000000000002))
(assert (= temp10894_78 temp10894_77))
(assert (= temp10894_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10894_78)))
(assert (= temp10894_80 #x0000000000000000))
(assert (= temp10894_81 #x0000000000000003))
(assert (= temp10894_82 temp10894_81))
(assert (= temp10894_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10894_82)))
(assert (= temp10894_84 #x0000000000000000))
(assert (= temp10894_85 #x0000000000000004))
(assert (= temp10894_86 temp10894_85))
(assert (= temp10894_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10894_86)))
(assert (= temp10894_88 #x0000000000000000))
(assert (= temp10894_89 #x0000000000000005))
(assert (= temp10894_90 temp10894_89))
(assert (= temp10894_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10894_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10894_71 temp10894_68)
             (bvslt temp10894_75 temp10894_72)
             (bvslt temp10894_79 temp10894_76)
             (bvslt temp10894_83 temp10894_80)
             (bvslt temp10894_87 temp10894_84)
             (bvslt temp10894_91 temp10894_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10894_92 #x0000000000000000))
(assert (= var1191725 temp10894_92))
(assert (= temp10894_93 #x0000000000000000))
(assert (= temp10894_94 temp10894_93))
(assert (= temp10894_95 (select ARGNAME_stride_NAMEEND_VAL temp10894_94)))
(assert (= temp10894_96 #x0000000000000001))
(assert (= temp10894_97 temp10894_96))
(assert (= temp10894_98 (select ARGNAME_stride_NAMEEND_VAL temp10894_97)))
(assert (= temp10894_99 #x0000000000000002))
(assert (= temp10894_100 temp10894_99))
(assert (= temp10894_101 (select ARGNAME_stride_NAMEEND_VAL temp10894_100)))
(assert (= temp10894_102 #x0000000000000003))
(assert (= temp10894_103 temp10894_102))
(assert (= temp10894_104 (select ARGNAME_stride_NAMEEND_VAL temp10894_103)))
(assert (= temp10894_105 #x0000000000000004))
(assert (= temp10894_106 temp10894_105))
(assert (= temp10894_107 (select ARGNAME_stride_NAMEEND_VAL temp10894_106)))
(assert (= temp10894_108 #x0000000000000005))
(assert (= temp10894_109 temp10894_108))
(assert (= temp10894_110 (select ARGNAME_stride_NAMEEND_VAL temp10894_109)))
(assert (= temp10894_111 #x0000000000000000))
(assert (= temp10894_112 #x0000000000000000))
(assert (= temp10894_113 temp10894_112))
(assert (= temp10894_114 (select ARGNAME_stride_NAMEEND_VAL temp10894_113)))
(assert (= temp10894_115 #x0000000000000000))
(assert (= temp10894_116 #x0000000000000001))
(assert (= temp10894_117 temp10894_116))
(assert (= temp10894_118 (select ARGNAME_stride_NAMEEND_VAL temp10894_117)))
(assert (= temp10894_119 #x0000000000000000))
(assert (= temp10894_120 #x0000000000000002))
(assert (= temp10894_121 temp10894_120))
(assert (= temp10894_122 (select ARGNAME_stride_NAMEEND_VAL temp10894_121)))
(assert (= temp10894_123 #x0000000000000000))
(assert (= temp10894_124 #x0000000000000003))
(assert (= temp10894_125 temp10894_124))
(assert (= temp10894_126 (select ARGNAME_stride_NAMEEND_VAL temp10894_125)))
(assert (= temp10894_127 #x0000000000000000))
(assert (= temp10894_128 #x0000000000000004))
(assert (= temp10894_129 temp10894_128))
(assert (= temp10894_130 (select ARGNAME_stride_NAMEEND_VAL temp10894_129)))
(assert (= temp10894_131 #x0000000000000000))
(assert (= temp10894_132 #x0000000000000005))
(assert (= temp10894_133 temp10894_132))
(assert (= temp10894_134 (select ARGNAME_stride_NAMEEND_VAL temp10894_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10894_114 temp10894_111)
             (bvsle temp10894_118 temp10894_115)
             (bvsle temp10894_122 temp10894_119)
             (bvsle temp10894_126 temp10894_123)
             (bvsle temp10894_130 temp10894_127)
             (bvsle temp10894_134 temp10894_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10894_135 #x0000000000000000))
(assert (= var1191735 temp10894_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10894_136 #x0000000000000001))
(assert (= var1191747 temp10894_136))
(assert (= temp10894_137 #x0000000000000000))
(assert (= var1179826 temp10894_137))
(assert (= temp10894_138 #x0000000000000000))
(assert (= temp10894_139 temp10894_138))
(assert (= temp10894_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10894_139)))
(assert (= temp10894_141 #x0000000000000001))
(assert (= temp10894_142 temp10894_141))
(assert (= temp10894_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10894_142)))
(assert (= temp10894_144 #x0000000000000002))
(assert (= temp10894_145 temp10894_144))
(assert (= temp10894_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10894_145)))
(assert (= temp10894_147 #x0000000000000003))
(assert (= temp10894_148 temp10894_147))
(assert (= temp10894_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10894_148)))
(assert (= temp10894_150 #x0000000000000004))
(assert (= temp10894_151 temp10894_150))
(assert (= temp10894_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10894_151)))
(assert (= temp10894_153 #x0000000000000005))
(assert (= temp10894_154 temp10894_153))
(assert (= temp10894_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10894_154)))
(assert (= temp10894_157 var1179826))
(assert (= temp10894_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10894_157)))
(assert (= temp10894_156 temp10894_158))
(assert (= var1191780
   (ite (bvslt temp10894_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10894_159 #x0000000000000000))
(assert (= var1191780 temp10894_159))
(assert (= temp10894_160 #x0000000000000000))
(assert (= var1179826 temp10894_160))
(assert (= temp10894_162 var1179826))
(assert (= temp10894_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10894_162)))
(assert (= temp10894_161 temp10894_163))
(assert (= var1191802 (bvsmod temp10894_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10894_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10894_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10894_165 #x0000000000000001))
(assert (= var1191803 temp10894_165))
(assert (= temp10894_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10894_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10894_167 #x0000000000000001))
(assert (= var1191823 temp10894_167))
(assert (= temp10894_168 #x0000000000000001))
(assert (= var1180714 temp10894_168))
(assert (= temp10894_169 #x0000000000000000))
(assert (= temp10894_170 temp10894_169))
(assert (= temp10894_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10894_170)))
(assert (= temp10894_172 #x0000000000000001))
(assert (= temp10894_173 temp10894_172))
(assert (= temp10894_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10894_173)))
(assert (= temp10894_175 #x0000000000000002))
(assert (= temp10894_176 temp10894_175))
(assert (= temp10894_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10894_176)))
(assert (= temp10894_178 #x0000000000000003))
(assert (= temp10894_179 temp10894_178))
(assert (= temp10894_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10894_179)))
(assert (= temp10894_181 #x0000000000000004))
(assert (= temp10894_182 temp10894_181))
(assert (= temp10894_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10894_182)))
(assert (= temp10894_184 #x0000000000000005))
(assert (= temp10894_185 temp10894_184))
(assert (= temp10894_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10894_185)))
(assert (= temp10894_187 #x0000000000000000))
(assert (= temp10894_188
   (ite (bvslt var1180714 temp10894_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10894_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10894_188)))
(assert (= var1191831 temp10894_189))
(assert (bvslt (ite (bvslt var1180714 temp10894_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10894_190 #x0000000000000001))
(assert (= var1180714 temp10894_190))
(assert (= temp10894_192 var1180714))
(assert (= temp10894_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10894_192)))
(assert (= temp10894_191 temp10894_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10894_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10894_194 #x0000000000000001))
(assert (= var1191836 temp10894_194))
(assert (= temp10894_195 #x0000000000000000))
(assert (= var1179826 temp10894_195))
(assert (= temp10894_197 var1179826))
(assert (= temp10894_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10894_197)))
(assert (= temp10894_196 temp10894_198))
(assert (= temp10894_199 #x0000000000000002))
(assert (= var1586025 temp10894_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10894_200 #x0000000000000001))
(assert (= var1191993 temp10894_200))
(assert (= temp10894_201 #x0000000000000001))
(assert (= var2700303 temp10894_201))
(assert (= temp10894_202 #x0000000000000001))
(assert (= var2962447 temp10894_202))
(assert (= temp10894_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10894_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10894_204 #x0000000000000001))
(assert (= var211058 temp10894_204))
(assert (= temp10894_205 #x0000000000000001))
(assert (= var211188 temp10894_205))
(assert (= var3879401 var211188))
(assert (= temp10894_206 #x0000000000000000))
(assert (= var3866802 temp10894_206))
(assert (= temp10894_207 #x0000000000000000))
(assert (= temp10894_208
   (ite (bvslt var3866802 temp10894_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10894_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10894_208)))
(assert (= var3879420 temp10894_209))
(assert (bvslt (ite (bvslt var3866802 temp10894_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10894_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10894_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10894_211 #x0000000000000000))
(assert (= var3879421 temp10894_211))
(assert (= temp10894_212 #x0000000000000001))
(assert (= var3867690 temp10894_212))
(assert (= temp10894_213 #x0000000000000000))
(assert (= temp10894_214
   (ite (bvslt var3867690 temp10894_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10894_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10894_214)))
(assert (= var3879423 temp10894_215))
(assert (bvslt (ite (bvslt var3867690 temp10894_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10894_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10894_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10894_217 #x0000000000000001))
(assert (= var3879424 temp10894_217))
(assert (= temp10894_218 #x0000000000000000))
(assert (= var4133117 temp10894_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10894_219 #x0000000000000002))
(assert (= var4339331 temp10894_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10894_220 #x0000000000000000))
(assert (= var4404892 temp10894_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp10894_221 #x0000000000000001))
(assert (= var211058 temp10894_221))
(model-add temp10894_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10894_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10894_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10894_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





