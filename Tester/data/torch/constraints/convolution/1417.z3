(declare-fun temp10620_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10620_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10620_3 () (_ BitVec 64))
(declare-fun temp10620_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10620_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10620_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10620_7 () (_ BitVec 64))
(declare-fun temp10620_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10620_9 () (_ BitVec 64))
(declare-fun temp10620_10 () (_ BitVec 64))
(declare-fun temp10620_11 () (_ BitVec 64))
(declare-fun temp10620_12 () (_ BitVec 64))
(declare-fun temp10620_13 () (_ BitVec 64))
(declare-fun temp10620_14 () (_ BitVec 64))
(declare-fun temp10620_15 () (_ BitVec 64))
(declare-fun temp10620_16 () (_ BitVec 64))
(declare-fun temp10620_17 () (_ BitVec 64))
(declare-fun temp10620_18 () (_ BitVec 64))
(declare-fun temp10620_19 () (_ BitVec 64))
(declare-fun temp10620_20 () (_ BitVec 64))
(declare-fun temp10620_21 () (_ BitVec 64))
(declare-fun temp10620_22 () (_ BitVec 64))
(declare-fun temp10620_23 () (_ BitVec 64))
(declare-fun temp10620_24 () (_ BitVec 64))
(declare-fun temp10620_25 () (_ BitVec 64))
(declare-fun temp10620_26 () (_ BitVec 64))
(declare-fun temp10620_27 () (_ BitVec 64))
(declare-fun temp10620_28 () (_ BitVec 64))
(declare-fun temp10620_29 () (_ BitVec 64))
(declare-fun temp10620_30 () (_ BitVec 64))
(declare-fun temp10620_31 () (_ BitVec 64))
(declare-fun temp10620_32 () (_ BitVec 64))
(declare-fun temp10620_33 () (_ BitVec 64))
(declare-fun temp10620_34 () (_ BitVec 64))
(declare-fun temp10620_35 () (_ BitVec 64))
(declare-fun temp10620_36 () (_ BitVec 64))
(declare-fun temp10620_37 () (_ BitVec 64))
(declare-fun temp10620_38 () (_ BitVec 64))
(declare-fun temp10620_39 () (_ BitVec 64))
(declare-fun temp10620_40 () (_ BitVec 64))
(declare-fun temp10620_41 () (_ BitVec 64))
(declare-fun temp10620_42 () (_ BitVec 64))
(declare-fun temp10620_43 () (_ BitVec 64))
(declare-fun temp10620_44 () (_ BitVec 64))
(declare-fun temp10620_45 () (_ BitVec 64))
(declare-fun temp10620_46 () (_ BitVec 64))
(declare-fun temp10620_47 () (_ BitVec 64))
(declare-fun temp10620_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10620_49 () (_ BitVec 64))
(declare-fun temp10620_50 () (_ BitVec 64))
(declare-fun temp10620_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10620_52 () (_ BitVec 64))
(declare-fun temp10620_53 () (_ BitVec 64))
(declare-fun temp10620_54 () (_ BitVec 64))
(declare-fun temp10620_55 () (_ BitVec 64))
(declare-fun temp10620_56 () (_ BitVec 64))
(declare-fun temp10620_57 () (_ BitVec 64))
(declare-fun temp10620_58 () (_ BitVec 64))
(declare-fun temp10620_59 () (_ BitVec 64))
(declare-fun temp10620_60 () (_ BitVec 64))
(declare-fun temp10620_61 () (_ BitVec 64))
(declare-fun temp10620_62 () (_ BitVec 64))
(declare-fun temp10620_63 () (_ BitVec 64))
(declare-fun temp10620_64 () (_ BitVec 64))
(declare-fun temp10620_65 () (_ BitVec 64))
(declare-fun temp10620_66 () (_ BitVec 64))
(declare-fun temp10620_67 () (_ BitVec 64))
(declare-fun temp10620_68 () (_ BitVec 64))
(declare-fun temp10620_69 () (_ BitVec 64))
(declare-fun temp10620_70 () (_ BitVec 64))
(declare-fun temp10620_71 () (_ BitVec 64))
(declare-fun temp10620_72 () (_ BitVec 64))
(declare-fun temp10620_73 () (_ BitVec 64))
(declare-fun temp10620_74 () (_ BitVec 64))
(declare-fun temp10620_75 () (_ BitVec 64))
(declare-fun temp10620_76 () (_ BitVec 64))
(declare-fun temp10620_77 () (_ BitVec 64))
(declare-fun temp10620_78 () (_ BitVec 64))
(declare-fun temp10620_79 () (_ BitVec 64))
(declare-fun temp10620_80 () (_ BitVec 64))
(declare-fun temp10620_81 () (_ BitVec 64))
(declare-fun temp10620_82 () (_ BitVec 64))
(declare-fun temp10620_83 () (_ BitVec 64))
(declare-fun temp10620_84 () (_ BitVec 64))
(declare-fun temp10620_85 () (_ BitVec 64))
(declare-fun temp10620_86 () (_ BitVec 64))
(declare-fun temp10620_87 () (_ BitVec 64))
(declare-fun temp10620_88 () (_ BitVec 64))
(declare-fun temp10620_89 () (_ BitVec 64))
(declare-fun temp10620_90 () (_ BitVec 64))
(declare-fun temp10620_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10620_92 () (_ BitVec 64))
(declare-fun temp10620_93 () (_ BitVec 64))
(declare-fun temp10620_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10620_95 () (_ BitVec 64))
(declare-fun temp10620_96 () (_ BitVec 64))
(declare-fun temp10620_97 () (_ BitVec 64))
(declare-fun temp10620_98 () (_ BitVec 64))
(declare-fun temp10620_99 () (_ BitVec 64))
(declare-fun temp10620_100 () (_ BitVec 64))
(declare-fun temp10620_101 () (_ BitVec 64))
(declare-fun temp10620_102 () (_ BitVec 64))
(declare-fun temp10620_103 () (_ BitVec 64))
(declare-fun temp10620_104 () (_ BitVec 64))
(declare-fun temp10620_105 () (_ BitVec 64))
(declare-fun temp10620_106 () (_ BitVec 64))
(declare-fun temp10620_107 () (_ BitVec 64))
(declare-fun temp10620_108 () (_ BitVec 64))
(declare-fun temp10620_109 () (_ BitVec 64))
(declare-fun temp10620_110 () (_ BitVec 64))
(declare-fun temp10620_111 () (_ BitVec 64))
(declare-fun temp10620_112 () (_ BitVec 64))
(declare-fun temp10620_113 () (_ BitVec 64))
(declare-fun temp10620_114 () (_ BitVec 64))
(declare-fun temp10620_115 () (_ BitVec 64))
(declare-fun temp10620_116 () (_ BitVec 64))
(declare-fun temp10620_117 () (_ BitVec 64))
(declare-fun temp10620_118 () (_ BitVec 64))
(declare-fun temp10620_119 () (_ BitVec 64))
(declare-fun temp10620_120 () (_ BitVec 64))
(declare-fun temp10620_121 () (_ BitVec 64))
(declare-fun temp10620_122 () (_ BitVec 64))
(declare-fun temp10620_123 () (_ BitVec 64))
(declare-fun temp10620_124 () (_ BitVec 64))
(declare-fun temp10620_125 () (_ BitVec 64))
(declare-fun temp10620_126 () (_ BitVec 64))
(declare-fun temp10620_127 () (_ BitVec 64))
(declare-fun temp10620_128 () (_ BitVec 64))
(declare-fun temp10620_129 () (_ BitVec 64))
(declare-fun temp10620_130 () (_ BitVec 64))
(declare-fun temp10620_131 () (_ BitVec 64))
(declare-fun temp10620_132 () (_ BitVec 64))
(declare-fun temp10620_133 () (_ BitVec 64))
(declare-fun temp10620_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10620_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10620_136 () (_ BitVec 64))
(declare-fun temp10620_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10620_138 () (_ BitVec 64))
(declare-fun temp10620_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10620_140 () (_ BitVec 64))
(declare-fun temp10620_141 () (_ BitVec 64))
(declare-fun temp10620_142 () (_ BitVec 64))
(declare-fun temp10620_143 () (_ BitVec 64))
(declare-fun temp10620_144 () (_ BitVec 64))
(declare-fun temp10620_145 () (_ BitVec 64))
(declare-fun temp10620_146 () (_ BitVec 64))
(declare-fun temp10620_147 () (_ BitVec 64))
(declare-fun temp10620_148 () (_ BitVec 64))
(declare-fun temp10620_149 () (_ BitVec 64))
(declare-fun temp10620_150 () (_ BitVec 64))
(declare-fun temp10620_151 () (_ BitVec 64))
(declare-fun temp10620_152 () (_ BitVec 64))
(declare-fun temp10620_153 () (_ BitVec 64))
(declare-fun temp10620_154 () (_ BitVec 64))
(declare-fun temp10620_155 () (_ BitVec 64))
(declare-fun temp10620_157 () (_ BitVec 64))
(declare-fun temp10620_158 () (_ BitVec 64))
(declare-fun temp10620_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10620_159 () (_ BitVec 64))
(declare-fun temp10620_160 () (_ BitVec 64))
(declare-fun temp10620_162 () (_ BitVec 64))
(declare-fun temp10620_163 () (_ BitVec 64))
(declare-fun temp10620_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10620_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10620_165 () (_ BitVec 64))
(declare-fun temp10620_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10620_167 () (_ BitVec 64))
(declare-fun temp10620_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10620_169 () (_ BitVec 64))
(declare-fun temp10620_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10620_171 () (_ BitVec 64))
(declare-fun temp10620_172 () (_ BitVec 64))
(declare-fun temp10620_173 () (_ BitVec 64))
(declare-fun temp10620_174 () (_ BitVec 64))
(declare-fun temp10620_175 () (_ BitVec 64))
(declare-fun temp10620_176 () (_ BitVec 64))
(declare-fun temp10620_177 () (_ BitVec 64))
(declare-fun temp10620_178 () (_ BitVec 64))
(declare-fun temp10620_179 () (_ BitVec 64))
(declare-fun temp10620_180 () (_ BitVec 64))
(declare-fun temp10620_181 () (_ BitVec 64))
(declare-fun temp10620_182 () (_ BitVec 64))
(declare-fun temp10620_183 () (_ BitVec 64))
(declare-fun temp10620_184 () (_ BitVec 64))
(declare-fun temp10620_185 () (_ BitVec 64))
(declare-fun temp10620_186 () (_ BitVec 64))
(declare-fun temp10620_187 () (_ BitVec 64))
(declare-fun temp10620_188 () (_ BitVec 64))
(declare-fun temp10620_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10620_190 () (_ BitVec 64))
(declare-fun temp10620_192 () (_ BitVec 64))
(declare-fun temp10620_193 () (_ BitVec 64))
(declare-fun temp10620_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10620_194 () (_ BitVec 64))
(declare-fun temp10620_195 () (_ BitVec 64))
(declare-fun temp10620_197 () (_ BitVec 64))
(declare-fun temp10620_198 () (_ BitVec 64))
(declare-fun temp10620_196 () (_ BitVec 64))
(declare-fun temp10620_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10620_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10620_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10620_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10620_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10620_204 () (_ BitVec 64))
(declare-fun temp10620_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10620_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10620_207 () (_ BitVec 64))
(declare-fun temp10620_208 () (_ BitVec 64))
(declare-fun temp10620_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10620_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10620_211 () (_ BitVec 64))
(declare-fun temp10620_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10620_213 () (_ BitVec 64))
(declare-fun temp10620_214 () (_ BitVec 64))
(declare-fun temp10620_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10620_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10620_217 () (_ BitVec 64))
(declare-fun temp10620_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10620_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10620_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp10620_222 () (_ BitVec 64))
(declare-fun temp10620_221 () (_ BitVec 64))
(declare-fun temp10620_223 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp10620_224 () (_ BitVec 64))
(declare-fun temp10620_225 () (_ BitVec 64))
(declare-fun temp10620_226 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp10620_227 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp10620_228 () (_ BitVec 64))
(declare-fun temp10620_230 () (_ BitVec 64))
(declare-fun temp10620_229 () (_ BitVec 64))
(declare-fun temp10620_231 () (_ BitVec 64))
(declare-fun temp10620_232 () (_ BitVec 64))
(declare-fun var5649172 () (_ BitVec 64))
(declare-fun var5649139 () (_ BitVec 64))
(declare-fun var5517703 () (_ BitVec 64))
(declare-fun var5517699 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp10620_233 () (_ BitVec 64))
(assert (= temp10620_1 #x0000000000000001))
(assert (= var77203 temp10620_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10620_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10620_2)))
(assert (= temp10620_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10620_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10620_4 #x0000000000000000))
(assert (= var210941 temp10620_4))
(assert (= temp10620_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10620_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10620_6 #x0000000000000000))
(assert (= var210986 temp10620_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10620_7 #x0000000000000000))
(assert (= temp10620_8 temp10620_7))
(assert (= temp10620_9 (select ARGNAME_padding_NAMEEND_VAL temp10620_8)))
(assert (= temp10620_10 #x0000000000000001))
(assert (= temp10620_11 temp10620_10))
(assert (= temp10620_12 (select ARGNAME_padding_NAMEEND_VAL temp10620_11)))
(assert (= temp10620_13 #x0000000000000002))
(assert (= temp10620_14 temp10620_13))
(assert (= temp10620_15 (select ARGNAME_padding_NAMEEND_VAL temp10620_14)))
(assert (= temp10620_16 #x0000000000000003))
(assert (= temp10620_17 temp10620_16))
(assert (= temp10620_18 (select ARGNAME_padding_NAMEEND_VAL temp10620_17)))
(assert (= temp10620_19 #x0000000000000004))
(assert (= temp10620_20 temp10620_19))
(assert (= temp10620_21 (select ARGNAME_padding_NAMEEND_VAL temp10620_20)))
(assert (= temp10620_22 #x0000000000000005))
(assert (= temp10620_23 temp10620_22))
(assert (= temp10620_24 (select ARGNAME_padding_NAMEEND_VAL temp10620_23)))
(assert (= temp10620_25 #x0000000000000000))
(assert (= temp10620_26 #x0000000000000000))
(assert (= temp10620_27 temp10620_26))
(assert (= temp10620_28 (select ARGNAME_padding_NAMEEND_VAL temp10620_27)))
(assert (= temp10620_29 #x0000000000000000))
(assert (= temp10620_30 #x0000000000000001))
(assert (= temp10620_31 temp10620_30))
(assert (= temp10620_32 (select ARGNAME_padding_NAMEEND_VAL temp10620_31)))
(assert (= temp10620_33 #x0000000000000000))
(assert (= temp10620_34 #x0000000000000002))
(assert (= temp10620_35 temp10620_34))
(assert (= temp10620_36 (select ARGNAME_padding_NAMEEND_VAL temp10620_35)))
(assert (= temp10620_37 #x0000000000000000))
(assert (= temp10620_38 #x0000000000000003))
(assert (= temp10620_39 temp10620_38))
(assert (= temp10620_40 (select ARGNAME_padding_NAMEEND_VAL temp10620_39)))
(assert (= temp10620_41 #x0000000000000000))
(assert (= temp10620_42 #x0000000000000004))
(assert (= temp10620_43 temp10620_42))
(assert (= temp10620_44 (select ARGNAME_padding_NAMEEND_VAL temp10620_43)))
(assert (= temp10620_45 #x0000000000000000))
(assert (= temp10620_46 #x0000000000000005))
(assert (= temp10620_47 temp10620_46))
(assert (= temp10620_48 (select ARGNAME_padding_NAMEEND_VAL temp10620_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10620_28 temp10620_25)
             (bvslt temp10620_32 temp10620_29)
             (bvslt temp10620_36 temp10620_33)
             (bvslt temp10620_40 temp10620_37)
             (bvslt temp10620_44 temp10620_41)
             (bvslt temp10620_48 temp10620_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10620_49 #x0000000000000000))
(assert (= var1191714 temp10620_49))
(assert (= temp10620_50 #x0000000000000000))
(assert (= temp10620_51 temp10620_50))
(assert (= temp10620_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10620_51)))
(assert (= temp10620_53 #x0000000000000001))
(assert (= temp10620_54 temp10620_53))
(assert (= temp10620_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10620_54)))
(assert (= temp10620_56 #x0000000000000002))
(assert (= temp10620_57 temp10620_56))
(assert (= temp10620_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10620_57)))
(assert (= temp10620_59 #x0000000000000003))
(assert (= temp10620_60 temp10620_59))
(assert (= temp10620_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10620_60)))
(assert (= temp10620_62 #x0000000000000004))
(assert (= temp10620_63 temp10620_62))
(assert (= temp10620_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10620_63)))
(assert (= temp10620_65 #x0000000000000005))
(assert (= temp10620_66 temp10620_65))
(assert (= temp10620_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10620_66)))
(assert (= temp10620_68 #x0000000000000000))
(assert (= temp10620_69 #x0000000000000000))
(assert (= temp10620_70 temp10620_69))
(assert (= temp10620_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10620_70)))
(assert (= temp10620_72 #x0000000000000000))
(assert (= temp10620_73 #x0000000000000001))
(assert (= temp10620_74 temp10620_73))
(assert (= temp10620_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10620_74)))
(assert (= temp10620_76 #x0000000000000000))
(assert (= temp10620_77 #x0000000000000002))
(assert (= temp10620_78 temp10620_77))
(assert (= temp10620_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10620_78)))
(assert (= temp10620_80 #x0000000000000000))
(assert (= temp10620_81 #x0000000000000003))
(assert (= temp10620_82 temp10620_81))
(assert (= temp10620_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10620_82)))
(assert (= temp10620_84 #x0000000000000000))
(assert (= temp10620_85 #x0000000000000004))
(assert (= temp10620_86 temp10620_85))
(assert (= temp10620_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10620_86)))
(assert (= temp10620_88 #x0000000000000000))
(assert (= temp10620_89 #x0000000000000005))
(assert (= temp10620_90 temp10620_89))
(assert (= temp10620_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10620_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10620_71 temp10620_68)
             (bvslt temp10620_75 temp10620_72)
             (bvslt temp10620_79 temp10620_76)
             (bvslt temp10620_83 temp10620_80)
             (bvslt temp10620_87 temp10620_84)
             (bvslt temp10620_91 temp10620_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10620_92 #x0000000000000000))
(assert (= var1191725 temp10620_92))
(assert (= temp10620_93 #x0000000000000000))
(assert (= temp10620_94 temp10620_93))
(assert (= temp10620_95 (select ARGNAME_stride_NAMEEND_VAL temp10620_94)))
(assert (= temp10620_96 #x0000000000000001))
(assert (= temp10620_97 temp10620_96))
(assert (= temp10620_98 (select ARGNAME_stride_NAMEEND_VAL temp10620_97)))
(assert (= temp10620_99 #x0000000000000002))
(assert (= temp10620_100 temp10620_99))
(assert (= temp10620_101 (select ARGNAME_stride_NAMEEND_VAL temp10620_100)))
(assert (= temp10620_102 #x0000000000000003))
(assert (= temp10620_103 temp10620_102))
(assert (= temp10620_104 (select ARGNAME_stride_NAMEEND_VAL temp10620_103)))
(assert (= temp10620_105 #x0000000000000004))
(assert (= temp10620_106 temp10620_105))
(assert (= temp10620_107 (select ARGNAME_stride_NAMEEND_VAL temp10620_106)))
(assert (= temp10620_108 #x0000000000000005))
(assert (= temp10620_109 temp10620_108))
(assert (= temp10620_110 (select ARGNAME_stride_NAMEEND_VAL temp10620_109)))
(assert (= temp10620_111 #x0000000000000000))
(assert (= temp10620_112 #x0000000000000000))
(assert (= temp10620_113 temp10620_112))
(assert (= temp10620_114 (select ARGNAME_stride_NAMEEND_VAL temp10620_113)))
(assert (= temp10620_115 #x0000000000000000))
(assert (= temp10620_116 #x0000000000000001))
(assert (= temp10620_117 temp10620_116))
(assert (= temp10620_118 (select ARGNAME_stride_NAMEEND_VAL temp10620_117)))
(assert (= temp10620_119 #x0000000000000000))
(assert (= temp10620_120 #x0000000000000002))
(assert (= temp10620_121 temp10620_120))
(assert (= temp10620_122 (select ARGNAME_stride_NAMEEND_VAL temp10620_121)))
(assert (= temp10620_123 #x0000000000000000))
(assert (= temp10620_124 #x0000000000000003))
(assert (= temp10620_125 temp10620_124))
(assert (= temp10620_126 (select ARGNAME_stride_NAMEEND_VAL temp10620_125)))
(assert (= temp10620_127 #x0000000000000000))
(assert (= temp10620_128 #x0000000000000004))
(assert (= temp10620_129 temp10620_128))
(assert (= temp10620_130 (select ARGNAME_stride_NAMEEND_VAL temp10620_129)))
(assert (= temp10620_131 #x0000000000000000))
(assert (= temp10620_132 #x0000000000000005))
(assert (= temp10620_133 temp10620_132))
(assert (= temp10620_134 (select ARGNAME_stride_NAMEEND_VAL temp10620_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10620_114 temp10620_111)
             (bvsle temp10620_118 temp10620_115)
             (bvsle temp10620_122 temp10620_119)
             (bvsle temp10620_126 temp10620_123)
             (bvsle temp10620_130 temp10620_127)
             (bvsle temp10620_134 temp10620_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10620_135 #x0000000000000000))
(assert (= var1191735 temp10620_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10620_136 #x0000000000000001))
(assert (= var1191747 temp10620_136))
(assert (= temp10620_137 #x0000000000000000))
(assert (= var1179826 temp10620_137))
(assert (= temp10620_138 #x0000000000000000))
(assert (= temp10620_139 temp10620_138))
(assert (= temp10620_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10620_139)))
(assert (= temp10620_141 #x0000000000000001))
(assert (= temp10620_142 temp10620_141))
(assert (= temp10620_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10620_142)))
(assert (= temp10620_144 #x0000000000000002))
(assert (= temp10620_145 temp10620_144))
(assert (= temp10620_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10620_145)))
(assert (= temp10620_147 #x0000000000000003))
(assert (= temp10620_148 temp10620_147))
(assert (= temp10620_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10620_148)))
(assert (= temp10620_150 #x0000000000000004))
(assert (= temp10620_151 temp10620_150))
(assert (= temp10620_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10620_151)))
(assert (= temp10620_153 #x0000000000000005))
(assert (= temp10620_154 temp10620_153))
(assert (= temp10620_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10620_154)))
(assert (= temp10620_157 var1179826))
(assert (= temp10620_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10620_157)))
(assert (= temp10620_156 temp10620_158))
(assert (= var1191780
   (ite (bvslt temp10620_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10620_159 #x0000000000000000))
(assert (= var1191780 temp10620_159))
(assert (= temp10620_160 #x0000000000000000))
(assert (= var1179826 temp10620_160))
(assert (= temp10620_162 var1179826))
(assert (= temp10620_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10620_162)))
(assert (= temp10620_161 temp10620_163))
(assert (= var1191802 (bvsmod temp10620_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10620_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10620_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10620_165 #x0000000000000001))
(assert (= var1191803 temp10620_165))
(assert (= temp10620_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10620_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10620_167 #x0000000000000001))
(assert (= var1191823 temp10620_167))
(assert (= temp10620_168 #x0000000000000001))
(assert (= var1180714 temp10620_168))
(assert (= temp10620_169 #x0000000000000000))
(assert (= temp10620_170 temp10620_169))
(assert (= temp10620_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10620_170)))
(assert (= temp10620_172 #x0000000000000001))
(assert (= temp10620_173 temp10620_172))
(assert (= temp10620_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10620_173)))
(assert (= temp10620_175 #x0000000000000002))
(assert (= temp10620_176 temp10620_175))
(assert (= temp10620_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10620_176)))
(assert (= temp10620_178 #x0000000000000003))
(assert (= temp10620_179 temp10620_178))
(assert (= temp10620_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10620_179)))
(assert (= temp10620_181 #x0000000000000004))
(assert (= temp10620_182 temp10620_181))
(assert (= temp10620_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10620_182)))
(assert (= temp10620_184 #x0000000000000005))
(assert (= temp10620_185 temp10620_184))
(assert (= temp10620_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10620_185)))
(assert (= temp10620_187 #x0000000000000000))
(assert (= temp10620_188
   (ite (bvslt var1180714 temp10620_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10620_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10620_188)))
(assert (= var1191831 temp10620_189))
(assert (bvslt (ite (bvslt var1180714 temp10620_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10620_190 #x0000000000000001))
(assert (= var1180714 temp10620_190))
(assert (= temp10620_192 var1180714))
(assert (= temp10620_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10620_192)))
(assert (= temp10620_191 temp10620_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10620_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10620_194 #x0000000000000001))
(assert (= var1191836 temp10620_194))
(assert (= temp10620_195 #x0000000000000000))
(assert (= var1179826 temp10620_195))
(assert (= temp10620_197 var1179826))
(assert (= temp10620_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10620_197)))
(assert (= temp10620_196 temp10620_198))
(assert (= temp10620_199 #x0000000000000002))
(assert (= var1586025 temp10620_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10620_200 #x0000000000000001))
(assert (= var1191993 temp10620_200))
(assert (= temp10620_201 #x0000000000000001))
(assert (= var2700303 temp10620_201))
(assert (= temp10620_202 #x0000000000000001))
(assert (= var2962447 temp10620_202))
(assert (= temp10620_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10620_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10620_204 #x0000000000000001))
(assert (= var211058 temp10620_204))
(assert (= temp10620_205 #x0000000000000001))
(assert (= var211188 temp10620_205))
(assert (= var3879401 var211188))
(assert (= temp10620_206 #x0000000000000000))
(assert (= var3866802 temp10620_206))
(assert (= temp10620_207 #x0000000000000000))
(assert (= temp10620_208
   (ite (bvslt var3866802 temp10620_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10620_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10620_208)))
(assert (= var3879420 temp10620_209))
(assert (bvslt (ite (bvslt var3866802 temp10620_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10620_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10620_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10620_211 #x0000000000000000))
(assert (= var3879421 temp10620_211))
(assert (= temp10620_212 #x0000000000000001))
(assert (= var3867690 temp10620_212))
(assert (= temp10620_213 #x0000000000000000))
(assert (= temp10620_214
   (ite (bvslt var3867690 temp10620_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10620_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10620_214)))
(assert (= var3879423 temp10620_215))
(assert (bvslt (ite (bvslt var3867690 temp10620_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10620_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10620_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10620_217 #x0000000000000001))
(assert (= var3879424 temp10620_217))
(assert (= temp10620_218 #x0000000000000000))
(assert (= var4133117 temp10620_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10620_219 #x0000000000000002))
(assert (= var4339331 temp10620_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10620_220 #x0000000000000000))
(assert (= var4404892 temp10620_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp10620_222 #xffffffffffffffff))
(assert (= temp10620_221 temp10620_222))
(assert (= temp10620_223 #x0000000000000001))
(assert (= var197674 temp10620_223))
(assert (= temp10620_224 #x0000000000000000))
(assert (= temp10620_225
   (ite (bvslt var197674 temp10620_224)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp10620_226 (select ARGNAME_input_NAMEEND_DIMSIZE temp10620_225)))
(assert (= var211595 temp10620_226))
(assert (bvslt (ite (bvslt var197674 temp10620_224)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10620_227 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp10620_227) #x0000000000000001 #x0000000000000000)))
(assert (= temp10620_228 #x0000000000000001))
(assert (= var211596 temp10620_228))
(assert (= temp10620_230 #xffffffffffffffff))
(assert (= temp10620_229 temp10620_230))
(assert (= temp10620_231 #x0000000000000001))
(assert (= var211058 temp10620_231))
(assert (= temp10620_232 #x0000000000000000))
(assert (= var5649172 temp10620_232))
(assert (= var5649139 var5649172))
(assert (= var5517703 var5649139))
(assert (= var5517699 var5517703))
(assert (= var212669 var5517699))
(assert (= temp10620_233 #x0000000000000000))
(assert (= var212669 temp10620_233))
(model-add temp10620_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10620_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10620_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10620_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





