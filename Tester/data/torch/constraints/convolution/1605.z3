(declare-fun temp10934_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10934_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10934_3 () (_ BitVec 64))
(declare-fun temp10934_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10934_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10934_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10934_7 () (_ BitVec 64))
(declare-fun temp10934_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10934_9 () (_ BitVec 64))
(declare-fun temp10934_10 () (_ BitVec 64))
(declare-fun temp10934_11 () (_ BitVec 64))
(declare-fun temp10934_12 () (_ BitVec 64))
(declare-fun temp10934_13 () (_ BitVec 64))
(declare-fun temp10934_14 () (_ BitVec 64))
(declare-fun temp10934_15 () (_ BitVec 64))
(declare-fun temp10934_16 () (_ BitVec 64))
(declare-fun temp10934_17 () (_ BitVec 64))
(declare-fun temp10934_18 () (_ BitVec 64))
(declare-fun temp10934_19 () (_ BitVec 64))
(declare-fun temp10934_20 () (_ BitVec 64))
(declare-fun temp10934_21 () (_ BitVec 64))
(declare-fun temp10934_22 () (_ BitVec 64))
(declare-fun temp10934_23 () (_ BitVec 64))
(declare-fun temp10934_24 () (_ BitVec 64))
(declare-fun temp10934_25 () (_ BitVec 64))
(declare-fun temp10934_26 () (_ BitVec 64))
(declare-fun temp10934_27 () (_ BitVec 64))
(declare-fun temp10934_28 () (_ BitVec 64))
(declare-fun temp10934_29 () (_ BitVec 64))
(declare-fun temp10934_30 () (_ BitVec 64))
(declare-fun temp10934_31 () (_ BitVec 64))
(declare-fun temp10934_32 () (_ BitVec 64))
(declare-fun temp10934_33 () (_ BitVec 64))
(declare-fun temp10934_34 () (_ BitVec 64))
(declare-fun temp10934_35 () (_ BitVec 64))
(declare-fun temp10934_36 () (_ BitVec 64))
(declare-fun temp10934_37 () (_ BitVec 64))
(declare-fun temp10934_38 () (_ BitVec 64))
(declare-fun temp10934_39 () (_ BitVec 64))
(declare-fun temp10934_40 () (_ BitVec 64))
(declare-fun temp10934_41 () (_ BitVec 64))
(declare-fun temp10934_42 () (_ BitVec 64))
(declare-fun temp10934_43 () (_ BitVec 64))
(declare-fun temp10934_44 () (_ BitVec 64))
(declare-fun temp10934_45 () (_ BitVec 64))
(declare-fun temp10934_46 () (_ BitVec 64))
(declare-fun temp10934_47 () (_ BitVec 64))
(declare-fun temp10934_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10934_49 () (_ BitVec 64))
(declare-fun temp10934_50 () (_ BitVec 64))
(declare-fun temp10934_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10934_52 () (_ BitVec 64))
(declare-fun temp10934_53 () (_ BitVec 64))
(declare-fun temp10934_54 () (_ BitVec 64))
(declare-fun temp10934_55 () (_ BitVec 64))
(declare-fun temp10934_56 () (_ BitVec 64))
(declare-fun temp10934_57 () (_ BitVec 64))
(declare-fun temp10934_58 () (_ BitVec 64))
(declare-fun temp10934_59 () (_ BitVec 64))
(declare-fun temp10934_60 () (_ BitVec 64))
(declare-fun temp10934_61 () (_ BitVec 64))
(declare-fun temp10934_62 () (_ BitVec 64))
(declare-fun temp10934_63 () (_ BitVec 64))
(declare-fun temp10934_64 () (_ BitVec 64))
(declare-fun temp10934_65 () (_ BitVec 64))
(declare-fun temp10934_66 () (_ BitVec 64))
(declare-fun temp10934_67 () (_ BitVec 64))
(declare-fun temp10934_68 () (_ BitVec 64))
(declare-fun temp10934_69 () (_ BitVec 64))
(declare-fun temp10934_70 () (_ BitVec 64))
(declare-fun temp10934_71 () (_ BitVec 64))
(declare-fun temp10934_72 () (_ BitVec 64))
(declare-fun temp10934_73 () (_ BitVec 64))
(declare-fun temp10934_74 () (_ BitVec 64))
(declare-fun temp10934_75 () (_ BitVec 64))
(declare-fun temp10934_76 () (_ BitVec 64))
(declare-fun temp10934_77 () (_ BitVec 64))
(declare-fun temp10934_78 () (_ BitVec 64))
(declare-fun temp10934_79 () (_ BitVec 64))
(declare-fun temp10934_80 () (_ BitVec 64))
(declare-fun temp10934_81 () (_ BitVec 64))
(declare-fun temp10934_82 () (_ BitVec 64))
(declare-fun temp10934_83 () (_ BitVec 64))
(declare-fun temp10934_84 () (_ BitVec 64))
(declare-fun temp10934_85 () (_ BitVec 64))
(declare-fun temp10934_86 () (_ BitVec 64))
(declare-fun temp10934_87 () (_ BitVec 64))
(declare-fun temp10934_88 () (_ BitVec 64))
(declare-fun temp10934_89 () (_ BitVec 64))
(declare-fun temp10934_90 () (_ BitVec 64))
(declare-fun temp10934_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10934_92 () (_ BitVec 64))
(declare-fun temp10934_93 () (_ BitVec 64))
(declare-fun temp10934_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10934_95 () (_ BitVec 64))
(declare-fun temp10934_96 () (_ BitVec 64))
(declare-fun temp10934_97 () (_ BitVec 64))
(declare-fun temp10934_98 () (_ BitVec 64))
(declare-fun temp10934_99 () (_ BitVec 64))
(declare-fun temp10934_100 () (_ BitVec 64))
(declare-fun temp10934_101 () (_ BitVec 64))
(declare-fun temp10934_102 () (_ BitVec 64))
(declare-fun temp10934_103 () (_ BitVec 64))
(declare-fun temp10934_104 () (_ BitVec 64))
(declare-fun temp10934_105 () (_ BitVec 64))
(declare-fun temp10934_106 () (_ BitVec 64))
(declare-fun temp10934_107 () (_ BitVec 64))
(declare-fun temp10934_108 () (_ BitVec 64))
(declare-fun temp10934_109 () (_ BitVec 64))
(declare-fun temp10934_110 () (_ BitVec 64))
(declare-fun temp10934_111 () (_ BitVec 64))
(declare-fun temp10934_112 () (_ BitVec 64))
(declare-fun temp10934_113 () (_ BitVec 64))
(declare-fun temp10934_114 () (_ BitVec 64))
(declare-fun temp10934_115 () (_ BitVec 64))
(declare-fun temp10934_116 () (_ BitVec 64))
(declare-fun temp10934_117 () (_ BitVec 64))
(declare-fun temp10934_118 () (_ BitVec 64))
(declare-fun temp10934_119 () (_ BitVec 64))
(declare-fun temp10934_120 () (_ BitVec 64))
(declare-fun temp10934_121 () (_ BitVec 64))
(declare-fun temp10934_122 () (_ BitVec 64))
(declare-fun temp10934_123 () (_ BitVec 64))
(declare-fun temp10934_124 () (_ BitVec 64))
(declare-fun temp10934_125 () (_ BitVec 64))
(declare-fun temp10934_126 () (_ BitVec 64))
(declare-fun temp10934_127 () (_ BitVec 64))
(declare-fun temp10934_128 () (_ BitVec 64))
(declare-fun temp10934_129 () (_ BitVec 64))
(declare-fun temp10934_130 () (_ BitVec 64))
(declare-fun temp10934_131 () (_ BitVec 64))
(declare-fun temp10934_132 () (_ BitVec 64))
(declare-fun temp10934_133 () (_ BitVec 64))
(declare-fun temp10934_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10934_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10934_136 () (_ BitVec 64))
(declare-fun temp10934_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10934_138 () (_ BitVec 64))
(declare-fun temp10934_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10934_140 () (_ BitVec 64))
(declare-fun temp10934_141 () (_ BitVec 64))
(declare-fun temp10934_142 () (_ BitVec 64))
(declare-fun temp10934_143 () (_ BitVec 64))
(declare-fun temp10934_144 () (_ BitVec 64))
(declare-fun temp10934_145 () (_ BitVec 64))
(declare-fun temp10934_146 () (_ BitVec 64))
(declare-fun temp10934_147 () (_ BitVec 64))
(declare-fun temp10934_148 () (_ BitVec 64))
(declare-fun temp10934_149 () (_ BitVec 64))
(declare-fun temp10934_150 () (_ BitVec 64))
(declare-fun temp10934_151 () (_ BitVec 64))
(declare-fun temp10934_152 () (_ BitVec 64))
(declare-fun temp10934_153 () (_ BitVec 64))
(declare-fun temp10934_154 () (_ BitVec 64))
(declare-fun temp10934_155 () (_ BitVec 64))
(declare-fun temp10934_157 () (_ BitVec 64))
(declare-fun temp10934_158 () (_ BitVec 64))
(declare-fun temp10934_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10934_159 () (_ BitVec 64))
(declare-fun temp10934_160 () (_ BitVec 64))
(declare-fun temp10934_162 () (_ BitVec 64))
(declare-fun temp10934_163 () (_ BitVec 64))
(declare-fun temp10934_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10934_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10934_165 () (_ BitVec 64))
(declare-fun temp10934_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10934_167 () (_ BitVec 64))
(declare-fun temp10934_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10934_169 () (_ BitVec 64))
(declare-fun temp10934_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10934_171 () (_ BitVec 64))
(declare-fun temp10934_172 () (_ BitVec 64))
(declare-fun temp10934_173 () (_ BitVec 64))
(declare-fun temp10934_174 () (_ BitVec 64))
(declare-fun temp10934_175 () (_ BitVec 64))
(declare-fun temp10934_176 () (_ BitVec 64))
(declare-fun temp10934_177 () (_ BitVec 64))
(declare-fun temp10934_178 () (_ BitVec 64))
(declare-fun temp10934_179 () (_ BitVec 64))
(declare-fun temp10934_180 () (_ BitVec 64))
(declare-fun temp10934_181 () (_ BitVec 64))
(declare-fun temp10934_182 () (_ BitVec 64))
(declare-fun temp10934_183 () (_ BitVec 64))
(declare-fun temp10934_184 () (_ BitVec 64))
(declare-fun temp10934_185 () (_ BitVec 64))
(declare-fun temp10934_186 () (_ BitVec 64))
(declare-fun temp10934_187 () (_ BitVec 64))
(declare-fun temp10934_188 () (_ BitVec 64))
(declare-fun temp10934_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10934_190 () (_ BitVec 64))
(declare-fun temp10934_192 () (_ BitVec 64))
(declare-fun temp10934_193 () (_ BitVec 64))
(declare-fun temp10934_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10934_194 () (_ BitVec 64))
(declare-fun temp10934_195 () (_ BitVec 64))
(declare-fun temp10934_197 () (_ BitVec 64))
(declare-fun temp10934_198 () (_ BitVec 64))
(declare-fun temp10934_196 () (_ BitVec 64))
(declare-fun temp10934_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10934_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10934_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10934_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10934_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10934_204 () (_ BitVec 64))
(declare-fun temp10934_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10934_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10934_207 () (_ BitVec 64))
(declare-fun temp10934_208 () (_ BitVec 64))
(declare-fun temp10934_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10934_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10934_211 () (_ BitVec 64))
(declare-fun temp10934_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10934_213 () (_ BitVec 64))
(declare-fun temp10934_214 () (_ BitVec 64))
(declare-fun temp10934_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10934_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10934_217 () (_ BitVec 64))
(declare-fun temp10934_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10934_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10934_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var5255568 () (_ BitVec 64))
(declare-fun var5517712 () (_ BitVec 64))
(declare-fun temp10934_221 () (_ BitVec 64))
(assert (= temp10934_1 #x0000000000000001))
(assert (= var77203 temp10934_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10934_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10934_2)))
(assert (= temp10934_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10934_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10934_4 #x0000000000000000))
(assert (= var210941 temp10934_4))
(assert (= temp10934_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10934_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10934_6 #x0000000000000000))
(assert (= var210986 temp10934_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10934_7 #x0000000000000000))
(assert (= temp10934_8 temp10934_7))
(assert (= temp10934_9 (select ARGNAME_padding_NAMEEND_VAL temp10934_8)))
(assert (= temp10934_10 #x0000000000000001))
(assert (= temp10934_11 temp10934_10))
(assert (= temp10934_12 (select ARGNAME_padding_NAMEEND_VAL temp10934_11)))
(assert (= temp10934_13 #x0000000000000002))
(assert (= temp10934_14 temp10934_13))
(assert (= temp10934_15 (select ARGNAME_padding_NAMEEND_VAL temp10934_14)))
(assert (= temp10934_16 #x0000000000000003))
(assert (= temp10934_17 temp10934_16))
(assert (= temp10934_18 (select ARGNAME_padding_NAMEEND_VAL temp10934_17)))
(assert (= temp10934_19 #x0000000000000004))
(assert (= temp10934_20 temp10934_19))
(assert (= temp10934_21 (select ARGNAME_padding_NAMEEND_VAL temp10934_20)))
(assert (= temp10934_22 #x0000000000000005))
(assert (= temp10934_23 temp10934_22))
(assert (= temp10934_24 (select ARGNAME_padding_NAMEEND_VAL temp10934_23)))
(assert (= temp10934_25 #x0000000000000000))
(assert (= temp10934_26 #x0000000000000000))
(assert (= temp10934_27 temp10934_26))
(assert (= temp10934_28 (select ARGNAME_padding_NAMEEND_VAL temp10934_27)))
(assert (= temp10934_29 #x0000000000000000))
(assert (= temp10934_30 #x0000000000000001))
(assert (= temp10934_31 temp10934_30))
(assert (= temp10934_32 (select ARGNAME_padding_NAMEEND_VAL temp10934_31)))
(assert (= temp10934_33 #x0000000000000000))
(assert (= temp10934_34 #x0000000000000002))
(assert (= temp10934_35 temp10934_34))
(assert (= temp10934_36 (select ARGNAME_padding_NAMEEND_VAL temp10934_35)))
(assert (= temp10934_37 #x0000000000000000))
(assert (= temp10934_38 #x0000000000000003))
(assert (= temp10934_39 temp10934_38))
(assert (= temp10934_40 (select ARGNAME_padding_NAMEEND_VAL temp10934_39)))
(assert (= temp10934_41 #x0000000000000000))
(assert (= temp10934_42 #x0000000000000004))
(assert (= temp10934_43 temp10934_42))
(assert (= temp10934_44 (select ARGNAME_padding_NAMEEND_VAL temp10934_43)))
(assert (= temp10934_45 #x0000000000000000))
(assert (= temp10934_46 #x0000000000000005))
(assert (= temp10934_47 temp10934_46))
(assert (= temp10934_48 (select ARGNAME_padding_NAMEEND_VAL temp10934_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10934_28 temp10934_25)
             (bvslt temp10934_32 temp10934_29)
             (bvslt temp10934_36 temp10934_33)
             (bvslt temp10934_40 temp10934_37)
             (bvslt temp10934_44 temp10934_41)
             (bvslt temp10934_48 temp10934_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10934_49 #x0000000000000000))
(assert (= var1191714 temp10934_49))
(assert (= temp10934_50 #x0000000000000000))
(assert (= temp10934_51 temp10934_50))
(assert (= temp10934_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10934_51)))
(assert (= temp10934_53 #x0000000000000001))
(assert (= temp10934_54 temp10934_53))
(assert (= temp10934_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10934_54)))
(assert (= temp10934_56 #x0000000000000002))
(assert (= temp10934_57 temp10934_56))
(assert (= temp10934_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10934_57)))
(assert (= temp10934_59 #x0000000000000003))
(assert (= temp10934_60 temp10934_59))
(assert (= temp10934_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10934_60)))
(assert (= temp10934_62 #x0000000000000004))
(assert (= temp10934_63 temp10934_62))
(assert (= temp10934_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10934_63)))
(assert (= temp10934_65 #x0000000000000005))
(assert (= temp10934_66 temp10934_65))
(assert (= temp10934_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10934_66)))
(assert (= temp10934_68 #x0000000000000000))
(assert (= temp10934_69 #x0000000000000000))
(assert (= temp10934_70 temp10934_69))
(assert (= temp10934_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10934_70)))
(assert (= temp10934_72 #x0000000000000000))
(assert (= temp10934_73 #x0000000000000001))
(assert (= temp10934_74 temp10934_73))
(assert (= temp10934_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10934_74)))
(assert (= temp10934_76 #x0000000000000000))
(assert (= temp10934_77 #x0000000000000002))
(assert (= temp10934_78 temp10934_77))
(assert (= temp10934_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10934_78)))
(assert (= temp10934_80 #x0000000000000000))
(assert (= temp10934_81 #x0000000000000003))
(assert (= temp10934_82 temp10934_81))
(assert (= temp10934_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10934_82)))
(assert (= temp10934_84 #x0000000000000000))
(assert (= temp10934_85 #x0000000000000004))
(assert (= temp10934_86 temp10934_85))
(assert (= temp10934_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10934_86)))
(assert (= temp10934_88 #x0000000000000000))
(assert (= temp10934_89 #x0000000000000005))
(assert (= temp10934_90 temp10934_89))
(assert (= temp10934_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10934_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10934_71 temp10934_68)
             (bvslt temp10934_75 temp10934_72)
             (bvslt temp10934_79 temp10934_76)
             (bvslt temp10934_83 temp10934_80)
             (bvslt temp10934_87 temp10934_84)
             (bvslt temp10934_91 temp10934_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10934_92 #x0000000000000000))
(assert (= var1191725 temp10934_92))
(assert (= temp10934_93 #x0000000000000000))
(assert (= temp10934_94 temp10934_93))
(assert (= temp10934_95 (select ARGNAME_stride_NAMEEND_VAL temp10934_94)))
(assert (= temp10934_96 #x0000000000000001))
(assert (= temp10934_97 temp10934_96))
(assert (= temp10934_98 (select ARGNAME_stride_NAMEEND_VAL temp10934_97)))
(assert (= temp10934_99 #x0000000000000002))
(assert (= temp10934_100 temp10934_99))
(assert (= temp10934_101 (select ARGNAME_stride_NAMEEND_VAL temp10934_100)))
(assert (= temp10934_102 #x0000000000000003))
(assert (= temp10934_103 temp10934_102))
(assert (= temp10934_104 (select ARGNAME_stride_NAMEEND_VAL temp10934_103)))
(assert (= temp10934_105 #x0000000000000004))
(assert (= temp10934_106 temp10934_105))
(assert (= temp10934_107 (select ARGNAME_stride_NAMEEND_VAL temp10934_106)))
(assert (= temp10934_108 #x0000000000000005))
(assert (= temp10934_109 temp10934_108))
(assert (= temp10934_110 (select ARGNAME_stride_NAMEEND_VAL temp10934_109)))
(assert (= temp10934_111 #x0000000000000000))
(assert (= temp10934_112 #x0000000000000000))
(assert (= temp10934_113 temp10934_112))
(assert (= temp10934_114 (select ARGNAME_stride_NAMEEND_VAL temp10934_113)))
(assert (= temp10934_115 #x0000000000000000))
(assert (= temp10934_116 #x0000000000000001))
(assert (= temp10934_117 temp10934_116))
(assert (= temp10934_118 (select ARGNAME_stride_NAMEEND_VAL temp10934_117)))
(assert (= temp10934_119 #x0000000000000000))
(assert (= temp10934_120 #x0000000000000002))
(assert (= temp10934_121 temp10934_120))
(assert (= temp10934_122 (select ARGNAME_stride_NAMEEND_VAL temp10934_121)))
(assert (= temp10934_123 #x0000000000000000))
(assert (= temp10934_124 #x0000000000000003))
(assert (= temp10934_125 temp10934_124))
(assert (= temp10934_126 (select ARGNAME_stride_NAMEEND_VAL temp10934_125)))
(assert (= temp10934_127 #x0000000000000000))
(assert (= temp10934_128 #x0000000000000004))
(assert (= temp10934_129 temp10934_128))
(assert (= temp10934_130 (select ARGNAME_stride_NAMEEND_VAL temp10934_129)))
(assert (= temp10934_131 #x0000000000000000))
(assert (= temp10934_132 #x0000000000000005))
(assert (= temp10934_133 temp10934_132))
(assert (= temp10934_134 (select ARGNAME_stride_NAMEEND_VAL temp10934_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10934_114 temp10934_111)
             (bvsle temp10934_118 temp10934_115)
             (bvsle temp10934_122 temp10934_119)
             (bvsle temp10934_126 temp10934_123)
             (bvsle temp10934_130 temp10934_127)
             (bvsle temp10934_134 temp10934_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10934_135 #x0000000000000000))
(assert (= var1191735 temp10934_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10934_136 #x0000000000000001))
(assert (= var1191747 temp10934_136))
(assert (= temp10934_137 #x0000000000000000))
(assert (= var1179826 temp10934_137))
(assert (= temp10934_138 #x0000000000000000))
(assert (= temp10934_139 temp10934_138))
(assert (= temp10934_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10934_139)))
(assert (= temp10934_141 #x0000000000000001))
(assert (= temp10934_142 temp10934_141))
(assert (= temp10934_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10934_142)))
(assert (= temp10934_144 #x0000000000000002))
(assert (= temp10934_145 temp10934_144))
(assert (= temp10934_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10934_145)))
(assert (= temp10934_147 #x0000000000000003))
(assert (= temp10934_148 temp10934_147))
(assert (= temp10934_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10934_148)))
(assert (= temp10934_150 #x0000000000000004))
(assert (= temp10934_151 temp10934_150))
(assert (= temp10934_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10934_151)))
(assert (= temp10934_153 #x0000000000000005))
(assert (= temp10934_154 temp10934_153))
(assert (= temp10934_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10934_154)))
(assert (= temp10934_157 var1179826))
(assert (= temp10934_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10934_157)))
(assert (= temp10934_156 temp10934_158))
(assert (= var1191780
   (ite (bvslt temp10934_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10934_159 #x0000000000000000))
(assert (= var1191780 temp10934_159))
(assert (= temp10934_160 #x0000000000000000))
(assert (= var1179826 temp10934_160))
(assert (= temp10934_162 var1179826))
(assert (= temp10934_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10934_162)))
(assert (= temp10934_161 temp10934_163))
(assert (= var1191802 (bvsmod temp10934_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10934_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10934_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10934_165 #x0000000000000001))
(assert (= var1191803 temp10934_165))
(assert (= temp10934_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10934_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10934_167 #x0000000000000001))
(assert (= var1191823 temp10934_167))
(assert (= temp10934_168 #x0000000000000001))
(assert (= var1180714 temp10934_168))
(assert (= temp10934_169 #x0000000000000000))
(assert (= temp10934_170 temp10934_169))
(assert (= temp10934_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10934_170)))
(assert (= temp10934_172 #x0000000000000001))
(assert (= temp10934_173 temp10934_172))
(assert (= temp10934_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10934_173)))
(assert (= temp10934_175 #x0000000000000002))
(assert (= temp10934_176 temp10934_175))
(assert (= temp10934_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10934_176)))
(assert (= temp10934_178 #x0000000000000003))
(assert (= temp10934_179 temp10934_178))
(assert (= temp10934_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10934_179)))
(assert (= temp10934_181 #x0000000000000004))
(assert (= temp10934_182 temp10934_181))
(assert (= temp10934_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10934_182)))
(assert (= temp10934_184 #x0000000000000005))
(assert (= temp10934_185 temp10934_184))
(assert (= temp10934_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10934_185)))
(assert (= temp10934_187 #x0000000000000000))
(assert (= temp10934_188
   (ite (bvslt var1180714 temp10934_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10934_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10934_188)))
(assert (= var1191831 temp10934_189))
(assert (bvslt (ite (bvslt var1180714 temp10934_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10934_190 #x0000000000000001))
(assert (= var1180714 temp10934_190))
(assert (= temp10934_192 var1180714))
(assert (= temp10934_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10934_192)))
(assert (= temp10934_191 temp10934_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10934_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10934_194 #x0000000000000001))
(assert (= var1191836 temp10934_194))
(assert (= temp10934_195 #x0000000000000000))
(assert (= var1179826 temp10934_195))
(assert (= temp10934_197 var1179826))
(assert (= temp10934_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10934_197)))
(assert (= temp10934_196 temp10934_198))
(assert (= temp10934_199 #x0000000000000002))
(assert (= var1586025 temp10934_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10934_200 #x0000000000000001))
(assert (= var1191993 temp10934_200))
(assert (= temp10934_201 #x0000000000000001))
(assert (= var2700303 temp10934_201))
(assert (= temp10934_202 #x0000000000000001))
(assert (= var2962447 temp10934_202))
(assert (= temp10934_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10934_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10934_204 #x0000000000000001))
(assert (= var211058 temp10934_204))
(assert (= temp10934_205 #x0000000000000001))
(assert (= var211188 temp10934_205))
(assert (= var3879401 var211188))
(assert (= temp10934_206 #x0000000000000000))
(assert (= var3866802 temp10934_206))
(assert (= temp10934_207 #x0000000000000000))
(assert (= temp10934_208
   (ite (bvslt var3866802 temp10934_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10934_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10934_208)))
(assert (= var3879420 temp10934_209))
(assert (bvslt (ite (bvslt var3866802 temp10934_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10934_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10934_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10934_211 #x0000000000000000))
(assert (= var3879421 temp10934_211))
(assert (= temp10934_212 #x0000000000000001))
(assert (= var3867690 temp10934_212))
(assert (= temp10934_213 #x0000000000000000))
(assert (= temp10934_214
   (ite (bvslt var3867690 temp10934_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10934_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10934_214)))
(assert (= var3879423 temp10934_215))
(assert (bvslt (ite (bvslt var3867690 temp10934_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10934_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10934_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10934_217 #x0000000000000001))
(assert (= var3879424 temp10934_217))
(assert (= temp10934_218 #x0000000000000000))
(assert (= var4133117 temp10934_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10934_219 #x0000000000000002))
(assert (= var4339331 temp10934_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10934_220 #x0000000000000000))
(assert (= var4404892 temp10934_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var5255568 var211201))
(assert (= var5517712 var211201))
(assert (= temp10934_221 #x0000000000000001))
(assert (= var211058 temp10934_221))
(model-add temp10934_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10934_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10934_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10934_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))



