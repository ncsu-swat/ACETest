(declare-fun temp10356_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10356_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10356_3 () (_ BitVec 64))
(declare-fun temp10356_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10356_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10356_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10356_7 () (_ BitVec 64))
(declare-fun temp10356_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10356_9 () (_ BitVec 64))
(declare-fun temp10356_10 () (_ BitVec 64))
(declare-fun temp10356_11 () (_ BitVec 64))
(declare-fun temp10356_12 () (_ BitVec 64))
(declare-fun temp10356_13 () (_ BitVec 64))
(declare-fun temp10356_14 () (_ BitVec 64))
(declare-fun temp10356_15 () (_ BitVec 64))
(declare-fun temp10356_16 () (_ BitVec 64))
(declare-fun temp10356_17 () (_ BitVec 64))
(declare-fun temp10356_18 () (_ BitVec 64))
(declare-fun temp10356_19 () (_ BitVec 64))
(declare-fun temp10356_20 () (_ BitVec 64))
(declare-fun temp10356_21 () (_ BitVec 64))
(declare-fun temp10356_22 () (_ BitVec 64))
(declare-fun temp10356_23 () (_ BitVec 64))
(declare-fun temp10356_24 () (_ BitVec 64))
(declare-fun temp10356_25 () (_ BitVec 64))
(declare-fun temp10356_26 () (_ BitVec 64))
(declare-fun temp10356_27 () (_ BitVec 64))
(declare-fun temp10356_28 () (_ BitVec 64))
(declare-fun temp10356_29 () (_ BitVec 64))
(declare-fun temp10356_30 () (_ BitVec 64))
(declare-fun temp10356_31 () (_ BitVec 64))
(declare-fun temp10356_32 () (_ BitVec 64))
(declare-fun temp10356_33 () (_ BitVec 64))
(declare-fun temp10356_34 () (_ BitVec 64))
(declare-fun temp10356_35 () (_ BitVec 64))
(declare-fun temp10356_36 () (_ BitVec 64))
(declare-fun temp10356_37 () (_ BitVec 64))
(declare-fun temp10356_38 () (_ BitVec 64))
(declare-fun temp10356_39 () (_ BitVec 64))
(declare-fun temp10356_40 () (_ BitVec 64))
(declare-fun temp10356_41 () (_ BitVec 64))
(declare-fun temp10356_42 () (_ BitVec 64))
(declare-fun temp10356_43 () (_ BitVec 64))
(declare-fun temp10356_44 () (_ BitVec 64))
(declare-fun temp10356_45 () (_ BitVec 64))
(declare-fun temp10356_46 () (_ BitVec 64))
(declare-fun temp10356_47 () (_ BitVec 64))
(declare-fun temp10356_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10356_49 () (_ BitVec 64))
(declare-fun temp10356_50 () (_ BitVec 64))
(declare-fun temp10356_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10356_52 () (_ BitVec 64))
(declare-fun temp10356_53 () (_ BitVec 64))
(declare-fun temp10356_54 () (_ BitVec 64))
(declare-fun temp10356_55 () (_ BitVec 64))
(declare-fun temp10356_56 () (_ BitVec 64))
(declare-fun temp10356_57 () (_ BitVec 64))
(declare-fun temp10356_58 () (_ BitVec 64))
(declare-fun temp10356_59 () (_ BitVec 64))
(declare-fun temp10356_60 () (_ BitVec 64))
(declare-fun temp10356_61 () (_ BitVec 64))
(declare-fun temp10356_62 () (_ BitVec 64))
(declare-fun temp10356_63 () (_ BitVec 64))
(declare-fun temp10356_64 () (_ BitVec 64))
(declare-fun temp10356_65 () (_ BitVec 64))
(declare-fun temp10356_66 () (_ BitVec 64))
(declare-fun temp10356_67 () (_ BitVec 64))
(declare-fun temp10356_68 () (_ BitVec 64))
(declare-fun temp10356_69 () (_ BitVec 64))
(declare-fun temp10356_70 () (_ BitVec 64))
(declare-fun temp10356_71 () (_ BitVec 64))
(declare-fun temp10356_72 () (_ BitVec 64))
(declare-fun temp10356_73 () (_ BitVec 64))
(declare-fun temp10356_74 () (_ BitVec 64))
(declare-fun temp10356_75 () (_ BitVec 64))
(declare-fun temp10356_76 () (_ BitVec 64))
(declare-fun temp10356_77 () (_ BitVec 64))
(declare-fun temp10356_78 () (_ BitVec 64))
(declare-fun temp10356_79 () (_ BitVec 64))
(declare-fun temp10356_80 () (_ BitVec 64))
(declare-fun temp10356_81 () (_ BitVec 64))
(declare-fun temp10356_82 () (_ BitVec 64))
(declare-fun temp10356_83 () (_ BitVec 64))
(declare-fun temp10356_84 () (_ BitVec 64))
(declare-fun temp10356_85 () (_ BitVec 64))
(declare-fun temp10356_86 () (_ BitVec 64))
(declare-fun temp10356_87 () (_ BitVec 64))
(declare-fun temp10356_88 () (_ BitVec 64))
(declare-fun temp10356_89 () (_ BitVec 64))
(declare-fun temp10356_90 () (_ BitVec 64))
(declare-fun temp10356_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10356_92 () (_ BitVec 64))
(declare-fun temp10356_93 () (_ BitVec 64))
(declare-fun temp10356_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10356_95 () (_ BitVec 64))
(declare-fun temp10356_96 () (_ BitVec 64))
(declare-fun temp10356_97 () (_ BitVec 64))
(declare-fun temp10356_98 () (_ BitVec 64))
(declare-fun temp10356_99 () (_ BitVec 64))
(declare-fun temp10356_100 () (_ BitVec 64))
(declare-fun temp10356_101 () (_ BitVec 64))
(declare-fun temp10356_102 () (_ BitVec 64))
(declare-fun temp10356_103 () (_ BitVec 64))
(declare-fun temp10356_104 () (_ BitVec 64))
(declare-fun temp10356_105 () (_ BitVec 64))
(declare-fun temp10356_106 () (_ BitVec 64))
(declare-fun temp10356_107 () (_ BitVec 64))
(declare-fun temp10356_108 () (_ BitVec 64))
(declare-fun temp10356_109 () (_ BitVec 64))
(declare-fun temp10356_110 () (_ BitVec 64))
(declare-fun temp10356_111 () (_ BitVec 64))
(declare-fun temp10356_112 () (_ BitVec 64))
(declare-fun temp10356_113 () (_ BitVec 64))
(declare-fun temp10356_114 () (_ BitVec 64))
(declare-fun temp10356_115 () (_ BitVec 64))
(declare-fun temp10356_116 () (_ BitVec 64))
(declare-fun temp10356_117 () (_ BitVec 64))
(declare-fun temp10356_118 () (_ BitVec 64))
(declare-fun temp10356_119 () (_ BitVec 64))
(declare-fun temp10356_120 () (_ BitVec 64))
(declare-fun temp10356_121 () (_ BitVec 64))
(declare-fun temp10356_122 () (_ BitVec 64))
(declare-fun temp10356_123 () (_ BitVec 64))
(declare-fun temp10356_124 () (_ BitVec 64))
(declare-fun temp10356_125 () (_ BitVec 64))
(declare-fun temp10356_126 () (_ BitVec 64))
(declare-fun temp10356_127 () (_ BitVec 64))
(declare-fun temp10356_128 () (_ BitVec 64))
(declare-fun temp10356_129 () (_ BitVec 64))
(declare-fun temp10356_130 () (_ BitVec 64))
(declare-fun temp10356_131 () (_ BitVec 64))
(declare-fun temp10356_132 () (_ BitVec 64))
(declare-fun temp10356_133 () (_ BitVec 64))
(declare-fun temp10356_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10356_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10356_136 () (_ BitVec 64))
(declare-fun temp10356_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10356_138 () (_ BitVec 64))
(declare-fun temp10356_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10356_140 () (_ BitVec 64))
(declare-fun temp10356_141 () (_ BitVec 64))
(declare-fun temp10356_142 () (_ BitVec 64))
(declare-fun temp10356_143 () (_ BitVec 64))
(declare-fun temp10356_144 () (_ BitVec 64))
(declare-fun temp10356_145 () (_ BitVec 64))
(declare-fun temp10356_146 () (_ BitVec 64))
(declare-fun temp10356_147 () (_ BitVec 64))
(declare-fun temp10356_148 () (_ BitVec 64))
(declare-fun temp10356_149 () (_ BitVec 64))
(declare-fun temp10356_150 () (_ BitVec 64))
(declare-fun temp10356_151 () (_ BitVec 64))
(declare-fun temp10356_152 () (_ BitVec 64))
(declare-fun temp10356_153 () (_ BitVec 64))
(declare-fun temp10356_154 () (_ BitVec 64))
(declare-fun temp10356_155 () (_ BitVec 64))
(declare-fun temp10356_157 () (_ BitVec 64))
(declare-fun temp10356_158 () (_ BitVec 64))
(declare-fun temp10356_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10356_159 () (_ BitVec 64))
(declare-fun temp10356_160 () (_ BitVec 64))
(declare-fun temp10356_162 () (_ BitVec 64))
(declare-fun temp10356_163 () (_ BitVec 64))
(declare-fun temp10356_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10356_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10356_165 () (_ BitVec 64))
(declare-fun temp10356_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10356_167 () (_ BitVec 64))
(declare-fun temp10356_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10356_169 () (_ BitVec 64))
(declare-fun temp10356_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10356_171 () (_ BitVec 64))
(declare-fun temp10356_172 () (_ BitVec 64))
(declare-fun temp10356_173 () (_ BitVec 64))
(declare-fun temp10356_174 () (_ BitVec 64))
(declare-fun temp10356_175 () (_ BitVec 64))
(declare-fun temp10356_176 () (_ BitVec 64))
(declare-fun temp10356_177 () (_ BitVec 64))
(declare-fun temp10356_178 () (_ BitVec 64))
(declare-fun temp10356_179 () (_ BitVec 64))
(declare-fun temp10356_180 () (_ BitVec 64))
(declare-fun temp10356_181 () (_ BitVec 64))
(declare-fun temp10356_182 () (_ BitVec 64))
(declare-fun temp10356_183 () (_ BitVec 64))
(declare-fun temp10356_184 () (_ BitVec 64))
(declare-fun temp10356_185 () (_ BitVec 64))
(declare-fun temp10356_186 () (_ BitVec 64))
(declare-fun temp10356_187 () (_ BitVec 64))
(declare-fun temp10356_188 () (_ BitVec 64))
(declare-fun temp10356_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10356_190 () (_ BitVec 64))
(declare-fun temp10356_192 () (_ BitVec 64))
(declare-fun temp10356_193 () (_ BitVec 64))
(declare-fun temp10356_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10356_194 () (_ BitVec 64))
(declare-fun temp10356_195 () (_ BitVec 64))
(declare-fun temp10356_197 () (_ BitVec 64))
(declare-fun temp10356_198 () (_ BitVec 64))
(declare-fun temp10356_196 () (_ BitVec 64))
(declare-fun temp10356_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10356_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10356_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10356_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10356_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10356_204 () (_ BitVec 64))
(declare-fun temp10356_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10356_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10356_207 () (_ BitVec 64))
(declare-fun temp10356_208 () (_ BitVec 64))
(declare-fun temp10356_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10356_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10356_211 () (_ BitVec 64))
(declare-fun temp10356_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10356_213 () (_ BitVec 64))
(declare-fun temp10356_214 () (_ BitVec 64))
(declare-fun temp10356_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10356_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10356_217 () (_ BitVec 64))
(declare-fun temp10356_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10356_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10356_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp10356_221 () (_ BitVec 64))
(declare-fun temp10356_222 () (_ BitVec 64))
(declare-fun var6107924 () (_ BitVec 64))
(declare-fun var6107891 () (_ BitVec 64))
(declare-fun var5976455 () (_ BitVec 64))
(declare-fun var5976451 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp10356_223 () (_ BitVec 64))
(assert (= temp10356_1 #x0000000000000001))
(assert (= var77203 temp10356_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10356_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10356_2)))
(assert (= temp10356_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10356_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10356_4 #x0000000000000000))
(assert (= var210941 temp10356_4))
(assert (= temp10356_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10356_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10356_6 #x0000000000000000))
(assert (= var210986 temp10356_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10356_7 #x0000000000000000))
(assert (= temp10356_8 temp10356_7))
(assert (= temp10356_9 (select ARGNAME_padding_NAMEEND_VAL temp10356_8)))
(assert (= temp10356_10 #x0000000000000001))
(assert (= temp10356_11 temp10356_10))
(assert (= temp10356_12 (select ARGNAME_padding_NAMEEND_VAL temp10356_11)))
(assert (= temp10356_13 #x0000000000000002))
(assert (= temp10356_14 temp10356_13))
(assert (= temp10356_15 (select ARGNAME_padding_NAMEEND_VAL temp10356_14)))
(assert (= temp10356_16 #x0000000000000003))
(assert (= temp10356_17 temp10356_16))
(assert (= temp10356_18 (select ARGNAME_padding_NAMEEND_VAL temp10356_17)))
(assert (= temp10356_19 #x0000000000000004))
(assert (= temp10356_20 temp10356_19))
(assert (= temp10356_21 (select ARGNAME_padding_NAMEEND_VAL temp10356_20)))
(assert (= temp10356_22 #x0000000000000005))
(assert (= temp10356_23 temp10356_22))
(assert (= temp10356_24 (select ARGNAME_padding_NAMEEND_VAL temp10356_23)))
(assert (= temp10356_25 #x0000000000000000))
(assert (= temp10356_26 #x0000000000000000))
(assert (= temp10356_27 temp10356_26))
(assert (= temp10356_28 (select ARGNAME_padding_NAMEEND_VAL temp10356_27)))
(assert (= temp10356_29 #x0000000000000000))
(assert (= temp10356_30 #x0000000000000001))
(assert (= temp10356_31 temp10356_30))
(assert (= temp10356_32 (select ARGNAME_padding_NAMEEND_VAL temp10356_31)))
(assert (= temp10356_33 #x0000000000000000))
(assert (= temp10356_34 #x0000000000000002))
(assert (= temp10356_35 temp10356_34))
(assert (= temp10356_36 (select ARGNAME_padding_NAMEEND_VAL temp10356_35)))
(assert (= temp10356_37 #x0000000000000000))
(assert (= temp10356_38 #x0000000000000003))
(assert (= temp10356_39 temp10356_38))
(assert (= temp10356_40 (select ARGNAME_padding_NAMEEND_VAL temp10356_39)))
(assert (= temp10356_41 #x0000000000000000))
(assert (= temp10356_42 #x0000000000000004))
(assert (= temp10356_43 temp10356_42))
(assert (= temp10356_44 (select ARGNAME_padding_NAMEEND_VAL temp10356_43)))
(assert (= temp10356_45 #x0000000000000000))
(assert (= temp10356_46 #x0000000000000005))
(assert (= temp10356_47 temp10356_46))
(assert (= temp10356_48 (select ARGNAME_padding_NAMEEND_VAL temp10356_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10356_28 temp10356_25)
             (bvslt temp10356_32 temp10356_29)
             (bvslt temp10356_36 temp10356_33)
             (bvslt temp10356_40 temp10356_37)
             (bvslt temp10356_44 temp10356_41)
             (bvslt temp10356_48 temp10356_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10356_49 #x0000000000000000))
(assert (= var1191714 temp10356_49))
(assert (= temp10356_50 #x0000000000000000))
(assert (= temp10356_51 temp10356_50))
(assert (= temp10356_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10356_51)))
(assert (= temp10356_53 #x0000000000000001))
(assert (= temp10356_54 temp10356_53))
(assert (= temp10356_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10356_54)))
(assert (= temp10356_56 #x0000000000000002))
(assert (= temp10356_57 temp10356_56))
(assert (= temp10356_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10356_57)))
(assert (= temp10356_59 #x0000000000000003))
(assert (= temp10356_60 temp10356_59))
(assert (= temp10356_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10356_60)))
(assert (= temp10356_62 #x0000000000000004))
(assert (= temp10356_63 temp10356_62))
(assert (= temp10356_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10356_63)))
(assert (= temp10356_65 #x0000000000000005))
(assert (= temp10356_66 temp10356_65))
(assert (= temp10356_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10356_66)))
(assert (= temp10356_68 #x0000000000000000))
(assert (= temp10356_69 #x0000000000000000))
(assert (= temp10356_70 temp10356_69))
(assert (= temp10356_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10356_70)))
(assert (= temp10356_72 #x0000000000000000))
(assert (= temp10356_73 #x0000000000000001))
(assert (= temp10356_74 temp10356_73))
(assert (= temp10356_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10356_74)))
(assert (= temp10356_76 #x0000000000000000))
(assert (= temp10356_77 #x0000000000000002))
(assert (= temp10356_78 temp10356_77))
(assert (= temp10356_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10356_78)))
(assert (= temp10356_80 #x0000000000000000))
(assert (= temp10356_81 #x0000000000000003))
(assert (= temp10356_82 temp10356_81))
(assert (= temp10356_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10356_82)))
(assert (= temp10356_84 #x0000000000000000))
(assert (= temp10356_85 #x0000000000000004))
(assert (= temp10356_86 temp10356_85))
(assert (= temp10356_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10356_86)))
(assert (= temp10356_88 #x0000000000000000))
(assert (= temp10356_89 #x0000000000000005))
(assert (= temp10356_90 temp10356_89))
(assert (= temp10356_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10356_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10356_71 temp10356_68)
             (bvslt temp10356_75 temp10356_72)
             (bvslt temp10356_79 temp10356_76)
             (bvslt temp10356_83 temp10356_80)
             (bvslt temp10356_87 temp10356_84)
             (bvslt temp10356_91 temp10356_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10356_92 #x0000000000000000))
(assert (= var1191725 temp10356_92))
(assert (= temp10356_93 #x0000000000000000))
(assert (= temp10356_94 temp10356_93))
(assert (= temp10356_95 (select ARGNAME_stride_NAMEEND_VAL temp10356_94)))
(assert (= temp10356_96 #x0000000000000001))
(assert (= temp10356_97 temp10356_96))
(assert (= temp10356_98 (select ARGNAME_stride_NAMEEND_VAL temp10356_97)))
(assert (= temp10356_99 #x0000000000000002))
(assert (= temp10356_100 temp10356_99))
(assert (= temp10356_101 (select ARGNAME_stride_NAMEEND_VAL temp10356_100)))
(assert (= temp10356_102 #x0000000000000003))
(assert (= temp10356_103 temp10356_102))
(assert (= temp10356_104 (select ARGNAME_stride_NAMEEND_VAL temp10356_103)))
(assert (= temp10356_105 #x0000000000000004))
(assert (= temp10356_106 temp10356_105))
(assert (= temp10356_107 (select ARGNAME_stride_NAMEEND_VAL temp10356_106)))
(assert (= temp10356_108 #x0000000000000005))
(assert (= temp10356_109 temp10356_108))
(assert (= temp10356_110 (select ARGNAME_stride_NAMEEND_VAL temp10356_109)))
(assert (= temp10356_111 #x0000000000000000))
(assert (= temp10356_112 #x0000000000000000))
(assert (= temp10356_113 temp10356_112))
(assert (= temp10356_114 (select ARGNAME_stride_NAMEEND_VAL temp10356_113)))
(assert (= temp10356_115 #x0000000000000000))
(assert (= temp10356_116 #x0000000000000001))
(assert (= temp10356_117 temp10356_116))
(assert (= temp10356_118 (select ARGNAME_stride_NAMEEND_VAL temp10356_117)))
(assert (= temp10356_119 #x0000000000000000))
(assert (= temp10356_120 #x0000000000000002))
(assert (= temp10356_121 temp10356_120))
(assert (= temp10356_122 (select ARGNAME_stride_NAMEEND_VAL temp10356_121)))
(assert (= temp10356_123 #x0000000000000000))
(assert (= temp10356_124 #x0000000000000003))
(assert (= temp10356_125 temp10356_124))
(assert (= temp10356_126 (select ARGNAME_stride_NAMEEND_VAL temp10356_125)))
(assert (= temp10356_127 #x0000000000000000))
(assert (= temp10356_128 #x0000000000000004))
(assert (= temp10356_129 temp10356_128))
(assert (= temp10356_130 (select ARGNAME_stride_NAMEEND_VAL temp10356_129)))
(assert (= temp10356_131 #x0000000000000000))
(assert (= temp10356_132 #x0000000000000005))
(assert (= temp10356_133 temp10356_132))
(assert (= temp10356_134 (select ARGNAME_stride_NAMEEND_VAL temp10356_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10356_114 temp10356_111)
             (bvsle temp10356_118 temp10356_115)
             (bvsle temp10356_122 temp10356_119)
             (bvsle temp10356_126 temp10356_123)
             (bvsle temp10356_130 temp10356_127)
             (bvsle temp10356_134 temp10356_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10356_135 #x0000000000000000))
(assert (= var1191735 temp10356_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10356_136 #x0000000000000001))
(assert (= var1191747 temp10356_136))
(assert (= temp10356_137 #x0000000000000000))
(assert (= var1179826 temp10356_137))
(assert (= temp10356_138 #x0000000000000000))
(assert (= temp10356_139 temp10356_138))
(assert (= temp10356_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10356_139)))
(assert (= temp10356_141 #x0000000000000001))
(assert (= temp10356_142 temp10356_141))
(assert (= temp10356_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10356_142)))
(assert (= temp10356_144 #x0000000000000002))
(assert (= temp10356_145 temp10356_144))
(assert (= temp10356_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10356_145)))
(assert (= temp10356_147 #x0000000000000003))
(assert (= temp10356_148 temp10356_147))
(assert (= temp10356_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10356_148)))
(assert (= temp10356_150 #x0000000000000004))
(assert (= temp10356_151 temp10356_150))
(assert (= temp10356_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10356_151)))
(assert (= temp10356_153 #x0000000000000005))
(assert (= temp10356_154 temp10356_153))
(assert (= temp10356_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10356_154)))
(assert (= temp10356_157 var1179826))
(assert (= temp10356_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10356_157)))
(assert (= temp10356_156 temp10356_158))
(assert (= var1191780
   (ite (bvslt temp10356_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10356_159 #x0000000000000000))
(assert (= var1191780 temp10356_159))
(assert (= temp10356_160 #x0000000000000000))
(assert (= var1179826 temp10356_160))
(assert (= temp10356_162 var1179826))
(assert (= temp10356_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10356_162)))
(assert (= temp10356_161 temp10356_163))
(assert (= var1191802 (bvsmod temp10356_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10356_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10356_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10356_165 #x0000000000000001))
(assert (= var1191803 temp10356_165))
(assert (= temp10356_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10356_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10356_167 #x0000000000000001))
(assert (= var1191823 temp10356_167))
(assert (= temp10356_168 #x0000000000000001))
(assert (= var1180714 temp10356_168))
(assert (= temp10356_169 #x0000000000000000))
(assert (= temp10356_170 temp10356_169))
(assert (= temp10356_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10356_170)))
(assert (= temp10356_172 #x0000000000000001))
(assert (= temp10356_173 temp10356_172))
(assert (= temp10356_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10356_173)))
(assert (= temp10356_175 #x0000000000000002))
(assert (= temp10356_176 temp10356_175))
(assert (= temp10356_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10356_176)))
(assert (= temp10356_178 #x0000000000000003))
(assert (= temp10356_179 temp10356_178))
(assert (= temp10356_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10356_179)))
(assert (= temp10356_181 #x0000000000000004))
(assert (= temp10356_182 temp10356_181))
(assert (= temp10356_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10356_182)))
(assert (= temp10356_184 #x0000000000000005))
(assert (= temp10356_185 temp10356_184))
(assert (= temp10356_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10356_185)))
(assert (= temp10356_187 #x0000000000000000))
(assert (= temp10356_188
   (ite (bvslt var1180714 temp10356_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10356_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10356_188)))
(assert (= var1191831 temp10356_189))
(assert (bvslt (ite (bvslt var1180714 temp10356_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10356_190 #x0000000000000001))
(assert (= var1180714 temp10356_190))
(assert (= temp10356_192 var1180714))
(assert (= temp10356_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10356_192)))
(assert (= temp10356_191 temp10356_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10356_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10356_194 #x0000000000000001))
(assert (= var1191836 temp10356_194))
(assert (= temp10356_195 #x0000000000000000))
(assert (= var1179826 temp10356_195))
(assert (= temp10356_197 var1179826))
(assert (= temp10356_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10356_197)))
(assert (= temp10356_196 temp10356_198))
(assert (= temp10356_199 #x0000000000000002))
(assert (= var1586025 temp10356_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10356_200 #x0000000000000001))
(assert (= var1191993 temp10356_200))
(assert (= temp10356_201 #x0000000000000001))
(assert (= var2700303 temp10356_201))
(assert (= temp10356_202 #x0000000000000001))
(assert (= var2962447 temp10356_202))
(assert (= temp10356_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10356_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10356_204 #x0000000000000001))
(assert (= var211058 temp10356_204))
(assert (= temp10356_205 #x0000000000000001))
(assert (= var211188 temp10356_205))
(assert (= var3879401 var211188))
(assert (= temp10356_206 #x0000000000000000))
(assert (= var3866802 temp10356_206))
(assert (= temp10356_207 #x0000000000000000))
(assert (= temp10356_208
   (ite (bvslt var3866802 temp10356_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10356_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10356_208)))
(assert (= var3879420 temp10356_209))
(assert (bvslt (ite (bvslt var3866802 temp10356_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10356_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10356_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10356_211 #x0000000000000000))
(assert (= var3879421 temp10356_211))
(assert (= temp10356_212 #x0000000000000001))
(assert (= var3867690 temp10356_212))
(assert (= temp10356_213 #x0000000000000000))
(assert (= temp10356_214
   (ite (bvslt var3867690 temp10356_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10356_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10356_214)))
(assert (= var3879423 temp10356_215))
(assert (bvslt (ite (bvslt var3867690 temp10356_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10356_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10356_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10356_217 #x0000000000000001))
(assert (= var3879424 temp10356_217))
(assert (= temp10356_218 #x0000000000000000))
(assert (= var4079423 temp10356_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10356_219 #x0000000000000002))
(assert (= var4208259 temp10356_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10356_220 #x0000000000000000))
(assert (= var4273820 temp10356_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp10356_221 #x0000000000000001))
(assert (= var211058 temp10356_221))
(assert (= temp10356_222 #x0000000000000000))
(assert (= var6107924 temp10356_222))
(assert (= var6107891 var6107924))
(assert (= var5976455 var6107891))
(assert (= var5976451 var5976455))
(assert (= var212669 var5976451))
(assert (= temp10356_223 #x0000000000000000))
(assert (= var212669 temp10356_223))
(model-add temp10356_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10356_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10356_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10356_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





