(declare-fun temp10584_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10584_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10584_3 () (_ BitVec 64))
(declare-fun temp10584_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10584_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10584_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10584_7 () (_ BitVec 64))
(declare-fun temp10584_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10584_9 () (_ BitVec 64))
(declare-fun temp10584_10 () (_ BitVec 64))
(declare-fun temp10584_11 () (_ BitVec 64))
(declare-fun temp10584_12 () (_ BitVec 64))
(declare-fun temp10584_13 () (_ BitVec 64))
(declare-fun temp10584_14 () (_ BitVec 64))
(declare-fun temp10584_15 () (_ BitVec 64))
(declare-fun temp10584_16 () (_ BitVec 64))
(declare-fun temp10584_17 () (_ BitVec 64))
(declare-fun temp10584_18 () (_ BitVec 64))
(declare-fun temp10584_19 () (_ BitVec 64))
(declare-fun temp10584_20 () (_ BitVec 64))
(declare-fun temp10584_21 () (_ BitVec 64))
(declare-fun temp10584_22 () (_ BitVec 64))
(declare-fun temp10584_23 () (_ BitVec 64))
(declare-fun temp10584_24 () (_ BitVec 64))
(declare-fun temp10584_25 () (_ BitVec 64))
(declare-fun temp10584_26 () (_ BitVec 64))
(declare-fun temp10584_27 () (_ BitVec 64))
(declare-fun temp10584_28 () (_ BitVec 64))
(declare-fun temp10584_29 () (_ BitVec 64))
(declare-fun temp10584_30 () (_ BitVec 64))
(declare-fun temp10584_31 () (_ BitVec 64))
(declare-fun temp10584_32 () (_ BitVec 64))
(declare-fun temp10584_33 () (_ BitVec 64))
(declare-fun temp10584_34 () (_ BitVec 64))
(declare-fun temp10584_35 () (_ BitVec 64))
(declare-fun temp10584_36 () (_ BitVec 64))
(declare-fun temp10584_37 () (_ BitVec 64))
(declare-fun temp10584_38 () (_ BitVec 64))
(declare-fun temp10584_39 () (_ BitVec 64))
(declare-fun temp10584_40 () (_ BitVec 64))
(declare-fun temp10584_41 () (_ BitVec 64))
(declare-fun temp10584_42 () (_ BitVec 64))
(declare-fun temp10584_43 () (_ BitVec 64))
(declare-fun temp10584_44 () (_ BitVec 64))
(declare-fun temp10584_45 () (_ BitVec 64))
(declare-fun temp10584_46 () (_ BitVec 64))
(declare-fun temp10584_47 () (_ BitVec 64))
(declare-fun temp10584_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10584_49 () (_ BitVec 64))
(declare-fun temp10584_50 () (_ BitVec 64))
(declare-fun temp10584_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10584_52 () (_ BitVec 64))
(declare-fun temp10584_53 () (_ BitVec 64))
(declare-fun temp10584_54 () (_ BitVec 64))
(declare-fun temp10584_55 () (_ BitVec 64))
(declare-fun temp10584_56 () (_ BitVec 64))
(declare-fun temp10584_57 () (_ BitVec 64))
(declare-fun temp10584_58 () (_ BitVec 64))
(declare-fun temp10584_59 () (_ BitVec 64))
(declare-fun temp10584_60 () (_ BitVec 64))
(declare-fun temp10584_61 () (_ BitVec 64))
(declare-fun temp10584_62 () (_ BitVec 64))
(declare-fun temp10584_63 () (_ BitVec 64))
(declare-fun temp10584_64 () (_ BitVec 64))
(declare-fun temp10584_65 () (_ BitVec 64))
(declare-fun temp10584_66 () (_ BitVec 64))
(declare-fun temp10584_67 () (_ BitVec 64))
(declare-fun temp10584_68 () (_ BitVec 64))
(declare-fun temp10584_69 () (_ BitVec 64))
(declare-fun temp10584_70 () (_ BitVec 64))
(declare-fun temp10584_71 () (_ BitVec 64))
(declare-fun temp10584_72 () (_ BitVec 64))
(declare-fun temp10584_73 () (_ BitVec 64))
(declare-fun temp10584_74 () (_ BitVec 64))
(declare-fun temp10584_75 () (_ BitVec 64))
(declare-fun temp10584_76 () (_ BitVec 64))
(declare-fun temp10584_77 () (_ BitVec 64))
(declare-fun temp10584_78 () (_ BitVec 64))
(declare-fun temp10584_79 () (_ BitVec 64))
(declare-fun temp10584_80 () (_ BitVec 64))
(declare-fun temp10584_81 () (_ BitVec 64))
(declare-fun temp10584_82 () (_ BitVec 64))
(declare-fun temp10584_83 () (_ BitVec 64))
(declare-fun temp10584_84 () (_ BitVec 64))
(declare-fun temp10584_85 () (_ BitVec 64))
(declare-fun temp10584_86 () (_ BitVec 64))
(declare-fun temp10584_87 () (_ BitVec 64))
(declare-fun temp10584_88 () (_ BitVec 64))
(declare-fun temp10584_89 () (_ BitVec 64))
(declare-fun temp10584_90 () (_ BitVec 64))
(declare-fun temp10584_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10584_92 () (_ BitVec 64))
(declare-fun temp10584_93 () (_ BitVec 64))
(declare-fun temp10584_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10584_95 () (_ BitVec 64))
(declare-fun temp10584_96 () (_ BitVec 64))
(declare-fun temp10584_97 () (_ BitVec 64))
(declare-fun temp10584_98 () (_ BitVec 64))
(declare-fun temp10584_99 () (_ BitVec 64))
(declare-fun temp10584_100 () (_ BitVec 64))
(declare-fun temp10584_101 () (_ BitVec 64))
(declare-fun temp10584_102 () (_ BitVec 64))
(declare-fun temp10584_103 () (_ BitVec 64))
(declare-fun temp10584_104 () (_ BitVec 64))
(declare-fun temp10584_105 () (_ BitVec 64))
(declare-fun temp10584_106 () (_ BitVec 64))
(declare-fun temp10584_107 () (_ BitVec 64))
(declare-fun temp10584_108 () (_ BitVec 64))
(declare-fun temp10584_109 () (_ BitVec 64))
(declare-fun temp10584_110 () (_ BitVec 64))
(declare-fun temp10584_111 () (_ BitVec 64))
(declare-fun temp10584_112 () (_ BitVec 64))
(declare-fun temp10584_113 () (_ BitVec 64))
(declare-fun temp10584_114 () (_ BitVec 64))
(declare-fun temp10584_115 () (_ BitVec 64))
(declare-fun temp10584_116 () (_ BitVec 64))
(declare-fun temp10584_117 () (_ BitVec 64))
(declare-fun temp10584_118 () (_ BitVec 64))
(declare-fun temp10584_119 () (_ BitVec 64))
(declare-fun temp10584_120 () (_ BitVec 64))
(declare-fun temp10584_121 () (_ BitVec 64))
(declare-fun temp10584_122 () (_ BitVec 64))
(declare-fun temp10584_123 () (_ BitVec 64))
(declare-fun temp10584_124 () (_ BitVec 64))
(declare-fun temp10584_125 () (_ BitVec 64))
(declare-fun temp10584_126 () (_ BitVec 64))
(declare-fun temp10584_127 () (_ BitVec 64))
(declare-fun temp10584_128 () (_ BitVec 64))
(declare-fun temp10584_129 () (_ BitVec 64))
(declare-fun temp10584_130 () (_ BitVec 64))
(declare-fun temp10584_131 () (_ BitVec 64))
(declare-fun temp10584_132 () (_ BitVec 64))
(declare-fun temp10584_133 () (_ BitVec 64))
(declare-fun temp10584_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10584_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10584_136 () (_ BitVec 64))
(declare-fun temp10584_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10584_138 () (_ BitVec 64))
(declare-fun temp10584_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10584_140 () (_ BitVec 64))
(declare-fun temp10584_141 () (_ BitVec 64))
(declare-fun temp10584_142 () (_ BitVec 64))
(declare-fun temp10584_143 () (_ BitVec 64))
(declare-fun temp10584_144 () (_ BitVec 64))
(declare-fun temp10584_145 () (_ BitVec 64))
(declare-fun temp10584_146 () (_ BitVec 64))
(declare-fun temp10584_147 () (_ BitVec 64))
(declare-fun temp10584_148 () (_ BitVec 64))
(declare-fun temp10584_149 () (_ BitVec 64))
(declare-fun temp10584_150 () (_ BitVec 64))
(declare-fun temp10584_151 () (_ BitVec 64))
(declare-fun temp10584_152 () (_ BitVec 64))
(declare-fun temp10584_153 () (_ BitVec 64))
(declare-fun temp10584_154 () (_ BitVec 64))
(declare-fun temp10584_155 () (_ BitVec 64))
(declare-fun temp10584_157 () (_ BitVec 64))
(declare-fun temp10584_158 () (_ BitVec 64))
(declare-fun temp10584_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10584_159 () (_ BitVec 64))
(declare-fun temp10584_160 () (_ BitVec 64))
(declare-fun temp10584_162 () (_ BitVec 64))
(declare-fun temp10584_163 () (_ BitVec 64))
(declare-fun temp10584_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10584_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10584_165 () (_ BitVec 64))
(declare-fun temp10584_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10584_167 () (_ BitVec 64))
(declare-fun temp10584_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10584_169 () (_ BitVec 64))
(declare-fun temp10584_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10584_171 () (_ BitVec 64))
(declare-fun temp10584_172 () (_ BitVec 64))
(declare-fun temp10584_173 () (_ BitVec 64))
(declare-fun temp10584_174 () (_ BitVec 64))
(declare-fun temp10584_175 () (_ BitVec 64))
(declare-fun temp10584_176 () (_ BitVec 64))
(declare-fun temp10584_177 () (_ BitVec 64))
(declare-fun temp10584_178 () (_ BitVec 64))
(declare-fun temp10584_179 () (_ BitVec 64))
(declare-fun temp10584_180 () (_ BitVec 64))
(declare-fun temp10584_181 () (_ BitVec 64))
(declare-fun temp10584_182 () (_ BitVec 64))
(declare-fun temp10584_183 () (_ BitVec 64))
(declare-fun temp10584_184 () (_ BitVec 64))
(declare-fun temp10584_185 () (_ BitVec 64))
(declare-fun temp10584_186 () (_ BitVec 64))
(declare-fun temp10584_187 () (_ BitVec 64))
(declare-fun temp10584_188 () (_ BitVec 64))
(declare-fun temp10584_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10584_190 () (_ BitVec 64))
(declare-fun temp10584_192 () (_ BitVec 64))
(declare-fun temp10584_193 () (_ BitVec 64))
(declare-fun temp10584_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10584_194 () (_ BitVec 64))
(declare-fun temp10584_195 () (_ BitVec 64))
(declare-fun temp10584_197 () (_ BitVec 64))
(declare-fun temp10584_198 () (_ BitVec 64))
(declare-fun temp10584_196 () (_ BitVec 64))
(declare-fun temp10584_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10584_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10584_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10584_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10584_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10584_204 () (_ BitVec 64))
(declare-fun temp10584_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10584_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10584_207 () (_ BitVec 64))
(declare-fun temp10584_208 () (_ BitVec 64))
(declare-fun temp10584_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10584_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10584_211 () (_ BitVec 64))
(declare-fun temp10584_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10584_213 () (_ BitVec 64))
(declare-fun temp10584_214 () (_ BitVec 64))
(declare-fun temp10584_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10584_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10584_217 () (_ BitVec 64))
(declare-fun temp10584_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10584_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10584_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var4927888 () (_ BitVec 64))
(declare-fun var211494 () (_ BitVec 64))
(declare-fun temp10584_221 () (_ BitVec 64))
(declare-fun var211495 () (_ BitVec 64))
(declare-fun temp10584_222 () (_ BitVec 64))
(assert (= temp10584_1 #x0000000000000001))
(assert (= var77203 temp10584_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10584_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10584_2)))
(assert (= temp10584_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10584_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10584_4 #x0000000000000000))
(assert (= var210941 temp10584_4))
(assert (= temp10584_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10584_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10584_6 #x0000000000000000))
(assert (= var210986 temp10584_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10584_7 #x0000000000000000))
(assert (= temp10584_8 temp10584_7))
(assert (= temp10584_9 (select ARGNAME_padding_NAMEEND_VAL temp10584_8)))
(assert (= temp10584_10 #x0000000000000001))
(assert (= temp10584_11 temp10584_10))
(assert (= temp10584_12 (select ARGNAME_padding_NAMEEND_VAL temp10584_11)))
(assert (= temp10584_13 #x0000000000000002))
(assert (= temp10584_14 temp10584_13))
(assert (= temp10584_15 (select ARGNAME_padding_NAMEEND_VAL temp10584_14)))
(assert (= temp10584_16 #x0000000000000003))
(assert (= temp10584_17 temp10584_16))
(assert (= temp10584_18 (select ARGNAME_padding_NAMEEND_VAL temp10584_17)))
(assert (= temp10584_19 #x0000000000000004))
(assert (= temp10584_20 temp10584_19))
(assert (= temp10584_21 (select ARGNAME_padding_NAMEEND_VAL temp10584_20)))
(assert (= temp10584_22 #x0000000000000005))
(assert (= temp10584_23 temp10584_22))
(assert (= temp10584_24 (select ARGNAME_padding_NAMEEND_VAL temp10584_23)))
(assert (= temp10584_25 #x0000000000000000))
(assert (= temp10584_26 #x0000000000000000))
(assert (= temp10584_27 temp10584_26))
(assert (= temp10584_28 (select ARGNAME_padding_NAMEEND_VAL temp10584_27)))
(assert (= temp10584_29 #x0000000000000000))
(assert (= temp10584_30 #x0000000000000001))
(assert (= temp10584_31 temp10584_30))
(assert (= temp10584_32 (select ARGNAME_padding_NAMEEND_VAL temp10584_31)))
(assert (= temp10584_33 #x0000000000000000))
(assert (= temp10584_34 #x0000000000000002))
(assert (= temp10584_35 temp10584_34))
(assert (= temp10584_36 (select ARGNAME_padding_NAMEEND_VAL temp10584_35)))
(assert (= temp10584_37 #x0000000000000000))
(assert (= temp10584_38 #x0000000000000003))
(assert (= temp10584_39 temp10584_38))
(assert (= temp10584_40 (select ARGNAME_padding_NAMEEND_VAL temp10584_39)))
(assert (= temp10584_41 #x0000000000000000))
(assert (= temp10584_42 #x0000000000000004))
(assert (= temp10584_43 temp10584_42))
(assert (= temp10584_44 (select ARGNAME_padding_NAMEEND_VAL temp10584_43)))
(assert (= temp10584_45 #x0000000000000000))
(assert (= temp10584_46 #x0000000000000005))
(assert (= temp10584_47 temp10584_46))
(assert (= temp10584_48 (select ARGNAME_padding_NAMEEND_VAL temp10584_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10584_28 temp10584_25)
             (bvslt temp10584_32 temp10584_29)
             (bvslt temp10584_36 temp10584_33)
             (bvslt temp10584_40 temp10584_37)
             (bvslt temp10584_44 temp10584_41)
             (bvslt temp10584_48 temp10584_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10584_49 #x0000000000000000))
(assert (= var1191714 temp10584_49))
(assert (= temp10584_50 #x0000000000000000))
(assert (= temp10584_51 temp10584_50))
(assert (= temp10584_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10584_51)))
(assert (= temp10584_53 #x0000000000000001))
(assert (= temp10584_54 temp10584_53))
(assert (= temp10584_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10584_54)))
(assert (= temp10584_56 #x0000000000000002))
(assert (= temp10584_57 temp10584_56))
(assert (= temp10584_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10584_57)))
(assert (= temp10584_59 #x0000000000000003))
(assert (= temp10584_60 temp10584_59))
(assert (= temp10584_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10584_60)))
(assert (= temp10584_62 #x0000000000000004))
(assert (= temp10584_63 temp10584_62))
(assert (= temp10584_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10584_63)))
(assert (= temp10584_65 #x0000000000000005))
(assert (= temp10584_66 temp10584_65))
(assert (= temp10584_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10584_66)))
(assert (= temp10584_68 #x0000000000000000))
(assert (= temp10584_69 #x0000000000000000))
(assert (= temp10584_70 temp10584_69))
(assert (= temp10584_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10584_70)))
(assert (= temp10584_72 #x0000000000000000))
(assert (= temp10584_73 #x0000000000000001))
(assert (= temp10584_74 temp10584_73))
(assert (= temp10584_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10584_74)))
(assert (= temp10584_76 #x0000000000000000))
(assert (= temp10584_77 #x0000000000000002))
(assert (= temp10584_78 temp10584_77))
(assert (= temp10584_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10584_78)))
(assert (= temp10584_80 #x0000000000000000))
(assert (= temp10584_81 #x0000000000000003))
(assert (= temp10584_82 temp10584_81))
(assert (= temp10584_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10584_82)))
(assert (= temp10584_84 #x0000000000000000))
(assert (= temp10584_85 #x0000000000000004))
(assert (= temp10584_86 temp10584_85))
(assert (= temp10584_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10584_86)))
(assert (= temp10584_88 #x0000000000000000))
(assert (= temp10584_89 #x0000000000000005))
(assert (= temp10584_90 temp10584_89))
(assert (= temp10584_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10584_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10584_71 temp10584_68)
             (bvslt temp10584_75 temp10584_72)
             (bvslt temp10584_79 temp10584_76)
             (bvslt temp10584_83 temp10584_80)
             (bvslt temp10584_87 temp10584_84)
             (bvslt temp10584_91 temp10584_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10584_92 #x0000000000000000))
(assert (= var1191725 temp10584_92))
(assert (= temp10584_93 #x0000000000000000))
(assert (= temp10584_94 temp10584_93))
(assert (= temp10584_95 (select ARGNAME_stride_NAMEEND_VAL temp10584_94)))
(assert (= temp10584_96 #x0000000000000001))
(assert (= temp10584_97 temp10584_96))
(assert (= temp10584_98 (select ARGNAME_stride_NAMEEND_VAL temp10584_97)))
(assert (= temp10584_99 #x0000000000000002))
(assert (= temp10584_100 temp10584_99))
(assert (= temp10584_101 (select ARGNAME_stride_NAMEEND_VAL temp10584_100)))
(assert (= temp10584_102 #x0000000000000003))
(assert (= temp10584_103 temp10584_102))
(assert (= temp10584_104 (select ARGNAME_stride_NAMEEND_VAL temp10584_103)))
(assert (= temp10584_105 #x0000000000000004))
(assert (= temp10584_106 temp10584_105))
(assert (= temp10584_107 (select ARGNAME_stride_NAMEEND_VAL temp10584_106)))
(assert (= temp10584_108 #x0000000000000005))
(assert (= temp10584_109 temp10584_108))
(assert (= temp10584_110 (select ARGNAME_stride_NAMEEND_VAL temp10584_109)))
(assert (= temp10584_111 #x0000000000000000))
(assert (= temp10584_112 #x0000000000000000))
(assert (= temp10584_113 temp10584_112))
(assert (= temp10584_114 (select ARGNAME_stride_NAMEEND_VAL temp10584_113)))
(assert (= temp10584_115 #x0000000000000000))
(assert (= temp10584_116 #x0000000000000001))
(assert (= temp10584_117 temp10584_116))
(assert (= temp10584_118 (select ARGNAME_stride_NAMEEND_VAL temp10584_117)))
(assert (= temp10584_119 #x0000000000000000))
(assert (= temp10584_120 #x0000000000000002))
(assert (= temp10584_121 temp10584_120))
(assert (= temp10584_122 (select ARGNAME_stride_NAMEEND_VAL temp10584_121)))
(assert (= temp10584_123 #x0000000000000000))
(assert (= temp10584_124 #x0000000000000003))
(assert (= temp10584_125 temp10584_124))
(assert (= temp10584_126 (select ARGNAME_stride_NAMEEND_VAL temp10584_125)))
(assert (= temp10584_127 #x0000000000000000))
(assert (= temp10584_128 #x0000000000000004))
(assert (= temp10584_129 temp10584_128))
(assert (= temp10584_130 (select ARGNAME_stride_NAMEEND_VAL temp10584_129)))
(assert (= temp10584_131 #x0000000000000000))
(assert (= temp10584_132 #x0000000000000005))
(assert (= temp10584_133 temp10584_132))
(assert (= temp10584_134 (select ARGNAME_stride_NAMEEND_VAL temp10584_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10584_114 temp10584_111)
             (bvsle temp10584_118 temp10584_115)
             (bvsle temp10584_122 temp10584_119)
             (bvsle temp10584_126 temp10584_123)
             (bvsle temp10584_130 temp10584_127)
             (bvsle temp10584_134 temp10584_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10584_135 #x0000000000000000))
(assert (= var1191735 temp10584_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10584_136 #x0000000000000001))
(assert (= var1191747 temp10584_136))
(assert (= temp10584_137 #x0000000000000000))
(assert (= var1179826 temp10584_137))
(assert (= temp10584_138 #x0000000000000000))
(assert (= temp10584_139 temp10584_138))
(assert (= temp10584_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10584_139)))
(assert (= temp10584_141 #x0000000000000001))
(assert (= temp10584_142 temp10584_141))
(assert (= temp10584_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10584_142)))
(assert (= temp10584_144 #x0000000000000002))
(assert (= temp10584_145 temp10584_144))
(assert (= temp10584_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10584_145)))
(assert (= temp10584_147 #x0000000000000003))
(assert (= temp10584_148 temp10584_147))
(assert (= temp10584_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10584_148)))
(assert (= temp10584_150 #x0000000000000004))
(assert (= temp10584_151 temp10584_150))
(assert (= temp10584_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10584_151)))
(assert (= temp10584_153 #x0000000000000005))
(assert (= temp10584_154 temp10584_153))
(assert (= temp10584_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10584_154)))
(assert (= temp10584_157 var1179826))
(assert (= temp10584_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10584_157)))
(assert (= temp10584_156 temp10584_158))
(assert (= var1191780
   (ite (bvslt temp10584_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10584_159 #x0000000000000000))
(assert (= var1191780 temp10584_159))
(assert (= temp10584_160 #x0000000000000000))
(assert (= var1179826 temp10584_160))
(assert (= temp10584_162 var1179826))
(assert (= temp10584_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10584_162)))
(assert (= temp10584_161 temp10584_163))
(assert (= var1191802 (bvsmod temp10584_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10584_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10584_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10584_165 #x0000000000000001))
(assert (= var1191803 temp10584_165))
(assert (= temp10584_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10584_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10584_167 #x0000000000000001))
(assert (= var1191823 temp10584_167))
(assert (= temp10584_168 #x0000000000000001))
(assert (= var1180714 temp10584_168))
(assert (= temp10584_169 #x0000000000000000))
(assert (= temp10584_170 temp10584_169))
(assert (= temp10584_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10584_170)))
(assert (= temp10584_172 #x0000000000000001))
(assert (= temp10584_173 temp10584_172))
(assert (= temp10584_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10584_173)))
(assert (= temp10584_175 #x0000000000000002))
(assert (= temp10584_176 temp10584_175))
(assert (= temp10584_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10584_176)))
(assert (= temp10584_178 #x0000000000000003))
(assert (= temp10584_179 temp10584_178))
(assert (= temp10584_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10584_179)))
(assert (= temp10584_181 #x0000000000000004))
(assert (= temp10584_182 temp10584_181))
(assert (= temp10584_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10584_182)))
(assert (= temp10584_184 #x0000000000000005))
(assert (= temp10584_185 temp10584_184))
(assert (= temp10584_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10584_185)))
(assert (= temp10584_187 #x0000000000000000))
(assert (= temp10584_188
   (ite (bvslt var1180714 temp10584_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10584_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10584_188)))
(assert (= var1191831 temp10584_189))
(assert (bvslt (ite (bvslt var1180714 temp10584_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10584_190 #x0000000000000001))
(assert (= var1180714 temp10584_190))
(assert (= temp10584_192 var1180714))
(assert (= temp10584_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10584_192)))
(assert (= temp10584_191 temp10584_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10584_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10584_194 #x0000000000000001))
(assert (= var1191836 temp10584_194))
(assert (= temp10584_195 #x0000000000000000))
(assert (= var1179826 temp10584_195))
(assert (= temp10584_197 var1179826))
(assert (= temp10584_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10584_197)))
(assert (= temp10584_196 temp10584_198))
(assert (= temp10584_199 #x0000000000000002))
(assert (= var1586025 temp10584_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10584_200 #x0000000000000001))
(assert (= var1191993 temp10584_200))
(assert (= temp10584_201 #x0000000000000001))
(assert (= var2700303 temp10584_201))
(assert (= temp10584_202 #x0000000000000001))
(assert (= var2962447 temp10584_202))
(assert (= temp10584_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10584_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10584_204 #x0000000000000001))
(assert (= var211058 temp10584_204))
(assert (= temp10584_205 #x0000000000000001))
(assert (= var211188 temp10584_205))
(assert (= var3879401 var211188))
(assert (= temp10584_206 #x0000000000000000))
(assert (= var3866802 temp10584_206))
(assert (= temp10584_207 #x0000000000000000))
(assert (= temp10584_208
   (ite (bvslt var3866802 temp10584_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10584_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10584_208)))
(assert (= var3879420 temp10584_209))
(assert (bvslt (ite (bvslt var3866802 temp10584_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10584_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10584_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10584_211 #x0000000000000000))
(assert (= var3879421 temp10584_211))
(assert (= temp10584_212 #x0000000000000001))
(assert (= var3867690 temp10584_212))
(assert (= temp10584_213 #x0000000000000000))
(assert (= temp10584_214
   (ite (bvslt var3867690 temp10584_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10584_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10584_214)))
(assert (= var3879423 temp10584_215))
(assert (bvslt (ite (bvslt var3867690 temp10584_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10584_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10584_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10584_217 #x0000000000000001))
(assert (= var3879424 temp10584_217))
(assert (= temp10584_218 #x0000000000000000))
(assert (= var4133117 temp10584_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10584_219 #x0000000000000002))
(assert (= var4339331 temp10584_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10584_220 #x0000000000000000))
(assert (= var4404892 temp10584_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var4927888 var211201))
(assert (= var211494 var210913))
(assert (= temp10584_221 #x0000000000000000))
(assert (= var211495
   (ite (distinct var211494 temp10584_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10584_222 #x0000000000000001))
(assert (= var211058 temp10584_222))
(model-add temp10584_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10584_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10584_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10584_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




