(declare-fun temp10309_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10309_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10309_3 () (_ BitVec 64))
(declare-fun temp10309_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10309_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10309_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10309_7 () (_ BitVec 64))
(declare-fun temp10309_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10309_9 () (_ BitVec 64))
(declare-fun temp10309_10 () (_ BitVec 64))
(declare-fun temp10309_11 () (_ BitVec 64))
(declare-fun temp10309_12 () (_ BitVec 64))
(declare-fun temp10309_13 () (_ BitVec 64))
(declare-fun temp10309_14 () (_ BitVec 64))
(declare-fun temp10309_15 () (_ BitVec 64))
(declare-fun temp10309_16 () (_ BitVec 64))
(declare-fun temp10309_17 () (_ BitVec 64))
(declare-fun temp10309_18 () (_ BitVec 64))
(declare-fun temp10309_19 () (_ BitVec 64))
(declare-fun temp10309_20 () (_ BitVec 64))
(declare-fun temp10309_21 () (_ BitVec 64))
(declare-fun temp10309_22 () (_ BitVec 64))
(declare-fun temp10309_23 () (_ BitVec 64))
(declare-fun temp10309_24 () (_ BitVec 64))
(declare-fun temp10309_25 () (_ BitVec 64))
(declare-fun temp10309_26 () (_ BitVec 64))
(declare-fun temp10309_27 () (_ BitVec 64))
(declare-fun temp10309_28 () (_ BitVec 64))
(declare-fun temp10309_29 () (_ BitVec 64))
(declare-fun temp10309_30 () (_ BitVec 64))
(declare-fun temp10309_31 () (_ BitVec 64))
(declare-fun temp10309_32 () (_ BitVec 64))
(declare-fun temp10309_33 () (_ BitVec 64))
(declare-fun temp10309_34 () (_ BitVec 64))
(declare-fun temp10309_35 () (_ BitVec 64))
(declare-fun temp10309_36 () (_ BitVec 64))
(declare-fun temp10309_37 () (_ BitVec 64))
(declare-fun temp10309_38 () (_ BitVec 64))
(declare-fun temp10309_39 () (_ BitVec 64))
(declare-fun temp10309_40 () (_ BitVec 64))
(declare-fun temp10309_41 () (_ BitVec 64))
(declare-fun temp10309_42 () (_ BitVec 64))
(declare-fun temp10309_43 () (_ BitVec 64))
(declare-fun temp10309_44 () (_ BitVec 64))
(declare-fun temp10309_45 () (_ BitVec 64))
(declare-fun temp10309_46 () (_ BitVec 64))
(declare-fun temp10309_47 () (_ BitVec 64))
(declare-fun temp10309_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10309_49 () (_ BitVec 64))
(declare-fun temp10309_50 () (_ BitVec 64))
(declare-fun temp10309_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10309_52 () (_ BitVec 64))
(declare-fun temp10309_53 () (_ BitVec 64))
(declare-fun temp10309_54 () (_ BitVec 64))
(declare-fun temp10309_55 () (_ BitVec 64))
(declare-fun temp10309_56 () (_ BitVec 64))
(declare-fun temp10309_57 () (_ BitVec 64))
(declare-fun temp10309_58 () (_ BitVec 64))
(declare-fun temp10309_59 () (_ BitVec 64))
(declare-fun temp10309_60 () (_ BitVec 64))
(declare-fun temp10309_61 () (_ BitVec 64))
(declare-fun temp10309_62 () (_ BitVec 64))
(declare-fun temp10309_63 () (_ BitVec 64))
(declare-fun temp10309_64 () (_ BitVec 64))
(declare-fun temp10309_65 () (_ BitVec 64))
(declare-fun temp10309_66 () (_ BitVec 64))
(declare-fun temp10309_67 () (_ BitVec 64))
(declare-fun temp10309_68 () (_ BitVec 64))
(declare-fun temp10309_69 () (_ BitVec 64))
(declare-fun temp10309_70 () (_ BitVec 64))
(declare-fun temp10309_71 () (_ BitVec 64))
(declare-fun temp10309_72 () (_ BitVec 64))
(declare-fun temp10309_73 () (_ BitVec 64))
(declare-fun temp10309_74 () (_ BitVec 64))
(declare-fun temp10309_75 () (_ BitVec 64))
(declare-fun temp10309_76 () (_ BitVec 64))
(declare-fun temp10309_77 () (_ BitVec 64))
(declare-fun temp10309_78 () (_ BitVec 64))
(declare-fun temp10309_79 () (_ BitVec 64))
(declare-fun temp10309_80 () (_ BitVec 64))
(declare-fun temp10309_81 () (_ BitVec 64))
(declare-fun temp10309_82 () (_ BitVec 64))
(declare-fun temp10309_83 () (_ BitVec 64))
(declare-fun temp10309_84 () (_ BitVec 64))
(declare-fun temp10309_85 () (_ BitVec 64))
(declare-fun temp10309_86 () (_ BitVec 64))
(declare-fun temp10309_87 () (_ BitVec 64))
(declare-fun temp10309_88 () (_ BitVec 64))
(declare-fun temp10309_89 () (_ BitVec 64))
(declare-fun temp10309_90 () (_ BitVec 64))
(declare-fun temp10309_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10309_92 () (_ BitVec 64))
(declare-fun temp10309_93 () (_ BitVec 64))
(declare-fun temp10309_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10309_95 () (_ BitVec 64))
(declare-fun temp10309_96 () (_ BitVec 64))
(declare-fun temp10309_97 () (_ BitVec 64))
(declare-fun temp10309_98 () (_ BitVec 64))
(declare-fun temp10309_99 () (_ BitVec 64))
(declare-fun temp10309_100 () (_ BitVec 64))
(declare-fun temp10309_101 () (_ BitVec 64))
(declare-fun temp10309_102 () (_ BitVec 64))
(declare-fun temp10309_103 () (_ BitVec 64))
(declare-fun temp10309_104 () (_ BitVec 64))
(declare-fun temp10309_105 () (_ BitVec 64))
(declare-fun temp10309_106 () (_ BitVec 64))
(declare-fun temp10309_107 () (_ BitVec 64))
(declare-fun temp10309_108 () (_ BitVec 64))
(declare-fun temp10309_109 () (_ BitVec 64))
(declare-fun temp10309_110 () (_ BitVec 64))
(declare-fun temp10309_111 () (_ BitVec 64))
(declare-fun temp10309_112 () (_ BitVec 64))
(declare-fun temp10309_113 () (_ BitVec 64))
(declare-fun temp10309_114 () (_ BitVec 64))
(declare-fun temp10309_115 () (_ BitVec 64))
(declare-fun temp10309_116 () (_ BitVec 64))
(declare-fun temp10309_117 () (_ BitVec 64))
(declare-fun temp10309_118 () (_ BitVec 64))
(declare-fun temp10309_119 () (_ BitVec 64))
(declare-fun temp10309_120 () (_ BitVec 64))
(declare-fun temp10309_121 () (_ BitVec 64))
(declare-fun temp10309_122 () (_ BitVec 64))
(declare-fun temp10309_123 () (_ BitVec 64))
(declare-fun temp10309_124 () (_ BitVec 64))
(declare-fun temp10309_125 () (_ BitVec 64))
(declare-fun temp10309_126 () (_ BitVec 64))
(declare-fun temp10309_127 () (_ BitVec 64))
(declare-fun temp10309_128 () (_ BitVec 64))
(declare-fun temp10309_129 () (_ BitVec 64))
(declare-fun temp10309_130 () (_ BitVec 64))
(declare-fun temp10309_131 () (_ BitVec 64))
(declare-fun temp10309_132 () (_ BitVec 64))
(declare-fun temp10309_133 () (_ BitVec 64))
(declare-fun temp10309_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10309_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10309_136 () (_ BitVec 64))
(declare-fun temp10309_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10309_138 () (_ BitVec 64))
(declare-fun temp10309_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10309_140 () (_ BitVec 64))
(declare-fun temp10309_141 () (_ BitVec 64))
(declare-fun temp10309_142 () (_ BitVec 64))
(declare-fun temp10309_143 () (_ BitVec 64))
(declare-fun temp10309_144 () (_ BitVec 64))
(declare-fun temp10309_145 () (_ BitVec 64))
(declare-fun temp10309_146 () (_ BitVec 64))
(declare-fun temp10309_147 () (_ BitVec 64))
(declare-fun temp10309_148 () (_ BitVec 64))
(declare-fun temp10309_149 () (_ BitVec 64))
(declare-fun temp10309_150 () (_ BitVec 64))
(declare-fun temp10309_151 () (_ BitVec 64))
(declare-fun temp10309_152 () (_ BitVec 64))
(declare-fun temp10309_153 () (_ BitVec 64))
(declare-fun temp10309_154 () (_ BitVec 64))
(declare-fun temp10309_155 () (_ BitVec 64))
(declare-fun temp10309_157 () (_ BitVec 64))
(declare-fun temp10309_158 () (_ BitVec 64))
(declare-fun temp10309_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10309_159 () (_ BitVec 64))
(declare-fun temp10309_160 () (_ BitVec 64))
(declare-fun temp10309_162 () (_ BitVec 64))
(declare-fun temp10309_163 () (_ BitVec 64))
(declare-fun temp10309_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10309_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10309_165 () (_ BitVec 64))
(declare-fun temp10309_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10309_167 () (_ BitVec 64))
(declare-fun temp10309_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10309_169 () (_ BitVec 64))
(declare-fun temp10309_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10309_171 () (_ BitVec 64))
(declare-fun temp10309_172 () (_ BitVec 64))
(declare-fun temp10309_173 () (_ BitVec 64))
(declare-fun temp10309_174 () (_ BitVec 64))
(declare-fun temp10309_175 () (_ BitVec 64))
(declare-fun temp10309_176 () (_ BitVec 64))
(declare-fun temp10309_177 () (_ BitVec 64))
(declare-fun temp10309_178 () (_ BitVec 64))
(declare-fun temp10309_179 () (_ BitVec 64))
(declare-fun temp10309_180 () (_ BitVec 64))
(declare-fun temp10309_181 () (_ BitVec 64))
(declare-fun temp10309_182 () (_ BitVec 64))
(declare-fun temp10309_183 () (_ BitVec 64))
(declare-fun temp10309_184 () (_ BitVec 64))
(declare-fun temp10309_185 () (_ BitVec 64))
(declare-fun temp10309_186 () (_ BitVec 64))
(declare-fun temp10309_187 () (_ BitVec 64))
(declare-fun temp10309_188 () (_ BitVec 64))
(declare-fun temp10309_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10309_190 () (_ BitVec 64))
(declare-fun temp10309_192 () (_ BitVec 64))
(declare-fun temp10309_193 () (_ BitVec 64))
(declare-fun temp10309_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10309_194 () (_ BitVec 64))
(declare-fun temp10309_195 () (_ BitVec 64))
(declare-fun temp10309_197 () (_ BitVec 64))
(declare-fun temp10309_198 () (_ BitVec 64))
(declare-fun temp10309_196 () (_ BitVec 64))
(declare-fun temp10309_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10309_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10309_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10309_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10309_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10309_204 () (_ BitVec 64))
(declare-fun temp10309_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10309_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10309_207 () (_ BitVec 64))
(declare-fun temp10309_208 () (_ BitVec 64))
(declare-fun temp10309_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10309_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10309_211 () (_ BitVec 64))
(declare-fun temp10309_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10309_213 () (_ BitVec 64))
(declare-fun temp10309_214 () (_ BitVec 64))
(declare-fun temp10309_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10309_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10309_217 () (_ BitVec 64))
(declare-fun temp10309_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10309_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10309_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp10309_221 () (_ BitVec 64))
(assert (= temp10309_1 #x0000000000000001))
(assert (= var77203 temp10309_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10309_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10309_2)))
(assert (= temp10309_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10309_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10309_4 #x0000000000000000))
(assert (= var210941 temp10309_4))
(assert (= temp10309_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10309_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10309_6 #x0000000000000000))
(assert (= var210986 temp10309_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10309_7 #x0000000000000000))
(assert (= temp10309_8 temp10309_7))
(assert (= temp10309_9 (select ARGNAME_padding_NAMEEND_VAL temp10309_8)))
(assert (= temp10309_10 #x0000000000000001))
(assert (= temp10309_11 temp10309_10))
(assert (= temp10309_12 (select ARGNAME_padding_NAMEEND_VAL temp10309_11)))
(assert (= temp10309_13 #x0000000000000002))
(assert (= temp10309_14 temp10309_13))
(assert (= temp10309_15 (select ARGNAME_padding_NAMEEND_VAL temp10309_14)))
(assert (= temp10309_16 #x0000000000000003))
(assert (= temp10309_17 temp10309_16))
(assert (= temp10309_18 (select ARGNAME_padding_NAMEEND_VAL temp10309_17)))
(assert (= temp10309_19 #x0000000000000004))
(assert (= temp10309_20 temp10309_19))
(assert (= temp10309_21 (select ARGNAME_padding_NAMEEND_VAL temp10309_20)))
(assert (= temp10309_22 #x0000000000000005))
(assert (= temp10309_23 temp10309_22))
(assert (= temp10309_24 (select ARGNAME_padding_NAMEEND_VAL temp10309_23)))
(assert (= temp10309_25 #x0000000000000000))
(assert (= temp10309_26 #x0000000000000000))
(assert (= temp10309_27 temp10309_26))
(assert (= temp10309_28 (select ARGNAME_padding_NAMEEND_VAL temp10309_27)))
(assert (= temp10309_29 #x0000000000000000))
(assert (= temp10309_30 #x0000000000000001))
(assert (= temp10309_31 temp10309_30))
(assert (= temp10309_32 (select ARGNAME_padding_NAMEEND_VAL temp10309_31)))
(assert (= temp10309_33 #x0000000000000000))
(assert (= temp10309_34 #x0000000000000002))
(assert (= temp10309_35 temp10309_34))
(assert (= temp10309_36 (select ARGNAME_padding_NAMEEND_VAL temp10309_35)))
(assert (= temp10309_37 #x0000000000000000))
(assert (= temp10309_38 #x0000000000000003))
(assert (= temp10309_39 temp10309_38))
(assert (= temp10309_40 (select ARGNAME_padding_NAMEEND_VAL temp10309_39)))
(assert (= temp10309_41 #x0000000000000000))
(assert (= temp10309_42 #x0000000000000004))
(assert (= temp10309_43 temp10309_42))
(assert (= temp10309_44 (select ARGNAME_padding_NAMEEND_VAL temp10309_43)))
(assert (= temp10309_45 #x0000000000000000))
(assert (= temp10309_46 #x0000000000000005))
(assert (= temp10309_47 temp10309_46))
(assert (= temp10309_48 (select ARGNAME_padding_NAMEEND_VAL temp10309_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10309_28 temp10309_25)
             (bvslt temp10309_32 temp10309_29)
             (bvslt temp10309_36 temp10309_33)
             (bvslt temp10309_40 temp10309_37)
             (bvslt temp10309_44 temp10309_41)
             (bvslt temp10309_48 temp10309_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10309_49 #x0000000000000000))
(assert (= var1191714 temp10309_49))
(assert (= temp10309_50 #x0000000000000000))
(assert (= temp10309_51 temp10309_50))
(assert (= temp10309_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10309_51)))
(assert (= temp10309_53 #x0000000000000001))
(assert (= temp10309_54 temp10309_53))
(assert (= temp10309_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10309_54)))
(assert (= temp10309_56 #x0000000000000002))
(assert (= temp10309_57 temp10309_56))
(assert (= temp10309_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10309_57)))
(assert (= temp10309_59 #x0000000000000003))
(assert (= temp10309_60 temp10309_59))
(assert (= temp10309_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10309_60)))
(assert (= temp10309_62 #x0000000000000004))
(assert (= temp10309_63 temp10309_62))
(assert (= temp10309_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10309_63)))
(assert (= temp10309_65 #x0000000000000005))
(assert (= temp10309_66 temp10309_65))
(assert (= temp10309_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10309_66)))
(assert (= temp10309_68 #x0000000000000000))
(assert (= temp10309_69 #x0000000000000000))
(assert (= temp10309_70 temp10309_69))
(assert (= temp10309_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10309_70)))
(assert (= temp10309_72 #x0000000000000000))
(assert (= temp10309_73 #x0000000000000001))
(assert (= temp10309_74 temp10309_73))
(assert (= temp10309_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10309_74)))
(assert (= temp10309_76 #x0000000000000000))
(assert (= temp10309_77 #x0000000000000002))
(assert (= temp10309_78 temp10309_77))
(assert (= temp10309_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10309_78)))
(assert (= temp10309_80 #x0000000000000000))
(assert (= temp10309_81 #x0000000000000003))
(assert (= temp10309_82 temp10309_81))
(assert (= temp10309_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10309_82)))
(assert (= temp10309_84 #x0000000000000000))
(assert (= temp10309_85 #x0000000000000004))
(assert (= temp10309_86 temp10309_85))
(assert (= temp10309_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10309_86)))
(assert (= temp10309_88 #x0000000000000000))
(assert (= temp10309_89 #x0000000000000005))
(assert (= temp10309_90 temp10309_89))
(assert (= temp10309_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10309_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10309_71 temp10309_68)
             (bvslt temp10309_75 temp10309_72)
             (bvslt temp10309_79 temp10309_76)
             (bvslt temp10309_83 temp10309_80)
             (bvslt temp10309_87 temp10309_84)
             (bvslt temp10309_91 temp10309_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10309_92 #x0000000000000000))
(assert (= var1191725 temp10309_92))
(assert (= temp10309_93 #x0000000000000000))
(assert (= temp10309_94 temp10309_93))
(assert (= temp10309_95 (select ARGNAME_stride_NAMEEND_VAL temp10309_94)))
(assert (= temp10309_96 #x0000000000000001))
(assert (= temp10309_97 temp10309_96))
(assert (= temp10309_98 (select ARGNAME_stride_NAMEEND_VAL temp10309_97)))
(assert (= temp10309_99 #x0000000000000002))
(assert (= temp10309_100 temp10309_99))
(assert (= temp10309_101 (select ARGNAME_stride_NAMEEND_VAL temp10309_100)))
(assert (= temp10309_102 #x0000000000000003))
(assert (= temp10309_103 temp10309_102))
(assert (= temp10309_104 (select ARGNAME_stride_NAMEEND_VAL temp10309_103)))
(assert (= temp10309_105 #x0000000000000004))
(assert (= temp10309_106 temp10309_105))
(assert (= temp10309_107 (select ARGNAME_stride_NAMEEND_VAL temp10309_106)))
(assert (= temp10309_108 #x0000000000000005))
(assert (= temp10309_109 temp10309_108))
(assert (= temp10309_110 (select ARGNAME_stride_NAMEEND_VAL temp10309_109)))
(assert (= temp10309_111 #x0000000000000000))
(assert (= temp10309_112 #x0000000000000000))
(assert (= temp10309_113 temp10309_112))
(assert (= temp10309_114 (select ARGNAME_stride_NAMEEND_VAL temp10309_113)))
(assert (= temp10309_115 #x0000000000000000))
(assert (= temp10309_116 #x0000000000000001))
(assert (= temp10309_117 temp10309_116))
(assert (= temp10309_118 (select ARGNAME_stride_NAMEEND_VAL temp10309_117)))
(assert (= temp10309_119 #x0000000000000000))
(assert (= temp10309_120 #x0000000000000002))
(assert (= temp10309_121 temp10309_120))
(assert (= temp10309_122 (select ARGNAME_stride_NAMEEND_VAL temp10309_121)))
(assert (= temp10309_123 #x0000000000000000))
(assert (= temp10309_124 #x0000000000000003))
(assert (= temp10309_125 temp10309_124))
(assert (= temp10309_126 (select ARGNAME_stride_NAMEEND_VAL temp10309_125)))
(assert (= temp10309_127 #x0000000000000000))
(assert (= temp10309_128 #x0000000000000004))
(assert (= temp10309_129 temp10309_128))
(assert (= temp10309_130 (select ARGNAME_stride_NAMEEND_VAL temp10309_129)))
(assert (= temp10309_131 #x0000000000000000))
(assert (= temp10309_132 #x0000000000000005))
(assert (= temp10309_133 temp10309_132))
(assert (= temp10309_134 (select ARGNAME_stride_NAMEEND_VAL temp10309_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10309_114 temp10309_111)
             (bvsle temp10309_118 temp10309_115)
             (bvsle temp10309_122 temp10309_119)
             (bvsle temp10309_126 temp10309_123)
             (bvsle temp10309_130 temp10309_127)
             (bvsle temp10309_134 temp10309_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10309_135 #x0000000000000000))
(assert (= var1191735 temp10309_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10309_136 #x0000000000000001))
(assert (= var1191747 temp10309_136))
(assert (= temp10309_137 #x0000000000000000))
(assert (= var1179826 temp10309_137))
(assert (= temp10309_138 #x0000000000000000))
(assert (= temp10309_139 temp10309_138))
(assert (= temp10309_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10309_139)))
(assert (= temp10309_141 #x0000000000000001))
(assert (= temp10309_142 temp10309_141))
(assert (= temp10309_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10309_142)))
(assert (= temp10309_144 #x0000000000000002))
(assert (= temp10309_145 temp10309_144))
(assert (= temp10309_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10309_145)))
(assert (= temp10309_147 #x0000000000000003))
(assert (= temp10309_148 temp10309_147))
(assert (= temp10309_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10309_148)))
(assert (= temp10309_150 #x0000000000000004))
(assert (= temp10309_151 temp10309_150))
(assert (= temp10309_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10309_151)))
(assert (= temp10309_153 #x0000000000000005))
(assert (= temp10309_154 temp10309_153))
(assert (= temp10309_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10309_154)))
(assert (= temp10309_157 var1179826))
(assert (= temp10309_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10309_157)))
(assert (= temp10309_156 temp10309_158))
(assert (= var1191780
   (ite (bvslt temp10309_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10309_159 #x0000000000000000))
(assert (= var1191780 temp10309_159))
(assert (= temp10309_160 #x0000000000000000))
(assert (= var1179826 temp10309_160))
(assert (= temp10309_162 var1179826))
(assert (= temp10309_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10309_162)))
(assert (= temp10309_161 temp10309_163))
(assert (= var1191802 (bvsmod temp10309_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10309_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10309_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10309_165 #x0000000000000001))
(assert (= var1191803 temp10309_165))
(assert (= temp10309_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10309_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10309_167 #x0000000000000001))
(assert (= var1191823 temp10309_167))
(assert (= temp10309_168 #x0000000000000001))
(assert (= var1180714 temp10309_168))
(assert (= temp10309_169 #x0000000000000000))
(assert (= temp10309_170 temp10309_169))
(assert (= temp10309_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10309_170)))
(assert (= temp10309_172 #x0000000000000001))
(assert (= temp10309_173 temp10309_172))
(assert (= temp10309_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10309_173)))
(assert (= temp10309_175 #x0000000000000002))
(assert (= temp10309_176 temp10309_175))
(assert (= temp10309_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10309_176)))
(assert (= temp10309_178 #x0000000000000003))
(assert (= temp10309_179 temp10309_178))
(assert (= temp10309_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10309_179)))
(assert (= temp10309_181 #x0000000000000004))
(assert (= temp10309_182 temp10309_181))
(assert (= temp10309_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10309_182)))
(assert (= temp10309_184 #x0000000000000005))
(assert (= temp10309_185 temp10309_184))
(assert (= temp10309_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10309_185)))
(assert (= temp10309_187 #x0000000000000000))
(assert (= temp10309_188
   (ite (bvslt var1180714 temp10309_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10309_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10309_188)))
(assert (= var1191831 temp10309_189))
(assert (bvslt (ite (bvslt var1180714 temp10309_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10309_190 #x0000000000000001))
(assert (= var1180714 temp10309_190))
(assert (= temp10309_192 var1180714))
(assert (= temp10309_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10309_192)))
(assert (= temp10309_191 temp10309_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10309_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10309_194 #x0000000000000001))
(assert (= var1191836 temp10309_194))
(assert (= temp10309_195 #x0000000000000000))
(assert (= var1179826 temp10309_195))
(assert (= temp10309_197 var1179826))
(assert (= temp10309_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10309_197)))
(assert (= temp10309_196 temp10309_198))
(assert (= temp10309_199 #x0000000000000002))
(assert (= var1586025 temp10309_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10309_200 #x0000000000000001))
(assert (= var1191993 temp10309_200))
(assert (= temp10309_201 #x0000000000000001))
(assert (= var2700303 temp10309_201))
(assert (= temp10309_202 #x0000000000000001))
(assert (= var2962447 temp10309_202))
(assert (= temp10309_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10309_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10309_204 #x0000000000000001))
(assert (= var211058 temp10309_204))
(assert (= temp10309_205 #x0000000000000001))
(assert (= var211188 temp10309_205))
(assert (= var3879401 var211188))
(assert (= temp10309_206 #x0000000000000000))
(assert (= var3866802 temp10309_206))
(assert (= temp10309_207 #x0000000000000000))
(assert (= temp10309_208
   (ite (bvslt var3866802 temp10309_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10309_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10309_208)))
(assert (= var3879420 temp10309_209))
(assert (bvslt (ite (bvslt var3866802 temp10309_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10309_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10309_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10309_211 #x0000000000000000))
(assert (= var3879421 temp10309_211))
(assert (= temp10309_212 #x0000000000000001))
(assert (= var3867690 temp10309_212))
(assert (= temp10309_213 #x0000000000000000))
(assert (= temp10309_214
   (ite (bvslt var3867690 temp10309_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10309_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10309_214)))
(assert (= var3879423 temp10309_215))
(assert (bvslt (ite (bvslt var3867690 temp10309_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10309_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10309_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10309_217 #x0000000000000001))
(assert (= var3879424 temp10309_217))
(assert (= temp10309_218 #x0000000000000000))
(assert (= var4079423 temp10309_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10309_219 #x0000000000000002))
(assert (= var4208259 temp10309_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10309_220 #x0000000000000000))
(assert (= var4273820 temp10309_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp10309_221 #x0000000000000001))
(assert (= var211058 temp10309_221))
(model-add temp10309_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10309_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10309_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10309_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






