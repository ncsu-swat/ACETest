(declare-fun temp865_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp865_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp865_3 () (_ BitVec 64))
(declare-fun temp865_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp865_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp865_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp865_7 () (_ BitVec 64))
(declare-fun temp865_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp865_9 () (_ BitVec 64))
(declare-fun temp865_10 () (_ BitVec 64))
(declare-fun temp865_11 () (_ BitVec 64))
(declare-fun temp865_12 () (_ BitVec 64))
(declare-fun temp865_13 () (_ BitVec 64))
(declare-fun temp865_14 () (_ BitVec 64))
(declare-fun temp865_15 () (_ BitVec 64))
(declare-fun temp865_16 () (_ BitVec 64))
(declare-fun temp865_17 () (_ BitVec 64))
(declare-fun temp865_18 () (_ BitVec 64))
(declare-fun temp865_19 () (_ BitVec 64))
(declare-fun temp865_20 () (_ BitVec 64))
(declare-fun temp865_21 () (_ BitVec 64))
(declare-fun temp865_22 () (_ BitVec 64))
(declare-fun temp865_23 () (_ BitVec 64))
(declare-fun temp865_24 () (_ BitVec 64))
(declare-fun temp865_25 () (_ BitVec 64))
(declare-fun temp865_26 () (_ BitVec 64))
(declare-fun temp865_27 () (_ BitVec 64))
(declare-fun temp865_28 () (_ BitVec 64))
(declare-fun temp865_29 () (_ BitVec 64))
(declare-fun temp865_30 () (_ BitVec 64))
(declare-fun temp865_31 () (_ BitVec 64))
(declare-fun temp865_32 () (_ BitVec 64))
(declare-fun temp865_33 () (_ BitVec 64))
(declare-fun temp865_34 () (_ BitVec 64))
(declare-fun temp865_35 () (_ BitVec 64))
(declare-fun temp865_36 () (_ BitVec 64))
(declare-fun temp865_37 () (_ BitVec 64))
(declare-fun temp865_38 () (_ BitVec 64))
(declare-fun temp865_39 () (_ BitVec 64))
(declare-fun temp865_40 () (_ BitVec 64))
(declare-fun temp865_41 () (_ BitVec 64))
(declare-fun temp865_42 () (_ BitVec 64))
(declare-fun temp865_43 () (_ BitVec 64))
(declare-fun temp865_44 () (_ BitVec 64))
(declare-fun temp865_45 () (_ BitVec 64))
(declare-fun temp865_46 () (_ BitVec 64))
(declare-fun temp865_47 () (_ BitVec 64))
(declare-fun temp865_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp865_49 () (_ BitVec 64))
(declare-fun temp865_50 () (_ BitVec 64))
(declare-fun temp865_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp865_52 () (_ BitVec 64))
(declare-fun temp865_53 () (_ BitVec 64))
(declare-fun temp865_54 () (_ BitVec 64))
(declare-fun temp865_55 () (_ BitVec 64))
(declare-fun temp865_56 () (_ BitVec 64))
(declare-fun temp865_57 () (_ BitVec 64))
(declare-fun temp865_58 () (_ BitVec 64))
(declare-fun temp865_59 () (_ BitVec 64))
(declare-fun temp865_60 () (_ BitVec 64))
(declare-fun temp865_61 () (_ BitVec 64))
(declare-fun temp865_62 () (_ BitVec 64))
(declare-fun temp865_63 () (_ BitVec 64))
(declare-fun temp865_64 () (_ BitVec 64))
(declare-fun temp865_65 () (_ BitVec 64))
(declare-fun temp865_66 () (_ BitVec 64))
(declare-fun temp865_67 () (_ BitVec 64))
(declare-fun temp865_68 () (_ BitVec 64))
(declare-fun temp865_69 () (_ BitVec 64))
(declare-fun temp865_70 () (_ BitVec 64))
(declare-fun temp865_71 () (_ BitVec 64))
(declare-fun temp865_72 () (_ BitVec 64))
(declare-fun temp865_73 () (_ BitVec 64))
(declare-fun temp865_74 () (_ BitVec 64))
(declare-fun temp865_75 () (_ BitVec 64))
(declare-fun temp865_76 () (_ BitVec 64))
(declare-fun temp865_77 () (_ BitVec 64))
(declare-fun temp865_78 () (_ BitVec 64))
(declare-fun temp865_79 () (_ BitVec 64))
(declare-fun temp865_80 () (_ BitVec 64))
(declare-fun temp865_81 () (_ BitVec 64))
(declare-fun temp865_82 () (_ BitVec 64))
(declare-fun temp865_83 () (_ BitVec 64))
(declare-fun temp865_84 () (_ BitVec 64))
(declare-fun temp865_85 () (_ BitVec 64))
(declare-fun temp865_86 () (_ BitVec 64))
(declare-fun temp865_87 () (_ BitVec 64))
(declare-fun temp865_88 () (_ BitVec 64))
(declare-fun temp865_89 () (_ BitVec 64))
(declare-fun temp865_90 () (_ BitVec 64))
(declare-fun temp865_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp865_92 () (_ BitVec 64))
(declare-fun temp865_93 () (_ BitVec 64))
(declare-fun temp865_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp865_95 () (_ BitVec 64))
(declare-fun temp865_96 () (_ BitVec 64))
(declare-fun temp865_97 () (_ BitVec 64))
(declare-fun temp865_98 () (_ BitVec 64))
(declare-fun temp865_99 () (_ BitVec 64))
(declare-fun temp865_100 () (_ BitVec 64))
(declare-fun temp865_101 () (_ BitVec 64))
(declare-fun temp865_102 () (_ BitVec 64))
(declare-fun temp865_103 () (_ BitVec 64))
(declare-fun temp865_104 () (_ BitVec 64))
(declare-fun temp865_105 () (_ BitVec 64))
(declare-fun temp865_106 () (_ BitVec 64))
(declare-fun temp865_107 () (_ BitVec 64))
(declare-fun temp865_108 () (_ BitVec 64))
(declare-fun temp865_109 () (_ BitVec 64))
(declare-fun temp865_110 () (_ BitVec 64))
(declare-fun temp865_111 () (_ BitVec 64))
(declare-fun temp865_112 () (_ BitVec 64))
(declare-fun temp865_113 () (_ BitVec 64))
(declare-fun temp865_114 () (_ BitVec 64))
(declare-fun temp865_115 () (_ BitVec 64))
(declare-fun temp865_116 () (_ BitVec 64))
(declare-fun temp865_117 () (_ BitVec 64))
(declare-fun temp865_118 () (_ BitVec 64))
(declare-fun temp865_119 () (_ BitVec 64))
(declare-fun temp865_120 () (_ BitVec 64))
(declare-fun temp865_121 () (_ BitVec 64))
(declare-fun temp865_122 () (_ BitVec 64))
(declare-fun temp865_123 () (_ BitVec 64))
(declare-fun temp865_124 () (_ BitVec 64))
(declare-fun temp865_125 () (_ BitVec 64))
(declare-fun temp865_126 () (_ BitVec 64))
(declare-fun temp865_127 () (_ BitVec 64))
(declare-fun temp865_128 () (_ BitVec 64))
(declare-fun temp865_129 () (_ BitVec 64))
(declare-fun temp865_130 () (_ BitVec 64))
(declare-fun temp865_131 () (_ BitVec 64))
(declare-fun temp865_132 () (_ BitVec 64))
(declare-fun temp865_133 () (_ BitVec 64))
(declare-fun temp865_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp865_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp865_136 () (_ BitVec 64))
(declare-fun temp865_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp865_138 () (_ BitVec 64))
(declare-fun temp865_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp865_140 () (_ BitVec 64))
(declare-fun temp865_141 () (_ BitVec 64))
(declare-fun temp865_142 () (_ BitVec 64))
(declare-fun temp865_143 () (_ BitVec 64))
(declare-fun temp865_144 () (_ BitVec 64))
(declare-fun temp865_145 () (_ BitVec 64))
(declare-fun temp865_146 () (_ BitVec 64))
(declare-fun temp865_147 () (_ BitVec 64))
(declare-fun temp865_148 () (_ BitVec 64))
(declare-fun temp865_149 () (_ BitVec 64))
(declare-fun temp865_150 () (_ BitVec 64))
(declare-fun temp865_151 () (_ BitVec 64))
(declare-fun temp865_152 () (_ BitVec 64))
(declare-fun temp865_153 () (_ BitVec 64))
(declare-fun temp865_154 () (_ BitVec 64))
(declare-fun temp865_155 () (_ BitVec 64))
(declare-fun temp865_157 () (_ BitVec 64))
(declare-fun temp865_158 () (_ BitVec 64))
(declare-fun temp865_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp865_159 () (_ BitVec 64))
(declare-fun temp865_160 () (_ BitVec 64))
(declare-fun temp865_162 () (_ BitVec 64))
(declare-fun temp865_163 () (_ BitVec 64))
(declare-fun temp865_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp865_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp865_165 () (_ BitVec 64))
(declare-fun temp865_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp865_167 () (_ BitVec 64))
(declare-fun temp865_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp865_169 () (_ BitVec 64))
(declare-fun temp865_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp865_171 () (_ BitVec 64))
(declare-fun temp865_172 () (_ BitVec 64))
(declare-fun temp865_173 () (_ BitVec 64))
(declare-fun temp865_174 () (_ BitVec 64))
(declare-fun temp865_175 () (_ BitVec 64))
(declare-fun temp865_176 () (_ BitVec 64))
(declare-fun temp865_177 () (_ BitVec 64))
(declare-fun temp865_178 () (_ BitVec 64))
(declare-fun temp865_179 () (_ BitVec 64))
(declare-fun temp865_180 () (_ BitVec 64))
(declare-fun temp865_181 () (_ BitVec 64))
(declare-fun temp865_182 () (_ BitVec 64))
(declare-fun temp865_183 () (_ BitVec 64))
(declare-fun temp865_184 () (_ BitVec 64))
(declare-fun temp865_185 () (_ BitVec 64))
(declare-fun temp865_186 () (_ BitVec 64))
(declare-fun temp865_187 () (_ BitVec 64))
(declare-fun temp865_188 () (_ BitVec 64))
(declare-fun temp865_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp865_190 () (_ BitVec 64))
(declare-fun temp865_192 () (_ BitVec 64))
(declare-fun temp865_193 () (_ BitVec 64))
(declare-fun temp865_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp865_194 () (_ BitVec 64))
(declare-fun temp865_195 () (_ BitVec 64))
(declare-fun temp865_197 () (_ BitVec 64))
(declare-fun temp865_198 () (_ BitVec 64))
(declare-fun temp865_196 () (_ BitVec 64))
(declare-fun temp865_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp865_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp865_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp865_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp865_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp865_204 () (_ BitVec 64))
(declare-fun temp865_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp865_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp865_207 () (_ BitVec 64))
(declare-fun temp865_208 () (_ BitVec 64))
(declare-fun temp865_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp865_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp865_211 () (_ BitVec 64))
(declare-fun temp865_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp865_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp865_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp865_215 () (_ BitVec 64))
(assert (= temp865_1 #x0000000000000001))
(assert (= var77203 temp865_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp865_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp865_2)))
(assert (= temp865_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp865_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp865_4 #x0000000000000000))
(assert (= var210941 temp865_4))
(assert (= temp865_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp865_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp865_6 #x0000000000000000))
(assert (= var210986 temp865_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp865_7 #x0000000000000000))
(assert (= temp865_8 temp865_7))
(assert (= temp865_9 (select ARGNAME_padding_NAMEEND_VAL temp865_8)))
(assert (= temp865_10 #x0000000000000001))
(assert (= temp865_11 temp865_10))
(assert (= temp865_12 (select ARGNAME_padding_NAMEEND_VAL temp865_11)))
(assert (= temp865_13 #x0000000000000002))
(assert (= temp865_14 temp865_13))
(assert (= temp865_15 (select ARGNAME_padding_NAMEEND_VAL temp865_14)))
(assert (= temp865_16 #x0000000000000003))
(assert (= temp865_17 temp865_16))
(assert (= temp865_18 (select ARGNAME_padding_NAMEEND_VAL temp865_17)))
(assert (= temp865_19 #x0000000000000004))
(assert (= temp865_20 temp865_19))
(assert (= temp865_21 (select ARGNAME_padding_NAMEEND_VAL temp865_20)))
(assert (= temp865_22 #x0000000000000005))
(assert (= temp865_23 temp865_22))
(assert (= temp865_24 (select ARGNAME_padding_NAMEEND_VAL temp865_23)))
(assert (= temp865_25 #x0000000000000000))
(assert (= temp865_26 #x0000000000000000))
(assert (= temp865_27 temp865_26))
(assert (= temp865_28 (select ARGNAME_padding_NAMEEND_VAL temp865_27)))
(assert (= temp865_29 #x0000000000000000))
(assert (= temp865_30 #x0000000000000001))
(assert (= temp865_31 temp865_30))
(assert (= temp865_32 (select ARGNAME_padding_NAMEEND_VAL temp865_31)))
(assert (= temp865_33 #x0000000000000000))
(assert (= temp865_34 #x0000000000000002))
(assert (= temp865_35 temp865_34))
(assert (= temp865_36 (select ARGNAME_padding_NAMEEND_VAL temp865_35)))
(assert (= temp865_37 #x0000000000000000))
(assert (= temp865_38 #x0000000000000003))
(assert (= temp865_39 temp865_38))
(assert (= temp865_40 (select ARGNAME_padding_NAMEEND_VAL temp865_39)))
(assert (= temp865_41 #x0000000000000000))
(assert (= temp865_42 #x0000000000000004))
(assert (= temp865_43 temp865_42))
(assert (= temp865_44 (select ARGNAME_padding_NAMEEND_VAL temp865_43)))
(assert (= temp865_45 #x0000000000000000))
(assert (= temp865_46 #x0000000000000005))
(assert (= temp865_47 temp865_46))
(assert (= temp865_48 (select ARGNAME_padding_NAMEEND_VAL temp865_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp865_28 temp865_25)
             (bvslt temp865_32 temp865_29)
             (bvslt temp865_36 temp865_33)
             (bvslt temp865_40 temp865_37)
             (bvslt temp865_44 temp865_41)
             (bvslt temp865_48 temp865_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp865_49 #x0000000000000000))
(assert (= var1191714 temp865_49))
(assert (= temp865_50 #x0000000000000000))
(assert (= temp865_51 temp865_50))
(assert (= temp865_52 (select ARGNAME_output_padding_NAMEEND_VAL temp865_51)))
(assert (= temp865_53 #x0000000000000001))
(assert (= temp865_54 temp865_53))
(assert (= temp865_55 (select ARGNAME_output_padding_NAMEEND_VAL temp865_54)))
(assert (= temp865_56 #x0000000000000002))
(assert (= temp865_57 temp865_56))
(assert (= temp865_58 (select ARGNAME_output_padding_NAMEEND_VAL temp865_57)))
(assert (= temp865_59 #x0000000000000003))
(assert (= temp865_60 temp865_59))
(assert (= temp865_61 (select ARGNAME_output_padding_NAMEEND_VAL temp865_60)))
(assert (= temp865_62 #x0000000000000004))
(assert (= temp865_63 temp865_62))
(assert (= temp865_64 (select ARGNAME_output_padding_NAMEEND_VAL temp865_63)))
(assert (= temp865_65 #x0000000000000005))
(assert (= temp865_66 temp865_65))
(assert (= temp865_67 (select ARGNAME_output_padding_NAMEEND_VAL temp865_66)))
(assert (= temp865_68 #x0000000000000000))
(assert (= temp865_69 #x0000000000000000))
(assert (= temp865_70 temp865_69))
(assert (= temp865_71 (select ARGNAME_output_padding_NAMEEND_VAL temp865_70)))
(assert (= temp865_72 #x0000000000000000))
(assert (= temp865_73 #x0000000000000001))
(assert (= temp865_74 temp865_73))
(assert (= temp865_75 (select ARGNAME_output_padding_NAMEEND_VAL temp865_74)))
(assert (= temp865_76 #x0000000000000000))
(assert (= temp865_77 #x0000000000000002))
(assert (= temp865_78 temp865_77))
(assert (= temp865_79 (select ARGNAME_output_padding_NAMEEND_VAL temp865_78)))
(assert (= temp865_80 #x0000000000000000))
(assert (= temp865_81 #x0000000000000003))
(assert (= temp865_82 temp865_81))
(assert (= temp865_83 (select ARGNAME_output_padding_NAMEEND_VAL temp865_82)))
(assert (= temp865_84 #x0000000000000000))
(assert (= temp865_85 #x0000000000000004))
(assert (= temp865_86 temp865_85))
(assert (= temp865_87 (select ARGNAME_output_padding_NAMEEND_VAL temp865_86)))
(assert (= temp865_88 #x0000000000000000))
(assert (= temp865_89 #x0000000000000005))
(assert (= temp865_90 temp865_89))
(assert (= temp865_91 (select ARGNAME_output_padding_NAMEEND_VAL temp865_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp865_71 temp865_68)
             (bvslt temp865_75 temp865_72)
             (bvslt temp865_79 temp865_76)
             (bvslt temp865_83 temp865_80)
             (bvslt temp865_87 temp865_84)
             (bvslt temp865_91 temp865_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp865_92 #x0000000000000000))
(assert (= var1191725 temp865_92))
(assert (= temp865_93 #x0000000000000000))
(assert (= temp865_94 temp865_93))
(assert (= temp865_95 (select ARGNAME_stride_NAMEEND_VAL temp865_94)))
(assert (= temp865_96 #x0000000000000001))
(assert (= temp865_97 temp865_96))
(assert (= temp865_98 (select ARGNAME_stride_NAMEEND_VAL temp865_97)))
(assert (= temp865_99 #x0000000000000002))
(assert (= temp865_100 temp865_99))
(assert (= temp865_101 (select ARGNAME_stride_NAMEEND_VAL temp865_100)))
(assert (= temp865_102 #x0000000000000003))
(assert (= temp865_103 temp865_102))
(assert (= temp865_104 (select ARGNAME_stride_NAMEEND_VAL temp865_103)))
(assert (= temp865_105 #x0000000000000004))
(assert (= temp865_106 temp865_105))
(assert (= temp865_107 (select ARGNAME_stride_NAMEEND_VAL temp865_106)))
(assert (= temp865_108 #x0000000000000005))
(assert (= temp865_109 temp865_108))
(assert (= temp865_110 (select ARGNAME_stride_NAMEEND_VAL temp865_109)))
(assert (= temp865_111 #x0000000000000000))
(assert (= temp865_112 #x0000000000000000))
(assert (= temp865_113 temp865_112))
(assert (= temp865_114 (select ARGNAME_stride_NAMEEND_VAL temp865_113)))
(assert (= temp865_115 #x0000000000000000))
(assert (= temp865_116 #x0000000000000001))
(assert (= temp865_117 temp865_116))
(assert (= temp865_118 (select ARGNAME_stride_NAMEEND_VAL temp865_117)))
(assert (= temp865_119 #x0000000000000000))
(assert (= temp865_120 #x0000000000000002))
(assert (= temp865_121 temp865_120))
(assert (= temp865_122 (select ARGNAME_stride_NAMEEND_VAL temp865_121)))
(assert (= temp865_123 #x0000000000000000))
(assert (= temp865_124 #x0000000000000003))
(assert (= temp865_125 temp865_124))
(assert (= temp865_126 (select ARGNAME_stride_NAMEEND_VAL temp865_125)))
(assert (= temp865_127 #x0000000000000000))
(assert (= temp865_128 #x0000000000000004))
(assert (= temp865_129 temp865_128))
(assert (= temp865_130 (select ARGNAME_stride_NAMEEND_VAL temp865_129)))
(assert (= temp865_131 #x0000000000000000))
(assert (= temp865_132 #x0000000000000005))
(assert (= temp865_133 temp865_132))
(assert (= temp865_134 (select ARGNAME_stride_NAMEEND_VAL temp865_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp865_114 temp865_111)
             (bvsle temp865_118 temp865_115)
             (bvsle temp865_122 temp865_119)
             (bvsle temp865_126 temp865_123)
             (bvsle temp865_130 temp865_127)
             (bvsle temp865_134 temp865_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp865_135 #x0000000000000000))
(assert (= var1191735 temp865_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp865_136 #x0000000000000001))
(assert (= var1191747 temp865_136))
(assert (= temp865_137 #x0000000000000000))
(assert (= var1179826 temp865_137))
(assert (= temp865_138 #x0000000000000000))
(assert (= temp865_139 temp865_138))
(assert (= temp865_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp865_139)))
(assert (= temp865_141 #x0000000000000001))
(assert (= temp865_142 temp865_141))
(assert (= temp865_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp865_142)))
(assert (= temp865_144 #x0000000000000002))
(assert (= temp865_145 temp865_144))
(assert (= temp865_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp865_145)))
(assert (= temp865_147 #x0000000000000003))
(assert (= temp865_148 temp865_147))
(assert (= temp865_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp865_148)))
(assert (= temp865_150 #x0000000000000004))
(assert (= temp865_151 temp865_150))
(assert (= temp865_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp865_151)))
(assert (= temp865_153 #x0000000000000005))
(assert (= temp865_154 temp865_153))
(assert (= temp865_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp865_154)))
(assert (= temp865_157 var1179826))
(assert (= temp865_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp865_157)))
(assert (= temp865_156 temp865_158))
(assert (= var1191780
   (ite (bvslt temp865_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp865_159 #x0000000000000000))
(assert (= var1191780 temp865_159))
(assert (= temp865_160 #x0000000000000000))
(assert (= var1179826 temp865_160))
(assert (= temp865_162 var1179826))
(assert (= temp865_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp865_162)))
(assert (= temp865_161 temp865_163))
(assert (= var1191802 (bvsmod temp865_161 ARGNAME_groups_NAMEEND)))
(assert (= temp865_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp865_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp865_165 #x0000000000000001))
(assert (= var1191803 temp865_165))
(assert (= temp865_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp865_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp865_167 #x0000000000000001))
(assert (= var1191823 temp865_167))
(assert (= temp865_168 #x0000000000000001))
(assert (= var1180714 temp865_168))
(assert (= temp865_169 #x0000000000000000))
(assert (= temp865_170 temp865_169))
(assert (= temp865_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp865_170)))
(assert (= temp865_172 #x0000000000000001))
(assert (= temp865_173 temp865_172))
(assert (= temp865_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp865_173)))
(assert (= temp865_175 #x0000000000000002))
(assert (= temp865_176 temp865_175))
(assert (= temp865_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp865_176)))
(assert (= temp865_178 #x0000000000000003))
(assert (= temp865_179 temp865_178))
(assert (= temp865_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp865_179)))
(assert (= temp865_181 #x0000000000000004))
(assert (= temp865_182 temp865_181))
(assert (= temp865_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp865_182)))
(assert (= temp865_184 #x0000000000000005))
(assert (= temp865_185 temp865_184))
(assert (= temp865_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp865_185)))
(assert (= temp865_187 #x0000000000000000))
(assert (= temp865_188
   (ite (bvslt var1180714 temp865_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp865_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp865_188)))
(assert (= var1191831 temp865_189))
(assert (bvslt (ite (bvslt var1180714 temp865_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp865_190 #x0000000000000001))
(assert (= var1180714 temp865_190))
(assert (= temp865_192 var1180714))
(assert (= temp865_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp865_192)))
(assert (= temp865_191 temp865_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp865_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp865_194 #x0000000000000001))
(assert (= var1191836 temp865_194))
(assert (= temp865_195 #x0000000000000000))
(assert (= var1179826 temp865_195))
(assert (= temp865_197 var1179826))
(assert (= temp865_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp865_197)))
(assert (= temp865_196 temp865_198))
(assert (= temp865_199 #x0000000000000002))
(assert (= var1586025 temp865_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp865_200 #x0000000000000001))
(assert (= var1191993 temp865_200))
(assert (= temp865_201 #x0000000000000001))
(assert (= var2700303 temp865_201))
(assert (= temp865_202 #x0000000000000001))
(assert (= var2962447 temp865_202))
(assert (= temp865_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp865_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp865_204 #x0000000000000001))
(assert (= var211058 temp865_204))
(assert (= temp865_205 #x0000000000000001))
(assert (= var211188 temp865_205))
(assert (= var3879401 var211188))
(assert (= temp865_206 #x0000000000000000))
(assert (= var3866802 temp865_206))
(assert (= temp865_207 #x0000000000000000))
(assert (= temp865_208
   (ite (bvslt var3866802 temp865_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp865_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp865_208)))
(assert (= var3879420 temp865_209))
(assert (bvslt (ite (bvslt var3866802 temp865_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp865_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp865_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp865_211 #x0000000000000001))
(assert (= var3879421 temp865_211))
(assert (= temp865_212 #x0000000000000000))
(assert (= var4079423 temp865_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp865_213 #x0000000000000002))
(assert (= var4208259 temp865_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp865_214 #x0000000000000000))
(assert (= var4273820 temp865_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp865_215 #x0000000000000001))
(assert (= var211058 temp865_215))
(model-add temp865_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp865_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp865_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp865_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





