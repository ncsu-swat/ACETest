(declare-fun temp610_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp610_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp610_3 () (_ BitVec 64))
(declare-fun temp610_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp610_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp610_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp610_7 () (_ BitVec 64))
(declare-fun temp610_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp610_9 () (_ BitVec 64))
(declare-fun temp610_10 () (_ BitVec 64))
(declare-fun temp610_11 () (_ BitVec 64))
(declare-fun temp610_12 () (_ BitVec 64))
(declare-fun temp610_13 () (_ BitVec 64))
(declare-fun temp610_14 () (_ BitVec 64))
(declare-fun temp610_15 () (_ BitVec 64))
(declare-fun temp610_16 () (_ BitVec 64))
(declare-fun temp610_17 () (_ BitVec 64))
(declare-fun temp610_18 () (_ BitVec 64))
(declare-fun temp610_19 () (_ BitVec 64))
(declare-fun temp610_20 () (_ BitVec 64))
(declare-fun temp610_21 () (_ BitVec 64))
(declare-fun temp610_22 () (_ BitVec 64))
(declare-fun temp610_23 () (_ BitVec 64))
(declare-fun temp610_24 () (_ BitVec 64))
(declare-fun temp610_25 () (_ BitVec 64))
(declare-fun temp610_26 () (_ BitVec 64))
(declare-fun temp610_27 () (_ BitVec 64))
(declare-fun temp610_28 () (_ BitVec 64))
(declare-fun temp610_29 () (_ BitVec 64))
(declare-fun temp610_30 () (_ BitVec 64))
(declare-fun temp610_31 () (_ BitVec 64))
(declare-fun temp610_32 () (_ BitVec 64))
(declare-fun temp610_33 () (_ BitVec 64))
(declare-fun temp610_34 () (_ BitVec 64))
(declare-fun temp610_35 () (_ BitVec 64))
(declare-fun temp610_36 () (_ BitVec 64))
(declare-fun temp610_37 () (_ BitVec 64))
(declare-fun temp610_38 () (_ BitVec 64))
(declare-fun temp610_39 () (_ BitVec 64))
(declare-fun temp610_40 () (_ BitVec 64))
(declare-fun temp610_41 () (_ BitVec 64))
(declare-fun temp610_42 () (_ BitVec 64))
(declare-fun temp610_43 () (_ BitVec 64))
(declare-fun temp610_44 () (_ BitVec 64))
(declare-fun temp610_45 () (_ BitVec 64))
(declare-fun temp610_46 () (_ BitVec 64))
(declare-fun temp610_47 () (_ BitVec 64))
(declare-fun temp610_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp610_49 () (_ BitVec 64))
(declare-fun temp610_50 () (_ BitVec 64))
(declare-fun temp610_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp610_52 () (_ BitVec 64))
(declare-fun temp610_53 () (_ BitVec 64))
(declare-fun temp610_54 () (_ BitVec 64))
(declare-fun temp610_55 () (_ BitVec 64))
(declare-fun temp610_56 () (_ BitVec 64))
(declare-fun temp610_57 () (_ BitVec 64))
(declare-fun temp610_58 () (_ BitVec 64))
(declare-fun temp610_59 () (_ BitVec 64))
(declare-fun temp610_60 () (_ BitVec 64))
(declare-fun temp610_61 () (_ BitVec 64))
(declare-fun temp610_62 () (_ BitVec 64))
(declare-fun temp610_63 () (_ BitVec 64))
(declare-fun temp610_64 () (_ BitVec 64))
(declare-fun temp610_65 () (_ BitVec 64))
(declare-fun temp610_66 () (_ BitVec 64))
(declare-fun temp610_67 () (_ BitVec 64))
(declare-fun temp610_68 () (_ BitVec 64))
(declare-fun temp610_69 () (_ BitVec 64))
(declare-fun temp610_70 () (_ BitVec 64))
(declare-fun temp610_71 () (_ BitVec 64))
(declare-fun temp610_72 () (_ BitVec 64))
(declare-fun temp610_73 () (_ BitVec 64))
(declare-fun temp610_74 () (_ BitVec 64))
(declare-fun temp610_75 () (_ BitVec 64))
(declare-fun temp610_76 () (_ BitVec 64))
(declare-fun temp610_77 () (_ BitVec 64))
(declare-fun temp610_78 () (_ BitVec 64))
(declare-fun temp610_79 () (_ BitVec 64))
(declare-fun temp610_80 () (_ BitVec 64))
(declare-fun temp610_81 () (_ BitVec 64))
(declare-fun temp610_82 () (_ BitVec 64))
(declare-fun temp610_83 () (_ BitVec 64))
(declare-fun temp610_84 () (_ BitVec 64))
(declare-fun temp610_85 () (_ BitVec 64))
(declare-fun temp610_86 () (_ BitVec 64))
(declare-fun temp610_87 () (_ BitVec 64))
(declare-fun temp610_88 () (_ BitVec 64))
(declare-fun temp610_89 () (_ BitVec 64))
(declare-fun temp610_90 () (_ BitVec 64))
(declare-fun temp610_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp610_92 () (_ BitVec 64))
(declare-fun temp610_93 () (_ BitVec 64))
(declare-fun temp610_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp610_95 () (_ BitVec 64))
(declare-fun temp610_96 () (_ BitVec 64))
(declare-fun temp610_97 () (_ BitVec 64))
(declare-fun temp610_98 () (_ BitVec 64))
(declare-fun temp610_99 () (_ BitVec 64))
(declare-fun temp610_100 () (_ BitVec 64))
(declare-fun temp610_101 () (_ BitVec 64))
(declare-fun temp610_102 () (_ BitVec 64))
(declare-fun temp610_103 () (_ BitVec 64))
(declare-fun temp610_104 () (_ BitVec 64))
(declare-fun temp610_105 () (_ BitVec 64))
(declare-fun temp610_106 () (_ BitVec 64))
(declare-fun temp610_107 () (_ BitVec 64))
(declare-fun temp610_108 () (_ BitVec 64))
(declare-fun temp610_109 () (_ BitVec 64))
(declare-fun temp610_110 () (_ BitVec 64))
(declare-fun temp610_111 () (_ BitVec 64))
(declare-fun temp610_112 () (_ BitVec 64))
(declare-fun temp610_113 () (_ BitVec 64))
(declare-fun temp610_114 () (_ BitVec 64))
(declare-fun temp610_115 () (_ BitVec 64))
(declare-fun temp610_116 () (_ BitVec 64))
(declare-fun temp610_117 () (_ BitVec 64))
(declare-fun temp610_118 () (_ BitVec 64))
(declare-fun temp610_119 () (_ BitVec 64))
(declare-fun temp610_120 () (_ BitVec 64))
(declare-fun temp610_121 () (_ BitVec 64))
(declare-fun temp610_122 () (_ BitVec 64))
(declare-fun temp610_123 () (_ BitVec 64))
(declare-fun temp610_124 () (_ BitVec 64))
(declare-fun temp610_125 () (_ BitVec 64))
(declare-fun temp610_126 () (_ BitVec 64))
(declare-fun temp610_127 () (_ BitVec 64))
(declare-fun temp610_128 () (_ BitVec 64))
(declare-fun temp610_129 () (_ BitVec 64))
(declare-fun temp610_130 () (_ BitVec 64))
(declare-fun temp610_131 () (_ BitVec 64))
(declare-fun temp610_132 () (_ BitVec 64))
(declare-fun temp610_133 () (_ BitVec 64))
(declare-fun temp610_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp610_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp610_136 () (_ BitVec 64))
(declare-fun temp610_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp610_138 () (_ BitVec 64))
(declare-fun temp610_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp610_140 () (_ BitVec 64))
(declare-fun temp610_141 () (_ BitVec 64))
(declare-fun temp610_142 () (_ BitVec 64))
(declare-fun temp610_143 () (_ BitVec 64))
(declare-fun temp610_144 () (_ BitVec 64))
(declare-fun temp610_145 () (_ BitVec 64))
(declare-fun temp610_146 () (_ BitVec 64))
(declare-fun temp610_147 () (_ BitVec 64))
(declare-fun temp610_148 () (_ BitVec 64))
(declare-fun temp610_149 () (_ BitVec 64))
(declare-fun temp610_150 () (_ BitVec 64))
(declare-fun temp610_151 () (_ BitVec 64))
(declare-fun temp610_152 () (_ BitVec 64))
(declare-fun temp610_153 () (_ BitVec 64))
(declare-fun temp610_154 () (_ BitVec 64))
(declare-fun temp610_155 () (_ BitVec 64))
(declare-fun temp610_157 () (_ BitVec 64))
(declare-fun temp610_158 () (_ BitVec 64))
(declare-fun temp610_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp610_159 () (_ BitVec 64))
(declare-fun temp610_160 () (_ BitVec 64))
(declare-fun temp610_162 () (_ BitVec 64))
(declare-fun temp610_163 () (_ BitVec 64))
(declare-fun temp610_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp610_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp610_165 () (_ BitVec 64))
(declare-fun temp610_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp610_167 () (_ BitVec 64))
(declare-fun temp610_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp610_169 () (_ BitVec 64))
(declare-fun temp610_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp610_171 () (_ BitVec 64))
(declare-fun temp610_172 () (_ BitVec 64))
(declare-fun temp610_173 () (_ BitVec 64))
(declare-fun temp610_174 () (_ BitVec 64))
(declare-fun temp610_175 () (_ BitVec 64))
(declare-fun temp610_176 () (_ BitVec 64))
(declare-fun temp610_177 () (_ BitVec 64))
(declare-fun temp610_178 () (_ BitVec 64))
(declare-fun temp610_179 () (_ BitVec 64))
(declare-fun temp610_180 () (_ BitVec 64))
(declare-fun temp610_181 () (_ BitVec 64))
(declare-fun temp610_182 () (_ BitVec 64))
(declare-fun temp610_183 () (_ BitVec 64))
(declare-fun temp610_184 () (_ BitVec 64))
(declare-fun temp610_185 () (_ BitVec 64))
(declare-fun temp610_186 () (_ BitVec 64))
(declare-fun temp610_187 () (_ BitVec 64))
(declare-fun temp610_188 () (_ BitVec 64))
(declare-fun temp610_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp610_190 () (_ BitVec 64))
(declare-fun temp610_192 () (_ BitVec 64))
(declare-fun temp610_193 () (_ BitVec 64))
(declare-fun temp610_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp610_194 () (_ BitVec 64))
(declare-fun temp610_195 () (_ BitVec 64))
(declare-fun temp610_197 () (_ BitVec 64))
(declare-fun temp610_198 () (_ BitVec 64))
(declare-fun temp610_196 () (_ BitVec 64))
(declare-fun temp610_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp610_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp610_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp610_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp610_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp610_204 () (_ BitVec 64))
(declare-fun temp610_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp610_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp610_207 () (_ BitVec 64))
(declare-fun temp610_208 () (_ BitVec 64))
(declare-fun temp610_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp610_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp610_211 () (_ BitVec 64))
(declare-fun temp610_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp610_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp610_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4993424 () (_ BitVec 64))
(declare-fun var211388 () (_ BitVec 64))
(declare-fun temp610_215 () (_ BitVec 64))
(declare-fun var211389 () (_ BitVec 64))
(declare-fun var5914445 () (_ BitVec 64))
(declare-fun temp610_216 () (_ BitVec 64))
(assert (= temp610_1 #x0000000000000001))
(assert (= var77203 temp610_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp610_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp610_2)))
(assert (= temp610_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp610_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp610_4 #x0000000000000000))
(assert (= var210941 temp610_4))
(assert (= temp610_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp610_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp610_6 #x0000000000000000))
(assert (= var210986 temp610_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp610_7 #x0000000000000000))
(assert (= temp610_8 temp610_7))
(assert (= temp610_9 (select ARGNAME_padding_NAMEEND_VAL temp610_8)))
(assert (= temp610_10 #x0000000000000001))
(assert (= temp610_11 temp610_10))
(assert (= temp610_12 (select ARGNAME_padding_NAMEEND_VAL temp610_11)))
(assert (= temp610_13 #x0000000000000002))
(assert (= temp610_14 temp610_13))
(assert (= temp610_15 (select ARGNAME_padding_NAMEEND_VAL temp610_14)))
(assert (= temp610_16 #x0000000000000003))
(assert (= temp610_17 temp610_16))
(assert (= temp610_18 (select ARGNAME_padding_NAMEEND_VAL temp610_17)))
(assert (= temp610_19 #x0000000000000004))
(assert (= temp610_20 temp610_19))
(assert (= temp610_21 (select ARGNAME_padding_NAMEEND_VAL temp610_20)))
(assert (= temp610_22 #x0000000000000005))
(assert (= temp610_23 temp610_22))
(assert (= temp610_24 (select ARGNAME_padding_NAMEEND_VAL temp610_23)))
(assert (= temp610_25 #x0000000000000000))
(assert (= temp610_26 #x0000000000000000))
(assert (= temp610_27 temp610_26))
(assert (= temp610_28 (select ARGNAME_padding_NAMEEND_VAL temp610_27)))
(assert (= temp610_29 #x0000000000000000))
(assert (= temp610_30 #x0000000000000001))
(assert (= temp610_31 temp610_30))
(assert (= temp610_32 (select ARGNAME_padding_NAMEEND_VAL temp610_31)))
(assert (= temp610_33 #x0000000000000000))
(assert (= temp610_34 #x0000000000000002))
(assert (= temp610_35 temp610_34))
(assert (= temp610_36 (select ARGNAME_padding_NAMEEND_VAL temp610_35)))
(assert (= temp610_37 #x0000000000000000))
(assert (= temp610_38 #x0000000000000003))
(assert (= temp610_39 temp610_38))
(assert (= temp610_40 (select ARGNAME_padding_NAMEEND_VAL temp610_39)))
(assert (= temp610_41 #x0000000000000000))
(assert (= temp610_42 #x0000000000000004))
(assert (= temp610_43 temp610_42))
(assert (= temp610_44 (select ARGNAME_padding_NAMEEND_VAL temp610_43)))
(assert (= temp610_45 #x0000000000000000))
(assert (= temp610_46 #x0000000000000005))
(assert (= temp610_47 temp610_46))
(assert (= temp610_48 (select ARGNAME_padding_NAMEEND_VAL temp610_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp610_28 temp610_25)
             (bvslt temp610_32 temp610_29)
             (bvslt temp610_36 temp610_33)
             (bvslt temp610_40 temp610_37)
             (bvslt temp610_44 temp610_41)
             (bvslt temp610_48 temp610_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp610_49 #x0000000000000000))
(assert (= var1191714 temp610_49))
(assert (= temp610_50 #x0000000000000000))
(assert (= temp610_51 temp610_50))
(assert (= temp610_52 (select ARGNAME_output_padding_NAMEEND_VAL temp610_51)))
(assert (= temp610_53 #x0000000000000001))
(assert (= temp610_54 temp610_53))
(assert (= temp610_55 (select ARGNAME_output_padding_NAMEEND_VAL temp610_54)))
(assert (= temp610_56 #x0000000000000002))
(assert (= temp610_57 temp610_56))
(assert (= temp610_58 (select ARGNAME_output_padding_NAMEEND_VAL temp610_57)))
(assert (= temp610_59 #x0000000000000003))
(assert (= temp610_60 temp610_59))
(assert (= temp610_61 (select ARGNAME_output_padding_NAMEEND_VAL temp610_60)))
(assert (= temp610_62 #x0000000000000004))
(assert (= temp610_63 temp610_62))
(assert (= temp610_64 (select ARGNAME_output_padding_NAMEEND_VAL temp610_63)))
(assert (= temp610_65 #x0000000000000005))
(assert (= temp610_66 temp610_65))
(assert (= temp610_67 (select ARGNAME_output_padding_NAMEEND_VAL temp610_66)))
(assert (= temp610_68 #x0000000000000000))
(assert (= temp610_69 #x0000000000000000))
(assert (= temp610_70 temp610_69))
(assert (= temp610_71 (select ARGNAME_output_padding_NAMEEND_VAL temp610_70)))
(assert (= temp610_72 #x0000000000000000))
(assert (= temp610_73 #x0000000000000001))
(assert (= temp610_74 temp610_73))
(assert (= temp610_75 (select ARGNAME_output_padding_NAMEEND_VAL temp610_74)))
(assert (= temp610_76 #x0000000000000000))
(assert (= temp610_77 #x0000000000000002))
(assert (= temp610_78 temp610_77))
(assert (= temp610_79 (select ARGNAME_output_padding_NAMEEND_VAL temp610_78)))
(assert (= temp610_80 #x0000000000000000))
(assert (= temp610_81 #x0000000000000003))
(assert (= temp610_82 temp610_81))
(assert (= temp610_83 (select ARGNAME_output_padding_NAMEEND_VAL temp610_82)))
(assert (= temp610_84 #x0000000000000000))
(assert (= temp610_85 #x0000000000000004))
(assert (= temp610_86 temp610_85))
(assert (= temp610_87 (select ARGNAME_output_padding_NAMEEND_VAL temp610_86)))
(assert (= temp610_88 #x0000000000000000))
(assert (= temp610_89 #x0000000000000005))
(assert (= temp610_90 temp610_89))
(assert (= temp610_91 (select ARGNAME_output_padding_NAMEEND_VAL temp610_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp610_71 temp610_68)
             (bvslt temp610_75 temp610_72)
             (bvslt temp610_79 temp610_76)
             (bvslt temp610_83 temp610_80)
             (bvslt temp610_87 temp610_84)
             (bvslt temp610_91 temp610_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp610_92 #x0000000000000000))
(assert (= var1191725 temp610_92))
(assert (= temp610_93 #x0000000000000000))
(assert (= temp610_94 temp610_93))
(assert (= temp610_95 (select ARGNAME_stride_NAMEEND_VAL temp610_94)))
(assert (= temp610_96 #x0000000000000001))
(assert (= temp610_97 temp610_96))
(assert (= temp610_98 (select ARGNAME_stride_NAMEEND_VAL temp610_97)))
(assert (= temp610_99 #x0000000000000002))
(assert (= temp610_100 temp610_99))
(assert (= temp610_101 (select ARGNAME_stride_NAMEEND_VAL temp610_100)))
(assert (= temp610_102 #x0000000000000003))
(assert (= temp610_103 temp610_102))
(assert (= temp610_104 (select ARGNAME_stride_NAMEEND_VAL temp610_103)))
(assert (= temp610_105 #x0000000000000004))
(assert (= temp610_106 temp610_105))
(assert (= temp610_107 (select ARGNAME_stride_NAMEEND_VAL temp610_106)))
(assert (= temp610_108 #x0000000000000005))
(assert (= temp610_109 temp610_108))
(assert (= temp610_110 (select ARGNAME_stride_NAMEEND_VAL temp610_109)))
(assert (= temp610_111 #x0000000000000000))
(assert (= temp610_112 #x0000000000000000))
(assert (= temp610_113 temp610_112))
(assert (= temp610_114 (select ARGNAME_stride_NAMEEND_VAL temp610_113)))
(assert (= temp610_115 #x0000000000000000))
(assert (= temp610_116 #x0000000000000001))
(assert (= temp610_117 temp610_116))
(assert (= temp610_118 (select ARGNAME_stride_NAMEEND_VAL temp610_117)))
(assert (= temp610_119 #x0000000000000000))
(assert (= temp610_120 #x0000000000000002))
(assert (= temp610_121 temp610_120))
(assert (= temp610_122 (select ARGNAME_stride_NAMEEND_VAL temp610_121)))
(assert (= temp610_123 #x0000000000000000))
(assert (= temp610_124 #x0000000000000003))
(assert (= temp610_125 temp610_124))
(assert (= temp610_126 (select ARGNAME_stride_NAMEEND_VAL temp610_125)))
(assert (= temp610_127 #x0000000000000000))
(assert (= temp610_128 #x0000000000000004))
(assert (= temp610_129 temp610_128))
(assert (= temp610_130 (select ARGNAME_stride_NAMEEND_VAL temp610_129)))
(assert (= temp610_131 #x0000000000000000))
(assert (= temp610_132 #x0000000000000005))
(assert (= temp610_133 temp610_132))
(assert (= temp610_134 (select ARGNAME_stride_NAMEEND_VAL temp610_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp610_114 temp610_111)
             (bvsle temp610_118 temp610_115)
             (bvsle temp610_122 temp610_119)
             (bvsle temp610_126 temp610_123)
             (bvsle temp610_130 temp610_127)
             (bvsle temp610_134 temp610_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp610_135 #x0000000000000000))
(assert (= var1191735 temp610_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp610_136 #x0000000000000001))
(assert (= var1191747 temp610_136))
(assert (= temp610_137 #x0000000000000000))
(assert (= var1179826 temp610_137))
(assert (= temp610_138 #x0000000000000000))
(assert (= temp610_139 temp610_138))
(assert (= temp610_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp610_139)))
(assert (= temp610_141 #x0000000000000001))
(assert (= temp610_142 temp610_141))
(assert (= temp610_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp610_142)))
(assert (= temp610_144 #x0000000000000002))
(assert (= temp610_145 temp610_144))
(assert (= temp610_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp610_145)))
(assert (= temp610_147 #x0000000000000003))
(assert (= temp610_148 temp610_147))
(assert (= temp610_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp610_148)))
(assert (= temp610_150 #x0000000000000004))
(assert (= temp610_151 temp610_150))
(assert (= temp610_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp610_151)))
(assert (= temp610_153 #x0000000000000005))
(assert (= temp610_154 temp610_153))
(assert (= temp610_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp610_154)))
(assert (= temp610_157 var1179826))
(assert (= temp610_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp610_157)))
(assert (= temp610_156 temp610_158))
(assert (= var1191780
   (ite (bvslt temp610_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp610_159 #x0000000000000000))
(assert (= var1191780 temp610_159))
(assert (= temp610_160 #x0000000000000000))
(assert (= var1179826 temp610_160))
(assert (= temp610_162 var1179826))
(assert (= temp610_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp610_162)))
(assert (= temp610_161 temp610_163))
(assert (= var1191802 (bvsmod temp610_161 ARGNAME_groups_NAMEEND)))
(assert (= temp610_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp610_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp610_165 #x0000000000000001))
(assert (= var1191803 temp610_165))
(assert (= temp610_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp610_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp610_167 #x0000000000000001))
(assert (= var1191823 temp610_167))
(assert (= temp610_168 #x0000000000000001))
(assert (= var1180714 temp610_168))
(assert (= temp610_169 #x0000000000000000))
(assert (= temp610_170 temp610_169))
(assert (= temp610_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp610_170)))
(assert (= temp610_172 #x0000000000000001))
(assert (= temp610_173 temp610_172))
(assert (= temp610_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp610_173)))
(assert (= temp610_175 #x0000000000000002))
(assert (= temp610_176 temp610_175))
(assert (= temp610_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp610_176)))
(assert (= temp610_178 #x0000000000000003))
(assert (= temp610_179 temp610_178))
(assert (= temp610_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp610_179)))
(assert (= temp610_181 #x0000000000000004))
(assert (= temp610_182 temp610_181))
(assert (= temp610_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp610_182)))
(assert (= temp610_184 #x0000000000000005))
(assert (= temp610_185 temp610_184))
(assert (= temp610_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp610_185)))
(assert (= temp610_187 #x0000000000000000))
(assert (= temp610_188
   (ite (bvslt var1180714 temp610_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp610_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp610_188)))
(assert (= var1191831 temp610_189))
(assert (bvslt (ite (bvslt var1180714 temp610_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp610_190 #x0000000000000001))
(assert (= var1180714 temp610_190))
(assert (= temp610_192 var1180714))
(assert (= temp610_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp610_192)))
(assert (= temp610_191 temp610_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp610_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp610_194 #x0000000000000001))
(assert (= var1191836 temp610_194))
(assert (= temp610_195 #x0000000000000000))
(assert (= var1179826 temp610_195))
(assert (= temp610_197 var1179826))
(assert (= temp610_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp610_197)))
(assert (= temp610_196 temp610_198))
(assert (= temp610_199 #x0000000000000002))
(assert (= var1586025 temp610_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp610_200 #x0000000000000001))
(assert (= var1191993 temp610_200))
(assert (= temp610_201 #x0000000000000001))
(assert (= var2700303 temp610_201))
(assert (= temp610_202 #x0000000000000001))
(assert (= var2962447 temp610_202))
(assert (= temp610_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp610_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp610_204 #x0000000000000001))
(assert (= var211058 temp610_204))
(assert (= temp610_205 #x0000000000000001))
(assert (= var211188 temp610_205))
(assert (= var3879401 var211188))
(assert (= temp610_206 #x0000000000000000))
(assert (= var3866802 temp610_206))
(assert (= temp610_207 #x0000000000000000))
(assert (= temp610_208
   (ite (bvslt var3866802 temp610_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp610_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp610_208)))
(assert (= var3879420 temp610_209))
(assert (bvslt (ite (bvslt var3866802 temp610_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp610_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp610_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp610_211 #x0000000000000001))
(assert (= var3879421 temp610_211))
(assert (= temp610_212 #x0000000000000000))
(assert (= var4079423 temp610_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp610_213 #x0000000000000002))
(assert (= var4208259 temp610_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp610_214 #x0000000000000000))
(assert (= var4273820 temp610_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4993424 var211201))
(assert (= var211388 var210913))
(assert (= temp610_215 #x0000000000000000))
(assert (= var211389
   (ite (distinct var211388 temp610_215) #x0000000000000001 #x0000000000000000)))
(assert (= var5914445 var211389))
(assert (= temp610_216 #x0000000000000001))
(assert (= var211058 temp610_216))
(model-add temp610_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp610_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp610_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp610_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






