(declare-fun temp10538_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10538_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10538_3 () (_ BitVec 64))
(declare-fun temp10538_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10538_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10538_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10538_7 () (_ BitVec 64))
(declare-fun temp10538_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10538_9 () (_ BitVec 64))
(declare-fun temp10538_10 () (_ BitVec 64))
(declare-fun temp10538_11 () (_ BitVec 64))
(declare-fun temp10538_12 () (_ BitVec 64))
(declare-fun temp10538_13 () (_ BitVec 64))
(declare-fun temp10538_14 () (_ BitVec 64))
(declare-fun temp10538_15 () (_ BitVec 64))
(declare-fun temp10538_16 () (_ BitVec 64))
(declare-fun temp10538_17 () (_ BitVec 64))
(declare-fun temp10538_18 () (_ BitVec 64))
(declare-fun temp10538_19 () (_ BitVec 64))
(declare-fun temp10538_20 () (_ BitVec 64))
(declare-fun temp10538_21 () (_ BitVec 64))
(declare-fun temp10538_22 () (_ BitVec 64))
(declare-fun temp10538_23 () (_ BitVec 64))
(declare-fun temp10538_24 () (_ BitVec 64))
(declare-fun temp10538_25 () (_ BitVec 64))
(declare-fun temp10538_26 () (_ BitVec 64))
(declare-fun temp10538_27 () (_ BitVec 64))
(declare-fun temp10538_28 () (_ BitVec 64))
(declare-fun temp10538_29 () (_ BitVec 64))
(declare-fun temp10538_30 () (_ BitVec 64))
(declare-fun temp10538_31 () (_ BitVec 64))
(declare-fun temp10538_32 () (_ BitVec 64))
(declare-fun temp10538_33 () (_ BitVec 64))
(declare-fun temp10538_34 () (_ BitVec 64))
(declare-fun temp10538_35 () (_ BitVec 64))
(declare-fun temp10538_36 () (_ BitVec 64))
(declare-fun temp10538_37 () (_ BitVec 64))
(declare-fun temp10538_38 () (_ BitVec 64))
(declare-fun temp10538_39 () (_ BitVec 64))
(declare-fun temp10538_40 () (_ BitVec 64))
(declare-fun temp10538_41 () (_ BitVec 64))
(declare-fun temp10538_42 () (_ BitVec 64))
(declare-fun temp10538_43 () (_ BitVec 64))
(declare-fun temp10538_44 () (_ BitVec 64))
(declare-fun temp10538_45 () (_ BitVec 64))
(declare-fun temp10538_46 () (_ BitVec 64))
(declare-fun temp10538_47 () (_ BitVec 64))
(declare-fun temp10538_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10538_49 () (_ BitVec 64))
(declare-fun temp10538_50 () (_ BitVec 64))
(declare-fun temp10538_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10538_52 () (_ BitVec 64))
(declare-fun temp10538_53 () (_ BitVec 64))
(declare-fun temp10538_54 () (_ BitVec 64))
(declare-fun temp10538_55 () (_ BitVec 64))
(declare-fun temp10538_56 () (_ BitVec 64))
(declare-fun temp10538_57 () (_ BitVec 64))
(declare-fun temp10538_58 () (_ BitVec 64))
(declare-fun temp10538_59 () (_ BitVec 64))
(declare-fun temp10538_60 () (_ BitVec 64))
(declare-fun temp10538_61 () (_ BitVec 64))
(declare-fun temp10538_62 () (_ BitVec 64))
(declare-fun temp10538_63 () (_ BitVec 64))
(declare-fun temp10538_64 () (_ BitVec 64))
(declare-fun temp10538_65 () (_ BitVec 64))
(declare-fun temp10538_66 () (_ BitVec 64))
(declare-fun temp10538_67 () (_ BitVec 64))
(declare-fun temp10538_68 () (_ BitVec 64))
(declare-fun temp10538_69 () (_ BitVec 64))
(declare-fun temp10538_70 () (_ BitVec 64))
(declare-fun temp10538_71 () (_ BitVec 64))
(declare-fun temp10538_72 () (_ BitVec 64))
(declare-fun temp10538_73 () (_ BitVec 64))
(declare-fun temp10538_74 () (_ BitVec 64))
(declare-fun temp10538_75 () (_ BitVec 64))
(declare-fun temp10538_76 () (_ BitVec 64))
(declare-fun temp10538_77 () (_ BitVec 64))
(declare-fun temp10538_78 () (_ BitVec 64))
(declare-fun temp10538_79 () (_ BitVec 64))
(declare-fun temp10538_80 () (_ BitVec 64))
(declare-fun temp10538_81 () (_ BitVec 64))
(declare-fun temp10538_82 () (_ BitVec 64))
(declare-fun temp10538_83 () (_ BitVec 64))
(declare-fun temp10538_84 () (_ BitVec 64))
(declare-fun temp10538_85 () (_ BitVec 64))
(declare-fun temp10538_86 () (_ BitVec 64))
(declare-fun temp10538_87 () (_ BitVec 64))
(declare-fun temp10538_88 () (_ BitVec 64))
(declare-fun temp10538_89 () (_ BitVec 64))
(declare-fun temp10538_90 () (_ BitVec 64))
(declare-fun temp10538_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10538_92 () (_ BitVec 64))
(declare-fun temp10538_93 () (_ BitVec 64))
(declare-fun temp10538_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10538_95 () (_ BitVec 64))
(declare-fun temp10538_96 () (_ BitVec 64))
(declare-fun temp10538_97 () (_ BitVec 64))
(declare-fun temp10538_98 () (_ BitVec 64))
(declare-fun temp10538_99 () (_ BitVec 64))
(declare-fun temp10538_100 () (_ BitVec 64))
(declare-fun temp10538_101 () (_ BitVec 64))
(declare-fun temp10538_102 () (_ BitVec 64))
(declare-fun temp10538_103 () (_ BitVec 64))
(declare-fun temp10538_104 () (_ BitVec 64))
(declare-fun temp10538_105 () (_ BitVec 64))
(declare-fun temp10538_106 () (_ BitVec 64))
(declare-fun temp10538_107 () (_ BitVec 64))
(declare-fun temp10538_108 () (_ BitVec 64))
(declare-fun temp10538_109 () (_ BitVec 64))
(declare-fun temp10538_110 () (_ BitVec 64))
(declare-fun temp10538_111 () (_ BitVec 64))
(declare-fun temp10538_112 () (_ BitVec 64))
(declare-fun temp10538_113 () (_ BitVec 64))
(declare-fun temp10538_114 () (_ BitVec 64))
(declare-fun temp10538_115 () (_ BitVec 64))
(declare-fun temp10538_116 () (_ BitVec 64))
(declare-fun temp10538_117 () (_ BitVec 64))
(declare-fun temp10538_118 () (_ BitVec 64))
(declare-fun temp10538_119 () (_ BitVec 64))
(declare-fun temp10538_120 () (_ BitVec 64))
(declare-fun temp10538_121 () (_ BitVec 64))
(declare-fun temp10538_122 () (_ BitVec 64))
(declare-fun temp10538_123 () (_ BitVec 64))
(declare-fun temp10538_124 () (_ BitVec 64))
(declare-fun temp10538_125 () (_ BitVec 64))
(declare-fun temp10538_126 () (_ BitVec 64))
(declare-fun temp10538_127 () (_ BitVec 64))
(declare-fun temp10538_128 () (_ BitVec 64))
(declare-fun temp10538_129 () (_ BitVec 64))
(declare-fun temp10538_130 () (_ BitVec 64))
(declare-fun temp10538_131 () (_ BitVec 64))
(declare-fun temp10538_132 () (_ BitVec 64))
(declare-fun temp10538_133 () (_ BitVec 64))
(declare-fun temp10538_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10538_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10538_136 () (_ BitVec 64))
(declare-fun temp10538_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10538_138 () (_ BitVec 64))
(declare-fun temp10538_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10538_140 () (_ BitVec 64))
(declare-fun temp10538_141 () (_ BitVec 64))
(declare-fun temp10538_142 () (_ BitVec 64))
(declare-fun temp10538_143 () (_ BitVec 64))
(declare-fun temp10538_144 () (_ BitVec 64))
(declare-fun temp10538_145 () (_ BitVec 64))
(declare-fun temp10538_146 () (_ BitVec 64))
(declare-fun temp10538_147 () (_ BitVec 64))
(declare-fun temp10538_148 () (_ BitVec 64))
(declare-fun temp10538_149 () (_ BitVec 64))
(declare-fun temp10538_150 () (_ BitVec 64))
(declare-fun temp10538_151 () (_ BitVec 64))
(declare-fun temp10538_152 () (_ BitVec 64))
(declare-fun temp10538_153 () (_ BitVec 64))
(declare-fun temp10538_154 () (_ BitVec 64))
(declare-fun temp10538_155 () (_ BitVec 64))
(declare-fun temp10538_157 () (_ BitVec 64))
(declare-fun temp10538_158 () (_ BitVec 64))
(declare-fun temp10538_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10538_159 () (_ BitVec 64))
(declare-fun temp10538_160 () (_ BitVec 64))
(declare-fun temp10538_162 () (_ BitVec 64))
(declare-fun temp10538_163 () (_ BitVec 64))
(declare-fun temp10538_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10538_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10538_165 () (_ BitVec 64))
(declare-fun temp10538_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10538_167 () (_ BitVec 64))
(declare-fun temp10538_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10538_169 () (_ BitVec 64))
(declare-fun temp10538_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10538_171 () (_ BitVec 64))
(declare-fun temp10538_172 () (_ BitVec 64))
(declare-fun temp10538_173 () (_ BitVec 64))
(declare-fun temp10538_174 () (_ BitVec 64))
(declare-fun temp10538_175 () (_ BitVec 64))
(declare-fun temp10538_176 () (_ BitVec 64))
(declare-fun temp10538_177 () (_ BitVec 64))
(declare-fun temp10538_178 () (_ BitVec 64))
(declare-fun temp10538_179 () (_ BitVec 64))
(declare-fun temp10538_180 () (_ BitVec 64))
(declare-fun temp10538_181 () (_ BitVec 64))
(declare-fun temp10538_182 () (_ BitVec 64))
(declare-fun temp10538_183 () (_ BitVec 64))
(declare-fun temp10538_184 () (_ BitVec 64))
(declare-fun temp10538_185 () (_ BitVec 64))
(declare-fun temp10538_186 () (_ BitVec 64))
(declare-fun temp10538_187 () (_ BitVec 64))
(declare-fun temp10538_188 () (_ BitVec 64))
(declare-fun temp10538_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10538_190 () (_ BitVec 64))
(declare-fun temp10538_192 () (_ BitVec 64))
(declare-fun temp10538_193 () (_ BitVec 64))
(declare-fun temp10538_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10538_194 () (_ BitVec 64))
(declare-fun temp10538_195 () (_ BitVec 64))
(declare-fun temp10538_197 () (_ BitVec 64))
(declare-fun temp10538_198 () (_ BitVec 64))
(declare-fun temp10538_196 () (_ BitVec 64))
(declare-fun temp10538_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10538_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10538_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10538_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10538_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10538_204 () (_ BitVec 64))
(declare-fun temp10538_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10538_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10538_207 () (_ BitVec 64))
(declare-fun temp10538_208 () (_ BitVec 64))
(declare-fun temp10538_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10538_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10538_211 () (_ BitVec 64))
(declare-fun temp10538_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10538_213 () (_ BitVec 64))
(declare-fun temp10538_214 () (_ BitVec 64))
(declare-fun temp10538_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10538_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10538_217 () (_ BitVec 64))
(declare-fun temp10538_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10538_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10538_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var5124496 () (_ BitVec 64))
(declare-fun var211388 () (_ BitVec 64))
(declare-fun temp10538_221 () (_ BitVec 64))
(declare-fun var211389 () (_ BitVec 64))
(declare-fun var6045517 () (_ BitVec 64))
(declare-fun temp10538_222 () (_ BitVec 64))
(assert (= temp10538_1 #x0000000000000001))
(assert (= var77203 temp10538_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10538_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10538_2)))
(assert (= temp10538_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10538_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10538_4 #x0000000000000000))
(assert (= var210941 temp10538_4))
(assert (= temp10538_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10538_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10538_6 #x0000000000000000))
(assert (= var210986 temp10538_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10538_7 #x0000000000000000))
(assert (= temp10538_8 temp10538_7))
(assert (= temp10538_9 (select ARGNAME_padding_NAMEEND_VAL temp10538_8)))
(assert (= temp10538_10 #x0000000000000001))
(assert (= temp10538_11 temp10538_10))
(assert (= temp10538_12 (select ARGNAME_padding_NAMEEND_VAL temp10538_11)))
(assert (= temp10538_13 #x0000000000000002))
(assert (= temp10538_14 temp10538_13))
(assert (= temp10538_15 (select ARGNAME_padding_NAMEEND_VAL temp10538_14)))
(assert (= temp10538_16 #x0000000000000003))
(assert (= temp10538_17 temp10538_16))
(assert (= temp10538_18 (select ARGNAME_padding_NAMEEND_VAL temp10538_17)))
(assert (= temp10538_19 #x0000000000000004))
(assert (= temp10538_20 temp10538_19))
(assert (= temp10538_21 (select ARGNAME_padding_NAMEEND_VAL temp10538_20)))
(assert (= temp10538_22 #x0000000000000005))
(assert (= temp10538_23 temp10538_22))
(assert (= temp10538_24 (select ARGNAME_padding_NAMEEND_VAL temp10538_23)))
(assert (= temp10538_25 #x0000000000000000))
(assert (= temp10538_26 #x0000000000000000))
(assert (= temp10538_27 temp10538_26))
(assert (= temp10538_28 (select ARGNAME_padding_NAMEEND_VAL temp10538_27)))
(assert (= temp10538_29 #x0000000000000000))
(assert (= temp10538_30 #x0000000000000001))
(assert (= temp10538_31 temp10538_30))
(assert (= temp10538_32 (select ARGNAME_padding_NAMEEND_VAL temp10538_31)))
(assert (= temp10538_33 #x0000000000000000))
(assert (= temp10538_34 #x0000000000000002))
(assert (= temp10538_35 temp10538_34))
(assert (= temp10538_36 (select ARGNAME_padding_NAMEEND_VAL temp10538_35)))
(assert (= temp10538_37 #x0000000000000000))
(assert (= temp10538_38 #x0000000000000003))
(assert (= temp10538_39 temp10538_38))
(assert (= temp10538_40 (select ARGNAME_padding_NAMEEND_VAL temp10538_39)))
(assert (= temp10538_41 #x0000000000000000))
(assert (= temp10538_42 #x0000000000000004))
(assert (= temp10538_43 temp10538_42))
(assert (= temp10538_44 (select ARGNAME_padding_NAMEEND_VAL temp10538_43)))
(assert (= temp10538_45 #x0000000000000000))
(assert (= temp10538_46 #x0000000000000005))
(assert (= temp10538_47 temp10538_46))
(assert (= temp10538_48 (select ARGNAME_padding_NAMEEND_VAL temp10538_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10538_28 temp10538_25)
             (bvslt temp10538_32 temp10538_29)
             (bvslt temp10538_36 temp10538_33)
             (bvslt temp10538_40 temp10538_37)
             (bvslt temp10538_44 temp10538_41)
             (bvslt temp10538_48 temp10538_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10538_49 #x0000000000000000))
(assert (= var1191714 temp10538_49))
(assert (= temp10538_50 #x0000000000000000))
(assert (= temp10538_51 temp10538_50))
(assert (= temp10538_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10538_51)))
(assert (= temp10538_53 #x0000000000000001))
(assert (= temp10538_54 temp10538_53))
(assert (= temp10538_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10538_54)))
(assert (= temp10538_56 #x0000000000000002))
(assert (= temp10538_57 temp10538_56))
(assert (= temp10538_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10538_57)))
(assert (= temp10538_59 #x0000000000000003))
(assert (= temp10538_60 temp10538_59))
(assert (= temp10538_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10538_60)))
(assert (= temp10538_62 #x0000000000000004))
(assert (= temp10538_63 temp10538_62))
(assert (= temp10538_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10538_63)))
(assert (= temp10538_65 #x0000000000000005))
(assert (= temp10538_66 temp10538_65))
(assert (= temp10538_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10538_66)))
(assert (= temp10538_68 #x0000000000000000))
(assert (= temp10538_69 #x0000000000000000))
(assert (= temp10538_70 temp10538_69))
(assert (= temp10538_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10538_70)))
(assert (= temp10538_72 #x0000000000000000))
(assert (= temp10538_73 #x0000000000000001))
(assert (= temp10538_74 temp10538_73))
(assert (= temp10538_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10538_74)))
(assert (= temp10538_76 #x0000000000000000))
(assert (= temp10538_77 #x0000000000000002))
(assert (= temp10538_78 temp10538_77))
(assert (= temp10538_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10538_78)))
(assert (= temp10538_80 #x0000000000000000))
(assert (= temp10538_81 #x0000000000000003))
(assert (= temp10538_82 temp10538_81))
(assert (= temp10538_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10538_82)))
(assert (= temp10538_84 #x0000000000000000))
(assert (= temp10538_85 #x0000000000000004))
(assert (= temp10538_86 temp10538_85))
(assert (= temp10538_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10538_86)))
(assert (= temp10538_88 #x0000000000000000))
(assert (= temp10538_89 #x0000000000000005))
(assert (= temp10538_90 temp10538_89))
(assert (= temp10538_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10538_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10538_71 temp10538_68)
             (bvslt temp10538_75 temp10538_72)
             (bvslt temp10538_79 temp10538_76)
             (bvslt temp10538_83 temp10538_80)
             (bvslt temp10538_87 temp10538_84)
             (bvslt temp10538_91 temp10538_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10538_92 #x0000000000000000))
(assert (= var1191725 temp10538_92))
(assert (= temp10538_93 #x0000000000000000))
(assert (= temp10538_94 temp10538_93))
(assert (= temp10538_95 (select ARGNAME_stride_NAMEEND_VAL temp10538_94)))
(assert (= temp10538_96 #x0000000000000001))
(assert (= temp10538_97 temp10538_96))
(assert (= temp10538_98 (select ARGNAME_stride_NAMEEND_VAL temp10538_97)))
(assert (= temp10538_99 #x0000000000000002))
(assert (= temp10538_100 temp10538_99))
(assert (= temp10538_101 (select ARGNAME_stride_NAMEEND_VAL temp10538_100)))
(assert (= temp10538_102 #x0000000000000003))
(assert (= temp10538_103 temp10538_102))
(assert (= temp10538_104 (select ARGNAME_stride_NAMEEND_VAL temp10538_103)))
(assert (= temp10538_105 #x0000000000000004))
(assert (= temp10538_106 temp10538_105))
(assert (= temp10538_107 (select ARGNAME_stride_NAMEEND_VAL temp10538_106)))
(assert (= temp10538_108 #x0000000000000005))
(assert (= temp10538_109 temp10538_108))
(assert (= temp10538_110 (select ARGNAME_stride_NAMEEND_VAL temp10538_109)))
(assert (= temp10538_111 #x0000000000000000))
(assert (= temp10538_112 #x0000000000000000))
(assert (= temp10538_113 temp10538_112))
(assert (= temp10538_114 (select ARGNAME_stride_NAMEEND_VAL temp10538_113)))
(assert (= temp10538_115 #x0000000000000000))
(assert (= temp10538_116 #x0000000000000001))
(assert (= temp10538_117 temp10538_116))
(assert (= temp10538_118 (select ARGNAME_stride_NAMEEND_VAL temp10538_117)))
(assert (= temp10538_119 #x0000000000000000))
(assert (= temp10538_120 #x0000000000000002))
(assert (= temp10538_121 temp10538_120))
(assert (= temp10538_122 (select ARGNAME_stride_NAMEEND_VAL temp10538_121)))
(assert (= temp10538_123 #x0000000000000000))
(assert (= temp10538_124 #x0000000000000003))
(assert (= temp10538_125 temp10538_124))
(assert (= temp10538_126 (select ARGNAME_stride_NAMEEND_VAL temp10538_125)))
(assert (= temp10538_127 #x0000000000000000))
(assert (= temp10538_128 #x0000000000000004))
(assert (= temp10538_129 temp10538_128))
(assert (= temp10538_130 (select ARGNAME_stride_NAMEEND_VAL temp10538_129)))
(assert (= temp10538_131 #x0000000000000000))
(assert (= temp10538_132 #x0000000000000005))
(assert (= temp10538_133 temp10538_132))
(assert (= temp10538_134 (select ARGNAME_stride_NAMEEND_VAL temp10538_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10538_114 temp10538_111)
             (bvsle temp10538_118 temp10538_115)
             (bvsle temp10538_122 temp10538_119)
             (bvsle temp10538_126 temp10538_123)
             (bvsle temp10538_130 temp10538_127)
             (bvsle temp10538_134 temp10538_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10538_135 #x0000000000000000))
(assert (= var1191735 temp10538_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10538_136 #x0000000000000001))
(assert (= var1191747 temp10538_136))
(assert (= temp10538_137 #x0000000000000000))
(assert (= var1179826 temp10538_137))
(assert (= temp10538_138 #x0000000000000000))
(assert (= temp10538_139 temp10538_138))
(assert (= temp10538_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10538_139)))
(assert (= temp10538_141 #x0000000000000001))
(assert (= temp10538_142 temp10538_141))
(assert (= temp10538_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10538_142)))
(assert (= temp10538_144 #x0000000000000002))
(assert (= temp10538_145 temp10538_144))
(assert (= temp10538_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10538_145)))
(assert (= temp10538_147 #x0000000000000003))
(assert (= temp10538_148 temp10538_147))
(assert (= temp10538_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10538_148)))
(assert (= temp10538_150 #x0000000000000004))
(assert (= temp10538_151 temp10538_150))
(assert (= temp10538_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10538_151)))
(assert (= temp10538_153 #x0000000000000005))
(assert (= temp10538_154 temp10538_153))
(assert (= temp10538_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10538_154)))
(assert (= temp10538_157 var1179826))
(assert (= temp10538_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10538_157)))
(assert (= temp10538_156 temp10538_158))
(assert (= var1191780
   (ite (bvslt temp10538_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10538_159 #x0000000000000000))
(assert (= var1191780 temp10538_159))
(assert (= temp10538_160 #x0000000000000000))
(assert (= var1179826 temp10538_160))
(assert (= temp10538_162 var1179826))
(assert (= temp10538_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10538_162)))
(assert (= temp10538_161 temp10538_163))
(assert (= var1191802 (bvsmod temp10538_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10538_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10538_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10538_165 #x0000000000000001))
(assert (= var1191803 temp10538_165))
(assert (= temp10538_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10538_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10538_167 #x0000000000000001))
(assert (= var1191823 temp10538_167))
(assert (= temp10538_168 #x0000000000000001))
(assert (= var1180714 temp10538_168))
(assert (= temp10538_169 #x0000000000000000))
(assert (= temp10538_170 temp10538_169))
(assert (= temp10538_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10538_170)))
(assert (= temp10538_172 #x0000000000000001))
(assert (= temp10538_173 temp10538_172))
(assert (= temp10538_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10538_173)))
(assert (= temp10538_175 #x0000000000000002))
(assert (= temp10538_176 temp10538_175))
(assert (= temp10538_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10538_176)))
(assert (= temp10538_178 #x0000000000000003))
(assert (= temp10538_179 temp10538_178))
(assert (= temp10538_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10538_179)))
(assert (= temp10538_181 #x0000000000000004))
(assert (= temp10538_182 temp10538_181))
(assert (= temp10538_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10538_182)))
(assert (= temp10538_184 #x0000000000000005))
(assert (= temp10538_185 temp10538_184))
(assert (= temp10538_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10538_185)))
(assert (= temp10538_187 #x0000000000000000))
(assert (= temp10538_188
   (ite (bvslt var1180714 temp10538_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10538_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10538_188)))
(assert (= var1191831 temp10538_189))
(assert (bvslt (ite (bvslt var1180714 temp10538_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10538_190 #x0000000000000001))
(assert (= var1180714 temp10538_190))
(assert (= temp10538_192 var1180714))
(assert (= temp10538_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10538_192)))
(assert (= temp10538_191 temp10538_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10538_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10538_194 #x0000000000000001))
(assert (= var1191836 temp10538_194))
(assert (= temp10538_195 #x0000000000000000))
(assert (= var1179826 temp10538_195))
(assert (= temp10538_197 var1179826))
(assert (= temp10538_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10538_197)))
(assert (= temp10538_196 temp10538_198))
(assert (= temp10538_199 #x0000000000000002))
(assert (= var1586025 temp10538_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10538_200 #x0000000000000001))
(assert (= var1191993 temp10538_200))
(assert (= temp10538_201 #x0000000000000001))
(assert (= var2700303 temp10538_201))
(assert (= temp10538_202 #x0000000000000001))
(assert (= var2962447 temp10538_202))
(assert (= temp10538_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10538_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10538_204 #x0000000000000001))
(assert (= var211058 temp10538_204))
(assert (= temp10538_205 #x0000000000000001))
(assert (= var211188 temp10538_205))
(assert (= var3879401 var211188))
(assert (= temp10538_206 #x0000000000000000))
(assert (= var3866802 temp10538_206))
(assert (= temp10538_207 #x0000000000000000))
(assert (= temp10538_208
   (ite (bvslt var3866802 temp10538_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10538_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10538_208)))
(assert (= var3879420 temp10538_209))
(assert (bvslt (ite (bvslt var3866802 temp10538_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10538_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10538_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10538_211 #x0000000000000000))
(assert (= var3879421 temp10538_211))
(assert (= temp10538_212 #x0000000000000001))
(assert (= var3867690 temp10538_212))
(assert (= temp10538_213 #x0000000000000000))
(assert (= temp10538_214
   (ite (bvslt var3867690 temp10538_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10538_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10538_214)))
(assert (= var3879423 temp10538_215))
(assert (bvslt (ite (bvslt var3867690 temp10538_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10538_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10538_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10538_217 #x0000000000000001))
(assert (= var3879424 temp10538_217))
(assert (= temp10538_218 #x0000000000000000))
(assert (= var4133117 temp10538_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10538_219 #x0000000000000002))
(assert (= var4339331 temp10538_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10538_220 #x0000000000000000))
(assert (= var4404892 temp10538_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var5124496 var211201))
(assert (= var211388 var210913))
(assert (= temp10538_221 #x0000000000000000))
(assert (= var211389
   (ite (distinct var211388 temp10538_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var6045517 var211389))
(assert (= temp10538_222 #x0000000000000001))
(assert (= var211058 temp10538_222))
(model-add temp10538_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10538_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10538_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10538_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




