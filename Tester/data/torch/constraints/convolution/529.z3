(declare-fun temp705_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp705_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp705_3 () (_ BitVec 64))
(declare-fun temp705_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp705_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp705_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp705_7 () (_ BitVec 64))
(declare-fun temp705_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp705_9 () (_ BitVec 64))
(declare-fun temp705_10 () (_ BitVec 64))
(declare-fun temp705_11 () (_ BitVec 64))
(declare-fun temp705_12 () (_ BitVec 64))
(declare-fun temp705_13 () (_ BitVec 64))
(declare-fun temp705_14 () (_ BitVec 64))
(declare-fun temp705_15 () (_ BitVec 64))
(declare-fun temp705_16 () (_ BitVec 64))
(declare-fun temp705_17 () (_ BitVec 64))
(declare-fun temp705_18 () (_ BitVec 64))
(declare-fun temp705_19 () (_ BitVec 64))
(declare-fun temp705_20 () (_ BitVec 64))
(declare-fun temp705_21 () (_ BitVec 64))
(declare-fun temp705_22 () (_ BitVec 64))
(declare-fun temp705_23 () (_ BitVec 64))
(declare-fun temp705_24 () (_ BitVec 64))
(declare-fun temp705_25 () (_ BitVec 64))
(declare-fun temp705_26 () (_ BitVec 64))
(declare-fun temp705_27 () (_ BitVec 64))
(declare-fun temp705_28 () (_ BitVec 64))
(declare-fun temp705_29 () (_ BitVec 64))
(declare-fun temp705_30 () (_ BitVec 64))
(declare-fun temp705_31 () (_ BitVec 64))
(declare-fun temp705_32 () (_ BitVec 64))
(declare-fun temp705_33 () (_ BitVec 64))
(declare-fun temp705_34 () (_ BitVec 64))
(declare-fun temp705_35 () (_ BitVec 64))
(declare-fun temp705_36 () (_ BitVec 64))
(declare-fun temp705_37 () (_ BitVec 64))
(declare-fun temp705_38 () (_ BitVec 64))
(declare-fun temp705_39 () (_ BitVec 64))
(declare-fun temp705_40 () (_ BitVec 64))
(declare-fun temp705_41 () (_ BitVec 64))
(declare-fun temp705_42 () (_ BitVec 64))
(declare-fun temp705_43 () (_ BitVec 64))
(declare-fun temp705_44 () (_ BitVec 64))
(declare-fun temp705_45 () (_ BitVec 64))
(declare-fun temp705_46 () (_ BitVec 64))
(declare-fun temp705_47 () (_ BitVec 64))
(declare-fun temp705_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp705_49 () (_ BitVec 64))
(declare-fun temp705_50 () (_ BitVec 64))
(declare-fun temp705_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp705_52 () (_ BitVec 64))
(declare-fun temp705_53 () (_ BitVec 64))
(declare-fun temp705_54 () (_ BitVec 64))
(declare-fun temp705_55 () (_ BitVec 64))
(declare-fun temp705_56 () (_ BitVec 64))
(declare-fun temp705_57 () (_ BitVec 64))
(declare-fun temp705_58 () (_ BitVec 64))
(declare-fun temp705_59 () (_ BitVec 64))
(declare-fun temp705_60 () (_ BitVec 64))
(declare-fun temp705_61 () (_ BitVec 64))
(declare-fun temp705_62 () (_ BitVec 64))
(declare-fun temp705_63 () (_ BitVec 64))
(declare-fun temp705_64 () (_ BitVec 64))
(declare-fun temp705_65 () (_ BitVec 64))
(declare-fun temp705_66 () (_ BitVec 64))
(declare-fun temp705_67 () (_ BitVec 64))
(declare-fun temp705_68 () (_ BitVec 64))
(declare-fun temp705_69 () (_ BitVec 64))
(declare-fun temp705_70 () (_ BitVec 64))
(declare-fun temp705_71 () (_ BitVec 64))
(declare-fun temp705_72 () (_ BitVec 64))
(declare-fun temp705_73 () (_ BitVec 64))
(declare-fun temp705_74 () (_ BitVec 64))
(declare-fun temp705_75 () (_ BitVec 64))
(declare-fun temp705_76 () (_ BitVec 64))
(declare-fun temp705_77 () (_ BitVec 64))
(declare-fun temp705_78 () (_ BitVec 64))
(declare-fun temp705_79 () (_ BitVec 64))
(declare-fun temp705_80 () (_ BitVec 64))
(declare-fun temp705_81 () (_ BitVec 64))
(declare-fun temp705_82 () (_ BitVec 64))
(declare-fun temp705_83 () (_ BitVec 64))
(declare-fun temp705_84 () (_ BitVec 64))
(declare-fun temp705_85 () (_ BitVec 64))
(declare-fun temp705_86 () (_ BitVec 64))
(declare-fun temp705_87 () (_ BitVec 64))
(declare-fun temp705_88 () (_ BitVec 64))
(declare-fun temp705_89 () (_ BitVec 64))
(declare-fun temp705_90 () (_ BitVec 64))
(declare-fun temp705_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp705_92 () (_ BitVec 64))
(declare-fun temp705_93 () (_ BitVec 64))
(declare-fun temp705_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp705_95 () (_ BitVec 64))
(declare-fun temp705_96 () (_ BitVec 64))
(declare-fun temp705_97 () (_ BitVec 64))
(declare-fun temp705_98 () (_ BitVec 64))
(declare-fun temp705_99 () (_ BitVec 64))
(declare-fun temp705_100 () (_ BitVec 64))
(declare-fun temp705_101 () (_ BitVec 64))
(declare-fun temp705_102 () (_ BitVec 64))
(declare-fun temp705_103 () (_ BitVec 64))
(declare-fun temp705_104 () (_ BitVec 64))
(declare-fun temp705_105 () (_ BitVec 64))
(declare-fun temp705_106 () (_ BitVec 64))
(declare-fun temp705_107 () (_ BitVec 64))
(declare-fun temp705_108 () (_ BitVec 64))
(declare-fun temp705_109 () (_ BitVec 64))
(declare-fun temp705_110 () (_ BitVec 64))
(declare-fun temp705_111 () (_ BitVec 64))
(declare-fun temp705_112 () (_ BitVec 64))
(declare-fun temp705_113 () (_ BitVec 64))
(declare-fun temp705_114 () (_ BitVec 64))
(declare-fun temp705_115 () (_ BitVec 64))
(declare-fun temp705_116 () (_ BitVec 64))
(declare-fun temp705_117 () (_ BitVec 64))
(declare-fun temp705_118 () (_ BitVec 64))
(declare-fun temp705_119 () (_ BitVec 64))
(declare-fun temp705_120 () (_ BitVec 64))
(declare-fun temp705_121 () (_ BitVec 64))
(declare-fun temp705_122 () (_ BitVec 64))
(declare-fun temp705_123 () (_ BitVec 64))
(declare-fun temp705_124 () (_ BitVec 64))
(declare-fun temp705_125 () (_ BitVec 64))
(declare-fun temp705_126 () (_ BitVec 64))
(declare-fun temp705_127 () (_ BitVec 64))
(declare-fun temp705_128 () (_ BitVec 64))
(declare-fun temp705_129 () (_ BitVec 64))
(declare-fun temp705_130 () (_ BitVec 64))
(declare-fun temp705_131 () (_ BitVec 64))
(declare-fun temp705_132 () (_ BitVec 64))
(declare-fun temp705_133 () (_ BitVec 64))
(declare-fun temp705_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp705_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp705_136 () (_ BitVec 64))
(declare-fun temp705_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp705_138 () (_ BitVec 64))
(declare-fun temp705_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp705_140 () (_ BitVec 64))
(declare-fun temp705_141 () (_ BitVec 64))
(declare-fun temp705_142 () (_ BitVec 64))
(declare-fun temp705_143 () (_ BitVec 64))
(declare-fun temp705_144 () (_ BitVec 64))
(declare-fun temp705_145 () (_ BitVec 64))
(declare-fun temp705_146 () (_ BitVec 64))
(declare-fun temp705_147 () (_ BitVec 64))
(declare-fun temp705_148 () (_ BitVec 64))
(declare-fun temp705_149 () (_ BitVec 64))
(declare-fun temp705_150 () (_ BitVec 64))
(declare-fun temp705_151 () (_ BitVec 64))
(declare-fun temp705_152 () (_ BitVec 64))
(declare-fun temp705_153 () (_ BitVec 64))
(declare-fun temp705_154 () (_ BitVec 64))
(declare-fun temp705_155 () (_ BitVec 64))
(declare-fun temp705_157 () (_ BitVec 64))
(declare-fun temp705_158 () (_ BitVec 64))
(declare-fun temp705_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp705_159 () (_ BitVec 64))
(declare-fun temp705_160 () (_ BitVec 64))
(declare-fun temp705_162 () (_ BitVec 64))
(declare-fun temp705_163 () (_ BitVec 64))
(declare-fun temp705_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp705_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp705_165 () (_ BitVec 64))
(declare-fun temp705_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp705_167 () (_ BitVec 64))
(declare-fun temp705_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp705_169 () (_ BitVec 64))
(declare-fun temp705_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp705_171 () (_ BitVec 64))
(declare-fun temp705_172 () (_ BitVec 64))
(declare-fun temp705_173 () (_ BitVec 64))
(declare-fun temp705_174 () (_ BitVec 64))
(declare-fun temp705_175 () (_ BitVec 64))
(declare-fun temp705_176 () (_ BitVec 64))
(declare-fun temp705_177 () (_ BitVec 64))
(declare-fun temp705_178 () (_ BitVec 64))
(declare-fun temp705_179 () (_ BitVec 64))
(declare-fun temp705_180 () (_ BitVec 64))
(declare-fun temp705_181 () (_ BitVec 64))
(declare-fun temp705_182 () (_ BitVec 64))
(declare-fun temp705_183 () (_ BitVec 64))
(declare-fun temp705_184 () (_ BitVec 64))
(declare-fun temp705_185 () (_ BitVec 64))
(declare-fun temp705_186 () (_ BitVec 64))
(declare-fun temp705_187 () (_ BitVec 64))
(declare-fun temp705_188 () (_ BitVec 64))
(declare-fun temp705_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp705_190 () (_ BitVec 64))
(declare-fun temp705_192 () (_ BitVec 64))
(declare-fun temp705_193 () (_ BitVec 64))
(declare-fun temp705_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp705_194 () (_ BitVec 64))
(declare-fun temp705_195 () (_ BitVec 64))
(declare-fun temp705_197 () (_ BitVec 64))
(declare-fun temp705_198 () (_ BitVec 64))
(declare-fun temp705_196 () (_ BitVec 64))
(declare-fun temp705_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp705_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp705_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp705_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp705_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp705_204 () (_ BitVec 64))
(declare-fun temp705_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp705_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp705_207 () (_ BitVec 64))
(declare-fun temp705_208 () (_ BitVec 64))
(declare-fun temp705_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp705_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp705_211 () (_ BitVec 64))
(declare-fun temp705_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp705_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp705_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp705_216 () (_ BitVec 64))
(declare-fun temp705_215 () (_ BitVec 64))
(declare-fun temp705_217 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp705_218 () (_ BitVec 64))
(declare-fun temp705_219 () (_ BitVec 64))
(declare-fun temp705_220 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp705_221 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp705_222 () (_ BitVec 64))
(declare-fun temp705_224 () (_ BitVec 64))
(declare-fun temp705_223 () (_ BitVec 64))
(declare-fun temp705_225 () (_ BitVec 64))
(assert (= temp705_1 #x0000000000000001))
(assert (= var77203 temp705_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp705_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp705_2)))
(assert (= temp705_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp705_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp705_4 #x0000000000000000))
(assert (= var210941 temp705_4))
(assert (= temp705_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp705_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp705_6 #x0000000000000000))
(assert (= var210986 temp705_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp705_7 #x0000000000000000))
(assert (= temp705_8 temp705_7))
(assert (= temp705_9 (select ARGNAME_padding_NAMEEND_VAL temp705_8)))
(assert (= temp705_10 #x0000000000000001))
(assert (= temp705_11 temp705_10))
(assert (= temp705_12 (select ARGNAME_padding_NAMEEND_VAL temp705_11)))
(assert (= temp705_13 #x0000000000000002))
(assert (= temp705_14 temp705_13))
(assert (= temp705_15 (select ARGNAME_padding_NAMEEND_VAL temp705_14)))
(assert (= temp705_16 #x0000000000000003))
(assert (= temp705_17 temp705_16))
(assert (= temp705_18 (select ARGNAME_padding_NAMEEND_VAL temp705_17)))
(assert (= temp705_19 #x0000000000000004))
(assert (= temp705_20 temp705_19))
(assert (= temp705_21 (select ARGNAME_padding_NAMEEND_VAL temp705_20)))
(assert (= temp705_22 #x0000000000000005))
(assert (= temp705_23 temp705_22))
(assert (= temp705_24 (select ARGNAME_padding_NAMEEND_VAL temp705_23)))
(assert (= temp705_25 #x0000000000000000))
(assert (= temp705_26 #x0000000000000000))
(assert (= temp705_27 temp705_26))
(assert (= temp705_28 (select ARGNAME_padding_NAMEEND_VAL temp705_27)))
(assert (= temp705_29 #x0000000000000000))
(assert (= temp705_30 #x0000000000000001))
(assert (= temp705_31 temp705_30))
(assert (= temp705_32 (select ARGNAME_padding_NAMEEND_VAL temp705_31)))
(assert (= temp705_33 #x0000000000000000))
(assert (= temp705_34 #x0000000000000002))
(assert (= temp705_35 temp705_34))
(assert (= temp705_36 (select ARGNAME_padding_NAMEEND_VAL temp705_35)))
(assert (= temp705_37 #x0000000000000000))
(assert (= temp705_38 #x0000000000000003))
(assert (= temp705_39 temp705_38))
(assert (= temp705_40 (select ARGNAME_padding_NAMEEND_VAL temp705_39)))
(assert (= temp705_41 #x0000000000000000))
(assert (= temp705_42 #x0000000000000004))
(assert (= temp705_43 temp705_42))
(assert (= temp705_44 (select ARGNAME_padding_NAMEEND_VAL temp705_43)))
(assert (= temp705_45 #x0000000000000000))
(assert (= temp705_46 #x0000000000000005))
(assert (= temp705_47 temp705_46))
(assert (= temp705_48 (select ARGNAME_padding_NAMEEND_VAL temp705_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp705_28 temp705_25)
             (bvslt temp705_32 temp705_29)
             (bvslt temp705_36 temp705_33)
             (bvslt temp705_40 temp705_37)
             (bvslt temp705_44 temp705_41)
             (bvslt temp705_48 temp705_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp705_49 #x0000000000000000))
(assert (= var1191714 temp705_49))
(assert (= temp705_50 #x0000000000000000))
(assert (= temp705_51 temp705_50))
(assert (= temp705_52 (select ARGNAME_output_padding_NAMEEND_VAL temp705_51)))
(assert (= temp705_53 #x0000000000000001))
(assert (= temp705_54 temp705_53))
(assert (= temp705_55 (select ARGNAME_output_padding_NAMEEND_VAL temp705_54)))
(assert (= temp705_56 #x0000000000000002))
(assert (= temp705_57 temp705_56))
(assert (= temp705_58 (select ARGNAME_output_padding_NAMEEND_VAL temp705_57)))
(assert (= temp705_59 #x0000000000000003))
(assert (= temp705_60 temp705_59))
(assert (= temp705_61 (select ARGNAME_output_padding_NAMEEND_VAL temp705_60)))
(assert (= temp705_62 #x0000000000000004))
(assert (= temp705_63 temp705_62))
(assert (= temp705_64 (select ARGNAME_output_padding_NAMEEND_VAL temp705_63)))
(assert (= temp705_65 #x0000000000000005))
(assert (= temp705_66 temp705_65))
(assert (= temp705_67 (select ARGNAME_output_padding_NAMEEND_VAL temp705_66)))
(assert (= temp705_68 #x0000000000000000))
(assert (= temp705_69 #x0000000000000000))
(assert (= temp705_70 temp705_69))
(assert (= temp705_71 (select ARGNAME_output_padding_NAMEEND_VAL temp705_70)))
(assert (= temp705_72 #x0000000000000000))
(assert (= temp705_73 #x0000000000000001))
(assert (= temp705_74 temp705_73))
(assert (= temp705_75 (select ARGNAME_output_padding_NAMEEND_VAL temp705_74)))
(assert (= temp705_76 #x0000000000000000))
(assert (= temp705_77 #x0000000000000002))
(assert (= temp705_78 temp705_77))
(assert (= temp705_79 (select ARGNAME_output_padding_NAMEEND_VAL temp705_78)))
(assert (= temp705_80 #x0000000000000000))
(assert (= temp705_81 #x0000000000000003))
(assert (= temp705_82 temp705_81))
(assert (= temp705_83 (select ARGNAME_output_padding_NAMEEND_VAL temp705_82)))
(assert (= temp705_84 #x0000000000000000))
(assert (= temp705_85 #x0000000000000004))
(assert (= temp705_86 temp705_85))
(assert (= temp705_87 (select ARGNAME_output_padding_NAMEEND_VAL temp705_86)))
(assert (= temp705_88 #x0000000000000000))
(assert (= temp705_89 #x0000000000000005))
(assert (= temp705_90 temp705_89))
(assert (= temp705_91 (select ARGNAME_output_padding_NAMEEND_VAL temp705_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp705_71 temp705_68)
             (bvslt temp705_75 temp705_72)
             (bvslt temp705_79 temp705_76)
             (bvslt temp705_83 temp705_80)
             (bvslt temp705_87 temp705_84)
             (bvslt temp705_91 temp705_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp705_92 #x0000000000000000))
(assert (= var1191725 temp705_92))
(assert (= temp705_93 #x0000000000000000))
(assert (= temp705_94 temp705_93))
(assert (= temp705_95 (select ARGNAME_stride_NAMEEND_VAL temp705_94)))
(assert (= temp705_96 #x0000000000000001))
(assert (= temp705_97 temp705_96))
(assert (= temp705_98 (select ARGNAME_stride_NAMEEND_VAL temp705_97)))
(assert (= temp705_99 #x0000000000000002))
(assert (= temp705_100 temp705_99))
(assert (= temp705_101 (select ARGNAME_stride_NAMEEND_VAL temp705_100)))
(assert (= temp705_102 #x0000000000000003))
(assert (= temp705_103 temp705_102))
(assert (= temp705_104 (select ARGNAME_stride_NAMEEND_VAL temp705_103)))
(assert (= temp705_105 #x0000000000000004))
(assert (= temp705_106 temp705_105))
(assert (= temp705_107 (select ARGNAME_stride_NAMEEND_VAL temp705_106)))
(assert (= temp705_108 #x0000000000000005))
(assert (= temp705_109 temp705_108))
(assert (= temp705_110 (select ARGNAME_stride_NAMEEND_VAL temp705_109)))
(assert (= temp705_111 #x0000000000000000))
(assert (= temp705_112 #x0000000000000000))
(assert (= temp705_113 temp705_112))
(assert (= temp705_114 (select ARGNAME_stride_NAMEEND_VAL temp705_113)))
(assert (= temp705_115 #x0000000000000000))
(assert (= temp705_116 #x0000000000000001))
(assert (= temp705_117 temp705_116))
(assert (= temp705_118 (select ARGNAME_stride_NAMEEND_VAL temp705_117)))
(assert (= temp705_119 #x0000000000000000))
(assert (= temp705_120 #x0000000000000002))
(assert (= temp705_121 temp705_120))
(assert (= temp705_122 (select ARGNAME_stride_NAMEEND_VAL temp705_121)))
(assert (= temp705_123 #x0000000000000000))
(assert (= temp705_124 #x0000000000000003))
(assert (= temp705_125 temp705_124))
(assert (= temp705_126 (select ARGNAME_stride_NAMEEND_VAL temp705_125)))
(assert (= temp705_127 #x0000000000000000))
(assert (= temp705_128 #x0000000000000004))
(assert (= temp705_129 temp705_128))
(assert (= temp705_130 (select ARGNAME_stride_NAMEEND_VAL temp705_129)))
(assert (= temp705_131 #x0000000000000000))
(assert (= temp705_132 #x0000000000000005))
(assert (= temp705_133 temp705_132))
(assert (= temp705_134 (select ARGNAME_stride_NAMEEND_VAL temp705_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp705_114 temp705_111)
             (bvsle temp705_118 temp705_115)
             (bvsle temp705_122 temp705_119)
             (bvsle temp705_126 temp705_123)
             (bvsle temp705_130 temp705_127)
             (bvsle temp705_134 temp705_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp705_135 #x0000000000000000))
(assert (= var1191735 temp705_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp705_136 #x0000000000000001))
(assert (= var1191747 temp705_136))
(assert (= temp705_137 #x0000000000000000))
(assert (= var1179826 temp705_137))
(assert (= temp705_138 #x0000000000000000))
(assert (= temp705_139 temp705_138))
(assert (= temp705_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp705_139)))
(assert (= temp705_141 #x0000000000000001))
(assert (= temp705_142 temp705_141))
(assert (= temp705_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp705_142)))
(assert (= temp705_144 #x0000000000000002))
(assert (= temp705_145 temp705_144))
(assert (= temp705_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp705_145)))
(assert (= temp705_147 #x0000000000000003))
(assert (= temp705_148 temp705_147))
(assert (= temp705_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp705_148)))
(assert (= temp705_150 #x0000000000000004))
(assert (= temp705_151 temp705_150))
(assert (= temp705_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp705_151)))
(assert (= temp705_153 #x0000000000000005))
(assert (= temp705_154 temp705_153))
(assert (= temp705_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp705_154)))
(assert (= temp705_157 var1179826))
(assert (= temp705_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp705_157)))
(assert (= temp705_156 temp705_158))
(assert (= var1191780
   (ite (bvslt temp705_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp705_159 #x0000000000000000))
(assert (= var1191780 temp705_159))
(assert (= temp705_160 #x0000000000000000))
(assert (= var1179826 temp705_160))
(assert (= temp705_162 var1179826))
(assert (= temp705_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp705_162)))
(assert (= temp705_161 temp705_163))
(assert (= var1191802 (bvsmod temp705_161 ARGNAME_groups_NAMEEND)))
(assert (= temp705_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp705_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp705_165 #x0000000000000001))
(assert (= var1191803 temp705_165))
(assert (= temp705_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp705_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp705_167 #x0000000000000001))
(assert (= var1191823 temp705_167))
(assert (= temp705_168 #x0000000000000001))
(assert (= var1180714 temp705_168))
(assert (= temp705_169 #x0000000000000000))
(assert (= temp705_170 temp705_169))
(assert (= temp705_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp705_170)))
(assert (= temp705_172 #x0000000000000001))
(assert (= temp705_173 temp705_172))
(assert (= temp705_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp705_173)))
(assert (= temp705_175 #x0000000000000002))
(assert (= temp705_176 temp705_175))
(assert (= temp705_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp705_176)))
(assert (= temp705_178 #x0000000000000003))
(assert (= temp705_179 temp705_178))
(assert (= temp705_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp705_179)))
(assert (= temp705_181 #x0000000000000004))
(assert (= temp705_182 temp705_181))
(assert (= temp705_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp705_182)))
(assert (= temp705_184 #x0000000000000005))
(assert (= temp705_185 temp705_184))
(assert (= temp705_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp705_185)))
(assert (= temp705_187 #x0000000000000000))
(assert (= temp705_188
   (ite (bvslt var1180714 temp705_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp705_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp705_188)))
(assert (= var1191831 temp705_189))
(assert (bvslt (ite (bvslt var1180714 temp705_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp705_190 #x0000000000000001))
(assert (= var1180714 temp705_190))
(assert (= temp705_192 var1180714))
(assert (= temp705_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp705_192)))
(assert (= temp705_191 temp705_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp705_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp705_194 #x0000000000000001))
(assert (= var1191836 temp705_194))
(assert (= temp705_195 #x0000000000000000))
(assert (= var1179826 temp705_195))
(assert (= temp705_197 var1179826))
(assert (= temp705_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp705_197)))
(assert (= temp705_196 temp705_198))
(assert (= temp705_199 #x0000000000000002))
(assert (= var1586025 temp705_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp705_200 #x0000000000000001))
(assert (= var1191993 temp705_200))
(assert (= temp705_201 #x0000000000000001))
(assert (= var2700303 temp705_201))
(assert (= temp705_202 #x0000000000000001))
(assert (= var2962447 temp705_202))
(assert (= temp705_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp705_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp705_204 #x0000000000000001))
(assert (= var211058 temp705_204))
(assert (= temp705_205 #x0000000000000001))
(assert (= var211188 temp705_205))
(assert (= var3879401 var211188))
(assert (= temp705_206 #x0000000000000000))
(assert (= var3866802 temp705_206))
(assert (= temp705_207 #x0000000000000000))
(assert (= temp705_208
   (ite (bvslt var3866802 temp705_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp705_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp705_208)))
(assert (= var3879420 temp705_209))
(assert (bvslt (ite (bvslt var3866802 temp705_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp705_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp705_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp705_211 #x0000000000000001))
(assert (= var3879421 temp705_211))
(assert (= temp705_212 #x0000000000000000))
(assert (= var4079423 temp705_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp705_213 #x0000000000000002))
(assert (= var4208259 temp705_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp705_214 #x0000000000000000))
(assert (= var4273820 temp705_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp705_216 #xffffffffffffffff))
(assert (= temp705_215 temp705_216))
(assert (= temp705_217 #x0000000000000001))
(assert (= var197674 temp705_217))
(assert (= temp705_218 #x0000000000000000))
(assert (= temp705_219
   (ite (bvslt var197674 temp705_218)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp705_220 (select ARGNAME_input_NAMEEND_DIMSIZE temp705_219)))
(assert (= var211595 temp705_220))
(assert (bvslt (ite (bvslt var197674 temp705_218)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp705_221 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp705_221) #x0000000000000001 #x0000000000000000)))
(assert (= temp705_222 #x0000000000000001))
(assert (= var211596 temp705_222))
(assert (= temp705_224 #xffffffffffffffff))
(assert (= temp705_223 temp705_224))
(assert (= temp705_225 #x0000000000000001))
(assert (= var211058 temp705_225))
(model-add temp705_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp705_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp705_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp705_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




