(declare-fun temp10922_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10922_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10922_3 () (_ BitVec 64))
(declare-fun temp10922_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10922_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10922_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10922_7 () (_ BitVec 64))
(declare-fun temp10922_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10922_9 () (_ BitVec 64))
(declare-fun temp10922_10 () (_ BitVec 64))
(declare-fun temp10922_11 () (_ BitVec 64))
(declare-fun temp10922_12 () (_ BitVec 64))
(declare-fun temp10922_13 () (_ BitVec 64))
(declare-fun temp10922_14 () (_ BitVec 64))
(declare-fun temp10922_15 () (_ BitVec 64))
(declare-fun temp10922_16 () (_ BitVec 64))
(declare-fun temp10922_17 () (_ BitVec 64))
(declare-fun temp10922_18 () (_ BitVec 64))
(declare-fun temp10922_19 () (_ BitVec 64))
(declare-fun temp10922_20 () (_ BitVec 64))
(declare-fun temp10922_21 () (_ BitVec 64))
(declare-fun temp10922_22 () (_ BitVec 64))
(declare-fun temp10922_23 () (_ BitVec 64))
(declare-fun temp10922_24 () (_ BitVec 64))
(declare-fun temp10922_25 () (_ BitVec 64))
(declare-fun temp10922_26 () (_ BitVec 64))
(declare-fun temp10922_27 () (_ BitVec 64))
(declare-fun temp10922_28 () (_ BitVec 64))
(declare-fun temp10922_29 () (_ BitVec 64))
(declare-fun temp10922_30 () (_ BitVec 64))
(declare-fun temp10922_31 () (_ BitVec 64))
(declare-fun temp10922_32 () (_ BitVec 64))
(declare-fun temp10922_33 () (_ BitVec 64))
(declare-fun temp10922_34 () (_ BitVec 64))
(declare-fun temp10922_35 () (_ BitVec 64))
(declare-fun temp10922_36 () (_ BitVec 64))
(declare-fun temp10922_37 () (_ BitVec 64))
(declare-fun temp10922_38 () (_ BitVec 64))
(declare-fun temp10922_39 () (_ BitVec 64))
(declare-fun temp10922_40 () (_ BitVec 64))
(declare-fun temp10922_41 () (_ BitVec 64))
(declare-fun temp10922_42 () (_ BitVec 64))
(declare-fun temp10922_43 () (_ BitVec 64))
(declare-fun temp10922_44 () (_ BitVec 64))
(declare-fun temp10922_45 () (_ BitVec 64))
(declare-fun temp10922_46 () (_ BitVec 64))
(declare-fun temp10922_47 () (_ BitVec 64))
(declare-fun temp10922_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10922_49 () (_ BitVec 64))
(declare-fun temp10922_50 () (_ BitVec 64))
(declare-fun temp10922_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10922_52 () (_ BitVec 64))
(declare-fun temp10922_53 () (_ BitVec 64))
(declare-fun temp10922_54 () (_ BitVec 64))
(declare-fun temp10922_55 () (_ BitVec 64))
(declare-fun temp10922_56 () (_ BitVec 64))
(declare-fun temp10922_57 () (_ BitVec 64))
(declare-fun temp10922_58 () (_ BitVec 64))
(declare-fun temp10922_59 () (_ BitVec 64))
(declare-fun temp10922_60 () (_ BitVec 64))
(declare-fun temp10922_61 () (_ BitVec 64))
(declare-fun temp10922_62 () (_ BitVec 64))
(declare-fun temp10922_63 () (_ BitVec 64))
(declare-fun temp10922_64 () (_ BitVec 64))
(declare-fun temp10922_65 () (_ BitVec 64))
(declare-fun temp10922_66 () (_ BitVec 64))
(declare-fun temp10922_67 () (_ BitVec 64))
(declare-fun temp10922_68 () (_ BitVec 64))
(declare-fun temp10922_69 () (_ BitVec 64))
(declare-fun temp10922_70 () (_ BitVec 64))
(declare-fun temp10922_71 () (_ BitVec 64))
(declare-fun temp10922_72 () (_ BitVec 64))
(declare-fun temp10922_73 () (_ BitVec 64))
(declare-fun temp10922_74 () (_ BitVec 64))
(declare-fun temp10922_75 () (_ BitVec 64))
(declare-fun temp10922_76 () (_ BitVec 64))
(declare-fun temp10922_77 () (_ BitVec 64))
(declare-fun temp10922_78 () (_ BitVec 64))
(declare-fun temp10922_79 () (_ BitVec 64))
(declare-fun temp10922_80 () (_ BitVec 64))
(declare-fun temp10922_81 () (_ BitVec 64))
(declare-fun temp10922_82 () (_ BitVec 64))
(declare-fun temp10922_83 () (_ BitVec 64))
(declare-fun temp10922_84 () (_ BitVec 64))
(declare-fun temp10922_85 () (_ BitVec 64))
(declare-fun temp10922_86 () (_ BitVec 64))
(declare-fun temp10922_87 () (_ BitVec 64))
(declare-fun temp10922_88 () (_ BitVec 64))
(declare-fun temp10922_89 () (_ BitVec 64))
(declare-fun temp10922_90 () (_ BitVec 64))
(declare-fun temp10922_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10922_92 () (_ BitVec 64))
(declare-fun temp10922_93 () (_ BitVec 64))
(declare-fun temp10922_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10922_95 () (_ BitVec 64))
(declare-fun temp10922_96 () (_ BitVec 64))
(declare-fun temp10922_97 () (_ BitVec 64))
(declare-fun temp10922_98 () (_ BitVec 64))
(declare-fun temp10922_99 () (_ BitVec 64))
(declare-fun temp10922_100 () (_ BitVec 64))
(declare-fun temp10922_101 () (_ BitVec 64))
(declare-fun temp10922_102 () (_ BitVec 64))
(declare-fun temp10922_103 () (_ BitVec 64))
(declare-fun temp10922_104 () (_ BitVec 64))
(declare-fun temp10922_105 () (_ BitVec 64))
(declare-fun temp10922_106 () (_ BitVec 64))
(declare-fun temp10922_107 () (_ BitVec 64))
(declare-fun temp10922_108 () (_ BitVec 64))
(declare-fun temp10922_109 () (_ BitVec 64))
(declare-fun temp10922_110 () (_ BitVec 64))
(declare-fun temp10922_111 () (_ BitVec 64))
(declare-fun temp10922_112 () (_ BitVec 64))
(declare-fun temp10922_113 () (_ BitVec 64))
(declare-fun temp10922_114 () (_ BitVec 64))
(declare-fun temp10922_115 () (_ BitVec 64))
(declare-fun temp10922_116 () (_ BitVec 64))
(declare-fun temp10922_117 () (_ BitVec 64))
(declare-fun temp10922_118 () (_ BitVec 64))
(declare-fun temp10922_119 () (_ BitVec 64))
(declare-fun temp10922_120 () (_ BitVec 64))
(declare-fun temp10922_121 () (_ BitVec 64))
(declare-fun temp10922_122 () (_ BitVec 64))
(declare-fun temp10922_123 () (_ BitVec 64))
(declare-fun temp10922_124 () (_ BitVec 64))
(declare-fun temp10922_125 () (_ BitVec 64))
(declare-fun temp10922_126 () (_ BitVec 64))
(declare-fun temp10922_127 () (_ BitVec 64))
(declare-fun temp10922_128 () (_ BitVec 64))
(declare-fun temp10922_129 () (_ BitVec 64))
(declare-fun temp10922_130 () (_ BitVec 64))
(declare-fun temp10922_131 () (_ BitVec 64))
(declare-fun temp10922_132 () (_ BitVec 64))
(declare-fun temp10922_133 () (_ BitVec 64))
(declare-fun temp10922_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10922_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10922_136 () (_ BitVec 64))
(declare-fun temp10922_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10922_138 () (_ BitVec 64))
(declare-fun temp10922_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10922_140 () (_ BitVec 64))
(declare-fun temp10922_141 () (_ BitVec 64))
(declare-fun temp10922_142 () (_ BitVec 64))
(declare-fun temp10922_143 () (_ BitVec 64))
(declare-fun temp10922_144 () (_ BitVec 64))
(declare-fun temp10922_145 () (_ BitVec 64))
(declare-fun temp10922_146 () (_ BitVec 64))
(declare-fun temp10922_147 () (_ BitVec 64))
(declare-fun temp10922_148 () (_ BitVec 64))
(declare-fun temp10922_149 () (_ BitVec 64))
(declare-fun temp10922_150 () (_ BitVec 64))
(declare-fun temp10922_151 () (_ BitVec 64))
(declare-fun temp10922_152 () (_ BitVec 64))
(declare-fun temp10922_153 () (_ BitVec 64))
(declare-fun temp10922_154 () (_ BitVec 64))
(declare-fun temp10922_155 () (_ BitVec 64))
(declare-fun temp10922_157 () (_ BitVec 64))
(declare-fun temp10922_158 () (_ BitVec 64))
(declare-fun temp10922_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10922_159 () (_ BitVec 64))
(declare-fun temp10922_160 () (_ BitVec 64))
(declare-fun temp10922_162 () (_ BitVec 64))
(declare-fun temp10922_163 () (_ BitVec 64))
(declare-fun temp10922_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10922_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10922_165 () (_ BitVec 64))
(declare-fun temp10922_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10922_167 () (_ BitVec 64))
(declare-fun temp10922_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10922_169 () (_ BitVec 64))
(declare-fun temp10922_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10922_171 () (_ BitVec 64))
(declare-fun temp10922_172 () (_ BitVec 64))
(declare-fun temp10922_173 () (_ BitVec 64))
(declare-fun temp10922_174 () (_ BitVec 64))
(declare-fun temp10922_175 () (_ BitVec 64))
(declare-fun temp10922_176 () (_ BitVec 64))
(declare-fun temp10922_177 () (_ BitVec 64))
(declare-fun temp10922_178 () (_ BitVec 64))
(declare-fun temp10922_179 () (_ BitVec 64))
(declare-fun temp10922_180 () (_ BitVec 64))
(declare-fun temp10922_181 () (_ BitVec 64))
(declare-fun temp10922_182 () (_ BitVec 64))
(declare-fun temp10922_183 () (_ BitVec 64))
(declare-fun temp10922_184 () (_ BitVec 64))
(declare-fun temp10922_185 () (_ BitVec 64))
(declare-fun temp10922_186 () (_ BitVec 64))
(declare-fun temp10922_187 () (_ BitVec 64))
(declare-fun temp10922_188 () (_ BitVec 64))
(declare-fun temp10922_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10922_190 () (_ BitVec 64))
(declare-fun temp10922_192 () (_ BitVec 64))
(declare-fun temp10922_193 () (_ BitVec 64))
(declare-fun temp10922_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10922_194 () (_ BitVec 64))
(declare-fun temp10922_195 () (_ BitVec 64))
(declare-fun temp10922_197 () (_ BitVec 64))
(declare-fun temp10922_198 () (_ BitVec 64))
(declare-fun temp10922_196 () (_ BitVec 64))
(declare-fun temp10922_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10922_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10922_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10922_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10922_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10922_204 () (_ BitVec 64))
(declare-fun temp10922_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10922_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10922_207 () (_ BitVec 64))
(declare-fun temp10922_208 () (_ BitVec 64))
(declare-fun temp10922_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10922_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10922_211 () (_ BitVec 64))
(declare-fun temp10922_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10922_213 () (_ BitVec 64))
(declare-fun temp10922_214 () (_ BitVec 64))
(declare-fun temp10922_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10922_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10922_217 () (_ BitVec 64))
(declare-fun temp10922_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10922_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10922_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var5255568 () (_ BitVec 64))
(declare-fun var5517712 () (_ BitVec 64))
(declare-fun temp10922_221 () (_ BitVec 64))
(declare-fun var5845392 () (_ BitVec 64))
(declare-fun temp10922_222 () (_ BitVec 64))
(assert (= temp10922_1 #x0000000000000001))
(assert (= var77203 temp10922_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10922_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10922_2)))
(assert (= temp10922_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10922_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10922_4 #x0000000000000000))
(assert (= var210941 temp10922_4))
(assert (= temp10922_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10922_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10922_6 #x0000000000000000))
(assert (= var210986 temp10922_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10922_7 #x0000000000000000))
(assert (= temp10922_8 temp10922_7))
(assert (= temp10922_9 (select ARGNAME_padding_NAMEEND_VAL temp10922_8)))
(assert (= temp10922_10 #x0000000000000001))
(assert (= temp10922_11 temp10922_10))
(assert (= temp10922_12 (select ARGNAME_padding_NAMEEND_VAL temp10922_11)))
(assert (= temp10922_13 #x0000000000000002))
(assert (= temp10922_14 temp10922_13))
(assert (= temp10922_15 (select ARGNAME_padding_NAMEEND_VAL temp10922_14)))
(assert (= temp10922_16 #x0000000000000003))
(assert (= temp10922_17 temp10922_16))
(assert (= temp10922_18 (select ARGNAME_padding_NAMEEND_VAL temp10922_17)))
(assert (= temp10922_19 #x0000000000000004))
(assert (= temp10922_20 temp10922_19))
(assert (= temp10922_21 (select ARGNAME_padding_NAMEEND_VAL temp10922_20)))
(assert (= temp10922_22 #x0000000000000005))
(assert (= temp10922_23 temp10922_22))
(assert (= temp10922_24 (select ARGNAME_padding_NAMEEND_VAL temp10922_23)))
(assert (= temp10922_25 #x0000000000000000))
(assert (= temp10922_26 #x0000000000000000))
(assert (= temp10922_27 temp10922_26))
(assert (= temp10922_28 (select ARGNAME_padding_NAMEEND_VAL temp10922_27)))
(assert (= temp10922_29 #x0000000000000000))
(assert (= temp10922_30 #x0000000000000001))
(assert (= temp10922_31 temp10922_30))
(assert (= temp10922_32 (select ARGNAME_padding_NAMEEND_VAL temp10922_31)))
(assert (= temp10922_33 #x0000000000000000))
(assert (= temp10922_34 #x0000000000000002))
(assert (= temp10922_35 temp10922_34))
(assert (= temp10922_36 (select ARGNAME_padding_NAMEEND_VAL temp10922_35)))
(assert (= temp10922_37 #x0000000000000000))
(assert (= temp10922_38 #x0000000000000003))
(assert (= temp10922_39 temp10922_38))
(assert (= temp10922_40 (select ARGNAME_padding_NAMEEND_VAL temp10922_39)))
(assert (= temp10922_41 #x0000000000000000))
(assert (= temp10922_42 #x0000000000000004))
(assert (= temp10922_43 temp10922_42))
(assert (= temp10922_44 (select ARGNAME_padding_NAMEEND_VAL temp10922_43)))
(assert (= temp10922_45 #x0000000000000000))
(assert (= temp10922_46 #x0000000000000005))
(assert (= temp10922_47 temp10922_46))
(assert (= temp10922_48 (select ARGNAME_padding_NAMEEND_VAL temp10922_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10922_28 temp10922_25)
             (bvslt temp10922_32 temp10922_29)
             (bvslt temp10922_36 temp10922_33)
             (bvslt temp10922_40 temp10922_37)
             (bvslt temp10922_44 temp10922_41)
             (bvslt temp10922_48 temp10922_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10922_49 #x0000000000000000))
(assert (= var1191714 temp10922_49))
(assert (= temp10922_50 #x0000000000000000))
(assert (= temp10922_51 temp10922_50))
(assert (= temp10922_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10922_51)))
(assert (= temp10922_53 #x0000000000000001))
(assert (= temp10922_54 temp10922_53))
(assert (= temp10922_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10922_54)))
(assert (= temp10922_56 #x0000000000000002))
(assert (= temp10922_57 temp10922_56))
(assert (= temp10922_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10922_57)))
(assert (= temp10922_59 #x0000000000000003))
(assert (= temp10922_60 temp10922_59))
(assert (= temp10922_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10922_60)))
(assert (= temp10922_62 #x0000000000000004))
(assert (= temp10922_63 temp10922_62))
(assert (= temp10922_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10922_63)))
(assert (= temp10922_65 #x0000000000000005))
(assert (= temp10922_66 temp10922_65))
(assert (= temp10922_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10922_66)))
(assert (= temp10922_68 #x0000000000000000))
(assert (= temp10922_69 #x0000000000000000))
(assert (= temp10922_70 temp10922_69))
(assert (= temp10922_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10922_70)))
(assert (= temp10922_72 #x0000000000000000))
(assert (= temp10922_73 #x0000000000000001))
(assert (= temp10922_74 temp10922_73))
(assert (= temp10922_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10922_74)))
(assert (= temp10922_76 #x0000000000000000))
(assert (= temp10922_77 #x0000000000000002))
(assert (= temp10922_78 temp10922_77))
(assert (= temp10922_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10922_78)))
(assert (= temp10922_80 #x0000000000000000))
(assert (= temp10922_81 #x0000000000000003))
(assert (= temp10922_82 temp10922_81))
(assert (= temp10922_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10922_82)))
(assert (= temp10922_84 #x0000000000000000))
(assert (= temp10922_85 #x0000000000000004))
(assert (= temp10922_86 temp10922_85))
(assert (= temp10922_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10922_86)))
(assert (= temp10922_88 #x0000000000000000))
(assert (= temp10922_89 #x0000000000000005))
(assert (= temp10922_90 temp10922_89))
(assert (= temp10922_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10922_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10922_71 temp10922_68)
             (bvslt temp10922_75 temp10922_72)
             (bvslt temp10922_79 temp10922_76)
             (bvslt temp10922_83 temp10922_80)
             (bvslt temp10922_87 temp10922_84)
             (bvslt temp10922_91 temp10922_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10922_92 #x0000000000000000))
(assert (= var1191725 temp10922_92))
(assert (= temp10922_93 #x0000000000000000))
(assert (= temp10922_94 temp10922_93))
(assert (= temp10922_95 (select ARGNAME_stride_NAMEEND_VAL temp10922_94)))
(assert (= temp10922_96 #x0000000000000001))
(assert (= temp10922_97 temp10922_96))
(assert (= temp10922_98 (select ARGNAME_stride_NAMEEND_VAL temp10922_97)))
(assert (= temp10922_99 #x0000000000000002))
(assert (= temp10922_100 temp10922_99))
(assert (= temp10922_101 (select ARGNAME_stride_NAMEEND_VAL temp10922_100)))
(assert (= temp10922_102 #x0000000000000003))
(assert (= temp10922_103 temp10922_102))
(assert (= temp10922_104 (select ARGNAME_stride_NAMEEND_VAL temp10922_103)))
(assert (= temp10922_105 #x0000000000000004))
(assert (= temp10922_106 temp10922_105))
(assert (= temp10922_107 (select ARGNAME_stride_NAMEEND_VAL temp10922_106)))
(assert (= temp10922_108 #x0000000000000005))
(assert (= temp10922_109 temp10922_108))
(assert (= temp10922_110 (select ARGNAME_stride_NAMEEND_VAL temp10922_109)))
(assert (= temp10922_111 #x0000000000000000))
(assert (= temp10922_112 #x0000000000000000))
(assert (= temp10922_113 temp10922_112))
(assert (= temp10922_114 (select ARGNAME_stride_NAMEEND_VAL temp10922_113)))
(assert (= temp10922_115 #x0000000000000000))
(assert (= temp10922_116 #x0000000000000001))
(assert (= temp10922_117 temp10922_116))
(assert (= temp10922_118 (select ARGNAME_stride_NAMEEND_VAL temp10922_117)))
(assert (= temp10922_119 #x0000000000000000))
(assert (= temp10922_120 #x0000000000000002))
(assert (= temp10922_121 temp10922_120))
(assert (= temp10922_122 (select ARGNAME_stride_NAMEEND_VAL temp10922_121)))
(assert (= temp10922_123 #x0000000000000000))
(assert (= temp10922_124 #x0000000000000003))
(assert (= temp10922_125 temp10922_124))
(assert (= temp10922_126 (select ARGNAME_stride_NAMEEND_VAL temp10922_125)))
(assert (= temp10922_127 #x0000000000000000))
(assert (= temp10922_128 #x0000000000000004))
(assert (= temp10922_129 temp10922_128))
(assert (= temp10922_130 (select ARGNAME_stride_NAMEEND_VAL temp10922_129)))
(assert (= temp10922_131 #x0000000000000000))
(assert (= temp10922_132 #x0000000000000005))
(assert (= temp10922_133 temp10922_132))
(assert (= temp10922_134 (select ARGNAME_stride_NAMEEND_VAL temp10922_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10922_114 temp10922_111)
             (bvsle temp10922_118 temp10922_115)
             (bvsle temp10922_122 temp10922_119)
             (bvsle temp10922_126 temp10922_123)
             (bvsle temp10922_130 temp10922_127)
             (bvsle temp10922_134 temp10922_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10922_135 #x0000000000000000))
(assert (= var1191735 temp10922_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10922_136 #x0000000000000001))
(assert (= var1191747 temp10922_136))
(assert (= temp10922_137 #x0000000000000000))
(assert (= var1179826 temp10922_137))
(assert (= temp10922_138 #x0000000000000000))
(assert (= temp10922_139 temp10922_138))
(assert (= temp10922_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10922_139)))
(assert (= temp10922_141 #x0000000000000001))
(assert (= temp10922_142 temp10922_141))
(assert (= temp10922_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10922_142)))
(assert (= temp10922_144 #x0000000000000002))
(assert (= temp10922_145 temp10922_144))
(assert (= temp10922_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10922_145)))
(assert (= temp10922_147 #x0000000000000003))
(assert (= temp10922_148 temp10922_147))
(assert (= temp10922_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10922_148)))
(assert (= temp10922_150 #x0000000000000004))
(assert (= temp10922_151 temp10922_150))
(assert (= temp10922_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10922_151)))
(assert (= temp10922_153 #x0000000000000005))
(assert (= temp10922_154 temp10922_153))
(assert (= temp10922_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10922_154)))
(assert (= temp10922_157 var1179826))
(assert (= temp10922_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10922_157)))
(assert (= temp10922_156 temp10922_158))
(assert (= var1191780
   (ite (bvslt temp10922_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10922_159 #x0000000000000000))
(assert (= var1191780 temp10922_159))
(assert (= temp10922_160 #x0000000000000000))
(assert (= var1179826 temp10922_160))
(assert (= temp10922_162 var1179826))
(assert (= temp10922_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10922_162)))
(assert (= temp10922_161 temp10922_163))
(assert (= var1191802 (bvsmod temp10922_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10922_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10922_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10922_165 #x0000000000000001))
(assert (= var1191803 temp10922_165))
(assert (= temp10922_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10922_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10922_167 #x0000000000000001))
(assert (= var1191823 temp10922_167))
(assert (= temp10922_168 #x0000000000000001))
(assert (= var1180714 temp10922_168))
(assert (= temp10922_169 #x0000000000000000))
(assert (= temp10922_170 temp10922_169))
(assert (= temp10922_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10922_170)))
(assert (= temp10922_172 #x0000000000000001))
(assert (= temp10922_173 temp10922_172))
(assert (= temp10922_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10922_173)))
(assert (= temp10922_175 #x0000000000000002))
(assert (= temp10922_176 temp10922_175))
(assert (= temp10922_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10922_176)))
(assert (= temp10922_178 #x0000000000000003))
(assert (= temp10922_179 temp10922_178))
(assert (= temp10922_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10922_179)))
(assert (= temp10922_181 #x0000000000000004))
(assert (= temp10922_182 temp10922_181))
(assert (= temp10922_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10922_182)))
(assert (= temp10922_184 #x0000000000000005))
(assert (= temp10922_185 temp10922_184))
(assert (= temp10922_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10922_185)))
(assert (= temp10922_187 #x0000000000000000))
(assert (= temp10922_188
   (ite (bvslt var1180714 temp10922_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10922_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10922_188)))
(assert (= var1191831 temp10922_189))
(assert (bvslt (ite (bvslt var1180714 temp10922_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10922_190 #x0000000000000001))
(assert (= var1180714 temp10922_190))
(assert (= temp10922_192 var1180714))
(assert (= temp10922_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10922_192)))
(assert (= temp10922_191 temp10922_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10922_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10922_194 #x0000000000000001))
(assert (= var1191836 temp10922_194))
(assert (= temp10922_195 #x0000000000000000))
(assert (= var1179826 temp10922_195))
(assert (= temp10922_197 var1179826))
(assert (= temp10922_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10922_197)))
(assert (= temp10922_196 temp10922_198))
(assert (= temp10922_199 #x0000000000000002))
(assert (= var1586025 temp10922_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10922_200 #x0000000000000001))
(assert (= var1191993 temp10922_200))
(assert (= temp10922_201 #x0000000000000001))
(assert (= var2700303 temp10922_201))
(assert (= temp10922_202 #x0000000000000001))
(assert (= var2962447 temp10922_202))
(assert (= temp10922_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10922_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10922_204 #x0000000000000001))
(assert (= var211058 temp10922_204))
(assert (= temp10922_205 #x0000000000000001))
(assert (= var211188 temp10922_205))
(assert (= var3879401 var211188))
(assert (= temp10922_206 #x0000000000000000))
(assert (= var3866802 temp10922_206))
(assert (= temp10922_207 #x0000000000000000))
(assert (= temp10922_208
   (ite (bvslt var3866802 temp10922_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10922_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10922_208)))
(assert (= var3879420 temp10922_209))
(assert (bvslt (ite (bvslt var3866802 temp10922_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10922_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10922_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10922_211 #x0000000000000000))
(assert (= var3879421 temp10922_211))
(assert (= temp10922_212 #x0000000000000001))
(assert (= var3867690 temp10922_212))
(assert (= temp10922_213 #x0000000000000000))
(assert (= temp10922_214
   (ite (bvslt var3867690 temp10922_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10922_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10922_214)))
(assert (= var3879423 temp10922_215))
(assert (bvslt (ite (bvslt var3867690 temp10922_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10922_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10922_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10922_217 #x0000000000000001))
(assert (= var3879424 temp10922_217))
(assert (= temp10922_218 #x0000000000000000))
(assert (= var4133117 temp10922_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10922_219 #x0000000000000002))
(assert (= var4339331 temp10922_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10922_220 #x0000000000000000))
(assert (= var4404892 temp10922_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var5255568 var211201))
(assert (= var5517712 var211201))
(assert (= temp10922_221 #x0000000000000000))
(assert (= var5845392 temp10922_221))
(assert (= temp10922_222 #x0000000000000001))
(assert (= var211058 temp10922_222))
(model-add temp10922_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10922_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10922_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10922_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




