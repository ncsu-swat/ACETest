(declare-fun temp11078_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp11078_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp11078_3 () (_ BitVec 64))
(declare-fun temp11078_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp11078_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp11078_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp11078_7 () (_ BitVec 64))
(declare-fun temp11078_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11078_9 () (_ BitVec 64))
(declare-fun temp11078_10 () (_ BitVec 64))
(declare-fun temp11078_11 () (_ BitVec 64))
(declare-fun temp11078_12 () (_ BitVec 64))
(declare-fun temp11078_13 () (_ BitVec 64))
(declare-fun temp11078_14 () (_ BitVec 64))
(declare-fun temp11078_15 () (_ BitVec 64))
(declare-fun temp11078_16 () (_ BitVec 64))
(declare-fun temp11078_17 () (_ BitVec 64))
(declare-fun temp11078_18 () (_ BitVec 64))
(declare-fun temp11078_19 () (_ BitVec 64))
(declare-fun temp11078_20 () (_ BitVec 64))
(declare-fun temp11078_21 () (_ BitVec 64))
(declare-fun temp11078_22 () (_ BitVec 64))
(declare-fun temp11078_23 () (_ BitVec 64))
(declare-fun temp11078_24 () (_ BitVec 64))
(declare-fun temp11078_25 () (_ BitVec 64))
(declare-fun temp11078_26 () (_ BitVec 64))
(declare-fun temp11078_27 () (_ BitVec 64))
(declare-fun temp11078_28 () (_ BitVec 64))
(declare-fun temp11078_29 () (_ BitVec 64))
(declare-fun temp11078_30 () (_ BitVec 64))
(declare-fun temp11078_31 () (_ BitVec 64))
(declare-fun temp11078_32 () (_ BitVec 64))
(declare-fun temp11078_33 () (_ BitVec 64))
(declare-fun temp11078_34 () (_ BitVec 64))
(declare-fun temp11078_35 () (_ BitVec 64))
(declare-fun temp11078_36 () (_ BitVec 64))
(declare-fun temp11078_37 () (_ BitVec 64))
(declare-fun temp11078_38 () (_ BitVec 64))
(declare-fun temp11078_39 () (_ BitVec 64))
(declare-fun temp11078_40 () (_ BitVec 64))
(declare-fun temp11078_41 () (_ BitVec 64))
(declare-fun temp11078_42 () (_ BitVec 64))
(declare-fun temp11078_43 () (_ BitVec 64))
(declare-fun temp11078_44 () (_ BitVec 64))
(declare-fun temp11078_45 () (_ BitVec 64))
(declare-fun temp11078_46 () (_ BitVec 64))
(declare-fun temp11078_47 () (_ BitVec 64))
(declare-fun temp11078_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp11078_49 () (_ BitVec 64))
(declare-fun temp11078_50 () (_ BitVec 64))
(declare-fun temp11078_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11078_52 () (_ BitVec 64))
(declare-fun temp11078_53 () (_ BitVec 64))
(declare-fun temp11078_54 () (_ BitVec 64))
(declare-fun temp11078_55 () (_ BitVec 64))
(declare-fun temp11078_56 () (_ BitVec 64))
(declare-fun temp11078_57 () (_ BitVec 64))
(declare-fun temp11078_58 () (_ BitVec 64))
(declare-fun temp11078_59 () (_ BitVec 64))
(declare-fun temp11078_60 () (_ BitVec 64))
(declare-fun temp11078_61 () (_ BitVec 64))
(declare-fun temp11078_62 () (_ BitVec 64))
(declare-fun temp11078_63 () (_ BitVec 64))
(declare-fun temp11078_64 () (_ BitVec 64))
(declare-fun temp11078_65 () (_ BitVec 64))
(declare-fun temp11078_66 () (_ BitVec 64))
(declare-fun temp11078_67 () (_ BitVec 64))
(declare-fun temp11078_68 () (_ BitVec 64))
(declare-fun temp11078_69 () (_ BitVec 64))
(declare-fun temp11078_70 () (_ BitVec 64))
(declare-fun temp11078_71 () (_ BitVec 64))
(declare-fun temp11078_72 () (_ BitVec 64))
(declare-fun temp11078_73 () (_ BitVec 64))
(declare-fun temp11078_74 () (_ BitVec 64))
(declare-fun temp11078_75 () (_ BitVec 64))
(declare-fun temp11078_76 () (_ BitVec 64))
(declare-fun temp11078_77 () (_ BitVec 64))
(declare-fun temp11078_78 () (_ BitVec 64))
(declare-fun temp11078_79 () (_ BitVec 64))
(declare-fun temp11078_80 () (_ BitVec 64))
(declare-fun temp11078_81 () (_ BitVec 64))
(declare-fun temp11078_82 () (_ BitVec 64))
(declare-fun temp11078_83 () (_ BitVec 64))
(declare-fun temp11078_84 () (_ BitVec 64))
(declare-fun temp11078_85 () (_ BitVec 64))
(declare-fun temp11078_86 () (_ BitVec 64))
(declare-fun temp11078_87 () (_ BitVec 64))
(declare-fun temp11078_88 () (_ BitVec 64))
(declare-fun temp11078_89 () (_ BitVec 64))
(declare-fun temp11078_90 () (_ BitVec 64))
(declare-fun temp11078_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp11078_92 () (_ BitVec 64))
(declare-fun temp11078_93 () (_ BitVec 64))
(declare-fun temp11078_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11078_95 () (_ BitVec 64))
(declare-fun temp11078_96 () (_ BitVec 64))
(declare-fun temp11078_97 () (_ BitVec 64))
(declare-fun temp11078_98 () (_ BitVec 64))
(declare-fun temp11078_99 () (_ BitVec 64))
(declare-fun temp11078_100 () (_ BitVec 64))
(declare-fun temp11078_101 () (_ BitVec 64))
(declare-fun temp11078_102 () (_ BitVec 64))
(declare-fun temp11078_103 () (_ BitVec 64))
(declare-fun temp11078_104 () (_ BitVec 64))
(declare-fun temp11078_105 () (_ BitVec 64))
(declare-fun temp11078_106 () (_ BitVec 64))
(declare-fun temp11078_107 () (_ BitVec 64))
(declare-fun temp11078_108 () (_ BitVec 64))
(declare-fun temp11078_109 () (_ BitVec 64))
(declare-fun temp11078_110 () (_ BitVec 64))
(declare-fun temp11078_111 () (_ BitVec 64))
(declare-fun temp11078_112 () (_ BitVec 64))
(declare-fun temp11078_113 () (_ BitVec 64))
(declare-fun temp11078_114 () (_ BitVec 64))
(declare-fun temp11078_115 () (_ BitVec 64))
(declare-fun temp11078_116 () (_ BitVec 64))
(declare-fun temp11078_117 () (_ BitVec 64))
(declare-fun temp11078_118 () (_ BitVec 64))
(declare-fun temp11078_119 () (_ BitVec 64))
(declare-fun temp11078_120 () (_ BitVec 64))
(declare-fun temp11078_121 () (_ BitVec 64))
(declare-fun temp11078_122 () (_ BitVec 64))
(declare-fun temp11078_123 () (_ BitVec 64))
(declare-fun temp11078_124 () (_ BitVec 64))
(declare-fun temp11078_125 () (_ BitVec 64))
(declare-fun temp11078_126 () (_ BitVec 64))
(declare-fun temp11078_127 () (_ BitVec 64))
(declare-fun temp11078_128 () (_ BitVec 64))
(declare-fun temp11078_129 () (_ BitVec 64))
(declare-fun temp11078_130 () (_ BitVec 64))
(declare-fun temp11078_131 () (_ BitVec 64))
(declare-fun temp11078_132 () (_ BitVec 64))
(declare-fun temp11078_133 () (_ BitVec 64))
(declare-fun temp11078_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp11078_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp11078_136 () (_ BitVec 64))
(declare-fun temp11078_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp11078_138 () (_ BitVec 64))
(declare-fun temp11078_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11078_140 () (_ BitVec 64))
(declare-fun temp11078_141 () (_ BitVec 64))
(declare-fun temp11078_142 () (_ BitVec 64))
(declare-fun temp11078_143 () (_ BitVec 64))
(declare-fun temp11078_144 () (_ BitVec 64))
(declare-fun temp11078_145 () (_ BitVec 64))
(declare-fun temp11078_146 () (_ BitVec 64))
(declare-fun temp11078_147 () (_ BitVec 64))
(declare-fun temp11078_148 () (_ BitVec 64))
(declare-fun temp11078_149 () (_ BitVec 64))
(declare-fun temp11078_150 () (_ BitVec 64))
(declare-fun temp11078_151 () (_ BitVec 64))
(declare-fun temp11078_152 () (_ BitVec 64))
(declare-fun temp11078_153 () (_ BitVec 64))
(declare-fun temp11078_154 () (_ BitVec 64))
(declare-fun temp11078_155 () (_ BitVec 64))
(declare-fun temp11078_157 () (_ BitVec 64))
(declare-fun temp11078_158 () (_ BitVec 64))
(declare-fun temp11078_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp11078_159 () (_ BitVec 64))
(declare-fun temp11078_160 () (_ BitVec 64))
(declare-fun temp11078_162 () (_ BitVec 64))
(declare-fun temp11078_163 () (_ BitVec 64))
(declare-fun temp11078_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp11078_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp11078_165 () (_ BitVec 64))
(declare-fun temp11078_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp11078_167 () (_ BitVec 64))
(declare-fun temp11078_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp11078_169 () (_ BitVec 64))
(declare-fun temp11078_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11078_171 () (_ BitVec 64))
(declare-fun temp11078_172 () (_ BitVec 64))
(declare-fun temp11078_173 () (_ BitVec 64))
(declare-fun temp11078_174 () (_ BitVec 64))
(declare-fun temp11078_175 () (_ BitVec 64))
(declare-fun temp11078_176 () (_ BitVec 64))
(declare-fun temp11078_177 () (_ BitVec 64))
(declare-fun temp11078_178 () (_ BitVec 64))
(declare-fun temp11078_179 () (_ BitVec 64))
(declare-fun temp11078_180 () (_ BitVec 64))
(declare-fun temp11078_181 () (_ BitVec 64))
(declare-fun temp11078_182 () (_ BitVec 64))
(declare-fun temp11078_183 () (_ BitVec 64))
(declare-fun temp11078_184 () (_ BitVec 64))
(declare-fun temp11078_185 () (_ BitVec 64))
(declare-fun temp11078_186 () (_ BitVec 64))
(declare-fun temp11078_187 () (_ BitVec 64))
(declare-fun temp11078_188 () (_ BitVec 64))
(declare-fun temp11078_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp11078_190 () (_ BitVec 64))
(declare-fun temp11078_192 () (_ BitVec 64))
(declare-fun temp11078_193 () (_ BitVec 64))
(declare-fun temp11078_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp11078_194 () (_ BitVec 64))
(declare-fun temp11078_195 () (_ BitVec 64))
(declare-fun temp11078_197 () (_ BitVec 64))
(declare-fun temp11078_198 () (_ BitVec 64))
(declare-fun temp11078_196 () (_ BitVec 64))
(declare-fun temp11078_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp11078_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp11078_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp11078_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp11078_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp11078_204 () (_ BitVec 64))
(declare-fun temp11078_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp11078_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp11078_207 () (_ BitVec 64))
(declare-fun temp11078_208 () (_ BitVec 64))
(declare-fun temp11078_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp11078_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp11078_211 () (_ BitVec 64))
(declare-fun temp11078_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp11078_213 () (_ BitVec 64))
(declare-fun temp11078_214 () (_ BitVec 64))
(declare-fun temp11078_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp11078_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp11078_217 () (_ BitVec 64))
(declare-fun temp11078_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp11078_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp11078_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var4600208 () (_ BitVec 64))
(declare-fun var4862352 () (_ BitVec 64))
(declare-fun temp11078_221 () (_ BitVec 64))
(declare-fun var212414 () (_ BitVec 64))
(declare-fun temp11078_222 () (_ BitVec 64))
(declare-fun temp11078_223 () (_ BitVec 64))
(declare-fun var5191299 () (_ BitVec 64))
(declare-fun var5256844 () (_ BitVec 64))
(declare-fun temp11078_224 () (_ BitVec 64))
(assert (= temp11078_1 #x0000000000000001))
(assert (= var77203 temp11078_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp11078_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp11078_2)))
(assert (= temp11078_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp11078_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11078_4 #x0000000000000000))
(assert (= var210941 temp11078_4))
(assert (= temp11078_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp11078_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11078_6 #x0000000000000000))
(assert (= var210986 temp11078_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp11078_7 #x0000000000000000))
(assert (= temp11078_8 temp11078_7))
(assert (= temp11078_9 (select ARGNAME_padding_NAMEEND_VAL temp11078_8)))
(assert (= temp11078_10 #x0000000000000001))
(assert (= temp11078_11 temp11078_10))
(assert (= temp11078_12 (select ARGNAME_padding_NAMEEND_VAL temp11078_11)))
(assert (= temp11078_13 #x0000000000000002))
(assert (= temp11078_14 temp11078_13))
(assert (= temp11078_15 (select ARGNAME_padding_NAMEEND_VAL temp11078_14)))
(assert (= temp11078_16 #x0000000000000003))
(assert (= temp11078_17 temp11078_16))
(assert (= temp11078_18 (select ARGNAME_padding_NAMEEND_VAL temp11078_17)))
(assert (= temp11078_19 #x0000000000000004))
(assert (= temp11078_20 temp11078_19))
(assert (= temp11078_21 (select ARGNAME_padding_NAMEEND_VAL temp11078_20)))
(assert (= temp11078_22 #x0000000000000005))
(assert (= temp11078_23 temp11078_22))
(assert (= temp11078_24 (select ARGNAME_padding_NAMEEND_VAL temp11078_23)))
(assert (= temp11078_25 #x0000000000000000))
(assert (= temp11078_26 #x0000000000000000))
(assert (= temp11078_27 temp11078_26))
(assert (= temp11078_28 (select ARGNAME_padding_NAMEEND_VAL temp11078_27)))
(assert (= temp11078_29 #x0000000000000000))
(assert (= temp11078_30 #x0000000000000001))
(assert (= temp11078_31 temp11078_30))
(assert (= temp11078_32 (select ARGNAME_padding_NAMEEND_VAL temp11078_31)))
(assert (= temp11078_33 #x0000000000000000))
(assert (= temp11078_34 #x0000000000000002))
(assert (= temp11078_35 temp11078_34))
(assert (= temp11078_36 (select ARGNAME_padding_NAMEEND_VAL temp11078_35)))
(assert (= temp11078_37 #x0000000000000000))
(assert (= temp11078_38 #x0000000000000003))
(assert (= temp11078_39 temp11078_38))
(assert (= temp11078_40 (select ARGNAME_padding_NAMEEND_VAL temp11078_39)))
(assert (= temp11078_41 #x0000000000000000))
(assert (= temp11078_42 #x0000000000000004))
(assert (= temp11078_43 temp11078_42))
(assert (= temp11078_44 (select ARGNAME_padding_NAMEEND_VAL temp11078_43)))
(assert (= temp11078_45 #x0000000000000000))
(assert (= temp11078_46 #x0000000000000005))
(assert (= temp11078_47 temp11078_46))
(assert (= temp11078_48 (select ARGNAME_padding_NAMEEND_VAL temp11078_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp11078_28 temp11078_25)
             (bvslt temp11078_32 temp11078_29)
             (bvslt temp11078_36 temp11078_33)
             (bvslt temp11078_40 temp11078_37)
             (bvslt temp11078_44 temp11078_41)
             (bvslt temp11078_48 temp11078_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11078_49 #x0000000000000000))
(assert (= var1191714 temp11078_49))
(assert (= temp11078_50 #x0000000000000000))
(assert (= temp11078_51 temp11078_50))
(assert (= temp11078_52 (select ARGNAME_output_padding_NAMEEND_VAL temp11078_51)))
(assert (= temp11078_53 #x0000000000000001))
(assert (= temp11078_54 temp11078_53))
(assert (= temp11078_55 (select ARGNAME_output_padding_NAMEEND_VAL temp11078_54)))
(assert (= temp11078_56 #x0000000000000002))
(assert (= temp11078_57 temp11078_56))
(assert (= temp11078_58 (select ARGNAME_output_padding_NAMEEND_VAL temp11078_57)))
(assert (= temp11078_59 #x0000000000000003))
(assert (= temp11078_60 temp11078_59))
(assert (= temp11078_61 (select ARGNAME_output_padding_NAMEEND_VAL temp11078_60)))
(assert (= temp11078_62 #x0000000000000004))
(assert (= temp11078_63 temp11078_62))
(assert (= temp11078_64 (select ARGNAME_output_padding_NAMEEND_VAL temp11078_63)))
(assert (= temp11078_65 #x0000000000000005))
(assert (= temp11078_66 temp11078_65))
(assert (= temp11078_67 (select ARGNAME_output_padding_NAMEEND_VAL temp11078_66)))
(assert (= temp11078_68 #x0000000000000000))
(assert (= temp11078_69 #x0000000000000000))
(assert (= temp11078_70 temp11078_69))
(assert (= temp11078_71 (select ARGNAME_output_padding_NAMEEND_VAL temp11078_70)))
(assert (= temp11078_72 #x0000000000000000))
(assert (= temp11078_73 #x0000000000000001))
(assert (= temp11078_74 temp11078_73))
(assert (= temp11078_75 (select ARGNAME_output_padding_NAMEEND_VAL temp11078_74)))
(assert (= temp11078_76 #x0000000000000000))
(assert (= temp11078_77 #x0000000000000002))
(assert (= temp11078_78 temp11078_77))
(assert (= temp11078_79 (select ARGNAME_output_padding_NAMEEND_VAL temp11078_78)))
(assert (= temp11078_80 #x0000000000000000))
(assert (= temp11078_81 #x0000000000000003))
(assert (= temp11078_82 temp11078_81))
(assert (= temp11078_83 (select ARGNAME_output_padding_NAMEEND_VAL temp11078_82)))
(assert (= temp11078_84 #x0000000000000000))
(assert (= temp11078_85 #x0000000000000004))
(assert (= temp11078_86 temp11078_85))
(assert (= temp11078_87 (select ARGNAME_output_padding_NAMEEND_VAL temp11078_86)))
(assert (= temp11078_88 #x0000000000000000))
(assert (= temp11078_89 #x0000000000000005))
(assert (= temp11078_90 temp11078_89))
(assert (= temp11078_91 (select ARGNAME_output_padding_NAMEEND_VAL temp11078_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp11078_71 temp11078_68)
             (bvslt temp11078_75 temp11078_72)
             (bvslt temp11078_79 temp11078_76)
             (bvslt temp11078_83 temp11078_80)
             (bvslt temp11078_87 temp11078_84)
             (bvslt temp11078_91 temp11078_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11078_92 #x0000000000000000))
(assert (= var1191725 temp11078_92))
(assert (= temp11078_93 #x0000000000000000))
(assert (= temp11078_94 temp11078_93))
(assert (= temp11078_95 (select ARGNAME_stride_NAMEEND_VAL temp11078_94)))
(assert (= temp11078_96 #x0000000000000001))
(assert (= temp11078_97 temp11078_96))
(assert (= temp11078_98 (select ARGNAME_stride_NAMEEND_VAL temp11078_97)))
(assert (= temp11078_99 #x0000000000000002))
(assert (= temp11078_100 temp11078_99))
(assert (= temp11078_101 (select ARGNAME_stride_NAMEEND_VAL temp11078_100)))
(assert (= temp11078_102 #x0000000000000003))
(assert (= temp11078_103 temp11078_102))
(assert (= temp11078_104 (select ARGNAME_stride_NAMEEND_VAL temp11078_103)))
(assert (= temp11078_105 #x0000000000000004))
(assert (= temp11078_106 temp11078_105))
(assert (= temp11078_107 (select ARGNAME_stride_NAMEEND_VAL temp11078_106)))
(assert (= temp11078_108 #x0000000000000005))
(assert (= temp11078_109 temp11078_108))
(assert (= temp11078_110 (select ARGNAME_stride_NAMEEND_VAL temp11078_109)))
(assert (= temp11078_111 #x0000000000000000))
(assert (= temp11078_112 #x0000000000000000))
(assert (= temp11078_113 temp11078_112))
(assert (= temp11078_114 (select ARGNAME_stride_NAMEEND_VAL temp11078_113)))
(assert (= temp11078_115 #x0000000000000000))
(assert (= temp11078_116 #x0000000000000001))
(assert (= temp11078_117 temp11078_116))
(assert (= temp11078_118 (select ARGNAME_stride_NAMEEND_VAL temp11078_117)))
(assert (= temp11078_119 #x0000000000000000))
(assert (= temp11078_120 #x0000000000000002))
(assert (= temp11078_121 temp11078_120))
(assert (= temp11078_122 (select ARGNAME_stride_NAMEEND_VAL temp11078_121)))
(assert (= temp11078_123 #x0000000000000000))
(assert (= temp11078_124 #x0000000000000003))
(assert (= temp11078_125 temp11078_124))
(assert (= temp11078_126 (select ARGNAME_stride_NAMEEND_VAL temp11078_125)))
(assert (= temp11078_127 #x0000000000000000))
(assert (= temp11078_128 #x0000000000000004))
(assert (= temp11078_129 temp11078_128))
(assert (= temp11078_130 (select ARGNAME_stride_NAMEEND_VAL temp11078_129)))
(assert (= temp11078_131 #x0000000000000000))
(assert (= temp11078_132 #x0000000000000005))
(assert (= temp11078_133 temp11078_132))
(assert (= temp11078_134 (select ARGNAME_stride_NAMEEND_VAL temp11078_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp11078_114 temp11078_111)
             (bvsle temp11078_118 temp11078_115)
             (bvsle temp11078_122 temp11078_119)
             (bvsle temp11078_126 temp11078_123)
             (bvsle temp11078_130 temp11078_127)
             (bvsle temp11078_134 temp11078_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11078_135 #x0000000000000000))
(assert (= var1191735 temp11078_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11078_136 #x0000000000000001))
(assert (= var1191747 temp11078_136))
(assert (= temp11078_137 #x0000000000000000))
(assert (= var1179826 temp11078_137))
(assert (= temp11078_138 #x0000000000000000))
(assert (= temp11078_139 temp11078_138))
(assert (= temp11078_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11078_139)))
(assert (= temp11078_141 #x0000000000000001))
(assert (= temp11078_142 temp11078_141))
(assert (= temp11078_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11078_142)))
(assert (= temp11078_144 #x0000000000000002))
(assert (= temp11078_145 temp11078_144))
(assert (= temp11078_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11078_145)))
(assert (= temp11078_147 #x0000000000000003))
(assert (= temp11078_148 temp11078_147))
(assert (= temp11078_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11078_148)))
(assert (= temp11078_150 #x0000000000000004))
(assert (= temp11078_151 temp11078_150))
(assert (= temp11078_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11078_151)))
(assert (= temp11078_153 #x0000000000000005))
(assert (= temp11078_154 temp11078_153))
(assert (= temp11078_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11078_154)))
(assert (= temp11078_157 var1179826))
(assert (= temp11078_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11078_157)))
(assert (= temp11078_156 temp11078_158))
(assert (= var1191780
   (ite (bvslt temp11078_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11078_159 #x0000000000000000))
(assert (= var1191780 temp11078_159))
(assert (= temp11078_160 #x0000000000000000))
(assert (= var1179826 temp11078_160))
(assert (= temp11078_162 var1179826))
(assert (= temp11078_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11078_162)))
(assert (= temp11078_161 temp11078_163))
(assert (= var1191802 (bvsmod temp11078_161 ARGNAME_groups_NAMEEND)))
(assert (= temp11078_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp11078_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp11078_165 #x0000000000000001))
(assert (= var1191803 temp11078_165))
(assert (= temp11078_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp11078_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11078_167 #x0000000000000001))
(assert (= var1191823 temp11078_167))
(assert (= temp11078_168 #x0000000000000001))
(assert (= var1180714 temp11078_168))
(assert (= temp11078_169 #x0000000000000000))
(assert (= temp11078_170 temp11078_169))
(assert (= temp11078_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp11078_170)))
(assert (= temp11078_172 #x0000000000000001))
(assert (= temp11078_173 temp11078_172))
(assert (= temp11078_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp11078_173)))
(assert (= temp11078_175 #x0000000000000002))
(assert (= temp11078_176 temp11078_175))
(assert (= temp11078_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp11078_176)))
(assert (= temp11078_178 #x0000000000000003))
(assert (= temp11078_179 temp11078_178))
(assert (= temp11078_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp11078_179)))
(assert (= temp11078_181 #x0000000000000004))
(assert (= temp11078_182 temp11078_181))
(assert (= temp11078_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp11078_182)))
(assert (= temp11078_184 #x0000000000000005))
(assert (= temp11078_185 temp11078_184))
(assert (= temp11078_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp11078_185)))
(assert (= temp11078_187 #x0000000000000000))
(assert (= temp11078_188
   (ite (bvslt var1180714 temp11078_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp11078_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp11078_188)))
(assert (= var1191831 temp11078_189))
(assert (bvslt (ite (bvslt var1180714 temp11078_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11078_190 #x0000000000000001))
(assert (= var1180714 temp11078_190))
(assert (= temp11078_192 var1180714))
(assert (= temp11078_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11078_192)))
(assert (= temp11078_191 temp11078_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp11078_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp11078_194 #x0000000000000001))
(assert (= var1191836 temp11078_194))
(assert (= temp11078_195 #x0000000000000000))
(assert (= var1179826 temp11078_195))
(assert (= temp11078_197 var1179826))
(assert (= temp11078_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11078_197)))
(assert (= temp11078_196 temp11078_198))
(assert (= temp11078_199 #x0000000000000002))
(assert (= var1586025 temp11078_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp11078_200 #x0000000000000001))
(assert (= var1191993 temp11078_200))
(assert (= temp11078_201 #x0000000000000001))
(assert (= var2700303 temp11078_201))
(assert (= temp11078_202 #x0000000000000001))
(assert (= var2962447 temp11078_202))
(assert (= temp11078_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp11078_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11078_204 #x0000000000000001))
(assert (= var211058 temp11078_204))
(assert (= temp11078_205 #x0000000000000001))
(assert (= var211188 temp11078_205))
(assert (= var3879401 var211188))
(assert (= temp11078_206 #x0000000000000000))
(assert (= var3866802 temp11078_206))
(assert (= temp11078_207 #x0000000000000000))
(assert (= temp11078_208
   (ite (bvslt var3866802 temp11078_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp11078_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp11078_208)))
(assert (= var3879420 temp11078_209))
(assert (bvslt (ite (bvslt var3866802 temp11078_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11078_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp11078_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp11078_211 #x0000000000000000))
(assert (= var3879421 temp11078_211))
(assert (= temp11078_212 #x0000000000000001))
(assert (= var3867690 temp11078_212))
(assert (= temp11078_213 #x0000000000000000))
(assert (= temp11078_214
   (ite (bvslt var3867690 temp11078_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp11078_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp11078_214)))
(assert (= var3879423 temp11078_215))
(assert (bvslt (ite (bvslt var3867690 temp11078_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11078_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp11078_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp11078_217 #x0000000000000001))
(assert (= var3879424 temp11078_217))
(assert (= temp11078_218 #x0000000000000000))
(assert (= var4133117 temp11078_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp11078_219 #x0000000000000002))
(assert (= var4339331 temp11078_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11078_220 #x0000000000000000))
(assert (= var4404892 temp11078_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var4600208 var211201))
(assert (= var4862352 var211201))
(assert (= temp11078_221 #x0000000000000001))
(assert (= var212414
   (ite (= ARGNAME_groups_NAMEEND temp11078_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11078_222 #x0000000000000000))
(assert (= var212414 temp11078_222))
(assert (= temp11078_223 #x0000000000000002))
(assert (= var5191299 temp11078_223))
(assert (= var5256844 var5191299))
(assert (= temp11078_224 #x0000000000000001))
(assert (= var211058 temp11078_224))
(model-add temp11078_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp11078_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp11078_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp11078_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




