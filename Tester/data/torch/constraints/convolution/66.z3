(declare-fun temp88_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp88_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp88_3 () (_ BitVec 64))
(declare-fun temp88_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp88_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp88_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp88_7 () (_ BitVec 64))
(declare-fun temp88_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp88_9 () (_ BitVec 64))
(declare-fun temp88_10 () (_ BitVec 64))
(declare-fun temp88_11 () (_ BitVec 64))
(declare-fun temp88_12 () (_ BitVec 64))
(declare-fun temp88_13 () (_ BitVec 64))
(declare-fun temp88_14 () (_ BitVec 64))
(declare-fun temp88_15 () (_ BitVec 64))
(declare-fun temp88_16 () (_ BitVec 64))
(declare-fun temp88_17 () (_ BitVec 64))
(declare-fun temp88_18 () (_ BitVec 64))
(declare-fun temp88_19 () (_ BitVec 64))
(declare-fun temp88_20 () (_ BitVec 64))
(declare-fun temp88_21 () (_ BitVec 64))
(declare-fun temp88_22 () (_ BitVec 64))
(declare-fun temp88_23 () (_ BitVec 64))
(declare-fun temp88_24 () (_ BitVec 64))
(declare-fun temp88_25 () (_ BitVec 64))
(declare-fun temp88_26 () (_ BitVec 64))
(declare-fun temp88_27 () (_ BitVec 64))
(declare-fun temp88_28 () (_ BitVec 64))
(declare-fun temp88_29 () (_ BitVec 64))
(declare-fun temp88_30 () (_ BitVec 64))
(declare-fun temp88_31 () (_ BitVec 64))
(declare-fun temp88_32 () (_ BitVec 64))
(declare-fun temp88_33 () (_ BitVec 64))
(declare-fun temp88_34 () (_ BitVec 64))
(declare-fun temp88_35 () (_ BitVec 64))
(declare-fun temp88_36 () (_ BitVec 64))
(declare-fun temp88_37 () (_ BitVec 64))
(declare-fun temp88_38 () (_ BitVec 64))
(declare-fun temp88_39 () (_ BitVec 64))
(declare-fun temp88_40 () (_ BitVec 64))
(declare-fun temp88_41 () (_ BitVec 64))
(declare-fun temp88_42 () (_ BitVec 64))
(declare-fun temp88_43 () (_ BitVec 64))
(declare-fun temp88_44 () (_ BitVec 64))
(declare-fun temp88_45 () (_ BitVec 64))
(declare-fun temp88_46 () (_ BitVec 64))
(declare-fun temp88_47 () (_ BitVec 64))
(declare-fun temp88_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp88_49 () (_ BitVec 64))
(declare-fun temp88_50 () (_ BitVec 64))
(declare-fun temp88_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp88_52 () (_ BitVec 64))
(declare-fun temp88_53 () (_ BitVec 64))
(declare-fun temp88_54 () (_ BitVec 64))
(declare-fun temp88_55 () (_ BitVec 64))
(declare-fun temp88_56 () (_ BitVec 64))
(declare-fun temp88_57 () (_ BitVec 64))
(declare-fun temp88_58 () (_ BitVec 64))
(declare-fun temp88_59 () (_ BitVec 64))
(declare-fun temp88_60 () (_ BitVec 64))
(declare-fun temp88_61 () (_ BitVec 64))
(declare-fun temp88_62 () (_ BitVec 64))
(declare-fun temp88_63 () (_ BitVec 64))
(declare-fun temp88_64 () (_ BitVec 64))
(declare-fun temp88_65 () (_ BitVec 64))
(declare-fun temp88_66 () (_ BitVec 64))
(declare-fun temp88_67 () (_ BitVec 64))
(declare-fun temp88_68 () (_ BitVec 64))
(declare-fun temp88_69 () (_ BitVec 64))
(declare-fun temp88_70 () (_ BitVec 64))
(declare-fun temp88_71 () (_ BitVec 64))
(declare-fun temp88_72 () (_ BitVec 64))
(declare-fun temp88_73 () (_ BitVec 64))
(declare-fun temp88_74 () (_ BitVec 64))
(declare-fun temp88_75 () (_ BitVec 64))
(declare-fun temp88_76 () (_ BitVec 64))
(declare-fun temp88_77 () (_ BitVec 64))
(declare-fun temp88_78 () (_ BitVec 64))
(declare-fun temp88_79 () (_ BitVec 64))
(declare-fun temp88_80 () (_ BitVec 64))
(declare-fun temp88_81 () (_ BitVec 64))
(declare-fun temp88_82 () (_ BitVec 64))
(declare-fun temp88_83 () (_ BitVec 64))
(declare-fun temp88_84 () (_ BitVec 64))
(declare-fun temp88_85 () (_ BitVec 64))
(declare-fun temp88_86 () (_ BitVec 64))
(declare-fun temp88_87 () (_ BitVec 64))
(declare-fun temp88_88 () (_ BitVec 64))
(declare-fun temp88_89 () (_ BitVec 64))
(declare-fun temp88_90 () (_ BitVec 64))
(declare-fun temp88_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp88_92 () (_ BitVec 64))
(declare-fun temp88_93 () (_ BitVec 64))
(declare-fun temp88_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp88_95 () (_ BitVec 64))
(declare-fun temp88_96 () (_ BitVec 64))
(declare-fun temp88_97 () (_ BitVec 64))
(declare-fun temp88_98 () (_ BitVec 64))
(declare-fun temp88_99 () (_ BitVec 64))
(declare-fun temp88_100 () (_ BitVec 64))
(declare-fun temp88_101 () (_ BitVec 64))
(declare-fun temp88_102 () (_ BitVec 64))
(declare-fun temp88_103 () (_ BitVec 64))
(declare-fun temp88_104 () (_ BitVec 64))
(declare-fun temp88_105 () (_ BitVec 64))
(declare-fun temp88_106 () (_ BitVec 64))
(declare-fun temp88_107 () (_ BitVec 64))
(declare-fun temp88_108 () (_ BitVec 64))
(declare-fun temp88_109 () (_ BitVec 64))
(declare-fun temp88_110 () (_ BitVec 64))
(declare-fun temp88_111 () (_ BitVec 64))
(declare-fun temp88_112 () (_ BitVec 64))
(declare-fun temp88_113 () (_ BitVec 64))
(declare-fun temp88_114 () (_ BitVec 64))
(declare-fun temp88_115 () (_ BitVec 64))
(declare-fun temp88_116 () (_ BitVec 64))
(declare-fun temp88_117 () (_ BitVec 64))
(declare-fun temp88_118 () (_ BitVec 64))
(declare-fun temp88_119 () (_ BitVec 64))
(declare-fun temp88_120 () (_ BitVec 64))
(declare-fun temp88_121 () (_ BitVec 64))
(declare-fun temp88_122 () (_ BitVec 64))
(declare-fun temp88_123 () (_ BitVec 64))
(declare-fun temp88_124 () (_ BitVec 64))
(declare-fun temp88_125 () (_ BitVec 64))
(declare-fun temp88_126 () (_ BitVec 64))
(declare-fun temp88_127 () (_ BitVec 64))
(declare-fun temp88_128 () (_ BitVec 64))
(declare-fun temp88_129 () (_ BitVec 64))
(declare-fun temp88_130 () (_ BitVec 64))
(declare-fun temp88_131 () (_ BitVec 64))
(declare-fun temp88_132 () (_ BitVec 64))
(declare-fun temp88_133 () (_ BitVec 64))
(declare-fun temp88_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp88_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp88_136 () (_ BitVec 64))
(declare-fun temp88_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp88_138 () (_ BitVec 64))
(declare-fun temp88_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp88_140 () (_ BitVec 64))
(declare-fun temp88_141 () (_ BitVec 64))
(declare-fun temp88_142 () (_ BitVec 64))
(declare-fun temp88_143 () (_ BitVec 64))
(declare-fun temp88_144 () (_ BitVec 64))
(declare-fun temp88_145 () (_ BitVec 64))
(declare-fun temp88_146 () (_ BitVec 64))
(declare-fun temp88_147 () (_ BitVec 64))
(declare-fun temp88_148 () (_ BitVec 64))
(declare-fun temp88_149 () (_ BitVec 64))
(declare-fun temp88_150 () (_ BitVec 64))
(declare-fun temp88_151 () (_ BitVec 64))
(declare-fun temp88_152 () (_ BitVec 64))
(declare-fun temp88_153 () (_ BitVec 64))
(declare-fun temp88_154 () (_ BitVec 64))
(declare-fun temp88_155 () (_ BitVec 64))
(declare-fun temp88_157 () (_ BitVec 64))
(declare-fun temp88_158 () (_ BitVec 64))
(declare-fun temp88_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp88_159 () (_ BitVec 64))
(declare-fun temp88_160 () (_ BitVec 64))
(declare-fun temp88_162 () (_ BitVec 64))
(declare-fun temp88_163 () (_ BitVec 64))
(declare-fun temp88_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp88_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp88_165 () (_ BitVec 64))
(declare-fun temp88_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp88_167 () (_ BitVec 64))
(declare-fun temp88_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp88_169 () (_ BitVec 64))
(declare-fun temp88_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp88_171 () (_ BitVec 64))
(declare-fun temp88_172 () (_ BitVec 64))
(declare-fun temp88_173 () (_ BitVec 64))
(declare-fun temp88_174 () (_ BitVec 64))
(declare-fun temp88_175 () (_ BitVec 64))
(declare-fun temp88_176 () (_ BitVec 64))
(declare-fun temp88_177 () (_ BitVec 64))
(declare-fun temp88_178 () (_ BitVec 64))
(declare-fun temp88_179 () (_ BitVec 64))
(declare-fun temp88_180 () (_ BitVec 64))
(declare-fun temp88_181 () (_ BitVec 64))
(declare-fun temp88_182 () (_ BitVec 64))
(declare-fun temp88_183 () (_ BitVec 64))
(declare-fun temp88_184 () (_ BitVec 64))
(declare-fun temp88_185 () (_ BitVec 64))
(declare-fun temp88_186 () (_ BitVec 64))
(declare-fun temp88_187 () (_ BitVec 64))
(declare-fun temp88_188 () (_ BitVec 64))
(declare-fun temp88_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp88_190 () (_ BitVec 64))
(declare-fun temp88_192 () (_ BitVec 64))
(declare-fun temp88_193 () (_ BitVec 64))
(declare-fun temp88_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp88_194 () (_ BitVec 64))
(declare-fun temp88_195 () (_ BitVec 64))
(declare-fun temp88_197 () (_ BitVec 64))
(declare-fun temp88_198 () (_ BitVec 64))
(declare-fun temp88_196 () (_ BitVec 64))
(declare-fun temp88_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp88_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp88_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp88_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp88_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp88_204 () (_ BitVec 64))
(declare-fun temp88_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp88_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp88_207 () (_ BitVec 64))
(declare-fun temp88_208 () (_ BitVec 64))
(declare-fun temp88_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp88_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp88_211 () (_ BitVec 64))
(declare-fun temp88_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp88_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp88_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp88_216 () (_ BitVec 64))
(declare-fun temp88_215 () (_ BitVec 64))
(declare-fun temp88_217 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp88_218 () (_ BitVec 64))
(declare-fun temp88_219 () (_ BitVec 64))
(declare-fun temp88_220 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp88_221 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp88_222 () (_ BitVec 64))
(declare-fun temp88_224 () (_ BitVec 64))
(declare-fun temp88_223 () (_ BitVec 64))
(declare-fun temp88_225 () (_ BitVec 64))
(assert (= temp88_1 #x0000000000000001))
(assert (= var77203 temp88_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp88_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp88_2)))
(assert (= temp88_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp88_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp88_4 #x0000000000000000))
(assert (= var210941 temp88_4))
(assert (= temp88_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp88_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp88_6 #x0000000000000000))
(assert (= var210986 temp88_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp88_7 #x0000000000000000))
(assert (= temp88_8 temp88_7))
(assert (= temp88_9 (select ARGNAME_padding_NAMEEND_VAL temp88_8)))
(assert (= temp88_10 #x0000000000000001))
(assert (= temp88_11 temp88_10))
(assert (= temp88_12 (select ARGNAME_padding_NAMEEND_VAL temp88_11)))
(assert (= temp88_13 #x0000000000000002))
(assert (= temp88_14 temp88_13))
(assert (= temp88_15 (select ARGNAME_padding_NAMEEND_VAL temp88_14)))
(assert (= temp88_16 #x0000000000000003))
(assert (= temp88_17 temp88_16))
(assert (= temp88_18 (select ARGNAME_padding_NAMEEND_VAL temp88_17)))
(assert (= temp88_19 #x0000000000000004))
(assert (= temp88_20 temp88_19))
(assert (= temp88_21 (select ARGNAME_padding_NAMEEND_VAL temp88_20)))
(assert (= temp88_22 #x0000000000000005))
(assert (= temp88_23 temp88_22))
(assert (= temp88_24 (select ARGNAME_padding_NAMEEND_VAL temp88_23)))
(assert (= temp88_25 #x0000000000000000))
(assert (= temp88_26 #x0000000000000000))
(assert (= temp88_27 temp88_26))
(assert (= temp88_28 (select ARGNAME_padding_NAMEEND_VAL temp88_27)))
(assert (= temp88_29 #x0000000000000000))
(assert (= temp88_30 #x0000000000000001))
(assert (= temp88_31 temp88_30))
(assert (= temp88_32 (select ARGNAME_padding_NAMEEND_VAL temp88_31)))
(assert (= temp88_33 #x0000000000000000))
(assert (= temp88_34 #x0000000000000002))
(assert (= temp88_35 temp88_34))
(assert (= temp88_36 (select ARGNAME_padding_NAMEEND_VAL temp88_35)))
(assert (= temp88_37 #x0000000000000000))
(assert (= temp88_38 #x0000000000000003))
(assert (= temp88_39 temp88_38))
(assert (= temp88_40 (select ARGNAME_padding_NAMEEND_VAL temp88_39)))
(assert (= temp88_41 #x0000000000000000))
(assert (= temp88_42 #x0000000000000004))
(assert (= temp88_43 temp88_42))
(assert (= temp88_44 (select ARGNAME_padding_NAMEEND_VAL temp88_43)))
(assert (= temp88_45 #x0000000000000000))
(assert (= temp88_46 #x0000000000000005))
(assert (= temp88_47 temp88_46))
(assert (= temp88_48 (select ARGNAME_padding_NAMEEND_VAL temp88_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp88_28 temp88_25)
             (bvslt temp88_32 temp88_29)
             (bvslt temp88_36 temp88_33)
             (bvslt temp88_40 temp88_37)
             (bvslt temp88_44 temp88_41)
             (bvslt temp88_48 temp88_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp88_49 #x0000000000000000))
(assert (= var1191714 temp88_49))
(assert (= temp88_50 #x0000000000000000))
(assert (= temp88_51 temp88_50))
(assert (= temp88_52 (select ARGNAME_output_padding_NAMEEND_VAL temp88_51)))
(assert (= temp88_53 #x0000000000000001))
(assert (= temp88_54 temp88_53))
(assert (= temp88_55 (select ARGNAME_output_padding_NAMEEND_VAL temp88_54)))
(assert (= temp88_56 #x0000000000000002))
(assert (= temp88_57 temp88_56))
(assert (= temp88_58 (select ARGNAME_output_padding_NAMEEND_VAL temp88_57)))
(assert (= temp88_59 #x0000000000000003))
(assert (= temp88_60 temp88_59))
(assert (= temp88_61 (select ARGNAME_output_padding_NAMEEND_VAL temp88_60)))
(assert (= temp88_62 #x0000000000000004))
(assert (= temp88_63 temp88_62))
(assert (= temp88_64 (select ARGNAME_output_padding_NAMEEND_VAL temp88_63)))
(assert (= temp88_65 #x0000000000000005))
(assert (= temp88_66 temp88_65))
(assert (= temp88_67 (select ARGNAME_output_padding_NAMEEND_VAL temp88_66)))
(assert (= temp88_68 #x0000000000000000))
(assert (= temp88_69 #x0000000000000000))
(assert (= temp88_70 temp88_69))
(assert (= temp88_71 (select ARGNAME_output_padding_NAMEEND_VAL temp88_70)))
(assert (= temp88_72 #x0000000000000000))
(assert (= temp88_73 #x0000000000000001))
(assert (= temp88_74 temp88_73))
(assert (= temp88_75 (select ARGNAME_output_padding_NAMEEND_VAL temp88_74)))
(assert (= temp88_76 #x0000000000000000))
(assert (= temp88_77 #x0000000000000002))
(assert (= temp88_78 temp88_77))
(assert (= temp88_79 (select ARGNAME_output_padding_NAMEEND_VAL temp88_78)))
(assert (= temp88_80 #x0000000000000000))
(assert (= temp88_81 #x0000000000000003))
(assert (= temp88_82 temp88_81))
(assert (= temp88_83 (select ARGNAME_output_padding_NAMEEND_VAL temp88_82)))
(assert (= temp88_84 #x0000000000000000))
(assert (= temp88_85 #x0000000000000004))
(assert (= temp88_86 temp88_85))
(assert (= temp88_87 (select ARGNAME_output_padding_NAMEEND_VAL temp88_86)))
(assert (= temp88_88 #x0000000000000000))
(assert (= temp88_89 #x0000000000000005))
(assert (= temp88_90 temp88_89))
(assert (= temp88_91 (select ARGNAME_output_padding_NAMEEND_VAL temp88_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp88_71 temp88_68)
             (bvslt temp88_75 temp88_72)
             (bvslt temp88_79 temp88_76)
             (bvslt temp88_83 temp88_80)
             (bvslt temp88_87 temp88_84)
             (bvslt temp88_91 temp88_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp88_92 #x0000000000000000))
(assert (= var1191725 temp88_92))
(assert (= temp88_93 #x0000000000000000))
(assert (= temp88_94 temp88_93))
(assert (= temp88_95 (select ARGNAME_stride_NAMEEND_VAL temp88_94)))
(assert (= temp88_96 #x0000000000000001))
(assert (= temp88_97 temp88_96))
(assert (= temp88_98 (select ARGNAME_stride_NAMEEND_VAL temp88_97)))
(assert (= temp88_99 #x0000000000000002))
(assert (= temp88_100 temp88_99))
(assert (= temp88_101 (select ARGNAME_stride_NAMEEND_VAL temp88_100)))
(assert (= temp88_102 #x0000000000000003))
(assert (= temp88_103 temp88_102))
(assert (= temp88_104 (select ARGNAME_stride_NAMEEND_VAL temp88_103)))
(assert (= temp88_105 #x0000000000000004))
(assert (= temp88_106 temp88_105))
(assert (= temp88_107 (select ARGNAME_stride_NAMEEND_VAL temp88_106)))
(assert (= temp88_108 #x0000000000000005))
(assert (= temp88_109 temp88_108))
(assert (= temp88_110 (select ARGNAME_stride_NAMEEND_VAL temp88_109)))
(assert (= temp88_111 #x0000000000000000))
(assert (= temp88_112 #x0000000000000000))
(assert (= temp88_113 temp88_112))
(assert (= temp88_114 (select ARGNAME_stride_NAMEEND_VAL temp88_113)))
(assert (= temp88_115 #x0000000000000000))
(assert (= temp88_116 #x0000000000000001))
(assert (= temp88_117 temp88_116))
(assert (= temp88_118 (select ARGNAME_stride_NAMEEND_VAL temp88_117)))
(assert (= temp88_119 #x0000000000000000))
(assert (= temp88_120 #x0000000000000002))
(assert (= temp88_121 temp88_120))
(assert (= temp88_122 (select ARGNAME_stride_NAMEEND_VAL temp88_121)))
(assert (= temp88_123 #x0000000000000000))
(assert (= temp88_124 #x0000000000000003))
(assert (= temp88_125 temp88_124))
(assert (= temp88_126 (select ARGNAME_stride_NAMEEND_VAL temp88_125)))
(assert (= temp88_127 #x0000000000000000))
(assert (= temp88_128 #x0000000000000004))
(assert (= temp88_129 temp88_128))
(assert (= temp88_130 (select ARGNAME_stride_NAMEEND_VAL temp88_129)))
(assert (= temp88_131 #x0000000000000000))
(assert (= temp88_132 #x0000000000000005))
(assert (= temp88_133 temp88_132))
(assert (= temp88_134 (select ARGNAME_stride_NAMEEND_VAL temp88_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp88_114 temp88_111)
             (bvsle temp88_118 temp88_115)
             (bvsle temp88_122 temp88_119)
             (bvsle temp88_126 temp88_123)
             (bvsle temp88_130 temp88_127)
             (bvsle temp88_134 temp88_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp88_135 #x0000000000000000))
(assert (= var1191735 temp88_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp88_136 #x0000000000000001))
(assert (= var1191747 temp88_136))
(assert (= temp88_137 #x0000000000000000))
(assert (= var1179826 temp88_137))
(assert (= temp88_138 #x0000000000000000))
(assert (= temp88_139 temp88_138))
(assert (= temp88_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp88_139)))
(assert (= temp88_141 #x0000000000000001))
(assert (= temp88_142 temp88_141))
(assert (= temp88_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp88_142)))
(assert (= temp88_144 #x0000000000000002))
(assert (= temp88_145 temp88_144))
(assert (= temp88_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp88_145)))
(assert (= temp88_147 #x0000000000000003))
(assert (= temp88_148 temp88_147))
(assert (= temp88_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp88_148)))
(assert (= temp88_150 #x0000000000000004))
(assert (= temp88_151 temp88_150))
(assert (= temp88_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp88_151)))
(assert (= temp88_153 #x0000000000000005))
(assert (= temp88_154 temp88_153))
(assert (= temp88_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp88_154)))
(assert (= temp88_157 var1179826))
(assert (= temp88_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp88_157)))
(assert (= temp88_156 temp88_158))
(assert (= var1191780
   (ite (bvslt temp88_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp88_159 #x0000000000000000))
(assert (= var1191780 temp88_159))
(assert (= temp88_160 #x0000000000000000))
(assert (= var1179826 temp88_160))
(assert (= temp88_162 var1179826))
(assert (= temp88_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp88_162)))
(assert (= temp88_161 temp88_163))
(assert (= var1191802 (bvsmod temp88_161 ARGNAME_groups_NAMEEND)))
(assert (= temp88_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp88_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp88_165 #x0000000000000001))
(assert (= var1191803 temp88_165))
(assert (= temp88_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp88_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp88_167 #x0000000000000001))
(assert (= var1191823 temp88_167))
(assert (= temp88_168 #x0000000000000001))
(assert (= var1180714 temp88_168))
(assert (= temp88_169 #x0000000000000000))
(assert (= temp88_170 temp88_169))
(assert (= temp88_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp88_170)))
(assert (= temp88_172 #x0000000000000001))
(assert (= temp88_173 temp88_172))
(assert (= temp88_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp88_173)))
(assert (= temp88_175 #x0000000000000002))
(assert (= temp88_176 temp88_175))
(assert (= temp88_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp88_176)))
(assert (= temp88_178 #x0000000000000003))
(assert (= temp88_179 temp88_178))
(assert (= temp88_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp88_179)))
(assert (= temp88_181 #x0000000000000004))
(assert (= temp88_182 temp88_181))
(assert (= temp88_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp88_182)))
(assert (= temp88_184 #x0000000000000005))
(assert (= temp88_185 temp88_184))
(assert (= temp88_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp88_185)))
(assert (= temp88_187 #x0000000000000000))
(assert (= temp88_188
   (ite (bvslt var1180714 temp88_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp88_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp88_188)))
(assert (= var1191831 temp88_189))
(assert (bvslt (ite (bvslt var1180714 temp88_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp88_190 #x0000000000000001))
(assert (= var1180714 temp88_190))
(assert (= temp88_192 var1180714))
(assert (= temp88_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp88_192)))
(assert (= temp88_191 temp88_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp88_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp88_194 #x0000000000000001))
(assert (= var1191836 temp88_194))
(assert (= temp88_195 #x0000000000000000))
(assert (= var1179826 temp88_195))
(assert (= temp88_197 var1179826))
(assert (= temp88_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp88_197)))
(assert (= temp88_196 temp88_198))
(assert (= temp88_199 #x0000000000000002))
(assert (= var1586025 temp88_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp88_200 #x0000000000000001))
(assert (= var1191993 temp88_200))
(assert (= temp88_201 #x0000000000000001))
(assert (= var2700303 temp88_201))
(assert (= temp88_202 #x0000000000000001))
(assert (= var2962447 temp88_202))
(assert (= temp88_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp88_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp88_204 #x0000000000000001))
(assert (= var211058 temp88_204))
(assert (= temp88_205 #x0000000000000001))
(assert (= var211188 temp88_205))
(assert (= var3879401 var211188))
(assert (= temp88_206 #x0000000000000000))
(assert (= var3866802 temp88_206))
(assert (= temp88_207 #x0000000000000000))
(assert (= temp88_208
   (ite (bvslt var3866802 temp88_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp88_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp88_208)))
(assert (= var3879420 temp88_209))
(assert (bvslt (ite (bvslt var3866802 temp88_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp88_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp88_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp88_211 #x0000000000000001))
(assert (= var3879421 temp88_211))
(assert (= temp88_212 #x0000000000000000))
(assert (= var4079423 temp88_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp88_213 #x0000000000000002))
(assert (= var4208259 temp88_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp88_214 #x0000000000000000))
(assert (= var4273820 temp88_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp88_216 #xffffffffffffffff))
(assert (= temp88_215 temp88_216))
(assert (= temp88_217 #x0000000000000001))
(assert (= var197674 temp88_217))
(assert (= temp88_218 #x0000000000000000))
(assert (= temp88_219
   (ite (bvslt var197674 temp88_218)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp88_220 (select ARGNAME_input_NAMEEND_DIMSIZE temp88_219)))
(assert (= var211595 temp88_220))
(assert (bvslt (ite (bvslt var197674 temp88_218)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp88_221 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp88_221) #x0000000000000001 #x0000000000000000)))
(assert (= temp88_222 #x0000000000000001))
(assert (= var211596 temp88_222))
(assert (= temp88_224 #xffffffffffffffff))
(assert (= temp88_223 temp88_224))
(assert (= temp88_225 #x0000000000000001))
(assert (= var211058 temp88_225))
(model-add temp88_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp88_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp88_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp88_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





