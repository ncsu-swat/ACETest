(declare-fun temp10625_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10625_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10625_3 () (_ BitVec 64))
(declare-fun temp10625_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10625_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10625_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10625_7 () (_ BitVec 64))
(declare-fun temp10625_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10625_9 () (_ BitVec 64))
(declare-fun temp10625_10 () (_ BitVec 64))
(declare-fun temp10625_11 () (_ BitVec 64))
(declare-fun temp10625_12 () (_ BitVec 64))
(declare-fun temp10625_13 () (_ BitVec 64))
(declare-fun temp10625_14 () (_ BitVec 64))
(declare-fun temp10625_15 () (_ BitVec 64))
(declare-fun temp10625_16 () (_ BitVec 64))
(declare-fun temp10625_17 () (_ BitVec 64))
(declare-fun temp10625_18 () (_ BitVec 64))
(declare-fun temp10625_19 () (_ BitVec 64))
(declare-fun temp10625_20 () (_ BitVec 64))
(declare-fun temp10625_21 () (_ BitVec 64))
(declare-fun temp10625_22 () (_ BitVec 64))
(declare-fun temp10625_23 () (_ BitVec 64))
(declare-fun temp10625_24 () (_ BitVec 64))
(declare-fun temp10625_25 () (_ BitVec 64))
(declare-fun temp10625_26 () (_ BitVec 64))
(declare-fun temp10625_27 () (_ BitVec 64))
(declare-fun temp10625_28 () (_ BitVec 64))
(declare-fun temp10625_29 () (_ BitVec 64))
(declare-fun temp10625_30 () (_ BitVec 64))
(declare-fun temp10625_31 () (_ BitVec 64))
(declare-fun temp10625_32 () (_ BitVec 64))
(declare-fun temp10625_33 () (_ BitVec 64))
(declare-fun temp10625_34 () (_ BitVec 64))
(declare-fun temp10625_35 () (_ BitVec 64))
(declare-fun temp10625_36 () (_ BitVec 64))
(declare-fun temp10625_37 () (_ BitVec 64))
(declare-fun temp10625_38 () (_ BitVec 64))
(declare-fun temp10625_39 () (_ BitVec 64))
(declare-fun temp10625_40 () (_ BitVec 64))
(declare-fun temp10625_41 () (_ BitVec 64))
(declare-fun temp10625_42 () (_ BitVec 64))
(declare-fun temp10625_43 () (_ BitVec 64))
(declare-fun temp10625_44 () (_ BitVec 64))
(declare-fun temp10625_45 () (_ BitVec 64))
(declare-fun temp10625_46 () (_ BitVec 64))
(declare-fun temp10625_47 () (_ BitVec 64))
(declare-fun temp10625_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10625_49 () (_ BitVec 64))
(declare-fun temp10625_50 () (_ BitVec 64))
(declare-fun temp10625_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10625_52 () (_ BitVec 64))
(declare-fun temp10625_53 () (_ BitVec 64))
(declare-fun temp10625_54 () (_ BitVec 64))
(declare-fun temp10625_55 () (_ BitVec 64))
(declare-fun temp10625_56 () (_ BitVec 64))
(declare-fun temp10625_57 () (_ BitVec 64))
(declare-fun temp10625_58 () (_ BitVec 64))
(declare-fun temp10625_59 () (_ BitVec 64))
(declare-fun temp10625_60 () (_ BitVec 64))
(declare-fun temp10625_61 () (_ BitVec 64))
(declare-fun temp10625_62 () (_ BitVec 64))
(declare-fun temp10625_63 () (_ BitVec 64))
(declare-fun temp10625_64 () (_ BitVec 64))
(declare-fun temp10625_65 () (_ BitVec 64))
(declare-fun temp10625_66 () (_ BitVec 64))
(declare-fun temp10625_67 () (_ BitVec 64))
(declare-fun temp10625_68 () (_ BitVec 64))
(declare-fun temp10625_69 () (_ BitVec 64))
(declare-fun temp10625_70 () (_ BitVec 64))
(declare-fun temp10625_71 () (_ BitVec 64))
(declare-fun temp10625_72 () (_ BitVec 64))
(declare-fun temp10625_73 () (_ BitVec 64))
(declare-fun temp10625_74 () (_ BitVec 64))
(declare-fun temp10625_75 () (_ BitVec 64))
(declare-fun temp10625_76 () (_ BitVec 64))
(declare-fun temp10625_77 () (_ BitVec 64))
(declare-fun temp10625_78 () (_ BitVec 64))
(declare-fun temp10625_79 () (_ BitVec 64))
(declare-fun temp10625_80 () (_ BitVec 64))
(declare-fun temp10625_81 () (_ BitVec 64))
(declare-fun temp10625_82 () (_ BitVec 64))
(declare-fun temp10625_83 () (_ BitVec 64))
(declare-fun temp10625_84 () (_ BitVec 64))
(declare-fun temp10625_85 () (_ BitVec 64))
(declare-fun temp10625_86 () (_ BitVec 64))
(declare-fun temp10625_87 () (_ BitVec 64))
(declare-fun temp10625_88 () (_ BitVec 64))
(declare-fun temp10625_89 () (_ BitVec 64))
(declare-fun temp10625_90 () (_ BitVec 64))
(declare-fun temp10625_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10625_92 () (_ BitVec 64))
(declare-fun temp10625_93 () (_ BitVec 64))
(declare-fun temp10625_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10625_95 () (_ BitVec 64))
(declare-fun temp10625_96 () (_ BitVec 64))
(declare-fun temp10625_97 () (_ BitVec 64))
(declare-fun temp10625_98 () (_ BitVec 64))
(declare-fun temp10625_99 () (_ BitVec 64))
(declare-fun temp10625_100 () (_ BitVec 64))
(declare-fun temp10625_101 () (_ BitVec 64))
(declare-fun temp10625_102 () (_ BitVec 64))
(declare-fun temp10625_103 () (_ BitVec 64))
(declare-fun temp10625_104 () (_ BitVec 64))
(declare-fun temp10625_105 () (_ BitVec 64))
(declare-fun temp10625_106 () (_ BitVec 64))
(declare-fun temp10625_107 () (_ BitVec 64))
(declare-fun temp10625_108 () (_ BitVec 64))
(declare-fun temp10625_109 () (_ BitVec 64))
(declare-fun temp10625_110 () (_ BitVec 64))
(declare-fun temp10625_111 () (_ BitVec 64))
(declare-fun temp10625_112 () (_ BitVec 64))
(declare-fun temp10625_113 () (_ BitVec 64))
(declare-fun temp10625_114 () (_ BitVec 64))
(declare-fun temp10625_115 () (_ BitVec 64))
(declare-fun temp10625_116 () (_ BitVec 64))
(declare-fun temp10625_117 () (_ BitVec 64))
(declare-fun temp10625_118 () (_ BitVec 64))
(declare-fun temp10625_119 () (_ BitVec 64))
(declare-fun temp10625_120 () (_ BitVec 64))
(declare-fun temp10625_121 () (_ BitVec 64))
(declare-fun temp10625_122 () (_ BitVec 64))
(declare-fun temp10625_123 () (_ BitVec 64))
(declare-fun temp10625_124 () (_ BitVec 64))
(declare-fun temp10625_125 () (_ BitVec 64))
(declare-fun temp10625_126 () (_ BitVec 64))
(declare-fun temp10625_127 () (_ BitVec 64))
(declare-fun temp10625_128 () (_ BitVec 64))
(declare-fun temp10625_129 () (_ BitVec 64))
(declare-fun temp10625_130 () (_ BitVec 64))
(declare-fun temp10625_131 () (_ BitVec 64))
(declare-fun temp10625_132 () (_ BitVec 64))
(declare-fun temp10625_133 () (_ BitVec 64))
(declare-fun temp10625_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10625_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10625_136 () (_ BitVec 64))
(declare-fun temp10625_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10625_138 () (_ BitVec 64))
(declare-fun temp10625_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10625_140 () (_ BitVec 64))
(declare-fun temp10625_141 () (_ BitVec 64))
(declare-fun temp10625_142 () (_ BitVec 64))
(declare-fun temp10625_143 () (_ BitVec 64))
(declare-fun temp10625_144 () (_ BitVec 64))
(declare-fun temp10625_145 () (_ BitVec 64))
(declare-fun temp10625_146 () (_ BitVec 64))
(declare-fun temp10625_147 () (_ BitVec 64))
(declare-fun temp10625_148 () (_ BitVec 64))
(declare-fun temp10625_149 () (_ BitVec 64))
(declare-fun temp10625_150 () (_ BitVec 64))
(declare-fun temp10625_151 () (_ BitVec 64))
(declare-fun temp10625_152 () (_ BitVec 64))
(declare-fun temp10625_153 () (_ BitVec 64))
(declare-fun temp10625_154 () (_ BitVec 64))
(declare-fun temp10625_155 () (_ BitVec 64))
(declare-fun temp10625_157 () (_ BitVec 64))
(declare-fun temp10625_158 () (_ BitVec 64))
(declare-fun temp10625_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10625_159 () (_ BitVec 64))
(declare-fun temp10625_160 () (_ BitVec 64))
(declare-fun temp10625_162 () (_ BitVec 64))
(declare-fun temp10625_163 () (_ BitVec 64))
(declare-fun temp10625_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10625_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10625_165 () (_ BitVec 64))
(declare-fun temp10625_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10625_167 () (_ BitVec 64))
(declare-fun temp10625_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10625_169 () (_ BitVec 64))
(declare-fun temp10625_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10625_171 () (_ BitVec 64))
(declare-fun temp10625_172 () (_ BitVec 64))
(declare-fun temp10625_173 () (_ BitVec 64))
(declare-fun temp10625_174 () (_ BitVec 64))
(declare-fun temp10625_175 () (_ BitVec 64))
(declare-fun temp10625_176 () (_ BitVec 64))
(declare-fun temp10625_177 () (_ BitVec 64))
(declare-fun temp10625_178 () (_ BitVec 64))
(declare-fun temp10625_179 () (_ BitVec 64))
(declare-fun temp10625_180 () (_ BitVec 64))
(declare-fun temp10625_181 () (_ BitVec 64))
(declare-fun temp10625_182 () (_ BitVec 64))
(declare-fun temp10625_183 () (_ BitVec 64))
(declare-fun temp10625_184 () (_ BitVec 64))
(declare-fun temp10625_185 () (_ BitVec 64))
(declare-fun temp10625_186 () (_ BitVec 64))
(declare-fun temp10625_187 () (_ BitVec 64))
(declare-fun temp10625_188 () (_ BitVec 64))
(declare-fun temp10625_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10625_190 () (_ BitVec 64))
(declare-fun temp10625_192 () (_ BitVec 64))
(declare-fun temp10625_193 () (_ BitVec 64))
(declare-fun temp10625_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10625_194 () (_ BitVec 64))
(declare-fun temp10625_195 () (_ BitVec 64))
(declare-fun temp10625_197 () (_ BitVec 64))
(declare-fun temp10625_198 () (_ BitVec 64))
(declare-fun temp10625_196 () (_ BitVec 64))
(declare-fun temp10625_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10625_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10625_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10625_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10625_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10625_204 () (_ BitVec 64))
(declare-fun temp10625_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10625_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10625_207 () (_ BitVec 64))
(declare-fun temp10625_208 () (_ BitVec 64))
(declare-fun temp10625_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10625_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10625_211 () (_ BitVec 64))
(declare-fun temp10625_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10625_213 () (_ BitVec 64))
(declare-fun temp10625_214 () (_ BitVec 64))
(declare-fun temp10625_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10625_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10625_217 () (_ BitVec 64))
(declare-fun temp10625_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10625_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10625_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp10625_222 () (_ BitVec 64))
(declare-fun temp10625_221 () (_ BitVec 64))
(declare-fun temp10625_223 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp10625_224 () (_ BitVec 64))
(declare-fun temp10625_225 () (_ BitVec 64))
(declare-fun temp10625_226 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp10625_227 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp10625_228 () (_ BitVec 64))
(declare-fun temp10625_230 () (_ BitVec 64))
(declare-fun temp10625_229 () (_ BitVec 64))
(declare-fun temp10625_231 () (_ BitVec 64))
(assert (= temp10625_1 #x0000000000000001))
(assert (= var77203 temp10625_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10625_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10625_2)))
(assert (= temp10625_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10625_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10625_4 #x0000000000000000))
(assert (= var210941 temp10625_4))
(assert (= temp10625_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10625_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10625_6 #x0000000000000000))
(assert (= var210986 temp10625_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10625_7 #x0000000000000000))
(assert (= temp10625_8 temp10625_7))
(assert (= temp10625_9 (select ARGNAME_padding_NAMEEND_VAL temp10625_8)))
(assert (= temp10625_10 #x0000000000000001))
(assert (= temp10625_11 temp10625_10))
(assert (= temp10625_12 (select ARGNAME_padding_NAMEEND_VAL temp10625_11)))
(assert (= temp10625_13 #x0000000000000002))
(assert (= temp10625_14 temp10625_13))
(assert (= temp10625_15 (select ARGNAME_padding_NAMEEND_VAL temp10625_14)))
(assert (= temp10625_16 #x0000000000000003))
(assert (= temp10625_17 temp10625_16))
(assert (= temp10625_18 (select ARGNAME_padding_NAMEEND_VAL temp10625_17)))
(assert (= temp10625_19 #x0000000000000004))
(assert (= temp10625_20 temp10625_19))
(assert (= temp10625_21 (select ARGNAME_padding_NAMEEND_VAL temp10625_20)))
(assert (= temp10625_22 #x0000000000000005))
(assert (= temp10625_23 temp10625_22))
(assert (= temp10625_24 (select ARGNAME_padding_NAMEEND_VAL temp10625_23)))
(assert (= temp10625_25 #x0000000000000000))
(assert (= temp10625_26 #x0000000000000000))
(assert (= temp10625_27 temp10625_26))
(assert (= temp10625_28 (select ARGNAME_padding_NAMEEND_VAL temp10625_27)))
(assert (= temp10625_29 #x0000000000000000))
(assert (= temp10625_30 #x0000000000000001))
(assert (= temp10625_31 temp10625_30))
(assert (= temp10625_32 (select ARGNAME_padding_NAMEEND_VAL temp10625_31)))
(assert (= temp10625_33 #x0000000000000000))
(assert (= temp10625_34 #x0000000000000002))
(assert (= temp10625_35 temp10625_34))
(assert (= temp10625_36 (select ARGNAME_padding_NAMEEND_VAL temp10625_35)))
(assert (= temp10625_37 #x0000000000000000))
(assert (= temp10625_38 #x0000000000000003))
(assert (= temp10625_39 temp10625_38))
(assert (= temp10625_40 (select ARGNAME_padding_NAMEEND_VAL temp10625_39)))
(assert (= temp10625_41 #x0000000000000000))
(assert (= temp10625_42 #x0000000000000004))
(assert (= temp10625_43 temp10625_42))
(assert (= temp10625_44 (select ARGNAME_padding_NAMEEND_VAL temp10625_43)))
(assert (= temp10625_45 #x0000000000000000))
(assert (= temp10625_46 #x0000000000000005))
(assert (= temp10625_47 temp10625_46))
(assert (= temp10625_48 (select ARGNAME_padding_NAMEEND_VAL temp10625_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10625_28 temp10625_25)
             (bvslt temp10625_32 temp10625_29)
             (bvslt temp10625_36 temp10625_33)
             (bvslt temp10625_40 temp10625_37)
             (bvslt temp10625_44 temp10625_41)
             (bvslt temp10625_48 temp10625_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10625_49 #x0000000000000000))
(assert (= var1191714 temp10625_49))
(assert (= temp10625_50 #x0000000000000000))
(assert (= temp10625_51 temp10625_50))
(assert (= temp10625_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10625_51)))
(assert (= temp10625_53 #x0000000000000001))
(assert (= temp10625_54 temp10625_53))
(assert (= temp10625_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10625_54)))
(assert (= temp10625_56 #x0000000000000002))
(assert (= temp10625_57 temp10625_56))
(assert (= temp10625_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10625_57)))
(assert (= temp10625_59 #x0000000000000003))
(assert (= temp10625_60 temp10625_59))
(assert (= temp10625_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10625_60)))
(assert (= temp10625_62 #x0000000000000004))
(assert (= temp10625_63 temp10625_62))
(assert (= temp10625_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10625_63)))
(assert (= temp10625_65 #x0000000000000005))
(assert (= temp10625_66 temp10625_65))
(assert (= temp10625_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10625_66)))
(assert (= temp10625_68 #x0000000000000000))
(assert (= temp10625_69 #x0000000000000000))
(assert (= temp10625_70 temp10625_69))
(assert (= temp10625_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10625_70)))
(assert (= temp10625_72 #x0000000000000000))
(assert (= temp10625_73 #x0000000000000001))
(assert (= temp10625_74 temp10625_73))
(assert (= temp10625_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10625_74)))
(assert (= temp10625_76 #x0000000000000000))
(assert (= temp10625_77 #x0000000000000002))
(assert (= temp10625_78 temp10625_77))
(assert (= temp10625_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10625_78)))
(assert (= temp10625_80 #x0000000000000000))
(assert (= temp10625_81 #x0000000000000003))
(assert (= temp10625_82 temp10625_81))
(assert (= temp10625_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10625_82)))
(assert (= temp10625_84 #x0000000000000000))
(assert (= temp10625_85 #x0000000000000004))
(assert (= temp10625_86 temp10625_85))
(assert (= temp10625_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10625_86)))
(assert (= temp10625_88 #x0000000000000000))
(assert (= temp10625_89 #x0000000000000005))
(assert (= temp10625_90 temp10625_89))
(assert (= temp10625_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10625_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10625_71 temp10625_68)
             (bvslt temp10625_75 temp10625_72)
             (bvslt temp10625_79 temp10625_76)
             (bvslt temp10625_83 temp10625_80)
             (bvslt temp10625_87 temp10625_84)
             (bvslt temp10625_91 temp10625_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10625_92 #x0000000000000000))
(assert (= var1191725 temp10625_92))
(assert (= temp10625_93 #x0000000000000000))
(assert (= temp10625_94 temp10625_93))
(assert (= temp10625_95 (select ARGNAME_stride_NAMEEND_VAL temp10625_94)))
(assert (= temp10625_96 #x0000000000000001))
(assert (= temp10625_97 temp10625_96))
(assert (= temp10625_98 (select ARGNAME_stride_NAMEEND_VAL temp10625_97)))
(assert (= temp10625_99 #x0000000000000002))
(assert (= temp10625_100 temp10625_99))
(assert (= temp10625_101 (select ARGNAME_stride_NAMEEND_VAL temp10625_100)))
(assert (= temp10625_102 #x0000000000000003))
(assert (= temp10625_103 temp10625_102))
(assert (= temp10625_104 (select ARGNAME_stride_NAMEEND_VAL temp10625_103)))
(assert (= temp10625_105 #x0000000000000004))
(assert (= temp10625_106 temp10625_105))
(assert (= temp10625_107 (select ARGNAME_stride_NAMEEND_VAL temp10625_106)))
(assert (= temp10625_108 #x0000000000000005))
(assert (= temp10625_109 temp10625_108))
(assert (= temp10625_110 (select ARGNAME_stride_NAMEEND_VAL temp10625_109)))
(assert (= temp10625_111 #x0000000000000000))
(assert (= temp10625_112 #x0000000000000000))
(assert (= temp10625_113 temp10625_112))
(assert (= temp10625_114 (select ARGNAME_stride_NAMEEND_VAL temp10625_113)))
(assert (= temp10625_115 #x0000000000000000))
(assert (= temp10625_116 #x0000000000000001))
(assert (= temp10625_117 temp10625_116))
(assert (= temp10625_118 (select ARGNAME_stride_NAMEEND_VAL temp10625_117)))
(assert (= temp10625_119 #x0000000000000000))
(assert (= temp10625_120 #x0000000000000002))
(assert (= temp10625_121 temp10625_120))
(assert (= temp10625_122 (select ARGNAME_stride_NAMEEND_VAL temp10625_121)))
(assert (= temp10625_123 #x0000000000000000))
(assert (= temp10625_124 #x0000000000000003))
(assert (= temp10625_125 temp10625_124))
(assert (= temp10625_126 (select ARGNAME_stride_NAMEEND_VAL temp10625_125)))
(assert (= temp10625_127 #x0000000000000000))
(assert (= temp10625_128 #x0000000000000004))
(assert (= temp10625_129 temp10625_128))
(assert (= temp10625_130 (select ARGNAME_stride_NAMEEND_VAL temp10625_129)))
(assert (= temp10625_131 #x0000000000000000))
(assert (= temp10625_132 #x0000000000000005))
(assert (= temp10625_133 temp10625_132))
(assert (= temp10625_134 (select ARGNAME_stride_NAMEEND_VAL temp10625_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10625_114 temp10625_111)
             (bvsle temp10625_118 temp10625_115)
             (bvsle temp10625_122 temp10625_119)
             (bvsle temp10625_126 temp10625_123)
             (bvsle temp10625_130 temp10625_127)
             (bvsle temp10625_134 temp10625_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10625_135 #x0000000000000000))
(assert (= var1191735 temp10625_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10625_136 #x0000000000000001))
(assert (= var1191747 temp10625_136))
(assert (= temp10625_137 #x0000000000000000))
(assert (= var1179826 temp10625_137))
(assert (= temp10625_138 #x0000000000000000))
(assert (= temp10625_139 temp10625_138))
(assert (= temp10625_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10625_139)))
(assert (= temp10625_141 #x0000000000000001))
(assert (= temp10625_142 temp10625_141))
(assert (= temp10625_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10625_142)))
(assert (= temp10625_144 #x0000000000000002))
(assert (= temp10625_145 temp10625_144))
(assert (= temp10625_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10625_145)))
(assert (= temp10625_147 #x0000000000000003))
(assert (= temp10625_148 temp10625_147))
(assert (= temp10625_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10625_148)))
(assert (= temp10625_150 #x0000000000000004))
(assert (= temp10625_151 temp10625_150))
(assert (= temp10625_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10625_151)))
(assert (= temp10625_153 #x0000000000000005))
(assert (= temp10625_154 temp10625_153))
(assert (= temp10625_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10625_154)))
(assert (= temp10625_157 var1179826))
(assert (= temp10625_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10625_157)))
(assert (= temp10625_156 temp10625_158))
(assert (= var1191780
   (ite (bvslt temp10625_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10625_159 #x0000000000000000))
(assert (= var1191780 temp10625_159))
(assert (= temp10625_160 #x0000000000000000))
(assert (= var1179826 temp10625_160))
(assert (= temp10625_162 var1179826))
(assert (= temp10625_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10625_162)))
(assert (= temp10625_161 temp10625_163))
(assert (= var1191802 (bvsmod temp10625_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10625_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10625_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10625_165 #x0000000000000001))
(assert (= var1191803 temp10625_165))
(assert (= temp10625_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10625_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10625_167 #x0000000000000001))
(assert (= var1191823 temp10625_167))
(assert (= temp10625_168 #x0000000000000001))
(assert (= var1180714 temp10625_168))
(assert (= temp10625_169 #x0000000000000000))
(assert (= temp10625_170 temp10625_169))
(assert (= temp10625_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10625_170)))
(assert (= temp10625_172 #x0000000000000001))
(assert (= temp10625_173 temp10625_172))
(assert (= temp10625_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10625_173)))
(assert (= temp10625_175 #x0000000000000002))
(assert (= temp10625_176 temp10625_175))
(assert (= temp10625_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10625_176)))
(assert (= temp10625_178 #x0000000000000003))
(assert (= temp10625_179 temp10625_178))
(assert (= temp10625_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10625_179)))
(assert (= temp10625_181 #x0000000000000004))
(assert (= temp10625_182 temp10625_181))
(assert (= temp10625_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10625_182)))
(assert (= temp10625_184 #x0000000000000005))
(assert (= temp10625_185 temp10625_184))
(assert (= temp10625_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10625_185)))
(assert (= temp10625_187 #x0000000000000000))
(assert (= temp10625_188
   (ite (bvslt var1180714 temp10625_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10625_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10625_188)))
(assert (= var1191831 temp10625_189))
(assert (bvslt (ite (bvslt var1180714 temp10625_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10625_190 #x0000000000000001))
(assert (= var1180714 temp10625_190))
(assert (= temp10625_192 var1180714))
(assert (= temp10625_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10625_192)))
(assert (= temp10625_191 temp10625_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10625_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10625_194 #x0000000000000001))
(assert (= var1191836 temp10625_194))
(assert (= temp10625_195 #x0000000000000000))
(assert (= var1179826 temp10625_195))
(assert (= temp10625_197 var1179826))
(assert (= temp10625_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10625_197)))
(assert (= temp10625_196 temp10625_198))
(assert (= temp10625_199 #x0000000000000002))
(assert (= var1586025 temp10625_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10625_200 #x0000000000000001))
(assert (= var1191993 temp10625_200))
(assert (= temp10625_201 #x0000000000000001))
(assert (= var2700303 temp10625_201))
(assert (= temp10625_202 #x0000000000000001))
(assert (= var2962447 temp10625_202))
(assert (= temp10625_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10625_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10625_204 #x0000000000000001))
(assert (= var211058 temp10625_204))
(assert (= temp10625_205 #x0000000000000001))
(assert (= var211188 temp10625_205))
(assert (= var3879401 var211188))
(assert (= temp10625_206 #x0000000000000000))
(assert (= var3866802 temp10625_206))
(assert (= temp10625_207 #x0000000000000000))
(assert (= temp10625_208
   (ite (bvslt var3866802 temp10625_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10625_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10625_208)))
(assert (= var3879420 temp10625_209))
(assert (bvslt (ite (bvslt var3866802 temp10625_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10625_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10625_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10625_211 #x0000000000000000))
(assert (= var3879421 temp10625_211))
(assert (= temp10625_212 #x0000000000000001))
(assert (= var3867690 temp10625_212))
(assert (= temp10625_213 #x0000000000000000))
(assert (= temp10625_214
   (ite (bvslt var3867690 temp10625_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10625_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10625_214)))
(assert (= var3879423 temp10625_215))
(assert (bvslt (ite (bvslt var3867690 temp10625_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10625_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10625_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10625_217 #x0000000000000001))
(assert (= var3879424 temp10625_217))
(assert (= temp10625_218 #x0000000000000000))
(assert (= var4133117 temp10625_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10625_219 #x0000000000000002))
(assert (= var4339331 temp10625_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10625_220 #x0000000000000000))
(assert (= var4404892 temp10625_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp10625_222 #xffffffffffffffff))
(assert (= temp10625_221 temp10625_222))
(assert (= temp10625_223 #x0000000000000001))
(assert (= var197674 temp10625_223))
(assert (= temp10625_224 #x0000000000000000))
(assert (= temp10625_225
   (ite (bvslt var197674 temp10625_224)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp10625_226 (select ARGNAME_input_NAMEEND_DIMSIZE temp10625_225)))
(assert (= var211595 temp10625_226))
(assert (bvslt (ite (bvslt var197674 temp10625_224)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10625_227 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp10625_227) #x0000000000000001 #x0000000000000000)))
(assert (= temp10625_228 #x0000000000000001))
(assert (= var211596 temp10625_228))
(assert (= temp10625_230 #xffffffffffffffff))
(assert (= temp10625_229 temp10625_230))
(assert (= temp10625_231 #x0000000000000001))
(assert (= var211058 temp10625_231))
(model-add temp10625_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10625_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10625_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10625_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




