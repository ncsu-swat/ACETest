(declare-fun temp44_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp44_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp44_3 () (_ BitVec 64))
(declare-fun temp44_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp44_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp44_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp44_7 () (_ BitVec 64))
(declare-fun temp44_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp44_9 () (_ BitVec 64))
(declare-fun temp44_10 () (_ BitVec 64))
(declare-fun temp44_11 () (_ BitVec 64))
(declare-fun temp44_12 () (_ BitVec 64))
(declare-fun temp44_13 () (_ BitVec 64))
(declare-fun temp44_14 () (_ BitVec 64))
(declare-fun temp44_15 () (_ BitVec 64))
(declare-fun temp44_16 () (_ BitVec 64))
(declare-fun temp44_17 () (_ BitVec 64))
(declare-fun temp44_18 () (_ BitVec 64))
(declare-fun temp44_19 () (_ BitVec 64))
(declare-fun temp44_20 () (_ BitVec 64))
(declare-fun temp44_21 () (_ BitVec 64))
(declare-fun temp44_22 () (_ BitVec 64))
(declare-fun temp44_23 () (_ BitVec 64))
(declare-fun temp44_24 () (_ BitVec 64))
(declare-fun temp44_25 () (_ BitVec 64))
(declare-fun temp44_26 () (_ BitVec 64))
(declare-fun temp44_27 () (_ BitVec 64))
(declare-fun temp44_28 () (_ BitVec 64))
(declare-fun temp44_29 () (_ BitVec 64))
(declare-fun temp44_30 () (_ BitVec 64))
(declare-fun temp44_31 () (_ BitVec 64))
(declare-fun temp44_32 () (_ BitVec 64))
(declare-fun temp44_33 () (_ BitVec 64))
(declare-fun temp44_34 () (_ BitVec 64))
(declare-fun temp44_35 () (_ BitVec 64))
(declare-fun temp44_36 () (_ BitVec 64))
(declare-fun temp44_37 () (_ BitVec 64))
(declare-fun temp44_38 () (_ BitVec 64))
(declare-fun temp44_39 () (_ BitVec 64))
(declare-fun temp44_40 () (_ BitVec 64))
(declare-fun temp44_41 () (_ BitVec 64))
(declare-fun temp44_42 () (_ BitVec 64))
(declare-fun temp44_43 () (_ BitVec 64))
(declare-fun temp44_44 () (_ BitVec 64))
(declare-fun temp44_45 () (_ BitVec 64))
(declare-fun temp44_46 () (_ BitVec 64))
(declare-fun temp44_47 () (_ BitVec 64))
(declare-fun temp44_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp44_49 () (_ BitVec 64))
(declare-fun temp44_50 () (_ BitVec 64))
(declare-fun temp44_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp44_52 () (_ BitVec 64))
(declare-fun temp44_53 () (_ BitVec 64))
(declare-fun temp44_54 () (_ BitVec 64))
(declare-fun temp44_55 () (_ BitVec 64))
(declare-fun temp44_56 () (_ BitVec 64))
(declare-fun temp44_57 () (_ BitVec 64))
(declare-fun temp44_58 () (_ BitVec 64))
(declare-fun temp44_59 () (_ BitVec 64))
(declare-fun temp44_60 () (_ BitVec 64))
(declare-fun temp44_61 () (_ BitVec 64))
(declare-fun temp44_62 () (_ BitVec 64))
(declare-fun temp44_63 () (_ BitVec 64))
(declare-fun temp44_64 () (_ BitVec 64))
(declare-fun temp44_65 () (_ BitVec 64))
(declare-fun temp44_66 () (_ BitVec 64))
(declare-fun temp44_67 () (_ BitVec 64))
(declare-fun temp44_68 () (_ BitVec 64))
(declare-fun temp44_69 () (_ BitVec 64))
(declare-fun temp44_70 () (_ BitVec 64))
(declare-fun temp44_71 () (_ BitVec 64))
(declare-fun temp44_72 () (_ BitVec 64))
(declare-fun temp44_73 () (_ BitVec 64))
(declare-fun temp44_74 () (_ BitVec 64))
(declare-fun temp44_75 () (_ BitVec 64))
(declare-fun temp44_76 () (_ BitVec 64))
(declare-fun temp44_77 () (_ BitVec 64))
(declare-fun temp44_78 () (_ BitVec 64))
(declare-fun temp44_79 () (_ BitVec 64))
(declare-fun temp44_80 () (_ BitVec 64))
(declare-fun temp44_81 () (_ BitVec 64))
(declare-fun temp44_82 () (_ BitVec 64))
(declare-fun temp44_83 () (_ BitVec 64))
(declare-fun temp44_84 () (_ BitVec 64))
(declare-fun temp44_85 () (_ BitVec 64))
(declare-fun temp44_86 () (_ BitVec 64))
(declare-fun temp44_87 () (_ BitVec 64))
(declare-fun temp44_88 () (_ BitVec 64))
(declare-fun temp44_89 () (_ BitVec 64))
(declare-fun temp44_90 () (_ BitVec 64))
(declare-fun temp44_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp44_92 () (_ BitVec 64))
(declare-fun temp44_93 () (_ BitVec 64))
(declare-fun temp44_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp44_95 () (_ BitVec 64))
(declare-fun temp44_96 () (_ BitVec 64))
(declare-fun temp44_97 () (_ BitVec 64))
(declare-fun temp44_98 () (_ BitVec 64))
(declare-fun temp44_99 () (_ BitVec 64))
(declare-fun temp44_100 () (_ BitVec 64))
(declare-fun temp44_101 () (_ BitVec 64))
(declare-fun temp44_102 () (_ BitVec 64))
(declare-fun temp44_103 () (_ BitVec 64))
(declare-fun temp44_104 () (_ BitVec 64))
(declare-fun temp44_105 () (_ BitVec 64))
(declare-fun temp44_106 () (_ BitVec 64))
(declare-fun temp44_107 () (_ BitVec 64))
(declare-fun temp44_108 () (_ BitVec 64))
(declare-fun temp44_109 () (_ BitVec 64))
(declare-fun temp44_110 () (_ BitVec 64))
(declare-fun temp44_111 () (_ BitVec 64))
(declare-fun temp44_112 () (_ BitVec 64))
(declare-fun temp44_113 () (_ BitVec 64))
(declare-fun temp44_114 () (_ BitVec 64))
(declare-fun temp44_115 () (_ BitVec 64))
(declare-fun temp44_116 () (_ BitVec 64))
(declare-fun temp44_117 () (_ BitVec 64))
(declare-fun temp44_118 () (_ BitVec 64))
(declare-fun temp44_119 () (_ BitVec 64))
(declare-fun temp44_120 () (_ BitVec 64))
(declare-fun temp44_121 () (_ BitVec 64))
(declare-fun temp44_122 () (_ BitVec 64))
(declare-fun temp44_123 () (_ BitVec 64))
(declare-fun temp44_124 () (_ BitVec 64))
(declare-fun temp44_125 () (_ BitVec 64))
(declare-fun temp44_126 () (_ BitVec 64))
(declare-fun temp44_127 () (_ BitVec 64))
(declare-fun temp44_128 () (_ BitVec 64))
(declare-fun temp44_129 () (_ BitVec 64))
(declare-fun temp44_130 () (_ BitVec 64))
(declare-fun temp44_131 () (_ BitVec 64))
(declare-fun temp44_132 () (_ BitVec 64))
(declare-fun temp44_133 () (_ BitVec 64))
(declare-fun temp44_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp44_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp44_136 () (_ BitVec 64))
(declare-fun temp44_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp44_138 () (_ BitVec 64))
(declare-fun temp44_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp44_140 () (_ BitVec 64))
(declare-fun temp44_141 () (_ BitVec 64))
(declare-fun temp44_142 () (_ BitVec 64))
(declare-fun temp44_143 () (_ BitVec 64))
(declare-fun temp44_144 () (_ BitVec 64))
(declare-fun temp44_145 () (_ BitVec 64))
(declare-fun temp44_146 () (_ BitVec 64))
(declare-fun temp44_147 () (_ BitVec 64))
(declare-fun temp44_148 () (_ BitVec 64))
(declare-fun temp44_149 () (_ BitVec 64))
(declare-fun temp44_150 () (_ BitVec 64))
(declare-fun temp44_151 () (_ BitVec 64))
(declare-fun temp44_152 () (_ BitVec 64))
(declare-fun temp44_153 () (_ BitVec 64))
(declare-fun temp44_154 () (_ BitVec 64))
(declare-fun temp44_155 () (_ BitVec 64))
(declare-fun temp44_157 () (_ BitVec 64))
(declare-fun temp44_158 () (_ BitVec 64))
(declare-fun temp44_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp44_159 () (_ BitVec 64))
(declare-fun temp44_160 () (_ BitVec 64))
(declare-fun temp44_162 () (_ BitVec 64))
(declare-fun temp44_163 () (_ BitVec 64))
(declare-fun temp44_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp44_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp44_165 () (_ BitVec 64))
(declare-fun temp44_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp44_167 () (_ BitVec 64))
(declare-fun temp44_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp44_169 () (_ BitVec 64))
(declare-fun temp44_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp44_171 () (_ BitVec 64))
(declare-fun temp44_172 () (_ BitVec 64))
(declare-fun temp44_173 () (_ BitVec 64))
(declare-fun temp44_174 () (_ BitVec 64))
(declare-fun temp44_175 () (_ BitVec 64))
(declare-fun temp44_176 () (_ BitVec 64))
(declare-fun temp44_177 () (_ BitVec 64))
(declare-fun temp44_178 () (_ BitVec 64))
(declare-fun temp44_179 () (_ BitVec 64))
(declare-fun temp44_180 () (_ BitVec 64))
(declare-fun temp44_181 () (_ BitVec 64))
(declare-fun temp44_182 () (_ BitVec 64))
(declare-fun temp44_183 () (_ BitVec 64))
(declare-fun temp44_184 () (_ BitVec 64))
(declare-fun temp44_185 () (_ BitVec 64))
(declare-fun temp44_186 () (_ BitVec 64))
(declare-fun temp44_187 () (_ BitVec 64))
(declare-fun temp44_188 () (_ BitVec 64))
(declare-fun temp44_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp44_190 () (_ BitVec 64))
(declare-fun temp44_192 () (_ BitVec 64))
(declare-fun temp44_193 () (_ BitVec 64))
(declare-fun temp44_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp44_194 () (_ BitVec 64))
(declare-fun temp44_195 () (_ BitVec 64))
(declare-fun temp44_197 () (_ BitVec 64))
(declare-fun temp44_198 () (_ BitVec 64))
(declare-fun temp44_196 () (_ BitVec 64))
(declare-fun temp44_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp44_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp44_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp44_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp44_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp44_204 () (_ BitVec 64))
(declare-fun temp44_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp44_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp44_207 () (_ BitVec 64))
(declare-fun temp44_208 () (_ BitVec 64))
(declare-fun temp44_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp44_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp44_211 () (_ BitVec 64))
(declare-fun temp44_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp44_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp44_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4796816 () (_ BitVec 64))
(declare-fun var211388 () (_ BitVec 64))
(declare-fun temp44_215 () (_ BitVec 64))
(declare-fun var211389 () (_ BitVec 64))
(declare-fun var5717837 () (_ BitVec 64))
(declare-fun temp44_216 () (_ BitVec 64))
(declare-fun temp44_217 () (_ BitVec 64))
(declare-fun var6238996 () (_ BitVec 64))
(declare-fun var6238963 () (_ BitVec 64))
(declare-fun var6107527 () (_ BitVec 64))
(declare-fun var6107523 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp44_218 () (_ BitVec 64))
(assert (= temp44_1 #x0000000000000001))
(assert (= var77203 temp44_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp44_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp44_2)))
(assert (= temp44_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp44_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp44_4 #x0000000000000000))
(assert (= var210941 temp44_4))
(assert (= temp44_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp44_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp44_6 #x0000000000000000))
(assert (= var210986 temp44_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp44_7 #x0000000000000000))
(assert (= temp44_8 temp44_7))
(assert (= temp44_9 (select ARGNAME_padding_NAMEEND_VAL temp44_8)))
(assert (= temp44_10 #x0000000000000001))
(assert (= temp44_11 temp44_10))
(assert (= temp44_12 (select ARGNAME_padding_NAMEEND_VAL temp44_11)))
(assert (= temp44_13 #x0000000000000002))
(assert (= temp44_14 temp44_13))
(assert (= temp44_15 (select ARGNAME_padding_NAMEEND_VAL temp44_14)))
(assert (= temp44_16 #x0000000000000003))
(assert (= temp44_17 temp44_16))
(assert (= temp44_18 (select ARGNAME_padding_NAMEEND_VAL temp44_17)))
(assert (= temp44_19 #x0000000000000004))
(assert (= temp44_20 temp44_19))
(assert (= temp44_21 (select ARGNAME_padding_NAMEEND_VAL temp44_20)))
(assert (= temp44_22 #x0000000000000005))
(assert (= temp44_23 temp44_22))
(assert (= temp44_24 (select ARGNAME_padding_NAMEEND_VAL temp44_23)))
(assert (= temp44_25 #x0000000000000000))
(assert (= temp44_26 #x0000000000000000))
(assert (= temp44_27 temp44_26))
(assert (= temp44_28 (select ARGNAME_padding_NAMEEND_VAL temp44_27)))
(assert (= temp44_29 #x0000000000000000))
(assert (= temp44_30 #x0000000000000001))
(assert (= temp44_31 temp44_30))
(assert (= temp44_32 (select ARGNAME_padding_NAMEEND_VAL temp44_31)))
(assert (= temp44_33 #x0000000000000000))
(assert (= temp44_34 #x0000000000000002))
(assert (= temp44_35 temp44_34))
(assert (= temp44_36 (select ARGNAME_padding_NAMEEND_VAL temp44_35)))
(assert (= temp44_37 #x0000000000000000))
(assert (= temp44_38 #x0000000000000003))
(assert (= temp44_39 temp44_38))
(assert (= temp44_40 (select ARGNAME_padding_NAMEEND_VAL temp44_39)))
(assert (= temp44_41 #x0000000000000000))
(assert (= temp44_42 #x0000000000000004))
(assert (= temp44_43 temp44_42))
(assert (= temp44_44 (select ARGNAME_padding_NAMEEND_VAL temp44_43)))
(assert (= temp44_45 #x0000000000000000))
(assert (= temp44_46 #x0000000000000005))
(assert (= temp44_47 temp44_46))
(assert (= temp44_48 (select ARGNAME_padding_NAMEEND_VAL temp44_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp44_28 temp44_25)
             (bvslt temp44_32 temp44_29)
             (bvslt temp44_36 temp44_33)
             (bvslt temp44_40 temp44_37)
             (bvslt temp44_44 temp44_41)
             (bvslt temp44_48 temp44_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp44_49 #x0000000000000000))
(assert (= var1191714 temp44_49))
(assert (= temp44_50 #x0000000000000000))
(assert (= temp44_51 temp44_50))
(assert (= temp44_52 (select ARGNAME_output_padding_NAMEEND_VAL temp44_51)))
(assert (= temp44_53 #x0000000000000001))
(assert (= temp44_54 temp44_53))
(assert (= temp44_55 (select ARGNAME_output_padding_NAMEEND_VAL temp44_54)))
(assert (= temp44_56 #x0000000000000002))
(assert (= temp44_57 temp44_56))
(assert (= temp44_58 (select ARGNAME_output_padding_NAMEEND_VAL temp44_57)))
(assert (= temp44_59 #x0000000000000003))
(assert (= temp44_60 temp44_59))
(assert (= temp44_61 (select ARGNAME_output_padding_NAMEEND_VAL temp44_60)))
(assert (= temp44_62 #x0000000000000004))
(assert (= temp44_63 temp44_62))
(assert (= temp44_64 (select ARGNAME_output_padding_NAMEEND_VAL temp44_63)))
(assert (= temp44_65 #x0000000000000005))
(assert (= temp44_66 temp44_65))
(assert (= temp44_67 (select ARGNAME_output_padding_NAMEEND_VAL temp44_66)))
(assert (= temp44_68 #x0000000000000000))
(assert (= temp44_69 #x0000000000000000))
(assert (= temp44_70 temp44_69))
(assert (= temp44_71 (select ARGNAME_output_padding_NAMEEND_VAL temp44_70)))
(assert (= temp44_72 #x0000000000000000))
(assert (= temp44_73 #x0000000000000001))
(assert (= temp44_74 temp44_73))
(assert (= temp44_75 (select ARGNAME_output_padding_NAMEEND_VAL temp44_74)))
(assert (= temp44_76 #x0000000000000000))
(assert (= temp44_77 #x0000000000000002))
(assert (= temp44_78 temp44_77))
(assert (= temp44_79 (select ARGNAME_output_padding_NAMEEND_VAL temp44_78)))
(assert (= temp44_80 #x0000000000000000))
(assert (= temp44_81 #x0000000000000003))
(assert (= temp44_82 temp44_81))
(assert (= temp44_83 (select ARGNAME_output_padding_NAMEEND_VAL temp44_82)))
(assert (= temp44_84 #x0000000000000000))
(assert (= temp44_85 #x0000000000000004))
(assert (= temp44_86 temp44_85))
(assert (= temp44_87 (select ARGNAME_output_padding_NAMEEND_VAL temp44_86)))
(assert (= temp44_88 #x0000000000000000))
(assert (= temp44_89 #x0000000000000005))
(assert (= temp44_90 temp44_89))
(assert (= temp44_91 (select ARGNAME_output_padding_NAMEEND_VAL temp44_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp44_71 temp44_68)
             (bvslt temp44_75 temp44_72)
             (bvslt temp44_79 temp44_76)
             (bvslt temp44_83 temp44_80)
             (bvslt temp44_87 temp44_84)
             (bvslt temp44_91 temp44_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp44_92 #x0000000000000000))
(assert (= var1191725 temp44_92))
(assert (= temp44_93 #x0000000000000000))
(assert (= temp44_94 temp44_93))
(assert (= temp44_95 (select ARGNAME_stride_NAMEEND_VAL temp44_94)))
(assert (= temp44_96 #x0000000000000001))
(assert (= temp44_97 temp44_96))
(assert (= temp44_98 (select ARGNAME_stride_NAMEEND_VAL temp44_97)))
(assert (= temp44_99 #x0000000000000002))
(assert (= temp44_100 temp44_99))
(assert (= temp44_101 (select ARGNAME_stride_NAMEEND_VAL temp44_100)))
(assert (= temp44_102 #x0000000000000003))
(assert (= temp44_103 temp44_102))
(assert (= temp44_104 (select ARGNAME_stride_NAMEEND_VAL temp44_103)))
(assert (= temp44_105 #x0000000000000004))
(assert (= temp44_106 temp44_105))
(assert (= temp44_107 (select ARGNAME_stride_NAMEEND_VAL temp44_106)))
(assert (= temp44_108 #x0000000000000005))
(assert (= temp44_109 temp44_108))
(assert (= temp44_110 (select ARGNAME_stride_NAMEEND_VAL temp44_109)))
(assert (= temp44_111 #x0000000000000000))
(assert (= temp44_112 #x0000000000000000))
(assert (= temp44_113 temp44_112))
(assert (= temp44_114 (select ARGNAME_stride_NAMEEND_VAL temp44_113)))
(assert (= temp44_115 #x0000000000000000))
(assert (= temp44_116 #x0000000000000001))
(assert (= temp44_117 temp44_116))
(assert (= temp44_118 (select ARGNAME_stride_NAMEEND_VAL temp44_117)))
(assert (= temp44_119 #x0000000000000000))
(assert (= temp44_120 #x0000000000000002))
(assert (= temp44_121 temp44_120))
(assert (= temp44_122 (select ARGNAME_stride_NAMEEND_VAL temp44_121)))
(assert (= temp44_123 #x0000000000000000))
(assert (= temp44_124 #x0000000000000003))
(assert (= temp44_125 temp44_124))
(assert (= temp44_126 (select ARGNAME_stride_NAMEEND_VAL temp44_125)))
(assert (= temp44_127 #x0000000000000000))
(assert (= temp44_128 #x0000000000000004))
(assert (= temp44_129 temp44_128))
(assert (= temp44_130 (select ARGNAME_stride_NAMEEND_VAL temp44_129)))
(assert (= temp44_131 #x0000000000000000))
(assert (= temp44_132 #x0000000000000005))
(assert (= temp44_133 temp44_132))
(assert (= temp44_134 (select ARGNAME_stride_NAMEEND_VAL temp44_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp44_114 temp44_111)
             (bvsle temp44_118 temp44_115)
             (bvsle temp44_122 temp44_119)
             (bvsle temp44_126 temp44_123)
             (bvsle temp44_130 temp44_127)
             (bvsle temp44_134 temp44_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp44_135 #x0000000000000000))
(assert (= var1191735 temp44_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp44_136 #x0000000000000001))
(assert (= var1191747 temp44_136))
(assert (= temp44_137 #x0000000000000000))
(assert (= var1179826 temp44_137))
(assert (= temp44_138 #x0000000000000000))
(assert (= temp44_139 temp44_138))
(assert (= temp44_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp44_139)))
(assert (= temp44_141 #x0000000000000001))
(assert (= temp44_142 temp44_141))
(assert (= temp44_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp44_142)))
(assert (= temp44_144 #x0000000000000002))
(assert (= temp44_145 temp44_144))
(assert (= temp44_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp44_145)))
(assert (= temp44_147 #x0000000000000003))
(assert (= temp44_148 temp44_147))
(assert (= temp44_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp44_148)))
(assert (= temp44_150 #x0000000000000004))
(assert (= temp44_151 temp44_150))
(assert (= temp44_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp44_151)))
(assert (= temp44_153 #x0000000000000005))
(assert (= temp44_154 temp44_153))
(assert (= temp44_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp44_154)))
(assert (= temp44_157 var1179826))
(assert (= temp44_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp44_157)))
(assert (= temp44_156 temp44_158))
(assert (= var1191780
   (ite (bvslt temp44_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp44_159 #x0000000000000000))
(assert (= var1191780 temp44_159))
(assert (= temp44_160 #x0000000000000000))
(assert (= var1179826 temp44_160))
(assert (= temp44_162 var1179826))
(assert (= temp44_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp44_162)))
(assert (= temp44_161 temp44_163))
(assert (= var1191802 (bvsmod temp44_161 ARGNAME_groups_NAMEEND)))
(assert (= temp44_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp44_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp44_165 #x0000000000000001))
(assert (= var1191803 temp44_165))
(assert (= temp44_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp44_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp44_167 #x0000000000000001))
(assert (= var1191823 temp44_167))
(assert (= temp44_168 #x0000000000000001))
(assert (= var1180714 temp44_168))
(assert (= temp44_169 #x0000000000000000))
(assert (= temp44_170 temp44_169))
(assert (= temp44_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp44_170)))
(assert (= temp44_172 #x0000000000000001))
(assert (= temp44_173 temp44_172))
(assert (= temp44_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp44_173)))
(assert (= temp44_175 #x0000000000000002))
(assert (= temp44_176 temp44_175))
(assert (= temp44_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp44_176)))
(assert (= temp44_178 #x0000000000000003))
(assert (= temp44_179 temp44_178))
(assert (= temp44_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp44_179)))
(assert (= temp44_181 #x0000000000000004))
(assert (= temp44_182 temp44_181))
(assert (= temp44_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp44_182)))
(assert (= temp44_184 #x0000000000000005))
(assert (= temp44_185 temp44_184))
(assert (= temp44_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp44_185)))
(assert (= temp44_187 #x0000000000000000))
(assert (= temp44_188
   (ite (bvslt var1180714 temp44_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp44_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp44_188)))
(assert (= var1191831 temp44_189))
(assert (bvslt (ite (bvslt var1180714 temp44_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp44_190 #x0000000000000001))
(assert (= var1180714 temp44_190))
(assert (= temp44_192 var1180714))
(assert (= temp44_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp44_192)))
(assert (= temp44_191 temp44_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp44_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp44_194 #x0000000000000001))
(assert (= var1191836 temp44_194))
(assert (= temp44_195 #x0000000000000000))
(assert (= var1179826 temp44_195))
(assert (= temp44_197 var1179826))
(assert (= temp44_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp44_197)))
(assert (= temp44_196 temp44_198))
(assert (= temp44_199 #x0000000000000002))
(assert (= var1586025 temp44_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp44_200 #x0000000000000001))
(assert (= var1191993 temp44_200))
(assert (= temp44_201 #x0000000000000001))
(assert (= var2700303 temp44_201))
(assert (= temp44_202 #x0000000000000001))
(assert (= var2962447 temp44_202))
(assert (= temp44_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp44_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp44_204 #x0000000000000001))
(assert (= var211058 temp44_204))
(assert (= temp44_205 #x0000000000000001))
(assert (= var211188 temp44_205))
(assert (= var3879401 var211188))
(assert (= temp44_206 #x0000000000000000))
(assert (= var3866802 temp44_206))
(assert (= temp44_207 #x0000000000000000))
(assert (= temp44_208
   (ite (bvslt var3866802 temp44_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp44_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp44_208)))
(assert (= var3879420 temp44_209))
(assert (bvslt (ite (bvslt var3866802 temp44_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp44_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp44_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp44_211 #x0000000000000001))
(assert (= var3879421 temp44_211))
(assert (= temp44_212 #x0000000000000000))
(assert (= var4079423 temp44_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp44_213 #x0000000000000002))
(assert (= var4208259 temp44_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp44_214 #x0000000000000000))
(assert (= var4273820 temp44_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4796816 var211201))
(assert (= var211388 var210913))
(assert (= temp44_215 #x0000000000000000))
(assert (= var211389
   (ite (distinct var211388 temp44_215) #x0000000000000001 #x0000000000000000)))
(assert (= var5717837 var211389))
(assert (= temp44_216 #x0000000000000001))
(assert (= var211058 temp44_216))
(assert (= temp44_217 #x0000000000000000))
(assert (= var6238996 temp44_217))
(assert (= var6238963 var6238996))
(assert (= var6107527 var6238963))
(assert (= var6107523 var6107527))
(assert (= var212669 var6107523))
(assert (= temp44_218 #x0000000000000000))
(assert (= var212669 temp44_218))
(model-add temp44_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp44_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp44_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp44_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))



