(declare-fun temp11022_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp11022_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp11022_3 () (_ BitVec 64))
(declare-fun temp11022_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp11022_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp11022_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp11022_7 () (_ BitVec 64))
(declare-fun temp11022_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11022_9 () (_ BitVec 64))
(declare-fun temp11022_10 () (_ BitVec 64))
(declare-fun temp11022_11 () (_ BitVec 64))
(declare-fun temp11022_12 () (_ BitVec 64))
(declare-fun temp11022_13 () (_ BitVec 64))
(declare-fun temp11022_14 () (_ BitVec 64))
(declare-fun temp11022_15 () (_ BitVec 64))
(declare-fun temp11022_16 () (_ BitVec 64))
(declare-fun temp11022_17 () (_ BitVec 64))
(declare-fun temp11022_18 () (_ BitVec 64))
(declare-fun temp11022_19 () (_ BitVec 64))
(declare-fun temp11022_20 () (_ BitVec 64))
(declare-fun temp11022_21 () (_ BitVec 64))
(declare-fun temp11022_22 () (_ BitVec 64))
(declare-fun temp11022_23 () (_ BitVec 64))
(declare-fun temp11022_24 () (_ BitVec 64))
(declare-fun temp11022_25 () (_ BitVec 64))
(declare-fun temp11022_26 () (_ BitVec 64))
(declare-fun temp11022_27 () (_ BitVec 64))
(declare-fun temp11022_28 () (_ BitVec 64))
(declare-fun temp11022_29 () (_ BitVec 64))
(declare-fun temp11022_30 () (_ BitVec 64))
(declare-fun temp11022_31 () (_ BitVec 64))
(declare-fun temp11022_32 () (_ BitVec 64))
(declare-fun temp11022_33 () (_ BitVec 64))
(declare-fun temp11022_34 () (_ BitVec 64))
(declare-fun temp11022_35 () (_ BitVec 64))
(declare-fun temp11022_36 () (_ BitVec 64))
(declare-fun temp11022_37 () (_ BitVec 64))
(declare-fun temp11022_38 () (_ BitVec 64))
(declare-fun temp11022_39 () (_ BitVec 64))
(declare-fun temp11022_40 () (_ BitVec 64))
(declare-fun temp11022_41 () (_ BitVec 64))
(declare-fun temp11022_42 () (_ BitVec 64))
(declare-fun temp11022_43 () (_ BitVec 64))
(declare-fun temp11022_44 () (_ BitVec 64))
(declare-fun temp11022_45 () (_ BitVec 64))
(declare-fun temp11022_46 () (_ BitVec 64))
(declare-fun temp11022_47 () (_ BitVec 64))
(declare-fun temp11022_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp11022_49 () (_ BitVec 64))
(declare-fun temp11022_50 () (_ BitVec 64))
(declare-fun temp11022_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11022_52 () (_ BitVec 64))
(declare-fun temp11022_53 () (_ BitVec 64))
(declare-fun temp11022_54 () (_ BitVec 64))
(declare-fun temp11022_55 () (_ BitVec 64))
(declare-fun temp11022_56 () (_ BitVec 64))
(declare-fun temp11022_57 () (_ BitVec 64))
(declare-fun temp11022_58 () (_ BitVec 64))
(declare-fun temp11022_59 () (_ BitVec 64))
(declare-fun temp11022_60 () (_ BitVec 64))
(declare-fun temp11022_61 () (_ BitVec 64))
(declare-fun temp11022_62 () (_ BitVec 64))
(declare-fun temp11022_63 () (_ BitVec 64))
(declare-fun temp11022_64 () (_ BitVec 64))
(declare-fun temp11022_65 () (_ BitVec 64))
(declare-fun temp11022_66 () (_ BitVec 64))
(declare-fun temp11022_67 () (_ BitVec 64))
(declare-fun temp11022_68 () (_ BitVec 64))
(declare-fun temp11022_69 () (_ BitVec 64))
(declare-fun temp11022_70 () (_ BitVec 64))
(declare-fun temp11022_71 () (_ BitVec 64))
(declare-fun temp11022_72 () (_ BitVec 64))
(declare-fun temp11022_73 () (_ BitVec 64))
(declare-fun temp11022_74 () (_ BitVec 64))
(declare-fun temp11022_75 () (_ BitVec 64))
(declare-fun temp11022_76 () (_ BitVec 64))
(declare-fun temp11022_77 () (_ BitVec 64))
(declare-fun temp11022_78 () (_ BitVec 64))
(declare-fun temp11022_79 () (_ BitVec 64))
(declare-fun temp11022_80 () (_ BitVec 64))
(declare-fun temp11022_81 () (_ BitVec 64))
(declare-fun temp11022_82 () (_ BitVec 64))
(declare-fun temp11022_83 () (_ BitVec 64))
(declare-fun temp11022_84 () (_ BitVec 64))
(declare-fun temp11022_85 () (_ BitVec 64))
(declare-fun temp11022_86 () (_ BitVec 64))
(declare-fun temp11022_87 () (_ BitVec 64))
(declare-fun temp11022_88 () (_ BitVec 64))
(declare-fun temp11022_89 () (_ BitVec 64))
(declare-fun temp11022_90 () (_ BitVec 64))
(declare-fun temp11022_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp11022_92 () (_ BitVec 64))
(declare-fun temp11022_93 () (_ BitVec 64))
(declare-fun temp11022_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11022_95 () (_ BitVec 64))
(declare-fun temp11022_96 () (_ BitVec 64))
(declare-fun temp11022_97 () (_ BitVec 64))
(declare-fun temp11022_98 () (_ BitVec 64))
(declare-fun temp11022_99 () (_ BitVec 64))
(declare-fun temp11022_100 () (_ BitVec 64))
(declare-fun temp11022_101 () (_ BitVec 64))
(declare-fun temp11022_102 () (_ BitVec 64))
(declare-fun temp11022_103 () (_ BitVec 64))
(declare-fun temp11022_104 () (_ BitVec 64))
(declare-fun temp11022_105 () (_ BitVec 64))
(declare-fun temp11022_106 () (_ BitVec 64))
(declare-fun temp11022_107 () (_ BitVec 64))
(declare-fun temp11022_108 () (_ BitVec 64))
(declare-fun temp11022_109 () (_ BitVec 64))
(declare-fun temp11022_110 () (_ BitVec 64))
(declare-fun temp11022_111 () (_ BitVec 64))
(declare-fun temp11022_112 () (_ BitVec 64))
(declare-fun temp11022_113 () (_ BitVec 64))
(declare-fun temp11022_114 () (_ BitVec 64))
(declare-fun temp11022_115 () (_ BitVec 64))
(declare-fun temp11022_116 () (_ BitVec 64))
(declare-fun temp11022_117 () (_ BitVec 64))
(declare-fun temp11022_118 () (_ BitVec 64))
(declare-fun temp11022_119 () (_ BitVec 64))
(declare-fun temp11022_120 () (_ BitVec 64))
(declare-fun temp11022_121 () (_ BitVec 64))
(declare-fun temp11022_122 () (_ BitVec 64))
(declare-fun temp11022_123 () (_ BitVec 64))
(declare-fun temp11022_124 () (_ BitVec 64))
(declare-fun temp11022_125 () (_ BitVec 64))
(declare-fun temp11022_126 () (_ BitVec 64))
(declare-fun temp11022_127 () (_ BitVec 64))
(declare-fun temp11022_128 () (_ BitVec 64))
(declare-fun temp11022_129 () (_ BitVec 64))
(declare-fun temp11022_130 () (_ BitVec 64))
(declare-fun temp11022_131 () (_ BitVec 64))
(declare-fun temp11022_132 () (_ BitVec 64))
(declare-fun temp11022_133 () (_ BitVec 64))
(declare-fun temp11022_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp11022_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp11022_136 () (_ BitVec 64))
(declare-fun temp11022_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp11022_138 () (_ BitVec 64))
(declare-fun temp11022_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11022_140 () (_ BitVec 64))
(declare-fun temp11022_141 () (_ BitVec 64))
(declare-fun temp11022_142 () (_ BitVec 64))
(declare-fun temp11022_143 () (_ BitVec 64))
(declare-fun temp11022_144 () (_ BitVec 64))
(declare-fun temp11022_145 () (_ BitVec 64))
(declare-fun temp11022_146 () (_ BitVec 64))
(declare-fun temp11022_147 () (_ BitVec 64))
(declare-fun temp11022_148 () (_ BitVec 64))
(declare-fun temp11022_149 () (_ BitVec 64))
(declare-fun temp11022_150 () (_ BitVec 64))
(declare-fun temp11022_151 () (_ BitVec 64))
(declare-fun temp11022_152 () (_ BitVec 64))
(declare-fun temp11022_153 () (_ BitVec 64))
(declare-fun temp11022_154 () (_ BitVec 64))
(declare-fun temp11022_155 () (_ BitVec 64))
(declare-fun temp11022_157 () (_ BitVec 64))
(declare-fun temp11022_158 () (_ BitVec 64))
(declare-fun temp11022_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp11022_159 () (_ BitVec 64))
(declare-fun temp11022_160 () (_ BitVec 64))
(declare-fun temp11022_162 () (_ BitVec 64))
(declare-fun temp11022_163 () (_ BitVec 64))
(declare-fun temp11022_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp11022_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp11022_165 () (_ BitVec 64))
(declare-fun temp11022_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp11022_167 () (_ BitVec 64))
(declare-fun temp11022_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp11022_169 () (_ BitVec 64))
(declare-fun temp11022_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11022_171 () (_ BitVec 64))
(declare-fun temp11022_172 () (_ BitVec 64))
(declare-fun temp11022_173 () (_ BitVec 64))
(declare-fun temp11022_174 () (_ BitVec 64))
(declare-fun temp11022_175 () (_ BitVec 64))
(declare-fun temp11022_176 () (_ BitVec 64))
(declare-fun temp11022_177 () (_ BitVec 64))
(declare-fun temp11022_178 () (_ BitVec 64))
(declare-fun temp11022_179 () (_ BitVec 64))
(declare-fun temp11022_180 () (_ BitVec 64))
(declare-fun temp11022_181 () (_ BitVec 64))
(declare-fun temp11022_182 () (_ BitVec 64))
(declare-fun temp11022_183 () (_ BitVec 64))
(declare-fun temp11022_184 () (_ BitVec 64))
(declare-fun temp11022_185 () (_ BitVec 64))
(declare-fun temp11022_186 () (_ BitVec 64))
(declare-fun temp11022_187 () (_ BitVec 64))
(declare-fun temp11022_188 () (_ BitVec 64))
(declare-fun temp11022_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp11022_190 () (_ BitVec 64))
(declare-fun temp11022_192 () (_ BitVec 64))
(declare-fun temp11022_193 () (_ BitVec 64))
(declare-fun temp11022_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp11022_194 () (_ BitVec 64))
(declare-fun temp11022_195 () (_ BitVec 64))
(declare-fun temp11022_197 () (_ BitVec 64))
(declare-fun temp11022_198 () (_ BitVec 64))
(declare-fun temp11022_196 () (_ BitVec 64))
(declare-fun temp11022_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp11022_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp11022_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp11022_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp11022_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp11022_204 () (_ BitVec 64))
(declare-fun temp11022_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp11022_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp11022_207 () (_ BitVec 64))
(declare-fun temp11022_208 () (_ BitVec 64))
(declare-fun temp11022_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp11022_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp11022_211 () (_ BitVec 64))
(declare-fun temp11022_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp11022_213 () (_ BitVec 64))
(declare-fun temp11022_214 () (_ BitVec 64))
(declare-fun temp11022_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp11022_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp11022_217 () (_ BitVec 64))
(declare-fun temp11022_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp11022_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp11022_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var4600208 () (_ BitVec 64))
(declare-fun var4862352 () (_ BitVec 64))
(declare-fun temp11022_221 () (_ BitVec 64))
(declare-fun var212414 () (_ BitVec 64))
(declare-fun temp11022_222 () (_ BitVec 64))
(declare-fun temp11022_223 () (_ BitVec 64))
(declare-fun var5191299 () (_ BitVec 64))
(declare-fun var5191301 () (_ BitVec 64))
(declare-fun var5256844 () (_ BitVec 64))
(declare-fun var5256845 () (_ BitVec 64))
(declare-fun temp11022_224 () (_ BitVec 64))
(assert (= temp11022_1 #x0000000000000001))
(assert (= var77203 temp11022_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp11022_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp11022_2)))
(assert (= temp11022_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp11022_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11022_4 #x0000000000000000))
(assert (= var210941 temp11022_4))
(assert (= temp11022_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp11022_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11022_6 #x0000000000000000))
(assert (= var210986 temp11022_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp11022_7 #x0000000000000000))
(assert (= temp11022_8 temp11022_7))
(assert (= temp11022_9 (select ARGNAME_padding_NAMEEND_VAL temp11022_8)))
(assert (= temp11022_10 #x0000000000000001))
(assert (= temp11022_11 temp11022_10))
(assert (= temp11022_12 (select ARGNAME_padding_NAMEEND_VAL temp11022_11)))
(assert (= temp11022_13 #x0000000000000002))
(assert (= temp11022_14 temp11022_13))
(assert (= temp11022_15 (select ARGNAME_padding_NAMEEND_VAL temp11022_14)))
(assert (= temp11022_16 #x0000000000000003))
(assert (= temp11022_17 temp11022_16))
(assert (= temp11022_18 (select ARGNAME_padding_NAMEEND_VAL temp11022_17)))
(assert (= temp11022_19 #x0000000000000004))
(assert (= temp11022_20 temp11022_19))
(assert (= temp11022_21 (select ARGNAME_padding_NAMEEND_VAL temp11022_20)))
(assert (= temp11022_22 #x0000000000000005))
(assert (= temp11022_23 temp11022_22))
(assert (= temp11022_24 (select ARGNAME_padding_NAMEEND_VAL temp11022_23)))
(assert (= temp11022_25 #x0000000000000000))
(assert (= temp11022_26 #x0000000000000000))
(assert (= temp11022_27 temp11022_26))
(assert (= temp11022_28 (select ARGNAME_padding_NAMEEND_VAL temp11022_27)))
(assert (= temp11022_29 #x0000000000000000))
(assert (= temp11022_30 #x0000000000000001))
(assert (= temp11022_31 temp11022_30))
(assert (= temp11022_32 (select ARGNAME_padding_NAMEEND_VAL temp11022_31)))
(assert (= temp11022_33 #x0000000000000000))
(assert (= temp11022_34 #x0000000000000002))
(assert (= temp11022_35 temp11022_34))
(assert (= temp11022_36 (select ARGNAME_padding_NAMEEND_VAL temp11022_35)))
(assert (= temp11022_37 #x0000000000000000))
(assert (= temp11022_38 #x0000000000000003))
(assert (= temp11022_39 temp11022_38))
(assert (= temp11022_40 (select ARGNAME_padding_NAMEEND_VAL temp11022_39)))
(assert (= temp11022_41 #x0000000000000000))
(assert (= temp11022_42 #x0000000000000004))
(assert (= temp11022_43 temp11022_42))
(assert (= temp11022_44 (select ARGNAME_padding_NAMEEND_VAL temp11022_43)))
(assert (= temp11022_45 #x0000000000000000))
(assert (= temp11022_46 #x0000000000000005))
(assert (= temp11022_47 temp11022_46))
(assert (= temp11022_48 (select ARGNAME_padding_NAMEEND_VAL temp11022_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp11022_28 temp11022_25)
             (bvslt temp11022_32 temp11022_29)
             (bvslt temp11022_36 temp11022_33)
             (bvslt temp11022_40 temp11022_37)
             (bvslt temp11022_44 temp11022_41)
             (bvslt temp11022_48 temp11022_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11022_49 #x0000000000000000))
(assert (= var1191714 temp11022_49))
(assert (= temp11022_50 #x0000000000000000))
(assert (= temp11022_51 temp11022_50))
(assert (= temp11022_52 (select ARGNAME_output_padding_NAMEEND_VAL temp11022_51)))
(assert (= temp11022_53 #x0000000000000001))
(assert (= temp11022_54 temp11022_53))
(assert (= temp11022_55 (select ARGNAME_output_padding_NAMEEND_VAL temp11022_54)))
(assert (= temp11022_56 #x0000000000000002))
(assert (= temp11022_57 temp11022_56))
(assert (= temp11022_58 (select ARGNAME_output_padding_NAMEEND_VAL temp11022_57)))
(assert (= temp11022_59 #x0000000000000003))
(assert (= temp11022_60 temp11022_59))
(assert (= temp11022_61 (select ARGNAME_output_padding_NAMEEND_VAL temp11022_60)))
(assert (= temp11022_62 #x0000000000000004))
(assert (= temp11022_63 temp11022_62))
(assert (= temp11022_64 (select ARGNAME_output_padding_NAMEEND_VAL temp11022_63)))
(assert (= temp11022_65 #x0000000000000005))
(assert (= temp11022_66 temp11022_65))
(assert (= temp11022_67 (select ARGNAME_output_padding_NAMEEND_VAL temp11022_66)))
(assert (= temp11022_68 #x0000000000000000))
(assert (= temp11022_69 #x0000000000000000))
(assert (= temp11022_70 temp11022_69))
(assert (= temp11022_71 (select ARGNAME_output_padding_NAMEEND_VAL temp11022_70)))
(assert (= temp11022_72 #x0000000000000000))
(assert (= temp11022_73 #x0000000000000001))
(assert (= temp11022_74 temp11022_73))
(assert (= temp11022_75 (select ARGNAME_output_padding_NAMEEND_VAL temp11022_74)))
(assert (= temp11022_76 #x0000000000000000))
(assert (= temp11022_77 #x0000000000000002))
(assert (= temp11022_78 temp11022_77))
(assert (= temp11022_79 (select ARGNAME_output_padding_NAMEEND_VAL temp11022_78)))
(assert (= temp11022_80 #x0000000000000000))
(assert (= temp11022_81 #x0000000000000003))
(assert (= temp11022_82 temp11022_81))
(assert (= temp11022_83 (select ARGNAME_output_padding_NAMEEND_VAL temp11022_82)))
(assert (= temp11022_84 #x0000000000000000))
(assert (= temp11022_85 #x0000000000000004))
(assert (= temp11022_86 temp11022_85))
(assert (= temp11022_87 (select ARGNAME_output_padding_NAMEEND_VAL temp11022_86)))
(assert (= temp11022_88 #x0000000000000000))
(assert (= temp11022_89 #x0000000000000005))
(assert (= temp11022_90 temp11022_89))
(assert (= temp11022_91 (select ARGNAME_output_padding_NAMEEND_VAL temp11022_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp11022_71 temp11022_68)
             (bvslt temp11022_75 temp11022_72)
             (bvslt temp11022_79 temp11022_76)
             (bvslt temp11022_83 temp11022_80)
             (bvslt temp11022_87 temp11022_84)
             (bvslt temp11022_91 temp11022_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11022_92 #x0000000000000000))
(assert (= var1191725 temp11022_92))
(assert (= temp11022_93 #x0000000000000000))
(assert (= temp11022_94 temp11022_93))
(assert (= temp11022_95 (select ARGNAME_stride_NAMEEND_VAL temp11022_94)))
(assert (= temp11022_96 #x0000000000000001))
(assert (= temp11022_97 temp11022_96))
(assert (= temp11022_98 (select ARGNAME_stride_NAMEEND_VAL temp11022_97)))
(assert (= temp11022_99 #x0000000000000002))
(assert (= temp11022_100 temp11022_99))
(assert (= temp11022_101 (select ARGNAME_stride_NAMEEND_VAL temp11022_100)))
(assert (= temp11022_102 #x0000000000000003))
(assert (= temp11022_103 temp11022_102))
(assert (= temp11022_104 (select ARGNAME_stride_NAMEEND_VAL temp11022_103)))
(assert (= temp11022_105 #x0000000000000004))
(assert (= temp11022_106 temp11022_105))
(assert (= temp11022_107 (select ARGNAME_stride_NAMEEND_VAL temp11022_106)))
(assert (= temp11022_108 #x0000000000000005))
(assert (= temp11022_109 temp11022_108))
(assert (= temp11022_110 (select ARGNAME_stride_NAMEEND_VAL temp11022_109)))
(assert (= temp11022_111 #x0000000000000000))
(assert (= temp11022_112 #x0000000000000000))
(assert (= temp11022_113 temp11022_112))
(assert (= temp11022_114 (select ARGNAME_stride_NAMEEND_VAL temp11022_113)))
(assert (= temp11022_115 #x0000000000000000))
(assert (= temp11022_116 #x0000000000000001))
(assert (= temp11022_117 temp11022_116))
(assert (= temp11022_118 (select ARGNAME_stride_NAMEEND_VAL temp11022_117)))
(assert (= temp11022_119 #x0000000000000000))
(assert (= temp11022_120 #x0000000000000002))
(assert (= temp11022_121 temp11022_120))
(assert (= temp11022_122 (select ARGNAME_stride_NAMEEND_VAL temp11022_121)))
(assert (= temp11022_123 #x0000000000000000))
(assert (= temp11022_124 #x0000000000000003))
(assert (= temp11022_125 temp11022_124))
(assert (= temp11022_126 (select ARGNAME_stride_NAMEEND_VAL temp11022_125)))
(assert (= temp11022_127 #x0000000000000000))
(assert (= temp11022_128 #x0000000000000004))
(assert (= temp11022_129 temp11022_128))
(assert (= temp11022_130 (select ARGNAME_stride_NAMEEND_VAL temp11022_129)))
(assert (= temp11022_131 #x0000000000000000))
(assert (= temp11022_132 #x0000000000000005))
(assert (= temp11022_133 temp11022_132))
(assert (= temp11022_134 (select ARGNAME_stride_NAMEEND_VAL temp11022_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp11022_114 temp11022_111)
             (bvsle temp11022_118 temp11022_115)
             (bvsle temp11022_122 temp11022_119)
             (bvsle temp11022_126 temp11022_123)
             (bvsle temp11022_130 temp11022_127)
             (bvsle temp11022_134 temp11022_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11022_135 #x0000000000000000))
(assert (= var1191735 temp11022_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11022_136 #x0000000000000001))
(assert (= var1191747 temp11022_136))
(assert (= temp11022_137 #x0000000000000000))
(assert (= var1179826 temp11022_137))
(assert (= temp11022_138 #x0000000000000000))
(assert (= temp11022_139 temp11022_138))
(assert (= temp11022_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11022_139)))
(assert (= temp11022_141 #x0000000000000001))
(assert (= temp11022_142 temp11022_141))
(assert (= temp11022_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11022_142)))
(assert (= temp11022_144 #x0000000000000002))
(assert (= temp11022_145 temp11022_144))
(assert (= temp11022_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11022_145)))
(assert (= temp11022_147 #x0000000000000003))
(assert (= temp11022_148 temp11022_147))
(assert (= temp11022_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11022_148)))
(assert (= temp11022_150 #x0000000000000004))
(assert (= temp11022_151 temp11022_150))
(assert (= temp11022_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11022_151)))
(assert (= temp11022_153 #x0000000000000005))
(assert (= temp11022_154 temp11022_153))
(assert (= temp11022_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11022_154)))
(assert (= temp11022_157 var1179826))
(assert (= temp11022_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11022_157)))
(assert (= temp11022_156 temp11022_158))
(assert (= var1191780
   (ite (bvslt temp11022_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11022_159 #x0000000000000000))
(assert (= var1191780 temp11022_159))
(assert (= temp11022_160 #x0000000000000000))
(assert (= var1179826 temp11022_160))
(assert (= temp11022_162 var1179826))
(assert (= temp11022_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11022_162)))
(assert (= temp11022_161 temp11022_163))
(assert (= var1191802 (bvsmod temp11022_161 ARGNAME_groups_NAMEEND)))
(assert (= temp11022_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp11022_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp11022_165 #x0000000000000001))
(assert (= var1191803 temp11022_165))
(assert (= temp11022_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp11022_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11022_167 #x0000000000000001))
(assert (= var1191823 temp11022_167))
(assert (= temp11022_168 #x0000000000000001))
(assert (= var1180714 temp11022_168))
(assert (= temp11022_169 #x0000000000000000))
(assert (= temp11022_170 temp11022_169))
(assert (= temp11022_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp11022_170)))
(assert (= temp11022_172 #x0000000000000001))
(assert (= temp11022_173 temp11022_172))
(assert (= temp11022_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp11022_173)))
(assert (= temp11022_175 #x0000000000000002))
(assert (= temp11022_176 temp11022_175))
(assert (= temp11022_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp11022_176)))
(assert (= temp11022_178 #x0000000000000003))
(assert (= temp11022_179 temp11022_178))
(assert (= temp11022_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp11022_179)))
(assert (= temp11022_181 #x0000000000000004))
(assert (= temp11022_182 temp11022_181))
(assert (= temp11022_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp11022_182)))
(assert (= temp11022_184 #x0000000000000005))
(assert (= temp11022_185 temp11022_184))
(assert (= temp11022_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp11022_185)))
(assert (= temp11022_187 #x0000000000000000))
(assert (= temp11022_188
   (ite (bvslt var1180714 temp11022_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp11022_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp11022_188)))
(assert (= var1191831 temp11022_189))
(assert (bvslt (ite (bvslt var1180714 temp11022_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11022_190 #x0000000000000001))
(assert (= var1180714 temp11022_190))
(assert (= temp11022_192 var1180714))
(assert (= temp11022_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11022_192)))
(assert (= temp11022_191 temp11022_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp11022_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp11022_194 #x0000000000000001))
(assert (= var1191836 temp11022_194))
(assert (= temp11022_195 #x0000000000000000))
(assert (= var1179826 temp11022_195))
(assert (= temp11022_197 var1179826))
(assert (= temp11022_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11022_197)))
(assert (= temp11022_196 temp11022_198))
(assert (= temp11022_199 #x0000000000000002))
(assert (= var1586025 temp11022_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp11022_200 #x0000000000000001))
(assert (= var1191993 temp11022_200))
(assert (= temp11022_201 #x0000000000000001))
(assert (= var2700303 temp11022_201))
(assert (= temp11022_202 #x0000000000000001))
(assert (= var2962447 temp11022_202))
(assert (= temp11022_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp11022_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11022_204 #x0000000000000001))
(assert (= var211058 temp11022_204))
(assert (= temp11022_205 #x0000000000000001))
(assert (= var211188 temp11022_205))
(assert (= var3879401 var211188))
(assert (= temp11022_206 #x0000000000000000))
(assert (= var3866802 temp11022_206))
(assert (= temp11022_207 #x0000000000000000))
(assert (= temp11022_208
   (ite (bvslt var3866802 temp11022_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp11022_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp11022_208)))
(assert (= var3879420 temp11022_209))
(assert (bvslt (ite (bvslt var3866802 temp11022_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11022_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp11022_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp11022_211 #x0000000000000000))
(assert (= var3879421 temp11022_211))
(assert (= temp11022_212 #x0000000000000001))
(assert (= var3867690 temp11022_212))
(assert (= temp11022_213 #x0000000000000000))
(assert (= temp11022_214
   (ite (bvslt var3867690 temp11022_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp11022_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp11022_214)))
(assert (= var3879423 temp11022_215))
(assert (bvslt (ite (bvslt var3867690 temp11022_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11022_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp11022_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp11022_217 #x0000000000000001))
(assert (= var3879424 temp11022_217))
(assert (= temp11022_218 #x0000000000000000))
(assert (= var4133117 temp11022_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp11022_219 #x0000000000000002))
(assert (= var4339331 temp11022_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11022_220 #x0000000000000000))
(assert (= var4404892 temp11022_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var4600208 var211201))
(assert (= var4862352 var211201))
(assert (= temp11022_221 #x0000000000000001))
(assert (= var212414
   (ite (= ARGNAME_groups_NAMEEND temp11022_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11022_222 #x0000000000000001))
(assert (= var212414 temp11022_222))
(assert (= temp11022_223 #x0000000000000002))
(assert (= var5191299 temp11022_223))
(assert (= var5191301 (bvsub ARGNAME_weight_NAMEEND_DIM var5191299)))
(assert (= var5256844 var5191299))
(assert (= var5256845 var5191301))
(assert (= temp11022_224 #x0000000000000001))
(assert (= var211058 temp11022_224))
(model-add temp11022_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp11022_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp11022_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp11022_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





