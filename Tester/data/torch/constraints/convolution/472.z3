(declare-fun temp629_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp629_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp629_3 () (_ BitVec 64))
(declare-fun temp629_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp629_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp629_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp629_7 () (_ BitVec 64))
(declare-fun temp629_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp629_9 () (_ BitVec 64))
(declare-fun temp629_10 () (_ BitVec 64))
(declare-fun temp629_11 () (_ BitVec 64))
(declare-fun temp629_12 () (_ BitVec 64))
(declare-fun temp629_13 () (_ BitVec 64))
(declare-fun temp629_14 () (_ BitVec 64))
(declare-fun temp629_15 () (_ BitVec 64))
(declare-fun temp629_16 () (_ BitVec 64))
(declare-fun temp629_17 () (_ BitVec 64))
(declare-fun temp629_18 () (_ BitVec 64))
(declare-fun temp629_19 () (_ BitVec 64))
(declare-fun temp629_20 () (_ BitVec 64))
(declare-fun temp629_21 () (_ BitVec 64))
(declare-fun temp629_22 () (_ BitVec 64))
(declare-fun temp629_23 () (_ BitVec 64))
(declare-fun temp629_24 () (_ BitVec 64))
(declare-fun temp629_25 () (_ BitVec 64))
(declare-fun temp629_26 () (_ BitVec 64))
(declare-fun temp629_27 () (_ BitVec 64))
(declare-fun temp629_28 () (_ BitVec 64))
(declare-fun temp629_29 () (_ BitVec 64))
(declare-fun temp629_30 () (_ BitVec 64))
(declare-fun temp629_31 () (_ BitVec 64))
(declare-fun temp629_32 () (_ BitVec 64))
(declare-fun temp629_33 () (_ BitVec 64))
(declare-fun temp629_34 () (_ BitVec 64))
(declare-fun temp629_35 () (_ BitVec 64))
(declare-fun temp629_36 () (_ BitVec 64))
(declare-fun temp629_37 () (_ BitVec 64))
(declare-fun temp629_38 () (_ BitVec 64))
(declare-fun temp629_39 () (_ BitVec 64))
(declare-fun temp629_40 () (_ BitVec 64))
(declare-fun temp629_41 () (_ BitVec 64))
(declare-fun temp629_42 () (_ BitVec 64))
(declare-fun temp629_43 () (_ BitVec 64))
(declare-fun temp629_44 () (_ BitVec 64))
(declare-fun temp629_45 () (_ BitVec 64))
(declare-fun temp629_46 () (_ BitVec 64))
(declare-fun temp629_47 () (_ BitVec 64))
(declare-fun temp629_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp629_49 () (_ BitVec 64))
(declare-fun temp629_50 () (_ BitVec 64))
(declare-fun temp629_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp629_52 () (_ BitVec 64))
(declare-fun temp629_53 () (_ BitVec 64))
(declare-fun temp629_54 () (_ BitVec 64))
(declare-fun temp629_55 () (_ BitVec 64))
(declare-fun temp629_56 () (_ BitVec 64))
(declare-fun temp629_57 () (_ BitVec 64))
(declare-fun temp629_58 () (_ BitVec 64))
(declare-fun temp629_59 () (_ BitVec 64))
(declare-fun temp629_60 () (_ BitVec 64))
(declare-fun temp629_61 () (_ BitVec 64))
(declare-fun temp629_62 () (_ BitVec 64))
(declare-fun temp629_63 () (_ BitVec 64))
(declare-fun temp629_64 () (_ BitVec 64))
(declare-fun temp629_65 () (_ BitVec 64))
(declare-fun temp629_66 () (_ BitVec 64))
(declare-fun temp629_67 () (_ BitVec 64))
(declare-fun temp629_68 () (_ BitVec 64))
(declare-fun temp629_69 () (_ BitVec 64))
(declare-fun temp629_70 () (_ BitVec 64))
(declare-fun temp629_71 () (_ BitVec 64))
(declare-fun temp629_72 () (_ BitVec 64))
(declare-fun temp629_73 () (_ BitVec 64))
(declare-fun temp629_74 () (_ BitVec 64))
(declare-fun temp629_75 () (_ BitVec 64))
(declare-fun temp629_76 () (_ BitVec 64))
(declare-fun temp629_77 () (_ BitVec 64))
(declare-fun temp629_78 () (_ BitVec 64))
(declare-fun temp629_79 () (_ BitVec 64))
(declare-fun temp629_80 () (_ BitVec 64))
(declare-fun temp629_81 () (_ BitVec 64))
(declare-fun temp629_82 () (_ BitVec 64))
(declare-fun temp629_83 () (_ BitVec 64))
(declare-fun temp629_84 () (_ BitVec 64))
(declare-fun temp629_85 () (_ BitVec 64))
(declare-fun temp629_86 () (_ BitVec 64))
(declare-fun temp629_87 () (_ BitVec 64))
(declare-fun temp629_88 () (_ BitVec 64))
(declare-fun temp629_89 () (_ BitVec 64))
(declare-fun temp629_90 () (_ BitVec 64))
(declare-fun temp629_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp629_92 () (_ BitVec 64))
(declare-fun temp629_93 () (_ BitVec 64))
(declare-fun temp629_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp629_95 () (_ BitVec 64))
(declare-fun temp629_96 () (_ BitVec 64))
(declare-fun temp629_97 () (_ BitVec 64))
(declare-fun temp629_98 () (_ BitVec 64))
(declare-fun temp629_99 () (_ BitVec 64))
(declare-fun temp629_100 () (_ BitVec 64))
(declare-fun temp629_101 () (_ BitVec 64))
(declare-fun temp629_102 () (_ BitVec 64))
(declare-fun temp629_103 () (_ BitVec 64))
(declare-fun temp629_104 () (_ BitVec 64))
(declare-fun temp629_105 () (_ BitVec 64))
(declare-fun temp629_106 () (_ BitVec 64))
(declare-fun temp629_107 () (_ BitVec 64))
(declare-fun temp629_108 () (_ BitVec 64))
(declare-fun temp629_109 () (_ BitVec 64))
(declare-fun temp629_110 () (_ BitVec 64))
(declare-fun temp629_111 () (_ BitVec 64))
(declare-fun temp629_112 () (_ BitVec 64))
(declare-fun temp629_113 () (_ BitVec 64))
(declare-fun temp629_114 () (_ BitVec 64))
(declare-fun temp629_115 () (_ BitVec 64))
(declare-fun temp629_116 () (_ BitVec 64))
(declare-fun temp629_117 () (_ BitVec 64))
(declare-fun temp629_118 () (_ BitVec 64))
(declare-fun temp629_119 () (_ BitVec 64))
(declare-fun temp629_120 () (_ BitVec 64))
(declare-fun temp629_121 () (_ BitVec 64))
(declare-fun temp629_122 () (_ BitVec 64))
(declare-fun temp629_123 () (_ BitVec 64))
(declare-fun temp629_124 () (_ BitVec 64))
(declare-fun temp629_125 () (_ BitVec 64))
(declare-fun temp629_126 () (_ BitVec 64))
(declare-fun temp629_127 () (_ BitVec 64))
(declare-fun temp629_128 () (_ BitVec 64))
(declare-fun temp629_129 () (_ BitVec 64))
(declare-fun temp629_130 () (_ BitVec 64))
(declare-fun temp629_131 () (_ BitVec 64))
(declare-fun temp629_132 () (_ BitVec 64))
(declare-fun temp629_133 () (_ BitVec 64))
(declare-fun temp629_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp629_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp629_136 () (_ BitVec 64))
(declare-fun temp629_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp629_138 () (_ BitVec 64))
(declare-fun temp629_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp629_140 () (_ BitVec 64))
(declare-fun temp629_141 () (_ BitVec 64))
(declare-fun temp629_142 () (_ BitVec 64))
(declare-fun temp629_143 () (_ BitVec 64))
(declare-fun temp629_144 () (_ BitVec 64))
(declare-fun temp629_145 () (_ BitVec 64))
(declare-fun temp629_146 () (_ BitVec 64))
(declare-fun temp629_147 () (_ BitVec 64))
(declare-fun temp629_148 () (_ BitVec 64))
(declare-fun temp629_149 () (_ BitVec 64))
(declare-fun temp629_150 () (_ BitVec 64))
(declare-fun temp629_151 () (_ BitVec 64))
(declare-fun temp629_152 () (_ BitVec 64))
(declare-fun temp629_153 () (_ BitVec 64))
(declare-fun temp629_154 () (_ BitVec 64))
(declare-fun temp629_155 () (_ BitVec 64))
(declare-fun temp629_157 () (_ BitVec 64))
(declare-fun temp629_158 () (_ BitVec 64))
(declare-fun temp629_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp629_159 () (_ BitVec 64))
(declare-fun temp629_160 () (_ BitVec 64))
(declare-fun temp629_162 () (_ BitVec 64))
(declare-fun temp629_163 () (_ BitVec 64))
(declare-fun temp629_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp629_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp629_165 () (_ BitVec 64))
(declare-fun temp629_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp629_167 () (_ BitVec 64))
(declare-fun temp629_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp629_169 () (_ BitVec 64))
(declare-fun temp629_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp629_171 () (_ BitVec 64))
(declare-fun temp629_172 () (_ BitVec 64))
(declare-fun temp629_173 () (_ BitVec 64))
(declare-fun temp629_174 () (_ BitVec 64))
(declare-fun temp629_175 () (_ BitVec 64))
(declare-fun temp629_176 () (_ BitVec 64))
(declare-fun temp629_177 () (_ BitVec 64))
(declare-fun temp629_178 () (_ BitVec 64))
(declare-fun temp629_179 () (_ BitVec 64))
(declare-fun temp629_180 () (_ BitVec 64))
(declare-fun temp629_181 () (_ BitVec 64))
(declare-fun temp629_182 () (_ BitVec 64))
(declare-fun temp629_183 () (_ BitVec 64))
(declare-fun temp629_184 () (_ BitVec 64))
(declare-fun temp629_185 () (_ BitVec 64))
(declare-fun temp629_186 () (_ BitVec 64))
(declare-fun temp629_187 () (_ BitVec 64))
(declare-fun temp629_188 () (_ BitVec 64))
(declare-fun temp629_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp629_190 () (_ BitVec 64))
(declare-fun temp629_192 () (_ BitVec 64))
(declare-fun temp629_193 () (_ BitVec 64))
(declare-fun temp629_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp629_194 () (_ BitVec 64))
(declare-fun temp629_195 () (_ BitVec 64))
(declare-fun temp629_197 () (_ BitVec 64))
(declare-fun temp629_198 () (_ BitVec 64))
(declare-fun temp629_196 () (_ BitVec 64))
(declare-fun temp629_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp629_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp629_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp629_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp629_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp629_204 () (_ BitVec 64))
(declare-fun temp629_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp629_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp629_207 () (_ BitVec 64))
(declare-fun temp629_208 () (_ BitVec 64))
(declare-fun temp629_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp629_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp629_211 () (_ BitVec 64))
(declare-fun temp629_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp629_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp629_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4796816 () (_ BitVec 64))
(declare-fun var211388 () (_ BitVec 64))
(declare-fun temp629_215 () (_ BitVec 64))
(declare-fun var211389 () (_ BitVec 64))
(declare-fun var5717837 () (_ BitVec 64))
(declare-fun temp629_216 () (_ BitVec 64))
(assert (= temp629_1 #x0000000000000001))
(assert (= var77203 temp629_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp629_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp629_2)))
(assert (= temp629_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp629_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp629_4 #x0000000000000000))
(assert (= var210941 temp629_4))
(assert (= temp629_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp629_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp629_6 #x0000000000000000))
(assert (= var210986 temp629_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp629_7 #x0000000000000000))
(assert (= temp629_8 temp629_7))
(assert (= temp629_9 (select ARGNAME_padding_NAMEEND_VAL temp629_8)))
(assert (= temp629_10 #x0000000000000001))
(assert (= temp629_11 temp629_10))
(assert (= temp629_12 (select ARGNAME_padding_NAMEEND_VAL temp629_11)))
(assert (= temp629_13 #x0000000000000002))
(assert (= temp629_14 temp629_13))
(assert (= temp629_15 (select ARGNAME_padding_NAMEEND_VAL temp629_14)))
(assert (= temp629_16 #x0000000000000003))
(assert (= temp629_17 temp629_16))
(assert (= temp629_18 (select ARGNAME_padding_NAMEEND_VAL temp629_17)))
(assert (= temp629_19 #x0000000000000004))
(assert (= temp629_20 temp629_19))
(assert (= temp629_21 (select ARGNAME_padding_NAMEEND_VAL temp629_20)))
(assert (= temp629_22 #x0000000000000005))
(assert (= temp629_23 temp629_22))
(assert (= temp629_24 (select ARGNAME_padding_NAMEEND_VAL temp629_23)))
(assert (= temp629_25 #x0000000000000000))
(assert (= temp629_26 #x0000000000000000))
(assert (= temp629_27 temp629_26))
(assert (= temp629_28 (select ARGNAME_padding_NAMEEND_VAL temp629_27)))
(assert (= temp629_29 #x0000000000000000))
(assert (= temp629_30 #x0000000000000001))
(assert (= temp629_31 temp629_30))
(assert (= temp629_32 (select ARGNAME_padding_NAMEEND_VAL temp629_31)))
(assert (= temp629_33 #x0000000000000000))
(assert (= temp629_34 #x0000000000000002))
(assert (= temp629_35 temp629_34))
(assert (= temp629_36 (select ARGNAME_padding_NAMEEND_VAL temp629_35)))
(assert (= temp629_37 #x0000000000000000))
(assert (= temp629_38 #x0000000000000003))
(assert (= temp629_39 temp629_38))
(assert (= temp629_40 (select ARGNAME_padding_NAMEEND_VAL temp629_39)))
(assert (= temp629_41 #x0000000000000000))
(assert (= temp629_42 #x0000000000000004))
(assert (= temp629_43 temp629_42))
(assert (= temp629_44 (select ARGNAME_padding_NAMEEND_VAL temp629_43)))
(assert (= temp629_45 #x0000000000000000))
(assert (= temp629_46 #x0000000000000005))
(assert (= temp629_47 temp629_46))
(assert (= temp629_48 (select ARGNAME_padding_NAMEEND_VAL temp629_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp629_28 temp629_25)
             (bvslt temp629_32 temp629_29)
             (bvslt temp629_36 temp629_33)
             (bvslt temp629_40 temp629_37)
             (bvslt temp629_44 temp629_41)
             (bvslt temp629_48 temp629_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp629_49 #x0000000000000000))
(assert (= var1191714 temp629_49))
(assert (= temp629_50 #x0000000000000000))
(assert (= temp629_51 temp629_50))
(assert (= temp629_52 (select ARGNAME_output_padding_NAMEEND_VAL temp629_51)))
(assert (= temp629_53 #x0000000000000001))
(assert (= temp629_54 temp629_53))
(assert (= temp629_55 (select ARGNAME_output_padding_NAMEEND_VAL temp629_54)))
(assert (= temp629_56 #x0000000000000002))
(assert (= temp629_57 temp629_56))
(assert (= temp629_58 (select ARGNAME_output_padding_NAMEEND_VAL temp629_57)))
(assert (= temp629_59 #x0000000000000003))
(assert (= temp629_60 temp629_59))
(assert (= temp629_61 (select ARGNAME_output_padding_NAMEEND_VAL temp629_60)))
(assert (= temp629_62 #x0000000000000004))
(assert (= temp629_63 temp629_62))
(assert (= temp629_64 (select ARGNAME_output_padding_NAMEEND_VAL temp629_63)))
(assert (= temp629_65 #x0000000000000005))
(assert (= temp629_66 temp629_65))
(assert (= temp629_67 (select ARGNAME_output_padding_NAMEEND_VAL temp629_66)))
(assert (= temp629_68 #x0000000000000000))
(assert (= temp629_69 #x0000000000000000))
(assert (= temp629_70 temp629_69))
(assert (= temp629_71 (select ARGNAME_output_padding_NAMEEND_VAL temp629_70)))
(assert (= temp629_72 #x0000000000000000))
(assert (= temp629_73 #x0000000000000001))
(assert (= temp629_74 temp629_73))
(assert (= temp629_75 (select ARGNAME_output_padding_NAMEEND_VAL temp629_74)))
(assert (= temp629_76 #x0000000000000000))
(assert (= temp629_77 #x0000000000000002))
(assert (= temp629_78 temp629_77))
(assert (= temp629_79 (select ARGNAME_output_padding_NAMEEND_VAL temp629_78)))
(assert (= temp629_80 #x0000000000000000))
(assert (= temp629_81 #x0000000000000003))
(assert (= temp629_82 temp629_81))
(assert (= temp629_83 (select ARGNAME_output_padding_NAMEEND_VAL temp629_82)))
(assert (= temp629_84 #x0000000000000000))
(assert (= temp629_85 #x0000000000000004))
(assert (= temp629_86 temp629_85))
(assert (= temp629_87 (select ARGNAME_output_padding_NAMEEND_VAL temp629_86)))
(assert (= temp629_88 #x0000000000000000))
(assert (= temp629_89 #x0000000000000005))
(assert (= temp629_90 temp629_89))
(assert (= temp629_91 (select ARGNAME_output_padding_NAMEEND_VAL temp629_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp629_71 temp629_68)
             (bvslt temp629_75 temp629_72)
             (bvslt temp629_79 temp629_76)
             (bvslt temp629_83 temp629_80)
             (bvslt temp629_87 temp629_84)
             (bvslt temp629_91 temp629_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp629_92 #x0000000000000000))
(assert (= var1191725 temp629_92))
(assert (= temp629_93 #x0000000000000000))
(assert (= temp629_94 temp629_93))
(assert (= temp629_95 (select ARGNAME_stride_NAMEEND_VAL temp629_94)))
(assert (= temp629_96 #x0000000000000001))
(assert (= temp629_97 temp629_96))
(assert (= temp629_98 (select ARGNAME_stride_NAMEEND_VAL temp629_97)))
(assert (= temp629_99 #x0000000000000002))
(assert (= temp629_100 temp629_99))
(assert (= temp629_101 (select ARGNAME_stride_NAMEEND_VAL temp629_100)))
(assert (= temp629_102 #x0000000000000003))
(assert (= temp629_103 temp629_102))
(assert (= temp629_104 (select ARGNAME_stride_NAMEEND_VAL temp629_103)))
(assert (= temp629_105 #x0000000000000004))
(assert (= temp629_106 temp629_105))
(assert (= temp629_107 (select ARGNAME_stride_NAMEEND_VAL temp629_106)))
(assert (= temp629_108 #x0000000000000005))
(assert (= temp629_109 temp629_108))
(assert (= temp629_110 (select ARGNAME_stride_NAMEEND_VAL temp629_109)))
(assert (= temp629_111 #x0000000000000000))
(assert (= temp629_112 #x0000000000000000))
(assert (= temp629_113 temp629_112))
(assert (= temp629_114 (select ARGNAME_stride_NAMEEND_VAL temp629_113)))
(assert (= temp629_115 #x0000000000000000))
(assert (= temp629_116 #x0000000000000001))
(assert (= temp629_117 temp629_116))
(assert (= temp629_118 (select ARGNAME_stride_NAMEEND_VAL temp629_117)))
(assert (= temp629_119 #x0000000000000000))
(assert (= temp629_120 #x0000000000000002))
(assert (= temp629_121 temp629_120))
(assert (= temp629_122 (select ARGNAME_stride_NAMEEND_VAL temp629_121)))
(assert (= temp629_123 #x0000000000000000))
(assert (= temp629_124 #x0000000000000003))
(assert (= temp629_125 temp629_124))
(assert (= temp629_126 (select ARGNAME_stride_NAMEEND_VAL temp629_125)))
(assert (= temp629_127 #x0000000000000000))
(assert (= temp629_128 #x0000000000000004))
(assert (= temp629_129 temp629_128))
(assert (= temp629_130 (select ARGNAME_stride_NAMEEND_VAL temp629_129)))
(assert (= temp629_131 #x0000000000000000))
(assert (= temp629_132 #x0000000000000005))
(assert (= temp629_133 temp629_132))
(assert (= temp629_134 (select ARGNAME_stride_NAMEEND_VAL temp629_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp629_114 temp629_111)
             (bvsle temp629_118 temp629_115)
             (bvsle temp629_122 temp629_119)
             (bvsle temp629_126 temp629_123)
             (bvsle temp629_130 temp629_127)
             (bvsle temp629_134 temp629_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp629_135 #x0000000000000000))
(assert (= var1191735 temp629_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp629_136 #x0000000000000001))
(assert (= var1191747 temp629_136))
(assert (= temp629_137 #x0000000000000000))
(assert (= var1179826 temp629_137))
(assert (= temp629_138 #x0000000000000000))
(assert (= temp629_139 temp629_138))
(assert (= temp629_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp629_139)))
(assert (= temp629_141 #x0000000000000001))
(assert (= temp629_142 temp629_141))
(assert (= temp629_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp629_142)))
(assert (= temp629_144 #x0000000000000002))
(assert (= temp629_145 temp629_144))
(assert (= temp629_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp629_145)))
(assert (= temp629_147 #x0000000000000003))
(assert (= temp629_148 temp629_147))
(assert (= temp629_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp629_148)))
(assert (= temp629_150 #x0000000000000004))
(assert (= temp629_151 temp629_150))
(assert (= temp629_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp629_151)))
(assert (= temp629_153 #x0000000000000005))
(assert (= temp629_154 temp629_153))
(assert (= temp629_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp629_154)))
(assert (= temp629_157 var1179826))
(assert (= temp629_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp629_157)))
(assert (= temp629_156 temp629_158))
(assert (= var1191780
   (ite (bvslt temp629_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp629_159 #x0000000000000000))
(assert (= var1191780 temp629_159))
(assert (= temp629_160 #x0000000000000000))
(assert (= var1179826 temp629_160))
(assert (= temp629_162 var1179826))
(assert (= temp629_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp629_162)))
(assert (= temp629_161 temp629_163))
(assert (= var1191802 (bvsmod temp629_161 ARGNAME_groups_NAMEEND)))
(assert (= temp629_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp629_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp629_165 #x0000000000000001))
(assert (= var1191803 temp629_165))
(assert (= temp629_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp629_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp629_167 #x0000000000000001))
(assert (= var1191823 temp629_167))
(assert (= temp629_168 #x0000000000000001))
(assert (= var1180714 temp629_168))
(assert (= temp629_169 #x0000000000000000))
(assert (= temp629_170 temp629_169))
(assert (= temp629_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp629_170)))
(assert (= temp629_172 #x0000000000000001))
(assert (= temp629_173 temp629_172))
(assert (= temp629_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp629_173)))
(assert (= temp629_175 #x0000000000000002))
(assert (= temp629_176 temp629_175))
(assert (= temp629_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp629_176)))
(assert (= temp629_178 #x0000000000000003))
(assert (= temp629_179 temp629_178))
(assert (= temp629_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp629_179)))
(assert (= temp629_181 #x0000000000000004))
(assert (= temp629_182 temp629_181))
(assert (= temp629_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp629_182)))
(assert (= temp629_184 #x0000000000000005))
(assert (= temp629_185 temp629_184))
(assert (= temp629_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp629_185)))
(assert (= temp629_187 #x0000000000000000))
(assert (= temp629_188
   (ite (bvslt var1180714 temp629_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp629_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp629_188)))
(assert (= var1191831 temp629_189))
(assert (bvslt (ite (bvslt var1180714 temp629_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp629_190 #x0000000000000001))
(assert (= var1180714 temp629_190))
(assert (= temp629_192 var1180714))
(assert (= temp629_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp629_192)))
(assert (= temp629_191 temp629_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp629_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp629_194 #x0000000000000001))
(assert (= var1191836 temp629_194))
(assert (= temp629_195 #x0000000000000000))
(assert (= var1179826 temp629_195))
(assert (= temp629_197 var1179826))
(assert (= temp629_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp629_197)))
(assert (= temp629_196 temp629_198))
(assert (= temp629_199 #x0000000000000002))
(assert (= var1586025 temp629_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp629_200 #x0000000000000001))
(assert (= var1191993 temp629_200))
(assert (= temp629_201 #x0000000000000001))
(assert (= var2700303 temp629_201))
(assert (= temp629_202 #x0000000000000001))
(assert (= var2962447 temp629_202))
(assert (= temp629_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp629_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp629_204 #x0000000000000001))
(assert (= var211058 temp629_204))
(assert (= temp629_205 #x0000000000000001))
(assert (= var211188 temp629_205))
(assert (= var3879401 var211188))
(assert (= temp629_206 #x0000000000000000))
(assert (= var3866802 temp629_206))
(assert (= temp629_207 #x0000000000000000))
(assert (= temp629_208
   (ite (bvslt var3866802 temp629_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp629_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp629_208)))
(assert (= var3879420 temp629_209))
(assert (bvslt (ite (bvslt var3866802 temp629_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp629_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp629_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp629_211 #x0000000000000001))
(assert (= var3879421 temp629_211))
(assert (= temp629_212 #x0000000000000000))
(assert (= var4079423 temp629_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp629_213 #x0000000000000002))
(assert (= var4208259 temp629_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp629_214 #x0000000000000000))
(assert (= var4273820 temp629_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4796816 var211201))
(assert (= var211388 var210913))
(assert (= temp629_215 #x0000000000000000))
(assert (= var211389
   (ite (distinct var211388 temp629_215) #x0000000000000001 #x0000000000000000)))
(assert (= var5717837 var211389))
(assert (= temp629_216 #x0000000000000001))
(assert (= var211058 temp629_216))
(model-add temp629_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp629_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp629_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp629_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





