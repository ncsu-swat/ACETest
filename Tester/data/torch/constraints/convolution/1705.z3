(declare-fun temp11068_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp11068_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp11068_3 () (_ BitVec 64))
(declare-fun temp11068_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp11068_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp11068_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp11068_7 () (_ BitVec 64))
(declare-fun temp11068_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11068_9 () (_ BitVec 64))
(declare-fun temp11068_10 () (_ BitVec 64))
(declare-fun temp11068_11 () (_ BitVec 64))
(declare-fun temp11068_12 () (_ BitVec 64))
(declare-fun temp11068_13 () (_ BitVec 64))
(declare-fun temp11068_14 () (_ BitVec 64))
(declare-fun temp11068_15 () (_ BitVec 64))
(declare-fun temp11068_16 () (_ BitVec 64))
(declare-fun temp11068_17 () (_ BitVec 64))
(declare-fun temp11068_18 () (_ BitVec 64))
(declare-fun temp11068_19 () (_ BitVec 64))
(declare-fun temp11068_20 () (_ BitVec 64))
(declare-fun temp11068_21 () (_ BitVec 64))
(declare-fun temp11068_22 () (_ BitVec 64))
(declare-fun temp11068_23 () (_ BitVec 64))
(declare-fun temp11068_24 () (_ BitVec 64))
(declare-fun temp11068_25 () (_ BitVec 64))
(declare-fun temp11068_26 () (_ BitVec 64))
(declare-fun temp11068_27 () (_ BitVec 64))
(declare-fun temp11068_28 () (_ BitVec 64))
(declare-fun temp11068_29 () (_ BitVec 64))
(declare-fun temp11068_30 () (_ BitVec 64))
(declare-fun temp11068_31 () (_ BitVec 64))
(declare-fun temp11068_32 () (_ BitVec 64))
(declare-fun temp11068_33 () (_ BitVec 64))
(declare-fun temp11068_34 () (_ BitVec 64))
(declare-fun temp11068_35 () (_ BitVec 64))
(declare-fun temp11068_36 () (_ BitVec 64))
(declare-fun temp11068_37 () (_ BitVec 64))
(declare-fun temp11068_38 () (_ BitVec 64))
(declare-fun temp11068_39 () (_ BitVec 64))
(declare-fun temp11068_40 () (_ BitVec 64))
(declare-fun temp11068_41 () (_ BitVec 64))
(declare-fun temp11068_42 () (_ BitVec 64))
(declare-fun temp11068_43 () (_ BitVec 64))
(declare-fun temp11068_44 () (_ BitVec 64))
(declare-fun temp11068_45 () (_ BitVec 64))
(declare-fun temp11068_46 () (_ BitVec 64))
(declare-fun temp11068_47 () (_ BitVec 64))
(declare-fun temp11068_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp11068_49 () (_ BitVec 64))
(declare-fun temp11068_50 () (_ BitVec 64))
(declare-fun temp11068_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11068_52 () (_ BitVec 64))
(declare-fun temp11068_53 () (_ BitVec 64))
(declare-fun temp11068_54 () (_ BitVec 64))
(declare-fun temp11068_55 () (_ BitVec 64))
(declare-fun temp11068_56 () (_ BitVec 64))
(declare-fun temp11068_57 () (_ BitVec 64))
(declare-fun temp11068_58 () (_ BitVec 64))
(declare-fun temp11068_59 () (_ BitVec 64))
(declare-fun temp11068_60 () (_ BitVec 64))
(declare-fun temp11068_61 () (_ BitVec 64))
(declare-fun temp11068_62 () (_ BitVec 64))
(declare-fun temp11068_63 () (_ BitVec 64))
(declare-fun temp11068_64 () (_ BitVec 64))
(declare-fun temp11068_65 () (_ BitVec 64))
(declare-fun temp11068_66 () (_ BitVec 64))
(declare-fun temp11068_67 () (_ BitVec 64))
(declare-fun temp11068_68 () (_ BitVec 64))
(declare-fun temp11068_69 () (_ BitVec 64))
(declare-fun temp11068_70 () (_ BitVec 64))
(declare-fun temp11068_71 () (_ BitVec 64))
(declare-fun temp11068_72 () (_ BitVec 64))
(declare-fun temp11068_73 () (_ BitVec 64))
(declare-fun temp11068_74 () (_ BitVec 64))
(declare-fun temp11068_75 () (_ BitVec 64))
(declare-fun temp11068_76 () (_ BitVec 64))
(declare-fun temp11068_77 () (_ BitVec 64))
(declare-fun temp11068_78 () (_ BitVec 64))
(declare-fun temp11068_79 () (_ BitVec 64))
(declare-fun temp11068_80 () (_ BitVec 64))
(declare-fun temp11068_81 () (_ BitVec 64))
(declare-fun temp11068_82 () (_ BitVec 64))
(declare-fun temp11068_83 () (_ BitVec 64))
(declare-fun temp11068_84 () (_ BitVec 64))
(declare-fun temp11068_85 () (_ BitVec 64))
(declare-fun temp11068_86 () (_ BitVec 64))
(declare-fun temp11068_87 () (_ BitVec 64))
(declare-fun temp11068_88 () (_ BitVec 64))
(declare-fun temp11068_89 () (_ BitVec 64))
(declare-fun temp11068_90 () (_ BitVec 64))
(declare-fun temp11068_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp11068_92 () (_ BitVec 64))
(declare-fun temp11068_93 () (_ BitVec 64))
(declare-fun temp11068_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11068_95 () (_ BitVec 64))
(declare-fun temp11068_96 () (_ BitVec 64))
(declare-fun temp11068_97 () (_ BitVec 64))
(declare-fun temp11068_98 () (_ BitVec 64))
(declare-fun temp11068_99 () (_ BitVec 64))
(declare-fun temp11068_100 () (_ BitVec 64))
(declare-fun temp11068_101 () (_ BitVec 64))
(declare-fun temp11068_102 () (_ BitVec 64))
(declare-fun temp11068_103 () (_ BitVec 64))
(declare-fun temp11068_104 () (_ BitVec 64))
(declare-fun temp11068_105 () (_ BitVec 64))
(declare-fun temp11068_106 () (_ BitVec 64))
(declare-fun temp11068_107 () (_ BitVec 64))
(declare-fun temp11068_108 () (_ BitVec 64))
(declare-fun temp11068_109 () (_ BitVec 64))
(declare-fun temp11068_110 () (_ BitVec 64))
(declare-fun temp11068_111 () (_ BitVec 64))
(declare-fun temp11068_112 () (_ BitVec 64))
(declare-fun temp11068_113 () (_ BitVec 64))
(declare-fun temp11068_114 () (_ BitVec 64))
(declare-fun temp11068_115 () (_ BitVec 64))
(declare-fun temp11068_116 () (_ BitVec 64))
(declare-fun temp11068_117 () (_ BitVec 64))
(declare-fun temp11068_118 () (_ BitVec 64))
(declare-fun temp11068_119 () (_ BitVec 64))
(declare-fun temp11068_120 () (_ BitVec 64))
(declare-fun temp11068_121 () (_ BitVec 64))
(declare-fun temp11068_122 () (_ BitVec 64))
(declare-fun temp11068_123 () (_ BitVec 64))
(declare-fun temp11068_124 () (_ BitVec 64))
(declare-fun temp11068_125 () (_ BitVec 64))
(declare-fun temp11068_126 () (_ BitVec 64))
(declare-fun temp11068_127 () (_ BitVec 64))
(declare-fun temp11068_128 () (_ BitVec 64))
(declare-fun temp11068_129 () (_ BitVec 64))
(declare-fun temp11068_130 () (_ BitVec 64))
(declare-fun temp11068_131 () (_ BitVec 64))
(declare-fun temp11068_132 () (_ BitVec 64))
(declare-fun temp11068_133 () (_ BitVec 64))
(declare-fun temp11068_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp11068_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp11068_136 () (_ BitVec 64))
(declare-fun temp11068_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp11068_138 () (_ BitVec 64))
(declare-fun temp11068_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11068_140 () (_ BitVec 64))
(declare-fun temp11068_141 () (_ BitVec 64))
(declare-fun temp11068_142 () (_ BitVec 64))
(declare-fun temp11068_143 () (_ BitVec 64))
(declare-fun temp11068_144 () (_ BitVec 64))
(declare-fun temp11068_145 () (_ BitVec 64))
(declare-fun temp11068_146 () (_ BitVec 64))
(declare-fun temp11068_147 () (_ BitVec 64))
(declare-fun temp11068_148 () (_ BitVec 64))
(declare-fun temp11068_149 () (_ BitVec 64))
(declare-fun temp11068_150 () (_ BitVec 64))
(declare-fun temp11068_151 () (_ BitVec 64))
(declare-fun temp11068_152 () (_ BitVec 64))
(declare-fun temp11068_153 () (_ BitVec 64))
(declare-fun temp11068_154 () (_ BitVec 64))
(declare-fun temp11068_155 () (_ BitVec 64))
(declare-fun temp11068_157 () (_ BitVec 64))
(declare-fun temp11068_158 () (_ BitVec 64))
(declare-fun temp11068_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp11068_159 () (_ BitVec 64))
(declare-fun temp11068_160 () (_ BitVec 64))
(declare-fun temp11068_162 () (_ BitVec 64))
(declare-fun temp11068_163 () (_ BitVec 64))
(declare-fun temp11068_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp11068_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp11068_165 () (_ BitVec 64))
(declare-fun temp11068_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp11068_167 () (_ BitVec 64))
(declare-fun temp11068_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp11068_169 () (_ BitVec 64))
(declare-fun temp11068_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11068_171 () (_ BitVec 64))
(declare-fun temp11068_172 () (_ BitVec 64))
(declare-fun temp11068_173 () (_ BitVec 64))
(declare-fun temp11068_174 () (_ BitVec 64))
(declare-fun temp11068_175 () (_ BitVec 64))
(declare-fun temp11068_176 () (_ BitVec 64))
(declare-fun temp11068_177 () (_ BitVec 64))
(declare-fun temp11068_178 () (_ BitVec 64))
(declare-fun temp11068_179 () (_ BitVec 64))
(declare-fun temp11068_180 () (_ BitVec 64))
(declare-fun temp11068_181 () (_ BitVec 64))
(declare-fun temp11068_182 () (_ BitVec 64))
(declare-fun temp11068_183 () (_ BitVec 64))
(declare-fun temp11068_184 () (_ BitVec 64))
(declare-fun temp11068_185 () (_ BitVec 64))
(declare-fun temp11068_186 () (_ BitVec 64))
(declare-fun temp11068_187 () (_ BitVec 64))
(declare-fun temp11068_188 () (_ BitVec 64))
(declare-fun temp11068_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp11068_190 () (_ BitVec 64))
(declare-fun temp11068_192 () (_ BitVec 64))
(declare-fun temp11068_193 () (_ BitVec 64))
(declare-fun temp11068_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp11068_194 () (_ BitVec 64))
(declare-fun temp11068_195 () (_ BitVec 64))
(declare-fun temp11068_197 () (_ BitVec 64))
(declare-fun temp11068_198 () (_ BitVec 64))
(declare-fun temp11068_196 () (_ BitVec 64))
(declare-fun temp11068_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp11068_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp11068_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp11068_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp11068_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp11068_204 () (_ BitVec 64))
(declare-fun temp11068_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp11068_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp11068_207 () (_ BitVec 64))
(declare-fun temp11068_208 () (_ BitVec 64))
(declare-fun temp11068_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp11068_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp11068_211 () (_ BitVec 64))
(declare-fun temp11068_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp11068_213 () (_ BitVec 64))
(declare-fun temp11068_214 () (_ BitVec 64))
(declare-fun temp11068_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp11068_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp11068_217 () (_ BitVec 64))
(declare-fun temp11068_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp11068_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp11068_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var4600208 () (_ BitVec 64))
(declare-fun var4862352 () (_ BitVec 64))
(declare-fun temp11068_221 () (_ BitVec 64))
(declare-fun var212414 () (_ BitVec 64))
(declare-fun temp11068_222 () (_ BitVec 64))
(declare-fun temp11068_223 () (_ BitVec 64))
(declare-fun var5191299 () (_ BitVec 64))
(declare-fun var5256844 () (_ BitVec 64))
(declare-fun temp11068_224 () (_ BitVec 64))
(declare-fun temp11068_225 () (_ BitVec 64))
(declare-fun var6632212 () (_ BitVec 64))
(declare-fun var6632179 () (_ BitVec 64))
(declare-fun var6500743 () (_ BitVec 64))
(declare-fun var6500739 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp11068_226 () (_ BitVec 64))
(assert (= temp11068_1 #x0000000000000001))
(assert (= var77203 temp11068_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp11068_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp11068_2)))
(assert (= temp11068_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp11068_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11068_4 #x0000000000000000))
(assert (= var210941 temp11068_4))
(assert (= temp11068_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp11068_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11068_6 #x0000000000000000))
(assert (= var210986 temp11068_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp11068_7 #x0000000000000000))
(assert (= temp11068_8 temp11068_7))
(assert (= temp11068_9 (select ARGNAME_padding_NAMEEND_VAL temp11068_8)))
(assert (= temp11068_10 #x0000000000000001))
(assert (= temp11068_11 temp11068_10))
(assert (= temp11068_12 (select ARGNAME_padding_NAMEEND_VAL temp11068_11)))
(assert (= temp11068_13 #x0000000000000002))
(assert (= temp11068_14 temp11068_13))
(assert (= temp11068_15 (select ARGNAME_padding_NAMEEND_VAL temp11068_14)))
(assert (= temp11068_16 #x0000000000000003))
(assert (= temp11068_17 temp11068_16))
(assert (= temp11068_18 (select ARGNAME_padding_NAMEEND_VAL temp11068_17)))
(assert (= temp11068_19 #x0000000000000004))
(assert (= temp11068_20 temp11068_19))
(assert (= temp11068_21 (select ARGNAME_padding_NAMEEND_VAL temp11068_20)))
(assert (= temp11068_22 #x0000000000000005))
(assert (= temp11068_23 temp11068_22))
(assert (= temp11068_24 (select ARGNAME_padding_NAMEEND_VAL temp11068_23)))
(assert (= temp11068_25 #x0000000000000000))
(assert (= temp11068_26 #x0000000000000000))
(assert (= temp11068_27 temp11068_26))
(assert (= temp11068_28 (select ARGNAME_padding_NAMEEND_VAL temp11068_27)))
(assert (= temp11068_29 #x0000000000000000))
(assert (= temp11068_30 #x0000000000000001))
(assert (= temp11068_31 temp11068_30))
(assert (= temp11068_32 (select ARGNAME_padding_NAMEEND_VAL temp11068_31)))
(assert (= temp11068_33 #x0000000000000000))
(assert (= temp11068_34 #x0000000000000002))
(assert (= temp11068_35 temp11068_34))
(assert (= temp11068_36 (select ARGNAME_padding_NAMEEND_VAL temp11068_35)))
(assert (= temp11068_37 #x0000000000000000))
(assert (= temp11068_38 #x0000000000000003))
(assert (= temp11068_39 temp11068_38))
(assert (= temp11068_40 (select ARGNAME_padding_NAMEEND_VAL temp11068_39)))
(assert (= temp11068_41 #x0000000000000000))
(assert (= temp11068_42 #x0000000000000004))
(assert (= temp11068_43 temp11068_42))
(assert (= temp11068_44 (select ARGNAME_padding_NAMEEND_VAL temp11068_43)))
(assert (= temp11068_45 #x0000000000000000))
(assert (= temp11068_46 #x0000000000000005))
(assert (= temp11068_47 temp11068_46))
(assert (= temp11068_48 (select ARGNAME_padding_NAMEEND_VAL temp11068_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp11068_28 temp11068_25)
             (bvslt temp11068_32 temp11068_29)
             (bvslt temp11068_36 temp11068_33)
             (bvslt temp11068_40 temp11068_37)
             (bvslt temp11068_44 temp11068_41)
             (bvslt temp11068_48 temp11068_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11068_49 #x0000000000000000))
(assert (= var1191714 temp11068_49))
(assert (= temp11068_50 #x0000000000000000))
(assert (= temp11068_51 temp11068_50))
(assert (= temp11068_52 (select ARGNAME_output_padding_NAMEEND_VAL temp11068_51)))
(assert (= temp11068_53 #x0000000000000001))
(assert (= temp11068_54 temp11068_53))
(assert (= temp11068_55 (select ARGNAME_output_padding_NAMEEND_VAL temp11068_54)))
(assert (= temp11068_56 #x0000000000000002))
(assert (= temp11068_57 temp11068_56))
(assert (= temp11068_58 (select ARGNAME_output_padding_NAMEEND_VAL temp11068_57)))
(assert (= temp11068_59 #x0000000000000003))
(assert (= temp11068_60 temp11068_59))
(assert (= temp11068_61 (select ARGNAME_output_padding_NAMEEND_VAL temp11068_60)))
(assert (= temp11068_62 #x0000000000000004))
(assert (= temp11068_63 temp11068_62))
(assert (= temp11068_64 (select ARGNAME_output_padding_NAMEEND_VAL temp11068_63)))
(assert (= temp11068_65 #x0000000000000005))
(assert (= temp11068_66 temp11068_65))
(assert (= temp11068_67 (select ARGNAME_output_padding_NAMEEND_VAL temp11068_66)))
(assert (= temp11068_68 #x0000000000000000))
(assert (= temp11068_69 #x0000000000000000))
(assert (= temp11068_70 temp11068_69))
(assert (= temp11068_71 (select ARGNAME_output_padding_NAMEEND_VAL temp11068_70)))
(assert (= temp11068_72 #x0000000000000000))
(assert (= temp11068_73 #x0000000000000001))
(assert (= temp11068_74 temp11068_73))
(assert (= temp11068_75 (select ARGNAME_output_padding_NAMEEND_VAL temp11068_74)))
(assert (= temp11068_76 #x0000000000000000))
(assert (= temp11068_77 #x0000000000000002))
(assert (= temp11068_78 temp11068_77))
(assert (= temp11068_79 (select ARGNAME_output_padding_NAMEEND_VAL temp11068_78)))
(assert (= temp11068_80 #x0000000000000000))
(assert (= temp11068_81 #x0000000000000003))
(assert (= temp11068_82 temp11068_81))
(assert (= temp11068_83 (select ARGNAME_output_padding_NAMEEND_VAL temp11068_82)))
(assert (= temp11068_84 #x0000000000000000))
(assert (= temp11068_85 #x0000000000000004))
(assert (= temp11068_86 temp11068_85))
(assert (= temp11068_87 (select ARGNAME_output_padding_NAMEEND_VAL temp11068_86)))
(assert (= temp11068_88 #x0000000000000000))
(assert (= temp11068_89 #x0000000000000005))
(assert (= temp11068_90 temp11068_89))
(assert (= temp11068_91 (select ARGNAME_output_padding_NAMEEND_VAL temp11068_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp11068_71 temp11068_68)
             (bvslt temp11068_75 temp11068_72)
             (bvslt temp11068_79 temp11068_76)
             (bvslt temp11068_83 temp11068_80)
             (bvslt temp11068_87 temp11068_84)
             (bvslt temp11068_91 temp11068_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11068_92 #x0000000000000000))
(assert (= var1191725 temp11068_92))
(assert (= temp11068_93 #x0000000000000000))
(assert (= temp11068_94 temp11068_93))
(assert (= temp11068_95 (select ARGNAME_stride_NAMEEND_VAL temp11068_94)))
(assert (= temp11068_96 #x0000000000000001))
(assert (= temp11068_97 temp11068_96))
(assert (= temp11068_98 (select ARGNAME_stride_NAMEEND_VAL temp11068_97)))
(assert (= temp11068_99 #x0000000000000002))
(assert (= temp11068_100 temp11068_99))
(assert (= temp11068_101 (select ARGNAME_stride_NAMEEND_VAL temp11068_100)))
(assert (= temp11068_102 #x0000000000000003))
(assert (= temp11068_103 temp11068_102))
(assert (= temp11068_104 (select ARGNAME_stride_NAMEEND_VAL temp11068_103)))
(assert (= temp11068_105 #x0000000000000004))
(assert (= temp11068_106 temp11068_105))
(assert (= temp11068_107 (select ARGNAME_stride_NAMEEND_VAL temp11068_106)))
(assert (= temp11068_108 #x0000000000000005))
(assert (= temp11068_109 temp11068_108))
(assert (= temp11068_110 (select ARGNAME_stride_NAMEEND_VAL temp11068_109)))
(assert (= temp11068_111 #x0000000000000000))
(assert (= temp11068_112 #x0000000000000000))
(assert (= temp11068_113 temp11068_112))
(assert (= temp11068_114 (select ARGNAME_stride_NAMEEND_VAL temp11068_113)))
(assert (= temp11068_115 #x0000000000000000))
(assert (= temp11068_116 #x0000000000000001))
(assert (= temp11068_117 temp11068_116))
(assert (= temp11068_118 (select ARGNAME_stride_NAMEEND_VAL temp11068_117)))
(assert (= temp11068_119 #x0000000000000000))
(assert (= temp11068_120 #x0000000000000002))
(assert (= temp11068_121 temp11068_120))
(assert (= temp11068_122 (select ARGNAME_stride_NAMEEND_VAL temp11068_121)))
(assert (= temp11068_123 #x0000000000000000))
(assert (= temp11068_124 #x0000000000000003))
(assert (= temp11068_125 temp11068_124))
(assert (= temp11068_126 (select ARGNAME_stride_NAMEEND_VAL temp11068_125)))
(assert (= temp11068_127 #x0000000000000000))
(assert (= temp11068_128 #x0000000000000004))
(assert (= temp11068_129 temp11068_128))
(assert (= temp11068_130 (select ARGNAME_stride_NAMEEND_VAL temp11068_129)))
(assert (= temp11068_131 #x0000000000000000))
(assert (= temp11068_132 #x0000000000000005))
(assert (= temp11068_133 temp11068_132))
(assert (= temp11068_134 (select ARGNAME_stride_NAMEEND_VAL temp11068_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp11068_114 temp11068_111)
             (bvsle temp11068_118 temp11068_115)
             (bvsle temp11068_122 temp11068_119)
             (bvsle temp11068_126 temp11068_123)
             (bvsle temp11068_130 temp11068_127)
             (bvsle temp11068_134 temp11068_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11068_135 #x0000000000000000))
(assert (= var1191735 temp11068_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11068_136 #x0000000000000001))
(assert (= var1191747 temp11068_136))
(assert (= temp11068_137 #x0000000000000000))
(assert (= var1179826 temp11068_137))
(assert (= temp11068_138 #x0000000000000000))
(assert (= temp11068_139 temp11068_138))
(assert (= temp11068_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11068_139)))
(assert (= temp11068_141 #x0000000000000001))
(assert (= temp11068_142 temp11068_141))
(assert (= temp11068_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11068_142)))
(assert (= temp11068_144 #x0000000000000002))
(assert (= temp11068_145 temp11068_144))
(assert (= temp11068_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11068_145)))
(assert (= temp11068_147 #x0000000000000003))
(assert (= temp11068_148 temp11068_147))
(assert (= temp11068_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11068_148)))
(assert (= temp11068_150 #x0000000000000004))
(assert (= temp11068_151 temp11068_150))
(assert (= temp11068_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11068_151)))
(assert (= temp11068_153 #x0000000000000005))
(assert (= temp11068_154 temp11068_153))
(assert (= temp11068_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11068_154)))
(assert (= temp11068_157 var1179826))
(assert (= temp11068_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11068_157)))
(assert (= temp11068_156 temp11068_158))
(assert (= var1191780
   (ite (bvslt temp11068_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11068_159 #x0000000000000000))
(assert (= var1191780 temp11068_159))
(assert (= temp11068_160 #x0000000000000000))
(assert (= var1179826 temp11068_160))
(assert (= temp11068_162 var1179826))
(assert (= temp11068_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11068_162)))
(assert (= temp11068_161 temp11068_163))
(assert (= var1191802 (bvsmod temp11068_161 ARGNAME_groups_NAMEEND)))
(assert (= temp11068_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp11068_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp11068_165 #x0000000000000001))
(assert (= var1191803 temp11068_165))
(assert (= temp11068_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp11068_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11068_167 #x0000000000000001))
(assert (= var1191823 temp11068_167))
(assert (= temp11068_168 #x0000000000000001))
(assert (= var1180714 temp11068_168))
(assert (= temp11068_169 #x0000000000000000))
(assert (= temp11068_170 temp11068_169))
(assert (= temp11068_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp11068_170)))
(assert (= temp11068_172 #x0000000000000001))
(assert (= temp11068_173 temp11068_172))
(assert (= temp11068_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp11068_173)))
(assert (= temp11068_175 #x0000000000000002))
(assert (= temp11068_176 temp11068_175))
(assert (= temp11068_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp11068_176)))
(assert (= temp11068_178 #x0000000000000003))
(assert (= temp11068_179 temp11068_178))
(assert (= temp11068_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp11068_179)))
(assert (= temp11068_181 #x0000000000000004))
(assert (= temp11068_182 temp11068_181))
(assert (= temp11068_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp11068_182)))
(assert (= temp11068_184 #x0000000000000005))
(assert (= temp11068_185 temp11068_184))
(assert (= temp11068_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp11068_185)))
(assert (= temp11068_187 #x0000000000000000))
(assert (= temp11068_188
   (ite (bvslt var1180714 temp11068_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp11068_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp11068_188)))
(assert (= var1191831 temp11068_189))
(assert (bvslt (ite (bvslt var1180714 temp11068_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11068_190 #x0000000000000001))
(assert (= var1180714 temp11068_190))
(assert (= temp11068_192 var1180714))
(assert (= temp11068_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11068_192)))
(assert (= temp11068_191 temp11068_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp11068_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp11068_194 #x0000000000000001))
(assert (= var1191836 temp11068_194))
(assert (= temp11068_195 #x0000000000000000))
(assert (= var1179826 temp11068_195))
(assert (= temp11068_197 var1179826))
(assert (= temp11068_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11068_197)))
(assert (= temp11068_196 temp11068_198))
(assert (= temp11068_199 #x0000000000000002))
(assert (= var1586025 temp11068_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp11068_200 #x0000000000000001))
(assert (= var1191993 temp11068_200))
(assert (= temp11068_201 #x0000000000000001))
(assert (= var2700303 temp11068_201))
(assert (= temp11068_202 #x0000000000000001))
(assert (= var2962447 temp11068_202))
(assert (= temp11068_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp11068_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11068_204 #x0000000000000001))
(assert (= var211058 temp11068_204))
(assert (= temp11068_205 #x0000000000000001))
(assert (= var211188 temp11068_205))
(assert (= var3879401 var211188))
(assert (= temp11068_206 #x0000000000000000))
(assert (= var3866802 temp11068_206))
(assert (= temp11068_207 #x0000000000000000))
(assert (= temp11068_208
   (ite (bvslt var3866802 temp11068_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp11068_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp11068_208)))
(assert (= var3879420 temp11068_209))
(assert (bvslt (ite (bvslt var3866802 temp11068_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11068_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp11068_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp11068_211 #x0000000000000000))
(assert (= var3879421 temp11068_211))
(assert (= temp11068_212 #x0000000000000001))
(assert (= var3867690 temp11068_212))
(assert (= temp11068_213 #x0000000000000000))
(assert (= temp11068_214
   (ite (bvslt var3867690 temp11068_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp11068_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp11068_214)))
(assert (= var3879423 temp11068_215))
(assert (bvslt (ite (bvslt var3867690 temp11068_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11068_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp11068_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp11068_217 #x0000000000000001))
(assert (= var3879424 temp11068_217))
(assert (= temp11068_218 #x0000000000000000))
(assert (= var4133117 temp11068_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp11068_219 #x0000000000000002))
(assert (= var4339331 temp11068_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11068_220 #x0000000000000000))
(assert (= var4404892 temp11068_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var4600208 var211201))
(assert (= var4862352 var211201))
(assert (= temp11068_221 #x0000000000000001))
(assert (= var212414
   (ite (= ARGNAME_groups_NAMEEND temp11068_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11068_222 #x0000000000000000))
(assert (= var212414 temp11068_222))
(assert (= temp11068_223 #x0000000000000002))
(assert (= var5191299 temp11068_223))
(assert (= var5256844 var5191299))
(assert (= temp11068_224 #x0000000000000001))
(assert (= var211058 temp11068_224))
(assert (= temp11068_225 #x0000000000000000))
(assert (= var6632212 temp11068_225))
(assert (= var6632179 var6632212))
(assert (= var6500743 var6632179))
(assert (= var6500739 var6500743))
(assert (= var212669 var6500739))
(assert (= temp11068_226 #x0000000000000000))
(assert (= var212669 temp11068_226))
(model-add temp11068_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp11068_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp11068_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp11068_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





