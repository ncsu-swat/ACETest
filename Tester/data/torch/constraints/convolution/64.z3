(declare-fun temp85_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp85_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp85_3 () (_ BitVec 64))
(declare-fun temp85_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp85_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp85_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp85_7 () (_ BitVec 64))
(declare-fun temp85_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp85_9 () (_ BitVec 64))
(declare-fun temp85_10 () (_ BitVec 64))
(declare-fun temp85_11 () (_ BitVec 64))
(declare-fun temp85_12 () (_ BitVec 64))
(declare-fun temp85_13 () (_ BitVec 64))
(declare-fun temp85_14 () (_ BitVec 64))
(declare-fun temp85_15 () (_ BitVec 64))
(declare-fun temp85_16 () (_ BitVec 64))
(declare-fun temp85_17 () (_ BitVec 64))
(declare-fun temp85_18 () (_ BitVec 64))
(declare-fun temp85_19 () (_ BitVec 64))
(declare-fun temp85_20 () (_ BitVec 64))
(declare-fun temp85_21 () (_ BitVec 64))
(declare-fun temp85_22 () (_ BitVec 64))
(declare-fun temp85_23 () (_ BitVec 64))
(declare-fun temp85_24 () (_ BitVec 64))
(declare-fun temp85_25 () (_ BitVec 64))
(declare-fun temp85_26 () (_ BitVec 64))
(declare-fun temp85_27 () (_ BitVec 64))
(declare-fun temp85_28 () (_ BitVec 64))
(declare-fun temp85_29 () (_ BitVec 64))
(declare-fun temp85_30 () (_ BitVec 64))
(declare-fun temp85_31 () (_ BitVec 64))
(declare-fun temp85_32 () (_ BitVec 64))
(declare-fun temp85_33 () (_ BitVec 64))
(declare-fun temp85_34 () (_ BitVec 64))
(declare-fun temp85_35 () (_ BitVec 64))
(declare-fun temp85_36 () (_ BitVec 64))
(declare-fun temp85_37 () (_ BitVec 64))
(declare-fun temp85_38 () (_ BitVec 64))
(declare-fun temp85_39 () (_ BitVec 64))
(declare-fun temp85_40 () (_ BitVec 64))
(declare-fun temp85_41 () (_ BitVec 64))
(declare-fun temp85_42 () (_ BitVec 64))
(declare-fun temp85_43 () (_ BitVec 64))
(declare-fun temp85_44 () (_ BitVec 64))
(declare-fun temp85_45 () (_ BitVec 64))
(declare-fun temp85_46 () (_ BitVec 64))
(declare-fun temp85_47 () (_ BitVec 64))
(declare-fun temp85_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp85_49 () (_ BitVec 64))
(declare-fun temp85_50 () (_ BitVec 64))
(declare-fun temp85_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp85_52 () (_ BitVec 64))
(declare-fun temp85_53 () (_ BitVec 64))
(declare-fun temp85_54 () (_ BitVec 64))
(declare-fun temp85_55 () (_ BitVec 64))
(declare-fun temp85_56 () (_ BitVec 64))
(declare-fun temp85_57 () (_ BitVec 64))
(declare-fun temp85_58 () (_ BitVec 64))
(declare-fun temp85_59 () (_ BitVec 64))
(declare-fun temp85_60 () (_ BitVec 64))
(declare-fun temp85_61 () (_ BitVec 64))
(declare-fun temp85_62 () (_ BitVec 64))
(declare-fun temp85_63 () (_ BitVec 64))
(declare-fun temp85_64 () (_ BitVec 64))
(declare-fun temp85_65 () (_ BitVec 64))
(declare-fun temp85_66 () (_ BitVec 64))
(declare-fun temp85_67 () (_ BitVec 64))
(declare-fun temp85_68 () (_ BitVec 64))
(declare-fun temp85_69 () (_ BitVec 64))
(declare-fun temp85_70 () (_ BitVec 64))
(declare-fun temp85_71 () (_ BitVec 64))
(declare-fun temp85_72 () (_ BitVec 64))
(declare-fun temp85_73 () (_ BitVec 64))
(declare-fun temp85_74 () (_ BitVec 64))
(declare-fun temp85_75 () (_ BitVec 64))
(declare-fun temp85_76 () (_ BitVec 64))
(declare-fun temp85_77 () (_ BitVec 64))
(declare-fun temp85_78 () (_ BitVec 64))
(declare-fun temp85_79 () (_ BitVec 64))
(declare-fun temp85_80 () (_ BitVec 64))
(declare-fun temp85_81 () (_ BitVec 64))
(declare-fun temp85_82 () (_ BitVec 64))
(declare-fun temp85_83 () (_ BitVec 64))
(declare-fun temp85_84 () (_ BitVec 64))
(declare-fun temp85_85 () (_ BitVec 64))
(declare-fun temp85_86 () (_ BitVec 64))
(declare-fun temp85_87 () (_ BitVec 64))
(declare-fun temp85_88 () (_ BitVec 64))
(declare-fun temp85_89 () (_ BitVec 64))
(declare-fun temp85_90 () (_ BitVec 64))
(declare-fun temp85_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp85_92 () (_ BitVec 64))
(declare-fun temp85_93 () (_ BitVec 64))
(declare-fun temp85_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp85_95 () (_ BitVec 64))
(declare-fun temp85_96 () (_ BitVec 64))
(declare-fun temp85_97 () (_ BitVec 64))
(declare-fun temp85_98 () (_ BitVec 64))
(declare-fun temp85_99 () (_ BitVec 64))
(declare-fun temp85_100 () (_ BitVec 64))
(declare-fun temp85_101 () (_ BitVec 64))
(declare-fun temp85_102 () (_ BitVec 64))
(declare-fun temp85_103 () (_ BitVec 64))
(declare-fun temp85_104 () (_ BitVec 64))
(declare-fun temp85_105 () (_ BitVec 64))
(declare-fun temp85_106 () (_ BitVec 64))
(declare-fun temp85_107 () (_ BitVec 64))
(declare-fun temp85_108 () (_ BitVec 64))
(declare-fun temp85_109 () (_ BitVec 64))
(declare-fun temp85_110 () (_ BitVec 64))
(declare-fun temp85_111 () (_ BitVec 64))
(declare-fun temp85_112 () (_ BitVec 64))
(declare-fun temp85_113 () (_ BitVec 64))
(declare-fun temp85_114 () (_ BitVec 64))
(declare-fun temp85_115 () (_ BitVec 64))
(declare-fun temp85_116 () (_ BitVec 64))
(declare-fun temp85_117 () (_ BitVec 64))
(declare-fun temp85_118 () (_ BitVec 64))
(declare-fun temp85_119 () (_ BitVec 64))
(declare-fun temp85_120 () (_ BitVec 64))
(declare-fun temp85_121 () (_ BitVec 64))
(declare-fun temp85_122 () (_ BitVec 64))
(declare-fun temp85_123 () (_ BitVec 64))
(declare-fun temp85_124 () (_ BitVec 64))
(declare-fun temp85_125 () (_ BitVec 64))
(declare-fun temp85_126 () (_ BitVec 64))
(declare-fun temp85_127 () (_ BitVec 64))
(declare-fun temp85_128 () (_ BitVec 64))
(declare-fun temp85_129 () (_ BitVec 64))
(declare-fun temp85_130 () (_ BitVec 64))
(declare-fun temp85_131 () (_ BitVec 64))
(declare-fun temp85_132 () (_ BitVec 64))
(declare-fun temp85_133 () (_ BitVec 64))
(declare-fun temp85_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp85_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp85_136 () (_ BitVec 64))
(declare-fun temp85_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp85_138 () (_ BitVec 64))
(declare-fun temp85_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp85_140 () (_ BitVec 64))
(declare-fun temp85_141 () (_ BitVec 64))
(declare-fun temp85_142 () (_ BitVec 64))
(declare-fun temp85_143 () (_ BitVec 64))
(declare-fun temp85_144 () (_ BitVec 64))
(declare-fun temp85_145 () (_ BitVec 64))
(declare-fun temp85_146 () (_ BitVec 64))
(declare-fun temp85_147 () (_ BitVec 64))
(declare-fun temp85_148 () (_ BitVec 64))
(declare-fun temp85_149 () (_ BitVec 64))
(declare-fun temp85_150 () (_ BitVec 64))
(declare-fun temp85_151 () (_ BitVec 64))
(declare-fun temp85_152 () (_ BitVec 64))
(declare-fun temp85_153 () (_ BitVec 64))
(declare-fun temp85_154 () (_ BitVec 64))
(declare-fun temp85_155 () (_ BitVec 64))
(declare-fun temp85_157 () (_ BitVec 64))
(declare-fun temp85_158 () (_ BitVec 64))
(declare-fun temp85_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp85_159 () (_ BitVec 64))
(declare-fun temp85_160 () (_ BitVec 64))
(declare-fun temp85_162 () (_ BitVec 64))
(declare-fun temp85_163 () (_ BitVec 64))
(declare-fun temp85_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp85_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp85_165 () (_ BitVec 64))
(declare-fun temp85_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp85_167 () (_ BitVec 64))
(declare-fun temp85_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp85_169 () (_ BitVec 64))
(declare-fun temp85_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp85_171 () (_ BitVec 64))
(declare-fun temp85_172 () (_ BitVec 64))
(declare-fun temp85_173 () (_ BitVec 64))
(declare-fun temp85_174 () (_ BitVec 64))
(declare-fun temp85_175 () (_ BitVec 64))
(declare-fun temp85_176 () (_ BitVec 64))
(declare-fun temp85_177 () (_ BitVec 64))
(declare-fun temp85_178 () (_ BitVec 64))
(declare-fun temp85_179 () (_ BitVec 64))
(declare-fun temp85_180 () (_ BitVec 64))
(declare-fun temp85_181 () (_ BitVec 64))
(declare-fun temp85_182 () (_ BitVec 64))
(declare-fun temp85_183 () (_ BitVec 64))
(declare-fun temp85_184 () (_ BitVec 64))
(declare-fun temp85_185 () (_ BitVec 64))
(declare-fun temp85_186 () (_ BitVec 64))
(declare-fun temp85_187 () (_ BitVec 64))
(declare-fun temp85_188 () (_ BitVec 64))
(declare-fun temp85_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp85_190 () (_ BitVec 64))
(declare-fun temp85_192 () (_ BitVec 64))
(declare-fun temp85_193 () (_ BitVec 64))
(declare-fun temp85_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp85_194 () (_ BitVec 64))
(declare-fun temp85_195 () (_ BitVec 64))
(declare-fun temp85_197 () (_ BitVec 64))
(declare-fun temp85_198 () (_ BitVec 64))
(declare-fun temp85_196 () (_ BitVec 64))
(declare-fun temp85_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp85_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp85_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp85_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp85_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp85_204 () (_ BitVec 64))
(declare-fun temp85_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp85_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp85_207 () (_ BitVec 64))
(declare-fun temp85_208 () (_ BitVec 64))
(declare-fun temp85_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp85_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp85_211 () (_ BitVec 64))
(declare-fun temp85_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp85_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp85_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4796816 () (_ BitVec 64))
(declare-fun var211494 () (_ BitVec 64))
(declare-fun temp85_215 () (_ BitVec 64))
(declare-fun var211495 () (_ BitVec 64))
(declare-fun temp85_217 () (_ BitVec 64))
(declare-fun temp85_216 () (_ BitVec 64))
(declare-fun temp85_218 () (_ BitVec 64))
(declare-fun var6753770 () (_ BitVec 64))
(declare-fun temp85_220 () (_ BitVec 64))
(declare-fun temp85_219 () (_ BitVec 64))
(declare-fun temp85_221 () (_ BitVec 64))
(assert (= temp85_1 #x0000000000000001))
(assert (= var77203 temp85_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp85_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp85_2)))
(assert (= temp85_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp85_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp85_4 #x0000000000000000))
(assert (= var210941 temp85_4))
(assert (= temp85_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp85_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp85_6 #x0000000000000000))
(assert (= var210986 temp85_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp85_7 #x0000000000000000))
(assert (= temp85_8 temp85_7))
(assert (= temp85_9 (select ARGNAME_padding_NAMEEND_VAL temp85_8)))
(assert (= temp85_10 #x0000000000000001))
(assert (= temp85_11 temp85_10))
(assert (= temp85_12 (select ARGNAME_padding_NAMEEND_VAL temp85_11)))
(assert (= temp85_13 #x0000000000000002))
(assert (= temp85_14 temp85_13))
(assert (= temp85_15 (select ARGNAME_padding_NAMEEND_VAL temp85_14)))
(assert (= temp85_16 #x0000000000000003))
(assert (= temp85_17 temp85_16))
(assert (= temp85_18 (select ARGNAME_padding_NAMEEND_VAL temp85_17)))
(assert (= temp85_19 #x0000000000000004))
(assert (= temp85_20 temp85_19))
(assert (= temp85_21 (select ARGNAME_padding_NAMEEND_VAL temp85_20)))
(assert (= temp85_22 #x0000000000000005))
(assert (= temp85_23 temp85_22))
(assert (= temp85_24 (select ARGNAME_padding_NAMEEND_VAL temp85_23)))
(assert (= temp85_25 #x0000000000000000))
(assert (= temp85_26 #x0000000000000000))
(assert (= temp85_27 temp85_26))
(assert (= temp85_28 (select ARGNAME_padding_NAMEEND_VAL temp85_27)))
(assert (= temp85_29 #x0000000000000000))
(assert (= temp85_30 #x0000000000000001))
(assert (= temp85_31 temp85_30))
(assert (= temp85_32 (select ARGNAME_padding_NAMEEND_VAL temp85_31)))
(assert (= temp85_33 #x0000000000000000))
(assert (= temp85_34 #x0000000000000002))
(assert (= temp85_35 temp85_34))
(assert (= temp85_36 (select ARGNAME_padding_NAMEEND_VAL temp85_35)))
(assert (= temp85_37 #x0000000000000000))
(assert (= temp85_38 #x0000000000000003))
(assert (= temp85_39 temp85_38))
(assert (= temp85_40 (select ARGNAME_padding_NAMEEND_VAL temp85_39)))
(assert (= temp85_41 #x0000000000000000))
(assert (= temp85_42 #x0000000000000004))
(assert (= temp85_43 temp85_42))
(assert (= temp85_44 (select ARGNAME_padding_NAMEEND_VAL temp85_43)))
(assert (= temp85_45 #x0000000000000000))
(assert (= temp85_46 #x0000000000000005))
(assert (= temp85_47 temp85_46))
(assert (= temp85_48 (select ARGNAME_padding_NAMEEND_VAL temp85_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp85_28 temp85_25)
             (bvslt temp85_32 temp85_29)
             (bvslt temp85_36 temp85_33)
             (bvslt temp85_40 temp85_37)
             (bvslt temp85_44 temp85_41)
             (bvslt temp85_48 temp85_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp85_49 #x0000000000000000))
(assert (= var1191714 temp85_49))
(assert (= temp85_50 #x0000000000000000))
(assert (= temp85_51 temp85_50))
(assert (= temp85_52 (select ARGNAME_output_padding_NAMEEND_VAL temp85_51)))
(assert (= temp85_53 #x0000000000000001))
(assert (= temp85_54 temp85_53))
(assert (= temp85_55 (select ARGNAME_output_padding_NAMEEND_VAL temp85_54)))
(assert (= temp85_56 #x0000000000000002))
(assert (= temp85_57 temp85_56))
(assert (= temp85_58 (select ARGNAME_output_padding_NAMEEND_VAL temp85_57)))
(assert (= temp85_59 #x0000000000000003))
(assert (= temp85_60 temp85_59))
(assert (= temp85_61 (select ARGNAME_output_padding_NAMEEND_VAL temp85_60)))
(assert (= temp85_62 #x0000000000000004))
(assert (= temp85_63 temp85_62))
(assert (= temp85_64 (select ARGNAME_output_padding_NAMEEND_VAL temp85_63)))
(assert (= temp85_65 #x0000000000000005))
(assert (= temp85_66 temp85_65))
(assert (= temp85_67 (select ARGNAME_output_padding_NAMEEND_VAL temp85_66)))
(assert (= temp85_68 #x0000000000000000))
(assert (= temp85_69 #x0000000000000000))
(assert (= temp85_70 temp85_69))
(assert (= temp85_71 (select ARGNAME_output_padding_NAMEEND_VAL temp85_70)))
(assert (= temp85_72 #x0000000000000000))
(assert (= temp85_73 #x0000000000000001))
(assert (= temp85_74 temp85_73))
(assert (= temp85_75 (select ARGNAME_output_padding_NAMEEND_VAL temp85_74)))
(assert (= temp85_76 #x0000000000000000))
(assert (= temp85_77 #x0000000000000002))
(assert (= temp85_78 temp85_77))
(assert (= temp85_79 (select ARGNAME_output_padding_NAMEEND_VAL temp85_78)))
(assert (= temp85_80 #x0000000000000000))
(assert (= temp85_81 #x0000000000000003))
(assert (= temp85_82 temp85_81))
(assert (= temp85_83 (select ARGNAME_output_padding_NAMEEND_VAL temp85_82)))
(assert (= temp85_84 #x0000000000000000))
(assert (= temp85_85 #x0000000000000004))
(assert (= temp85_86 temp85_85))
(assert (= temp85_87 (select ARGNAME_output_padding_NAMEEND_VAL temp85_86)))
(assert (= temp85_88 #x0000000000000000))
(assert (= temp85_89 #x0000000000000005))
(assert (= temp85_90 temp85_89))
(assert (= temp85_91 (select ARGNAME_output_padding_NAMEEND_VAL temp85_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp85_71 temp85_68)
             (bvslt temp85_75 temp85_72)
             (bvslt temp85_79 temp85_76)
             (bvslt temp85_83 temp85_80)
             (bvslt temp85_87 temp85_84)
             (bvslt temp85_91 temp85_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp85_92 #x0000000000000000))
(assert (= var1191725 temp85_92))
(assert (= temp85_93 #x0000000000000000))
(assert (= temp85_94 temp85_93))
(assert (= temp85_95 (select ARGNAME_stride_NAMEEND_VAL temp85_94)))
(assert (= temp85_96 #x0000000000000001))
(assert (= temp85_97 temp85_96))
(assert (= temp85_98 (select ARGNAME_stride_NAMEEND_VAL temp85_97)))
(assert (= temp85_99 #x0000000000000002))
(assert (= temp85_100 temp85_99))
(assert (= temp85_101 (select ARGNAME_stride_NAMEEND_VAL temp85_100)))
(assert (= temp85_102 #x0000000000000003))
(assert (= temp85_103 temp85_102))
(assert (= temp85_104 (select ARGNAME_stride_NAMEEND_VAL temp85_103)))
(assert (= temp85_105 #x0000000000000004))
(assert (= temp85_106 temp85_105))
(assert (= temp85_107 (select ARGNAME_stride_NAMEEND_VAL temp85_106)))
(assert (= temp85_108 #x0000000000000005))
(assert (= temp85_109 temp85_108))
(assert (= temp85_110 (select ARGNAME_stride_NAMEEND_VAL temp85_109)))
(assert (= temp85_111 #x0000000000000000))
(assert (= temp85_112 #x0000000000000000))
(assert (= temp85_113 temp85_112))
(assert (= temp85_114 (select ARGNAME_stride_NAMEEND_VAL temp85_113)))
(assert (= temp85_115 #x0000000000000000))
(assert (= temp85_116 #x0000000000000001))
(assert (= temp85_117 temp85_116))
(assert (= temp85_118 (select ARGNAME_stride_NAMEEND_VAL temp85_117)))
(assert (= temp85_119 #x0000000000000000))
(assert (= temp85_120 #x0000000000000002))
(assert (= temp85_121 temp85_120))
(assert (= temp85_122 (select ARGNAME_stride_NAMEEND_VAL temp85_121)))
(assert (= temp85_123 #x0000000000000000))
(assert (= temp85_124 #x0000000000000003))
(assert (= temp85_125 temp85_124))
(assert (= temp85_126 (select ARGNAME_stride_NAMEEND_VAL temp85_125)))
(assert (= temp85_127 #x0000000000000000))
(assert (= temp85_128 #x0000000000000004))
(assert (= temp85_129 temp85_128))
(assert (= temp85_130 (select ARGNAME_stride_NAMEEND_VAL temp85_129)))
(assert (= temp85_131 #x0000000000000000))
(assert (= temp85_132 #x0000000000000005))
(assert (= temp85_133 temp85_132))
(assert (= temp85_134 (select ARGNAME_stride_NAMEEND_VAL temp85_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp85_114 temp85_111)
             (bvsle temp85_118 temp85_115)
             (bvsle temp85_122 temp85_119)
             (bvsle temp85_126 temp85_123)
             (bvsle temp85_130 temp85_127)
             (bvsle temp85_134 temp85_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp85_135 #x0000000000000000))
(assert (= var1191735 temp85_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp85_136 #x0000000000000001))
(assert (= var1191747 temp85_136))
(assert (= temp85_137 #x0000000000000000))
(assert (= var1179826 temp85_137))
(assert (= temp85_138 #x0000000000000000))
(assert (= temp85_139 temp85_138))
(assert (= temp85_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp85_139)))
(assert (= temp85_141 #x0000000000000001))
(assert (= temp85_142 temp85_141))
(assert (= temp85_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp85_142)))
(assert (= temp85_144 #x0000000000000002))
(assert (= temp85_145 temp85_144))
(assert (= temp85_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp85_145)))
(assert (= temp85_147 #x0000000000000003))
(assert (= temp85_148 temp85_147))
(assert (= temp85_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp85_148)))
(assert (= temp85_150 #x0000000000000004))
(assert (= temp85_151 temp85_150))
(assert (= temp85_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp85_151)))
(assert (= temp85_153 #x0000000000000005))
(assert (= temp85_154 temp85_153))
(assert (= temp85_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp85_154)))
(assert (= temp85_157 var1179826))
(assert (= temp85_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp85_157)))
(assert (= temp85_156 temp85_158))
(assert (= var1191780
   (ite (bvslt temp85_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp85_159 #x0000000000000000))
(assert (= var1191780 temp85_159))
(assert (= temp85_160 #x0000000000000000))
(assert (= var1179826 temp85_160))
(assert (= temp85_162 var1179826))
(assert (= temp85_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp85_162)))
(assert (= temp85_161 temp85_163))
(assert (= var1191802 (bvsmod temp85_161 ARGNAME_groups_NAMEEND)))
(assert (= temp85_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp85_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp85_165 #x0000000000000001))
(assert (= var1191803 temp85_165))
(assert (= temp85_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp85_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp85_167 #x0000000000000001))
(assert (= var1191823 temp85_167))
(assert (= temp85_168 #x0000000000000001))
(assert (= var1180714 temp85_168))
(assert (= temp85_169 #x0000000000000000))
(assert (= temp85_170 temp85_169))
(assert (= temp85_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp85_170)))
(assert (= temp85_172 #x0000000000000001))
(assert (= temp85_173 temp85_172))
(assert (= temp85_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp85_173)))
(assert (= temp85_175 #x0000000000000002))
(assert (= temp85_176 temp85_175))
(assert (= temp85_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp85_176)))
(assert (= temp85_178 #x0000000000000003))
(assert (= temp85_179 temp85_178))
(assert (= temp85_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp85_179)))
(assert (= temp85_181 #x0000000000000004))
(assert (= temp85_182 temp85_181))
(assert (= temp85_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp85_182)))
(assert (= temp85_184 #x0000000000000005))
(assert (= temp85_185 temp85_184))
(assert (= temp85_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp85_185)))
(assert (= temp85_187 #x0000000000000000))
(assert (= temp85_188
   (ite (bvslt var1180714 temp85_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp85_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp85_188)))
(assert (= var1191831 temp85_189))
(assert (bvslt (ite (bvslt var1180714 temp85_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp85_190 #x0000000000000001))
(assert (= var1180714 temp85_190))
(assert (= temp85_192 var1180714))
(assert (= temp85_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp85_192)))
(assert (= temp85_191 temp85_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp85_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp85_194 #x0000000000000001))
(assert (= var1191836 temp85_194))
(assert (= temp85_195 #x0000000000000000))
(assert (= var1179826 temp85_195))
(assert (= temp85_197 var1179826))
(assert (= temp85_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp85_197)))
(assert (= temp85_196 temp85_198))
(assert (= temp85_199 #x0000000000000002))
(assert (= var1586025 temp85_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp85_200 #x0000000000000001))
(assert (= var1191993 temp85_200))
(assert (= temp85_201 #x0000000000000001))
(assert (= var2700303 temp85_201))
(assert (= temp85_202 #x0000000000000001))
(assert (= var2962447 temp85_202))
(assert (= temp85_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp85_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp85_204 #x0000000000000001))
(assert (= var211058 temp85_204))
(assert (= temp85_205 #x0000000000000001))
(assert (= var211188 temp85_205))
(assert (= var3879401 var211188))
(assert (= temp85_206 #x0000000000000000))
(assert (= var3866802 temp85_206))
(assert (= temp85_207 #x0000000000000000))
(assert (= temp85_208
   (ite (bvslt var3866802 temp85_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp85_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp85_208)))
(assert (= var3879420 temp85_209))
(assert (bvslt (ite (bvslt var3866802 temp85_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp85_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp85_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp85_211 #x0000000000000001))
(assert (= var3879421 temp85_211))
(assert (= temp85_212 #x0000000000000000))
(assert (= var4079423 temp85_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp85_213 #x0000000000000002))
(assert (= var4208259 temp85_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp85_214 #x0000000000000000))
(assert (= var4273820 temp85_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4796816 var211201))
(assert (= var211494 var210913))
(assert (= temp85_215 #x0000000000000000))
(assert (= var211495
   (ite (distinct var211494 temp85_215) #x0000000000000001 #x0000000000000000)))
(assert (= temp85_217 #x0000000000000001))
(assert (= temp85_216 temp85_217))
(assert (= temp85_218 #x0000000000000001))
(assert (= var6753770 temp85_218))
(assert (= temp85_220 #xffffffffffffffff))
(assert (= temp85_219 temp85_220))
(assert (= temp85_221 #x0000000000000001))
(assert (= var211058 temp85_221))
(model-add temp85_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp85_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp85_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp85_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




