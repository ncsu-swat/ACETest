(declare-fun temp856_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp856_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp856_3 () (_ BitVec 64))
(declare-fun temp856_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp856_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp856_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp856_7 () (_ BitVec 64))
(declare-fun temp856_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp856_9 () (_ BitVec 64))
(declare-fun temp856_10 () (_ BitVec 64))
(declare-fun temp856_11 () (_ BitVec 64))
(declare-fun temp856_12 () (_ BitVec 64))
(declare-fun temp856_13 () (_ BitVec 64))
(declare-fun temp856_14 () (_ BitVec 64))
(declare-fun temp856_15 () (_ BitVec 64))
(declare-fun temp856_16 () (_ BitVec 64))
(declare-fun temp856_17 () (_ BitVec 64))
(declare-fun temp856_18 () (_ BitVec 64))
(declare-fun temp856_19 () (_ BitVec 64))
(declare-fun temp856_20 () (_ BitVec 64))
(declare-fun temp856_21 () (_ BitVec 64))
(declare-fun temp856_22 () (_ BitVec 64))
(declare-fun temp856_23 () (_ BitVec 64))
(declare-fun temp856_24 () (_ BitVec 64))
(declare-fun temp856_25 () (_ BitVec 64))
(declare-fun temp856_26 () (_ BitVec 64))
(declare-fun temp856_27 () (_ BitVec 64))
(declare-fun temp856_28 () (_ BitVec 64))
(declare-fun temp856_29 () (_ BitVec 64))
(declare-fun temp856_30 () (_ BitVec 64))
(declare-fun temp856_31 () (_ BitVec 64))
(declare-fun temp856_32 () (_ BitVec 64))
(declare-fun temp856_33 () (_ BitVec 64))
(declare-fun temp856_34 () (_ BitVec 64))
(declare-fun temp856_35 () (_ BitVec 64))
(declare-fun temp856_36 () (_ BitVec 64))
(declare-fun temp856_37 () (_ BitVec 64))
(declare-fun temp856_38 () (_ BitVec 64))
(declare-fun temp856_39 () (_ BitVec 64))
(declare-fun temp856_40 () (_ BitVec 64))
(declare-fun temp856_41 () (_ BitVec 64))
(declare-fun temp856_42 () (_ BitVec 64))
(declare-fun temp856_43 () (_ BitVec 64))
(declare-fun temp856_44 () (_ BitVec 64))
(declare-fun temp856_45 () (_ BitVec 64))
(declare-fun temp856_46 () (_ BitVec 64))
(declare-fun temp856_47 () (_ BitVec 64))
(declare-fun temp856_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp856_49 () (_ BitVec 64))
(declare-fun temp856_50 () (_ BitVec 64))
(declare-fun temp856_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp856_52 () (_ BitVec 64))
(declare-fun temp856_53 () (_ BitVec 64))
(declare-fun temp856_54 () (_ BitVec 64))
(declare-fun temp856_55 () (_ BitVec 64))
(declare-fun temp856_56 () (_ BitVec 64))
(declare-fun temp856_57 () (_ BitVec 64))
(declare-fun temp856_58 () (_ BitVec 64))
(declare-fun temp856_59 () (_ BitVec 64))
(declare-fun temp856_60 () (_ BitVec 64))
(declare-fun temp856_61 () (_ BitVec 64))
(declare-fun temp856_62 () (_ BitVec 64))
(declare-fun temp856_63 () (_ BitVec 64))
(declare-fun temp856_64 () (_ BitVec 64))
(declare-fun temp856_65 () (_ BitVec 64))
(declare-fun temp856_66 () (_ BitVec 64))
(declare-fun temp856_67 () (_ BitVec 64))
(declare-fun temp856_68 () (_ BitVec 64))
(declare-fun temp856_69 () (_ BitVec 64))
(declare-fun temp856_70 () (_ BitVec 64))
(declare-fun temp856_71 () (_ BitVec 64))
(declare-fun temp856_72 () (_ BitVec 64))
(declare-fun temp856_73 () (_ BitVec 64))
(declare-fun temp856_74 () (_ BitVec 64))
(declare-fun temp856_75 () (_ BitVec 64))
(declare-fun temp856_76 () (_ BitVec 64))
(declare-fun temp856_77 () (_ BitVec 64))
(declare-fun temp856_78 () (_ BitVec 64))
(declare-fun temp856_79 () (_ BitVec 64))
(declare-fun temp856_80 () (_ BitVec 64))
(declare-fun temp856_81 () (_ BitVec 64))
(declare-fun temp856_82 () (_ BitVec 64))
(declare-fun temp856_83 () (_ BitVec 64))
(declare-fun temp856_84 () (_ BitVec 64))
(declare-fun temp856_85 () (_ BitVec 64))
(declare-fun temp856_86 () (_ BitVec 64))
(declare-fun temp856_87 () (_ BitVec 64))
(declare-fun temp856_88 () (_ BitVec 64))
(declare-fun temp856_89 () (_ BitVec 64))
(declare-fun temp856_90 () (_ BitVec 64))
(declare-fun temp856_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp856_92 () (_ BitVec 64))
(declare-fun temp856_93 () (_ BitVec 64))
(declare-fun temp856_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp856_95 () (_ BitVec 64))
(declare-fun temp856_96 () (_ BitVec 64))
(declare-fun temp856_97 () (_ BitVec 64))
(declare-fun temp856_98 () (_ BitVec 64))
(declare-fun temp856_99 () (_ BitVec 64))
(declare-fun temp856_100 () (_ BitVec 64))
(declare-fun temp856_101 () (_ BitVec 64))
(declare-fun temp856_102 () (_ BitVec 64))
(declare-fun temp856_103 () (_ BitVec 64))
(declare-fun temp856_104 () (_ BitVec 64))
(declare-fun temp856_105 () (_ BitVec 64))
(declare-fun temp856_106 () (_ BitVec 64))
(declare-fun temp856_107 () (_ BitVec 64))
(declare-fun temp856_108 () (_ BitVec 64))
(declare-fun temp856_109 () (_ BitVec 64))
(declare-fun temp856_110 () (_ BitVec 64))
(declare-fun temp856_111 () (_ BitVec 64))
(declare-fun temp856_112 () (_ BitVec 64))
(declare-fun temp856_113 () (_ BitVec 64))
(declare-fun temp856_114 () (_ BitVec 64))
(declare-fun temp856_115 () (_ BitVec 64))
(declare-fun temp856_116 () (_ BitVec 64))
(declare-fun temp856_117 () (_ BitVec 64))
(declare-fun temp856_118 () (_ BitVec 64))
(declare-fun temp856_119 () (_ BitVec 64))
(declare-fun temp856_120 () (_ BitVec 64))
(declare-fun temp856_121 () (_ BitVec 64))
(declare-fun temp856_122 () (_ BitVec 64))
(declare-fun temp856_123 () (_ BitVec 64))
(declare-fun temp856_124 () (_ BitVec 64))
(declare-fun temp856_125 () (_ BitVec 64))
(declare-fun temp856_126 () (_ BitVec 64))
(declare-fun temp856_127 () (_ BitVec 64))
(declare-fun temp856_128 () (_ BitVec 64))
(declare-fun temp856_129 () (_ BitVec 64))
(declare-fun temp856_130 () (_ BitVec 64))
(declare-fun temp856_131 () (_ BitVec 64))
(declare-fun temp856_132 () (_ BitVec 64))
(declare-fun temp856_133 () (_ BitVec 64))
(declare-fun temp856_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp856_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp856_136 () (_ BitVec 64))
(declare-fun temp856_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp856_138 () (_ BitVec 64))
(declare-fun temp856_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp856_140 () (_ BitVec 64))
(declare-fun temp856_141 () (_ BitVec 64))
(declare-fun temp856_142 () (_ BitVec 64))
(declare-fun temp856_143 () (_ BitVec 64))
(declare-fun temp856_144 () (_ BitVec 64))
(declare-fun temp856_145 () (_ BitVec 64))
(declare-fun temp856_146 () (_ BitVec 64))
(declare-fun temp856_147 () (_ BitVec 64))
(declare-fun temp856_148 () (_ BitVec 64))
(declare-fun temp856_149 () (_ BitVec 64))
(declare-fun temp856_150 () (_ BitVec 64))
(declare-fun temp856_151 () (_ BitVec 64))
(declare-fun temp856_152 () (_ BitVec 64))
(declare-fun temp856_153 () (_ BitVec 64))
(declare-fun temp856_154 () (_ BitVec 64))
(declare-fun temp856_155 () (_ BitVec 64))
(declare-fun temp856_157 () (_ BitVec 64))
(declare-fun temp856_158 () (_ BitVec 64))
(declare-fun temp856_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp856_159 () (_ BitVec 64))
(declare-fun temp856_160 () (_ BitVec 64))
(declare-fun temp856_162 () (_ BitVec 64))
(declare-fun temp856_163 () (_ BitVec 64))
(declare-fun temp856_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp856_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp856_165 () (_ BitVec 64))
(declare-fun temp856_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp856_167 () (_ BitVec 64))
(declare-fun temp856_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp856_169 () (_ BitVec 64))
(declare-fun temp856_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp856_171 () (_ BitVec 64))
(declare-fun temp856_172 () (_ BitVec 64))
(declare-fun temp856_173 () (_ BitVec 64))
(declare-fun temp856_174 () (_ BitVec 64))
(declare-fun temp856_175 () (_ BitVec 64))
(declare-fun temp856_176 () (_ BitVec 64))
(declare-fun temp856_177 () (_ BitVec 64))
(declare-fun temp856_178 () (_ BitVec 64))
(declare-fun temp856_179 () (_ BitVec 64))
(declare-fun temp856_180 () (_ BitVec 64))
(declare-fun temp856_181 () (_ BitVec 64))
(declare-fun temp856_182 () (_ BitVec 64))
(declare-fun temp856_183 () (_ BitVec 64))
(declare-fun temp856_184 () (_ BitVec 64))
(declare-fun temp856_185 () (_ BitVec 64))
(declare-fun temp856_186 () (_ BitVec 64))
(declare-fun temp856_187 () (_ BitVec 64))
(declare-fun temp856_188 () (_ BitVec 64))
(declare-fun temp856_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp856_190 () (_ BitVec 64))
(declare-fun temp856_192 () (_ BitVec 64))
(declare-fun temp856_193 () (_ BitVec 64))
(declare-fun temp856_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp856_194 () (_ BitVec 64))
(declare-fun temp856_195 () (_ BitVec 64))
(declare-fun temp856_197 () (_ BitVec 64))
(declare-fun temp856_198 () (_ BitVec 64))
(declare-fun temp856_196 () (_ BitVec 64))
(declare-fun temp856_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp856_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp856_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp856_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp856_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp856_204 () (_ BitVec 64))
(declare-fun temp856_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp856_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp856_207 () (_ BitVec 64))
(declare-fun temp856_208 () (_ BitVec 64))
(declare-fun temp856_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp856_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp856_211 () (_ BitVec 64))
(declare-fun temp856_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp856_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp856_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var5058960 () (_ BitVec 64))
(declare-fun var5321104 () (_ BitVec 64))
(declare-fun temp856_215 () (_ BitVec 64))
(assert (= temp856_1 #x0000000000000001))
(assert (= var77203 temp856_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp856_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp856_2)))
(assert (= temp856_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp856_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp856_4 #x0000000000000000))
(assert (= var210941 temp856_4))
(assert (= temp856_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp856_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp856_6 #x0000000000000000))
(assert (= var210986 temp856_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp856_7 #x0000000000000000))
(assert (= temp856_8 temp856_7))
(assert (= temp856_9 (select ARGNAME_padding_NAMEEND_VAL temp856_8)))
(assert (= temp856_10 #x0000000000000001))
(assert (= temp856_11 temp856_10))
(assert (= temp856_12 (select ARGNAME_padding_NAMEEND_VAL temp856_11)))
(assert (= temp856_13 #x0000000000000002))
(assert (= temp856_14 temp856_13))
(assert (= temp856_15 (select ARGNAME_padding_NAMEEND_VAL temp856_14)))
(assert (= temp856_16 #x0000000000000003))
(assert (= temp856_17 temp856_16))
(assert (= temp856_18 (select ARGNAME_padding_NAMEEND_VAL temp856_17)))
(assert (= temp856_19 #x0000000000000004))
(assert (= temp856_20 temp856_19))
(assert (= temp856_21 (select ARGNAME_padding_NAMEEND_VAL temp856_20)))
(assert (= temp856_22 #x0000000000000005))
(assert (= temp856_23 temp856_22))
(assert (= temp856_24 (select ARGNAME_padding_NAMEEND_VAL temp856_23)))
(assert (= temp856_25 #x0000000000000000))
(assert (= temp856_26 #x0000000000000000))
(assert (= temp856_27 temp856_26))
(assert (= temp856_28 (select ARGNAME_padding_NAMEEND_VAL temp856_27)))
(assert (= temp856_29 #x0000000000000000))
(assert (= temp856_30 #x0000000000000001))
(assert (= temp856_31 temp856_30))
(assert (= temp856_32 (select ARGNAME_padding_NAMEEND_VAL temp856_31)))
(assert (= temp856_33 #x0000000000000000))
(assert (= temp856_34 #x0000000000000002))
(assert (= temp856_35 temp856_34))
(assert (= temp856_36 (select ARGNAME_padding_NAMEEND_VAL temp856_35)))
(assert (= temp856_37 #x0000000000000000))
(assert (= temp856_38 #x0000000000000003))
(assert (= temp856_39 temp856_38))
(assert (= temp856_40 (select ARGNAME_padding_NAMEEND_VAL temp856_39)))
(assert (= temp856_41 #x0000000000000000))
(assert (= temp856_42 #x0000000000000004))
(assert (= temp856_43 temp856_42))
(assert (= temp856_44 (select ARGNAME_padding_NAMEEND_VAL temp856_43)))
(assert (= temp856_45 #x0000000000000000))
(assert (= temp856_46 #x0000000000000005))
(assert (= temp856_47 temp856_46))
(assert (= temp856_48 (select ARGNAME_padding_NAMEEND_VAL temp856_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp856_28 temp856_25)
             (bvslt temp856_32 temp856_29)
             (bvslt temp856_36 temp856_33)
             (bvslt temp856_40 temp856_37)
             (bvslt temp856_44 temp856_41)
             (bvslt temp856_48 temp856_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp856_49 #x0000000000000000))
(assert (= var1191714 temp856_49))
(assert (= temp856_50 #x0000000000000000))
(assert (= temp856_51 temp856_50))
(assert (= temp856_52 (select ARGNAME_output_padding_NAMEEND_VAL temp856_51)))
(assert (= temp856_53 #x0000000000000001))
(assert (= temp856_54 temp856_53))
(assert (= temp856_55 (select ARGNAME_output_padding_NAMEEND_VAL temp856_54)))
(assert (= temp856_56 #x0000000000000002))
(assert (= temp856_57 temp856_56))
(assert (= temp856_58 (select ARGNAME_output_padding_NAMEEND_VAL temp856_57)))
(assert (= temp856_59 #x0000000000000003))
(assert (= temp856_60 temp856_59))
(assert (= temp856_61 (select ARGNAME_output_padding_NAMEEND_VAL temp856_60)))
(assert (= temp856_62 #x0000000000000004))
(assert (= temp856_63 temp856_62))
(assert (= temp856_64 (select ARGNAME_output_padding_NAMEEND_VAL temp856_63)))
(assert (= temp856_65 #x0000000000000005))
(assert (= temp856_66 temp856_65))
(assert (= temp856_67 (select ARGNAME_output_padding_NAMEEND_VAL temp856_66)))
(assert (= temp856_68 #x0000000000000000))
(assert (= temp856_69 #x0000000000000000))
(assert (= temp856_70 temp856_69))
(assert (= temp856_71 (select ARGNAME_output_padding_NAMEEND_VAL temp856_70)))
(assert (= temp856_72 #x0000000000000000))
(assert (= temp856_73 #x0000000000000001))
(assert (= temp856_74 temp856_73))
(assert (= temp856_75 (select ARGNAME_output_padding_NAMEEND_VAL temp856_74)))
(assert (= temp856_76 #x0000000000000000))
(assert (= temp856_77 #x0000000000000002))
(assert (= temp856_78 temp856_77))
(assert (= temp856_79 (select ARGNAME_output_padding_NAMEEND_VAL temp856_78)))
(assert (= temp856_80 #x0000000000000000))
(assert (= temp856_81 #x0000000000000003))
(assert (= temp856_82 temp856_81))
(assert (= temp856_83 (select ARGNAME_output_padding_NAMEEND_VAL temp856_82)))
(assert (= temp856_84 #x0000000000000000))
(assert (= temp856_85 #x0000000000000004))
(assert (= temp856_86 temp856_85))
(assert (= temp856_87 (select ARGNAME_output_padding_NAMEEND_VAL temp856_86)))
(assert (= temp856_88 #x0000000000000000))
(assert (= temp856_89 #x0000000000000005))
(assert (= temp856_90 temp856_89))
(assert (= temp856_91 (select ARGNAME_output_padding_NAMEEND_VAL temp856_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp856_71 temp856_68)
             (bvslt temp856_75 temp856_72)
             (bvslt temp856_79 temp856_76)
             (bvslt temp856_83 temp856_80)
             (bvslt temp856_87 temp856_84)
             (bvslt temp856_91 temp856_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp856_92 #x0000000000000000))
(assert (= var1191725 temp856_92))
(assert (= temp856_93 #x0000000000000000))
(assert (= temp856_94 temp856_93))
(assert (= temp856_95 (select ARGNAME_stride_NAMEEND_VAL temp856_94)))
(assert (= temp856_96 #x0000000000000001))
(assert (= temp856_97 temp856_96))
(assert (= temp856_98 (select ARGNAME_stride_NAMEEND_VAL temp856_97)))
(assert (= temp856_99 #x0000000000000002))
(assert (= temp856_100 temp856_99))
(assert (= temp856_101 (select ARGNAME_stride_NAMEEND_VAL temp856_100)))
(assert (= temp856_102 #x0000000000000003))
(assert (= temp856_103 temp856_102))
(assert (= temp856_104 (select ARGNAME_stride_NAMEEND_VAL temp856_103)))
(assert (= temp856_105 #x0000000000000004))
(assert (= temp856_106 temp856_105))
(assert (= temp856_107 (select ARGNAME_stride_NAMEEND_VAL temp856_106)))
(assert (= temp856_108 #x0000000000000005))
(assert (= temp856_109 temp856_108))
(assert (= temp856_110 (select ARGNAME_stride_NAMEEND_VAL temp856_109)))
(assert (= temp856_111 #x0000000000000000))
(assert (= temp856_112 #x0000000000000000))
(assert (= temp856_113 temp856_112))
(assert (= temp856_114 (select ARGNAME_stride_NAMEEND_VAL temp856_113)))
(assert (= temp856_115 #x0000000000000000))
(assert (= temp856_116 #x0000000000000001))
(assert (= temp856_117 temp856_116))
(assert (= temp856_118 (select ARGNAME_stride_NAMEEND_VAL temp856_117)))
(assert (= temp856_119 #x0000000000000000))
(assert (= temp856_120 #x0000000000000002))
(assert (= temp856_121 temp856_120))
(assert (= temp856_122 (select ARGNAME_stride_NAMEEND_VAL temp856_121)))
(assert (= temp856_123 #x0000000000000000))
(assert (= temp856_124 #x0000000000000003))
(assert (= temp856_125 temp856_124))
(assert (= temp856_126 (select ARGNAME_stride_NAMEEND_VAL temp856_125)))
(assert (= temp856_127 #x0000000000000000))
(assert (= temp856_128 #x0000000000000004))
(assert (= temp856_129 temp856_128))
(assert (= temp856_130 (select ARGNAME_stride_NAMEEND_VAL temp856_129)))
(assert (= temp856_131 #x0000000000000000))
(assert (= temp856_132 #x0000000000000005))
(assert (= temp856_133 temp856_132))
(assert (= temp856_134 (select ARGNAME_stride_NAMEEND_VAL temp856_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp856_114 temp856_111)
             (bvsle temp856_118 temp856_115)
             (bvsle temp856_122 temp856_119)
             (bvsle temp856_126 temp856_123)
             (bvsle temp856_130 temp856_127)
             (bvsle temp856_134 temp856_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp856_135 #x0000000000000000))
(assert (= var1191735 temp856_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp856_136 #x0000000000000001))
(assert (= var1191747 temp856_136))
(assert (= temp856_137 #x0000000000000000))
(assert (= var1179826 temp856_137))
(assert (= temp856_138 #x0000000000000000))
(assert (= temp856_139 temp856_138))
(assert (= temp856_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp856_139)))
(assert (= temp856_141 #x0000000000000001))
(assert (= temp856_142 temp856_141))
(assert (= temp856_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp856_142)))
(assert (= temp856_144 #x0000000000000002))
(assert (= temp856_145 temp856_144))
(assert (= temp856_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp856_145)))
(assert (= temp856_147 #x0000000000000003))
(assert (= temp856_148 temp856_147))
(assert (= temp856_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp856_148)))
(assert (= temp856_150 #x0000000000000004))
(assert (= temp856_151 temp856_150))
(assert (= temp856_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp856_151)))
(assert (= temp856_153 #x0000000000000005))
(assert (= temp856_154 temp856_153))
(assert (= temp856_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp856_154)))
(assert (= temp856_157 var1179826))
(assert (= temp856_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp856_157)))
(assert (= temp856_156 temp856_158))
(assert (= var1191780
   (ite (bvslt temp856_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp856_159 #x0000000000000000))
(assert (= var1191780 temp856_159))
(assert (= temp856_160 #x0000000000000000))
(assert (= var1179826 temp856_160))
(assert (= temp856_162 var1179826))
(assert (= temp856_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp856_162)))
(assert (= temp856_161 temp856_163))
(assert (= var1191802 (bvsmod temp856_161 ARGNAME_groups_NAMEEND)))
(assert (= temp856_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp856_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp856_165 #x0000000000000001))
(assert (= var1191803 temp856_165))
(assert (= temp856_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp856_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp856_167 #x0000000000000001))
(assert (= var1191823 temp856_167))
(assert (= temp856_168 #x0000000000000001))
(assert (= var1180714 temp856_168))
(assert (= temp856_169 #x0000000000000000))
(assert (= temp856_170 temp856_169))
(assert (= temp856_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp856_170)))
(assert (= temp856_172 #x0000000000000001))
(assert (= temp856_173 temp856_172))
(assert (= temp856_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp856_173)))
(assert (= temp856_175 #x0000000000000002))
(assert (= temp856_176 temp856_175))
(assert (= temp856_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp856_176)))
(assert (= temp856_178 #x0000000000000003))
(assert (= temp856_179 temp856_178))
(assert (= temp856_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp856_179)))
(assert (= temp856_181 #x0000000000000004))
(assert (= temp856_182 temp856_181))
(assert (= temp856_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp856_182)))
(assert (= temp856_184 #x0000000000000005))
(assert (= temp856_185 temp856_184))
(assert (= temp856_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp856_185)))
(assert (= temp856_187 #x0000000000000000))
(assert (= temp856_188
   (ite (bvslt var1180714 temp856_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp856_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp856_188)))
(assert (= var1191831 temp856_189))
(assert (bvslt (ite (bvslt var1180714 temp856_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp856_190 #x0000000000000001))
(assert (= var1180714 temp856_190))
(assert (= temp856_192 var1180714))
(assert (= temp856_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp856_192)))
(assert (= temp856_191 temp856_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp856_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp856_194 #x0000000000000001))
(assert (= var1191836 temp856_194))
(assert (= temp856_195 #x0000000000000000))
(assert (= var1179826 temp856_195))
(assert (= temp856_197 var1179826))
(assert (= temp856_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp856_197)))
(assert (= temp856_196 temp856_198))
(assert (= temp856_199 #x0000000000000002))
(assert (= var1586025 temp856_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp856_200 #x0000000000000001))
(assert (= var1191993 temp856_200))
(assert (= temp856_201 #x0000000000000001))
(assert (= var2700303 temp856_201))
(assert (= temp856_202 #x0000000000000001))
(assert (= var2962447 temp856_202))
(assert (= temp856_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp856_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp856_204 #x0000000000000001))
(assert (= var211058 temp856_204))
(assert (= temp856_205 #x0000000000000001))
(assert (= var211188 temp856_205))
(assert (= var3879401 var211188))
(assert (= temp856_206 #x0000000000000000))
(assert (= var3866802 temp856_206))
(assert (= temp856_207 #x0000000000000000))
(assert (= temp856_208
   (ite (bvslt var3866802 temp856_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp856_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp856_208)))
(assert (= var3879420 temp856_209))
(assert (bvslt (ite (bvslt var3866802 temp856_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp856_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp856_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp856_211 #x0000000000000001))
(assert (= var3879421 temp856_211))
(assert (= temp856_212 #x0000000000000000))
(assert (= var4079423 temp856_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp856_213 #x0000000000000002))
(assert (= var4208259 temp856_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp856_214 #x0000000000000000))
(assert (= var4273820 temp856_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var5058960 var211201))
(assert (= var5321104 var211201))
(assert (= temp856_215 #x0000000000000001))
(assert (= var211058 temp856_215))
(model-add temp856_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp856_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp856_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp856_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))



