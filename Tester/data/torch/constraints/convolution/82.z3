(declare-fun temp109_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp109_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp109_3 () (_ BitVec 64))
(declare-fun temp109_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp109_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp109_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp109_7 () (_ BitVec 64))
(declare-fun temp109_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp109_9 () (_ BitVec 64))
(declare-fun temp109_10 () (_ BitVec 64))
(declare-fun temp109_11 () (_ BitVec 64))
(declare-fun temp109_12 () (_ BitVec 64))
(declare-fun temp109_13 () (_ BitVec 64))
(declare-fun temp109_14 () (_ BitVec 64))
(declare-fun temp109_15 () (_ BitVec 64))
(declare-fun temp109_16 () (_ BitVec 64))
(declare-fun temp109_17 () (_ BitVec 64))
(declare-fun temp109_18 () (_ BitVec 64))
(declare-fun temp109_19 () (_ BitVec 64))
(declare-fun temp109_20 () (_ BitVec 64))
(declare-fun temp109_21 () (_ BitVec 64))
(declare-fun temp109_22 () (_ BitVec 64))
(declare-fun temp109_23 () (_ BitVec 64))
(declare-fun temp109_24 () (_ BitVec 64))
(declare-fun temp109_25 () (_ BitVec 64))
(declare-fun temp109_26 () (_ BitVec 64))
(declare-fun temp109_27 () (_ BitVec 64))
(declare-fun temp109_28 () (_ BitVec 64))
(declare-fun temp109_29 () (_ BitVec 64))
(declare-fun temp109_30 () (_ BitVec 64))
(declare-fun temp109_31 () (_ BitVec 64))
(declare-fun temp109_32 () (_ BitVec 64))
(declare-fun temp109_33 () (_ BitVec 64))
(declare-fun temp109_34 () (_ BitVec 64))
(declare-fun temp109_35 () (_ BitVec 64))
(declare-fun temp109_36 () (_ BitVec 64))
(declare-fun temp109_37 () (_ BitVec 64))
(declare-fun temp109_38 () (_ BitVec 64))
(declare-fun temp109_39 () (_ BitVec 64))
(declare-fun temp109_40 () (_ BitVec 64))
(declare-fun temp109_41 () (_ BitVec 64))
(declare-fun temp109_42 () (_ BitVec 64))
(declare-fun temp109_43 () (_ BitVec 64))
(declare-fun temp109_44 () (_ BitVec 64))
(declare-fun temp109_45 () (_ BitVec 64))
(declare-fun temp109_46 () (_ BitVec 64))
(declare-fun temp109_47 () (_ BitVec 64))
(declare-fun temp109_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp109_49 () (_ BitVec 64))
(declare-fun temp109_50 () (_ BitVec 64))
(declare-fun temp109_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp109_52 () (_ BitVec 64))
(declare-fun temp109_53 () (_ BitVec 64))
(declare-fun temp109_54 () (_ BitVec 64))
(declare-fun temp109_55 () (_ BitVec 64))
(declare-fun temp109_56 () (_ BitVec 64))
(declare-fun temp109_57 () (_ BitVec 64))
(declare-fun temp109_58 () (_ BitVec 64))
(declare-fun temp109_59 () (_ BitVec 64))
(declare-fun temp109_60 () (_ BitVec 64))
(declare-fun temp109_61 () (_ BitVec 64))
(declare-fun temp109_62 () (_ BitVec 64))
(declare-fun temp109_63 () (_ BitVec 64))
(declare-fun temp109_64 () (_ BitVec 64))
(declare-fun temp109_65 () (_ BitVec 64))
(declare-fun temp109_66 () (_ BitVec 64))
(declare-fun temp109_67 () (_ BitVec 64))
(declare-fun temp109_68 () (_ BitVec 64))
(declare-fun temp109_69 () (_ BitVec 64))
(declare-fun temp109_70 () (_ BitVec 64))
(declare-fun temp109_71 () (_ BitVec 64))
(declare-fun temp109_72 () (_ BitVec 64))
(declare-fun temp109_73 () (_ BitVec 64))
(declare-fun temp109_74 () (_ BitVec 64))
(declare-fun temp109_75 () (_ BitVec 64))
(declare-fun temp109_76 () (_ BitVec 64))
(declare-fun temp109_77 () (_ BitVec 64))
(declare-fun temp109_78 () (_ BitVec 64))
(declare-fun temp109_79 () (_ BitVec 64))
(declare-fun temp109_80 () (_ BitVec 64))
(declare-fun temp109_81 () (_ BitVec 64))
(declare-fun temp109_82 () (_ BitVec 64))
(declare-fun temp109_83 () (_ BitVec 64))
(declare-fun temp109_84 () (_ BitVec 64))
(declare-fun temp109_85 () (_ BitVec 64))
(declare-fun temp109_86 () (_ BitVec 64))
(declare-fun temp109_87 () (_ BitVec 64))
(declare-fun temp109_88 () (_ BitVec 64))
(declare-fun temp109_89 () (_ BitVec 64))
(declare-fun temp109_90 () (_ BitVec 64))
(declare-fun temp109_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp109_92 () (_ BitVec 64))
(declare-fun temp109_93 () (_ BitVec 64))
(declare-fun temp109_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp109_95 () (_ BitVec 64))
(declare-fun temp109_96 () (_ BitVec 64))
(declare-fun temp109_97 () (_ BitVec 64))
(declare-fun temp109_98 () (_ BitVec 64))
(declare-fun temp109_99 () (_ BitVec 64))
(declare-fun temp109_100 () (_ BitVec 64))
(declare-fun temp109_101 () (_ BitVec 64))
(declare-fun temp109_102 () (_ BitVec 64))
(declare-fun temp109_103 () (_ BitVec 64))
(declare-fun temp109_104 () (_ BitVec 64))
(declare-fun temp109_105 () (_ BitVec 64))
(declare-fun temp109_106 () (_ BitVec 64))
(declare-fun temp109_107 () (_ BitVec 64))
(declare-fun temp109_108 () (_ BitVec 64))
(declare-fun temp109_109 () (_ BitVec 64))
(declare-fun temp109_110 () (_ BitVec 64))
(declare-fun temp109_111 () (_ BitVec 64))
(declare-fun temp109_112 () (_ BitVec 64))
(declare-fun temp109_113 () (_ BitVec 64))
(declare-fun temp109_114 () (_ BitVec 64))
(declare-fun temp109_115 () (_ BitVec 64))
(declare-fun temp109_116 () (_ BitVec 64))
(declare-fun temp109_117 () (_ BitVec 64))
(declare-fun temp109_118 () (_ BitVec 64))
(declare-fun temp109_119 () (_ BitVec 64))
(declare-fun temp109_120 () (_ BitVec 64))
(declare-fun temp109_121 () (_ BitVec 64))
(declare-fun temp109_122 () (_ BitVec 64))
(declare-fun temp109_123 () (_ BitVec 64))
(declare-fun temp109_124 () (_ BitVec 64))
(declare-fun temp109_125 () (_ BitVec 64))
(declare-fun temp109_126 () (_ BitVec 64))
(declare-fun temp109_127 () (_ BitVec 64))
(declare-fun temp109_128 () (_ BitVec 64))
(declare-fun temp109_129 () (_ BitVec 64))
(declare-fun temp109_130 () (_ BitVec 64))
(declare-fun temp109_131 () (_ BitVec 64))
(declare-fun temp109_132 () (_ BitVec 64))
(declare-fun temp109_133 () (_ BitVec 64))
(declare-fun temp109_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp109_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp109_136 () (_ BitVec 64))
(declare-fun temp109_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp109_138 () (_ BitVec 64))
(declare-fun temp109_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp109_140 () (_ BitVec 64))
(declare-fun temp109_141 () (_ BitVec 64))
(declare-fun temp109_142 () (_ BitVec 64))
(declare-fun temp109_143 () (_ BitVec 64))
(declare-fun temp109_144 () (_ BitVec 64))
(declare-fun temp109_145 () (_ BitVec 64))
(declare-fun temp109_146 () (_ BitVec 64))
(declare-fun temp109_147 () (_ BitVec 64))
(declare-fun temp109_148 () (_ BitVec 64))
(declare-fun temp109_149 () (_ BitVec 64))
(declare-fun temp109_150 () (_ BitVec 64))
(declare-fun temp109_151 () (_ BitVec 64))
(declare-fun temp109_152 () (_ BitVec 64))
(declare-fun temp109_153 () (_ BitVec 64))
(declare-fun temp109_154 () (_ BitVec 64))
(declare-fun temp109_155 () (_ BitVec 64))
(declare-fun temp109_157 () (_ BitVec 64))
(declare-fun temp109_158 () (_ BitVec 64))
(declare-fun temp109_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp109_159 () (_ BitVec 64))
(declare-fun temp109_160 () (_ BitVec 64))
(declare-fun temp109_162 () (_ BitVec 64))
(declare-fun temp109_163 () (_ BitVec 64))
(declare-fun temp109_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp109_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp109_165 () (_ BitVec 64))
(declare-fun temp109_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp109_167 () (_ BitVec 64))
(declare-fun temp109_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp109_169 () (_ BitVec 64))
(declare-fun temp109_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp109_171 () (_ BitVec 64))
(declare-fun temp109_172 () (_ BitVec 64))
(declare-fun temp109_173 () (_ BitVec 64))
(declare-fun temp109_174 () (_ BitVec 64))
(declare-fun temp109_175 () (_ BitVec 64))
(declare-fun temp109_176 () (_ BitVec 64))
(declare-fun temp109_177 () (_ BitVec 64))
(declare-fun temp109_178 () (_ BitVec 64))
(declare-fun temp109_179 () (_ BitVec 64))
(declare-fun temp109_180 () (_ BitVec 64))
(declare-fun temp109_181 () (_ BitVec 64))
(declare-fun temp109_182 () (_ BitVec 64))
(declare-fun temp109_183 () (_ BitVec 64))
(declare-fun temp109_184 () (_ BitVec 64))
(declare-fun temp109_185 () (_ BitVec 64))
(declare-fun temp109_186 () (_ BitVec 64))
(declare-fun temp109_187 () (_ BitVec 64))
(declare-fun temp109_188 () (_ BitVec 64))
(declare-fun temp109_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp109_190 () (_ BitVec 64))
(declare-fun temp109_192 () (_ BitVec 64))
(declare-fun temp109_193 () (_ BitVec 64))
(declare-fun temp109_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp109_194 () (_ BitVec 64))
(declare-fun temp109_195 () (_ BitVec 64))
(declare-fun temp109_197 () (_ BitVec 64))
(declare-fun temp109_198 () (_ BitVec 64))
(declare-fun temp109_196 () (_ BitVec 64))
(declare-fun temp109_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp109_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp109_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp109_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp109_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp109_204 () (_ BitVec 64))
(declare-fun temp109_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp109_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp109_207 () (_ BitVec 64))
(declare-fun temp109_208 () (_ BitVec 64))
(declare-fun temp109_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp109_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp109_211 () (_ BitVec 64))
(declare-fun temp109_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp109_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp109_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp109_216 () (_ BitVec 64))
(declare-fun temp109_215 () (_ BitVec 64))
(declare-fun temp109_217 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp109_218 () (_ BitVec 64))
(declare-fun temp109_219 () (_ BitVec 64))
(declare-fun temp109_220 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp109_221 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp109_222 () (_ BitVec 64))
(declare-fun temp109_224 () (_ BitVec 64))
(declare-fun temp109_223 () (_ BitVec 64))
(declare-fun temp109_225 () (_ BitVec 64))
(assert (= temp109_1 #x0000000000000001))
(assert (= var77203 temp109_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp109_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp109_2)))
(assert (= temp109_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp109_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp109_4 #x0000000000000000))
(assert (= var210941 temp109_4))
(assert (= temp109_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp109_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp109_6 #x0000000000000000))
(assert (= var210986 temp109_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp109_7 #x0000000000000000))
(assert (= temp109_8 temp109_7))
(assert (= temp109_9 (select ARGNAME_padding_NAMEEND_VAL temp109_8)))
(assert (= temp109_10 #x0000000000000001))
(assert (= temp109_11 temp109_10))
(assert (= temp109_12 (select ARGNAME_padding_NAMEEND_VAL temp109_11)))
(assert (= temp109_13 #x0000000000000002))
(assert (= temp109_14 temp109_13))
(assert (= temp109_15 (select ARGNAME_padding_NAMEEND_VAL temp109_14)))
(assert (= temp109_16 #x0000000000000003))
(assert (= temp109_17 temp109_16))
(assert (= temp109_18 (select ARGNAME_padding_NAMEEND_VAL temp109_17)))
(assert (= temp109_19 #x0000000000000004))
(assert (= temp109_20 temp109_19))
(assert (= temp109_21 (select ARGNAME_padding_NAMEEND_VAL temp109_20)))
(assert (= temp109_22 #x0000000000000005))
(assert (= temp109_23 temp109_22))
(assert (= temp109_24 (select ARGNAME_padding_NAMEEND_VAL temp109_23)))
(assert (= temp109_25 #x0000000000000000))
(assert (= temp109_26 #x0000000000000000))
(assert (= temp109_27 temp109_26))
(assert (= temp109_28 (select ARGNAME_padding_NAMEEND_VAL temp109_27)))
(assert (= temp109_29 #x0000000000000000))
(assert (= temp109_30 #x0000000000000001))
(assert (= temp109_31 temp109_30))
(assert (= temp109_32 (select ARGNAME_padding_NAMEEND_VAL temp109_31)))
(assert (= temp109_33 #x0000000000000000))
(assert (= temp109_34 #x0000000000000002))
(assert (= temp109_35 temp109_34))
(assert (= temp109_36 (select ARGNAME_padding_NAMEEND_VAL temp109_35)))
(assert (= temp109_37 #x0000000000000000))
(assert (= temp109_38 #x0000000000000003))
(assert (= temp109_39 temp109_38))
(assert (= temp109_40 (select ARGNAME_padding_NAMEEND_VAL temp109_39)))
(assert (= temp109_41 #x0000000000000000))
(assert (= temp109_42 #x0000000000000004))
(assert (= temp109_43 temp109_42))
(assert (= temp109_44 (select ARGNAME_padding_NAMEEND_VAL temp109_43)))
(assert (= temp109_45 #x0000000000000000))
(assert (= temp109_46 #x0000000000000005))
(assert (= temp109_47 temp109_46))
(assert (= temp109_48 (select ARGNAME_padding_NAMEEND_VAL temp109_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp109_28 temp109_25)
             (bvslt temp109_32 temp109_29)
             (bvslt temp109_36 temp109_33)
             (bvslt temp109_40 temp109_37)
             (bvslt temp109_44 temp109_41)
             (bvslt temp109_48 temp109_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp109_49 #x0000000000000000))
(assert (= var1191714 temp109_49))
(assert (= temp109_50 #x0000000000000000))
(assert (= temp109_51 temp109_50))
(assert (= temp109_52 (select ARGNAME_output_padding_NAMEEND_VAL temp109_51)))
(assert (= temp109_53 #x0000000000000001))
(assert (= temp109_54 temp109_53))
(assert (= temp109_55 (select ARGNAME_output_padding_NAMEEND_VAL temp109_54)))
(assert (= temp109_56 #x0000000000000002))
(assert (= temp109_57 temp109_56))
(assert (= temp109_58 (select ARGNAME_output_padding_NAMEEND_VAL temp109_57)))
(assert (= temp109_59 #x0000000000000003))
(assert (= temp109_60 temp109_59))
(assert (= temp109_61 (select ARGNAME_output_padding_NAMEEND_VAL temp109_60)))
(assert (= temp109_62 #x0000000000000004))
(assert (= temp109_63 temp109_62))
(assert (= temp109_64 (select ARGNAME_output_padding_NAMEEND_VAL temp109_63)))
(assert (= temp109_65 #x0000000000000005))
(assert (= temp109_66 temp109_65))
(assert (= temp109_67 (select ARGNAME_output_padding_NAMEEND_VAL temp109_66)))
(assert (= temp109_68 #x0000000000000000))
(assert (= temp109_69 #x0000000000000000))
(assert (= temp109_70 temp109_69))
(assert (= temp109_71 (select ARGNAME_output_padding_NAMEEND_VAL temp109_70)))
(assert (= temp109_72 #x0000000000000000))
(assert (= temp109_73 #x0000000000000001))
(assert (= temp109_74 temp109_73))
(assert (= temp109_75 (select ARGNAME_output_padding_NAMEEND_VAL temp109_74)))
(assert (= temp109_76 #x0000000000000000))
(assert (= temp109_77 #x0000000000000002))
(assert (= temp109_78 temp109_77))
(assert (= temp109_79 (select ARGNAME_output_padding_NAMEEND_VAL temp109_78)))
(assert (= temp109_80 #x0000000000000000))
(assert (= temp109_81 #x0000000000000003))
(assert (= temp109_82 temp109_81))
(assert (= temp109_83 (select ARGNAME_output_padding_NAMEEND_VAL temp109_82)))
(assert (= temp109_84 #x0000000000000000))
(assert (= temp109_85 #x0000000000000004))
(assert (= temp109_86 temp109_85))
(assert (= temp109_87 (select ARGNAME_output_padding_NAMEEND_VAL temp109_86)))
(assert (= temp109_88 #x0000000000000000))
(assert (= temp109_89 #x0000000000000005))
(assert (= temp109_90 temp109_89))
(assert (= temp109_91 (select ARGNAME_output_padding_NAMEEND_VAL temp109_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp109_71 temp109_68)
             (bvslt temp109_75 temp109_72)
             (bvslt temp109_79 temp109_76)
             (bvslt temp109_83 temp109_80)
             (bvslt temp109_87 temp109_84)
             (bvslt temp109_91 temp109_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp109_92 #x0000000000000000))
(assert (= var1191725 temp109_92))
(assert (= temp109_93 #x0000000000000000))
(assert (= temp109_94 temp109_93))
(assert (= temp109_95 (select ARGNAME_stride_NAMEEND_VAL temp109_94)))
(assert (= temp109_96 #x0000000000000001))
(assert (= temp109_97 temp109_96))
(assert (= temp109_98 (select ARGNAME_stride_NAMEEND_VAL temp109_97)))
(assert (= temp109_99 #x0000000000000002))
(assert (= temp109_100 temp109_99))
(assert (= temp109_101 (select ARGNAME_stride_NAMEEND_VAL temp109_100)))
(assert (= temp109_102 #x0000000000000003))
(assert (= temp109_103 temp109_102))
(assert (= temp109_104 (select ARGNAME_stride_NAMEEND_VAL temp109_103)))
(assert (= temp109_105 #x0000000000000004))
(assert (= temp109_106 temp109_105))
(assert (= temp109_107 (select ARGNAME_stride_NAMEEND_VAL temp109_106)))
(assert (= temp109_108 #x0000000000000005))
(assert (= temp109_109 temp109_108))
(assert (= temp109_110 (select ARGNAME_stride_NAMEEND_VAL temp109_109)))
(assert (= temp109_111 #x0000000000000000))
(assert (= temp109_112 #x0000000000000000))
(assert (= temp109_113 temp109_112))
(assert (= temp109_114 (select ARGNAME_stride_NAMEEND_VAL temp109_113)))
(assert (= temp109_115 #x0000000000000000))
(assert (= temp109_116 #x0000000000000001))
(assert (= temp109_117 temp109_116))
(assert (= temp109_118 (select ARGNAME_stride_NAMEEND_VAL temp109_117)))
(assert (= temp109_119 #x0000000000000000))
(assert (= temp109_120 #x0000000000000002))
(assert (= temp109_121 temp109_120))
(assert (= temp109_122 (select ARGNAME_stride_NAMEEND_VAL temp109_121)))
(assert (= temp109_123 #x0000000000000000))
(assert (= temp109_124 #x0000000000000003))
(assert (= temp109_125 temp109_124))
(assert (= temp109_126 (select ARGNAME_stride_NAMEEND_VAL temp109_125)))
(assert (= temp109_127 #x0000000000000000))
(assert (= temp109_128 #x0000000000000004))
(assert (= temp109_129 temp109_128))
(assert (= temp109_130 (select ARGNAME_stride_NAMEEND_VAL temp109_129)))
(assert (= temp109_131 #x0000000000000000))
(assert (= temp109_132 #x0000000000000005))
(assert (= temp109_133 temp109_132))
(assert (= temp109_134 (select ARGNAME_stride_NAMEEND_VAL temp109_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp109_114 temp109_111)
             (bvsle temp109_118 temp109_115)
             (bvsle temp109_122 temp109_119)
             (bvsle temp109_126 temp109_123)
             (bvsle temp109_130 temp109_127)
             (bvsle temp109_134 temp109_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp109_135 #x0000000000000000))
(assert (= var1191735 temp109_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp109_136 #x0000000000000001))
(assert (= var1191747 temp109_136))
(assert (= temp109_137 #x0000000000000000))
(assert (= var1179826 temp109_137))
(assert (= temp109_138 #x0000000000000000))
(assert (= temp109_139 temp109_138))
(assert (= temp109_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp109_139)))
(assert (= temp109_141 #x0000000000000001))
(assert (= temp109_142 temp109_141))
(assert (= temp109_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp109_142)))
(assert (= temp109_144 #x0000000000000002))
(assert (= temp109_145 temp109_144))
(assert (= temp109_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp109_145)))
(assert (= temp109_147 #x0000000000000003))
(assert (= temp109_148 temp109_147))
(assert (= temp109_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp109_148)))
(assert (= temp109_150 #x0000000000000004))
(assert (= temp109_151 temp109_150))
(assert (= temp109_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp109_151)))
(assert (= temp109_153 #x0000000000000005))
(assert (= temp109_154 temp109_153))
(assert (= temp109_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp109_154)))
(assert (= temp109_157 var1179826))
(assert (= temp109_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp109_157)))
(assert (= temp109_156 temp109_158))
(assert (= var1191780
   (ite (bvslt temp109_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp109_159 #x0000000000000000))
(assert (= var1191780 temp109_159))
(assert (= temp109_160 #x0000000000000000))
(assert (= var1179826 temp109_160))
(assert (= temp109_162 var1179826))
(assert (= temp109_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp109_162)))
(assert (= temp109_161 temp109_163))
(assert (= var1191802 (bvsmod temp109_161 ARGNAME_groups_NAMEEND)))
(assert (= temp109_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp109_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp109_165 #x0000000000000001))
(assert (= var1191803 temp109_165))
(assert (= temp109_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp109_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp109_167 #x0000000000000001))
(assert (= var1191823 temp109_167))
(assert (= temp109_168 #x0000000000000001))
(assert (= var1180714 temp109_168))
(assert (= temp109_169 #x0000000000000000))
(assert (= temp109_170 temp109_169))
(assert (= temp109_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp109_170)))
(assert (= temp109_172 #x0000000000000001))
(assert (= temp109_173 temp109_172))
(assert (= temp109_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp109_173)))
(assert (= temp109_175 #x0000000000000002))
(assert (= temp109_176 temp109_175))
(assert (= temp109_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp109_176)))
(assert (= temp109_178 #x0000000000000003))
(assert (= temp109_179 temp109_178))
(assert (= temp109_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp109_179)))
(assert (= temp109_181 #x0000000000000004))
(assert (= temp109_182 temp109_181))
(assert (= temp109_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp109_182)))
(assert (= temp109_184 #x0000000000000005))
(assert (= temp109_185 temp109_184))
(assert (= temp109_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp109_185)))
(assert (= temp109_187 #x0000000000000000))
(assert (= temp109_188
   (ite (bvslt var1180714 temp109_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp109_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp109_188)))
(assert (= var1191831 temp109_189))
(assert (bvslt (ite (bvslt var1180714 temp109_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp109_190 #x0000000000000001))
(assert (= var1180714 temp109_190))
(assert (= temp109_192 var1180714))
(assert (= temp109_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp109_192)))
(assert (= temp109_191 temp109_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp109_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp109_194 #x0000000000000001))
(assert (= var1191836 temp109_194))
(assert (= temp109_195 #x0000000000000000))
(assert (= var1179826 temp109_195))
(assert (= temp109_197 var1179826))
(assert (= temp109_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp109_197)))
(assert (= temp109_196 temp109_198))
(assert (= temp109_199 #x0000000000000002))
(assert (= var1586025 temp109_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp109_200 #x0000000000000001))
(assert (= var1191993 temp109_200))
(assert (= temp109_201 #x0000000000000001))
(assert (= var2700303 temp109_201))
(assert (= temp109_202 #x0000000000000001))
(assert (= var2962447 temp109_202))
(assert (= temp109_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp109_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp109_204 #x0000000000000001))
(assert (= var211058 temp109_204))
(assert (= temp109_205 #x0000000000000001))
(assert (= var211188 temp109_205))
(assert (= var3879401 var211188))
(assert (= temp109_206 #x0000000000000000))
(assert (= var3866802 temp109_206))
(assert (= temp109_207 #x0000000000000000))
(assert (= temp109_208
   (ite (bvslt var3866802 temp109_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp109_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp109_208)))
(assert (= var3879420 temp109_209))
(assert (bvslt (ite (bvslt var3866802 temp109_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp109_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp109_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp109_211 #x0000000000000001))
(assert (= var3879421 temp109_211))
(assert (= temp109_212 #x0000000000000000))
(assert (= var4079423 temp109_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp109_213 #x0000000000000002))
(assert (= var4208259 temp109_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp109_214 #x0000000000000000))
(assert (= var4273820 temp109_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp109_216 #xffffffffffffffff))
(assert (= temp109_215 temp109_216))
(assert (= temp109_217 #x0000000000000001))
(assert (= var197674 temp109_217))
(assert (= temp109_218 #x0000000000000000))
(assert (= temp109_219
   (ite (bvslt var197674 temp109_218)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp109_220 (select ARGNAME_input_NAMEEND_DIMSIZE temp109_219)))
(assert (= var211595 temp109_220))
(assert (bvslt (ite (bvslt var197674 temp109_218)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp109_221 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp109_221) #x0000000000000001 #x0000000000000000)))
(assert (= temp109_222 #x0000000000000001))
(assert (= var211596 temp109_222))
(assert (= temp109_224 #xffffffffffffffff))
(assert (= temp109_223 temp109_224))
(assert (= temp109_225 #x0000000000000001))
(assert (= var211058 temp109_225))
(model-add temp109_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp109_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp109_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp109_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






