(declare-fun temp10006_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10006_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10006_3 () (_ BitVec 64))
(declare-fun temp10006_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10006_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10006_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10006_7 () (_ BitVec 64))
(declare-fun temp10006_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10006_9 () (_ BitVec 64))
(declare-fun temp10006_10 () (_ BitVec 64))
(declare-fun temp10006_11 () (_ BitVec 64))
(declare-fun temp10006_12 () (_ BitVec 64))
(declare-fun temp10006_13 () (_ BitVec 64))
(declare-fun temp10006_14 () (_ BitVec 64))
(declare-fun temp10006_15 () (_ BitVec 64))
(declare-fun temp10006_16 () (_ BitVec 64))
(declare-fun temp10006_17 () (_ BitVec 64))
(declare-fun temp10006_18 () (_ BitVec 64))
(declare-fun temp10006_19 () (_ BitVec 64))
(declare-fun temp10006_20 () (_ BitVec 64))
(declare-fun temp10006_21 () (_ BitVec 64))
(declare-fun temp10006_22 () (_ BitVec 64))
(declare-fun temp10006_23 () (_ BitVec 64))
(declare-fun temp10006_24 () (_ BitVec 64))
(declare-fun temp10006_25 () (_ BitVec 64))
(declare-fun temp10006_26 () (_ BitVec 64))
(declare-fun temp10006_27 () (_ BitVec 64))
(declare-fun temp10006_28 () (_ BitVec 64))
(declare-fun temp10006_29 () (_ BitVec 64))
(declare-fun temp10006_30 () (_ BitVec 64))
(declare-fun temp10006_31 () (_ BitVec 64))
(declare-fun temp10006_32 () (_ BitVec 64))
(declare-fun temp10006_33 () (_ BitVec 64))
(declare-fun temp10006_34 () (_ BitVec 64))
(declare-fun temp10006_35 () (_ BitVec 64))
(declare-fun temp10006_36 () (_ BitVec 64))
(declare-fun temp10006_37 () (_ BitVec 64))
(declare-fun temp10006_38 () (_ BitVec 64))
(declare-fun temp10006_39 () (_ BitVec 64))
(declare-fun temp10006_40 () (_ BitVec 64))
(declare-fun temp10006_41 () (_ BitVec 64))
(declare-fun temp10006_42 () (_ BitVec 64))
(declare-fun temp10006_43 () (_ BitVec 64))
(declare-fun temp10006_44 () (_ BitVec 64))
(declare-fun temp10006_45 () (_ BitVec 64))
(declare-fun temp10006_46 () (_ BitVec 64))
(declare-fun temp10006_47 () (_ BitVec 64))
(declare-fun temp10006_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10006_49 () (_ BitVec 64))
(declare-fun temp10006_50 () (_ BitVec 64))
(declare-fun temp10006_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10006_52 () (_ BitVec 64))
(declare-fun temp10006_53 () (_ BitVec 64))
(declare-fun temp10006_54 () (_ BitVec 64))
(declare-fun temp10006_55 () (_ BitVec 64))
(declare-fun temp10006_56 () (_ BitVec 64))
(declare-fun temp10006_57 () (_ BitVec 64))
(declare-fun temp10006_58 () (_ BitVec 64))
(declare-fun temp10006_59 () (_ BitVec 64))
(declare-fun temp10006_60 () (_ BitVec 64))
(declare-fun temp10006_61 () (_ BitVec 64))
(declare-fun temp10006_62 () (_ BitVec 64))
(declare-fun temp10006_63 () (_ BitVec 64))
(declare-fun temp10006_64 () (_ BitVec 64))
(declare-fun temp10006_65 () (_ BitVec 64))
(declare-fun temp10006_66 () (_ BitVec 64))
(declare-fun temp10006_67 () (_ BitVec 64))
(declare-fun temp10006_68 () (_ BitVec 64))
(declare-fun temp10006_69 () (_ BitVec 64))
(declare-fun temp10006_70 () (_ BitVec 64))
(declare-fun temp10006_71 () (_ BitVec 64))
(declare-fun temp10006_72 () (_ BitVec 64))
(declare-fun temp10006_73 () (_ BitVec 64))
(declare-fun temp10006_74 () (_ BitVec 64))
(declare-fun temp10006_75 () (_ BitVec 64))
(declare-fun temp10006_76 () (_ BitVec 64))
(declare-fun temp10006_77 () (_ BitVec 64))
(declare-fun temp10006_78 () (_ BitVec 64))
(declare-fun temp10006_79 () (_ BitVec 64))
(declare-fun temp10006_80 () (_ BitVec 64))
(declare-fun temp10006_81 () (_ BitVec 64))
(declare-fun temp10006_82 () (_ BitVec 64))
(declare-fun temp10006_83 () (_ BitVec 64))
(declare-fun temp10006_84 () (_ BitVec 64))
(declare-fun temp10006_85 () (_ BitVec 64))
(declare-fun temp10006_86 () (_ BitVec 64))
(declare-fun temp10006_87 () (_ BitVec 64))
(declare-fun temp10006_88 () (_ BitVec 64))
(declare-fun temp10006_89 () (_ BitVec 64))
(declare-fun temp10006_90 () (_ BitVec 64))
(declare-fun temp10006_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10006_92 () (_ BitVec 64))
(declare-fun temp10006_93 () (_ BitVec 64))
(declare-fun temp10006_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10006_95 () (_ BitVec 64))
(declare-fun temp10006_96 () (_ BitVec 64))
(declare-fun temp10006_97 () (_ BitVec 64))
(declare-fun temp10006_98 () (_ BitVec 64))
(declare-fun temp10006_99 () (_ BitVec 64))
(declare-fun temp10006_100 () (_ BitVec 64))
(declare-fun temp10006_101 () (_ BitVec 64))
(declare-fun temp10006_102 () (_ BitVec 64))
(declare-fun temp10006_103 () (_ BitVec 64))
(declare-fun temp10006_104 () (_ BitVec 64))
(declare-fun temp10006_105 () (_ BitVec 64))
(declare-fun temp10006_106 () (_ BitVec 64))
(declare-fun temp10006_107 () (_ BitVec 64))
(declare-fun temp10006_108 () (_ BitVec 64))
(declare-fun temp10006_109 () (_ BitVec 64))
(declare-fun temp10006_110 () (_ BitVec 64))
(declare-fun temp10006_111 () (_ BitVec 64))
(declare-fun temp10006_112 () (_ BitVec 64))
(declare-fun temp10006_113 () (_ BitVec 64))
(declare-fun temp10006_114 () (_ BitVec 64))
(declare-fun temp10006_115 () (_ BitVec 64))
(declare-fun temp10006_116 () (_ BitVec 64))
(declare-fun temp10006_117 () (_ BitVec 64))
(declare-fun temp10006_118 () (_ BitVec 64))
(declare-fun temp10006_119 () (_ BitVec 64))
(declare-fun temp10006_120 () (_ BitVec 64))
(declare-fun temp10006_121 () (_ BitVec 64))
(declare-fun temp10006_122 () (_ BitVec 64))
(declare-fun temp10006_123 () (_ BitVec 64))
(declare-fun temp10006_124 () (_ BitVec 64))
(declare-fun temp10006_125 () (_ BitVec 64))
(declare-fun temp10006_126 () (_ BitVec 64))
(declare-fun temp10006_127 () (_ BitVec 64))
(declare-fun temp10006_128 () (_ BitVec 64))
(declare-fun temp10006_129 () (_ BitVec 64))
(declare-fun temp10006_130 () (_ BitVec 64))
(declare-fun temp10006_131 () (_ BitVec 64))
(declare-fun temp10006_132 () (_ BitVec 64))
(declare-fun temp10006_133 () (_ BitVec 64))
(declare-fun temp10006_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10006_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10006_136 () (_ BitVec 64))
(declare-fun temp10006_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10006_138 () (_ BitVec 64))
(declare-fun temp10006_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10006_140 () (_ BitVec 64))
(declare-fun temp10006_141 () (_ BitVec 64))
(declare-fun temp10006_142 () (_ BitVec 64))
(declare-fun temp10006_143 () (_ BitVec 64))
(declare-fun temp10006_144 () (_ BitVec 64))
(declare-fun temp10006_145 () (_ BitVec 64))
(declare-fun temp10006_146 () (_ BitVec 64))
(declare-fun temp10006_147 () (_ BitVec 64))
(declare-fun temp10006_148 () (_ BitVec 64))
(declare-fun temp10006_149 () (_ BitVec 64))
(declare-fun temp10006_150 () (_ BitVec 64))
(declare-fun temp10006_151 () (_ BitVec 64))
(declare-fun temp10006_152 () (_ BitVec 64))
(declare-fun temp10006_153 () (_ BitVec 64))
(declare-fun temp10006_154 () (_ BitVec 64))
(declare-fun temp10006_155 () (_ BitVec 64))
(declare-fun temp10006_157 () (_ BitVec 64))
(declare-fun temp10006_158 () (_ BitVec 64))
(declare-fun temp10006_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10006_159 () (_ BitVec 64))
(declare-fun temp10006_160 () (_ BitVec 64))
(declare-fun temp10006_162 () (_ BitVec 64))
(declare-fun temp10006_163 () (_ BitVec 64))
(declare-fun temp10006_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10006_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10006_165 () (_ BitVec 64))
(declare-fun temp10006_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10006_167 () (_ BitVec 64))
(declare-fun temp10006_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10006_169 () (_ BitVec 64))
(declare-fun temp10006_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10006_171 () (_ BitVec 64))
(declare-fun temp10006_172 () (_ BitVec 64))
(declare-fun temp10006_173 () (_ BitVec 64))
(declare-fun temp10006_174 () (_ BitVec 64))
(declare-fun temp10006_175 () (_ BitVec 64))
(declare-fun temp10006_176 () (_ BitVec 64))
(declare-fun temp10006_177 () (_ BitVec 64))
(declare-fun temp10006_178 () (_ BitVec 64))
(declare-fun temp10006_179 () (_ BitVec 64))
(declare-fun temp10006_180 () (_ BitVec 64))
(declare-fun temp10006_181 () (_ BitVec 64))
(declare-fun temp10006_182 () (_ BitVec 64))
(declare-fun temp10006_183 () (_ BitVec 64))
(declare-fun temp10006_184 () (_ BitVec 64))
(declare-fun temp10006_185 () (_ BitVec 64))
(declare-fun temp10006_186 () (_ BitVec 64))
(declare-fun temp10006_187 () (_ BitVec 64))
(declare-fun temp10006_188 () (_ BitVec 64))
(declare-fun temp10006_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10006_190 () (_ BitVec 64))
(declare-fun temp10006_192 () (_ BitVec 64))
(declare-fun temp10006_193 () (_ BitVec 64))
(declare-fun temp10006_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10006_194 () (_ BitVec 64))
(declare-fun temp10006_195 () (_ BitVec 64))
(declare-fun temp10006_197 () (_ BitVec 64))
(declare-fun temp10006_198 () (_ BitVec 64))
(declare-fun temp10006_196 () (_ BitVec 64))
(declare-fun temp10006_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10006_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10006_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10006_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10006_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10006_204 () (_ BitVec 64))
(declare-fun temp10006_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10006_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10006_207 () (_ BitVec 64))
(declare-fun temp10006_208 () (_ BitVec 64))
(declare-fun temp10006_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10006_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10006_211 () (_ BitVec 64))
(declare-fun temp10006_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10006_213 () (_ BitVec 64))
(declare-fun temp10006_214 () (_ BitVec 64))
(declare-fun temp10006_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10006_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10006_217 () (_ BitVec 64))
(declare-fun temp10006_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10006_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10006_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4796816 () (_ BitVec 64))
(declare-fun var211494 () (_ BitVec 64))
(declare-fun temp10006_221 () (_ BitVec 64))
(declare-fun var211495 () (_ BitVec 64))
(declare-fun temp10006_222 () (_ BitVec 64))
(assert (= temp10006_1 #x0000000000000001))
(assert (= var77203 temp10006_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10006_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10006_2)))
(assert (= temp10006_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10006_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10006_4 #x0000000000000000))
(assert (= var210941 temp10006_4))
(assert (= temp10006_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10006_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10006_6 #x0000000000000000))
(assert (= var210986 temp10006_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10006_7 #x0000000000000000))
(assert (= temp10006_8 temp10006_7))
(assert (= temp10006_9 (select ARGNAME_padding_NAMEEND_VAL temp10006_8)))
(assert (= temp10006_10 #x0000000000000001))
(assert (= temp10006_11 temp10006_10))
(assert (= temp10006_12 (select ARGNAME_padding_NAMEEND_VAL temp10006_11)))
(assert (= temp10006_13 #x0000000000000002))
(assert (= temp10006_14 temp10006_13))
(assert (= temp10006_15 (select ARGNAME_padding_NAMEEND_VAL temp10006_14)))
(assert (= temp10006_16 #x0000000000000003))
(assert (= temp10006_17 temp10006_16))
(assert (= temp10006_18 (select ARGNAME_padding_NAMEEND_VAL temp10006_17)))
(assert (= temp10006_19 #x0000000000000004))
(assert (= temp10006_20 temp10006_19))
(assert (= temp10006_21 (select ARGNAME_padding_NAMEEND_VAL temp10006_20)))
(assert (= temp10006_22 #x0000000000000005))
(assert (= temp10006_23 temp10006_22))
(assert (= temp10006_24 (select ARGNAME_padding_NAMEEND_VAL temp10006_23)))
(assert (= temp10006_25 #x0000000000000000))
(assert (= temp10006_26 #x0000000000000000))
(assert (= temp10006_27 temp10006_26))
(assert (= temp10006_28 (select ARGNAME_padding_NAMEEND_VAL temp10006_27)))
(assert (= temp10006_29 #x0000000000000000))
(assert (= temp10006_30 #x0000000000000001))
(assert (= temp10006_31 temp10006_30))
(assert (= temp10006_32 (select ARGNAME_padding_NAMEEND_VAL temp10006_31)))
(assert (= temp10006_33 #x0000000000000000))
(assert (= temp10006_34 #x0000000000000002))
(assert (= temp10006_35 temp10006_34))
(assert (= temp10006_36 (select ARGNAME_padding_NAMEEND_VAL temp10006_35)))
(assert (= temp10006_37 #x0000000000000000))
(assert (= temp10006_38 #x0000000000000003))
(assert (= temp10006_39 temp10006_38))
(assert (= temp10006_40 (select ARGNAME_padding_NAMEEND_VAL temp10006_39)))
(assert (= temp10006_41 #x0000000000000000))
(assert (= temp10006_42 #x0000000000000004))
(assert (= temp10006_43 temp10006_42))
(assert (= temp10006_44 (select ARGNAME_padding_NAMEEND_VAL temp10006_43)))
(assert (= temp10006_45 #x0000000000000000))
(assert (= temp10006_46 #x0000000000000005))
(assert (= temp10006_47 temp10006_46))
(assert (= temp10006_48 (select ARGNAME_padding_NAMEEND_VAL temp10006_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10006_28 temp10006_25)
             (bvslt temp10006_32 temp10006_29)
             (bvslt temp10006_36 temp10006_33)
             (bvslt temp10006_40 temp10006_37)
             (bvslt temp10006_44 temp10006_41)
             (bvslt temp10006_48 temp10006_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10006_49 #x0000000000000000))
(assert (= var1191714 temp10006_49))
(assert (= temp10006_50 #x0000000000000000))
(assert (= temp10006_51 temp10006_50))
(assert (= temp10006_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10006_51)))
(assert (= temp10006_53 #x0000000000000001))
(assert (= temp10006_54 temp10006_53))
(assert (= temp10006_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10006_54)))
(assert (= temp10006_56 #x0000000000000002))
(assert (= temp10006_57 temp10006_56))
(assert (= temp10006_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10006_57)))
(assert (= temp10006_59 #x0000000000000003))
(assert (= temp10006_60 temp10006_59))
(assert (= temp10006_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10006_60)))
(assert (= temp10006_62 #x0000000000000004))
(assert (= temp10006_63 temp10006_62))
(assert (= temp10006_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10006_63)))
(assert (= temp10006_65 #x0000000000000005))
(assert (= temp10006_66 temp10006_65))
(assert (= temp10006_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10006_66)))
(assert (= temp10006_68 #x0000000000000000))
(assert (= temp10006_69 #x0000000000000000))
(assert (= temp10006_70 temp10006_69))
(assert (= temp10006_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10006_70)))
(assert (= temp10006_72 #x0000000000000000))
(assert (= temp10006_73 #x0000000000000001))
(assert (= temp10006_74 temp10006_73))
(assert (= temp10006_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10006_74)))
(assert (= temp10006_76 #x0000000000000000))
(assert (= temp10006_77 #x0000000000000002))
(assert (= temp10006_78 temp10006_77))
(assert (= temp10006_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10006_78)))
(assert (= temp10006_80 #x0000000000000000))
(assert (= temp10006_81 #x0000000000000003))
(assert (= temp10006_82 temp10006_81))
(assert (= temp10006_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10006_82)))
(assert (= temp10006_84 #x0000000000000000))
(assert (= temp10006_85 #x0000000000000004))
(assert (= temp10006_86 temp10006_85))
(assert (= temp10006_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10006_86)))
(assert (= temp10006_88 #x0000000000000000))
(assert (= temp10006_89 #x0000000000000005))
(assert (= temp10006_90 temp10006_89))
(assert (= temp10006_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10006_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10006_71 temp10006_68)
             (bvslt temp10006_75 temp10006_72)
             (bvslt temp10006_79 temp10006_76)
             (bvslt temp10006_83 temp10006_80)
             (bvslt temp10006_87 temp10006_84)
             (bvslt temp10006_91 temp10006_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10006_92 #x0000000000000000))
(assert (= var1191725 temp10006_92))
(assert (= temp10006_93 #x0000000000000000))
(assert (= temp10006_94 temp10006_93))
(assert (= temp10006_95 (select ARGNAME_stride_NAMEEND_VAL temp10006_94)))
(assert (= temp10006_96 #x0000000000000001))
(assert (= temp10006_97 temp10006_96))
(assert (= temp10006_98 (select ARGNAME_stride_NAMEEND_VAL temp10006_97)))
(assert (= temp10006_99 #x0000000000000002))
(assert (= temp10006_100 temp10006_99))
(assert (= temp10006_101 (select ARGNAME_stride_NAMEEND_VAL temp10006_100)))
(assert (= temp10006_102 #x0000000000000003))
(assert (= temp10006_103 temp10006_102))
(assert (= temp10006_104 (select ARGNAME_stride_NAMEEND_VAL temp10006_103)))
(assert (= temp10006_105 #x0000000000000004))
(assert (= temp10006_106 temp10006_105))
(assert (= temp10006_107 (select ARGNAME_stride_NAMEEND_VAL temp10006_106)))
(assert (= temp10006_108 #x0000000000000005))
(assert (= temp10006_109 temp10006_108))
(assert (= temp10006_110 (select ARGNAME_stride_NAMEEND_VAL temp10006_109)))
(assert (= temp10006_111 #x0000000000000000))
(assert (= temp10006_112 #x0000000000000000))
(assert (= temp10006_113 temp10006_112))
(assert (= temp10006_114 (select ARGNAME_stride_NAMEEND_VAL temp10006_113)))
(assert (= temp10006_115 #x0000000000000000))
(assert (= temp10006_116 #x0000000000000001))
(assert (= temp10006_117 temp10006_116))
(assert (= temp10006_118 (select ARGNAME_stride_NAMEEND_VAL temp10006_117)))
(assert (= temp10006_119 #x0000000000000000))
(assert (= temp10006_120 #x0000000000000002))
(assert (= temp10006_121 temp10006_120))
(assert (= temp10006_122 (select ARGNAME_stride_NAMEEND_VAL temp10006_121)))
(assert (= temp10006_123 #x0000000000000000))
(assert (= temp10006_124 #x0000000000000003))
(assert (= temp10006_125 temp10006_124))
(assert (= temp10006_126 (select ARGNAME_stride_NAMEEND_VAL temp10006_125)))
(assert (= temp10006_127 #x0000000000000000))
(assert (= temp10006_128 #x0000000000000004))
(assert (= temp10006_129 temp10006_128))
(assert (= temp10006_130 (select ARGNAME_stride_NAMEEND_VAL temp10006_129)))
(assert (= temp10006_131 #x0000000000000000))
(assert (= temp10006_132 #x0000000000000005))
(assert (= temp10006_133 temp10006_132))
(assert (= temp10006_134 (select ARGNAME_stride_NAMEEND_VAL temp10006_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10006_114 temp10006_111)
             (bvsle temp10006_118 temp10006_115)
             (bvsle temp10006_122 temp10006_119)
             (bvsle temp10006_126 temp10006_123)
             (bvsle temp10006_130 temp10006_127)
             (bvsle temp10006_134 temp10006_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10006_135 #x0000000000000000))
(assert (= var1191735 temp10006_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10006_136 #x0000000000000001))
(assert (= var1191747 temp10006_136))
(assert (= temp10006_137 #x0000000000000000))
(assert (= var1179826 temp10006_137))
(assert (= temp10006_138 #x0000000000000000))
(assert (= temp10006_139 temp10006_138))
(assert (= temp10006_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10006_139)))
(assert (= temp10006_141 #x0000000000000001))
(assert (= temp10006_142 temp10006_141))
(assert (= temp10006_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10006_142)))
(assert (= temp10006_144 #x0000000000000002))
(assert (= temp10006_145 temp10006_144))
(assert (= temp10006_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10006_145)))
(assert (= temp10006_147 #x0000000000000003))
(assert (= temp10006_148 temp10006_147))
(assert (= temp10006_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10006_148)))
(assert (= temp10006_150 #x0000000000000004))
(assert (= temp10006_151 temp10006_150))
(assert (= temp10006_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10006_151)))
(assert (= temp10006_153 #x0000000000000005))
(assert (= temp10006_154 temp10006_153))
(assert (= temp10006_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10006_154)))
(assert (= temp10006_157 var1179826))
(assert (= temp10006_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10006_157)))
(assert (= temp10006_156 temp10006_158))
(assert (= var1191780
   (ite (bvslt temp10006_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10006_159 #x0000000000000000))
(assert (= var1191780 temp10006_159))
(assert (= temp10006_160 #x0000000000000000))
(assert (= var1179826 temp10006_160))
(assert (= temp10006_162 var1179826))
(assert (= temp10006_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10006_162)))
(assert (= temp10006_161 temp10006_163))
(assert (= var1191802 (bvsmod temp10006_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10006_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10006_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10006_165 #x0000000000000001))
(assert (= var1191803 temp10006_165))
(assert (= temp10006_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10006_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10006_167 #x0000000000000001))
(assert (= var1191823 temp10006_167))
(assert (= temp10006_168 #x0000000000000001))
(assert (= var1180714 temp10006_168))
(assert (= temp10006_169 #x0000000000000000))
(assert (= temp10006_170 temp10006_169))
(assert (= temp10006_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10006_170)))
(assert (= temp10006_172 #x0000000000000001))
(assert (= temp10006_173 temp10006_172))
(assert (= temp10006_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10006_173)))
(assert (= temp10006_175 #x0000000000000002))
(assert (= temp10006_176 temp10006_175))
(assert (= temp10006_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10006_176)))
(assert (= temp10006_178 #x0000000000000003))
(assert (= temp10006_179 temp10006_178))
(assert (= temp10006_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10006_179)))
(assert (= temp10006_181 #x0000000000000004))
(assert (= temp10006_182 temp10006_181))
(assert (= temp10006_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10006_182)))
(assert (= temp10006_184 #x0000000000000005))
(assert (= temp10006_185 temp10006_184))
(assert (= temp10006_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10006_185)))
(assert (= temp10006_187 #x0000000000000000))
(assert (= temp10006_188
   (ite (bvslt var1180714 temp10006_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10006_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10006_188)))
(assert (= var1191831 temp10006_189))
(assert (bvslt (ite (bvslt var1180714 temp10006_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10006_190 #x0000000000000001))
(assert (= var1180714 temp10006_190))
(assert (= temp10006_192 var1180714))
(assert (= temp10006_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10006_192)))
(assert (= temp10006_191 temp10006_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10006_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10006_194 #x0000000000000001))
(assert (= var1191836 temp10006_194))
(assert (= temp10006_195 #x0000000000000000))
(assert (= var1179826 temp10006_195))
(assert (= temp10006_197 var1179826))
(assert (= temp10006_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10006_197)))
(assert (= temp10006_196 temp10006_198))
(assert (= temp10006_199 #x0000000000000002))
(assert (= var1586025 temp10006_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10006_200 #x0000000000000001))
(assert (= var1191993 temp10006_200))
(assert (= temp10006_201 #x0000000000000001))
(assert (= var2700303 temp10006_201))
(assert (= temp10006_202 #x0000000000000001))
(assert (= var2962447 temp10006_202))
(assert (= temp10006_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10006_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10006_204 #x0000000000000001))
(assert (= var211058 temp10006_204))
(assert (= temp10006_205 #x0000000000000001))
(assert (= var211188 temp10006_205))
(assert (= var3879401 var211188))
(assert (= temp10006_206 #x0000000000000000))
(assert (= var3866802 temp10006_206))
(assert (= temp10006_207 #x0000000000000000))
(assert (= temp10006_208
   (ite (bvslt var3866802 temp10006_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10006_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10006_208)))
(assert (= var3879420 temp10006_209))
(assert (bvslt (ite (bvslt var3866802 temp10006_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10006_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10006_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10006_211 #x0000000000000000))
(assert (= var3879421 temp10006_211))
(assert (= temp10006_212 #x0000000000000001))
(assert (= var3867690 temp10006_212))
(assert (= temp10006_213 #x0000000000000000))
(assert (= temp10006_214
   (ite (bvslt var3867690 temp10006_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10006_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10006_214)))
(assert (= var3879423 temp10006_215))
(assert (bvslt (ite (bvslt var3867690 temp10006_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10006_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10006_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10006_217 #x0000000000000001))
(assert (= var3879424 temp10006_217))
(assert (= temp10006_218 #x0000000000000000))
(assert (= var4079423 temp10006_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10006_219 #x0000000000000002))
(assert (= var4208259 temp10006_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10006_220 #x0000000000000000))
(assert (= var4273820 temp10006_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4796816 var211201))
(assert (= var211494 var210913))
(assert (= temp10006_221 #x0000000000000000))
(assert (= var211495
   (ite (distinct var211494 temp10006_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10006_222 #x0000000000000001))
(assert (= var211058 temp10006_222))
(model-add temp10006_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10006_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10006_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10006_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




