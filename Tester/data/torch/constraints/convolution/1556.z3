(declare-fun temp10869_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10869_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10869_3 () (_ BitVec 64))
(declare-fun temp10869_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10869_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10869_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10869_7 () (_ BitVec 64))
(declare-fun temp10869_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10869_9 () (_ BitVec 64))
(declare-fun temp10869_10 () (_ BitVec 64))
(declare-fun temp10869_11 () (_ BitVec 64))
(declare-fun temp10869_12 () (_ BitVec 64))
(declare-fun temp10869_13 () (_ BitVec 64))
(declare-fun temp10869_14 () (_ BitVec 64))
(declare-fun temp10869_15 () (_ BitVec 64))
(declare-fun temp10869_16 () (_ BitVec 64))
(declare-fun temp10869_17 () (_ BitVec 64))
(declare-fun temp10869_18 () (_ BitVec 64))
(declare-fun temp10869_19 () (_ BitVec 64))
(declare-fun temp10869_20 () (_ BitVec 64))
(declare-fun temp10869_21 () (_ BitVec 64))
(declare-fun temp10869_22 () (_ BitVec 64))
(declare-fun temp10869_23 () (_ BitVec 64))
(declare-fun temp10869_24 () (_ BitVec 64))
(declare-fun temp10869_25 () (_ BitVec 64))
(declare-fun temp10869_26 () (_ BitVec 64))
(declare-fun temp10869_27 () (_ BitVec 64))
(declare-fun temp10869_28 () (_ BitVec 64))
(declare-fun temp10869_29 () (_ BitVec 64))
(declare-fun temp10869_30 () (_ BitVec 64))
(declare-fun temp10869_31 () (_ BitVec 64))
(declare-fun temp10869_32 () (_ BitVec 64))
(declare-fun temp10869_33 () (_ BitVec 64))
(declare-fun temp10869_34 () (_ BitVec 64))
(declare-fun temp10869_35 () (_ BitVec 64))
(declare-fun temp10869_36 () (_ BitVec 64))
(declare-fun temp10869_37 () (_ BitVec 64))
(declare-fun temp10869_38 () (_ BitVec 64))
(declare-fun temp10869_39 () (_ BitVec 64))
(declare-fun temp10869_40 () (_ BitVec 64))
(declare-fun temp10869_41 () (_ BitVec 64))
(declare-fun temp10869_42 () (_ BitVec 64))
(declare-fun temp10869_43 () (_ BitVec 64))
(declare-fun temp10869_44 () (_ BitVec 64))
(declare-fun temp10869_45 () (_ BitVec 64))
(declare-fun temp10869_46 () (_ BitVec 64))
(declare-fun temp10869_47 () (_ BitVec 64))
(declare-fun temp10869_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10869_49 () (_ BitVec 64))
(declare-fun temp10869_50 () (_ BitVec 64))
(declare-fun temp10869_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10869_52 () (_ BitVec 64))
(declare-fun temp10869_53 () (_ BitVec 64))
(declare-fun temp10869_54 () (_ BitVec 64))
(declare-fun temp10869_55 () (_ BitVec 64))
(declare-fun temp10869_56 () (_ BitVec 64))
(declare-fun temp10869_57 () (_ BitVec 64))
(declare-fun temp10869_58 () (_ BitVec 64))
(declare-fun temp10869_59 () (_ BitVec 64))
(declare-fun temp10869_60 () (_ BitVec 64))
(declare-fun temp10869_61 () (_ BitVec 64))
(declare-fun temp10869_62 () (_ BitVec 64))
(declare-fun temp10869_63 () (_ BitVec 64))
(declare-fun temp10869_64 () (_ BitVec 64))
(declare-fun temp10869_65 () (_ BitVec 64))
(declare-fun temp10869_66 () (_ BitVec 64))
(declare-fun temp10869_67 () (_ BitVec 64))
(declare-fun temp10869_68 () (_ BitVec 64))
(declare-fun temp10869_69 () (_ BitVec 64))
(declare-fun temp10869_70 () (_ BitVec 64))
(declare-fun temp10869_71 () (_ BitVec 64))
(declare-fun temp10869_72 () (_ BitVec 64))
(declare-fun temp10869_73 () (_ BitVec 64))
(declare-fun temp10869_74 () (_ BitVec 64))
(declare-fun temp10869_75 () (_ BitVec 64))
(declare-fun temp10869_76 () (_ BitVec 64))
(declare-fun temp10869_77 () (_ BitVec 64))
(declare-fun temp10869_78 () (_ BitVec 64))
(declare-fun temp10869_79 () (_ BitVec 64))
(declare-fun temp10869_80 () (_ BitVec 64))
(declare-fun temp10869_81 () (_ BitVec 64))
(declare-fun temp10869_82 () (_ BitVec 64))
(declare-fun temp10869_83 () (_ BitVec 64))
(declare-fun temp10869_84 () (_ BitVec 64))
(declare-fun temp10869_85 () (_ BitVec 64))
(declare-fun temp10869_86 () (_ BitVec 64))
(declare-fun temp10869_87 () (_ BitVec 64))
(declare-fun temp10869_88 () (_ BitVec 64))
(declare-fun temp10869_89 () (_ BitVec 64))
(declare-fun temp10869_90 () (_ BitVec 64))
(declare-fun temp10869_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10869_92 () (_ BitVec 64))
(declare-fun temp10869_93 () (_ BitVec 64))
(declare-fun temp10869_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10869_95 () (_ BitVec 64))
(declare-fun temp10869_96 () (_ BitVec 64))
(declare-fun temp10869_97 () (_ BitVec 64))
(declare-fun temp10869_98 () (_ BitVec 64))
(declare-fun temp10869_99 () (_ BitVec 64))
(declare-fun temp10869_100 () (_ BitVec 64))
(declare-fun temp10869_101 () (_ BitVec 64))
(declare-fun temp10869_102 () (_ BitVec 64))
(declare-fun temp10869_103 () (_ BitVec 64))
(declare-fun temp10869_104 () (_ BitVec 64))
(declare-fun temp10869_105 () (_ BitVec 64))
(declare-fun temp10869_106 () (_ BitVec 64))
(declare-fun temp10869_107 () (_ BitVec 64))
(declare-fun temp10869_108 () (_ BitVec 64))
(declare-fun temp10869_109 () (_ BitVec 64))
(declare-fun temp10869_110 () (_ BitVec 64))
(declare-fun temp10869_111 () (_ BitVec 64))
(declare-fun temp10869_112 () (_ BitVec 64))
(declare-fun temp10869_113 () (_ BitVec 64))
(declare-fun temp10869_114 () (_ BitVec 64))
(declare-fun temp10869_115 () (_ BitVec 64))
(declare-fun temp10869_116 () (_ BitVec 64))
(declare-fun temp10869_117 () (_ BitVec 64))
(declare-fun temp10869_118 () (_ BitVec 64))
(declare-fun temp10869_119 () (_ BitVec 64))
(declare-fun temp10869_120 () (_ BitVec 64))
(declare-fun temp10869_121 () (_ BitVec 64))
(declare-fun temp10869_122 () (_ BitVec 64))
(declare-fun temp10869_123 () (_ BitVec 64))
(declare-fun temp10869_124 () (_ BitVec 64))
(declare-fun temp10869_125 () (_ BitVec 64))
(declare-fun temp10869_126 () (_ BitVec 64))
(declare-fun temp10869_127 () (_ BitVec 64))
(declare-fun temp10869_128 () (_ BitVec 64))
(declare-fun temp10869_129 () (_ BitVec 64))
(declare-fun temp10869_130 () (_ BitVec 64))
(declare-fun temp10869_131 () (_ BitVec 64))
(declare-fun temp10869_132 () (_ BitVec 64))
(declare-fun temp10869_133 () (_ BitVec 64))
(declare-fun temp10869_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10869_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10869_136 () (_ BitVec 64))
(declare-fun temp10869_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10869_138 () (_ BitVec 64))
(declare-fun temp10869_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10869_140 () (_ BitVec 64))
(declare-fun temp10869_141 () (_ BitVec 64))
(declare-fun temp10869_142 () (_ BitVec 64))
(declare-fun temp10869_143 () (_ BitVec 64))
(declare-fun temp10869_144 () (_ BitVec 64))
(declare-fun temp10869_145 () (_ BitVec 64))
(declare-fun temp10869_146 () (_ BitVec 64))
(declare-fun temp10869_147 () (_ BitVec 64))
(declare-fun temp10869_148 () (_ BitVec 64))
(declare-fun temp10869_149 () (_ BitVec 64))
(declare-fun temp10869_150 () (_ BitVec 64))
(declare-fun temp10869_151 () (_ BitVec 64))
(declare-fun temp10869_152 () (_ BitVec 64))
(declare-fun temp10869_153 () (_ BitVec 64))
(declare-fun temp10869_154 () (_ BitVec 64))
(declare-fun temp10869_155 () (_ BitVec 64))
(declare-fun temp10869_157 () (_ BitVec 64))
(declare-fun temp10869_158 () (_ BitVec 64))
(declare-fun temp10869_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10869_159 () (_ BitVec 64))
(declare-fun temp10869_160 () (_ BitVec 64))
(declare-fun temp10869_162 () (_ BitVec 64))
(declare-fun temp10869_163 () (_ BitVec 64))
(declare-fun temp10869_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10869_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10869_165 () (_ BitVec 64))
(declare-fun temp10869_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10869_167 () (_ BitVec 64))
(declare-fun temp10869_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10869_169 () (_ BitVec 64))
(declare-fun temp10869_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10869_171 () (_ BitVec 64))
(declare-fun temp10869_172 () (_ BitVec 64))
(declare-fun temp10869_173 () (_ BitVec 64))
(declare-fun temp10869_174 () (_ BitVec 64))
(declare-fun temp10869_175 () (_ BitVec 64))
(declare-fun temp10869_176 () (_ BitVec 64))
(declare-fun temp10869_177 () (_ BitVec 64))
(declare-fun temp10869_178 () (_ BitVec 64))
(declare-fun temp10869_179 () (_ BitVec 64))
(declare-fun temp10869_180 () (_ BitVec 64))
(declare-fun temp10869_181 () (_ BitVec 64))
(declare-fun temp10869_182 () (_ BitVec 64))
(declare-fun temp10869_183 () (_ BitVec 64))
(declare-fun temp10869_184 () (_ BitVec 64))
(declare-fun temp10869_185 () (_ BitVec 64))
(declare-fun temp10869_186 () (_ BitVec 64))
(declare-fun temp10869_187 () (_ BitVec 64))
(declare-fun temp10869_188 () (_ BitVec 64))
(declare-fun temp10869_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10869_190 () (_ BitVec 64))
(declare-fun temp10869_192 () (_ BitVec 64))
(declare-fun temp10869_193 () (_ BitVec 64))
(declare-fun temp10869_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10869_194 () (_ BitVec 64))
(declare-fun temp10869_195 () (_ BitVec 64))
(declare-fun temp10869_197 () (_ BitVec 64))
(declare-fun temp10869_198 () (_ BitVec 64))
(declare-fun temp10869_196 () (_ BitVec 64))
(declare-fun temp10869_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10869_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10869_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10869_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10869_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10869_204 () (_ BitVec 64))
(declare-fun temp10869_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10869_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10869_207 () (_ BitVec 64))
(declare-fun temp10869_208 () (_ BitVec 64))
(declare-fun temp10869_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10869_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10869_211 () (_ BitVec 64))
(declare-fun temp10869_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10869_213 () (_ BitVec 64))
(declare-fun temp10869_214 () (_ BitVec 64))
(declare-fun temp10869_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10869_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10869_217 () (_ BitVec 64))
(declare-fun temp10869_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10869_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10869_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp10869_221 () (_ BitVec 64))
(assert (= temp10869_1 #x0000000000000001))
(assert (= var77203 temp10869_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10869_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10869_2)))
(assert (= temp10869_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10869_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10869_4 #x0000000000000000))
(assert (= var210941 temp10869_4))
(assert (= temp10869_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10869_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10869_6 #x0000000000000000))
(assert (= var210986 temp10869_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10869_7 #x0000000000000000))
(assert (= temp10869_8 temp10869_7))
(assert (= temp10869_9 (select ARGNAME_padding_NAMEEND_VAL temp10869_8)))
(assert (= temp10869_10 #x0000000000000001))
(assert (= temp10869_11 temp10869_10))
(assert (= temp10869_12 (select ARGNAME_padding_NAMEEND_VAL temp10869_11)))
(assert (= temp10869_13 #x0000000000000002))
(assert (= temp10869_14 temp10869_13))
(assert (= temp10869_15 (select ARGNAME_padding_NAMEEND_VAL temp10869_14)))
(assert (= temp10869_16 #x0000000000000003))
(assert (= temp10869_17 temp10869_16))
(assert (= temp10869_18 (select ARGNAME_padding_NAMEEND_VAL temp10869_17)))
(assert (= temp10869_19 #x0000000000000004))
(assert (= temp10869_20 temp10869_19))
(assert (= temp10869_21 (select ARGNAME_padding_NAMEEND_VAL temp10869_20)))
(assert (= temp10869_22 #x0000000000000005))
(assert (= temp10869_23 temp10869_22))
(assert (= temp10869_24 (select ARGNAME_padding_NAMEEND_VAL temp10869_23)))
(assert (= temp10869_25 #x0000000000000000))
(assert (= temp10869_26 #x0000000000000000))
(assert (= temp10869_27 temp10869_26))
(assert (= temp10869_28 (select ARGNAME_padding_NAMEEND_VAL temp10869_27)))
(assert (= temp10869_29 #x0000000000000000))
(assert (= temp10869_30 #x0000000000000001))
(assert (= temp10869_31 temp10869_30))
(assert (= temp10869_32 (select ARGNAME_padding_NAMEEND_VAL temp10869_31)))
(assert (= temp10869_33 #x0000000000000000))
(assert (= temp10869_34 #x0000000000000002))
(assert (= temp10869_35 temp10869_34))
(assert (= temp10869_36 (select ARGNAME_padding_NAMEEND_VAL temp10869_35)))
(assert (= temp10869_37 #x0000000000000000))
(assert (= temp10869_38 #x0000000000000003))
(assert (= temp10869_39 temp10869_38))
(assert (= temp10869_40 (select ARGNAME_padding_NAMEEND_VAL temp10869_39)))
(assert (= temp10869_41 #x0000000000000000))
(assert (= temp10869_42 #x0000000000000004))
(assert (= temp10869_43 temp10869_42))
(assert (= temp10869_44 (select ARGNAME_padding_NAMEEND_VAL temp10869_43)))
(assert (= temp10869_45 #x0000000000000000))
(assert (= temp10869_46 #x0000000000000005))
(assert (= temp10869_47 temp10869_46))
(assert (= temp10869_48 (select ARGNAME_padding_NAMEEND_VAL temp10869_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10869_28 temp10869_25)
             (bvslt temp10869_32 temp10869_29)
             (bvslt temp10869_36 temp10869_33)
             (bvslt temp10869_40 temp10869_37)
             (bvslt temp10869_44 temp10869_41)
             (bvslt temp10869_48 temp10869_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10869_49 #x0000000000000000))
(assert (= var1191714 temp10869_49))
(assert (= temp10869_50 #x0000000000000000))
(assert (= temp10869_51 temp10869_50))
(assert (= temp10869_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10869_51)))
(assert (= temp10869_53 #x0000000000000001))
(assert (= temp10869_54 temp10869_53))
(assert (= temp10869_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10869_54)))
(assert (= temp10869_56 #x0000000000000002))
(assert (= temp10869_57 temp10869_56))
(assert (= temp10869_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10869_57)))
(assert (= temp10869_59 #x0000000000000003))
(assert (= temp10869_60 temp10869_59))
(assert (= temp10869_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10869_60)))
(assert (= temp10869_62 #x0000000000000004))
(assert (= temp10869_63 temp10869_62))
(assert (= temp10869_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10869_63)))
(assert (= temp10869_65 #x0000000000000005))
(assert (= temp10869_66 temp10869_65))
(assert (= temp10869_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10869_66)))
(assert (= temp10869_68 #x0000000000000000))
(assert (= temp10869_69 #x0000000000000000))
(assert (= temp10869_70 temp10869_69))
(assert (= temp10869_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10869_70)))
(assert (= temp10869_72 #x0000000000000000))
(assert (= temp10869_73 #x0000000000000001))
(assert (= temp10869_74 temp10869_73))
(assert (= temp10869_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10869_74)))
(assert (= temp10869_76 #x0000000000000000))
(assert (= temp10869_77 #x0000000000000002))
(assert (= temp10869_78 temp10869_77))
(assert (= temp10869_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10869_78)))
(assert (= temp10869_80 #x0000000000000000))
(assert (= temp10869_81 #x0000000000000003))
(assert (= temp10869_82 temp10869_81))
(assert (= temp10869_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10869_82)))
(assert (= temp10869_84 #x0000000000000000))
(assert (= temp10869_85 #x0000000000000004))
(assert (= temp10869_86 temp10869_85))
(assert (= temp10869_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10869_86)))
(assert (= temp10869_88 #x0000000000000000))
(assert (= temp10869_89 #x0000000000000005))
(assert (= temp10869_90 temp10869_89))
(assert (= temp10869_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10869_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10869_71 temp10869_68)
             (bvslt temp10869_75 temp10869_72)
             (bvslt temp10869_79 temp10869_76)
             (bvslt temp10869_83 temp10869_80)
             (bvslt temp10869_87 temp10869_84)
             (bvslt temp10869_91 temp10869_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10869_92 #x0000000000000000))
(assert (= var1191725 temp10869_92))
(assert (= temp10869_93 #x0000000000000000))
(assert (= temp10869_94 temp10869_93))
(assert (= temp10869_95 (select ARGNAME_stride_NAMEEND_VAL temp10869_94)))
(assert (= temp10869_96 #x0000000000000001))
(assert (= temp10869_97 temp10869_96))
(assert (= temp10869_98 (select ARGNAME_stride_NAMEEND_VAL temp10869_97)))
(assert (= temp10869_99 #x0000000000000002))
(assert (= temp10869_100 temp10869_99))
(assert (= temp10869_101 (select ARGNAME_stride_NAMEEND_VAL temp10869_100)))
(assert (= temp10869_102 #x0000000000000003))
(assert (= temp10869_103 temp10869_102))
(assert (= temp10869_104 (select ARGNAME_stride_NAMEEND_VAL temp10869_103)))
(assert (= temp10869_105 #x0000000000000004))
(assert (= temp10869_106 temp10869_105))
(assert (= temp10869_107 (select ARGNAME_stride_NAMEEND_VAL temp10869_106)))
(assert (= temp10869_108 #x0000000000000005))
(assert (= temp10869_109 temp10869_108))
(assert (= temp10869_110 (select ARGNAME_stride_NAMEEND_VAL temp10869_109)))
(assert (= temp10869_111 #x0000000000000000))
(assert (= temp10869_112 #x0000000000000000))
(assert (= temp10869_113 temp10869_112))
(assert (= temp10869_114 (select ARGNAME_stride_NAMEEND_VAL temp10869_113)))
(assert (= temp10869_115 #x0000000000000000))
(assert (= temp10869_116 #x0000000000000001))
(assert (= temp10869_117 temp10869_116))
(assert (= temp10869_118 (select ARGNAME_stride_NAMEEND_VAL temp10869_117)))
(assert (= temp10869_119 #x0000000000000000))
(assert (= temp10869_120 #x0000000000000002))
(assert (= temp10869_121 temp10869_120))
(assert (= temp10869_122 (select ARGNAME_stride_NAMEEND_VAL temp10869_121)))
(assert (= temp10869_123 #x0000000000000000))
(assert (= temp10869_124 #x0000000000000003))
(assert (= temp10869_125 temp10869_124))
(assert (= temp10869_126 (select ARGNAME_stride_NAMEEND_VAL temp10869_125)))
(assert (= temp10869_127 #x0000000000000000))
(assert (= temp10869_128 #x0000000000000004))
(assert (= temp10869_129 temp10869_128))
(assert (= temp10869_130 (select ARGNAME_stride_NAMEEND_VAL temp10869_129)))
(assert (= temp10869_131 #x0000000000000000))
(assert (= temp10869_132 #x0000000000000005))
(assert (= temp10869_133 temp10869_132))
(assert (= temp10869_134 (select ARGNAME_stride_NAMEEND_VAL temp10869_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10869_114 temp10869_111)
             (bvsle temp10869_118 temp10869_115)
             (bvsle temp10869_122 temp10869_119)
             (bvsle temp10869_126 temp10869_123)
             (bvsle temp10869_130 temp10869_127)
             (bvsle temp10869_134 temp10869_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10869_135 #x0000000000000000))
(assert (= var1191735 temp10869_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10869_136 #x0000000000000001))
(assert (= var1191747 temp10869_136))
(assert (= temp10869_137 #x0000000000000000))
(assert (= var1179826 temp10869_137))
(assert (= temp10869_138 #x0000000000000000))
(assert (= temp10869_139 temp10869_138))
(assert (= temp10869_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10869_139)))
(assert (= temp10869_141 #x0000000000000001))
(assert (= temp10869_142 temp10869_141))
(assert (= temp10869_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10869_142)))
(assert (= temp10869_144 #x0000000000000002))
(assert (= temp10869_145 temp10869_144))
(assert (= temp10869_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10869_145)))
(assert (= temp10869_147 #x0000000000000003))
(assert (= temp10869_148 temp10869_147))
(assert (= temp10869_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10869_148)))
(assert (= temp10869_150 #x0000000000000004))
(assert (= temp10869_151 temp10869_150))
(assert (= temp10869_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10869_151)))
(assert (= temp10869_153 #x0000000000000005))
(assert (= temp10869_154 temp10869_153))
(assert (= temp10869_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10869_154)))
(assert (= temp10869_157 var1179826))
(assert (= temp10869_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10869_157)))
(assert (= temp10869_156 temp10869_158))
(assert (= var1191780
   (ite (bvslt temp10869_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10869_159 #x0000000000000000))
(assert (= var1191780 temp10869_159))
(assert (= temp10869_160 #x0000000000000000))
(assert (= var1179826 temp10869_160))
(assert (= temp10869_162 var1179826))
(assert (= temp10869_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10869_162)))
(assert (= temp10869_161 temp10869_163))
(assert (= var1191802 (bvsmod temp10869_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10869_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10869_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10869_165 #x0000000000000001))
(assert (= var1191803 temp10869_165))
(assert (= temp10869_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10869_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10869_167 #x0000000000000001))
(assert (= var1191823 temp10869_167))
(assert (= temp10869_168 #x0000000000000001))
(assert (= var1180714 temp10869_168))
(assert (= temp10869_169 #x0000000000000000))
(assert (= temp10869_170 temp10869_169))
(assert (= temp10869_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10869_170)))
(assert (= temp10869_172 #x0000000000000001))
(assert (= temp10869_173 temp10869_172))
(assert (= temp10869_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10869_173)))
(assert (= temp10869_175 #x0000000000000002))
(assert (= temp10869_176 temp10869_175))
(assert (= temp10869_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10869_176)))
(assert (= temp10869_178 #x0000000000000003))
(assert (= temp10869_179 temp10869_178))
(assert (= temp10869_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10869_179)))
(assert (= temp10869_181 #x0000000000000004))
(assert (= temp10869_182 temp10869_181))
(assert (= temp10869_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10869_182)))
(assert (= temp10869_184 #x0000000000000005))
(assert (= temp10869_185 temp10869_184))
(assert (= temp10869_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10869_185)))
(assert (= temp10869_187 #x0000000000000000))
(assert (= temp10869_188
   (ite (bvslt var1180714 temp10869_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10869_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10869_188)))
(assert (= var1191831 temp10869_189))
(assert (bvslt (ite (bvslt var1180714 temp10869_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10869_190 #x0000000000000001))
(assert (= var1180714 temp10869_190))
(assert (= temp10869_192 var1180714))
(assert (= temp10869_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10869_192)))
(assert (= temp10869_191 temp10869_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10869_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10869_194 #x0000000000000001))
(assert (= var1191836 temp10869_194))
(assert (= temp10869_195 #x0000000000000000))
(assert (= var1179826 temp10869_195))
(assert (= temp10869_197 var1179826))
(assert (= temp10869_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10869_197)))
(assert (= temp10869_196 temp10869_198))
(assert (= temp10869_199 #x0000000000000002))
(assert (= var1586025 temp10869_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10869_200 #x0000000000000001))
(assert (= var1191993 temp10869_200))
(assert (= temp10869_201 #x0000000000000001))
(assert (= var2700303 temp10869_201))
(assert (= temp10869_202 #x0000000000000001))
(assert (= var2962447 temp10869_202))
(assert (= temp10869_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10869_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10869_204 #x0000000000000001))
(assert (= var211058 temp10869_204))
(assert (= temp10869_205 #x0000000000000001))
(assert (= var211188 temp10869_205))
(assert (= var3879401 var211188))
(assert (= temp10869_206 #x0000000000000000))
(assert (= var3866802 temp10869_206))
(assert (= temp10869_207 #x0000000000000000))
(assert (= temp10869_208
   (ite (bvslt var3866802 temp10869_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10869_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10869_208)))
(assert (= var3879420 temp10869_209))
(assert (bvslt (ite (bvslt var3866802 temp10869_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10869_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10869_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10869_211 #x0000000000000000))
(assert (= var3879421 temp10869_211))
(assert (= temp10869_212 #x0000000000000001))
(assert (= var3867690 temp10869_212))
(assert (= temp10869_213 #x0000000000000000))
(assert (= temp10869_214
   (ite (bvslt var3867690 temp10869_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10869_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10869_214)))
(assert (= var3879423 temp10869_215))
(assert (bvslt (ite (bvslt var3867690 temp10869_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10869_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10869_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10869_217 #x0000000000000001))
(assert (= var3879424 temp10869_217))
(assert (= temp10869_218 #x0000000000000000))
(assert (= var4133117 temp10869_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10869_219 #x0000000000000002))
(assert (= var4339331 temp10869_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10869_220 #x0000000000000000))
(assert (= var4404892 temp10869_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp10869_221 #x0000000000000001))
(assert (= var211058 temp10869_221))
(model-add temp10869_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10869_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10869_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10869_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






