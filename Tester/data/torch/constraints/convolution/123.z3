(declare-fun temp164_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp164_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp164_3 () (_ BitVec 64))
(declare-fun temp164_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp164_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp164_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp164_7 () (_ BitVec 64))
(declare-fun temp164_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp164_9 () (_ BitVec 64))
(declare-fun temp164_10 () (_ BitVec 64))
(declare-fun temp164_11 () (_ BitVec 64))
(declare-fun temp164_12 () (_ BitVec 64))
(declare-fun temp164_13 () (_ BitVec 64))
(declare-fun temp164_14 () (_ BitVec 64))
(declare-fun temp164_15 () (_ BitVec 64))
(declare-fun temp164_16 () (_ BitVec 64))
(declare-fun temp164_17 () (_ BitVec 64))
(declare-fun temp164_18 () (_ BitVec 64))
(declare-fun temp164_19 () (_ BitVec 64))
(declare-fun temp164_20 () (_ BitVec 64))
(declare-fun temp164_21 () (_ BitVec 64))
(declare-fun temp164_22 () (_ BitVec 64))
(declare-fun temp164_23 () (_ BitVec 64))
(declare-fun temp164_24 () (_ BitVec 64))
(declare-fun temp164_25 () (_ BitVec 64))
(declare-fun temp164_26 () (_ BitVec 64))
(declare-fun temp164_27 () (_ BitVec 64))
(declare-fun temp164_28 () (_ BitVec 64))
(declare-fun temp164_29 () (_ BitVec 64))
(declare-fun temp164_30 () (_ BitVec 64))
(declare-fun temp164_31 () (_ BitVec 64))
(declare-fun temp164_32 () (_ BitVec 64))
(declare-fun temp164_33 () (_ BitVec 64))
(declare-fun temp164_34 () (_ BitVec 64))
(declare-fun temp164_35 () (_ BitVec 64))
(declare-fun temp164_36 () (_ BitVec 64))
(declare-fun temp164_37 () (_ BitVec 64))
(declare-fun temp164_38 () (_ BitVec 64))
(declare-fun temp164_39 () (_ BitVec 64))
(declare-fun temp164_40 () (_ BitVec 64))
(declare-fun temp164_41 () (_ BitVec 64))
(declare-fun temp164_42 () (_ BitVec 64))
(declare-fun temp164_43 () (_ BitVec 64))
(declare-fun temp164_44 () (_ BitVec 64))
(declare-fun temp164_45 () (_ BitVec 64))
(declare-fun temp164_46 () (_ BitVec 64))
(declare-fun temp164_47 () (_ BitVec 64))
(declare-fun temp164_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp164_49 () (_ BitVec 64))
(declare-fun temp164_50 () (_ BitVec 64))
(declare-fun temp164_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp164_52 () (_ BitVec 64))
(declare-fun temp164_53 () (_ BitVec 64))
(declare-fun temp164_54 () (_ BitVec 64))
(declare-fun temp164_55 () (_ BitVec 64))
(declare-fun temp164_56 () (_ BitVec 64))
(declare-fun temp164_57 () (_ BitVec 64))
(declare-fun temp164_58 () (_ BitVec 64))
(declare-fun temp164_59 () (_ BitVec 64))
(declare-fun temp164_60 () (_ BitVec 64))
(declare-fun temp164_61 () (_ BitVec 64))
(declare-fun temp164_62 () (_ BitVec 64))
(declare-fun temp164_63 () (_ BitVec 64))
(declare-fun temp164_64 () (_ BitVec 64))
(declare-fun temp164_65 () (_ BitVec 64))
(declare-fun temp164_66 () (_ BitVec 64))
(declare-fun temp164_67 () (_ BitVec 64))
(declare-fun temp164_68 () (_ BitVec 64))
(declare-fun temp164_69 () (_ BitVec 64))
(declare-fun temp164_70 () (_ BitVec 64))
(declare-fun temp164_71 () (_ BitVec 64))
(declare-fun temp164_72 () (_ BitVec 64))
(declare-fun temp164_73 () (_ BitVec 64))
(declare-fun temp164_74 () (_ BitVec 64))
(declare-fun temp164_75 () (_ BitVec 64))
(declare-fun temp164_76 () (_ BitVec 64))
(declare-fun temp164_77 () (_ BitVec 64))
(declare-fun temp164_78 () (_ BitVec 64))
(declare-fun temp164_79 () (_ BitVec 64))
(declare-fun temp164_80 () (_ BitVec 64))
(declare-fun temp164_81 () (_ BitVec 64))
(declare-fun temp164_82 () (_ BitVec 64))
(declare-fun temp164_83 () (_ BitVec 64))
(declare-fun temp164_84 () (_ BitVec 64))
(declare-fun temp164_85 () (_ BitVec 64))
(declare-fun temp164_86 () (_ BitVec 64))
(declare-fun temp164_87 () (_ BitVec 64))
(declare-fun temp164_88 () (_ BitVec 64))
(declare-fun temp164_89 () (_ BitVec 64))
(declare-fun temp164_90 () (_ BitVec 64))
(declare-fun temp164_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp164_92 () (_ BitVec 64))
(declare-fun temp164_93 () (_ BitVec 64))
(declare-fun temp164_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp164_95 () (_ BitVec 64))
(declare-fun temp164_96 () (_ BitVec 64))
(declare-fun temp164_97 () (_ BitVec 64))
(declare-fun temp164_98 () (_ BitVec 64))
(declare-fun temp164_99 () (_ BitVec 64))
(declare-fun temp164_100 () (_ BitVec 64))
(declare-fun temp164_101 () (_ BitVec 64))
(declare-fun temp164_102 () (_ BitVec 64))
(declare-fun temp164_103 () (_ BitVec 64))
(declare-fun temp164_104 () (_ BitVec 64))
(declare-fun temp164_105 () (_ BitVec 64))
(declare-fun temp164_106 () (_ BitVec 64))
(declare-fun temp164_107 () (_ BitVec 64))
(declare-fun temp164_108 () (_ BitVec 64))
(declare-fun temp164_109 () (_ BitVec 64))
(declare-fun temp164_110 () (_ BitVec 64))
(declare-fun temp164_111 () (_ BitVec 64))
(declare-fun temp164_112 () (_ BitVec 64))
(declare-fun temp164_113 () (_ BitVec 64))
(declare-fun temp164_114 () (_ BitVec 64))
(declare-fun temp164_115 () (_ BitVec 64))
(declare-fun temp164_116 () (_ BitVec 64))
(declare-fun temp164_117 () (_ BitVec 64))
(declare-fun temp164_118 () (_ BitVec 64))
(declare-fun temp164_119 () (_ BitVec 64))
(declare-fun temp164_120 () (_ BitVec 64))
(declare-fun temp164_121 () (_ BitVec 64))
(declare-fun temp164_122 () (_ BitVec 64))
(declare-fun temp164_123 () (_ BitVec 64))
(declare-fun temp164_124 () (_ BitVec 64))
(declare-fun temp164_125 () (_ BitVec 64))
(declare-fun temp164_126 () (_ BitVec 64))
(declare-fun temp164_127 () (_ BitVec 64))
(declare-fun temp164_128 () (_ BitVec 64))
(declare-fun temp164_129 () (_ BitVec 64))
(declare-fun temp164_130 () (_ BitVec 64))
(declare-fun temp164_131 () (_ BitVec 64))
(declare-fun temp164_132 () (_ BitVec 64))
(declare-fun temp164_133 () (_ BitVec 64))
(declare-fun temp164_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp164_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp164_136 () (_ BitVec 64))
(declare-fun temp164_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp164_138 () (_ BitVec 64))
(declare-fun temp164_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp164_140 () (_ BitVec 64))
(declare-fun temp164_141 () (_ BitVec 64))
(declare-fun temp164_142 () (_ BitVec 64))
(declare-fun temp164_143 () (_ BitVec 64))
(declare-fun temp164_144 () (_ BitVec 64))
(declare-fun temp164_145 () (_ BitVec 64))
(declare-fun temp164_146 () (_ BitVec 64))
(declare-fun temp164_147 () (_ BitVec 64))
(declare-fun temp164_148 () (_ BitVec 64))
(declare-fun temp164_149 () (_ BitVec 64))
(declare-fun temp164_150 () (_ BitVec 64))
(declare-fun temp164_151 () (_ BitVec 64))
(declare-fun temp164_152 () (_ BitVec 64))
(declare-fun temp164_153 () (_ BitVec 64))
(declare-fun temp164_154 () (_ BitVec 64))
(declare-fun temp164_155 () (_ BitVec 64))
(declare-fun temp164_157 () (_ BitVec 64))
(declare-fun temp164_158 () (_ BitVec 64))
(declare-fun temp164_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp164_159 () (_ BitVec 64))
(declare-fun temp164_160 () (_ BitVec 64))
(declare-fun temp164_162 () (_ BitVec 64))
(declare-fun temp164_163 () (_ BitVec 64))
(declare-fun temp164_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp164_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp164_165 () (_ BitVec 64))
(declare-fun temp164_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp164_167 () (_ BitVec 64))
(declare-fun temp164_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp164_169 () (_ BitVec 64))
(declare-fun temp164_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp164_171 () (_ BitVec 64))
(declare-fun temp164_172 () (_ BitVec 64))
(declare-fun temp164_173 () (_ BitVec 64))
(declare-fun temp164_174 () (_ BitVec 64))
(declare-fun temp164_175 () (_ BitVec 64))
(declare-fun temp164_176 () (_ BitVec 64))
(declare-fun temp164_177 () (_ BitVec 64))
(declare-fun temp164_178 () (_ BitVec 64))
(declare-fun temp164_179 () (_ BitVec 64))
(declare-fun temp164_180 () (_ BitVec 64))
(declare-fun temp164_181 () (_ BitVec 64))
(declare-fun temp164_182 () (_ BitVec 64))
(declare-fun temp164_183 () (_ BitVec 64))
(declare-fun temp164_184 () (_ BitVec 64))
(declare-fun temp164_185 () (_ BitVec 64))
(declare-fun temp164_186 () (_ BitVec 64))
(declare-fun temp164_187 () (_ BitVec 64))
(declare-fun temp164_188 () (_ BitVec 64))
(declare-fun temp164_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp164_190 () (_ BitVec 64))
(declare-fun temp164_192 () (_ BitVec 64))
(declare-fun temp164_193 () (_ BitVec 64))
(declare-fun temp164_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp164_194 () (_ BitVec 64))
(declare-fun temp164_195 () (_ BitVec 64))
(declare-fun temp164_197 () (_ BitVec 64))
(declare-fun temp164_198 () (_ BitVec 64))
(declare-fun temp164_196 () (_ BitVec 64))
(declare-fun temp164_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp164_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp164_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp164_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp164_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp164_204 () (_ BitVec 64))
(declare-fun temp164_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp164_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp164_207 () (_ BitVec 64))
(declare-fun temp164_208 () (_ BitVec 64))
(declare-fun temp164_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp164_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp164_211 () (_ BitVec 64))
(declare-fun temp164_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp164_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp164_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp164_216 () (_ BitVec 64))
(declare-fun temp164_215 () (_ BitVec 64))
(declare-fun temp164_217 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp164_218 () (_ BitVec 64))
(declare-fun temp164_219 () (_ BitVec 64))
(declare-fun temp164_220 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp164_221 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp164_222 () (_ BitVec 64))
(declare-fun temp164_223 () (_ BitVec 64))
(declare-fun temp164_224 () (_ BitVec 64))
(declare-fun var5518100 () (_ BitVec 64))
(declare-fun var5518067 () (_ BitVec 64))
(declare-fun var5386631 () (_ BitVec 64))
(declare-fun var5386627 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp164_225 () (_ BitVec 64))
(assert (= temp164_1 #x0000000000000001))
(assert (= var77203 temp164_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp164_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp164_2)))
(assert (= temp164_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp164_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp164_4 #x0000000000000000))
(assert (= var210941 temp164_4))
(assert (= temp164_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp164_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp164_6 #x0000000000000000))
(assert (= var210986 temp164_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp164_7 #x0000000000000000))
(assert (= temp164_8 temp164_7))
(assert (= temp164_9 (select ARGNAME_padding_NAMEEND_VAL temp164_8)))
(assert (= temp164_10 #x0000000000000001))
(assert (= temp164_11 temp164_10))
(assert (= temp164_12 (select ARGNAME_padding_NAMEEND_VAL temp164_11)))
(assert (= temp164_13 #x0000000000000002))
(assert (= temp164_14 temp164_13))
(assert (= temp164_15 (select ARGNAME_padding_NAMEEND_VAL temp164_14)))
(assert (= temp164_16 #x0000000000000003))
(assert (= temp164_17 temp164_16))
(assert (= temp164_18 (select ARGNAME_padding_NAMEEND_VAL temp164_17)))
(assert (= temp164_19 #x0000000000000004))
(assert (= temp164_20 temp164_19))
(assert (= temp164_21 (select ARGNAME_padding_NAMEEND_VAL temp164_20)))
(assert (= temp164_22 #x0000000000000005))
(assert (= temp164_23 temp164_22))
(assert (= temp164_24 (select ARGNAME_padding_NAMEEND_VAL temp164_23)))
(assert (= temp164_25 #x0000000000000000))
(assert (= temp164_26 #x0000000000000000))
(assert (= temp164_27 temp164_26))
(assert (= temp164_28 (select ARGNAME_padding_NAMEEND_VAL temp164_27)))
(assert (= temp164_29 #x0000000000000000))
(assert (= temp164_30 #x0000000000000001))
(assert (= temp164_31 temp164_30))
(assert (= temp164_32 (select ARGNAME_padding_NAMEEND_VAL temp164_31)))
(assert (= temp164_33 #x0000000000000000))
(assert (= temp164_34 #x0000000000000002))
(assert (= temp164_35 temp164_34))
(assert (= temp164_36 (select ARGNAME_padding_NAMEEND_VAL temp164_35)))
(assert (= temp164_37 #x0000000000000000))
(assert (= temp164_38 #x0000000000000003))
(assert (= temp164_39 temp164_38))
(assert (= temp164_40 (select ARGNAME_padding_NAMEEND_VAL temp164_39)))
(assert (= temp164_41 #x0000000000000000))
(assert (= temp164_42 #x0000000000000004))
(assert (= temp164_43 temp164_42))
(assert (= temp164_44 (select ARGNAME_padding_NAMEEND_VAL temp164_43)))
(assert (= temp164_45 #x0000000000000000))
(assert (= temp164_46 #x0000000000000005))
(assert (= temp164_47 temp164_46))
(assert (= temp164_48 (select ARGNAME_padding_NAMEEND_VAL temp164_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp164_28 temp164_25)
             (bvslt temp164_32 temp164_29)
             (bvslt temp164_36 temp164_33)
             (bvslt temp164_40 temp164_37)
             (bvslt temp164_44 temp164_41)
             (bvslt temp164_48 temp164_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp164_49 #x0000000000000000))
(assert (= var1191714 temp164_49))
(assert (= temp164_50 #x0000000000000000))
(assert (= temp164_51 temp164_50))
(assert (= temp164_52 (select ARGNAME_output_padding_NAMEEND_VAL temp164_51)))
(assert (= temp164_53 #x0000000000000001))
(assert (= temp164_54 temp164_53))
(assert (= temp164_55 (select ARGNAME_output_padding_NAMEEND_VAL temp164_54)))
(assert (= temp164_56 #x0000000000000002))
(assert (= temp164_57 temp164_56))
(assert (= temp164_58 (select ARGNAME_output_padding_NAMEEND_VAL temp164_57)))
(assert (= temp164_59 #x0000000000000003))
(assert (= temp164_60 temp164_59))
(assert (= temp164_61 (select ARGNAME_output_padding_NAMEEND_VAL temp164_60)))
(assert (= temp164_62 #x0000000000000004))
(assert (= temp164_63 temp164_62))
(assert (= temp164_64 (select ARGNAME_output_padding_NAMEEND_VAL temp164_63)))
(assert (= temp164_65 #x0000000000000005))
(assert (= temp164_66 temp164_65))
(assert (= temp164_67 (select ARGNAME_output_padding_NAMEEND_VAL temp164_66)))
(assert (= temp164_68 #x0000000000000000))
(assert (= temp164_69 #x0000000000000000))
(assert (= temp164_70 temp164_69))
(assert (= temp164_71 (select ARGNAME_output_padding_NAMEEND_VAL temp164_70)))
(assert (= temp164_72 #x0000000000000000))
(assert (= temp164_73 #x0000000000000001))
(assert (= temp164_74 temp164_73))
(assert (= temp164_75 (select ARGNAME_output_padding_NAMEEND_VAL temp164_74)))
(assert (= temp164_76 #x0000000000000000))
(assert (= temp164_77 #x0000000000000002))
(assert (= temp164_78 temp164_77))
(assert (= temp164_79 (select ARGNAME_output_padding_NAMEEND_VAL temp164_78)))
(assert (= temp164_80 #x0000000000000000))
(assert (= temp164_81 #x0000000000000003))
(assert (= temp164_82 temp164_81))
(assert (= temp164_83 (select ARGNAME_output_padding_NAMEEND_VAL temp164_82)))
(assert (= temp164_84 #x0000000000000000))
(assert (= temp164_85 #x0000000000000004))
(assert (= temp164_86 temp164_85))
(assert (= temp164_87 (select ARGNAME_output_padding_NAMEEND_VAL temp164_86)))
(assert (= temp164_88 #x0000000000000000))
(assert (= temp164_89 #x0000000000000005))
(assert (= temp164_90 temp164_89))
(assert (= temp164_91 (select ARGNAME_output_padding_NAMEEND_VAL temp164_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp164_71 temp164_68)
             (bvslt temp164_75 temp164_72)
             (bvslt temp164_79 temp164_76)
             (bvslt temp164_83 temp164_80)
             (bvslt temp164_87 temp164_84)
             (bvslt temp164_91 temp164_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp164_92 #x0000000000000000))
(assert (= var1191725 temp164_92))
(assert (= temp164_93 #x0000000000000000))
(assert (= temp164_94 temp164_93))
(assert (= temp164_95 (select ARGNAME_stride_NAMEEND_VAL temp164_94)))
(assert (= temp164_96 #x0000000000000001))
(assert (= temp164_97 temp164_96))
(assert (= temp164_98 (select ARGNAME_stride_NAMEEND_VAL temp164_97)))
(assert (= temp164_99 #x0000000000000002))
(assert (= temp164_100 temp164_99))
(assert (= temp164_101 (select ARGNAME_stride_NAMEEND_VAL temp164_100)))
(assert (= temp164_102 #x0000000000000003))
(assert (= temp164_103 temp164_102))
(assert (= temp164_104 (select ARGNAME_stride_NAMEEND_VAL temp164_103)))
(assert (= temp164_105 #x0000000000000004))
(assert (= temp164_106 temp164_105))
(assert (= temp164_107 (select ARGNAME_stride_NAMEEND_VAL temp164_106)))
(assert (= temp164_108 #x0000000000000005))
(assert (= temp164_109 temp164_108))
(assert (= temp164_110 (select ARGNAME_stride_NAMEEND_VAL temp164_109)))
(assert (= temp164_111 #x0000000000000000))
(assert (= temp164_112 #x0000000000000000))
(assert (= temp164_113 temp164_112))
(assert (= temp164_114 (select ARGNAME_stride_NAMEEND_VAL temp164_113)))
(assert (= temp164_115 #x0000000000000000))
(assert (= temp164_116 #x0000000000000001))
(assert (= temp164_117 temp164_116))
(assert (= temp164_118 (select ARGNAME_stride_NAMEEND_VAL temp164_117)))
(assert (= temp164_119 #x0000000000000000))
(assert (= temp164_120 #x0000000000000002))
(assert (= temp164_121 temp164_120))
(assert (= temp164_122 (select ARGNAME_stride_NAMEEND_VAL temp164_121)))
(assert (= temp164_123 #x0000000000000000))
(assert (= temp164_124 #x0000000000000003))
(assert (= temp164_125 temp164_124))
(assert (= temp164_126 (select ARGNAME_stride_NAMEEND_VAL temp164_125)))
(assert (= temp164_127 #x0000000000000000))
(assert (= temp164_128 #x0000000000000004))
(assert (= temp164_129 temp164_128))
(assert (= temp164_130 (select ARGNAME_stride_NAMEEND_VAL temp164_129)))
(assert (= temp164_131 #x0000000000000000))
(assert (= temp164_132 #x0000000000000005))
(assert (= temp164_133 temp164_132))
(assert (= temp164_134 (select ARGNAME_stride_NAMEEND_VAL temp164_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp164_114 temp164_111)
             (bvsle temp164_118 temp164_115)
             (bvsle temp164_122 temp164_119)
             (bvsle temp164_126 temp164_123)
             (bvsle temp164_130 temp164_127)
             (bvsle temp164_134 temp164_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp164_135 #x0000000000000000))
(assert (= var1191735 temp164_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp164_136 #x0000000000000001))
(assert (= var1191747 temp164_136))
(assert (= temp164_137 #x0000000000000000))
(assert (= var1179826 temp164_137))
(assert (= temp164_138 #x0000000000000000))
(assert (= temp164_139 temp164_138))
(assert (= temp164_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp164_139)))
(assert (= temp164_141 #x0000000000000001))
(assert (= temp164_142 temp164_141))
(assert (= temp164_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp164_142)))
(assert (= temp164_144 #x0000000000000002))
(assert (= temp164_145 temp164_144))
(assert (= temp164_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp164_145)))
(assert (= temp164_147 #x0000000000000003))
(assert (= temp164_148 temp164_147))
(assert (= temp164_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp164_148)))
(assert (= temp164_150 #x0000000000000004))
(assert (= temp164_151 temp164_150))
(assert (= temp164_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp164_151)))
(assert (= temp164_153 #x0000000000000005))
(assert (= temp164_154 temp164_153))
(assert (= temp164_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp164_154)))
(assert (= temp164_157 var1179826))
(assert (= temp164_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp164_157)))
(assert (= temp164_156 temp164_158))
(assert (= var1191780
   (ite (bvslt temp164_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp164_159 #x0000000000000000))
(assert (= var1191780 temp164_159))
(assert (= temp164_160 #x0000000000000000))
(assert (= var1179826 temp164_160))
(assert (= temp164_162 var1179826))
(assert (= temp164_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp164_162)))
(assert (= temp164_161 temp164_163))
(assert (= var1191802 (bvsmod temp164_161 ARGNAME_groups_NAMEEND)))
(assert (= temp164_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp164_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp164_165 #x0000000000000001))
(assert (= var1191803 temp164_165))
(assert (= temp164_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp164_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp164_167 #x0000000000000001))
(assert (= var1191823 temp164_167))
(assert (= temp164_168 #x0000000000000001))
(assert (= var1180714 temp164_168))
(assert (= temp164_169 #x0000000000000000))
(assert (= temp164_170 temp164_169))
(assert (= temp164_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp164_170)))
(assert (= temp164_172 #x0000000000000001))
(assert (= temp164_173 temp164_172))
(assert (= temp164_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp164_173)))
(assert (= temp164_175 #x0000000000000002))
(assert (= temp164_176 temp164_175))
(assert (= temp164_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp164_176)))
(assert (= temp164_178 #x0000000000000003))
(assert (= temp164_179 temp164_178))
(assert (= temp164_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp164_179)))
(assert (= temp164_181 #x0000000000000004))
(assert (= temp164_182 temp164_181))
(assert (= temp164_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp164_182)))
(assert (= temp164_184 #x0000000000000005))
(assert (= temp164_185 temp164_184))
(assert (= temp164_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp164_185)))
(assert (= temp164_187 #x0000000000000000))
(assert (= temp164_188
   (ite (bvslt var1180714 temp164_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp164_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp164_188)))
(assert (= var1191831 temp164_189))
(assert (bvslt (ite (bvslt var1180714 temp164_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp164_190 #x0000000000000001))
(assert (= var1180714 temp164_190))
(assert (= temp164_192 var1180714))
(assert (= temp164_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp164_192)))
(assert (= temp164_191 temp164_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp164_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp164_194 #x0000000000000001))
(assert (= var1191836 temp164_194))
(assert (= temp164_195 #x0000000000000000))
(assert (= var1179826 temp164_195))
(assert (= temp164_197 var1179826))
(assert (= temp164_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp164_197)))
(assert (= temp164_196 temp164_198))
(assert (= temp164_199 #x0000000000000002))
(assert (= var1586025 temp164_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp164_200 #x0000000000000001))
(assert (= var1191993 temp164_200))
(assert (= temp164_201 #x0000000000000001))
(assert (= var2700303 temp164_201))
(assert (= temp164_202 #x0000000000000001))
(assert (= var2962447 temp164_202))
(assert (= temp164_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp164_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp164_204 #x0000000000000001))
(assert (= var211058 temp164_204))
(assert (= temp164_205 #x0000000000000001))
(assert (= var211188 temp164_205))
(assert (= var3879401 var211188))
(assert (= temp164_206 #x0000000000000000))
(assert (= var3866802 temp164_206))
(assert (= temp164_207 #x0000000000000000))
(assert (= temp164_208
   (ite (bvslt var3866802 temp164_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp164_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp164_208)))
(assert (= var3879420 temp164_209))
(assert (bvslt (ite (bvslt var3866802 temp164_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp164_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp164_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp164_211 #x0000000000000001))
(assert (= var3879421 temp164_211))
(assert (= temp164_212 #x0000000000000000))
(assert (= var4079423 temp164_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp164_213 #x0000000000000002))
(assert (= var4208259 temp164_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp164_214 #x0000000000000000))
(assert (= var4273820 temp164_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp164_216 #xffffffffffffffff))
(assert (= temp164_215 temp164_216))
(assert (= temp164_217 #x0000000000000001))
(assert (= var197674 temp164_217))
(assert (= temp164_218 #x0000000000000000))
(assert (= temp164_219
   (ite (bvslt var197674 temp164_218)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp164_220 (select ARGNAME_input_NAMEEND_DIMSIZE temp164_219)))
(assert (= var211595 temp164_220))
(assert (bvslt (ite (bvslt var197674 temp164_218)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp164_221 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp164_221) #x0000000000000001 #x0000000000000000)))
(assert (= temp164_222 #x0000000000000000))
(assert (= var211596 temp164_222))
(assert (= temp164_223 #x0000000000000001))
(assert (= var211058 temp164_223))
(assert (= temp164_224 #x0000000000000000))
(assert (= var5518100 temp164_224))
(assert (= var5518067 var5518100))
(assert (= var5386631 var5518067))
(assert (= var5386627 var5386631))
(assert (= var212669 var5386627))
(assert (= temp164_225 #x0000000000000000))
(assert (= var212669 temp164_225))
(model-add temp164_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp164_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp164_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp164_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





