(declare-fun temp11040_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp11040_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp11040_3 () (_ BitVec 64))
(declare-fun temp11040_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp11040_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp11040_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp11040_7 () (_ BitVec 64))
(declare-fun temp11040_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11040_9 () (_ BitVec 64))
(declare-fun temp11040_10 () (_ BitVec 64))
(declare-fun temp11040_11 () (_ BitVec 64))
(declare-fun temp11040_12 () (_ BitVec 64))
(declare-fun temp11040_13 () (_ BitVec 64))
(declare-fun temp11040_14 () (_ BitVec 64))
(declare-fun temp11040_15 () (_ BitVec 64))
(declare-fun temp11040_16 () (_ BitVec 64))
(declare-fun temp11040_17 () (_ BitVec 64))
(declare-fun temp11040_18 () (_ BitVec 64))
(declare-fun temp11040_19 () (_ BitVec 64))
(declare-fun temp11040_20 () (_ BitVec 64))
(declare-fun temp11040_21 () (_ BitVec 64))
(declare-fun temp11040_22 () (_ BitVec 64))
(declare-fun temp11040_23 () (_ BitVec 64))
(declare-fun temp11040_24 () (_ BitVec 64))
(declare-fun temp11040_25 () (_ BitVec 64))
(declare-fun temp11040_26 () (_ BitVec 64))
(declare-fun temp11040_27 () (_ BitVec 64))
(declare-fun temp11040_28 () (_ BitVec 64))
(declare-fun temp11040_29 () (_ BitVec 64))
(declare-fun temp11040_30 () (_ BitVec 64))
(declare-fun temp11040_31 () (_ BitVec 64))
(declare-fun temp11040_32 () (_ BitVec 64))
(declare-fun temp11040_33 () (_ BitVec 64))
(declare-fun temp11040_34 () (_ BitVec 64))
(declare-fun temp11040_35 () (_ BitVec 64))
(declare-fun temp11040_36 () (_ BitVec 64))
(declare-fun temp11040_37 () (_ BitVec 64))
(declare-fun temp11040_38 () (_ BitVec 64))
(declare-fun temp11040_39 () (_ BitVec 64))
(declare-fun temp11040_40 () (_ BitVec 64))
(declare-fun temp11040_41 () (_ BitVec 64))
(declare-fun temp11040_42 () (_ BitVec 64))
(declare-fun temp11040_43 () (_ BitVec 64))
(declare-fun temp11040_44 () (_ BitVec 64))
(declare-fun temp11040_45 () (_ BitVec 64))
(declare-fun temp11040_46 () (_ BitVec 64))
(declare-fun temp11040_47 () (_ BitVec 64))
(declare-fun temp11040_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp11040_49 () (_ BitVec 64))
(declare-fun temp11040_50 () (_ BitVec 64))
(declare-fun temp11040_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11040_52 () (_ BitVec 64))
(declare-fun temp11040_53 () (_ BitVec 64))
(declare-fun temp11040_54 () (_ BitVec 64))
(declare-fun temp11040_55 () (_ BitVec 64))
(declare-fun temp11040_56 () (_ BitVec 64))
(declare-fun temp11040_57 () (_ BitVec 64))
(declare-fun temp11040_58 () (_ BitVec 64))
(declare-fun temp11040_59 () (_ BitVec 64))
(declare-fun temp11040_60 () (_ BitVec 64))
(declare-fun temp11040_61 () (_ BitVec 64))
(declare-fun temp11040_62 () (_ BitVec 64))
(declare-fun temp11040_63 () (_ BitVec 64))
(declare-fun temp11040_64 () (_ BitVec 64))
(declare-fun temp11040_65 () (_ BitVec 64))
(declare-fun temp11040_66 () (_ BitVec 64))
(declare-fun temp11040_67 () (_ BitVec 64))
(declare-fun temp11040_68 () (_ BitVec 64))
(declare-fun temp11040_69 () (_ BitVec 64))
(declare-fun temp11040_70 () (_ BitVec 64))
(declare-fun temp11040_71 () (_ BitVec 64))
(declare-fun temp11040_72 () (_ BitVec 64))
(declare-fun temp11040_73 () (_ BitVec 64))
(declare-fun temp11040_74 () (_ BitVec 64))
(declare-fun temp11040_75 () (_ BitVec 64))
(declare-fun temp11040_76 () (_ BitVec 64))
(declare-fun temp11040_77 () (_ BitVec 64))
(declare-fun temp11040_78 () (_ BitVec 64))
(declare-fun temp11040_79 () (_ BitVec 64))
(declare-fun temp11040_80 () (_ BitVec 64))
(declare-fun temp11040_81 () (_ BitVec 64))
(declare-fun temp11040_82 () (_ BitVec 64))
(declare-fun temp11040_83 () (_ BitVec 64))
(declare-fun temp11040_84 () (_ BitVec 64))
(declare-fun temp11040_85 () (_ BitVec 64))
(declare-fun temp11040_86 () (_ BitVec 64))
(declare-fun temp11040_87 () (_ BitVec 64))
(declare-fun temp11040_88 () (_ BitVec 64))
(declare-fun temp11040_89 () (_ BitVec 64))
(declare-fun temp11040_90 () (_ BitVec 64))
(declare-fun temp11040_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp11040_92 () (_ BitVec 64))
(declare-fun temp11040_93 () (_ BitVec 64))
(declare-fun temp11040_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11040_95 () (_ BitVec 64))
(declare-fun temp11040_96 () (_ BitVec 64))
(declare-fun temp11040_97 () (_ BitVec 64))
(declare-fun temp11040_98 () (_ BitVec 64))
(declare-fun temp11040_99 () (_ BitVec 64))
(declare-fun temp11040_100 () (_ BitVec 64))
(declare-fun temp11040_101 () (_ BitVec 64))
(declare-fun temp11040_102 () (_ BitVec 64))
(declare-fun temp11040_103 () (_ BitVec 64))
(declare-fun temp11040_104 () (_ BitVec 64))
(declare-fun temp11040_105 () (_ BitVec 64))
(declare-fun temp11040_106 () (_ BitVec 64))
(declare-fun temp11040_107 () (_ BitVec 64))
(declare-fun temp11040_108 () (_ BitVec 64))
(declare-fun temp11040_109 () (_ BitVec 64))
(declare-fun temp11040_110 () (_ BitVec 64))
(declare-fun temp11040_111 () (_ BitVec 64))
(declare-fun temp11040_112 () (_ BitVec 64))
(declare-fun temp11040_113 () (_ BitVec 64))
(declare-fun temp11040_114 () (_ BitVec 64))
(declare-fun temp11040_115 () (_ BitVec 64))
(declare-fun temp11040_116 () (_ BitVec 64))
(declare-fun temp11040_117 () (_ BitVec 64))
(declare-fun temp11040_118 () (_ BitVec 64))
(declare-fun temp11040_119 () (_ BitVec 64))
(declare-fun temp11040_120 () (_ BitVec 64))
(declare-fun temp11040_121 () (_ BitVec 64))
(declare-fun temp11040_122 () (_ BitVec 64))
(declare-fun temp11040_123 () (_ BitVec 64))
(declare-fun temp11040_124 () (_ BitVec 64))
(declare-fun temp11040_125 () (_ BitVec 64))
(declare-fun temp11040_126 () (_ BitVec 64))
(declare-fun temp11040_127 () (_ BitVec 64))
(declare-fun temp11040_128 () (_ BitVec 64))
(declare-fun temp11040_129 () (_ BitVec 64))
(declare-fun temp11040_130 () (_ BitVec 64))
(declare-fun temp11040_131 () (_ BitVec 64))
(declare-fun temp11040_132 () (_ BitVec 64))
(declare-fun temp11040_133 () (_ BitVec 64))
(declare-fun temp11040_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp11040_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp11040_136 () (_ BitVec 64))
(declare-fun temp11040_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp11040_138 () (_ BitVec 64))
(declare-fun temp11040_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11040_140 () (_ BitVec 64))
(declare-fun temp11040_141 () (_ BitVec 64))
(declare-fun temp11040_142 () (_ BitVec 64))
(declare-fun temp11040_143 () (_ BitVec 64))
(declare-fun temp11040_144 () (_ BitVec 64))
(declare-fun temp11040_145 () (_ BitVec 64))
(declare-fun temp11040_146 () (_ BitVec 64))
(declare-fun temp11040_147 () (_ BitVec 64))
(declare-fun temp11040_148 () (_ BitVec 64))
(declare-fun temp11040_149 () (_ BitVec 64))
(declare-fun temp11040_150 () (_ BitVec 64))
(declare-fun temp11040_151 () (_ BitVec 64))
(declare-fun temp11040_152 () (_ BitVec 64))
(declare-fun temp11040_153 () (_ BitVec 64))
(declare-fun temp11040_154 () (_ BitVec 64))
(declare-fun temp11040_155 () (_ BitVec 64))
(declare-fun temp11040_157 () (_ BitVec 64))
(declare-fun temp11040_158 () (_ BitVec 64))
(declare-fun temp11040_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp11040_159 () (_ BitVec 64))
(declare-fun temp11040_160 () (_ BitVec 64))
(declare-fun temp11040_162 () (_ BitVec 64))
(declare-fun temp11040_163 () (_ BitVec 64))
(declare-fun temp11040_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp11040_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp11040_165 () (_ BitVec 64))
(declare-fun temp11040_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp11040_167 () (_ BitVec 64))
(declare-fun temp11040_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp11040_169 () (_ BitVec 64))
(declare-fun temp11040_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11040_171 () (_ BitVec 64))
(declare-fun temp11040_172 () (_ BitVec 64))
(declare-fun temp11040_173 () (_ BitVec 64))
(declare-fun temp11040_174 () (_ BitVec 64))
(declare-fun temp11040_175 () (_ BitVec 64))
(declare-fun temp11040_176 () (_ BitVec 64))
(declare-fun temp11040_177 () (_ BitVec 64))
(declare-fun temp11040_178 () (_ BitVec 64))
(declare-fun temp11040_179 () (_ BitVec 64))
(declare-fun temp11040_180 () (_ BitVec 64))
(declare-fun temp11040_181 () (_ BitVec 64))
(declare-fun temp11040_182 () (_ BitVec 64))
(declare-fun temp11040_183 () (_ BitVec 64))
(declare-fun temp11040_184 () (_ BitVec 64))
(declare-fun temp11040_185 () (_ BitVec 64))
(declare-fun temp11040_186 () (_ BitVec 64))
(declare-fun temp11040_187 () (_ BitVec 64))
(declare-fun temp11040_188 () (_ BitVec 64))
(declare-fun temp11040_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp11040_190 () (_ BitVec 64))
(declare-fun temp11040_192 () (_ BitVec 64))
(declare-fun temp11040_193 () (_ BitVec 64))
(declare-fun temp11040_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp11040_194 () (_ BitVec 64))
(declare-fun temp11040_195 () (_ BitVec 64))
(declare-fun temp11040_197 () (_ BitVec 64))
(declare-fun temp11040_198 () (_ BitVec 64))
(declare-fun temp11040_196 () (_ BitVec 64))
(declare-fun temp11040_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp11040_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp11040_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp11040_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp11040_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp11040_204 () (_ BitVec 64))
(declare-fun temp11040_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp11040_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp11040_207 () (_ BitVec 64))
(declare-fun temp11040_208 () (_ BitVec 64))
(declare-fun temp11040_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp11040_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp11040_211 () (_ BitVec 64))
(declare-fun temp11040_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp11040_213 () (_ BitVec 64))
(declare-fun temp11040_214 () (_ BitVec 64))
(declare-fun temp11040_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp11040_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp11040_217 () (_ BitVec 64))
(declare-fun temp11040_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp11040_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp11040_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var4600208 () (_ BitVec 64))
(declare-fun var4862352 () (_ BitVec 64))
(declare-fun temp11040_221 () (_ BitVec 64))
(declare-fun var212414 () (_ BitVec 64))
(declare-fun temp11040_222 () (_ BitVec 64))
(declare-fun temp11040_223 () (_ BitVec 64))
(declare-fun var5191299 () (_ BitVec 64))
(declare-fun var5256844 () (_ BitVec 64))
(declare-fun temp11040_224 () (_ BitVec 64))
(assert (= temp11040_1 #x0000000000000001))
(assert (= var77203 temp11040_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp11040_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp11040_2)))
(assert (= temp11040_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp11040_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11040_4 #x0000000000000000))
(assert (= var210941 temp11040_4))
(assert (= temp11040_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp11040_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11040_6 #x0000000000000000))
(assert (= var210986 temp11040_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp11040_7 #x0000000000000000))
(assert (= temp11040_8 temp11040_7))
(assert (= temp11040_9 (select ARGNAME_padding_NAMEEND_VAL temp11040_8)))
(assert (= temp11040_10 #x0000000000000001))
(assert (= temp11040_11 temp11040_10))
(assert (= temp11040_12 (select ARGNAME_padding_NAMEEND_VAL temp11040_11)))
(assert (= temp11040_13 #x0000000000000002))
(assert (= temp11040_14 temp11040_13))
(assert (= temp11040_15 (select ARGNAME_padding_NAMEEND_VAL temp11040_14)))
(assert (= temp11040_16 #x0000000000000003))
(assert (= temp11040_17 temp11040_16))
(assert (= temp11040_18 (select ARGNAME_padding_NAMEEND_VAL temp11040_17)))
(assert (= temp11040_19 #x0000000000000004))
(assert (= temp11040_20 temp11040_19))
(assert (= temp11040_21 (select ARGNAME_padding_NAMEEND_VAL temp11040_20)))
(assert (= temp11040_22 #x0000000000000005))
(assert (= temp11040_23 temp11040_22))
(assert (= temp11040_24 (select ARGNAME_padding_NAMEEND_VAL temp11040_23)))
(assert (= temp11040_25 #x0000000000000000))
(assert (= temp11040_26 #x0000000000000000))
(assert (= temp11040_27 temp11040_26))
(assert (= temp11040_28 (select ARGNAME_padding_NAMEEND_VAL temp11040_27)))
(assert (= temp11040_29 #x0000000000000000))
(assert (= temp11040_30 #x0000000000000001))
(assert (= temp11040_31 temp11040_30))
(assert (= temp11040_32 (select ARGNAME_padding_NAMEEND_VAL temp11040_31)))
(assert (= temp11040_33 #x0000000000000000))
(assert (= temp11040_34 #x0000000000000002))
(assert (= temp11040_35 temp11040_34))
(assert (= temp11040_36 (select ARGNAME_padding_NAMEEND_VAL temp11040_35)))
(assert (= temp11040_37 #x0000000000000000))
(assert (= temp11040_38 #x0000000000000003))
(assert (= temp11040_39 temp11040_38))
(assert (= temp11040_40 (select ARGNAME_padding_NAMEEND_VAL temp11040_39)))
(assert (= temp11040_41 #x0000000000000000))
(assert (= temp11040_42 #x0000000000000004))
(assert (= temp11040_43 temp11040_42))
(assert (= temp11040_44 (select ARGNAME_padding_NAMEEND_VAL temp11040_43)))
(assert (= temp11040_45 #x0000000000000000))
(assert (= temp11040_46 #x0000000000000005))
(assert (= temp11040_47 temp11040_46))
(assert (= temp11040_48 (select ARGNAME_padding_NAMEEND_VAL temp11040_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp11040_28 temp11040_25)
             (bvslt temp11040_32 temp11040_29)
             (bvslt temp11040_36 temp11040_33)
             (bvslt temp11040_40 temp11040_37)
             (bvslt temp11040_44 temp11040_41)
             (bvslt temp11040_48 temp11040_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11040_49 #x0000000000000000))
(assert (= var1191714 temp11040_49))
(assert (= temp11040_50 #x0000000000000000))
(assert (= temp11040_51 temp11040_50))
(assert (= temp11040_52 (select ARGNAME_output_padding_NAMEEND_VAL temp11040_51)))
(assert (= temp11040_53 #x0000000000000001))
(assert (= temp11040_54 temp11040_53))
(assert (= temp11040_55 (select ARGNAME_output_padding_NAMEEND_VAL temp11040_54)))
(assert (= temp11040_56 #x0000000000000002))
(assert (= temp11040_57 temp11040_56))
(assert (= temp11040_58 (select ARGNAME_output_padding_NAMEEND_VAL temp11040_57)))
(assert (= temp11040_59 #x0000000000000003))
(assert (= temp11040_60 temp11040_59))
(assert (= temp11040_61 (select ARGNAME_output_padding_NAMEEND_VAL temp11040_60)))
(assert (= temp11040_62 #x0000000000000004))
(assert (= temp11040_63 temp11040_62))
(assert (= temp11040_64 (select ARGNAME_output_padding_NAMEEND_VAL temp11040_63)))
(assert (= temp11040_65 #x0000000000000005))
(assert (= temp11040_66 temp11040_65))
(assert (= temp11040_67 (select ARGNAME_output_padding_NAMEEND_VAL temp11040_66)))
(assert (= temp11040_68 #x0000000000000000))
(assert (= temp11040_69 #x0000000000000000))
(assert (= temp11040_70 temp11040_69))
(assert (= temp11040_71 (select ARGNAME_output_padding_NAMEEND_VAL temp11040_70)))
(assert (= temp11040_72 #x0000000000000000))
(assert (= temp11040_73 #x0000000000000001))
(assert (= temp11040_74 temp11040_73))
(assert (= temp11040_75 (select ARGNAME_output_padding_NAMEEND_VAL temp11040_74)))
(assert (= temp11040_76 #x0000000000000000))
(assert (= temp11040_77 #x0000000000000002))
(assert (= temp11040_78 temp11040_77))
(assert (= temp11040_79 (select ARGNAME_output_padding_NAMEEND_VAL temp11040_78)))
(assert (= temp11040_80 #x0000000000000000))
(assert (= temp11040_81 #x0000000000000003))
(assert (= temp11040_82 temp11040_81))
(assert (= temp11040_83 (select ARGNAME_output_padding_NAMEEND_VAL temp11040_82)))
(assert (= temp11040_84 #x0000000000000000))
(assert (= temp11040_85 #x0000000000000004))
(assert (= temp11040_86 temp11040_85))
(assert (= temp11040_87 (select ARGNAME_output_padding_NAMEEND_VAL temp11040_86)))
(assert (= temp11040_88 #x0000000000000000))
(assert (= temp11040_89 #x0000000000000005))
(assert (= temp11040_90 temp11040_89))
(assert (= temp11040_91 (select ARGNAME_output_padding_NAMEEND_VAL temp11040_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp11040_71 temp11040_68)
             (bvslt temp11040_75 temp11040_72)
             (bvslt temp11040_79 temp11040_76)
             (bvslt temp11040_83 temp11040_80)
             (bvslt temp11040_87 temp11040_84)
             (bvslt temp11040_91 temp11040_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11040_92 #x0000000000000000))
(assert (= var1191725 temp11040_92))
(assert (= temp11040_93 #x0000000000000000))
(assert (= temp11040_94 temp11040_93))
(assert (= temp11040_95 (select ARGNAME_stride_NAMEEND_VAL temp11040_94)))
(assert (= temp11040_96 #x0000000000000001))
(assert (= temp11040_97 temp11040_96))
(assert (= temp11040_98 (select ARGNAME_stride_NAMEEND_VAL temp11040_97)))
(assert (= temp11040_99 #x0000000000000002))
(assert (= temp11040_100 temp11040_99))
(assert (= temp11040_101 (select ARGNAME_stride_NAMEEND_VAL temp11040_100)))
(assert (= temp11040_102 #x0000000000000003))
(assert (= temp11040_103 temp11040_102))
(assert (= temp11040_104 (select ARGNAME_stride_NAMEEND_VAL temp11040_103)))
(assert (= temp11040_105 #x0000000000000004))
(assert (= temp11040_106 temp11040_105))
(assert (= temp11040_107 (select ARGNAME_stride_NAMEEND_VAL temp11040_106)))
(assert (= temp11040_108 #x0000000000000005))
(assert (= temp11040_109 temp11040_108))
(assert (= temp11040_110 (select ARGNAME_stride_NAMEEND_VAL temp11040_109)))
(assert (= temp11040_111 #x0000000000000000))
(assert (= temp11040_112 #x0000000000000000))
(assert (= temp11040_113 temp11040_112))
(assert (= temp11040_114 (select ARGNAME_stride_NAMEEND_VAL temp11040_113)))
(assert (= temp11040_115 #x0000000000000000))
(assert (= temp11040_116 #x0000000000000001))
(assert (= temp11040_117 temp11040_116))
(assert (= temp11040_118 (select ARGNAME_stride_NAMEEND_VAL temp11040_117)))
(assert (= temp11040_119 #x0000000000000000))
(assert (= temp11040_120 #x0000000000000002))
(assert (= temp11040_121 temp11040_120))
(assert (= temp11040_122 (select ARGNAME_stride_NAMEEND_VAL temp11040_121)))
(assert (= temp11040_123 #x0000000000000000))
(assert (= temp11040_124 #x0000000000000003))
(assert (= temp11040_125 temp11040_124))
(assert (= temp11040_126 (select ARGNAME_stride_NAMEEND_VAL temp11040_125)))
(assert (= temp11040_127 #x0000000000000000))
(assert (= temp11040_128 #x0000000000000004))
(assert (= temp11040_129 temp11040_128))
(assert (= temp11040_130 (select ARGNAME_stride_NAMEEND_VAL temp11040_129)))
(assert (= temp11040_131 #x0000000000000000))
(assert (= temp11040_132 #x0000000000000005))
(assert (= temp11040_133 temp11040_132))
(assert (= temp11040_134 (select ARGNAME_stride_NAMEEND_VAL temp11040_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp11040_114 temp11040_111)
             (bvsle temp11040_118 temp11040_115)
             (bvsle temp11040_122 temp11040_119)
             (bvsle temp11040_126 temp11040_123)
             (bvsle temp11040_130 temp11040_127)
             (bvsle temp11040_134 temp11040_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11040_135 #x0000000000000000))
(assert (= var1191735 temp11040_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11040_136 #x0000000000000001))
(assert (= var1191747 temp11040_136))
(assert (= temp11040_137 #x0000000000000000))
(assert (= var1179826 temp11040_137))
(assert (= temp11040_138 #x0000000000000000))
(assert (= temp11040_139 temp11040_138))
(assert (= temp11040_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11040_139)))
(assert (= temp11040_141 #x0000000000000001))
(assert (= temp11040_142 temp11040_141))
(assert (= temp11040_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11040_142)))
(assert (= temp11040_144 #x0000000000000002))
(assert (= temp11040_145 temp11040_144))
(assert (= temp11040_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11040_145)))
(assert (= temp11040_147 #x0000000000000003))
(assert (= temp11040_148 temp11040_147))
(assert (= temp11040_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11040_148)))
(assert (= temp11040_150 #x0000000000000004))
(assert (= temp11040_151 temp11040_150))
(assert (= temp11040_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11040_151)))
(assert (= temp11040_153 #x0000000000000005))
(assert (= temp11040_154 temp11040_153))
(assert (= temp11040_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11040_154)))
(assert (= temp11040_157 var1179826))
(assert (= temp11040_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11040_157)))
(assert (= temp11040_156 temp11040_158))
(assert (= var1191780
   (ite (bvslt temp11040_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11040_159 #x0000000000000000))
(assert (= var1191780 temp11040_159))
(assert (= temp11040_160 #x0000000000000000))
(assert (= var1179826 temp11040_160))
(assert (= temp11040_162 var1179826))
(assert (= temp11040_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11040_162)))
(assert (= temp11040_161 temp11040_163))
(assert (= var1191802 (bvsmod temp11040_161 ARGNAME_groups_NAMEEND)))
(assert (= temp11040_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp11040_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp11040_165 #x0000000000000001))
(assert (= var1191803 temp11040_165))
(assert (= temp11040_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp11040_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11040_167 #x0000000000000001))
(assert (= var1191823 temp11040_167))
(assert (= temp11040_168 #x0000000000000001))
(assert (= var1180714 temp11040_168))
(assert (= temp11040_169 #x0000000000000000))
(assert (= temp11040_170 temp11040_169))
(assert (= temp11040_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp11040_170)))
(assert (= temp11040_172 #x0000000000000001))
(assert (= temp11040_173 temp11040_172))
(assert (= temp11040_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp11040_173)))
(assert (= temp11040_175 #x0000000000000002))
(assert (= temp11040_176 temp11040_175))
(assert (= temp11040_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp11040_176)))
(assert (= temp11040_178 #x0000000000000003))
(assert (= temp11040_179 temp11040_178))
(assert (= temp11040_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp11040_179)))
(assert (= temp11040_181 #x0000000000000004))
(assert (= temp11040_182 temp11040_181))
(assert (= temp11040_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp11040_182)))
(assert (= temp11040_184 #x0000000000000005))
(assert (= temp11040_185 temp11040_184))
(assert (= temp11040_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp11040_185)))
(assert (= temp11040_187 #x0000000000000000))
(assert (= temp11040_188
   (ite (bvslt var1180714 temp11040_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp11040_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp11040_188)))
(assert (= var1191831 temp11040_189))
(assert (bvslt (ite (bvslt var1180714 temp11040_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11040_190 #x0000000000000001))
(assert (= var1180714 temp11040_190))
(assert (= temp11040_192 var1180714))
(assert (= temp11040_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11040_192)))
(assert (= temp11040_191 temp11040_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp11040_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp11040_194 #x0000000000000001))
(assert (= var1191836 temp11040_194))
(assert (= temp11040_195 #x0000000000000000))
(assert (= var1179826 temp11040_195))
(assert (= temp11040_197 var1179826))
(assert (= temp11040_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11040_197)))
(assert (= temp11040_196 temp11040_198))
(assert (= temp11040_199 #x0000000000000002))
(assert (= var1586025 temp11040_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp11040_200 #x0000000000000001))
(assert (= var1191993 temp11040_200))
(assert (= temp11040_201 #x0000000000000001))
(assert (= var2700303 temp11040_201))
(assert (= temp11040_202 #x0000000000000001))
(assert (= var2962447 temp11040_202))
(assert (= temp11040_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp11040_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11040_204 #x0000000000000001))
(assert (= var211058 temp11040_204))
(assert (= temp11040_205 #x0000000000000001))
(assert (= var211188 temp11040_205))
(assert (= var3879401 var211188))
(assert (= temp11040_206 #x0000000000000000))
(assert (= var3866802 temp11040_206))
(assert (= temp11040_207 #x0000000000000000))
(assert (= temp11040_208
   (ite (bvslt var3866802 temp11040_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp11040_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp11040_208)))
(assert (= var3879420 temp11040_209))
(assert (bvslt (ite (bvslt var3866802 temp11040_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11040_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp11040_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp11040_211 #x0000000000000000))
(assert (= var3879421 temp11040_211))
(assert (= temp11040_212 #x0000000000000001))
(assert (= var3867690 temp11040_212))
(assert (= temp11040_213 #x0000000000000000))
(assert (= temp11040_214
   (ite (bvslt var3867690 temp11040_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp11040_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp11040_214)))
(assert (= var3879423 temp11040_215))
(assert (bvslt (ite (bvslt var3867690 temp11040_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11040_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp11040_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp11040_217 #x0000000000000001))
(assert (= var3879424 temp11040_217))
(assert (= temp11040_218 #x0000000000000000))
(assert (= var4133117 temp11040_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp11040_219 #x0000000000000002))
(assert (= var4339331 temp11040_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11040_220 #x0000000000000000))
(assert (= var4404892 temp11040_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var4600208 var211201))
(assert (= var4862352 var211201))
(assert (= temp11040_221 #x0000000000000001))
(assert (= var212414
   (ite (= ARGNAME_groups_NAMEEND temp11040_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11040_222 #x0000000000000000))
(assert (= var212414 temp11040_222))
(assert (= temp11040_223 #x0000000000000002))
(assert (= var5191299 temp11040_223))
(assert (= var5256844 var5191299))
(assert (= temp11040_224 #x0000000000000001))
(assert (= var211058 temp11040_224))
(model-add temp11040_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp11040_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp11040_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp11040_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





