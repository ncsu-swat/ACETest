(declare-fun temp566_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp566_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp566_3 () (_ BitVec 64))
(declare-fun temp566_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp566_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp566_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp566_7 () (_ BitVec 64))
(declare-fun temp566_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp566_9 () (_ BitVec 64))
(declare-fun temp566_10 () (_ BitVec 64))
(declare-fun temp566_11 () (_ BitVec 64))
(declare-fun temp566_12 () (_ BitVec 64))
(declare-fun temp566_13 () (_ BitVec 64))
(declare-fun temp566_14 () (_ BitVec 64))
(declare-fun temp566_15 () (_ BitVec 64))
(declare-fun temp566_16 () (_ BitVec 64))
(declare-fun temp566_17 () (_ BitVec 64))
(declare-fun temp566_18 () (_ BitVec 64))
(declare-fun temp566_19 () (_ BitVec 64))
(declare-fun temp566_20 () (_ BitVec 64))
(declare-fun temp566_21 () (_ BitVec 64))
(declare-fun temp566_22 () (_ BitVec 64))
(declare-fun temp566_23 () (_ BitVec 64))
(declare-fun temp566_24 () (_ BitVec 64))
(declare-fun temp566_25 () (_ BitVec 64))
(declare-fun temp566_26 () (_ BitVec 64))
(declare-fun temp566_27 () (_ BitVec 64))
(declare-fun temp566_28 () (_ BitVec 64))
(declare-fun temp566_29 () (_ BitVec 64))
(declare-fun temp566_30 () (_ BitVec 64))
(declare-fun temp566_31 () (_ BitVec 64))
(declare-fun temp566_32 () (_ BitVec 64))
(declare-fun temp566_33 () (_ BitVec 64))
(declare-fun temp566_34 () (_ BitVec 64))
(declare-fun temp566_35 () (_ BitVec 64))
(declare-fun temp566_36 () (_ BitVec 64))
(declare-fun temp566_37 () (_ BitVec 64))
(declare-fun temp566_38 () (_ BitVec 64))
(declare-fun temp566_39 () (_ BitVec 64))
(declare-fun temp566_40 () (_ BitVec 64))
(declare-fun temp566_41 () (_ BitVec 64))
(declare-fun temp566_42 () (_ BitVec 64))
(declare-fun temp566_43 () (_ BitVec 64))
(declare-fun temp566_44 () (_ BitVec 64))
(declare-fun temp566_45 () (_ BitVec 64))
(declare-fun temp566_46 () (_ BitVec 64))
(declare-fun temp566_47 () (_ BitVec 64))
(declare-fun temp566_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp566_49 () (_ BitVec 64))
(declare-fun temp566_50 () (_ BitVec 64))
(declare-fun temp566_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp566_52 () (_ BitVec 64))
(declare-fun temp566_53 () (_ BitVec 64))
(declare-fun temp566_54 () (_ BitVec 64))
(declare-fun temp566_55 () (_ BitVec 64))
(declare-fun temp566_56 () (_ BitVec 64))
(declare-fun temp566_57 () (_ BitVec 64))
(declare-fun temp566_58 () (_ BitVec 64))
(declare-fun temp566_59 () (_ BitVec 64))
(declare-fun temp566_60 () (_ BitVec 64))
(declare-fun temp566_61 () (_ BitVec 64))
(declare-fun temp566_62 () (_ BitVec 64))
(declare-fun temp566_63 () (_ BitVec 64))
(declare-fun temp566_64 () (_ BitVec 64))
(declare-fun temp566_65 () (_ BitVec 64))
(declare-fun temp566_66 () (_ BitVec 64))
(declare-fun temp566_67 () (_ BitVec 64))
(declare-fun temp566_68 () (_ BitVec 64))
(declare-fun temp566_69 () (_ BitVec 64))
(declare-fun temp566_70 () (_ BitVec 64))
(declare-fun temp566_71 () (_ BitVec 64))
(declare-fun temp566_72 () (_ BitVec 64))
(declare-fun temp566_73 () (_ BitVec 64))
(declare-fun temp566_74 () (_ BitVec 64))
(declare-fun temp566_75 () (_ BitVec 64))
(declare-fun temp566_76 () (_ BitVec 64))
(declare-fun temp566_77 () (_ BitVec 64))
(declare-fun temp566_78 () (_ BitVec 64))
(declare-fun temp566_79 () (_ BitVec 64))
(declare-fun temp566_80 () (_ BitVec 64))
(declare-fun temp566_81 () (_ BitVec 64))
(declare-fun temp566_82 () (_ BitVec 64))
(declare-fun temp566_83 () (_ BitVec 64))
(declare-fun temp566_84 () (_ BitVec 64))
(declare-fun temp566_85 () (_ BitVec 64))
(declare-fun temp566_86 () (_ BitVec 64))
(declare-fun temp566_87 () (_ BitVec 64))
(declare-fun temp566_88 () (_ BitVec 64))
(declare-fun temp566_89 () (_ BitVec 64))
(declare-fun temp566_90 () (_ BitVec 64))
(declare-fun temp566_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp566_92 () (_ BitVec 64))
(declare-fun temp566_93 () (_ BitVec 64))
(declare-fun temp566_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp566_95 () (_ BitVec 64))
(declare-fun temp566_96 () (_ BitVec 64))
(declare-fun temp566_97 () (_ BitVec 64))
(declare-fun temp566_98 () (_ BitVec 64))
(declare-fun temp566_99 () (_ BitVec 64))
(declare-fun temp566_100 () (_ BitVec 64))
(declare-fun temp566_101 () (_ BitVec 64))
(declare-fun temp566_102 () (_ BitVec 64))
(declare-fun temp566_103 () (_ BitVec 64))
(declare-fun temp566_104 () (_ BitVec 64))
(declare-fun temp566_105 () (_ BitVec 64))
(declare-fun temp566_106 () (_ BitVec 64))
(declare-fun temp566_107 () (_ BitVec 64))
(declare-fun temp566_108 () (_ BitVec 64))
(declare-fun temp566_109 () (_ BitVec 64))
(declare-fun temp566_110 () (_ BitVec 64))
(declare-fun temp566_111 () (_ BitVec 64))
(declare-fun temp566_112 () (_ BitVec 64))
(declare-fun temp566_113 () (_ BitVec 64))
(declare-fun temp566_114 () (_ BitVec 64))
(declare-fun temp566_115 () (_ BitVec 64))
(declare-fun temp566_116 () (_ BitVec 64))
(declare-fun temp566_117 () (_ BitVec 64))
(declare-fun temp566_118 () (_ BitVec 64))
(declare-fun temp566_119 () (_ BitVec 64))
(declare-fun temp566_120 () (_ BitVec 64))
(declare-fun temp566_121 () (_ BitVec 64))
(declare-fun temp566_122 () (_ BitVec 64))
(declare-fun temp566_123 () (_ BitVec 64))
(declare-fun temp566_124 () (_ BitVec 64))
(declare-fun temp566_125 () (_ BitVec 64))
(declare-fun temp566_126 () (_ BitVec 64))
(declare-fun temp566_127 () (_ BitVec 64))
(declare-fun temp566_128 () (_ BitVec 64))
(declare-fun temp566_129 () (_ BitVec 64))
(declare-fun temp566_130 () (_ BitVec 64))
(declare-fun temp566_131 () (_ BitVec 64))
(declare-fun temp566_132 () (_ BitVec 64))
(declare-fun temp566_133 () (_ BitVec 64))
(declare-fun temp566_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp566_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp566_136 () (_ BitVec 64))
(declare-fun temp566_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp566_138 () (_ BitVec 64))
(declare-fun temp566_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp566_140 () (_ BitVec 64))
(declare-fun temp566_141 () (_ BitVec 64))
(declare-fun temp566_142 () (_ BitVec 64))
(declare-fun temp566_143 () (_ BitVec 64))
(declare-fun temp566_144 () (_ BitVec 64))
(declare-fun temp566_145 () (_ BitVec 64))
(declare-fun temp566_146 () (_ BitVec 64))
(declare-fun temp566_147 () (_ BitVec 64))
(declare-fun temp566_148 () (_ BitVec 64))
(declare-fun temp566_149 () (_ BitVec 64))
(declare-fun temp566_150 () (_ BitVec 64))
(declare-fun temp566_151 () (_ BitVec 64))
(declare-fun temp566_152 () (_ BitVec 64))
(declare-fun temp566_153 () (_ BitVec 64))
(declare-fun temp566_154 () (_ BitVec 64))
(declare-fun temp566_155 () (_ BitVec 64))
(declare-fun temp566_157 () (_ BitVec 64))
(declare-fun temp566_158 () (_ BitVec 64))
(declare-fun temp566_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp566_159 () (_ BitVec 64))
(declare-fun temp566_160 () (_ BitVec 64))
(declare-fun temp566_162 () (_ BitVec 64))
(declare-fun temp566_163 () (_ BitVec 64))
(declare-fun temp566_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp566_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp566_165 () (_ BitVec 64))
(declare-fun temp566_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp566_167 () (_ BitVec 64))
(declare-fun temp566_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp566_169 () (_ BitVec 64))
(declare-fun temp566_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp566_171 () (_ BitVec 64))
(declare-fun temp566_172 () (_ BitVec 64))
(declare-fun temp566_173 () (_ BitVec 64))
(declare-fun temp566_174 () (_ BitVec 64))
(declare-fun temp566_175 () (_ BitVec 64))
(declare-fun temp566_176 () (_ BitVec 64))
(declare-fun temp566_177 () (_ BitVec 64))
(declare-fun temp566_178 () (_ BitVec 64))
(declare-fun temp566_179 () (_ BitVec 64))
(declare-fun temp566_180 () (_ BitVec 64))
(declare-fun temp566_181 () (_ BitVec 64))
(declare-fun temp566_182 () (_ BitVec 64))
(declare-fun temp566_183 () (_ BitVec 64))
(declare-fun temp566_184 () (_ BitVec 64))
(declare-fun temp566_185 () (_ BitVec 64))
(declare-fun temp566_186 () (_ BitVec 64))
(declare-fun temp566_187 () (_ BitVec 64))
(declare-fun temp566_188 () (_ BitVec 64))
(declare-fun temp566_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp566_190 () (_ BitVec 64))
(declare-fun temp566_192 () (_ BitVec 64))
(declare-fun temp566_193 () (_ BitVec 64))
(declare-fun temp566_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp566_194 () (_ BitVec 64))
(declare-fun temp566_195 () (_ BitVec 64))
(declare-fun temp566_197 () (_ BitVec 64))
(declare-fun temp566_198 () (_ BitVec 64))
(declare-fun temp566_196 () (_ BitVec 64))
(declare-fun temp566_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp566_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp566_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp566_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp566_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp566_204 () (_ BitVec 64))
(declare-fun temp566_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp566_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp566_207 () (_ BitVec 64))
(declare-fun temp566_208 () (_ BitVec 64))
(declare-fun temp566_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp566_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp566_211 () (_ BitVec 64))
(declare-fun temp566_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp566_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp566_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4469136 () (_ BitVec 64))
(declare-fun var4731280 () (_ BitVec 64))
(declare-fun temp566_215 () (_ BitVec 64))
(declare-fun var212414 () (_ BitVec 64))
(declare-fun temp566_216 () (_ BitVec 64))
(declare-fun temp566_217 () (_ BitVec 64))
(declare-fun var5060227 () (_ BitVec 64))
(declare-fun var5125772 () (_ BitVec 64))
(declare-fun temp566_218 () (_ BitVec 64))
(assert (= temp566_1 #x0000000000000001))
(assert (= var77203 temp566_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp566_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp566_2)))
(assert (= temp566_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp566_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp566_4 #x0000000000000000))
(assert (= var210941 temp566_4))
(assert (= temp566_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp566_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp566_6 #x0000000000000000))
(assert (= var210986 temp566_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp566_7 #x0000000000000000))
(assert (= temp566_8 temp566_7))
(assert (= temp566_9 (select ARGNAME_padding_NAMEEND_VAL temp566_8)))
(assert (= temp566_10 #x0000000000000001))
(assert (= temp566_11 temp566_10))
(assert (= temp566_12 (select ARGNAME_padding_NAMEEND_VAL temp566_11)))
(assert (= temp566_13 #x0000000000000002))
(assert (= temp566_14 temp566_13))
(assert (= temp566_15 (select ARGNAME_padding_NAMEEND_VAL temp566_14)))
(assert (= temp566_16 #x0000000000000003))
(assert (= temp566_17 temp566_16))
(assert (= temp566_18 (select ARGNAME_padding_NAMEEND_VAL temp566_17)))
(assert (= temp566_19 #x0000000000000004))
(assert (= temp566_20 temp566_19))
(assert (= temp566_21 (select ARGNAME_padding_NAMEEND_VAL temp566_20)))
(assert (= temp566_22 #x0000000000000005))
(assert (= temp566_23 temp566_22))
(assert (= temp566_24 (select ARGNAME_padding_NAMEEND_VAL temp566_23)))
(assert (= temp566_25 #x0000000000000000))
(assert (= temp566_26 #x0000000000000000))
(assert (= temp566_27 temp566_26))
(assert (= temp566_28 (select ARGNAME_padding_NAMEEND_VAL temp566_27)))
(assert (= temp566_29 #x0000000000000000))
(assert (= temp566_30 #x0000000000000001))
(assert (= temp566_31 temp566_30))
(assert (= temp566_32 (select ARGNAME_padding_NAMEEND_VAL temp566_31)))
(assert (= temp566_33 #x0000000000000000))
(assert (= temp566_34 #x0000000000000002))
(assert (= temp566_35 temp566_34))
(assert (= temp566_36 (select ARGNAME_padding_NAMEEND_VAL temp566_35)))
(assert (= temp566_37 #x0000000000000000))
(assert (= temp566_38 #x0000000000000003))
(assert (= temp566_39 temp566_38))
(assert (= temp566_40 (select ARGNAME_padding_NAMEEND_VAL temp566_39)))
(assert (= temp566_41 #x0000000000000000))
(assert (= temp566_42 #x0000000000000004))
(assert (= temp566_43 temp566_42))
(assert (= temp566_44 (select ARGNAME_padding_NAMEEND_VAL temp566_43)))
(assert (= temp566_45 #x0000000000000000))
(assert (= temp566_46 #x0000000000000005))
(assert (= temp566_47 temp566_46))
(assert (= temp566_48 (select ARGNAME_padding_NAMEEND_VAL temp566_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp566_28 temp566_25)
             (bvslt temp566_32 temp566_29)
             (bvslt temp566_36 temp566_33)
             (bvslt temp566_40 temp566_37)
             (bvslt temp566_44 temp566_41)
             (bvslt temp566_48 temp566_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp566_49 #x0000000000000000))
(assert (= var1191714 temp566_49))
(assert (= temp566_50 #x0000000000000000))
(assert (= temp566_51 temp566_50))
(assert (= temp566_52 (select ARGNAME_output_padding_NAMEEND_VAL temp566_51)))
(assert (= temp566_53 #x0000000000000001))
(assert (= temp566_54 temp566_53))
(assert (= temp566_55 (select ARGNAME_output_padding_NAMEEND_VAL temp566_54)))
(assert (= temp566_56 #x0000000000000002))
(assert (= temp566_57 temp566_56))
(assert (= temp566_58 (select ARGNAME_output_padding_NAMEEND_VAL temp566_57)))
(assert (= temp566_59 #x0000000000000003))
(assert (= temp566_60 temp566_59))
(assert (= temp566_61 (select ARGNAME_output_padding_NAMEEND_VAL temp566_60)))
(assert (= temp566_62 #x0000000000000004))
(assert (= temp566_63 temp566_62))
(assert (= temp566_64 (select ARGNAME_output_padding_NAMEEND_VAL temp566_63)))
(assert (= temp566_65 #x0000000000000005))
(assert (= temp566_66 temp566_65))
(assert (= temp566_67 (select ARGNAME_output_padding_NAMEEND_VAL temp566_66)))
(assert (= temp566_68 #x0000000000000000))
(assert (= temp566_69 #x0000000000000000))
(assert (= temp566_70 temp566_69))
(assert (= temp566_71 (select ARGNAME_output_padding_NAMEEND_VAL temp566_70)))
(assert (= temp566_72 #x0000000000000000))
(assert (= temp566_73 #x0000000000000001))
(assert (= temp566_74 temp566_73))
(assert (= temp566_75 (select ARGNAME_output_padding_NAMEEND_VAL temp566_74)))
(assert (= temp566_76 #x0000000000000000))
(assert (= temp566_77 #x0000000000000002))
(assert (= temp566_78 temp566_77))
(assert (= temp566_79 (select ARGNAME_output_padding_NAMEEND_VAL temp566_78)))
(assert (= temp566_80 #x0000000000000000))
(assert (= temp566_81 #x0000000000000003))
(assert (= temp566_82 temp566_81))
(assert (= temp566_83 (select ARGNAME_output_padding_NAMEEND_VAL temp566_82)))
(assert (= temp566_84 #x0000000000000000))
(assert (= temp566_85 #x0000000000000004))
(assert (= temp566_86 temp566_85))
(assert (= temp566_87 (select ARGNAME_output_padding_NAMEEND_VAL temp566_86)))
(assert (= temp566_88 #x0000000000000000))
(assert (= temp566_89 #x0000000000000005))
(assert (= temp566_90 temp566_89))
(assert (= temp566_91 (select ARGNAME_output_padding_NAMEEND_VAL temp566_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp566_71 temp566_68)
             (bvslt temp566_75 temp566_72)
             (bvslt temp566_79 temp566_76)
             (bvslt temp566_83 temp566_80)
             (bvslt temp566_87 temp566_84)
             (bvslt temp566_91 temp566_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp566_92 #x0000000000000000))
(assert (= var1191725 temp566_92))
(assert (= temp566_93 #x0000000000000000))
(assert (= temp566_94 temp566_93))
(assert (= temp566_95 (select ARGNAME_stride_NAMEEND_VAL temp566_94)))
(assert (= temp566_96 #x0000000000000001))
(assert (= temp566_97 temp566_96))
(assert (= temp566_98 (select ARGNAME_stride_NAMEEND_VAL temp566_97)))
(assert (= temp566_99 #x0000000000000002))
(assert (= temp566_100 temp566_99))
(assert (= temp566_101 (select ARGNAME_stride_NAMEEND_VAL temp566_100)))
(assert (= temp566_102 #x0000000000000003))
(assert (= temp566_103 temp566_102))
(assert (= temp566_104 (select ARGNAME_stride_NAMEEND_VAL temp566_103)))
(assert (= temp566_105 #x0000000000000004))
(assert (= temp566_106 temp566_105))
(assert (= temp566_107 (select ARGNAME_stride_NAMEEND_VAL temp566_106)))
(assert (= temp566_108 #x0000000000000005))
(assert (= temp566_109 temp566_108))
(assert (= temp566_110 (select ARGNAME_stride_NAMEEND_VAL temp566_109)))
(assert (= temp566_111 #x0000000000000000))
(assert (= temp566_112 #x0000000000000000))
(assert (= temp566_113 temp566_112))
(assert (= temp566_114 (select ARGNAME_stride_NAMEEND_VAL temp566_113)))
(assert (= temp566_115 #x0000000000000000))
(assert (= temp566_116 #x0000000000000001))
(assert (= temp566_117 temp566_116))
(assert (= temp566_118 (select ARGNAME_stride_NAMEEND_VAL temp566_117)))
(assert (= temp566_119 #x0000000000000000))
(assert (= temp566_120 #x0000000000000002))
(assert (= temp566_121 temp566_120))
(assert (= temp566_122 (select ARGNAME_stride_NAMEEND_VAL temp566_121)))
(assert (= temp566_123 #x0000000000000000))
(assert (= temp566_124 #x0000000000000003))
(assert (= temp566_125 temp566_124))
(assert (= temp566_126 (select ARGNAME_stride_NAMEEND_VAL temp566_125)))
(assert (= temp566_127 #x0000000000000000))
(assert (= temp566_128 #x0000000000000004))
(assert (= temp566_129 temp566_128))
(assert (= temp566_130 (select ARGNAME_stride_NAMEEND_VAL temp566_129)))
(assert (= temp566_131 #x0000000000000000))
(assert (= temp566_132 #x0000000000000005))
(assert (= temp566_133 temp566_132))
(assert (= temp566_134 (select ARGNAME_stride_NAMEEND_VAL temp566_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp566_114 temp566_111)
             (bvsle temp566_118 temp566_115)
             (bvsle temp566_122 temp566_119)
             (bvsle temp566_126 temp566_123)
             (bvsle temp566_130 temp566_127)
             (bvsle temp566_134 temp566_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp566_135 #x0000000000000000))
(assert (= var1191735 temp566_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp566_136 #x0000000000000001))
(assert (= var1191747 temp566_136))
(assert (= temp566_137 #x0000000000000000))
(assert (= var1179826 temp566_137))
(assert (= temp566_138 #x0000000000000000))
(assert (= temp566_139 temp566_138))
(assert (= temp566_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp566_139)))
(assert (= temp566_141 #x0000000000000001))
(assert (= temp566_142 temp566_141))
(assert (= temp566_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp566_142)))
(assert (= temp566_144 #x0000000000000002))
(assert (= temp566_145 temp566_144))
(assert (= temp566_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp566_145)))
(assert (= temp566_147 #x0000000000000003))
(assert (= temp566_148 temp566_147))
(assert (= temp566_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp566_148)))
(assert (= temp566_150 #x0000000000000004))
(assert (= temp566_151 temp566_150))
(assert (= temp566_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp566_151)))
(assert (= temp566_153 #x0000000000000005))
(assert (= temp566_154 temp566_153))
(assert (= temp566_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp566_154)))
(assert (= temp566_157 var1179826))
(assert (= temp566_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp566_157)))
(assert (= temp566_156 temp566_158))
(assert (= var1191780
   (ite (bvslt temp566_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp566_159 #x0000000000000000))
(assert (= var1191780 temp566_159))
(assert (= temp566_160 #x0000000000000000))
(assert (= var1179826 temp566_160))
(assert (= temp566_162 var1179826))
(assert (= temp566_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp566_162)))
(assert (= temp566_161 temp566_163))
(assert (= var1191802 (bvsmod temp566_161 ARGNAME_groups_NAMEEND)))
(assert (= temp566_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp566_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp566_165 #x0000000000000001))
(assert (= var1191803 temp566_165))
(assert (= temp566_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp566_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp566_167 #x0000000000000001))
(assert (= var1191823 temp566_167))
(assert (= temp566_168 #x0000000000000001))
(assert (= var1180714 temp566_168))
(assert (= temp566_169 #x0000000000000000))
(assert (= temp566_170 temp566_169))
(assert (= temp566_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp566_170)))
(assert (= temp566_172 #x0000000000000001))
(assert (= temp566_173 temp566_172))
(assert (= temp566_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp566_173)))
(assert (= temp566_175 #x0000000000000002))
(assert (= temp566_176 temp566_175))
(assert (= temp566_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp566_176)))
(assert (= temp566_178 #x0000000000000003))
(assert (= temp566_179 temp566_178))
(assert (= temp566_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp566_179)))
(assert (= temp566_181 #x0000000000000004))
(assert (= temp566_182 temp566_181))
(assert (= temp566_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp566_182)))
(assert (= temp566_184 #x0000000000000005))
(assert (= temp566_185 temp566_184))
(assert (= temp566_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp566_185)))
(assert (= temp566_187 #x0000000000000000))
(assert (= temp566_188
   (ite (bvslt var1180714 temp566_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp566_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp566_188)))
(assert (= var1191831 temp566_189))
(assert (bvslt (ite (bvslt var1180714 temp566_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp566_190 #x0000000000000001))
(assert (= var1180714 temp566_190))
(assert (= temp566_192 var1180714))
(assert (= temp566_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp566_192)))
(assert (= temp566_191 temp566_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp566_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp566_194 #x0000000000000001))
(assert (= var1191836 temp566_194))
(assert (= temp566_195 #x0000000000000000))
(assert (= var1179826 temp566_195))
(assert (= temp566_197 var1179826))
(assert (= temp566_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp566_197)))
(assert (= temp566_196 temp566_198))
(assert (= temp566_199 #x0000000000000002))
(assert (= var1586025 temp566_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp566_200 #x0000000000000001))
(assert (= var1191993 temp566_200))
(assert (= temp566_201 #x0000000000000001))
(assert (= var2700303 temp566_201))
(assert (= temp566_202 #x0000000000000001))
(assert (= var2962447 temp566_202))
(assert (= temp566_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp566_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp566_204 #x0000000000000001))
(assert (= var211058 temp566_204))
(assert (= temp566_205 #x0000000000000001))
(assert (= var211188 temp566_205))
(assert (= var3879401 var211188))
(assert (= temp566_206 #x0000000000000000))
(assert (= var3866802 temp566_206))
(assert (= temp566_207 #x0000000000000000))
(assert (= temp566_208
   (ite (bvslt var3866802 temp566_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp566_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp566_208)))
(assert (= var3879420 temp566_209))
(assert (bvslt (ite (bvslt var3866802 temp566_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp566_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp566_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp566_211 #x0000000000000001))
(assert (= var3879421 temp566_211))
(assert (= temp566_212 #x0000000000000000))
(assert (= var4079423 temp566_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp566_213 #x0000000000000002))
(assert (= var4208259 temp566_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp566_214 #x0000000000000000))
(assert (= var4273820 temp566_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4469136 var211201))
(assert (= var4731280 var211201))
(assert (= temp566_215 #x0000000000000001))
(assert (= var212414
   (ite (= ARGNAME_groups_NAMEEND temp566_215)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp566_216 #x0000000000000000))
(assert (= var212414 temp566_216))
(assert (= temp566_217 #x0000000000000002))
(assert (= var5060227 temp566_217))
(assert (= var5125772 var5060227))
(assert (= temp566_218 #x0000000000000001))
(assert (= var211058 temp566_218))
(model-add temp566_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp566_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp566_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp566_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





