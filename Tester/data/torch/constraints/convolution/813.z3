(declare-fun temp1084_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp1084_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1084_3 () (_ BitVec 64))
(declare-fun temp1084_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1084_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp1084_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1084_7 () (_ BitVec 64))
(declare-fun temp1084_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1084_9 () (_ BitVec 64))
(declare-fun temp1084_10 () (_ BitVec 64))
(declare-fun temp1084_11 () (_ BitVec 64))
(declare-fun temp1084_12 () (_ BitVec 64))
(declare-fun temp1084_13 () (_ BitVec 64))
(declare-fun temp1084_14 () (_ BitVec 64))
(declare-fun temp1084_15 () (_ BitVec 64))
(declare-fun temp1084_16 () (_ BitVec 64))
(declare-fun temp1084_17 () (_ BitVec 64))
(declare-fun temp1084_18 () (_ BitVec 64))
(declare-fun temp1084_19 () (_ BitVec 64))
(declare-fun temp1084_20 () (_ BitVec 64))
(declare-fun temp1084_21 () (_ BitVec 64))
(declare-fun temp1084_22 () (_ BitVec 64))
(declare-fun temp1084_23 () (_ BitVec 64))
(declare-fun temp1084_24 () (_ BitVec 64))
(declare-fun temp1084_25 () (_ BitVec 64))
(declare-fun temp1084_26 () (_ BitVec 64))
(declare-fun temp1084_27 () (_ BitVec 64))
(declare-fun temp1084_28 () (_ BitVec 64))
(declare-fun temp1084_29 () (_ BitVec 64))
(declare-fun temp1084_30 () (_ BitVec 64))
(declare-fun temp1084_31 () (_ BitVec 64))
(declare-fun temp1084_32 () (_ BitVec 64))
(declare-fun temp1084_33 () (_ BitVec 64))
(declare-fun temp1084_34 () (_ BitVec 64))
(declare-fun temp1084_35 () (_ BitVec 64))
(declare-fun temp1084_36 () (_ BitVec 64))
(declare-fun temp1084_37 () (_ BitVec 64))
(declare-fun temp1084_38 () (_ BitVec 64))
(declare-fun temp1084_39 () (_ BitVec 64))
(declare-fun temp1084_40 () (_ BitVec 64))
(declare-fun temp1084_41 () (_ BitVec 64))
(declare-fun temp1084_42 () (_ BitVec 64))
(declare-fun temp1084_43 () (_ BitVec 64))
(declare-fun temp1084_44 () (_ BitVec 64))
(declare-fun temp1084_45 () (_ BitVec 64))
(declare-fun temp1084_46 () (_ BitVec 64))
(declare-fun temp1084_47 () (_ BitVec 64))
(declare-fun temp1084_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp1084_49 () (_ BitVec 64))
(declare-fun temp1084_50 () (_ BitVec 64))
(declare-fun temp1084_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1084_52 () (_ BitVec 64))
(declare-fun temp1084_53 () (_ BitVec 64))
(declare-fun temp1084_54 () (_ BitVec 64))
(declare-fun temp1084_55 () (_ BitVec 64))
(declare-fun temp1084_56 () (_ BitVec 64))
(declare-fun temp1084_57 () (_ BitVec 64))
(declare-fun temp1084_58 () (_ BitVec 64))
(declare-fun temp1084_59 () (_ BitVec 64))
(declare-fun temp1084_60 () (_ BitVec 64))
(declare-fun temp1084_61 () (_ BitVec 64))
(declare-fun temp1084_62 () (_ BitVec 64))
(declare-fun temp1084_63 () (_ BitVec 64))
(declare-fun temp1084_64 () (_ BitVec 64))
(declare-fun temp1084_65 () (_ BitVec 64))
(declare-fun temp1084_66 () (_ BitVec 64))
(declare-fun temp1084_67 () (_ BitVec 64))
(declare-fun temp1084_68 () (_ BitVec 64))
(declare-fun temp1084_69 () (_ BitVec 64))
(declare-fun temp1084_70 () (_ BitVec 64))
(declare-fun temp1084_71 () (_ BitVec 64))
(declare-fun temp1084_72 () (_ BitVec 64))
(declare-fun temp1084_73 () (_ BitVec 64))
(declare-fun temp1084_74 () (_ BitVec 64))
(declare-fun temp1084_75 () (_ BitVec 64))
(declare-fun temp1084_76 () (_ BitVec 64))
(declare-fun temp1084_77 () (_ BitVec 64))
(declare-fun temp1084_78 () (_ BitVec 64))
(declare-fun temp1084_79 () (_ BitVec 64))
(declare-fun temp1084_80 () (_ BitVec 64))
(declare-fun temp1084_81 () (_ BitVec 64))
(declare-fun temp1084_82 () (_ BitVec 64))
(declare-fun temp1084_83 () (_ BitVec 64))
(declare-fun temp1084_84 () (_ BitVec 64))
(declare-fun temp1084_85 () (_ BitVec 64))
(declare-fun temp1084_86 () (_ BitVec 64))
(declare-fun temp1084_87 () (_ BitVec 64))
(declare-fun temp1084_88 () (_ BitVec 64))
(declare-fun temp1084_89 () (_ BitVec 64))
(declare-fun temp1084_90 () (_ BitVec 64))
(declare-fun temp1084_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp1084_92 () (_ BitVec 64))
(declare-fun temp1084_93 () (_ BitVec 64))
(declare-fun temp1084_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1084_95 () (_ BitVec 64))
(declare-fun temp1084_96 () (_ BitVec 64))
(declare-fun temp1084_97 () (_ BitVec 64))
(declare-fun temp1084_98 () (_ BitVec 64))
(declare-fun temp1084_99 () (_ BitVec 64))
(declare-fun temp1084_100 () (_ BitVec 64))
(declare-fun temp1084_101 () (_ BitVec 64))
(declare-fun temp1084_102 () (_ BitVec 64))
(declare-fun temp1084_103 () (_ BitVec 64))
(declare-fun temp1084_104 () (_ BitVec 64))
(declare-fun temp1084_105 () (_ BitVec 64))
(declare-fun temp1084_106 () (_ BitVec 64))
(declare-fun temp1084_107 () (_ BitVec 64))
(declare-fun temp1084_108 () (_ BitVec 64))
(declare-fun temp1084_109 () (_ BitVec 64))
(declare-fun temp1084_110 () (_ BitVec 64))
(declare-fun temp1084_111 () (_ BitVec 64))
(declare-fun temp1084_112 () (_ BitVec 64))
(declare-fun temp1084_113 () (_ BitVec 64))
(declare-fun temp1084_114 () (_ BitVec 64))
(declare-fun temp1084_115 () (_ BitVec 64))
(declare-fun temp1084_116 () (_ BitVec 64))
(declare-fun temp1084_117 () (_ BitVec 64))
(declare-fun temp1084_118 () (_ BitVec 64))
(declare-fun temp1084_119 () (_ BitVec 64))
(declare-fun temp1084_120 () (_ BitVec 64))
(declare-fun temp1084_121 () (_ BitVec 64))
(declare-fun temp1084_122 () (_ BitVec 64))
(declare-fun temp1084_123 () (_ BitVec 64))
(declare-fun temp1084_124 () (_ BitVec 64))
(declare-fun temp1084_125 () (_ BitVec 64))
(declare-fun temp1084_126 () (_ BitVec 64))
(declare-fun temp1084_127 () (_ BitVec 64))
(declare-fun temp1084_128 () (_ BitVec 64))
(declare-fun temp1084_129 () (_ BitVec 64))
(declare-fun temp1084_130 () (_ BitVec 64))
(declare-fun temp1084_131 () (_ BitVec 64))
(declare-fun temp1084_132 () (_ BitVec 64))
(declare-fun temp1084_133 () (_ BitVec 64))
(declare-fun temp1084_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp1084_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp1084_136 () (_ BitVec 64))
(declare-fun temp1084_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp1084_138 () (_ BitVec 64))
(declare-fun temp1084_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1084_140 () (_ BitVec 64))
(declare-fun temp1084_141 () (_ BitVec 64))
(declare-fun temp1084_142 () (_ BitVec 64))
(declare-fun temp1084_143 () (_ BitVec 64))
(declare-fun temp1084_144 () (_ BitVec 64))
(declare-fun temp1084_145 () (_ BitVec 64))
(declare-fun temp1084_146 () (_ BitVec 64))
(declare-fun temp1084_147 () (_ BitVec 64))
(declare-fun temp1084_148 () (_ BitVec 64))
(declare-fun temp1084_149 () (_ BitVec 64))
(declare-fun temp1084_150 () (_ BitVec 64))
(declare-fun temp1084_151 () (_ BitVec 64))
(declare-fun temp1084_152 () (_ BitVec 64))
(declare-fun temp1084_153 () (_ BitVec 64))
(declare-fun temp1084_154 () (_ BitVec 64))
(declare-fun temp1084_155 () (_ BitVec 64))
(declare-fun temp1084_157 () (_ BitVec 64))
(declare-fun temp1084_158 () (_ BitVec 64))
(declare-fun temp1084_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp1084_159 () (_ BitVec 64))
(declare-fun temp1084_160 () (_ BitVec 64))
(declare-fun temp1084_162 () (_ BitVec 64))
(declare-fun temp1084_163 () (_ BitVec 64))
(declare-fun temp1084_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp1084_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp1084_165 () (_ BitVec 64))
(declare-fun temp1084_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp1084_167 () (_ BitVec 64))
(declare-fun temp1084_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp1084_169 () (_ BitVec 64))
(declare-fun temp1084_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1084_171 () (_ BitVec 64))
(declare-fun temp1084_172 () (_ BitVec 64))
(declare-fun temp1084_173 () (_ BitVec 64))
(declare-fun temp1084_174 () (_ BitVec 64))
(declare-fun temp1084_175 () (_ BitVec 64))
(declare-fun temp1084_176 () (_ BitVec 64))
(declare-fun temp1084_177 () (_ BitVec 64))
(declare-fun temp1084_178 () (_ BitVec 64))
(declare-fun temp1084_179 () (_ BitVec 64))
(declare-fun temp1084_180 () (_ BitVec 64))
(declare-fun temp1084_181 () (_ BitVec 64))
(declare-fun temp1084_182 () (_ BitVec 64))
(declare-fun temp1084_183 () (_ BitVec 64))
(declare-fun temp1084_184 () (_ BitVec 64))
(declare-fun temp1084_185 () (_ BitVec 64))
(declare-fun temp1084_186 () (_ BitVec 64))
(declare-fun temp1084_187 () (_ BitVec 64))
(declare-fun temp1084_188 () (_ BitVec 64))
(declare-fun temp1084_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp1084_190 () (_ BitVec 64))
(declare-fun temp1084_192 () (_ BitVec 64))
(declare-fun temp1084_193 () (_ BitVec 64))
(declare-fun temp1084_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp1084_194 () (_ BitVec 64))
(declare-fun temp1084_195 () (_ BitVec 64))
(declare-fun temp1084_197 () (_ BitVec 64))
(declare-fun temp1084_198 () (_ BitVec 64))
(declare-fun temp1084_196 () (_ BitVec 64))
(declare-fun temp1084_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp1084_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp1084_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp1084_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp1084_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp1084_204 () (_ BitVec 64))
(declare-fun temp1084_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp1084_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp1084_207 () (_ BitVec 64))
(declare-fun temp1084_208 () (_ BitVec 64))
(declare-fun temp1084_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp1084_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp1084_211 () (_ BitVec 64))
(declare-fun temp1084_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp1084_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp1084_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4469136 () (_ BitVec 64))
(declare-fun var4731280 () (_ BitVec 64))
(declare-fun temp1084_215 () (_ BitVec 64))
(declare-fun var212414 () (_ BitVec 64))
(declare-fun temp1084_216 () (_ BitVec 64))
(declare-fun temp1084_217 () (_ BitVec 64))
(declare-fun var5060227 () (_ BitVec 64))
(declare-fun var5060229 () (_ BitVec 64))
(declare-fun var5125772 () (_ BitVec 64))
(declare-fun var5125773 () (_ BitVec 64))
(declare-fun temp1084_218 () (_ BitVec 64))
(declare-fun temp1084_219 () (_ BitVec 64))
(declare-fun var6173460 () (_ BitVec 64))
(declare-fun var6173427 () (_ BitVec 64))
(declare-fun var6041991 () (_ BitVec 64))
(declare-fun var6041987 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp1084_220 () (_ BitVec 64))
(assert (= temp1084_1 #x0000000000000001))
(assert (= var77203 temp1084_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp1084_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp1084_2)))
(assert (= temp1084_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1084_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1084_4 #x0000000000000000))
(assert (= var210941 temp1084_4))
(assert (= temp1084_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp1084_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1084_6 #x0000000000000000))
(assert (= var210986 temp1084_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp1084_7 #x0000000000000000))
(assert (= temp1084_8 temp1084_7))
(assert (= temp1084_9 (select ARGNAME_padding_NAMEEND_VAL temp1084_8)))
(assert (= temp1084_10 #x0000000000000001))
(assert (= temp1084_11 temp1084_10))
(assert (= temp1084_12 (select ARGNAME_padding_NAMEEND_VAL temp1084_11)))
(assert (= temp1084_13 #x0000000000000002))
(assert (= temp1084_14 temp1084_13))
(assert (= temp1084_15 (select ARGNAME_padding_NAMEEND_VAL temp1084_14)))
(assert (= temp1084_16 #x0000000000000003))
(assert (= temp1084_17 temp1084_16))
(assert (= temp1084_18 (select ARGNAME_padding_NAMEEND_VAL temp1084_17)))
(assert (= temp1084_19 #x0000000000000004))
(assert (= temp1084_20 temp1084_19))
(assert (= temp1084_21 (select ARGNAME_padding_NAMEEND_VAL temp1084_20)))
(assert (= temp1084_22 #x0000000000000005))
(assert (= temp1084_23 temp1084_22))
(assert (= temp1084_24 (select ARGNAME_padding_NAMEEND_VAL temp1084_23)))
(assert (= temp1084_25 #x0000000000000000))
(assert (= temp1084_26 #x0000000000000000))
(assert (= temp1084_27 temp1084_26))
(assert (= temp1084_28 (select ARGNAME_padding_NAMEEND_VAL temp1084_27)))
(assert (= temp1084_29 #x0000000000000000))
(assert (= temp1084_30 #x0000000000000001))
(assert (= temp1084_31 temp1084_30))
(assert (= temp1084_32 (select ARGNAME_padding_NAMEEND_VAL temp1084_31)))
(assert (= temp1084_33 #x0000000000000000))
(assert (= temp1084_34 #x0000000000000002))
(assert (= temp1084_35 temp1084_34))
(assert (= temp1084_36 (select ARGNAME_padding_NAMEEND_VAL temp1084_35)))
(assert (= temp1084_37 #x0000000000000000))
(assert (= temp1084_38 #x0000000000000003))
(assert (= temp1084_39 temp1084_38))
(assert (= temp1084_40 (select ARGNAME_padding_NAMEEND_VAL temp1084_39)))
(assert (= temp1084_41 #x0000000000000000))
(assert (= temp1084_42 #x0000000000000004))
(assert (= temp1084_43 temp1084_42))
(assert (= temp1084_44 (select ARGNAME_padding_NAMEEND_VAL temp1084_43)))
(assert (= temp1084_45 #x0000000000000000))
(assert (= temp1084_46 #x0000000000000005))
(assert (= temp1084_47 temp1084_46))
(assert (= temp1084_48 (select ARGNAME_padding_NAMEEND_VAL temp1084_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp1084_28 temp1084_25)
             (bvslt temp1084_32 temp1084_29)
             (bvslt temp1084_36 temp1084_33)
             (bvslt temp1084_40 temp1084_37)
             (bvslt temp1084_44 temp1084_41)
             (bvslt temp1084_48 temp1084_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1084_49 #x0000000000000000))
(assert (= var1191714 temp1084_49))
(assert (= temp1084_50 #x0000000000000000))
(assert (= temp1084_51 temp1084_50))
(assert (= temp1084_52 (select ARGNAME_output_padding_NAMEEND_VAL temp1084_51)))
(assert (= temp1084_53 #x0000000000000001))
(assert (= temp1084_54 temp1084_53))
(assert (= temp1084_55 (select ARGNAME_output_padding_NAMEEND_VAL temp1084_54)))
(assert (= temp1084_56 #x0000000000000002))
(assert (= temp1084_57 temp1084_56))
(assert (= temp1084_58 (select ARGNAME_output_padding_NAMEEND_VAL temp1084_57)))
(assert (= temp1084_59 #x0000000000000003))
(assert (= temp1084_60 temp1084_59))
(assert (= temp1084_61 (select ARGNAME_output_padding_NAMEEND_VAL temp1084_60)))
(assert (= temp1084_62 #x0000000000000004))
(assert (= temp1084_63 temp1084_62))
(assert (= temp1084_64 (select ARGNAME_output_padding_NAMEEND_VAL temp1084_63)))
(assert (= temp1084_65 #x0000000000000005))
(assert (= temp1084_66 temp1084_65))
(assert (= temp1084_67 (select ARGNAME_output_padding_NAMEEND_VAL temp1084_66)))
(assert (= temp1084_68 #x0000000000000000))
(assert (= temp1084_69 #x0000000000000000))
(assert (= temp1084_70 temp1084_69))
(assert (= temp1084_71 (select ARGNAME_output_padding_NAMEEND_VAL temp1084_70)))
(assert (= temp1084_72 #x0000000000000000))
(assert (= temp1084_73 #x0000000000000001))
(assert (= temp1084_74 temp1084_73))
(assert (= temp1084_75 (select ARGNAME_output_padding_NAMEEND_VAL temp1084_74)))
(assert (= temp1084_76 #x0000000000000000))
(assert (= temp1084_77 #x0000000000000002))
(assert (= temp1084_78 temp1084_77))
(assert (= temp1084_79 (select ARGNAME_output_padding_NAMEEND_VAL temp1084_78)))
(assert (= temp1084_80 #x0000000000000000))
(assert (= temp1084_81 #x0000000000000003))
(assert (= temp1084_82 temp1084_81))
(assert (= temp1084_83 (select ARGNAME_output_padding_NAMEEND_VAL temp1084_82)))
(assert (= temp1084_84 #x0000000000000000))
(assert (= temp1084_85 #x0000000000000004))
(assert (= temp1084_86 temp1084_85))
(assert (= temp1084_87 (select ARGNAME_output_padding_NAMEEND_VAL temp1084_86)))
(assert (= temp1084_88 #x0000000000000000))
(assert (= temp1084_89 #x0000000000000005))
(assert (= temp1084_90 temp1084_89))
(assert (= temp1084_91 (select ARGNAME_output_padding_NAMEEND_VAL temp1084_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp1084_71 temp1084_68)
             (bvslt temp1084_75 temp1084_72)
             (bvslt temp1084_79 temp1084_76)
             (bvslt temp1084_83 temp1084_80)
             (bvslt temp1084_87 temp1084_84)
             (bvslt temp1084_91 temp1084_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1084_92 #x0000000000000000))
(assert (= var1191725 temp1084_92))
(assert (= temp1084_93 #x0000000000000000))
(assert (= temp1084_94 temp1084_93))
(assert (= temp1084_95 (select ARGNAME_stride_NAMEEND_VAL temp1084_94)))
(assert (= temp1084_96 #x0000000000000001))
(assert (= temp1084_97 temp1084_96))
(assert (= temp1084_98 (select ARGNAME_stride_NAMEEND_VAL temp1084_97)))
(assert (= temp1084_99 #x0000000000000002))
(assert (= temp1084_100 temp1084_99))
(assert (= temp1084_101 (select ARGNAME_stride_NAMEEND_VAL temp1084_100)))
(assert (= temp1084_102 #x0000000000000003))
(assert (= temp1084_103 temp1084_102))
(assert (= temp1084_104 (select ARGNAME_stride_NAMEEND_VAL temp1084_103)))
(assert (= temp1084_105 #x0000000000000004))
(assert (= temp1084_106 temp1084_105))
(assert (= temp1084_107 (select ARGNAME_stride_NAMEEND_VAL temp1084_106)))
(assert (= temp1084_108 #x0000000000000005))
(assert (= temp1084_109 temp1084_108))
(assert (= temp1084_110 (select ARGNAME_stride_NAMEEND_VAL temp1084_109)))
(assert (= temp1084_111 #x0000000000000000))
(assert (= temp1084_112 #x0000000000000000))
(assert (= temp1084_113 temp1084_112))
(assert (= temp1084_114 (select ARGNAME_stride_NAMEEND_VAL temp1084_113)))
(assert (= temp1084_115 #x0000000000000000))
(assert (= temp1084_116 #x0000000000000001))
(assert (= temp1084_117 temp1084_116))
(assert (= temp1084_118 (select ARGNAME_stride_NAMEEND_VAL temp1084_117)))
(assert (= temp1084_119 #x0000000000000000))
(assert (= temp1084_120 #x0000000000000002))
(assert (= temp1084_121 temp1084_120))
(assert (= temp1084_122 (select ARGNAME_stride_NAMEEND_VAL temp1084_121)))
(assert (= temp1084_123 #x0000000000000000))
(assert (= temp1084_124 #x0000000000000003))
(assert (= temp1084_125 temp1084_124))
(assert (= temp1084_126 (select ARGNAME_stride_NAMEEND_VAL temp1084_125)))
(assert (= temp1084_127 #x0000000000000000))
(assert (= temp1084_128 #x0000000000000004))
(assert (= temp1084_129 temp1084_128))
(assert (= temp1084_130 (select ARGNAME_stride_NAMEEND_VAL temp1084_129)))
(assert (= temp1084_131 #x0000000000000000))
(assert (= temp1084_132 #x0000000000000005))
(assert (= temp1084_133 temp1084_132))
(assert (= temp1084_134 (select ARGNAME_stride_NAMEEND_VAL temp1084_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp1084_114 temp1084_111)
             (bvsle temp1084_118 temp1084_115)
             (bvsle temp1084_122 temp1084_119)
             (bvsle temp1084_126 temp1084_123)
             (bvsle temp1084_130 temp1084_127)
             (bvsle temp1084_134 temp1084_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1084_135 #x0000000000000000))
(assert (= var1191735 temp1084_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1084_136 #x0000000000000001))
(assert (= var1191747 temp1084_136))
(assert (= temp1084_137 #x0000000000000000))
(assert (= var1179826 temp1084_137))
(assert (= temp1084_138 #x0000000000000000))
(assert (= temp1084_139 temp1084_138))
(assert (= temp1084_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1084_139)))
(assert (= temp1084_141 #x0000000000000001))
(assert (= temp1084_142 temp1084_141))
(assert (= temp1084_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1084_142)))
(assert (= temp1084_144 #x0000000000000002))
(assert (= temp1084_145 temp1084_144))
(assert (= temp1084_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1084_145)))
(assert (= temp1084_147 #x0000000000000003))
(assert (= temp1084_148 temp1084_147))
(assert (= temp1084_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1084_148)))
(assert (= temp1084_150 #x0000000000000004))
(assert (= temp1084_151 temp1084_150))
(assert (= temp1084_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1084_151)))
(assert (= temp1084_153 #x0000000000000005))
(assert (= temp1084_154 temp1084_153))
(assert (= temp1084_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1084_154)))
(assert (= temp1084_157 var1179826))
(assert (= temp1084_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1084_157)))
(assert (= temp1084_156 temp1084_158))
(assert (= var1191780
   (ite (bvslt temp1084_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1084_159 #x0000000000000000))
(assert (= var1191780 temp1084_159))
(assert (= temp1084_160 #x0000000000000000))
(assert (= var1179826 temp1084_160))
(assert (= temp1084_162 var1179826))
(assert (= temp1084_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1084_162)))
(assert (= temp1084_161 temp1084_163))
(assert (= var1191802 (bvsmod temp1084_161 ARGNAME_groups_NAMEEND)))
(assert (= temp1084_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp1084_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp1084_165 #x0000000000000001))
(assert (= var1191803 temp1084_165))
(assert (= temp1084_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp1084_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1084_167 #x0000000000000001))
(assert (= var1191823 temp1084_167))
(assert (= temp1084_168 #x0000000000000001))
(assert (= var1180714 temp1084_168))
(assert (= temp1084_169 #x0000000000000000))
(assert (= temp1084_170 temp1084_169))
(assert (= temp1084_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp1084_170)))
(assert (= temp1084_172 #x0000000000000001))
(assert (= temp1084_173 temp1084_172))
(assert (= temp1084_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp1084_173)))
(assert (= temp1084_175 #x0000000000000002))
(assert (= temp1084_176 temp1084_175))
(assert (= temp1084_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp1084_176)))
(assert (= temp1084_178 #x0000000000000003))
(assert (= temp1084_179 temp1084_178))
(assert (= temp1084_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp1084_179)))
(assert (= temp1084_181 #x0000000000000004))
(assert (= temp1084_182 temp1084_181))
(assert (= temp1084_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp1084_182)))
(assert (= temp1084_184 #x0000000000000005))
(assert (= temp1084_185 temp1084_184))
(assert (= temp1084_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp1084_185)))
(assert (= temp1084_187 #x0000000000000000))
(assert (= temp1084_188
   (ite (bvslt var1180714 temp1084_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp1084_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp1084_188)))
(assert (= var1191831 temp1084_189))
(assert (bvslt (ite (bvslt var1180714 temp1084_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1084_190 #x0000000000000001))
(assert (= var1180714 temp1084_190))
(assert (= temp1084_192 var1180714))
(assert (= temp1084_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1084_192)))
(assert (= temp1084_191 temp1084_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp1084_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp1084_194 #x0000000000000001))
(assert (= var1191836 temp1084_194))
(assert (= temp1084_195 #x0000000000000000))
(assert (= var1179826 temp1084_195))
(assert (= temp1084_197 var1179826))
(assert (= temp1084_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1084_197)))
(assert (= temp1084_196 temp1084_198))
(assert (= temp1084_199 #x0000000000000002))
(assert (= var1586025 temp1084_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp1084_200 #x0000000000000001))
(assert (= var1191993 temp1084_200))
(assert (= temp1084_201 #x0000000000000001))
(assert (= var2700303 temp1084_201))
(assert (= temp1084_202 #x0000000000000001))
(assert (= var2962447 temp1084_202))
(assert (= temp1084_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1084_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1084_204 #x0000000000000001))
(assert (= var211058 temp1084_204))
(assert (= temp1084_205 #x0000000000000001))
(assert (= var211188 temp1084_205))
(assert (= var3879401 var211188))
(assert (= temp1084_206 #x0000000000000000))
(assert (= var3866802 temp1084_206))
(assert (= temp1084_207 #x0000000000000000))
(assert (= temp1084_208
   (ite (bvslt var3866802 temp1084_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp1084_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp1084_208)))
(assert (= var3879420 temp1084_209))
(assert (bvslt (ite (bvslt var3866802 temp1084_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1084_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp1084_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp1084_211 #x0000000000000001))
(assert (= var3879421 temp1084_211))
(assert (= temp1084_212 #x0000000000000000))
(assert (= var4079423 temp1084_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp1084_213 #x0000000000000002))
(assert (= var4208259 temp1084_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1084_214 #x0000000000000000))
(assert (= var4273820 temp1084_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4469136 var211201))
(assert (= var4731280 var211201))
(assert (= temp1084_215 #x0000000000000001))
(assert (= var212414
   (ite (= ARGNAME_groups_NAMEEND temp1084_215)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1084_216 #x0000000000000001))
(assert (= var212414 temp1084_216))
(assert (= temp1084_217 #x0000000000000002))
(assert (= var5060227 temp1084_217))
(assert (= var5060229 (bvsub ARGNAME_weight_NAMEEND_DIM var5060227)))
(assert (= var5125772 var5060227))
(assert (= var5125773 var5060229))
(assert (= temp1084_218 #x0000000000000001))
(assert (= var211058 temp1084_218))
(assert (= temp1084_219 #x0000000000000000))
(assert (= var6173460 temp1084_219))
(assert (= var6173427 var6173460))
(assert (= var6041991 var6173427))
(assert (= var6041987 var6041991))
(assert (= var212669 var6041987))
(assert (= temp1084_220 #x0000000000000000))
(assert (= var212669 temp1084_220))
(model-add temp1084_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp1084_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1084_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp1084_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




