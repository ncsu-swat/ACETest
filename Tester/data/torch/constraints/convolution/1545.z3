(declare-fun temp10854_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10854_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10854_3 () (_ BitVec 64))
(declare-fun temp10854_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10854_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10854_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10854_7 () (_ BitVec 64))
(declare-fun temp10854_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10854_9 () (_ BitVec 64))
(declare-fun temp10854_10 () (_ BitVec 64))
(declare-fun temp10854_11 () (_ BitVec 64))
(declare-fun temp10854_12 () (_ BitVec 64))
(declare-fun temp10854_13 () (_ BitVec 64))
(declare-fun temp10854_14 () (_ BitVec 64))
(declare-fun temp10854_15 () (_ BitVec 64))
(declare-fun temp10854_16 () (_ BitVec 64))
(declare-fun temp10854_17 () (_ BitVec 64))
(declare-fun temp10854_18 () (_ BitVec 64))
(declare-fun temp10854_19 () (_ BitVec 64))
(declare-fun temp10854_20 () (_ BitVec 64))
(declare-fun temp10854_21 () (_ BitVec 64))
(declare-fun temp10854_22 () (_ BitVec 64))
(declare-fun temp10854_23 () (_ BitVec 64))
(declare-fun temp10854_24 () (_ BitVec 64))
(declare-fun temp10854_25 () (_ BitVec 64))
(declare-fun temp10854_26 () (_ BitVec 64))
(declare-fun temp10854_27 () (_ BitVec 64))
(declare-fun temp10854_28 () (_ BitVec 64))
(declare-fun temp10854_29 () (_ BitVec 64))
(declare-fun temp10854_30 () (_ BitVec 64))
(declare-fun temp10854_31 () (_ BitVec 64))
(declare-fun temp10854_32 () (_ BitVec 64))
(declare-fun temp10854_33 () (_ BitVec 64))
(declare-fun temp10854_34 () (_ BitVec 64))
(declare-fun temp10854_35 () (_ BitVec 64))
(declare-fun temp10854_36 () (_ BitVec 64))
(declare-fun temp10854_37 () (_ BitVec 64))
(declare-fun temp10854_38 () (_ BitVec 64))
(declare-fun temp10854_39 () (_ BitVec 64))
(declare-fun temp10854_40 () (_ BitVec 64))
(declare-fun temp10854_41 () (_ BitVec 64))
(declare-fun temp10854_42 () (_ BitVec 64))
(declare-fun temp10854_43 () (_ BitVec 64))
(declare-fun temp10854_44 () (_ BitVec 64))
(declare-fun temp10854_45 () (_ BitVec 64))
(declare-fun temp10854_46 () (_ BitVec 64))
(declare-fun temp10854_47 () (_ BitVec 64))
(declare-fun temp10854_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10854_49 () (_ BitVec 64))
(declare-fun temp10854_50 () (_ BitVec 64))
(declare-fun temp10854_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10854_52 () (_ BitVec 64))
(declare-fun temp10854_53 () (_ BitVec 64))
(declare-fun temp10854_54 () (_ BitVec 64))
(declare-fun temp10854_55 () (_ BitVec 64))
(declare-fun temp10854_56 () (_ BitVec 64))
(declare-fun temp10854_57 () (_ BitVec 64))
(declare-fun temp10854_58 () (_ BitVec 64))
(declare-fun temp10854_59 () (_ BitVec 64))
(declare-fun temp10854_60 () (_ BitVec 64))
(declare-fun temp10854_61 () (_ BitVec 64))
(declare-fun temp10854_62 () (_ BitVec 64))
(declare-fun temp10854_63 () (_ BitVec 64))
(declare-fun temp10854_64 () (_ BitVec 64))
(declare-fun temp10854_65 () (_ BitVec 64))
(declare-fun temp10854_66 () (_ BitVec 64))
(declare-fun temp10854_67 () (_ BitVec 64))
(declare-fun temp10854_68 () (_ BitVec 64))
(declare-fun temp10854_69 () (_ BitVec 64))
(declare-fun temp10854_70 () (_ BitVec 64))
(declare-fun temp10854_71 () (_ BitVec 64))
(declare-fun temp10854_72 () (_ BitVec 64))
(declare-fun temp10854_73 () (_ BitVec 64))
(declare-fun temp10854_74 () (_ BitVec 64))
(declare-fun temp10854_75 () (_ BitVec 64))
(declare-fun temp10854_76 () (_ BitVec 64))
(declare-fun temp10854_77 () (_ BitVec 64))
(declare-fun temp10854_78 () (_ BitVec 64))
(declare-fun temp10854_79 () (_ BitVec 64))
(declare-fun temp10854_80 () (_ BitVec 64))
(declare-fun temp10854_81 () (_ BitVec 64))
(declare-fun temp10854_82 () (_ BitVec 64))
(declare-fun temp10854_83 () (_ BitVec 64))
(declare-fun temp10854_84 () (_ BitVec 64))
(declare-fun temp10854_85 () (_ BitVec 64))
(declare-fun temp10854_86 () (_ BitVec 64))
(declare-fun temp10854_87 () (_ BitVec 64))
(declare-fun temp10854_88 () (_ BitVec 64))
(declare-fun temp10854_89 () (_ BitVec 64))
(declare-fun temp10854_90 () (_ BitVec 64))
(declare-fun temp10854_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10854_92 () (_ BitVec 64))
(declare-fun temp10854_93 () (_ BitVec 64))
(declare-fun temp10854_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10854_95 () (_ BitVec 64))
(declare-fun temp10854_96 () (_ BitVec 64))
(declare-fun temp10854_97 () (_ BitVec 64))
(declare-fun temp10854_98 () (_ BitVec 64))
(declare-fun temp10854_99 () (_ BitVec 64))
(declare-fun temp10854_100 () (_ BitVec 64))
(declare-fun temp10854_101 () (_ BitVec 64))
(declare-fun temp10854_102 () (_ BitVec 64))
(declare-fun temp10854_103 () (_ BitVec 64))
(declare-fun temp10854_104 () (_ BitVec 64))
(declare-fun temp10854_105 () (_ BitVec 64))
(declare-fun temp10854_106 () (_ BitVec 64))
(declare-fun temp10854_107 () (_ BitVec 64))
(declare-fun temp10854_108 () (_ BitVec 64))
(declare-fun temp10854_109 () (_ BitVec 64))
(declare-fun temp10854_110 () (_ BitVec 64))
(declare-fun temp10854_111 () (_ BitVec 64))
(declare-fun temp10854_112 () (_ BitVec 64))
(declare-fun temp10854_113 () (_ BitVec 64))
(declare-fun temp10854_114 () (_ BitVec 64))
(declare-fun temp10854_115 () (_ BitVec 64))
(declare-fun temp10854_116 () (_ BitVec 64))
(declare-fun temp10854_117 () (_ BitVec 64))
(declare-fun temp10854_118 () (_ BitVec 64))
(declare-fun temp10854_119 () (_ BitVec 64))
(declare-fun temp10854_120 () (_ BitVec 64))
(declare-fun temp10854_121 () (_ BitVec 64))
(declare-fun temp10854_122 () (_ BitVec 64))
(declare-fun temp10854_123 () (_ BitVec 64))
(declare-fun temp10854_124 () (_ BitVec 64))
(declare-fun temp10854_125 () (_ BitVec 64))
(declare-fun temp10854_126 () (_ BitVec 64))
(declare-fun temp10854_127 () (_ BitVec 64))
(declare-fun temp10854_128 () (_ BitVec 64))
(declare-fun temp10854_129 () (_ BitVec 64))
(declare-fun temp10854_130 () (_ BitVec 64))
(declare-fun temp10854_131 () (_ BitVec 64))
(declare-fun temp10854_132 () (_ BitVec 64))
(declare-fun temp10854_133 () (_ BitVec 64))
(declare-fun temp10854_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10854_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10854_136 () (_ BitVec 64))
(declare-fun temp10854_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10854_138 () (_ BitVec 64))
(declare-fun temp10854_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10854_140 () (_ BitVec 64))
(declare-fun temp10854_141 () (_ BitVec 64))
(declare-fun temp10854_142 () (_ BitVec 64))
(declare-fun temp10854_143 () (_ BitVec 64))
(declare-fun temp10854_144 () (_ BitVec 64))
(declare-fun temp10854_145 () (_ BitVec 64))
(declare-fun temp10854_146 () (_ BitVec 64))
(declare-fun temp10854_147 () (_ BitVec 64))
(declare-fun temp10854_148 () (_ BitVec 64))
(declare-fun temp10854_149 () (_ BitVec 64))
(declare-fun temp10854_150 () (_ BitVec 64))
(declare-fun temp10854_151 () (_ BitVec 64))
(declare-fun temp10854_152 () (_ BitVec 64))
(declare-fun temp10854_153 () (_ BitVec 64))
(declare-fun temp10854_154 () (_ BitVec 64))
(declare-fun temp10854_155 () (_ BitVec 64))
(declare-fun temp10854_157 () (_ BitVec 64))
(declare-fun temp10854_158 () (_ BitVec 64))
(declare-fun temp10854_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10854_159 () (_ BitVec 64))
(declare-fun temp10854_160 () (_ BitVec 64))
(declare-fun temp10854_162 () (_ BitVec 64))
(declare-fun temp10854_163 () (_ BitVec 64))
(declare-fun temp10854_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10854_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10854_165 () (_ BitVec 64))
(declare-fun temp10854_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10854_167 () (_ BitVec 64))
(declare-fun temp10854_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10854_169 () (_ BitVec 64))
(declare-fun temp10854_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10854_171 () (_ BitVec 64))
(declare-fun temp10854_172 () (_ BitVec 64))
(declare-fun temp10854_173 () (_ BitVec 64))
(declare-fun temp10854_174 () (_ BitVec 64))
(declare-fun temp10854_175 () (_ BitVec 64))
(declare-fun temp10854_176 () (_ BitVec 64))
(declare-fun temp10854_177 () (_ BitVec 64))
(declare-fun temp10854_178 () (_ BitVec 64))
(declare-fun temp10854_179 () (_ BitVec 64))
(declare-fun temp10854_180 () (_ BitVec 64))
(declare-fun temp10854_181 () (_ BitVec 64))
(declare-fun temp10854_182 () (_ BitVec 64))
(declare-fun temp10854_183 () (_ BitVec 64))
(declare-fun temp10854_184 () (_ BitVec 64))
(declare-fun temp10854_185 () (_ BitVec 64))
(declare-fun temp10854_186 () (_ BitVec 64))
(declare-fun temp10854_187 () (_ BitVec 64))
(declare-fun temp10854_188 () (_ BitVec 64))
(declare-fun temp10854_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10854_190 () (_ BitVec 64))
(declare-fun temp10854_192 () (_ BitVec 64))
(declare-fun temp10854_193 () (_ BitVec 64))
(declare-fun temp10854_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10854_194 () (_ BitVec 64))
(declare-fun temp10854_195 () (_ BitVec 64))
(declare-fun temp10854_197 () (_ BitVec 64))
(declare-fun temp10854_198 () (_ BitVec 64))
(declare-fun temp10854_196 () (_ BitVec 64))
(declare-fun temp10854_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10854_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10854_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10854_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10854_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10854_204 () (_ BitVec 64))
(declare-fun temp10854_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10854_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10854_207 () (_ BitVec 64))
(declare-fun temp10854_208 () (_ BitVec 64))
(declare-fun temp10854_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10854_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10854_211 () (_ BitVec 64))
(declare-fun temp10854_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10854_213 () (_ BitVec 64))
(declare-fun temp10854_214 () (_ BitVec 64))
(declare-fun temp10854_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10854_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10854_217 () (_ BitVec 64))
(declare-fun temp10854_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10854_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10854_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var5452176 () (_ BitVec 64))
(declare-fun var5714320 () (_ BitVec 64))
(declare-fun temp10854_221 () (_ BitVec 64))
(declare-fun var6042000 () (_ BitVec 64))
(declare-fun temp10854_222 () (_ BitVec 64))
(assert (= temp10854_1 #x0000000000000001))
(assert (= var77203 temp10854_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10854_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10854_2)))
(assert (= temp10854_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10854_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10854_4 #x0000000000000000))
(assert (= var210941 temp10854_4))
(assert (= temp10854_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10854_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10854_6 #x0000000000000000))
(assert (= var210986 temp10854_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10854_7 #x0000000000000000))
(assert (= temp10854_8 temp10854_7))
(assert (= temp10854_9 (select ARGNAME_padding_NAMEEND_VAL temp10854_8)))
(assert (= temp10854_10 #x0000000000000001))
(assert (= temp10854_11 temp10854_10))
(assert (= temp10854_12 (select ARGNAME_padding_NAMEEND_VAL temp10854_11)))
(assert (= temp10854_13 #x0000000000000002))
(assert (= temp10854_14 temp10854_13))
(assert (= temp10854_15 (select ARGNAME_padding_NAMEEND_VAL temp10854_14)))
(assert (= temp10854_16 #x0000000000000003))
(assert (= temp10854_17 temp10854_16))
(assert (= temp10854_18 (select ARGNAME_padding_NAMEEND_VAL temp10854_17)))
(assert (= temp10854_19 #x0000000000000004))
(assert (= temp10854_20 temp10854_19))
(assert (= temp10854_21 (select ARGNAME_padding_NAMEEND_VAL temp10854_20)))
(assert (= temp10854_22 #x0000000000000005))
(assert (= temp10854_23 temp10854_22))
(assert (= temp10854_24 (select ARGNAME_padding_NAMEEND_VAL temp10854_23)))
(assert (= temp10854_25 #x0000000000000000))
(assert (= temp10854_26 #x0000000000000000))
(assert (= temp10854_27 temp10854_26))
(assert (= temp10854_28 (select ARGNAME_padding_NAMEEND_VAL temp10854_27)))
(assert (= temp10854_29 #x0000000000000000))
(assert (= temp10854_30 #x0000000000000001))
(assert (= temp10854_31 temp10854_30))
(assert (= temp10854_32 (select ARGNAME_padding_NAMEEND_VAL temp10854_31)))
(assert (= temp10854_33 #x0000000000000000))
(assert (= temp10854_34 #x0000000000000002))
(assert (= temp10854_35 temp10854_34))
(assert (= temp10854_36 (select ARGNAME_padding_NAMEEND_VAL temp10854_35)))
(assert (= temp10854_37 #x0000000000000000))
(assert (= temp10854_38 #x0000000000000003))
(assert (= temp10854_39 temp10854_38))
(assert (= temp10854_40 (select ARGNAME_padding_NAMEEND_VAL temp10854_39)))
(assert (= temp10854_41 #x0000000000000000))
(assert (= temp10854_42 #x0000000000000004))
(assert (= temp10854_43 temp10854_42))
(assert (= temp10854_44 (select ARGNAME_padding_NAMEEND_VAL temp10854_43)))
(assert (= temp10854_45 #x0000000000000000))
(assert (= temp10854_46 #x0000000000000005))
(assert (= temp10854_47 temp10854_46))
(assert (= temp10854_48 (select ARGNAME_padding_NAMEEND_VAL temp10854_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10854_28 temp10854_25)
             (bvslt temp10854_32 temp10854_29)
             (bvslt temp10854_36 temp10854_33)
             (bvslt temp10854_40 temp10854_37)
             (bvslt temp10854_44 temp10854_41)
             (bvslt temp10854_48 temp10854_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10854_49 #x0000000000000000))
(assert (= var1191714 temp10854_49))
(assert (= temp10854_50 #x0000000000000000))
(assert (= temp10854_51 temp10854_50))
(assert (= temp10854_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10854_51)))
(assert (= temp10854_53 #x0000000000000001))
(assert (= temp10854_54 temp10854_53))
(assert (= temp10854_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10854_54)))
(assert (= temp10854_56 #x0000000000000002))
(assert (= temp10854_57 temp10854_56))
(assert (= temp10854_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10854_57)))
(assert (= temp10854_59 #x0000000000000003))
(assert (= temp10854_60 temp10854_59))
(assert (= temp10854_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10854_60)))
(assert (= temp10854_62 #x0000000000000004))
(assert (= temp10854_63 temp10854_62))
(assert (= temp10854_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10854_63)))
(assert (= temp10854_65 #x0000000000000005))
(assert (= temp10854_66 temp10854_65))
(assert (= temp10854_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10854_66)))
(assert (= temp10854_68 #x0000000000000000))
(assert (= temp10854_69 #x0000000000000000))
(assert (= temp10854_70 temp10854_69))
(assert (= temp10854_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10854_70)))
(assert (= temp10854_72 #x0000000000000000))
(assert (= temp10854_73 #x0000000000000001))
(assert (= temp10854_74 temp10854_73))
(assert (= temp10854_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10854_74)))
(assert (= temp10854_76 #x0000000000000000))
(assert (= temp10854_77 #x0000000000000002))
(assert (= temp10854_78 temp10854_77))
(assert (= temp10854_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10854_78)))
(assert (= temp10854_80 #x0000000000000000))
(assert (= temp10854_81 #x0000000000000003))
(assert (= temp10854_82 temp10854_81))
(assert (= temp10854_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10854_82)))
(assert (= temp10854_84 #x0000000000000000))
(assert (= temp10854_85 #x0000000000000004))
(assert (= temp10854_86 temp10854_85))
(assert (= temp10854_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10854_86)))
(assert (= temp10854_88 #x0000000000000000))
(assert (= temp10854_89 #x0000000000000005))
(assert (= temp10854_90 temp10854_89))
(assert (= temp10854_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10854_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10854_71 temp10854_68)
             (bvslt temp10854_75 temp10854_72)
             (bvslt temp10854_79 temp10854_76)
             (bvslt temp10854_83 temp10854_80)
             (bvslt temp10854_87 temp10854_84)
             (bvslt temp10854_91 temp10854_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10854_92 #x0000000000000000))
(assert (= var1191725 temp10854_92))
(assert (= temp10854_93 #x0000000000000000))
(assert (= temp10854_94 temp10854_93))
(assert (= temp10854_95 (select ARGNAME_stride_NAMEEND_VAL temp10854_94)))
(assert (= temp10854_96 #x0000000000000001))
(assert (= temp10854_97 temp10854_96))
(assert (= temp10854_98 (select ARGNAME_stride_NAMEEND_VAL temp10854_97)))
(assert (= temp10854_99 #x0000000000000002))
(assert (= temp10854_100 temp10854_99))
(assert (= temp10854_101 (select ARGNAME_stride_NAMEEND_VAL temp10854_100)))
(assert (= temp10854_102 #x0000000000000003))
(assert (= temp10854_103 temp10854_102))
(assert (= temp10854_104 (select ARGNAME_stride_NAMEEND_VAL temp10854_103)))
(assert (= temp10854_105 #x0000000000000004))
(assert (= temp10854_106 temp10854_105))
(assert (= temp10854_107 (select ARGNAME_stride_NAMEEND_VAL temp10854_106)))
(assert (= temp10854_108 #x0000000000000005))
(assert (= temp10854_109 temp10854_108))
(assert (= temp10854_110 (select ARGNAME_stride_NAMEEND_VAL temp10854_109)))
(assert (= temp10854_111 #x0000000000000000))
(assert (= temp10854_112 #x0000000000000000))
(assert (= temp10854_113 temp10854_112))
(assert (= temp10854_114 (select ARGNAME_stride_NAMEEND_VAL temp10854_113)))
(assert (= temp10854_115 #x0000000000000000))
(assert (= temp10854_116 #x0000000000000001))
(assert (= temp10854_117 temp10854_116))
(assert (= temp10854_118 (select ARGNAME_stride_NAMEEND_VAL temp10854_117)))
(assert (= temp10854_119 #x0000000000000000))
(assert (= temp10854_120 #x0000000000000002))
(assert (= temp10854_121 temp10854_120))
(assert (= temp10854_122 (select ARGNAME_stride_NAMEEND_VAL temp10854_121)))
(assert (= temp10854_123 #x0000000000000000))
(assert (= temp10854_124 #x0000000000000003))
(assert (= temp10854_125 temp10854_124))
(assert (= temp10854_126 (select ARGNAME_stride_NAMEEND_VAL temp10854_125)))
(assert (= temp10854_127 #x0000000000000000))
(assert (= temp10854_128 #x0000000000000004))
(assert (= temp10854_129 temp10854_128))
(assert (= temp10854_130 (select ARGNAME_stride_NAMEEND_VAL temp10854_129)))
(assert (= temp10854_131 #x0000000000000000))
(assert (= temp10854_132 #x0000000000000005))
(assert (= temp10854_133 temp10854_132))
(assert (= temp10854_134 (select ARGNAME_stride_NAMEEND_VAL temp10854_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10854_114 temp10854_111)
             (bvsle temp10854_118 temp10854_115)
             (bvsle temp10854_122 temp10854_119)
             (bvsle temp10854_126 temp10854_123)
             (bvsle temp10854_130 temp10854_127)
             (bvsle temp10854_134 temp10854_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10854_135 #x0000000000000000))
(assert (= var1191735 temp10854_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10854_136 #x0000000000000001))
(assert (= var1191747 temp10854_136))
(assert (= temp10854_137 #x0000000000000000))
(assert (= var1179826 temp10854_137))
(assert (= temp10854_138 #x0000000000000000))
(assert (= temp10854_139 temp10854_138))
(assert (= temp10854_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10854_139)))
(assert (= temp10854_141 #x0000000000000001))
(assert (= temp10854_142 temp10854_141))
(assert (= temp10854_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10854_142)))
(assert (= temp10854_144 #x0000000000000002))
(assert (= temp10854_145 temp10854_144))
(assert (= temp10854_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10854_145)))
(assert (= temp10854_147 #x0000000000000003))
(assert (= temp10854_148 temp10854_147))
(assert (= temp10854_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10854_148)))
(assert (= temp10854_150 #x0000000000000004))
(assert (= temp10854_151 temp10854_150))
(assert (= temp10854_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10854_151)))
(assert (= temp10854_153 #x0000000000000005))
(assert (= temp10854_154 temp10854_153))
(assert (= temp10854_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10854_154)))
(assert (= temp10854_157 var1179826))
(assert (= temp10854_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10854_157)))
(assert (= temp10854_156 temp10854_158))
(assert (= var1191780
   (ite (bvslt temp10854_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10854_159 #x0000000000000000))
(assert (= var1191780 temp10854_159))
(assert (= temp10854_160 #x0000000000000000))
(assert (= var1179826 temp10854_160))
(assert (= temp10854_162 var1179826))
(assert (= temp10854_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10854_162)))
(assert (= temp10854_161 temp10854_163))
(assert (= var1191802 (bvsmod temp10854_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10854_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10854_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10854_165 #x0000000000000001))
(assert (= var1191803 temp10854_165))
(assert (= temp10854_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10854_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10854_167 #x0000000000000001))
(assert (= var1191823 temp10854_167))
(assert (= temp10854_168 #x0000000000000001))
(assert (= var1180714 temp10854_168))
(assert (= temp10854_169 #x0000000000000000))
(assert (= temp10854_170 temp10854_169))
(assert (= temp10854_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10854_170)))
(assert (= temp10854_172 #x0000000000000001))
(assert (= temp10854_173 temp10854_172))
(assert (= temp10854_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10854_173)))
(assert (= temp10854_175 #x0000000000000002))
(assert (= temp10854_176 temp10854_175))
(assert (= temp10854_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10854_176)))
(assert (= temp10854_178 #x0000000000000003))
(assert (= temp10854_179 temp10854_178))
(assert (= temp10854_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10854_179)))
(assert (= temp10854_181 #x0000000000000004))
(assert (= temp10854_182 temp10854_181))
(assert (= temp10854_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10854_182)))
(assert (= temp10854_184 #x0000000000000005))
(assert (= temp10854_185 temp10854_184))
(assert (= temp10854_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10854_185)))
(assert (= temp10854_187 #x0000000000000000))
(assert (= temp10854_188
   (ite (bvslt var1180714 temp10854_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10854_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10854_188)))
(assert (= var1191831 temp10854_189))
(assert (bvslt (ite (bvslt var1180714 temp10854_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10854_190 #x0000000000000001))
(assert (= var1180714 temp10854_190))
(assert (= temp10854_192 var1180714))
(assert (= temp10854_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10854_192)))
(assert (= temp10854_191 temp10854_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10854_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10854_194 #x0000000000000001))
(assert (= var1191836 temp10854_194))
(assert (= temp10854_195 #x0000000000000000))
(assert (= var1179826 temp10854_195))
(assert (= temp10854_197 var1179826))
(assert (= temp10854_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10854_197)))
(assert (= temp10854_196 temp10854_198))
(assert (= temp10854_199 #x0000000000000002))
(assert (= var1586025 temp10854_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10854_200 #x0000000000000001))
(assert (= var1191993 temp10854_200))
(assert (= temp10854_201 #x0000000000000001))
(assert (= var2700303 temp10854_201))
(assert (= temp10854_202 #x0000000000000001))
(assert (= var2962447 temp10854_202))
(assert (= temp10854_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10854_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10854_204 #x0000000000000001))
(assert (= var211058 temp10854_204))
(assert (= temp10854_205 #x0000000000000001))
(assert (= var211188 temp10854_205))
(assert (= var3879401 var211188))
(assert (= temp10854_206 #x0000000000000000))
(assert (= var3866802 temp10854_206))
(assert (= temp10854_207 #x0000000000000000))
(assert (= temp10854_208
   (ite (bvslt var3866802 temp10854_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10854_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10854_208)))
(assert (= var3879420 temp10854_209))
(assert (bvslt (ite (bvslt var3866802 temp10854_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10854_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10854_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10854_211 #x0000000000000000))
(assert (= var3879421 temp10854_211))
(assert (= temp10854_212 #x0000000000000001))
(assert (= var3867690 temp10854_212))
(assert (= temp10854_213 #x0000000000000000))
(assert (= temp10854_214
   (ite (bvslt var3867690 temp10854_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10854_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10854_214)))
(assert (= var3879423 temp10854_215))
(assert (bvslt (ite (bvslt var3867690 temp10854_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10854_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10854_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10854_217 #x0000000000000001))
(assert (= var3879424 temp10854_217))
(assert (= temp10854_218 #x0000000000000000))
(assert (= var4133117 temp10854_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10854_219 #x0000000000000002))
(assert (= var4339331 temp10854_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10854_220 #x0000000000000000))
(assert (= var4404892 temp10854_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var5452176 var211201))
(assert (= var5714320 var211201))
(assert (= temp10854_221 #x0000000000000000))
(assert (= var6042000 temp10854_221))
(assert (= temp10854_222 #x0000000000000001))
(assert (= var211058 temp10854_222))
(model-add temp10854_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10854_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10854_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10854_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))



