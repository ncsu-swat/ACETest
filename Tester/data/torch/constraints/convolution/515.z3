(declare-fun temp686_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp686_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp686_3 () (_ BitVec 64))
(declare-fun temp686_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp686_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp686_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp686_7 () (_ BitVec 64))
(declare-fun temp686_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp686_9 () (_ BitVec 64))
(declare-fun temp686_10 () (_ BitVec 64))
(declare-fun temp686_11 () (_ BitVec 64))
(declare-fun temp686_12 () (_ BitVec 64))
(declare-fun temp686_13 () (_ BitVec 64))
(declare-fun temp686_14 () (_ BitVec 64))
(declare-fun temp686_15 () (_ BitVec 64))
(declare-fun temp686_16 () (_ BitVec 64))
(declare-fun temp686_17 () (_ BitVec 64))
(declare-fun temp686_18 () (_ BitVec 64))
(declare-fun temp686_19 () (_ BitVec 64))
(declare-fun temp686_20 () (_ BitVec 64))
(declare-fun temp686_21 () (_ BitVec 64))
(declare-fun temp686_22 () (_ BitVec 64))
(declare-fun temp686_23 () (_ BitVec 64))
(declare-fun temp686_24 () (_ BitVec 64))
(declare-fun temp686_25 () (_ BitVec 64))
(declare-fun temp686_26 () (_ BitVec 64))
(declare-fun temp686_27 () (_ BitVec 64))
(declare-fun temp686_28 () (_ BitVec 64))
(declare-fun temp686_29 () (_ BitVec 64))
(declare-fun temp686_30 () (_ BitVec 64))
(declare-fun temp686_31 () (_ BitVec 64))
(declare-fun temp686_32 () (_ BitVec 64))
(declare-fun temp686_33 () (_ BitVec 64))
(declare-fun temp686_34 () (_ BitVec 64))
(declare-fun temp686_35 () (_ BitVec 64))
(declare-fun temp686_36 () (_ BitVec 64))
(declare-fun temp686_37 () (_ BitVec 64))
(declare-fun temp686_38 () (_ BitVec 64))
(declare-fun temp686_39 () (_ BitVec 64))
(declare-fun temp686_40 () (_ BitVec 64))
(declare-fun temp686_41 () (_ BitVec 64))
(declare-fun temp686_42 () (_ BitVec 64))
(declare-fun temp686_43 () (_ BitVec 64))
(declare-fun temp686_44 () (_ BitVec 64))
(declare-fun temp686_45 () (_ BitVec 64))
(declare-fun temp686_46 () (_ BitVec 64))
(declare-fun temp686_47 () (_ BitVec 64))
(declare-fun temp686_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp686_49 () (_ BitVec 64))
(declare-fun temp686_50 () (_ BitVec 64))
(declare-fun temp686_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp686_52 () (_ BitVec 64))
(declare-fun temp686_53 () (_ BitVec 64))
(declare-fun temp686_54 () (_ BitVec 64))
(declare-fun temp686_55 () (_ BitVec 64))
(declare-fun temp686_56 () (_ BitVec 64))
(declare-fun temp686_57 () (_ BitVec 64))
(declare-fun temp686_58 () (_ BitVec 64))
(declare-fun temp686_59 () (_ BitVec 64))
(declare-fun temp686_60 () (_ BitVec 64))
(declare-fun temp686_61 () (_ BitVec 64))
(declare-fun temp686_62 () (_ BitVec 64))
(declare-fun temp686_63 () (_ BitVec 64))
(declare-fun temp686_64 () (_ BitVec 64))
(declare-fun temp686_65 () (_ BitVec 64))
(declare-fun temp686_66 () (_ BitVec 64))
(declare-fun temp686_67 () (_ BitVec 64))
(declare-fun temp686_68 () (_ BitVec 64))
(declare-fun temp686_69 () (_ BitVec 64))
(declare-fun temp686_70 () (_ BitVec 64))
(declare-fun temp686_71 () (_ BitVec 64))
(declare-fun temp686_72 () (_ BitVec 64))
(declare-fun temp686_73 () (_ BitVec 64))
(declare-fun temp686_74 () (_ BitVec 64))
(declare-fun temp686_75 () (_ BitVec 64))
(declare-fun temp686_76 () (_ BitVec 64))
(declare-fun temp686_77 () (_ BitVec 64))
(declare-fun temp686_78 () (_ BitVec 64))
(declare-fun temp686_79 () (_ BitVec 64))
(declare-fun temp686_80 () (_ BitVec 64))
(declare-fun temp686_81 () (_ BitVec 64))
(declare-fun temp686_82 () (_ BitVec 64))
(declare-fun temp686_83 () (_ BitVec 64))
(declare-fun temp686_84 () (_ BitVec 64))
(declare-fun temp686_85 () (_ BitVec 64))
(declare-fun temp686_86 () (_ BitVec 64))
(declare-fun temp686_87 () (_ BitVec 64))
(declare-fun temp686_88 () (_ BitVec 64))
(declare-fun temp686_89 () (_ BitVec 64))
(declare-fun temp686_90 () (_ BitVec 64))
(declare-fun temp686_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp686_92 () (_ BitVec 64))
(declare-fun temp686_93 () (_ BitVec 64))
(declare-fun temp686_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp686_95 () (_ BitVec 64))
(declare-fun temp686_96 () (_ BitVec 64))
(declare-fun temp686_97 () (_ BitVec 64))
(declare-fun temp686_98 () (_ BitVec 64))
(declare-fun temp686_99 () (_ BitVec 64))
(declare-fun temp686_100 () (_ BitVec 64))
(declare-fun temp686_101 () (_ BitVec 64))
(declare-fun temp686_102 () (_ BitVec 64))
(declare-fun temp686_103 () (_ BitVec 64))
(declare-fun temp686_104 () (_ BitVec 64))
(declare-fun temp686_105 () (_ BitVec 64))
(declare-fun temp686_106 () (_ BitVec 64))
(declare-fun temp686_107 () (_ BitVec 64))
(declare-fun temp686_108 () (_ BitVec 64))
(declare-fun temp686_109 () (_ BitVec 64))
(declare-fun temp686_110 () (_ BitVec 64))
(declare-fun temp686_111 () (_ BitVec 64))
(declare-fun temp686_112 () (_ BitVec 64))
(declare-fun temp686_113 () (_ BitVec 64))
(declare-fun temp686_114 () (_ BitVec 64))
(declare-fun temp686_115 () (_ BitVec 64))
(declare-fun temp686_116 () (_ BitVec 64))
(declare-fun temp686_117 () (_ BitVec 64))
(declare-fun temp686_118 () (_ BitVec 64))
(declare-fun temp686_119 () (_ BitVec 64))
(declare-fun temp686_120 () (_ BitVec 64))
(declare-fun temp686_121 () (_ BitVec 64))
(declare-fun temp686_122 () (_ BitVec 64))
(declare-fun temp686_123 () (_ BitVec 64))
(declare-fun temp686_124 () (_ BitVec 64))
(declare-fun temp686_125 () (_ BitVec 64))
(declare-fun temp686_126 () (_ BitVec 64))
(declare-fun temp686_127 () (_ BitVec 64))
(declare-fun temp686_128 () (_ BitVec 64))
(declare-fun temp686_129 () (_ BitVec 64))
(declare-fun temp686_130 () (_ BitVec 64))
(declare-fun temp686_131 () (_ BitVec 64))
(declare-fun temp686_132 () (_ BitVec 64))
(declare-fun temp686_133 () (_ BitVec 64))
(declare-fun temp686_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp686_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp686_136 () (_ BitVec 64))
(declare-fun temp686_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp686_138 () (_ BitVec 64))
(declare-fun temp686_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp686_140 () (_ BitVec 64))
(declare-fun temp686_141 () (_ BitVec 64))
(declare-fun temp686_142 () (_ BitVec 64))
(declare-fun temp686_143 () (_ BitVec 64))
(declare-fun temp686_144 () (_ BitVec 64))
(declare-fun temp686_145 () (_ BitVec 64))
(declare-fun temp686_146 () (_ BitVec 64))
(declare-fun temp686_147 () (_ BitVec 64))
(declare-fun temp686_148 () (_ BitVec 64))
(declare-fun temp686_149 () (_ BitVec 64))
(declare-fun temp686_150 () (_ BitVec 64))
(declare-fun temp686_151 () (_ BitVec 64))
(declare-fun temp686_152 () (_ BitVec 64))
(declare-fun temp686_153 () (_ BitVec 64))
(declare-fun temp686_154 () (_ BitVec 64))
(declare-fun temp686_155 () (_ BitVec 64))
(declare-fun temp686_157 () (_ BitVec 64))
(declare-fun temp686_158 () (_ BitVec 64))
(declare-fun temp686_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp686_159 () (_ BitVec 64))
(declare-fun temp686_160 () (_ BitVec 64))
(declare-fun temp686_162 () (_ BitVec 64))
(declare-fun temp686_163 () (_ BitVec 64))
(declare-fun temp686_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp686_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp686_165 () (_ BitVec 64))
(declare-fun temp686_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp686_167 () (_ BitVec 64))
(declare-fun temp686_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp686_169 () (_ BitVec 64))
(declare-fun temp686_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp686_171 () (_ BitVec 64))
(declare-fun temp686_172 () (_ BitVec 64))
(declare-fun temp686_173 () (_ BitVec 64))
(declare-fun temp686_174 () (_ BitVec 64))
(declare-fun temp686_175 () (_ BitVec 64))
(declare-fun temp686_176 () (_ BitVec 64))
(declare-fun temp686_177 () (_ BitVec 64))
(declare-fun temp686_178 () (_ BitVec 64))
(declare-fun temp686_179 () (_ BitVec 64))
(declare-fun temp686_180 () (_ BitVec 64))
(declare-fun temp686_181 () (_ BitVec 64))
(declare-fun temp686_182 () (_ BitVec 64))
(declare-fun temp686_183 () (_ BitVec 64))
(declare-fun temp686_184 () (_ BitVec 64))
(declare-fun temp686_185 () (_ BitVec 64))
(declare-fun temp686_186 () (_ BitVec 64))
(declare-fun temp686_187 () (_ BitVec 64))
(declare-fun temp686_188 () (_ BitVec 64))
(declare-fun temp686_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp686_190 () (_ BitVec 64))
(declare-fun temp686_192 () (_ BitVec 64))
(declare-fun temp686_193 () (_ BitVec 64))
(declare-fun temp686_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp686_194 () (_ BitVec 64))
(declare-fun temp686_195 () (_ BitVec 64))
(declare-fun temp686_197 () (_ BitVec 64))
(declare-fun temp686_198 () (_ BitVec 64))
(declare-fun temp686_196 () (_ BitVec 64))
(declare-fun temp686_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp686_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp686_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp686_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp686_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp686_204 () (_ BitVec 64))
(declare-fun temp686_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp686_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp686_207 () (_ BitVec 64))
(declare-fun temp686_208 () (_ BitVec 64))
(declare-fun temp686_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp686_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp686_211 () (_ BitVec 64))
(declare-fun temp686_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp686_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp686_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp686_216 () (_ BitVec 64))
(declare-fun temp686_215 () (_ BitVec 64))
(declare-fun temp686_217 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp686_218 () (_ BitVec 64))
(declare-fun temp686_219 () (_ BitVec 64))
(declare-fun temp686_220 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp686_221 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp686_222 () (_ BitVec 64))
(declare-fun temp686_224 () (_ BitVec 64))
(declare-fun temp686_223 () (_ BitVec 64))
(declare-fun temp686_225 () (_ BitVec 64))
(assert (= temp686_1 #x0000000000000001))
(assert (= var77203 temp686_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp686_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp686_2)))
(assert (= temp686_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp686_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp686_4 #x0000000000000000))
(assert (= var210941 temp686_4))
(assert (= temp686_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp686_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp686_6 #x0000000000000000))
(assert (= var210986 temp686_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp686_7 #x0000000000000000))
(assert (= temp686_8 temp686_7))
(assert (= temp686_9 (select ARGNAME_padding_NAMEEND_VAL temp686_8)))
(assert (= temp686_10 #x0000000000000001))
(assert (= temp686_11 temp686_10))
(assert (= temp686_12 (select ARGNAME_padding_NAMEEND_VAL temp686_11)))
(assert (= temp686_13 #x0000000000000002))
(assert (= temp686_14 temp686_13))
(assert (= temp686_15 (select ARGNAME_padding_NAMEEND_VAL temp686_14)))
(assert (= temp686_16 #x0000000000000003))
(assert (= temp686_17 temp686_16))
(assert (= temp686_18 (select ARGNAME_padding_NAMEEND_VAL temp686_17)))
(assert (= temp686_19 #x0000000000000004))
(assert (= temp686_20 temp686_19))
(assert (= temp686_21 (select ARGNAME_padding_NAMEEND_VAL temp686_20)))
(assert (= temp686_22 #x0000000000000005))
(assert (= temp686_23 temp686_22))
(assert (= temp686_24 (select ARGNAME_padding_NAMEEND_VAL temp686_23)))
(assert (= temp686_25 #x0000000000000000))
(assert (= temp686_26 #x0000000000000000))
(assert (= temp686_27 temp686_26))
(assert (= temp686_28 (select ARGNAME_padding_NAMEEND_VAL temp686_27)))
(assert (= temp686_29 #x0000000000000000))
(assert (= temp686_30 #x0000000000000001))
(assert (= temp686_31 temp686_30))
(assert (= temp686_32 (select ARGNAME_padding_NAMEEND_VAL temp686_31)))
(assert (= temp686_33 #x0000000000000000))
(assert (= temp686_34 #x0000000000000002))
(assert (= temp686_35 temp686_34))
(assert (= temp686_36 (select ARGNAME_padding_NAMEEND_VAL temp686_35)))
(assert (= temp686_37 #x0000000000000000))
(assert (= temp686_38 #x0000000000000003))
(assert (= temp686_39 temp686_38))
(assert (= temp686_40 (select ARGNAME_padding_NAMEEND_VAL temp686_39)))
(assert (= temp686_41 #x0000000000000000))
(assert (= temp686_42 #x0000000000000004))
(assert (= temp686_43 temp686_42))
(assert (= temp686_44 (select ARGNAME_padding_NAMEEND_VAL temp686_43)))
(assert (= temp686_45 #x0000000000000000))
(assert (= temp686_46 #x0000000000000005))
(assert (= temp686_47 temp686_46))
(assert (= temp686_48 (select ARGNAME_padding_NAMEEND_VAL temp686_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp686_28 temp686_25)
             (bvslt temp686_32 temp686_29)
             (bvslt temp686_36 temp686_33)
             (bvslt temp686_40 temp686_37)
             (bvslt temp686_44 temp686_41)
             (bvslt temp686_48 temp686_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp686_49 #x0000000000000000))
(assert (= var1191714 temp686_49))
(assert (= temp686_50 #x0000000000000000))
(assert (= temp686_51 temp686_50))
(assert (= temp686_52 (select ARGNAME_output_padding_NAMEEND_VAL temp686_51)))
(assert (= temp686_53 #x0000000000000001))
(assert (= temp686_54 temp686_53))
(assert (= temp686_55 (select ARGNAME_output_padding_NAMEEND_VAL temp686_54)))
(assert (= temp686_56 #x0000000000000002))
(assert (= temp686_57 temp686_56))
(assert (= temp686_58 (select ARGNAME_output_padding_NAMEEND_VAL temp686_57)))
(assert (= temp686_59 #x0000000000000003))
(assert (= temp686_60 temp686_59))
(assert (= temp686_61 (select ARGNAME_output_padding_NAMEEND_VAL temp686_60)))
(assert (= temp686_62 #x0000000000000004))
(assert (= temp686_63 temp686_62))
(assert (= temp686_64 (select ARGNAME_output_padding_NAMEEND_VAL temp686_63)))
(assert (= temp686_65 #x0000000000000005))
(assert (= temp686_66 temp686_65))
(assert (= temp686_67 (select ARGNAME_output_padding_NAMEEND_VAL temp686_66)))
(assert (= temp686_68 #x0000000000000000))
(assert (= temp686_69 #x0000000000000000))
(assert (= temp686_70 temp686_69))
(assert (= temp686_71 (select ARGNAME_output_padding_NAMEEND_VAL temp686_70)))
(assert (= temp686_72 #x0000000000000000))
(assert (= temp686_73 #x0000000000000001))
(assert (= temp686_74 temp686_73))
(assert (= temp686_75 (select ARGNAME_output_padding_NAMEEND_VAL temp686_74)))
(assert (= temp686_76 #x0000000000000000))
(assert (= temp686_77 #x0000000000000002))
(assert (= temp686_78 temp686_77))
(assert (= temp686_79 (select ARGNAME_output_padding_NAMEEND_VAL temp686_78)))
(assert (= temp686_80 #x0000000000000000))
(assert (= temp686_81 #x0000000000000003))
(assert (= temp686_82 temp686_81))
(assert (= temp686_83 (select ARGNAME_output_padding_NAMEEND_VAL temp686_82)))
(assert (= temp686_84 #x0000000000000000))
(assert (= temp686_85 #x0000000000000004))
(assert (= temp686_86 temp686_85))
(assert (= temp686_87 (select ARGNAME_output_padding_NAMEEND_VAL temp686_86)))
(assert (= temp686_88 #x0000000000000000))
(assert (= temp686_89 #x0000000000000005))
(assert (= temp686_90 temp686_89))
(assert (= temp686_91 (select ARGNAME_output_padding_NAMEEND_VAL temp686_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp686_71 temp686_68)
             (bvslt temp686_75 temp686_72)
             (bvslt temp686_79 temp686_76)
             (bvslt temp686_83 temp686_80)
             (bvslt temp686_87 temp686_84)
             (bvslt temp686_91 temp686_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp686_92 #x0000000000000000))
(assert (= var1191725 temp686_92))
(assert (= temp686_93 #x0000000000000000))
(assert (= temp686_94 temp686_93))
(assert (= temp686_95 (select ARGNAME_stride_NAMEEND_VAL temp686_94)))
(assert (= temp686_96 #x0000000000000001))
(assert (= temp686_97 temp686_96))
(assert (= temp686_98 (select ARGNAME_stride_NAMEEND_VAL temp686_97)))
(assert (= temp686_99 #x0000000000000002))
(assert (= temp686_100 temp686_99))
(assert (= temp686_101 (select ARGNAME_stride_NAMEEND_VAL temp686_100)))
(assert (= temp686_102 #x0000000000000003))
(assert (= temp686_103 temp686_102))
(assert (= temp686_104 (select ARGNAME_stride_NAMEEND_VAL temp686_103)))
(assert (= temp686_105 #x0000000000000004))
(assert (= temp686_106 temp686_105))
(assert (= temp686_107 (select ARGNAME_stride_NAMEEND_VAL temp686_106)))
(assert (= temp686_108 #x0000000000000005))
(assert (= temp686_109 temp686_108))
(assert (= temp686_110 (select ARGNAME_stride_NAMEEND_VAL temp686_109)))
(assert (= temp686_111 #x0000000000000000))
(assert (= temp686_112 #x0000000000000000))
(assert (= temp686_113 temp686_112))
(assert (= temp686_114 (select ARGNAME_stride_NAMEEND_VAL temp686_113)))
(assert (= temp686_115 #x0000000000000000))
(assert (= temp686_116 #x0000000000000001))
(assert (= temp686_117 temp686_116))
(assert (= temp686_118 (select ARGNAME_stride_NAMEEND_VAL temp686_117)))
(assert (= temp686_119 #x0000000000000000))
(assert (= temp686_120 #x0000000000000002))
(assert (= temp686_121 temp686_120))
(assert (= temp686_122 (select ARGNAME_stride_NAMEEND_VAL temp686_121)))
(assert (= temp686_123 #x0000000000000000))
(assert (= temp686_124 #x0000000000000003))
(assert (= temp686_125 temp686_124))
(assert (= temp686_126 (select ARGNAME_stride_NAMEEND_VAL temp686_125)))
(assert (= temp686_127 #x0000000000000000))
(assert (= temp686_128 #x0000000000000004))
(assert (= temp686_129 temp686_128))
(assert (= temp686_130 (select ARGNAME_stride_NAMEEND_VAL temp686_129)))
(assert (= temp686_131 #x0000000000000000))
(assert (= temp686_132 #x0000000000000005))
(assert (= temp686_133 temp686_132))
(assert (= temp686_134 (select ARGNAME_stride_NAMEEND_VAL temp686_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp686_114 temp686_111)
             (bvsle temp686_118 temp686_115)
             (bvsle temp686_122 temp686_119)
             (bvsle temp686_126 temp686_123)
             (bvsle temp686_130 temp686_127)
             (bvsle temp686_134 temp686_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp686_135 #x0000000000000000))
(assert (= var1191735 temp686_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp686_136 #x0000000000000001))
(assert (= var1191747 temp686_136))
(assert (= temp686_137 #x0000000000000000))
(assert (= var1179826 temp686_137))
(assert (= temp686_138 #x0000000000000000))
(assert (= temp686_139 temp686_138))
(assert (= temp686_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp686_139)))
(assert (= temp686_141 #x0000000000000001))
(assert (= temp686_142 temp686_141))
(assert (= temp686_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp686_142)))
(assert (= temp686_144 #x0000000000000002))
(assert (= temp686_145 temp686_144))
(assert (= temp686_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp686_145)))
(assert (= temp686_147 #x0000000000000003))
(assert (= temp686_148 temp686_147))
(assert (= temp686_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp686_148)))
(assert (= temp686_150 #x0000000000000004))
(assert (= temp686_151 temp686_150))
(assert (= temp686_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp686_151)))
(assert (= temp686_153 #x0000000000000005))
(assert (= temp686_154 temp686_153))
(assert (= temp686_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp686_154)))
(assert (= temp686_157 var1179826))
(assert (= temp686_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp686_157)))
(assert (= temp686_156 temp686_158))
(assert (= var1191780
   (ite (bvslt temp686_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp686_159 #x0000000000000000))
(assert (= var1191780 temp686_159))
(assert (= temp686_160 #x0000000000000000))
(assert (= var1179826 temp686_160))
(assert (= temp686_162 var1179826))
(assert (= temp686_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp686_162)))
(assert (= temp686_161 temp686_163))
(assert (= var1191802 (bvsmod temp686_161 ARGNAME_groups_NAMEEND)))
(assert (= temp686_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp686_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp686_165 #x0000000000000001))
(assert (= var1191803 temp686_165))
(assert (= temp686_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp686_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp686_167 #x0000000000000001))
(assert (= var1191823 temp686_167))
(assert (= temp686_168 #x0000000000000001))
(assert (= var1180714 temp686_168))
(assert (= temp686_169 #x0000000000000000))
(assert (= temp686_170 temp686_169))
(assert (= temp686_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp686_170)))
(assert (= temp686_172 #x0000000000000001))
(assert (= temp686_173 temp686_172))
(assert (= temp686_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp686_173)))
(assert (= temp686_175 #x0000000000000002))
(assert (= temp686_176 temp686_175))
(assert (= temp686_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp686_176)))
(assert (= temp686_178 #x0000000000000003))
(assert (= temp686_179 temp686_178))
(assert (= temp686_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp686_179)))
(assert (= temp686_181 #x0000000000000004))
(assert (= temp686_182 temp686_181))
(assert (= temp686_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp686_182)))
(assert (= temp686_184 #x0000000000000005))
(assert (= temp686_185 temp686_184))
(assert (= temp686_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp686_185)))
(assert (= temp686_187 #x0000000000000000))
(assert (= temp686_188
   (ite (bvslt var1180714 temp686_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp686_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp686_188)))
(assert (= var1191831 temp686_189))
(assert (bvslt (ite (bvslt var1180714 temp686_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp686_190 #x0000000000000001))
(assert (= var1180714 temp686_190))
(assert (= temp686_192 var1180714))
(assert (= temp686_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp686_192)))
(assert (= temp686_191 temp686_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp686_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp686_194 #x0000000000000001))
(assert (= var1191836 temp686_194))
(assert (= temp686_195 #x0000000000000000))
(assert (= var1179826 temp686_195))
(assert (= temp686_197 var1179826))
(assert (= temp686_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp686_197)))
(assert (= temp686_196 temp686_198))
(assert (= temp686_199 #x0000000000000002))
(assert (= var1586025 temp686_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp686_200 #x0000000000000001))
(assert (= var1191993 temp686_200))
(assert (= temp686_201 #x0000000000000001))
(assert (= var2700303 temp686_201))
(assert (= temp686_202 #x0000000000000001))
(assert (= var2962447 temp686_202))
(assert (= temp686_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp686_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp686_204 #x0000000000000001))
(assert (= var211058 temp686_204))
(assert (= temp686_205 #x0000000000000001))
(assert (= var211188 temp686_205))
(assert (= var3879401 var211188))
(assert (= temp686_206 #x0000000000000000))
(assert (= var3866802 temp686_206))
(assert (= temp686_207 #x0000000000000000))
(assert (= temp686_208
   (ite (bvslt var3866802 temp686_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp686_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp686_208)))
(assert (= var3879420 temp686_209))
(assert (bvslt (ite (bvslt var3866802 temp686_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp686_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp686_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp686_211 #x0000000000000001))
(assert (= var3879421 temp686_211))
(assert (= temp686_212 #x0000000000000000))
(assert (= var4079423 temp686_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp686_213 #x0000000000000002))
(assert (= var4208259 temp686_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp686_214 #x0000000000000000))
(assert (= var4273820 temp686_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp686_216 #xffffffffffffffff))
(assert (= temp686_215 temp686_216))
(assert (= temp686_217 #x0000000000000001))
(assert (= var197674 temp686_217))
(assert (= temp686_218 #x0000000000000000))
(assert (= temp686_219
   (ite (bvslt var197674 temp686_218)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp686_220 (select ARGNAME_input_NAMEEND_DIMSIZE temp686_219)))
(assert (= var211595 temp686_220))
(assert (bvslt (ite (bvslt var197674 temp686_218)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp686_221 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp686_221) #x0000000000000001 #x0000000000000000)))
(assert (= temp686_222 #x0000000000000001))
(assert (= var211596 temp686_222))
(assert (= temp686_224 #xffffffffffffffff))
(assert (= temp686_223 temp686_224))
(assert (= temp686_225 #x0000000000000001))
(assert (= var211058 temp686_225))
(model-add temp686_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp686_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp686_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp686_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





