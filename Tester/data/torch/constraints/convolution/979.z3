(declare-fun temp1305_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp1305_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1305_3 () (_ BitVec 64))
(declare-fun temp1305_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1305_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp1305_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1305_7 () (_ BitVec 64))
(declare-fun temp1305_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1305_9 () (_ BitVec 64))
(declare-fun temp1305_10 () (_ BitVec 64))
(declare-fun temp1305_11 () (_ BitVec 64))
(declare-fun temp1305_12 () (_ BitVec 64))
(declare-fun temp1305_13 () (_ BitVec 64))
(declare-fun temp1305_14 () (_ BitVec 64))
(declare-fun temp1305_15 () (_ BitVec 64))
(declare-fun temp1305_16 () (_ BitVec 64))
(declare-fun temp1305_17 () (_ BitVec 64))
(declare-fun temp1305_18 () (_ BitVec 64))
(declare-fun temp1305_19 () (_ BitVec 64))
(declare-fun temp1305_20 () (_ BitVec 64))
(declare-fun temp1305_21 () (_ BitVec 64))
(declare-fun temp1305_22 () (_ BitVec 64))
(declare-fun temp1305_23 () (_ BitVec 64))
(declare-fun temp1305_24 () (_ BitVec 64))
(declare-fun temp1305_25 () (_ BitVec 64))
(declare-fun temp1305_26 () (_ BitVec 64))
(declare-fun temp1305_27 () (_ BitVec 64))
(declare-fun temp1305_28 () (_ BitVec 64))
(declare-fun temp1305_29 () (_ BitVec 64))
(declare-fun temp1305_30 () (_ BitVec 64))
(declare-fun temp1305_31 () (_ BitVec 64))
(declare-fun temp1305_32 () (_ BitVec 64))
(declare-fun temp1305_33 () (_ BitVec 64))
(declare-fun temp1305_34 () (_ BitVec 64))
(declare-fun temp1305_35 () (_ BitVec 64))
(declare-fun temp1305_36 () (_ BitVec 64))
(declare-fun temp1305_37 () (_ BitVec 64))
(declare-fun temp1305_38 () (_ BitVec 64))
(declare-fun temp1305_39 () (_ BitVec 64))
(declare-fun temp1305_40 () (_ BitVec 64))
(declare-fun temp1305_41 () (_ BitVec 64))
(declare-fun temp1305_42 () (_ BitVec 64))
(declare-fun temp1305_43 () (_ BitVec 64))
(declare-fun temp1305_44 () (_ BitVec 64))
(declare-fun temp1305_45 () (_ BitVec 64))
(declare-fun temp1305_46 () (_ BitVec 64))
(declare-fun temp1305_47 () (_ BitVec 64))
(declare-fun temp1305_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp1305_49 () (_ BitVec 64))
(declare-fun temp1305_50 () (_ BitVec 64))
(declare-fun temp1305_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1305_52 () (_ BitVec 64))
(declare-fun temp1305_53 () (_ BitVec 64))
(declare-fun temp1305_54 () (_ BitVec 64))
(declare-fun temp1305_55 () (_ BitVec 64))
(declare-fun temp1305_56 () (_ BitVec 64))
(declare-fun temp1305_57 () (_ BitVec 64))
(declare-fun temp1305_58 () (_ BitVec 64))
(declare-fun temp1305_59 () (_ BitVec 64))
(declare-fun temp1305_60 () (_ BitVec 64))
(declare-fun temp1305_61 () (_ BitVec 64))
(declare-fun temp1305_62 () (_ BitVec 64))
(declare-fun temp1305_63 () (_ BitVec 64))
(declare-fun temp1305_64 () (_ BitVec 64))
(declare-fun temp1305_65 () (_ BitVec 64))
(declare-fun temp1305_66 () (_ BitVec 64))
(declare-fun temp1305_67 () (_ BitVec 64))
(declare-fun temp1305_68 () (_ BitVec 64))
(declare-fun temp1305_69 () (_ BitVec 64))
(declare-fun temp1305_70 () (_ BitVec 64))
(declare-fun temp1305_71 () (_ BitVec 64))
(declare-fun temp1305_72 () (_ BitVec 64))
(declare-fun temp1305_73 () (_ BitVec 64))
(declare-fun temp1305_74 () (_ BitVec 64))
(declare-fun temp1305_75 () (_ BitVec 64))
(declare-fun temp1305_76 () (_ BitVec 64))
(declare-fun temp1305_77 () (_ BitVec 64))
(declare-fun temp1305_78 () (_ BitVec 64))
(declare-fun temp1305_79 () (_ BitVec 64))
(declare-fun temp1305_80 () (_ BitVec 64))
(declare-fun temp1305_81 () (_ BitVec 64))
(declare-fun temp1305_82 () (_ BitVec 64))
(declare-fun temp1305_83 () (_ BitVec 64))
(declare-fun temp1305_84 () (_ BitVec 64))
(declare-fun temp1305_85 () (_ BitVec 64))
(declare-fun temp1305_86 () (_ BitVec 64))
(declare-fun temp1305_87 () (_ BitVec 64))
(declare-fun temp1305_88 () (_ BitVec 64))
(declare-fun temp1305_89 () (_ BitVec 64))
(declare-fun temp1305_90 () (_ BitVec 64))
(declare-fun temp1305_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp1305_92 () (_ BitVec 64))
(declare-fun temp1305_93 () (_ BitVec 64))
(declare-fun temp1305_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1305_95 () (_ BitVec 64))
(declare-fun temp1305_96 () (_ BitVec 64))
(declare-fun temp1305_97 () (_ BitVec 64))
(declare-fun temp1305_98 () (_ BitVec 64))
(declare-fun temp1305_99 () (_ BitVec 64))
(declare-fun temp1305_100 () (_ BitVec 64))
(declare-fun temp1305_101 () (_ BitVec 64))
(declare-fun temp1305_102 () (_ BitVec 64))
(declare-fun temp1305_103 () (_ BitVec 64))
(declare-fun temp1305_104 () (_ BitVec 64))
(declare-fun temp1305_105 () (_ BitVec 64))
(declare-fun temp1305_106 () (_ BitVec 64))
(declare-fun temp1305_107 () (_ BitVec 64))
(declare-fun temp1305_108 () (_ BitVec 64))
(declare-fun temp1305_109 () (_ BitVec 64))
(declare-fun temp1305_110 () (_ BitVec 64))
(declare-fun temp1305_111 () (_ BitVec 64))
(declare-fun temp1305_112 () (_ BitVec 64))
(declare-fun temp1305_113 () (_ BitVec 64))
(declare-fun temp1305_114 () (_ BitVec 64))
(declare-fun temp1305_115 () (_ BitVec 64))
(declare-fun temp1305_116 () (_ BitVec 64))
(declare-fun temp1305_117 () (_ BitVec 64))
(declare-fun temp1305_118 () (_ BitVec 64))
(declare-fun temp1305_119 () (_ BitVec 64))
(declare-fun temp1305_120 () (_ BitVec 64))
(declare-fun temp1305_121 () (_ BitVec 64))
(declare-fun temp1305_122 () (_ BitVec 64))
(declare-fun temp1305_123 () (_ BitVec 64))
(declare-fun temp1305_124 () (_ BitVec 64))
(declare-fun temp1305_125 () (_ BitVec 64))
(declare-fun temp1305_126 () (_ BitVec 64))
(declare-fun temp1305_127 () (_ BitVec 64))
(declare-fun temp1305_128 () (_ BitVec 64))
(declare-fun temp1305_129 () (_ BitVec 64))
(declare-fun temp1305_130 () (_ BitVec 64))
(declare-fun temp1305_131 () (_ BitVec 64))
(declare-fun temp1305_132 () (_ BitVec 64))
(declare-fun temp1305_133 () (_ BitVec 64))
(declare-fun temp1305_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp1305_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp1305_136 () (_ BitVec 64))
(declare-fun temp1305_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp1305_138 () (_ BitVec 64))
(declare-fun temp1305_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1305_140 () (_ BitVec 64))
(declare-fun temp1305_141 () (_ BitVec 64))
(declare-fun temp1305_142 () (_ BitVec 64))
(declare-fun temp1305_143 () (_ BitVec 64))
(declare-fun temp1305_144 () (_ BitVec 64))
(declare-fun temp1305_145 () (_ BitVec 64))
(declare-fun temp1305_146 () (_ BitVec 64))
(declare-fun temp1305_147 () (_ BitVec 64))
(declare-fun temp1305_148 () (_ BitVec 64))
(declare-fun temp1305_149 () (_ BitVec 64))
(declare-fun temp1305_150 () (_ BitVec 64))
(declare-fun temp1305_151 () (_ BitVec 64))
(declare-fun temp1305_152 () (_ BitVec 64))
(declare-fun temp1305_153 () (_ BitVec 64))
(declare-fun temp1305_154 () (_ BitVec 64))
(declare-fun temp1305_155 () (_ BitVec 64))
(declare-fun temp1305_157 () (_ BitVec 64))
(declare-fun temp1305_158 () (_ BitVec 64))
(declare-fun temp1305_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp1305_159 () (_ BitVec 64))
(declare-fun temp1305_160 () (_ BitVec 64))
(declare-fun temp1305_162 () (_ BitVec 64))
(declare-fun temp1305_163 () (_ BitVec 64))
(declare-fun temp1305_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp1305_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp1305_165 () (_ BitVec 64))
(declare-fun temp1305_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp1305_167 () (_ BitVec 64))
(declare-fun temp1305_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp1305_169 () (_ BitVec 64))
(declare-fun temp1305_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1305_171 () (_ BitVec 64))
(declare-fun temp1305_172 () (_ BitVec 64))
(declare-fun temp1305_173 () (_ BitVec 64))
(declare-fun temp1305_174 () (_ BitVec 64))
(declare-fun temp1305_175 () (_ BitVec 64))
(declare-fun temp1305_176 () (_ BitVec 64))
(declare-fun temp1305_177 () (_ BitVec 64))
(declare-fun temp1305_178 () (_ BitVec 64))
(declare-fun temp1305_179 () (_ BitVec 64))
(declare-fun temp1305_180 () (_ BitVec 64))
(declare-fun temp1305_181 () (_ BitVec 64))
(declare-fun temp1305_182 () (_ BitVec 64))
(declare-fun temp1305_183 () (_ BitVec 64))
(declare-fun temp1305_184 () (_ BitVec 64))
(declare-fun temp1305_185 () (_ BitVec 64))
(declare-fun temp1305_186 () (_ BitVec 64))
(declare-fun temp1305_187 () (_ BitVec 64))
(declare-fun temp1305_188 () (_ BitVec 64))
(declare-fun temp1305_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp1305_190 () (_ BitVec 64))
(declare-fun temp1305_192 () (_ BitVec 64))
(declare-fun temp1305_193 () (_ BitVec 64))
(declare-fun temp1305_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp1305_194 () (_ BitVec 64))
(declare-fun temp1305_195 () (_ BitVec 64))
(declare-fun temp1305_197 () (_ BitVec 64))
(declare-fun temp1305_198 () (_ BitVec 64))
(declare-fun temp1305_196 () (_ BitVec 64))
(declare-fun temp1305_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp1305_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp1305_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp1305_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp1305_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp1305_204 () (_ BitVec 64))
(declare-fun temp1305_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp1305_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp1305_207 () (_ BitVec 64))
(declare-fun temp1305_208 () (_ BitVec 64))
(declare-fun temp1305_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp1305_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp1305_211 () (_ BitVec 64))
(declare-fun temp1305_212 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp1305_213 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp1305_214 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp1305_216 () (_ BitVec 64))
(declare-fun temp1305_215 () (_ BitVec 64))
(declare-fun temp1305_217 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp1305_218 () (_ BitVec 64))
(declare-fun temp1305_219 () (_ BitVec 64))
(declare-fun temp1305_220 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp1305_221 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp1305_222 () (_ BitVec 64))
(declare-fun temp1305_224 () (_ BitVec 64))
(declare-fun temp1305_223 () (_ BitVec 64))
(declare-fun temp1305_225 () (_ BitVec 64))
(assert (= temp1305_1 #x0000000000000001))
(assert (= var77203 temp1305_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp1305_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp1305_2)))
(assert (= temp1305_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1305_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1305_4 #x0000000000000000))
(assert (= var210941 temp1305_4))
(assert (= temp1305_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp1305_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1305_6 #x0000000000000000))
(assert (= var210986 temp1305_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp1305_7 #x0000000000000000))
(assert (= temp1305_8 temp1305_7))
(assert (= temp1305_9 (select ARGNAME_padding_NAMEEND_VAL temp1305_8)))
(assert (= temp1305_10 #x0000000000000001))
(assert (= temp1305_11 temp1305_10))
(assert (= temp1305_12 (select ARGNAME_padding_NAMEEND_VAL temp1305_11)))
(assert (= temp1305_13 #x0000000000000002))
(assert (= temp1305_14 temp1305_13))
(assert (= temp1305_15 (select ARGNAME_padding_NAMEEND_VAL temp1305_14)))
(assert (= temp1305_16 #x0000000000000003))
(assert (= temp1305_17 temp1305_16))
(assert (= temp1305_18 (select ARGNAME_padding_NAMEEND_VAL temp1305_17)))
(assert (= temp1305_19 #x0000000000000004))
(assert (= temp1305_20 temp1305_19))
(assert (= temp1305_21 (select ARGNAME_padding_NAMEEND_VAL temp1305_20)))
(assert (= temp1305_22 #x0000000000000005))
(assert (= temp1305_23 temp1305_22))
(assert (= temp1305_24 (select ARGNAME_padding_NAMEEND_VAL temp1305_23)))
(assert (= temp1305_25 #x0000000000000000))
(assert (= temp1305_26 #x0000000000000000))
(assert (= temp1305_27 temp1305_26))
(assert (= temp1305_28 (select ARGNAME_padding_NAMEEND_VAL temp1305_27)))
(assert (= temp1305_29 #x0000000000000000))
(assert (= temp1305_30 #x0000000000000001))
(assert (= temp1305_31 temp1305_30))
(assert (= temp1305_32 (select ARGNAME_padding_NAMEEND_VAL temp1305_31)))
(assert (= temp1305_33 #x0000000000000000))
(assert (= temp1305_34 #x0000000000000002))
(assert (= temp1305_35 temp1305_34))
(assert (= temp1305_36 (select ARGNAME_padding_NAMEEND_VAL temp1305_35)))
(assert (= temp1305_37 #x0000000000000000))
(assert (= temp1305_38 #x0000000000000003))
(assert (= temp1305_39 temp1305_38))
(assert (= temp1305_40 (select ARGNAME_padding_NAMEEND_VAL temp1305_39)))
(assert (= temp1305_41 #x0000000000000000))
(assert (= temp1305_42 #x0000000000000004))
(assert (= temp1305_43 temp1305_42))
(assert (= temp1305_44 (select ARGNAME_padding_NAMEEND_VAL temp1305_43)))
(assert (= temp1305_45 #x0000000000000000))
(assert (= temp1305_46 #x0000000000000005))
(assert (= temp1305_47 temp1305_46))
(assert (= temp1305_48 (select ARGNAME_padding_NAMEEND_VAL temp1305_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp1305_28 temp1305_25)
             (bvslt temp1305_32 temp1305_29)
             (bvslt temp1305_36 temp1305_33)
             (bvslt temp1305_40 temp1305_37)
             (bvslt temp1305_44 temp1305_41)
             (bvslt temp1305_48 temp1305_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1305_49 #x0000000000000000))
(assert (= var1191714 temp1305_49))
(assert (= temp1305_50 #x0000000000000000))
(assert (= temp1305_51 temp1305_50))
(assert (= temp1305_52 (select ARGNAME_output_padding_NAMEEND_VAL temp1305_51)))
(assert (= temp1305_53 #x0000000000000001))
(assert (= temp1305_54 temp1305_53))
(assert (= temp1305_55 (select ARGNAME_output_padding_NAMEEND_VAL temp1305_54)))
(assert (= temp1305_56 #x0000000000000002))
(assert (= temp1305_57 temp1305_56))
(assert (= temp1305_58 (select ARGNAME_output_padding_NAMEEND_VAL temp1305_57)))
(assert (= temp1305_59 #x0000000000000003))
(assert (= temp1305_60 temp1305_59))
(assert (= temp1305_61 (select ARGNAME_output_padding_NAMEEND_VAL temp1305_60)))
(assert (= temp1305_62 #x0000000000000004))
(assert (= temp1305_63 temp1305_62))
(assert (= temp1305_64 (select ARGNAME_output_padding_NAMEEND_VAL temp1305_63)))
(assert (= temp1305_65 #x0000000000000005))
(assert (= temp1305_66 temp1305_65))
(assert (= temp1305_67 (select ARGNAME_output_padding_NAMEEND_VAL temp1305_66)))
(assert (= temp1305_68 #x0000000000000000))
(assert (= temp1305_69 #x0000000000000000))
(assert (= temp1305_70 temp1305_69))
(assert (= temp1305_71 (select ARGNAME_output_padding_NAMEEND_VAL temp1305_70)))
(assert (= temp1305_72 #x0000000000000000))
(assert (= temp1305_73 #x0000000000000001))
(assert (= temp1305_74 temp1305_73))
(assert (= temp1305_75 (select ARGNAME_output_padding_NAMEEND_VAL temp1305_74)))
(assert (= temp1305_76 #x0000000000000000))
(assert (= temp1305_77 #x0000000000000002))
(assert (= temp1305_78 temp1305_77))
(assert (= temp1305_79 (select ARGNAME_output_padding_NAMEEND_VAL temp1305_78)))
(assert (= temp1305_80 #x0000000000000000))
(assert (= temp1305_81 #x0000000000000003))
(assert (= temp1305_82 temp1305_81))
(assert (= temp1305_83 (select ARGNAME_output_padding_NAMEEND_VAL temp1305_82)))
(assert (= temp1305_84 #x0000000000000000))
(assert (= temp1305_85 #x0000000000000004))
(assert (= temp1305_86 temp1305_85))
(assert (= temp1305_87 (select ARGNAME_output_padding_NAMEEND_VAL temp1305_86)))
(assert (= temp1305_88 #x0000000000000000))
(assert (= temp1305_89 #x0000000000000005))
(assert (= temp1305_90 temp1305_89))
(assert (= temp1305_91 (select ARGNAME_output_padding_NAMEEND_VAL temp1305_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp1305_71 temp1305_68)
             (bvslt temp1305_75 temp1305_72)
             (bvslt temp1305_79 temp1305_76)
             (bvslt temp1305_83 temp1305_80)
             (bvslt temp1305_87 temp1305_84)
             (bvslt temp1305_91 temp1305_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1305_92 #x0000000000000000))
(assert (= var1191725 temp1305_92))
(assert (= temp1305_93 #x0000000000000000))
(assert (= temp1305_94 temp1305_93))
(assert (= temp1305_95 (select ARGNAME_stride_NAMEEND_VAL temp1305_94)))
(assert (= temp1305_96 #x0000000000000001))
(assert (= temp1305_97 temp1305_96))
(assert (= temp1305_98 (select ARGNAME_stride_NAMEEND_VAL temp1305_97)))
(assert (= temp1305_99 #x0000000000000002))
(assert (= temp1305_100 temp1305_99))
(assert (= temp1305_101 (select ARGNAME_stride_NAMEEND_VAL temp1305_100)))
(assert (= temp1305_102 #x0000000000000003))
(assert (= temp1305_103 temp1305_102))
(assert (= temp1305_104 (select ARGNAME_stride_NAMEEND_VAL temp1305_103)))
(assert (= temp1305_105 #x0000000000000004))
(assert (= temp1305_106 temp1305_105))
(assert (= temp1305_107 (select ARGNAME_stride_NAMEEND_VAL temp1305_106)))
(assert (= temp1305_108 #x0000000000000005))
(assert (= temp1305_109 temp1305_108))
(assert (= temp1305_110 (select ARGNAME_stride_NAMEEND_VAL temp1305_109)))
(assert (= temp1305_111 #x0000000000000000))
(assert (= temp1305_112 #x0000000000000000))
(assert (= temp1305_113 temp1305_112))
(assert (= temp1305_114 (select ARGNAME_stride_NAMEEND_VAL temp1305_113)))
(assert (= temp1305_115 #x0000000000000000))
(assert (= temp1305_116 #x0000000000000001))
(assert (= temp1305_117 temp1305_116))
(assert (= temp1305_118 (select ARGNAME_stride_NAMEEND_VAL temp1305_117)))
(assert (= temp1305_119 #x0000000000000000))
(assert (= temp1305_120 #x0000000000000002))
(assert (= temp1305_121 temp1305_120))
(assert (= temp1305_122 (select ARGNAME_stride_NAMEEND_VAL temp1305_121)))
(assert (= temp1305_123 #x0000000000000000))
(assert (= temp1305_124 #x0000000000000003))
(assert (= temp1305_125 temp1305_124))
(assert (= temp1305_126 (select ARGNAME_stride_NAMEEND_VAL temp1305_125)))
(assert (= temp1305_127 #x0000000000000000))
(assert (= temp1305_128 #x0000000000000004))
(assert (= temp1305_129 temp1305_128))
(assert (= temp1305_130 (select ARGNAME_stride_NAMEEND_VAL temp1305_129)))
(assert (= temp1305_131 #x0000000000000000))
(assert (= temp1305_132 #x0000000000000005))
(assert (= temp1305_133 temp1305_132))
(assert (= temp1305_134 (select ARGNAME_stride_NAMEEND_VAL temp1305_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp1305_114 temp1305_111)
             (bvsle temp1305_118 temp1305_115)
             (bvsle temp1305_122 temp1305_119)
             (bvsle temp1305_126 temp1305_123)
             (bvsle temp1305_130 temp1305_127)
             (bvsle temp1305_134 temp1305_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1305_135 #x0000000000000000))
(assert (= var1191735 temp1305_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1305_136 #x0000000000000001))
(assert (= var1191747 temp1305_136))
(assert (= temp1305_137 #x0000000000000000))
(assert (= var1179826 temp1305_137))
(assert (= temp1305_138 #x0000000000000000))
(assert (= temp1305_139 temp1305_138))
(assert (= temp1305_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1305_139)))
(assert (= temp1305_141 #x0000000000000001))
(assert (= temp1305_142 temp1305_141))
(assert (= temp1305_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1305_142)))
(assert (= temp1305_144 #x0000000000000002))
(assert (= temp1305_145 temp1305_144))
(assert (= temp1305_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1305_145)))
(assert (= temp1305_147 #x0000000000000003))
(assert (= temp1305_148 temp1305_147))
(assert (= temp1305_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1305_148)))
(assert (= temp1305_150 #x0000000000000004))
(assert (= temp1305_151 temp1305_150))
(assert (= temp1305_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1305_151)))
(assert (= temp1305_153 #x0000000000000005))
(assert (= temp1305_154 temp1305_153))
(assert (= temp1305_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1305_154)))
(assert (= temp1305_157 var1179826))
(assert (= temp1305_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1305_157)))
(assert (= temp1305_156 temp1305_158))
(assert (= var1191780
   (ite (bvslt temp1305_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1305_159 #x0000000000000000))
(assert (= var1191780 temp1305_159))
(assert (= temp1305_160 #x0000000000000000))
(assert (= var1179826 temp1305_160))
(assert (= temp1305_162 var1179826))
(assert (= temp1305_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1305_162)))
(assert (= temp1305_161 temp1305_163))
(assert (= var1191802 (bvsmod temp1305_161 ARGNAME_groups_NAMEEND)))
(assert (= temp1305_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp1305_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp1305_165 #x0000000000000001))
(assert (= var1191803 temp1305_165))
(assert (= temp1305_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp1305_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1305_167 #x0000000000000001))
(assert (= var1191823 temp1305_167))
(assert (= temp1305_168 #x0000000000000001))
(assert (= var1180714 temp1305_168))
(assert (= temp1305_169 #x0000000000000000))
(assert (= temp1305_170 temp1305_169))
(assert (= temp1305_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp1305_170)))
(assert (= temp1305_172 #x0000000000000001))
(assert (= temp1305_173 temp1305_172))
(assert (= temp1305_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp1305_173)))
(assert (= temp1305_175 #x0000000000000002))
(assert (= temp1305_176 temp1305_175))
(assert (= temp1305_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp1305_176)))
(assert (= temp1305_178 #x0000000000000003))
(assert (= temp1305_179 temp1305_178))
(assert (= temp1305_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp1305_179)))
(assert (= temp1305_181 #x0000000000000004))
(assert (= temp1305_182 temp1305_181))
(assert (= temp1305_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp1305_182)))
(assert (= temp1305_184 #x0000000000000005))
(assert (= temp1305_185 temp1305_184))
(assert (= temp1305_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp1305_185)))
(assert (= temp1305_187 #x0000000000000000))
(assert (= temp1305_188
   (ite (bvslt var1180714 temp1305_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp1305_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp1305_188)))
(assert (= var1191831 temp1305_189))
(assert (bvslt (ite (bvslt var1180714 temp1305_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1305_190 #x0000000000000001))
(assert (= var1180714 temp1305_190))
(assert (= temp1305_192 var1180714))
(assert (= temp1305_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1305_192)))
(assert (= temp1305_191 temp1305_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp1305_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp1305_194 #x0000000000000001))
(assert (= var1191836 temp1305_194))
(assert (= temp1305_195 #x0000000000000000))
(assert (= var1179826 temp1305_195))
(assert (= temp1305_197 var1179826))
(assert (= temp1305_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1305_197)))
(assert (= temp1305_196 temp1305_198))
(assert (= temp1305_199 #x0000000000000002))
(assert (= var1586025 temp1305_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp1305_200 #x0000000000000001))
(assert (= var1191993 temp1305_200))
(assert (= temp1305_201 #x0000000000000001))
(assert (= var2700303 temp1305_201))
(assert (= temp1305_202 #x0000000000000001))
(assert (= var2962447 temp1305_202))
(assert (= temp1305_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1305_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1305_204 #x0000000000000001))
(assert (= var211058 temp1305_204))
(assert (= temp1305_205 #x0000000000000001))
(assert (= var211188 temp1305_205))
(assert (= var3879401 var211188))
(assert (= temp1305_206 #x0000000000000000))
(assert (= var3866802 temp1305_206))
(assert (= temp1305_207 #x0000000000000000))
(assert (= temp1305_208
   (ite (bvslt var3866802 temp1305_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp1305_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp1305_208)))
(assert (= var3879420 temp1305_209))
(assert (bvslt (ite (bvslt var3866802 temp1305_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1305_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp1305_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp1305_211 #x0000000000000001))
(assert (= var3879421 temp1305_211))
(assert (= temp1305_212 #x0000000000000000))
(assert (= var4133117 temp1305_212))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp1305_213 #x0000000000000002))
(assert (= var4339331 temp1305_213))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1305_214 #x0000000000000000))
(assert (= var4404892 temp1305_214))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp1305_216 #xffffffffffffffff))
(assert (= temp1305_215 temp1305_216))
(assert (= temp1305_217 #x0000000000000001))
(assert (= var197674 temp1305_217))
(assert (= temp1305_218 #x0000000000000000))
(assert (= temp1305_219
   (ite (bvslt var197674 temp1305_218)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp1305_220 (select ARGNAME_input_NAMEEND_DIMSIZE temp1305_219)))
(assert (= var211595 temp1305_220))
(assert (bvslt (ite (bvslt var197674 temp1305_218)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1305_221 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp1305_221) #x0000000000000001 #x0000000000000000)))
(assert (= temp1305_222 #x0000000000000001))
(assert (= var211596 temp1305_222))
(assert (= temp1305_224 #xffffffffffffffff))
(assert (= temp1305_223 temp1305_224))
(assert (= temp1305_225 #x0000000000000001))
(assert (= var211058 temp1305_225))
(model-add temp1305_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp1305_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1305_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp1305_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






