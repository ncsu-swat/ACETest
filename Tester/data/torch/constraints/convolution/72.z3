(declare-fun temp96_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp96_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp96_3 () (_ BitVec 64))
(declare-fun temp96_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp96_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp96_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp96_7 () (_ BitVec 64))
(declare-fun temp96_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp96_9 () (_ BitVec 64))
(declare-fun temp96_10 () (_ BitVec 64))
(declare-fun temp96_11 () (_ BitVec 64))
(declare-fun temp96_12 () (_ BitVec 64))
(declare-fun temp96_13 () (_ BitVec 64))
(declare-fun temp96_14 () (_ BitVec 64))
(declare-fun temp96_15 () (_ BitVec 64))
(declare-fun temp96_16 () (_ BitVec 64))
(declare-fun temp96_17 () (_ BitVec 64))
(declare-fun temp96_18 () (_ BitVec 64))
(declare-fun temp96_19 () (_ BitVec 64))
(declare-fun temp96_20 () (_ BitVec 64))
(declare-fun temp96_21 () (_ BitVec 64))
(declare-fun temp96_22 () (_ BitVec 64))
(declare-fun temp96_23 () (_ BitVec 64))
(declare-fun temp96_24 () (_ BitVec 64))
(declare-fun temp96_25 () (_ BitVec 64))
(declare-fun temp96_26 () (_ BitVec 64))
(declare-fun temp96_27 () (_ BitVec 64))
(declare-fun temp96_28 () (_ BitVec 64))
(declare-fun temp96_29 () (_ BitVec 64))
(declare-fun temp96_30 () (_ BitVec 64))
(declare-fun temp96_31 () (_ BitVec 64))
(declare-fun temp96_32 () (_ BitVec 64))
(declare-fun temp96_33 () (_ BitVec 64))
(declare-fun temp96_34 () (_ BitVec 64))
(declare-fun temp96_35 () (_ BitVec 64))
(declare-fun temp96_36 () (_ BitVec 64))
(declare-fun temp96_37 () (_ BitVec 64))
(declare-fun temp96_38 () (_ BitVec 64))
(declare-fun temp96_39 () (_ BitVec 64))
(declare-fun temp96_40 () (_ BitVec 64))
(declare-fun temp96_41 () (_ BitVec 64))
(declare-fun temp96_42 () (_ BitVec 64))
(declare-fun temp96_43 () (_ BitVec 64))
(declare-fun temp96_44 () (_ BitVec 64))
(declare-fun temp96_45 () (_ BitVec 64))
(declare-fun temp96_46 () (_ BitVec 64))
(declare-fun temp96_47 () (_ BitVec 64))
(declare-fun temp96_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp96_49 () (_ BitVec 64))
(declare-fun temp96_50 () (_ BitVec 64))
(declare-fun temp96_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp96_52 () (_ BitVec 64))
(declare-fun temp96_53 () (_ BitVec 64))
(declare-fun temp96_54 () (_ BitVec 64))
(declare-fun temp96_55 () (_ BitVec 64))
(declare-fun temp96_56 () (_ BitVec 64))
(declare-fun temp96_57 () (_ BitVec 64))
(declare-fun temp96_58 () (_ BitVec 64))
(declare-fun temp96_59 () (_ BitVec 64))
(declare-fun temp96_60 () (_ BitVec 64))
(declare-fun temp96_61 () (_ BitVec 64))
(declare-fun temp96_62 () (_ BitVec 64))
(declare-fun temp96_63 () (_ BitVec 64))
(declare-fun temp96_64 () (_ BitVec 64))
(declare-fun temp96_65 () (_ BitVec 64))
(declare-fun temp96_66 () (_ BitVec 64))
(declare-fun temp96_67 () (_ BitVec 64))
(declare-fun temp96_68 () (_ BitVec 64))
(declare-fun temp96_69 () (_ BitVec 64))
(declare-fun temp96_70 () (_ BitVec 64))
(declare-fun temp96_71 () (_ BitVec 64))
(declare-fun temp96_72 () (_ BitVec 64))
(declare-fun temp96_73 () (_ BitVec 64))
(declare-fun temp96_74 () (_ BitVec 64))
(declare-fun temp96_75 () (_ BitVec 64))
(declare-fun temp96_76 () (_ BitVec 64))
(declare-fun temp96_77 () (_ BitVec 64))
(declare-fun temp96_78 () (_ BitVec 64))
(declare-fun temp96_79 () (_ BitVec 64))
(declare-fun temp96_80 () (_ BitVec 64))
(declare-fun temp96_81 () (_ BitVec 64))
(declare-fun temp96_82 () (_ BitVec 64))
(declare-fun temp96_83 () (_ BitVec 64))
(declare-fun temp96_84 () (_ BitVec 64))
(declare-fun temp96_85 () (_ BitVec 64))
(declare-fun temp96_86 () (_ BitVec 64))
(declare-fun temp96_87 () (_ BitVec 64))
(declare-fun temp96_88 () (_ BitVec 64))
(declare-fun temp96_89 () (_ BitVec 64))
(declare-fun temp96_90 () (_ BitVec 64))
(declare-fun temp96_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp96_92 () (_ BitVec 64))
(declare-fun temp96_93 () (_ BitVec 64))
(declare-fun temp96_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp96_95 () (_ BitVec 64))
(declare-fun temp96_96 () (_ BitVec 64))
(declare-fun temp96_97 () (_ BitVec 64))
(declare-fun temp96_98 () (_ BitVec 64))
(declare-fun temp96_99 () (_ BitVec 64))
(declare-fun temp96_100 () (_ BitVec 64))
(declare-fun temp96_101 () (_ BitVec 64))
(declare-fun temp96_102 () (_ BitVec 64))
(declare-fun temp96_103 () (_ BitVec 64))
(declare-fun temp96_104 () (_ BitVec 64))
(declare-fun temp96_105 () (_ BitVec 64))
(declare-fun temp96_106 () (_ BitVec 64))
(declare-fun temp96_107 () (_ BitVec 64))
(declare-fun temp96_108 () (_ BitVec 64))
(declare-fun temp96_109 () (_ BitVec 64))
(declare-fun temp96_110 () (_ BitVec 64))
(declare-fun temp96_111 () (_ BitVec 64))
(declare-fun temp96_112 () (_ BitVec 64))
(declare-fun temp96_113 () (_ BitVec 64))
(declare-fun temp96_114 () (_ BitVec 64))
(declare-fun temp96_115 () (_ BitVec 64))
(declare-fun temp96_116 () (_ BitVec 64))
(declare-fun temp96_117 () (_ BitVec 64))
(declare-fun temp96_118 () (_ BitVec 64))
(declare-fun temp96_119 () (_ BitVec 64))
(declare-fun temp96_120 () (_ BitVec 64))
(declare-fun temp96_121 () (_ BitVec 64))
(declare-fun temp96_122 () (_ BitVec 64))
(declare-fun temp96_123 () (_ BitVec 64))
(declare-fun temp96_124 () (_ BitVec 64))
(declare-fun temp96_125 () (_ BitVec 64))
(declare-fun temp96_126 () (_ BitVec 64))
(declare-fun temp96_127 () (_ BitVec 64))
(declare-fun temp96_128 () (_ BitVec 64))
(declare-fun temp96_129 () (_ BitVec 64))
(declare-fun temp96_130 () (_ BitVec 64))
(declare-fun temp96_131 () (_ BitVec 64))
(declare-fun temp96_132 () (_ BitVec 64))
(declare-fun temp96_133 () (_ BitVec 64))
(declare-fun temp96_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp96_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp96_136 () (_ BitVec 64))
(declare-fun temp96_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp96_138 () (_ BitVec 64))
(declare-fun temp96_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp96_140 () (_ BitVec 64))
(declare-fun temp96_141 () (_ BitVec 64))
(declare-fun temp96_142 () (_ BitVec 64))
(declare-fun temp96_143 () (_ BitVec 64))
(declare-fun temp96_144 () (_ BitVec 64))
(declare-fun temp96_145 () (_ BitVec 64))
(declare-fun temp96_146 () (_ BitVec 64))
(declare-fun temp96_147 () (_ BitVec 64))
(declare-fun temp96_148 () (_ BitVec 64))
(declare-fun temp96_149 () (_ BitVec 64))
(declare-fun temp96_150 () (_ BitVec 64))
(declare-fun temp96_151 () (_ BitVec 64))
(declare-fun temp96_152 () (_ BitVec 64))
(declare-fun temp96_153 () (_ BitVec 64))
(declare-fun temp96_154 () (_ BitVec 64))
(declare-fun temp96_155 () (_ BitVec 64))
(declare-fun temp96_157 () (_ BitVec 64))
(declare-fun temp96_158 () (_ BitVec 64))
(declare-fun temp96_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp96_159 () (_ BitVec 64))
(declare-fun temp96_160 () (_ BitVec 64))
(declare-fun temp96_162 () (_ BitVec 64))
(declare-fun temp96_163 () (_ BitVec 64))
(declare-fun temp96_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp96_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp96_165 () (_ BitVec 64))
(declare-fun temp96_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp96_167 () (_ BitVec 64))
(declare-fun temp96_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp96_169 () (_ BitVec 64))
(declare-fun temp96_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp96_171 () (_ BitVec 64))
(declare-fun temp96_172 () (_ BitVec 64))
(declare-fun temp96_173 () (_ BitVec 64))
(declare-fun temp96_174 () (_ BitVec 64))
(declare-fun temp96_175 () (_ BitVec 64))
(declare-fun temp96_176 () (_ BitVec 64))
(declare-fun temp96_177 () (_ BitVec 64))
(declare-fun temp96_178 () (_ BitVec 64))
(declare-fun temp96_179 () (_ BitVec 64))
(declare-fun temp96_180 () (_ BitVec 64))
(declare-fun temp96_181 () (_ BitVec 64))
(declare-fun temp96_182 () (_ BitVec 64))
(declare-fun temp96_183 () (_ BitVec 64))
(declare-fun temp96_184 () (_ BitVec 64))
(declare-fun temp96_185 () (_ BitVec 64))
(declare-fun temp96_186 () (_ BitVec 64))
(declare-fun temp96_187 () (_ BitVec 64))
(declare-fun temp96_188 () (_ BitVec 64))
(declare-fun temp96_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp96_190 () (_ BitVec 64))
(declare-fun temp96_192 () (_ BitVec 64))
(declare-fun temp96_193 () (_ BitVec 64))
(declare-fun temp96_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp96_194 () (_ BitVec 64))
(declare-fun temp96_195 () (_ BitVec 64))
(declare-fun temp96_197 () (_ BitVec 64))
(declare-fun temp96_198 () (_ BitVec 64))
(declare-fun temp96_196 () (_ BitVec 64))
(declare-fun temp96_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp96_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp96_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp96_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp96_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp96_204 () (_ BitVec 64))
(declare-fun temp96_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp96_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp96_207 () (_ BitVec 64))
(declare-fun temp96_208 () (_ BitVec 64))
(declare-fun temp96_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp96_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp96_211 () (_ BitVec 64))
(declare-fun temp96_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp96_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp96_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp96_216 () (_ BitVec 64))
(declare-fun temp96_215 () (_ BitVec 64))
(declare-fun temp96_217 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp96_218 () (_ BitVec 64))
(declare-fun temp96_219 () (_ BitVec 64))
(declare-fun temp96_220 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp96_221 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp96_222 () (_ BitVec 64))
(declare-fun temp96_224 () (_ BitVec 64))
(declare-fun temp96_223 () (_ BitVec 64))
(declare-fun temp96_225 () (_ BitVec 64))
(assert (= temp96_1 #x0000000000000001))
(assert (= var77203 temp96_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp96_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp96_2)))
(assert (= temp96_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp96_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp96_4 #x0000000000000000))
(assert (= var210941 temp96_4))
(assert (= temp96_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp96_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp96_6 #x0000000000000000))
(assert (= var210986 temp96_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp96_7 #x0000000000000000))
(assert (= temp96_8 temp96_7))
(assert (= temp96_9 (select ARGNAME_padding_NAMEEND_VAL temp96_8)))
(assert (= temp96_10 #x0000000000000001))
(assert (= temp96_11 temp96_10))
(assert (= temp96_12 (select ARGNAME_padding_NAMEEND_VAL temp96_11)))
(assert (= temp96_13 #x0000000000000002))
(assert (= temp96_14 temp96_13))
(assert (= temp96_15 (select ARGNAME_padding_NAMEEND_VAL temp96_14)))
(assert (= temp96_16 #x0000000000000003))
(assert (= temp96_17 temp96_16))
(assert (= temp96_18 (select ARGNAME_padding_NAMEEND_VAL temp96_17)))
(assert (= temp96_19 #x0000000000000004))
(assert (= temp96_20 temp96_19))
(assert (= temp96_21 (select ARGNAME_padding_NAMEEND_VAL temp96_20)))
(assert (= temp96_22 #x0000000000000005))
(assert (= temp96_23 temp96_22))
(assert (= temp96_24 (select ARGNAME_padding_NAMEEND_VAL temp96_23)))
(assert (= temp96_25 #x0000000000000000))
(assert (= temp96_26 #x0000000000000000))
(assert (= temp96_27 temp96_26))
(assert (= temp96_28 (select ARGNAME_padding_NAMEEND_VAL temp96_27)))
(assert (= temp96_29 #x0000000000000000))
(assert (= temp96_30 #x0000000000000001))
(assert (= temp96_31 temp96_30))
(assert (= temp96_32 (select ARGNAME_padding_NAMEEND_VAL temp96_31)))
(assert (= temp96_33 #x0000000000000000))
(assert (= temp96_34 #x0000000000000002))
(assert (= temp96_35 temp96_34))
(assert (= temp96_36 (select ARGNAME_padding_NAMEEND_VAL temp96_35)))
(assert (= temp96_37 #x0000000000000000))
(assert (= temp96_38 #x0000000000000003))
(assert (= temp96_39 temp96_38))
(assert (= temp96_40 (select ARGNAME_padding_NAMEEND_VAL temp96_39)))
(assert (= temp96_41 #x0000000000000000))
(assert (= temp96_42 #x0000000000000004))
(assert (= temp96_43 temp96_42))
(assert (= temp96_44 (select ARGNAME_padding_NAMEEND_VAL temp96_43)))
(assert (= temp96_45 #x0000000000000000))
(assert (= temp96_46 #x0000000000000005))
(assert (= temp96_47 temp96_46))
(assert (= temp96_48 (select ARGNAME_padding_NAMEEND_VAL temp96_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp96_28 temp96_25)
             (bvslt temp96_32 temp96_29)
             (bvslt temp96_36 temp96_33)
             (bvslt temp96_40 temp96_37)
             (bvslt temp96_44 temp96_41)
             (bvslt temp96_48 temp96_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp96_49 #x0000000000000000))
(assert (= var1191714 temp96_49))
(assert (= temp96_50 #x0000000000000000))
(assert (= temp96_51 temp96_50))
(assert (= temp96_52 (select ARGNAME_output_padding_NAMEEND_VAL temp96_51)))
(assert (= temp96_53 #x0000000000000001))
(assert (= temp96_54 temp96_53))
(assert (= temp96_55 (select ARGNAME_output_padding_NAMEEND_VAL temp96_54)))
(assert (= temp96_56 #x0000000000000002))
(assert (= temp96_57 temp96_56))
(assert (= temp96_58 (select ARGNAME_output_padding_NAMEEND_VAL temp96_57)))
(assert (= temp96_59 #x0000000000000003))
(assert (= temp96_60 temp96_59))
(assert (= temp96_61 (select ARGNAME_output_padding_NAMEEND_VAL temp96_60)))
(assert (= temp96_62 #x0000000000000004))
(assert (= temp96_63 temp96_62))
(assert (= temp96_64 (select ARGNAME_output_padding_NAMEEND_VAL temp96_63)))
(assert (= temp96_65 #x0000000000000005))
(assert (= temp96_66 temp96_65))
(assert (= temp96_67 (select ARGNAME_output_padding_NAMEEND_VAL temp96_66)))
(assert (= temp96_68 #x0000000000000000))
(assert (= temp96_69 #x0000000000000000))
(assert (= temp96_70 temp96_69))
(assert (= temp96_71 (select ARGNAME_output_padding_NAMEEND_VAL temp96_70)))
(assert (= temp96_72 #x0000000000000000))
(assert (= temp96_73 #x0000000000000001))
(assert (= temp96_74 temp96_73))
(assert (= temp96_75 (select ARGNAME_output_padding_NAMEEND_VAL temp96_74)))
(assert (= temp96_76 #x0000000000000000))
(assert (= temp96_77 #x0000000000000002))
(assert (= temp96_78 temp96_77))
(assert (= temp96_79 (select ARGNAME_output_padding_NAMEEND_VAL temp96_78)))
(assert (= temp96_80 #x0000000000000000))
(assert (= temp96_81 #x0000000000000003))
(assert (= temp96_82 temp96_81))
(assert (= temp96_83 (select ARGNAME_output_padding_NAMEEND_VAL temp96_82)))
(assert (= temp96_84 #x0000000000000000))
(assert (= temp96_85 #x0000000000000004))
(assert (= temp96_86 temp96_85))
(assert (= temp96_87 (select ARGNAME_output_padding_NAMEEND_VAL temp96_86)))
(assert (= temp96_88 #x0000000000000000))
(assert (= temp96_89 #x0000000000000005))
(assert (= temp96_90 temp96_89))
(assert (= temp96_91 (select ARGNAME_output_padding_NAMEEND_VAL temp96_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp96_71 temp96_68)
             (bvslt temp96_75 temp96_72)
             (bvslt temp96_79 temp96_76)
             (bvslt temp96_83 temp96_80)
             (bvslt temp96_87 temp96_84)
             (bvslt temp96_91 temp96_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp96_92 #x0000000000000000))
(assert (= var1191725 temp96_92))
(assert (= temp96_93 #x0000000000000000))
(assert (= temp96_94 temp96_93))
(assert (= temp96_95 (select ARGNAME_stride_NAMEEND_VAL temp96_94)))
(assert (= temp96_96 #x0000000000000001))
(assert (= temp96_97 temp96_96))
(assert (= temp96_98 (select ARGNAME_stride_NAMEEND_VAL temp96_97)))
(assert (= temp96_99 #x0000000000000002))
(assert (= temp96_100 temp96_99))
(assert (= temp96_101 (select ARGNAME_stride_NAMEEND_VAL temp96_100)))
(assert (= temp96_102 #x0000000000000003))
(assert (= temp96_103 temp96_102))
(assert (= temp96_104 (select ARGNAME_stride_NAMEEND_VAL temp96_103)))
(assert (= temp96_105 #x0000000000000004))
(assert (= temp96_106 temp96_105))
(assert (= temp96_107 (select ARGNAME_stride_NAMEEND_VAL temp96_106)))
(assert (= temp96_108 #x0000000000000005))
(assert (= temp96_109 temp96_108))
(assert (= temp96_110 (select ARGNAME_stride_NAMEEND_VAL temp96_109)))
(assert (= temp96_111 #x0000000000000000))
(assert (= temp96_112 #x0000000000000000))
(assert (= temp96_113 temp96_112))
(assert (= temp96_114 (select ARGNAME_stride_NAMEEND_VAL temp96_113)))
(assert (= temp96_115 #x0000000000000000))
(assert (= temp96_116 #x0000000000000001))
(assert (= temp96_117 temp96_116))
(assert (= temp96_118 (select ARGNAME_stride_NAMEEND_VAL temp96_117)))
(assert (= temp96_119 #x0000000000000000))
(assert (= temp96_120 #x0000000000000002))
(assert (= temp96_121 temp96_120))
(assert (= temp96_122 (select ARGNAME_stride_NAMEEND_VAL temp96_121)))
(assert (= temp96_123 #x0000000000000000))
(assert (= temp96_124 #x0000000000000003))
(assert (= temp96_125 temp96_124))
(assert (= temp96_126 (select ARGNAME_stride_NAMEEND_VAL temp96_125)))
(assert (= temp96_127 #x0000000000000000))
(assert (= temp96_128 #x0000000000000004))
(assert (= temp96_129 temp96_128))
(assert (= temp96_130 (select ARGNAME_stride_NAMEEND_VAL temp96_129)))
(assert (= temp96_131 #x0000000000000000))
(assert (= temp96_132 #x0000000000000005))
(assert (= temp96_133 temp96_132))
(assert (= temp96_134 (select ARGNAME_stride_NAMEEND_VAL temp96_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp96_114 temp96_111)
             (bvsle temp96_118 temp96_115)
             (bvsle temp96_122 temp96_119)
             (bvsle temp96_126 temp96_123)
             (bvsle temp96_130 temp96_127)
             (bvsle temp96_134 temp96_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp96_135 #x0000000000000000))
(assert (= var1191735 temp96_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp96_136 #x0000000000000001))
(assert (= var1191747 temp96_136))
(assert (= temp96_137 #x0000000000000000))
(assert (= var1179826 temp96_137))
(assert (= temp96_138 #x0000000000000000))
(assert (= temp96_139 temp96_138))
(assert (= temp96_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp96_139)))
(assert (= temp96_141 #x0000000000000001))
(assert (= temp96_142 temp96_141))
(assert (= temp96_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp96_142)))
(assert (= temp96_144 #x0000000000000002))
(assert (= temp96_145 temp96_144))
(assert (= temp96_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp96_145)))
(assert (= temp96_147 #x0000000000000003))
(assert (= temp96_148 temp96_147))
(assert (= temp96_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp96_148)))
(assert (= temp96_150 #x0000000000000004))
(assert (= temp96_151 temp96_150))
(assert (= temp96_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp96_151)))
(assert (= temp96_153 #x0000000000000005))
(assert (= temp96_154 temp96_153))
(assert (= temp96_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp96_154)))
(assert (= temp96_157 var1179826))
(assert (= temp96_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp96_157)))
(assert (= temp96_156 temp96_158))
(assert (= var1191780
   (ite (bvslt temp96_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp96_159 #x0000000000000000))
(assert (= var1191780 temp96_159))
(assert (= temp96_160 #x0000000000000000))
(assert (= var1179826 temp96_160))
(assert (= temp96_162 var1179826))
(assert (= temp96_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp96_162)))
(assert (= temp96_161 temp96_163))
(assert (= var1191802 (bvsmod temp96_161 ARGNAME_groups_NAMEEND)))
(assert (= temp96_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp96_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp96_165 #x0000000000000001))
(assert (= var1191803 temp96_165))
(assert (= temp96_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp96_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp96_167 #x0000000000000001))
(assert (= var1191823 temp96_167))
(assert (= temp96_168 #x0000000000000001))
(assert (= var1180714 temp96_168))
(assert (= temp96_169 #x0000000000000000))
(assert (= temp96_170 temp96_169))
(assert (= temp96_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp96_170)))
(assert (= temp96_172 #x0000000000000001))
(assert (= temp96_173 temp96_172))
(assert (= temp96_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp96_173)))
(assert (= temp96_175 #x0000000000000002))
(assert (= temp96_176 temp96_175))
(assert (= temp96_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp96_176)))
(assert (= temp96_178 #x0000000000000003))
(assert (= temp96_179 temp96_178))
(assert (= temp96_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp96_179)))
(assert (= temp96_181 #x0000000000000004))
(assert (= temp96_182 temp96_181))
(assert (= temp96_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp96_182)))
(assert (= temp96_184 #x0000000000000005))
(assert (= temp96_185 temp96_184))
(assert (= temp96_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp96_185)))
(assert (= temp96_187 #x0000000000000000))
(assert (= temp96_188
   (ite (bvslt var1180714 temp96_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp96_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp96_188)))
(assert (= var1191831 temp96_189))
(assert (bvslt (ite (bvslt var1180714 temp96_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp96_190 #x0000000000000001))
(assert (= var1180714 temp96_190))
(assert (= temp96_192 var1180714))
(assert (= temp96_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp96_192)))
(assert (= temp96_191 temp96_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp96_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp96_194 #x0000000000000001))
(assert (= var1191836 temp96_194))
(assert (= temp96_195 #x0000000000000000))
(assert (= var1179826 temp96_195))
(assert (= temp96_197 var1179826))
(assert (= temp96_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp96_197)))
(assert (= temp96_196 temp96_198))
(assert (= temp96_199 #x0000000000000002))
(assert (= var1586025 temp96_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp96_200 #x0000000000000001))
(assert (= var1191993 temp96_200))
(assert (= temp96_201 #x0000000000000001))
(assert (= var2700303 temp96_201))
(assert (= temp96_202 #x0000000000000001))
(assert (= var2962447 temp96_202))
(assert (= temp96_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp96_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp96_204 #x0000000000000001))
(assert (= var211058 temp96_204))
(assert (= temp96_205 #x0000000000000001))
(assert (= var211188 temp96_205))
(assert (= var3879401 var211188))
(assert (= temp96_206 #x0000000000000000))
(assert (= var3866802 temp96_206))
(assert (= temp96_207 #x0000000000000000))
(assert (= temp96_208
   (ite (bvslt var3866802 temp96_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp96_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp96_208)))
(assert (= var3879420 temp96_209))
(assert (bvslt (ite (bvslt var3866802 temp96_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp96_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp96_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp96_211 #x0000000000000001))
(assert (= var3879421 temp96_211))
(assert (= temp96_212 #x0000000000000000))
(assert (= var4079423 temp96_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp96_213 #x0000000000000002))
(assert (= var4208259 temp96_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp96_214 #x0000000000000000))
(assert (= var4273820 temp96_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp96_216 #xffffffffffffffff))
(assert (= temp96_215 temp96_216))
(assert (= temp96_217 #x0000000000000001))
(assert (= var197674 temp96_217))
(assert (= temp96_218 #x0000000000000000))
(assert (= temp96_219
   (ite (bvslt var197674 temp96_218)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp96_220 (select ARGNAME_input_NAMEEND_DIMSIZE temp96_219)))
(assert (= var211595 temp96_220))
(assert (bvslt (ite (bvslt var197674 temp96_218)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp96_221 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp96_221) #x0000000000000001 #x0000000000000000)))
(assert (= temp96_222 #x0000000000000001))
(assert (= var211596 temp96_222))
(assert (= temp96_224 #xffffffffffffffff))
(assert (= temp96_223 temp96_224))
(assert (= temp96_225 #x0000000000000001))
(assert (= var211058 temp96_225))
(model-add temp96_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp96_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp96_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp96_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





