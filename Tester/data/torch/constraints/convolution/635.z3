(declare-fun temp846_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp846_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp846_3 () (_ BitVec 64))
(declare-fun temp846_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp846_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp846_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp846_7 () (_ BitVec 64))
(declare-fun temp846_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp846_9 () (_ BitVec 64))
(declare-fun temp846_10 () (_ BitVec 64))
(declare-fun temp846_11 () (_ BitVec 64))
(declare-fun temp846_12 () (_ BitVec 64))
(declare-fun temp846_13 () (_ BitVec 64))
(declare-fun temp846_14 () (_ BitVec 64))
(declare-fun temp846_15 () (_ BitVec 64))
(declare-fun temp846_16 () (_ BitVec 64))
(declare-fun temp846_17 () (_ BitVec 64))
(declare-fun temp846_18 () (_ BitVec 64))
(declare-fun temp846_19 () (_ BitVec 64))
(declare-fun temp846_20 () (_ BitVec 64))
(declare-fun temp846_21 () (_ BitVec 64))
(declare-fun temp846_22 () (_ BitVec 64))
(declare-fun temp846_23 () (_ BitVec 64))
(declare-fun temp846_24 () (_ BitVec 64))
(declare-fun temp846_25 () (_ BitVec 64))
(declare-fun temp846_26 () (_ BitVec 64))
(declare-fun temp846_27 () (_ BitVec 64))
(declare-fun temp846_28 () (_ BitVec 64))
(declare-fun temp846_29 () (_ BitVec 64))
(declare-fun temp846_30 () (_ BitVec 64))
(declare-fun temp846_31 () (_ BitVec 64))
(declare-fun temp846_32 () (_ BitVec 64))
(declare-fun temp846_33 () (_ BitVec 64))
(declare-fun temp846_34 () (_ BitVec 64))
(declare-fun temp846_35 () (_ BitVec 64))
(declare-fun temp846_36 () (_ BitVec 64))
(declare-fun temp846_37 () (_ BitVec 64))
(declare-fun temp846_38 () (_ BitVec 64))
(declare-fun temp846_39 () (_ BitVec 64))
(declare-fun temp846_40 () (_ BitVec 64))
(declare-fun temp846_41 () (_ BitVec 64))
(declare-fun temp846_42 () (_ BitVec 64))
(declare-fun temp846_43 () (_ BitVec 64))
(declare-fun temp846_44 () (_ BitVec 64))
(declare-fun temp846_45 () (_ BitVec 64))
(declare-fun temp846_46 () (_ BitVec 64))
(declare-fun temp846_47 () (_ BitVec 64))
(declare-fun temp846_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp846_49 () (_ BitVec 64))
(declare-fun temp846_50 () (_ BitVec 64))
(declare-fun temp846_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp846_52 () (_ BitVec 64))
(declare-fun temp846_53 () (_ BitVec 64))
(declare-fun temp846_54 () (_ BitVec 64))
(declare-fun temp846_55 () (_ BitVec 64))
(declare-fun temp846_56 () (_ BitVec 64))
(declare-fun temp846_57 () (_ BitVec 64))
(declare-fun temp846_58 () (_ BitVec 64))
(declare-fun temp846_59 () (_ BitVec 64))
(declare-fun temp846_60 () (_ BitVec 64))
(declare-fun temp846_61 () (_ BitVec 64))
(declare-fun temp846_62 () (_ BitVec 64))
(declare-fun temp846_63 () (_ BitVec 64))
(declare-fun temp846_64 () (_ BitVec 64))
(declare-fun temp846_65 () (_ BitVec 64))
(declare-fun temp846_66 () (_ BitVec 64))
(declare-fun temp846_67 () (_ BitVec 64))
(declare-fun temp846_68 () (_ BitVec 64))
(declare-fun temp846_69 () (_ BitVec 64))
(declare-fun temp846_70 () (_ BitVec 64))
(declare-fun temp846_71 () (_ BitVec 64))
(declare-fun temp846_72 () (_ BitVec 64))
(declare-fun temp846_73 () (_ BitVec 64))
(declare-fun temp846_74 () (_ BitVec 64))
(declare-fun temp846_75 () (_ BitVec 64))
(declare-fun temp846_76 () (_ BitVec 64))
(declare-fun temp846_77 () (_ BitVec 64))
(declare-fun temp846_78 () (_ BitVec 64))
(declare-fun temp846_79 () (_ BitVec 64))
(declare-fun temp846_80 () (_ BitVec 64))
(declare-fun temp846_81 () (_ BitVec 64))
(declare-fun temp846_82 () (_ BitVec 64))
(declare-fun temp846_83 () (_ BitVec 64))
(declare-fun temp846_84 () (_ BitVec 64))
(declare-fun temp846_85 () (_ BitVec 64))
(declare-fun temp846_86 () (_ BitVec 64))
(declare-fun temp846_87 () (_ BitVec 64))
(declare-fun temp846_88 () (_ BitVec 64))
(declare-fun temp846_89 () (_ BitVec 64))
(declare-fun temp846_90 () (_ BitVec 64))
(declare-fun temp846_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp846_92 () (_ BitVec 64))
(declare-fun temp846_93 () (_ BitVec 64))
(declare-fun temp846_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp846_95 () (_ BitVec 64))
(declare-fun temp846_96 () (_ BitVec 64))
(declare-fun temp846_97 () (_ BitVec 64))
(declare-fun temp846_98 () (_ BitVec 64))
(declare-fun temp846_99 () (_ BitVec 64))
(declare-fun temp846_100 () (_ BitVec 64))
(declare-fun temp846_101 () (_ BitVec 64))
(declare-fun temp846_102 () (_ BitVec 64))
(declare-fun temp846_103 () (_ BitVec 64))
(declare-fun temp846_104 () (_ BitVec 64))
(declare-fun temp846_105 () (_ BitVec 64))
(declare-fun temp846_106 () (_ BitVec 64))
(declare-fun temp846_107 () (_ BitVec 64))
(declare-fun temp846_108 () (_ BitVec 64))
(declare-fun temp846_109 () (_ BitVec 64))
(declare-fun temp846_110 () (_ BitVec 64))
(declare-fun temp846_111 () (_ BitVec 64))
(declare-fun temp846_112 () (_ BitVec 64))
(declare-fun temp846_113 () (_ BitVec 64))
(declare-fun temp846_114 () (_ BitVec 64))
(declare-fun temp846_115 () (_ BitVec 64))
(declare-fun temp846_116 () (_ BitVec 64))
(declare-fun temp846_117 () (_ BitVec 64))
(declare-fun temp846_118 () (_ BitVec 64))
(declare-fun temp846_119 () (_ BitVec 64))
(declare-fun temp846_120 () (_ BitVec 64))
(declare-fun temp846_121 () (_ BitVec 64))
(declare-fun temp846_122 () (_ BitVec 64))
(declare-fun temp846_123 () (_ BitVec 64))
(declare-fun temp846_124 () (_ BitVec 64))
(declare-fun temp846_125 () (_ BitVec 64))
(declare-fun temp846_126 () (_ BitVec 64))
(declare-fun temp846_127 () (_ BitVec 64))
(declare-fun temp846_128 () (_ BitVec 64))
(declare-fun temp846_129 () (_ BitVec 64))
(declare-fun temp846_130 () (_ BitVec 64))
(declare-fun temp846_131 () (_ BitVec 64))
(declare-fun temp846_132 () (_ BitVec 64))
(declare-fun temp846_133 () (_ BitVec 64))
(declare-fun temp846_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp846_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp846_136 () (_ BitVec 64))
(declare-fun temp846_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp846_138 () (_ BitVec 64))
(declare-fun temp846_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp846_140 () (_ BitVec 64))
(declare-fun temp846_141 () (_ BitVec 64))
(declare-fun temp846_142 () (_ BitVec 64))
(declare-fun temp846_143 () (_ BitVec 64))
(declare-fun temp846_144 () (_ BitVec 64))
(declare-fun temp846_145 () (_ BitVec 64))
(declare-fun temp846_146 () (_ BitVec 64))
(declare-fun temp846_147 () (_ BitVec 64))
(declare-fun temp846_148 () (_ BitVec 64))
(declare-fun temp846_149 () (_ BitVec 64))
(declare-fun temp846_150 () (_ BitVec 64))
(declare-fun temp846_151 () (_ BitVec 64))
(declare-fun temp846_152 () (_ BitVec 64))
(declare-fun temp846_153 () (_ BitVec 64))
(declare-fun temp846_154 () (_ BitVec 64))
(declare-fun temp846_155 () (_ BitVec 64))
(declare-fun temp846_157 () (_ BitVec 64))
(declare-fun temp846_158 () (_ BitVec 64))
(declare-fun temp846_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp846_159 () (_ BitVec 64))
(declare-fun temp846_160 () (_ BitVec 64))
(declare-fun temp846_162 () (_ BitVec 64))
(declare-fun temp846_163 () (_ BitVec 64))
(declare-fun temp846_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp846_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp846_165 () (_ BitVec 64))
(declare-fun temp846_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp846_167 () (_ BitVec 64))
(declare-fun temp846_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp846_169 () (_ BitVec 64))
(declare-fun temp846_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp846_171 () (_ BitVec 64))
(declare-fun temp846_172 () (_ BitVec 64))
(declare-fun temp846_173 () (_ BitVec 64))
(declare-fun temp846_174 () (_ BitVec 64))
(declare-fun temp846_175 () (_ BitVec 64))
(declare-fun temp846_176 () (_ BitVec 64))
(declare-fun temp846_177 () (_ BitVec 64))
(declare-fun temp846_178 () (_ BitVec 64))
(declare-fun temp846_179 () (_ BitVec 64))
(declare-fun temp846_180 () (_ BitVec 64))
(declare-fun temp846_181 () (_ BitVec 64))
(declare-fun temp846_182 () (_ BitVec 64))
(declare-fun temp846_183 () (_ BitVec 64))
(declare-fun temp846_184 () (_ BitVec 64))
(declare-fun temp846_185 () (_ BitVec 64))
(declare-fun temp846_186 () (_ BitVec 64))
(declare-fun temp846_187 () (_ BitVec 64))
(declare-fun temp846_188 () (_ BitVec 64))
(declare-fun temp846_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp846_190 () (_ BitVec 64))
(declare-fun temp846_192 () (_ BitVec 64))
(declare-fun temp846_193 () (_ BitVec 64))
(declare-fun temp846_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp846_194 () (_ BitVec 64))
(declare-fun temp846_195 () (_ BitVec 64))
(declare-fun temp846_197 () (_ BitVec 64))
(declare-fun temp846_198 () (_ BitVec 64))
(declare-fun temp846_196 () (_ BitVec 64))
(declare-fun temp846_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp846_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp846_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp846_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp846_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp846_204 () (_ BitVec 64))
(declare-fun temp846_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp846_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp846_207 () (_ BitVec 64))
(declare-fun temp846_208 () (_ BitVec 64))
(declare-fun temp846_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp846_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp846_211 () (_ BitVec 64))
(declare-fun temp846_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp846_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp846_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp846_215 () (_ BitVec 64))
(assert (= temp846_1 #x0000000000000001))
(assert (= var77203 temp846_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp846_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp846_2)))
(assert (= temp846_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp846_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp846_4 #x0000000000000000))
(assert (= var210941 temp846_4))
(assert (= temp846_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp846_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp846_6 #x0000000000000000))
(assert (= var210986 temp846_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp846_7 #x0000000000000000))
(assert (= temp846_8 temp846_7))
(assert (= temp846_9 (select ARGNAME_padding_NAMEEND_VAL temp846_8)))
(assert (= temp846_10 #x0000000000000001))
(assert (= temp846_11 temp846_10))
(assert (= temp846_12 (select ARGNAME_padding_NAMEEND_VAL temp846_11)))
(assert (= temp846_13 #x0000000000000002))
(assert (= temp846_14 temp846_13))
(assert (= temp846_15 (select ARGNAME_padding_NAMEEND_VAL temp846_14)))
(assert (= temp846_16 #x0000000000000003))
(assert (= temp846_17 temp846_16))
(assert (= temp846_18 (select ARGNAME_padding_NAMEEND_VAL temp846_17)))
(assert (= temp846_19 #x0000000000000004))
(assert (= temp846_20 temp846_19))
(assert (= temp846_21 (select ARGNAME_padding_NAMEEND_VAL temp846_20)))
(assert (= temp846_22 #x0000000000000005))
(assert (= temp846_23 temp846_22))
(assert (= temp846_24 (select ARGNAME_padding_NAMEEND_VAL temp846_23)))
(assert (= temp846_25 #x0000000000000000))
(assert (= temp846_26 #x0000000000000000))
(assert (= temp846_27 temp846_26))
(assert (= temp846_28 (select ARGNAME_padding_NAMEEND_VAL temp846_27)))
(assert (= temp846_29 #x0000000000000000))
(assert (= temp846_30 #x0000000000000001))
(assert (= temp846_31 temp846_30))
(assert (= temp846_32 (select ARGNAME_padding_NAMEEND_VAL temp846_31)))
(assert (= temp846_33 #x0000000000000000))
(assert (= temp846_34 #x0000000000000002))
(assert (= temp846_35 temp846_34))
(assert (= temp846_36 (select ARGNAME_padding_NAMEEND_VAL temp846_35)))
(assert (= temp846_37 #x0000000000000000))
(assert (= temp846_38 #x0000000000000003))
(assert (= temp846_39 temp846_38))
(assert (= temp846_40 (select ARGNAME_padding_NAMEEND_VAL temp846_39)))
(assert (= temp846_41 #x0000000000000000))
(assert (= temp846_42 #x0000000000000004))
(assert (= temp846_43 temp846_42))
(assert (= temp846_44 (select ARGNAME_padding_NAMEEND_VAL temp846_43)))
(assert (= temp846_45 #x0000000000000000))
(assert (= temp846_46 #x0000000000000005))
(assert (= temp846_47 temp846_46))
(assert (= temp846_48 (select ARGNAME_padding_NAMEEND_VAL temp846_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp846_28 temp846_25)
             (bvslt temp846_32 temp846_29)
             (bvslt temp846_36 temp846_33)
             (bvslt temp846_40 temp846_37)
             (bvslt temp846_44 temp846_41)
             (bvslt temp846_48 temp846_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp846_49 #x0000000000000000))
(assert (= var1191714 temp846_49))
(assert (= temp846_50 #x0000000000000000))
(assert (= temp846_51 temp846_50))
(assert (= temp846_52 (select ARGNAME_output_padding_NAMEEND_VAL temp846_51)))
(assert (= temp846_53 #x0000000000000001))
(assert (= temp846_54 temp846_53))
(assert (= temp846_55 (select ARGNAME_output_padding_NAMEEND_VAL temp846_54)))
(assert (= temp846_56 #x0000000000000002))
(assert (= temp846_57 temp846_56))
(assert (= temp846_58 (select ARGNAME_output_padding_NAMEEND_VAL temp846_57)))
(assert (= temp846_59 #x0000000000000003))
(assert (= temp846_60 temp846_59))
(assert (= temp846_61 (select ARGNAME_output_padding_NAMEEND_VAL temp846_60)))
(assert (= temp846_62 #x0000000000000004))
(assert (= temp846_63 temp846_62))
(assert (= temp846_64 (select ARGNAME_output_padding_NAMEEND_VAL temp846_63)))
(assert (= temp846_65 #x0000000000000005))
(assert (= temp846_66 temp846_65))
(assert (= temp846_67 (select ARGNAME_output_padding_NAMEEND_VAL temp846_66)))
(assert (= temp846_68 #x0000000000000000))
(assert (= temp846_69 #x0000000000000000))
(assert (= temp846_70 temp846_69))
(assert (= temp846_71 (select ARGNAME_output_padding_NAMEEND_VAL temp846_70)))
(assert (= temp846_72 #x0000000000000000))
(assert (= temp846_73 #x0000000000000001))
(assert (= temp846_74 temp846_73))
(assert (= temp846_75 (select ARGNAME_output_padding_NAMEEND_VAL temp846_74)))
(assert (= temp846_76 #x0000000000000000))
(assert (= temp846_77 #x0000000000000002))
(assert (= temp846_78 temp846_77))
(assert (= temp846_79 (select ARGNAME_output_padding_NAMEEND_VAL temp846_78)))
(assert (= temp846_80 #x0000000000000000))
(assert (= temp846_81 #x0000000000000003))
(assert (= temp846_82 temp846_81))
(assert (= temp846_83 (select ARGNAME_output_padding_NAMEEND_VAL temp846_82)))
(assert (= temp846_84 #x0000000000000000))
(assert (= temp846_85 #x0000000000000004))
(assert (= temp846_86 temp846_85))
(assert (= temp846_87 (select ARGNAME_output_padding_NAMEEND_VAL temp846_86)))
(assert (= temp846_88 #x0000000000000000))
(assert (= temp846_89 #x0000000000000005))
(assert (= temp846_90 temp846_89))
(assert (= temp846_91 (select ARGNAME_output_padding_NAMEEND_VAL temp846_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp846_71 temp846_68)
             (bvslt temp846_75 temp846_72)
             (bvslt temp846_79 temp846_76)
             (bvslt temp846_83 temp846_80)
             (bvslt temp846_87 temp846_84)
             (bvslt temp846_91 temp846_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp846_92 #x0000000000000000))
(assert (= var1191725 temp846_92))
(assert (= temp846_93 #x0000000000000000))
(assert (= temp846_94 temp846_93))
(assert (= temp846_95 (select ARGNAME_stride_NAMEEND_VAL temp846_94)))
(assert (= temp846_96 #x0000000000000001))
(assert (= temp846_97 temp846_96))
(assert (= temp846_98 (select ARGNAME_stride_NAMEEND_VAL temp846_97)))
(assert (= temp846_99 #x0000000000000002))
(assert (= temp846_100 temp846_99))
(assert (= temp846_101 (select ARGNAME_stride_NAMEEND_VAL temp846_100)))
(assert (= temp846_102 #x0000000000000003))
(assert (= temp846_103 temp846_102))
(assert (= temp846_104 (select ARGNAME_stride_NAMEEND_VAL temp846_103)))
(assert (= temp846_105 #x0000000000000004))
(assert (= temp846_106 temp846_105))
(assert (= temp846_107 (select ARGNAME_stride_NAMEEND_VAL temp846_106)))
(assert (= temp846_108 #x0000000000000005))
(assert (= temp846_109 temp846_108))
(assert (= temp846_110 (select ARGNAME_stride_NAMEEND_VAL temp846_109)))
(assert (= temp846_111 #x0000000000000000))
(assert (= temp846_112 #x0000000000000000))
(assert (= temp846_113 temp846_112))
(assert (= temp846_114 (select ARGNAME_stride_NAMEEND_VAL temp846_113)))
(assert (= temp846_115 #x0000000000000000))
(assert (= temp846_116 #x0000000000000001))
(assert (= temp846_117 temp846_116))
(assert (= temp846_118 (select ARGNAME_stride_NAMEEND_VAL temp846_117)))
(assert (= temp846_119 #x0000000000000000))
(assert (= temp846_120 #x0000000000000002))
(assert (= temp846_121 temp846_120))
(assert (= temp846_122 (select ARGNAME_stride_NAMEEND_VAL temp846_121)))
(assert (= temp846_123 #x0000000000000000))
(assert (= temp846_124 #x0000000000000003))
(assert (= temp846_125 temp846_124))
(assert (= temp846_126 (select ARGNAME_stride_NAMEEND_VAL temp846_125)))
(assert (= temp846_127 #x0000000000000000))
(assert (= temp846_128 #x0000000000000004))
(assert (= temp846_129 temp846_128))
(assert (= temp846_130 (select ARGNAME_stride_NAMEEND_VAL temp846_129)))
(assert (= temp846_131 #x0000000000000000))
(assert (= temp846_132 #x0000000000000005))
(assert (= temp846_133 temp846_132))
(assert (= temp846_134 (select ARGNAME_stride_NAMEEND_VAL temp846_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp846_114 temp846_111)
             (bvsle temp846_118 temp846_115)
             (bvsle temp846_122 temp846_119)
             (bvsle temp846_126 temp846_123)
             (bvsle temp846_130 temp846_127)
             (bvsle temp846_134 temp846_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp846_135 #x0000000000000000))
(assert (= var1191735 temp846_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp846_136 #x0000000000000001))
(assert (= var1191747 temp846_136))
(assert (= temp846_137 #x0000000000000000))
(assert (= var1179826 temp846_137))
(assert (= temp846_138 #x0000000000000000))
(assert (= temp846_139 temp846_138))
(assert (= temp846_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp846_139)))
(assert (= temp846_141 #x0000000000000001))
(assert (= temp846_142 temp846_141))
(assert (= temp846_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp846_142)))
(assert (= temp846_144 #x0000000000000002))
(assert (= temp846_145 temp846_144))
(assert (= temp846_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp846_145)))
(assert (= temp846_147 #x0000000000000003))
(assert (= temp846_148 temp846_147))
(assert (= temp846_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp846_148)))
(assert (= temp846_150 #x0000000000000004))
(assert (= temp846_151 temp846_150))
(assert (= temp846_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp846_151)))
(assert (= temp846_153 #x0000000000000005))
(assert (= temp846_154 temp846_153))
(assert (= temp846_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp846_154)))
(assert (= temp846_157 var1179826))
(assert (= temp846_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp846_157)))
(assert (= temp846_156 temp846_158))
(assert (= var1191780
   (ite (bvslt temp846_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp846_159 #x0000000000000000))
(assert (= var1191780 temp846_159))
(assert (= temp846_160 #x0000000000000000))
(assert (= var1179826 temp846_160))
(assert (= temp846_162 var1179826))
(assert (= temp846_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp846_162)))
(assert (= temp846_161 temp846_163))
(assert (= var1191802 (bvsmod temp846_161 ARGNAME_groups_NAMEEND)))
(assert (= temp846_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp846_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp846_165 #x0000000000000001))
(assert (= var1191803 temp846_165))
(assert (= temp846_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp846_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp846_167 #x0000000000000001))
(assert (= var1191823 temp846_167))
(assert (= temp846_168 #x0000000000000001))
(assert (= var1180714 temp846_168))
(assert (= temp846_169 #x0000000000000000))
(assert (= temp846_170 temp846_169))
(assert (= temp846_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp846_170)))
(assert (= temp846_172 #x0000000000000001))
(assert (= temp846_173 temp846_172))
(assert (= temp846_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp846_173)))
(assert (= temp846_175 #x0000000000000002))
(assert (= temp846_176 temp846_175))
(assert (= temp846_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp846_176)))
(assert (= temp846_178 #x0000000000000003))
(assert (= temp846_179 temp846_178))
(assert (= temp846_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp846_179)))
(assert (= temp846_181 #x0000000000000004))
(assert (= temp846_182 temp846_181))
(assert (= temp846_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp846_182)))
(assert (= temp846_184 #x0000000000000005))
(assert (= temp846_185 temp846_184))
(assert (= temp846_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp846_185)))
(assert (= temp846_187 #x0000000000000000))
(assert (= temp846_188
   (ite (bvslt var1180714 temp846_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp846_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp846_188)))
(assert (= var1191831 temp846_189))
(assert (bvslt (ite (bvslt var1180714 temp846_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp846_190 #x0000000000000001))
(assert (= var1180714 temp846_190))
(assert (= temp846_192 var1180714))
(assert (= temp846_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp846_192)))
(assert (= temp846_191 temp846_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp846_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp846_194 #x0000000000000001))
(assert (= var1191836 temp846_194))
(assert (= temp846_195 #x0000000000000000))
(assert (= var1179826 temp846_195))
(assert (= temp846_197 var1179826))
(assert (= temp846_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp846_197)))
(assert (= temp846_196 temp846_198))
(assert (= temp846_199 #x0000000000000002))
(assert (= var1586025 temp846_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp846_200 #x0000000000000001))
(assert (= var1191993 temp846_200))
(assert (= temp846_201 #x0000000000000001))
(assert (= var2700303 temp846_201))
(assert (= temp846_202 #x0000000000000001))
(assert (= var2962447 temp846_202))
(assert (= temp846_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp846_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp846_204 #x0000000000000001))
(assert (= var211058 temp846_204))
(assert (= temp846_205 #x0000000000000001))
(assert (= var211188 temp846_205))
(assert (= var3879401 var211188))
(assert (= temp846_206 #x0000000000000000))
(assert (= var3866802 temp846_206))
(assert (= temp846_207 #x0000000000000000))
(assert (= temp846_208
   (ite (bvslt var3866802 temp846_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp846_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp846_208)))
(assert (= var3879420 temp846_209))
(assert (bvslt (ite (bvslt var3866802 temp846_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp846_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp846_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp846_211 #x0000000000000001))
(assert (= var3879421 temp846_211))
(assert (= temp846_212 #x0000000000000000))
(assert (= var4079423 temp846_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp846_213 #x0000000000000002))
(assert (= var4208259 temp846_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp846_214 #x0000000000000000))
(assert (= var4273820 temp846_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp846_215 #x0000000000000001))
(assert (= var211058 temp846_215))
(model-add temp846_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp846_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp846_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp846_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






