(declare-fun temp105_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp105_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp105_3 () (_ BitVec 64))
(declare-fun temp105_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp105_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp105_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp105_7 () (_ BitVec 64))
(declare-fun temp105_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp105_9 () (_ BitVec 64))
(declare-fun temp105_10 () (_ BitVec 64))
(declare-fun temp105_11 () (_ BitVec 64))
(declare-fun temp105_12 () (_ BitVec 64))
(declare-fun temp105_13 () (_ BitVec 64))
(declare-fun temp105_14 () (_ BitVec 64))
(declare-fun temp105_15 () (_ BitVec 64))
(declare-fun temp105_16 () (_ BitVec 64))
(declare-fun temp105_17 () (_ BitVec 64))
(declare-fun temp105_18 () (_ BitVec 64))
(declare-fun temp105_19 () (_ BitVec 64))
(declare-fun temp105_20 () (_ BitVec 64))
(declare-fun temp105_21 () (_ BitVec 64))
(declare-fun temp105_22 () (_ BitVec 64))
(declare-fun temp105_23 () (_ BitVec 64))
(declare-fun temp105_24 () (_ BitVec 64))
(declare-fun temp105_25 () (_ BitVec 64))
(declare-fun temp105_26 () (_ BitVec 64))
(declare-fun temp105_27 () (_ BitVec 64))
(declare-fun temp105_28 () (_ BitVec 64))
(declare-fun temp105_29 () (_ BitVec 64))
(declare-fun temp105_30 () (_ BitVec 64))
(declare-fun temp105_31 () (_ BitVec 64))
(declare-fun temp105_32 () (_ BitVec 64))
(declare-fun temp105_33 () (_ BitVec 64))
(declare-fun temp105_34 () (_ BitVec 64))
(declare-fun temp105_35 () (_ BitVec 64))
(declare-fun temp105_36 () (_ BitVec 64))
(declare-fun temp105_37 () (_ BitVec 64))
(declare-fun temp105_38 () (_ BitVec 64))
(declare-fun temp105_39 () (_ BitVec 64))
(declare-fun temp105_40 () (_ BitVec 64))
(declare-fun temp105_41 () (_ BitVec 64))
(declare-fun temp105_42 () (_ BitVec 64))
(declare-fun temp105_43 () (_ BitVec 64))
(declare-fun temp105_44 () (_ BitVec 64))
(declare-fun temp105_45 () (_ BitVec 64))
(declare-fun temp105_46 () (_ BitVec 64))
(declare-fun temp105_47 () (_ BitVec 64))
(declare-fun temp105_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp105_49 () (_ BitVec 64))
(declare-fun temp105_50 () (_ BitVec 64))
(declare-fun temp105_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp105_52 () (_ BitVec 64))
(declare-fun temp105_53 () (_ BitVec 64))
(declare-fun temp105_54 () (_ BitVec 64))
(declare-fun temp105_55 () (_ BitVec 64))
(declare-fun temp105_56 () (_ BitVec 64))
(declare-fun temp105_57 () (_ BitVec 64))
(declare-fun temp105_58 () (_ BitVec 64))
(declare-fun temp105_59 () (_ BitVec 64))
(declare-fun temp105_60 () (_ BitVec 64))
(declare-fun temp105_61 () (_ BitVec 64))
(declare-fun temp105_62 () (_ BitVec 64))
(declare-fun temp105_63 () (_ BitVec 64))
(declare-fun temp105_64 () (_ BitVec 64))
(declare-fun temp105_65 () (_ BitVec 64))
(declare-fun temp105_66 () (_ BitVec 64))
(declare-fun temp105_67 () (_ BitVec 64))
(declare-fun temp105_68 () (_ BitVec 64))
(declare-fun temp105_69 () (_ BitVec 64))
(declare-fun temp105_70 () (_ BitVec 64))
(declare-fun temp105_71 () (_ BitVec 64))
(declare-fun temp105_72 () (_ BitVec 64))
(declare-fun temp105_73 () (_ BitVec 64))
(declare-fun temp105_74 () (_ BitVec 64))
(declare-fun temp105_75 () (_ BitVec 64))
(declare-fun temp105_76 () (_ BitVec 64))
(declare-fun temp105_77 () (_ BitVec 64))
(declare-fun temp105_78 () (_ BitVec 64))
(declare-fun temp105_79 () (_ BitVec 64))
(declare-fun temp105_80 () (_ BitVec 64))
(declare-fun temp105_81 () (_ BitVec 64))
(declare-fun temp105_82 () (_ BitVec 64))
(declare-fun temp105_83 () (_ BitVec 64))
(declare-fun temp105_84 () (_ BitVec 64))
(declare-fun temp105_85 () (_ BitVec 64))
(declare-fun temp105_86 () (_ BitVec 64))
(declare-fun temp105_87 () (_ BitVec 64))
(declare-fun temp105_88 () (_ BitVec 64))
(declare-fun temp105_89 () (_ BitVec 64))
(declare-fun temp105_90 () (_ BitVec 64))
(declare-fun temp105_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp105_92 () (_ BitVec 64))
(declare-fun temp105_93 () (_ BitVec 64))
(declare-fun temp105_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp105_95 () (_ BitVec 64))
(declare-fun temp105_96 () (_ BitVec 64))
(declare-fun temp105_97 () (_ BitVec 64))
(declare-fun temp105_98 () (_ BitVec 64))
(declare-fun temp105_99 () (_ BitVec 64))
(declare-fun temp105_100 () (_ BitVec 64))
(declare-fun temp105_101 () (_ BitVec 64))
(declare-fun temp105_102 () (_ BitVec 64))
(declare-fun temp105_103 () (_ BitVec 64))
(declare-fun temp105_104 () (_ BitVec 64))
(declare-fun temp105_105 () (_ BitVec 64))
(declare-fun temp105_106 () (_ BitVec 64))
(declare-fun temp105_107 () (_ BitVec 64))
(declare-fun temp105_108 () (_ BitVec 64))
(declare-fun temp105_109 () (_ BitVec 64))
(declare-fun temp105_110 () (_ BitVec 64))
(declare-fun temp105_111 () (_ BitVec 64))
(declare-fun temp105_112 () (_ BitVec 64))
(declare-fun temp105_113 () (_ BitVec 64))
(declare-fun temp105_114 () (_ BitVec 64))
(declare-fun temp105_115 () (_ BitVec 64))
(declare-fun temp105_116 () (_ BitVec 64))
(declare-fun temp105_117 () (_ BitVec 64))
(declare-fun temp105_118 () (_ BitVec 64))
(declare-fun temp105_119 () (_ BitVec 64))
(declare-fun temp105_120 () (_ BitVec 64))
(declare-fun temp105_121 () (_ BitVec 64))
(declare-fun temp105_122 () (_ BitVec 64))
(declare-fun temp105_123 () (_ BitVec 64))
(declare-fun temp105_124 () (_ BitVec 64))
(declare-fun temp105_125 () (_ BitVec 64))
(declare-fun temp105_126 () (_ BitVec 64))
(declare-fun temp105_127 () (_ BitVec 64))
(declare-fun temp105_128 () (_ BitVec 64))
(declare-fun temp105_129 () (_ BitVec 64))
(declare-fun temp105_130 () (_ BitVec 64))
(declare-fun temp105_131 () (_ BitVec 64))
(declare-fun temp105_132 () (_ BitVec 64))
(declare-fun temp105_133 () (_ BitVec 64))
(declare-fun temp105_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp105_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp105_136 () (_ BitVec 64))
(declare-fun temp105_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp105_138 () (_ BitVec 64))
(declare-fun temp105_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp105_140 () (_ BitVec 64))
(declare-fun temp105_141 () (_ BitVec 64))
(declare-fun temp105_142 () (_ BitVec 64))
(declare-fun temp105_143 () (_ BitVec 64))
(declare-fun temp105_144 () (_ BitVec 64))
(declare-fun temp105_145 () (_ BitVec 64))
(declare-fun temp105_146 () (_ BitVec 64))
(declare-fun temp105_147 () (_ BitVec 64))
(declare-fun temp105_148 () (_ BitVec 64))
(declare-fun temp105_149 () (_ BitVec 64))
(declare-fun temp105_150 () (_ BitVec 64))
(declare-fun temp105_151 () (_ BitVec 64))
(declare-fun temp105_152 () (_ BitVec 64))
(declare-fun temp105_153 () (_ BitVec 64))
(declare-fun temp105_154 () (_ BitVec 64))
(declare-fun temp105_155 () (_ BitVec 64))
(declare-fun temp105_157 () (_ BitVec 64))
(declare-fun temp105_158 () (_ BitVec 64))
(declare-fun temp105_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp105_159 () (_ BitVec 64))
(declare-fun temp105_160 () (_ BitVec 64))
(declare-fun temp105_162 () (_ BitVec 64))
(declare-fun temp105_163 () (_ BitVec 64))
(declare-fun temp105_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp105_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp105_165 () (_ BitVec 64))
(declare-fun temp105_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp105_167 () (_ BitVec 64))
(declare-fun temp105_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp105_169 () (_ BitVec 64))
(declare-fun temp105_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp105_171 () (_ BitVec 64))
(declare-fun temp105_172 () (_ BitVec 64))
(declare-fun temp105_173 () (_ BitVec 64))
(declare-fun temp105_174 () (_ BitVec 64))
(declare-fun temp105_175 () (_ BitVec 64))
(declare-fun temp105_176 () (_ BitVec 64))
(declare-fun temp105_177 () (_ BitVec 64))
(declare-fun temp105_178 () (_ BitVec 64))
(declare-fun temp105_179 () (_ BitVec 64))
(declare-fun temp105_180 () (_ BitVec 64))
(declare-fun temp105_181 () (_ BitVec 64))
(declare-fun temp105_182 () (_ BitVec 64))
(declare-fun temp105_183 () (_ BitVec 64))
(declare-fun temp105_184 () (_ BitVec 64))
(declare-fun temp105_185 () (_ BitVec 64))
(declare-fun temp105_186 () (_ BitVec 64))
(declare-fun temp105_187 () (_ BitVec 64))
(declare-fun temp105_188 () (_ BitVec 64))
(declare-fun temp105_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp105_190 () (_ BitVec 64))
(declare-fun temp105_192 () (_ BitVec 64))
(declare-fun temp105_193 () (_ BitVec 64))
(declare-fun temp105_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp105_194 () (_ BitVec 64))
(declare-fun temp105_195 () (_ BitVec 64))
(declare-fun temp105_197 () (_ BitVec 64))
(declare-fun temp105_198 () (_ BitVec 64))
(declare-fun temp105_196 () (_ BitVec 64))
(declare-fun temp105_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp105_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp105_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp105_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp105_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp105_204 () (_ BitVec 64))
(declare-fun temp105_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp105_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp105_207 () (_ BitVec 64))
(declare-fun temp105_208 () (_ BitVec 64))
(declare-fun temp105_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp105_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp105_211 () (_ BitVec 64))
(declare-fun temp105_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp105_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp105_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp105_216 () (_ BitVec 64))
(declare-fun temp105_215 () (_ BitVec 64))
(declare-fun temp105_217 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp105_218 () (_ BitVec 64))
(declare-fun temp105_219 () (_ BitVec 64))
(declare-fun temp105_220 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp105_221 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp105_222 () (_ BitVec 64))
(declare-fun temp105_224 () (_ BitVec 64))
(declare-fun temp105_223 () (_ BitVec 64))
(declare-fun temp105_225 () (_ BitVec 64))
(assert (= temp105_1 #x0000000000000001))
(assert (= var77203 temp105_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp105_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp105_2)))
(assert (= temp105_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp105_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp105_4 #x0000000000000000))
(assert (= var210941 temp105_4))
(assert (= temp105_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp105_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp105_6 #x0000000000000000))
(assert (= var210986 temp105_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp105_7 #x0000000000000000))
(assert (= temp105_8 temp105_7))
(assert (= temp105_9 (select ARGNAME_padding_NAMEEND_VAL temp105_8)))
(assert (= temp105_10 #x0000000000000001))
(assert (= temp105_11 temp105_10))
(assert (= temp105_12 (select ARGNAME_padding_NAMEEND_VAL temp105_11)))
(assert (= temp105_13 #x0000000000000002))
(assert (= temp105_14 temp105_13))
(assert (= temp105_15 (select ARGNAME_padding_NAMEEND_VAL temp105_14)))
(assert (= temp105_16 #x0000000000000003))
(assert (= temp105_17 temp105_16))
(assert (= temp105_18 (select ARGNAME_padding_NAMEEND_VAL temp105_17)))
(assert (= temp105_19 #x0000000000000004))
(assert (= temp105_20 temp105_19))
(assert (= temp105_21 (select ARGNAME_padding_NAMEEND_VAL temp105_20)))
(assert (= temp105_22 #x0000000000000005))
(assert (= temp105_23 temp105_22))
(assert (= temp105_24 (select ARGNAME_padding_NAMEEND_VAL temp105_23)))
(assert (= temp105_25 #x0000000000000000))
(assert (= temp105_26 #x0000000000000000))
(assert (= temp105_27 temp105_26))
(assert (= temp105_28 (select ARGNAME_padding_NAMEEND_VAL temp105_27)))
(assert (= temp105_29 #x0000000000000000))
(assert (= temp105_30 #x0000000000000001))
(assert (= temp105_31 temp105_30))
(assert (= temp105_32 (select ARGNAME_padding_NAMEEND_VAL temp105_31)))
(assert (= temp105_33 #x0000000000000000))
(assert (= temp105_34 #x0000000000000002))
(assert (= temp105_35 temp105_34))
(assert (= temp105_36 (select ARGNAME_padding_NAMEEND_VAL temp105_35)))
(assert (= temp105_37 #x0000000000000000))
(assert (= temp105_38 #x0000000000000003))
(assert (= temp105_39 temp105_38))
(assert (= temp105_40 (select ARGNAME_padding_NAMEEND_VAL temp105_39)))
(assert (= temp105_41 #x0000000000000000))
(assert (= temp105_42 #x0000000000000004))
(assert (= temp105_43 temp105_42))
(assert (= temp105_44 (select ARGNAME_padding_NAMEEND_VAL temp105_43)))
(assert (= temp105_45 #x0000000000000000))
(assert (= temp105_46 #x0000000000000005))
(assert (= temp105_47 temp105_46))
(assert (= temp105_48 (select ARGNAME_padding_NAMEEND_VAL temp105_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp105_28 temp105_25)
             (bvslt temp105_32 temp105_29)
             (bvslt temp105_36 temp105_33)
             (bvslt temp105_40 temp105_37)
             (bvslt temp105_44 temp105_41)
             (bvslt temp105_48 temp105_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp105_49 #x0000000000000000))
(assert (= var1191714 temp105_49))
(assert (= temp105_50 #x0000000000000000))
(assert (= temp105_51 temp105_50))
(assert (= temp105_52 (select ARGNAME_output_padding_NAMEEND_VAL temp105_51)))
(assert (= temp105_53 #x0000000000000001))
(assert (= temp105_54 temp105_53))
(assert (= temp105_55 (select ARGNAME_output_padding_NAMEEND_VAL temp105_54)))
(assert (= temp105_56 #x0000000000000002))
(assert (= temp105_57 temp105_56))
(assert (= temp105_58 (select ARGNAME_output_padding_NAMEEND_VAL temp105_57)))
(assert (= temp105_59 #x0000000000000003))
(assert (= temp105_60 temp105_59))
(assert (= temp105_61 (select ARGNAME_output_padding_NAMEEND_VAL temp105_60)))
(assert (= temp105_62 #x0000000000000004))
(assert (= temp105_63 temp105_62))
(assert (= temp105_64 (select ARGNAME_output_padding_NAMEEND_VAL temp105_63)))
(assert (= temp105_65 #x0000000000000005))
(assert (= temp105_66 temp105_65))
(assert (= temp105_67 (select ARGNAME_output_padding_NAMEEND_VAL temp105_66)))
(assert (= temp105_68 #x0000000000000000))
(assert (= temp105_69 #x0000000000000000))
(assert (= temp105_70 temp105_69))
(assert (= temp105_71 (select ARGNAME_output_padding_NAMEEND_VAL temp105_70)))
(assert (= temp105_72 #x0000000000000000))
(assert (= temp105_73 #x0000000000000001))
(assert (= temp105_74 temp105_73))
(assert (= temp105_75 (select ARGNAME_output_padding_NAMEEND_VAL temp105_74)))
(assert (= temp105_76 #x0000000000000000))
(assert (= temp105_77 #x0000000000000002))
(assert (= temp105_78 temp105_77))
(assert (= temp105_79 (select ARGNAME_output_padding_NAMEEND_VAL temp105_78)))
(assert (= temp105_80 #x0000000000000000))
(assert (= temp105_81 #x0000000000000003))
(assert (= temp105_82 temp105_81))
(assert (= temp105_83 (select ARGNAME_output_padding_NAMEEND_VAL temp105_82)))
(assert (= temp105_84 #x0000000000000000))
(assert (= temp105_85 #x0000000000000004))
(assert (= temp105_86 temp105_85))
(assert (= temp105_87 (select ARGNAME_output_padding_NAMEEND_VAL temp105_86)))
(assert (= temp105_88 #x0000000000000000))
(assert (= temp105_89 #x0000000000000005))
(assert (= temp105_90 temp105_89))
(assert (= temp105_91 (select ARGNAME_output_padding_NAMEEND_VAL temp105_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp105_71 temp105_68)
             (bvslt temp105_75 temp105_72)
             (bvslt temp105_79 temp105_76)
             (bvslt temp105_83 temp105_80)
             (bvslt temp105_87 temp105_84)
             (bvslt temp105_91 temp105_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp105_92 #x0000000000000000))
(assert (= var1191725 temp105_92))
(assert (= temp105_93 #x0000000000000000))
(assert (= temp105_94 temp105_93))
(assert (= temp105_95 (select ARGNAME_stride_NAMEEND_VAL temp105_94)))
(assert (= temp105_96 #x0000000000000001))
(assert (= temp105_97 temp105_96))
(assert (= temp105_98 (select ARGNAME_stride_NAMEEND_VAL temp105_97)))
(assert (= temp105_99 #x0000000000000002))
(assert (= temp105_100 temp105_99))
(assert (= temp105_101 (select ARGNAME_stride_NAMEEND_VAL temp105_100)))
(assert (= temp105_102 #x0000000000000003))
(assert (= temp105_103 temp105_102))
(assert (= temp105_104 (select ARGNAME_stride_NAMEEND_VAL temp105_103)))
(assert (= temp105_105 #x0000000000000004))
(assert (= temp105_106 temp105_105))
(assert (= temp105_107 (select ARGNAME_stride_NAMEEND_VAL temp105_106)))
(assert (= temp105_108 #x0000000000000005))
(assert (= temp105_109 temp105_108))
(assert (= temp105_110 (select ARGNAME_stride_NAMEEND_VAL temp105_109)))
(assert (= temp105_111 #x0000000000000000))
(assert (= temp105_112 #x0000000000000000))
(assert (= temp105_113 temp105_112))
(assert (= temp105_114 (select ARGNAME_stride_NAMEEND_VAL temp105_113)))
(assert (= temp105_115 #x0000000000000000))
(assert (= temp105_116 #x0000000000000001))
(assert (= temp105_117 temp105_116))
(assert (= temp105_118 (select ARGNAME_stride_NAMEEND_VAL temp105_117)))
(assert (= temp105_119 #x0000000000000000))
(assert (= temp105_120 #x0000000000000002))
(assert (= temp105_121 temp105_120))
(assert (= temp105_122 (select ARGNAME_stride_NAMEEND_VAL temp105_121)))
(assert (= temp105_123 #x0000000000000000))
(assert (= temp105_124 #x0000000000000003))
(assert (= temp105_125 temp105_124))
(assert (= temp105_126 (select ARGNAME_stride_NAMEEND_VAL temp105_125)))
(assert (= temp105_127 #x0000000000000000))
(assert (= temp105_128 #x0000000000000004))
(assert (= temp105_129 temp105_128))
(assert (= temp105_130 (select ARGNAME_stride_NAMEEND_VAL temp105_129)))
(assert (= temp105_131 #x0000000000000000))
(assert (= temp105_132 #x0000000000000005))
(assert (= temp105_133 temp105_132))
(assert (= temp105_134 (select ARGNAME_stride_NAMEEND_VAL temp105_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp105_114 temp105_111)
             (bvsle temp105_118 temp105_115)
             (bvsle temp105_122 temp105_119)
             (bvsle temp105_126 temp105_123)
             (bvsle temp105_130 temp105_127)
             (bvsle temp105_134 temp105_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp105_135 #x0000000000000000))
(assert (= var1191735 temp105_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp105_136 #x0000000000000001))
(assert (= var1191747 temp105_136))
(assert (= temp105_137 #x0000000000000000))
(assert (= var1179826 temp105_137))
(assert (= temp105_138 #x0000000000000000))
(assert (= temp105_139 temp105_138))
(assert (= temp105_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp105_139)))
(assert (= temp105_141 #x0000000000000001))
(assert (= temp105_142 temp105_141))
(assert (= temp105_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp105_142)))
(assert (= temp105_144 #x0000000000000002))
(assert (= temp105_145 temp105_144))
(assert (= temp105_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp105_145)))
(assert (= temp105_147 #x0000000000000003))
(assert (= temp105_148 temp105_147))
(assert (= temp105_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp105_148)))
(assert (= temp105_150 #x0000000000000004))
(assert (= temp105_151 temp105_150))
(assert (= temp105_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp105_151)))
(assert (= temp105_153 #x0000000000000005))
(assert (= temp105_154 temp105_153))
(assert (= temp105_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp105_154)))
(assert (= temp105_157 var1179826))
(assert (= temp105_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp105_157)))
(assert (= temp105_156 temp105_158))
(assert (= var1191780
   (ite (bvslt temp105_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp105_159 #x0000000000000000))
(assert (= var1191780 temp105_159))
(assert (= temp105_160 #x0000000000000000))
(assert (= var1179826 temp105_160))
(assert (= temp105_162 var1179826))
(assert (= temp105_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp105_162)))
(assert (= temp105_161 temp105_163))
(assert (= var1191802 (bvsmod temp105_161 ARGNAME_groups_NAMEEND)))
(assert (= temp105_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp105_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp105_165 #x0000000000000001))
(assert (= var1191803 temp105_165))
(assert (= temp105_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp105_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp105_167 #x0000000000000001))
(assert (= var1191823 temp105_167))
(assert (= temp105_168 #x0000000000000001))
(assert (= var1180714 temp105_168))
(assert (= temp105_169 #x0000000000000000))
(assert (= temp105_170 temp105_169))
(assert (= temp105_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp105_170)))
(assert (= temp105_172 #x0000000000000001))
(assert (= temp105_173 temp105_172))
(assert (= temp105_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp105_173)))
(assert (= temp105_175 #x0000000000000002))
(assert (= temp105_176 temp105_175))
(assert (= temp105_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp105_176)))
(assert (= temp105_178 #x0000000000000003))
(assert (= temp105_179 temp105_178))
(assert (= temp105_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp105_179)))
(assert (= temp105_181 #x0000000000000004))
(assert (= temp105_182 temp105_181))
(assert (= temp105_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp105_182)))
(assert (= temp105_184 #x0000000000000005))
(assert (= temp105_185 temp105_184))
(assert (= temp105_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp105_185)))
(assert (= temp105_187 #x0000000000000000))
(assert (= temp105_188
   (ite (bvslt var1180714 temp105_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp105_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp105_188)))
(assert (= var1191831 temp105_189))
(assert (bvslt (ite (bvslt var1180714 temp105_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp105_190 #x0000000000000001))
(assert (= var1180714 temp105_190))
(assert (= temp105_192 var1180714))
(assert (= temp105_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp105_192)))
(assert (= temp105_191 temp105_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp105_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp105_194 #x0000000000000001))
(assert (= var1191836 temp105_194))
(assert (= temp105_195 #x0000000000000000))
(assert (= var1179826 temp105_195))
(assert (= temp105_197 var1179826))
(assert (= temp105_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp105_197)))
(assert (= temp105_196 temp105_198))
(assert (= temp105_199 #x0000000000000002))
(assert (= var1586025 temp105_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp105_200 #x0000000000000001))
(assert (= var1191993 temp105_200))
(assert (= temp105_201 #x0000000000000001))
(assert (= var2700303 temp105_201))
(assert (= temp105_202 #x0000000000000001))
(assert (= var2962447 temp105_202))
(assert (= temp105_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp105_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp105_204 #x0000000000000001))
(assert (= var211058 temp105_204))
(assert (= temp105_205 #x0000000000000001))
(assert (= var211188 temp105_205))
(assert (= var3879401 var211188))
(assert (= temp105_206 #x0000000000000000))
(assert (= var3866802 temp105_206))
(assert (= temp105_207 #x0000000000000000))
(assert (= temp105_208
   (ite (bvslt var3866802 temp105_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp105_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp105_208)))
(assert (= var3879420 temp105_209))
(assert (bvslt (ite (bvslt var3866802 temp105_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp105_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp105_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp105_211 #x0000000000000001))
(assert (= var3879421 temp105_211))
(assert (= temp105_212 #x0000000000000000))
(assert (= var4079423 temp105_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp105_213 #x0000000000000002))
(assert (= var4208259 temp105_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp105_214 #x0000000000000000))
(assert (= var4273820 temp105_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp105_216 #xffffffffffffffff))
(assert (= temp105_215 temp105_216))
(assert (= temp105_217 #x0000000000000001))
(assert (= var197674 temp105_217))
(assert (= temp105_218 #x0000000000000000))
(assert (= temp105_219
   (ite (bvslt var197674 temp105_218)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp105_220 (select ARGNAME_input_NAMEEND_DIMSIZE temp105_219)))
(assert (= var211595 temp105_220))
(assert (bvslt (ite (bvslt var197674 temp105_218)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp105_221 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp105_221) #x0000000000000001 #x0000000000000000)))
(assert (= temp105_222 #x0000000000000001))
(assert (= var211596 temp105_222))
(assert (= temp105_224 #xffffffffffffffff))
(assert (= temp105_223 temp105_224))
(assert (= temp105_225 #x0000000000000001))
(assert (= var211058 temp105_225))
(model-add temp105_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp105_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp105_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp105_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





