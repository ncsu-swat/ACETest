(declare-fun temp11013_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp11013_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp11013_3 () (_ BitVec 64))
(declare-fun temp11013_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp11013_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp11013_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp11013_7 () (_ BitVec 64))
(declare-fun temp11013_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11013_9 () (_ BitVec 64))
(declare-fun temp11013_10 () (_ BitVec 64))
(declare-fun temp11013_11 () (_ BitVec 64))
(declare-fun temp11013_12 () (_ BitVec 64))
(declare-fun temp11013_13 () (_ BitVec 64))
(declare-fun temp11013_14 () (_ BitVec 64))
(declare-fun temp11013_15 () (_ BitVec 64))
(declare-fun temp11013_16 () (_ BitVec 64))
(declare-fun temp11013_17 () (_ BitVec 64))
(declare-fun temp11013_18 () (_ BitVec 64))
(declare-fun temp11013_19 () (_ BitVec 64))
(declare-fun temp11013_20 () (_ BitVec 64))
(declare-fun temp11013_21 () (_ BitVec 64))
(declare-fun temp11013_22 () (_ BitVec 64))
(declare-fun temp11013_23 () (_ BitVec 64))
(declare-fun temp11013_24 () (_ BitVec 64))
(declare-fun temp11013_25 () (_ BitVec 64))
(declare-fun temp11013_26 () (_ BitVec 64))
(declare-fun temp11013_27 () (_ BitVec 64))
(declare-fun temp11013_28 () (_ BitVec 64))
(declare-fun temp11013_29 () (_ BitVec 64))
(declare-fun temp11013_30 () (_ BitVec 64))
(declare-fun temp11013_31 () (_ BitVec 64))
(declare-fun temp11013_32 () (_ BitVec 64))
(declare-fun temp11013_33 () (_ BitVec 64))
(declare-fun temp11013_34 () (_ BitVec 64))
(declare-fun temp11013_35 () (_ BitVec 64))
(declare-fun temp11013_36 () (_ BitVec 64))
(declare-fun temp11013_37 () (_ BitVec 64))
(declare-fun temp11013_38 () (_ BitVec 64))
(declare-fun temp11013_39 () (_ BitVec 64))
(declare-fun temp11013_40 () (_ BitVec 64))
(declare-fun temp11013_41 () (_ BitVec 64))
(declare-fun temp11013_42 () (_ BitVec 64))
(declare-fun temp11013_43 () (_ BitVec 64))
(declare-fun temp11013_44 () (_ BitVec 64))
(declare-fun temp11013_45 () (_ BitVec 64))
(declare-fun temp11013_46 () (_ BitVec 64))
(declare-fun temp11013_47 () (_ BitVec 64))
(declare-fun temp11013_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp11013_49 () (_ BitVec 64))
(declare-fun temp11013_50 () (_ BitVec 64))
(declare-fun temp11013_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11013_52 () (_ BitVec 64))
(declare-fun temp11013_53 () (_ BitVec 64))
(declare-fun temp11013_54 () (_ BitVec 64))
(declare-fun temp11013_55 () (_ BitVec 64))
(declare-fun temp11013_56 () (_ BitVec 64))
(declare-fun temp11013_57 () (_ BitVec 64))
(declare-fun temp11013_58 () (_ BitVec 64))
(declare-fun temp11013_59 () (_ BitVec 64))
(declare-fun temp11013_60 () (_ BitVec 64))
(declare-fun temp11013_61 () (_ BitVec 64))
(declare-fun temp11013_62 () (_ BitVec 64))
(declare-fun temp11013_63 () (_ BitVec 64))
(declare-fun temp11013_64 () (_ BitVec 64))
(declare-fun temp11013_65 () (_ BitVec 64))
(declare-fun temp11013_66 () (_ BitVec 64))
(declare-fun temp11013_67 () (_ BitVec 64))
(declare-fun temp11013_68 () (_ BitVec 64))
(declare-fun temp11013_69 () (_ BitVec 64))
(declare-fun temp11013_70 () (_ BitVec 64))
(declare-fun temp11013_71 () (_ BitVec 64))
(declare-fun temp11013_72 () (_ BitVec 64))
(declare-fun temp11013_73 () (_ BitVec 64))
(declare-fun temp11013_74 () (_ BitVec 64))
(declare-fun temp11013_75 () (_ BitVec 64))
(declare-fun temp11013_76 () (_ BitVec 64))
(declare-fun temp11013_77 () (_ BitVec 64))
(declare-fun temp11013_78 () (_ BitVec 64))
(declare-fun temp11013_79 () (_ BitVec 64))
(declare-fun temp11013_80 () (_ BitVec 64))
(declare-fun temp11013_81 () (_ BitVec 64))
(declare-fun temp11013_82 () (_ BitVec 64))
(declare-fun temp11013_83 () (_ BitVec 64))
(declare-fun temp11013_84 () (_ BitVec 64))
(declare-fun temp11013_85 () (_ BitVec 64))
(declare-fun temp11013_86 () (_ BitVec 64))
(declare-fun temp11013_87 () (_ BitVec 64))
(declare-fun temp11013_88 () (_ BitVec 64))
(declare-fun temp11013_89 () (_ BitVec 64))
(declare-fun temp11013_90 () (_ BitVec 64))
(declare-fun temp11013_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp11013_92 () (_ BitVec 64))
(declare-fun temp11013_93 () (_ BitVec 64))
(declare-fun temp11013_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11013_95 () (_ BitVec 64))
(declare-fun temp11013_96 () (_ BitVec 64))
(declare-fun temp11013_97 () (_ BitVec 64))
(declare-fun temp11013_98 () (_ BitVec 64))
(declare-fun temp11013_99 () (_ BitVec 64))
(declare-fun temp11013_100 () (_ BitVec 64))
(declare-fun temp11013_101 () (_ BitVec 64))
(declare-fun temp11013_102 () (_ BitVec 64))
(declare-fun temp11013_103 () (_ BitVec 64))
(declare-fun temp11013_104 () (_ BitVec 64))
(declare-fun temp11013_105 () (_ BitVec 64))
(declare-fun temp11013_106 () (_ BitVec 64))
(declare-fun temp11013_107 () (_ BitVec 64))
(declare-fun temp11013_108 () (_ BitVec 64))
(declare-fun temp11013_109 () (_ BitVec 64))
(declare-fun temp11013_110 () (_ BitVec 64))
(declare-fun temp11013_111 () (_ BitVec 64))
(declare-fun temp11013_112 () (_ BitVec 64))
(declare-fun temp11013_113 () (_ BitVec 64))
(declare-fun temp11013_114 () (_ BitVec 64))
(declare-fun temp11013_115 () (_ BitVec 64))
(declare-fun temp11013_116 () (_ BitVec 64))
(declare-fun temp11013_117 () (_ BitVec 64))
(declare-fun temp11013_118 () (_ BitVec 64))
(declare-fun temp11013_119 () (_ BitVec 64))
(declare-fun temp11013_120 () (_ BitVec 64))
(declare-fun temp11013_121 () (_ BitVec 64))
(declare-fun temp11013_122 () (_ BitVec 64))
(declare-fun temp11013_123 () (_ BitVec 64))
(declare-fun temp11013_124 () (_ BitVec 64))
(declare-fun temp11013_125 () (_ BitVec 64))
(declare-fun temp11013_126 () (_ BitVec 64))
(declare-fun temp11013_127 () (_ BitVec 64))
(declare-fun temp11013_128 () (_ BitVec 64))
(declare-fun temp11013_129 () (_ BitVec 64))
(declare-fun temp11013_130 () (_ BitVec 64))
(declare-fun temp11013_131 () (_ BitVec 64))
(declare-fun temp11013_132 () (_ BitVec 64))
(declare-fun temp11013_133 () (_ BitVec 64))
(declare-fun temp11013_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp11013_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp11013_136 () (_ BitVec 64))
(declare-fun temp11013_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp11013_138 () (_ BitVec 64))
(declare-fun temp11013_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11013_140 () (_ BitVec 64))
(declare-fun temp11013_141 () (_ BitVec 64))
(declare-fun temp11013_142 () (_ BitVec 64))
(declare-fun temp11013_143 () (_ BitVec 64))
(declare-fun temp11013_144 () (_ BitVec 64))
(declare-fun temp11013_145 () (_ BitVec 64))
(declare-fun temp11013_146 () (_ BitVec 64))
(declare-fun temp11013_147 () (_ BitVec 64))
(declare-fun temp11013_148 () (_ BitVec 64))
(declare-fun temp11013_149 () (_ BitVec 64))
(declare-fun temp11013_150 () (_ BitVec 64))
(declare-fun temp11013_151 () (_ BitVec 64))
(declare-fun temp11013_152 () (_ BitVec 64))
(declare-fun temp11013_153 () (_ BitVec 64))
(declare-fun temp11013_154 () (_ BitVec 64))
(declare-fun temp11013_155 () (_ BitVec 64))
(declare-fun temp11013_157 () (_ BitVec 64))
(declare-fun temp11013_158 () (_ BitVec 64))
(declare-fun temp11013_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp11013_159 () (_ BitVec 64))
(declare-fun temp11013_160 () (_ BitVec 64))
(declare-fun temp11013_162 () (_ BitVec 64))
(declare-fun temp11013_163 () (_ BitVec 64))
(declare-fun temp11013_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp11013_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp11013_165 () (_ BitVec 64))
(declare-fun temp11013_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp11013_167 () (_ BitVec 64))
(declare-fun temp11013_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp11013_169 () (_ BitVec 64))
(declare-fun temp11013_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11013_171 () (_ BitVec 64))
(declare-fun temp11013_172 () (_ BitVec 64))
(declare-fun temp11013_173 () (_ BitVec 64))
(declare-fun temp11013_174 () (_ BitVec 64))
(declare-fun temp11013_175 () (_ BitVec 64))
(declare-fun temp11013_176 () (_ BitVec 64))
(declare-fun temp11013_177 () (_ BitVec 64))
(declare-fun temp11013_178 () (_ BitVec 64))
(declare-fun temp11013_179 () (_ BitVec 64))
(declare-fun temp11013_180 () (_ BitVec 64))
(declare-fun temp11013_181 () (_ BitVec 64))
(declare-fun temp11013_182 () (_ BitVec 64))
(declare-fun temp11013_183 () (_ BitVec 64))
(declare-fun temp11013_184 () (_ BitVec 64))
(declare-fun temp11013_185 () (_ BitVec 64))
(declare-fun temp11013_186 () (_ BitVec 64))
(declare-fun temp11013_187 () (_ BitVec 64))
(declare-fun temp11013_188 () (_ BitVec 64))
(declare-fun temp11013_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp11013_190 () (_ BitVec 64))
(declare-fun temp11013_192 () (_ BitVec 64))
(declare-fun temp11013_193 () (_ BitVec 64))
(declare-fun temp11013_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp11013_194 () (_ BitVec 64))
(declare-fun temp11013_195 () (_ BitVec 64))
(declare-fun temp11013_197 () (_ BitVec 64))
(declare-fun temp11013_198 () (_ BitVec 64))
(declare-fun temp11013_196 () (_ BitVec 64))
(declare-fun temp11013_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp11013_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp11013_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp11013_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp11013_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp11013_204 () (_ BitVec 64))
(declare-fun temp11013_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp11013_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp11013_207 () (_ BitVec 64))
(declare-fun temp11013_208 () (_ BitVec 64))
(declare-fun temp11013_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp11013_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp11013_211 () (_ BitVec 64))
(declare-fun temp11013_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp11013_213 () (_ BitVec 64))
(declare-fun temp11013_214 () (_ BitVec 64))
(declare-fun temp11013_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp11013_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp11013_217 () (_ BitVec 64))
(declare-fun temp11013_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp11013_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp11013_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var4600208 () (_ BitVec 64))
(declare-fun var4862352 () (_ BitVec 64))
(declare-fun temp11013_221 () (_ BitVec 64))
(declare-fun var212414 () (_ BitVec 64))
(declare-fun temp11013_222 () (_ BitVec 64))
(declare-fun temp11013_223 () (_ BitVec 64))
(declare-fun var5191299 () (_ BitVec 64))
(declare-fun var5191301 () (_ BitVec 64))
(declare-fun var5256844 () (_ BitVec 64))
(declare-fun var5256845 () (_ BitVec 64))
(declare-fun temp11013_224 () (_ BitVec 64))
(assert (= temp11013_1 #x0000000000000001))
(assert (= var77203 temp11013_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp11013_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp11013_2)))
(assert (= temp11013_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp11013_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11013_4 #x0000000000000000))
(assert (= var210941 temp11013_4))
(assert (= temp11013_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp11013_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11013_6 #x0000000000000000))
(assert (= var210986 temp11013_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp11013_7 #x0000000000000000))
(assert (= temp11013_8 temp11013_7))
(assert (= temp11013_9 (select ARGNAME_padding_NAMEEND_VAL temp11013_8)))
(assert (= temp11013_10 #x0000000000000001))
(assert (= temp11013_11 temp11013_10))
(assert (= temp11013_12 (select ARGNAME_padding_NAMEEND_VAL temp11013_11)))
(assert (= temp11013_13 #x0000000000000002))
(assert (= temp11013_14 temp11013_13))
(assert (= temp11013_15 (select ARGNAME_padding_NAMEEND_VAL temp11013_14)))
(assert (= temp11013_16 #x0000000000000003))
(assert (= temp11013_17 temp11013_16))
(assert (= temp11013_18 (select ARGNAME_padding_NAMEEND_VAL temp11013_17)))
(assert (= temp11013_19 #x0000000000000004))
(assert (= temp11013_20 temp11013_19))
(assert (= temp11013_21 (select ARGNAME_padding_NAMEEND_VAL temp11013_20)))
(assert (= temp11013_22 #x0000000000000005))
(assert (= temp11013_23 temp11013_22))
(assert (= temp11013_24 (select ARGNAME_padding_NAMEEND_VAL temp11013_23)))
(assert (= temp11013_25 #x0000000000000000))
(assert (= temp11013_26 #x0000000000000000))
(assert (= temp11013_27 temp11013_26))
(assert (= temp11013_28 (select ARGNAME_padding_NAMEEND_VAL temp11013_27)))
(assert (= temp11013_29 #x0000000000000000))
(assert (= temp11013_30 #x0000000000000001))
(assert (= temp11013_31 temp11013_30))
(assert (= temp11013_32 (select ARGNAME_padding_NAMEEND_VAL temp11013_31)))
(assert (= temp11013_33 #x0000000000000000))
(assert (= temp11013_34 #x0000000000000002))
(assert (= temp11013_35 temp11013_34))
(assert (= temp11013_36 (select ARGNAME_padding_NAMEEND_VAL temp11013_35)))
(assert (= temp11013_37 #x0000000000000000))
(assert (= temp11013_38 #x0000000000000003))
(assert (= temp11013_39 temp11013_38))
(assert (= temp11013_40 (select ARGNAME_padding_NAMEEND_VAL temp11013_39)))
(assert (= temp11013_41 #x0000000000000000))
(assert (= temp11013_42 #x0000000000000004))
(assert (= temp11013_43 temp11013_42))
(assert (= temp11013_44 (select ARGNAME_padding_NAMEEND_VAL temp11013_43)))
(assert (= temp11013_45 #x0000000000000000))
(assert (= temp11013_46 #x0000000000000005))
(assert (= temp11013_47 temp11013_46))
(assert (= temp11013_48 (select ARGNAME_padding_NAMEEND_VAL temp11013_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp11013_28 temp11013_25)
             (bvslt temp11013_32 temp11013_29)
             (bvslt temp11013_36 temp11013_33)
             (bvslt temp11013_40 temp11013_37)
             (bvslt temp11013_44 temp11013_41)
             (bvslt temp11013_48 temp11013_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11013_49 #x0000000000000000))
(assert (= var1191714 temp11013_49))
(assert (= temp11013_50 #x0000000000000000))
(assert (= temp11013_51 temp11013_50))
(assert (= temp11013_52 (select ARGNAME_output_padding_NAMEEND_VAL temp11013_51)))
(assert (= temp11013_53 #x0000000000000001))
(assert (= temp11013_54 temp11013_53))
(assert (= temp11013_55 (select ARGNAME_output_padding_NAMEEND_VAL temp11013_54)))
(assert (= temp11013_56 #x0000000000000002))
(assert (= temp11013_57 temp11013_56))
(assert (= temp11013_58 (select ARGNAME_output_padding_NAMEEND_VAL temp11013_57)))
(assert (= temp11013_59 #x0000000000000003))
(assert (= temp11013_60 temp11013_59))
(assert (= temp11013_61 (select ARGNAME_output_padding_NAMEEND_VAL temp11013_60)))
(assert (= temp11013_62 #x0000000000000004))
(assert (= temp11013_63 temp11013_62))
(assert (= temp11013_64 (select ARGNAME_output_padding_NAMEEND_VAL temp11013_63)))
(assert (= temp11013_65 #x0000000000000005))
(assert (= temp11013_66 temp11013_65))
(assert (= temp11013_67 (select ARGNAME_output_padding_NAMEEND_VAL temp11013_66)))
(assert (= temp11013_68 #x0000000000000000))
(assert (= temp11013_69 #x0000000000000000))
(assert (= temp11013_70 temp11013_69))
(assert (= temp11013_71 (select ARGNAME_output_padding_NAMEEND_VAL temp11013_70)))
(assert (= temp11013_72 #x0000000000000000))
(assert (= temp11013_73 #x0000000000000001))
(assert (= temp11013_74 temp11013_73))
(assert (= temp11013_75 (select ARGNAME_output_padding_NAMEEND_VAL temp11013_74)))
(assert (= temp11013_76 #x0000000000000000))
(assert (= temp11013_77 #x0000000000000002))
(assert (= temp11013_78 temp11013_77))
(assert (= temp11013_79 (select ARGNAME_output_padding_NAMEEND_VAL temp11013_78)))
(assert (= temp11013_80 #x0000000000000000))
(assert (= temp11013_81 #x0000000000000003))
(assert (= temp11013_82 temp11013_81))
(assert (= temp11013_83 (select ARGNAME_output_padding_NAMEEND_VAL temp11013_82)))
(assert (= temp11013_84 #x0000000000000000))
(assert (= temp11013_85 #x0000000000000004))
(assert (= temp11013_86 temp11013_85))
(assert (= temp11013_87 (select ARGNAME_output_padding_NAMEEND_VAL temp11013_86)))
(assert (= temp11013_88 #x0000000000000000))
(assert (= temp11013_89 #x0000000000000005))
(assert (= temp11013_90 temp11013_89))
(assert (= temp11013_91 (select ARGNAME_output_padding_NAMEEND_VAL temp11013_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp11013_71 temp11013_68)
             (bvslt temp11013_75 temp11013_72)
             (bvslt temp11013_79 temp11013_76)
             (bvslt temp11013_83 temp11013_80)
             (bvslt temp11013_87 temp11013_84)
             (bvslt temp11013_91 temp11013_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11013_92 #x0000000000000000))
(assert (= var1191725 temp11013_92))
(assert (= temp11013_93 #x0000000000000000))
(assert (= temp11013_94 temp11013_93))
(assert (= temp11013_95 (select ARGNAME_stride_NAMEEND_VAL temp11013_94)))
(assert (= temp11013_96 #x0000000000000001))
(assert (= temp11013_97 temp11013_96))
(assert (= temp11013_98 (select ARGNAME_stride_NAMEEND_VAL temp11013_97)))
(assert (= temp11013_99 #x0000000000000002))
(assert (= temp11013_100 temp11013_99))
(assert (= temp11013_101 (select ARGNAME_stride_NAMEEND_VAL temp11013_100)))
(assert (= temp11013_102 #x0000000000000003))
(assert (= temp11013_103 temp11013_102))
(assert (= temp11013_104 (select ARGNAME_stride_NAMEEND_VAL temp11013_103)))
(assert (= temp11013_105 #x0000000000000004))
(assert (= temp11013_106 temp11013_105))
(assert (= temp11013_107 (select ARGNAME_stride_NAMEEND_VAL temp11013_106)))
(assert (= temp11013_108 #x0000000000000005))
(assert (= temp11013_109 temp11013_108))
(assert (= temp11013_110 (select ARGNAME_stride_NAMEEND_VAL temp11013_109)))
(assert (= temp11013_111 #x0000000000000000))
(assert (= temp11013_112 #x0000000000000000))
(assert (= temp11013_113 temp11013_112))
(assert (= temp11013_114 (select ARGNAME_stride_NAMEEND_VAL temp11013_113)))
(assert (= temp11013_115 #x0000000000000000))
(assert (= temp11013_116 #x0000000000000001))
(assert (= temp11013_117 temp11013_116))
(assert (= temp11013_118 (select ARGNAME_stride_NAMEEND_VAL temp11013_117)))
(assert (= temp11013_119 #x0000000000000000))
(assert (= temp11013_120 #x0000000000000002))
(assert (= temp11013_121 temp11013_120))
(assert (= temp11013_122 (select ARGNAME_stride_NAMEEND_VAL temp11013_121)))
(assert (= temp11013_123 #x0000000000000000))
(assert (= temp11013_124 #x0000000000000003))
(assert (= temp11013_125 temp11013_124))
(assert (= temp11013_126 (select ARGNAME_stride_NAMEEND_VAL temp11013_125)))
(assert (= temp11013_127 #x0000000000000000))
(assert (= temp11013_128 #x0000000000000004))
(assert (= temp11013_129 temp11013_128))
(assert (= temp11013_130 (select ARGNAME_stride_NAMEEND_VAL temp11013_129)))
(assert (= temp11013_131 #x0000000000000000))
(assert (= temp11013_132 #x0000000000000005))
(assert (= temp11013_133 temp11013_132))
(assert (= temp11013_134 (select ARGNAME_stride_NAMEEND_VAL temp11013_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp11013_114 temp11013_111)
             (bvsle temp11013_118 temp11013_115)
             (bvsle temp11013_122 temp11013_119)
             (bvsle temp11013_126 temp11013_123)
             (bvsle temp11013_130 temp11013_127)
             (bvsle temp11013_134 temp11013_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11013_135 #x0000000000000000))
(assert (= var1191735 temp11013_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11013_136 #x0000000000000001))
(assert (= var1191747 temp11013_136))
(assert (= temp11013_137 #x0000000000000000))
(assert (= var1179826 temp11013_137))
(assert (= temp11013_138 #x0000000000000000))
(assert (= temp11013_139 temp11013_138))
(assert (= temp11013_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11013_139)))
(assert (= temp11013_141 #x0000000000000001))
(assert (= temp11013_142 temp11013_141))
(assert (= temp11013_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11013_142)))
(assert (= temp11013_144 #x0000000000000002))
(assert (= temp11013_145 temp11013_144))
(assert (= temp11013_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11013_145)))
(assert (= temp11013_147 #x0000000000000003))
(assert (= temp11013_148 temp11013_147))
(assert (= temp11013_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11013_148)))
(assert (= temp11013_150 #x0000000000000004))
(assert (= temp11013_151 temp11013_150))
(assert (= temp11013_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11013_151)))
(assert (= temp11013_153 #x0000000000000005))
(assert (= temp11013_154 temp11013_153))
(assert (= temp11013_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11013_154)))
(assert (= temp11013_157 var1179826))
(assert (= temp11013_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11013_157)))
(assert (= temp11013_156 temp11013_158))
(assert (= var1191780
   (ite (bvslt temp11013_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11013_159 #x0000000000000000))
(assert (= var1191780 temp11013_159))
(assert (= temp11013_160 #x0000000000000000))
(assert (= var1179826 temp11013_160))
(assert (= temp11013_162 var1179826))
(assert (= temp11013_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11013_162)))
(assert (= temp11013_161 temp11013_163))
(assert (= var1191802 (bvsmod temp11013_161 ARGNAME_groups_NAMEEND)))
(assert (= temp11013_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp11013_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp11013_165 #x0000000000000001))
(assert (= var1191803 temp11013_165))
(assert (= temp11013_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp11013_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11013_167 #x0000000000000001))
(assert (= var1191823 temp11013_167))
(assert (= temp11013_168 #x0000000000000001))
(assert (= var1180714 temp11013_168))
(assert (= temp11013_169 #x0000000000000000))
(assert (= temp11013_170 temp11013_169))
(assert (= temp11013_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp11013_170)))
(assert (= temp11013_172 #x0000000000000001))
(assert (= temp11013_173 temp11013_172))
(assert (= temp11013_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp11013_173)))
(assert (= temp11013_175 #x0000000000000002))
(assert (= temp11013_176 temp11013_175))
(assert (= temp11013_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp11013_176)))
(assert (= temp11013_178 #x0000000000000003))
(assert (= temp11013_179 temp11013_178))
(assert (= temp11013_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp11013_179)))
(assert (= temp11013_181 #x0000000000000004))
(assert (= temp11013_182 temp11013_181))
(assert (= temp11013_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp11013_182)))
(assert (= temp11013_184 #x0000000000000005))
(assert (= temp11013_185 temp11013_184))
(assert (= temp11013_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp11013_185)))
(assert (= temp11013_187 #x0000000000000000))
(assert (= temp11013_188
   (ite (bvslt var1180714 temp11013_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp11013_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp11013_188)))
(assert (= var1191831 temp11013_189))
(assert (bvslt (ite (bvslt var1180714 temp11013_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11013_190 #x0000000000000001))
(assert (= var1180714 temp11013_190))
(assert (= temp11013_192 var1180714))
(assert (= temp11013_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11013_192)))
(assert (= temp11013_191 temp11013_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp11013_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp11013_194 #x0000000000000001))
(assert (= var1191836 temp11013_194))
(assert (= temp11013_195 #x0000000000000000))
(assert (= var1179826 temp11013_195))
(assert (= temp11013_197 var1179826))
(assert (= temp11013_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11013_197)))
(assert (= temp11013_196 temp11013_198))
(assert (= temp11013_199 #x0000000000000002))
(assert (= var1586025 temp11013_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp11013_200 #x0000000000000001))
(assert (= var1191993 temp11013_200))
(assert (= temp11013_201 #x0000000000000001))
(assert (= var2700303 temp11013_201))
(assert (= temp11013_202 #x0000000000000001))
(assert (= var2962447 temp11013_202))
(assert (= temp11013_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp11013_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11013_204 #x0000000000000001))
(assert (= var211058 temp11013_204))
(assert (= temp11013_205 #x0000000000000001))
(assert (= var211188 temp11013_205))
(assert (= var3879401 var211188))
(assert (= temp11013_206 #x0000000000000000))
(assert (= var3866802 temp11013_206))
(assert (= temp11013_207 #x0000000000000000))
(assert (= temp11013_208
   (ite (bvslt var3866802 temp11013_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp11013_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp11013_208)))
(assert (= var3879420 temp11013_209))
(assert (bvslt (ite (bvslt var3866802 temp11013_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11013_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp11013_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp11013_211 #x0000000000000000))
(assert (= var3879421 temp11013_211))
(assert (= temp11013_212 #x0000000000000001))
(assert (= var3867690 temp11013_212))
(assert (= temp11013_213 #x0000000000000000))
(assert (= temp11013_214
   (ite (bvslt var3867690 temp11013_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp11013_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp11013_214)))
(assert (= var3879423 temp11013_215))
(assert (bvslt (ite (bvslt var3867690 temp11013_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11013_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp11013_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp11013_217 #x0000000000000001))
(assert (= var3879424 temp11013_217))
(assert (= temp11013_218 #x0000000000000000))
(assert (= var4133117 temp11013_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp11013_219 #x0000000000000002))
(assert (= var4339331 temp11013_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11013_220 #x0000000000000000))
(assert (= var4404892 temp11013_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var4600208 var211201))
(assert (= var4862352 var211201))
(assert (= temp11013_221 #x0000000000000001))
(assert (= var212414
   (ite (= ARGNAME_groups_NAMEEND temp11013_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11013_222 #x0000000000000001))
(assert (= var212414 temp11013_222))
(assert (= temp11013_223 #x0000000000000002))
(assert (= var5191299 temp11013_223))
(assert (= var5191301 (bvsub ARGNAME_weight_NAMEEND_DIM var5191299)))
(assert (= var5256844 var5191299))
(assert (= var5256845 var5191301))
(assert (= temp11013_224 #x0000000000000001))
(assert (= var211058 temp11013_224))
(model-add temp11013_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp11013_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp11013_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp11013_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




