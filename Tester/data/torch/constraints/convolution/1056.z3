(declare-fun temp10074_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10074_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10074_3 () (_ BitVec 64))
(declare-fun temp10074_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10074_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10074_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10074_7 () (_ BitVec 64))
(declare-fun temp10074_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10074_9 () (_ BitVec 64))
(declare-fun temp10074_10 () (_ BitVec 64))
(declare-fun temp10074_11 () (_ BitVec 64))
(declare-fun temp10074_12 () (_ BitVec 64))
(declare-fun temp10074_13 () (_ BitVec 64))
(declare-fun temp10074_14 () (_ BitVec 64))
(declare-fun temp10074_15 () (_ BitVec 64))
(declare-fun temp10074_16 () (_ BitVec 64))
(declare-fun temp10074_17 () (_ BitVec 64))
(declare-fun temp10074_18 () (_ BitVec 64))
(declare-fun temp10074_19 () (_ BitVec 64))
(declare-fun temp10074_20 () (_ BitVec 64))
(declare-fun temp10074_21 () (_ BitVec 64))
(declare-fun temp10074_22 () (_ BitVec 64))
(declare-fun temp10074_23 () (_ BitVec 64))
(declare-fun temp10074_24 () (_ BitVec 64))
(declare-fun temp10074_25 () (_ BitVec 64))
(declare-fun temp10074_26 () (_ BitVec 64))
(declare-fun temp10074_27 () (_ BitVec 64))
(declare-fun temp10074_28 () (_ BitVec 64))
(declare-fun temp10074_29 () (_ BitVec 64))
(declare-fun temp10074_30 () (_ BitVec 64))
(declare-fun temp10074_31 () (_ BitVec 64))
(declare-fun temp10074_32 () (_ BitVec 64))
(declare-fun temp10074_33 () (_ BitVec 64))
(declare-fun temp10074_34 () (_ BitVec 64))
(declare-fun temp10074_35 () (_ BitVec 64))
(declare-fun temp10074_36 () (_ BitVec 64))
(declare-fun temp10074_37 () (_ BitVec 64))
(declare-fun temp10074_38 () (_ BitVec 64))
(declare-fun temp10074_39 () (_ BitVec 64))
(declare-fun temp10074_40 () (_ BitVec 64))
(declare-fun temp10074_41 () (_ BitVec 64))
(declare-fun temp10074_42 () (_ BitVec 64))
(declare-fun temp10074_43 () (_ BitVec 64))
(declare-fun temp10074_44 () (_ BitVec 64))
(declare-fun temp10074_45 () (_ BitVec 64))
(declare-fun temp10074_46 () (_ BitVec 64))
(declare-fun temp10074_47 () (_ BitVec 64))
(declare-fun temp10074_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10074_49 () (_ BitVec 64))
(declare-fun temp10074_50 () (_ BitVec 64))
(declare-fun temp10074_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10074_52 () (_ BitVec 64))
(declare-fun temp10074_53 () (_ BitVec 64))
(declare-fun temp10074_54 () (_ BitVec 64))
(declare-fun temp10074_55 () (_ BitVec 64))
(declare-fun temp10074_56 () (_ BitVec 64))
(declare-fun temp10074_57 () (_ BitVec 64))
(declare-fun temp10074_58 () (_ BitVec 64))
(declare-fun temp10074_59 () (_ BitVec 64))
(declare-fun temp10074_60 () (_ BitVec 64))
(declare-fun temp10074_61 () (_ BitVec 64))
(declare-fun temp10074_62 () (_ BitVec 64))
(declare-fun temp10074_63 () (_ BitVec 64))
(declare-fun temp10074_64 () (_ BitVec 64))
(declare-fun temp10074_65 () (_ BitVec 64))
(declare-fun temp10074_66 () (_ BitVec 64))
(declare-fun temp10074_67 () (_ BitVec 64))
(declare-fun temp10074_68 () (_ BitVec 64))
(declare-fun temp10074_69 () (_ BitVec 64))
(declare-fun temp10074_70 () (_ BitVec 64))
(declare-fun temp10074_71 () (_ BitVec 64))
(declare-fun temp10074_72 () (_ BitVec 64))
(declare-fun temp10074_73 () (_ BitVec 64))
(declare-fun temp10074_74 () (_ BitVec 64))
(declare-fun temp10074_75 () (_ BitVec 64))
(declare-fun temp10074_76 () (_ BitVec 64))
(declare-fun temp10074_77 () (_ BitVec 64))
(declare-fun temp10074_78 () (_ BitVec 64))
(declare-fun temp10074_79 () (_ BitVec 64))
(declare-fun temp10074_80 () (_ BitVec 64))
(declare-fun temp10074_81 () (_ BitVec 64))
(declare-fun temp10074_82 () (_ BitVec 64))
(declare-fun temp10074_83 () (_ BitVec 64))
(declare-fun temp10074_84 () (_ BitVec 64))
(declare-fun temp10074_85 () (_ BitVec 64))
(declare-fun temp10074_86 () (_ BitVec 64))
(declare-fun temp10074_87 () (_ BitVec 64))
(declare-fun temp10074_88 () (_ BitVec 64))
(declare-fun temp10074_89 () (_ BitVec 64))
(declare-fun temp10074_90 () (_ BitVec 64))
(declare-fun temp10074_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10074_92 () (_ BitVec 64))
(declare-fun temp10074_93 () (_ BitVec 64))
(declare-fun temp10074_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10074_95 () (_ BitVec 64))
(declare-fun temp10074_96 () (_ BitVec 64))
(declare-fun temp10074_97 () (_ BitVec 64))
(declare-fun temp10074_98 () (_ BitVec 64))
(declare-fun temp10074_99 () (_ BitVec 64))
(declare-fun temp10074_100 () (_ BitVec 64))
(declare-fun temp10074_101 () (_ BitVec 64))
(declare-fun temp10074_102 () (_ BitVec 64))
(declare-fun temp10074_103 () (_ BitVec 64))
(declare-fun temp10074_104 () (_ BitVec 64))
(declare-fun temp10074_105 () (_ BitVec 64))
(declare-fun temp10074_106 () (_ BitVec 64))
(declare-fun temp10074_107 () (_ BitVec 64))
(declare-fun temp10074_108 () (_ BitVec 64))
(declare-fun temp10074_109 () (_ BitVec 64))
(declare-fun temp10074_110 () (_ BitVec 64))
(declare-fun temp10074_111 () (_ BitVec 64))
(declare-fun temp10074_112 () (_ BitVec 64))
(declare-fun temp10074_113 () (_ BitVec 64))
(declare-fun temp10074_114 () (_ BitVec 64))
(declare-fun temp10074_115 () (_ BitVec 64))
(declare-fun temp10074_116 () (_ BitVec 64))
(declare-fun temp10074_117 () (_ BitVec 64))
(declare-fun temp10074_118 () (_ BitVec 64))
(declare-fun temp10074_119 () (_ BitVec 64))
(declare-fun temp10074_120 () (_ BitVec 64))
(declare-fun temp10074_121 () (_ BitVec 64))
(declare-fun temp10074_122 () (_ BitVec 64))
(declare-fun temp10074_123 () (_ BitVec 64))
(declare-fun temp10074_124 () (_ BitVec 64))
(declare-fun temp10074_125 () (_ BitVec 64))
(declare-fun temp10074_126 () (_ BitVec 64))
(declare-fun temp10074_127 () (_ BitVec 64))
(declare-fun temp10074_128 () (_ BitVec 64))
(declare-fun temp10074_129 () (_ BitVec 64))
(declare-fun temp10074_130 () (_ BitVec 64))
(declare-fun temp10074_131 () (_ BitVec 64))
(declare-fun temp10074_132 () (_ BitVec 64))
(declare-fun temp10074_133 () (_ BitVec 64))
(declare-fun temp10074_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10074_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10074_136 () (_ BitVec 64))
(declare-fun temp10074_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10074_138 () (_ BitVec 64))
(declare-fun temp10074_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10074_140 () (_ BitVec 64))
(declare-fun temp10074_141 () (_ BitVec 64))
(declare-fun temp10074_142 () (_ BitVec 64))
(declare-fun temp10074_143 () (_ BitVec 64))
(declare-fun temp10074_144 () (_ BitVec 64))
(declare-fun temp10074_145 () (_ BitVec 64))
(declare-fun temp10074_146 () (_ BitVec 64))
(declare-fun temp10074_147 () (_ BitVec 64))
(declare-fun temp10074_148 () (_ BitVec 64))
(declare-fun temp10074_149 () (_ BitVec 64))
(declare-fun temp10074_150 () (_ BitVec 64))
(declare-fun temp10074_151 () (_ BitVec 64))
(declare-fun temp10074_152 () (_ BitVec 64))
(declare-fun temp10074_153 () (_ BitVec 64))
(declare-fun temp10074_154 () (_ BitVec 64))
(declare-fun temp10074_155 () (_ BitVec 64))
(declare-fun temp10074_157 () (_ BitVec 64))
(declare-fun temp10074_158 () (_ BitVec 64))
(declare-fun temp10074_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10074_159 () (_ BitVec 64))
(declare-fun temp10074_160 () (_ BitVec 64))
(declare-fun temp10074_162 () (_ BitVec 64))
(declare-fun temp10074_163 () (_ BitVec 64))
(declare-fun temp10074_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10074_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10074_165 () (_ BitVec 64))
(declare-fun temp10074_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10074_167 () (_ BitVec 64))
(declare-fun temp10074_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10074_169 () (_ BitVec 64))
(declare-fun temp10074_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10074_171 () (_ BitVec 64))
(declare-fun temp10074_172 () (_ BitVec 64))
(declare-fun temp10074_173 () (_ BitVec 64))
(declare-fun temp10074_174 () (_ BitVec 64))
(declare-fun temp10074_175 () (_ BitVec 64))
(declare-fun temp10074_176 () (_ BitVec 64))
(declare-fun temp10074_177 () (_ BitVec 64))
(declare-fun temp10074_178 () (_ BitVec 64))
(declare-fun temp10074_179 () (_ BitVec 64))
(declare-fun temp10074_180 () (_ BitVec 64))
(declare-fun temp10074_181 () (_ BitVec 64))
(declare-fun temp10074_182 () (_ BitVec 64))
(declare-fun temp10074_183 () (_ BitVec 64))
(declare-fun temp10074_184 () (_ BitVec 64))
(declare-fun temp10074_185 () (_ BitVec 64))
(declare-fun temp10074_186 () (_ BitVec 64))
(declare-fun temp10074_187 () (_ BitVec 64))
(declare-fun temp10074_188 () (_ BitVec 64))
(declare-fun temp10074_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10074_190 () (_ BitVec 64))
(declare-fun temp10074_192 () (_ BitVec 64))
(declare-fun temp10074_193 () (_ BitVec 64))
(declare-fun temp10074_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10074_194 () (_ BitVec 64))
(declare-fun temp10074_195 () (_ BitVec 64))
(declare-fun temp10074_197 () (_ BitVec 64))
(declare-fun temp10074_198 () (_ BitVec 64))
(declare-fun temp10074_196 () (_ BitVec 64))
(declare-fun temp10074_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10074_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10074_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10074_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10074_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10074_204 () (_ BitVec 64))
(declare-fun temp10074_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10074_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10074_207 () (_ BitVec 64))
(declare-fun temp10074_208 () (_ BitVec 64))
(declare-fun temp10074_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10074_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10074_211 () (_ BitVec 64))
(declare-fun temp10074_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10074_213 () (_ BitVec 64))
(declare-fun temp10074_214 () (_ BitVec 64))
(declare-fun temp10074_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10074_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10074_217 () (_ BitVec 64))
(declare-fun temp10074_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10074_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10074_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp10074_222 () (_ BitVec 64))
(declare-fun temp10074_221 () (_ BitVec 64))
(declare-fun temp10074_223 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp10074_224 () (_ BitVec 64))
(declare-fun temp10074_225 () (_ BitVec 64))
(declare-fun temp10074_226 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp10074_227 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp10074_228 () (_ BitVec 64))
(declare-fun temp10074_230 () (_ BitVec 64))
(declare-fun temp10074_229 () (_ BitVec 64))
(declare-fun temp10074_231 () (_ BitVec 64))
(assert (= temp10074_1 #x0000000000000001))
(assert (= var77203 temp10074_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10074_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10074_2)))
(assert (= temp10074_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10074_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10074_4 #x0000000000000000))
(assert (= var210941 temp10074_4))
(assert (= temp10074_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10074_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10074_6 #x0000000000000000))
(assert (= var210986 temp10074_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10074_7 #x0000000000000000))
(assert (= temp10074_8 temp10074_7))
(assert (= temp10074_9 (select ARGNAME_padding_NAMEEND_VAL temp10074_8)))
(assert (= temp10074_10 #x0000000000000001))
(assert (= temp10074_11 temp10074_10))
(assert (= temp10074_12 (select ARGNAME_padding_NAMEEND_VAL temp10074_11)))
(assert (= temp10074_13 #x0000000000000002))
(assert (= temp10074_14 temp10074_13))
(assert (= temp10074_15 (select ARGNAME_padding_NAMEEND_VAL temp10074_14)))
(assert (= temp10074_16 #x0000000000000003))
(assert (= temp10074_17 temp10074_16))
(assert (= temp10074_18 (select ARGNAME_padding_NAMEEND_VAL temp10074_17)))
(assert (= temp10074_19 #x0000000000000004))
(assert (= temp10074_20 temp10074_19))
(assert (= temp10074_21 (select ARGNAME_padding_NAMEEND_VAL temp10074_20)))
(assert (= temp10074_22 #x0000000000000005))
(assert (= temp10074_23 temp10074_22))
(assert (= temp10074_24 (select ARGNAME_padding_NAMEEND_VAL temp10074_23)))
(assert (= temp10074_25 #x0000000000000000))
(assert (= temp10074_26 #x0000000000000000))
(assert (= temp10074_27 temp10074_26))
(assert (= temp10074_28 (select ARGNAME_padding_NAMEEND_VAL temp10074_27)))
(assert (= temp10074_29 #x0000000000000000))
(assert (= temp10074_30 #x0000000000000001))
(assert (= temp10074_31 temp10074_30))
(assert (= temp10074_32 (select ARGNAME_padding_NAMEEND_VAL temp10074_31)))
(assert (= temp10074_33 #x0000000000000000))
(assert (= temp10074_34 #x0000000000000002))
(assert (= temp10074_35 temp10074_34))
(assert (= temp10074_36 (select ARGNAME_padding_NAMEEND_VAL temp10074_35)))
(assert (= temp10074_37 #x0000000000000000))
(assert (= temp10074_38 #x0000000000000003))
(assert (= temp10074_39 temp10074_38))
(assert (= temp10074_40 (select ARGNAME_padding_NAMEEND_VAL temp10074_39)))
(assert (= temp10074_41 #x0000000000000000))
(assert (= temp10074_42 #x0000000000000004))
(assert (= temp10074_43 temp10074_42))
(assert (= temp10074_44 (select ARGNAME_padding_NAMEEND_VAL temp10074_43)))
(assert (= temp10074_45 #x0000000000000000))
(assert (= temp10074_46 #x0000000000000005))
(assert (= temp10074_47 temp10074_46))
(assert (= temp10074_48 (select ARGNAME_padding_NAMEEND_VAL temp10074_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10074_28 temp10074_25)
             (bvslt temp10074_32 temp10074_29)
             (bvslt temp10074_36 temp10074_33)
             (bvslt temp10074_40 temp10074_37)
             (bvslt temp10074_44 temp10074_41)
             (bvslt temp10074_48 temp10074_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10074_49 #x0000000000000000))
(assert (= var1191714 temp10074_49))
(assert (= temp10074_50 #x0000000000000000))
(assert (= temp10074_51 temp10074_50))
(assert (= temp10074_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10074_51)))
(assert (= temp10074_53 #x0000000000000001))
(assert (= temp10074_54 temp10074_53))
(assert (= temp10074_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10074_54)))
(assert (= temp10074_56 #x0000000000000002))
(assert (= temp10074_57 temp10074_56))
(assert (= temp10074_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10074_57)))
(assert (= temp10074_59 #x0000000000000003))
(assert (= temp10074_60 temp10074_59))
(assert (= temp10074_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10074_60)))
(assert (= temp10074_62 #x0000000000000004))
(assert (= temp10074_63 temp10074_62))
(assert (= temp10074_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10074_63)))
(assert (= temp10074_65 #x0000000000000005))
(assert (= temp10074_66 temp10074_65))
(assert (= temp10074_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10074_66)))
(assert (= temp10074_68 #x0000000000000000))
(assert (= temp10074_69 #x0000000000000000))
(assert (= temp10074_70 temp10074_69))
(assert (= temp10074_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10074_70)))
(assert (= temp10074_72 #x0000000000000000))
(assert (= temp10074_73 #x0000000000000001))
(assert (= temp10074_74 temp10074_73))
(assert (= temp10074_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10074_74)))
(assert (= temp10074_76 #x0000000000000000))
(assert (= temp10074_77 #x0000000000000002))
(assert (= temp10074_78 temp10074_77))
(assert (= temp10074_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10074_78)))
(assert (= temp10074_80 #x0000000000000000))
(assert (= temp10074_81 #x0000000000000003))
(assert (= temp10074_82 temp10074_81))
(assert (= temp10074_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10074_82)))
(assert (= temp10074_84 #x0000000000000000))
(assert (= temp10074_85 #x0000000000000004))
(assert (= temp10074_86 temp10074_85))
(assert (= temp10074_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10074_86)))
(assert (= temp10074_88 #x0000000000000000))
(assert (= temp10074_89 #x0000000000000005))
(assert (= temp10074_90 temp10074_89))
(assert (= temp10074_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10074_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10074_71 temp10074_68)
             (bvslt temp10074_75 temp10074_72)
             (bvslt temp10074_79 temp10074_76)
             (bvslt temp10074_83 temp10074_80)
             (bvslt temp10074_87 temp10074_84)
             (bvslt temp10074_91 temp10074_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10074_92 #x0000000000000000))
(assert (= var1191725 temp10074_92))
(assert (= temp10074_93 #x0000000000000000))
(assert (= temp10074_94 temp10074_93))
(assert (= temp10074_95 (select ARGNAME_stride_NAMEEND_VAL temp10074_94)))
(assert (= temp10074_96 #x0000000000000001))
(assert (= temp10074_97 temp10074_96))
(assert (= temp10074_98 (select ARGNAME_stride_NAMEEND_VAL temp10074_97)))
(assert (= temp10074_99 #x0000000000000002))
(assert (= temp10074_100 temp10074_99))
(assert (= temp10074_101 (select ARGNAME_stride_NAMEEND_VAL temp10074_100)))
(assert (= temp10074_102 #x0000000000000003))
(assert (= temp10074_103 temp10074_102))
(assert (= temp10074_104 (select ARGNAME_stride_NAMEEND_VAL temp10074_103)))
(assert (= temp10074_105 #x0000000000000004))
(assert (= temp10074_106 temp10074_105))
(assert (= temp10074_107 (select ARGNAME_stride_NAMEEND_VAL temp10074_106)))
(assert (= temp10074_108 #x0000000000000005))
(assert (= temp10074_109 temp10074_108))
(assert (= temp10074_110 (select ARGNAME_stride_NAMEEND_VAL temp10074_109)))
(assert (= temp10074_111 #x0000000000000000))
(assert (= temp10074_112 #x0000000000000000))
(assert (= temp10074_113 temp10074_112))
(assert (= temp10074_114 (select ARGNAME_stride_NAMEEND_VAL temp10074_113)))
(assert (= temp10074_115 #x0000000000000000))
(assert (= temp10074_116 #x0000000000000001))
(assert (= temp10074_117 temp10074_116))
(assert (= temp10074_118 (select ARGNAME_stride_NAMEEND_VAL temp10074_117)))
(assert (= temp10074_119 #x0000000000000000))
(assert (= temp10074_120 #x0000000000000002))
(assert (= temp10074_121 temp10074_120))
(assert (= temp10074_122 (select ARGNAME_stride_NAMEEND_VAL temp10074_121)))
(assert (= temp10074_123 #x0000000000000000))
(assert (= temp10074_124 #x0000000000000003))
(assert (= temp10074_125 temp10074_124))
(assert (= temp10074_126 (select ARGNAME_stride_NAMEEND_VAL temp10074_125)))
(assert (= temp10074_127 #x0000000000000000))
(assert (= temp10074_128 #x0000000000000004))
(assert (= temp10074_129 temp10074_128))
(assert (= temp10074_130 (select ARGNAME_stride_NAMEEND_VAL temp10074_129)))
(assert (= temp10074_131 #x0000000000000000))
(assert (= temp10074_132 #x0000000000000005))
(assert (= temp10074_133 temp10074_132))
(assert (= temp10074_134 (select ARGNAME_stride_NAMEEND_VAL temp10074_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10074_114 temp10074_111)
             (bvsle temp10074_118 temp10074_115)
             (bvsle temp10074_122 temp10074_119)
             (bvsle temp10074_126 temp10074_123)
             (bvsle temp10074_130 temp10074_127)
             (bvsle temp10074_134 temp10074_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10074_135 #x0000000000000000))
(assert (= var1191735 temp10074_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10074_136 #x0000000000000001))
(assert (= var1191747 temp10074_136))
(assert (= temp10074_137 #x0000000000000000))
(assert (= var1179826 temp10074_137))
(assert (= temp10074_138 #x0000000000000000))
(assert (= temp10074_139 temp10074_138))
(assert (= temp10074_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10074_139)))
(assert (= temp10074_141 #x0000000000000001))
(assert (= temp10074_142 temp10074_141))
(assert (= temp10074_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10074_142)))
(assert (= temp10074_144 #x0000000000000002))
(assert (= temp10074_145 temp10074_144))
(assert (= temp10074_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10074_145)))
(assert (= temp10074_147 #x0000000000000003))
(assert (= temp10074_148 temp10074_147))
(assert (= temp10074_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10074_148)))
(assert (= temp10074_150 #x0000000000000004))
(assert (= temp10074_151 temp10074_150))
(assert (= temp10074_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10074_151)))
(assert (= temp10074_153 #x0000000000000005))
(assert (= temp10074_154 temp10074_153))
(assert (= temp10074_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10074_154)))
(assert (= temp10074_157 var1179826))
(assert (= temp10074_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10074_157)))
(assert (= temp10074_156 temp10074_158))
(assert (= var1191780
   (ite (bvslt temp10074_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10074_159 #x0000000000000000))
(assert (= var1191780 temp10074_159))
(assert (= temp10074_160 #x0000000000000000))
(assert (= var1179826 temp10074_160))
(assert (= temp10074_162 var1179826))
(assert (= temp10074_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10074_162)))
(assert (= temp10074_161 temp10074_163))
(assert (= var1191802 (bvsmod temp10074_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10074_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10074_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10074_165 #x0000000000000001))
(assert (= var1191803 temp10074_165))
(assert (= temp10074_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10074_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10074_167 #x0000000000000001))
(assert (= var1191823 temp10074_167))
(assert (= temp10074_168 #x0000000000000001))
(assert (= var1180714 temp10074_168))
(assert (= temp10074_169 #x0000000000000000))
(assert (= temp10074_170 temp10074_169))
(assert (= temp10074_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10074_170)))
(assert (= temp10074_172 #x0000000000000001))
(assert (= temp10074_173 temp10074_172))
(assert (= temp10074_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10074_173)))
(assert (= temp10074_175 #x0000000000000002))
(assert (= temp10074_176 temp10074_175))
(assert (= temp10074_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10074_176)))
(assert (= temp10074_178 #x0000000000000003))
(assert (= temp10074_179 temp10074_178))
(assert (= temp10074_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10074_179)))
(assert (= temp10074_181 #x0000000000000004))
(assert (= temp10074_182 temp10074_181))
(assert (= temp10074_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10074_182)))
(assert (= temp10074_184 #x0000000000000005))
(assert (= temp10074_185 temp10074_184))
(assert (= temp10074_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10074_185)))
(assert (= temp10074_187 #x0000000000000000))
(assert (= temp10074_188
   (ite (bvslt var1180714 temp10074_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10074_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10074_188)))
(assert (= var1191831 temp10074_189))
(assert (bvslt (ite (bvslt var1180714 temp10074_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10074_190 #x0000000000000001))
(assert (= var1180714 temp10074_190))
(assert (= temp10074_192 var1180714))
(assert (= temp10074_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10074_192)))
(assert (= temp10074_191 temp10074_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10074_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10074_194 #x0000000000000001))
(assert (= var1191836 temp10074_194))
(assert (= temp10074_195 #x0000000000000000))
(assert (= var1179826 temp10074_195))
(assert (= temp10074_197 var1179826))
(assert (= temp10074_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10074_197)))
(assert (= temp10074_196 temp10074_198))
(assert (= temp10074_199 #x0000000000000002))
(assert (= var1586025 temp10074_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10074_200 #x0000000000000001))
(assert (= var1191993 temp10074_200))
(assert (= temp10074_201 #x0000000000000001))
(assert (= var2700303 temp10074_201))
(assert (= temp10074_202 #x0000000000000001))
(assert (= var2962447 temp10074_202))
(assert (= temp10074_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10074_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10074_204 #x0000000000000001))
(assert (= var211058 temp10074_204))
(assert (= temp10074_205 #x0000000000000001))
(assert (= var211188 temp10074_205))
(assert (= var3879401 var211188))
(assert (= temp10074_206 #x0000000000000000))
(assert (= var3866802 temp10074_206))
(assert (= temp10074_207 #x0000000000000000))
(assert (= temp10074_208
   (ite (bvslt var3866802 temp10074_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10074_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10074_208)))
(assert (= var3879420 temp10074_209))
(assert (bvslt (ite (bvslt var3866802 temp10074_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10074_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10074_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10074_211 #x0000000000000000))
(assert (= var3879421 temp10074_211))
(assert (= temp10074_212 #x0000000000000001))
(assert (= var3867690 temp10074_212))
(assert (= temp10074_213 #x0000000000000000))
(assert (= temp10074_214
   (ite (bvslt var3867690 temp10074_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10074_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10074_214)))
(assert (= var3879423 temp10074_215))
(assert (bvslt (ite (bvslt var3867690 temp10074_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10074_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10074_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10074_217 #x0000000000000001))
(assert (= var3879424 temp10074_217))
(assert (= temp10074_218 #x0000000000000000))
(assert (= var4079423 temp10074_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10074_219 #x0000000000000002))
(assert (= var4208259 temp10074_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10074_220 #x0000000000000000))
(assert (= var4273820 temp10074_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp10074_222 #xffffffffffffffff))
(assert (= temp10074_221 temp10074_222))
(assert (= temp10074_223 #x0000000000000001))
(assert (= var197674 temp10074_223))
(assert (= temp10074_224 #x0000000000000000))
(assert (= temp10074_225
   (ite (bvslt var197674 temp10074_224)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp10074_226 (select ARGNAME_input_NAMEEND_DIMSIZE temp10074_225)))
(assert (= var211595 temp10074_226))
(assert (bvslt (ite (bvslt var197674 temp10074_224)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10074_227 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp10074_227) #x0000000000000001 #x0000000000000000)))
(assert (= temp10074_228 #x0000000000000001))
(assert (= var211596 temp10074_228))
(assert (= temp10074_230 #xffffffffffffffff))
(assert (= temp10074_229 temp10074_230))
(assert (= temp10074_231 #x0000000000000001))
(assert (= var211058 temp10074_231))
(model-add temp10074_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10074_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10074_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10074_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




