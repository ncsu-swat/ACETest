(declare-fun temp142_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp142_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp142_3 () (_ BitVec 64))
(declare-fun temp142_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp142_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp142_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp142_7 () (_ BitVec 64))
(declare-fun temp142_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp142_9 () (_ BitVec 64))
(declare-fun temp142_10 () (_ BitVec 64))
(declare-fun temp142_11 () (_ BitVec 64))
(declare-fun temp142_12 () (_ BitVec 64))
(declare-fun temp142_13 () (_ BitVec 64))
(declare-fun temp142_14 () (_ BitVec 64))
(declare-fun temp142_15 () (_ BitVec 64))
(declare-fun temp142_16 () (_ BitVec 64))
(declare-fun temp142_17 () (_ BitVec 64))
(declare-fun temp142_18 () (_ BitVec 64))
(declare-fun temp142_19 () (_ BitVec 64))
(declare-fun temp142_20 () (_ BitVec 64))
(declare-fun temp142_21 () (_ BitVec 64))
(declare-fun temp142_22 () (_ BitVec 64))
(declare-fun temp142_23 () (_ BitVec 64))
(declare-fun temp142_24 () (_ BitVec 64))
(declare-fun temp142_25 () (_ BitVec 64))
(declare-fun temp142_26 () (_ BitVec 64))
(declare-fun temp142_27 () (_ BitVec 64))
(declare-fun temp142_28 () (_ BitVec 64))
(declare-fun temp142_29 () (_ BitVec 64))
(declare-fun temp142_30 () (_ BitVec 64))
(declare-fun temp142_31 () (_ BitVec 64))
(declare-fun temp142_32 () (_ BitVec 64))
(declare-fun temp142_33 () (_ BitVec 64))
(declare-fun temp142_34 () (_ BitVec 64))
(declare-fun temp142_35 () (_ BitVec 64))
(declare-fun temp142_36 () (_ BitVec 64))
(declare-fun temp142_37 () (_ BitVec 64))
(declare-fun temp142_38 () (_ BitVec 64))
(declare-fun temp142_39 () (_ BitVec 64))
(declare-fun temp142_40 () (_ BitVec 64))
(declare-fun temp142_41 () (_ BitVec 64))
(declare-fun temp142_42 () (_ BitVec 64))
(declare-fun temp142_43 () (_ BitVec 64))
(declare-fun temp142_44 () (_ BitVec 64))
(declare-fun temp142_45 () (_ BitVec 64))
(declare-fun temp142_46 () (_ BitVec 64))
(declare-fun temp142_47 () (_ BitVec 64))
(declare-fun temp142_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp142_49 () (_ BitVec 64))
(declare-fun temp142_50 () (_ BitVec 64))
(declare-fun temp142_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp142_52 () (_ BitVec 64))
(declare-fun temp142_53 () (_ BitVec 64))
(declare-fun temp142_54 () (_ BitVec 64))
(declare-fun temp142_55 () (_ BitVec 64))
(declare-fun temp142_56 () (_ BitVec 64))
(declare-fun temp142_57 () (_ BitVec 64))
(declare-fun temp142_58 () (_ BitVec 64))
(declare-fun temp142_59 () (_ BitVec 64))
(declare-fun temp142_60 () (_ BitVec 64))
(declare-fun temp142_61 () (_ BitVec 64))
(declare-fun temp142_62 () (_ BitVec 64))
(declare-fun temp142_63 () (_ BitVec 64))
(declare-fun temp142_64 () (_ BitVec 64))
(declare-fun temp142_65 () (_ BitVec 64))
(declare-fun temp142_66 () (_ BitVec 64))
(declare-fun temp142_67 () (_ BitVec 64))
(declare-fun temp142_68 () (_ BitVec 64))
(declare-fun temp142_69 () (_ BitVec 64))
(declare-fun temp142_70 () (_ BitVec 64))
(declare-fun temp142_71 () (_ BitVec 64))
(declare-fun temp142_72 () (_ BitVec 64))
(declare-fun temp142_73 () (_ BitVec 64))
(declare-fun temp142_74 () (_ BitVec 64))
(declare-fun temp142_75 () (_ BitVec 64))
(declare-fun temp142_76 () (_ BitVec 64))
(declare-fun temp142_77 () (_ BitVec 64))
(declare-fun temp142_78 () (_ BitVec 64))
(declare-fun temp142_79 () (_ BitVec 64))
(declare-fun temp142_80 () (_ BitVec 64))
(declare-fun temp142_81 () (_ BitVec 64))
(declare-fun temp142_82 () (_ BitVec 64))
(declare-fun temp142_83 () (_ BitVec 64))
(declare-fun temp142_84 () (_ BitVec 64))
(declare-fun temp142_85 () (_ BitVec 64))
(declare-fun temp142_86 () (_ BitVec 64))
(declare-fun temp142_87 () (_ BitVec 64))
(declare-fun temp142_88 () (_ BitVec 64))
(declare-fun temp142_89 () (_ BitVec 64))
(declare-fun temp142_90 () (_ BitVec 64))
(declare-fun temp142_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp142_92 () (_ BitVec 64))
(declare-fun temp142_93 () (_ BitVec 64))
(declare-fun temp142_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp142_95 () (_ BitVec 64))
(declare-fun temp142_96 () (_ BitVec 64))
(declare-fun temp142_97 () (_ BitVec 64))
(declare-fun temp142_98 () (_ BitVec 64))
(declare-fun temp142_99 () (_ BitVec 64))
(declare-fun temp142_100 () (_ BitVec 64))
(declare-fun temp142_101 () (_ BitVec 64))
(declare-fun temp142_102 () (_ BitVec 64))
(declare-fun temp142_103 () (_ BitVec 64))
(declare-fun temp142_104 () (_ BitVec 64))
(declare-fun temp142_105 () (_ BitVec 64))
(declare-fun temp142_106 () (_ BitVec 64))
(declare-fun temp142_107 () (_ BitVec 64))
(declare-fun temp142_108 () (_ BitVec 64))
(declare-fun temp142_109 () (_ BitVec 64))
(declare-fun temp142_110 () (_ BitVec 64))
(declare-fun temp142_111 () (_ BitVec 64))
(declare-fun temp142_112 () (_ BitVec 64))
(declare-fun temp142_113 () (_ BitVec 64))
(declare-fun temp142_114 () (_ BitVec 64))
(declare-fun temp142_115 () (_ BitVec 64))
(declare-fun temp142_116 () (_ BitVec 64))
(declare-fun temp142_117 () (_ BitVec 64))
(declare-fun temp142_118 () (_ BitVec 64))
(declare-fun temp142_119 () (_ BitVec 64))
(declare-fun temp142_120 () (_ BitVec 64))
(declare-fun temp142_121 () (_ BitVec 64))
(declare-fun temp142_122 () (_ BitVec 64))
(declare-fun temp142_123 () (_ BitVec 64))
(declare-fun temp142_124 () (_ BitVec 64))
(declare-fun temp142_125 () (_ BitVec 64))
(declare-fun temp142_126 () (_ BitVec 64))
(declare-fun temp142_127 () (_ BitVec 64))
(declare-fun temp142_128 () (_ BitVec 64))
(declare-fun temp142_129 () (_ BitVec 64))
(declare-fun temp142_130 () (_ BitVec 64))
(declare-fun temp142_131 () (_ BitVec 64))
(declare-fun temp142_132 () (_ BitVec 64))
(declare-fun temp142_133 () (_ BitVec 64))
(declare-fun temp142_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp142_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp142_136 () (_ BitVec 64))
(declare-fun temp142_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp142_138 () (_ BitVec 64))
(declare-fun temp142_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp142_140 () (_ BitVec 64))
(declare-fun temp142_141 () (_ BitVec 64))
(declare-fun temp142_142 () (_ BitVec 64))
(declare-fun temp142_143 () (_ BitVec 64))
(declare-fun temp142_144 () (_ BitVec 64))
(declare-fun temp142_145 () (_ BitVec 64))
(declare-fun temp142_146 () (_ BitVec 64))
(declare-fun temp142_147 () (_ BitVec 64))
(declare-fun temp142_148 () (_ BitVec 64))
(declare-fun temp142_149 () (_ BitVec 64))
(declare-fun temp142_150 () (_ BitVec 64))
(declare-fun temp142_151 () (_ BitVec 64))
(declare-fun temp142_152 () (_ BitVec 64))
(declare-fun temp142_153 () (_ BitVec 64))
(declare-fun temp142_154 () (_ BitVec 64))
(declare-fun temp142_155 () (_ BitVec 64))
(declare-fun temp142_157 () (_ BitVec 64))
(declare-fun temp142_158 () (_ BitVec 64))
(declare-fun temp142_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp142_159 () (_ BitVec 64))
(declare-fun temp142_160 () (_ BitVec 64))
(declare-fun temp142_162 () (_ BitVec 64))
(declare-fun temp142_163 () (_ BitVec 64))
(declare-fun temp142_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp142_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp142_165 () (_ BitVec 64))
(declare-fun temp142_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp142_167 () (_ BitVec 64))
(declare-fun temp142_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp142_169 () (_ BitVec 64))
(declare-fun temp142_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp142_171 () (_ BitVec 64))
(declare-fun temp142_172 () (_ BitVec 64))
(declare-fun temp142_173 () (_ BitVec 64))
(declare-fun temp142_174 () (_ BitVec 64))
(declare-fun temp142_175 () (_ BitVec 64))
(declare-fun temp142_176 () (_ BitVec 64))
(declare-fun temp142_177 () (_ BitVec 64))
(declare-fun temp142_178 () (_ BitVec 64))
(declare-fun temp142_179 () (_ BitVec 64))
(declare-fun temp142_180 () (_ BitVec 64))
(declare-fun temp142_181 () (_ BitVec 64))
(declare-fun temp142_182 () (_ BitVec 64))
(declare-fun temp142_183 () (_ BitVec 64))
(declare-fun temp142_184 () (_ BitVec 64))
(declare-fun temp142_185 () (_ BitVec 64))
(declare-fun temp142_186 () (_ BitVec 64))
(declare-fun temp142_187 () (_ BitVec 64))
(declare-fun temp142_188 () (_ BitVec 64))
(declare-fun temp142_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp142_190 () (_ BitVec 64))
(declare-fun temp142_192 () (_ BitVec 64))
(declare-fun temp142_193 () (_ BitVec 64))
(declare-fun temp142_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp142_194 () (_ BitVec 64))
(declare-fun temp142_195 () (_ BitVec 64))
(declare-fun temp142_197 () (_ BitVec 64))
(declare-fun temp142_198 () (_ BitVec 64))
(declare-fun temp142_196 () (_ BitVec 64))
(declare-fun temp142_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp142_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp142_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp142_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp142_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp142_204 () (_ BitVec 64))
(declare-fun temp142_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp142_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp142_207 () (_ BitVec 64))
(declare-fun temp142_208 () (_ BitVec 64))
(declare-fun temp142_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp142_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp142_211 () (_ BitVec 64))
(declare-fun temp142_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp142_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp142_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp142_216 () (_ BitVec 64))
(declare-fun temp142_215 () (_ BitVec 64))
(declare-fun temp142_217 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp142_218 () (_ BitVec 64))
(declare-fun temp142_219 () (_ BitVec 64))
(declare-fun temp142_220 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp142_221 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp142_222 () (_ BitVec 64))
(declare-fun temp142_224 () (_ BitVec 64))
(declare-fun temp142_223 () (_ BitVec 64))
(declare-fun temp142_225 () (_ BitVec 64))
(assert (= temp142_1 #x0000000000000001))
(assert (= var77203 temp142_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp142_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp142_2)))
(assert (= temp142_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp142_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp142_4 #x0000000000000000))
(assert (= var210941 temp142_4))
(assert (= temp142_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp142_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp142_6 #x0000000000000000))
(assert (= var210986 temp142_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp142_7 #x0000000000000000))
(assert (= temp142_8 temp142_7))
(assert (= temp142_9 (select ARGNAME_padding_NAMEEND_VAL temp142_8)))
(assert (= temp142_10 #x0000000000000001))
(assert (= temp142_11 temp142_10))
(assert (= temp142_12 (select ARGNAME_padding_NAMEEND_VAL temp142_11)))
(assert (= temp142_13 #x0000000000000002))
(assert (= temp142_14 temp142_13))
(assert (= temp142_15 (select ARGNAME_padding_NAMEEND_VAL temp142_14)))
(assert (= temp142_16 #x0000000000000003))
(assert (= temp142_17 temp142_16))
(assert (= temp142_18 (select ARGNAME_padding_NAMEEND_VAL temp142_17)))
(assert (= temp142_19 #x0000000000000004))
(assert (= temp142_20 temp142_19))
(assert (= temp142_21 (select ARGNAME_padding_NAMEEND_VAL temp142_20)))
(assert (= temp142_22 #x0000000000000005))
(assert (= temp142_23 temp142_22))
(assert (= temp142_24 (select ARGNAME_padding_NAMEEND_VAL temp142_23)))
(assert (= temp142_25 #x0000000000000000))
(assert (= temp142_26 #x0000000000000000))
(assert (= temp142_27 temp142_26))
(assert (= temp142_28 (select ARGNAME_padding_NAMEEND_VAL temp142_27)))
(assert (= temp142_29 #x0000000000000000))
(assert (= temp142_30 #x0000000000000001))
(assert (= temp142_31 temp142_30))
(assert (= temp142_32 (select ARGNAME_padding_NAMEEND_VAL temp142_31)))
(assert (= temp142_33 #x0000000000000000))
(assert (= temp142_34 #x0000000000000002))
(assert (= temp142_35 temp142_34))
(assert (= temp142_36 (select ARGNAME_padding_NAMEEND_VAL temp142_35)))
(assert (= temp142_37 #x0000000000000000))
(assert (= temp142_38 #x0000000000000003))
(assert (= temp142_39 temp142_38))
(assert (= temp142_40 (select ARGNAME_padding_NAMEEND_VAL temp142_39)))
(assert (= temp142_41 #x0000000000000000))
(assert (= temp142_42 #x0000000000000004))
(assert (= temp142_43 temp142_42))
(assert (= temp142_44 (select ARGNAME_padding_NAMEEND_VAL temp142_43)))
(assert (= temp142_45 #x0000000000000000))
(assert (= temp142_46 #x0000000000000005))
(assert (= temp142_47 temp142_46))
(assert (= temp142_48 (select ARGNAME_padding_NAMEEND_VAL temp142_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp142_28 temp142_25)
             (bvslt temp142_32 temp142_29)
             (bvslt temp142_36 temp142_33)
             (bvslt temp142_40 temp142_37)
             (bvslt temp142_44 temp142_41)
             (bvslt temp142_48 temp142_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp142_49 #x0000000000000000))
(assert (= var1191714 temp142_49))
(assert (= temp142_50 #x0000000000000000))
(assert (= temp142_51 temp142_50))
(assert (= temp142_52 (select ARGNAME_output_padding_NAMEEND_VAL temp142_51)))
(assert (= temp142_53 #x0000000000000001))
(assert (= temp142_54 temp142_53))
(assert (= temp142_55 (select ARGNAME_output_padding_NAMEEND_VAL temp142_54)))
(assert (= temp142_56 #x0000000000000002))
(assert (= temp142_57 temp142_56))
(assert (= temp142_58 (select ARGNAME_output_padding_NAMEEND_VAL temp142_57)))
(assert (= temp142_59 #x0000000000000003))
(assert (= temp142_60 temp142_59))
(assert (= temp142_61 (select ARGNAME_output_padding_NAMEEND_VAL temp142_60)))
(assert (= temp142_62 #x0000000000000004))
(assert (= temp142_63 temp142_62))
(assert (= temp142_64 (select ARGNAME_output_padding_NAMEEND_VAL temp142_63)))
(assert (= temp142_65 #x0000000000000005))
(assert (= temp142_66 temp142_65))
(assert (= temp142_67 (select ARGNAME_output_padding_NAMEEND_VAL temp142_66)))
(assert (= temp142_68 #x0000000000000000))
(assert (= temp142_69 #x0000000000000000))
(assert (= temp142_70 temp142_69))
(assert (= temp142_71 (select ARGNAME_output_padding_NAMEEND_VAL temp142_70)))
(assert (= temp142_72 #x0000000000000000))
(assert (= temp142_73 #x0000000000000001))
(assert (= temp142_74 temp142_73))
(assert (= temp142_75 (select ARGNAME_output_padding_NAMEEND_VAL temp142_74)))
(assert (= temp142_76 #x0000000000000000))
(assert (= temp142_77 #x0000000000000002))
(assert (= temp142_78 temp142_77))
(assert (= temp142_79 (select ARGNAME_output_padding_NAMEEND_VAL temp142_78)))
(assert (= temp142_80 #x0000000000000000))
(assert (= temp142_81 #x0000000000000003))
(assert (= temp142_82 temp142_81))
(assert (= temp142_83 (select ARGNAME_output_padding_NAMEEND_VAL temp142_82)))
(assert (= temp142_84 #x0000000000000000))
(assert (= temp142_85 #x0000000000000004))
(assert (= temp142_86 temp142_85))
(assert (= temp142_87 (select ARGNAME_output_padding_NAMEEND_VAL temp142_86)))
(assert (= temp142_88 #x0000000000000000))
(assert (= temp142_89 #x0000000000000005))
(assert (= temp142_90 temp142_89))
(assert (= temp142_91 (select ARGNAME_output_padding_NAMEEND_VAL temp142_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp142_71 temp142_68)
             (bvslt temp142_75 temp142_72)
             (bvslt temp142_79 temp142_76)
             (bvslt temp142_83 temp142_80)
             (bvslt temp142_87 temp142_84)
             (bvslt temp142_91 temp142_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp142_92 #x0000000000000000))
(assert (= var1191725 temp142_92))
(assert (= temp142_93 #x0000000000000000))
(assert (= temp142_94 temp142_93))
(assert (= temp142_95 (select ARGNAME_stride_NAMEEND_VAL temp142_94)))
(assert (= temp142_96 #x0000000000000001))
(assert (= temp142_97 temp142_96))
(assert (= temp142_98 (select ARGNAME_stride_NAMEEND_VAL temp142_97)))
(assert (= temp142_99 #x0000000000000002))
(assert (= temp142_100 temp142_99))
(assert (= temp142_101 (select ARGNAME_stride_NAMEEND_VAL temp142_100)))
(assert (= temp142_102 #x0000000000000003))
(assert (= temp142_103 temp142_102))
(assert (= temp142_104 (select ARGNAME_stride_NAMEEND_VAL temp142_103)))
(assert (= temp142_105 #x0000000000000004))
(assert (= temp142_106 temp142_105))
(assert (= temp142_107 (select ARGNAME_stride_NAMEEND_VAL temp142_106)))
(assert (= temp142_108 #x0000000000000005))
(assert (= temp142_109 temp142_108))
(assert (= temp142_110 (select ARGNAME_stride_NAMEEND_VAL temp142_109)))
(assert (= temp142_111 #x0000000000000000))
(assert (= temp142_112 #x0000000000000000))
(assert (= temp142_113 temp142_112))
(assert (= temp142_114 (select ARGNAME_stride_NAMEEND_VAL temp142_113)))
(assert (= temp142_115 #x0000000000000000))
(assert (= temp142_116 #x0000000000000001))
(assert (= temp142_117 temp142_116))
(assert (= temp142_118 (select ARGNAME_stride_NAMEEND_VAL temp142_117)))
(assert (= temp142_119 #x0000000000000000))
(assert (= temp142_120 #x0000000000000002))
(assert (= temp142_121 temp142_120))
(assert (= temp142_122 (select ARGNAME_stride_NAMEEND_VAL temp142_121)))
(assert (= temp142_123 #x0000000000000000))
(assert (= temp142_124 #x0000000000000003))
(assert (= temp142_125 temp142_124))
(assert (= temp142_126 (select ARGNAME_stride_NAMEEND_VAL temp142_125)))
(assert (= temp142_127 #x0000000000000000))
(assert (= temp142_128 #x0000000000000004))
(assert (= temp142_129 temp142_128))
(assert (= temp142_130 (select ARGNAME_stride_NAMEEND_VAL temp142_129)))
(assert (= temp142_131 #x0000000000000000))
(assert (= temp142_132 #x0000000000000005))
(assert (= temp142_133 temp142_132))
(assert (= temp142_134 (select ARGNAME_stride_NAMEEND_VAL temp142_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp142_114 temp142_111)
             (bvsle temp142_118 temp142_115)
             (bvsle temp142_122 temp142_119)
             (bvsle temp142_126 temp142_123)
             (bvsle temp142_130 temp142_127)
             (bvsle temp142_134 temp142_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp142_135 #x0000000000000000))
(assert (= var1191735 temp142_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp142_136 #x0000000000000001))
(assert (= var1191747 temp142_136))
(assert (= temp142_137 #x0000000000000000))
(assert (= var1179826 temp142_137))
(assert (= temp142_138 #x0000000000000000))
(assert (= temp142_139 temp142_138))
(assert (= temp142_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp142_139)))
(assert (= temp142_141 #x0000000000000001))
(assert (= temp142_142 temp142_141))
(assert (= temp142_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp142_142)))
(assert (= temp142_144 #x0000000000000002))
(assert (= temp142_145 temp142_144))
(assert (= temp142_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp142_145)))
(assert (= temp142_147 #x0000000000000003))
(assert (= temp142_148 temp142_147))
(assert (= temp142_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp142_148)))
(assert (= temp142_150 #x0000000000000004))
(assert (= temp142_151 temp142_150))
(assert (= temp142_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp142_151)))
(assert (= temp142_153 #x0000000000000005))
(assert (= temp142_154 temp142_153))
(assert (= temp142_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp142_154)))
(assert (= temp142_157 var1179826))
(assert (= temp142_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp142_157)))
(assert (= temp142_156 temp142_158))
(assert (= var1191780
   (ite (bvslt temp142_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp142_159 #x0000000000000000))
(assert (= var1191780 temp142_159))
(assert (= temp142_160 #x0000000000000000))
(assert (= var1179826 temp142_160))
(assert (= temp142_162 var1179826))
(assert (= temp142_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp142_162)))
(assert (= temp142_161 temp142_163))
(assert (= var1191802 (bvsmod temp142_161 ARGNAME_groups_NAMEEND)))
(assert (= temp142_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp142_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp142_165 #x0000000000000001))
(assert (= var1191803 temp142_165))
(assert (= temp142_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp142_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp142_167 #x0000000000000001))
(assert (= var1191823 temp142_167))
(assert (= temp142_168 #x0000000000000001))
(assert (= var1180714 temp142_168))
(assert (= temp142_169 #x0000000000000000))
(assert (= temp142_170 temp142_169))
(assert (= temp142_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp142_170)))
(assert (= temp142_172 #x0000000000000001))
(assert (= temp142_173 temp142_172))
(assert (= temp142_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp142_173)))
(assert (= temp142_175 #x0000000000000002))
(assert (= temp142_176 temp142_175))
(assert (= temp142_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp142_176)))
(assert (= temp142_178 #x0000000000000003))
(assert (= temp142_179 temp142_178))
(assert (= temp142_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp142_179)))
(assert (= temp142_181 #x0000000000000004))
(assert (= temp142_182 temp142_181))
(assert (= temp142_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp142_182)))
(assert (= temp142_184 #x0000000000000005))
(assert (= temp142_185 temp142_184))
(assert (= temp142_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp142_185)))
(assert (= temp142_187 #x0000000000000000))
(assert (= temp142_188
   (ite (bvslt var1180714 temp142_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp142_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp142_188)))
(assert (= var1191831 temp142_189))
(assert (bvslt (ite (bvslt var1180714 temp142_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp142_190 #x0000000000000001))
(assert (= var1180714 temp142_190))
(assert (= temp142_192 var1180714))
(assert (= temp142_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp142_192)))
(assert (= temp142_191 temp142_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp142_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp142_194 #x0000000000000001))
(assert (= var1191836 temp142_194))
(assert (= temp142_195 #x0000000000000000))
(assert (= var1179826 temp142_195))
(assert (= temp142_197 var1179826))
(assert (= temp142_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp142_197)))
(assert (= temp142_196 temp142_198))
(assert (= temp142_199 #x0000000000000002))
(assert (= var1586025 temp142_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp142_200 #x0000000000000001))
(assert (= var1191993 temp142_200))
(assert (= temp142_201 #x0000000000000001))
(assert (= var2700303 temp142_201))
(assert (= temp142_202 #x0000000000000001))
(assert (= var2962447 temp142_202))
(assert (= temp142_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp142_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp142_204 #x0000000000000001))
(assert (= var211058 temp142_204))
(assert (= temp142_205 #x0000000000000001))
(assert (= var211188 temp142_205))
(assert (= var3879401 var211188))
(assert (= temp142_206 #x0000000000000000))
(assert (= var3866802 temp142_206))
(assert (= temp142_207 #x0000000000000000))
(assert (= temp142_208
   (ite (bvslt var3866802 temp142_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp142_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp142_208)))
(assert (= var3879420 temp142_209))
(assert (bvslt (ite (bvslt var3866802 temp142_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp142_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp142_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp142_211 #x0000000000000001))
(assert (= var3879421 temp142_211))
(assert (= temp142_212 #x0000000000000000))
(assert (= var4079423 temp142_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp142_213 #x0000000000000002))
(assert (= var4208259 temp142_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp142_214 #x0000000000000000))
(assert (= var4273820 temp142_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp142_216 #xffffffffffffffff))
(assert (= temp142_215 temp142_216))
(assert (= temp142_217 #x0000000000000001))
(assert (= var197674 temp142_217))
(assert (= temp142_218 #x0000000000000000))
(assert (= temp142_219
   (ite (bvslt var197674 temp142_218)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp142_220 (select ARGNAME_input_NAMEEND_DIMSIZE temp142_219)))
(assert (= var211595 temp142_220))
(assert (bvslt (ite (bvslt var197674 temp142_218)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp142_221 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp142_221) #x0000000000000001 #x0000000000000000)))
(assert (= temp142_222 #x0000000000000001))
(assert (= var211596 temp142_222))
(assert (= temp142_224 #xffffffffffffffff))
(assert (= temp142_223 temp142_224))
(assert (= temp142_225 #x0000000000000001))
(assert (= var211058 temp142_225))
(model-add temp142_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp142_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp142_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp142_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






