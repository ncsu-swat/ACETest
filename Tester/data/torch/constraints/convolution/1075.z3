(declare-fun temp10164_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10164_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10164_3 () (_ BitVec 64))
(declare-fun temp10164_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10164_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10164_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10164_7 () (_ BitVec 64))
(declare-fun temp10164_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10164_9 () (_ BitVec 64))
(declare-fun temp10164_10 () (_ BitVec 64))
(declare-fun temp10164_11 () (_ BitVec 64))
(declare-fun temp10164_12 () (_ BitVec 64))
(declare-fun temp10164_13 () (_ BitVec 64))
(declare-fun temp10164_14 () (_ BitVec 64))
(declare-fun temp10164_15 () (_ BitVec 64))
(declare-fun temp10164_16 () (_ BitVec 64))
(declare-fun temp10164_17 () (_ BitVec 64))
(declare-fun temp10164_18 () (_ BitVec 64))
(declare-fun temp10164_19 () (_ BitVec 64))
(declare-fun temp10164_20 () (_ BitVec 64))
(declare-fun temp10164_21 () (_ BitVec 64))
(declare-fun temp10164_22 () (_ BitVec 64))
(declare-fun temp10164_23 () (_ BitVec 64))
(declare-fun temp10164_24 () (_ BitVec 64))
(declare-fun temp10164_25 () (_ BitVec 64))
(declare-fun temp10164_26 () (_ BitVec 64))
(declare-fun temp10164_27 () (_ BitVec 64))
(declare-fun temp10164_28 () (_ BitVec 64))
(declare-fun temp10164_29 () (_ BitVec 64))
(declare-fun temp10164_30 () (_ BitVec 64))
(declare-fun temp10164_31 () (_ BitVec 64))
(declare-fun temp10164_32 () (_ BitVec 64))
(declare-fun temp10164_33 () (_ BitVec 64))
(declare-fun temp10164_34 () (_ BitVec 64))
(declare-fun temp10164_35 () (_ BitVec 64))
(declare-fun temp10164_36 () (_ BitVec 64))
(declare-fun temp10164_37 () (_ BitVec 64))
(declare-fun temp10164_38 () (_ BitVec 64))
(declare-fun temp10164_39 () (_ BitVec 64))
(declare-fun temp10164_40 () (_ BitVec 64))
(declare-fun temp10164_41 () (_ BitVec 64))
(declare-fun temp10164_42 () (_ BitVec 64))
(declare-fun temp10164_43 () (_ BitVec 64))
(declare-fun temp10164_44 () (_ BitVec 64))
(declare-fun temp10164_45 () (_ BitVec 64))
(declare-fun temp10164_46 () (_ BitVec 64))
(declare-fun temp10164_47 () (_ BitVec 64))
(declare-fun temp10164_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10164_49 () (_ BitVec 64))
(declare-fun temp10164_50 () (_ BitVec 64))
(declare-fun temp10164_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10164_52 () (_ BitVec 64))
(declare-fun temp10164_53 () (_ BitVec 64))
(declare-fun temp10164_54 () (_ BitVec 64))
(declare-fun temp10164_55 () (_ BitVec 64))
(declare-fun temp10164_56 () (_ BitVec 64))
(declare-fun temp10164_57 () (_ BitVec 64))
(declare-fun temp10164_58 () (_ BitVec 64))
(declare-fun temp10164_59 () (_ BitVec 64))
(declare-fun temp10164_60 () (_ BitVec 64))
(declare-fun temp10164_61 () (_ BitVec 64))
(declare-fun temp10164_62 () (_ BitVec 64))
(declare-fun temp10164_63 () (_ BitVec 64))
(declare-fun temp10164_64 () (_ BitVec 64))
(declare-fun temp10164_65 () (_ BitVec 64))
(declare-fun temp10164_66 () (_ BitVec 64))
(declare-fun temp10164_67 () (_ BitVec 64))
(declare-fun temp10164_68 () (_ BitVec 64))
(declare-fun temp10164_69 () (_ BitVec 64))
(declare-fun temp10164_70 () (_ BitVec 64))
(declare-fun temp10164_71 () (_ BitVec 64))
(declare-fun temp10164_72 () (_ BitVec 64))
(declare-fun temp10164_73 () (_ BitVec 64))
(declare-fun temp10164_74 () (_ BitVec 64))
(declare-fun temp10164_75 () (_ BitVec 64))
(declare-fun temp10164_76 () (_ BitVec 64))
(declare-fun temp10164_77 () (_ BitVec 64))
(declare-fun temp10164_78 () (_ BitVec 64))
(declare-fun temp10164_79 () (_ BitVec 64))
(declare-fun temp10164_80 () (_ BitVec 64))
(declare-fun temp10164_81 () (_ BitVec 64))
(declare-fun temp10164_82 () (_ BitVec 64))
(declare-fun temp10164_83 () (_ BitVec 64))
(declare-fun temp10164_84 () (_ BitVec 64))
(declare-fun temp10164_85 () (_ BitVec 64))
(declare-fun temp10164_86 () (_ BitVec 64))
(declare-fun temp10164_87 () (_ BitVec 64))
(declare-fun temp10164_88 () (_ BitVec 64))
(declare-fun temp10164_89 () (_ BitVec 64))
(declare-fun temp10164_90 () (_ BitVec 64))
(declare-fun temp10164_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10164_92 () (_ BitVec 64))
(declare-fun temp10164_93 () (_ BitVec 64))
(declare-fun temp10164_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10164_95 () (_ BitVec 64))
(declare-fun temp10164_96 () (_ BitVec 64))
(declare-fun temp10164_97 () (_ BitVec 64))
(declare-fun temp10164_98 () (_ BitVec 64))
(declare-fun temp10164_99 () (_ BitVec 64))
(declare-fun temp10164_100 () (_ BitVec 64))
(declare-fun temp10164_101 () (_ BitVec 64))
(declare-fun temp10164_102 () (_ BitVec 64))
(declare-fun temp10164_103 () (_ BitVec 64))
(declare-fun temp10164_104 () (_ BitVec 64))
(declare-fun temp10164_105 () (_ BitVec 64))
(declare-fun temp10164_106 () (_ BitVec 64))
(declare-fun temp10164_107 () (_ BitVec 64))
(declare-fun temp10164_108 () (_ BitVec 64))
(declare-fun temp10164_109 () (_ BitVec 64))
(declare-fun temp10164_110 () (_ BitVec 64))
(declare-fun temp10164_111 () (_ BitVec 64))
(declare-fun temp10164_112 () (_ BitVec 64))
(declare-fun temp10164_113 () (_ BitVec 64))
(declare-fun temp10164_114 () (_ BitVec 64))
(declare-fun temp10164_115 () (_ BitVec 64))
(declare-fun temp10164_116 () (_ BitVec 64))
(declare-fun temp10164_117 () (_ BitVec 64))
(declare-fun temp10164_118 () (_ BitVec 64))
(declare-fun temp10164_119 () (_ BitVec 64))
(declare-fun temp10164_120 () (_ BitVec 64))
(declare-fun temp10164_121 () (_ BitVec 64))
(declare-fun temp10164_122 () (_ BitVec 64))
(declare-fun temp10164_123 () (_ BitVec 64))
(declare-fun temp10164_124 () (_ BitVec 64))
(declare-fun temp10164_125 () (_ BitVec 64))
(declare-fun temp10164_126 () (_ BitVec 64))
(declare-fun temp10164_127 () (_ BitVec 64))
(declare-fun temp10164_128 () (_ BitVec 64))
(declare-fun temp10164_129 () (_ BitVec 64))
(declare-fun temp10164_130 () (_ BitVec 64))
(declare-fun temp10164_131 () (_ BitVec 64))
(declare-fun temp10164_132 () (_ BitVec 64))
(declare-fun temp10164_133 () (_ BitVec 64))
(declare-fun temp10164_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10164_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10164_136 () (_ BitVec 64))
(declare-fun temp10164_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10164_138 () (_ BitVec 64))
(declare-fun temp10164_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10164_140 () (_ BitVec 64))
(declare-fun temp10164_141 () (_ BitVec 64))
(declare-fun temp10164_142 () (_ BitVec 64))
(declare-fun temp10164_143 () (_ BitVec 64))
(declare-fun temp10164_144 () (_ BitVec 64))
(declare-fun temp10164_145 () (_ BitVec 64))
(declare-fun temp10164_146 () (_ BitVec 64))
(declare-fun temp10164_147 () (_ BitVec 64))
(declare-fun temp10164_148 () (_ BitVec 64))
(declare-fun temp10164_149 () (_ BitVec 64))
(declare-fun temp10164_150 () (_ BitVec 64))
(declare-fun temp10164_151 () (_ BitVec 64))
(declare-fun temp10164_152 () (_ BitVec 64))
(declare-fun temp10164_153 () (_ BitVec 64))
(declare-fun temp10164_154 () (_ BitVec 64))
(declare-fun temp10164_155 () (_ BitVec 64))
(declare-fun temp10164_157 () (_ BitVec 64))
(declare-fun temp10164_158 () (_ BitVec 64))
(declare-fun temp10164_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10164_159 () (_ BitVec 64))
(declare-fun temp10164_160 () (_ BitVec 64))
(declare-fun temp10164_162 () (_ BitVec 64))
(declare-fun temp10164_163 () (_ BitVec 64))
(declare-fun temp10164_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10164_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10164_165 () (_ BitVec 64))
(declare-fun temp10164_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10164_167 () (_ BitVec 64))
(declare-fun temp10164_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10164_169 () (_ BitVec 64))
(declare-fun temp10164_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10164_171 () (_ BitVec 64))
(declare-fun temp10164_172 () (_ BitVec 64))
(declare-fun temp10164_173 () (_ BitVec 64))
(declare-fun temp10164_174 () (_ BitVec 64))
(declare-fun temp10164_175 () (_ BitVec 64))
(declare-fun temp10164_176 () (_ BitVec 64))
(declare-fun temp10164_177 () (_ BitVec 64))
(declare-fun temp10164_178 () (_ BitVec 64))
(declare-fun temp10164_179 () (_ BitVec 64))
(declare-fun temp10164_180 () (_ BitVec 64))
(declare-fun temp10164_181 () (_ BitVec 64))
(declare-fun temp10164_182 () (_ BitVec 64))
(declare-fun temp10164_183 () (_ BitVec 64))
(declare-fun temp10164_184 () (_ BitVec 64))
(declare-fun temp10164_185 () (_ BitVec 64))
(declare-fun temp10164_186 () (_ BitVec 64))
(declare-fun temp10164_187 () (_ BitVec 64))
(declare-fun temp10164_188 () (_ BitVec 64))
(declare-fun temp10164_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10164_190 () (_ BitVec 64))
(declare-fun temp10164_192 () (_ BitVec 64))
(declare-fun temp10164_193 () (_ BitVec 64))
(declare-fun temp10164_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10164_194 () (_ BitVec 64))
(declare-fun temp10164_195 () (_ BitVec 64))
(declare-fun temp10164_197 () (_ BitVec 64))
(declare-fun temp10164_198 () (_ BitVec 64))
(declare-fun temp10164_196 () (_ BitVec 64))
(declare-fun temp10164_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10164_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10164_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10164_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10164_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10164_204 () (_ BitVec 64))
(declare-fun temp10164_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10164_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10164_207 () (_ BitVec 64))
(declare-fun temp10164_208 () (_ BitVec 64))
(declare-fun temp10164_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10164_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10164_211 () (_ BitVec 64))
(declare-fun temp10164_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10164_213 () (_ BitVec 64))
(declare-fun temp10164_214 () (_ BitVec 64))
(declare-fun temp10164_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10164_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10164_217 () (_ BitVec 64))
(declare-fun temp10164_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10164_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10164_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4469136 () (_ BitVec 64))
(declare-fun var211890 () (_ BitVec 64))
(declare-fun temp10164_221 () (_ BitVec 64))
(declare-fun var211891 () (_ BitVec 64))
(declare-fun temp10164_222 () (_ BitVec 64))
(declare-fun temp10164_223 () (_ BitVec 64))
(declare-fun var5845780 () (_ BitVec 64))
(declare-fun var5845747 () (_ BitVec 64))
(declare-fun var5714311 () (_ BitVec 64))
(declare-fun var5714307 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp10164_224 () (_ BitVec 64))
(assert (= temp10164_1 #x0000000000000001))
(assert (= var77203 temp10164_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10164_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10164_2)))
(assert (= temp10164_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10164_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10164_4 #x0000000000000000))
(assert (= var210941 temp10164_4))
(assert (= temp10164_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10164_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10164_6 #x0000000000000000))
(assert (= var210986 temp10164_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10164_7 #x0000000000000000))
(assert (= temp10164_8 temp10164_7))
(assert (= temp10164_9 (select ARGNAME_padding_NAMEEND_VAL temp10164_8)))
(assert (= temp10164_10 #x0000000000000001))
(assert (= temp10164_11 temp10164_10))
(assert (= temp10164_12 (select ARGNAME_padding_NAMEEND_VAL temp10164_11)))
(assert (= temp10164_13 #x0000000000000002))
(assert (= temp10164_14 temp10164_13))
(assert (= temp10164_15 (select ARGNAME_padding_NAMEEND_VAL temp10164_14)))
(assert (= temp10164_16 #x0000000000000003))
(assert (= temp10164_17 temp10164_16))
(assert (= temp10164_18 (select ARGNAME_padding_NAMEEND_VAL temp10164_17)))
(assert (= temp10164_19 #x0000000000000004))
(assert (= temp10164_20 temp10164_19))
(assert (= temp10164_21 (select ARGNAME_padding_NAMEEND_VAL temp10164_20)))
(assert (= temp10164_22 #x0000000000000005))
(assert (= temp10164_23 temp10164_22))
(assert (= temp10164_24 (select ARGNAME_padding_NAMEEND_VAL temp10164_23)))
(assert (= temp10164_25 #x0000000000000000))
(assert (= temp10164_26 #x0000000000000000))
(assert (= temp10164_27 temp10164_26))
(assert (= temp10164_28 (select ARGNAME_padding_NAMEEND_VAL temp10164_27)))
(assert (= temp10164_29 #x0000000000000000))
(assert (= temp10164_30 #x0000000000000001))
(assert (= temp10164_31 temp10164_30))
(assert (= temp10164_32 (select ARGNAME_padding_NAMEEND_VAL temp10164_31)))
(assert (= temp10164_33 #x0000000000000000))
(assert (= temp10164_34 #x0000000000000002))
(assert (= temp10164_35 temp10164_34))
(assert (= temp10164_36 (select ARGNAME_padding_NAMEEND_VAL temp10164_35)))
(assert (= temp10164_37 #x0000000000000000))
(assert (= temp10164_38 #x0000000000000003))
(assert (= temp10164_39 temp10164_38))
(assert (= temp10164_40 (select ARGNAME_padding_NAMEEND_VAL temp10164_39)))
(assert (= temp10164_41 #x0000000000000000))
(assert (= temp10164_42 #x0000000000000004))
(assert (= temp10164_43 temp10164_42))
(assert (= temp10164_44 (select ARGNAME_padding_NAMEEND_VAL temp10164_43)))
(assert (= temp10164_45 #x0000000000000000))
(assert (= temp10164_46 #x0000000000000005))
(assert (= temp10164_47 temp10164_46))
(assert (= temp10164_48 (select ARGNAME_padding_NAMEEND_VAL temp10164_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10164_28 temp10164_25)
             (bvslt temp10164_32 temp10164_29)
             (bvslt temp10164_36 temp10164_33)
             (bvslt temp10164_40 temp10164_37)
             (bvslt temp10164_44 temp10164_41)
             (bvslt temp10164_48 temp10164_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10164_49 #x0000000000000000))
(assert (= var1191714 temp10164_49))
(assert (= temp10164_50 #x0000000000000000))
(assert (= temp10164_51 temp10164_50))
(assert (= temp10164_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10164_51)))
(assert (= temp10164_53 #x0000000000000001))
(assert (= temp10164_54 temp10164_53))
(assert (= temp10164_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10164_54)))
(assert (= temp10164_56 #x0000000000000002))
(assert (= temp10164_57 temp10164_56))
(assert (= temp10164_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10164_57)))
(assert (= temp10164_59 #x0000000000000003))
(assert (= temp10164_60 temp10164_59))
(assert (= temp10164_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10164_60)))
(assert (= temp10164_62 #x0000000000000004))
(assert (= temp10164_63 temp10164_62))
(assert (= temp10164_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10164_63)))
(assert (= temp10164_65 #x0000000000000005))
(assert (= temp10164_66 temp10164_65))
(assert (= temp10164_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10164_66)))
(assert (= temp10164_68 #x0000000000000000))
(assert (= temp10164_69 #x0000000000000000))
(assert (= temp10164_70 temp10164_69))
(assert (= temp10164_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10164_70)))
(assert (= temp10164_72 #x0000000000000000))
(assert (= temp10164_73 #x0000000000000001))
(assert (= temp10164_74 temp10164_73))
(assert (= temp10164_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10164_74)))
(assert (= temp10164_76 #x0000000000000000))
(assert (= temp10164_77 #x0000000000000002))
(assert (= temp10164_78 temp10164_77))
(assert (= temp10164_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10164_78)))
(assert (= temp10164_80 #x0000000000000000))
(assert (= temp10164_81 #x0000000000000003))
(assert (= temp10164_82 temp10164_81))
(assert (= temp10164_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10164_82)))
(assert (= temp10164_84 #x0000000000000000))
(assert (= temp10164_85 #x0000000000000004))
(assert (= temp10164_86 temp10164_85))
(assert (= temp10164_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10164_86)))
(assert (= temp10164_88 #x0000000000000000))
(assert (= temp10164_89 #x0000000000000005))
(assert (= temp10164_90 temp10164_89))
(assert (= temp10164_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10164_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10164_71 temp10164_68)
             (bvslt temp10164_75 temp10164_72)
             (bvslt temp10164_79 temp10164_76)
             (bvslt temp10164_83 temp10164_80)
             (bvslt temp10164_87 temp10164_84)
             (bvslt temp10164_91 temp10164_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10164_92 #x0000000000000000))
(assert (= var1191725 temp10164_92))
(assert (= temp10164_93 #x0000000000000000))
(assert (= temp10164_94 temp10164_93))
(assert (= temp10164_95 (select ARGNAME_stride_NAMEEND_VAL temp10164_94)))
(assert (= temp10164_96 #x0000000000000001))
(assert (= temp10164_97 temp10164_96))
(assert (= temp10164_98 (select ARGNAME_stride_NAMEEND_VAL temp10164_97)))
(assert (= temp10164_99 #x0000000000000002))
(assert (= temp10164_100 temp10164_99))
(assert (= temp10164_101 (select ARGNAME_stride_NAMEEND_VAL temp10164_100)))
(assert (= temp10164_102 #x0000000000000003))
(assert (= temp10164_103 temp10164_102))
(assert (= temp10164_104 (select ARGNAME_stride_NAMEEND_VAL temp10164_103)))
(assert (= temp10164_105 #x0000000000000004))
(assert (= temp10164_106 temp10164_105))
(assert (= temp10164_107 (select ARGNAME_stride_NAMEEND_VAL temp10164_106)))
(assert (= temp10164_108 #x0000000000000005))
(assert (= temp10164_109 temp10164_108))
(assert (= temp10164_110 (select ARGNAME_stride_NAMEEND_VAL temp10164_109)))
(assert (= temp10164_111 #x0000000000000000))
(assert (= temp10164_112 #x0000000000000000))
(assert (= temp10164_113 temp10164_112))
(assert (= temp10164_114 (select ARGNAME_stride_NAMEEND_VAL temp10164_113)))
(assert (= temp10164_115 #x0000000000000000))
(assert (= temp10164_116 #x0000000000000001))
(assert (= temp10164_117 temp10164_116))
(assert (= temp10164_118 (select ARGNAME_stride_NAMEEND_VAL temp10164_117)))
(assert (= temp10164_119 #x0000000000000000))
(assert (= temp10164_120 #x0000000000000002))
(assert (= temp10164_121 temp10164_120))
(assert (= temp10164_122 (select ARGNAME_stride_NAMEEND_VAL temp10164_121)))
(assert (= temp10164_123 #x0000000000000000))
(assert (= temp10164_124 #x0000000000000003))
(assert (= temp10164_125 temp10164_124))
(assert (= temp10164_126 (select ARGNAME_stride_NAMEEND_VAL temp10164_125)))
(assert (= temp10164_127 #x0000000000000000))
(assert (= temp10164_128 #x0000000000000004))
(assert (= temp10164_129 temp10164_128))
(assert (= temp10164_130 (select ARGNAME_stride_NAMEEND_VAL temp10164_129)))
(assert (= temp10164_131 #x0000000000000000))
(assert (= temp10164_132 #x0000000000000005))
(assert (= temp10164_133 temp10164_132))
(assert (= temp10164_134 (select ARGNAME_stride_NAMEEND_VAL temp10164_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10164_114 temp10164_111)
             (bvsle temp10164_118 temp10164_115)
             (bvsle temp10164_122 temp10164_119)
             (bvsle temp10164_126 temp10164_123)
             (bvsle temp10164_130 temp10164_127)
             (bvsle temp10164_134 temp10164_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10164_135 #x0000000000000000))
(assert (= var1191735 temp10164_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10164_136 #x0000000000000001))
(assert (= var1191747 temp10164_136))
(assert (= temp10164_137 #x0000000000000000))
(assert (= var1179826 temp10164_137))
(assert (= temp10164_138 #x0000000000000000))
(assert (= temp10164_139 temp10164_138))
(assert (= temp10164_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10164_139)))
(assert (= temp10164_141 #x0000000000000001))
(assert (= temp10164_142 temp10164_141))
(assert (= temp10164_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10164_142)))
(assert (= temp10164_144 #x0000000000000002))
(assert (= temp10164_145 temp10164_144))
(assert (= temp10164_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10164_145)))
(assert (= temp10164_147 #x0000000000000003))
(assert (= temp10164_148 temp10164_147))
(assert (= temp10164_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10164_148)))
(assert (= temp10164_150 #x0000000000000004))
(assert (= temp10164_151 temp10164_150))
(assert (= temp10164_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10164_151)))
(assert (= temp10164_153 #x0000000000000005))
(assert (= temp10164_154 temp10164_153))
(assert (= temp10164_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10164_154)))
(assert (= temp10164_157 var1179826))
(assert (= temp10164_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10164_157)))
(assert (= temp10164_156 temp10164_158))
(assert (= var1191780
   (ite (bvslt temp10164_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10164_159 #x0000000000000000))
(assert (= var1191780 temp10164_159))
(assert (= temp10164_160 #x0000000000000000))
(assert (= var1179826 temp10164_160))
(assert (= temp10164_162 var1179826))
(assert (= temp10164_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10164_162)))
(assert (= temp10164_161 temp10164_163))
(assert (= var1191802 (bvsmod temp10164_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10164_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10164_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10164_165 #x0000000000000001))
(assert (= var1191803 temp10164_165))
(assert (= temp10164_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10164_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10164_167 #x0000000000000001))
(assert (= var1191823 temp10164_167))
(assert (= temp10164_168 #x0000000000000001))
(assert (= var1180714 temp10164_168))
(assert (= temp10164_169 #x0000000000000000))
(assert (= temp10164_170 temp10164_169))
(assert (= temp10164_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10164_170)))
(assert (= temp10164_172 #x0000000000000001))
(assert (= temp10164_173 temp10164_172))
(assert (= temp10164_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10164_173)))
(assert (= temp10164_175 #x0000000000000002))
(assert (= temp10164_176 temp10164_175))
(assert (= temp10164_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10164_176)))
(assert (= temp10164_178 #x0000000000000003))
(assert (= temp10164_179 temp10164_178))
(assert (= temp10164_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10164_179)))
(assert (= temp10164_181 #x0000000000000004))
(assert (= temp10164_182 temp10164_181))
(assert (= temp10164_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10164_182)))
(assert (= temp10164_184 #x0000000000000005))
(assert (= temp10164_185 temp10164_184))
(assert (= temp10164_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10164_185)))
(assert (= temp10164_187 #x0000000000000000))
(assert (= temp10164_188
   (ite (bvslt var1180714 temp10164_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10164_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10164_188)))
(assert (= var1191831 temp10164_189))
(assert (bvslt (ite (bvslt var1180714 temp10164_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10164_190 #x0000000000000001))
(assert (= var1180714 temp10164_190))
(assert (= temp10164_192 var1180714))
(assert (= temp10164_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10164_192)))
(assert (= temp10164_191 temp10164_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10164_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10164_194 #x0000000000000001))
(assert (= var1191836 temp10164_194))
(assert (= temp10164_195 #x0000000000000000))
(assert (= var1179826 temp10164_195))
(assert (= temp10164_197 var1179826))
(assert (= temp10164_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10164_197)))
(assert (= temp10164_196 temp10164_198))
(assert (= temp10164_199 #x0000000000000002))
(assert (= var1586025 temp10164_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10164_200 #x0000000000000001))
(assert (= var1191993 temp10164_200))
(assert (= temp10164_201 #x0000000000000001))
(assert (= var2700303 temp10164_201))
(assert (= temp10164_202 #x0000000000000001))
(assert (= var2962447 temp10164_202))
(assert (= temp10164_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10164_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10164_204 #x0000000000000001))
(assert (= var211058 temp10164_204))
(assert (= temp10164_205 #x0000000000000001))
(assert (= var211188 temp10164_205))
(assert (= var3879401 var211188))
(assert (= temp10164_206 #x0000000000000000))
(assert (= var3866802 temp10164_206))
(assert (= temp10164_207 #x0000000000000000))
(assert (= temp10164_208
   (ite (bvslt var3866802 temp10164_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10164_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10164_208)))
(assert (= var3879420 temp10164_209))
(assert (bvslt (ite (bvslt var3866802 temp10164_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10164_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10164_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10164_211 #x0000000000000000))
(assert (= var3879421 temp10164_211))
(assert (= temp10164_212 #x0000000000000001))
(assert (= var3867690 temp10164_212))
(assert (= temp10164_213 #x0000000000000000))
(assert (= temp10164_214
   (ite (bvslt var3867690 temp10164_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10164_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10164_214)))
(assert (= var3879423 temp10164_215))
(assert (bvslt (ite (bvslt var3867690 temp10164_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10164_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10164_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10164_217 #x0000000000000001))
(assert (= var3879424 temp10164_217))
(assert (= temp10164_218 #x0000000000000000))
(assert (= var4079423 temp10164_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10164_219 #x0000000000000002))
(assert (= var4208259 temp10164_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10164_220 #x0000000000000000))
(assert (= var4273820 temp10164_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4469136 var211201))
(assert (= var211890 var210913))
(assert (= temp10164_221 #x0000000000000000))
(assert (= var211891
   (ite (distinct var211890 temp10164_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10164_222 #x0000000000000001))
(assert (= var211058 temp10164_222))
(assert (= temp10164_223 #x0000000000000000))
(assert (= var5845780 temp10164_223))
(assert (= var5845747 var5845780))
(assert (= var5714311 var5845747))
(assert (= var5714307 var5714311))
(assert (= var212669 var5714307))
(assert (= temp10164_224 #x0000000000000000))
(assert (= var212669 temp10164_224))
(model-add temp10164_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10164_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10164_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10164_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




