(declare-fun temp10408_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10408_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10408_3 () (_ BitVec 64))
(declare-fun temp10408_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10408_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10408_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10408_7 () (_ BitVec 64))
(declare-fun temp10408_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10408_9 () (_ BitVec 64))
(declare-fun temp10408_10 () (_ BitVec 64))
(declare-fun temp10408_11 () (_ BitVec 64))
(declare-fun temp10408_12 () (_ BitVec 64))
(declare-fun temp10408_13 () (_ BitVec 64))
(declare-fun temp10408_14 () (_ BitVec 64))
(declare-fun temp10408_15 () (_ BitVec 64))
(declare-fun temp10408_16 () (_ BitVec 64))
(declare-fun temp10408_17 () (_ BitVec 64))
(declare-fun temp10408_18 () (_ BitVec 64))
(declare-fun temp10408_19 () (_ BitVec 64))
(declare-fun temp10408_20 () (_ BitVec 64))
(declare-fun temp10408_21 () (_ BitVec 64))
(declare-fun temp10408_22 () (_ BitVec 64))
(declare-fun temp10408_23 () (_ BitVec 64))
(declare-fun temp10408_24 () (_ BitVec 64))
(declare-fun temp10408_25 () (_ BitVec 64))
(declare-fun temp10408_26 () (_ BitVec 64))
(declare-fun temp10408_27 () (_ BitVec 64))
(declare-fun temp10408_28 () (_ BitVec 64))
(declare-fun temp10408_29 () (_ BitVec 64))
(declare-fun temp10408_30 () (_ BitVec 64))
(declare-fun temp10408_31 () (_ BitVec 64))
(declare-fun temp10408_32 () (_ BitVec 64))
(declare-fun temp10408_33 () (_ BitVec 64))
(declare-fun temp10408_34 () (_ BitVec 64))
(declare-fun temp10408_35 () (_ BitVec 64))
(declare-fun temp10408_36 () (_ BitVec 64))
(declare-fun temp10408_37 () (_ BitVec 64))
(declare-fun temp10408_38 () (_ BitVec 64))
(declare-fun temp10408_39 () (_ BitVec 64))
(declare-fun temp10408_40 () (_ BitVec 64))
(declare-fun temp10408_41 () (_ BitVec 64))
(declare-fun temp10408_42 () (_ BitVec 64))
(declare-fun temp10408_43 () (_ BitVec 64))
(declare-fun temp10408_44 () (_ BitVec 64))
(declare-fun temp10408_45 () (_ BitVec 64))
(declare-fun temp10408_46 () (_ BitVec 64))
(declare-fun temp10408_47 () (_ BitVec 64))
(declare-fun temp10408_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10408_49 () (_ BitVec 64))
(declare-fun temp10408_50 () (_ BitVec 64))
(declare-fun temp10408_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10408_52 () (_ BitVec 64))
(declare-fun temp10408_53 () (_ BitVec 64))
(declare-fun temp10408_54 () (_ BitVec 64))
(declare-fun temp10408_55 () (_ BitVec 64))
(declare-fun temp10408_56 () (_ BitVec 64))
(declare-fun temp10408_57 () (_ BitVec 64))
(declare-fun temp10408_58 () (_ BitVec 64))
(declare-fun temp10408_59 () (_ BitVec 64))
(declare-fun temp10408_60 () (_ BitVec 64))
(declare-fun temp10408_61 () (_ BitVec 64))
(declare-fun temp10408_62 () (_ BitVec 64))
(declare-fun temp10408_63 () (_ BitVec 64))
(declare-fun temp10408_64 () (_ BitVec 64))
(declare-fun temp10408_65 () (_ BitVec 64))
(declare-fun temp10408_66 () (_ BitVec 64))
(declare-fun temp10408_67 () (_ BitVec 64))
(declare-fun temp10408_68 () (_ BitVec 64))
(declare-fun temp10408_69 () (_ BitVec 64))
(declare-fun temp10408_70 () (_ BitVec 64))
(declare-fun temp10408_71 () (_ BitVec 64))
(declare-fun temp10408_72 () (_ BitVec 64))
(declare-fun temp10408_73 () (_ BitVec 64))
(declare-fun temp10408_74 () (_ BitVec 64))
(declare-fun temp10408_75 () (_ BitVec 64))
(declare-fun temp10408_76 () (_ BitVec 64))
(declare-fun temp10408_77 () (_ BitVec 64))
(declare-fun temp10408_78 () (_ BitVec 64))
(declare-fun temp10408_79 () (_ BitVec 64))
(declare-fun temp10408_80 () (_ BitVec 64))
(declare-fun temp10408_81 () (_ BitVec 64))
(declare-fun temp10408_82 () (_ BitVec 64))
(declare-fun temp10408_83 () (_ BitVec 64))
(declare-fun temp10408_84 () (_ BitVec 64))
(declare-fun temp10408_85 () (_ BitVec 64))
(declare-fun temp10408_86 () (_ BitVec 64))
(declare-fun temp10408_87 () (_ BitVec 64))
(declare-fun temp10408_88 () (_ BitVec 64))
(declare-fun temp10408_89 () (_ BitVec 64))
(declare-fun temp10408_90 () (_ BitVec 64))
(declare-fun temp10408_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10408_92 () (_ BitVec 64))
(declare-fun temp10408_93 () (_ BitVec 64))
(declare-fun temp10408_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10408_95 () (_ BitVec 64))
(declare-fun temp10408_96 () (_ BitVec 64))
(declare-fun temp10408_97 () (_ BitVec 64))
(declare-fun temp10408_98 () (_ BitVec 64))
(declare-fun temp10408_99 () (_ BitVec 64))
(declare-fun temp10408_100 () (_ BitVec 64))
(declare-fun temp10408_101 () (_ BitVec 64))
(declare-fun temp10408_102 () (_ BitVec 64))
(declare-fun temp10408_103 () (_ BitVec 64))
(declare-fun temp10408_104 () (_ BitVec 64))
(declare-fun temp10408_105 () (_ BitVec 64))
(declare-fun temp10408_106 () (_ BitVec 64))
(declare-fun temp10408_107 () (_ BitVec 64))
(declare-fun temp10408_108 () (_ BitVec 64))
(declare-fun temp10408_109 () (_ BitVec 64))
(declare-fun temp10408_110 () (_ BitVec 64))
(declare-fun temp10408_111 () (_ BitVec 64))
(declare-fun temp10408_112 () (_ BitVec 64))
(declare-fun temp10408_113 () (_ BitVec 64))
(declare-fun temp10408_114 () (_ BitVec 64))
(declare-fun temp10408_115 () (_ BitVec 64))
(declare-fun temp10408_116 () (_ BitVec 64))
(declare-fun temp10408_117 () (_ BitVec 64))
(declare-fun temp10408_118 () (_ BitVec 64))
(declare-fun temp10408_119 () (_ BitVec 64))
(declare-fun temp10408_120 () (_ BitVec 64))
(declare-fun temp10408_121 () (_ BitVec 64))
(declare-fun temp10408_122 () (_ BitVec 64))
(declare-fun temp10408_123 () (_ BitVec 64))
(declare-fun temp10408_124 () (_ BitVec 64))
(declare-fun temp10408_125 () (_ BitVec 64))
(declare-fun temp10408_126 () (_ BitVec 64))
(declare-fun temp10408_127 () (_ BitVec 64))
(declare-fun temp10408_128 () (_ BitVec 64))
(declare-fun temp10408_129 () (_ BitVec 64))
(declare-fun temp10408_130 () (_ BitVec 64))
(declare-fun temp10408_131 () (_ BitVec 64))
(declare-fun temp10408_132 () (_ BitVec 64))
(declare-fun temp10408_133 () (_ BitVec 64))
(declare-fun temp10408_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10408_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10408_136 () (_ BitVec 64))
(declare-fun temp10408_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10408_138 () (_ BitVec 64))
(declare-fun temp10408_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10408_140 () (_ BitVec 64))
(declare-fun temp10408_141 () (_ BitVec 64))
(declare-fun temp10408_142 () (_ BitVec 64))
(declare-fun temp10408_143 () (_ BitVec 64))
(declare-fun temp10408_144 () (_ BitVec 64))
(declare-fun temp10408_145 () (_ BitVec 64))
(declare-fun temp10408_146 () (_ BitVec 64))
(declare-fun temp10408_147 () (_ BitVec 64))
(declare-fun temp10408_148 () (_ BitVec 64))
(declare-fun temp10408_149 () (_ BitVec 64))
(declare-fun temp10408_150 () (_ BitVec 64))
(declare-fun temp10408_151 () (_ BitVec 64))
(declare-fun temp10408_152 () (_ BitVec 64))
(declare-fun temp10408_153 () (_ BitVec 64))
(declare-fun temp10408_154 () (_ BitVec 64))
(declare-fun temp10408_155 () (_ BitVec 64))
(declare-fun temp10408_157 () (_ BitVec 64))
(declare-fun temp10408_158 () (_ BitVec 64))
(declare-fun temp10408_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10408_159 () (_ BitVec 64))
(declare-fun temp10408_160 () (_ BitVec 64))
(declare-fun temp10408_162 () (_ BitVec 64))
(declare-fun temp10408_163 () (_ BitVec 64))
(declare-fun temp10408_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10408_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10408_165 () (_ BitVec 64))
(declare-fun temp10408_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10408_167 () (_ BitVec 64))
(declare-fun temp10408_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10408_169 () (_ BitVec 64))
(declare-fun temp10408_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10408_171 () (_ BitVec 64))
(declare-fun temp10408_172 () (_ BitVec 64))
(declare-fun temp10408_173 () (_ BitVec 64))
(declare-fun temp10408_174 () (_ BitVec 64))
(declare-fun temp10408_175 () (_ BitVec 64))
(declare-fun temp10408_176 () (_ BitVec 64))
(declare-fun temp10408_177 () (_ BitVec 64))
(declare-fun temp10408_178 () (_ BitVec 64))
(declare-fun temp10408_179 () (_ BitVec 64))
(declare-fun temp10408_180 () (_ BitVec 64))
(declare-fun temp10408_181 () (_ BitVec 64))
(declare-fun temp10408_182 () (_ BitVec 64))
(declare-fun temp10408_183 () (_ BitVec 64))
(declare-fun temp10408_184 () (_ BitVec 64))
(declare-fun temp10408_185 () (_ BitVec 64))
(declare-fun temp10408_186 () (_ BitVec 64))
(declare-fun temp10408_187 () (_ BitVec 64))
(declare-fun temp10408_188 () (_ BitVec 64))
(declare-fun temp10408_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10408_190 () (_ BitVec 64))
(declare-fun temp10408_192 () (_ BitVec 64))
(declare-fun temp10408_193 () (_ BitVec 64))
(declare-fun temp10408_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10408_194 () (_ BitVec 64))
(declare-fun temp10408_195 () (_ BitVec 64))
(declare-fun temp10408_197 () (_ BitVec 64))
(declare-fun temp10408_198 () (_ BitVec 64))
(declare-fun temp10408_196 () (_ BitVec 64))
(declare-fun temp10408_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10408_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10408_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10408_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10408_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10408_204 () (_ BitVec 64))
(declare-fun temp10408_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10408_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10408_207 () (_ BitVec 64))
(declare-fun temp10408_208 () (_ BitVec 64))
(declare-fun temp10408_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10408_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10408_211 () (_ BitVec 64))
(declare-fun temp10408_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10408_213 () (_ BitVec 64))
(declare-fun temp10408_214 () (_ BitVec 64))
(declare-fun temp10408_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10408_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10408_217 () (_ BitVec 64))
(declare-fun temp10408_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10408_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10408_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4469136 () (_ BitVec 64))
(declare-fun var4731280 () (_ BitVec 64))
(declare-fun temp10408_221 () (_ BitVec 64))
(declare-fun var212414 () (_ BitVec 64))
(declare-fun temp10408_222 () (_ BitVec 64))
(declare-fun temp10408_223 () (_ BitVec 64))
(declare-fun var5060227 () (_ BitVec 64))
(declare-fun var5060229 () (_ BitVec 64))
(declare-fun var5125772 () (_ BitVec 64))
(declare-fun var5125773 () (_ BitVec 64))
(declare-fun temp10408_224 () (_ BitVec 64))
(assert (= temp10408_1 #x0000000000000001))
(assert (= var77203 temp10408_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10408_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10408_2)))
(assert (= temp10408_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10408_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10408_4 #x0000000000000000))
(assert (= var210941 temp10408_4))
(assert (= temp10408_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10408_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10408_6 #x0000000000000000))
(assert (= var210986 temp10408_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10408_7 #x0000000000000000))
(assert (= temp10408_8 temp10408_7))
(assert (= temp10408_9 (select ARGNAME_padding_NAMEEND_VAL temp10408_8)))
(assert (= temp10408_10 #x0000000000000001))
(assert (= temp10408_11 temp10408_10))
(assert (= temp10408_12 (select ARGNAME_padding_NAMEEND_VAL temp10408_11)))
(assert (= temp10408_13 #x0000000000000002))
(assert (= temp10408_14 temp10408_13))
(assert (= temp10408_15 (select ARGNAME_padding_NAMEEND_VAL temp10408_14)))
(assert (= temp10408_16 #x0000000000000003))
(assert (= temp10408_17 temp10408_16))
(assert (= temp10408_18 (select ARGNAME_padding_NAMEEND_VAL temp10408_17)))
(assert (= temp10408_19 #x0000000000000004))
(assert (= temp10408_20 temp10408_19))
(assert (= temp10408_21 (select ARGNAME_padding_NAMEEND_VAL temp10408_20)))
(assert (= temp10408_22 #x0000000000000005))
(assert (= temp10408_23 temp10408_22))
(assert (= temp10408_24 (select ARGNAME_padding_NAMEEND_VAL temp10408_23)))
(assert (= temp10408_25 #x0000000000000000))
(assert (= temp10408_26 #x0000000000000000))
(assert (= temp10408_27 temp10408_26))
(assert (= temp10408_28 (select ARGNAME_padding_NAMEEND_VAL temp10408_27)))
(assert (= temp10408_29 #x0000000000000000))
(assert (= temp10408_30 #x0000000000000001))
(assert (= temp10408_31 temp10408_30))
(assert (= temp10408_32 (select ARGNAME_padding_NAMEEND_VAL temp10408_31)))
(assert (= temp10408_33 #x0000000000000000))
(assert (= temp10408_34 #x0000000000000002))
(assert (= temp10408_35 temp10408_34))
(assert (= temp10408_36 (select ARGNAME_padding_NAMEEND_VAL temp10408_35)))
(assert (= temp10408_37 #x0000000000000000))
(assert (= temp10408_38 #x0000000000000003))
(assert (= temp10408_39 temp10408_38))
(assert (= temp10408_40 (select ARGNAME_padding_NAMEEND_VAL temp10408_39)))
(assert (= temp10408_41 #x0000000000000000))
(assert (= temp10408_42 #x0000000000000004))
(assert (= temp10408_43 temp10408_42))
(assert (= temp10408_44 (select ARGNAME_padding_NAMEEND_VAL temp10408_43)))
(assert (= temp10408_45 #x0000000000000000))
(assert (= temp10408_46 #x0000000000000005))
(assert (= temp10408_47 temp10408_46))
(assert (= temp10408_48 (select ARGNAME_padding_NAMEEND_VAL temp10408_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10408_28 temp10408_25)
             (bvslt temp10408_32 temp10408_29)
             (bvslt temp10408_36 temp10408_33)
             (bvslt temp10408_40 temp10408_37)
             (bvslt temp10408_44 temp10408_41)
             (bvslt temp10408_48 temp10408_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10408_49 #x0000000000000000))
(assert (= var1191714 temp10408_49))
(assert (= temp10408_50 #x0000000000000000))
(assert (= temp10408_51 temp10408_50))
(assert (= temp10408_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10408_51)))
(assert (= temp10408_53 #x0000000000000001))
(assert (= temp10408_54 temp10408_53))
(assert (= temp10408_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10408_54)))
(assert (= temp10408_56 #x0000000000000002))
(assert (= temp10408_57 temp10408_56))
(assert (= temp10408_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10408_57)))
(assert (= temp10408_59 #x0000000000000003))
(assert (= temp10408_60 temp10408_59))
(assert (= temp10408_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10408_60)))
(assert (= temp10408_62 #x0000000000000004))
(assert (= temp10408_63 temp10408_62))
(assert (= temp10408_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10408_63)))
(assert (= temp10408_65 #x0000000000000005))
(assert (= temp10408_66 temp10408_65))
(assert (= temp10408_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10408_66)))
(assert (= temp10408_68 #x0000000000000000))
(assert (= temp10408_69 #x0000000000000000))
(assert (= temp10408_70 temp10408_69))
(assert (= temp10408_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10408_70)))
(assert (= temp10408_72 #x0000000000000000))
(assert (= temp10408_73 #x0000000000000001))
(assert (= temp10408_74 temp10408_73))
(assert (= temp10408_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10408_74)))
(assert (= temp10408_76 #x0000000000000000))
(assert (= temp10408_77 #x0000000000000002))
(assert (= temp10408_78 temp10408_77))
(assert (= temp10408_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10408_78)))
(assert (= temp10408_80 #x0000000000000000))
(assert (= temp10408_81 #x0000000000000003))
(assert (= temp10408_82 temp10408_81))
(assert (= temp10408_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10408_82)))
(assert (= temp10408_84 #x0000000000000000))
(assert (= temp10408_85 #x0000000000000004))
(assert (= temp10408_86 temp10408_85))
(assert (= temp10408_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10408_86)))
(assert (= temp10408_88 #x0000000000000000))
(assert (= temp10408_89 #x0000000000000005))
(assert (= temp10408_90 temp10408_89))
(assert (= temp10408_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10408_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10408_71 temp10408_68)
             (bvslt temp10408_75 temp10408_72)
             (bvslt temp10408_79 temp10408_76)
             (bvslt temp10408_83 temp10408_80)
             (bvslt temp10408_87 temp10408_84)
             (bvslt temp10408_91 temp10408_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10408_92 #x0000000000000000))
(assert (= var1191725 temp10408_92))
(assert (= temp10408_93 #x0000000000000000))
(assert (= temp10408_94 temp10408_93))
(assert (= temp10408_95 (select ARGNAME_stride_NAMEEND_VAL temp10408_94)))
(assert (= temp10408_96 #x0000000000000001))
(assert (= temp10408_97 temp10408_96))
(assert (= temp10408_98 (select ARGNAME_stride_NAMEEND_VAL temp10408_97)))
(assert (= temp10408_99 #x0000000000000002))
(assert (= temp10408_100 temp10408_99))
(assert (= temp10408_101 (select ARGNAME_stride_NAMEEND_VAL temp10408_100)))
(assert (= temp10408_102 #x0000000000000003))
(assert (= temp10408_103 temp10408_102))
(assert (= temp10408_104 (select ARGNAME_stride_NAMEEND_VAL temp10408_103)))
(assert (= temp10408_105 #x0000000000000004))
(assert (= temp10408_106 temp10408_105))
(assert (= temp10408_107 (select ARGNAME_stride_NAMEEND_VAL temp10408_106)))
(assert (= temp10408_108 #x0000000000000005))
(assert (= temp10408_109 temp10408_108))
(assert (= temp10408_110 (select ARGNAME_stride_NAMEEND_VAL temp10408_109)))
(assert (= temp10408_111 #x0000000000000000))
(assert (= temp10408_112 #x0000000000000000))
(assert (= temp10408_113 temp10408_112))
(assert (= temp10408_114 (select ARGNAME_stride_NAMEEND_VAL temp10408_113)))
(assert (= temp10408_115 #x0000000000000000))
(assert (= temp10408_116 #x0000000000000001))
(assert (= temp10408_117 temp10408_116))
(assert (= temp10408_118 (select ARGNAME_stride_NAMEEND_VAL temp10408_117)))
(assert (= temp10408_119 #x0000000000000000))
(assert (= temp10408_120 #x0000000000000002))
(assert (= temp10408_121 temp10408_120))
(assert (= temp10408_122 (select ARGNAME_stride_NAMEEND_VAL temp10408_121)))
(assert (= temp10408_123 #x0000000000000000))
(assert (= temp10408_124 #x0000000000000003))
(assert (= temp10408_125 temp10408_124))
(assert (= temp10408_126 (select ARGNAME_stride_NAMEEND_VAL temp10408_125)))
(assert (= temp10408_127 #x0000000000000000))
(assert (= temp10408_128 #x0000000000000004))
(assert (= temp10408_129 temp10408_128))
(assert (= temp10408_130 (select ARGNAME_stride_NAMEEND_VAL temp10408_129)))
(assert (= temp10408_131 #x0000000000000000))
(assert (= temp10408_132 #x0000000000000005))
(assert (= temp10408_133 temp10408_132))
(assert (= temp10408_134 (select ARGNAME_stride_NAMEEND_VAL temp10408_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10408_114 temp10408_111)
             (bvsle temp10408_118 temp10408_115)
             (bvsle temp10408_122 temp10408_119)
             (bvsle temp10408_126 temp10408_123)
             (bvsle temp10408_130 temp10408_127)
             (bvsle temp10408_134 temp10408_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10408_135 #x0000000000000000))
(assert (= var1191735 temp10408_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10408_136 #x0000000000000001))
(assert (= var1191747 temp10408_136))
(assert (= temp10408_137 #x0000000000000000))
(assert (= var1179826 temp10408_137))
(assert (= temp10408_138 #x0000000000000000))
(assert (= temp10408_139 temp10408_138))
(assert (= temp10408_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10408_139)))
(assert (= temp10408_141 #x0000000000000001))
(assert (= temp10408_142 temp10408_141))
(assert (= temp10408_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10408_142)))
(assert (= temp10408_144 #x0000000000000002))
(assert (= temp10408_145 temp10408_144))
(assert (= temp10408_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10408_145)))
(assert (= temp10408_147 #x0000000000000003))
(assert (= temp10408_148 temp10408_147))
(assert (= temp10408_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10408_148)))
(assert (= temp10408_150 #x0000000000000004))
(assert (= temp10408_151 temp10408_150))
(assert (= temp10408_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10408_151)))
(assert (= temp10408_153 #x0000000000000005))
(assert (= temp10408_154 temp10408_153))
(assert (= temp10408_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10408_154)))
(assert (= temp10408_157 var1179826))
(assert (= temp10408_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10408_157)))
(assert (= temp10408_156 temp10408_158))
(assert (= var1191780
   (ite (bvslt temp10408_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10408_159 #x0000000000000000))
(assert (= var1191780 temp10408_159))
(assert (= temp10408_160 #x0000000000000000))
(assert (= var1179826 temp10408_160))
(assert (= temp10408_162 var1179826))
(assert (= temp10408_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10408_162)))
(assert (= temp10408_161 temp10408_163))
(assert (= var1191802 (bvsmod temp10408_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10408_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10408_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10408_165 #x0000000000000001))
(assert (= var1191803 temp10408_165))
(assert (= temp10408_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10408_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10408_167 #x0000000000000001))
(assert (= var1191823 temp10408_167))
(assert (= temp10408_168 #x0000000000000001))
(assert (= var1180714 temp10408_168))
(assert (= temp10408_169 #x0000000000000000))
(assert (= temp10408_170 temp10408_169))
(assert (= temp10408_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10408_170)))
(assert (= temp10408_172 #x0000000000000001))
(assert (= temp10408_173 temp10408_172))
(assert (= temp10408_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10408_173)))
(assert (= temp10408_175 #x0000000000000002))
(assert (= temp10408_176 temp10408_175))
(assert (= temp10408_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10408_176)))
(assert (= temp10408_178 #x0000000000000003))
(assert (= temp10408_179 temp10408_178))
(assert (= temp10408_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10408_179)))
(assert (= temp10408_181 #x0000000000000004))
(assert (= temp10408_182 temp10408_181))
(assert (= temp10408_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10408_182)))
(assert (= temp10408_184 #x0000000000000005))
(assert (= temp10408_185 temp10408_184))
(assert (= temp10408_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10408_185)))
(assert (= temp10408_187 #x0000000000000000))
(assert (= temp10408_188
   (ite (bvslt var1180714 temp10408_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10408_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10408_188)))
(assert (= var1191831 temp10408_189))
(assert (bvslt (ite (bvslt var1180714 temp10408_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10408_190 #x0000000000000001))
(assert (= var1180714 temp10408_190))
(assert (= temp10408_192 var1180714))
(assert (= temp10408_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10408_192)))
(assert (= temp10408_191 temp10408_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10408_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10408_194 #x0000000000000001))
(assert (= var1191836 temp10408_194))
(assert (= temp10408_195 #x0000000000000000))
(assert (= var1179826 temp10408_195))
(assert (= temp10408_197 var1179826))
(assert (= temp10408_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10408_197)))
(assert (= temp10408_196 temp10408_198))
(assert (= temp10408_199 #x0000000000000002))
(assert (= var1586025 temp10408_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10408_200 #x0000000000000001))
(assert (= var1191993 temp10408_200))
(assert (= temp10408_201 #x0000000000000001))
(assert (= var2700303 temp10408_201))
(assert (= temp10408_202 #x0000000000000001))
(assert (= var2962447 temp10408_202))
(assert (= temp10408_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10408_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10408_204 #x0000000000000001))
(assert (= var211058 temp10408_204))
(assert (= temp10408_205 #x0000000000000001))
(assert (= var211188 temp10408_205))
(assert (= var3879401 var211188))
(assert (= temp10408_206 #x0000000000000000))
(assert (= var3866802 temp10408_206))
(assert (= temp10408_207 #x0000000000000000))
(assert (= temp10408_208
   (ite (bvslt var3866802 temp10408_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10408_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10408_208)))
(assert (= var3879420 temp10408_209))
(assert (bvslt (ite (bvslt var3866802 temp10408_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10408_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10408_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10408_211 #x0000000000000000))
(assert (= var3879421 temp10408_211))
(assert (= temp10408_212 #x0000000000000001))
(assert (= var3867690 temp10408_212))
(assert (= temp10408_213 #x0000000000000000))
(assert (= temp10408_214
   (ite (bvslt var3867690 temp10408_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10408_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10408_214)))
(assert (= var3879423 temp10408_215))
(assert (bvslt (ite (bvslt var3867690 temp10408_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10408_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10408_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10408_217 #x0000000000000001))
(assert (= var3879424 temp10408_217))
(assert (= temp10408_218 #x0000000000000000))
(assert (= var4079423 temp10408_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10408_219 #x0000000000000002))
(assert (= var4208259 temp10408_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10408_220 #x0000000000000000))
(assert (= var4273820 temp10408_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4469136 var211201))
(assert (= var4731280 var211201))
(assert (= temp10408_221 #x0000000000000001))
(assert (= var212414
   (ite (= ARGNAME_groups_NAMEEND temp10408_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10408_222 #x0000000000000001))
(assert (= var212414 temp10408_222))
(assert (= temp10408_223 #x0000000000000002))
(assert (= var5060227 temp10408_223))
(assert (= var5060229 (bvsub ARGNAME_weight_NAMEEND_DIM var5060227)))
(assert (= var5125772 var5060227))
(assert (= var5125773 var5060229))
(assert (= temp10408_224 #x0000000000000001))
(assert (= var211058 temp10408_224))
(model-add temp10408_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10408_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10408_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10408_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))



