(declare-fun temp656_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp656_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp656_3 () (_ BitVec 64))
(declare-fun temp656_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp656_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp656_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp656_7 () (_ BitVec 64))
(declare-fun temp656_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp656_9 () (_ BitVec 64))
(declare-fun temp656_10 () (_ BitVec 64))
(declare-fun temp656_11 () (_ BitVec 64))
(declare-fun temp656_12 () (_ BitVec 64))
(declare-fun temp656_13 () (_ BitVec 64))
(declare-fun temp656_14 () (_ BitVec 64))
(declare-fun temp656_15 () (_ BitVec 64))
(declare-fun temp656_16 () (_ BitVec 64))
(declare-fun temp656_17 () (_ BitVec 64))
(declare-fun temp656_18 () (_ BitVec 64))
(declare-fun temp656_19 () (_ BitVec 64))
(declare-fun temp656_20 () (_ BitVec 64))
(declare-fun temp656_21 () (_ BitVec 64))
(declare-fun temp656_22 () (_ BitVec 64))
(declare-fun temp656_23 () (_ BitVec 64))
(declare-fun temp656_24 () (_ BitVec 64))
(declare-fun temp656_25 () (_ BitVec 64))
(declare-fun temp656_26 () (_ BitVec 64))
(declare-fun temp656_27 () (_ BitVec 64))
(declare-fun temp656_28 () (_ BitVec 64))
(declare-fun temp656_29 () (_ BitVec 64))
(declare-fun temp656_30 () (_ BitVec 64))
(declare-fun temp656_31 () (_ BitVec 64))
(declare-fun temp656_32 () (_ BitVec 64))
(declare-fun temp656_33 () (_ BitVec 64))
(declare-fun temp656_34 () (_ BitVec 64))
(declare-fun temp656_35 () (_ BitVec 64))
(declare-fun temp656_36 () (_ BitVec 64))
(declare-fun temp656_37 () (_ BitVec 64))
(declare-fun temp656_38 () (_ BitVec 64))
(declare-fun temp656_39 () (_ BitVec 64))
(declare-fun temp656_40 () (_ BitVec 64))
(declare-fun temp656_41 () (_ BitVec 64))
(declare-fun temp656_42 () (_ BitVec 64))
(declare-fun temp656_43 () (_ BitVec 64))
(declare-fun temp656_44 () (_ BitVec 64))
(declare-fun temp656_45 () (_ BitVec 64))
(declare-fun temp656_46 () (_ BitVec 64))
(declare-fun temp656_47 () (_ BitVec 64))
(declare-fun temp656_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp656_49 () (_ BitVec 64))
(declare-fun temp656_50 () (_ BitVec 64))
(declare-fun temp656_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp656_52 () (_ BitVec 64))
(declare-fun temp656_53 () (_ BitVec 64))
(declare-fun temp656_54 () (_ BitVec 64))
(declare-fun temp656_55 () (_ BitVec 64))
(declare-fun temp656_56 () (_ BitVec 64))
(declare-fun temp656_57 () (_ BitVec 64))
(declare-fun temp656_58 () (_ BitVec 64))
(declare-fun temp656_59 () (_ BitVec 64))
(declare-fun temp656_60 () (_ BitVec 64))
(declare-fun temp656_61 () (_ BitVec 64))
(declare-fun temp656_62 () (_ BitVec 64))
(declare-fun temp656_63 () (_ BitVec 64))
(declare-fun temp656_64 () (_ BitVec 64))
(declare-fun temp656_65 () (_ BitVec 64))
(declare-fun temp656_66 () (_ BitVec 64))
(declare-fun temp656_67 () (_ BitVec 64))
(declare-fun temp656_68 () (_ BitVec 64))
(declare-fun temp656_69 () (_ BitVec 64))
(declare-fun temp656_70 () (_ BitVec 64))
(declare-fun temp656_71 () (_ BitVec 64))
(declare-fun temp656_72 () (_ BitVec 64))
(declare-fun temp656_73 () (_ BitVec 64))
(declare-fun temp656_74 () (_ BitVec 64))
(declare-fun temp656_75 () (_ BitVec 64))
(declare-fun temp656_76 () (_ BitVec 64))
(declare-fun temp656_77 () (_ BitVec 64))
(declare-fun temp656_78 () (_ BitVec 64))
(declare-fun temp656_79 () (_ BitVec 64))
(declare-fun temp656_80 () (_ BitVec 64))
(declare-fun temp656_81 () (_ BitVec 64))
(declare-fun temp656_82 () (_ BitVec 64))
(declare-fun temp656_83 () (_ BitVec 64))
(declare-fun temp656_84 () (_ BitVec 64))
(declare-fun temp656_85 () (_ BitVec 64))
(declare-fun temp656_86 () (_ BitVec 64))
(declare-fun temp656_87 () (_ BitVec 64))
(declare-fun temp656_88 () (_ BitVec 64))
(declare-fun temp656_89 () (_ BitVec 64))
(declare-fun temp656_90 () (_ BitVec 64))
(declare-fun temp656_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp656_92 () (_ BitVec 64))
(declare-fun temp656_93 () (_ BitVec 64))
(declare-fun temp656_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp656_95 () (_ BitVec 64))
(declare-fun temp656_96 () (_ BitVec 64))
(declare-fun temp656_97 () (_ BitVec 64))
(declare-fun temp656_98 () (_ BitVec 64))
(declare-fun temp656_99 () (_ BitVec 64))
(declare-fun temp656_100 () (_ BitVec 64))
(declare-fun temp656_101 () (_ BitVec 64))
(declare-fun temp656_102 () (_ BitVec 64))
(declare-fun temp656_103 () (_ BitVec 64))
(declare-fun temp656_104 () (_ BitVec 64))
(declare-fun temp656_105 () (_ BitVec 64))
(declare-fun temp656_106 () (_ BitVec 64))
(declare-fun temp656_107 () (_ BitVec 64))
(declare-fun temp656_108 () (_ BitVec 64))
(declare-fun temp656_109 () (_ BitVec 64))
(declare-fun temp656_110 () (_ BitVec 64))
(declare-fun temp656_111 () (_ BitVec 64))
(declare-fun temp656_112 () (_ BitVec 64))
(declare-fun temp656_113 () (_ BitVec 64))
(declare-fun temp656_114 () (_ BitVec 64))
(declare-fun temp656_115 () (_ BitVec 64))
(declare-fun temp656_116 () (_ BitVec 64))
(declare-fun temp656_117 () (_ BitVec 64))
(declare-fun temp656_118 () (_ BitVec 64))
(declare-fun temp656_119 () (_ BitVec 64))
(declare-fun temp656_120 () (_ BitVec 64))
(declare-fun temp656_121 () (_ BitVec 64))
(declare-fun temp656_122 () (_ BitVec 64))
(declare-fun temp656_123 () (_ BitVec 64))
(declare-fun temp656_124 () (_ BitVec 64))
(declare-fun temp656_125 () (_ BitVec 64))
(declare-fun temp656_126 () (_ BitVec 64))
(declare-fun temp656_127 () (_ BitVec 64))
(declare-fun temp656_128 () (_ BitVec 64))
(declare-fun temp656_129 () (_ BitVec 64))
(declare-fun temp656_130 () (_ BitVec 64))
(declare-fun temp656_131 () (_ BitVec 64))
(declare-fun temp656_132 () (_ BitVec 64))
(declare-fun temp656_133 () (_ BitVec 64))
(declare-fun temp656_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp656_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp656_136 () (_ BitVec 64))
(declare-fun temp656_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp656_138 () (_ BitVec 64))
(declare-fun temp656_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp656_140 () (_ BitVec 64))
(declare-fun temp656_141 () (_ BitVec 64))
(declare-fun temp656_142 () (_ BitVec 64))
(declare-fun temp656_143 () (_ BitVec 64))
(declare-fun temp656_144 () (_ BitVec 64))
(declare-fun temp656_145 () (_ BitVec 64))
(declare-fun temp656_146 () (_ BitVec 64))
(declare-fun temp656_147 () (_ BitVec 64))
(declare-fun temp656_148 () (_ BitVec 64))
(declare-fun temp656_149 () (_ BitVec 64))
(declare-fun temp656_150 () (_ BitVec 64))
(declare-fun temp656_151 () (_ BitVec 64))
(declare-fun temp656_152 () (_ BitVec 64))
(declare-fun temp656_153 () (_ BitVec 64))
(declare-fun temp656_154 () (_ BitVec 64))
(declare-fun temp656_155 () (_ BitVec 64))
(declare-fun temp656_157 () (_ BitVec 64))
(declare-fun temp656_158 () (_ BitVec 64))
(declare-fun temp656_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp656_159 () (_ BitVec 64))
(declare-fun temp656_160 () (_ BitVec 64))
(declare-fun temp656_162 () (_ BitVec 64))
(declare-fun temp656_163 () (_ BitVec 64))
(declare-fun temp656_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp656_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp656_165 () (_ BitVec 64))
(declare-fun temp656_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp656_167 () (_ BitVec 64))
(declare-fun temp656_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp656_169 () (_ BitVec 64))
(declare-fun temp656_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp656_171 () (_ BitVec 64))
(declare-fun temp656_172 () (_ BitVec 64))
(declare-fun temp656_173 () (_ BitVec 64))
(declare-fun temp656_174 () (_ BitVec 64))
(declare-fun temp656_175 () (_ BitVec 64))
(declare-fun temp656_176 () (_ BitVec 64))
(declare-fun temp656_177 () (_ BitVec 64))
(declare-fun temp656_178 () (_ BitVec 64))
(declare-fun temp656_179 () (_ BitVec 64))
(declare-fun temp656_180 () (_ BitVec 64))
(declare-fun temp656_181 () (_ BitVec 64))
(declare-fun temp656_182 () (_ BitVec 64))
(declare-fun temp656_183 () (_ BitVec 64))
(declare-fun temp656_184 () (_ BitVec 64))
(declare-fun temp656_185 () (_ BitVec 64))
(declare-fun temp656_186 () (_ BitVec 64))
(declare-fun temp656_187 () (_ BitVec 64))
(declare-fun temp656_188 () (_ BitVec 64))
(declare-fun temp656_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp656_190 () (_ BitVec 64))
(declare-fun temp656_192 () (_ BitVec 64))
(declare-fun temp656_193 () (_ BitVec 64))
(declare-fun temp656_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp656_194 () (_ BitVec 64))
(declare-fun temp656_195 () (_ BitVec 64))
(declare-fun temp656_197 () (_ BitVec 64))
(declare-fun temp656_198 () (_ BitVec 64))
(declare-fun temp656_196 () (_ BitVec 64))
(declare-fun temp656_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp656_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp656_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp656_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp656_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp656_204 () (_ BitVec 64))
(declare-fun temp656_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp656_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp656_207 () (_ BitVec 64))
(declare-fun temp656_208 () (_ BitVec 64))
(declare-fun temp656_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp656_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp656_211 () (_ BitVec 64))
(declare-fun temp656_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp656_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp656_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4796816 () (_ BitVec 64))
(declare-fun var211494 () (_ BitVec 64))
(declare-fun temp656_215 () (_ BitVec 64))
(declare-fun var211495 () (_ BitVec 64))
(declare-fun temp656_216 () (_ BitVec 64))
(assert (= temp656_1 #x0000000000000001))
(assert (= var77203 temp656_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp656_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp656_2)))
(assert (= temp656_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp656_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp656_4 #x0000000000000000))
(assert (= var210941 temp656_4))
(assert (= temp656_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp656_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp656_6 #x0000000000000000))
(assert (= var210986 temp656_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp656_7 #x0000000000000000))
(assert (= temp656_8 temp656_7))
(assert (= temp656_9 (select ARGNAME_padding_NAMEEND_VAL temp656_8)))
(assert (= temp656_10 #x0000000000000001))
(assert (= temp656_11 temp656_10))
(assert (= temp656_12 (select ARGNAME_padding_NAMEEND_VAL temp656_11)))
(assert (= temp656_13 #x0000000000000002))
(assert (= temp656_14 temp656_13))
(assert (= temp656_15 (select ARGNAME_padding_NAMEEND_VAL temp656_14)))
(assert (= temp656_16 #x0000000000000003))
(assert (= temp656_17 temp656_16))
(assert (= temp656_18 (select ARGNAME_padding_NAMEEND_VAL temp656_17)))
(assert (= temp656_19 #x0000000000000004))
(assert (= temp656_20 temp656_19))
(assert (= temp656_21 (select ARGNAME_padding_NAMEEND_VAL temp656_20)))
(assert (= temp656_22 #x0000000000000005))
(assert (= temp656_23 temp656_22))
(assert (= temp656_24 (select ARGNAME_padding_NAMEEND_VAL temp656_23)))
(assert (= temp656_25 #x0000000000000000))
(assert (= temp656_26 #x0000000000000000))
(assert (= temp656_27 temp656_26))
(assert (= temp656_28 (select ARGNAME_padding_NAMEEND_VAL temp656_27)))
(assert (= temp656_29 #x0000000000000000))
(assert (= temp656_30 #x0000000000000001))
(assert (= temp656_31 temp656_30))
(assert (= temp656_32 (select ARGNAME_padding_NAMEEND_VAL temp656_31)))
(assert (= temp656_33 #x0000000000000000))
(assert (= temp656_34 #x0000000000000002))
(assert (= temp656_35 temp656_34))
(assert (= temp656_36 (select ARGNAME_padding_NAMEEND_VAL temp656_35)))
(assert (= temp656_37 #x0000000000000000))
(assert (= temp656_38 #x0000000000000003))
(assert (= temp656_39 temp656_38))
(assert (= temp656_40 (select ARGNAME_padding_NAMEEND_VAL temp656_39)))
(assert (= temp656_41 #x0000000000000000))
(assert (= temp656_42 #x0000000000000004))
(assert (= temp656_43 temp656_42))
(assert (= temp656_44 (select ARGNAME_padding_NAMEEND_VAL temp656_43)))
(assert (= temp656_45 #x0000000000000000))
(assert (= temp656_46 #x0000000000000005))
(assert (= temp656_47 temp656_46))
(assert (= temp656_48 (select ARGNAME_padding_NAMEEND_VAL temp656_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp656_28 temp656_25)
             (bvslt temp656_32 temp656_29)
             (bvslt temp656_36 temp656_33)
             (bvslt temp656_40 temp656_37)
             (bvslt temp656_44 temp656_41)
             (bvslt temp656_48 temp656_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp656_49 #x0000000000000000))
(assert (= var1191714 temp656_49))
(assert (= temp656_50 #x0000000000000000))
(assert (= temp656_51 temp656_50))
(assert (= temp656_52 (select ARGNAME_output_padding_NAMEEND_VAL temp656_51)))
(assert (= temp656_53 #x0000000000000001))
(assert (= temp656_54 temp656_53))
(assert (= temp656_55 (select ARGNAME_output_padding_NAMEEND_VAL temp656_54)))
(assert (= temp656_56 #x0000000000000002))
(assert (= temp656_57 temp656_56))
(assert (= temp656_58 (select ARGNAME_output_padding_NAMEEND_VAL temp656_57)))
(assert (= temp656_59 #x0000000000000003))
(assert (= temp656_60 temp656_59))
(assert (= temp656_61 (select ARGNAME_output_padding_NAMEEND_VAL temp656_60)))
(assert (= temp656_62 #x0000000000000004))
(assert (= temp656_63 temp656_62))
(assert (= temp656_64 (select ARGNAME_output_padding_NAMEEND_VAL temp656_63)))
(assert (= temp656_65 #x0000000000000005))
(assert (= temp656_66 temp656_65))
(assert (= temp656_67 (select ARGNAME_output_padding_NAMEEND_VAL temp656_66)))
(assert (= temp656_68 #x0000000000000000))
(assert (= temp656_69 #x0000000000000000))
(assert (= temp656_70 temp656_69))
(assert (= temp656_71 (select ARGNAME_output_padding_NAMEEND_VAL temp656_70)))
(assert (= temp656_72 #x0000000000000000))
(assert (= temp656_73 #x0000000000000001))
(assert (= temp656_74 temp656_73))
(assert (= temp656_75 (select ARGNAME_output_padding_NAMEEND_VAL temp656_74)))
(assert (= temp656_76 #x0000000000000000))
(assert (= temp656_77 #x0000000000000002))
(assert (= temp656_78 temp656_77))
(assert (= temp656_79 (select ARGNAME_output_padding_NAMEEND_VAL temp656_78)))
(assert (= temp656_80 #x0000000000000000))
(assert (= temp656_81 #x0000000000000003))
(assert (= temp656_82 temp656_81))
(assert (= temp656_83 (select ARGNAME_output_padding_NAMEEND_VAL temp656_82)))
(assert (= temp656_84 #x0000000000000000))
(assert (= temp656_85 #x0000000000000004))
(assert (= temp656_86 temp656_85))
(assert (= temp656_87 (select ARGNAME_output_padding_NAMEEND_VAL temp656_86)))
(assert (= temp656_88 #x0000000000000000))
(assert (= temp656_89 #x0000000000000005))
(assert (= temp656_90 temp656_89))
(assert (= temp656_91 (select ARGNAME_output_padding_NAMEEND_VAL temp656_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp656_71 temp656_68)
             (bvslt temp656_75 temp656_72)
             (bvslt temp656_79 temp656_76)
             (bvslt temp656_83 temp656_80)
             (bvslt temp656_87 temp656_84)
             (bvslt temp656_91 temp656_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp656_92 #x0000000000000000))
(assert (= var1191725 temp656_92))
(assert (= temp656_93 #x0000000000000000))
(assert (= temp656_94 temp656_93))
(assert (= temp656_95 (select ARGNAME_stride_NAMEEND_VAL temp656_94)))
(assert (= temp656_96 #x0000000000000001))
(assert (= temp656_97 temp656_96))
(assert (= temp656_98 (select ARGNAME_stride_NAMEEND_VAL temp656_97)))
(assert (= temp656_99 #x0000000000000002))
(assert (= temp656_100 temp656_99))
(assert (= temp656_101 (select ARGNAME_stride_NAMEEND_VAL temp656_100)))
(assert (= temp656_102 #x0000000000000003))
(assert (= temp656_103 temp656_102))
(assert (= temp656_104 (select ARGNAME_stride_NAMEEND_VAL temp656_103)))
(assert (= temp656_105 #x0000000000000004))
(assert (= temp656_106 temp656_105))
(assert (= temp656_107 (select ARGNAME_stride_NAMEEND_VAL temp656_106)))
(assert (= temp656_108 #x0000000000000005))
(assert (= temp656_109 temp656_108))
(assert (= temp656_110 (select ARGNAME_stride_NAMEEND_VAL temp656_109)))
(assert (= temp656_111 #x0000000000000000))
(assert (= temp656_112 #x0000000000000000))
(assert (= temp656_113 temp656_112))
(assert (= temp656_114 (select ARGNAME_stride_NAMEEND_VAL temp656_113)))
(assert (= temp656_115 #x0000000000000000))
(assert (= temp656_116 #x0000000000000001))
(assert (= temp656_117 temp656_116))
(assert (= temp656_118 (select ARGNAME_stride_NAMEEND_VAL temp656_117)))
(assert (= temp656_119 #x0000000000000000))
(assert (= temp656_120 #x0000000000000002))
(assert (= temp656_121 temp656_120))
(assert (= temp656_122 (select ARGNAME_stride_NAMEEND_VAL temp656_121)))
(assert (= temp656_123 #x0000000000000000))
(assert (= temp656_124 #x0000000000000003))
(assert (= temp656_125 temp656_124))
(assert (= temp656_126 (select ARGNAME_stride_NAMEEND_VAL temp656_125)))
(assert (= temp656_127 #x0000000000000000))
(assert (= temp656_128 #x0000000000000004))
(assert (= temp656_129 temp656_128))
(assert (= temp656_130 (select ARGNAME_stride_NAMEEND_VAL temp656_129)))
(assert (= temp656_131 #x0000000000000000))
(assert (= temp656_132 #x0000000000000005))
(assert (= temp656_133 temp656_132))
(assert (= temp656_134 (select ARGNAME_stride_NAMEEND_VAL temp656_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp656_114 temp656_111)
             (bvsle temp656_118 temp656_115)
             (bvsle temp656_122 temp656_119)
             (bvsle temp656_126 temp656_123)
             (bvsle temp656_130 temp656_127)
             (bvsle temp656_134 temp656_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp656_135 #x0000000000000000))
(assert (= var1191735 temp656_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp656_136 #x0000000000000001))
(assert (= var1191747 temp656_136))
(assert (= temp656_137 #x0000000000000000))
(assert (= var1179826 temp656_137))
(assert (= temp656_138 #x0000000000000000))
(assert (= temp656_139 temp656_138))
(assert (= temp656_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp656_139)))
(assert (= temp656_141 #x0000000000000001))
(assert (= temp656_142 temp656_141))
(assert (= temp656_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp656_142)))
(assert (= temp656_144 #x0000000000000002))
(assert (= temp656_145 temp656_144))
(assert (= temp656_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp656_145)))
(assert (= temp656_147 #x0000000000000003))
(assert (= temp656_148 temp656_147))
(assert (= temp656_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp656_148)))
(assert (= temp656_150 #x0000000000000004))
(assert (= temp656_151 temp656_150))
(assert (= temp656_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp656_151)))
(assert (= temp656_153 #x0000000000000005))
(assert (= temp656_154 temp656_153))
(assert (= temp656_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp656_154)))
(assert (= temp656_157 var1179826))
(assert (= temp656_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp656_157)))
(assert (= temp656_156 temp656_158))
(assert (= var1191780
   (ite (bvslt temp656_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp656_159 #x0000000000000000))
(assert (= var1191780 temp656_159))
(assert (= temp656_160 #x0000000000000000))
(assert (= var1179826 temp656_160))
(assert (= temp656_162 var1179826))
(assert (= temp656_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp656_162)))
(assert (= temp656_161 temp656_163))
(assert (= var1191802 (bvsmod temp656_161 ARGNAME_groups_NAMEEND)))
(assert (= temp656_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp656_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp656_165 #x0000000000000001))
(assert (= var1191803 temp656_165))
(assert (= temp656_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp656_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp656_167 #x0000000000000001))
(assert (= var1191823 temp656_167))
(assert (= temp656_168 #x0000000000000001))
(assert (= var1180714 temp656_168))
(assert (= temp656_169 #x0000000000000000))
(assert (= temp656_170 temp656_169))
(assert (= temp656_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp656_170)))
(assert (= temp656_172 #x0000000000000001))
(assert (= temp656_173 temp656_172))
(assert (= temp656_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp656_173)))
(assert (= temp656_175 #x0000000000000002))
(assert (= temp656_176 temp656_175))
(assert (= temp656_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp656_176)))
(assert (= temp656_178 #x0000000000000003))
(assert (= temp656_179 temp656_178))
(assert (= temp656_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp656_179)))
(assert (= temp656_181 #x0000000000000004))
(assert (= temp656_182 temp656_181))
(assert (= temp656_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp656_182)))
(assert (= temp656_184 #x0000000000000005))
(assert (= temp656_185 temp656_184))
(assert (= temp656_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp656_185)))
(assert (= temp656_187 #x0000000000000000))
(assert (= temp656_188
   (ite (bvslt var1180714 temp656_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp656_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp656_188)))
(assert (= var1191831 temp656_189))
(assert (bvslt (ite (bvslt var1180714 temp656_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp656_190 #x0000000000000001))
(assert (= var1180714 temp656_190))
(assert (= temp656_192 var1180714))
(assert (= temp656_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp656_192)))
(assert (= temp656_191 temp656_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp656_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp656_194 #x0000000000000001))
(assert (= var1191836 temp656_194))
(assert (= temp656_195 #x0000000000000000))
(assert (= var1179826 temp656_195))
(assert (= temp656_197 var1179826))
(assert (= temp656_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp656_197)))
(assert (= temp656_196 temp656_198))
(assert (= temp656_199 #x0000000000000002))
(assert (= var1586025 temp656_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp656_200 #x0000000000000001))
(assert (= var1191993 temp656_200))
(assert (= temp656_201 #x0000000000000001))
(assert (= var2700303 temp656_201))
(assert (= temp656_202 #x0000000000000001))
(assert (= var2962447 temp656_202))
(assert (= temp656_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp656_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp656_204 #x0000000000000001))
(assert (= var211058 temp656_204))
(assert (= temp656_205 #x0000000000000001))
(assert (= var211188 temp656_205))
(assert (= var3879401 var211188))
(assert (= temp656_206 #x0000000000000000))
(assert (= var3866802 temp656_206))
(assert (= temp656_207 #x0000000000000000))
(assert (= temp656_208
   (ite (bvslt var3866802 temp656_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp656_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp656_208)))
(assert (= var3879420 temp656_209))
(assert (bvslt (ite (bvslt var3866802 temp656_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp656_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp656_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp656_211 #x0000000000000001))
(assert (= var3879421 temp656_211))
(assert (= temp656_212 #x0000000000000000))
(assert (= var4079423 temp656_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp656_213 #x0000000000000002))
(assert (= var4208259 temp656_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp656_214 #x0000000000000000))
(assert (= var4273820 temp656_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4796816 var211201))
(assert (= var211494 var210913))
(assert (= temp656_215 #x0000000000000000))
(assert (= var211495
   (ite (distinct var211494 temp656_215) #x0000000000000001 #x0000000000000000)))
(assert (= temp656_216 #x0000000000000001))
(assert (= var211058 temp656_216))
(model-add temp656_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp656_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp656_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp656_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




