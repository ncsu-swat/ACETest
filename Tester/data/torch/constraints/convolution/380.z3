(declare-fun temp506_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp506_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp506_3 () (_ BitVec 64))
(declare-fun temp506_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp506_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp506_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp506_7 () (_ BitVec 64))
(declare-fun temp506_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp506_9 () (_ BitVec 64))
(declare-fun temp506_10 () (_ BitVec 64))
(declare-fun temp506_11 () (_ BitVec 64))
(declare-fun temp506_12 () (_ BitVec 64))
(declare-fun temp506_13 () (_ BitVec 64))
(declare-fun temp506_14 () (_ BitVec 64))
(declare-fun temp506_15 () (_ BitVec 64))
(declare-fun temp506_16 () (_ BitVec 64))
(declare-fun temp506_17 () (_ BitVec 64))
(declare-fun temp506_18 () (_ BitVec 64))
(declare-fun temp506_19 () (_ BitVec 64))
(declare-fun temp506_20 () (_ BitVec 64))
(declare-fun temp506_21 () (_ BitVec 64))
(declare-fun temp506_22 () (_ BitVec 64))
(declare-fun temp506_23 () (_ BitVec 64))
(declare-fun temp506_24 () (_ BitVec 64))
(declare-fun temp506_25 () (_ BitVec 64))
(declare-fun temp506_26 () (_ BitVec 64))
(declare-fun temp506_27 () (_ BitVec 64))
(declare-fun temp506_28 () (_ BitVec 64))
(declare-fun temp506_29 () (_ BitVec 64))
(declare-fun temp506_30 () (_ BitVec 64))
(declare-fun temp506_31 () (_ BitVec 64))
(declare-fun temp506_32 () (_ BitVec 64))
(declare-fun temp506_33 () (_ BitVec 64))
(declare-fun temp506_34 () (_ BitVec 64))
(declare-fun temp506_35 () (_ BitVec 64))
(declare-fun temp506_36 () (_ BitVec 64))
(declare-fun temp506_37 () (_ BitVec 64))
(declare-fun temp506_38 () (_ BitVec 64))
(declare-fun temp506_39 () (_ BitVec 64))
(declare-fun temp506_40 () (_ BitVec 64))
(declare-fun temp506_41 () (_ BitVec 64))
(declare-fun temp506_42 () (_ BitVec 64))
(declare-fun temp506_43 () (_ BitVec 64))
(declare-fun temp506_44 () (_ BitVec 64))
(declare-fun temp506_45 () (_ BitVec 64))
(declare-fun temp506_46 () (_ BitVec 64))
(declare-fun temp506_47 () (_ BitVec 64))
(declare-fun temp506_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp506_49 () (_ BitVec 64))
(declare-fun temp506_50 () (_ BitVec 64))
(declare-fun temp506_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp506_52 () (_ BitVec 64))
(declare-fun temp506_53 () (_ BitVec 64))
(declare-fun temp506_54 () (_ BitVec 64))
(declare-fun temp506_55 () (_ BitVec 64))
(declare-fun temp506_56 () (_ BitVec 64))
(declare-fun temp506_57 () (_ BitVec 64))
(declare-fun temp506_58 () (_ BitVec 64))
(declare-fun temp506_59 () (_ BitVec 64))
(declare-fun temp506_60 () (_ BitVec 64))
(declare-fun temp506_61 () (_ BitVec 64))
(declare-fun temp506_62 () (_ BitVec 64))
(declare-fun temp506_63 () (_ BitVec 64))
(declare-fun temp506_64 () (_ BitVec 64))
(declare-fun temp506_65 () (_ BitVec 64))
(declare-fun temp506_66 () (_ BitVec 64))
(declare-fun temp506_67 () (_ BitVec 64))
(declare-fun temp506_68 () (_ BitVec 64))
(declare-fun temp506_69 () (_ BitVec 64))
(declare-fun temp506_70 () (_ BitVec 64))
(declare-fun temp506_71 () (_ BitVec 64))
(declare-fun temp506_72 () (_ BitVec 64))
(declare-fun temp506_73 () (_ BitVec 64))
(declare-fun temp506_74 () (_ BitVec 64))
(declare-fun temp506_75 () (_ BitVec 64))
(declare-fun temp506_76 () (_ BitVec 64))
(declare-fun temp506_77 () (_ BitVec 64))
(declare-fun temp506_78 () (_ BitVec 64))
(declare-fun temp506_79 () (_ BitVec 64))
(declare-fun temp506_80 () (_ BitVec 64))
(declare-fun temp506_81 () (_ BitVec 64))
(declare-fun temp506_82 () (_ BitVec 64))
(declare-fun temp506_83 () (_ BitVec 64))
(declare-fun temp506_84 () (_ BitVec 64))
(declare-fun temp506_85 () (_ BitVec 64))
(declare-fun temp506_86 () (_ BitVec 64))
(declare-fun temp506_87 () (_ BitVec 64))
(declare-fun temp506_88 () (_ BitVec 64))
(declare-fun temp506_89 () (_ BitVec 64))
(declare-fun temp506_90 () (_ BitVec 64))
(declare-fun temp506_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp506_92 () (_ BitVec 64))
(declare-fun temp506_93 () (_ BitVec 64))
(declare-fun temp506_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp506_95 () (_ BitVec 64))
(declare-fun temp506_96 () (_ BitVec 64))
(declare-fun temp506_97 () (_ BitVec 64))
(declare-fun temp506_98 () (_ BitVec 64))
(declare-fun temp506_99 () (_ BitVec 64))
(declare-fun temp506_100 () (_ BitVec 64))
(declare-fun temp506_101 () (_ BitVec 64))
(declare-fun temp506_102 () (_ BitVec 64))
(declare-fun temp506_103 () (_ BitVec 64))
(declare-fun temp506_104 () (_ BitVec 64))
(declare-fun temp506_105 () (_ BitVec 64))
(declare-fun temp506_106 () (_ BitVec 64))
(declare-fun temp506_107 () (_ BitVec 64))
(declare-fun temp506_108 () (_ BitVec 64))
(declare-fun temp506_109 () (_ BitVec 64))
(declare-fun temp506_110 () (_ BitVec 64))
(declare-fun temp506_111 () (_ BitVec 64))
(declare-fun temp506_112 () (_ BitVec 64))
(declare-fun temp506_113 () (_ BitVec 64))
(declare-fun temp506_114 () (_ BitVec 64))
(declare-fun temp506_115 () (_ BitVec 64))
(declare-fun temp506_116 () (_ BitVec 64))
(declare-fun temp506_117 () (_ BitVec 64))
(declare-fun temp506_118 () (_ BitVec 64))
(declare-fun temp506_119 () (_ BitVec 64))
(declare-fun temp506_120 () (_ BitVec 64))
(declare-fun temp506_121 () (_ BitVec 64))
(declare-fun temp506_122 () (_ BitVec 64))
(declare-fun temp506_123 () (_ BitVec 64))
(declare-fun temp506_124 () (_ BitVec 64))
(declare-fun temp506_125 () (_ BitVec 64))
(declare-fun temp506_126 () (_ BitVec 64))
(declare-fun temp506_127 () (_ BitVec 64))
(declare-fun temp506_128 () (_ BitVec 64))
(declare-fun temp506_129 () (_ BitVec 64))
(declare-fun temp506_130 () (_ BitVec 64))
(declare-fun temp506_131 () (_ BitVec 64))
(declare-fun temp506_132 () (_ BitVec 64))
(declare-fun temp506_133 () (_ BitVec 64))
(declare-fun temp506_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp506_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp506_136 () (_ BitVec 64))
(declare-fun temp506_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp506_138 () (_ BitVec 64))
(declare-fun temp506_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp506_140 () (_ BitVec 64))
(declare-fun temp506_141 () (_ BitVec 64))
(declare-fun temp506_142 () (_ BitVec 64))
(declare-fun temp506_143 () (_ BitVec 64))
(declare-fun temp506_144 () (_ BitVec 64))
(declare-fun temp506_145 () (_ BitVec 64))
(declare-fun temp506_146 () (_ BitVec 64))
(declare-fun temp506_147 () (_ BitVec 64))
(declare-fun temp506_148 () (_ BitVec 64))
(declare-fun temp506_149 () (_ BitVec 64))
(declare-fun temp506_150 () (_ BitVec 64))
(declare-fun temp506_151 () (_ BitVec 64))
(declare-fun temp506_152 () (_ BitVec 64))
(declare-fun temp506_153 () (_ BitVec 64))
(declare-fun temp506_154 () (_ BitVec 64))
(declare-fun temp506_155 () (_ BitVec 64))
(declare-fun temp506_157 () (_ BitVec 64))
(declare-fun temp506_158 () (_ BitVec 64))
(declare-fun temp506_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp506_159 () (_ BitVec 64))
(declare-fun temp506_160 () (_ BitVec 64))
(declare-fun temp506_162 () (_ BitVec 64))
(declare-fun temp506_163 () (_ BitVec 64))
(declare-fun temp506_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp506_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp506_165 () (_ BitVec 64))
(declare-fun temp506_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp506_167 () (_ BitVec 64))
(declare-fun temp506_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp506_169 () (_ BitVec 64))
(declare-fun temp506_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp506_171 () (_ BitVec 64))
(declare-fun temp506_172 () (_ BitVec 64))
(declare-fun temp506_173 () (_ BitVec 64))
(declare-fun temp506_174 () (_ BitVec 64))
(declare-fun temp506_175 () (_ BitVec 64))
(declare-fun temp506_176 () (_ BitVec 64))
(declare-fun temp506_177 () (_ BitVec 64))
(declare-fun temp506_178 () (_ BitVec 64))
(declare-fun temp506_179 () (_ BitVec 64))
(declare-fun temp506_180 () (_ BitVec 64))
(declare-fun temp506_181 () (_ BitVec 64))
(declare-fun temp506_182 () (_ BitVec 64))
(declare-fun temp506_183 () (_ BitVec 64))
(declare-fun temp506_184 () (_ BitVec 64))
(declare-fun temp506_185 () (_ BitVec 64))
(declare-fun temp506_186 () (_ BitVec 64))
(declare-fun temp506_187 () (_ BitVec 64))
(declare-fun temp506_188 () (_ BitVec 64))
(declare-fun temp506_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp506_190 () (_ BitVec 64))
(declare-fun temp506_192 () (_ BitVec 64))
(declare-fun temp506_193 () (_ BitVec 64))
(declare-fun temp506_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp506_194 () (_ BitVec 64))
(declare-fun temp506_195 () (_ BitVec 64))
(declare-fun temp506_197 () (_ BitVec 64))
(declare-fun temp506_198 () (_ BitVec 64))
(declare-fun temp506_196 () (_ BitVec 64))
(declare-fun temp506_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp506_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp506_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp506_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp506_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp506_204 () (_ BitVec 64))
(declare-fun temp506_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp506_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp506_207 () (_ BitVec 64))
(declare-fun temp506_208 () (_ BitVec 64))
(declare-fun temp506_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp506_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp506_211 () (_ BitVec 64))
(declare-fun temp506_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp506_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp506_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4469136 () (_ BitVec 64))
(declare-fun var4731280 () (_ BitVec 64))
(declare-fun temp506_215 () (_ BitVec 64))
(declare-fun var212414 () (_ BitVec 64))
(declare-fun temp506_216 () (_ BitVec 64))
(declare-fun temp506_217 () (_ BitVec 64))
(declare-fun var5060227 () (_ BitVec 64))
(declare-fun var5060229 () (_ BitVec 64))
(declare-fun var5125772 () (_ BitVec 64))
(declare-fun var5125773 () (_ BitVec 64))
(declare-fun temp506_218 () (_ BitVec 64))
(assert (= temp506_1 #x0000000000000001))
(assert (= var77203 temp506_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp506_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp506_2)))
(assert (= temp506_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp506_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp506_4 #x0000000000000000))
(assert (= var210941 temp506_4))
(assert (= temp506_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp506_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp506_6 #x0000000000000000))
(assert (= var210986 temp506_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp506_7 #x0000000000000000))
(assert (= temp506_8 temp506_7))
(assert (= temp506_9 (select ARGNAME_padding_NAMEEND_VAL temp506_8)))
(assert (= temp506_10 #x0000000000000001))
(assert (= temp506_11 temp506_10))
(assert (= temp506_12 (select ARGNAME_padding_NAMEEND_VAL temp506_11)))
(assert (= temp506_13 #x0000000000000002))
(assert (= temp506_14 temp506_13))
(assert (= temp506_15 (select ARGNAME_padding_NAMEEND_VAL temp506_14)))
(assert (= temp506_16 #x0000000000000003))
(assert (= temp506_17 temp506_16))
(assert (= temp506_18 (select ARGNAME_padding_NAMEEND_VAL temp506_17)))
(assert (= temp506_19 #x0000000000000004))
(assert (= temp506_20 temp506_19))
(assert (= temp506_21 (select ARGNAME_padding_NAMEEND_VAL temp506_20)))
(assert (= temp506_22 #x0000000000000005))
(assert (= temp506_23 temp506_22))
(assert (= temp506_24 (select ARGNAME_padding_NAMEEND_VAL temp506_23)))
(assert (= temp506_25 #x0000000000000000))
(assert (= temp506_26 #x0000000000000000))
(assert (= temp506_27 temp506_26))
(assert (= temp506_28 (select ARGNAME_padding_NAMEEND_VAL temp506_27)))
(assert (= temp506_29 #x0000000000000000))
(assert (= temp506_30 #x0000000000000001))
(assert (= temp506_31 temp506_30))
(assert (= temp506_32 (select ARGNAME_padding_NAMEEND_VAL temp506_31)))
(assert (= temp506_33 #x0000000000000000))
(assert (= temp506_34 #x0000000000000002))
(assert (= temp506_35 temp506_34))
(assert (= temp506_36 (select ARGNAME_padding_NAMEEND_VAL temp506_35)))
(assert (= temp506_37 #x0000000000000000))
(assert (= temp506_38 #x0000000000000003))
(assert (= temp506_39 temp506_38))
(assert (= temp506_40 (select ARGNAME_padding_NAMEEND_VAL temp506_39)))
(assert (= temp506_41 #x0000000000000000))
(assert (= temp506_42 #x0000000000000004))
(assert (= temp506_43 temp506_42))
(assert (= temp506_44 (select ARGNAME_padding_NAMEEND_VAL temp506_43)))
(assert (= temp506_45 #x0000000000000000))
(assert (= temp506_46 #x0000000000000005))
(assert (= temp506_47 temp506_46))
(assert (= temp506_48 (select ARGNAME_padding_NAMEEND_VAL temp506_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp506_28 temp506_25)
             (bvslt temp506_32 temp506_29)
             (bvslt temp506_36 temp506_33)
             (bvslt temp506_40 temp506_37)
             (bvslt temp506_44 temp506_41)
             (bvslt temp506_48 temp506_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp506_49 #x0000000000000000))
(assert (= var1191714 temp506_49))
(assert (= temp506_50 #x0000000000000000))
(assert (= temp506_51 temp506_50))
(assert (= temp506_52 (select ARGNAME_output_padding_NAMEEND_VAL temp506_51)))
(assert (= temp506_53 #x0000000000000001))
(assert (= temp506_54 temp506_53))
(assert (= temp506_55 (select ARGNAME_output_padding_NAMEEND_VAL temp506_54)))
(assert (= temp506_56 #x0000000000000002))
(assert (= temp506_57 temp506_56))
(assert (= temp506_58 (select ARGNAME_output_padding_NAMEEND_VAL temp506_57)))
(assert (= temp506_59 #x0000000000000003))
(assert (= temp506_60 temp506_59))
(assert (= temp506_61 (select ARGNAME_output_padding_NAMEEND_VAL temp506_60)))
(assert (= temp506_62 #x0000000000000004))
(assert (= temp506_63 temp506_62))
(assert (= temp506_64 (select ARGNAME_output_padding_NAMEEND_VAL temp506_63)))
(assert (= temp506_65 #x0000000000000005))
(assert (= temp506_66 temp506_65))
(assert (= temp506_67 (select ARGNAME_output_padding_NAMEEND_VAL temp506_66)))
(assert (= temp506_68 #x0000000000000000))
(assert (= temp506_69 #x0000000000000000))
(assert (= temp506_70 temp506_69))
(assert (= temp506_71 (select ARGNAME_output_padding_NAMEEND_VAL temp506_70)))
(assert (= temp506_72 #x0000000000000000))
(assert (= temp506_73 #x0000000000000001))
(assert (= temp506_74 temp506_73))
(assert (= temp506_75 (select ARGNAME_output_padding_NAMEEND_VAL temp506_74)))
(assert (= temp506_76 #x0000000000000000))
(assert (= temp506_77 #x0000000000000002))
(assert (= temp506_78 temp506_77))
(assert (= temp506_79 (select ARGNAME_output_padding_NAMEEND_VAL temp506_78)))
(assert (= temp506_80 #x0000000000000000))
(assert (= temp506_81 #x0000000000000003))
(assert (= temp506_82 temp506_81))
(assert (= temp506_83 (select ARGNAME_output_padding_NAMEEND_VAL temp506_82)))
(assert (= temp506_84 #x0000000000000000))
(assert (= temp506_85 #x0000000000000004))
(assert (= temp506_86 temp506_85))
(assert (= temp506_87 (select ARGNAME_output_padding_NAMEEND_VAL temp506_86)))
(assert (= temp506_88 #x0000000000000000))
(assert (= temp506_89 #x0000000000000005))
(assert (= temp506_90 temp506_89))
(assert (= temp506_91 (select ARGNAME_output_padding_NAMEEND_VAL temp506_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp506_71 temp506_68)
             (bvslt temp506_75 temp506_72)
             (bvslt temp506_79 temp506_76)
             (bvslt temp506_83 temp506_80)
             (bvslt temp506_87 temp506_84)
             (bvslt temp506_91 temp506_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp506_92 #x0000000000000000))
(assert (= var1191725 temp506_92))
(assert (= temp506_93 #x0000000000000000))
(assert (= temp506_94 temp506_93))
(assert (= temp506_95 (select ARGNAME_stride_NAMEEND_VAL temp506_94)))
(assert (= temp506_96 #x0000000000000001))
(assert (= temp506_97 temp506_96))
(assert (= temp506_98 (select ARGNAME_stride_NAMEEND_VAL temp506_97)))
(assert (= temp506_99 #x0000000000000002))
(assert (= temp506_100 temp506_99))
(assert (= temp506_101 (select ARGNAME_stride_NAMEEND_VAL temp506_100)))
(assert (= temp506_102 #x0000000000000003))
(assert (= temp506_103 temp506_102))
(assert (= temp506_104 (select ARGNAME_stride_NAMEEND_VAL temp506_103)))
(assert (= temp506_105 #x0000000000000004))
(assert (= temp506_106 temp506_105))
(assert (= temp506_107 (select ARGNAME_stride_NAMEEND_VAL temp506_106)))
(assert (= temp506_108 #x0000000000000005))
(assert (= temp506_109 temp506_108))
(assert (= temp506_110 (select ARGNAME_stride_NAMEEND_VAL temp506_109)))
(assert (= temp506_111 #x0000000000000000))
(assert (= temp506_112 #x0000000000000000))
(assert (= temp506_113 temp506_112))
(assert (= temp506_114 (select ARGNAME_stride_NAMEEND_VAL temp506_113)))
(assert (= temp506_115 #x0000000000000000))
(assert (= temp506_116 #x0000000000000001))
(assert (= temp506_117 temp506_116))
(assert (= temp506_118 (select ARGNAME_stride_NAMEEND_VAL temp506_117)))
(assert (= temp506_119 #x0000000000000000))
(assert (= temp506_120 #x0000000000000002))
(assert (= temp506_121 temp506_120))
(assert (= temp506_122 (select ARGNAME_stride_NAMEEND_VAL temp506_121)))
(assert (= temp506_123 #x0000000000000000))
(assert (= temp506_124 #x0000000000000003))
(assert (= temp506_125 temp506_124))
(assert (= temp506_126 (select ARGNAME_stride_NAMEEND_VAL temp506_125)))
(assert (= temp506_127 #x0000000000000000))
(assert (= temp506_128 #x0000000000000004))
(assert (= temp506_129 temp506_128))
(assert (= temp506_130 (select ARGNAME_stride_NAMEEND_VAL temp506_129)))
(assert (= temp506_131 #x0000000000000000))
(assert (= temp506_132 #x0000000000000005))
(assert (= temp506_133 temp506_132))
(assert (= temp506_134 (select ARGNAME_stride_NAMEEND_VAL temp506_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp506_114 temp506_111)
             (bvsle temp506_118 temp506_115)
             (bvsle temp506_122 temp506_119)
             (bvsle temp506_126 temp506_123)
             (bvsle temp506_130 temp506_127)
             (bvsle temp506_134 temp506_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp506_135 #x0000000000000000))
(assert (= var1191735 temp506_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp506_136 #x0000000000000001))
(assert (= var1191747 temp506_136))
(assert (= temp506_137 #x0000000000000000))
(assert (= var1179826 temp506_137))
(assert (= temp506_138 #x0000000000000000))
(assert (= temp506_139 temp506_138))
(assert (= temp506_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp506_139)))
(assert (= temp506_141 #x0000000000000001))
(assert (= temp506_142 temp506_141))
(assert (= temp506_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp506_142)))
(assert (= temp506_144 #x0000000000000002))
(assert (= temp506_145 temp506_144))
(assert (= temp506_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp506_145)))
(assert (= temp506_147 #x0000000000000003))
(assert (= temp506_148 temp506_147))
(assert (= temp506_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp506_148)))
(assert (= temp506_150 #x0000000000000004))
(assert (= temp506_151 temp506_150))
(assert (= temp506_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp506_151)))
(assert (= temp506_153 #x0000000000000005))
(assert (= temp506_154 temp506_153))
(assert (= temp506_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp506_154)))
(assert (= temp506_157 var1179826))
(assert (= temp506_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp506_157)))
(assert (= temp506_156 temp506_158))
(assert (= var1191780
   (ite (bvslt temp506_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp506_159 #x0000000000000000))
(assert (= var1191780 temp506_159))
(assert (= temp506_160 #x0000000000000000))
(assert (= var1179826 temp506_160))
(assert (= temp506_162 var1179826))
(assert (= temp506_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp506_162)))
(assert (= temp506_161 temp506_163))
(assert (= var1191802 (bvsmod temp506_161 ARGNAME_groups_NAMEEND)))
(assert (= temp506_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp506_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp506_165 #x0000000000000001))
(assert (= var1191803 temp506_165))
(assert (= temp506_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp506_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp506_167 #x0000000000000001))
(assert (= var1191823 temp506_167))
(assert (= temp506_168 #x0000000000000001))
(assert (= var1180714 temp506_168))
(assert (= temp506_169 #x0000000000000000))
(assert (= temp506_170 temp506_169))
(assert (= temp506_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp506_170)))
(assert (= temp506_172 #x0000000000000001))
(assert (= temp506_173 temp506_172))
(assert (= temp506_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp506_173)))
(assert (= temp506_175 #x0000000000000002))
(assert (= temp506_176 temp506_175))
(assert (= temp506_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp506_176)))
(assert (= temp506_178 #x0000000000000003))
(assert (= temp506_179 temp506_178))
(assert (= temp506_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp506_179)))
(assert (= temp506_181 #x0000000000000004))
(assert (= temp506_182 temp506_181))
(assert (= temp506_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp506_182)))
(assert (= temp506_184 #x0000000000000005))
(assert (= temp506_185 temp506_184))
(assert (= temp506_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp506_185)))
(assert (= temp506_187 #x0000000000000000))
(assert (= temp506_188
   (ite (bvslt var1180714 temp506_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp506_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp506_188)))
(assert (= var1191831 temp506_189))
(assert (bvslt (ite (bvslt var1180714 temp506_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp506_190 #x0000000000000001))
(assert (= var1180714 temp506_190))
(assert (= temp506_192 var1180714))
(assert (= temp506_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp506_192)))
(assert (= temp506_191 temp506_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp506_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp506_194 #x0000000000000001))
(assert (= var1191836 temp506_194))
(assert (= temp506_195 #x0000000000000000))
(assert (= var1179826 temp506_195))
(assert (= temp506_197 var1179826))
(assert (= temp506_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp506_197)))
(assert (= temp506_196 temp506_198))
(assert (= temp506_199 #x0000000000000002))
(assert (= var1586025 temp506_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp506_200 #x0000000000000001))
(assert (= var1191993 temp506_200))
(assert (= temp506_201 #x0000000000000001))
(assert (= var2700303 temp506_201))
(assert (= temp506_202 #x0000000000000001))
(assert (= var2962447 temp506_202))
(assert (= temp506_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp506_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp506_204 #x0000000000000001))
(assert (= var211058 temp506_204))
(assert (= temp506_205 #x0000000000000001))
(assert (= var211188 temp506_205))
(assert (= var3879401 var211188))
(assert (= temp506_206 #x0000000000000000))
(assert (= var3866802 temp506_206))
(assert (= temp506_207 #x0000000000000000))
(assert (= temp506_208
   (ite (bvslt var3866802 temp506_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp506_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp506_208)))
(assert (= var3879420 temp506_209))
(assert (bvslt (ite (bvslt var3866802 temp506_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp506_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp506_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp506_211 #x0000000000000001))
(assert (= var3879421 temp506_211))
(assert (= temp506_212 #x0000000000000000))
(assert (= var4079423 temp506_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp506_213 #x0000000000000002))
(assert (= var4208259 temp506_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp506_214 #x0000000000000000))
(assert (= var4273820 temp506_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4469136 var211201))
(assert (= var4731280 var211201))
(assert (= temp506_215 #x0000000000000001))
(assert (= var212414
   (ite (= ARGNAME_groups_NAMEEND temp506_215)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp506_216 #x0000000000000001))
(assert (= var212414 temp506_216))
(assert (= temp506_217 #x0000000000000002))
(assert (= var5060227 temp506_217))
(assert (= var5060229 (bvsub ARGNAME_weight_NAMEEND_DIM var5060227)))
(assert (= var5125772 var5060227))
(assert (= var5125773 var5060229))
(assert (= temp506_218 #x0000000000000001))
(assert (= var211058 temp506_218))
(model-add temp506_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp506_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp506_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp506_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





