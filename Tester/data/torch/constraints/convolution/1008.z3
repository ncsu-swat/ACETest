(declare-fun temp10010_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10010_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10010_3 () (_ BitVec 64))
(declare-fun temp10010_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10010_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10010_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10010_7 () (_ BitVec 64))
(declare-fun temp10010_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10010_9 () (_ BitVec 64))
(declare-fun temp10010_10 () (_ BitVec 64))
(declare-fun temp10010_11 () (_ BitVec 64))
(declare-fun temp10010_12 () (_ BitVec 64))
(declare-fun temp10010_13 () (_ BitVec 64))
(declare-fun temp10010_14 () (_ BitVec 64))
(declare-fun temp10010_15 () (_ BitVec 64))
(declare-fun temp10010_16 () (_ BitVec 64))
(declare-fun temp10010_17 () (_ BitVec 64))
(declare-fun temp10010_18 () (_ BitVec 64))
(declare-fun temp10010_19 () (_ BitVec 64))
(declare-fun temp10010_20 () (_ BitVec 64))
(declare-fun temp10010_21 () (_ BitVec 64))
(declare-fun temp10010_22 () (_ BitVec 64))
(declare-fun temp10010_23 () (_ BitVec 64))
(declare-fun temp10010_24 () (_ BitVec 64))
(declare-fun temp10010_25 () (_ BitVec 64))
(declare-fun temp10010_26 () (_ BitVec 64))
(declare-fun temp10010_27 () (_ BitVec 64))
(declare-fun temp10010_28 () (_ BitVec 64))
(declare-fun temp10010_29 () (_ BitVec 64))
(declare-fun temp10010_30 () (_ BitVec 64))
(declare-fun temp10010_31 () (_ BitVec 64))
(declare-fun temp10010_32 () (_ BitVec 64))
(declare-fun temp10010_33 () (_ BitVec 64))
(declare-fun temp10010_34 () (_ BitVec 64))
(declare-fun temp10010_35 () (_ BitVec 64))
(declare-fun temp10010_36 () (_ BitVec 64))
(declare-fun temp10010_37 () (_ BitVec 64))
(declare-fun temp10010_38 () (_ BitVec 64))
(declare-fun temp10010_39 () (_ BitVec 64))
(declare-fun temp10010_40 () (_ BitVec 64))
(declare-fun temp10010_41 () (_ BitVec 64))
(declare-fun temp10010_42 () (_ BitVec 64))
(declare-fun temp10010_43 () (_ BitVec 64))
(declare-fun temp10010_44 () (_ BitVec 64))
(declare-fun temp10010_45 () (_ BitVec 64))
(declare-fun temp10010_46 () (_ BitVec 64))
(declare-fun temp10010_47 () (_ BitVec 64))
(declare-fun temp10010_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10010_49 () (_ BitVec 64))
(declare-fun temp10010_50 () (_ BitVec 64))
(declare-fun temp10010_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10010_52 () (_ BitVec 64))
(declare-fun temp10010_53 () (_ BitVec 64))
(declare-fun temp10010_54 () (_ BitVec 64))
(declare-fun temp10010_55 () (_ BitVec 64))
(declare-fun temp10010_56 () (_ BitVec 64))
(declare-fun temp10010_57 () (_ BitVec 64))
(declare-fun temp10010_58 () (_ BitVec 64))
(declare-fun temp10010_59 () (_ BitVec 64))
(declare-fun temp10010_60 () (_ BitVec 64))
(declare-fun temp10010_61 () (_ BitVec 64))
(declare-fun temp10010_62 () (_ BitVec 64))
(declare-fun temp10010_63 () (_ BitVec 64))
(declare-fun temp10010_64 () (_ BitVec 64))
(declare-fun temp10010_65 () (_ BitVec 64))
(declare-fun temp10010_66 () (_ BitVec 64))
(declare-fun temp10010_67 () (_ BitVec 64))
(declare-fun temp10010_68 () (_ BitVec 64))
(declare-fun temp10010_69 () (_ BitVec 64))
(declare-fun temp10010_70 () (_ BitVec 64))
(declare-fun temp10010_71 () (_ BitVec 64))
(declare-fun temp10010_72 () (_ BitVec 64))
(declare-fun temp10010_73 () (_ BitVec 64))
(declare-fun temp10010_74 () (_ BitVec 64))
(declare-fun temp10010_75 () (_ BitVec 64))
(declare-fun temp10010_76 () (_ BitVec 64))
(declare-fun temp10010_77 () (_ BitVec 64))
(declare-fun temp10010_78 () (_ BitVec 64))
(declare-fun temp10010_79 () (_ BitVec 64))
(declare-fun temp10010_80 () (_ BitVec 64))
(declare-fun temp10010_81 () (_ BitVec 64))
(declare-fun temp10010_82 () (_ BitVec 64))
(declare-fun temp10010_83 () (_ BitVec 64))
(declare-fun temp10010_84 () (_ BitVec 64))
(declare-fun temp10010_85 () (_ BitVec 64))
(declare-fun temp10010_86 () (_ BitVec 64))
(declare-fun temp10010_87 () (_ BitVec 64))
(declare-fun temp10010_88 () (_ BitVec 64))
(declare-fun temp10010_89 () (_ BitVec 64))
(declare-fun temp10010_90 () (_ BitVec 64))
(declare-fun temp10010_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10010_92 () (_ BitVec 64))
(declare-fun temp10010_93 () (_ BitVec 64))
(declare-fun temp10010_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10010_95 () (_ BitVec 64))
(declare-fun temp10010_96 () (_ BitVec 64))
(declare-fun temp10010_97 () (_ BitVec 64))
(declare-fun temp10010_98 () (_ BitVec 64))
(declare-fun temp10010_99 () (_ BitVec 64))
(declare-fun temp10010_100 () (_ BitVec 64))
(declare-fun temp10010_101 () (_ BitVec 64))
(declare-fun temp10010_102 () (_ BitVec 64))
(declare-fun temp10010_103 () (_ BitVec 64))
(declare-fun temp10010_104 () (_ BitVec 64))
(declare-fun temp10010_105 () (_ BitVec 64))
(declare-fun temp10010_106 () (_ BitVec 64))
(declare-fun temp10010_107 () (_ BitVec 64))
(declare-fun temp10010_108 () (_ BitVec 64))
(declare-fun temp10010_109 () (_ BitVec 64))
(declare-fun temp10010_110 () (_ BitVec 64))
(declare-fun temp10010_111 () (_ BitVec 64))
(declare-fun temp10010_112 () (_ BitVec 64))
(declare-fun temp10010_113 () (_ BitVec 64))
(declare-fun temp10010_114 () (_ BitVec 64))
(declare-fun temp10010_115 () (_ BitVec 64))
(declare-fun temp10010_116 () (_ BitVec 64))
(declare-fun temp10010_117 () (_ BitVec 64))
(declare-fun temp10010_118 () (_ BitVec 64))
(declare-fun temp10010_119 () (_ BitVec 64))
(declare-fun temp10010_120 () (_ BitVec 64))
(declare-fun temp10010_121 () (_ BitVec 64))
(declare-fun temp10010_122 () (_ BitVec 64))
(declare-fun temp10010_123 () (_ BitVec 64))
(declare-fun temp10010_124 () (_ BitVec 64))
(declare-fun temp10010_125 () (_ BitVec 64))
(declare-fun temp10010_126 () (_ BitVec 64))
(declare-fun temp10010_127 () (_ BitVec 64))
(declare-fun temp10010_128 () (_ BitVec 64))
(declare-fun temp10010_129 () (_ BitVec 64))
(declare-fun temp10010_130 () (_ BitVec 64))
(declare-fun temp10010_131 () (_ BitVec 64))
(declare-fun temp10010_132 () (_ BitVec 64))
(declare-fun temp10010_133 () (_ BitVec 64))
(declare-fun temp10010_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10010_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10010_136 () (_ BitVec 64))
(declare-fun temp10010_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10010_138 () (_ BitVec 64))
(declare-fun temp10010_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10010_140 () (_ BitVec 64))
(declare-fun temp10010_141 () (_ BitVec 64))
(declare-fun temp10010_142 () (_ BitVec 64))
(declare-fun temp10010_143 () (_ BitVec 64))
(declare-fun temp10010_144 () (_ BitVec 64))
(declare-fun temp10010_145 () (_ BitVec 64))
(declare-fun temp10010_146 () (_ BitVec 64))
(declare-fun temp10010_147 () (_ BitVec 64))
(declare-fun temp10010_148 () (_ BitVec 64))
(declare-fun temp10010_149 () (_ BitVec 64))
(declare-fun temp10010_150 () (_ BitVec 64))
(declare-fun temp10010_151 () (_ BitVec 64))
(declare-fun temp10010_152 () (_ BitVec 64))
(declare-fun temp10010_153 () (_ BitVec 64))
(declare-fun temp10010_154 () (_ BitVec 64))
(declare-fun temp10010_155 () (_ BitVec 64))
(declare-fun temp10010_157 () (_ BitVec 64))
(declare-fun temp10010_158 () (_ BitVec 64))
(declare-fun temp10010_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10010_159 () (_ BitVec 64))
(declare-fun temp10010_160 () (_ BitVec 64))
(declare-fun temp10010_162 () (_ BitVec 64))
(declare-fun temp10010_163 () (_ BitVec 64))
(declare-fun temp10010_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10010_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10010_165 () (_ BitVec 64))
(declare-fun temp10010_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10010_167 () (_ BitVec 64))
(declare-fun temp10010_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10010_169 () (_ BitVec 64))
(declare-fun temp10010_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10010_171 () (_ BitVec 64))
(declare-fun temp10010_172 () (_ BitVec 64))
(declare-fun temp10010_173 () (_ BitVec 64))
(declare-fun temp10010_174 () (_ BitVec 64))
(declare-fun temp10010_175 () (_ BitVec 64))
(declare-fun temp10010_176 () (_ BitVec 64))
(declare-fun temp10010_177 () (_ BitVec 64))
(declare-fun temp10010_178 () (_ BitVec 64))
(declare-fun temp10010_179 () (_ BitVec 64))
(declare-fun temp10010_180 () (_ BitVec 64))
(declare-fun temp10010_181 () (_ BitVec 64))
(declare-fun temp10010_182 () (_ BitVec 64))
(declare-fun temp10010_183 () (_ BitVec 64))
(declare-fun temp10010_184 () (_ BitVec 64))
(declare-fun temp10010_185 () (_ BitVec 64))
(declare-fun temp10010_186 () (_ BitVec 64))
(declare-fun temp10010_187 () (_ BitVec 64))
(declare-fun temp10010_188 () (_ BitVec 64))
(declare-fun temp10010_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10010_190 () (_ BitVec 64))
(declare-fun temp10010_192 () (_ BitVec 64))
(declare-fun temp10010_193 () (_ BitVec 64))
(declare-fun temp10010_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10010_194 () (_ BitVec 64))
(declare-fun temp10010_195 () (_ BitVec 64))
(declare-fun temp10010_197 () (_ BitVec 64))
(declare-fun temp10010_198 () (_ BitVec 64))
(declare-fun temp10010_196 () (_ BitVec 64))
(declare-fun temp10010_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10010_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10010_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10010_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10010_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10010_204 () (_ BitVec 64))
(declare-fun temp10010_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10010_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10010_207 () (_ BitVec 64))
(declare-fun temp10010_208 () (_ BitVec 64))
(declare-fun temp10010_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10010_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10010_211 () (_ BitVec 64))
(declare-fun temp10010_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10010_213 () (_ BitVec 64))
(declare-fun temp10010_214 () (_ BitVec 64))
(declare-fun temp10010_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10010_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10010_217 () (_ BitVec 64))
(declare-fun temp10010_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10010_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10010_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4796816 () (_ BitVec 64))
(declare-fun var211494 () (_ BitVec 64))
(declare-fun temp10010_221 () (_ BitVec 64))
(declare-fun var211495 () (_ BitVec 64))
(declare-fun temp10010_223 () (_ BitVec 64))
(declare-fun temp10010_222 () (_ BitVec 64))
(declare-fun temp10010_224 () (_ BitVec 64))
(declare-fun var6753770 () (_ BitVec 64))
(declare-fun temp10010_226 () (_ BitVec 64))
(declare-fun temp10010_225 () (_ BitVec 64))
(declare-fun temp10010_227 () (_ BitVec 64))
(assert (= temp10010_1 #x0000000000000001))
(assert (= var77203 temp10010_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10010_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10010_2)))
(assert (= temp10010_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10010_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10010_4 #x0000000000000000))
(assert (= var210941 temp10010_4))
(assert (= temp10010_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10010_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10010_6 #x0000000000000000))
(assert (= var210986 temp10010_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10010_7 #x0000000000000000))
(assert (= temp10010_8 temp10010_7))
(assert (= temp10010_9 (select ARGNAME_padding_NAMEEND_VAL temp10010_8)))
(assert (= temp10010_10 #x0000000000000001))
(assert (= temp10010_11 temp10010_10))
(assert (= temp10010_12 (select ARGNAME_padding_NAMEEND_VAL temp10010_11)))
(assert (= temp10010_13 #x0000000000000002))
(assert (= temp10010_14 temp10010_13))
(assert (= temp10010_15 (select ARGNAME_padding_NAMEEND_VAL temp10010_14)))
(assert (= temp10010_16 #x0000000000000003))
(assert (= temp10010_17 temp10010_16))
(assert (= temp10010_18 (select ARGNAME_padding_NAMEEND_VAL temp10010_17)))
(assert (= temp10010_19 #x0000000000000004))
(assert (= temp10010_20 temp10010_19))
(assert (= temp10010_21 (select ARGNAME_padding_NAMEEND_VAL temp10010_20)))
(assert (= temp10010_22 #x0000000000000005))
(assert (= temp10010_23 temp10010_22))
(assert (= temp10010_24 (select ARGNAME_padding_NAMEEND_VAL temp10010_23)))
(assert (= temp10010_25 #x0000000000000000))
(assert (= temp10010_26 #x0000000000000000))
(assert (= temp10010_27 temp10010_26))
(assert (= temp10010_28 (select ARGNAME_padding_NAMEEND_VAL temp10010_27)))
(assert (= temp10010_29 #x0000000000000000))
(assert (= temp10010_30 #x0000000000000001))
(assert (= temp10010_31 temp10010_30))
(assert (= temp10010_32 (select ARGNAME_padding_NAMEEND_VAL temp10010_31)))
(assert (= temp10010_33 #x0000000000000000))
(assert (= temp10010_34 #x0000000000000002))
(assert (= temp10010_35 temp10010_34))
(assert (= temp10010_36 (select ARGNAME_padding_NAMEEND_VAL temp10010_35)))
(assert (= temp10010_37 #x0000000000000000))
(assert (= temp10010_38 #x0000000000000003))
(assert (= temp10010_39 temp10010_38))
(assert (= temp10010_40 (select ARGNAME_padding_NAMEEND_VAL temp10010_39)))
(assert (= temp10010_41 #x0000000000000000))
(assert (= temp10010_42 #x0000000000000004))
(assert (= temp10010_43 temp10010_42))
(assert (= temp10010_44 (select ARGNAME_padding_NAMEEND_VAL temp10010_43)))
(assert (= temp10010_45 #x0000000000000000))
(assert (= temp10010_46 #x0000000000000005))
(assert (= temp10010_47 temp10010_46))
(assert (= temp10010_48 (select ARGNAME_padding_NAMEEND_VAL temp10010_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10010_28 temp10010_25)
             (bvslt temp10010_32 temp10010_29)
             (bvslt temp10010_36 temp10010_33)
             (bvslt temp10010_40 temp10010_37)
             (bvslt temp10010_44 temp10010_41)
             (bvslt temp10010_48 temp10010_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10010_49 #x0000000000000000))
(assert (= var1191714 temp10010_49))
(assert (= temp10010_50 #x0000000000000000))
(assert (= temp10010_51 temp10010_50))
(assert (= temp10010_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10010_51)))
(assert (= temp10010_53 #x0000000000000001))
(assert (= temp10010_54 temp10010_53))
(assert (= temp10010_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10010_54)))
(assert (= temp10010_56 #x0000000000000002))
(assert (= temp10010_57 temp10010_56))
(assert (= temp10010_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10010_57)))
(assert (= temp10010_59 #x0000000000000003))
(assert (= temp10010_60 temp10010_59))
(assert (= temp10010_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10010_60)))
(assert (= temp10010_62 #x0000000000000004))
(assert (= temp10010_63 temp10010_62))
(assert (= temp10010_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10010_63)))
(assert (= temp10010_65 #x0000000000000005))
(assert (= temp10010_66 temp10010_65))
(assert (= temp10010_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10010_66)))
(assert (= temp10010_68 #x0000000000000000))
(assert (= temp10010_69 #x0000000000000000))
(assert (= temp10010_70 temp10010_69))
(assert (= temp10010_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10010_70)))
(assert (= temp10010_72 #x0000000000000000))
(assert (= temp10010_73 #x0000000000000001))
(assert (= temp10010_74 temp10010_73))
(assert (= temp10010_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10010_74)))
(assert (= temp10010_76 #x0000000000000000))
(assert (= temp10010_77 #x0000000000000002))
(assert (= temp10010_78 temp10010_77))
(assert (= temp10010_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10010_78)))
(assert (= temp10010_80 #x0000000000000000))
(assert (= temp10010_81 #x0000000000000003))
(assert (= temp10010_82 temp10010_81))
(assert (= temp10010_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10010_82)))
(assert (= temp10010_84 #x0000000000000000))
(assert (= temp10010_85 #x0000000000000004))
(assert (= temp10010_86 temp10010_85))
(assert (= temp10010_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10010_86)))
(assert (= temp10010_88 #x0000000000000000))
(assert (= temp10010_89 #x0000000000000005))
(assert (= temp10010_90 temp10010_89))
(assert (= temp10010_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10010_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10010_71 temp10010_68)
             (bvslt temp10010_75 temp10010_72)
             (bvslt temp10010_79 temp10010_76)
             (bvslt temp10010_83 temp10010_80)
             (bvslt temp10010_87 temp10010_84)
             (bvslt temp10010_91 temp10010_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10010_92 #x0000000000000000))
(assert (= var1191725 temp10010_92))
(assert (= temp10010_93 #x0000000000000000))
(assert (= temp10010_94 temp10010_93))
(assert (= temp10010_95 (select ARGNAME_stride_NAMEEND_VAL temp10010_94)))
(assert (= temp10010_96 #x0000000000000001))
(assert (= temp10010_97 temp10010_96))
(assert (= temp10010_98 (select ARGNAME_stride_NAMEEND_VAL temp10010_97)))
(assert (= temp10010_99 #x0000000000000002))
(assert (= temp10010_100 temp10010_99))
(assert (= temp10010_101 (select ARGNAME_stride_NAMEEND_VAL temp10010_100)))
(assert (= temp10010_102 #x0000000000000003))
(assert (= temp10010_103 temp10010_102))
(assert (= temp10010_104 (select ARGNAME_stride_NAMEEND_VAL temp10010_103)))
(assert (= temp10010_105 #x0000000000000004))
(assert (= temp10010_106 temp10010_105))
(assert (= temp10010_107 (select ARGNAME_stride_NAMEEND_VAL temp10010_106)))
(assert (= temp10010_108 #x0000000000000005))
(assert (= temp10010_109 temp10010_108))
(assert (= temp10010_110 (select ARGNAME_stride_NAMEEND_VAL temp10010_109)))
(assert (= temp10010_111 #x0000000000000000))
(assert (= temp10010_112 #x0000000000000000))
(assert (= temp10010_113 temp10010_112))
(assert (= temp10010_114 (select ARGNAME_stride_NAMEEND_VAL temp10010_113)))
(assert (= temp10010_115 #x0000000000000000))
(assert (= temp10010_116 #x0000000000000001))
(assert (= temp10010_117 temp10010_116))
(assert (= temp10010_118 (select ARGNAME_stride_NAMEEND_VAL temp10010_117)))
(assert (= temp10010_119 #x0000000000000000))
(assert (= temp10010_120 #x0000000000000002))
(assert (= temp10010_121 temp10010_120))
(assert (= temp10010_122 (select ARGNAME_stride_NAMEEND_VAL temp10010_121)))
(assert (= temp10010_123 #x0000000000000000))
(assert (= temp10010_124 #x0000000000000003))
(assert (= temp10010_125 temp10010_124))
(assert (= temp10010_126 (select ARGNAME_stride_NAMEEND_VAL temp10010_125)))
(assert (= temp10010_127 #x0000000000000000))
(assert (= temp10010_128 #x0000000000000004))
(assert (= temp10010_129 temp10010_128))
(assert (= temp10010_130 (select ARGNAME_stride_NAMEEND_VAL temp10010_129)))
(assert (= temp10010_131 #x0000000000000000))
(assert (= temp10010_132 #x0000000000000005))
(assert (= temp10010_133 temp10010_132))
(assert (= temp10010_134 (select ARGNAME_stride_NAMEEND_VAL temp10010_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10010_114 temp10010_111)
             (bvsle temp10010_118 temp10010_115)
             (bvsle temp10010_122 temp10010_119)
             (bvsle temp10010_126 temp10010_123)
             (bvsle temp10010_130 temp10010_127)
             (bvsle temp10010_134 temp10010_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10010_135 #x0000000000000000))
(assert (= var1191735 temp10010_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10010_136 #x0000000000000001))
(assert (= var1191747 temp10010_136))
(assert (= temp10010_137 #x0000000000000000))
(assert (= var1179826 temp10010_137))
(assert (= temp10010_138 #x0000000000000000))
(assert (= temp10010_139 temp10010_138))
(assert (= temp10010_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10010_139)))
(assert (= temp10010_141 #x0000000000000001))
(assert (= temp10010_142 temp10010_141))
(assert (= temp10010_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10010_142)))
(assert (= temp10010_144 #x0000000000000002))
(assert (= temp10010_145 temp10010_144))
(assert (= temp10010_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10010_145)))
(assert (= temp10010_147 #x0000000000000003))
(assert (= temp10010_148 temp10010_147))
(assert (= temp10010_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10010_148)))
(assert (= temp10010_150 #x0000000000000004))
(assert (= temp10010_151 temp10010_150))
(assert (= temp10010_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10010_151)))
(assert (= temp10010_153 #x0000000000000005))
(assert (= temp10010_154 temp10010_153))
(assert (= temp10010_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10010_154)))
(assert (= temp10010_157 var1179826))
(assert (= temp10010_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10010_157)))
(assert (= temp10010_156 temp10010_158))
(assert (= var1191780
   (ite (bvslt temp10010_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10010_159 #x0000000000000000))
(assert (= var1191780 temp10010_159))
(assert (= temp10010_160 #x0000000000000000))
(assert (= var1179826 temp10010_160))
(assert (= temp10010_162 var1179826))
(assert (= temp10010_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10010_162)))
(assert (= temp10010_161 temp10010_163))
(assert (= var1191802 (bvsmod temp10010_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10010_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10010_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10010_165 #x0000000000000001))
(assert (= var1191803 temp10010_165))
(assert (= temp10010_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10010_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10010_167 #x0000000000000001))
(assert (= var1191823 temp10010_167))
(assert (= temp10010_168 #x0000000000000001))
(assert (= var1180714 temp10010_168))
(assert (= temp10010_169 #x0000000000000000))
(assert (= temp10010_170 temp10010_169))
(assert (= temp10010_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10010_170)))
(assert (= temp10010_172 #x0000000000000001))
(assert (= temp10010_173 temp10010_172))
(assert (= temp10010_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10010_173)))
(assert (= temp10010_175 #x0000000000000002))
(assert (= temp10010_176 temp10010_175))
(assert (= temp10010_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10010_176)))
(assert (= temp10010_178 #x0000000000000003))
(assert (= temp10010_179 temp10010_178))
(assert (= temp10010_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10010_179)))
(assert (= temp10010_181 #x0000000000000004))
(assert (= temp10010_182 temp10010_181))
(assert (= temp10010_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10010_182)))
(assert (= temp10010_184 #x0000000000000005))
(assert (= temp10010_185 temp10010_184))
(assert (= temp10010_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10010_185)))
(assert (= temp10010_187 #x0000000000000000))
(assert (= temp10010_188
   (ite (bvslt var1180714 temp10010_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10010_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10010_188)))
(assert (= var1191831 temp10010_189))
(assert (bvslt (ite (bvslt var1180714 temp10010_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10010_190 #x0000000000000001))
(assert (= var1180714 temp10010_190))
(assert (= temp10010_192 var1180714))
(assert (= temp10010_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10010_192)))
(assert (= temp10010_191 temp10010_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10010_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10010_194 #x0000000000000001))
(assert (= var1191836 temp10010_194))
(assert (= temp10010_195 #x0000000000000000))
(assert (= var1179826 temp10010_195))
(assert (= temp10010_197 var1179826))
(assert (= temp10010_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10010_197)))
(assert (= temp10010_196 temp10010_198))
(assert (= temp10010_199 #x0000000000000002))
(assert (= var1586025 temp10010_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10010_200 #x0000000000000001))
(assert (= var1191993 temp10010_200))
(assert (= temp10010_201 #x0000000000000001))
(assert (= var2700303 temp10010_201))
(assert (= temp10010_202 #x0000000000000001))
(assert (= var2962447 temp10010_202))
(assert (= temp10010_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10010_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10010_204 #x0000000000000001))
(assert (= var211058 temp10010_204))
(assert (= temp10010_205 #x0000000000000001))
(assert (= var211188 temp10010_205))
(assert (= var3879401 var211188))
(assert (= temp10010_206 #x0000000000000000))
(assert (= var3866802 temp10010_206))
(assert (= temp10010_207 #x0000000000000000))
(assert (= temp10010_208
   (ite (bvslt var3866802 temp10010_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10010_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10010_208)))
(assert (= var3879420 temp10010_209))
(assert (bvslt (ite (bvslt var3866802 temp10010_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10010_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10010_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10010_211 #x0000000000000000))
(assert (= var3879421 temp10010_211))
(assert (= temp10010_212 #x0000000000000001))
(assert (= var3867690 temp10010_212))
(assert (= temp10010_213 #x0000000000000000))
(assert (= temp10010_214
   (ite (bvslt var3867690 temp10010_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10010_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10010_214)))
(assert (= var3879423 temp10010_215))
(assert (bvslt (ite (bvslt var3867690 temp10010_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10010_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10010_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10010_217 #x0000000000000001))
(assert (= var3879424 temp10010_217))
(assert (= temp10010_218 #x0000000000000000))
(assert (= var4079423 temp10010_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10010_219 #x0000000000000002))
(assert (= var4208259 temp10010_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10010_220 #x0000000000000000))
(assert (= var4273820 temp10010_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4796816 var211201))
(assert (= var211494 var210913))
(assert (= temp10010_221 #x0000000000000000))
(assert (= var211495
   (ite (distinct var211494 temp10010_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10010_223 #x0000000000000001))
(assert (= temp10010_222 temp10010_223))
(assert (= temp10010_224 #x0000000000000001))
(assert (= var6753770 temp10010_224))
(assert (= temp10010_226 #xffffffffffffffff))
(assert (= temp10010_225 temp10010_226))
(assert (= temp10010_227 #x0000000000000001))
(assert (= var211058 temp10010_227))
(model-add temp10010_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10010_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10010_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10010_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





