(declare-fun temp140_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp140_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp140_3 () (_ BitVec 64))
(declare-fun temp140_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp140_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp140_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp140_7 () (_ BitVec 64))
(declare-fun temp140_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp140_9 () (_ BitVec 64))
(declare-fun temp140_10 () (_ BitVec 64))
(declare-fun temp140_11 () (_ BitVec 64))
(declare-fun temp140_12 () (_ BitVec 64))
(declare-fun temp140_13 () (_ BitVec 64))
(declare-fun temp140_14 () (_ BitVec 64))
(declare-fun temp140_15 () (_ BitVec 64))
(declare-fun temp140_16 () (_ BitVec 64))
(declare-fun temp140_17 () (_ BitVec 64))
(declare-fun temp140_18 () (_ BitVec 64))
(declare-fun temp140_19 () (_ BitVec 64))
(declare-fun temp140_20 () (_ BitVec 64))
(declare-fun temp140_21 () (_ BitVec 64))
(declare-fun temp140_22 () (_ BitVec 64))
(declare-fun temp140_23 () (_ BitVec 64))
(declare-fun temp140_24 () (_ BitVec 64))
(declare-fun temp140_25 () (_ BitVec 64))
(declare-fun temp140_26 () (_ BitVec 64))
(declare-fun temp140_27 () (_ BitVec 64))
(declare-fun temp140_28 () (_ BitVec 64))
(declare-fun temp140_29 () (_ BitVec 64))
(declare-fun temp140_30 () (_ BitVec 64))
(declare-fun temp140_31 () (_ BitVec 64))
(declare-fun temp140_32 () (_ BitVec 64))
(declare-fun temp140_33 () (_ BitVec 64))
(declare-fun temp140_34 () (_ BitVec 64))
(declare-fun temp140_35 () (_ BitVec 64))
(declare-fun temp140_36 () (_ BitVec 64))
(declare-fun temp140_37 () (_ BitVec 64))
(declare-fun temp140_38 () (_ BitVec 64))
(declare-fun temp140_39 () (_ BitVec 64))
(declare-fun temp140_40 () (_ BitVec 64))
(declare-fun temp140_41 () (_ BitVec 64))
(declare-fun temp140_42 () (_ BitVec 64))
(declare-fun temp140_43 () (_ BitVec 64))
(declare-fun temp140_44 () (_ BitVec 64))
(declare-fun temp140_45 () (_ BitVec 64))
(declare-fun temp140_46 () (_ BitVec 64))
(declare-fun temp140_47 () (_ BitVec 64))
(declare-fun temp140_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp140_49 () (_ BitVec 64))
(declare-fun temp140_50 () (_ BitVec 64))
(declare-fun temp140_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp140_52 () (_ BitVec 64))
(declare-fun temp140_53 () (_ BitVec 64))
(declare-fun temp140_54 () (_ BitVec 64))
(declare-fun temp140_55 () (_ BitVec 64))
(declare-fun temp140_56 () (_ BitVec 64))
(declare-fun temp140_57 () (_ BitVec 64))
(declare-fun temp140_58 () (_ BitVec 64))
(declare-fun temp140_59 () (_ BitVec 64))
(declare-fun temp140_60 () (_ BitVec 64))
(declare-fun temp140_61 () (_ BitVec 64))
(declare-fun temp140_62 () (_ BitVec 64))
(declare-fun temp140_63 () (_ BitVec 64))
(declare-fun temp140_64 () (_ BitVec 64))
(declare-fun temp140_65 () (_ BitVec 64))
(declare-fun temp140_66 () (_ BitVec 64))
(declare-fun temp140_67 () (_ BitVec 64))
(declare-fun temp140_68 () (_ BitVec 64))
(declare-fun temp140_69 () (_ BitVec 64))
(declare-fun temp140_70 () (_ BitVec 64))
(declare-fun temp140_71 () (_ BitVec 64))
(declare-fun temp140_72 () (_ BitVec 64))
(declare-fun temp140_73 () (_ BitVec 64))
(declare-fun temp140_74 () (_ BitVec 64))
(declare-fun temp140_75 () (_ BitVec 64))
(declare-fun temp140_76 () (_ BitVec 64))
(declare-fun temp140_77 () (_ BitVec 64))
(declare-fun temp140_78 () (_ BitVec 64))
(declare-fun temp140_79 () (_ BitVec 64))
(declare-fun temp140_80 () (_ BitVec 64))
(declare-fun temp140_81 () (_ BitVec 64))
(declare-fun temp140_82 () (_ BitVec 64))
(declare-fun temp140_83 () (_ BitVec 64))
(declare-fun temp140_84 () (_ BitVec 64))
(declare-fun temp140_85 () (_ BitVec 64))
(declare-fun temp140_86 () (_ BitVec 64))
(declare-fun temp140_87 () (_ BitVec 64))
(declare-fun temp140_88 () (_ BitVec 64))
(declare-fun temp140_89 () (_ BitVec 64))
(declare-fun temp140_90 () (_ BitVec 64))
(declare-fun temp140_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp140_92 () (_ BitVec 64))
(declare-fun temp140_93 () (_ BitVec 64))
(declare-fun temp140_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp140_95 () (_ BitVec 64))
(declare-fun temp140_96 () (_ BitVec 64))
(declare-fun temp140_97 () (_ BitVec 64))
(declare-fun temp140_98 () (_ BitVec 64))
(declare-fun temp140_99 () (_ BitVec 64))
(declare-fun temp140_100 () (_ BitVec 64))
(declare-fun temp140_101 () (_ BitVec 64))
(declare-fun temp140_102 () (_ BitVec 64))
(declare-fun temp140_103 () (_ BitVec 64))
(declare-fun temp140_104 () (_ BitVec 64))
(declare-fun temp140_105 () (_ BitVec 64))
(declare-fun temp140_106 () (_ BitVec 64))
(declare-fun temp140_107 () (_ BitVec 64))
(declare-fun temp140_108 () (_ BitVec 64))
(declare-fun temp140_109 () (_ BitVec 64))
(declare-fun temp140_110 () (_ BitVec 64))
(declare-fun temp140_111 () (_ BitVec 64))
(declare-fun temp140_112 () (_ BitVec 64))
(declare-fun temp140_113 () (_ BitVec 64))
(declare-fun temp140_114 () (_ BitVec 64))
(declare-fun temp140_115 () (_ BitVec 64))
(declare-fun temp140_116 () (_ BitVec 64))
(declare-fun temp140_117 () (_ BitVec 64))
(declare-fun temp140_118 () (_ BitVec 64))
(declare-fun temp140_119 () (_ BitVec 64))
(declare-fun temp140_120 () (_ BitVec 64))
(declare-fun temp140_121 () (_ BitVec 64))
(declare-fun temp140_122 () (_ BitVec 64))
(declare-fun temp140_123 () (_ BitVec 64))
(declare-fun temp140_124 () (_ BitVec 64))
(declare-fun temp140_125 () (_ BitVec 64))
(declare-fun temp140_126 () (_ BitVec 64))
(declare-fun temp140_127 () (_ BitVec 64))
(declare-fun temp140_128 () (_ BitVec 64))
(declare-fun temp140_129 () (_ BitVec 64))
(declare-fun temp140_130 () (_ BitVec 64))
(declare-fun temp140_131 () (_ BitVec 64))
(declare-fun temp140_132 () (_ BitVec 64))
(declare-fun temp140_133 () (_ BitVec 64))
(declare-fun temp140_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp140_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp140_136 () (_ BitVec 64))
(declare-fun temp140_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp140_138 () (_ BitVec 64))
(declare-fun temp140_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp140_140 () (_ BitVec 64))
(declare-fun temp140_141 () (_ BitVec 64))
(declare-fun temp140_142 () (_ BitVec 64))
(declare-fun temp140_143 () (_ BitVec 64))
(declare-fun temp140_144 () (_ BitVec 64))
(declare-fun temp140_145 () (_ BitVec 64))
(declare-fun temp140_146 () (_ BitVec 64))
(declare-fun temp140_147 () (_ BitVec 64))
(declare-fun temp140_148 () (_ BitVec 64))
(declare-fun temp140_149 () (_ BitVec 64))
(declare-fun temp140_150 () (_ BitVec 64))
(declare-fun temp140_151 () (_ BitVec 64))
(declare-fun temp140_152 () (_ BitVec 64))
(declare-fun temp140_153 () (_ BitVec 64))
(declare-fun temp140_154 () (_ BitVec 64))
(declare-fun temp140_155 () (_ BitVec 64))
(declare-fun temp140_157 () (_ BitVec 64))
(declare-fun temp140_158 () (_ BitVec 64))
(declare-fun temp140_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp140_159 () (_ BitVec 64))
(declare-fun temp140_160 () (_ BitVec 64))
(declare-fun temp140_162 () (_ BitVec 64))
(declare-fun temp140_163 () (_ BitVec 64))
(declare-fun temp140_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp140_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp140_165 () (_ BitVec 64))
(declare-fun temp140_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp140_167 () (_ BitVec 64))
(declare-fun temp140_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp140_169 () (_ BitVec 64))
(declare-fun temp140_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp140_171 () (_ BitVec 64))
(declare-fun temp140_172 () (_ BitVec 64))
(declare-fun temp140_173 () (_ BitVec 64))
(declare-fun temp140_174 () (_ BitVec 64))
(declare-fun temp140_175 () (_ BitVec 64))
(declare-fun temp140_176 () (_ BitVec 64))
(declare-fun temp140_177 () (_ BitVec 64))
(declare-fun temp140_178 () (_ BitVec 64))
(declare-fun temp140_179 () (_ BitVec 64))
(declare-fun temp140_180 () (_ BitVec 64))
(declare-fun temp140_181 () (_ BitVec 64))
(declare-fun temp140_182 () (_ BitVec 64))
(declare-fun temp140_183 () (_ BitVec 64))
(declare-fun temp140_184 () (_ BitVec 64))
(declare-fun temp140_185 () (_ BitVec 64))
(declare-fun temp140_186 () (_ BitVec 64))
(declare-fun temp140_187 () (_ BitVec 64))
(declare-fun temp140_188 () (_ BitVec 64))
(declare-fun temp140_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp140_190 () (_ BitVec 64))
(declare-fun temp140_192 () (_ BitVec 64))
(declare-fun temp140_193 () (_ BitVec 64))
(declare-fun temp140_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp140_194 () (_ BitVec 64))
(declare-fun temp140_195 () (_ BitVec 64))
(declare-fun temp140_197 () (_ BitVec 64))
(declare-fun temp140_198 () (_ BitVec 64))
(declare-fun temp140_196 () (_ BitVec 64))
(declare-fun temp140_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp140_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp140_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp140_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp140_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp140_204 () (_ BitVec 64))
(declare-fun temp140_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp140_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp140_207 () (_ BitVec 64))
(declare-fun temp140_208 () (_ BitVec 64))
(declare-fun temp140_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp140_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp140_211 () (_ BitVec 64))
(declare-fun temp140_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp140_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp140_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp140_216 () (_ BitVec 64))
(declare-fun temp140_215 () (_ BitVec 64))
(declare-fun temp140_217 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp140_218 () (_ BitVec 64))
(declare-fun temp140_219 () (_ BitVec 64))
(declare-fun temp140_220 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp140_221 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp140_222 () (_ BitVec 64))
(declare-fun temp140_224 () (_ BitVec 64))
(declare-fun temp140_223 () (_ BitVec 64))
(declare-fun temp140_225 () (_ BitVec 64))
(declare-fun temp140_226 () (_ BitVec 64))
(declare-fun var5452564 () (_ BitVec 64))
(declare-fun var5452531 () (_ BitVec 64))
(declare-fun var5321095 () (_ BitVec 64))
(declare-fun var5321091 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp140_227 () (_ BitVec 64))
(assert (= temp140_1 #x0000000000000001))
(assert (= var77203 temp140_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp140_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp140_2)))
(assert (= temp140_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp140_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp140_4 #x0000000000000000))
(assert (= var210941 temp140_4))
(assert (= temp140_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp140_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp140_6 #x0000000000000000))
(assert (= var210986 temp140_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp140_7 #x0000000000000000))
(assert (= temp140_8 temp140_7))
(assert (= temp140_9 (select ARGNAME_padding_NAMEEND_VAL temp140_8)))
(assert (= temp140_10 #x0000000000000001))
(assert (= temp140_11 temp140_10))
(assert (= temp140_12 (select ARGNAME_padding_NAMEEND_VAL temp140_11)))
(assert (= temp140_13 #x0000000000000002))
(assert (= temp140_14 temp140_13))
(assert (= temp140_15 (select ARGNAME_padding_NAMEEND_VAL temp140_14)))
(assert (= temp140_16 #x0000000000000003))
(assert (= temp140_17 temp140_16))
(assert (= temp140_18 (select ARGNAME_padding_NAMEEND_VAL temp140_17)))
(assert (= temp140_19 #x0000000000000004))
(assert (= temp140_20 temp140_19))
(assert (= temp140_21 (select ARGNAME_padding_NAMEEND_VAL temp140_20)))
(assert (= temp140_22 #x0000000000000005))
(assert (= temp140_23 temp140_22))
(assert (= temp140_24 (select ARGNAME_padding_NAMEEND_VAL temp140_23)))
(assert (= temp140_25 #x0000000000000000))
(assert (= temp140_26 #x0000000000000000))
(assert (= temp140_27 temp140_26))
(assert (= temp140_28 (select ARGNAME_padding_NAMEEND_VAL temp140_27)))
(assert (= temp140_29 #x0000000000000000))
(assert (= temp140_30 #x0000000000000001))
(assert (= temp140_31 temp140_30))
(assert (= temp140_32 (select ARGNAME_padding_NAMEEND_VAL temp140_31)))
(assert (= temp140_33 #x0000000000000000))
(assert (= temp140_34 #x0000000000000002))
(assert (= temp140_35 temp140_34))
(assert (= temp140_36 (select ARGNAME_padding_NAMEEND_VAL temp140_35)))
(assert (= temp140_37 #x0000000000000000))
(assert (= temp140_38 #x0000000000000003))
(assert (= temp140_39 temp140_38))
(assert (= temp140_40 (select ARGNAME_padding_NAMEEND_VAL temp140_39)))
(assert (= temp140_41 #x0000000000000000))
(assert (= temp140_42 #x0000000000000004))
(assert (= temp140_43 temp140_42))
(assert (= temp140_44 (select ARGNAME_padding_NAMEEND_VAL temp140_43)))
(assert (= temp140_45 #x0000000000000000))
(assert (= temp140_46 #x0000000000000005))
(assert (= temp140_47 temp140_46))
(assert (= temp140_48 (select ARGNAME_padding_NAMEEND_VAL temp140_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp140_28 temp140_25)
             (bvslt temp140_32 temp140_29)
             (bvslt temp140_36 temp140_33)
             (bvslt temp140_40 temp140_37)
             (bvslt temp140_44 temp140_41)
             (bvslt temp140_48 temp140_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp140_49 #x0000000000000000))
(assert (= var1191714 temp140_49))
(assert (= temp140_50 #x0000000000000000))
(assert (= temp140_51 temp140_50))
(assert (= temp140_52 (select ARGNAME_output_padding_NAMEEND_VAL temp140_51)))
(assert (= temp140_53 #x0000000000000001))
(assert (= temp140_54 temp140_53))
(assert (= temp140_55 (select ARGNAME_output_padding_NAMEEND_VAL temp140_54)))
(assert (= temp140_56 #x0000000000000002))
(assert (= temp140_57 temp140_56))
(assert (= temp140_58 (select ARGNAME_output_padding_NAMEEND_VAL temp140_57)))
(assert (= temp140_59 #x0000000000000003))
(assert (= temp140_60 temp140_59))
(assert (= temp140_61 (select ARGNAME_output_padding_NAMEEND_VAL temp140_60)))
(assert (= temp140_62 #x0000000000000004))
(assert (= temp140_63 temp140_62))
(assert (= temp140_64 (select ARGNAME_output_padding_NAMEEND_VAL temp140_63)))
(assert (= temp140_65 #x0000000000000005))
(assert (= temp140_66 temp140_65))
(assert (= temp140_67 (select ARGNAME_output_padding_NAMEEND_VAL temp140_66)))
(assert (= temp140_68 #x0000000000000000))
(assert (= temp140_69 #x0000000000000000))
(assert (= temp140_70 temp140_69))
(assert (= temp140_71 (select ARGNAME_output_padding_NAMEEND_VAL temp140_70)))
(assert (= temp140_72 #x0000000000000000))
(assert (= temp140_73 #x0000000000000001))
(assert (= temp140_74 temp140_73))
(assert (= temp140_75 (select ARGNAME_output_padding_NAMEEND_VAL temp140_74)))
(assert (= temp140_76 #x0000000000000000))
(assert (= temp140_77 #x0000000000000002))
(assert (= temp140_78 temp140_77))
(assert (= temp140_79 (select ARGNAME_output_padding_NAMEEND_VAL temp140_78)))
(assert (= temp140_80 #x0000000000000000))
(assert (= temp140_81 #x0000000000000003))
(assert (= temp140_82 temp140_81))
(assert (= temp140_83 (select ARGNAME_output_padding_NAMEEND_VAL temp140_82)))
(assert (= temp140_84 #x0000000000000000))
(assert (= temp140_85 #x0000000000000004))
(assert (= temp140_86 temp140_85))
(assert (= temp140_87 (select ARGNAME_output_padding_NAMEEND_VAL temp140_86)))
(assert (= temp140_88 #x0000000000000000))
(assert (= temp140_89 #x0000000000000005))
(assert (= temp140_90 temp140_89))
(assert (= temp140_91 (select ARGNAME_output_padding_NAMEEND_VAL temp140_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp140_71 temp140_68)
             (bvslt temp140_75 temp140_72)
             (bvslt temp140_79 temp140_76)
             (bvslt temp140_83 temp140_80)
             (bvslt temp140_87 temp140_84)
             (bvslt temp140_91 temp140_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp140_92 #x0000000000000000))
(assert (= var1191725 temp140_92))
(assert (= temp140_93 #x0000000000000000))
(assert (= temp140_94 temp140_93))
(assert (= temp140_95 (select ARGNAME_stride_NAMEEND_VAL temp140_94)))
(assert (= temp140_96 #x0000000000000001))
(assert (= temp140_97 temp140_96))
(assert (= temp140_98 (select ARGNAME_stride_NAMEEND_VAL temp140_97)))
(assert (= temp140_99 #x0000000000000002))
(assert (= temp140_100 temp140_99))
(assert (= temp140_101 (select ARGNAME_stride_NAMEEND_VAL temp140_100)))
(assert (= temp140_102 #x0000000000000003))
(assert (= temp140_103 temp140_102))
(assert (= temp140_104 (select ARGNAME_stride_NAMEEND_VAL temp140_103)))
(assert (= temp140_105 #x0000000000000004))
(assert (= temp140_106 temp140_105))
(assert (= temp140_107 (select ARGNAME_stride_NAMEEND_VAL temp140_106)))
(assert (= temp140_108 #x0000000000000005))
(assert (= temp140_109 temp140_108))
(assert (= temp140_110 (select ARGNAME_stride_NAMEEND_VAL temp140_109)))
(assert (= temp140_111 #x0000000000000000))
(assert (= temp140_112 #x0000000000000000))
(assert (= temp140_113 temp140_112))
(assert (= temp140_114 (select ARGNAME_stride_NAMEEND_VAL temp140_113)))
(assert (= temp140_115 #x0000000000000000))
(assert (= temp140_116 #x0000000000000001))
(assert (= temp140_117 temp140_116))
(assert (= temp140_118 (select ARGNAME_stride_NAMEEND_VAL temp140_117)))
(assert (= temp140_119 #x0000000000000000))
(assert (= temp140_120 #x0000000000000002))
(assert (= temp140_121 temp140_120))
(assert (= temp140_122 (select ARGNAME_stride_NAMEEND_VAL temp140_121)))
(assert (= temp140_123 #x0000000000000000))
(assert (= temp140_124 #x0000000000000003))
(assert (= temp140_125 temp140_124))
(assert (= temp140_126 (select ARGNAME_stride_NAMEEND_VAL temp140_125)))
(assert (= temp140_127 #x0000000000000000))
(assert (= temp140_128 #x0000000000000004))
(assert (= temp140_129 temp140_128))
(assert (= temp140_130 (select ARGNAME_stride_NAMEEND_VAL temp140_129)))
(assert (= temp140_131 #x0000000000000000))
(assert (= temp140_132 #x0000000000000005))
(assert (= temp140_133 temp140_132))
(assert (= temp140_134 (select ARGNAME_stride_NAMEEND_VAL temp140_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp140_114 temp140_111)
             (bvsle temp140_118 temp140_115)
             (bvsle temp140_122 temp140_119)
             (bvsle temp140_126 temp140_123)
             (bvsle temp140_130 temp140_127)
             (bvsle temp140_134 temp140_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp140_135 #x0000000000000000))
(assert (= var1191735 temp140_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp140_136 #x0000000000000001))
(assert (= var1191747 temp140_136))
(assert (= temp140_137 #x0000000000000000))
(assert (= var1179826 temp140_137))
(assert (= temp140_138 #x0000000000000000))
(assert (= temp140_139 temp140_138))
(assert (= temp140_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp140_139)))
(assert (= temp140_141 #x0000000000000001))
(assert (= temp140_142 temp140_141))
(assert (= temp140_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp140_142)))
(assert (= temp140_144 #x0000000000000002))
(assert (= temp140_145 temp140_144))
(assert (= temp140_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp140_145)))
(assert (= temp140_147 #x0000000000000003))
(assert (= temp140_148 temp140_147))
(assert (= temp140_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp140_148)))
(assert (= temp140_150 #x0000000000000004))
(assert (= temp140_151 temp140_150))
(assert (= temp140_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp140_151)))
(assert (= temp140_153 #x0000000000000005))
(assert (= temp140_154 temp140_153))
(assert (= temp140_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp140_154)))
(assert (= temp140_157 var1179826))
(assert (= temp140_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp140_157)))
(assert (= temp140_156 temp140_158))
(assert (= var1191780
   (ite (bvslt temp140_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp140_159 #x0000000000000000))
(assert (= var1191780 temp140_159))
(assert (= temp140_160 #x0000000000000000))
(assert (= var1179826 temp140_160))
(assert (= temp140_162 var1179826))
(assert (= temp140_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp140_162)))
(assert (= temp140_161 temp140_163))
(assert (= var1191802 (bvsmod temp140_161 ARGNAME_groups_NAMEEND)))
(assert (= temp140_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp140_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp140_165 #x0000000000000001))
(assert (= var1191803 temp140_165))
(assert (= temp140_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp140_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp140_167 #x0000000000000001))
(assert (= var1191823 temp140_167))
(assert (= temp140_168 #x0000000000000001))
(assert (= var1180714 temp140_168))
(assert (= temp140_169 #x0000000000000000))
(assert (= temp140_170 temp140_169))
(assert (= temp140_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp140_170)))
(assert (= temp140_172 #x0000000000000001))
(assert (= temp140_173 temp140_172))
(assert (= temp140_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp140_173)))
(assert (= temp140_175 #x0000000000000002))
(assert (= temp140_176 temp140_175))
(assert (= temp140_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp140_176)))
(assert (= temp140_178 #x0000000000000003))
(assert (= temp140_179 temp140_178))
(assert (= temp140_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp140_179)))
(assert (= temp140_181 #x0000000000000004))
(assert (= temp140_182 temp140_181))
(assert (= temp140_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp140_182)))
(assert (= temp140_184 #x0000000000000005))
(assert (= temp140_185 temp140_184))
(assert (= temp140_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp140_185)))
(assert (= temp140_187 #x0000000000000000))
(assert (= temp140_188
   (ite (bvslt var1180714 temp140_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp140_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp140_188)))
(assert (= var1191831 temp140_189))
(assert (bvslt (ite (bvslt var1180714 temp140_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp140_190 #x0000000000000001))
(assert (= var1180714 temp140_190))
(assert (= temp140_192 var1180714))
(assert (= temp140_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp140_192)))
(assert (= temp140_191 temp140_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp140_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp140_194 #x0000000000000001))
(assert (= var1191836 temp140_194))
(assert (= temp140_195 #x0000000000000000))
(assert (= var1179826 temp140_195))
(assert (= temp140_197 var1179826))
(assert (= temp140_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp140_197)))
(assert (= temp140_196 temp140_198))
(assert (= temp140_199 #x0000000000000002))
(assert (= var1586025 temp140_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp140_200 #x0000000000000001))
(assert (= var1191993 temp140_200))
(assert (= temp140_201 #x0000000000000001))
(assert (= var2700303 temp140_201))
(assert (= temp140_202 #x0000000000000001))
(assert (= var2962447 temp140_202))
(assert (= temp140_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp140_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp140_204 #x0000000000000001))
(assert (= var211058 temp140_204))
(assert (= temp140_205 #x0000000000000001))
(assert (= var211188 temp140_205))
(assert (= var3879401 var211188))
(assert (= temp140_206 #x0000000000000000))
(assert (= var3866802 temp140_206))
(assert (= temp140_207 #x0000000000000000))
(assert (= temp140_208
   (ite (bvslt var3866802 temp140_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp140_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp140_208)))
(assert (= var3879420 temp140_209))
(assert (bvslt (ite (bvslt var3866802 temp140_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp140_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp140_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp140_211 #x0000000000000001))
(assert (= var3879421 temp140_211))
(assert (= temp140_212 #x0000000000000000))
(assert (= var4079423 temp140_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp140_213 #x0000000000000002))
(assert (= var4208259 temp140_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp140_214 #x0000000000000000))
(assert (= var4273820 temp140_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp140_216 #xffffffffffffffff))
(assert (= temp140_215 temp140_216))
(assert (= temp140_217 #x0000000000000001))
(assert (= var197674 temp140_217))
(assert (= temp140_218 #x0000000000000000))
(assert (= temp140_219
   (ite (bvslt var197674 temp140_218)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp140_220 (select ARGNAME_input_NAMEEND_DIMSIZE temp140_219)))
(assert (= var211595 temp140_220))
(assert (bvslt (ite (bvslt var197674 temp140_218)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp140_221 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp140_221) #x0000000000000001 #x0000000000000000)))
(assert (= temp140_222 #x0000000000000001))
(assert (= var211596 temp140_222))
(assert (= temp140_224 #xffffffffffffffff))
(assert (= temp140_223 temp140_224))
(assert (= temp140_225 #x0000000000000001))
(assert (= var211058 temp140_225))
(assert (= temp140_226 #x0000000000000000))
(assert (= var5452564 temp140_226))
(assert (= var5452531 var5452564))
(assert (= var5321095 var5452531))
(assert (= var5321091 var5321095))
(assert (= var212669 var5321091))
(assert (= temp140_227 #x0000000000000000))
(assert (= var212669 temp140_227))
(model-add temp140_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp140_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp140_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp140_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





