(declare-fun temp10946_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10946_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10946_3 () (_ BitVec 64))
(declare-fun temp10946_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10946_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10946_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10946_7 () (_ BitVec 64))
(declare-fun temp10946_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10946_9 () (_ BitVec 64))
(declare-fun temp10946_10 () (_ BitVec 64))
(declare-fun temp10946_11 () (_ BitVec 64))
(declare-fun temp10946_12 () (_ BitVec 64))
(declare-fun temp10946_13 () (_ BitVec 64))
(declare-fun temp10946_14 () (_ BitVec 64))
(declare-fun temp10946_15 () (_ BitVec 64))
(declare-fun temp10946_16 () (_ BitVec 64))
(declare-fun temp10946_17 () (_ BitVec 64))
(declare-fun temp10946_18 () (_ BitVec 64))
(declare-fun temp10946_19 () (_ BitVec 64))
(declare-fun temp10946_20 () (_ BitVec 64))
(declare-fun temp10946_21 () (_ BitVec 64))
(declare-fun temp10946_22 () (_ BitVec 64))
(declare-fun temp10946_23 () (_ BitVec 64))
(declare-fun temp10946_24 () (_ BitVec 64))
(declare-fun temp10946_25 () (_ BitVec 64))
(declare-fun temp10946_26 () (_ BitVec 64))
(declare-fun temp10946_27 () (_ BitVec 64))
(declare-fun temp10946_28 () (_ BitVec 64))
(declare-fun temp10946_29 () (_ BitVec 64))
(declare-fun temp10946_30 () (_ BitVec 64))
(declare-fun temp10946_31 () (_ BitVec 64))
(declare-fun temp10946_32 () (_ BitVec 64))
(declare-fun temp10946_33 () (_ BitVec 64))
(declare-fun temp10946_34 () (_ BitVec 64))
(declare-fun temp10946_35 () (_ BitVec 64))
(declare-fun temp10946_36 () (_ BitVec 64))
(declare-fun temp10946_37 () (_ BitVec 64))
(declare-fun temp10946_38 () (_ BitVec 64))
(declare-fun temp10946_39 () (_ BitVec 64))
(declare-fun temp10946_40 () (_ BitVec 64))
(declare-fun temp10946_41 () (_ BitVec 64))
(declare-fun temp10946_42 () (_ BitVec 64))
(declare-fun temp10946_43 () (_ BitVec 64))
(declare-fun temp10946_44 () (_ BitVec 64))
(declare-fun temp10946_45 () (_ BitVec 64))
(declare-fun temp10946_46 () (_ BitVec 64))
(declare-fun temp10946_47 () (_ BitVec 64))
(declare-fun temp10946_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10946_49 () (_ BitVec 64))
(declare-fun temp10946_50 () (_ BitVec 64))
(declare-fun temp10946_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10946_52 () (_ BitVec 64))
(declare-fun temp10946_53 () (_ BitVec 64))
(declare-fun temp10946_54 () (_ BitVec 64))
(declare-fun temp10946_55 () (_ BitVec 64))
(declare-fun temp10946_56 () (_ BitVec 64))
(declare-fun temp10946_57 () (_ BitVec 64))
(declare-fun temp10946_58 () (_ BitVec 64))
(declare-fun temp10946_59 () (_ BitVec 64))
(declare-fun temp10946_60 () (_ BitVec 64))
(declare-fun temp10946_61 () (_ BitVec 64))
(declare-fun temp10946_62 () (_ BitVec 64))
(declare-fun temp10946_63 () (_ BitVec 64))
(declare-fun temp10946_64 () (_ BitVec 64))
(declare-fun temp10946_65 () (_ BitVec 64))
(declare-fun temp10946_66 () (_ BitVec 64))
(declare-fun temp10946_67 () (_ BitVec 64))
(declare-fun temp10946_68 () (_ BitVec 64))
(declare-fun temp10946_69 () (_ BitVec 64))
(declare-fun temp10946_70 () (_ BitVec 64))
(declare-fun temp10946_71 () (_ BitVec 64))
(declare-fun temp10946_72 () (_ BitVec 64))
(declare-fun temp10946_73 () (_ BitVec 64))
(declare-fun temp10946_74 () (_ BitVec 64))
(declare-fun temp10946_75 () (_ BitVec 64))
(declare-fun temp10946_76 () (_ BitVec 64))
(declare-fun temp10946_77 () (_ BitVec 64))
(declare-fun temp10946_78 () (_ BitVec 64))
(declare-fun temp10946_79 () (_ BitVec 64))
(declare-fun temp10946_80 () (_ BitVec 64))
(declare-fun temp10946_81 () (_ BitVec 64))
(declare-fun temp10946_82 () (_ BitVec 64))
(declare-fun temp10946_83 () (_ BitVec 64))
(declare-fun temp10946_84 () (_ BitVec 64))
(declare-fun temp10946_85 () (_ BitVec 64))
(declare-fun temp10946_86 () (_ BitVec 64))
(declare-fun temp10946_87 () (_ BitVec 64))
(declare-fun temp10946_88 () (_ BitVec 64))
(declare-fun temp10946_89 () (_ BitVec 64))
(declare-fun temp10946_90 () (_ BitVec 64))
(declare-fun temp10946_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10946_92 () (_ BitVec 64))
(declare-fun temp10946_93 () (_ BitVec 64))
(declare-fun temp10946_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10946_95 () (_ BitVec 64))
(declare-fun temp10946_96 () (_ BitVec 64))
(declare-fun temp10946_97 () (_ BitVec 64))
(declare-fun temp10946_98 () (_ BitVec 64))
(declare-fun temp10946_99 () (_ BitVec 64))
(declare-fun temp10946_100 () (_ BitVec 64))
(declare-fun temp10946_101 () (_ BitVec 64))
(declare-fun temp10946_102 () (_ BitVec 64))
(declare-fun temp10946_103 () (_ BitVec 64))
(declare-fun temp10946_104 () (_ BitVec 64))
(declare-fun temp10946_105 () (_ BitVec 64))
(declare-fun temp10946_106 () (_ BitVec 64))
(declare-fun temp10946_107 () (_ BitVec 64))
(declare-fun temp10946_108 () (_ BitVec 64))
(declare-fun temp10946_109 () (_ BitVec 64))
(declare-fun temp10946_110 () (_ BitVec 64))
(declare-fun temp10946_111 () (_ BitVec 64))
(declare-fun temp10946_112 () (_ BitVec 64))
(declare-fun temp10946_113 () (_ BitVec 64))
(declare-fun temp10946_114 () (_ BitVec 64))
(declare-fun temp10946_115 () (_ BitVec 64))
(declare-fun temp10946_116 () (_ BitVec 64))
(declare-fun temp10946_117 () (_ BitVec 64))
(declare-fun temp10946_118 () (_ BitVec 64))
(declare-fun temp10946_119 () (_ BitVec 64))
(declare-fun temp10946_120 () (_ BitVec 64))
(declare-fun temp10946_121 () (_ BitVec 64))
(declare-fun temp10946_122 () (_ BitVec 64))
(declare-fun temp10946_123 () (_ BitVec 64))
(declare-fun temp10946_124 () (_ BitVec 64))
(declare-fun temp10946_125 () (_ BitVec 64))
(declare-fun temp10946_126 () (_ BitVec 64))
(declare-fun temp10946_127 () (_ BitVec 64))
(declare-fun temp10946_128 () (_ BitVec 64))
(declare-fun temp10946_129 () (_ BitVec 64))
(declare-fun temp10946_130 () (_ BitVec 64))
(declare-fun temp10946_131 () (_ BitVec 64))
(declare-fun temp10946_132 () (_ BitVec 64))
(declare-fun temp10946_133 () (_ BitVec 64))
(declare-fun temp10946_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10946_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10946_136 () (_ BitVec 64))
(declare-fun temp10946_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10946_138 () (_ BitVec 64))
(declare-fun temp10946_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10946_140 () (_ BitVec 64))
(declare-fun temp10946_141 () (_ BitVec 64))
(declare-fun temp10946_142 () (_ BitVec 64))
(declare-fun temp10946_143 () (_ BitVec 64))
(declare-fun temp10946_144 () (_ BitVec 64))
(declare-fun temp10946_145 () (_ BitVec 64))
(declare-fun temp10946_146 () (_ BitVec 64))
(declare-fun temp10946_147 () (_ BitVec 64))
(declare-fun temp10946_148 () (_ BitVec 64))
(declare-fun temp10946_149 () (_ BitVec 64))
(declare-fun temp10946_150 () (_ BitVec 64))
(declare-fun temp10946_151 () (_ BitVec 64))
(declare-fun temp10946_152 () (_ BitVec 64))
(declare-fun temp10946_153 () (_ BitVec 64))
(declare-fun temp10946_154 () (_ BitVec 64))
(declare-fun temp10946_155 () (_ BitVec 64))
(declare-fun temp10946_157 () (_ BitVec 64))
(declare-fun temp10946_158 () (_ BitVec 64))
(declare-fun temp10946_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10946_159 () (_ BitVec 64))
(declare-fun temp10946_160 () (_ BitVec 64))
(declare-fun temp10946_162 () (_ BitVec 64))
(declare-fun temp10946_163 () (_ BitVec 64))
(declare-fun temp10946_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10946_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10946_165 () (_ BitVec 64))
(declare-fun temp10946_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10946_167 () (_ BitVec 64))
(declare-fun temp10946_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10946_169 () (_ BitVec 64))
(declare-fun temp10946_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10946_171 () (_ BitVec 64))
(declare-fun temp10946_172 () (_ BitVec 64))
(declare-fun temp10946_173 () (_ BitVec 64))
(declare-fun temp10946_174 () (_ BitVec 64))
(declare-fun temp10946_175 () (_ BitVec 64))
(declare-fun temp10946_176 () (_ BitVec 64))
(declare-fun temp10946_177 () (_ BitVec 64))
(declare-fun temp10946_178 () (_ BitVec 64))
(declare-fun temp10946_179 () (_ BitVec 64))
(declare-fun temp10946_180 () (_ BitVec 64))
(declare-fun temp10946_181 () (_ BitVec 64))
(declare-fun temp10946_182 () (_ BitVec 64))
(declare-fun temp10946_183 () (_ BitVec 64))
(declare-fun temp10946_184 () (_ BitVec 64))
(declare-fun temp10946_185 () (_ BitVec 64))
(declare-fun temp10946_186 () (_ BitVec 64))
(declare-fun temp10946_187 () (_ BitVec 64))
(declare-fun temp10946_188 () (_ BitVec 64))
(declare-fun temp10946_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10946_190 () (_ BitVec 64))
(declare-fun temp10946_192 () (_ BitVec 64))
(declare-fun temp10946_193 () (_ BitVec 64))
(declare-fun temp10946_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10946_194 () (_ BitVec 64))
(declare-fun temp10946_195 () (_ BitVec 64))
(declare-fun temp10946_197 () (_ BitVec 64))
(declare-fun temp10946_198 () (_ BitVec 64))
(declare-fun temp10946_196 () (_ BitVec 64))
(declare-fun temp10946_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10946_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10946_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10946_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10946_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10946_204 () (_ BitVec 64))
(declare-fun temp10946_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10946_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10946_207 () (_ BitVec 64))
(declare-fun temp10946_208 () (_ BitVec 64))
(declare-fun temp10946_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10946_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10946_211 () (_ BitVec 64))
(declare-fun temp10946_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10946_213 () (_ BitVec 64))
(declare-fun temp10946_214 () (_ BitVec 64))
(declare-fun temp10946_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10946_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10946_217 () (_ BitVec 64))
(declare-fun temp10946_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10946_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10946_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var5058960 () (_ BitVec 64))
(declare-fun var5321104 () (_ BitVec 64))
(declare-fun temp10946_221 () (_ BitVec 64))
(declare-fun var5648784 () (_ BitVec 64))
(declare-fun temp10946_222 () (_ BitVec 64))
(assert (= temp10946_1 #x0000000000000001))
(assert (= var77203 temp10946_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10946_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10946_2)))
(assert (= temp10946_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10946_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10946_4 #x0000000000000000))
(assert (= var210941 temp10946_4))
(assert (= temp10946_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10946_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10946_6 #x0000000000000000))
(assert (= var210986 temp10946_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10946_7 #x0000000000000000))
(assert (= temp10946_8 temp10946_7))
(assert (= temp10946_9 (select ARGNAME_padding_NAMEEND_VAL temp10946_8)))
(assert (= temp10946_10 #x0000000000000001))
(assert (= temp10946_11 temp10946_10))
(assert (= temp10946_12 (select ARGNAME_padding_NAMEEND_VAL temp10946_11)))
(assert (= temp10946_13 #x0000000000000002))
(assert (= temp10946_14 temp10946_13))
(assert (= temp10946_15 (select ARGNAME_padding_NAMEEND_VAL temp10946_14)))
(assert (= temp10946_16 #x0000000000000003))
(assert (= temp10946_17 temp10946_16))
(assert (= temp10946_18 (select ARGNAME_padding_NAMEEND_VAL temp10946_17)))
(assert (= temp10946_19 #x0000000000000004))
(assert (= temp10946_20 temp10946_19))
(assert (= temp10946_21 (select ARGNAME_padding_NAMEEND_VAL temp10946_20)))
(assert (= temp10946_22 #x0000000000000005))
(assert (= temp10946_23 temp10946_22))
(assert (= temp10946_24 (select ARGNAME_padding_NAMEEND_VAL temp10946_23)))
(assert (= temp10946_25 #x0000000000000000))
(assert (= temp10946_26 #x0000000000000000))
(assert (= temp10946_27 temp10946_26))
(assert (= temp10946_28 (select ARGNAME_padding_NAMEEND_VAL temp10946_27)))
(assert (= temp10946_29 #x0000000000000000))
(assert (= temp10946_30 #x0000000000000001))
(assert (= temp10946_31 temp10946_30))
(assert (= temp10946_32 (select ARGNAME_padding_NAMEEND_VAL temp10946_31)))
(assert (= temp10946_33 #x0000000000000000))
(assert (= temp10946_34 #x0000000000000002))
(assert (= temp10946_35 temp10946_34))
(assert (= temp10946_36 (select ARGNAME_padding_NAMEEND_VAL temp10946_35)))
(assert (= temp10946_37 #x0000000000000000))
(assert (= temp10946_38 #x0000000000000003))
(assert (= temp10946_39 temp10946_38))
(assert (= temp10946_40 (select ARGNAME_padding_NAMEEND_VAL temp10946_39)))
(assert (= temp10946_41 #x0000000000000000))
(assert (= temp10946_42 #x0000000000000004))
(assert (= temp10946_43 temp10946_42))
(assert (= temp10946_44 (select ARGNAME_padding_NAMEEND_VAL temp10946_43)))
(assert (= temp10946_45 #x0000000000000000))
(assert (= temp10946_46 #x0000000000000005))
(assert (= temp10946_47 temp10946_46))
(assert (= temp10946_48 (select ARGNAME_padding_NAMEEND_VAL temp10946_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10946_28 temp10946_25)
             (bvslt temp10946_32 temp10946_29)
             (bvslt temp10946_36 temp10946_33)
             (bvslt temp10946_40 temp10946_37)
             (bvslt temp10946_44 temp10946_41)
             (bvslt temp10946_48 temp10946_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10946_49 #x0000000000000000))
(assert (= var1191714 temp10946_49))
(assert (= temp10946_50 #x0000000000000000))
(assert (= temp10946_51 temp10946_50))
(assert (= temp10946_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10946_51)))
(assert (= temp10946_53 #x0000000000000001))
(assert (= temp10946_54 temp10946_53))
(assert (= temp10946_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10946_54)))
(assert (= temp10946_56 #x0000000000000002))
(assert (= temp10946_57 temp10946_56))
(assert (= temp10946_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10946_57)))
(assert (= temp10946_59 #x0000000000000003))
(assert (= temp10946_60 temp10946_59))
(assert (= temp10946_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10946_60)))
(assert (= temp10946_62 #x0000000000000004))
(assert (= temp10946_63 temp10946_62))
(assert (= temp10946_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10946_63)))
(assert (= temp10946_65 #x0000000000000005))
(assert (= temp10946_66 temp10946_65))
(assert (= temp10946_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10946_66)))
(assert (= temp10946_68 #x0000000000000000))
(assert (= temp10946_69 #x0000000000000000))
(assert (= temp10946_70 temp10946_69))
(assert (= temp10946_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10946_70)))
(assert (= temp10946_72 #x0000000000000000))
(assert (= temp10946_73 #x0000000000000001))
(assert (= temp10946_74 temp10946_73))
(assert (= temp10946_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10946_74)))
(assert (= temp10946_76 #x0000000000000000))
(assert (= temp10946_77 #x0000000000000002))
(assert (= temp10946_78 temp10946_77))
(assert (= temp10946_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10946_78)))
(assert (= temp10946_80 #x0000000000000000))
(assert (= temp10946_81 #x0000000000000003))
(assert (= temp10946_82 temp10946_81))
(assert (= temp10946_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10946_82)))
(assert (= temp10946_84 #x0000000000000000))
(assert (= temp10946_85 #x0000000000000004))
(assert (= temp10946_86 temp10946_85))
(assert (= temp10946_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10946_86)))
(assert (= temp10946_88 #x0000000000000000))
(assert (= temp10946_89 #x0000000000000005))
(assert (= temp10946_90 temp10946_89))
(assert (= temp10946_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10946_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10946_71 temp10946_68)
             (bvslt temp10946_75 temp10946_72)
             (bvslt temp10946_79 temp10946_76)
             (bvslt temp10946_83 temp10946_80)
             (bvslt temp10946_87 temp10946_84)
             (bvslt temp10946_91 temp10946_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10946_92 #x0000000000000000))
(assert (= var1191725 temp10946_92))
(assert (= temp10946_93 #x0000000000000000))
(assert (= temp10946_94 temp10946_93))
(assert (= temp10946_95 (select ARGNAME_stride_NAMEEND_VAL temp10946_94)))
(assert (= temp10946_96 #x0000000000000001))
(assert (= temp10946_97 temp10946_96))
(assert (= temp10946_98 (select ARGNAME_stride_NAMEEND_VAL temp10946_97)))
(assert (= temp10946_99 #x0000000000000002))
(assert (= temp10946_100 temp10946_99))
(assert (= temp10946_101 (select ARGNAME_stride_NAMEEND_VAL temp10946_100)))
(assert (= temp10946_102 #x0000000000000003))
(assert (= temp10946_103 temp10946_102))
(assert (= temp10946_104 (select ARGNAME_stride_NAMEEND_VAL temp10946_103)))
(assert (= temp10946_105 #x0000000000000004))
(assert (= temp10946_106 temp10946_105))
(assert (= temp10946_107 (select ARGNAME_stride_NAMEEND_VAL temp10946_106)))
(assert (= temp10946_108 #x0000000000000005))
(assert (= temp10946_109 temp10946_108))
(assert (= temp10946_110 (select ARGNAME_stride_NAMEEND_VAL temp10946_109)))
(assert (= temp10946_111 #x0000000000000000))
(assert (= temp10946_112 #x0000000000000000))
(assert (= temp10946_113 temp10946_112))
(assert (= temp10946_114 (select ARGNAME_stride_NAMEEND_VAL temp10946_113)))
(assert (= temp10946_115 #x0000000000000000))
(assert (= temp10946_116 #x0000000000000001))
(assert (= temp10946_117 temp10946_116))
(assert (= temp10946_118 (select ARGNAME_stride_NAMEEND_VAL temp10946_117)))
(assert (= temp10946_119 #x0000000000000000))
(assert (= temp10946_120 #x0000000000000002))
(assert (= temp10946_121 temp10946_120))
(assert (= temp10946_122 (select ARGNAME_stride_NAMEEND_VAL temp10946_121)))
(assert (= temp10946_123 #x0000000000000000))
(assert (= temp10946_124 #x0000000000000003))
(assert (= temp10946_125 temp10946_124))
(assert (= temp10946_126 (select ARGNAME_stride_NAMEEND_VAL temp10946_125)))
(assert (= temp10946_127 #x0000000000000000))
(assert (= temp10946_128 #x0000000000000004))
(assert (= temp10946_129 temp10946_128))
(assert (= temp10946_130 (select ARGNAME_stride_NAMEEND_VAL temp10946_129)))
(assert (= temp10946_131 #x0000000000000000))
(assert (= temp10946_132 #x0000000000000005))
(assert (= temp10946_133 temp10946_132))
(assert (= temp10946_134 (select ARGNAME_stride_NAMEEND_VAL temp10946_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10946_114 temp10946_111)
             (bvsle temp10946_118 temp10946_115)
             (bvsle temp10946_122 temp10946_119)
             (bvsle temp10946_126 temp10946_123)
             (bvsle temp10946_130 temp10946_127)
             (bvsle temp10946_134 temp10946_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10946_135 #x0000000000000000))
(assert (= var1191735 temp10946_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10946_136 #x0000000000000001))
(assert (= var1191747 temp10946_136))
(assert (= temp10946_137 #x0000000000000000))
(assert (= var1179826 temp10946_137))
(assert (= temp10946_138 #x0000000000000000))
(assert (= temp10946_139 temp10946_138))
(assert (= temp10946_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10946_139)))
(assert (= temp10946_141 #x0000000000000001))
(assert (= temp10946_142 temp10946_141))
(assert (= temp10946_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10946_142)))
(assert (= temp10946_144 #x0000000000000002))
(assert (= temp10946_145 temp10946_144))
(assert (= temp10946_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10946_145)))
(assert (= temp10946_147 #x0000000000000003))
(assert (= temp10946_148 temp10946_147))
(assert (= temp10946_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10946_148)))
(assert (= temp10946_150 #x0000000000000004))
(assert (= temp10946_151 temp10946_150))
(assert (= temp10946_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10946_151)))
(assert (= temp10946_153 #x0000000000000005))
(assert (= temp10946_154 temp10946_153))
(assert (= temp10946_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10946_154)))
(assert (= temp10946_157 var1179826))
(assert (= temp10946_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10946_157)))
(assert (= temp10946_156 temp10946_158))
(assert (= var1191780
   (ite (bvslt temp10946_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10946_159 #x0000000000000000))
(assert (= var1191780 temp10946_159))
(assert (= temp10946_160 #x0000000000000000))
(assert (= var1179826 temp10946_160))
(assert (= temp10946_162 var1179826))
(assert (= temp10946_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10946_162)))
(assert (= temp10946_161 temp10946_163))
(assert (= var1191802 (bvsmod temp10946_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10946_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10946_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10946_165 #x0000000000000001))
(assert (= var1191803 temp10946_165))
(assert (= temp10946_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10946_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10946_167 #x0000000000000001))
(assert (= var1191823 temp10946_167))
(assert (= temp10946_168 #x0000000000000001))
(assert (= var1180714 temp10946_168))
(assert (= temp10946_169 #x0000000000000000))
(assert (= temp10946_170 temp10946_169))
(assert (= temp10946_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10946_170)))
(assert (= temp10946_172 #x0000000000000001))
(assert (= temp10946_173 temp10946_172))
(assert (= temp10946_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10946_173)))
(assert (= temp10946_175 #x0000000000000002))
(assert (= temp10946_176 temp10946_175))
(assert (= temp10946_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10946_176)))
(assert (= temp10946_178 #x0000000000000003))
(assert (= temp10946_179 temp10946_178))
(assert (= temp10946_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10946_179)))
(assert (= temp10946_181 #x0000000000000004))
(assert (= temp10946_182 temp10946_181))
(assert (= temp10946_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10946_182)))
(assert (= temp10946_184 #x0000000000000005))
(assert (= temp10946_185 temp10946_184))
(assert (= temp10946_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10946_185)))
(assert (= temp10946_187 #x0000000000000000))
(assert (= temp10946_188
   (ite (bvslt var1180714 temp10946_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10946_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10946_188)))
(assert (= var1191831 temp10946_189))
(assert (bvslt (ite (bvslt var1180714 temp10946_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10946_190 #x0000000000000001))
(assert (= var1180714 temp10946_190))
(assert (= temp10946_192 var1180714))
(assert (= temp10946_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10946_192)))
(assert (= temp10946_191 temp10946_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10946_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10946_194 #x0000000000000001))
(assert (= var1191836 temp10946_194))
(assert (= temp10946_195 #x0000000000000000))
(assert (= var1179826 temp10946_195))
(assert (= temp10946_197 var1179826))
(assert (= temp10946_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10946_197)))
(assert (= temp10946_196 temp10946_198))
(assert (= temp10946_199 #x0000000000000002))
(assert (= var1586025 temp10946_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10946_200 #x0000000000000001))
(assert (= var1191993 temp10946_200))
(assert (= temp10946_201 #x0000000000000001))
(assert (= var2700303 temp10946_201))
(assert (= temp10946_202 #x0000000000000001))
(assert (= var2962447 temp10946_202))
(assert (= temp10946_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10946_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10946_204 #x0000000000000001))
(assert (= var211058 temp10946_204))
(assert (= temp10946_205 #x0000000000000001))
(assert (= var211188 temp10946_205))
(assert (= var3879401 var211188))
(assert (= temp10946_206 #x0000000000000000))
(assert (= var3866802 temp10946_206))
(assert (= temp10946_207 #x0000000000000000))
(assert (= temp10946_208
   (ite (bvslt var3866802 temp10946_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10946_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10946_208)))
(assert (= var3879420 temp10946_209))
(assert (bvslt (ite (bvslt var3866802 temp10946_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10946_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10946_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10946_211 #x0000000000000000))
(assert (= var3879421 temp10946_211))
(assert (= temp10946_212 #x0000000000000001))
(assert (= var3867690 temp10946_212))
(assert (= temp10946_213 #x0000000000000000))
(assert (= temp10946_214
   (ite (bvslt var3867690 temp10946_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10946_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10946_214)))
(assert (= var3879423 temp10946_215))
(assert (bvslt (ite (bvslt var3867690 temp10946_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10946_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10946_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10946_217 #x0000000000000001))
(assert (= var3879424 temp10946_217))
(assert (= temp10946_218 #x0000000000000000))
(assert (= var4133117 temp10946_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10946_219 #x0000000000000002))
(assert (= var4339331 temp10946_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10946_220 #x0000000000000000))
(assert (= var4404892 temp10946_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var5058960 var211201))
(assert (= var5321104 var211201))
(assert (= temp10946_221 #x0000000000000000))
(assert (= var5648784 temp10946_221))
(assert (= temp10946_222 #x0000000000000001))
(assert (= var211058 temp10946_222))
(model-add temp10946_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10946_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10946_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10946_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




