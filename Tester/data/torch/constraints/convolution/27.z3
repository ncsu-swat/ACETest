(declare-fun temp36_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp36_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp36_3 () (_ BitVec 64))
(declare-fun temp36_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp36_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp36_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp36_7 () (_ BitVec 64))
(declare-fun temp36_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp36_9 () (_ BitVec 64))
(declare-fun temp36_10 () (_ BitVec 64))
(declare-fun temp36_11 () (_ BitVec 64))
(declare-fun temp36_12 () (_ BitVec 64))
(declare-fun temp36_13 () (_ BitVec 64))
(declare-fun temp36_14 () (_ BitVec 64))
(declare-fun temp36_15 () (_ BitVec 64))
(declare-fun temp36_16 () (_ BitVec 64))
(declare-fun temp36_17 () (_ BitVec 64))
(declare-fun temp36_18 () (_ BitVec 64))
(declare-fun temp36_19 () (_ BitVec 64))
(declare-fun temp36_20 () (_ BitVec 64))
(declare-fun temp36_21 () (_ BitVec 64))
(declare-fun temp36_22 () (_ BitVec 64))
(declare-fun temp36_23 () (_ BitVec 64))
(declare-fun temp36_24 () (_ BitVec 64))
(declare-fun temp36_25 () (_ BitVec 64))
(declare-fun temp36_26 () (_ BitVec 64))
(declare-fun temp36_27 () (_ BitVec 64))
(declare-fun temp36_28 () (_ BitVec 64))
(declare-fun temp36_29 () (_ BitVec 64))
(declare-fun temp36_30 () (_ BitVec 64))
(declare-fun temp36_31 () (_ BitVec 64))
(declare-fun temp36_32 () (_ BitVec 64))
(declare-fun temp36_33 () (_ BitVec 64))
(declare-fun temp36_34 () (_ BitVec 64))
(declare-fun temp36_35 () (_ BitVec 64))
(declare-fun temp36_36 () (_ BitVec 64))
(declare-fun temp36_37 () (_ BitVec 64))
(declare-fun temp36_38 () (_ BitVec 64))
(declare-fun temp36_39 () (_ BitVec 64))
(declare-fun temp36_40 () (_ BitVec 64))
(declare-fun temp36_41 () (_ BitVec 64))
(declare-fun temp36_42 () (_ BitVec 64))
(declare-fun temp36_43 () (_ BitVec 64))
(declare-fun temp36_44 () (_ BitVec 64))
(declare-fun temp36_45 () (_ BitVec 64))
(declare-fun temp36_46 () (_ BitVec 64))
(declare-fun temp36_47 () (_ BitVec 64))
(declare-fun temp36_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp36_49 () (_ BitVec 64))
(declare-fun temp36_50 () (_ BitVec 64))
(declare-fun temp36_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp36_52 () (_ BitVec 64))
(declare-fun temp36_53 () (_ BitVec 64))
(declare-fun temp36_54 () (_ BitVec 64))
(declare-fun temp36_55 () (_ BitVec 64))
(declare-fun temp36_56 () (_ BitVec 64))
(declare-fun temp36_57 () (_ BitVec 64))
(declare-fun temp36_58 () (_ BitVec 64))
(declare-fun temp36_59 () (_ BitVec 64))
(declare-fun temp36_60 () (_ BitVec 64))
(declare-fun temp36_61 () (_ BitVec 64))
(declare-fun temp36_62 () (_ BitVec 64))
(declare-fun temp36_63 () (_ BitVec 64))
(declare-fun temp36_64 () (_ BitVec 64))
(declare-fun temp36_65 () (_ BitVec 64))
(declare-fun temp36_66 () (_ BitVec 64))
(declare-fun temp36_67 () (_ BitVec 64))
(declare-fun temp36_68 () (_ BitVec 64))
(declare-fun temp36_69 () (_ BitVec 64))
(declare-fun temp36_70 () (_ BitVec 64))
(declare-fun temp36_71 () (_ BitVec 64))
(declare-fun temp36_72 () (_ BitVec 64))
(declare-fun temp36_73 () (_ BitVec 64))
(declare-fun temp36_74 () (_ BitVec 64))
(declare-fun temp36_75 () (_ BitVec 64))
(declare-fun temp36_76 () (_ BitVec 64))
(declare-fun temp36_77 () (_ BitVec 64))
(declare-fun temp36_78 () (_ BitVec 64))
(declare-fun temp36_79 () (_ BitVec 64))
(declare-fun temp36_80 () (_ BitVec 64))
(declare-fun temp36_81 () (_ BitVec 64))
(declare-fun temp36_82 () (_ BitVec 64))
(declare-fun temp36_83 () (_ BitVec 64))
(declare-fun temp36_84 () (_ BitVec 64))
(declare-fun temp36_85 () (_ BitVec 64))
(declare-fun temp36_86 () (_ BitVec 64))
(declare-fun temp36_87 () (_ BitVec 64))
(declare-fun temp36_88 () (_ BitVec 64))
(declare-fun temp36_89 () (_ BitVec 64))
(declare-fun temp36_90 () (_ BitVec 64))
(declare-fun temp36_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp36_92 () (_ BitVec 64))
(declare-fun temp36_93 () (_ BitVec 64))
(declare-fun temp36_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp36_95 () (_ BitVec 64))
(declare-fun temp36_96 () (_ BitVec 64))
(declare-fun temp36_97 () (_ BitVec 64))
(declare-fun temp36_98 () (_ BitVec 64))
(declare-fun temp36_99 () (_ BitVec 64))
(declare-fun temp36_100 () (_ BitVec 64))
(declare-fun temp36_101 () (_ BitVec 64))
(declare-fun temp36_102 () (_ BitVec 64))
(declare-fun temp36_103 () (_ BitVec 64))
(declare-fun temp36_104 () (_ BitVec 64))
(declare-fun temp36_105 () (_ BitVec 64))
(declare-fun temp36_106 () (_ BitVec 64))
(declare-fun temp36_107 () (_ BitVec 64))
(declare-fun temp36_108 () (_ BitVec 64))
(declare-fun temp36_109 () (_ BitVec 64))
(declare-fun temp36_110 () (_ BitVec 64))
(declare-fun temp36_111 () (_ BitVec 64))
(declare-fun temp36_112 () (_ BitVec 64))
(declare-fun temp36_113 () (_ BitVec 64))
(declare-fun temp36_114 () (_ BitVec 64))
(declare-fun temp36_115 () (_ BitVec 64))
(declare-fun temp36_116 () (_ BitVec 64))
(declare-fun temp36_117 () (_ BitVec 64))
(declare-fun temp36_118 () (_ BitVec 64))
(declare-fun temp36_119 () (_ BitVec 64))
(declare-fun temp36_120 () (_ BitVec 64))
(declare-fun temp36_121 () (_ BitVec 64))
(declare-fun temp36_122 () (_ BitVec 64))
(declare-fun temp36_123 () (_ BitVec 64))
(declare-fun temp36_124 () (_ BitVec 64))
(declare-fun temp36_125 () (_ BitVec 64))
(declare-fun temp36_126 () (_ BitVec 64))
(declare-fun temp36_127 () (_ BitVec 64))
(declare-fun temp36_128 () (_ BitVec 64))
(declare-fun temp36_129 () (_ BitVec 64))
(declare-fun temp36_130 () (_ BitVec 64))
(declare-fun temp36_131 () (_ BitVec 64))
(declare-fun temp36_132 () (_ BitVec 64))
(declare-fun temp36_133 () (_ BitVec 64))
(declare-fun temp36_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp36_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp36_136 () (_ BitVec 64))
(declare-fun temp36_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp36_138 () (_ BitVec 64))
(declare-fun temp36_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp36_140 () (_ BitVec 64))
(declare-fun temp36_141 () (_ BitVec 64))
(declare-fun temp36_142 () (_ BitVec 64))
(declare-fun temp36_143 () (_ BitVec 64))
(declare-fun temp36_144 () (_ BitVec 64))
(declare-fun temp36_145 () (_ BitVec 64))
(declare-fun temp36_146 () (_ BitVec 64))
(declare-fun temp36_147 () (_ BitVec 64))
(declare-fun temp36_148 () (_ BitVec 64))
(declare-fun temp36_149 () (_ BitVec 64))
(declare-fun temp36_150 () (_ BitVec 64))
(declare-fun temp36_151 () (_ BitVec 64))
(declare-fun temp36_152 () (_ BitVec 64))
(declare-fun temp36_153 () (_ BitVec 64))
(declare-fun temp36_154 () (_ BitVec 64))
(declare-fun temp36_155 () (_ BitVec 64))
(declare-fun temp36_157 () (_ BitVec 64))
(declare-fun temp36_158 () (_ BitVec 64))
(declare-fun temp36_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp36_159 () (_ BitVec 64))
(declare-fun temp36_160 () (_ BitVec 64))
(declare-fun temp36_162 () (_ BitVec 64))
(declare-fun temp36_163 () (_ BitVec 64))
(declare-fun temp36_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp36_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp36_165 () (_ BitVec 64))
(declare-fun temp36_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp36_167 () (_ BitVec 64))
(declare-fun temp36_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp36_169 () (_ BitVec 64))
(declare-fun temp36_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp36_171 () (_ BitVec 64))
(declare-fun temp36_172 () (_ BitVec 64))
(declare-fun temp36_173 () (_ BitVec 64))
(declare-fun temp36_174 () (_ BitVec 64))
(declare-fun temp36_175 () (_ BitVec 64))
(declare-fun temp36_176 () (_ BitVec 64))
(declare-fun temp36_177 () (_ BitVec 64))
(declare-fun temp36_178 () (_ BitVec 64))
(declare-fun temp36_179 () (_ BitVec 64))
(declare-fun temp36_180 () (_ BitVec 64))
(declare-fun temp36_181 () (_ BitVec 64))
(declare-fun temp36_182 () (_ BitVec 64))
(declare-fun temp36_183 () (_ BitVec 64))
(declare-fun temp36_184 () (_ BitVec 64))
(declare-fun temp36_185 () (_ BitVec 64))
(declare-fun temp36_186 () (_ BitVec 64))
(declare-fun temp36_187 () (_ BitVec 64))
(declare-fun temp36_188 () (_ BitVec 64))
(declare-fun temp36_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp36_190 () (_ BitVec 64))
(declare-fun temp36_192 () (_ BitVec 64))
(declare-fun temp36_193 () (_ BitVec 64))
(declare-fun temp36_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp36_194 () (_ BitVec 64))
(declare-fun temp36_195 () (_ BitVec 64))
(declare-fun temp36_197 () (_ BitVec 64))
(declare-fun temp36_198 () (_ BitVec 64))
(declare-fun temp36_196 () (_ BitVec 64))
(declare-fun temp36_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp36_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp36_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp36_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp36_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp36_204 () (_ BitVec 64))
(declare-fun temp36_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp36_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp36_207 () (_ BitVec 64))
(declare-fun temp36_208 () (_ BitVec 64))
(declare-fun temp36_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp36_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp36_211 () (_ BitVec 64))
(declare-fun temp36_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp36_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp36_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4993424 () (_ BitVec 64))
(declare-fun var211388 () (_ BitVec 64))
(declare-fun temp36_215 () (_ BitVec 64))
(declare-fun var211389 () (_ BitVec 64))
(declare-fun var5914445 () (_ BitVec 64))
(declare-fun temp36_217 () (_ BitVec 64))
(declare-fun temp36_216 () (_ BitVec 64))
(declare-fun temp36_218 () (_ BitVec 64))
(declare-fun var6753770 () (_ BitVec 64))
(declare-fun temp36_220 () (_ BitVec 64))
(declare-fun temp36_219 () (_ BitVec 64))
(declare-fun temp36_221 () (_ BitVec 64))
(declare-fun temp36_222 () (_ BitVec 64))
(declare-fun var7484180 () (_ BitVec 64))
(declare-fun var7484147 () (_ BitVec 64))
(declare-fun var7352711 () (_ BitVec 64))
(declare-fun var7352707 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp36_223 () (_ BitVec 64))
(assert (= temp36_1 #x0000000000000001))
(assert (= var77203 temp36_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp36_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp36_2)))
(assert (= temp36_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp36_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp36_4 #x0000000000000000))
(assert (= var210941 temp36_4))
(assert (= temp36_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp36_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp36_6 #x0000000000000000))
(assert (= var210986 temp36_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp36_7 #x0000000000000000))
(assert (= temp36_8 temp36_7))
(assert (= temp36_9 (select ARGNAME_padding_NAMEEND_VAL temp36_8)))
(assert (= temp36_10 #x0000000000000001))
(assert (= temp36_11 temp36_10))
(assert (= temp36_12 (select ARGNAME_padding_NAMEEND_VAL temp36_11)))
(assert (= temp36_13 #x0000000000000002))
(assert (= temp36_14 temp36_13))
(assert (= temp36_15 (select ARGNAME_padding_NAMEEND_VAL temp36_14)))
(assert (= temp36_16 #x0000000000000003))
(assert (= temp36_17 temp36_16))
(assert (= temp36_18 (select ARGNAME_padding_NAMEEND_VAL temp36_17)))
(assert (= temp36_19 #x0000000000000004))
(assert (= temp36_20 temp36_19))
(assert (= temp36_21 (select ARGNAME_padding_NAMEEND_VAL temp36_20)))
(assert (= temp36_22 #x0000000000000005))
(assert (= temp36_23 temp36_22))
(assert (= temp36_24 (select ARGNAME_padding_NAMEEND_VAL temp36_23)))
(assert (= temp36_25 #x0000000000000000))
(assert (= temp36_26 #x0000000000000000))
(assert (= temp36_27 temp36_26))
(assert (= temp36_28 (select ARGNAME_padding_NAMEEND_VAL temp36_27)))
(assert (= temp36_29 #x0000000000000000))
(assert (= temp36_30 #x0000000000000001))
(assert (= temp36_31 temp36_30))
(assert (= temp36_32 (select ARGNAME_padding_NAMEEND_VAL temp36_31)))
(assert (= temp36_33 #x0000000000000000))
(assert (= temp36_34 #x0000000000000002))
(assert (= temp36_35 temp36_34))
(assert (= temp36_36 (select ARGNAME_padding_NAMEEND_VAL temp36_35)))
(assert (= temp36_37 #x0000000000000000))
(assert (= temp36_38 #x0000000000000003))
(assert (= temp36_39 temp36_38))
(assert (= temp36_40 (select ARGNAME_padding_NAMEEND_VAL temp36_39)))
(assert (= temp36_41 #x0000000000000000))
(assert (= temp36_42 #x0000000000000004))
(assert (= temp36_43 temp36_42))
(assert (= temp36_44 (select ARGNAME_padding_NAMEEND_VAL temp36_43)))
(assert (= temp36_45 #x0000000000000000))
(assert (= temp36_46 #x0000000000000005))
(assert (= temp36_47 temp36_46))
(assert (= temp36_48 (select ARGNAME_padding_NAMEEND_VAL temp36_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp36_28 temp36_25)
             (bvslt temp36_32 temp36_29)
             (bvslt temp36_36 temp36_33)
             (bvslt temp36_40 temp36_37)
             (bvslt temp36_44 temp36_41)
             (bvslt temp36_48 temp36_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp36_49 #x0000000000000000))
(assert (= var1191714 temp36_49))
(assert (= temp36_50 #x0000000000000000))
(assert (= temp36_51 temp36_50))
(assert (= temp36_52 (select ARGNAME_output_padding_NAMEEND_VAL temp36_51)))
(assert (= temp36_53 #x0000000000000001))
(assert (= temp36_54 temp36_53))
(assert (= temp36_55 (select ARGNAME_output_padding_NAMEEND_VAL temp36_54)))
(assert (= temp36_56 #x0000000000000002))
(assert (= temp36_57 temp36_56))
(assert (= temp36_58 (select ARGNAME_output_padding_NAMEEND_VAL temp36_57)))
(assert (= temp36_59 #x0000000000000003))
(assert (= temp36_60 temp36_59))
(assert (= temp36_61 (select ARGNAME_output_padding_NAMEEND_VAL temp36_60)))
(assert (= temp36_62 #x0000000000000004))
(assert (= temp36_63 temp36_62))
(assert (= temp36_64 (select ARGNAME_output_padding_NAMEEND_VAL temp36_63)))
(assert (= temp36_65 #x0000000000000005))
(assert (= temp36_66 temp36_65))
(assert (= temp36_67 (select ARGNAME_output_padding_NAMEEND_VAL temp36_66)))
(assert (= temp36_68 #x0000000000000000))
(assert (= temp36_69 #x0000000000000000))
(assert (= temp36_70 temp36_69))
(assert (= temp36_71 (select ARGNAME_output_padding_NAMEEND_VAL temp36_70)))
(assert (= temp36_72 #x0000000000000000))
(assert (= temp36_73 #x0000000000000001))
(assert (= temp36_74 temp36_73))
(assert (= temp36_75 (select ARGNAME_output_padding_NAMEEND_VAL temp36_74)))
(assert (= temp36_76 #x0000000000000000))
(assert (= temp36_77 #x0000000000000002))
(assert (= temp36_78 temp36_77))
(assert (= temp36_79 (select ARGNAME_output_padding_NAMEEND_VAL temp36_78)))
(assert (= temp36_80 #x0000000000000000))
(assert (= temp36_81 #x0000000000000003))
(assert (= temp36_82 temp36_81))
(assert (= temp36_83 (select ARGNAME_output_padding_NAMEEND_VAL temp36_82)))
(assert (= temp36_84 #x0000000000000000))
(assert (= temp36_85 #x0000000000000004))
(assert (= temp36_86 temp36_85))
(assert (= temp36_87 (select ARGNAME_output_padding_NAMEEND_VAL temp36_86)))
(assert (= temp36_88 #x0000000000000000))
(assert (= temp36_89 #x0000000000000005))
(assert (= temp36_90 temp36_89))
(assert (= temp36_91 (select ARGNAME_output_padding_NAMEEND_VAL temp36_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp36_71 temp36_68)
             (bvslt temp36_75 temp36_72)
             (bvslt temp36_79 temp36_76)
             (bvslt temp36_83 temp36_80)
             (bvslt temp36_87 temp36_84)
             (bvslt temp36_91 temp36_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp36_92 #x0000000000000000))
(assert (= var1191725 temp36_92))
(assert (= temp36_93 #x0000000000000000))
(assert (= temp36_94 temp36_93))
(assert (= temp36_95 (select ARGNAME_stride_NAMEEND_VAL temp36_94)))
(assert (= temp36_96 #x0000000000000001))
(assert (= temp36_97 temp36_96))
(assert (= temp36_98 (select ARGNAME_stride_NAMEEND_VAL temp36_97)))
(assert (= temp36_99 #x0000000000000002))
(assert (= temp36_100 temp36_99))
(assert (= temp36_101 (select ARGNAME_stride_NAMEEND_VAL temp36_100)))
(assert (= temp36_102 #x0000000000000003))
(assert (= temp36_103 temp36_102))
(assert (= temp36_104 (select ARGNAME_stride_NAMEEND_VAL temp36_103)))
(assert (= temp36_105 #x0000000000000004))
(assert (= temp36_106 temp36_105))
(assert (= temp36_107 (select ARGNAME_stride_NAMEEND_VAL temp36_106)))
(assert (= temp36_108 #x0000000000000005))
(assert (= temp36_109 temp36_108))
(assert (= temp36_110 (select ARGNAME_stride_NAMEEND_VAL temp36_109)))
(assert (= temp36_111 #x0000000000000000))
(assert (= temp36_112 #x0000000000000000))
(assert (= temp36_113 temp36_112))
(assert (= temp36_114 (select ARGNAME_stride_NAMEEND_VAL temp36_113)))
(assert (= temp36_115 #x0000000000000000))
(assert (= temp36_116 #x0000000000000001))
(assert (= temp36_117 temp36_116))
(assert (= temp36_118 (select ARGNAME_stride_NAMEEND_VAL temp36_117)))
(assert (= temp36_119 #x0000000000000000))
(assert (= temp36_120 #x0000000000000002))
(assert (= temp36_121 temp36_120))
(assert (= temp36_122 (select ARGNAME_stride_NAMEEND_VAL temp36_121)))
(assert (= temp36_123 #x0000000000000000))
(assert (= temp36_124 #x0000000000000003))
(assert (= temp36_125 temp36_124))
(assert (= temp36_126 (select ARGNAME_stride_NAMEEND_VAL temp36_125)))
(assert (= temp36_127 #x0000000000000000))
(assert (= temp36_128 #x0000000000000004))
(assert (= temp36_129 temp36_128))
(assert (= temp36_130 (select ARGNAME_stride_NAMEEND_VAL temp36_129)))
(assert (= temp36_131 #x0000000000000000))
(assert (= temp36_132 #x0000000000000005))
(assert (= temp36_133 temp36_132))
(assert (= temp36_134 (select ARGNAME_stride_NAMEEND_VAL temp36_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp36_114 temp36_111)
             (bvsle temp36_118 temp36_115)
             (bvsle temp36_122 temp36_119)
             (bvsle temp36_126 temp36_123)
             (bvsle temp36_130 temp36_127)
             (bvsle temp36_134 temp36_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp36_135 #x0000000000000000))
(assert (= var1191735 temp36_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp36_136 #x0000000000000001))
(assert (= var1191747 temp36_136))
(assert (= temp36_137 #x0000000000000000))
(assert (= var1179826 temp36_137))
(assert (= temp36_138 #x0000000000000000))
(assert (= temp36_139 temp36_138))
(assert (= temp36_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp36_139)))
(assert (= temp36_141 #x0000000000000001))
(assert (= temp36_142 temp36_141))
(assert (= temp36_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp36_142)))
(assert (= temp36_144 #x0000000000000002))
(assert (= temp36_145 temp36_144))
(assert (= temp36_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp36_145)))
(assert (= temp36_147 #x0000000000000003))
(assert (= temp36_148 temp36_147))
(assert (= temp36_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp36_148)))
(assert (= temp36_150 #x0000000000000004))
(assert (= temp36_151 temp36_150))
(assert (= temp36_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp36_151)))
(assert (= temp36_153 #x0000000000000005))
(assert (= temp36_154 temp36_153))
(assert (= temp36_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp36_154)))
(assert (= temp36_157 var1179826))
(assert (= temp36_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp36_157)))
(assert (= temp36_156 temp36_158))
(assert (= var1191780
   (ite (bvslt temp36_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp36_159 #x0000000000000000))
(assert (= var1191780 temp36_159))
(assert (= temp36_160 #x0000000000000000))
(assert (= var1179826 temp36_160))
(assert (= temp36_162 var1179826))
(assert (= temp36_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp36_162)))
(assert (= temp36_161 temp36_163))
(assert (= var1191802 (bvsmod temp36_161 ARGNAME_groups_NAMEEND)))
(assert (= temp36_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp36_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp36_165 #x0000000000000001))
(assert (= var1191803 temp36_165))
(assert (= temp36_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp36_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp36_167 #x0000000000000001))
(assert (= var1191823 temp36_167))
(assert (= temp36_168 #x0000000000000001))
(assert (= var1180714 temp36_168))
(assert (= temp36_169 #x0000000000000000))
(assert (= temp36_170 temp36_169))
(assert (= temp36_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp36_170)))
(assert (= temp36_172 #x0000000000000001))
(assert (= temp36_173 temp36_172))
(assert (= temp36_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp36_173)))
(assert (= temp36_175 #x0000000000000002))
(assert (= temp36_176 temp36_175))
(assert (= temp36_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp36_176)))
(assert (= temp36_178 #x0000000000000003))
(assert (= temp36_179 temp36_178))
(assert (= temp36_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp36_179)))
(assert (= temp36_181 #x0000000000000004))
(assert (= temp36_182 temp36_181))
(assert (= temp36_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp36_182)))
(assert (= temp36_184 #x0000000000000005))
(assert (= temp36_185 temp36_184))
(assert (= temp36_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp36_185)))
(assert (= temp36_187 #x0000000000000000))
(assert (= temp36_188
   (ite (bvslt var1180714 temp36_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp36_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp36_188)))
(assert (= var1191831 temp36_189))
(assert (bvslt (ite (bvslt var1180714 temp36_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp36_190 #x0000000000000001))
(assert (= var1180714 temp36_190))
(assert (= temp36_192 var1180714))
(assert (= temp36_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp36_192)))
(assert (= temp36_191 temp36_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp36_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp36_194 #x0000000000000001))
(assert (= var1191836 temp36_194))
(assert (= temp36_195 #x0000000000000000))
(assert (= var1179826 temp36_195))
(assert (= temp36_197 var1179826))
(assert (= temp36_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp36_197)))
(assert (= temp36_196 temp36_198))
(assert (= temp36_199 #x0000000000000002))
(assert (= var1586025 temp36_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp36_200 #x0000000000000001))
(assert (= var1191993 temp36_200))
(assert (= temp36_201 #x0000000000000001))
(assert (= var2700303 temp36_201))
(assert (= temp36_202 #x0000000000000001))
(assert (= var2962447 temp36_202))
(assert (= temp36_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp36_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp36_204 #x0000000000000001))
(assert (= var211058 temp36_204))
(assert (= temp36_205 #x0000000000000001))
(assert (= var211188 temp36_205))
(assert (= var3879401 var211188))
(assert (= temp36_206 #x0000000000000000))
(assert (= var3866802 temp36_206))
(assert (= temp36_207 #x0000000000000000))
(assert (= temp36_208
   (ite (bvslt var3866802 temp36_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp36_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp36_208)))
(assert (= var3879420 temp36_209))
(assert (bvslt (ite (bvslt var3866802 temp36_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp36_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp36_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp36_211 #x0000000000000001))
(assert (= var3879421 temp36_211))
(assert (= temp36_212 #x0000000000000000))
(assert (= var4079423 temp36_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp36_213 #x0000000000000002))
(assert (= var4208259 temp36_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp36_214 #x0000000000000000))
(assert (= var4273820 temp36_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4993424 var211201))
(assert (= var211388 var210913))
(assert (= temp36_215 #x0000000000000000))
(assert (= var211389
   (ite (distinct var211388 temp36_215) #x0000000000000001 #x0000000000000000)))
(assert (= var5914445 var211389))
(assert (= temp36_217 #x0000000000000001))
(assert (= temp36_216 temp36_217))
(assert (= temp36_218 #x0000000000000001))
(assert (= var6753770 temp36_218))
(assert (= temp36_220 #xffffffffffffffff))
(assert (= temp36_219 temp36_220))
(assert (= temp36_221 #x0000000000000001))
(assert (= var211058 temp36_221))
(assert (= temp36_222 #x0000000000000000))
(assert (= var7484180 temp36_222))
(assert (= var7484147 var7484180))
(assert (= var7352711 var7484147))
(assert (= var7352707 var7352711))
(assert (= var212669 var7352707))
(assert (= temp36_223 #x0000000000000000))
(assert (= var212669 temp36_223))
(model-add temp36_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp36_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp36_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp36_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




