(declare-fun temp689_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp689_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp689_3 () (_ BitVec 64))
(declare-fun temp689_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp689_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp689_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp689_7 () (_ BitVec 64))
(declare-fun temp689_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp689_9 () (_ BitVec 64))
(declare-fun temp689_10 () (_ BitVec 64))
(declare-fun temp689_11 () (_ BitVec 64))
(declare-fun temp689_12 () (_ BitVec 64))
(declare-fun temp689_13 () (_ BitVec 64))
(declare-fun temp689_14 () (_ BitVec 64))
(declare-fun temp689_15 () (_ BitVec 64))
(declare-fun temp689_16 () (_ BitVec 64))
(declare-fun temp689_17 () (_ BitVec 64))
(declare-fun temp689_18 () (_ BitVec 64))
(declare-fun temp689_19 () (_ BitVec 64))
(declare-fun temp689_20 () (_ BitVec 64))
(declare-fun temp689_21 () (_ BitVec 64))
(declare-fun temp689_22 () (_ BitVec 64))
(declare-fun temp689_23 () (_ BitVec 64))
(declare-fun temp689_24 () (_ BitVec 64))
(declare-fun temp689_25 () (_ BitVec 64))
(declare-fun temp689_26 () (_ BitVec 64))
(declare-fun temp689_27 () (_ BitVec 64))
(declare-fun temp689_28 () (_ BitVec 64))
(declare-fun temp689_29 () (_ BitVec 64))
(declare-fun temp689_30 () (_ BitVec 64))
(declare-fun temp689_31 () (_ BitVec 64))
(declare-fun temp689_32 () (_ BitVec 64))
(declare-fun temp689_33 () (_ BitVec 64))
(declare-fun temp689_34 () (_ BitVec 64))
(declare-fun temp689_35 () (_ BitVec 64))
(declare-fun temp689_36 () (_ BitVec 64))
(declare-fun temp689_37 () (_ BitVec 64))
(declare-fun temp689_38 () (_ BitVec 64))
(declare-fun temp689_39 () (_ BitVec 64))
(declare-fun temp689_40 () (_ BitVec 64))
(declare-fun temp689_41 () (_ BitVec 64))
(declare-fun temp689_42 () (_ BitVec 64))
(declare-fun temp689_43 () (_ BitVec 64))
(declare-fun temp689_44 () (_ BitVec 64))
(declare-fun temp689_45 () (_ BitVec 64))
(declare-fun temp689_46 () (_ BitVec 64))
(declare-fun temp689_47 () (_ BitVec 64))
(declare-fun temp689_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp689_49 () (_ BitVec 64))
(declare-fun temp689_50 () (_ BitVec 64))
(declare-fun temp689_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp689_52 () (_ BitVec 64))
(declare-fun temp689_53 () (_ BitVec 64))
(declare-fun temp689_54 () (_ BitVec 64))
(declare-fun temp689_55 () (_ BitVec 64))
(declare-fun temp689_56 () (_ BitVec 64))
(declare-fun temp689_57 () (_ BitVec 64))
(declare-fun temp689_58 () (_ BitVec 64))
(declare-fun temp689_59 () (_ BitVec 64))
(declare-fun temp689_60 () (_ BitVec 64))
(declare-fun temp689_61 () (_ BitVec 64))
(declare-fun temp689_62 () (_ BitVec 64))
(declare-fun temp689_63 () (_ BitVec 64))
(declare-fun temp689_64 () (_ BitVec 64))
(declare-fun temp689_65 () (_ BitVec 64))
(declare-fun temp689_66 () (_ BitVec 64))
(declare-fun temp689_67 () (_ BitVec 64))
(declare-fun temp689_68 () (_ BitVec 64))
(declare-fun temp689_69 () (_ BitVec 64))
(declare-fun temp689_70 () (_ BitVec 64))
(declare-fun temp689_71 () (_ BitVec 64))
(declare-fun temp689_72 () (_ BitVec 64))
(declare-fun temp689_73 () (_ BitVec 64))
(declare-fun temp689_74 () (_ BitVec 64))
(declare-fun temp689_75 () (_ BitVec 64))
(declare-fun temp689_76 () (_ BitVec 64))
(declare-fun temp689_77 () (_ BitVec 64))
(declare-fun temp689_78 () (_ BitVec 64))
(declare-fun temp689_79 () (_ BitVec 64))
(declare-fun temp689_80 () (_ BitVec 64))
(declare-fun temp689_81 () (_ BitVec 64))
(declare-fun temp689_82 () (_ BitVec 64))
(declare-fun temp689_83 () (_ BitVec 64))
(declare-fun temp689_84 () (_ BitVec 64))
(declare-fun temp689_85 () (_ BitVec 64))
(declare-fun temp689_86 () (_ BitVec 64))
(declare-fun temp689_87 () (_ BitVec 64))
(declare-fun temp689_88 () (_ BitVec 64))
(declare-fun temp689_89 () (_ BitVec 64))
(declare-fun temp689_90 () (_ BitVec 64))
(declare-fun temp689_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp689_92 () (_ BitVec 64))
(declare-fun temp689_93 () (_ BitVec 64))
(declare-fun temp689_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp689_95 () (_ BitVec 64))
(declare-fun temp689_96 () (_ BitVec 64))
(declare-fun temp689_97 () (_ BitVec 64))
(declare-fun temp689_98 () (_ BitVec 64))
(declare-fun temp689_99 () (_ BitVec 64))
(declare-fun temp689_100 () (_ BitVec 64))
(declare-fun temp689_101 () (_ BitVec 64))
(declare-fun temp689_102 () (_ BitVec 64))
(declare-fun temp689_103 () (_ BitVec 64))
(declare-fun temp689_104 () (_ BitVec 64))
(declare-fun temp689_105 () (_ BitVec 64))
(declare-fun temp689_106 () (_ BitVec 64))
(declare-fun temp689_107 () (_ BitVec 64))
(declare-fun temp689_108 () (_ BitVec 64))
(declare-fun temp689_109 () (_ BitVec 64))
(declare-fun temp689_110 () (_ BitVec 64))
(declare-fun temp689_111 () (_ BitVec 64))
(declare-fun temp689_112 () (_ BitVec 64))
(declare-fun temp689_113 () (_ BitVec 64))
(declare-fun temp689_114 () (_ BitVec 64))
(declare-fun temp689_115 () (_ BitVec 64))
(declare-fun temp689_116 () (_ BitVec 64))
(declare-fun temp689_117 () (_ BitVec 64))
(declare-fun temp689_118 () (_ BitVec 64))
(declare-fun temp689_119 () (_ BitVec 64))
(declare-fun temp689_120 () (_ BitVec 64))
(declare-fun temp689_121 () (_ BitVec 64))
(declare-fun temp689_122 () (_ BitVec 64))
(declare-fun temp689_123 () (_ BitVec 64))
(declare-fun temp689_124 () (_ BitVec 64))
(declare-fun temp689_125 () (_ BitVec 64))
(declare-fun temp689_126 () (_ BitVec 64))
(declare-fun temp689_127 () (_ BitVec 64))
(declare-fun temp689_128 () (_ BitVec 64))
(declare-fun temp689_129 () (_ BitVec 64))
(declare-fun temp689_130 () (_ BitVec 64))
(declare-fun temp689_131 () (_ BitVec 64))
(declare-fun temp689_132 () (_ BitVec 64))
(declare-fun temp689_133 () (_ BitVec 64))
(declare-fun temp689_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp689_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp689_136 () (_ BitVec 64))
(declare-fun temp689_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp689_138 () (_ BitVec 64))
(declare-fun temp689_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp689_140 () (_ BitVec 64))
(declare-fun temp689_141 () (_ BitVec 64))
(declare-fun temp689_142 () (_ BitVec 64))
(declare-fun temp689_143 () (_ BitVec 64))
(declare-fun temp689_144 () (_ BitVec 64))
(declare-fun temp689_145 () (_ BitVec 64))
(declare-fun temp689_146 () (_ BitVec 64))
(declare-fun temp689_147 () (_ BitVec 64))
(declare-fun temp689_148 () (_ BitVec 64))
(declare-fun temp689_149 () (_ BitVec 64))
(declare-fun temp689_150 () (_ BitVec 64))
(declare-fun temp689_151 () (_ BitVec 64))
(declare-fun temp689_152 () (_ BitVec 64))
(declare-fun temp689_153 () (_ BitVec 64))
(declare-fun temp689_154 () (_ BitVec 64))
(declare-fun temp689_155 () (_ BitVec 64))
(declare-fun temp689_157 () (_ BitVec 64))
(declare-fun temp689_158 () (_ BitVec 64))
(declare-fun temp689_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp689_159 () (_ BitVec 64))
(declare-fun temp689_160 () (_ BitVec 64))
(declare-fun temp689_162 () (_ BitVec 64))
(declare-fun temp689_163 () (_ BitVec 64))
(declare-fun temp689_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp689_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp689_165 () (_ BitVec 64))
(declare-fun temp689_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp689_167 () (_ BitVec 64))
(declare-fun temp689_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp689_169 () (_ BitVec 64))
(declare-fun temp689_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp689_171 () (_ BitVec 64))
(declare-fun temp689_172 () (_ BitVec 64))
(declare-fun temp689_173 () (_ BitVec 64))
(declare-fun temp689_174 () (_ BitVec 64))
(declare-fun temp689_175 () (_ BitVec 64))
(declare-fun temp689_176 () (_ BitVec 64))
(declare-fun temp689_177 () (_ BitVec 64))
(declare-fun temp689_178 () (_ BitVec 64))
(declare-fun temp689_179 () (_ BitVec 64))
(declare-fun temp689_180 () (_ BitVec 64))
(declare-fun temp689_181 () (_ BitVec 64))
(declare-fun temp689_182 () (_ BitVec 64))
(declare-fun temp689_183 () (_ BitVec 64))
(declare-fun temp689_184 () (_ BitVec 64))
(declare-fun temp689_185 () (_ BitVec 64))
(declare-fun temp689_186 () (_ BitVec 64))
(declare-fun temp689_187 () (_ BitVec 64))
(declare-fun temp689_188 () (_ BitVec 64))
(declare-fun temp689_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp689_190 () (_ BitVec 64))
(declare-fun temp689_192 () (_ BitVec 64))
(declare-fun temp689_193 () (_ BitVec 64))
(declare-fun temp689_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp689_194 () (_ BitVec 64))
(declare-fun temp689_195 () (_ BitVec 64))
(declare-fun temp689_197 () (_ BitVec 64))
(declare-fun temp689_198 () (_ BitVec 64))
(declare-fun temp689_196 () (_ BitVec 64))
(declare-fun temp689_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp689_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp689_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp689_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp689_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp689_204 () (_ BitVec 64))
(declare-fun temp689_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp689_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp689_207 () (_ BitVec 64))
(declare-fun temp689_208 () (_ BitVec 64))
(declare-fun temp689_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp689_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp689_211 () (_ BitVec 64))
(declare-fun temp689_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp689_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp689_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp689_216 () (_ BitVec 64))
(declare-fun temp689_215 () (_ BitVec 64))
(declare-fun temp689_217 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp689_218 () (_ BitVec 64))
(declare-fun temp689_219 () (_ BitVec 64))
(declare-fun temp689_220 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp689_221 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp689_222 () (_ BitVec 64))
(declare-fun temp689_224 () (_ BitVec 64))
(declare-fun temp689_223 () (_ BitVec 64))
(declare-fun temp689_225 () (_ BitVec 64))
(assert (= temp689_1 #x0000000000000001))
(assert (= var77203 temp689_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp689_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp689_2)))
(assert (= temp689_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp689_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp689_4 #x0000000000000000))
(assert (= var210941 temp689_4))
(assert (= temp689_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp689_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp689_6 #x0000000000000000))
(assert (= var210986 temp689_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp689_7 #x0000000000000000))
(assert (= temp689_8 temp689_7))
(assert (= temp689_9 (select ARGNAME_padding_NAMEEND_VAL temp689_8)))
(assert (= temp689_10 #x0000000000000001))
(assert (= temp689_11 temp689_10))
(assert (= temp689_12 (select ARGNAME_padding_NAMEEND_VAL temp689_11)))
(assert (= temp689_13 #x0000000000000002))
(assert (= temp689_14 temp689_13))
(assert (= temp689_15 (select ARGNAME_padding_NAMEEND_VAL temp689_14)))
(assert (= temp689_16 #x0000000000000003))
(assert (= temp689_17 temp689_16))
(assert (= temp689_18 (select ARGNAME_padding_NAMEEND_VAL temp689_17)))
(assert (= temp689_19 #x0000000000000004))
(assert (= temp689_20 temp689_19))
(assert (= temp689_21 (select ARGNAME_padding_NAMEEND_VAL temp689_20)))
(assert (= temp689_22 #x0000000000000005))
(assert (= temp689_23 temp689_22))
(assert (= temp689_24 (select ARGNAME_padding_NAMEEND_VAL temp689_23)))
(assert (= temp689_25 #x0000000000000000))
(assert (= temp689_26 #x0000000000000000))
(assert (= temp689_27 temp689_26))
(assert (= temp689_28 (select ARGNAME_padding_NAMEEND_VAL temp689_27)))
(assert (= temp689_29 #x0000000000000000))
(assert (= temp689_30 #x0000000000000001))
(assert (= temp689_31 temp689_30))
(assert (= temp689_32 (select ARGNAME_padding_NAMEEND_VAL temp689_31)))
(assert (= temp689_33 #x0000000000000000))
(assert (= temp689_34 #x0000000000000002))
(assert (= temp689_35 temp689_34))
(assert (= temp689_36 (select ARGNAME_padding_NAMEEND_VAL temp689_35)))
(assert (= temp689_37 #x0000000000000000))
(assert (= temp689_38 #x0000000000000003))
(assert (= temp689_39 temp689_38))
(assert (= temp689_40 (select ARGNAME_padding_NAMEEND_VAL temp689_39)))
(assert (= temp689_41 #x0000000000000000))
(assert (= temp689_42 #x0000000000000004))
(assert (= temp689_43 temp689_42))
(assert (= temp689_44 (select ARGNAME_padding_NAMEEND_VAL temp689_43)))
(assert (= temp689_45 #x0000000000000000))
(assert (= temp689_46 #x0000000000000005))
(assert (= temp689_47 temp689_46))
(assert (= temp689_48 (select ARGNAME_padding_NAMEEND_VAL temp689_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp689_28 temp689_25)
             (bvslt temp689_32 temp689_29)
             (bvslt temp689_36 temp689_33)
             (bvslt temp689_40 temp689_37)
             (bvslt temp689_44 temp689_41)
             (bvslt temp689_48 temp689_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp689_49 #x0000000000000000))
(assert (= var1191714 temp689_49))
(assert (= temp689_50 #x0000000000000000))
(assert (= temp689_51 temp689_50))
(assert (= temp689_52 (select ARGNAME_output_padding_NAMEEND_VAL temp689_51)))
(assert (= temp689_53 #x0000000000000001))
(assert (= temp689_54 temp689_53))
(assert (= temp689_55 (select ARGNAME_output_padding_NAMEEND_VAL temp689_54)))
(assert (= temp689_56 #x0000000000000002))
(assert (= temp689_57 temp689_56))
(assert (= temp689_58 (select ARGNAME_output_padding_NAMEEND_VAL temp689_57)))
(assert (= temp689_59 #x0000000000000003))
(assert (= temp689_60 temp689_59))
(assert (= temp689_61 (select ARGNAME_output_padding_NAMEEND_VAL temp689_60)))
(assert (= temp689_62 #x0000000000000004))
(assert (= temp689_63 temp689_62))
(assert (= temp689_64 (select ARGNAME_output_padding_NAMEEND_VAL temp689_63)))
(assert (= temp689_65 #x0000000000000005))
(assert (= temp689_66 temp689_65))
(assert (= temp689_67 (select ARGNAME_output_padding_NAMEEND_VAL temp689_66)))
(assert (= temp689_68 #x0000000000000000))
(assert (= temp689_69 #x0000000000000000))
(assert (= temp689_70 temp689_69))
(assert (= temp689_71 (select ARGNAME_output_padding_NAMEEND_VAL temp689_70)))
(assert (= temp689_72 #x0000000000000000))
(assert (= temp689_73 #x0000000000000001))
(assert (= temp689_74 temp689_73))
(assert (= temp689_75 (select ARGNAME_output_padding_NAMEEND_VAL temp689_74)))
(assert (= temp689_76 #x0000000000000000))
(assert (= temp689_77 #x0000000000000002))
(assert (= temp689_78 temp689_77))
(assert (= temp689_79 (select ARGNAME_output_padding_NAMEEND_VAL temp689_78)))
(assert (= temp689_80 #x0000000000000000))
(assert (= temp689_81 #x0000000000000003))
(assert (= temp689_82 temp689_81))
(assert (= temp689_83 (select ARGNAME_output_padding_NAMEEND_VAL temp689_82)))
(assert (= temp689_84 #x0000000000000000))
(assert (= temp689_85 #x0000000000000004))
(assert (= temp689_86 temp689_85))
(assert (= temp689_87 (select ARGNAME_output_padding_NAMEEND_VAL temp689_86)))
(assert (= temp689_88 #x0000000000000000))
(assert (= temp689_89 #x0000000000000005))
(assert (= temp689_90 temp689_89))
(assert (= temp689_91 (select ARGNAME_output_padding_NAMEEND_VAL temp689_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp689_71 temp689_68)
             (bvslt temp689_75 temp689_72)
             (bvslt temp689_79 temp689_76)
             (bvslt temp689_83 temp689_80)
             (bvslt temp689_87 temp689_84)
             (bvslt temp689_91 temp689_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp689_92 #x0000000000000000))
(assert (= var1191725 temp689_92))
(assert (= temp689_93 #x0000000000000000))
(assert (= temp689_94 temp689_93))
(assert (= temp689_95 (select ARGNAME_stride_NAMEEND_VAL temp689_94)))
(assert (= temp689_96 #x0000000000000001))
(assert (= temp689_97 temp689_96))
(assert (= temp689_98 (select ARGNAME_stride_NAMEEND_VAL temp689_97)))
(assert (= temp689_99 #x0000000000000002))
(assert (= temp689_100 temp689_99))
(assert (= temp689_101 (select ARGNAME_stride_NAMEEND_VAL temp689_100)))
(assert (= temp689_102 #x0000000000000003))
(assert (= temp689_103 temp689_102))
(assert (= temp689_104 (select ARGNAME_stride_NAMEEND_VAL temp689_103)))
(assert (= temp689_105 #x0000000000000004))
(assert (= temp689_106 temp689_105))
(assert (= temp689_107 (select ARGNAME_stride_NAMEEND_VAL temp689_106)))
(assert (= temp689_108 #x0000000000000005))
(assert (= temp689_109 temp689_108))
(assert (= temp689_110 (select ARGNAME_stride_NAMEEND_VAL temp689_109)))
(assert (= temp689_111 #x0000000000000000))
(assert (= temp689_112 #x0000000000000000))
(assert (= temp689_113 temp689_112))
(assert (= temp689_114 (select ARGNAME_stride_NAMEEND_VAL temp689_113)))
(assert (= temp689_115 #x0000000000000000))
(assert (= temp689_116 #x0000000000000001))
(assert (= temp689_117 temp689_116))
(assert (= temp689_118 (select ARGNAME_stride_NAMEEND_VAL temp689_117)))
(assert (= temp689_119 #x0000000000000000))
(assert (= temp689_120 #x0000000000000002))
(assert (= temp689_121 temp689_120))
(assert (= temp689_122 (select ARGNAME_stride_NAMEEND_VAL temp689_121)))
(assert (= temp689_123 #x0000000000000000))
(assert (= temp689_124 #x0000000000000003))
(assert (= temp689_125 temp689_124))
(assert (= temp689_126 (select ARGNAME_stride_NAMEEND_VAL temp689_125)))
(assert (= temp689_127 #x0000000000000000))
(assert (= temp689_128 #x0000000000000004))
(assert (= temp689_129 temp689_128))
(assert (= temp689_130 (select ARGNAME_stride_NAMEEND_VAL temp689_129)))
(assert (= temp689_131 #x0000000000000000))
(assert (= temp689_132 #x0000000000000005))
(assert (= temp689_133 temp689_132))
(assert (= temp689_134 (select ARGNAME_stride_NAMEEND_VAL temp689_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp689_114 temp689_111)
             (bvsle temp689_118 temp689_115)
             (bvsle temp689_122 temp689_119)
             (bvsle temp689_126 temp689_123)
             (bvsle temp689_130 temp689_127)
             (bvsle temp689_134 temp689_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp689_135 #x0000000000000000))
(assert (= var1191735 temp689_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp689_136 #x0000000000000001))
(assert (= var1191747 temp689_136))
(assert (= temp689_137 #x0000000000000000))
(assert (= var1179826 temp689_137))
(assert (= temp689_138 #x0000000000000000))
(assert (= temp689_139 temp689_138))
(assert (= temp689_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp689_139)))
(assert (= temp689_141 #x0000000000000001))
(assert (= temp689_142 temp689_141))
(assert (= temp689_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp689_142)))
(assert (= temp689_144 #x0000000000000002))
(assert (= temp689_145 temp689_144))
(assert (= temp689_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp689_145)))
(assert (= temp689_147 #x0000000000000003))
(assert (= temp689_148 temp689_147))
(assert (= temp689_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp689_148)))
(assert (= temp689_150 #x0000000000000004))
(assert (= temp689_151 temp689_150))
(assert (= temp689_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp689_151)))
(assert (= temp689_153 #x0000000000000005))
(assert (= temp689_154 temp689_153))
(assert (= temp689_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp689_154)))
(assert (= temp689_157 var1179826))
(assert (= temp689_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp689_157)))
(assert (= temp689_156 temp689_158))
(assert (= var1191780
   (ite (bvslt temp689_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp689_159 #x0000000000000000))
(assert (= var1191780 temp689_159))
(assert (= temp689_160 #x0000000000000000))
(assert (= var1179826 temp689_160))
(assert (= temp689_162 var1179826))
(assert (= temp689_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp689_162)))
(assert (= temp689_161 temp689_163))
(assert (= var1191802 (bvsmod temp689_161 ARGNAME_groups_NAMEEND)))
(assert (= temp689_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp689_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp689_165 #x0000000000000001))
(assert (= var1191803 temp689_165))
(assert (= temp689_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp689_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp689_167 #x0000000000000001))
(assert (= var1191823 temp689_167))
(assert (= temp689_168 #x0000000000000001))
(assert (= var1180714 temp689_168))
(assert (= temp689_169 #x0000000000000000))
(assert (= temp689_170 temp689_169))
(assert (= temp689_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp689_170)))
(assert (= temp689_172 #x0000000000000001))
(assert (= temp689_173 temp689_172))
(assert (= temp689_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp689_173)))
(assert (= temp689_175 #x0000000000000002))
(assert (= temp689_176 temp689_175))
(assert (= temp689_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp689_176)))
(assert (= temp689_178 #x0000000000000003))
(assert (= temp689_179 temp689_178))
(assert (= temp689_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp689_179)))
(assert (= temp689_181 #x0000000000000004))
(assert (= temp689_182 temp689_181))
(assert (= temp689_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp689_182)))
(assert (= temp689_184 #x0000000000000005))
(assert (= temp689_185 temp689_184))
(assert (= temp689_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp689_185)))
(assert (= temp689_187 #x0000000000000000))
(assert (= temp689_188
   (ite (bvslt var1180714 temp689_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp689_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp689_188)))
(assert (= var1191831 temp689_189))
(assert (bvslt (ite (bvslt var1180714 temp689_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp689_190 #x0000000000000001))
(assert (= var1180714 temp689_190))
(assert (= temp689_192 var1180714))
(assert (= temp689_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp689_192)))
(assert (= temp689_191 temp689_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp689_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp689_194 #x0000000000000001))
(assert (= var1191836 temp689_194))
(assert (= temp689_195 #x0000000000000000))
(assert (= var1179826 temp689_195))
(assert (= temp689_197 var1179826))
(assert (= temp689_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp689_197)))
(assert (= temp689_196 temp689_198))
(assert (= temp689_199 #x0000000000000002))
(assert (= var1586025 temp689_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp689_200 #x0000000000000001))
(assert (= var1191993 temp689_200))
(assert (= temp689_201 #x0000000000000001))
(assert (= var2700303 temp689_201))
(assert (= temp689_202 #x0000000000000001))
(assert (= var2962447 temp689_202))
(assert (= temp689_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp689_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp689_204 #x0000000000000001))
(assert (= var211058 temp689_204))
(assert (= temp689_205 #x0000000000000001))
(assert (= var211188 temp689_205))
(assert (= var3879401 var211188))
(assert (= temp689_206 #x0000000000000000))
(assert (= var3866802 temp689_206))
(assert (= temp689_207 #x0000000000000000))
(assert (= temp689_208
   (ite (bvslt var3866802 temp689_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp689_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp689_208)))
(assert (= var3879420 temp689_209))
(assert (bvslt (ite (bvslt var3866802 temp689_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp689_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp689_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp689_211 #x0000000000000001))
(assert (= var3879421 temp689_211))
(assert (= temp689_212 #x0000000000000000))
(assert (= var4079423 temp689_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp689_213 #x0000000000000002))
(assert (= var4208259 temp689_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp689_214 #x0000000000000000))
(assert (= var4273820 temp689_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp689_216 #xffffffffffffffff))
(assert (= temp689_215 temp689_216))
(assert (= temp689_217 #x0000000000000001))
(assert (= var197674 temp689_217))
(assert (= temp689_218 #x0000000000000000))
(assert (= temp689_219
   (ite (bvslt var197674 temp689_218)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp689_220 (select ARGNAME_input_NAMEEND_DIMSIZE temp689_219)))
(assert (= var211595 temp689_220))
(assert (bvslt (ite (bvslt var197674 temp689_218)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp689_221 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp689_221) #x0000000000000001 #x0000000000000000)))
(assert (= temp689_222 #x0000000000000001))
(assert (= var211596 temp689_222))
(assert (= temp689_224 #xffffffffffffffff))
(assert (= temp689_223 temp689_224))
(assert (= temp689_225 #x0000000000000001))
(assert (= var211058 temp689_225))
(model-add temp689_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp689_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp689_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp689_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






