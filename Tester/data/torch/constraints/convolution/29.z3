(declare-fun temp38_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp38_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp38_3 () (_ BitVec 64))
(declare-fun temp38_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp38_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp38_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp38_7 () (_ BitVec 64))
(declare-fun temp38_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp38_9 () (_ BitVec 64))
(declare-fun temp38_10 () (_ BitVec 64))
(declare-fun temp38_11 () (_ BitVec 64))
(declare-fun temp38_12 () (_ BitVec 64))
(declare-fun temp38_13 () (_ BitVec 64))
(declare-fun temp38_14 () (_ BitVec 64))
(declare-fun temp38_15 () (_ BitVec 64))
(declare-fun temp38_16 () (_ BitVec 64))
(declare-fun temp38_17 () (_ BitVec 64))
(declare-fun temp38_18 () (_ BitVec 64))
(declare-fun temp38_19 () (_ BitVec 64))
(declare-fun temp38_20 () (_ BitVec 64))
(declare-fun temp38_21 () (_ BitVec 64))
(declare-fun temp38_22 () (_ BitVec 64))
(declare-fun temp38_23 () (_ BitVec 64))
(declare-fun temp38_24 () (_ BitVec 64))
(declare-fun temp38_25 () (_ BitVec 64))
(declare-fun temp38_26 () (_ BitVec 64))
(declare-fun temp38_27 () (_ BitVec 64))
(declare-fun temp38_28 () (_ BitVec 64))
(declare-fun temp38_29 () (_ BitVec 64))
(declare-fun temp38_30 () (_ BitVec 64))
(declare-fun temp38_31 () (_ BitVec 64))
(declare-fun temp38_32 () (_ BitVec 64))
(declare-fun temp38_33 () (_ BitVec 64))
(declare-fun temp38_34 () (_ BitVec 64))
(declare-fun temp38_35 () (_ BitVec 64))
(declare-fun temp38_36 () (_ BitVec 64))
(declare-fun temp38_37 () (_ BitVec 64))
(declare-fun temp38_38 () (_ BitVec 64))
(declare-fun temp38_39 () (_ BitVec 64))
(declare-fun temp38_40 () (_ BitVec 64))
(declare-fun temp38_41 () (_ BitVec 64))
(declare-fun temp38_42 () (_ BitVec 64))
(declare-fun temp38_43 () (_ BitVec 64))
(declare-fun temp38_44 () (_ BitVec 64))
(declare-fun temp38_45 () (_ BitVec 64))
(declare-fun temp38_46 () (_ BitVec 64))
(declare-fun temp38_47 () (_ BitVec 64))
(declare-fun temp38_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp38_49 () (_ BitVec 64))
(declare-fun temp38_50 () (_ BitVec 64))
(declare-fun temp38_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp38_52 () (_ BitVec 64))
(declare-fun temp38_53 () (_ BitVec 64))
(declare-fun temp38_54 () (_ BitVec 64))
(declare-fun temp38_55 () (_ BitVec 64))
(declare-fun temp38_56 () (_ BitVec 64))
(declare-fun temp38_57 () (_ BitVec 64))
(declare-fun temp38_58 () (_ BitVec 64))
(declare-fun temp38_59 () (_ BitVec 64))
(declare-fun temp38_60 () (_ BitVec 64))
(declare-fun temp38_61 () (_ BitVec 64))
(declare-fun temp38_62 () (_ BitVec 64))
(declare-fun temp38_63 () (_ BitVec 64))
(declare-fun temp38_64 () (_ BitVec 64))
(declare-fun temp38_65 () (_ BitVec 64))
(declare-fun temp38_66 () (_ BitVec 64))
(declare-fun temp38_67 () (_ BitVec 64))
(declare-fun temp38_68 () (_ BitVec 64))
(declare-fun temp38_69 () (_ BitVec 64))
(declare-fun temp38_70 () (_ BitVec 64))
(declare-fun temp38_71 () (_ BitVec 64))
(declare-fun temp38_72 () (_ BitVec 64))
(declare-fun temp38_73 () (_ BitVec 64))
(declare-fun temp38_74 () (_ BitVec 64))
(declare-fun temp38_75 () (_ BitVec 64))
(declare-fun temp38_76 () (_ BitVec 64))
(declare-fun temp38_77 () (_ BitVec 64))
(declare-fun temp38_78 () (_ BitVec 64))
(declare-fun temp38_79 () (_ BitVec 64))
(declare-fun temp38_80 () (_ BitVec 64))
(declare-fun temp38_81 () (_ BitVec 64))
(declare-fun temp38_82 () (_ BitVec 64))
(declare-fun temp38_83 () (_ BitVec 64))
(declare-fun temp38_84 () (_ BitVec 64))
(declare-fun temp38_85 () (_ BitVec 64))
(declare-fun temp38_86 () (_ BitVec 64))
(declare-fun temp38_87 () (_ BitVec 64))
(declare-fun temp38_88 () (_ BitVec 64))
(declare-fun temp38_89 () (_ BitVec 64))
(declare-fun temp38_90 () (_ BitVec 64))
(declare-fun temp38_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp38_92 () (_ BitVec 64))
(declare-fun temp38_93 () (_ BitVec 64))
(declare-fun temp38_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp38_95 () (_ BitVec 64))
(declare-fun temp38_96 () (_ BitVec 64))
(declare-fun temp38_97 () (_ BitVec 64))
(declare-fun temp38_98 () (_ BitVec 64))
(declare-fun temp38_99 () (_ BitVec 64))
(declare-fun temp38_100 () (_ BitVec 64))
(declare-fun temp38_101 () (_ BitVec 64))
(declare-fun temp38_102 () (_ BitVec 64))
(declare-fun temp38_103 () (_ BitVec 64))
(declare-fun temp38_104 () (_ BitVec 64))
(declare-fun temp38_105 () (_ BitVec 64))
(declare-fun temp38_106 () (_ BitVec 64))
(declare-fun temp38_107 () (_ BitVec 64))
(declare-fun temp38_108 () (_ BitVec 64))
(declare-fun temp38_109 () (_ BitVec 64))
(declare-fun temp38_110 () (_ BitVec 64))
(declare-fun temp38_111 () (_ BitVec 64))
(declare-fun temp38_112 () (_ BitVec 64))
(declare-fun temp38_113 () (_ BitVec 64))
(declare-fun temp38_114 () (_ BitVec 64))
(declare-fun temp38_115 () (_ BitVec 64))
(declare-fun temp38_116 () (_ BitVec 64))
(declare-fun temp38_117 () (_ BitVec 64))
(declare-fun temp38_118 () (_ BitVec 64))
(declare-fun temp38_119 () (_ BitVec 64))
(declare-fun temp38_120 () (_ BitVec 64))
(declare-fun temp38_121 () (_ BitVec 64))
(declare-fun temp38_122 () (_ BitVec 64))
(declare-fun temp38_123 () (_ BitVec 64))
(declare-fun temp38_124 () (_ BitVec 64))
(declare-fun temp38_125 () (_ BitVec 64))
(declare-fun temp38_126 () (_ BitVec 64))
(declare-fun temp38_127 () (_ BitVec 64))
(declare-fun temp38_128 () (_ BitVec 64))
(declare-fun temp38_129 () (_ BitVec 64))
(declare-fun temp38_130 () (_ BitVec 64))
(declare-fun temp38_131 () (_ BitVec 64))
(declare-fun temp38_132 () (_ BitVec 64))
(declare-fun temp38_133 () (_ BitVec 64))
(declare-fun temp38_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp38_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp38_136 () (_ BitVec 64))
(declare-fun temp38_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp38_138 () (_ BitVec 64))
(declare-fun temp38_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp38_140 () (_ BitVec 64))
(declare-fun temp38_141 () (_ BitVec 64))
(declare-fun temp38_142 () (_ BitVec 64))
(declare-fun temp38_143 () (_ BitVec 64))
(declare-fun temp38_144 () (_ BitVec 64))
(declare-fun temp38_145 () (_ BitVec 64))
(declare-fun temp38_146 () (_ BitVec 64))
(declare-fun temp38_147 () (_ BitVec 64))
(declare-fun temp38_148 () (_ BitVec 64))
(declare-fun temp38_149 () (_ BitVec 64))
(declare-fun temp38_150 () (_ BitVec 64))
(declare-fun temp38_151 () (_ BitVec 64))
(declare-fun temp38_152 () (_ BitVec 64))
(declare-fun temp38_153 () (_ BitVec 64))
(declare-fun temp38_154 () (_ BitVec 64))
(declare-fun temp38_155 () (_ BitVec 64))
(declare-fun temp38_157 () (_ BitVec 64))
(declare-fun temp38_158 () (_ BitVec 64))
(declare-fun temp38_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp38_159 () (_ BitVec 64))
(declare-fun temp38_160 () (_ BitVec 64))
(declare-fun temp38_162 () (_ BitVec 64))
(declare-fun temp38_163 () (_ BitVec 64))
(declare-fun temp38_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp38_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp38_165 () (_ BitVec 64))
(declare-fun temp38_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp38_167 () (_ BitVec 64))
(declare-fun temp38_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp38_169 () (_ BitVec 64))
(declare-fun temp38_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp38_171 () (_ BitVec 64))
(declare-fun temp38_172 () (_ BitVec 64))
(declare-fun temp38_173 () (_ BitVec 64))
(declare-fun temp38_174 () (_ BitVec 64))
(declare-fun temp38_175 () (_ BitVec 64))
(declare-fun temp38_176 () (_ BitVec 64))
(declare-fun temp38_177 () (_ BitVec 64))
(declare-fun temp38_178 () (_ BitVec 64))
(declare-fun temp38_179 () (_ BitVec 64))
(declare-fun temp38_180 () (_ BitVec 64))
(declare-fun temp38_181 () (_ BitVec 64))
(declare-fun temp38_182 () (_ BitVec 64))
(declare-fun temp38_183 () (_ BitVec 64))
(declare-fun temp38_184 () (_ BitVec 64))
(declare-fun temp38_185 () (_ BitVec 64))
(declare-fun temp38_186 () (_ BitVec 64))
(declare-fun temp38_187 () (_ BitVec 64))
(declare-fun temp38_188 () (_ BitVec 64))
(declare-fun temp38_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp38_190 () (_ BitVec 64))
(declare-fun temp38_192 () (_ BitVec 64))
(declare-fun temp38_193 () (_ BitVec 64))
(declare-fun temp38_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp38_194 () (_ BitVec 64))
(declare-fun temp38_195 () (_ BitVec 64))
(declare-fun temp38_197 () (_ BitVec 64))
(declare-fun temp38_198 () (_ BitVec 64))
(declare-fun temp38_196 () (_ BitVec 64))
(declare-fun temp38_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp38_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp38_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp38_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp38_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp38_204 () (_ BitVec 64))
(declare-fun temp38_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp38_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp38_207 () (_ BitVec 64))
(declare-fun temp38_208 () (_ BitVec 64))
(declare-fun temp38_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp38_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp38_211 () (_ BitVec 64))
(declare-fun temp38_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp38_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp38_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4993424 () (_ BitVec 64))
(declare-fun var211388 () (_ BitVec 64))
(declare-fun temp38_215 () (_ BitVec 64))
(declare-fun var211389 () (_ BitVec 64))
(declare-fun var5914445 () (_ BitVec 64))
(declare-fun temp38_217 () (_ BitVec 64))
(declare-fun temp38_216 () (_ BitVec 64))
(declare-fun temp38_218 () (_ BitVec 64))
(declare-fun var6753770 () (_ BitVec 64))
(declare-fun temp38_220 () (_ BitVec 64))
(declare-fun temp38_219 () (_ BitVec 64))
(declare-fun temp38_221 () (_ BitVec 64))
(assert (= temp38_1 #x0000000000000001))
(assert (= var77203 temp38_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp38_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp38_2)))
(assert (= temp38_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp38_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp38_4 #x0000000000000000))
(assert (= var210941 temp38_4))
(assert (= temp38_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp38_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp38_6 #x0000000000000000))
(assert (= var210986 temp38_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp38_7 #x0000000000000000))
(assert (= temp38_8 temp38_7))
(assert (= temp38_9 (select ARGNAME_padding_NAMEEND_VAL temp38_8)))
(assert (= temp38_10 #x0000000000000001))
(assert (= temp38_11 temp38_10))
(assert (= temp38_12 (select ARGNAME_padding_NAMEEND_VAL temp38_11)))
(assert (= temp38_13 #x0000000000000002))
(assert (= temp38_14 temp38_13))
(assert (= temp38_15 (select ARGNAME_padding_NAMEEND_VAL temp38_14)))
(assert (= temp38_16 #x0000000000000003))
(assert (= temp38_17 temp38_16))
(assert (= temp38_18 (select ARGNAME_padding_NAMEEND_VAL temp38_17)))
(assert (= temp38_19 #x0000000000000004))
(assert (= temp38_20 temp38_19))
(assert (= temp38_21 (select ARGNAME_padding_NAMEEND_VAL temp38_20)))
(assert (= temp38_22 #x0000000000000005))
(assert (= temp38_23 temp38_22))
(assert (= temp38_24 (select ARGNAME_padding_NAMEEND_VAL temp38_23)))
(assert (= temp38_25 #x0000000000000000))
(assert (= temp38_26 #x0000000000000000))
(assert (= temp38_27 temp38_26))
(assert (= temp38_28 (select ARGNAME_padding_NAMEEND_VAL temp38_27)))
(assert (= temp38_29 #x0000000000000000))
(assert (= temp38_30 #x0000000000000001))
(assert (= temp38_31 temp38_30))
(assert (= temp38_32 (select ARGNAME_padding_NAMEEND_VAL temp38_31)))
(assert (= temp38_33 #x0000000000000000))
(assert (= temp38_34 #x0000000000000002))
(assert (= temp38_35 temp38_34))
(assert (= temp38_36 (select ARGNAME_padding_NAMEEND_VAL temp38_35)))
(assert (= temp38_37 #x0000000000000000))
(assert (= temp38_38 #x0000000000000003))
(assert (= temp38_39 temp38_38))
(assert (= temp38_40 (select ARGNAME_padding_NAMEEND_VAL temp38_39)))
(assert (= temp38_41 #x0000000000000000))
(assert (= temp38_42 #x0000000000000004))
(assert (= temp38_43 temp38_42))
(assert (= temp38_44 (select ARGNAME_padding_NAMEEND_VAL temp38_43)))
(assert (= temp38_45 #x0000000000000000))
(assert (= temp38_46 #x0000000000000005))
(assert (= temp38_47 temp38_46))
(assert (= temp38_48 (select ARGNAME_padding_NAMEEND_VAL temp38_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp38_28 temp38_25)
             (bvslt temp38_32 temp38_29)
             (bvslt temp38_36 temp38_33)
             (bvslt temp38_40 temp38_37)
             (bvslt temp38_44 temp38_41)
             (bvslt temp38_48 temp38_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp38_49 #x0000000000000000))
(assert (= var1191714 temp38_49))
(assert (= temp38_50 #x0000000000000000))
(assert (= temp38_51 temp38_50))
(assert (= temp38_52 (select ARGNAME_output_padding_NAMEEND_VAL temp38_51)))
(assert (= temp38_53 #x0000000000000001))
(assert (= temp38_54 temp38_53))
(assert (= temp38_55 (select ARGNAME_output_padding_NAMEEND_VAL temp38_54)))
(assert (= temp38_56 #x0000000000000002))
(assert (= temp38_57 temp38_56))
(assert (= temp38_58 (select ARGNAME_output_padding_NAMEEND_VAL temp38_57)))
(assert (= temp38_59 #x0000000000000003))
(assert (= temp38_60 temp38_59))
(assert (= temp38_61 (select ARGNAME_output_padding_NAMEEND_VAL temp38_60)))
(assert (= temp38_62 #x0000000000000004))
(assert (= temp38_63 temp38_62))
(assert (= temp38_64 (select ARGNAME_output_padding_NAMEEND_VAL temp38_63)))
(assert (= temp38_65 #x0000000000000005))
(assert (= temp38_66 temp38_65))
(assert (= temp38_67 (select ARGNAME_output_padding_NAMEEND_VAL temp38_66)))
(assert (= temp38_68 #x0000000000000000))
(assert (= temp38_69 #x0000000000000000))
(assert (= temp38_70 temp38_69))
(assert (= temp38_71 (select ARGNAME_output_padding_NAMEEND_VAL temp38_70)))
(assert (= temp38_72 #x0000000000000000))
(assert (= temp38_73 #x0000000000000001))
(assert (= temp38_74 temp38_73))
(assert (= temp38_75 (select ARGNAME_output_padding_NAMEEND_VAL temp38_74)))
(assert (= temp38_76 #x0000000000000000))
(assert (= temp38_77 #x0000000000000002))
(assert (= temp38_78 temp38_77))
(assert (= temp38_79 (select ARGNAME_output_padding_NAMEEND_VAL temp38_78)))
(assert (= temp38_80 #x0000000000000000))
(assert (= temp38_81 #x0000000000000003))
(assert (= temp38_82 temp38_81))
(assert (= temp38_83 (select ARGNAME_output_padding_NAMEEND_VAL temp38_82)))
(assert (= temp38_84 #x0000000000000000))
(assert (= temp38_85 #x0000000000000004))
(assert (= temp38_86 temp38_85))
(assert (= temp38_87 (select ARGNAME_output_padding_NAMEEND_VAL temp38_86)))
(assert (= temp38_88 #x0000000000000000))
(assert (= temp38_89 #x0000000000000005))
(assert (= temp38_90 temp38_89))
(assert (= temp38_91 (select ARGNAME_output_padding_NAMEEND_VAL temp38_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp38_71 temp38_68)
             (bvslt temp38_75 temp38_72)
             (bvslt temp38_79 temp38_76)
             (bvslt temp38_83 temp38_80)
             (bvslt temp38_87 temp38_84)
             (bvslt temp38_91 temp38_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp38_92 #x0000000000000000))
(assert (= var1191725 temp38_92))
(assert (= temp38_93 #x0000000000000000))
(assert (= temp38_94 temp38_93))
(assert (= temp38_95 (select ARGNAME_stride_NAMEEND_VAL temp38_94)))
(assert (= temp38_96 #x0000000000000001))
(assert (= temp38_97 temp38_96))
(assert (= temp38_98 (select ARGNAME_stride_NAMEEND_VAL temp38_97)))
(assert (= temp38_99 #x0000000000000002))
(assert (= temp38_100 temp38_99))
(assert (= temp38_101 (select ARGNAME_stride_NAMEEND_VAL temp38_100)))
(assert (= temp38_102 #x0000000000000003))
(assert (= temp38_103 temp38_102))
(assert (= temp38_104 (select ARGNAME_stride_NAMEEND_VAL temp38_103)))
(assert (= temp38_105 #x0000000000000004))
(assert (= temp38_106 temp38_105))
(assert (= temp38_107 (select ARGNAME_stride_NAMEEND_VAL temp38_106)))
(assert (= temp38_108 #x0000000000000005))
(assert (= temp38_109 temp38_108))
(assert (= temp38_110 (select ARGNAME_stride_NAMEEND_VAL temp38_109)))
(assert (= temp38_111 #x0000000000000000))
(assert (= temp38_112 #x0000000000000000))
(assert (= temp38_113 temp38_112))
(assert (= temp38_114 (select ARGNAME_stride_NAMEEND_VAL temp38_113)))
(assert (= temp38_115 #x0000000000000000))
(assert (= temp38_116 #x0000000000000001))
(assert (= temp38_117 temp38_116))
(assert (= temp38_118 (select ARGNAME_stride_NAMEEND_VAL temp38_117)))
(assert (= temp38_119 #x0000000000000000))
(assert (= temp38_120 #x0000000000000002))
(assert (= temp38_121 temp38_120))
(assert (= temp38_122 (select ARGNAME_stride_NAMEEND_VAL temp38_121)))
(assert (= temp38_123 #x0000000000000000))
(assert (= temp38_124 #x0000000000000003))
(assert (= temp38_125 temp38_124))
(assert (= temp38_126 (select ARGNAME_stride_NAMEEND_VAL temp38_125)))
(assert (= temp38_127 #x0000000000000000))
(assert (= temp38_128 #x0000000000000004))
(assert (= temp38_129 temp38_128))
(assert (= temp38_130 (select ARGNAME_stride_NAMEEND_VAL temp38_129)))
(assert (= temp38_131 #x0000000000000000))
(assert (= temp38_132 #x0000000000000005))
(assert (= temp38_133 temp38_132))
(assert (= temp38_134 (select ARGNAME_stride_NAMEEND_VAL temp38_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp38_114 temp38_111)
             (bvsle temp38_118 temp38_115)
             (bvsle temp38_122 temp38_119)
             (bvsle temp38_126 temp38_123)
             (bvsle temp38_130 temp38_127)
             (bvsle temp38_134 temp38_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp38_135 #x0000000000000000))
(assert (= var1191735 temp38_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp38_136 #x0000000000000001))
(assert (= var1191747 temp38_136))
(assert (= temp38_137 #x0000000000000000))
(assert (= var1179826 temp38_137))
(assert (= temp38_138 #x0000000000000000))
(assert (= temp38_139 temp38_138))
(assert (= temp38_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp38_139)))
(assert (= temp38_141 #x0000000000000001))
(assert (= temp38_142 temp38_141))
(assert (= temp38_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp38_142)))
(assert (= temp38_144 #x0000000000000002))
(assert (= temp38_145 temp38_144))
(assert (= temp38_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp38_145)))
(assert (= temp38_147 #x0000000000000003))
(assert (= temp38_148 temp38_147))
(assert (= temp38_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp38_148)))
(assert (= temp38_150 #x0000000000000004))
(assert (= temp38_151 temp38_150))
(assert (= temp38_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp38_151)))
(assert (= temp38_153 #x0000000000000005))
(assert (= temp38_154 temp38_153))
(assert (= temp38_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp38_154)))
(assert (= temp38_157 var1179826))
(assert (= temp38_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp38_157)))
(assert (= temp38_156 temp38_158))
(assert (= var1191780
   (ite (bvslt temp38_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp38_159 #x0000000000000000))
(assert (= var1191780 temp38_159))
(assert (= temp38_160 #x0000000000000000))
(assert (= var1179826 temp38_160))
(assert (= temp38_162 var1179826))
(assert (= temp38_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp38_162)))
(assert (= temp38_161 temp38_163))
(assert (= var1191802 (bvsmod temp38_161 ARGNAME_groups_NAMEEND)))
(assert (= temp38_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp38_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp38_165 #x0000000000000001))
(assert (= var1191803 temp38_165))
(assert (= temp38_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp38_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp38_167 #x0000000000000001))
(assert (= var1191823 temp38_167))
(assert (= temp38_168 #x0000000000000001))
(assert (= var1180714 temp38_168))
(assert (= temp38_169 #x0000000000000000))
(assert (= temp38_170 temp38_169))
(assert (= temp38_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp38_170)))
(assert (= temp38_172 #x0000000000000001))
(assert (= temp38_173 temp38_172))
(assert (= temp38_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp38_173)))
(assert (= temp38_175 #x0000000000000002))
(assert (= temp38_176 temp38_175))
(assert (= temp38_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp38_176)))
(assert (= temp38_178 #x0000000000000003))
(assert (= temp38_179 temp38_178))
(assert (= temp38_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp38_179)))
(assert (= temp38_181 #x0000000000000004))
(assert (= temp38_182 temp38_181))
(assert (= temp38_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp38_182)))
(assert (= temp38_184 #x0000000000000005))
(assert (= temp38_185 temp38_184))
(assert (= temp38_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp38_185)))
(assert (= temp38_187 #x0000000000000000))
(assert (= temp38_188
   (ite (bvslt var1180714 temp38_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp38_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp38_188)))
(assert (= var1191831 temp38_189))
(assert (bvslt (ite (bvslt var1180714 temp38_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp38_190 #x0000000000000001))
(assert (= var1180714 temp38_190))
(assert (= temp38_192 var1180714))
(assert (= temp38_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp38_192)))
(assert (= temp38_191 temp38_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp38_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp38_194 #x0000000000000001))
(assert (= var1191836 temp38_194))
(assert (= temp38_195 #x0000000000000000))
(assert (= var1179826 temp38_195))
(assert (= temp38_197 var1179826))
(assert (= temp38_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp38_197)))
(assert (= temp38_196 temp38_198))
(assert (= temp38_199 #x0000000000000002))
(assert (= var1586025 temp38_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp38_200 #x0000000000000001))
(assert (= var1191993 temp38_200))
(assert (= temp38_201 #x0000000000000001))
(assert (= var2700303 temp38_201))
(assert (= temp38_202 #x0000000000000001))
(assert (= var2962447 temp38_202))
(assert (= temp38_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp38_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp38_204 #x0000000000000001))
(assert (= var211058 temp38_204))
(assert (= temp38_205 #x0000000000000001))
(assert (= var211188 temp38_205))
(assert (= var3879401 var211188))
(assert (= temp38_206 #x0000000000000000))
(assert (= var3866802 temp38_206))
(assert (= temp38_207 #x0000000000000000))
(assert (= temp38_208
   (ite (bvslt var3866802 temp38_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp38_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp38_208)))
(assert (= var3879420 temp38_209))
(assert (bvslt (ite (bvslt var3866802 temp38_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp38_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp38_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp38_211 #x0000000000000001))
(assert (= var3879421 temp38_211))
(assert (= temp38_212 #x0000000000000000))
(assert (= var4079423 temp38_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp38_213 #x0000000000000002))
(assert (= var4208259 temp38_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp38_214 #x0000000000000000))
(assert (= var4273820 temp38_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4993424 var211201))
(assert (= var211388 var210913))
(assert (= temp38_215 #x0000000000000000))
(assert (= var211389
   (ite (distinct var211388 temp38_215) #x0000000000000001 #x0000000000000000)))
(assert (= var5914445 var211389))
(assert (= temp38_217 #x0000000000000001))
(assert (= temp38_216 temp38_217))
(assert (= temp38_218 #x0000000000000001))
(assert (= var6753770 temp38_218))
(assert (= temp38_220 #xffffffffffffffff))
(assert (= temp38_219 temp38_220))
(assert (= temp38_221 #x0000000000000001))
(assert (= var211058 temp38_221))
(model-add temp38_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp38_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp38_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp38_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





