(declare-fun temp1158_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp1158_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1158_3 () (_ BitVec 64))
(declare-fun temp1158_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1158_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp1158_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1158_7 () (_ BitVec 64))
(declare-fun temp1158_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1158_9 () (_ BitVec 64))
(declare-fun temp1158_10 () (_ BitVec 64))
(declare-fun temp1158_11 () (_ BitVec 64))
(declare-fun temp1158_12 () (_ BitVec 64))
(declare-fun temp1158_13 () (_ BitVec 64))
(declare-fun temp1158_14 () (_ BitVec 64))
(declare-fun temp1158_15 () (_ BitVec 64))
(declare-fun temp1158_16 () (_ BitVec 64))
(declare-fun temp1158_17 () (_ BitVec 64))
(declare-fun temp1158_18 () (_ BitVec 64))
(declare-fun temp1158_19 () (_ BitVec 64))
(declare-fun temp1158_20 () (_ BitVec 64))
(declare-fun temp1158_21 () (_ BitVec 64))
(declare-fun temp1158_22 () (_ BitVec 64))
(declare-fun temp1158_23 () (_ BitVec 64))
(declare-fun temp1158_24 () (_ BitVec 64))
(declare-fun temp1158_25 () (_ BitVec 64))
(declare-fun temp1158_26 () (_ BitVec 64))
(declare-fun temp1158_27 () (_ BitVec 64))
(declare-fun temp1158_28 () (_ BitVec 64))
(declare-fun temp1158_29 () (_ BitVec 64))
(declare-fun temp1158_30 () (_ BitVec 64))
(declare-fun temp1158_31 () (_ BitVec 64))
(declare-fun temp1158_32 () (_ BitVec 64))
(declare-fun temp1158_33 () (_ BitVec 64))
(declare-fun temp1158_34 () (_ BitVec 64))
(declare-fun temp1158_35 () (_ BitVec 64))
(declare-fun temp1158_36 () (_ BitVec 64))
(declare-fun temp1158_37 () (_ BitVec 64))
(declare-fun temp1158_38 () (_ BitVec 64))
(declare-fun temp1158_39 () (_ BitVec 64))
(declare-fun temp1158_40 () (_ BitVec 64))
(declare-fun temp1158_41 () (_ BitVec 64))
(declare-fun temp1158_42 () (_ BitVec 64))
(declare-fun temp1158_43 () (_ BitVec 64))
(declare-fun temp1158_44 () (_ BitVec 64))
(declare-fun temp1158_45 () (_ BitVec 64))
(declare-fun temp1158_46 () (_ BitVec 64))
(declare-fun temp1158_47 () (_ BitVec 64))
(declare-fun temp1158_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp1158_49 () (_ BitVec 64))
(declare-fun temp1158_50 () (_ BitVec 64))
(declare-fun temp1158_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1158_52 () (_ BitVec 64))
(declare-fun temp1158_53 () (_ BitVec 64))
(declare-fun temp1158_54 () (_ BitVec 64))
(declare-fun temp1158_55 () (_ BitVec 64))
(declare-fun temp1158_56 () (_ BitVec 64))
(declare-fun temp1158_57 () (_ BitVec 64))
(declare-fun temp1158_58 () (_ BitVec 64))
(declare-fun temp1158_59 () (_ BitVec 64))
(declare-fun temp1158_60 () (_ BitVec 64))
(declare-fun temp1158_61 () (_ BitVec 64))
(declare-fun temp1158_62 () (_ BitVec 64))
(declare-fun temp1158_63 () (_ BitVec 64))
(declare-fun temp1158_64 () (_ BitVec 64))
(declare-fun temp1158_65 () (_ BitVec 64))
(declare-fun temp1158_66 () (_ BitVec 64))
(declare-fun temp1158_67 () (_ BitVec 64))
(declare-fun temp1158_68 () (_ BitVec 64))
(declare-fun temp1158_69 () (_ BitVec 64))
(declare-fun temp1158_70 () (_ BitVec 64))
(declare-fun temp1158_71 () (_ BitVec 64))
(declare-fun temp1158_72 () (_ BitVec 64))
(declare-fun temp1158_73 () (_ BitVec 64))
(declare-fun temp1158_74 () (_ BitVec 64))
(declare-fun temp1158_75 () (_ BitVec 64))
(declare-fun temp1158_76 () (_ BitVec 64))
(declare-fun temp1158_77 () (_ BitVec 64))
(declare-fun temp1158_78 () (_ BitVec 64))
(declare-fun temp1158_79 () (_ BitVec 64))
(declare-fun temp1158_80 () (_ BitVec 64))
(declare-fun temp1158_81 () (_ BitVec 64))
(declare-fun temp1158_82 () (_ BitVec 64))
(declare-fun temp1158_83 () (_ BitVec 64))
(declare-fun temp1158_84 () (_ BitVec 64))
(declare-fun temp1158_85 () (_ BitVec 64))
(declare-fun temp1158_86 () (_ BitVec 64))
(declare-fun temp1158_87 () (_ BitVec 64))
(declare-fun temp1158_88 () (_ BitVec 64))
(declare-fun temp1158_89 () (_ BitVec 64))
(declare-fun temp1158_90 () (_ BitVec 64))
(declare-fun temp1158_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp1158_92 () (_ BitVec 64))
(declare-fun temp1158_93 () (_ BitVec 64))
(declare-fun temp1158_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1158_95 () (_ BitVec 64))
(declare-fun temp1158_96 () (_ BitVec 64))
(declare-fun temp1158_97 () (_ BitVec 64))
(declare-fun temp1158_98 () (_ BitVec 64))
(declare-fun temp1158_99 () (_ BitVec 64))
(declare-fun temp1158_100 () (_ BitVec 64))
(declare-fun temp1158_101 () (_ BitVec 64))
(declare-fun temp1158_102 () (_ BitVec 64))
(declare-fun temp1158_103 () (_ BitVec 64))
(declare-fun temp1158_104 () (_ BitVec 64))
(declare-fun temp1158_105 () (_ BitVec 64))
(declare-fun temp1158_106 () (_ BitVec 64))
(declare-fun temp1158_107 () (_ BitVec 64))
(declare-fun temp1158_108 () (_ BitVec 64))
(declare-fun temp1158_109 () (_ BitVec 64))
(declare-fun temp1158_110 () (_ BitVec 64))
(declare-fun temp1158_111 () (_ BitVec 64))
(declare-fun temp1158_112 () (_ BitVec 64))
(declare-fun temp1158_113 () (_ BitVec 64))
(declare-fun temp1158_114 () (_ BitVec 64))
(declare-fun temp1158_115 () (_ BitVec 64))
(declare-fun temp1158_116 () (_ BitVec 64))
(declare-fun temp1158_117 () (_ BitVec 64))
(declare-fun temp1158_118 () (_ BitVec 64))
(declare-fun temp1158_119 () (_ BitVec 64))
(declare-fun temp1158_120 () (_ BitVec 64))
(declare-fun temp1158_121 () (_ BitVec 64))
(declare-fun temp1158_122 () (_ BitVec 64))
(declare-fun temp1158_123 () (_ BitVec 64))
(declare-fun temp1158_124 () (_ BitVec 64))
(declare-fun temp1158_125 () (_ BitVec 64))
(declare-fun temp1158_126 () (_ BitVec 64))
(declare-fun temp1158_127 () (_ BitVec 64))
(declare-fun temp1158_128 () (_ BitVec 64))
(declare-fun temp1158_129 () (_ BitVec 64))
(declare-fun temp1158_130 () (_ BitVec 64))
(declare-fun temp1158_131 () (_ BitVec 64))
(declare-fun temp1158_132 () (_ BitVec 64))
(declare-fun temp1158_133 () (_ BitVec 64))
(declare-fun temp1158_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp1158_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp1158_136 () (_ BitVec 64))
(declare-fun temp1158_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp1158_138 () (_ BitVec 64))
(declare-fun temp1158_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1158_140 () (_ BitVec 64))
(declare-fun temp1158_141 () (_ BitVec 64))
(declare-fun temp1158_142 () (_ BitVec 64))
(declare-fun temp1158_143 () (_ BitVec 64))
(declare-fun temp1158_144 () (_ BitVec 64))
(declare-fun temp1158_145 () (_ BitVec 64))
(declare-fun temp1158_146 () (_ BitVec 64))
(declare-fun temp1158_147 () (_ BitVec 64))
(declare-fun temp1158_148 () (_ BitVec 64))
(declare-fun temp1158_149 () (_ BitVec 64))
(declare-fun temp1158_150 () (_ BitVec 64))
(declare-fun temp1158_151 () (_ BitVec 64))
(declare-fun temp1158_152 () (_ BitVec 64))
(declare-fun temp1158_153 () (_ BitVec 64))
(declare-fun temp1158_154 () (_ BitVec 64))
(declare-fun temp1158_155 () (_ BitVec 64))
(declare-fun temp1158_157 () (_ BitVec 64))
(declare-fun temp1158_158 () (_ BitVec 64))
(declare-fun temp1158_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp1158_159 () (_ BitVec 64))
(declare-fun temp1158_160 () (_ BitVec 64))
(declare-fun temp1158_162 () (_ BitVec 64))
(declare-fun temp1158_163 () (_ BitVec 64))
(declare-fun temp1158_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp1158_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp1158_165 () (_ BitVec 64))
(declare-fun temp1158_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp1158_167 () (_ BitVec 64))
(declare-fun temp1158_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp1158_169 () (_ BitVec 64))
(declare-fun temp1158_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1158_171 () (_ BitVec 64))
(declare-fun temp1158_172 () (_ BitVec 64))
(declare-fun temp1158_173 () (_ BitVec 64))
(declare-fun temp1158_174 () (_ BitVec 64))
(declare-fun temp1158_175 () (_ BitVec 64))
(declare-fun temp1158_176 () (_ BitVec 64))
(declare-fun temp1158_177 () (_ BitVec 64))
(declare-fun temp1158_178 () (_ BitVec 64))
(declare-fun temp1158_179 () (_ BitVec 64))
(declare-fun temp1158_180 () (_ BitVec 64))
(declare-fun temp1158_181 () (_ BitVec 64))
(declare-fun temp1158_182 () (_ BitVec 64))
(declare-fun temp1158_183 () (_ BitVec 64))
(declare-fun temp1158_184 () (_ BitVec 64))
(declare-fun temp1158_185 () (_ BitVec 64))
(declare-fun temp1158_186 () (_ BitVec 64))
(declare-fun temp1158_187 () (_ BitVec 64))
(declare-fun temp1158_188 () (_ BitVec 64))
(declare-fun temp1158_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp1158_190 () (_ BitVec 64))
(declare-fun temp1158_192 () (_ BitVec 64))
(declare-fun temp1158_193 () (_ BitVec 64))
(declare-fun temp1158_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp1158_194 () (_ BitVec 64))
(declare-fun temp1158_195 () (_ BitVec 64))
(declare-fun temp1158_197 () (_ BitVec 64))
(declare-fun temp1158_198 () (_ BitVec 64))
(declare-fun temp1158_196 () (_ BitVec 64))
(declare-fun temp1158_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp1158_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp1158_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp1158_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp1158_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp1158_204 () (_ BitVec 64))
(declare-fun temp1158_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp1158_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp1158_207 () (_ BitVec 64))
(declare-fun temp1158_208 () (_ BitVec 64))
(declare-fun temp1158_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp1158_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp1158_211 () (_ BitVec 64))
(declare-fun temp1158_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp1158_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp1158_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4469136 () (_ BitVec 64))
(declare-fun var4731280 () (_ BitVec 64))
(declare-fun temp1158_215 () (_ BitVec 64))
(declare-fun var212414 () (_ BitVec 64))
(declare-fun temp1158_216 () (_ BitVec 64))
(declare-fun temp1158_217 () (_ BitVec 64))
(declare-fun var5060227 () (_ BitVec 64))
(declare-fun var5125772 () (_ BitVec 64))
(declare-fun temp1158_218 () (_ BitVec 64))
(assert (= temp1158_1 #x0000000000000001))
(assert (= var77203 temp1158_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp1158_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp1158_2)))
(assert (= temp1158_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1158_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1158_4 #x0000000000000000))
(assert (= var210941 temp1158_4))
(assert (= temp1158_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp1158_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1158_6 #x0000000000000000))
(assert (= var210986 temp1158_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp1158_7 #x0000000000000000))
(assert (= temp1158_8 temp1158_7))
(assert (= temp1158_9 (select ARGNAME_padding_NAMEEND_VAL temp1158_8)))
(assert (= temp1158_10 #x0000000000000001))
(assert (= temp1158_11 temp1158_10))
(assert (= temp1158_12 (select ARGNAME_padding_NAMEEND_VAL temp1158_11)))
(assert (= temp1158_13 #x0000000000000002))
(assert (= temp1158_14 temp1158_13))
(assert (= temp1158_15 (select ARGNAME_padding_NAMEEND_VAL temp1158_14)))
(assert (= temp1158_16 #x0000000000000003))
(assert (= temp1158_17 temp1158_16))
(assert (= temp1158_18 (select ARGNAME_padding_NAMEEND_VAL temp1158_17)))
(assert (= temp1158_19 #x0000000000000004))
(assert (= temp1158_20 temp1158_19))
(assert (= temp1158_21 (select ARGNAME_padding_NAMEEND_VAL temp1158_20)))
(assert (= temp1158_22 #x0000000000000005))
(assert (= temp1158_23 temp1158_22))
(assert (= temp1158_24 (select ARGNAME_padding_NAMEEND_VAL temp1158_23)))
(assert (= temp1158_25 #x0000000000000000))
(assert (= temp1158_26 #x0000000000000000))
(assert (= temp1158_27 temp1158_26))
(assert (= temp1158_28 (select ARGNAME_padding_NAMEEND_VAL temp1158_27)))
(assert (= temp1158_29 #x0000000000000000))
(assert (= temp1158_30 #x0000000000000001))
(assert (= temp1158_31 temp1158_30))
(assert (= temp1158_32 (select ARGNAME_padding_NAMEEND_VAL temp1158_31)))
(assert (= temp1158_33 #x0000000000000000))
(assert (= temp1158_34 #x0000000000000002))
(assert (= temp1158_35 temp1158_34))
(assert (= temp1158_36 (select ARGNAME_padding_NAMEEND_VAL temp1158_35)))
(assert (= temp1158_37 #x0000000000000000))
(assert (= temp1158_38 #x0000000000000003))
(assert (= temp1158_39 temp1158_38))
(assert (= temp1158_40 (select ARGNAME_padding_NAMEEND_VAL temp1158_39)))
(assert (= temp1158_41 #x0000000000000000))
(assert (= temp1158_42 #x0000000000000004))
(assert (= temp1158_43 temp1158_42))
(assert (= temp1158_44 (select ARGNAME_padding_NAMEEND_VAL temp1158_43)))
(assert (= temp1158_45 #x0000000000000000))
(assert (= temp1158_46 #x0000000000000005))
(assert (= temp1158_47 temp1158_46))
(assert (= temp1158_48 (select ARGNAME_padding_NAMEEND_VAL temp1158_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp1158_28 temp1158_25)
             (bvslt temp1158_32 temp1158_29)
             (bvslt temp1158_36 temp1158_33)
             (bvslt temp1158_40 temp1158_37)
             (bvslt temp1158_44 temp1158_41)
             (bvslt temp1158_48 temp1158_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1158_49 #x0000000000000000))
(assert (= var1191714 temp1158_49))
(assert (= temp1158_50 #x0000000000000000))
(assert (= temp1158_51 temp1158_50))
(assert (= temp1158_52 (select ARGNAME_output_padding_NAMEEND_VAL temp1158_51)))
(assert (= temp1158_53 #x0000000000000001))
(assert (= temp1158_54 temp1158_53))
(assert (= temp1158_55 (select ARGNAME_output_padding_NAMEEND_VAL temp1158_54)))
(assert (= temp1158_56 #x0000000000000002))
(assert (= temp1158_57 temp1158_56))
(assert (= temp1158_58 (select ARGNAME_output_padding_NAMEEND_VAL temp1158_57)))
(assert (= temp1158_59 #x0000000000000003))
(assert (= temp1158_60 temp1158_59))
(assert (= temp1158_61 (select ARGNAME_output_padding_NAMEEND_VAL temp1158_60)))
(assert (= temp1158_62 #x0000000000000004))
(assert (= temp1158_63 temp1158_62))
(assert (= temp1158_64 (select ARGNAME_output_padding_NAMEEND_VAL temp1158_63)))
(assert (= temp1158_65 #x0000000000000005))
(assert (= temp1158_66 temp1158_65))
(assert (= temp1158_67 (select ARGNAME_output_padding_NAMEEND_VAL temp1158_66)))
(assert (= temp1158_68 #x0000000000000000))
(assert (= temp1158_69 #x0000000000000000))
(assert (= temp1158_70 temp1158_69))
(assert (= temp1158_71 (select ARGNAME_output_padding_NAMEEND_VAL temp1158_70)))
(assert (= temp1158_72 #x0000000000000000))
(assert (= temp1158_73 #x0000000000000001))
(assert (= temp1158_74 temp1158_73))
(assert (= temp1158_75 (select ARGNAME_output_padding_NAMEEND_VAL temp1158_74)))
(assert (= temp1158_76 #x0000000000000000))
(assert (= temp1158_77 #x0000000000000002))
(assert (= temp1158_78 temp1158_77))
(assert (= temp1158_79 (select ARGNAME_output_padding_NAMEEND_VAL temp1158_78)))
(assert (= temp1158_80 #x0000000000000000))
(assert (= temp1158_81 #x0000000000000003))
(assert (= temp1158_82 temp1158_81))
(assert (= temp1158_83 (select ARGNAME_output_padding_NAMEEND_VAL temp1158_82)))
(assert (= temp1158_84 #x0000000000000000))
(assert (= temp1158_85 #x0000000000000004))
(assert (= temp1158_86 temp1158_85))
(assert (= temp1158_87 (select ARGNAME_output_padding_NAMEEND_VAL temp1158_86)))
(assert (= temp1158_88 #x0000000000000000))
(assert (= temp1158_89 #x0000000000000005))
(assert (= temp1158_90 temp1158_89))
(assert (= temp1158_91 (select ARGNAME_output_padding_NAMEEND_VAL temp1158_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp1158_71 temp1158_68)
             (bvslt temp1158_75 temp1158_72)
             (bvslt temp1158_79 temp1158_76)
             (bvslt temp1158_83 temp1158_80)
             (bvslt temp1158_87 temp1158_84)
             (bvslt temp1158_91 temp1158_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1158_92 #x0000000000000000))
(assert (= var1191725 temp1158_92))
(assert (= temp1158_93 #x0000000000000000))
(assert (= temp1158_94 temp1158_93))
(assert (= temp1158_95 (select ARGNAME_stride_NAMEEND_VAL temp1158_94)))
(assert (= temp1158_96 #x0000000000000001))
(assert (= temp1158_97 temp1158_96))
(assert (= temp1158_98 (select ARGNAME_stride_NAMEEND_VAL temp1158_97)))
(assert (= temp1158_99 #x0000000000000002))
(assert (= temp1158_100 temp1158_99))
(assert (= temp1158_101 (select ARGNAME_stride_NAMEEND_VAL temp1158_100)))
(assert (= temp1158_102 #x0000000000000003))
(assert (= temp1158_103 temp1158_102))
(assert (= temp1158_104 (select ARGNAME_stride_NAMEEND_VAL temp1158_103)))
(assert (= temp1158_105 #x0000000000000004))
(assert (= temp1158_106 temp1158_105))
(assert (= temp1158_107 (select ARGNAME_stride_NAMEEND_VAL temp1158_106)))
(assert (= temp1158_108 #x0000000000000005))
(assert (= temp1158_109 temp1158_108))
(assert (= temp1158_110 (select ARGNAME_stride_NAMEEND_VAL temp1158_109)))
(assert (= temp1158_111 #x0000000000000000))
(assert (= temp1158_112 #x0000000000000000))
(assert (= temp1158_113 temp1158_112))
(assert (= temp1158_114 (select ARGNAME_stride_NAMEEND_VAL temp1158_113)))
(assert (= temp1158_115 #x0000000000000000))
(assert (= temp1158_116 #x0000000000000001))
(assert (= temp1158_117 temp1158_116))
(assert (= temp1158_118 (select ARGNAME_stride_NAMEEND_VAL temp1158_117)))
(assert (= temp1158_119 #x0000000000000000))
(assert (= temp1158_120 #x0000000000000002))
(assert (= temp1158_121 temp1158_120))
(assert (= temp1158_122 (select ARGNAME_stride_NAMEEND_VAL temp1158_121)))
(assert (= temp1158_123 #x0000000000000000))
(assert (= temp1158_124 #x0000000000000003))
(assert (= temp1158_125 temp1158_124))
(assert (= temp1158_126 (select ARGNAME_stride_NAMEEND_VAL temp1158_125)))
(assert (= temp1158_127 #x0000000000000000))
(assert (= temp1158_128 #x0000000000000004))
(assert (= temp1158_129 temp1158_128))
(assert (= temp1158_130 (select ARGNAME_stride_NAMEEND_VAL temp1158_129)))
(assert (= temp1158_131 #x0000000000000000))
(assert (= temp1158_132 #x0000000000000005))
(assert (= temp1158_133 temp1158_132))
(assert (= temp1158_134 (select ARGNAME_stride_NAMEEND_VAL temp1158_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp1158_114 temp1158_111)
             (bvsle temp1158_118 temp1158_115)
             (bvsle temp1158_122 temp1158_119)
             (bvsle temp1158_126 temp1158_123)
             (bvsle temp1158_130 temp1158_127)
             (bvsle temp1158_134 temp1158_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1158_135 #x0000000000000000))
(assert (= var1191735 temp1158_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1158_136 #x0000000000000001))
(assert (= var1191747 temp1158_136))
(assert (= temp1158_137 #x0000000000000000))
(assert (= var1179826 temp1158_137))
(assert (= temp1158_138 #x0000000000000000))
(assert (= temp1158_139 temp1158_138))
(assert (= temp1158_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1158_139)))
(assert (= temp1158_141 #x0000000000000001))
(assert (= temp1158_142 temp1158_141))
(assert (= temp1158_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1158_142)))
(assert (= temp1158_144 #x0000000000000002))
(assert (= temp1158_145 temp1158_144))
(assert (= temp1158_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1158_145)))
(assert (= temp1158_147 #x0000000000000003))
(assert (= temp1158_148 temp1158_147))
(assert (= temp1158_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1158_148)))
(assert (= temp1158_150 #x0000000000000004))
(assert (= temp1158_151 temp1158_150))
(assert (= temp1158_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1158_151)))
(assert (= temp1158_153 #x0000000000000005))
(assert (= temp1158_154 temp1158_153))
(assert (= temp1158_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1158_154)))
(assert (= temp1158_157 var1179826))
(assert (= temp1158_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1158_157)))
(assert (= temp1158_156 temp1158_158))
(assert (= var1191780
   (ite (bvslt temp1158_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1158_159 #x0000000000000000))
(assert (= var1191780 temp1158_159))
(assert (= temp1158_160 #x0000000000000000))
(assert (= var1179826 temp1158_160))
(assert (= temp1158_162 var1179826))
(assert (= temp1158_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1158_162)))
(assert (= temp1158_161 temp1158_163))
(assert (= var1191802 (bvsmod temp1158_161 ARGNAME_groups_NAMEEND)))
(assert (= temp1158_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp1158_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp1158_165 #x0000000000000001))
(assert (= var1191803 temp1158_165))
(assert (= temp1158_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp1158_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1158_167 #x0000000000000001))
(assert (= var1191823 temp1158_167))
(assert (= temp1158_168 #x0000000000000001))
(assert (= var1180714 temp1158_168))
(assert (= temp1158_169 #x0000000000000000))
(assert (= temp1158_170 temp1158_169))
(assert (= temp1158_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp1158_170)))
(assert (= temp1158_172 #x0000000000000001))
(assert (= temp1158_173 temp1158_172))
(assert (= temp1158_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp1158_173)))
(assert (= temp1158_175 #x0000000000000002))
(assert (= temp1158_176 temp1158_175))
(assert (= temp1158_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp1158_176)))
(assert (= temp1158_178 #x0000000000000003))
(assert (= temp1158_179 temp1158_178))
(assert (= temp1158_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp1158_179)))
(assert (= temp1158_181 #x0000000000000004))
(assert (= temp1158_182 temp1158_181))
(assert (= temp1158_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp1158_182)))
(assert (= temp1158_184 #x0000000000000005))
(assert (= temp1158_185 temp1158_184))
(assert (= temp1158_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp1158_185)))
(assert (= temp1158_187 #x0000000000000000))
(assert (= temp1158_188
   (ite (bvslt var1180714 temp1158_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp1158_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp1158_188)))
(assert (= var1191831 temp1158_189))
(assert (bvslt (ite (bvslt var1180714 temp1158_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1158_190 #x0000000000000001))
(assert (= var1180714 temp1158_190))
(assert (= temp1158_192 var1180714))
(assert (= temp1158_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1158_192)))
(assert (= temp1158_191 temp1158_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp1158_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp1158_194 #x0000000000000001))
(assert (= var1191836 temp1158_194))
(assert (= temp1158_195 #x0000000000000000))
(assert (= var1179826 temp1158_195))
(assert (= temp1158_197 var1179826))
(assert (= temp1158_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1158_197)))
(assert (= temp1158_196 temp1158_198))
(assert (= temp1158_199 #x0000000000000002))
(assert (= var1586025 temp1158_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp1158_200 #x0000000000000001))
(assert (= var1191993 temp1158_200))
(assert (= temp1158_201 #x0000000000000001))
(assert (= var2700303 temp1158_201))
(assert (= temp1158_202 #x0000000000000001))
(assert (= var2962447 temp1158_202))
(assert (= temp1158_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1158_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1158_204 #x0000000000000001))
(assert (= var211058 temp1158_204))
(assert (= temp1158_205 #x0000000000000001))
(assert (= var211188 temp1158_205))
(assert (= var3879401 var211188))
(assert (= temp1158_206 #x0000000000000000))
(assert (= var3866802 temp1158_206))
(assert (= temp1158_207 #x0000000000000000))
(assert (= temp1158_208
   (ite (bvslt var3866802 temp1158_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp1158_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp1158_208)))
(assert (= var3879420 temp1158_209))
(assert (bvslt (ite (bvslt var3866802 temp1158_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1158_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp1158_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp1158_211 #x0000000000000001))
(assert (= var3879421 temp1158_211))
(assert (= temp1158_212 #x0000000000000000))
(assert (= var4079423 temp1158_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp1158_213 #x0000000000000002))
(assert (= var4208259 temp1158_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1158_214 #x0000000000000000))
(assert (= var4273820 temp1158_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4469136 var211201))
(assert (= var4731280 var211201))
(assert (= temp1158_215 #x0000000000000001))
(assert (= var212414
   (ite (= ARGNAME_groups_NAMEEND temp1158_215)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1158_216 #x0000000000000000))
(assert (= var212414 temp1158_216))
(assert (= temp1158_217 #x0000000000000002))
(assert (= var5060227 temp1158_217))
(assert (= var5125772 var5060227))
(assert (= temp1158_218 #x0000000000000001))
(assert (= var211058 temp1158_218))
(model-add temp1158_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp1158_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1158_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp1158_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





