(declare-fun temp10362_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10362_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10362_3 () (_ BitVec 64))
(declare-fun temp10362_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10362_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10362_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10362_7 () (_ BitVec 64))
(declare-fun temp10362_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10362_9 () (_ BitVec 64))
(declare-fun temp10362_10 () (_ BitVec 64))
(declare-fun temp10362_11 () (_ BitVec 64))
(declare-fun temp10362_12 () (_ BitVec 64))
(declare-fun temp10362_13 () (_ BitVec 64))
(declare-fun temp10362_14 () (_ BitVec 64))
(declare-fun temp10362_15 () (_ BitVec 64))
(declare-fun temp10362_16 () (_ BitVec 64))
(declare-fun temp10362_17 () (_ BitVec 64))
(declare-fun temp10362_18 () (_ BitVec 64))
(declare-fun temp10362_19 () (_ BitVec 64))
(declare-fun temp10362_20 () (_ BitVec 64))
(declare-fun temp10362_21 () (_ BitVec 64))
(declare-fun temp10362_22 () (_ BitVec 64))
(declare-fun temp10362_23 () (_ BitVec 64))
(declare-fun temp10362_24 () (_ BitVec 64))
(declare-fun temp10362_25 () (_ BitVec 64))
(declare-fun temp10362_26 () (_ BitVec 64))
(declare-fun temp10362_27 () (_ BitVec 64))
(declare-fun temp10362_28 () (_ BitVec 64))
(declare-fun temp10362_29 () (_ BitVec 64))
(declare-fun temp10362_30 () (_ BitVec 64))
(declare-fun temp10362_31 () (_ BitVec 64))
(declare-fun temp10362_32 () (_ BitVec 64))
(declare-fun temp10362_33 () (_ BitVec 64))
(declare-fun temp10362_34 () (_ BitVec 64))
(declare-fun temp10362_35 () (_ BitVec 64))
(declare-fun temp10362_36 () (_ BitVec 64))
(declare-fun temp10362_37 () (_ BitVec 64))
(declare-fun temp10362_38 () (_ BitVec 64))
(declare-fun temp10362_39 () (_ BitVec 64))
(declare-fun temp10362_40 () (_ BitVec 64))
(declare-fun temp10362_41 () (_ BitVec 64))
(declare-fun temp10362_42 () (_ BitVec 64))
(declare-fun temp10362_43 () (_ BitVec 64))
(declare-fun temp10362_44 () (_ BitVec 64))
(declare-fun temp10362_45 () (_ BitVec 64))
(declare-fun temp10362_46 () (_ BitVec 64))
(declare-fun temp10362_47 () (_ BitVec 64))
(declare-fun temp10362_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10362_49 () (_ BitVec 64))
(declare-fun temp10362_50 () (_ BitVec 64))
(declare-fun temp10362_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10362_52 () (_ BitVec 64))
(declare-fun temp10362_53 () (_ BitVec 64))
(declare-fun temp10362_54 () (_ BitVec 64))
(declare-fun temp10362_55 () (_ BitVec 64))
(declare-fun temp10362_56 () (_ BitVec 64))
(declare-fun temp10362_57 () (_ BitVec 64))
(declare-fun temp10362_58 () (_ BitVec 64))
(declare-fun temp10362_59 () (_ BitVec 64))
(declare-fun temp10362_60 () (_ BitVec 64))
(declare-fun temp10362_61 () (_ BitVec 64))
(declare-fun temp10362_62 () (_ BitVec 64))
(declare-fun temp10362_63 () (_ BitVec 64))
(declare-fun temp10362_64 () (_ BitVec 64))
(declare-fun temp10362_65 () (_ BitVec 64))
(declare-fun temp10362_66 () (_ BitVec 64))
(declare-fun temp10362_67 () (_ BitVec 64))
(declare-fun temp10362_68 () (_ BitVec 64))
(declare-fun temp10362_69 () (_ BitVec 64))
(declare-fun temp10362_70 () (_ BitVec 64))
(declare-fun temp10362_71 () (_ BitVec 64))
(declare-fun temp10362_72 () (_ BitVec 64))
(declare-fun temp10362_73 () (_ BitVec 64))
(declare-fun temp10362_74 () (_ BitVec 64))
(declare-fun temp10362_75 () (_ BitVec 64))
(declare-fun temp10362_76 () (_ BitVec 64))
(declare-fun temp10362_77 () (_ BitVec 64))
(declare-fun temp10362_78 () (_ BitVec 64))
(declare-fun temp10362_79 () (_ BitVec 64))
(declare-fun temp10362_80 () (_ BitVec 64))
(declare-fun temp10362_81 () (_ BitVec 64))
(declare-fun temp10362_82 () (_ BitVec 64))
(declare-fun temp10362_83 () (_ BitVec 64))
(declare-fun temp10362_84 () (_ BitVec 64))
(declare-fun temp10362_85 () (_ BitVec 64))
(declare-fun temp10362_86 () (_ BitVec 64))
(declare-fun temp10362_87 () (_ BitVec 64))
(declare-fun temp10362_88 () (_ BitVec 64))
(declare-fun temp10362_89 () (_ BitVec 64))
(declare-fun temp10362_90 () (_ BitVec 64))
(declare-fun temp10362_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10362_92 () (_ BitVec 64))
(declare-fun temp10362_93 () (_ BitVec 64))
(declare-fun temp10362_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10362_95 () (_ BitVec 64))
(declare-fun temp10362_96 () (_ BitVec 64))
(declare-fun temp10362_97 () (_ BitVec 64))
(declare-fun temp10362_98 () (_ BitVec 64))
(declare-fun temp10362_99 () (_ BitVec 64))
(declare-fun temp10362_100 () (_ BitVec 64))
(declare-fun temp10362_101 () (_ BitVec 64))
(declare-fun temp10362_102 () (_ BitVec 64))
(declare-fun temp10362_103 () (_ BitVec 64))
(declare-fun temp10362_104 () (_ BitVec 64))
(declare-fun temp10362_105 () (_ BitVec 64))
(declare-fun temp10362_106 () (_ BitVec 64))
(declare-fun temp10362_107 () (_ BitVec 64))
(declare-fun temp10362_108 () (_ BitVec 64))
(declare-fun temp10362_109 () (_ BitVec 64))
(declare-fun temp10362_110 () (_ BitVec 64))
(declare-fun temp10362_111 () (_ BitVec 64))
(declare-fun temp10362_112 () (_ BitVec 64))
(declare-fun temp10362_113 () (_ BitVec 64))
(declare-fun temp10362_114 () (_ BitVec 64))
(declare-fun temp10362_115 () (_ BitVec 64))
(declare-fun temp10362_116 () (_ BitVec 64))
(declare-fun temp10362_117 () (_ BitVec 64))
(declare-fun temp10362_118 () (_ BitVec 64))
(declare-fun temp10362_119 () (_ BitVec 64))
(declare-fun temp10362_120 () (_ BitVec 64))
(declare-fun temp10362_121 () (_ BitVec 64))
(declare-fun temp10362_122 () (_ BitVec 64))
(declare-fun temp10362_123 () (_ BitVec 64))
(declare-fun temp10362_124 () (_ BitVec 64))
(declare-fun temp10362_125 () (_ BitVec 64))
(declare-fun temp10362_126 () (_ BitVec 64))
(declare-fun temp10362_127 () (_ BitVec 64))
(declare-fun temp10362_128 () (_ BitVec 64))
(declare-fun temp10362_129 () (_ BitVec 64))
(declare-fun temp10362_130 () (_ BitVec 64))
(declare-fun temp10362_131 () (_ BitVec 64))
(declare-fun temp10362_132 () (_ BitVec 64))
(declare-fun temp10362_133 () (_ BitVec 64))
(declare-fun temp10362_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10362_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10362_136 () (_ BitVec 64))
(declare-fun temp10362_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10362_138 () (_ BitVec 64))
(declare-fun temp10362_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10362_140 () (_ BitVec 64))
(declare-fun temp10362_141 () (_ BitVec 64))
(declare-fun temp10362_142 () (_ BitVec 64))
(declare-fun temp10362_143 () (_ BitVec 64))
(declare-fun temp10362_144 () (_ BitVec 64))
(declare-fun temp10362_145 () (_ BitVec 64))
(declare-fun temp10362_146 () (_ BitVec 64))
(declare-fun temp10362_147 () (_ BitVec 64))
(declare-fun temp10362_148 () (_ BitVec 64))
(declare-fun temp10362_149 () (_ BitVec 64))
(declare-fun temp10362_150 () (_ BitVec 64))
(declare-fun temp10362_151 () (_ BitVec 64))
(declare-fun temp10362_152 () (_ BitVec 64))
(declare-fun temp10362_153 () (_ BitVec 64))
(declare-fun temp10362_154 () (_ BitVec 64))
(declare-fun temp10362_155 () (_ BitVec 64))
(declare-fun temp10362_157 () (_ BitVec 64))
(declare-fun temp10362_158 () (_ BitVec 64))
(declare-fun temp10362_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10362_159 () (_ BitVec 64))
(declare-fun temp10362_160 () (_ BitVec 64))
(declare-fun temp10362_162 () (_ BitVec 64))
(declare-fun temp10362_163 () (_ BitVec 64))
(declare-fun temp10362_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10362_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10362_165 () (_ BitVec 64))
(declare-fun temp10362_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10362_167 () (_ BitVec 64))
(declare-fun temp10362_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10362_169 () (_ BitVec 64))
(declare-fun temp10362_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10362_171 () (_ BitVec 64))
(declare-fun temp10362_172 () (_ BitVec 64))
(declare-fun temp10362_173 () (_ BitVec 64))
(declare-fun temp10362_174 () (_ BitVec 64))
(declare-fun temp10362_175 () (_ BitVec 64))
(declare-fun temp10362_176 () (_ BitVec 64))
(declare-fun temp10362_177 () (_ BitVec 64))
(declare-fun temp10362_178 () (_ BitVec 64))
(declare-fun temp10362_179 () (_ BitVec 64))
(declare-fun temp10362_180 () (_ BitVec 64))
(declare-fun temp10362_181 () (_ BitVec 64))
(declare-fun temp10362_182 () (_ BitVec 64))
(declare-fun temp10362_183 () (_ BitVec 64))
(declare-fun temp10362_184 () (_ BitVec 64))
(declare-fun temp10362_185 () (_ BitVec 64))
(declare-fun temp10362_186 () (_ BitVec 64))
(declare-fun temp10362_187 () (_ BitVec 64))
(declare-fun temp10362_188 () (_ BitVec 64))
(declare-fun temp10362_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10362_190 () (_ BitVec 64))
(declare-fun temp10362_192 () (_ BitVec 64))
(declare-fun temp10362_193 () (_ BitVec 64))
(declare-fun temp10362_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10362_194 () (_ BitVec 64))
(declare-fun temp10362_195 () (_ BitVec 64))
(declare-fun temp10362_197 () (_ BitVec 64))
(declare-fun temp10362_198 () (_ BitVec 64))
(declare-fun temp10362_196 () (_ BitVec 64))
(declare-fun temp10362_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10362_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10362_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10362_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10362_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10362_204 () (_ BitVec 64))
(declare-fun temp10362_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10362_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10362_207 () (_ BitVec 64))
(declare-fun temp10362_208 () (_ BitVec 64))
(declare-fun temp10362_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10362_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10362_211 () (_ BitVec 64))
(declare-fun temp10362_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10362_213 () (_ BitVec 64))
(declare-fun temp10362_214 () (_ BitVec 64))
(declare-fun temp10362_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10362_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10362_217 () (_ BitVec 64))
(declare-fun temp10362_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10362_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10362_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4927888 () (_ BitVec 64))
(declare-fun var5190032 () (_ BitVec 64))
(declare-fun temp10362_221 () (_ BitVec 64))
(declare-fun var5517712 () (_ BitVec 64))
(declare-fun temp10362_222 () (_ BitVec 64))
(assert (= temp10362_1 #x0000000000000001))
(assert (= var77203 temp10362_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10362_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10362_2)))
(assert (= temp10362_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10362_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10362_4 #x0000000000000000))
(assert (= var210941 temp10362_4))
(assert (= temp10362_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10362_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10362_6 #x0000000000000000))
(assert (= var210986 temp10362_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10362_7 #x0000000000000000))
(assert (= temp10362_8 temp10362_7))
(assert (= temp10362_9 (select ARGNAME_padding_NAMEEND_VAL temp10362_8)))
(assert (= temp10362_10 #x0000000000000001))
(assert (= temp10362_11 temp10362_10))
(assert (= temp10362_12 (select ARGNAME_padding_NAMEEND_VAL temp10362_11)))
(assert (= temp10362_13 #x0000000000000002))
(assert (= temp10362_14 temp10362_13))
(assert (= temp10362_15 (select ARGNAME_padding_NAMEEND_VAL temp10362_14)))
(assert (= temp10362_16 #x0000000000000003))
(assert (= temp10362_17 temp10362_16))
(assert (= temp10362_18 (select ARGNAME_padding_NAMEEND_VAL temp10362_17)))
(assert (= temp10362_19 #x0000000000000004))
(assert (= temp10362_20 temp10362_19))
(assert (= temp10362_21 (select ARGNAME_padding_NAMEEND_VAL temp10362_20)))
(assert (= temp10362_22 #x0000000000000005))
(assert (= temp10362_23 temp10362_22))
(assert (= temp10362_24 (select ARGNAME_padding_NAMEEND_VAL temp10362_23)))
(assert (= temp10362_25 #x0000000000000000))
(assert (= temp10362_26 #x0000000000000000))
(assert (= temp10362_27 temp10362_26))
(assert (= temp10362_28 (select ARGNAME_padding_NAMEEND_VAL temp10362_27)))
(assert (= temp10362_29 #x0000000000000000))
(assert (= temp10362_30 #x0000000000000001))
(assert (= temp10362_31 temp10362_30))
(assert (= temp10362_32 (select ARGNAME_padding_NAMEEND_VAL temp10362_31)))
(assert (= temp10362_33 #x0000000000000000))
(assert (= temp10362_34 #x0000000000000002))
(assert (= temp10362_35 temp10362_34))
(assert (= temp10362_36 (select ARGNAME_padding_NAMEEND_VAL temp10362_35)))
(assert (= temp10362_37 #x0000000000000000))
(assert (= temp10362_38 #x0000000000000003))
(assert (= temp10362_39 temp10362_38))
(assert (= temp10362_40 (select ARGNAME_padding_NAMEEND_VAL temp10362_39)))
(assert (= temp10362_41 #x0000000000000000))
(assert (= temp10362_42 #x0000000000000004))
(assert (= temp10362_43 temp10362_42))
(assert (= temp10362_44 (select ARGNAME_padding_NAMEEND_VAL temp10362_43)))
(assert (= temp10362_45 #x0000000000000000))
(assert (= temp10362_46 #x0000000000000005))
(assert (= temp10362_47 temp10362_46))
(assert (= temp10362_48 (select ARGNAME_padding_NAMEEND_VAL temp10362_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10362_28 temp10362_25)
             (bvslt temp10362_32 temp10362_29)
             (bvslt temp10362_36 temp10362_33)
             (bvslt temp10362_40 temp10362_37)
             (bvslt temp10362_44 temp10362_41)
             (bvslt temp10362_48 temp10362_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10362_49 #x0000000000000000))
(assert (= var1191714 temp10362_49))
(assert (= temp10362_50 #x0000000000000000))
(assert (= temp10362_51 temp10362_50))
(assert (= temp10362_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10362_51)))
(assert (= temp10362_53 #x0000000000000001))
(assert (= temp10362_54 temp10362_53))
(assert (= temp10362_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10362_54)))
(assert (= temp10362_56 #x0000000000000002))
(assert (= temp10362_57 temp10362_56))
(assert (= temp10362_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10362_57)))
(assert (= temp10362_59 #x0000000000000003))
(assert (= temp10362_60 temp10362_59))
(assert (= temp10362_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10362_60)))
(assert (= temp10362_62 #x0000000000000004))
(assert (= temp10362_63 temp10362_62))
(assert (= temp10362_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10362_63)))
(assert (= temp10362_65 #x0000000000000005))
(assert (= temp10362_66 temp10362_65))
(assert (= temp10362_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10362_66)))
(assert (= temp10362_68 #x0000000000000000))
(assert (= temp10362_69 #x0000000000000000))
(assert (= temp10362_70 temp10362_69))
(assert (= temp10362_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10362_70)))
(assert (= temp10362_72 #x0000000000000000))
(assert (= temp10362_73 #x0000000000000001))
(assert (= temp10362_74 temp10362_73))
(assert (= temp10362_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10362_74)))
(assert (= temp10362_76 #x0000000000000000))
(assert (= temp10362_77 #x0000000000000002))
(assert (= temp10362_78 temp10362_77))
(assert (= temp10362_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10362_78)))
(assert (= temp10362_80 #x0000000000000000))
(assert (= temp10362_81 #x0000000000000003))
(assert (= temp10362_82 temp10362_81))
(assert (= temp10362_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10362_82)))
(assert (= temp10362_84 #x0000000000000000))
(assert (= temp10362_85 #x0000000000000004))
(assert (= temp10362_86 temp10362_85))
(assert (= temp10362_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10362_86)))
(assert (= temp10362_88 #x0000000000000000))
(assert (= temp10362_89 #x0000000000000005))
(assert (= temp10362_90 temp10362_89))
(assert (= temp10362_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10362_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10362_71 temp10362_68)
             (bvslt temp10362_75 temp10362_72)
             (bvslt temp10362_79 temp10362_76)
             (bvslt temp10362_83 temp10362_80)
             (bvslt temp10362_87 temp10362_84)
             (bvslt temp10362_91 temp10362_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10362_92 #x0000000000000000))
(assert (= var1191725 temp10362_92))
(assert (= temp10362_93 #x0000000000000000))
(assert (= temp10362_94 temp10362_93))
(assert (= temp10362_95 (select ARGNAME_stride_NAMEEND_VAL temp10362_94)))
(assert (= temp10362_96 #x0000000000000001))
(assert (= temp10362_97 temp10362_96))
(assert (= temp10362_98 (select ARGNAME_stride_NAMEEND_VAL temp10362_97)))
(assert (= temp10362_99 #x0000000000000002))
(assert (= temp10362_100 temp10362_99))
(assert (= temp10362_101 (select ARGNAME_stride_NAMEEND_VAL temp10362_100)))
(assert (= temp10362_102 #x0000000000000003))
(assert (= temp10362_103 temp10362_102))
(assert (= temp10362_104 (select ARGNAME_stride_NAMEEND_VAL temp10362_103)))
(assert (= temp10362_105 #x0000000000000004))
(assert (= temp10362_106 temp10362_105))
(assert (= temp10362_107 (select ARGNAME_stride_NAMEEND_VAL temp10362_106)))
(assert (= temp10362_108 #x0000000000000005))
(assert (= temp10362_109 temp10362_108))
(assert (= temp10362_110 (select ARGNAME_stride_NAMEEND_VAL temp10362_109)))
(assert (= temp10362_111 #x0000000000000000))
(assert (= temp10362_112 #x0000000000000000))
(assert (= temp10362_113 temp10362_112))
(assert (= temp10362_114 (select ARGNAME_stride_NAMEEND_VAL temp10362_113)))
(assert (= temp10362_115 #x0000000000000000))
(assert (= temp10362_116 #x0000000000000001))
(assert (= temp10362_117 temp10362_116))
(assert (= temp10362_118 (select ARGNAME_stride_NAMEEND_VAL temp10362_117)))
(assert (= temp10362_119 #x0000000000000000))
(assert (= temp10362_120 #x0000000000000002))
(assert (= temp10362_121 temp10362_120))
(assert (= temp10362_122 (select ARGNAME_stride_NAMEEND_VAL temp10362_121)))
(assert (= temp10362_123 #x0000000000000000))
(assert (= temp10362_124 #x0000000000000003))
(assert (= temp10362_125 temp10362_124))
(assert (= temp10362_126 (select ARGNAME_stride_NAMEEND_VAL temp10362_125)))
(assert (= temp10362_127 #x0000000000000000))
(assert (= temp10362_128 #x0000000000000004))
(assert (= temp10362_129 temp10362_128))
(assert (= temp10362_130 (select ARGNAME_stride_NAMEEND_VAL temp10362_129)))
(assert (= temp10362_131 #x0000000000000000))
(assert (= temp10362_132 #x0000000000000005))
(assert (= temp10362_133 temp10362_132))
(assert (= temp10362_134 (select ARGNAME_stride_NAMEEND_VAL temp10362_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10362_114 temp10362_111)
             (bvsle temp10362_118 temp10362_115)
             (bvsle temp10362_122 temp10362_119)
             (bvsle temp10362_126 temp10362_123)
             (bvsle temp10362_130 temp10362_127)
             (bvsle temp10362_134 temp10362_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10362_135 #x0000000000000000))
(assert (= var1191735 temp10362_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10362_136 #x0000000000000001))
(assert (= var1191747 temp10362_136))
(assert (= temp10362_137 #x0000000000000000))
(assert (= var1179826 temp10362_137))
(assert (= temp10362_138 #x0000000000000000))
(assert (= temp10362_139 temp10362_138))
(assert (= temp10362_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10362_139)))
(assert (= temp10362_141 #x0000000000000001))
(assert (= temp10362_142 temp10362_141))
(assert (= temp10362_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10362_142)))
(assert (= temp10362_144 #x0000000000000002))
(assert (= temp10362_145 temp10362_144))
(assert (= temp10362_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10362_145)))
(assert (= temp10362_147 #x0000000000000003))
(assert (= temp10362_148 temp10362_147))
(assert (= temp10362_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10362_148)))
(assert (= temp10362_150 #x0000000000000004))
(assert (= temp10362_151 temp10362_150))
(assert (= temp10362_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10362_151)))
(assert (= temp10362_153 #x0000000000000005))
(assert (= temp10362_154 temp10362_153))
(assert (= temp10362_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10362_154)))
(assert (= temp10362_157 var1179826))
(assert (= temp10362_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10362_157)))
(assert (= temp10362_156 temp10362_158))
(assert (= var1191780
   (ite (bvslt temp10362_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10362_159 #x0000000000000000))
(assert (= var1191780 temp10362_159))
(assert (= temp10362_160 #x0000000000000000))
(assert (= var1179826 temp10362_160))
(assert (= temp10362_162 var1179826))
(assert (= temp10362_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10362_162)))
(assert (= temp10362_161 temp10362_163))
(assert (= var1191802 (bvsmod temp10362_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10362_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10362_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10362_165 #x0000000000000001))
(assert (= var1191803 temp10362_165))
(assert (= temp10362_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10362_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10362_167 #x0000000000000001))
(assert (= var1191823 temp10362_167))
(assert (= temp10362_168 #x0000000000000001))
(assert (= var1180714 temp10362_168))
(assert (= temp10362_169 #x0000000000000000))
(assert (= temp10362_170 temp10362_169))
(assert (= temp10362_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10362_170)))
(assert (= temp10362_172 #x0000000000000001))
(assert (= temp10362_173 temp10362_172))
(assert (= temp10362_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10362_173)))
(assert (= temp10362_175 #x0000000000000002))
(assert (= temp10362_176 temp10362_175))
(assert (= temp10362_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10362_176)))
(assert (= temp10362_178 #x0000000000000003))
(assert (= temp10362_179 temp10362_178))
(assert (= temp10362_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10362_179)))
(assert (= temp10362_181 #x0000000000000004))
(assert (= temp10362_182 temp10362_181))
(assert (= temp10362_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10362_182)))
(assert (= temp10362_184 #x0000000000000005))
(assert (= temp10362_185 temp10362_184))
(assert (= temp10362_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10362_185)))
(assert (= temp10362_187 #x0000000000000000))
(assert (= temp10362_188
   (ite (bvslt var1180714 temp10362_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10362_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10362_188)))
(assert (= var1191831 temp10362_189))
(assert (bvslt (ite (bvslt var1180714 temp10362_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10362_190 #x0000000000000001))
(assert (= var1180714 temp10362_190))
(assert (= temp10362_192 var1180714))
(assert (= temp10362_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10362_192)))
(assert (= temp10362_191 temp10362_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10362_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10362_194 #x0000000000000001))
(assert (= var1191836 temp10362_194))
(assert (= temp10362_195 #x0000000000000000))
(assert (= var1179826 temp10362_195))
(assert (= temp10362_197 var1179826))
(assert (= temp10362_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10362_197)))
(assert (= temp10362_196 temp10362_198))
(assert (= temp10362_199 #x0000000000000002))
(assert (= var1586025 temp10362_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10362_200 #x0000000000000001))
(assert (= var1191993 temp10362_200))
(assert (= temp10362_201 #x0000000000000001))
(assert (= var2700303 temp10362_201))
(assert (= temp10362_202 #x0000000000000001))
(assert (= var2962447 temp10362_202))
(assert (= temp10362_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10362_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10362_204 #x0000000000000001))
(assert (= var211058 temp10362_204))
(assert (= temp10362_205 #x0000000000000001))
(assert (= var211188 temp10362_205))
(assert (= var3879401 var211188))
(assert (= temp10362_206 #x0000000000000000))
(assert (= var3866802 temp10362_206))
(assert (= temp10362_207 #x0000000000000000))
(assert (= temp10362_208
   (ite (bvslt var3866802 temp10362_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10362_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10362_208)))
(assert (= var3879420 temp10362_209))
(assert (bvslt (ite (bvslt var3866802 temp10362_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10362_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10362_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10362_211 #x0000000000000000))
(assert (= var3879421 temp10362_211))
(assert (= temp10362_212 #x0000000000000001))
(assert (= var3867690 temp10362_212))
(assert (= temp10362_213 #x0000000000000000))
(assert (= temp10362_214
   (ite (bvslt var3867690 temp10362_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10362_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10362_214)))
(assert (= var3879423 temp10362_215))
(assert (bvslt (ite (bvslt var3867690 temp10362_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10362_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10362_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10362_217 #x0000000000000001))
(assert (= var3879424 temp10362_217))
(assert (= temp10362_218 #x0000000000000000))
(assert (= var4079423 temp10362_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10362_219 #x0000000000000002))
(assert (= var4208259 temp10362_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10362_220 #x0000000000000000))
(assert (= var4273820 temp10362_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4927888 var211201))
(assert (= var5190032 var211201))
(assert (= temp10362_221 #x0000000000000000))
(assert (= var5517712 temp10362_221))
(assert (= temp10362_222 #x0000000000000001))
(assert (= var211058 temp10362_222))
(model-add temp10362_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10362_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10362_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10362_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))



