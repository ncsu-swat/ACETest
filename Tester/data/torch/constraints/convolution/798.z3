(declare-fun temp1064_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp1064_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1064_3 () (_ BitVec 64))
(declare-fun temp1064_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1064_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp1064_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1064_7 () (_ BitVec 64))
(declare-fun temp1064_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1064_9 () (_ BitVec 64))
(declare-fun temp1064_10 () (_ BitVec 64))
(declare-fun temp1064_11 () (_ BitVec 64))
(declare-fun temp1064_12 () (_ BitVec 64))
(declare-fun temp1064_13 () (_ BitVec 64))
(declare-fun temp1064_14 () (_ BitVec 64))
(declare-fun temp1064_15 () (_ BitVec 64))
(declare-fun temp1064_16 () (_ BitVec 64))
(declare-fun temp1064_17 () (_ BitVec 64))
(declare-fun temp1064_18 () (_ BitVec 64))
(declare-fun temp1064_19 () (_ BitVec 64))
(declare-fun temp1064_20 () (_ BitVec 64))
(declare-fun temp1064_21 () (_ BitVec 64))
(declare-fun temp1064_22 () (_ BitVec 64))
(declare-fun temp1064_23 () (_ BitVec 64))
(declare-fun temp1064_24 () (_ BitVec 64))
(declare-fun temp1064_25 () (_ BitVec 64))
(declare-fun temp1064_26 () (_ BitVec 64))
(declare-fun temp1064_27 () (_ BitVec 64))
(declare-fun temp1064_28 () (_ BitVec 64))
(declare-fun temp1064_29 () (_ BitVec 64))
(declare-fun temp1064_30 () (_ BitVec 64))
(declare-fun temp1064_31 () (_ BitVec 64))
(declare-fun temp1064_32 () (_ BitVec 64))
(declare-fun temp1064_33 () (_ BitVec 64))
(declare-fun temp1064_34 () (_ BitVec 64))
(declare-fun temp1064_35 () (_ BitVec 64))
(declare-fun temp1064_36 () (_ BitVec 64))
(declare-fun temp1064_37 () (_ BitVec 64))
(declare-fun temp1064_38 () (_ BitVec 64))
(declare-fun temp1064_39 () (_ BitVec 64))
(declare-fun temp1064_40 () (_ BitVec 64))
(declare-fun temp1064_41 () (_ BitVec 64))
(declare-fun temp1064_42 () (_ BitVec 64))
(declare-fun temp1064_43 () (_ BitVec 64))
(declare-fun temp1064_44 () (_ BitVec 64))
(declare-fun temp1064_45 () (_ BitVec 64))
(declare-fun temp1064_46 () (_ BitVec 64))
(declare-fun temp1064_47 () (_ BitVec 64))
(declare-fun temp1064_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp1064_49 () (_ BitVec 64))
(declare-fun temp1064_50 () (_ BitVec 64))
(declare-fun temp1064_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1064_52 () (_ BitVec 64))
(declare-fun temp1064_53 () (_ BitVec 64))
(declare-fun temp1064_54 () (_ BitVec 64))
(declare-fun temp1064_55 () (_ BitVec 64))
(declare-fun temp1064_56 () (_ BitVec 64))
(declare-fun temp1064_57 () (_ BitVec 64))
(declare-fun temp1064_58 () (_ BitVec 64))
(declare-fun temp1064_59 () (_ BitVec 64))
(declare-fun temp1064_60 () (_ BitVec 64))
(declare-fun temp1064_61 () (_ BitVec 64))
(declare-fun temp1064_62 () (_ BitVec 64))
(declare-fun temp1064_63 () (_ BitVec 64))
(declare-fun temp1064_64 () (_ BitVec 64))
(declare-fun temp1064_65 () (_ BitVec 64))
(declare-fun temp1064_66 () (_ BitVec 64))
(declare-fun temp1064_67 () (_ BitVec 64))
(declare-fun temp1064_68 () (_ BitVec 64))
(declare-fun temp1064_69 () (_ BitVec 64))
(declare-fun temp1064_70 () (_ BitVec 64))
(declare-fun temp1064_71 () (_ BitVec 64))
(declare-fun temp1064_72 () (_ BitVec 64))
(declare-fun temp1064_73 () (_ BitVec 64))
(declare-fun temp1064_74 () (_ BitVec 64))
(declare-fun temp1064_75 () (_ BitVec 64))
(declare-fun temp1064_76 () (_ BitVec 64))
(declare-fun temp1064_77 () (_ BitVec 64))
(declare-fun temp1064_78 () (_ BitVec 64))
(declare-fun temp1064_79 () (_ BitVec 64))
(declare-fun temp1064_80 () (_ BitVec 64))
(declare-fun temp1064_81 () (_ BitVec 64))
(declare-fun temp1064_82 () (_ BitVec 64))
(declare-fun temp1064_83 () (_ BitVec 64))
(declare-fun temp1064_84 () (_ BitVec 64))
(declare-fun temp1064_85 () (_ BitVec 64))
(declare-fun temp1064_86 () (_ BitVec 64))
(declare-fun temp1064_87 () (_ BitVec 64))
(declare-fun temp1064_88 () (_ BitVec 64))
(declare-fun temp1064_89 () (_ BitVec 64))
(declare-fun temp1064_90 () (_ BitVec 64))
(declare-fun temp1064_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp1064_92 () (_ BitVec 64))
(declare-fun temp1064_93 () (_ BitVec 64))
(declare-fun temp1064_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1064_95 () (_ BitVec 64))
(declare-fun temp1064_96 () (_ BitVec 64))
(declare-fun temp1064_97 () (_ BitVec 64))
(declare-fun temp1064_98 () (_ BitVec 64))
(declare-fun temp1064_99 () (_ BitVec 64))
(declare-fun temp1064_100 () (_ BitVec 64))
(declare-fun temp1064_101 () (_ BitVec 64))
(declare-fun temp1064_102 () (_ BitVec 64))
(declare-fun temp1064_103 () (_ BitVec 64))
(declare-fun temp1064_104 () (_ BitVec 64))
(declare-fun temp1064_105 () (_ BitVec 64))
(declare-fun temp1064_106 () (_ BitVec 64))
(declare-fun temp1064_107 () (_ BitVec 64))
(declare-fun temp1064_108 () (_ BitVec 64))
(declare-fun temp1064_109 () (_ BitVec 64))
(declare-fun temp1064_110 () (_ BitVec 64))
(declare-fun temp1064_111 () (_ BitVec 64))
(declare-fun temp1064_112 () (_ BitVec 64))
(declare-fun temp1064_113 () (_ BitVec 64))
(declare-fun temp1064_114 () (_ BitVec 64))
(declare-fun temp1064_115 () (_ BitVec 64))
(declare-fun temp1064_116 () (_ BitVec 64))
(declare-fun temp1064_117 () (_ BitVec 64))
(declare-fun temp1064_118 () (_ BitVec 64))
(declare-fun temp1064_119 () (_ BitVec 64))
(declare-fun temp1064_120 () (_ BitVec 64))
(declare-fun temp1064_121 () (_ BitVec 64))
(declare-fun temp1064_122 () (_ BitVec 64))
(declare-fun temp1064_123 () (_ BitVec 64))
(declare-fun temp1064_124 () (_ BitVec 64))
(declare-fun temp1064_125 () (_ BitVec 64))
(declare-fun temp1064_126 () (_ BitVec 64))
(declare-fun temp1064_127 () (_ BitVec 64))
(declare-fun temp1064_128 () (_ BitVec 64))
(declare-fun temp1064_129 () (_ BitVec 64))
(declare-fun temp1064_130 () (_ BitVec 64))
(declare-fun temp1064_131 () (_ BitVec 64))
(declare-fun temp1064_132 () (_ BitVec 64))
(declare-fun temp1064_133 () (_ BitVec 64))
(declare-fun temp1064_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp1064_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp1064_136 () (_ BitVec 64))
(declare-fun temp1064_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp1064_138 () (_ BitVec 64))
(declare-fun temp1064_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1064_140 () (_ BitVec 64))
(declare-fun temp1064_141 () (_ BitVec 64))
(declare-fun temp1064_142 () (_ BitVec 64))
(declare-fun temp1064_143 () (_ BitVec 64))
(declare-fun temp1064_144 () (_ BitVec 64))
(declare-fun temp1064_145 () (_ BitVec 64))
(declare-fun temp1064_146 () (_ BitVec 64))
(declare-fun temp1064_147 () (_ BitVec 64))
(declare-fun temp1064_148 () (_ BitVec 64))
(declare-fun temp1064_149 () (_ BitVec 64))
(declare-fun temp1064_150 () (_ BitVec 64))
(declare-fun temp1064_151 () (_ BitVec 64))
(declare-fun temp1064_152 () (_ BitVec 64))
(declare-fun temp1064_153 () (_ BitVec 64))
(declare-fun temp1064_154 () (_ BitVec 64))
(declare-fun temp1064_155 () (_ BitVec 64))
(declare-fun temp1064_157 () (_ BitVec 64))
(declare-fun temp1064_158 () (_ BitVec 64))
(declare-fun temp1064_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp1064_159 () (_ BitVec 64))
(declare-fun temp1064_160 () (_ BitVec 64))
(declare-fun temp1064_162 () (_ BitVec 64))
(declare-fun temp1064_163 () (_ BitVec 64))
(declare-fun temp1064_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp1064_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp1064_165 () (_ BitVec 64))
(declare-fun temp1064_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp1064_167 () (_ BitVec 64))
(declare-fun temp1064_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp1064_169 () (_ BitVec 64))
(declare-fun temp1064_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1064_171 () (_ BitVec 64))
(declare-fun temp1064_172 () (_ BitVec 64))
(declare-fun temp1064_173 () (_ BitVec 64))
(declare-fun temp1064_174 () (_ BitVec 64))
(declare-fun temp1064_175 () (_ BitVec 64))
(declare-fun temp1064_176 () (_ BitVec 64))
(declare-fun temp1064_177 () (_ BitVec 64))
(declare-fun temp1064_178 () (_ BitVec 64))
(declare-fun temp1064_179 () (_ BitVec 64))
(declare-fun temp1064_180 () (_ BitVec 64))
(declare-fun temp1064_181 () (_ BitVec 64))
(declare-fun temp1064_182 () (_ BitVec 64))
(declare-fun temp1064_183 () (_ BitVec 64))
(declare-fun temp1064_184 () (_ BitVec 64))
(declare-fun temp1064_185 () (_ BitVec 64))
(declare-fun temp1064_186 () (_ BitVec 64))
(declare-fun temp1064_187 () (_ BitVec 64))
(declare-fun temp1064_188 () (_ BitVec 64))
(declare-fun temp1064_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp1064_190 () (_ BitVec 64))
(declare-fun temp1064_192 () (_ BitVec 64))
(declare-fun temp1064_193 () (_ BitVec 64))
(declare-fun temp1064_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp1064_194 () (_ BitVec 64))
(declare-fun temp1064_195 () (_ BitVec 64))
(declare-fun temp1064_197 () (_ BitVec 64))
(declare-fun temp1064_198 () (_ BitVec 64))
(declare-fun temp1064_196 () (_ BitVec 64))
(declare-fun temp1064_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp1064_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp1064_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp1064_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp1064_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp1064_204 () (_ BitVec 64))
(declare-fun temp1064_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp1064_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp1064_207 () (_ BitVec 64))
(declare-fun temp1064_208 () (_ BitVec 64))
(declare-fun temp1064_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp1064_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp1064_211 () (_ BitVec 64))
(declare-fun temp1064_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp1064_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp1064_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4469136 () (_ BitVec 64))
(declare-fun var4731280 () (_ BitVec 64))
(declare-fun temp1064_215 () (_ BitVec 64))
(declare-fun var212414 () (_ BitVec 64))
(declare-fun temp1064_216 () (_ BitVec 64))
(declare-fun temp1064_217 () (_ BitVec 64))
(declare-fun var5060227 () (_ BitVec 64))
(declare-fun var5060229 () (_ BitVec 64))
(declare-fun var5125772 () (_ BitVec 64))
(declare-fun var5125773 () (_ BitVec 64))
(declare-fun temp1064_218 () (_ BitVec 64))
(assert (= temp1064_1 #x0000000000000001))
(assert (= var77203 temp1064_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp1064_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp1064_2)))
(assert (= temp1064_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1064_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1064_4 #x0000000000000000))
(assert (= var210941 temp1064_4))
(assert (= temp1064_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp1064_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1064_6 #x0000000000000000))
(assert (= var210986 temp1064_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp1064_7 #x0000000000000000))
(assert (= temp1064_8 temp1064_7))
(assert (= temp1064_9 (select ARGNAME_padding_NAMEEND_VAL temp1064_8)))
(assert (= temp1064_10 #x0000000000000001))
(assert (= temp1064_11 temp1064_10))
(assert (= temp1064_12 (select ARGNAME_padding_NAMEEND_VAL temp1064_11)))
(assert (= temp1064_13 #x0000000000000002))
(assert (= temp1064_14 temp1064_13))
(assert (= temp1064_15 (select ARGNAME_padding_NAMEEND_VAL temp1064_14)))
(assert (= temp1064_16 #x0000000000000003))
(assert (= temp1064_17 temp1064_16))
(assert (= temp1064_18 (select ARGNAME_padding_NAMEEND_VAL temp1064_17)))
(assert (= temp1064_19 #x0000000000000004))
(assert (= temp1064_20 temp1064_19))
(assert (= temp1064_21 (select ARGNAME_padding_NAMEEND_VAL temp1064_20)))
(assert (= temp1064_22 #x0000000000000005))
(assert (= temp1064_23 temp1064_22))
(assert (= temp1064_24 (select ARGNAME_padding_NAMEEND_VAL temp1064_23)))
(assert (= temp1064_25 #x0000000000000000))
(assert (= temp1064_26 #x0000000000000000))
(assert (= temp1064_27 temp1064_26))
(assert (= temp1064_28 (select ARGNAME_padding_NAMEEND_VAL temp1064_27)))
(assert (= temp1064_29 #x0000000000000000))
(assert (= temp1064_30 #x0000000000000001))
(assert (= temp1064_31 temp1064_30))
(assert (= temp1064_32 (select ARGNAME_padding_NAMEEND_VAL temp1064_31)))
(assert (= temp1064_33 #x0000000000000000))
(assert (= temp1064_34 #x0000000000000002))
(assert (= temp1064_35 temp1064_34))
(assert (= temp1064_36 (select ARGNAME_padding_NAMEEND_VAL temp1064_35)))
(assert (= temp1064_37 #x0000000000000000))
(assert (= temp1064_38 #x0000000000000003))
(assert (= temp1064_39 temp1064_38))
(assert (= temp1064_40 (select ARGNAME_padding_NAMEEND_VAL temp1064_39)))
(assert (= temp1064_41 #x0000000000000000))
(assert (= temp1064_42 #x0000000000000004))
(assert (= temp1064_43 temp1064_42))
(assert (= temp1064_44 (select ARGNAME_padding_NAMEEND_VAL temp1064_43)))
(assert (= temp1064_45 #x0000000000000000))
(assert (= temp1064_46 #x0000000000000005))
(assert (= temp1064_47 temp1064_46))
(assert (= temp1064_48 (select ARGNAME_padding_NAMEEND_VAL temp1064_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp1064_28 temp1064_25)
             (bvslt temp1064_32 temp1064_29)
             (bvslt temp1064_36 temp1064_33)
             (bvslt temp1064_40 temp1064_37)
             (bvslt temp1064_44 temp1064_41)
             (bvslt temp1064_48 temp1064_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1064_49 #x0000000000000000))
(assert (= var1191714 temp1064_49))
(assert (= temp1064_50 #x0000000000000000))
(assert (= temp1064_51 temp1064_50))
(assert (= temp1064_52 (select ARGNAME_output_padding_NAMEEND_VAL temp1064_51)))
(assert (= temp1064_53 #x0000000000000001))
(assert (= temp1064_54 temp1064_53))
(assert (= temp1064_55 (select ARGNAME_output_padding_NAMEEND_VAL temp1064_54)))
(assert (= temp1064_56 #x0000000000000002))
(assert (= temp1064_57 temp1064_56))
(assert (= temp1064_58 (select ARGNAME_output_padding_NAMEEND_VAL temp1064_57)))
(assert (= temp1064_59 #x0000000000000003))
(assert (= temp1064_60 temp1064_59))
(assert (= temp1064_61 (select ARGNAME_output_padding_NAMEEND_VAL temp1064_60)))
(assert (= temp1064_62 #x0000000000000004))
(assert (= temp1064_63 temp1064_62))
(assert (= temp1064_64 (select ARGNAME_output_padding_NAMEEND_VAL temp1064_63)))
(assert (= temp1064_65 #x0000000000000005))
(assert (= temp1064_66 temp1064_65))
(assert (= temp1064_67 (select ARGNAME_output_padding_NAMEEND_VAL temp1064_66)))
(assert (= temp1064_68 #x0000000000000000))
(assert (= temp1064_69 #x0000000000000000))
(assert (= temp1064_70 temp1064_69))
(assert (= temp1064_71 (select ARGNAME_output_padding_NAMEEND_VAL temp1064_70)))
(assert (= temp1064_72 #x0000000000000000))
(assert (= temp1064_73 #x0000000000000001))
(assert (= temp1064_74 temp1064_73))
(assert (= temp1064_75 (select ARGNAME_output_padding_NAMEEND_VAL temp1064_74)))
(assert (= temp1064_76 #x0000000000000000))
(assert (= temp1064_77 #x0000000000000002))
(assert (= temp1064_78 temp1064_77))
(assert (= temp1064_79 (select ARGNAME_output_padding_NAMEEND_VAL temp1064_78)))
(assert (= temp1064_80 #x0000000000000000))
(assert (= temp1064_81 #x0000000000000003))
(assert (= temp1064_82 temp1064_81))
(assert (= temp1064_83 (select ARGNAME_output_padding_NAMEEND_VAL temp1064_82)))
(assert (= temp1064_84 #x0000000000000000))
(assert (= temp1064_85 #x0000000000000004))
(assert (= temp1064_86 temp1064_85))
(assert (= temp1064_87 (select ARGNAME_output_padding_NAMEEND_VAL temp1064_86)))
(assert (= temp1064_88 #x0000000000000000))
(assert (= temp1064_89 #x0000000000000005))
(assert (= temp1064_90 temp1064_89))
(assert (= temp1064_91 (select ARGNAME_output_padding_NAMEEND_VAL temp1064_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp1064_71 temp1064_68)
             (bvslt temp1064_75 temp1064_72)
             (bvslt temp1064_79 temp1064_76)
             (bvslt temp1064_83 temp1064_80)
             (bvslt temp1064_87 temp1064_84)
             (bvslt temp1064_91 temp1064_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1064_92 #x0000000000000000))
(assert (= var1191725 temp1064_92))
(assert (= temp1064_93 #x0000000000000000))
(assert (= temp1064_94 temp1064_93))
(assert (= temp1064_95 (select ARGNAME_stride_NAMEEND_VAL temp1064_94)))
(assert (= temp1064_96 #x0000000000000001))
(assert (= temp1064_97 temp1064_96))
(assert (= temp1064_98 (select ARGNAME_stride_NAMEEND_VAL temp1064_97)))
(assert (= temp1064_99 #x0000000000000002))
(assert (= temp1064_100 temp1064_99))
(assert (= temp1064_101 (select ARGNAME_stride_NAMEEND_VAL temp1064_100)))
(assert (= temp1064_102 #x0000000000000003))
(assert (= temp1064_103 temp1064_102))
(assert (= temp1064_104 (select ARGNAME_stride_NAMEEND_VAL temp1064_103)))
(assert (= temp1064_105 #x0000000000000004))
(assert (= temp1064_106 temp1064_105))
(assert (= temp1064_107 (select ARGNAME_stride_NAMEEND_VAL temp1064_106)))
(assert (= temp1064_108 #x0000000000000005))
(assert (= temp1064_109 temp1064_108))
(assert (= temp1064_110 (select ARGNAME_stride_NAMEEND_VAL temp1064_109)))
(assert (= temp1064_111 #x0000000000000000))
(assert (= temp1064_112 #x0000000000000000))
(assert (= temp1064_113 temp1064_112))
(assert (= temp1064_114 (select ARGNAME_stride_NAMEEND_VAL temp1064_113)))
(assert (= temp1064_115 #x0000000000000000))
(assert (= temp1064_116 #x0000000000000001))
(assert (= temp1064_117 temp1064_116))
(assert (= temp1064_118 (select ARGNAME_stride_NAMEEND_VAL temp1064_117)))
(assert (= temp1064_119 #x0000000000000000))
(assert (= temp1064_120 #x0000000000000002))
(assert (= temp1064_121 temp1064_120))
(assert (= temp1064_122 (select ARGNAME_stride_NAMEEND_VAL temp1064_121)))
(assert (= temp1064_123 #x0000000000000000))
(assert (= temp1064_124 #x0000000000000003))
(assert (= temp1064_125 temp1064_124))
(assert (= temp1064_126 (select ARGNAME_stride_NAMEEND_VAL temp1064_125)))
(assert (= temp1064_127 #x0000000000000000))
(assert (= temp1064_128 #x0000000000000004))
(assert (= temp1064_129 temp1064_128))
(assert (= temp1064_130 (select ARGNAME_stride_NAMEEND_VAL temp1064_129)))
(assert (= temp1064_131 #x0000000000000000))
(assert (= temp1064_132 #x0000000000000005))
(assert (= temp1064_133 temp1064_132))
(assert (= temp1064_134 (select ARGNAME_stride_NAMEEND_VAL temp1064_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp1064_114 temp1064_111)
             (bvsle temp1064_118 temp1064_115)
             (bvsle temp1064_122 temp1064_119)
             (bvsle temp1064_126 temp1064_123)
             (bvsle temp1064_130 temp1064_127)
             (bvsle temp1064_134 temp1064_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1064_135 #x0000000000000000))
(assert (= var1191735 temp1064_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1064_136 #x0000000000000001))
(assert (= var1191747 temp1064_136))
(assert (= temp1064_137 #x0000000000000000))
(assert (= var1179826 temp1064_137))
(assert (= temp1064_138 #x0000000000000000))
(assert (= temp1064_139 temp1064_138))
(assert (= temp1064_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1064_139)))
(assert (= temp1064_141 #x0000000000000001))
(assert (= temp1064_142 temp1064_141))
(assert (= temp1064_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1064_142)))
(assert (= temp1064_144 #x0000000000000002))
(assert (= temp1064_145 temp1064_144))
(assert (= temp1064_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1064_145)))
(assert (= temp1064_147 #x0000000000000003))
(assert (= temp1064_148 temp1064_147))
(assert (= temp1064_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1064_148)))
(assert (= temp1064_150 #x0000000000000004))
(assert (= temp1064_151 temp1064_150))
(assert (= temp1064_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1064_151)))
(assert (= temp1064_153 #x0000000000000005))
(assert (= temp1064_154 temp1064_153))
(assert (= temp1064_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1064_154)))
(assert (= temp1064_157 var1179826))
(assert (= temp1064_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1064_157)))
(assert (= temp1064_156 temp1064_158))
(assert (= var1191780
   (ite (bvslt temp1064_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1064_159 #x0000000000000000))
(assert (= var1191780 temp1064_159))
(assert (= temp1064_160 #x0000000000000000))
(assert (= var1179826 temp1064_160))
(assert (= temp1064_162 var1179826))
(assert (= temp1064_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1064_162)))
(assert (= temp1064_161 temp1064_163))
(assert (= var1191802 (bvsmod temp1064_161 ARGNAME_groups_NAMEEND)))
(assert (= temp1064_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp1064_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp1064_165 #x0000000000000001))
(assert (= var1191803 temp1064_165))
(assert (= temp1064_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp1064_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1064_167 #x0000000000000001))
(assert (= var1191823 temp1064_167))
(assert (= temp1064_168 #x0000000000000001))
(assert (= var1180714 temp1064_168))
(assert (= temp1064_169 #x0000000000000000))
(assert (= temp1064_170 temp1064_169))
(assert (= temp1064_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp1064_170)))
(assert (= temp1064_172 #x0000000000000001))
(assert (= temp1064_173 temp1064_172))
(assert (= temp1064_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp1064_173)))
(assert (= temp1064_175 #x0000000000000002))
(assert (= temp1064_176 temp1064_175))
(assert (= temp1064_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp1064_176)))
(assert (= temp1064_178 #x0000000000000003))
(assert (= temp1064_179 temp1064_178))
(assert (= temp1064_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp1064_179)))
(assert (= temp1064_181 #x0000000000000004))
(assert (= temp1064_182 temp1064_181))
(assert (= temp1064_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp1064_182)))
(assert (= temp1064_184 #x0000000000000005))
(assert (= temp1064_185 temp1064_184))
(assert (= temp1064_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp1064_185)))
(assert (= temp1064_187 #x0000000000000000))
(assert (= temp1064_188
   (ite (bvslt var1180714 temp1064_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp1064_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp1064_188)))
(assert (= var1191831 temp1064_189))
(assert (bvslt (ite (bvslt var1180714 temp1064_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1064_190 #x0000000000000001))
(assert (= var1180714 temp1064_190))
(assert (= temp1064_192 var1180714))
(assert (= temp1064_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1064_192)))
(assert (= temp1064_191 temp1064_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp1064_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp1064_194 #x0000000000000001))
(assert (= var1191836 temp1064_194))
(assert (= temp1064_195 #x0000000000000000))
(assert (= var1179826 temp1064_195))
(assert (= temp1064_197 var1179826))
(assert (= temp1064_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1064_197)))
(assert (= temp1064_196 temp1064_198))
(assert (= temp1064_199 #x0000000000000002))
(assert (= var1586025 temp1064_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp1064_200 #x0000000000000001))
(assert (= var1191993 temp1064_200))
(assert (= temp1064_201 #x0000000000000001))
(assert (= var2700303 temp1064_201))
(assert (= temp1064_202 #x0000000000000001))
(assert (= var2962447 temp1064_202))
(assert (= temp1064_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1064_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1064_204 #x0000000000000001))
(assert (= var211058 temp1064_204))
(assert (= temp1064_205 #x0000000000000001))
(assert (= var211188 temp1064_205))
(assert (= var3879401 var211188))
(assert (= temp1064_206 #x0000000000000000))
(assert (= var3866802 temp1064_206))
(assert (= temp1064_207 #x0000000000000000))
(assert (= temp1064_208
   (ite (bvslt var3866802 temp1064_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp1064_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp1064_208)))
(assert (= var3879420 temp1064_209))
(assert (bvslt (ite (bvslt var3866802 temp1064_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1064_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp1064_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp1064_211 #x0000000000000001))
(assert (= var3879421 temp1064_211))
(assert (= temp1064_212 #x0000000000000000))
(assert (= var4079423 temp1064_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp1064_213 #x0000000000000002))
(assert (= var4208259 temp1064_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1064_214 #x0000000000000000))
(assert (= var4273820 temp1064_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4469136 var211201))
(assert (= var4731280 var211201))
(assert (= temp1064_215 #x0000000000000001))
(assert (= var212414
   (ite (= ARGNAME_groups_NAMEEND temp1064_215)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1064_216 #x0000000000000001))
(assert (= var212414 temp1064_216))
(assert (= temp1064_217 #x0000000000000002))
(assert (= var5060227 temp1064_217))
(assert (= var5060229 (bvsub ARGNAME_weight_NAMEEND_DIM var5060227)))
(assert (= var5125772 var5060227))
(assert (= var5125773 var5060229))
(assert (= temp1064_218 #x0000000000000001))
(assert (= var211058 temp1064_218))
(model-add temp1064_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp1064_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1064_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp1064_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))



