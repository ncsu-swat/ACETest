(declare-fun temp10896_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10896_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10896_3 () (_ BitVec 64))
(declare-fun temp10896_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10896_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10896_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10896_7 () (_ BitVec 64))
(declare-fun temp10896_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10896_9 () (_ BitVec 64))
(declare-fun temp10896_10 () (_ BitVec 64))
(declare-fun temp10896_11 () (_ BitVec 64))
(declare-fun temp10896_12 () (_ BitVec 64))
(declare-fun temp10896_13 () (_ BitVec 64))
(declare-fun temp10896_14 () (_ BitVec 64))
(declare-fun temp10896_15 () (_ BitVec 64))
(declare-fun temp10896_16 () (_ BitVec 64))
(declare-fun temp10896_17 () (_ BitVec 64))
(declare-fun temp10896_18 () (_ BitVec 64))
(declare-fun temp10896_19 () (_ BitVec 64))
(declare-fun temp10896_20 () (_ BitVec 64))
(declare-fun temp10896_21 () (_ BitVec 64))
(declare-fun temp10896_22 () (_ BitVec 64))
(declare-fun temp10896_23 () (_ BitVec 64))
(declare-fun temp10896_24 () (_ BitVec 64))
(declare-fun temp10896_25 () (_ BitVec 64))
(declare-fun temp10896_26 () (_ BitVec 64))
(declare-fun temp10896_27 () (_ BitVec 64))
(declare-fun temp10896_28 () (_ BitVec 64))
(declare-fun temp10896_29 () (_ BitVec 64))
(declare-fun temp10896_30 () (_ BitVec 64))
(declare-fun temp10896_31 () (_ BitVec 64))
(declare-fun temp10896_32 () (_ BitVec 64))
(declare-fun temp10896_33 () (_ BitVec 64))
(declare-fun temp10896_34 () (_ BitVec 64))
(declare-fun temp10896_35 () (_ BitVec 64))
(declare-fun temp10896_36 () (_ BitVec 64))
(declare-fun temp10896_37 () (_ BitVec 64))
(declare-fun temp10896_38 () (_ BitVec 64))
(declare-fun temp10896_39 () (_ BitVec 64))
(declare-fun temp10896_40 () (_ BitVec 64))
(declare-fun temp10896_41 () (_ BitVec 64))
(declare-fun temp10896_42 () (_ BitVec 64))
(declare-fun temp10896_43 () (_ BitVec 64))
(declare-fun temp10896_44 () (_ BitVec 64))
(declare-fun temp10896_45 () (_ BitVec 64))
(declare-fun temp10896_46 () (_ BitVec 64))
(declare-fun temp10896_47 () (_ BitVec 64))
(declare-fun temp10896_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10896_49 () (_ BitVec 64))
(declare-fun temp10896_50 () (_ BitVec 64))
(declare-fun temp10896_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10896_52 () (_ BitVec 64))
(declare-fun temp10896_53 () (_ BitVec 64))
(declare-fun temp10896_54 () (_ BitVec 64))
(declare-fun temp10896_55 () (_ BitVec 64))
(declare-fun temp10896_56 () (_ BitVec 64))
(declare-fun temp10896_57 () (_ BitVec 64))
(declare-fun temp10896_58 () (_ BitVec 64))
(declare-fun temp10896_59 () (_ BitVec 64))
(declare-fun temp10896_60 () (_ BitVec 64))
(declare-fun temp10896_61 () (_ BitVec 64))
(declare-fun temp10896_62 () (_ BitVec 64))
(declare-fun temp10896_63 () (_ BitVec 64))
(declare-fun temp10896_64 () (_ BitVec 64))
(declare-fun temp10896_65 () (_ BitVec 64))
(declare-fun temp10896_66 () (_ BitVec 64))
(declare-fun temp10896_67 () (_ BitVec 64))
(declare-fun temp10896_68 () (_ BitVec 64))
(declare-fun temp10896_69 () (_ BitVec 64))
(declare-fun temp10896_70 () (_ BitVec 64))
(declare-fun temp10896_71 () (_ BitVec 64))
(declare-fun temp10896_72 () (_ BitVec 64))
(declare-fun temp10896_73 () (_ BitVec 64))
(declare-fun temp10896_74 () (_ BitVec 64))
(declare-fun temp10896_75 () (_ BitVec 64))
(declare-fun temp10896_76 () (_ BitVec 64))
(declare-fun temp10896_77 () (_ BitVec 64))
(declare-fun temp10896_78 () (_ BitVec 64))
(declare-fun temp10896_79 () (_ BitVec 64))
(declare-fun temp10896_80 () (_ BitVec 64))
(declare-fun temp10896_81 () (_ BitVec 64))
(declare-fun temp10896_82 () (_ BitVec 64))
(declare-fun temp10896_83 () (_ BitVec 64))
(declare-fun temp10896_84 () (_ BitVec 64))
(declare-fun temp10896_85 () (_ BitVec 64))
(declare-fun temp10896_86 () (_ BitVec 64))
(declare-fun temp10896_87 () (_ BitVec 64))
(declare-fun temp10896_88 () (_ BitVec 64))
(declare-fun temp10896_89 () (_ BitVec 64))
(declare-fun temp10896_90 () (_ BitVec 64))
(declare-fun temp10896_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10896_92 () (_ BitVec 64))
(declare-fun temp10896_93 () (_ BitVec 64))
(declare-fun temp10896_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10896_95 () (_ BitVec 64))
(declare-fun temp10896_96 () (_ BitVec 64))
(declare-fun temp10896_97 () (_ BitVec 64))
(declare-fun temp10896_98 () (_ BitVec 64))
(declare-fun temp10896_99 () (_ BitVec 64))
(declare-fun temp10896_100 () (_ BitVec 64))
(declare-fun temp10896_101 () (_ BitVec 64))
(declare-fun temp10896_102 () (_ BitVec 64))
(declare-fun temp10896_103 () (_ BitVec 64))
(declare-fun temp10896_104 () (_ BitVec 64))
(declare-fun temp10896_105 () (_ BitVec 64))
(declare-fun temp10896_106 () (_ BitVec 64))
(declare-fun temp10896_107 () (_ BitVec 64))
(declare-fun temp10896_108 () (_ BitVec 64))
(declare-fun temp10896_109 () (_ BitVec 64))
(declare-fun temp10896_110 () (_ BitVec 64))
(declare-fun temp10896_111 () (_ BitVec 64))
(declare-fun temp10896_112 () (_ BitVec 64))
(declare-fun temp10896_113 () (_ BitVec 64))
(declare-fun temp10896_114 () (_ BitVec 64))
(declare-fun temp10896_115 () (_ BitVec 64))
(declare-fun temp10896_116 () (_ BitVec 64))
(declare-fun temp10896_117 () (_ BitVec 64))
(declare-fun temp10896_118 () (_ BitVec 64))
(declare-fun temp10896_119 () (_ BitVec 64))
(declare-fun temp10896_120 () (_ BitVec 64))
(declare-fun temp10896_121 () (_ BitVec 64))
(declare-fun temp10896_122 () (_ BitVec 64))
(declare-fun temp10896_123 () (_ BitVec 64))
(declare-fun temp10896_124 () (_ BitVec 64))
(declare-fun temp10896_125 () (_ BitVec 64))
(declare-fun temp10896_126 () (_ BitVec 64))
(declare-fun temp10896_127 () (_ BitVec 64))
(declare-fun temp10896_128 () (_ BitVec 64))
(declare-fun temp10896_129 () (_ BitVec 64))
(declare-fun temp10896_130 () (_ BitVec 64))
(declare-fun temp10896_131 () (_ BitVec 64))
(declare-fun temp10896_132 () (_ BitVec 64))
(declare-fun temp10896_133 () (_ BitVec 64))
(declare-fun temp10896_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10896_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10896_136 () (_ BitVec 64))
(declare-fun temp10896_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10896_138 () (_ BitVec 64))
(declare-fun temp10896_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10896_140 () (_ BitVec 64))
(declare-fun temp10896_141 () (_ BitVec 64))
(declare-fun temp10896_142 () (_ BitVec 64))
(declare-fun temp10896_143 () (_ BitVec 64))
(declare-fun temp10896_144 () (_ BitVec 64))
(declare-fun temp10896_145 () (_ BitVec 64))
(declare-fun temp10896_146 () (_ BitVec 64))
(declare-fun temp10896_147 () (_ BitVec 64))
(declare-fun temp10896_148 () (_ BitVec 64))
(declare-fun temp10896_149 () (_ BitVec 64))
(declare-fun temp10896_150 () (_ BitVec 64))
(declare-fun temp10896_151 () (_ BitVec 64))
(declare-fun temp10896_152 () (_ BitVec 64))
(declare-fun temp10896_153 () (_ BitVec 64))
(declare-fun temp10896_154 () (_ BitVec 64))
(declare-fun temp10896_155 () (_ BitVec 64))
(declare-fun temp10896_157 () (_ BitVec 64))
(declare-fun temp10896_158 () (_ BitVec 64))
(declare-fun temp10896_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10896_159 () (_ BitVec 64))
(declare-fun temp10896_160 () (_ BitVec 64))
(declare-fun temp10896_162 () (_ BitVec 64))
(declare-fun temp10896_163 () (_ BitVec 64))
(declare-fun temp10896_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10896_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10896_165 () (_ BitVec 64))
(declare-fun temp10896_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10896_167 () (_ BitVec 64))
(declare-fun temp10896_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10896_169 () (_ BitVec 64))
(declare-fun temp10896_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10896_171 () (_ BitVec 64))
(declare-fun temp10896_172 () (_ BitVec 64))
(declare-fun temp10896_173 () (_ BitVec 64))
(declare-fun temp10896_174 () (_ BitVec 64))
(declare-fun temp10896_175 () (_ BitVec 64))
(declare-fun temp10896_176 () (_ BitVec 64))
(declare-fun temp10896_177 () (_ BitVec 64))
(declare-fun temp10896_178 () (_ BitVec 64))
(declare-fun temp10896_179 () (_ BitVec 64))
(declare-fun temp10896_180 () (_ BitVec 64))
(declare-fun temp10896_181 () (_ BitVec 64))
(declare-fun temp10896_182 () (_ BitVec 64))
(declare-fun temp10896_183 () (_ BitVec 64))
(declare-fun temp10896_184 () (_ BitVec 64))
(declare-fun temp10896_185 () (_ BitVec 64))
(declare-fun temp10896_186 () (_ BitVec 64))
(declare-fun temp10896_187 () (_ BitVec 64))
(declare-fun temp10896_188 () (_ BitVec 64))
(declare-fun temp10896_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10896_190 () (_ BitVec 64))
(declare-fun temp10896_192 () (_ BitVec 64))
(declare-fun temp10896_193 () (_ BitVec 64))
(declare-fun temp10896_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10896_194 () (_ BitVec 64))
(declare-fun temp10896_195 () (_ BitVec 64))
(declare-fun temp10896_197 () (_ BitVec 64))
(declare-fun temp10896_198 () (_ BitVec 64))
(declare-fun temp10896_196 () (_ BitVec 64))
(declare-fun temp10896_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10896_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10896_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10896_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10896_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10896_204 () (_ BitVec 64))
(declare-fun temp10896_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10896_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10896_207 () (_ BitVec 64))
(declare-fun temp10896_208 () (_ BitVec 64))
(declare-fun temp10896_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10896_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10896_211 () (_ BitVec 64))
(declare-fun temp10896_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10896_213 () (_ BitVec 64))
(declare-fun temp10896_214 () (_ BitVec 64))
(declare-fun temp10896_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10896_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10896_217 () (_ BitVec 64))
(declare-fun temp10896_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10896_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10896_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var5255568 () (_ BitVec 64))
(declare-fun var5517712 () (_ BitVec 64))
(declare-fun temp10896_221 () (_ BitVec 64))
(declare-fun var5845392 () (_ BitVec 64))
(declare-fun temp10896_222 () (_ BitVec 64))
(assert (= temp10896_1 #x0000000000000001))
(assert (= var77203 temp10896_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10896_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10896_2)))
(assert (= temp10896_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10896_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10896_4 #x0000000000000000))
(assert (= var210941 temp10896_4))
(assert (= temp10896_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10896_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10896_6 #x0000000000000000))
(assert (= var210986 temp10896_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10896_7 #x0000000000000000))
(assert (= temp10896_8 temp10896_7))
(assert (= temp10896_9 (select ARGNAME_padding_NAMEEND_VAL temp10896_8)))
(assert (= temp10896_10 #x0000000000000001))
(assert (= temp10896_11 temp10896_10))
(assert (= temp10896_12 (select ARGNAME_padding_NAMEEND_VAL temp10896_11)))
(assert (= temp10896_13 #x0000000000000002))
(assert (= temp10896_14 temp10896_13))
(assert (= temp10896_15 (select ARGNAME_padding_NAMEEND_VAL temp10896_14)))
(assert (= temp10896_16 #x0000000000000003))
(assert (= temp10896_17 temp10896_16))
(assert (= temp10896_18 (select ARGNAME_padding_NAMEEND_VAL temp10896_17)))
(assert (= temp10896_19 #x0000000000000004))
(assert (= temp10896_20 temp10896_19))
(assert (= temp10896_21 (select ARGNAME_padding_NAMEEND_VAL temp10896_20)))
(assert (= temp10896_22 #x0000000000000005))
(assert (= temp10896_23 temp10896_22))
(assert (= temp10896_24 (select ARGNAME_padding_NAMEEND_VAL temp10896_23)))
(assert (= temp10896_25 #x0000000000000000))
(assert (= temp10896_26 #x0000000000000000))
(assert (= temp10896_27 temp10896_26))
(assert (= temp10896_28 (select ARGNAME_padding_NAMEEND_VAL temp10896_27)))
(assert (= temp10896_29 #x0000000000000000))
(assert (= temp10896_30 #x0000000000000001))
(assert (= temp10896_31 temp10896_30))
(assert (= temp10896_32 (select ARGNAME_padding_NAMEEND_VAL temp10896_31)))
(assert (= temp10896_33 #x0000000000000000))
(assert (= temp10896_34 #x0000000000000002))
(assert (= temp10896_35 temp10896_34))
(assert (= temp10896_36 (select ARGNAME_padding_NAMEEND_VAL temp10896_35)))
(assert (= temp10896_37 #x0000000000000000))
(assert (= temp10896_38 #x0000000000000003))
(assert (= temp10896_39 temp10896_38))
(assert (= temp10896_40 (select ARGNAME_padding_NAMEEND_VAL temp10896_39)))
(assert (= temp10896_41 #x0000000000000000))
(assert (= temp10896_42 #x0000000000000004))
(assert (= temp10896_43 temp10896_42))
(assert (= temp10896_44 (select ARGNAME_padding_NAMEEND_VAL temp10896_43)))
(assert (= temp10896_45 #x0000000000000000))
(assert (= temp10896_46 #x0000000000000005))
(assert (= temp10896_47 temp10896_46))
(assert (= temp10896_48 (select ARGNAME_padding_NAMEEND_VAL temp10896_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10896_28 temp10896_25)
             (bvslt temp10896_32 temp10896_29)
             (bvslt temp10896_36 temp10896_33)
             (bvslt temp10896_40 temp10896_37)
             (bvslt temp10896_44 temp10896_41)
             (bvslt temp10896_48 temp10896_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10896_49 #x0000000000000000))
(assert (= var1191714 temp10896_49))
(assert (= temp10896_50 #x0000000000000000))
(assert (= temp10896_51 temp10896_50))
(assert (= temp10896_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10896_51)))
(assert (= temp10896_53 #x0000000000000001))
(assert (= temp10896_54 temp10896_53))
(assert (= temp10896_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10896_54)))
(assert (= temp10896_56 #x0000000000000002))
(assert (= temp10896_57 temp10896_56))
(assert (= temp10896_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10896_57)))
(assert (= temp10896_59 #x0000000000000003))
(assert (= temp10896_60 temp10896_59))
(assert (= temp10896_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10896_60)))
(assert (= temp10896_62 #x0000000000000004))
(assert (= temp10896_63 temp10896_62))
(assert (= temp10896_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10896_63)))
(assert (= temp10896_65 #x0000000000000005))
(assert (= temp10896_66 temp10896_65))
(assert (= temp10896_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10896_66)))
(assert (= temp10896_68 #x0000000000000000))
(assert (= temp10896_69 #x0000000000000000))
(assert (= temp10896_70 temp10896_69))
(assert (= temp10896_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10896_70)))
(assert (= temp10896_72 #x0000000000000000))
(assert (= temp10896_73 #x0000000000000001))
(assert (= temp10896_74 temp10896_73))
(assert (= temp10896_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10896_74)))
(assert (= temp10896_76 #x0000000000000000))
(assert (= temp10896_77 #x0000000000000002))
(assert (= temp10896_78 temp10896_77))
(assert (= temp10896_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10896_78)))
(assert (= temp10896_80 #x0000000000000000))
(assert (= temp10896_81 #x0000000000000003))
(assert (= temp10896_82 temp10896_81))
(assert (= temp10896_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10896_82)))
(assert (= temp10896_84 #x0000000000000000))
(assert (= temp10896_85 #x0000000000000004))
(assert (= temp10896_86 temp10896_85))
(assert (= temp10896_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10896_86)))
(assert (= temp10896_88 #x0000000000000000))
(assert (= temp10896_89 #x0000000000000005))
(assert (= temp10896_90 temp10896_89))
(assert (= temp10896_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10896_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10896_71 temp10896_68)
             (bvslt temp10896_75 temp10896_72)
             (bvslt temp10896_79 temp10896_76)
             (bvslt temp10896_83 temp10896_80)
             (bvslt temp10896_87 temp10896_84)
             (bvslt temp10896_91 temp10896_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10896_92 #x0000000000000000))
(assert (= var1191725 temp10896_92))
(assert (= temp10896_93 #x0000000000000000))
(assert (= temp10896_94 temp10896_93))
(assert (= temp10896_95 (select ARGNAME_stride_NAMEEND_VAL temp10896_94)))
(assert (= temp10896_96 #x0000000000000001))
(assert (= temp10896_97 temp10896_96))
(assert (= temp10896_98 (select ARGNAME_stride_NAMEEND_VAL temp10896_97)))
(assert (= temp10896_99 #x0000000000000002))
(assert (= temp10896_100 temp10896_99))
(assert (= temp10896_101 (select ARGNAME_stride_NAMEEND_VAL temp10896_100)))
(assert (= temp10896_102 #x0000000000000003))
(assert (= temp10896_103 temp10896_102))
(assert (= temp10896_104 (select ARGNAME_stride_NAMEEND_VAL temp10896_103)))
(assert (= temp10896_105 #x0000000000000004))
(assert (= temp10896_106 temp10896_105))
(assert (= temp10896_107 (select ARGNAME_stride_NAMEEND_VAL temp10896_106)))
(assert (= temp10896_108 #x0000000000000005))
(assert (= temp10896_109 temp10896_108))
(assert (= temp10896_110 (select ARGNAME_stride_NAMEEND_VAL temp10896_109)))
(assert (= temp10896_111 #x0000000000000000))
(assert (= temp10896_112 #x0000000000000000))
(assert (= temp10896_113 temp10896_112))
(assert (= temp10896_114 (select ARGNAME_stride_NAMEEND_VAL temp10896_113)))
(assert (= temp10896_115 #x0000000000000000))
(assert (= temp10896_116 #x0000000000000001))
(assert (= temp10896_117 temp10896_116))
(assert (= temp10896_118 (select ARGNAME_stride_NAMEEND_VAL temp10896_117)))
(assert (= temp10896_119 #x0000000000000000))
(assert (= temp10896_120 #x0000000000000002))
(assert (= temp10896_121 temp10896_120))
(assert (= temp10896_122 (select ARGNAME_stride_NAMEEND_VAL temp10896_121)))
(assert (= temp10896_123 #x0000000000000000))
(assert (= temp10896_124 #x0000000000000003))
(assert (= temp10896_125 temp10896_124))
(assert (= temp10896_126 (select ARGNAME_stride_NAMEEND_VAL temp10896_125)))
(assert (= temp10896_127 #x0000000000000000))
(assert (= temp10896_128 #x0000000000000004))
(assert (= temp10896_129 temp10896_128))
(assert (= temp10896_130 (select ARGNAME_stride_NAMEEND_VAL temp10896_129)))
(assert (= temp10896_131 #x0000000000000000))
(assert (= temp10896_132 #x0000000000000005))
(assert (= temp10896_133 temp10896_132))
(assert (= temp10896_134 (select ARGNAME_stride_NAMEEND_VAL temp10896_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10896_114 temp10896_111)
             (bvsle temp10896_118 temp10896_115)
             (bvsle temp10896_122 temp10896_119)
             (bvsle temp10896_126 temp10896_123)
             (bvsle temp10896_130 temp10896_127)
             (bvsle temp10896_134 temp10896_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10896_135 #x0000000000000000))
(assert (= var1191735 temp10896_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10896_136 #x0000000000000001))
(assert (= var1191747 temp10896_136))
(assert (= temp10896_137 #x0000000000000000))
(assert (= var1179826 temp10896_137))
(assert (= temp10896_138 #x0000000000000000))
(assert (= temp10896_139 temp10896_138))
(assert (= temp10896_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10896_139)))
(assert (= temp10896_141 #x0000000000000001))
(assert (= temp10896_142 temp10896_141))
(assert (= temp10896_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10896_142)))
(assert (= temp10896_144 #x0000000000000002))
(assert (= temp10896_145 temp10896_144))
(assert (= temp10896_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10896_145)))
(assert (= temp10896_147 #x0000000000000003))
(assert (= temp10896_148 temp10896_147))
(assert (= temp10896_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10896_148)))
(assert (= temp10896_150 #x0000000000000004))
(assert (= temp10896_151 temp10896_150))
(assert (= temp10896_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10896_151)))
(assert (= temp10896_153 #x0000000000000005))
(assert (= temp10896_154 temp10896_153))
(assert (= temp10896_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10896_154)))
(assert (= temp10896_157 var1179826))
(assert (= temp10896_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10896_157)))
(assert (= temp10896_156 temp10896_158))
(assert (= var1191780
   (ite (bvslt temp10896_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10896_159 #x0000000000000000))
(assert (= var1191780 temp10896_159))
(assert (= temp10896_160 #x0000000000000000))
(assert (= var1179826 temp10896_160))
(assert (= temp10896_162 var1179826))
(assert (= temp10896_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10896_162)))
(assert (= temp10896_161 temp10896_163))
(assert (= var1191802 (bvsmod temp10896_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10896_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10896_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10896_165 #x0000000000000001))
(assert (= var1191803 temp10896_165))
(assert (= temp10896_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10896_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10896_167 #x0000000000000001))
(assert (= var1191823 temp10896_167))
(assert (= temp10896_168 #x0000000000000001))
(assert (= var1180714 temp10896_168))
(assert (= temp10896_169 #x0000000000000000))
(assert (= temp10896_170 temp10896_169))
(assert (= temp10896_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10896_170)))
(assert (= temp10896_172 #x0000000000000001))
(assert (= temp10896_173 temp10896_172))
(assert (= temp10896_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10896_173)))
(assert (= temp10896_175 #x0000000000000002))
(assert (= temp10896_176 temp10896_175))
(assert (= temp10896_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10896_176)))
(assert (= temp10896_178 #x0000000000000003))
(assert (= temp10896_179 temp10896_178))
(assert (= temp10896_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10896_179)))
(assert (= temp10896_181 #x0000000000000004))
(assert (= temp10896_182 temp10896_181))
(assert (= temp10896_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10896_182)))
(assert (= temp10896_184 #x0000000000000005))
(assert (= temp10896_185 temp10896_184))
(assert (= temp10896_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10896_185)))
(assert (= temp10896_187 #x0000000000000000))
(assert (= temp10896_188
   (ite (bvslt var1180714 temp10896_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10896_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10896_188)))
(assert (= var1191831 temp10896_189))
(assert (bvslt (ite (bvslt var1180714 temp10896_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10896_190 #x0000000000000001))
(assert (= var1180714 temp10896_190))
(assert (= temp10896_192 var1180714))
(assert (= temp10896_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10896_192)))
(assert (= temp10896_191 temp10896_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10896_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10896_194 #x0000000000000001))
(assert (= var1191836 temp10896_194))
(assert (= temp10896_195 #x0000000000000000))
(assert (= var1179826 temp10896_195))
(assert (= temp10896_197 var1179826))
(assert (= temp10896_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10896_197)))
(assert (= temp10896_196 temp10896_198))
(assert (= temp10896_199 #x0000000000000002))
(assert (= var1586025 temp10896_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10896_200 #x0000000000000001))
(assert (= var1191993 temp10896_200))
(assert (= temp10896_201 #x0000000000000001))
(assert (= var2700303 temp10896_201))
(assert (= temp10896_202 #x0000000000000001))
(assert (= var2962447 temp10896_202))
(assert (= temp10896_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10896_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10896_204 #x0000000000000001))
(assert (= var211058 temp10896_204))
(assert (= temp10896_205 #x0000000000000001))
(assert (= var211188 temp10896_205))
(assert (= var3879401 var211188))
(assert (= temp10896_206 #x0000000000000000))
(assert (= var3866802 temp10896_206))
(assert (= temp10896_207 #x0000000000000000))
(assert (= temp10896_208
   (ite (bvslt var3866802 temp10896_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10896_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10896_208)))
(assert (= var3879420 temp10896_209))
(assert (bvslt (ite (bvslt var3866802 temp10896_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10896_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10896_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10896_211 #x0000000000000000))
(assert (= var3879421 temp10896_211))
(assert (= temp10896_212 #x0000000000000001))
(assert (= var3867690 temp10896_212))
(assert (= temp10896_213 #x0000000000000000))
(assert (= temp10896_214
   (ite (bvslt var3867690 temp10896_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10896_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10896_214)))
(assert (= var3879423 temp10896_215))
(assert (bvslt (ite (bvslt var3867690 temp10896_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10896_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10896_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10896_217 #x0000000000000001))
(assert (= var3879424 temp10896_217))
(assert (= temp10896_218 #x0000000000000000))
(assert (= var4133117 temp10896_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10896_219 #x0000000000000002))
(assert (= var4339331 temp10896_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10896_220 #x0000000000000000))
(assert (= var4404892 temp10896_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var5255568 var211201))
(assert (= var5517712 var211201))
(assert (= temp10896_221 #x0000000000000000))
(assert (= var5845392 temp10896_221))
(assert (= temp10896_222 #x0000000000000001))
(assert (= var211058 temp10896_222))
(model-add temp10896_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10896_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10896_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10896_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





