(declare-fun temp10981_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10981_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10981_3 () (_ BitVec 64))
(declare-fun temp10981_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10981_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10981_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10981_7 () (_ BitVec 64))
(declare-fun temp10981_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10981_9 () (_ BitVec 64))
(declare-fun temp10981_10 () (_ BitVec 64))
(declare-fun temp10981_11 () (_ BitVec 64))
(declare-fun temp10981_12 () (_ BitVec 64))
(declare-fun temp10981_13 () (_ BitVec 64))
(declare-fun temp10981_14 () (_ BitVec 64))
(declare-fun temp10981_15 () (_ BitVec 64))
(declare-fun temp10981_16 () (_ BitVec 64))
(declare-fun temp10981_17 () (_ BitVec 64))
(declare-fun temp10981_18 () (_ BitVec 64))
(declare-fun temp10981_19 () (_ BitVec 64))
(declare-fun temp10981_20 () (_ BitVec 64))
(declare-fun temp10981_21 () (_ BitVec 64))
(declare-fun temp10981_22 () (_ BitVec 64))
(declare-fun temp10981_23 () (_ BitVec 64))
(declare-fun temp10981_24 () (_ BitVec 64))
(declare-fun temp10981_25 () (_ BitVec 64))
(declare-fun temp10981_26 () (_ BitVec 64))
(declare-fun temp10981_27 () (_ BitVec 64))
(declare-fun temp10981_28 () (_ BitVec 64))
(declare-fun temp10981_29 () (_ BitVec 64))
(declare-fun temp10981_30 () (_ BitVec 64))
(declare-fun temp10981_31 () (_ BitVec 64))
(declare-fun temp10981_32 () (_ BitVec 64))
(declare-fun temp10981_33 () (_ BitVec 64))
(declare-fun temp10981_34 () (_ BitVec 64))
(declare-fun temp10981_35 () (_ BitVec 64))
(declare-fun temp10981_36 () (_ BitVec 64))
(declare-fun temp10981_37 () (_ BitVec 64))
(declare-fun temp10981_38 () (_ BitVec 64))
(declare-fun temp10981_39 () (_ BitVec 64))
(declare-fun temp10981_40 () (_ BitVec 64))
(declare-fun temp10981_41 () (_ BitVec 64))
(declare-fun temp10981_42 () (_ BitVec 64))
(declare-fun temp10981_43 () (_ BitVec 64))
(declare-fun temp10981_44 () (_ BitVec 64))
(declare-fun temp10981_45 () (_ BitVec 64))
(declare-fun temp10981_46 () (_ BitVec 64))
(declare-fun temp10981_47 () (_ BitVec 64))
(declare-fun temp10981_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10981_49 () (_ BitVec 64))
(declare-fun temp10981_50 () (_ BitVec 64))
(declare-fun temp10981_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10981_52 () (_ BitVec 64))
(declare-fun temp10981_53 () (_ BitVec 64))
(declare-fun temp10981_54 () (_ BitVec 64))
(declare-fun temp10981_55 () (_ BitVec 64))
(declare-fun temp10981_56 () (_ BitVec 64))
(declare-fun temp10981_57 () (_ BitVec 64))
(declare-fun temp10981_58 () (_ BitVec 64))
(declare-fun temp10981_59 () (_ BitVec 64))
(declare-fun temp10981_60 () (_ BitVec 64))
(declare-fun temp10981_61 () (_ BitVec 64))
(declare-fun temp10981_62 () (_ BitVec 64))
(declare-fun temp10981_63 () (_ BitVec 64))
(declare-fun temp10981_64 () (_ BitVec 64))
(declare-fun temp10981_65 () (_ BitVec 64))
(declare-fun temp10981_66 () (_ BitVec 64))
(declare-fun temp10981_67 () (_ BitVec 64))
(declare-fun temp10981_68 () (_ BitVec 64))
(declare-fun temp10981_69 () (_ BitVec 64))
(declare-fun temp10981_70 () (_ BitVec 64))
(declare-fun temp10981_71 () (_ BitVec 64))
(declare-fun temp10981_72 () (_ BitVec 64))
(declare-fun temp10981_73 () (_ BitVec 64))
(declare-fun temp10981_74 () (_ BitVec 64))
(declare-fun temp10981_75 () (_ BitVec 64))
(declare-fun temp10981_76 () (_ BitVec 64))
(declare-fun temp10981_77 () (_ BitVec 64))
(declare-fun temp10981_78 () (_ BitVec 64))
(declare-fun temp10981_79 () (_ BitVec 64))
(declare-fun temp10981_80 () (_ BitVec 64))
(declare-fun temp10981_81 () (_ BitVec 64))
(declare-fun temp10981_82 () (_ BitVec 64))
(declare-fun temp10981_83 () (_ BitVec 64))
(declare-fun temp10981_84 () (_ BitVec 64))
(declare-fun temp10981_85 () (_ BitVec 64))
(declare-fun temp10981_86 () (_ BitVec 64))
(declare-fun temp10981_87 () (_ BitVec 64))
(declare-fun temp10981_88 () (_ BitVec 64))
(declare-fun temp10981_89 () (_ BitVec 64))
(declare-fun temp10981_90 () (_ BitVec 64))
(declare-fun temp10981_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10981_92 () (_ BitVec 64))
(declare-fun temp10981_93 () (_ BitVec 64))
(declare-fun temp10981_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10981_95 () (_ BitVec 64))
(declare-fun temp10981_96 () (_ BitVec 64))
(declare-fun temp10981_97 () (_ BitVec 64))
(declare-fun temp10981_98 () (_ BitVec 64))
(declare-fun temp10981_99 () (_ BitVec 64))
(declare-fun temp10981_100 () (_ BitVec 64))
(declare-fun temp10981_101 () (_ BitVec 64))
(declare-fun temp10981_102 () (_ BitVec 64))
(declare-fun temp10981_103 () (_ BitVec 64))
(declare-fun temp10981_104 () (_ BitVec 64))
(declare-fun temp10981_105 () (_ BitVec 64))
(declare-fun temp10981_106 () (_ BitVec 64))
(declare-fun temp10981_107 () (_ BitVec 64))
(declare-fun temp10981_108 () (_ BitVec 64))
(declare-fun temp10981_109 () (_ BitVec 64))
(declare-fun temp10981_110 () (_ BitVec 64))
(declare-fun temp10981_111 () (_ BitVec 64))
(declare-fun temp10981_112 () (_ BitVec 64))
(declare-fun temp10981_113 () (_ BitVec 64))
(declare-fun temp10981_114 () (_ BitVec 64))
(declare-fun temp10981_115 () (_ BitVec 64))
(declare-fun temp10981_116 () (_ BitVec 64))
(declare-fun temp10981_117 () (_ BitVec 64))
(declare-fun temp10981_118 () (_ BitVec 64))
(declare-fun temp10981_119 () (_ BitVec 64))
(declare-fun temp10981_120 () (_ BitVec 64))
(declare-fun temp10981_121 () (_ BitVec 64))
(declare-fun temp10981_122 () (_ BitVec 64))
(declare-fun temp10981_123 () (_ BitVec 64))
(declare-fun temp10981_124 () (_ BitVec 64))
(declare-fun temp10981_125 () (_ BitVec 64))
(declare-fun temp10981_126 () (_ BitVec 64))
(declare-fun temp10981_127 () (_ BitVec 64))
(declare-fun temp10981_128 () (_ BitVec 64))
(declare-fun temp10981_129 () (_ BitVec 64))
(declare-fun temp10981_130 () (_ BitVec 64))
(declare-fun temp10981_131 () (_ BitVec 64))
(declare-fun temp10981_132 () (_ BitVec 64))
(declare-fun temp10981_133 () (_ BitVec 64))
(declare-fun temp10981_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10981_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10981_136 () (_ BitVec 64))
(declare-fun temp10981_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10981_138 () (_ BitVec 64))
(declare-fun temp10981_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10981_140 () (_ BitVec 64))
(declare-fun temp10981_141 () (_ BitVec 64))
(declare-fun temp10981_142 () (_ BitVec 64))
(declare-fun temp10981_143 () (_ BitVec 64))
(declare-fun temp10981_144 () (_ BitVec 64))
(declare-fun temp10981_145 () (_ BitVec 64))
(declare-fun temp10981_146 () (_ BitVec 64))
(declare-fun temp10981_147 () (_ BitVec 64))
(declare-fun temp10981_148 () (_ BitVec 64))
(declare-fun temp10981_149 () (_ BitVec 64))
(declare-fun temp10981_150 () (_ BitVec 64))
(declare-fun temp10981_151 () (_ BitVec 64))
(declare-fun temp10981_152 () (_ BitVec 64))
(declare-fun temp10981_153 () (_ BitVec 64))
(declare-fun temp10981_154 () (_ BitVec 64))
(declare-fun temp10981_155 () (_ BitVec 64))
(declare-fun temp10981_157 () (_ BitVec 64))
(declare-fun temp10981_158 () (_ BitVec 64))
(declare-fun temp10981_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10981_159 () (_ BitVec 64))
(declare-fun temp10981_160 () (_ BitVec 64))
(declare-fun temp10981_162 () (_ BitVec 64))
(declare-fun temp10981_163 () (_ BitVec 64))
(declare-fun temp10981_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10981_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10981_165 () (_ BitVec 64))
(declare-fun temp10981_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10981_167 () (_ BitVec 64))
(declare-fun temp10981_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10981_169 () (_ BitVec 64))
(declare-fun temp10981_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10981_171 () (_ BitVec 64))
(declare-fun temp10981_172 () (_ BitVec 64))
(declare-fun temp10981_173 () (_ BitVec 64))
(declare-fun temp10981_174 () (_ BitVec 64))
(declare-fun temp10981_175 () (_ BitVec 64))
(declare-fun temp10981_176 () (_ BitVec 64))
(declare-fun temp10981_177 () (_ BitVec 64))
(declare-fun temp10981_178 () (_ BitVec 64))
(declare-fun temp10981_179 () (_ BitVec 64))
(declare-fun temp10981_180 () (_ BitVec 64))
(declare-fun temp10981_181 () (_ BitVec 64))
(declare-fun temp10981_182 () (_ BitVec 64))
(declare-fun temp10981_183 () (_ BitVec 64))
(declare-fun temp10981_184 () (_ BitVec 64))
(declare-fun temp10981_185 () (_ BitVec 64))
(declare-fun temp10981_186 () (_ BitVec 64))
(declare-fun temp10981_187 () (_ BitVec 64))
(declare-fun temp10981_188 () (_ BitVec 64))
(declare-fun temp10981_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10981_190 () (_ BitVec 64))
(declare-fun temp10981_192 () (_ BitVec 64))
(declare-fun temp10981_193 () (_ BitVec 64))
(declare-fun temp10981_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10981_194 () (_ BitVec 64))
(declare-fun temp10981_195 () (_ BitVec 64))
(declare-fun temp10981_197 () (_ BitVec 64))
(declare-fun temp10981_198 () (_ BitVec 64))
(declare-fun temp10981_196 () (_ BitVec 64))
(declare-fun temp10981_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10981_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10981_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10981_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10981_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10981_204 () (_ BitVec 64))
(declare-fun temp10981_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10981_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10981_207 () (_ BitVec 64))
(declare-fun temp10981_208 () (_ BitVec 64))
(declare-fun temp10981_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10981_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10981_211 () (_ BitVec 64))
(declare-fun temp10981_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10981_213 () (_ BitVec 64))
(declare-fun temp10981_214 () (_ BitVec 64))
(declare-fun temp10981_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10981_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10981_217 () (_ BitVec 64))
(declare-fun temp10981_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10981_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10981_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp10981_221 () (_ BitVec 64))
(assert (= temp10981_1 #x0000000000000001))
(assert (= var77203 temp10981_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10981_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10981_2)))
(assert (= temp10981_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10981_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10981_4 #x0000000000000000))
(assert (= var210941 temp10981_4))
(assert (= temp10981_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10981_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10981_6 #x0000000000000000))
(assert (= var210986 temp10981_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10981_7 #x0000000000000000))
(assert (= temp10981_8 temp10981_7))
(assert (= temp10981_9 (select ARGNAME_padding_NAMEEND_VAL temp10981_8)))
(assert (= temp10981_10 #x0000000000000001))
(assert (= temp10981_11 temp10981_10))
(assert (= temp10981_12 (select ARGNAME_padding_NAMEEND_VAL temp10981_11)))
(assert (= temp10981_13 #x0000000000000002))
(assert (= temp10981_14 temp10981_13))
(assert (= temp10981_15 (select ARGNAME_padding_NAMEEND_VAL temp10981_14)))
(assert (= temp10981_16 #x0000000000000003))
(assert (= temp10981_17 temp10981_16))
(assert (= temp10981_18 (select ARGNAME_padding_NAMEEND_VAL temp10981_17)))
(assert (= temp10981_19 #x0000000000000004))
(assert (= temp10981_20 temp10981_19))
(assert (= temp10981_21 (select ARGNAME_padding_NAMEEND_VAL temp10981_20)))
(assert (= temp10981_22 #x0000000000000005))
(assert (= temp10981_23 temp10981_22))
(assert (= temp10981_24 (select ARGNAME_padding_NAMEEND_VAL temp10981_23)))
(assert (= temp10981_25 #x0000000000000000))
(assert (= temp10981_26 #x0000000000000000))
(assert (= temp10981_27 temp10981_26))
(assert (= temp10981_28 (select ARGNAME_padding_NAMEEND_VAL temp10981_27)))
(assert (= temp10981_29 #x0000000000000000))
(assert (= temp10981_30 #x0000000000000001))
(assert (= temp10981_31 temp10981_30))
(assert (= temp10981_32 (select ARGNAME_padding_NAMEEND_VAL temp10981_31)))
(assert (= temp10981_33 #x0000000000000000))
(assert (= temp10981_34 #x0000000000000002))
(assert (= temp10981_35 temp10981_34))
(assert (= temp10981_36 (select ARGNAME_padding_NAMEEND_VAL temp10981_35)))
(assert (= temp10981_37 #x0000000000000000))
(assert (= temp10981_38 #x0000000000000003))
(assert (= temp10981_39 temp10981_38))
(assert (= temp10981_40 (select ARGNAME_padding_NAMEEND_VAL temp10981_39)))
(assert (= temp10981_41 #x0000000000000000))
(assert (= temp10981_42 #x0000000000000004))
(assert (= temp10981_43 temp10981_42))
(assert (= temp10981_44 (select ARGNAME_padding_NAMEEND_VAL temp10981_43)))
(assert (= temp10981_45 #x0000000000000000))
(assert (= temp10981_46 #x0000000000000005))
(assert (= temp10981_47 temp10981_46))
(assert (= temp10981_48 (select ARGNAME_padding_NAMEEND_VAL temp10981_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10981_28 temp10981_25)
             (bvslt temp10981_32 temp10981_29)
             (bvslt temp10981_36 temp10981_33)
             (bvslt temp10981_40 temp10981_37)
             (bvslt temp10981_44 temp10981_41)
             (bvslt temp10981_48 temp10981_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10981_49 #x0000000000000000))
(assert (= var1191714 temp10981_49))
(assert (= temp10981_50 #x0000000000000000))
(assert (= temp10981_51 temp10981_50))
(assert (= temp10981_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10981_51)))
(assert (= temp10981_53 #x0000000000000001))
(assert (= temp10981_54 temp10981_53))
(assert (= temp10981_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10981_54)))
(assert (= temp10981_56 #x0000000000000002))
(assert (= temp10981_57 temp10981_56))
(assert (= temp10981_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10981_57)))
(assert (= temp10981_59 #x0000000000000003))
(assert (= temp10981_60 temp10981_59))
(assert (= temp10981_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10981_60)))
(assert (= temp10981_62 #x0000000000000004))
(assert (= temp10981_63 temp10981_62))
(assert (= temp10981_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10981_63)))
(assert (= temp10981_65 #x0000000000000005))
(assert (= temp10981_66 temp10981_65))
(assert (= temp10981_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10981_66)))
(assert (= temp10981_68 #x0000000000000000))
(assert (= temp10981_69 #x0000000000000000))
(assert (= temp10981_70 temp10981_69))
(assert (= temp10981_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10981_70)))
(assert (= temp10981_72 #x0000000000000000))
(assert (= temp10981_73 #x0000000000000001))
(assert (= temp10981_74 temp10981_73))
(assert (= temp10981_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10981_74)))
(assert (= temp10981_76 #x0000000000000000))
(assert (= temp10981_77 #x0000000000000002))
(assert (= temp10981_78 temp10981_77))
(assert (= temp10981_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10981_78)))
(assert (= temp10981_80 #x0000000000000000))
(assert (= temp10981_81 #x0000000000000003))
(assert (= temp10981_82 temp10981_81))
(assert (= temp10981_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10981_82)))
(assert (= temp10981_84 #x0000000000000000))
(assert (= temp10981_85 #x0000000000000004))
(assert (= temp10981_86 temp10981_85))
(assert (= temp10981_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10981_86)))
(assert (= temp10981_88 #x0000000000000000))
(assert (= temp10981_89 #x0000000000000005))
(assert (= temp10981_90 temp10981_89))
(assert (= temp10981_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10981_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10981_71 temp10981_68)
             (bvslt temp10981_75 temp10981_72)
             (bvslt temp10981_79 temp10981_76)
             (bvslt temp10981_83 temp10981_80)
             (bvslt temp10981_87 temp10981_84)
             (bvslt temp10981_91 temp10981_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10981_92 #x0000000000000000))
(assert (= var1191725 temp10981_92))
(assert (= temp10981_93 #x0000000000000000))
(assert (= temp10981_94 temp10981_93))
(assert (= temp10981_95 (select ARGNAME_stride_NAMEEND_VAL temp10981_94)))
(assert (= temp10981_96 #x0000000000000001))
(assert (= temp10981_97 temp10981_96))
(assert (= temp10981_98 (select ARGNAME_stride_NAMEEND_VAL temp10981_97)))
(assert (= temp10981_99 #x0000000000000002))
(assert (= temp10981_100 temp10981_99))
(assert (= temp10981_101 (select ARGNAME_stride_NAMEEND_VAL temp10981_100)))
(assert (= temp10981_102 #x0000000000000003))
(assert (= temp10981_103 temp10981_102))
(assert (= temp10981_104 (select ARGNAME_stride_NAMEEND_VAL temp10981_103)))
(assert (= temp10981_105 #x0000000000000004))
(assert (= temp10981_106 temp10981_105))
(assert (= temp10981_107 (select ARGNAME_stride_NAMEEND_VAL temp10981_106)))
(assert (= temp10981_108 #x0000000000000005))
(assert (= temp10981_109 temp10981_108))
(assert (= temp10981_110 (select ARGNAME_stride_NAMEEND_VAL temp10981_109)))
(assert (= temp10981_111 #x0000000000000000))
(assert (= temp10981_112 #x0000000000000000))
(assert (= temp10981_113 temp10981_112))
(assert (= temp10981_114 (select ARGNAME_stride_NAMEEND_VAL temp10981_113)))
(assert (= temp10981_115 #x0000000000000000))
(assert (= temp10981_116 #x0000000000000001))
(assert (= temp10981_117 temp10981_116))
(assert (= temp10981_118 (select ARGNAME_stride_NAMEEND_VAL temp10981_117)))
(assert (= temp10981_119 #x0000000000000000))
(assert (= temp10981_120 #x0000000000000002))
(assert (= temp10981_121 temp10981_120))
(assert (= temp10981_122 (select ARGNAME_stride_NAMEEND_VAL temp10981_121)))
(assert (= temp10981_123 #x0000000000000000))
(assert (= temp10981_124 #x0000000000000003))
(assert (= temp10981_125 temp10981_124))
(assert (= temp10981_126 (select ARGNAME_stride_NAMEEND_VAL temp10981_125)))
(assert (= temp10981_127 #x0000000000000000))
(assert (= temp10981_128 #x0000000000000004))
(assert (= temp10981_129 temp10981_128))
(assert (= temp10981_130 (select ARGNAME_stride_NAMEEND_VAL temp10981_129)))
(assert (= temp10981_131 #x0000000000000000))
(assert (= temp10981_132 #x0000000000000005))
(assert (= temp10981_133 temp10981_132))
(assert (= temp10981_134 (select ARGNAME_stride_NAMEEND_VAL temp10981_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10981_114 temp10981_111)
             (bvsle temp10981_118 temp10981_115)
             (bvsle temp10981_122 temp10981_119)
             (bvsle temp10981_126 temp10981_123)
             (bvsle temp10981_130 temp10981_127)
             (bvsle temp10981_134 temp10981_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10981_135 #x0000000000000000))
(assert (= var1191735 temp10981_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10981_136 #x0000000000000001))
(assert (= var1191747 temp10981_136))
(assert (= temp10981_137 #x0000000000000000))
(assert (= var1179826 temp10981_137))
(assert (= temp10981_138 #x0000000000000000))
(assert (= temp10981_139 temp10981_138))
(assert (= temp10981_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10981_139)))
(assert (= temp10981_141 #x0000000000000001))
(assert (= temp10981_142 temp10981_141))
(assert (= temp10981_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10981_142)))
(assert (= temp10981_144 #x0000000000000002))
(assert (= temp10981_145 temp10981_144))
(assert (= temp10981_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10981_145)))
(assert (= temp10981_147 #x0000000000000003))
(assert (= temp10981_148 temp10981_147))
(assert (= temp10981_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10981_148)))
(assert (= temp10981_150 #x0000000000000004))
(assert (= temp10981_151 temp10981_150))
(assert (= temp10981_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10981_151)))
(assert (= temp10981_153 #x0000000000000005))
(assert (= temp10981_154 temp10981_153))
(assert (= temp10981_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10981_154)))
(assert (= temp10981_157 var1179826))
(assert (= temp10981_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10981_157)))
(assert (= temp10981_156 temp10981_158))
(assert (= var1191780
   (ite (bvslt temp10981_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10981_159 #x0000000000000000))
(assert (= var1191780 temp10981_159))
(assert (= temp10981_160 #x0000000000000000))
(assert (= var1179826 temp10981_160))
(assert (= temp10981_162 var1179826))
(assert (= temp10981_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10981_162)))
(assert (= temp10981_161 temp10981_163))
(assert (= var1191802 (bvsmod temp10981_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10981_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10981_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10981_165 #x0000000000000001))
(assert (= var1191803 temp10981_165))
(assert (= temp10981_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10981_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10981_167 #x0000000000000001))
(assert (= var1191823 temp10981_167))
(assert (= temp10981_168 #x0000000000000001))
(assert (= var1180714 temp10981_168))
(assert (= temp10981_169 #x0000000000000000))
(assert (= temp10981_170 temp10981_169))
(assert (= temp10981_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10981_170)))
(assert (= temp10981_172 #x0000000000000001))
(assert (= temp10981_173 temp10981_172))
(assert (= temp10981_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10981_173)))
(assert (= temp10981_175 #x0000000000000002))
(assert (= temp10981_176 temp10981_175))
(assert (= temp10981_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10981_176)))
(assert (= temp10981_178 #x0000000000000003))
(assert (= temp10981_179 temp10981_178))
(assert (= temp10981_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10981_179)))
(assert (= temp10981_181 #x0000000000000004))
(assert (= temp10981_182 temp10981_181))
(assert (= temp10981_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10981_182)))
(assert (= temp10981_184 #x0000000000000005))
(assert (= temp10981_185 temp10981_184))
(assert (= temp10981_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10981_185)))
(assert (= temp10981_187 #x0000000000000000))
(assert (= temp10981_188
   (ite (bvslt var1180714 temp10981_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10981_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10981_188)))
(assert (= var1191831 temp10981_189))
(assert (bvslt (ite (bvslt var1180714 temp10981_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10981_190 #x0000000000000001))
(assert (= var1180714 temp10981_190))
(assert (= temp10981_192 var1180714))
(assert (= temp10981_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10981_192)))
(assert (= temp10981_191 temp10981_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10981_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10981_194 #x0000000000000001))
(assert (= var1191836 temp10981_194))
(assert (= temp10981_195 #x0000000000000000))
(assert (= var1179826 temp10981_195))
(assert (= temp10981_197 var1179826))
(assert (= temp10981_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10981_197)))
(assert (= temp10981_196 temp10981_198))
(assert (= temp10981_199 #x0000000000000002))
(assert (= var1586025 temp10981_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10981_200 #x0000000000000001))
(assert (= var1191993 temp10981_200))
(assert (= temp10981_201 #x0000000000000001))
(assert (= var2700303 temp10981_201))
(assert (= temp10981_202 #x0000000000000001))
(assert (= var2962447 temp10981_202))
(assert (= temp10981_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10981_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10981_204 #x0000000000000001))
(assert (= var211058 temp10981_204))
(assert (= temp10981_205 #x0000000000000001))
(assert (= var211188 temp10981_205))
(assert (= var3879401 var211188))
(assert (= temp10981_206 #x0000000000000000))
(assert (= var3866802 temp10981_206))
(assert (= temp10981_207 #x0000000000000000))
(assert (= temp10981_208
   (ite (bvslt var3866802 temp10981_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10981_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10981_208)))
(assert (= var3879420 temp10981_209))
(assert (bvslt (ite (bvslt var3866802 temp10981_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10981_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10981_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10981_211 #x0000000000000000))
(assert (= var3879421 temp10981_211))
(assert (= temp10981_212 #x0000000000000001))
(assert (= var3867690 temp10981_212))
(assert (= temp10981_213 #x0000000000000000))
(assert (= temp10981_214
   (ite (bvslt var3867690 temp10981_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10981_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10981_214)))
(assert (= var3879423 temp10981_215))
(assert (bvslt (ite (bvslt var3867690 temp10981_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10981_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10981_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10981_217 #x0000000000000001))
(assert (= var3879424 temp10981_217))
(assert (= temp10981_218 #x0000000000000000))
(assert (= var4133117 temp10981_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10981_219 #x0000000000000002))
(assert (= var4339331 temp10981_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10981_220 #x0000000000000000))
(assert (= var4404892 temp10981_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp10981_221 #x0000000000000001))
(assert (= var211058 temp10981_221))
(model-add temp10981_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10981_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10981_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10981_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




