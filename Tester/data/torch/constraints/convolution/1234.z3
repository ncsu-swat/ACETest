(declare-fun temp10376_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10376_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10376_3 () (_ BitVec 64))
(declare-fun temp10376_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10376_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10376_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10376_7 () (_ BitVec 64))
(declare-fun temp10376_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10376_9 () (_ BitVec 64))
(declare-fun temp10376_10 () (_ BitVec 64))
(declare-fun temp10376_11 () (_ BitVec 64))
(declare-fun temp10376_12 () (_ BitVec 64))
(declare-fun temp10376_13 () (_ BitVec 64))
(declare-fun temp10376_14 () (_ BitVec 64))
(declare-fun temp10376_15 () (_ BitVec 64))
(declare-fun temp10376_16 () (_ BitVec 64))
(declare-fun temp10376_17 () (_ BitVec 64))
(declare-fun temp10376_18 () (_ BitVec 64))
(declare-fun temp10376_19 () (_ BitVec 64))
(declare-fun temp10376_20 () (_ BitVec 64))
(declare-fun temp10376_21 () (_ BitVec 64))
(declare-fun temp10376_22 () (_ BitVec 64))
(declare-fun temp10376_23 () (_ BitVec 64))
(declare-fun temp10376_24 () (_ BitVec 64))
(declare-fun temp10376_25 () (_ BitVec 64))
(declare-fun temp10376_26 () (_ BitVec 64))
(declare-fun temp10376_27 () (_ BitVec 64))
(declare-fun temp10376_28 () (_ BitVec 64))
(declare-fun temp10376_29 () (_ BitVec 64))
(declare-fun temp10376_30 () (_ BitVec 64))
(declare-fun temp10376_31 () (_ BitVec 64))
(declare-fun temp10376_32 () (_ BitVec 64))
(declare-fun temp10376_33 () (_ BitVec 64))
(declare-fun temp10376_34 () (_ BitVec 64))
(declare-fun temp10376_35 () (_ BitVec 64))
(declare-fun temp10376_36 () (_ BitVec 64))
(declare-fun temp10376_37 () (_ BitVec 64))
(declare-fun temp10376_38 () (_ BitVec 64))
(declare-fun temp10376_39 () (_ BitVec 64))
(declare-fun temp10376_40 () (_ BitVec 64))
(declare-fun temp10376_41 () (_ BitVec 64))
(declare-fun temp10376_42 () (_ BitVec 64))
(declare-fun temp10376_43 () (_ BitVec 64))
(declare-fun temp10376_44 () (_ BitVec 64))
(declare-fun temp10376_45 () (_ BitVec 64))
(declare-fun temp10376_46 () (_ BitVec 64))
(declare-fun temp10376_47 () (_ BitVec 64))
(declare-fun temp10376_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10376_49 () (_ BitVec 64))
(declare-fun temp10376_50 () (_ BitVec 64))
(declare-fun temp10376_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10376_52 () (_ BitVec 64))
(declare-fun temp10376_53 () (_ BitVec 64))
(declare-fun temp10376_54 () (_ BitVec 64))
(declare-fun temp10376_55 () (_ BitVec 64))
(declare-fun temp10376_56 () (_ BitVec 64))
(declare-fun temp10376_57 () (_ BitVec 64))
(declare-fun temp10376_58 () (_ BitVec 64))
(declare-fun temp10376_59 () (_ BitVec 64))
(declare-fun temp10376_60 () (_ BitVec 64))
(declare-fun temp10376_61 () (_ BitVec 64))
(declare-fun temp10376_62 () (_ BitVec 64))
(declare-fun temp10376_63 () (_ BitVec 64))
(declare-fun temp10376_64 () (_ BitVec 64))
(declare-fun temp10376_65 () (_ BitVec 64))
(declare-fun temp10376_66 () (_ BitVec 64))
(declare-fun temp10376_67 () (_ BitVec 64))
(declare-fun temp10376_68 () (_ BitVec 64))
(declare-fun temp10376_69 () (_ BitVec 64))
(declare-fun temp10376_70 () (_ BitVec 64))
(declare-fun temp10376_71 () (_ BitVec 64))
(declare-fun temp10376_72 () (_ BitVec 64))
(declare-fun temp10376_73 () (_ BitVec 64))
(declare-fun temp10376_74 () (_ BitVec 64))
(declare-fun temp10376_75 () (_ BitVec 64))
(declare-fun temp10376_76 () (_ BitVec 64))
(declare-fun temp10376_77 () (_ BitVec 64))
(declare-fun temp10376_78 () (_ BitVec 64))
(declare-fun temp10376_79 () (_ BitVec 64))
(declare-fun temp10376_80 () (_ BitVec 64))
(declare-fun temp10376_81 () (_ BitVec 64))
(declare-fun temp10376_82 () (_ BitVec 64))
(declare-fun temp10376_83 () (_ BitVec 64))
(declare-fun temp10376_84 () (_ BitVec 64))
(declare-fun temp10376_85 () (_ BitVec 64))
(declare-fun temp10376_86 () (_ BitVec 64))
(declare-fun temp10376_87 () (_ BitVec 64))
(declare-fun temp10376_88 () (_ BitVec 64))
(declare-fun temp10376_89 () (_ BitVec 64))
(declare-fun temp10376_90 () (_ BitVec 64))
(declare-fun temp10376_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10376_92 () (_ BitVec 64))
(declare-fun temp10376_93 () (_ BitVec 64))
(declare-fun temp10376_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10376_95 () (_ BitVec 64))
(declare-fun temp10376_96 () (_ BitVec 64))
(declare-fun temp10376_97 () (_ BitVec 64))
(declare-fun temp10376_98 () (_ BitVec 64))
(declare-fun temp10376_99 () (_ BitVec 64))
(declare-fun temp10376_100 () (_ BitVec 64))
(declare-fun temp10376_101 () (_ BitVec 64))
(declare-fun temp10376_102 () (_ BitVec 64))
(declare-fun temp10376_103 () (_ BitVec 64))
(declare-fun temp10376_104 () (_ BitVec 64))
(declare-fun temp10376_105 () (_ BitVec 64))
(declare-fun temp10376_106 () (_ BitVec 64))
(declare-fun temp10376_107 () (_ BitVec 64))
(declare-fun temp10376_108 () (_ BitVec 64))
(declare-fun temp10376_109 () (_ BitVec 64))
(declare-fun temp10376_110 () (_ BitVec 64))
(declare-fun temp10376_111 () (_ BitVec 64))
(declare-fun temp10376_112 () (_ BitVec 64))
(declare-fun temp10376_113 () (_ BitVec 64))
(declare-fun temp10376_114 () (_ BitVec 64))
(declare-fun temp10376_115 () (_ BitVec 64))
(declare-fun temp10376_116 () (_ BitVec 64))
(declare-fun temp10376_117 () (_ BitVec 64))
(declare-fun temp10376_118 () (_ BitVec 64))
(declare-fun temp10376_119 () (_ BitVec 64))
(declare-fun temp10376_120 () (_ BitVec 64))
(declare-fun temp10376_121 () (_ BitVec 64))
(declare-fun temp10376_122 () (_ BitVec 64))
(declare-fun temp10376_123 () (_ BitVec 64))
(declare-fun temp10376_124 () (_ BitVec 64))
(declare-fun temp10376_125 () (_ BitVec 64))
(declare-fun temp10376_126 () (_ BitVec 64))
(declare-fun temp10376_127 () (_ BitVec 64))
(declare-fun temp10376_128 () (_ BitVec 64))
(declare-fun temp10376_129 () (_ BitVec 64))
(declare-fun temp10376_130 () (_ BitVec 64))
(declare-fun temp10376_131 () (_ BitVec 64))
(declare-fun temp10376_132 () (_ BitVec 64))
(declare-fun temp10376_133 () (_ BitVec 64))
(declare-fun temp10376_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10376_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10376_136 () (_ BitVec 64))
(declare-fun temp10376_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10376_138 () (_ BitVec 64))
(declare-fun temp10376_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10376_140 () (_ BitVec 64))
(declare-fun temp10376_141 () (_ BitVec 64))
(declare-fun temp10376_142 () (_ BitVec 64))
(declare-fun temp10376_143 () (_ BitVec 64))
(declare-fun temp10376_144 () (_ BitVec 64))
(declare-fun temp10376_145 () (_ BitVec 64))
(declare-fun temp10376_146 () (_ BitVec 64))
(declare-fun temp10376_147 () (_ BitVec 64))
(declare-fun temp10376_148 () (_ BitVec 64))
(declare-fun temp10376_149 () (_ BitVec 64))
(declare-fun temp10376_150 () (_ BitVec 64))
(declare-fun temp10376_151 () (_ BitVec 64))
(declare-fun temp10376_152 () (_ BitVec 64))
(declare-fun temp10376_153 () (_ BitVec 64))
(declare-fun temp10376_154 () (_ BitVec 64))
(declare-fun temp10376_155 () (_ BitVec 64))
(declare-fun temp10376_157 () (_ BitVec 64))
(declare-fun temp10376_158 () (_ BitVec 64))
(declare-fun temp10376_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10376_159 () (_ BitVec 64))
(declare-fun temp10376_160 () (_ BitVec 64))
(declare-fun temp10376_162 () (_ BitVec 64))
(declare-fun temp10376_163 () (_ BitVec 64))
(declare-fun temp10376_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10376_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10376_165 () (_ BitVec 64))
(declare-fun temp10376_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10376_167 () (_ BitVec 64))
(declare-fun temp10376_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10376_169 () (_ BitVec 64))
(declare-fun temp10376_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10376_171 () (_ BitVec 64))
(declare-fun temp10376_172 () (_ BitVec 64))
(declare-fun temp10376_173 () (_ BitVec 64))
(declare-fun temp10376_174 () (_ BitVec 64))
(declare-fun temp10376_175 () (_ BitVec 64))
(declare-fun temp10376_176 () (_ BitVec 64))
(declare-fun temp10376_177 () (_ BitVec 64))
(declare-fun temp10376_178 () (_ BitVec 64))
(declare-fun temp10376_179 () (_ BitVec 64))
(declare-fun temp10376_180 () (_ BitVec 64))
(declare-fun temp10376_181 () (_ BitVec 64))
(declare-fun temp10376_182 () (_ BitVec 64))
(declare-fun temp10376_183 () (_ BitVec 64))
(declare-fun temp10376_184 () (_ BitVec 64))
(declare-fun temp10376_185 () (_ BitVec 64))
(declare-fun temp10376_186 () (_ BitVec 64))
(declare-fun temp10376_187 () (_ BitVec 64))
(declare-fun temp10376_188 () (_ BitVec 64))
(declare-fun temp10376_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10376_190 () (_ BitVec 64))
(declare-fun temp10376_192 () (_ BitVec 64))
(declare-fun temp10376_193 () (_ BitVec 64))
(declare-fun temp10376_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10376_194 () (_ BitVec 64))
(declare-fun temp10376_195 () (_ BitVec 64))
(declare-fun temp10376_197 () (_ BitVec 64))
(declare-fun temp10376_198 () (_ BitVec 64))
(declare-fun temp10376_196 () (_ BitVec 64))
(declare-fun temp10376_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10376_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10376_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10376_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10376_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10376_204 () (_ BitVec 64))
(declare-fun temp10376_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10376_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10376_207 () (_ BitVec 64))
(declare-fun temp10376_208 () (_ BitVec 64))
(declare-fun temp10376_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10376_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10376_211 () (_ BitVec 64))
(declare-fun temp10376_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10376_213 () (_ BitVec 64))
(declare-fun temp10376_214 () (_ BitVec 64))
(declare-fun temp10376_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10376_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10376_217 () (_ BitVec 64))
(declare-fun temp10376_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10376_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10376_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp10376_221 () (_ BitVec 64))
(assert (= temp10376_1 #x0000000000000001))
(assert (= var77203 temp10376_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10376_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10376_2)))
(assert (= temp10376_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10376_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10376_4 #x0000000000000000))
(assert (= var210941 temp10376_4))
(assert (= temp10376_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10376_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10376_6 #x0000000000000000))
(assert (= var210986 temp10376_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10376_7 #x0000000000000000))
(assert (= temp10376_8 temp10376_7))
(assert (= temp10376_9 (select ARGNAME_padding_NAMEEND_VAL temp10376_8)))
(assert (= temp10376_10 #x0000000000000001))
(assert (= temp10376_11 temp10376_10))
(assert (= temp10376_12 (select ARGNAME_padding_NAMEEND_VAL temp10376_11)))
(assert (= temp10376_13 #x0000000000000002))
(assert (= temp10376_14 temp10376_13))
(assert (= temp10376_15 (select ARGNAME_padding_NAMEEND_VAL temp10376_14)))
(assert (= temp10376_16 #x0000000000000003))
(assert (= temp10376_17 temp10376_16))
(assert (= temp10376_18 (select ARGNAME_padding_NAMEEND_VAL temp10376_17)))
(assert (= temp10376_19 #x0000000000000004))
(assert (= temp10376_20 temp10376_19))
(assert (= temp10376_21 (select ARGNAME_padding_NAMEEND_VAL temp10376_20)))
(assert (= temp10376_22 #x0000000000000005))
(assert (= temp10376_23 temp10376_22))
(assert (= temp10376_24 (select ARGNAME_padding_NAMEEND_VAL temp10376_23)))
(assert (= temp10376_25 #x0000000000000000))
(assert (= temp10376_26 #x0000000000000000))
(assert (= temp10376_27 temp10376_26))
(assert (= temp10376_28 (select ARGNAME_padding_NAMEEND_VAL temp10376_27)))
(assert (= temp10376_29 #x0000000000000000))
(assert (= temp10376_30 #x0000000000000001))
(assert (= temp10376_31 temp10376_30))
(assert (= temp10376_32 (select ARGNAME_padding_NAMEEND_VAL temp10376_31)))
(assert (= temp10376_33 #x0000000000000000))
(assert (= temp10376_34 #x0000000000000002))
(assert (= temp10376_35 temp10376_34))
(assert (= temp10376_36 (select ARGNAME_padding_NAMEEND_VAL temp10376_35)))
(assert (= temp10376_37 #x0000000000000000))
(assert (= temp10376_38 #x0000000000000003))
(assert (= temp10376_39 temp10376_38))
(assert (= temp10376_40 (select ARGNAME_padding_NAMEEND_VAL temp10376_39)))
(assert (= temp10376_41 #x0000000000000000))
(assert (= temp10376_42 #x0000000000000004))
(assert (= temp10376_43 temp10376_42))
(assert (= temp10376_44 (select ARGNAME_padding_NAMEEND_VAL temp10376_43)))
(assert (= temp10376_45 #x0000000000000000))
(assert (= temp10376_46 #x0000000000000005))
(assert (= temp10376_47 temp10376_46))
(assert (= temp10376_48 (select ARGNAME_padding_NAMEEND_VAL temp10376_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10376_28 temp10376_25)
             (bvslt temp10376_32 temp10376_29)
             (bvslt temp10376_36 temp10376_33)
             (bvslt temp10376_40 temp10376_37)
             (bvslt temp10376_44 temp10376_41)
             (bvslt temp10376_48 temp10376_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10376_49 #x0000000000000000))
(assert (= var1191714 temp10376_49))
(assert (= temp10376_50 #x0000000000000000))
(assert (= temp10376_51 temp10376_50))
(assert (= temp10376_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10376_51)))
(assert (= temp10376_53 #x0000000000000001))
(assert (= temp10376_54 temp10376_53))
(assert (= temp10376_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10376_54)))
(assert (= temp10376_56 #x0000000000000002))
(assert (= temp10376_57 temp10376_56))
(assert (= temp10376_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10376_57)))
(assert (= temp10376_59 #x0000000000000003))
(assert (= temp10376_60 temp10376_59))
(assert (= temp10376_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10376_60)))
(assert (= temp10376_62 #x0000000000000004))
(assert (= temp10376_63 temp10376_62))
(assert (= temp10376_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10376_63)))
(assert (= temp10376_65 #x0000000000000005))
(assert (= temp10376_66 temp10376_65))
(assert (= temp10376_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10376_66)))
(assert (= temp10376_68 #x0000000000000000))
(assert (= temp10376_69 #x0000000000000000))
(assert (= temp10376_70 temp10376_69))
(assert (= temp10376_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10376_70)))
(assert (= temp10376_72 #x0000000000000000))
(assert (= temp10376_73 #x0000000000000001))
(assert (= temp10376_74 temp10376_73))
(assert (= temp10376_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10376_74)))
(assert (= temp10376_76 #x0000000000000000))
(assert (= temp10376_77 #x0000000000000002))
(assert (= temp10376_78 temp10376_77))
(assert (= temp10376_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10376_78)))
(assert (= temp10376_80 #x0000000000000000))
(assert (= temp10376_81 #x0000000000000003))
(assert (= temp10376_82 temp10376_81))
(assert (= temp10376_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10376_82)))
(assert (= temp10376_84 #x0000000000000000))
(assert (= temp10376_85 #x0000000000000004))
(assert (= temp10376_86 temp10376_85))
(assert (= temp10376_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10376_86)))
(assert (= temp10376_88 #x0000000000000000))
(assert (= temp10376_89 #x0000000000000005))
(assert (= temp10376_90 temp10376_89))
(assert (= temp10376_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10376_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10376_71 temp10376_68)
             (bvslt temp10376_75 temp10376_72)
             (bvslt temp10376_79 temp10376_76)
             (bvslt temp10376_83 temp10376_80)
             (bvslt temp10376_87 temp10376_84)
             (bvslt temp10376_91 temp10376_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10376_92 #x0000000000000000))
(assert (= var1191725 temp10376_92))
(assert (= temp10376_93 #x0000000000000000))
(assert (= temp10376_94 temp10376_93))
(assert (= temp10376_95 (select ARGNAME_stride_NAMEEND_VAL temp10376_94)))
(assert (= temp10376_96 #x0000000000000001))
(assert (= temp10376_97 temp10376_96))
(assert (= temp10376_98 (select ARGNAME_stride_NAMEEND_VAL temp10376_97)))
(assert (= temp10376_99 #x0000000000000002))
(assert (= temp10376_100 temp10376_99))
(assert (= temp10376_101 (select ARGNAME_stride_NAMEEND_VAL temp10376_100)))
(assert (= temp10376_102 #x0000000000000003))
(assert (= temp10376_103 temp10376_102))
(assert (= temp10376_104 (select ARGNAME_stride_NAMEEND_VAL temp10376_103)))
(assert (= temp10376_105 #x0000000000000004))
(assert (= temp10376_106 temp10376_105))
(assert (= temp10376_107 (select ARGNAME_stride_NAMEEND_VAL temp10376_106)))
(assert (= temp10376_108 #x0000000000000005))
(assert (= temp10376_109 temp10376_108))
(assert (= temp10376_110 (select ARGNAME_stride_NAMEEND_VAL temp10376_109)))
(assert (= temp10376_111 #x0000000000000000))
(assert (= temp10376_112 #x0000000000000000))
(assert (= temp10376_113 temp10376_112))
(assert (= temp10376_114 (select ARGNAME_stride_NAMEEND_VAL temp10376_113)))
(assert (= temp10376_115 #x0000000000000000))
(assert (= temp10376_116 #x0000000000000001))
(assert (= temp10376_117 temp10376_116))
(assert (= temp10376_118 (select ARGNAME_stride_NAMEEND_VAL temp10376_117)))
(assert (= temp10376_119 #x0000000000000000))
(assert (= temp10376_120 #x0000000000000002))
(assert (= temp10376_121 temp10376_120))
(assert (= temp10376_122 (select ARGNAME_stride_NAMEEND_VAL temp10376_121)))
(assert (= temp10376_123 #x0000000000000000))
(assert (= temp10376_124 #x0000000000000003))
(assert (= temp10376_125 temp10376_124))
(assert (= temp10376_126 (select ARGNAME_stride_NAMEEND_VAL temp10376_125)))
(assert (= temp10376_127 #x0000000000000000))
(assert (= temp10376_128 #x0000000000000004))
(assert (= temp10376_129 temp10376_128))
(assert (= temp10376_130 (select ARGNAME_stride_NAMEEND_VAL temp10376_129)))
(assert (= temp10376_131 #x0000000000000000))
(assert (= temp10376_132 #x0000000000000005))
(assert (= temp10376_133 temp10376_132))
(assert (= temp10376_134 (select ARGNAME_stride_NAMEEND_VAL temp10376_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10376_114 temp10376_111)
             (bvsle temp10376_118 temp10376_115)
             (bvsle temp10376_122 temp10376_119)
             (bvsle temp10376_126 temp10376_123)
             (bvsle temp10376_130 temp10376_127)
             (bvsle temp10376_134 temp10376_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10376_135 #x0000000000000000))
(assert (= var1191735 temp10376_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10376_136 #x0000000000000001))
(assert (= var1191747 temp10376_136))
(assert (= temp10376_137 #x0000000000000000))
(assert (= var1179826 temp10376_137))
(assert (= temp10376_138 #x0000000000000000))
(assert (= temp10376_139 temp10376_138))
(assert (= temp10376_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10376_139)))
(assert (= temp10376_141 #x0000000000000001))
(assert (= temp10376_142 temp10376_141))
(assert (= temp10376_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10376_142)))
(assert (= temp10376_144 #x0000000000000002))
(assert (= temp10376_145 temp10376_144))
(assert (= temp10376_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10376_145)))
(assert (= temp10376_147 #x0000000000000003))
(assert (= temp10376_148 temp10376_147))
(assert (= temp10376_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10376_148)))
(assert (= temp10376_150 #x0000000000000004))
(assert (= temp10376_151 temp10376_150))
(assert (= temp10376_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10376_151)))
(assert (= temp10376_153 #x0000000000000005))
(assert (= temp10376_154 temp10376_153))
(assert (= temp10376_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10376_154)))
(assert (= temp10376_157 var1179826))
(assert (= temp10376_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10376_157)))
(assert (= temp10376_156 temp10376_158))
(assert (= var1191780
   (ite (bvslt temp10376_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10376_159 #x0000000000000000))
(assert (= var1191780 temp10376_159))
(assert (= temp10376_160 #x0000000000000000))
(assert (= var1179826 temp10376_160))
(assert (= temp10376_162 var1179826))
(assert (= temp10376_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10376_162)))
(assert (= temp10376_161 temp10376_163))
(assert (= var1191802 (bvsmod temp10376_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10376_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10376_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10376_165 #x0000000000000001))
(assert (= var1191803 temp10376_165))
(assert (= temp10376_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10376_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10376_167 #x0000000000000001))
(assert (= var1191823 temp10376_167))
(assert (= temp10376_168 #x0000000000000001))
(assert (= var1180714 temp10376_168))
(assert (= temp10376_169 #x0000000000000000))
(assert (= temp10376_170 temp10376_169))
(assert (= temp10376_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10376_170)))
(assert (= temp10376_172 #x0000000000000001))
(assert (= temp10376_173 temp10376_172))
(assert (= temp10376_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10376_173)))
(assert (= temp10376_175 #x0000000000000002))
(assert (= temp10376_176 temp10376_175))
(assert (= temp10376_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10376_176)))
(assert (= temp10376_178 #x0000000000000003))
(assert (= temp10376_179 temp10376_178))
(assert (= temp10376_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10376_179)))
(assert (= temp10376_181 #x0000000000000004))
(assert (= temp10376_182 temp10376_181))
(assert (= temp10376_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10376_182)))
(assert (= temp10376_184 #x0000000000000005))
(assert (= temp10376_185 temp10376_184))
(assert (= temp10376_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10376_185)))
(assert (= temp10376_187 #x0000000000000000))
(assert (= temp10376_188
   (ite (bvslt var1180714 temp10376_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10376_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10376_188)))
(assert (= var1191831 temp10376_189))
(assert (bvslt (ite (bvslt var1180714 temp10376_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10376_190 #x0000000000000001))
(assert (= var1180714 temp10376_190))
(assert (= temp10376_192 var1180714))
(assert (= temp10376_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10376_192)))
(assert (= temp10376_191 temp10376_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10376_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10376_194 #x0000000000000001))
(assert (= var1191836 temp10376_194))
(assert (= temp10376_195 #x0000000000000000))
(assert (= var1179826 temp10376_195))
(assert (= temp10376_197 var1179826))
(assert (= temp10376_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10376_197)))
(assert (= temp10376_196 temp10376_198))
(assert (= temp10376_199 #x0000000000000002))
(assert (= var1586025 temp10376_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10376_200 #x0000000000000001))
(assert (= var1191993 temp10376_200))
(assert (= temp10376_201 #x0000000000000001))
(assert (= var2700303 temp10376_201))
(assert (= temp10376_202 #x0000000000000001))
(assert (= var2962447 temp10376_202))
(assert (= temp10376_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10376_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10376_204 #x0000000000000001))
(assert (= var211058 temp10376_204))
(assert (= temp10376_205 #x0000000000000001))
(assert (= var211188 temp10376_205))
(assert (= var3879401 var211188))
(assert (= temp10376_206 #x0000000000000000))
(assert (= var3866802 temp10376_206))
(assert (= temp10376_207 #x0000000000000000))
(assert (= temp10376_208
   (ite (bvslt var3866802 temp10376_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10376_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10376_208)))
(assert (= var3879420 temp10376_209))
(assert (bvslt (ite (bvslt var3866802 temp10376_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10376_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10376_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10376_211 #x0000000000000000))
(assert (= var3879421 temp10376_211))
(assert (= temp10376_212 #x0000000000000001))
(assert (= var3867690 temp10376_212))
(assert (= temp10376_213 #x0000000000000000))
(assert (= temp10376_214
   (ite (bvslt var3867690 temp10376_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10376_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10376_214)))
(assert (= var3879423 temp10376_215))
(assert (bvslt (ite (bvslt var3867690 temp10376_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10376_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10376_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10376_217 #x0000000000000001))
(assert (= var3879424 temp10376_217))
(assert (= temp10376_218 #x0000000000000000))
(assert (= var4079423 temp10376_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10376_219 #x0000000000000002))
(assert (= var4208259 temp10376_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10376_220 #x0000000000000000))
(assert (= var4273820 temp10376_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp10376_221 #x0000000000000001))
(assert (= var211058 temp10376_221))
(model-add temp10376_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10376_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10376_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10376_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






