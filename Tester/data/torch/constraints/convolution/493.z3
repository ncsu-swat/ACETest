(declare-fun temp657_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp657_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp657_3 () (_ BitVec 64))
(declare-fun temp657_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp657_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp657_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp657_7 () (_ BitVec 64))
(declare-fun temp657_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp657_9 () (_ BitVec 64))
(declare-fun temp657_10 () (_ BitVec 64))
(declare-fun temp657_11 () (_ BitVec 64))
(declare-fun temp657_12 () (_ BitVec 64))
(declare-fun temp657_13 () (_ BitVec 64))
(declare-fun temp657_14 () (_ BitVec 64))
(declare-fun temp657_15 () (_ BitVec 64))
(declare-fun temp657_16 () (_ BitVec 64))
(declare-fun temp657_17 () (_ BitVec 64))
(declare-fun temp657_18 () (_ BitVec 64))
(declare-fun temp657_19 () (_ BitVec 64))
(declare-fun temp657_20 () (_ BitVec 64))
(declare-fun temp657_21 () (_ BitVec 64))
(declare-fun temp657_22 () (_ BitVec 64))
(declare-fun temp657_23 () (_ BitVec 64))
(declare-fun temp657_24 () (_ BitVec 64))
(declare-fun temp657_25 () (_ BitVec 64))
(declare-fun temp657_26 () (_ BitVec 64))
(declare-fun temp657_27 () (_ BitVec 64))
(declare-fun temp657_28 () (_ BitVec 64))
(declare-fun temp657_29 () (_ BitVec 64))
(declare-fun temp657_30 () (_ BitVec 64))
(declare-fun temp657_31 () (_ BitVec 64))
(declare-fun temp657_32 () (_ BitVec 64))
(declare-fun temp657_33 () (_ BitVec 64))
(declare-fun temp657_34 () (_ BitVec 64))
(declare-fun temp657_35 () (_ BitVec 64))
(declare-fun temp657_36 () (_ BitVec 64))
(declare-fun temp657_37 () (_ BitVec 64))
(declare-fun temp657_38 () (_ BitVec 64))
(declare-fun temp657_39 () (_ BitVec 64))
(declare-fun temp657_40 () (_ BitVec 64))
(declare-fun temp657_41 () (_ BitVec 64))
(declare-fun temp657_42 () (_ BitVec 64))
(declare-fun temp657_43 () (_ BitVec 64))
(declare-fun temp657_44 () (_ BitVec 64))
(declare-fun temp657_45 () (_ BitVec 64))
(declare-fun temp657_46 () (_ BitVec 64))
(declare-fun temp657_47 () (_ BitVec 64))
(declare-fun temp657_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp657_49 () (_ BitVec 64))
(declare-fun temp657_50 () (_ BitVec 64))
(declare-fun temp657_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp657_52 () (_ BitVec 64))
(declare-fun temp657_53 () (_ BitVec 64))
(declare-fun temp657_54 () (_ BitVec 64))
(declare-fun temp657_55 () (_ BitVec 64))
(declare-fun temp657_56 () (_ BitVec 64))
(declare-fun temp657_57 () (_ BitVec 64))
(declare-fun temp657_58 () (_ BitVec 64))
(declare-fun temp657_59 () (_ BitVec 64))
(declare-fun temp657_60 () (_ BitVec 64))
(declare-fun temp657_61 () (_ BitVec 64))
(declare-fun temp657_62 () (_ BitVec 64))
(declare-fun temp657_63 () (_ BitVec 64))
(declare-fun temp657_64 () (_ BitVec 64))
(declare-fun temp657_65 () (_ BitVec 64))
(declare-fun temp657_66 () (_ BitVec 64))
(declare-fun temp657_67 () (_ BitVec 64))
(declare-fun temp657_68 () (_ BitVec 64))
(declare-fun temp657_69 () (_ BitVec 64))
(declare-fun temp657_70 () (_ BitVec 64))
(declare-fun temp657_71 () (_ BitVec 64))
(declare-fun temp657_72 () (_ BitVec 64))
(declare-fun temp657_73 () (_ BitVec 64))
(declare-fun temp657_74 () (_ BitVec 64))
(declare-fun temp657_75 () (_ BitVec 64))
(declare-fun temp657_76 () (_ BitVec 64))
(declare-fun temp657_77 () (_ BitVec 64))
(declare-fun temp657_78 () (_ BitVec 64))
(declare-fun temp657_79 () (_ BitVec 64))
(declare-fun temp657_80 () (_ BitVec 64))
(declare-fun temp657_81 () (_ BitVec 64))
(declare-fun temp657_82 () (_ BitVec 64))
(declare-fun temp657_83 () (_ BitVec 64))
(declare-fun temp657_84 () (_ BitVec 64))
(declare-fun temp657_85 () (_ BitVec 64))
(declare-fun temp657_86 () (_ BitVec 64))
(declare-fun temp657_87 () (_ BitVec 64))
(declare-fun temp657_88 () (_ BitVec 64))
(declare-fun temp657_89 () (_ BitVec 64))
(declare-fun temp657_90 () (_ BitVec 64))
(declare-fun temp657_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp657_92 () (_ BitVec 64))
(declare-fun temp657_93 () (_ BitVec 64))
(declare-fun temp657_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp657_95 () (_ BitVec 64))
(declare-fun temp657_96 () (_ BitVec 64))
(declare-fun temp657_97 () (_ BitVec 64))
(declare-fun temp657_98 () (_ BitVec 64))
(declare-fun temp657_99 () (_ BitVec 64))
(declare-fun temp657_100 () (_ BitVec 64))
(declare-fun temp657_101 () (_ BitVec 64))
(declare-fun temp657_102 () (_ BitVec 64))
(declare-fun temp657_103 () (_ BitVec 64))
(declare-fun temp657_104 () (_ BitVec 64))
(declare-fun temp657_105 () (_ BitVec 64))
(declare-fun temp657_106 () (_ BitVec 64))
(declare-fun temp657_107 () (_ BitVec 64))
(declare-fun temp657_108 () (_ BitVec 64))
(declare-fun temp657_109 () (_ BitVec 64))
(declare-fun temp657_110 () (_ BitVec 64))
(declare-fun temp657_111 () (_ BitVec 64))
(declare-fun temp657_112 () (_ BitVec 64))
(declare-fun temp657_113 () (_ BitVec 64))
(declare-fun temp657_114 () (_ BitVec 64))
(declare-fun temp657_115 () (_ BitVec 64))
(declare-fun temp657_116 () (_ BitVec 64))
(declare-fun temp657_117 () (_ BitVec 64))
(declare-fun temp657_118 () (_ BitVec 64))
(declare-fun temp657_119 () (_ BitVec 64))
(declare-fun temp657_120 () (_ BitVec 64))
(declare-fun temp657_121 () (_ BitVec 64))
(declare-fun temp657_122 () (_ BitVec 64))
(declare-fun temp657_123 () (_ BitVec 64))
(declare-fun temp657_124 () (_ BitVec 64))
(declare-fun temp657_125 () (_ BitVec 64))
(declare-fun temp657_126 () (_ BitVec 64))
(declare-fun temp657_127 () (_ BitVec 64))
(declare-fun temp657_128 () (_ BitVec 64))
(declare-fun temp657_129 () (_ BitVec 64))
(declare-fun temp657_130 () (_ BitVec 64))
(declare-fun temp657_131 () (_ BitVec 64))
(declare-fun temp657_132 () (_ BitVec 64))
(declare-fun temp657_133 () (_ BitVec 64))
(declare-fun temp657_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp657_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp657_136 () (_ BitVec 64))
(declare-fun temp657_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp657_138 () (_ BitVec 64))
(declare-fun temp657_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp657_140 () (_ BitVec 64))
(declare-fun temp657_141 () (_ BitVec 64))
(declare-fun temp657_142 () (_ BitVec 64))
(declare-fun temp657_143 () (_ BitVec 64))
(declare-fun temp657_144 () (_ BitVec 64))
(declare-fun temp657_145 () (_ BitVec 64))
(declare-fun temp657_146 () (_ BitVec 64))
(declare-fun temp657_147 () (_ BitVec 64))
(declare-fun temp657_148 () (_ BitVec 64))
(declare-fun temp657_149 () (_ BitVec 64))
(declare-fun temp657_150 () (_ BitVec 64))
(declare-fun temp657_151 () (_ BitVec 64))
(declare-fun temp657_152 () (_ BitVec 64))
(declare-fun temp657_153 () (_ BitVec 64))
(declare-fun temp657_154 () (_ BitVec 64))
(declare-fun temp657_155 () (_ BitVec 64))
(declare-fun temp657_157 () (_ BitVec 64))
(declare-fun temp657_158 () (_ BitVec 64))
(declare-fun temp657_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp657_159 () (_ BitVec 64))
(declare-fun temp657_160 () (_ BitVec 64))
(declare-fun temp657_162 () (_ BitVec 64))
(declare-fun temp657_163 () (_ BitVec 64))
(declare-fun temp657_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp657_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp657_165 () (_ BitVec 64))
(declare-fun temp657_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp657_167 () (_ BitVec 64))
(declare-fun temp657_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp657_169 () (_ BitVec 64))
(declare-fun temp657_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp657_171 () (_ BitVec 64))
(declare-fun temp657_172 () (_ BitVec 64))
(declare-fun temp657_173 () (_ BitVec 64))
(declare-fun temp657_174 () (_ BitVec 64))
(declare-fun temp657_175 () (_ BitVec 64))
(declare-fun temp657_176 () (_ BitVec 64))
(declare-fun temp657_177 () (_ BitVec 64))
(declare-fun temp657_178 () (_ BitVec 64))
(declare-fun temp657_179 () (_ BitVec 64))
(declare-fun temp657_180 () (_ BitVec 64))
(declare-fun temp657_181 () (_ BitVec 64))
(declare-fun temp657_182 () (_ BitVec 64))
(declare-fun temp657_183 () (_ BitVec 64))
(declare-fun temp657_184 () (_ BitVec 64))
(declare-fun temp657_185 () (_ BitVec 64))
(declare-fun temp657_186 () (_ BitVec 64))
(declare-fun temp657_187 () (_ BitVec 64))
(declare-fun temp657_188 () (_ BitVec 64))
(declare-fun temp657_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp657_190 () (_ BitVec 64))
(declare-fun temp657_192 () (_ BitVec 64))
(declare-fun temp657_193 () (_ BitVec 64))
(declare-fun temp657_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp657_194 () (_ BitVec 64))
(declare-fun temp657_195 () (_ BitVec 64))
(declare-fun temp657_197 () (_ BitVec 64))
(declare-fun temp657_198 () (_ BitVec 64))
(declare-fun temp657_196 () (_ BitVec 64))
(declare-fun temp657_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp657_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp657_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp657_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp657_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp657_204 () (_ BitVec 64))
(declare-fun temp657_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp657_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp657_207 () (_ BitVec 64))
(declare-fun temp657_208 () (_ BitVec 64))
(declare-fun temp657_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp657_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp657_211 () (_ BitVec 64))
(declare-fun temp657_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp657_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp657_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4796816 () (_ BitVec 64))
(declare-fun var211494 () (_ BitVec 64))
(declare-fun temp657_215 () (_ BitVec 64))
(declare-fun var211495 () (_ BitVec 64))
(declare-fun temp657_216 () (_ BitVec 64))
(assert (= temp657_1 #x0000000000000001))
(assert (= var77203 temp657_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp657_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp657_2)))
(assert (= temp657_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp657_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp657_4 #x0000000000000000))
(assert (= var210941 temp657_4))
(assert (= temp657_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp657_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp657_6 #x0000000000000000))
(assert (= var210986 temp657_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp657_7 #x0000000000000000))
(assert (= temp657_8 temp657_7))
(assert (= temp657_9 (select ARGNAME_padding_NAMEEND_VAL temp657_8)))
(assert (= temp657_10 #x0000000000000001))
(assert (= temp657_11 temp657_10))
(assert (= temp657_12 (select ARGNAME_padding_NAMEEND_VAL temp657_11)))
(assert (= temp657_13 #x0000000000000002))
(assert (= temp657_14 temp657_13))
(assert (= temp657_15 (select ARGNAME_padding_NAMEEND_VAL temp657_14)))
(assert (= temp657_16 #x0000000000000003))
(assert (= temp657_17 temp657_16))
(assert (= temp657_18 (select ARGNAME_padding_NAMEEND_VAL temp657_17)))
(assert (= temp657_19 #x0000000000000004))
(assert (= temp657_20 temp657_19))
(assert (= temp657_21 (select ARGNAME_padding_NAMEEND_VAL temp657_20)))
(assert (= temp657_22 #x0000000000000005))
(assert (= temp657_23 temp657_22))
(assert (= temp657_24 (select ARGNAME_padding_NAMEEND_VAL temp657_23)))
(assert (= temp657_25 #x0000000000000000))
(assert (= temp657_26 #x0000000000000000))
(assert (= temp657_27 temp657_26))
(assert (= temp657_28 (select ARGNAME_padding_NAMEEND_VAL temp657_27)))
(assert (= temp657_29 #x0000000000000000))
(assert (= temp657_30 #x0000000000000001))
(assert (= temp657_31 temp657_30))
(assert (= temp657_32 (select ARGNAME_padding_NAMEEND_VAL temp657_31)))
(assert (= temp657_33 #x0000000000000000))
(assert (= temp657_34 #x0000000000000002))
(assert (= temp657_35 temp657_34))
(assert (= temp657_36 (select ARGNAME_padding_NAMEEND_VAL temp657_35)))
(assert (= temp657_37 #x0000000000000000))
(assert (= temp657_38 #x0000000000000003))
(assert (= temp657_39 temp657_38))
(assert (= temp657_40 (select ARGNAME_padding_NAMEEND_VAL temp657_39)))
(assert (= temp657_41 #x0000000000000000))
(assert (= temp657_42 #x0000000000000004))
(assert (= temp657_43 temp657_42))
(assert (= temp657_44 (select ARGNAME_padding_NAMEEND_VAL temp657_43)))
(assert (= temp657_45 #x0000000000000000))
(assert (= temp657_46 #x0000000000000005))
(assert (= temp657_47 temp657_46))
(assert (= temp657_48 (select ARGNAME_padding_NAMEEND_VAL temp657_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp657_28 temp657_25)
             (bvslt temp657_32 temp657_29)
             (bvslt temp657_36 temp657_33)
             (bvslt temp657_40 temp657_37)
             (bvslt temp657_44 temp657_41)
             (bvslt temp657_48 temp657_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp657_49 #x0000000000000000))
(assert (= var1191714 temp657_49))
(assert (= temp657_50 #x0000000000000000))
(assert (= temp657_51 temp657_50))
(assert (= temp657_52 (select ARGNAME_output_padding_NAMEEND_VAL temp657_51)))
(assert (= temp657_53 #x0000000000000001))
(assert (= temp657_54 temp657_53))
(assert (= temp657_55 (select ARGNAME_output_padding_NAMEEND_VAL temp657_54)))
(assert (= temp657_56 #x0000000000000002))
(assert (= temp657_57 temp657_56))
(assert (= temp657_58 (select ARGNAME_output_padding_NAMEEND_VAL temp657_57)))
(assert (= temp657_59 #x0000000000000003))
(assert (= temp657_60 temp657_59))
(assert (= temp657_61 (select ARGNAME_output_padding_NAMEEND_VAL temp657_60)))
(assert (= temp657_62 #x0000000000000004))
(assert (= temp657_63 temp657_62))
(assert (= temp657_64 (select ARGNAME_output_padding_NAMEEND_VAL temp657_63)))
(assert (= temp657_65 #x0000000000000005))
(assert (= temp657_66 temp657_65))
(assert (= temp657_67 (select ARGNAME_output_padding_NAMEEND_VAL temp657_66)))
(assert (= temp657_68 #x0000000000000000))
(assert (= temp657_69 #x0000000000000000))
(assert (= temp657_70 temp657_69))
(assert (= temp657_71 (select ARGNAME_output_padding_NAMEEND_VAL temp657_70)))
(assert (= temp657_72 #x0000000000000000))
(assert (= temp657_73 #x0000000000000001))
(assert (= temp657_74 temp657_73))
(assert (= temp657_75 (select ARGNAME_output_padding_NAMEEND_VAL temp657_74)))
(assert (= temp657_76 #x0000000000000000))
(assert (= temp657_77 #x0000000000000002))
(assert (= temp657_78 temp657_77))
(assert (= temp657_79 (select ARGNAME_output_padding_NAMEEND_VAL temp657_78)))
(assert (= temp657_80 #x0000000000000000))
(assert (= temp657_81 #x0000000000000003))
(assert (= temp657_82 temp657_81))
(assert (= temp657_83 (select ARGNAME_output_padding_NAMEEND_VAL temp657_82)))
(assert (= temp657_84 #x0000000000000000))
(assert (= temp657_85 #x0000000000000004))
(assert (= temp657_86 temp657_85))
(assert (= temp657_87 (select ARGNAME_output_padding_NAMEEND_VAL temp657_86)))
(assert (= temp657_88 #x0000000000000000))
(assert (= temp657_89 #x0000000000000005))
(assert (= temp657_90 temp657_89))
(assert (= temp657_91 (select ARGNAME_output_padding_NAMEEND_VAL temp657_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp657_71 temp657_68)
             (bvslt temp657_75 temp657_72)
             (bvslt temp657_79 temp657_76)
             (bvslt temp657_83 temp657_80)
             (bvslt temp657_87 temp657_84)
             (bvslt temp657_91 temp657_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp657_92 #x0000000000000000))
(assert (= var1191725 temp657_92))
(assert (= temp657_93 #x0000000000000000))
(assert (= temp657_94 temp657_93))
(assert (= temp657_95 (select ARGNAME_stride_NAMEEND_VAL temp657_94)))
(assert (= temp657_96 #x0000000000000001))
(assert (= temp657_97 temp657_96))
(assert (= temp657_98 (select ARGNAME_stride_NAMEEND_VAL temp657_97)))
(assert (= temp657_99 #x0000000000000002))
(assert (= temp657_100 temp657_99))
(assert (= temp657_101 (select ARGNAME_stride_NAMEEND_VAL temp657_100)))
(assert (= temp657_102 #x0000000000000003))
(assert (= temp657_103 temp657_102))
(assert (= temp657_104 (select ARGNAME_stride_NAMEEND_VAL temp657_103)))
(assert (= temp657_105 #x0000000000000004))
(assert (= temp657_106 temp657_105))
(assert (= temp657_107 (select ARGNAME_stride_NAMEEND_VAL temp657_106)))
(assert (= temp657_108 #x0000000000000005))
(assert (= temp657_109 temp657_108))
(assert (= temp657_110 (select ARGNAME_stride_NAMEEND_VAL temp657_109)))
(assert (= temp657_111 #x0000000000000000))
(assert (= temp657_112 #x0000000000000000))
(assert (= temp657_113 temp657_112))
(assert (= temp657_114 (select ARGNAME_stride_NAMEEND_VAL temp657_113)))
(assert (= temp657_115 #x0000000000000000))
(assert (= temp657_116 #x0000000000000001))
(assert (= temp657_117 temp657_116))
(assert (= temp657_118 (select ARGNAME_stride_NAMEEND_VAL temp657_117)))
(assert (= temp657_119 #x0000000000000000))
(assert (= temp657_120 #x0000000000000002))
(assert (= temp657_121 temp657_120))
(assert (= temp657_122 (select ARGNAME_stride_NAMEEND_VAL temp657_121)))
(assert (= temp657_123 #x0000000000000000))
(assert (= temp657_124 #x0000000000000003))
(assert (= temp657_125 temp657_124))
(assert (= temp657_126 (select ARGNAME_stride_NAMEEND_VAL temp657_125)))
(assert (= temp657_127 #x0000000000000000))
(assert (= temp657_128 #x0000000000000004))
(assert (= temp657_129 temp657_128))
(assert (= temp657_130 (select ARGNAME_stride_NAMEEND_VAL temp657_129)))
(assert (= temp657_131 #x0000000000000000))
(assert (= temp657_132 #x0000000000000005))
(assert (= temp657_133 temp657_132))
(assert (= temp657_134 (select ARGNAME_stride_NAMEEND_VAL temp657_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp657_114 temp657_111)
             (bvsle temp657_118 temp657_115)
             (bvsle temp657_122 temp657_119)
             (bvsle temp657_126 temp657_123)
             (bvsle temp657_130 temp657_127)
             (bvsle temp657_134 temp657_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp657_135 #x0000000000000000))
(assert (= var1191735 temp657_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp657_136 #x0000000000000001))
(assert (= var1191747 temp657_136))
(assert (= temp657_137 #x0000000000000000))
(assert (= var1179826 temp657_137))
(assert (= temp657_138 #x0000000000000000))
(assert (= temp657_139 temp657_138))
(assert (= temp657_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp657_139)))
(assert (= temp657_141 #x0000000000000001))
(assert (= temp657_142 temp657_141))
(assert (= temp657_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp657_142)))
(assert (= temp657_144 #x0000000000000002))
(assert (= temp657_145 temp657_144))
(assert (= temp657_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp657_145)))
(assert (= temp657_147 #x0000000000000003))
(assert (= temp657_148 temp657_147))
(assert (= temp657_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp657_148)))
(assert (= temp657_150 #x0000000000000004))
(assert (= temp657_151 temp657_150))
(assert (= temp657_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp657_151)))
(assert (= temp657_153 #x0000000000000005))
(assert (= temp657_154 temp657_153))
(assert (= temp657_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp657_154)))
(assert (= temp657_157 var1179826))
(assert (= temp657_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp657_157)))
(assert (= temp657_156 temp657_158))
(assert (= var1191780
   (ite (bvslt temp657_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp657_159 #x0000000000000000))
(assert (= var1191780 temp657_159))
(assert (= temp657_160 #x0000000000000000))
(assert (= var1179826 temp657_160))
(assert (= temp657_162 var1179826))
(assert (= temp657_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp657_162)))
(assert (= temp657_161 temp657_163))
(assert (= var1191802 (bvsmod temp657_161 ARGNAME_groups_NAMEEND)))
(assert (= temp657_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp657_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp657_165 #x0000000000000001))
(assert (= var1191803 temp657_165))
(assert (= temp657_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp657_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp657_167 #x0000000000000001))
(assert (= var1191823 temp657_167))
(assert (= temp657_168 #x0000000000000001))
(assert (= var1180714 temp657_168))
(assert (= temp657_169 #x0000000000000000))
(assert (= temp657_170 temp657_169))
(assert (= temp657_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp657_170)))
(assert (= temp657_172 #x0000000000000001))
(assert (= temp657_173 temp657_172))
(assert (= temp657_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp657_173)))
(assert (= temp657_175 #x0000000000000002))
(assert (= temp657_176 temp657_175))
(assert (= temp657_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp657_176)))
(assert (= temp657_178 #x0000000000000003))
(assert (= temp657_179 temp657_178))
(assert (= temp657_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp657_179)))
(assert (= temp657_181 #x0000000000000004))
(assert (= temp657_182 temp657_181))
(assert (= temp657_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp657_182)))
(assert (= temp657_184 #x0000000000000005))
(assert (= temp657_185 temp657_184))
(assert (= temp657_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp657_185)))
(assert (= temp657_187 #x0000000000000000))
(assert (= temp657_188
   (ite (bvslt var1180714 temp657_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp657_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp657_188)))
(assert (= var1191831 temp657_189))
(assert (bvslt (ite (bvslt var1180714 temp657_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp657_190 #x0000000000000001))
(assert (= var1180714 temp657_190))
(assert (= temp657_192 var1180714))
(assert (= temp657_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp657_192)))
(assert (= temp657_191 temp657_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp657_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp657_194 #x0000000000000001))
(assert (= var1191836 temp657_194))
(assert (= temp657_195 #x0000000000000000))
(assert (= var1179826 temp657_195))
(assert (= temp657_197 var1179826))
(assert (= temp657_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp657_197)))
(assert (= temp657_196 temp657_198))
(assert (= temp657_199 #x0000000000000002))
(assert (= var1586025 temp657_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp657_200 #x0000000000000001))
(assert (= var1191993 temp657_200))
(assert (= temp657_201 #x0000000000000001))
(assert (= var2700303 temp657_201))
(assert (= temp657_202 #x0000000000000001))
(assert (= var2962447 temp657_202))
(assert (= temp657_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp657_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp657_204 #x0000000000000001))
(assert (= var211058 temp657_204))
(assert (= temp657_205 #x0000000000000001))
(assert (= var211188 temp657_205))
(assert (= var3879401 var211188))
(assert (= temp657_206 #x0000000000000000))
(assert (= var3866802 temp657_206))
(assert (= temp657_207 #x0000000000000000))
(assert (= temp657_208
   (ite (bvslt var3866802 temp657_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp657_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp657_208)))
(assert (= var3879420 temp657_209))
(assert (bvslt (ite (bvslt var3866802 temp657_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp657_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp657_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp657_211 #x0000000000000001))
(assert (= var3879421 temp657_211))
(assert (= temp657_212 #x0000000000000000))
(assert (= var4079423 temp657_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp657_213 #x0000000000000002))
(assert (= var4208259 temp657_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp657_214 #x0000000000000000))
(assert (= var4273820 temp657_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4796816 var211201))
(assert (= var211494 var210913))
(assert (= temp657_215 #x0000000000000000))
(assert (= var211495
   (ite (distinct var211494 temp657_215) #x0000000000000001 #x0000000000000000)))
(assert (= temp657_216 #x0000000000000001))
(assert (= var211058 temp657_216))
(model-add temp657_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp657_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp657_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp657_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




