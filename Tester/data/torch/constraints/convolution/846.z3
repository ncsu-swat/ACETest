(declare-fun temp1128_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp1128_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1128_3 () (_ BitVec 64))
(declare-fun temp1128_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1128_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp1128_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1128_7 () (_ BitVec 64))
(declare-fun temp1128_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1128_9 () (_ BitVec 64))
(declare-fun temp1128_10 () (_ BitVec 64))
(declare-fun temp1128_11 () (_ BitVec 64))
(declare-fun temp1128_12 () (_ BitVec 64))
(declare-fun temp1128_13 () (_ BitVec 64))
(declare-fun temp1128_14 () (_ BitVec 64))
(declare-fun temp1128_15 () (_ BitVec 64))
(declare-fun temp1128_16 () (_ BitVec 64))
(declare-fun temp1128_17 () (_ BitVec 64))
(declare-fun temp1128_18 () (_ BitVec 64))
(declare-fun temp1128_19 () (_ BitVec 64))
(declare-fun temp1128_20 () (_ BitVec 64))
(declare-fun temp1128_21 () (_ BitVec 64))
(declare-fun temp1128_22 () (_ BitVec 64))
(declare-fun temp1128_23 () (_ BitVec 64))
(declare-fun temp1128_24 () (_ BitVec 64))
(declare-fun temp1128_25 () (_ BitVec 64))
(declare-fun temp1128_26 () (_ BitVec 64))
(declare-fun temp1128_27 () (_ BitVec 64))
(declare-fun temp1128_28 () (_ BitVec 64))
(declare-fun temp1128_29 () (_ BitVec 64))
(declare-fun temp1128_30 () (_ BitVec 64))
(declare-fun temp1128_31 () (_ BitVec 64))
(declare-fun temp1128_32 () (_ BitVec 64))
(declare-fun temp1128_33 () (_ BitVec 64))
(declare-fun temp1128_34 () (_ BitVec 64))
(declare-fun temp1128_35 () (_ BitVec 64))
(declare-fun temp1128_36 () (_ BitVec 64))
(declare-fun temp1128_37 () (_ BitVec 64))
(declare-fun temp1128_38 () (_ BitVec 64))
(declare-fun temp1128_39 () (_ BitVec 64))
(declare-fun temp1128_40 () (_ BitVec 64))
(declare-fun temp1128_41 () (_ BitVec 64))
(declare-fun temp1128_42 () (_ BitVec 64))
(declare-fun temp1128_43 () (_ BitVec 64))
(declare-fun temp1128_44 () (_ BitVec 64))
(declare-fun temp1128_45 () (_ BitVec 64))
(declare-fun temp1128_46 () (_ BitVec 64))
(declare-fun temp1128_47 () (_ BitVec 64))
(declare-fun temp1128_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp1128_49 () (_ BitVec 64))
(declare-fun temp1128_50 () (_ BitVec 64))
(declare-fun temp1128_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1128_52 () (_ BitVec 64))
(declare-fun temp1128_53 () (_ BitVec 64))
(declare-fun temp1128_54 () (_ BitVec 64))
(declare-fun temp1128_55 () (_ BitVec 64))
(declare-fun temp1128_56 () (_ BitVec 64))
(declare-fun temp1128_57 () (_ BitVec 64))
(declare-fun temp1128_58 () (_ BitVec 64))
(declare-fun temp1128_59 () (_ BitVec 64))
(declare-fun temp1128_60 () (_ BitVec 64))
(declare-fun temp1128_61 () (_ BitVec 64))
(declare-fun temp1128_62 () (_ BitVec 64))
(declare-fun temp1128_63 () (_ BitVec 64))
(declare-fun temp1128_64 () (_ BitVec 64))
(declare-fun temp1128_65 () (_ BitVec 64))
(declare-fun temp1128_66 () (_ BitVec 64))
(declare-fun temp1128_67 () (_ BitVec 64))
(declare-fun temp1128_68 () (_ BitVec 64))
(declare-fun temp1128_69 () (_ BitVec 64))
(declare-fun temp1128_70 () (_ BitVec 64))
(declare-fun temp1128_71 () (_ BitVec 64))
(declare-fun temp1128_72 () (_ BitVec 64))
(declare-fun temp1128_73 () (_ BitVec 64))
(declare-fun temp1128_74 () (_ BitVec 64))
(declare-fun temp1128_75 () (_ BitVec 64))
(declare-fun temp1128_76 () (_ BitVec 64))
(declare-fun temp1128_77 () (_ BitVec 64))
(declare-fun temp1128_78 () (_ BitVec 64))
(declare-fun temp1128_79 () (_ BitVec 64))
(declare-fun temp1128_80 () (_ BitVec 64))
(declare-fun temp1128_81 () (_ BitVec 64))
(declare-fun temp1128_82 () (_ BitVec 64))
(declare-fun temp1128_83 () (_ BitVec 64))
(declare-fun temp1128_84 () (_ BitVec 64))
(declare-fun temp1128_85 () (_ BitVec 64))
(declare-fun temp1128_86 () (_ BitVec 64))
(declare-fun temp1128_87 () (_ BitVec 64))
(declare-fun temp1128_88 () (_ BitVec 64))
(declare-fun temp1128_89 () (_ BitVec 64))
(declare-fun temp1128_90 () (_ BitVec 64))
(declare-fun temp1128_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp1128_92 () (_ BitVec 64))
(declare-fun temp1128_93 () (_ BitVec 64))
(declare-fun temp1128_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1128_95 () (_ BitVec 64))
(declare-fun temp1128_96 () (_ BitVec 64))
(declare-fun temp1128_97 () (_ BitVec 64))
(declare-fun temp1128_98 () (_ BitVec 64))
(declare-fun temp1128_99 () (_ BitVec 64))
(declare-fun temp1128_100 () (_ BitVec 64))
(declare-fun temp1128_101 () (_ BitVec 64))
(declare-fun temp1128_102 () (_ BitVec 64))
(declare-fun temp1128_103 () (_ BitVec 64))
(declare-fun temp1128_104 () (_ BitVec 64))
(declare-fun temp1128_105 () (_ BitVec 64))
(declare-fun temp1128_106 () (_ BitVec 64))
(declare-fun temp1128_107 () (_ BitVec 64))
(declare-fun temp1128_108 () (_ BitVec 64))
(declare-fun temp1128_109 () (_ BitVec 64))
(declare-fun temp1128_110 () (_ BitVec 64))
(declare-fun temp1128_111 () (_ BitVec 64))
(declare-fun temp1128_112 () (_ BitVec 64))
(declare-fun temp1128_113 () (_ BitVec 64))
(declare-fun temp1128_114 () (_ BitVec 64))
(declare-fun temp1128_115 () (_ BitVec 64))
(declare-fun temp1128_116 () (_ BitVec 64))
(declare-fun temp1128_117 () (_ BitVec 64))
(declare-fun temp1128_118 () (_ BitVec 64))
(declare-fun temp1128_119 () (_ BitVec 64))
(declare-fun temp1128_120 () (_ BitVec 64))
(declare-fun temp1128_121 () (_ BitVec 64))
(declare-fun temp1128_122 () (_ BitVec 64))
(declare-fun temp1128_123 () (_ BitVec 64))
(declare-fun temp1128_124 () (_ BitVec 64))
(declare-fun temp1128_125 () (_ BitVec 64))
(declare-fun temp1128_126 () (_ BitVec 64))
(declare-fun temp1128_127 () (_ BitVec 64))
(declare-fun temp1128_128 () (_ BitVec 64))
(declare-fun temp1128_129 () (_ BitVec 64))
(declare-fun temp1128_130 () (_ BitVec 64))
(declare-fun temp1128_131 () (_ BitVec 64))
(declare-fun temp1128_132 () (_ BitVec 64))
(declare-fun temp1128_133 () (_ BitVec 64))
(declare-fun temp1128_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp1128_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp1128_136 () (_ BitVec 64))
(declare-fun temp1128_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp1128_138 () (_ BitVec 64))
(declare-fun temp1128_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1128_140 () (_ BitVec 64))
(declare-fun temp1128_141 () (_ BitVec 64))
(declare-fun temp1128_142 () (_ BitVec 64))
(declare-fun temp1128_143 () (_ BitVec 64))
(declare-fun temp1128_144 () (_ BitVec 64))
(declare-fun temp1128_145 () (_ BitVec 64))
(declare-fun temp1128_146 () (_ BitVec 64))
(declare-fun temp1128_147 () (_ BitVec 64))
(declare-fun temp1128_148 () (_ BitVec 64))
(declare-fun temp1128_149 () (_ BitVec 64))
(declare-fun temp1128_150 () (_ BitVec 64))
(declare-fun temp1128_151 () (_ BitVec 64))
(declare-fun temp1128_152 () (_ BitVec 64))
(declare-fun temp1128_153 () (_ BitVec 64))
(declare-fun temp1128_154 () (_ BitVec 64))
(declare-fun temp1128_155 () (_ BitVec 64))
(declare-fun temp1128_157 () (_ BitVec 64))
(declare-fun temp1128_158 () (_ BitVec 64))
(declare-fun temp1128_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp1128_159 () (_ BitVec 64))
(declare-fun temp1128_160 () (_ BitVec 64))
(declare-fun temp1128_162 () (_ BitVec 64))
(declare-fun temp1128_163 () (_ BitVec 64))
(declare-fun temp1128_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp1128_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp1128_165 () (_ BitVec 64))
(declare-fun temp1128_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp1128_167 () (_ BitVec 64))
(declare-fun temp1128_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp1128_169 () (_ BitVec 64))
(declare-fun temp1128_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1128_171 () (_ BitVec 64))
(declare-fun temp1128_172 () (_ BitVec 64))
(declare-fun temp1128_173 () (_ BitVec 64))
(declare-fun temp1128_174 () (_ BitVec 64))
(declare-fun temp1128_175 () (_ BitVec 64))
(declare-fun temp1128_176 () (_ BitVec 64))
(declare-fun temp1128_177 () (_ BitVec 64))
(declare-fun temp1128_178 () (_ BitVec 64))
(declare-fun temp1128_179 () (_ BitVec 64))
(declare-fun temp1128_180 () (_ BitVec 64))
(declare-fun temp1128_181 () (_ BitVec 64))
(declare-fun temp1128_182 () (_ BitVec 64))
(declare-fun temp1128_183 () (_ BitVec 64))
(declare-fun temp1128_184 () (_ BitVec 64))
(declare-fun temp1128_185 () (_ BitVec 64))
(declare-fun temp1128_186 () (_ BitVec 64))
(declare-fun temp1128_187 () (_ BitVec 64))
(declare-fun temp1128_188 () (_ BitVec 64))
(declare-fun temp1128_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp1128_190 () (_ BitVec 64))
(declare-fun temp1128_192 () (_ BitVec 64))
(declare-fun temp1128_193 () (_ BitVec 64))
(declare-fun temp1128_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp1128_194 () (_ BitVec 64))
(declare-fun temp1128_195 () (_ BitVec 64))
(declare-fun temp1128_197 () (_ BitVec 64))
(declare-fun temp1128_198 () (_ BitVec 64))
(declare-fun temp1128_196 () (_ BitVec 64))
(declare-fun temp1128_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp1128_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp1128_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp1128_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp1128_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp1128_204 () (_ BitVec 64))
(declare-fun temp1128_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp1128_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp1128_207 () (_ BitVec 64))
(declare-fun temp1128_208 () (_ BitVec 64))
(declare-fun temp1128_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp1128_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp1128_211 () (_ BitVec 64))
(declare-fun temp1128_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp1128_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp1128_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4469136 () (_ BitVec 64))
(declare-fun var4731280 () (_ BitVec 64))
(declare-fun temp1128_215 () (_ BitVec 64))
(declare-fun var212414 () (_ BitVec 64))
(declare-fun temp1128_216 () (_ BitVec 64))
(declare-fun temp1128_217 () (_ BitVec 64))
(declare-fun var5060227 () (_ BitVec 64))
(declare-fun var5125772 () (_ BitVec 64))
(declare-fun temp1128_218 () (_ BitVec 64))
(assert (= temp1128_1 #x0000000000000001))
(assert (= var77203 temp1128_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp1128_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp1128_2)))
(assert (= temp1128_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1128_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1128_4 #x0000000000000000))
(assert (= var210941 temp1128_4))
(assert (= temp1128_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp1128_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1128_6 #x0000000000000000))
(assert (= var210986 temp1128_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp1128_7 #x0000000000000000))
(assert (= temp1128_8 temp1128_7))
(assert (= temp1128_9 (select ARGNAME_padding_NAMEEND_VAL temp1128_8)))
(assert (= temp1128_10 #x0000000000000001))
(assert (= temp1128_11 temp1128_10))
(assert (= temp1128_12 (select ARGNAME_padding_NAMEEND_VAL temp1128_11)))
(assert (= temp1128_13 #x0000000000000002))
(assert (= temp1128_14 temp1128_13))
(assert (= temp1128_15 (select ARGNAME_padding_NAMEEND_VAL temp1128_14)))
(assert (= temp1128_16 #x0000000000000003))
(assert (= temp1128_17 temp1128_16))
(assert (= temp1128_18 (select ARGNAME_padding_NAMEEND_VAL temp1128_17)))
(assert (= temp1128_19 #x0000000000000004))
(assert (= temp1128_20 temp1128_19))
(assert (= temp1128_21 (select ARGNAME_padding_NAMEEND_VAL temp1128_20)))
(assert (= temp1128_22 #x0000000000000005))
(assert (= temp1128_23 temp1128_22))
(assert (= temp1128_24 (select ARGNAME_padding_NAMEEND_VAL temp1128_23)))
(assert (= temp1128_25 #x0000000000000000))
(assert (= temp1128_26 #x0000000000000000))
(assert (= temp1128_27 temp1128_26))
(assert (= temp1128_28 (select ARGNAME_padding_NAMEEND_VAL temp1128_27)))
(assert (= temp1128_29 #x0000000000000000))
(assert (= temp1128_30 #x0000000000000001))
(assert (= temp1128_31 temp1128_30))
(assert (= temp1128_32 (select ARGNAME_padding_NAMEEND_VAL temp1128_31)))
(assert (= temp1128_33 #x0000000000000000))
(assert (= temp1128_34 #x0000000000000002))
(assert (= temp1128_35 temp1128_34))
(assert (= temp1128_36 (select ARGNAME_padding_NAMEEND_VAL temp1128_35)))
(assert (= temp1128_37 #x0000000000000000))
(assert (= temp1128_38 #x0000000000000003))
(assert (= temp1128_39 temp1128_38))
(assert (= temp1128_40 (select ARGNAME_padding_NAMEEND_VAL temp1128_39)))
(assert (= temp1128_41 #x0000000000000000))
(assert (= temp1128_42 #x0000000000000004))
(assert (= temp1128_43 temp1128_42))
(assert (= temp1128_44 (select ARGNAME_padding_NAMEEND_VAL temp1128_43)))
(assert (= temp1128_45 #x0000000000000000))
(assert (= temp1128_46 #x0000000000000005))
(assert (= temp1128_47 temp1128_46))
(assert (= temp1128_48 (select ARGNAME_padding_NAMEEND_VAL temp1128_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp1128_28 temp1128_25)
             (bvslt temp1128_32 temp1128_29)
             (bvslt temp1128_36 temp1128_33)
             (bvslt temp1128_40 temp1128_37)
             (bvslt temp1128_44 temp1128_41)
             (bvslt temp1128_48 temp1128_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1128_49 #x0000000000000000))
(assert (= var1191714 temp1128_49))
(assert (= temp1128_50 #x0000000000000000))
(assert (= temp1128_51 temp1128_50))
(assert (= temp1128_52 (select ARGNAME_output_padding_NAMEEND_VAL temp1128_51)))
(assert (= temp1128_53 #x0000000000000001))
(assert (= temp1128_54 temp1128_53))
(assert (= temp1128_55 (select ARGNAME_output_padding_NAMEEND_VAL temp1128_54)))
(assert (= temp1128_56 #x0000000000000002))
(assert (= temp1128_57 temp1128_56))
(assert (= temp1128_58 (select ARGNAME_output_padding_NAMEEND_VAL temp1128_57)))
(assert (= temp1128_59 #x0000000000000003))
(assert (= temp1128_60 temp1128_59))
(assert (= temp1128_61 (select ARGNAME_output_padding_NAMEEND_VAL temp1128_60)))
(assert (= temp1128_62 #x0000000000000004))
(assert (= temp1128_63 temp1128_62))
(assert (= temp1128_64 (select ARGNAME_output_padding_NAMEEND_VAL temp1128_63)))
(assert (= temp1128_65 #x0000000000000005))
(assert (= temp1128_66 temp1128_65))
(assert (= temp1128_67 (select ARGNAME_output_padding_NAMEEND_VAL temp1128_66)))
(assert (= temp1128_68 #x0000000000000000))
(assert (= temp1128_69 #x0000000000000000))
(assert (= temp1128_70 temp1128_69))
(assert (= temp1128_71 (select ARGNAME_output_padding_NAMEEND_VAL temp1128_70)))
(assert (= temp1128_72 #x0000000000000000))
(assert (= temp1128_73 #x0000000000000001))
(assert (= temp1128_74 temp1128_73))
(assert (= temp1128_75 (select ARGNAME_output_padding_NAMEEND_VAL temp1128_74)))
(assert (= temp1128_76 #x0000000000000000))
(assert (= temp1128_77 #x0000000000000002))
(assert (= temp1128_78 temp1128_77))
(assert (= temp1128_79 (select ARGNAME_output_padding_NAMEEND_VAL temp1128_78)))
(assert (= temp1128_80 #x0000000000000000))
(assert (= temp1128_81 #x0000000000000003))
(assert (= temp1128_82 temp1128_81))
(assert (= temp1128_83 (select ARGNAME_output_padding_NAMEEND_VAL temp1128_82)))
(assert (= temp1128_84 #x0000000000000000))
(assert (= temp1128_85 #x0000000000000004))
(assert (= temp1128_86 temp1128_85))
(assert (= temp1128_87 (select ARGNAME_output_padding_NAMEEND_VAL temp1128_86)))
(assert (= temp1128_88 #x0000000000000000))
(assert (= temp1128_89 #x0000000000000005))
(assert (= temp1128_90 temp1128_89))
(assert (= temp1128_91 (select ARGNAME_output_padding_NAMEEND_VAL temp1128_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp1128_71 temp1128_68)
             (bvslt temp1128_75 temp1128_72)
             (bvslt temp1128_79 temp1128_76)
             (bvslt temp1128_83 temp1128_80)
             (bvslt temp1128_87 temp1128_84)
             (bvslt temp1128_91 temp1128_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1128_92 #x0000000000000000))
(assert (= var1191725 temp1128_92))
(assert (= temp1128_93 #x0000000000000000))
(assert (= temp1128_94 temp1128_93))
(assert (= temp1128_95 (select ARGNAME_stride_NAMEEND_VAL temp1128_94)))
(assert (= temp1128_96 #x0000000000000001))
(assert (= temp1128_97 temp1128_96))
(assert (= temp1128_98 (select ARGNAME_stride_NAMEEND_VAL temp1128_97)))
(assert (= temp1128_99 #x0000000000000002))
(assert (= temp1128_100 temp1128_99))
(assert (= temp1128_101 (select ARGNAME_stride_NAMEEND_VAL temp1128_100)))
(assert (= temp1128_102 #x0000000000000003))
(assert (= temp1128_103 temp1128_102))
(assert (= temp1128_104 (select ARGNAME_stride_NAMEEND_VAL temp1128_103)))
(assert (= temp1128_105 #x0000000000000004))
(assert (= temp1128_106 temp1128_105))
(assert (= temp1128_107 (select ARGNAME_stride_NAMEEND_VAL temp1128_106)))
(assert (= temp1128_108 #x0000000000000005))
(assert (= temp1128_109 temp1128_108))
(assert (= temp1128_110 (select ARGNAME_stride_NAMEEND_VAL temp1128_109)))
(assert (= temp1128_111 #x0000000000000000))
(assert (= temp1128_112 #x0000000000000000))
(assert (= temp1128_113 temp1128_112))
(assert (= temp1128_114 (select ARGNAME_stride_NAMEEND_VAL temp1128_113)))
(assert (= temp1128_115 #x0000000000000000))
(assert (= temp1128_116 #x0000000000000001))
(assert (= temp1128_117 temp1128_116))
(assert (= temp1128_118 (select ARGNAME_stride_NAMEEND_VAL temp1128_117)))
(assert (= temp1128_119 #x0000000000000000))
(assert (= temp1128_120 #x0000000000000002))
(assert (= temp1128_121 temp1128_120))
(assert (= temp1128_122 (select ARGNAME_stride_NAMEEND_VAL temp1128_121)))
(assert (= temp1128_123 #x0000000000000000))
(assert (= temp1128_124 #x0000000000000003))
(assert (= temp1128_125 temp1128_124))
(assert (= temp1128_126 (select ARGNAME_stride_NAMEEND_VAL temp1128_125)))
(assert (= temp1128_127 #x0000000000000000))
(assert (= temp1128_128 #x0000000000000004))
(assert (= temp1128_129 temp1128_128))
(assert (= temp1128_130 (select ARGNAME_stride_NAMEEND_VAL temp1128_129)))
(assert (= temp1128_131 #x0000000000000000))
(assert (= temp1128_132 #x0000000000000005))
(assert (= temp1128_133 temp1128_132))
(assert (= temp1128_134 (select ARGNAME_stride_NAMEEND_VAL temp1128_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp1128_114 temp1128_111)
             (bvsle temp1128_118 temp1128_115)
             (bvsle temp1128_122 temp1128_119)
             (bvsle temp1128_126 temp1128_123)
             (bvsle temp1128_130 temp1128_127)
             (bvsle temp1128_134 temp1128_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1128_135 #x0000000000000000))
(assert (= var1191735 temp1128_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1128_136 #x0000000000000001))
(assert (= var1191747 temp1128_136))
(assert (= temp1128_137 #x0000000000000000))
(assert (= var1179826 temp1128_137))
(assert (= temp1128_138 #x0000000000000000))
(assert (= temp1128_139 temp1128_138))
(assert (= temp1128_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1128_139)))
(assert (= temp1128_141 #x0000000000000001))
(assert (= temp1128_142 temp1128_141))
(assert (= temp1128_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1128_142)))
(assert (= temp1128_144 #x0000000000000002))
(assert (= temp1128_145 temp1128_144))
(assert (= temp1128_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1128_145)))
(assert (= temp1128_147 #x0000000000000003))
(assert (= temp1128_148 temp1128_147))
(assert (= temp1128_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1128_148)))
(assert (= temp1128_150 #x0000000000000004))
(assert (= temp1128_151 temp1128_150))
(assert (= temp1128_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1128_151)))
(assert (= temp1128_153 #x0000000000000005))
(assert (= temp1128_154 temp1128_153))
(assert (= temp1128_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1128_154)))
(assert (= temp1128_157 var1179826))
(assert (= temp1128_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1128_157)))
(assert (= temp1128_156 temp1128_158))
(assert (= var1191780
   (ite (bvslt temp1128_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1128_159 #x0000000000000000))
(assert (= var1191780 temp1128_159))
(assert (= temp1128_160 #x0000000000000000))
(assert (= var1179826 temp1128_160))
(assert (= temp1128_162 var1179826))
(assert (= temp1128_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1128_162)))
(assert (= temp1128_161 temp1128_163))
(assert (= var1191802 (bvsmod temp1128_161 ARGNAME_groups_NAMEEND)))
(assert (= temp1128_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp1128_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp1128_165 #x0000000000000001))
(assert (= var1191803 temp1128_165))
(assert (= temp1128_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp1128_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1128_167 #x0000000000000001))
(assert (= var1191823 temp1128_167))
(assert (= temp1128_168 #x0000000000000001))
(assert (= var1180714 temp1128_168))
(assert (= temp1128_169 #x0000000000000000))
(assert (= temp1128_170 temp1128_169))
(assert (= temp1128_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp1128_170)))
(assert (= temp1128_172 #x0000000000000001))
(assert (= temp1128_173 temp1128_172))
(assert (= temp1128_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp1128_173)))
(assert (= temp1128_175 #x0000000000000002))
(assert (= temp1128_176 temp1128_175))
(assert (= temp1128_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp1128_176)))
(assert (= temp1128_178 #x0000000000000003))
(assert (= temp1128_179 temp1128_178))
(assert (= temp1128_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp1128_179)))
(assert (= temp1128_181 #x0000000000000004))
(assert (= temp1128_182 temp1128_181))
(assert (= temp1128_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp1128_182)))
(assert (= temp1128_184 #x0000000000000005))
(assert (= temp1128_185 temp1128_184))
(assert (= temp1128_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp1128_185)))
(assert (= temp1128_187 #x0000000000000000))
(assert (= temp1128_188
   (ite (bvslt var1180714 temp1128_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp1128_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp1128_188)))
(assert (= var1191831 temp1128_189))
(assert (bvslt (ite (bvslt var1180714 temp1128_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1128_190 #x0000000000000001))
(assert (= var1180714 temp1128_190))
(assert (= temp1128_192 var1180714))
(assert (= temp1128_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1128_192)))
(assert (= temp1128_191 temp1128_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp1128_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp1128_194 #x0000000000000001))
(assert (= var1191836 temp1128_194))
(assert (= temp1128_195 #x0000000000000000))
(assert (= var1179826 temp1128_195))
(assert (= temp1128_197 var1179826))
(assert (= temp1128_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1128_197)))
(assert (= temp1128_196 temp1128_198))
(assert (= temp1128_199 #x0000000000000002))
(assert (= var1586025 temp1128_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp1128_200 #x0000000000000001))
(assert (= var1191993 temp1128_200))
(assert (= temp1128_201 #x0000000000000001))
(assert (= var2700303 temp1128_201))
(assert (= temp1128_202 #x0000000000000001))
(assert (= var2962447 temp1128_202))
(assert (= temp1128_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1128_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1128_204 #x0000000000000001))
(assert (= var211058 temp1128_204))
(assert (= temp1128_205 #x0000000000000001))
(assert (= var211188 temp1128_205))
(assert (= var3879401 var211188))
(assert (= temp1128_206 #x0000000000000000))
(assert (= var3866802 temp1128_206))
(assert (= temp1128_207 #x0000000000000000))
(assert (= temp1128_208
   (ite (bvslt var3866802 temp1128_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp1128_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp1128_208)))
(assert (= var3879420 temp1128_209))
(assert (bvslt (ite (bvslt var3866802 temp1128_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1128_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp1128_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp1128_211 #x0000000000000001))
(assert (= var3879421 temp1128_211))
(assert (= temp1128_212 #x0000000000000000))
(assert (= var4079423 temp1128_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp1128_213 #x0000000000000002))
(assert (= var4208259 temp1128_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1128_214 #x0000000000000000))
(assert (= var4273820 temp1128_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4469136 var211201))
(assert (= var4731280 var211201))
(assert (= temp1128_215 #x0000000000000001))
(assert (= var212414
   (ite (= ARGNAME_groups_NAMEEND temp1128_215)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1128_216 #x0000000000000000))
(assert (= var212414 temp1128_216))
(assert (= temp1128_217 #x0000000000000002))
(assert (= var5060227 temp1128_217))
(assert (= var5125772 var5060227))
(assert (= temp1128_218 #x0000000000000001))
(assert (= var211058 temp1128_218))
(model-add temp1128_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp1128_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1128_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp1128_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





