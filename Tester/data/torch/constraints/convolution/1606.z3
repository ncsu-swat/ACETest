(declare-fun temp10936_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10936_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10936_3 () (_ BitVec 64))
(declare-fun temp10936_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10936_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10936_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10936_7 () (_ BitVec 64))
(declare-fun temp10936_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10936_9 () (_ BitVec 64))
(declare-fun temp10936_10 () (_ BitVec 64))
(declare-fun temp10936_11 () (_ BitVec 64))
(declare-fun temp10936_12 () (_ BitVec 64))
(declare-fun temp10936_13 () (_ BitVec 64))
(declare-fun temp10936_14 () (_ BitVec 64))
(declare-fun temp10936_15 () (_ BitVec 64))
(declare-fun temp10936_16 () (_ BitVec 64))
(declare-fun temp10936_17 () (_ BitVec 64))
(declare-fun temp10936_18 () (_ BitVec 64))
(declare-fun temp10936_19 () (_ BitVec 64))
(declare-fun temp10936_20 () (_ BitVec 64))
(declare-fun temp10936_21 () (_ BitVec 64))
(declare-fun temp10936_22 () (_ BitVec 64))
(declare-fun temp10936_23 () (_ BitVec 64))
(declare-fun temp10936_24 () (_ BitVec 64))
(declare-fun temp10936_25 () (_ BitVec 64))
(declare-fun temp10936_26 () (_ BitVec 64))
(declare-fun temp10936_27 () (_ BitVec 64))
(declare-fun temp10936_28 () (_ BitVec 64))
(declare-fun temp10936_29 () (_ BitVec 64))
(declare-fun temp10936_30 () (_ BitVec 64))
(declare-fun temp10936_31 () (_ BitVec 64))
(declare-fun temp10936_32 () (_ BitVec 64))
(declare-fun temp10936_33 () (_ BitVec 64))
(declare-fun temp10936_34 () (_ BitVec 64))
(declare-fun temp10936_35 () (_ BitVec 64))
(declare-fun temp10936_36 () (_ BitVec 64))
(declare-fun temp10936_37 () (_ BitVec 64))
(declare-fun temp10936_38 () (_ BitVec 64))
(declare-fun temp10936_39 () (_ BitVec 64))
(declare-fun temp10936_40 () (_ BitVec 64))
(declare-fun temp10936_41 () (_ BitVec 64))
(declare-fun temp10936_42 () (_ BitVec 64))
(declare-fun temp10936_43 () (_ BitVec 64))
(declare-fun temp10936_44 () (_ BitVec 64))
(declare-fun temp10936_45 () (_ BitVec 64))
(declare-fun temp10936_46 () (_ BitVec 64))
(declare-fun temp10936_47 () (_ BitVec 64))
(declare-fun temp10936_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10936_49 () (_ BitVec 64))
(declare-fun temp10936_50 () (_ BitVec 64))
(declare-fun temp10936_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10936_52 () (_ BitVec 64))
(declare-fun temp10936_53 () (_ BitVec 64))
(declare-fun temp10936_54 () (_ BitVec 64))
(declare-fun temp10936_55 () (_ BitVec 64))
(declare-fun temp10936_56 () (_ BitVec 64))
(declare-fun temp10936_57 () (_ BitVec 64))
(declare-fun temp10936_58 () (_ BitVec 64))
(declare-fun temp10936_59 () (_ BitVec 64))
(declare-fun temp10936_60 () (_ BitVec 64))
(declare-fun temp10936_61 () (_ BitVec 64))
(declare-fun temp10936_62 () (_ BitVec 64))
(declare-fun temp10936_63 () (_ BitVec 64))
(declare-fun temp10936_64 () (_ BitVec 64))
(declare-fun temp10936_65 () (_ BitVec 64))
(declare-fun temp10936_66 () (_ BitVec 64))
(declare-fun temp10936_67 () (_ BitVec 64))
(declare-fun temp10936_68 () (_ BitVec 64))
(declare-fun temp10936_69 () (_ BitVec 64))
(declare-fun temp10936_70 () (_ BitVec 64))
(declare-fun temp10936_71 () (_ BitVec 64))
(declare-fun temp10936_72 () (_ BitVec 64))
(declare-fun temp10936_73 () (_ BitVec 64))
(declare-fun temp10936_74 () (_ BitVec 64))
(declare-fun temp10936_75 () (_ BitVec 64))
(declare-fun temp10936_76 () (_ BitVec 64))
(declare-fun temp10936_77 () (_ BitVec 64))
(declare-fun temp10936_78 () (_ BitVec 64))
(declare-fun temp10936_79 () (_ BitVec 64))
(declare-fun temp10936_80 () (_ BitVec 64))
(declare-fun temp10936_81 () (_ BitVec 64))
(declare-fun temp10936_82 () (_ BitVec 64))
(declare-fun temp10936_83 () (_ BitVec 64))
(declare-fun temp10936_84 () (_ BitVec 64))
(declare-fun temp10936_85 () (_ BitVec 64))
(declare-fun temp10936_86 () (_ BitVec 64))
(declare-fun temp10936_87 () (_ BitVec 64))
(declare-fun temp10936_88 () (_ BitVec 64))
(declare-fun temp10936_89 () (_ BitVec 64))
(declare-fun temp10936_90 () (_ BitVec 64))
(declare-fun temp10936_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10936_92 () (_ BitVec 64))
(declare-fun temp10936_93 () (_ BitVec 64))
(declare-fun temp10936_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10936_95 () (_ BitVec 64))
(declare-fun temp10936_96 () (_ BitVec 64))
(declare-fun temp10936_97 () (_ BitVec 64))
(declare-fun temp10936_98 () (_ BitVec 64))
(declare-fun temp10936_99 () (_ BitVec 64))
(declare-fun temp10936_100 () (_ BitVec 64))
(declare-fun temp10936_101 () (_ BitVec 64))
(declare-fun temp10936_102 () (_ BitVec 64))
(declare-fun temp10936_103 () (_ BitVec 64))
(declare-fun temp10936_104 () (_ BitVec 64))
(declare-fun temp10936_105 () (_ BitVec 64))
(declare-fun temp10936_106 () (_ BitVec 64))
(declare-fun temp10936_107 () (_ BitVec 64))
(declare-fun temp10936_108 () (_ BitVec 64))
(declare-fun temp10936_109 () (_ BitVec 64))
(declare-fun temp10936_110 () (_ BitVec 64))
(declare-fun temp10936_111 () (_ BitVec 64))
(declare-fun temp10936_112 () (_ BitVec 64))
(declare-fun temp10936_113 () (_ BitVec 64))
(declare-fun temp10936_114 () (_ BitVec 64))
(declare-fun temp10936_115 () (_ BitVec 64))
(declare-fun temp10936_116 () (_ BitVec 64))
(declare-fun temp10936_117 () (_ BitVec 64))
(declare-fun temp10936_118 () (_ BitVec 64))
(declare-fun temp10936_119 () (_ BitVec 64))
(declare-fun temp10936_120 () (_ BitVec 64))
(declare-fun temp10936_121 () (_ BitVec 64))
(declare-fun temp10936_122 () (_ BitVec 64))
(declare-fun temp10936_123 () (_ BitVec 64))
(declare-fun temp10936_124 () (_ BitVec 64))
(declare-fun temp10936_125 () (_ BitVec 64))
(declare-fun temp10936_126 () (_ BitVec 64))
(declare-fun temp10936_127 () (_ BitVec 64))
(declare-fun temp10936_128 () (_ BitVec 64))
(declare-fun temp10936_129 () (_ BitVec 64))
(declare-fun temp10936_130 () (_ BitVec 64))
(declare-fun temp10936_131 () (_ BitVec 64))
(declare-fun temp10936_132 () (_ BitVec 64))
(declare-fun temp10936_133 () (_ BitVec 64))
(declare-fun temp10936_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10936_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10936_136 () (_ BitVec 64))
(declare-fun temp10936_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10936_138 () (_ BitVec 64))
(declare-fun temp10936_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10936_140 () (_ BitVec 64))
(declare-fun temp10936_141 () (_ BitVec 64))
(declare-fun temp10936_142 () (_ BitVec 64))
(declare-fun temp10936_143 () (_ BitVec 64))
(declare-fun temp10936_144 () (_ BitVec 64))
(declare-fun temp10936_145 () (_ BitVec 64))
(declare-fun temp10936_146 () (_ BitVec 64))
(declare-fun temp10936_147 () (_ BitVec 64))
(declare-fun temp10936_148 () (_ BitVec 64))
(declare-fun temp10936_149 () (_ BitVec 64))
(declare-fun temp10936_150 () (_ BitVec 64))
(declare-fun temp10936_151 () (_ BitVec 64))
(declare-fun temp10936_152 () (_ BitVec 64))
(declare-fun temp10936_153 () (_ BitVec 64))
(declare-fun temp10936_154 () (_ BitVec 64))
(declare-fun temp10936_155 () (_ BitVec 64))
(declare-fun temp10936_157 () (_ BitVec 64))
(declare-fun temp10936_158 () (_ BitVec 64))
(declare-fun temp10936_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10936_159 () (_ BitVec 64))
(declare-fun temp10936_160 () (_ BitVec 64))
(declare-fun temp10936_162 () (_ BitVec 64))
(declare-fun temp10936_163 () (_ BitVec 64))
(declare-fun temp10936_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10936_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10936_165 () (_ BitVec 64))
(declare-fun temp10936_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10936_167 () (_ BitVec 64))
(declare-fun temp10936_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10936_169 () (_ BitVec 64))
(declare-fun temp10936_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10936_171 () (_ BitVec 64))
(declare-fun temp10936_172 () (_ BitVec 64))
(declare-fun temp10936_173 () (_ BitVec 64))
(declare-fun temp10936_174 () (_ BitVec 64))
(declare-fun temp10936_175 () (_ BitVec 64))
(declare-fun temp10936_176 () (_ BitVec 64))
(declare-fun temp10936_177 () (_ BitVec 64))
(declare-fun temp10936_178 () (_ BitVec 64))
(declare-fun temp10936_179 () (_ BitVec 64))
(declare-fun temp10936_180 () (_ BitVec 64))
(declare-fun temp10936_181 () (_ BitVec 64))
(declare-fun temp10936_182 () (_ BitVec 64))
(declare-fun temp10936_183 () (_ BitVec 64))
(declare-fun temp10936_184 () (_ BitVec 64))
(declare-fun temp10936_185 () (_ BitVec 64))
(declare-fun temp10936_186 () (_ BitVec 64))
(declare-fun temp10936_187 () (_ BitVec 64))
(declare-fun temp10936_188 () (_ BitVec 64))
(declare-fun temp10936_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10936_190 () (_ BitVec 64))
(declare-fun temp10936_192 () (_ BitVec 64))
(declare-fun temp10936_193 () (_ BitVec 64))
(declare-fun temp10936_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10936_194 () (_ BitVec 64))
(declare-fun temp10936_195 () (_ BitVec 64))
(declare-fun temp10936_197 () (_ BitVec 64))
(declare-fun temp10936_198 () (_ BitVec 64))
(declare-fun temp10936_196 () (_ BitVec 64))
(declare-fun temp10936_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10936_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10936_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10936_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10936_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10936_204 () (_ BitVec 64))
(declare-fun temp10936_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10936_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10936_207 () (_ BitVec 64))
(declare-fun temp10936_208 () (_ BitVec 64))
(declare-fun temp10936_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10936_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10936_211 () (_ BitVec 64))
(declare-fun temp10936_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10936_213 () (_ BitVec 64))
(declare-fun temp10936_214 () (_ BitVec 64))
(declare-fun temp10936_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10936_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10936_217 () (_ BitVec 64))
(declare-fun temp10936_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10936_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10936_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp10936_221 () (_ BitVec 64))
(assert (= temp10936_1 #x0000000000000001))
(assert (= var77203 temp10936_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10936_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10936_2)))
(assert (= temp10936_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10936_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10936_4 #x0000000000000000))
(assert (= var210941 temp10936_4))
(assert (= temp10936_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10936_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10936_6 #x0000000000000000))
(assert (= var210986 temp10936_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10936_7 #x0000000000000000))
(assert (= temp10936_8 temp10936_7))
(assert (= temp10936_9 (select ARGNAME_padding_NAMEEND_VAL temp10936_8)))
(assert (= temp10936_10 #x0000000000000001))
(assert (= temp10936_11 temp10936_10))
(assert (= temp10936_12 (select ARGNAME_padding_NAMEEND_VAL temp10936_11)))
(assert (= temp10936_13 #x0000000000000002))
(assert (= temp10936_14 temp10936_13))
(assert (= temp10936_15 (select ARGNAME_padding_NAMEEND_VAL temp10936_14)))
(assert (= temp10936_16 #x0000000000000003))
(assert (= temp10936_17 temp10936_16))
(assert (= temp10936_18 (select ARGNAME_padding_NAMEEND_VAL temp10936_17)))
(assert (= temp10936_19 #x0000000000000004))
(assert (= temp10936_20 temp10936_19))
(assert (= temp10936_21 (select ARGNAME_padding_NAMEEND_VAL temp10936_20)))
(assert (= temp10936_22 #x0000000000000005))
(assert (= temp10936_23 temp10936_22))
(assert (= temp10936_24 (select ARGNAME_padding_NAMEEND_VAL temp10936_23)))
(assert (= temp10936_25 #x0000000000000000))
(assert (= temp10936_26 #x0000000000000000))
(assert (= temp10936_27 temp10936_26))
(assert (= temp10936_28 (select ARGNAME_padding_NAMEEND_VAL temp10936_27)))
(assert (= temp10936_29 #x0000000000000000))
(assert (= temp10936_30 #x0000000000000001))
(assert (= temp10936_31 temp10936_30))
(assert (= temp10936_32 (select ARGNAME_padding_NAMEEND_VAL temp10936_31)))
(assert (= temp10936_33 #x0000000000000000))
(assert (= temp10936_34 #x0000000000000002))
(assert (= temp10936_35 temp10936_34))
(assert (= temp10936_36 (select ARGNAME_padding_NAMEEND_VAL temp10936_35)))
(assert (= temp10936_37 #x0000000000000000))
(assert (= temp10936_38 #x0000000000000003))
(assert (= temp10936_39 temp10936_38))
(assert (= temp10936_40 (select ARGNAME_padding_NAMEEND_VAL temp10936_39)))
(assert (= temp10936_41 #x0000000000000000))
(assert (= temp10936_42 #x0000000000000004))
(assert (= temp10936_43 temp10936_42))
(assert (= temp10936_44 (select ARGNAME_padding_NAMEEND_VAL temp10936_43)))
(assert (= temp10936_45 #x0000000000000000))
(assert (= temp10936_46 #x0000000000000005))
(assert (= temp10936_47 temp10936_46))
(assert (= temp10936_48 (select ARGNAME_padding_NAMEEND_VAL temp10936_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10936_28 temp10936_25)
             (bvslt temp10936_32 temp10936_29)
             (bvslt temp10936_36 temp10936_33)
             (bvslt temp10936_40 temp10936_37)
             (bvslt temp10936_44 temp10936_41)
             (bvslt temp10936_48 temp10936_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10936_49 #x0000000000000000))
(assert (= var1191714 temp10936_49))
(assert (= temp10936_50 #x0000000000000000))
(assert (= temp10936_51 temp10936_50))
(assert (= temp10936_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10936_51)))
(assert (= temp10936_53 #x0000000000000001))
(assert (= temp10936_54 temp10936_53))
(assert (= temp10936_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10936_54)))
(assert (= temp10936_56 #x0000000000000002))
(assert (= temp10936_57 temp10936_56))
(assert (= temp10936_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10936_57)))
(assert (= temp10936_59 #x0000000000000003))
(assert (= temp10936_60 temp10936_59))
(assert (= temp10936_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10936_60)))
(assert (= temp10936_62 #x0000000000000004))
(assert (= temp10936_63 temp10936_62))
(assert (= temp10936_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10936_63)))
(assert (= temp10936_65 #x0000000000000005))
(assert (= temp10936_66 temp10936_65))
(assert (= temp10936_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10936_66)))
(assert (= temp10936_68 #x0000000000000000))
(assert (= temp10936_69 #x0000000000000000))
(assert (= temp10936_70 temp10936_69))
(assert (= temp10936_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10936_70)))
(assert (= temp10936_72 #x0000000000000000))
(assert (= temp10936_73 #x0000000000000001))
(assert (= temp10936_74 temp10936_73))
(assert (= temp10936_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10936_74)))
(assert (= temp10936_76 #x0000000000000000))
(assert (= temp10936_77 #x0000000000000002))
(assert (= temp10936_78 temp10936_77))
(assert (= temp10936_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10936_78)))
(assert (= temp10936_80 #x0000000000000000))
(assert (= temp10936_81 #x0000000000000003))
(assert (= temp10936_82 temp10936_81))
(assert (= temp10936_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10936_82)))
(assert (= temp10936_84 #x0000000000000000))
(assert (= temp10936_85 #x0000000000000004))
(assert (= temp10936_86 temp10936_85))
(assert (= temp10936_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10936_86)))
(assert (= temp10936_88 #x0000000000000000))
(assert (= temp10936_89 #x0000000000000005))
(assert (= temp10936_90 temp10936_89))
(assert (= temp10936_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10936_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10936_71 temp10936_68)
             (bvslt temp10936_75 temp10936_72)
             (bvslt temp10936_79 temp10936_76)
             (bvslt temp10936_83 temp10936_80)
             (bvslt temp10936_87 temp10936_84)
             (bvslt temp10936_91 temp10936_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10936_92 #x0000000000000000))
(assert (= var1191725 temp10936_92))
(assert (= temp10936_93 #x0000000000000000))
(assert (= temp10936_94 temp10936_93))
(assert (= temp10936_95 (select ARGNAME_stride_NAMEEND_VAL temp10936_94)))
(assert (= temp10936_96 #x0000000000000001))
(assert (= temp10936_97 temp10936_96))
(assert (= temp10936_98 (select ARGNAME_stride_NAMEEND_VAL temp10936_97)))
(assert (= temp10936_99 #x0000000000000002))
(assert (= temp10936_100 temp10936_99))
(assert (= temp10936_101 (select ARGNAME_stride_NAMEEND_VAL temp10936_100)))
(assert (= temp10936_102 #x0000000000000003))
(assert (= temp10936_103 temp10936_102))
(assert (= temp10936_104 (select ARGNAME_stride_NAMEEND_VAL temp10936_103)))
(assert (= temp10936_105 #x0000000000000004))
(assert (= temp10936_106 temp10936_105))
(assert (= temp10936_107 (select ARGNAME_stride_NAMEEND_VAL temp10936_106)))
(assert (= temp10936_108 #x0000000000000005))
(assert (= temp10936_109 temp10936_108))
(assert (= temp10936_110 (select ARGNAME_stride_NAMEEND_VAL temp10936_109)))
(assert (= temp10936_111 #x0000000000000000))
(assert (= temp10936_112 #x0000000000000000))
(assert (= temp10936_113 temp10936_112))
(assert (= temp10936_114 (select ARGNAME_stride_NAMEEND_VAL temp10936_113)))
(assert (= temp10936_115 #x0000000000000000))
(assert (= temp10936_116 #x0000000000000001))
(assert (= temp10936_117 temp10936_116))
(assert (= temp10936_118 (select ARGNAME_stride_NAMEEND_VAL temp10936_117)))
(assert (= temp10936_119 #x0000000000000000))
(assert (= temp10936_120 #x0000000000000002))
(assert (= temp10936_121 temp10936_120))
(assert (= temp10936_122 (select ARGNAME_stride_NAMEEND_VAL temp10936_121)))
(assert (= temp10936_123 #x0000000000000000))
(assert (= temp10936_124 #x0000000000000003))
(assert (= temp10936_125 temp10936_124))
(assert (= temp10936_126 (select ARGNAME_stride_NAMEEND_VAL temp10936_125)))
(assert (= temp10936_127 #x0000000000000000))
(assert (= temp10936_128 #x0000000000000004))
(assert (= temp10936_129 temp10936_128))
(assert (= temp10936_130 (select ARGNAME_stride_NAMEEND_VAL temp10936_129)))
(assert (= temp10936_131 #x0000000000000000))
(assert (= temp10936_132 #x0000000000000005))
(assert (= temp10936_133 temp10936_132))
(assert (= temp10936_134 (select ARGNAME_stride_NAMEEND_VAL temp10936_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10936_114 temp10936_111)
             (bvsle temp10936_118 temp10936_115)
             (bvsle temp10936_122 temp10936_119)
             (bvsle temp10936_126 temp10936_123)
             (bvsle temp10936_130 temp10936_127)
             (bvsle temp10936_134 temp10936_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10936_135 #x0000000000000000))
(assert (= var1191735 temp10936_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10936_136 #x0000000000000001))
(assert (= var1191747 temp10936_136))
(assert (= temp10936_137 #x0000000000000000))
(assert (= var1179826 temp10936_137))
(assert (= temp10936_138 #x0000000000000000))
(assert (= temp10936_139 temp10936_138))
(assert (= temp10936_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10936_139)))
(assert (= temp10936_141 #x0000000000000001))
(assert (= temp10936_142 temp10936_141))
(assert (= temp10936_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10936_142)))
(assert (= temp10936_144 #x0000000000000002))
(assert (= temp10936_145 temp10936_144))
(assert (= temp10936_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10936_145)))
(assert (= temp10936_147 #x0000000000000003))
(assert (= temp10936_148 temp10936_147))
(assert (= temp10936_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10936_148)))
(assert (= temp10936_150 #x0000000000000004))
(assert (= temp10936_151 temp10936_150))
(assert (= temp10936_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10936_151)))
(assert (= temp10936_153 #x0000000000000005))
(assert (= temp10936_154 temp10936_153))
(assert (= temp10936_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10936_154)))
(assert (= temp10936_157 var1179826))
(assert (= temp10936_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10936_157)))
(assert (= temp10936_156 temp10936_158))
(assert (= var1191780
   (ite (bvslt temp10936_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10936_159 #x0000000000000000))
(assert (= var1191780 temp10936_159))
(assert (= temp10936_160 #x0000000000000000))
(assert (= var1179826 temp10936_160))
(assert (= temp10936_162 var1179826))
(assert (= temp10936_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10936_162)))
(assert (= temp10936_161 temp10936_163))
(assert (= var1191802 (bvsmod temp10936_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10936_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10936_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10936_165 #x0000000000000001))
(assert (= var1191803 temp10936_165))
(assert (= temp10936_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10936_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10936_167 #x0000000000000001))
(assert (= var1191823 temp10936_167))
(assert (= temp10936_168 #x0000000000000001))
(assert (= var1180714 temp10936_168))
(assert (= temp10936_169 #x0000000000000000))
(assert (= temp10936_170 temp10936_169))
(assert (= temp10936_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10936_170)))
(assert (= temp10936_172 #x0000000000000001))
(assert (= temp10936_173 temp10936_172))
(assert (= temp10936_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10936_173)))
(assert (= temp10936_175 #x0000000000000002))
(assert (= temp10936_176 temp10936_175))
(assert (= temp10936_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10936_176)))
(assert (= temp10936_178 #x0000000000000003))
(assert (= temp10936_179 temp10936_178))
(assert (= temp10936_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10936_179)))
(assert (= temp10936_181 #x0000000000000004))
(assert (= temp10936_182 temp10936_181))
(assert (= temp10936_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10936_182)))
(assert (= temp10936_184 #x0000000000000005))
(assert (= temp10936_185 temp10936_184))
(assert (= temp10936_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10936_185)))
(assert (= temp10936_187 #x0000000000000000))
(assert (= temp10936_188
   (ite (bvslt var1180714 temp10936_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10936_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10936_188)))
(assert (= var1191831 temp10936_189))
(assert (bvslt (ite (bvslt var1180714 temp10936_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10936_190 #x0000000000000001))
(assert (= var1180714 temp10936_190))
(assert (= temp10936_192 var1180714))
(assert (= temp10936_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10936_192)))
(assert (= temp10936_191 temp10936_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10936_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10936_194 #x0000000000000001))
(assert (= var1191836 temp10936_194))
(assert (= temp10936_195 #x0000000000000000))
(assert (= var1179826 temp10936_195))
(assert (= temp10936_197 var1179826))
(assert (= temp10936_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10936_197)))
(assert (= temp10936_196 temp10936_198))
(assert (= temp10936_199 #x0000000000000002))
(assert (= var1586025 temp10936_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10936_200 #x0000000000000001))
(assert (= var1191993 temp10936_200))
(assert (= temp10936_201 #x0000000000000001))
(assert (= var2700303 temp10936_201))
(assert (= temp10936_202 #x0000000000000001))
(assert (= var2962447 temp10936_202))
(assert (= temp10936_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10936_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10936_204 #x0000000000000001))
(assert (= var211058 temp10936_204))
(assert (= temp10936_205 #x0000000000000001))
(assert (= var211188 temp10936_205))
(assert (= var3879401 var211188))
(assert (= temp10936_206 #x0000000000000000))
(assert (= var3866802 temp10936_206))
(assert (= temp10936_207 #x0000000000000000))
(assert (= temp10936_208
   (ite (bvslt var3866802 temp10936_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10936_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10936_208)))
(assert (= var3879420 temp10936_209))
(assert (bvslt (ite (bvslt var3866802 temp10936_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10936_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10936_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10936_211 #x0000000000000000))
(assert (= var3879421 temp10936_211))
(assert (= temp10936_212 #x0000000000000001))
(assert (= var3867690 temp10936_212))
(assert (= temp10936_213 #x0000000000000000))
(assert (= temp10936_214
   (ite (bvslt var3867690 temp10936_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10936_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10936_214)))
(assert (= var3879423 temp10936_215))
(assert (bvslt (ite (bvslt var3867690 temp10936_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10936_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10936_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10936_217 #x0000000000000001))
(assert (= var3879424 temp10936_217))
(assert (= temp10936_218 #x0000000000000000))
(assert (= var4133117 temp10936_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10936_219 #x0000000000000002))
(assert (= var4339331 temp10936_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10936_220 #x0000000000000000))
(assert (= var4404892 temp10936_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp10936_221 #x0000000000000001))
(assert (= var211058 temp10936_221))
(model-add temp10936_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10936_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10936_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10936_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





