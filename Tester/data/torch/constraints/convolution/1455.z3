(declare-fun temp10734_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10734_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10734_3 () (_ BitVec 64))
(declare-fun temp10734_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10734_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10734_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10734_7 () (_ BitVec 64))
(declare-fun temp10734_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10734_9 () (_ BitVec 64))
(declare-fun temp10734_10 () (_ BitVec 64))
(declare-fun temp10734_11 () (_ BitVec 64))
(declare-fun temp10734_12 () (_ BitVec 64))
(declare-fun temp10734_13 () (_ BitVec 64))
(declare-fun temp10734_14 () (_ BitVec 64))
(declare-fun temp10734_15 () (_ BitVec 64))
(declare-fun temp10734_16 () (_ BitVec 64))
(declare-fun temp10734_17 () (_ BitVec 64))
(declare-fun temp10734_18 () (_ BitVec 64))
(declare-fun temp10734_19 () (_ BitVec 64))
(declare-fun temp10734_20 () (_ BitVec 64))
(declare-fun temp10734_21 () (_ BitVec 64))
(declare-fun temp10734_22 () (_ BitVec 64))
(declare-fun temp10734_23 () (_ BitVec 64))
(declare-fun temp10734_24 () (_ BitVec 64))
(declare-fun temp10734_25 () (_ BitVec 64))
(declare-fun temp10734_26 () (_ BitVec 64))
(declare-fun temp10734_27 () (_ BitVec 64))
(declare-fun temp10734_28 () (_ BitVec 64))
(declare-fun temp10734_29 () (_ BitVec 64))
(declare-fun temp10734_30 () (_ BitVec 64))
(declare-fun temp10734_31 () (_ BitVec 64))
(declare-fun temp10734_32 () (_ BitVec 64))
(declare-fun temp10734_33 () (_ BitVec 64))
(declare-fun temp10734_34 () (_ BitVec 64))
(declare-fun temp10734_35 () (_ BitVec 64))
(declare-fun temp10734_36 () (_ BitVec 64))
(declare-fun temp10734_37 () (_ BitVec 64))
(declare-fun temp10734_38 () (_ BitVec 64))
(declare-fun temp10734_39 () (_ BitVec 64))
(declare-fun temp10734_40 () (_ BitVec 64))
(declare-fun temp10734_41 () (_ BitVec 64))
(declare-fun temp10734_42 () (_ BitVec 64))
(declare-fun temp10734_43 () (_ BitVec 64))
(declare-fun temp10734_44 () (_ BitVec 64))
(declare-fun temp10734_45 () (_ BitVec 64))
(declare-fun temp10734_46 () (_ BitVec 64))
(declare-fun temp10734_47 () (_ BitVec 64))
(declare-fun temp10734_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10734_49 () (_ BitVec 64))
(declare-fun temp10734_50 () (_ BitVec 64))
(declare-fun temp10734_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10734_52 () (_ BitVec 64))
(declare-fun temp10734_53 () (_ BitVec 64))
(declare-fun temp10734_54 () (_ BitVec 64))
(declare-fun temp10734_55 () (_ BitVec 64))
(declare-fun temp10734_56 () (_ BitVec 64))
(declare-fun temp10734_57 () (_ BitVec 64))
(declare-fun temp10734_58 () (_ BitVec 64))
(declare-fun temp10734_59 () (_ BitVec 64))
(declare-fun temp10734_60 () (_ BitVec 64))
(declare-fun temp10734_61 () (_ BitVec 64))
(declare-fun temp10734_62 () (_ BitVec 64))
(declare-fun temp10734_63 () (_ BitVec 64))
(declare-fun temp10734_64 () (_ BitVec 64))
(declare-fun temp10734_65 () (_ BitVec 64))
(declare-fun temp10734_66 () (_ BitVec 64))
(declare-fun temp10734_67 () (_ BitVec 64))
(declare-fun temp10734_68 () (_ BitVec 64))
(declare-fun temp10734_69 () (_ BitVec 64))
(declare-fun temp10734_70 () (_ BitVec 64))
(declare-fun temp10734_71 () (_ BitVec 64))
(declare-fun temp10734_72 () (_ BitVec 64))
(declare-fun temp10734_73 () (_ BitVec 64))
(declare-fun temp10734_74 () (_ BitVec 64))
(declare-fun temp10734_75 () (_ BitVec 64))
(declare-fun temp10734_76 () (_ BitVec 64))
(declare-fun temp10734_77 () (_ BitVec 64))
(declare-fun temp10734_78 () (_ BitVec 64))
(declare-fun temp10734_79 () (_ BitVec 64))
(declare-fun temp10734_80 () (_ BitVec 64))
(declare-fun temp10734_81 () (_ BitVec 64))
(declare-fun temp10734_82 () (_ BitVec 64))
(declare-fun temp10734_83 () (_ BitVec 64))
(declare-fun temp10734_84 () (_ BitVec 64))
(declare-fun temp10734_85 () (_ BitVec 64))
(declare-fun temp10734_86 () (_ BitVec 64))
(declare-fun temp10734_87 () (_ BitVec 64))
(declare-fun temp10734_88 () (_ BitVec 64))
(declare-fun temp10734_89 () (_ BitVec 64))
(declare-fun temp10734_90 () (_ BitVec 64))
(declare-fun temp10734_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10734_92 () (_ BitVec 64))
(declare-fun temp10734_93 () (_ BitVec 64))
(declare-fun temp10734_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10734_95 () (_ BitVec 64))
(declare-fun temp10734_96 () (_ BitVec 64))
(declare-fun temp10734_97 () (_ BitVec 64))
(declare-fun temp10734_98 () (_ BitVec 64))
(declare-fun temp10734_99 () (_ BitVec 64))
(declare-fun temp10734_100 () (_ BitVec 64))
(declare-fun temp10734_101 () (_ BitVec 64))
(declare-fun temp10734_102 () (_ BitVec 64))
(declare-fun temp10734_103 () (_ BitVec 64))
(declare-fun temp10734_104 () (_ BitVec 64))
(declare-fun temp10734_105 () (_ BitVec 64))
(declare-fun temp10734_106 () (_ BitVec 64))
(declare-fun temp10734_107 () (_ BitVec 64))
(declare-fun temp10734_108 () (_ BitVec 64))
(declare-fun temp10734_109 () (_ BitVec 64))
(declare-fun temp10734_110 () (_ BitVec 64))
(declare-fun temp10734_111 () (_ BitVec 64))
(declare-fun temp10734_112 () (_ BitVec 64))
(declare-fun temp10734_113 () (_ BitVec 64))
(declare-fun temp10734_114 () (_ BitVec 64))
(declare-fun temp10734_115 () (_ BitVec 64))
(declare-fun temp10734_116 () (_ BitVec 64))
(declare-fun temp10734_117 () (_ BitVec 64))
(declare-fun temp10734_118 () (_ BitVec 64))
(declare-fun temp10734_119 () (_ BitVec 64))
(declare-fun temp10734_120 () (_ BitVec 64))
(declare-fun temp10734_121 () (_ BitVec 64))
(declare-fun temp10734_122 () (_ BitVec 64))
(declare-fun temp10734_123 () (_ BitVec 64))
(declare-fun temp10734_124 () (_ BitVec 64))
(declare-fun temp10734_125 () (_ BitVec 64))
(declare-fun temp10734_126 () (_ BitVec 64))
(declare-fun temp10734_127 () (_ BitVec 64))
(declare-fun temp10734_128 () (_ BitVec 64))
(declare-fun temp10734_129 () (_ BitVec 64))
(declare-fun temp10734_130 () (_ BitVec 64))
(declare-fun temp10734_131 () (_ BitVec 64))
(declare-fun temp10734_132 () (_ BitVec 64))
(declare-fun temp10734_133 () (_ BitVec 64))
(declare-fun temp10734_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10734_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10734_136 () (_ BitVec 64))
(declare-fun temp10734_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10734_138 () (_ BitVec 64))
(declare-fun temp10734_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10734_140 () (_ BitVec 64))
(declare-fun temp10734_141 () (_ BitVec 64))
(declare-fun temp10734_142 () (_ BitVec 64))
(declare-fun temp10734_143 () (_ BitVec 64))
(declare-fun temp10734_144 () (_ BitVec 64))
(declare-fun temp10734_145 () (_ BitVec 64))
(declare-fun temp10734_146 () (_ BitVec 64))
(declare-fun temp10734_147 () (_ BitVec 64))
(declare-fun temp10734_148 () (_ BitVec 64))
(declare-fun temp10734_149 () (_ BitVec 64))
(declare-fun temp10734_150 () (_ BitVec 64))
(declare-fun temp10734_151 () (_ BitVec 64))
(declare-fun temp10734_152 () (_ BitVec 64))
(declare-fun temp10734_153 () (_ BitVec 64))
(declare-fun temp10734_154 () (_ BitVec 64))
(declare-fun temp10734_155 () (_ BitVec 64))
(declare-fun temp10734_157 () (_ BitVec 64))
(declare-fun temp10734_158 () (_ BitVec 64))
(declare-fun temp10734_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10734_159 () (_ BitVec 64))
(declare-fun temp10734_160 () (_ BitVec 64))
(declare-fun temp10734_162 () (_ BitVec 64))
(declare-fun temp10734_163 () (_ BitVec 64))
(declare-fun temp10734_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10734_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10734_165 () (_ BitVec 64))
(declare-fun temp10734_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10734_167 () (_ BitVec 64))
(declare-fun temp10734_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10734_169 () (_ BitVec 64))
(declare-fun temp10734_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10734_171 () (_ BitVec 64))
(declare-fun temp10734_172 () (_ BitVec 64))
(declare-fun temp10734_173 () (_ BitVec 64))
(declare-fun temp10734_174 () (_ BitVec 64))
(declare-fun temp10734_175 () (_ BitVec 64))
(declare-fun temp10734_176 () (_ BitVec 64))
(declare-fun temp10734_177 () (_ BitVec 64))
(declare-fun temp10734_178 () (_ BitVec 64))
(declare-fun temp10734_179 () (_ BitVec 64))
(declare-fun temp10734_180 () (_ BitVec 64))
(declare-fun temp10734_181 () (_ BitVec 64))
(declare-fun temp10734_182 () (_ BitVec 64))
(declare-fun temp10734_183 () (_ BitVec 64))
(declare-fun temp10734_184 () (_ BitVec 64))
(declare-fun temp10734_185 () (_ BitVec 64))
(declare-fun temp10734_186 () (_ BitVec 64))
(declare-fun temp10734_187 () (_ BitVec 64))
(declare-fun temp10734_188 () (_ BitVec 64))
(declare-fun temp10734_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10734_190 () (_ BitVec 64))
(declare-fun temp10734_192 () (_ BitVec 64))
(declare-fun temp10734_193 () (_ BitVec 64))
(declare-fun temp10734_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10734_194 () (_ BitVec 64))
(declare-fun temp10734_195 () (_ BitVec 64))
(declare-fun temp10734_197 () (_ BitVec 64))
(declare-fun temp10734_198 () (_ BitVec 64))
(declare-fun temp10734_196 () (_ BitVec 64))
(declare-fun temp10734_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10734_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10734_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10734_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10734_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10734_204 () (_ BitVec 64))
(declare-fun temp10734_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10734_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10734_207 () (_ BitVec 64))
(declare-fun temp10734_208 () (_ BitVec 64))
(declare-fun temp10734_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10734_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10734_211 () (_ BitVec 64))
(declare-fun temp10734_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10734_213 () (_ BitVec 64))
(declare-fun temp10734_214 () (_ BitVec 64))
(declare-fun temp10734_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10734_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10734_217 () (_ BitVec 64))
(declare-fun temp10734_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10734_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10734_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var5124496 () (_ BitVec 64))
(declare-fun var211820 () (_ BitVec 64))
(declare-fun temp10734_221 () (_ BitVec 64))
(declare-fun var211821 () (_ BitVec 64))
(declare-fun temp10734_222 () (_ BitVec 64))
(assert (= temp10734_1 #x0000000000000001))
(assert (= var77203 temp10734_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10734_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10734_2)))
(assert (= temp10734_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10734_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10734_4 #x0000000000000000))
(assert (= var210941 temp10734_4))
(assert (= temp10734_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10734_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10734_6 #x0000000000000000))
(assert (= var210986 temp10734_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10734_7 #x0000000000000000))
(assert (= temp10734_8 temp10734_7))
(assert (= temp10734_9 (select ARGNAME_padding_NAMEEND_VAL temp10734_8)))
(assert (= temp10734_10 #x0000000000000001))
(assert (= temp10734_11 temp10734_10))
(assert (= temp10734_12 (select ARGNAME_padding_NAMEEND_VAL temp10734_11)))
(assert (= temp10734_13 #x0000000000000002))
(assert (= temp10734_14 temp10734_13))
(assert (= temp10734_15 (select ARGNAME_padding_NAMEEND_VAL temp10734_14)))
(assert (= temp10734_16 #x0000000000000003))
(assert (= temp10734_17 temp10734_16))
(assert (= temp10734_18 (select ARGNAME_padding_NAMEEND_VAL temp10734_17)))
(assert (= temp10734_19 #x0000000000000004))
(assert (= temp10734_20 temp10734_19))
(assert (= temp10734_21 (select ARGNAME_padding_NAMEEND_VAL temp10734_20)))
(assert (= temp10734_22 #x0000000000000005))
(assert (= temp10734_23 temp10734_22))
(assert (= temp10734_24 (select ARGNAME_padding_NAMEEND_VAL temp10734_23)))
(assert (= temp10734_25 #x0000000000000000))
(assert (= temp10734_26 #x0000000000000000))
(assert (= temp10734_27 temp10734_26))
(assert (= temp10734_28 (select ARGNAME_padding_NAMEEND_VAL temp10734_27)))
(assert (= temp10734_29 #x0000000000000000))
(assert (= temp10734_30 #x0000000000000001))
(assert (= temp10734_31 temp10734_30))
(assert (= temp10734_32 (select ARGNAME_padding_NAMEEND_VAL temp10734_31)))
(assert (= temp10734_33 #x0000000000000000))
(assert (= temp10734_34 #x0000000000000002))
(assert (= temp10734_35 temp10734_34))
(assert (= temp10734_36 (select ARGNAME_padding_NAMEEND_VAL temp10734_35)))
(assert (= temp10734_37 #x0000000000000000))
(assert (= temp10734_38 #x0000000000000003))
(assert (= temp10734_39 temp10734_38))
(assert (= temp10734_40 (select ARGNAME_padding_NAMEEND_VAL temp10734_39)))
(assert (= temp10734_41 #x0000000000000000))
(assert (= temp10734_42 #x0000000000000004))
(assert (= temp10734_43 temp10734_42))
(assert (= temp10734_44 (select ARGNAME_padding_NAMEEND_VAL temp10734_43)))
(assert (= temp10734_45 #x0000000000000000))
(assert (= temp10734_46 #x0000000000000005))
(assert (= temp10734_47 temp10734_46))
(assert (= temp10734_48 (select ARGNAME_padding_NAMEEND_VAL temp10734_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10734_28 temp10734_25)
             (bvslt temp10734_32 temp10734_29)
             (bvslt temp10734_36 temp10734_33)
             (bvslt temp10734_40 temp10734_37)
             (bvslt temp10734_44 temp10734_41)
             (bvslt temp10734_48 temp10734_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10734_49 #x0000000000000000))
(assert (= var1191714 temp10734_49))
(assert (= temp10734_50 #x0000000000000000))
(assert (= temp10734_51 temp10734_50))
(assert (= temp10734_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10734_51)))
(assert (= temp10734_53 #x0000000000000001))
(assert (= temp10734_54 temp10734_53))
(assert (= temp10734_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10734_54)))
(assert (= temp10734_56 #x0000000000000002))
(assert (= temp10734_57 temp10734_56))
(assert (= temp10734_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10734_57)))
(assert (= temp10734_59 #x0000000000000003))
(assert (= temp10734_60 temp10734_59))
(assert (= temp10734_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10734_60)))
(assert (= temp10734_62 #x0000000000000004))
(assert (= temp10734_63 temp10734_62))
(assert (= temp10734_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10734_63)))
(assert (= temp10734_65 #x0000000000000005))
(assert (= temp10734_66 temp10734_65))
(assert (= temp10734_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10734_66)))
(assert (= temp10734_68 #x0000000000000000))
(assert (= temp10734_69 #x0000000000000000))
(assert (= temp10734_70 temp10734_69))
(assert (= temp10734_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10734_70)))
(assert (= temp10734_72 #x0000000000000000))
(assert (= temp10734_73 #x0000000000000001))
(assert (= temp10734_74 temp10734_73))
(assert (= temp10734_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10734_74)))
(assert (= temp10734_76 #x0000000000000000))
(assert (= temp10734_77 #x0000000000000002))
(assert (= temp10734_78 temp10734_77))
(assert (= temp10734_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10734_78)))
(assert (= temp10734_80 #x0000000000000000))
(assert (= temp10734_81 #x0000000000000003))
(assert (= temp10734_82 temp10734_81))
(assert (= temp10734_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10734_82)))
(assert (= temp10734_84 #x0000000000000000))
(assert (= temp10734_85 #x0000000000000004))
(assert (= temp10734_86 temp10734_85))
(assert (= temp10734_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10734_86)))
(assert (= temp10734_88 #x0000000000000000))
(assert (= temp10734_89 #x0000000000000005))
(assert (= temp10734_90 temp10734_89))
(assert (= temp10734_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10734_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10734_71 temp10734_68)
             (bvslt temp10734_75 temp10734_72)
             (bvslt temp10734_79 temp10734_76)
             (bvslt temp10734_83 temp10734_80)
             (bvslt temp10734_87 temp10734_84)
             (bvslt temp10734_91 temp10734_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10734_92 #x0000000000000000))
(assert (= var1191725 temp10734_92))
(assert (= temp10734_93 #x0000000000000000))
(assert (= temp10734_94 temp10734_93))
(assert (= temp10734_95 (select ARGNAME_stride_NAMEEND_VAL temp10734_94)))
(assert (= temp10734_96 #x0000000000000001))
(assert (= temp10734_97 temp10734_96))
(assert (= temp10734_98 (select ARGNAME_stride_NAMEEND_VAL temp10734_97)))
(assert (= temp10734_99 #x0000000000000002))
(assert (= temp10734_100 temp10734_99))
(assert (= temp10734_101 (select ARGNAME_stride_NAMEEND_VAL temp10734_100)))
(assert (= temp10734_102 #x0000000000000003))
(assert (= temp10734_103 temp10734_102))
(assert (= temp10734_104 (select ARGNAME_stride_NAMEEND_VAL temp10734_103)))
(assert (= temp10734_105 #x0000000000000004))
(assert (= temp10734_106 temp10734_105))
(assert (= temp10734_107 (select ARGNAME_stride_NAMEEND_VAL temp10734_106)))
(assert (= temp10734_108 #x0000000000000005))
(assert (= temp10734_109 temp10734_108))
(assert (= temp10734_110 (select ARGNAME_stride_NAMEEND_VAL temp10734_109)))
(assert (= temp10734_111 #x0000000000000000))
(assert (= temp10734_112 #x0000000000000000))
(assert (= temp10734_113 temp10734_112))
(assert (= temp10734_114 (select ARGNAME_stride_NAMEEND_VAL temp10734_113)))
(assert (= temp10734_115 #x0000000000000000))
(assert (= temp10734_116 #x0000000000000001))
(assert (= temp10734_117 temp10734_116))
(assert (= temp10734_118 (select ARGNAME_stride_NAMEEND_VAL temp10734_117)))
(assert (= temp10734_119 #x0000000000000000))
(assert (= temp10734_120 #x0000000000000002))
(assert (= temp10734_121 temp10734_120))
(assert (= temp10734_122 (select ARGNAME_stride_NAMEEND_VAL temp10734_121)))
(assert (= temp10734_123 #x0000000000000000))
(assert (= temp10734_124 #x0000000000000003))
(assert (= temp10734_125 temp10734_124))
(assert (= temp10734_126 (select ARGNAME_stride_NAMEEND_VAL temp10734_125)))
(assert (= temp10734_127 #x0000000000000000))
(assert (= temp10734_128 #x0000000000000004))
(assert (= temp10734_129 temp10734_128))
(assert (= temp10734_130 (select ARGNAME_stride_NAMEEND_VAL temp10734_129)))
(assert (= temp10734_131 #x0000000000000000))
(assert (= temp10734_132 #x0000000000000005))
(assert (= temp10734_133 temp10734_132))
(assert (= temp10734_134 (select ARGNAME_stride_NAMEEND_VAL temp10734_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10734_114 temp10734_111)
             (bvsle temp10734_118 temp10734_115)
             (bvsle temp10734_122 temp10734_119)
             (bvsle temp10734_126 temp10734_123)
             (bvsle temp10734_130 temp10734_127)
             (bvsle temp10734_134 temp10734_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10734_135 #x0000000000000000))
(assert (= var1191735 temp10734_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10734_136 #x0000000000000001))
(assert (= var1191747 temp10734_136))
(assert (= temp10734_137 #x0000000000000000))
(assert (= var1179826 temp10734_137))
(assert (= temp10734_138 #x0000000000000000))
(assert (= temp10734_139 temp10734_138))
(assert (= temp10734_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10734_139)))
(assert (= temp10734_141 #x0000000000000001))
(assert (= temp10734_142 temp10734_141))
(assert (= temp10734_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10734_142)))
(assert (= temp10734_144 #x0000000000000002))
(assert (= temp10734_145 temp10734_144))
(assert (= temp10734_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10734_145)))
(assert (= temp10734_147 #x0000000000000003))
(assert (= temp10734_148 temp10734_147))
(assert (= temp10734_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10734_148)))
(assert (= temp10734_150 #x0000000000000004))
(assert (= temp10734_151 temp10734_150))
(assert (= temp10734_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10734_151)))
(assert (= temp10734_153 #x0000000000000005))
(assert (= temp10734_154 temp10734_153))
(assert (= temp10734_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10734_154)))
(assert (= temp10734_157 var1179826))
(assert (= temp10734_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10734_157)))
(assert (= temp10734_156 temp10734_158))
(assert (= var1191780
   (ite (bvslt temp10734_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10734_159 #x0000000000000000))
(assert (= var1191780 temp10734_159))
(assert (= temp10734_160 #x0000000000000000))
(assert (= var1179826 temp10734_160))
(assert (= temp10734_162 var1179826))
(assert (= temp10734_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10734_162)))
(assert (= temp10734_161 temp10734_163))
(assert (= var1191802 (bvsmod temp10734_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10734_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10734_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10734_165 #x0000000000000001))
(assert (= var1191803 temp10734_165))
(assert (= temp10734_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10734_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10734_167 #x0000000000000001))
(assert (= var1191823 temp10734_167))
(assert (= temp10734_168 #x0000000000000001))
(assert (= var1180714 temp10734_168))
(assert (= temp10734_169 #x0000000000000000))
(assert (= temp10734_170 temp10734_169))
(assert (= temp10734_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10734_170)))
(assert (= temp10734_172 #x0000000000000001))
(assert (= temp10734_173 temp10734_172))
(assert (= temp10734_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10734_173)))
(assert (= temp10734_175 #x0000000000000002))
(assert (= temp10734_176 temp10734_175))
(assert (= temp10734_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10734_176)))
(assert (= temp10734_178 #x0000000000000003))
(assert (= temp10734_179 temp10734_178))
(assert (= temp10734_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10734_179)))
(assert (= temp10734_181 #x0000000000000004))
(assert (= temp10734_182 temp10734_181))
(assert (= temp10734_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10734_182)))
(assert (= temp10734_184 #x0000000000000005))
(assert (= temp10734_185 temp10734_184))
(assert (= temp10734_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10734_185)))
(assert (= temp10734_187 #x0000000000000000))
(assert (= temp10734_188
   (ite (bvslt var1180714 temp10734_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10734_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10734_188)))
(assert (= var1191831 temp10734_189))
(assert (bvslt (ite (bvslt var1180714 temp10734_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10734_190 #x0000000000000001))
(assert (= var1180714 temp10734_190))
(assert (= temp10734_192 var1180714))
(assert (= temp10734_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10734_192)))
(assert (= temp10734_191 temp10734_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10734_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10734_194 #x0000000000000001))
(assert (= var1191836 temp10734_194))
(assert (= temp10734_195 #x0000000000000000))
(assert (= var1179826 temp10734_195))
(assert (= temp10734_197 var1179826))
(assert (= temp10734_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10734_197)))
(assert (= temp10734_196 temp10734_198))
(assert (= temp10734_199 #x0000000000000002))
(assert (= var1586025 temp10734_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10734_200 #x0000000000000001))
(assert (= var1191993 temp10734_200))
(assert (= temp10734_201 #x0000000000000001))
(assert (= var2700303 temp10734_201))
(assert (= temp10734_202 #x0000000000000001))
(assert (= var2962447 temp10734_202))
(assert (= temp10734_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10734_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10734_204 #x0000000000000001))
(assert (= var211058 temp10734_204))
(assert (= temp10734_205 #x0000000000000001))
(assert (= var211188 temp10734_205))
(assert (= var3879401 var211188))
(assert (= temp10734_206 #x0000000000000000))
(assert (= var3866802 temp10734_206))
(assert (= temp10734_207 #x0000000000000000))
(assert (= temp10734_208
   (ite (bvslt var3866802 temp10734_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10734_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10734_208)))
(assert (= var3879420 temp10734_209))
(assert (bvslt (ite (bvslt var3866802 temp10734_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10734_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10734_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10734_211 #x0000000000000000))
(assert (= var3879421 temp10734_211))
(assert (= temp10734_212 #x0000000000000001))
(assert (= var3867690 temp10734_212))
(assert (= temp10734_213 #x0000000000000000))
(assert (= temp10734_214
   (ite (bvslt var3867690 temp10734_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10734_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10734_214)))
(assert (= var3879423 temp10734_215))
(assert (bvslt (ite (bvslt var3867690 temp10734_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10734_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10734_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10734_217 #x0000000000000001))
(assert (= var3879424 temp10734_217))
(assert (= temp10734_218 #x0000000000000000))
(assert (= var4133117 temp10734_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10734_219 #x0000000000000002))
(assert (= var4339331 temp10734_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10734_220 #x0000000000000000))
(assert (= var4404892 temp10734_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var5124496 var211201))
(assert (= var211820 var210913))
(assert (= temp10734_221 #x0000000000000000))
(assert (= var211821
   (ite (distinct var211820 temp10734_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10734_222 #x0000000000000001))
(assert (= var211058 temp10734_222))
(model-add temp10734_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10734_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10734_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10734_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





