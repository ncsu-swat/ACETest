(declare-fun temp842_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp842_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp842_3 () (_ BitVec 64))
(declare-fun temp842_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp842_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp842_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp842_7 () (_ BitVec 64))
(declare-fun temp842_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp842_9 () (_ BitVec 64))
(declare-fun temp842_10 () (_ BitVec 64))
(declare-fun temp842_11 () (_ BitVec 64))
(declare-fun temp842_12 () (_ BitVec 64))
(declare-fun temp842_13 () (_ BitVec 64))
(declare-fun temp842_14 () (_ BitVec 64))
(declare-fun temp842_15 () (_ BitVec 64))
(declare-fun temp842_16 () (_ BitVec 64))
(declare-fun temp842_17 () (_ BitVec 64))
(declare-fun temp842_18 () (_ BitVec 64))
(declare-fun temp842_19 () (_ BitVec 64))
(declare-fun temp842_20 () (_ BitVec 64))
(declare-fun temp842_21 () (_ BitVec 64))
(declare-fun temp842_22 () (_ BitVec 64))
(declare-fun temp842_23 () (_ BitVec 64))
(declare-fun temp842_24 () (_ BitVec 64))
(declare-fun temp842_25 () (_ BitVec 64))
(declare-fun temp842_26 () (_ BitVec 64))
(declare-fun temp842_27 () (_ BitVec 64))
(declare-fun temp842_28 () (_ BitVec 64))
(declare-fun temp842_29 () (_ BitVec 64))
(declare-fun temp842_30 () (_ BitVec 64))
(declare-fun temp842_31 () (_ BitVec 64))
(declare-fun temp842_32 () (_ BitVec 64))
(declare-fun temp842_33 () (_ BitVec 64))
(declare-fun temp842_34 () (_ BitVec 64))
(declare-fun temp842_35 () (_ BitVec 64))
(declare-fun temp842_36 () (_ BitVec 64))
(declare-fun temp842_37 () (_ BitVec 64))
(declare-fun temp842_38 () (_ BitVec 64))
(declare-fun temp842_39 () (_ BitVec 64))
(declare-fun temp842_40 () (_ BitVec 64))
(declare-fun temp842_41 () (_ BitVec 64))
(declare-fun temp842_42 () (_ BitVec 64))
(declare-fun temp842_43 () (_ BitVec 64))
(declare-fun temp842_44 () (_ BitVec 64))
(declare-fun temp842_45 () (_ BitVec 64))
(declare-fun temp842_46 () (_ BitVec 64))
(declare-fun temp842_47 () (_ BitVec 64))
(declare-fun temp842_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp842_49 () (_ BitVec 64))
(declare-fun temp842_50 () (_ BitVec 64))
(declare-fun temp842_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp842_52 () (_ BitVec 64))
(declare-fun temp842_53 () (_ BitVec 64))
(declare-fun temp842_54 () (_ BitVec 64))
(declare-fun temp842_55 () (_ BitVec 64))
(declare-fun temp842_56 () (_ BitVec 64))
(declare-fun temp842_57 () (_ BitVec 64))
(declare-fun temp842_58 () (_ BitVec 64))
(declare-fun temp842_59 () (_ BitVec 64))
(declare-fun temp842_60 () (_ BitVec 64))
(declare-fun temp842_61 () (_ BitVec 64))
(declare-fun temp842_62 () (_ BitVec 64))
(declare-fun temp842_63 () (_ BitVec 64))
(declare-fun temp842_64 () (_ BitVec 64))
(declare-fun temp842_65 () (_ BitVec 64))
(declare-fun temp842_66 () (_ BitVec 64))
(declare-fun temp842_67 () (_ BitVec 64))
(declare-fun temp842_68 () (_ BitVec 64))
(declare-fun temp842_69 () (_ BitVec 64))
(declare-fun temp842_70 () (_ BitVec 64))
(declare-fun temp842_71 () (_ BitVec 64))
(declare-fun temp842_72 () (_ BitVec 64))
(declare-fun temp842_73 () (_ BitVec 64))
(declare-fun temp842_74 () (_ BitVec 64))
(declare-fun temp842_75 () (_ BitVec 64))
(declare-fun temp842_76 () (_ BitVec 64))
(declare-fun temp842_77 () (_ BitVec 64))
(declare-fun temp842_78 () (_ BitVec 64))
(declare-fun temp842_79 () (_ BitVec 64))
(declare-fun temp842_80 () (_ BitVec 64))
(declare-fun temp842_81 () (_ BitVec 64))
(declare-fun temp842_82 () (_ BitVec 64))
(declare-fun temp842_83 () (_ BitVec 64))
(declare-fun temp842_84 () (_ BitVec 64))
(declare-fun temp842_85 () (_ BitVec 64))
(declare-fun temp842_86 () (_ BitVec 64))
(declare-fun temp842_87 () (_ BitVec 64))
(declare-fun temp842_88 () (_ BitVec 64))
(declare-fun temp842_89 () (_ BitVec 64))
(declare-fun temp842_90 () (_ BitVec 64))
(declare-fun temp842_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp842_92 () (_ BitVec 64))
(declare-fun temp842_93 () (_ BitVec 64))
(declare-fun temp842_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp842_95 () (_ BitVec 64))
(declare-fun temp842_96 () (_ BitVec 64))
(declare-fun temp842_97 () (_ BitVec 64))
(declare-fun temp842_98 () (_ BitVec 64))
(declare-fun temp842_99 () (_ BitVec 64))
(declare-fun temp842_100 () (_ BitVec 64))
(declare-fun temp842_101 () (_ BitVec 64))
(declare-fun temp842_102 () (_ BitVec 64))
(declare-fun temp842_103 () (_ BitVec 64))
(declare-fun temp842_104 () (_ BitVec 64))
(declare-fun temp842_105 () (_ BitVec 64))
(declare-fun temp842_106 () (_ BitVec 64))
(declare-fun temp842_107 () (_ BitVec 64))
(declare-fun temp842_108 () (_ BitVec 64))
(declare-fun temp842_109 () (_ BitVec 64))
(declare-fun temp842_110 () (_ BitVec 64))
(declare-fun temp842_111 () (_ BitVec 64))
(declare-fun temp842_112 () (_ BitVec 64))
(declare-fun temp842_113 () (_ BitVec 64))
(declare-fun temp842_114 () (_ BitVec 64))
(declare-fun temp842_115 () (_ BitVec 64))
(declare-fun temp842_116 () (_ BitVec 64))
(declare-fun temp842_117 () (_ BitVec 64))
(declare-fun temp842_118 () (_ BitVec 64))
(declare-fun temp842_119 () (_ BitVec 64))
(declare-fun temp842_120 () (_ BitVec 64))
(declare-fun temp842_121 () (_ BitVec 64))
(declare-fun temp842_122 () (_ BitVec 64))
(declare-fun temp842_123 () (_ BitVec 64))
(declare-fun temp842_124 () (_ BitVec 64))
(declare-fun temp842_125 () (_ BitVec 64))
(declare-fun temp842_126 () (_ BitVec 64))
(declare-fun temp842_127 () (_ BitVec 64))
(declare-fun temp842_128 () (_ BitVec 64))
(declare-fun temp842_129 () (_ BitVec 64))
(declare-fun temp842_130 () (_ BitVec 64))
(declare-fun temp842_131 () (_ BitVec 64))
(declare-fun temp842_132 () (_ BitVec 64))
(declare-fun temp842_133 () (_ BitVec 64))
(declare-fun temp842_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp842_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp842_136 () (_ BitVec 64))
(declare-fun temp842_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp842_138 () (_ BitVec 64))
(declare-fun temp842_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp842_140 () (_ BitVec 64))
(declare-fun temp842_141 () (_ BitVec 64))
(declare-fun temp842_142 () (_ BitVec 64))
(declare-fun temp842_143 () (_ BitVec 64))
(declare-fun temp842_144 () (_ BitVec 64))
(declare-fun temp842_145 () (_ BitVec 64))
(declare-fun temp842_146 () (_ BitVec 64))
(declare-fun temp842_147 () (_ BitVec 64))
(declare-fun temp842_148 () (_ BitVec 64))
(declare-fun temp842_149 () (_ BitVec 64))
(declare-fun temp842_150 () (_ BitVec 64))
(declare-fun temp842_151 () (_ BitVec 64))
(declare-fun temp842_152 () (_ BitVec 64))
(declare-fun temp842_153 () (_ BitVec 64))
(declare-fun temp842_154 () (_ BitVec 64))
(declare-fun temp842_155 () (_ BitVec 64))
(declare-fun temp842_157 () (_ BitVec 64))
(declare-fun temp842_158 () (_ BitVec 64))
(declare-fun temp842_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp842_159 () (_ BitVec 64))
(declare-fun temp842_160 () (_ BitVec 64))
(declare-fun temp842_162 () (_ BitVec 64))
(declare-fun temp842_163 () (_ BitVec 64))
(declare-fun temp842_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp842_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp842_165 () (_ BitVec 64))
(declare-fun temp842_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp842_167 () (_ BitVec 64))
(declare-fun temp842_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp842_169 () (_ BitVec 64))
(declare-fun temp842_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp842_171 () (_ BitVec 64))
(declare-fun temp842_172 () (_ BitVec 64))
(declare-fun temp842_173 () (_ BitVec 64))
(declare-fun temp842_174 () (_ BitVec 64))
(declare-fun temp842_175 () (_ BitVec 64))
(declare-fun temp842_176 () (_ BitVec 64))
(declare-fun temp842_177 () (_ BitVec 64))
(declare-fun temp842_178 () (_ BitVec 64))
(declare-fun temp842_179 () (_ BitVec 64))
(declare-fun temp842_180 () (_ BitVec 64))
(declare-fun temp842_181 () (_ BitVec 64))
(declare-fun temp842_182 () (_ BitVec 64))
(declare-fun temp842_183 () (_ BitVec 64))
(declare-fun temp842_184 () (_ BitVec 64))
(declare-fun temp842_185 () (_ BitVec 64))
(declare-fun temp842_186 () (_ BitVec 64))
(declare-fun temp842_187 () (_ BitVec 64))
(declare-fun temp842_188 () (_ BitVec 64))
(declare-fun temp842_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp842_190 () (_ BitVec 64))
(declare-fun temp842_192 () (_ BitVec 64))
(declare-fun temp842_193 () (_ BitVec 64))
(declare-fun temp842_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp842_194 () (_ BitVec 64))
(declare-fun temp842_195 () (_ BitVec 64))
(declare-fun temp842_197 () (_ BitVec 64))
(declare-fun temp842_198 () (_ BitVec 64))
(declare-fun temp842_196 () (_ BitVec 64))
(declare-fun temp842_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp842_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp842_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp842_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp842_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp842_204 () (_ BitVec 64))
(declare-fun temp842_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp842_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp842_207 () (_ BitVec 64))
(declare-fun temp842_208 () (_ BitVec 64))
(declare-fun temp842_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp842_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp842_211 () (_ BitVec 64))
(declare-fun temp842_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp842_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp842_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp842_215 () (_ BitVec 64))
(assert (= temp842_1 #x0000000000000001))
(assert (= var77203 temp842_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp842_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp842_2)))
(assert (= temp842_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp842_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp842_4 #x0000000000000000))
(assert (= var210941 temp842_4))
(assert (= temp842_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp842_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp842_6 #x0000000000000000))
(assert (= var210986 temp842_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp842_7 #x0000000000000000))
(assert (= temp842_8 temp842_7))
(assert (= temp842_9 (select ARGNAME_padding_NAMEEND_VAL temp842_8)))
(assert (= temp842_10 #x0000000000000001))
(assert (= temp842_11 temp842_10))
(assert (= temp842_12 (select ARGNAME_padding_NAMEEND_VAL temp842_11)))
(assert (= temp842_13 #x0000000000000002))
(assert (= temp842_14 temp842_13))
(assert (= temp842_15 (select ARGNAME_padding_NAMEEND_VAL temp842_14)))
(assert (= temp842_16 #x0000000000000003))
(assert (= temp842_17 temp842_16))
(assert (= temp842_18 (select ARGNAME_padding_NAMEEND_VAL temp842_17)))
(assert (= temp842_19 #x0000000000000004))
(assert (= temp842_20 temp842_19))
(assert (= temp842_21 (select ARGNAME_padding_NAMEEND_VAL temp842_20)))
(assert (= temp842_22 #x0000000000000005))
(assert (= temp842_23 temp842_22))
(assert (= temp842_24 (select ARGNAME_padding_NAMEEND_VAL temp842_23)))
(assert (= temp842_25 #x0000000000000000))
(assert (= temp842_26 #x0000000000000000))
(assert (= temp842_27 temp842_26))
(assert (= temp842_28 (select ARGNAME_padding_NAMEEND_VAL temp842_27)))
(assert (= temp842_29 #x0000000000000000))
(assert (= temp842_30 #x0000000000000001))
(assert (= temp842_31 temp842_30))
(assert (= temp842_32 (select ARGNAME_padding_NAMEEND_VAL temp842_31)))
(assert (= temp842_33 #x0000000000000000))
(assert (= temp842_34 #x0000000000000002))
(assert (= temp842_35 temp842_34))
(assert (= temp842_36 (select ARGNAME_padding_NAMEEND_VAL temp842_35)))
(assert (= temp842_37 #x0000000000000000))
(assert (= temp842_38 #x0000000000000003))
(assert (= temp842_39 temp842_38))
(assert (= temp842_40 (select ARGNAME_padding_NAMEEND_VAL temp842_39)))
(assert (= temp842_41 #x0000000000000000))
(assert (= temp842_42 #x0000000000000004))
(assert (= temp842_43 temp842_42))
(assert (= temp842_44 (select ARGNAME_padding_NAMEEND_VAL temp842_43)))
(assert (= temp842_45 #x0000000000000000))
(assert (= temp842_46 #x0000000000000005))
(assert (= temp842_47 temp842_46))
(assert (= temp842_48 (select ARGNAME_padding_NAMEEND_VAL temp842_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp842_28 temp842_25)
             (bvslt temp842_32 temp842_29)
             (bvslt temp842_36 temp842_33)
             (bvslt temp842_40 temp842_37)
             (bvslt temp842_44 temp842_41)
             (bvslt temp842_48 temp842_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp842_49 #x0000000000000000))
(assert (= var1191714 temp842_49))
(assert (= temp842_50 #x0000000000000000))
(assert (= temp842_51 temp842_50))
(assert (= temp842_52 (select ARGNAME_output_padding_NAMEEND_VAL temp842_51)))
(assert (= temp842_53 #x0000000000000001))
(assert (= temp842_54 temp842_53))
(assert (= temp842_55 (select ARGNAME_output_padding_NAMEEND_VAL temp842_54)))
(assert (= temp842_56 #x0000000000000002))
(assert (= temp842_57 temp842_56))
(assert (= temp842_58 (select ARGNAME_output_padding_NAMEEND_VAL temp842_57)))
(assert (= temp842_59 #x0000000000000003))
(assert (= temp842_60 temp842_59))
(assert (= temp842_61 (select ARGNAME_output_padding_NAMEEND_VAL temp842_60)))
(assert (= temp842_62 #x0000000000000004))
(assert (= temp842_63 temp842_62))
(assert (= temp842_64 (select ARGNAME_output_padding_NAMEEND_VAL temp842_63)))
(assert (= temp842_65 #x0000000000000005))
(assert (= temp842_66 temp842_65))
(assert (= temp842_67 (select ARGNAME_output_padding_NAMEEND_VAL temp842_66)))
(assert (= temp842_68 #x0000000000000000))
(assert (= temp842_69 #x0000000000000000))
(assert (= temp842_70 temp842_69))
(assert (= temp842_71 (select ARGNAME_output_padding_NAMEEND_VAL temp842_70)))
(assert (= temp842_72 #x0000000000000000))
(assert (= temp842_73 #x0000000000000001))
(assert (= temp842_74 temp842_73))
(assert (= temp842_75 (select ARGNAME_output_padding_NAMEEND_VAL temp842_74)))
(assert (= temp842_76 #x0000000000000000))
(assert (= temp842_77 #x0000000000000002))
(assert (= temp842_78 temp842_77))
(assert (= temp842_79 (select ARGNAME_output_padding_NAMEEND_VAL temp842_78)))
(assert (= temp842_80 #x0000000000000000))
(assert (= temp842_81 #x0000000000000003))
(assert (= temp842_82 temp842_81))
(assert (= temp842_83 (select ARGNAME_output_padding_NAMEEND_VAL temp842_82)))
(assert (= temp842_84 #x0000000000000000))
(assert (= temp842_85 #x0000000000000004))
(assert (= temp842_86 temp842_85))
(assert (= temp842_87 (select ARGNAME_output_padding_NAMEEND_VAL temp842_86)))
(assert (= temp842_88 #x0000000000000000))
(assert (= temp842_89 #x0000000000000005))
(assert (= temp842_90 temp842_89))
(assert (= temp842_91 (select ARGNAME_output_padding_NAMEEND_VAL temp842_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp842_71 temp842_68)
             (bvslt temp842_75 temp842_72)
             (bvslt temp842_79 temp842_76)
             (bvslt temp842_83 temp842_80)
             (bvslt temp842_87 temp842_84)
             (bvslt temp842_91 temp842_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp842_92 #x0000000000000000))
(assert (= var1191725 temp842_92))
(assert (= temp842_93 #x0000000000000000))
(assert (= temp842_94 temp842_93))
(assert (= temp842_95 (select ARGNAME_stride_NAMEEND_VAL temp842_94)))
(assert (= temp842_96 #x0000000000000001))
(assert (= temp842_97 temp842_96))
(assert (= temp842_98 (select ARGNAME_stride_NAMEEND_VAL temp842_97)))
(assert (= temp842_99 #x0000000000000002))
(assert (= temp842_100 temp842_99))
(assert (= temp842_101 (select ARGNAME_stride_NAMEEND_VAL temp842_100)))
(assert (= temp842_102 #x0000000000000003))
(assert (= temp842_103 temp842_102))
(assert (= temp842_104 (select ARGNAME_stride_NAMEEND_VAL temp842_103)))
(assert (= temp842_105 #x0000000000000004))
(assert (= temp842_106 temp842_105))
(assert (= temp842_107 (select ARGNAME_stride_NAMEEND_VAL temp842_106)))
(assert (= temp842_108 #x0000000000000005))
(assert (= temp842_109 temp842_108))
(assert (= temp842_110 (select ARGNAME_stride_NAMEEND_VAL temp842_109)))
(assert (= temp842_111 #x0000000000000000))
(assert (= temp842_112 #x0000000000000000))
(assert (= temp842_113 temp842_112))
(assert (= temp842_114 (select ARGNAME_stride_NAMEEND_VAL temp842_113)))
(assert (= temp842_115 #x0000000000000000))
(assert (= temp842_116 #x0000000000000001))
(assert (= temp842_117 temp842_116))
(assert (= temp842_118 (select ARGNAME_stride_NAMEEND_VAL temp842_117)))
(assert (= temp842_119 #x0000000000000000))
(assert (= temp842_120 #x0000000000000002))
(assert (= temp842_121 temp842_120))
(assert (= temp842_122 (select ARGNAME_stride_NAMEEND_VAL temp842_121)))
(assert (= temp842_123 #x0000000000000000))
(assert (= temp842_124 #x0000000000000003))
(assert (= temp842_125 temp842_124))
(assert (= temp842_126 (select ARGNAME_stride_NAMEEND_VAL temp842_125)))
(assert (= temp842_127 #x0000000000000000))
(assert (= temp842_128 #x0000000000000004))
(assert (= temp842_129 temp842_128))
(assert (= temp842_130 (select ARGNAME_stride_NAMEEND_VAL temp842_129)))
(assert (= temp842_131 #x0000000000000000))
(assert (= temp842_132 #x0000000000000005))
(assert (= temp842_133 temp842_132))
(assert (= temp842_134 (select ARGNAME_stride_NAMEEND_VAL temp842_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp842_114 temp842_111)
             (bvsle temp842_118 temp842_115)
             (bvsle temp842_122 temp842_119)
             (bvsle temp842_126 temp842_123)
             (bvsle temp842_130 temp842_127)
             (bvsle temp842_134 temp842_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp842_135 #x0000000000000000))
(assert (= var1191735 temp842_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp842_136 #x0000000000000001))
(assert (= var1191747 temp842_136))
(assert (= temp842_137 #x0000000000000000))
(assert (= var1179826 temp842_137))
(assert (= temp842_138 #x0000000000000000))
(assert (= temp842_139 temp842_138))
(assert (= temp842_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp842_139)))
(assert (= temp842_141 #x0000000000000001))
(assert (= temp842_142 temp842_141))
(assert (= temp842_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp842_142)))
(assert (= temp842_144 #x0000000000000002))
(assert (= temp842_145 temp842_144))
(assert (= temp842_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp842_145)))
(assert (= temp842_147 #x0000000000000003))
(assert (= temp842_148 temp842_147))
(assert (= temp842_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp842_148)))
(assert (= temp842_150 #x0000000000000004))
(assert (= temp842_151 temp842_150))
(assert (= temp842_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp842_151)))
(assert (= temp842_153 #x0000000000000005))
(assert (= temp842_154 temp842_153))
(assert (= temp842_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp842_154)))
(assert (= temp842_157 var1179826))
(assert (= temp842_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp842_157)))
(assert (= temp842_156 temp842_158))
(assert (= var1191780
   (ite (bvslt temp842_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp842_159 #x0000000000000000))
(assert (= var1191780 temp842_159))
(assert (= temp842_160 #x0000000000000000))
(assert (= var1179826 temp842_160))
(assert (= temp842_162 var1179826))
(assert (= temp842_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp842_162)))
(assert (= temp842_161 temp842_163))
(assert (= var1191802 (bvsmod temp842_161 ARGNAME_groups_NAMEEND)))
(assert (= temp842_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp842_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp842_165 #x0000000000000001))
(assert (= var1191803 temp842_165))
(assert (= temp842_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp842_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp842_167 #x0000000000000001))
(assert (= var1191823 temp842_167))
(assert (= temp842_168 #x0000000000000001))
(assert (= var1180714 temp842_168))
(assert (= temp842_169 #x0000000000000000))
(assert (= temp842_170 temp842_169))
(assert (= temp842_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp842_170)))
(assert (= temp842_172 #x0000000000000001))
(assert (= temp842_173 temp842_172))
(assert (= temp842_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp842_173)))
(assert (= temp842_175 #x0000000000000002))
(assert (= temp842_176 temp842_175))
(assert (= temp842_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp842_176)))
(assert (= temp842_178 #x0000000000000003))
(assert (= temp842_179 temp842_178))
(assert (= temp842_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp842_179)))
(assert (= temp842_181 #x0000000000000004))
(assert (= temp842_182 temp842_181))
(assert (= temp842_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp842_182)))
(assert (= temp842_184 #x0000000000000005))
(assert (= temp842_185 temp842_184))
(assert (= temp842_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp842_185)))
(assert (= temp842_187 #x0000000000000000))
(assert (= temp842_188
   (ite (bvslt var1180714 temp842_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp842_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp842_188)))
(assert (= var1191831 temp842_189))
(assert (bvslt (ite (bvslt var1180714 temp842_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp842_190 #x0000000000000001))
(assert (= var1180714 temp842_190))
(assert (= temp842_192 var1180714))
(assert (= temp842_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp842_192)))
(assert (= temp842_191 temp842_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp842_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp842_194 #x0000000000000001))
(assert (= var1191836 temp842_194))
(assert (= temp842_195 #x0000000000000000))
(assert (= var1179826 temp842_195))
(assert (= temp842_197 var1179826))
(assert (= temp842_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp842_197)))
(assert (= temp842_196 temp842_198))
(assert (= temp842_199 #x0000000000000002))
(assert (= var1586025 temp842_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp842_200 #x0000000000000001))
(assert (= var1191993 temp842_200))
(assert (= temp842_201 #x0000000000000001))
(assert (= var2700303 temp842_201))
(assert (= temp842_202 #x0000000000000001))
(assert (= var2962447 temp842_202))
(assert (= temp842_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp842_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp842_204 #x0000000000000001))
(assert (= var211058 temp842_204))
(assert (= temp842_205 #x0000000000000001))
(assert (= var211188 temp842_205))
(assert (= var3879401 var211188))
(assert (= temp842_206 #x0000000000000000))
(assert (= var3866802 temp842_206))
(assert (= temp842_207 #x0000000000000000))
(assert (= temp842_208
   (ite (bvslt var3866802 temp842_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp842_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp842_208)))
(assert (= var3879420 temp842_209))
(assert (bvslt (ite (bvslt var3866802 temp842_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp842_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp842_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp842_211 #x0000000000000001))
(assert (= var3879421 temp842_211))
(assert (= temp842_212 #x0000000000000000))
(assert (= var4079423 temp842_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp842_213 #x0000000000000002))
(assert (= var4208259 temp842_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp842_214 #x0000000000000000))
(assert (= var4273820 temp842_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp842_215 #x0000000000000001))
(assert (= var211058 temp842_215))
(model-add temp842_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp842_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp842_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp842_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





