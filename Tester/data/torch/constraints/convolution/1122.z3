(declare-fun temp10226_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10226_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10226_3 () (_ BitVec 64))
(declare-fun temp10226_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10226_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10226_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10226_7 () (_ BitVec 64))
(declare-fun temp10226_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10226_9 () (_ BitVec 64))
(declare-fun temp10226_10 () (_ BitVec 64))
(declare-fun temp10226_11 () (_ BitVec 64))
(declare-fun temp10226_12 () (_ BitVec 64))
(declare-fun temp10226_13 () (_ BitVec 64))
(declare-fun temp10226_14 () (_ BitVec 64))
(declare-fun temp10226_15 () (_ BitVec 64))
(declare-fun temp10226_16 () (_ BitVec 64))
(declare-fun temp10226_17 () (_ BitVec 64))
(declare-fun temp10226_18 () (_ BitVec 64))
(declare-fun temp10226_19 () (_ BitVec 64))
(declare-fun temp10226_20 () (_ BitVec 64))
(declare-fun temp10226_21 () (_ BitVec 64))
(declare-fun temp10226_22 () (_ BitVec 64))
(declare-fun temp10226_23 () (_ BitVec 64))
(declare-fun temp10226_24 () (_ BitVec 64))
(declare-fun temp10226_25 () (_ BitVec 64))
(declare-fun temp10226_26 () (_ BitVec 64))
(declare-fun temp10226_27 () (_ BitVec 64))
(declare-fun temp10226_28 () (_ BitVec 64))
(declare-fun temp10226_29 () (_ BitVec 64))
(declare-fun temp10226_30 () (_ BitVec 64))
(declare-fun temp10226_31 () (_ BitVec 64))
(declare-fun temp10226_32 () (_ BitVec 64))
(declare-fun temp10226_33 () (_ BitVec 64))
(declare-fun temp10226_34 () (_ BitVec 64))
(declare-fun temp10226_35 () (_ BitVec 64))
(declare-fun temp10226_36 () (_ BitVec 64))
(declare-fun temp10226_37 () (_ BitVec 64))
(declare-fun temp10226_38 () (_ BitVec 64))
(declare-fun temp10226_39 () (_ BitVec 64))
(declare-fun temp10226_40 () (_ BitVec 64))
(declare-fun temp10226_41 () (_ BitVec 64))
(declare-fun temp10226_42 () (_ BitVec 64))
(declare-fun temp10226_43 () (_ BitVec 64))
(declare-fun temp10226_44 () (_ BitVec 64))
(declare-fun temp10226_45 () (_ BitVec 64))
(declare-fun temp10226_46 () (_ BitVec 64))
(declare-fun temp10226_47 () (_ BitVec 64))
(declare-fun temp10226_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10226_49 () (_ BitVec 64))
(declare-fun temp10226_50 () (_ BitVec 64))
(declare-fun temp10226_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10226_52 () (_ BitVec 64))
(declare-fun temp10226_53 () (_ BitVec 64))
(declare-fun temp10226_54 () (_ BitVec 64))
(declare-fun temp10226_55 () (_ BitVec 64))
(declare-fun temp10226_56 () (_ BitVec 64))
(declare-fun temp10226_57 () (_ BitVec 64))
(declare-fun temp10226_58 () (_ BitVec 64))
(declare-fun temp10226_59 () (_ BitVec 64))
(declare-fun temp10226_60 () (_ BitVec 64))
(declare-fun temp10226_61 () (_ BitVec 64))
(declare-fun temp10226_62 () (_ BitVec 64))
(declare-fun temp10226_63 () (_ BitVec 64))
(declare-fun temp10226_64 () (_ BitVec 64))
(declare-fun temp10226_65 () (_ BitVec 64))
(declare-fun temp10226_66 () (_ BitVec 64))
(declare-fun temp10226_67 () (_ BitVec 64))
(declare-fun temp10226_68 () (_ BitVec 64))
(declare-fun temp10226_69 () (_ BitVec 64))
(declare-fun temp10226_70 () (_ BitVec 64))
(declare-fun temp10226_71 () (_ BitVec 64))
(declare-fun temp10226_72 () (_ BitVec 64))
(declare-fun temp10226_73 () (_ BitVec 64))
(declare-fun temp10226_74 () (_ BitVec 64))
(declare-fun temp10226_75 () (_ BitVec 64))
(declare-fun temp10226_76 () (_ BitVec 64))
(declare-fun temp10226_77 () (_ BitVec 64))
(declare-fun temp10226_78 () (_ BitVec 64))
(declare-fun temp10226_79 () (_ BitVec 64))
(declare-fun temp10226_80 () (_ BitVec 64))
(declare-fun temp10226_81 () (_ BitVec 64))
(declare-fun temp10226_82 () (_ BitVec 64))
(declare-fun temp10226_83 () (_ BitVec 64))
(declare-fun temp10226_84 () (_ BitVec 64))
(declare-fun temp10226_85 () (_ BitVec 64))
(declare-fun temp10226_86 () (_ BitVec 64))
(declare-fun temp10226_87 () (_ BitVec 64))
(declare-fun temp10226_88 () (_ BitVec 64))
(declare-fun temp10226_89 () (_ BitVec 64))
(declare-fun temp10226_90 () (_ BitVec 64))
(declare-fun temp10226_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10226_92 () (_ BitVec 64))
(declare-fun temp10226_93 () (_ BitVec 64))
(declare-fun temp10226_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10226_95 () (_ BitVec 64))
(declare-fun temp10226_96 () (_ BitVec 64))
(declare-fun temp10226_97 () (_ BitVec 64))
(declare-fun temp10226_98 () (_ BitVec 64))
(declare-fun temp10226_99 () (_ BitVec 64))
(declare-fun temp10226_100 () (_ BitVec 64))
(declare-fun temp10226_101 () (_ BitVec 64))
(declare-fun temp10226_102 () (_ BitVec 64))
(declare-fun temp10226_103 () (_ BitVec 64))
(declare-fun temp10226_104 () (_ BitVec 64))
(declare-fun temp10226_105 () (_ BitVec 64))
(declare-fun temp10226_106 () (_ BitVec 64))
(declare-fun temp10226_107 () (_ BitVec 64))
(declare-fun temp10226_108 () (_ BitVec 64))
(declare-fun temp10226_109 () (_ BitVec 64))
(declare-fun temp10226_110 () (_ BitVec 64))
(declare-fun temp10226_111 () (_ BitVec 64))
(declare-fun temp10226_112 () (_ BitVec 64))
(declare-fun temp10226_113 () (_ BitVec 64))
(declare-fun temp10226_114 () (_ BitVec 64))
(declare-fun temp10226_115 () (_ BitVec 64))
(declare-fun temp10226_116 () (_ BitVec 64))
(declare-fun temp10226_117 () (_ BitVec 64))
(declare-fun temp10226_118 () (_ BitVec 64))
(declare-fun temp10226_119 () (_ BitVec 64))
(declare-fun temp10226_120 () (_ BitVec 64))
(declare-fun temp10226_121 () (_ BitVec 64))
(declare-fun temp10226_122 () (_ BitVec 64))
(declare-fun temp10226_123 () (_ BitVec 64))
(declare-fun temp10226_124 () (_ BitVec 64))
(declare-fun temp10226_125 () (_ BitVec 64))
(declare-fun temp10226_126 () (_ BitVec 64))
(declare-fun temp10226_127 () (_ BitVec 64))
(declare-fun temp10226_128 () (_ BitVec 64))
(declare-fun temp10226_129 () (_ BitVec 64))
(declare-fun temp10226_130 () (_ BitVec 64))
(declare-fun temp10226_131 () (_ BitVec 64))
(declare-fun temp10226_132 () (_ BitVec 64))
(declare-fun temp10226_133 () (_ BitVec 64))
(declare-fun temp10226_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10226_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10226_136 () (_ BitVec 64))
(declare-fun temp10226_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10226_138 () (_ BitVec 64))
(declare-fun temp10226_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10226_140 () (_ BitVec 64))
(declare-fun temp10226_141 () (_ BitVec 64))
(declare-fun temp10226_142 () (_ BitVec 64))
(declare-fun temp10226_143 () (_ BitVec 64))
(declare-fun temp10226_144 () (_ BitVec 64))
(declare-fun temp10226_145 () (_ BitVec 64))
(declare-fun temp10226_146 () (_ BitVec 64))
(declare-fun temp10226_147 () (_ BitVec 64))
(declare-fun temp10226_148 () (_ BitVec 64))
(declare-fun temp10226_149 () (_ BitVec 64))
(declare-fun temp10226_150 () (_ BitVec 64))
(declare-fun temp10226_151 () (_ BitVec 64))
(declare-fun temp10226_152 () (_ BitVec 64))
(declare-fun temp10226_153 () (_ BitVec 64))
(declare-fun temp10226_154 () (_ BitVec 64))
(declare-fun temp10226_155 () (_ BitVec 64))
(declare-fun temp10226_157 () (_ BitVec 64))
(declare-fun temp10226_158 () (_ BitVec 64))
(declare-fun temp10226_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10226_159 () (_ BitVec 64))
(declare-fun temp10226_160 () (_ BitVec 64))
(declare-fun temp10226_162 () (_ BitVec 64))
(declare-fun temp10226_163 () (_ BitVec 64))
(declare-fun temp10226_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10226_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10226_165 () (_ BitVec 64))
(declare-fun temp10226_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10226_167 () (_ BitVec 64))
(declare-fun temp10226_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10226_169 () (_ BitVec 64))
(declare-fun temp10226_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10226_171 () (_ BitVec 64))
(declare-fun temp10226_172 () (_ BitVec 64))
(declare-fun temp10226_173 () (_ BitVec 64))
(declare-fun temp10226_174 () (_ BitVec 64))
(declare-fun temp10226_175 () (_ BitVec 64))
(declare-fun temp10226_176 () (_ BitVec 64))
(declare-fun temp10226_177 () (_ BitVec 64))
(declare-fun temp10226_178 () (_ BitVec 64))
(declare-fun temp10226_179 () (_ BitVec 64))
(declare-fun temp10226_180 () (_ BitVec 64))
(declare-fun temp10226_181 () (_ BitVec 64))
(declare-fun temp10226_182 () (_ BitVec 64))
(declare-fun temp10226_183 () (_ BitVec 64))
(declare-fun temp10226_184 () (_ BitVec 64))
(declare-fun temp10226_185 () (_ BitVec 64))
(declare-fun temp10226_186 () (_ BitVec 64))
(declare-fun temp10226_187 () (_ BitVec 64))
(declare-fun temp10226_188 () (_ BitVec 64))
(declare-fun temp10226_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10226_190 () (_ BitVec 64))
(declare-fun temp10226_192 () (_ BitVec 64))
(declare-fun temp10226_193 () (_ BitVec 64))
(declare-fun temp10226_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10226_194 () (_ BitVec 64))
(declare-fun temp10226_195 () (_ BitVec 64))
(declare-fun temp10226_197 () (_ BitVec 64))
(declare-fun temp10226_198 () (_ BitVec 64))
(declare-fun temp10226_196 () (_ BitVec 64))
(declare-fun temp10226_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10226_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10226_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10226_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10226_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10226_204 () (_ BitVec 64))
(declare-fun temp10226_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10226_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10226_207 () (_ BitVec 64))
(declare-fun temp10226_208 () (_ BitVec 64))
(declare-fun temp10226_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10226_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10226_211 () (_ BitVec 64))
(declare-fun temp10226_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10226_213 () (_ BitVec 64))
(declare-fun temp10226_214 () (_ BitVec 64))
(declare-fun temp10226_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10226_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10226_217 () (_ BitVec 64))
(declare-fun temp10226_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10226_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10226_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var5321104 () (_ BitVec 64))
(declare-fun var5583248 () (_ BitVec 64))
(declare-fun temp10226_221 () (_ BitVec 64))
(assert (= temp10226_1 #x0000000000000001))
(assert (= var77203 temp10226_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10226_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10226_2)))
(assert (= temp10226_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10226_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10226_4 #x0000000000000000))
(assert (= var210941 temp10226_4))
(assert (= temp10226_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10226_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10226_6 #x0000000000000000))
(assert (= var210986 temp10226_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10226_7 #x0000000000000000))
(assert (= temp10226_8 temp10226_7))
(assert (= temp10226_9 (select ARGNAME_padding_NAMEEND_VAL temp10226_8)))
(assert (= temp10226_10 #x0000000000000001))
(assert (= temp10226_11 temp10226_10))
(assert (= temp10226_12 (select ARGNAME_padding_NAMEEND_VAL temp10226_11)))
(assert (= temp10226_13 #x0000000000000002))
(assert (= temp10226_14 temp10226_13))
(assert (= temp10226_15 (select ARGNAME_padding_NAMEEND_VAL temp10226_14)))
(assert (= temp10226_16 #x0000000000000003))
(assert (= temp10226_17 temp10226_16))
(assert (= temp10226_18 (select ARGNAME_padding_NAMEEND_VAL temp10226_17)))
(assert (= temp10226_19 #x0000000000000004))
(assert (= temp10226_20 temp10226_19))
(assert (= temp10226_21 (select ARGNAME_padding_NAMEEND_VAL temp10226_20)))
(assert (= temp10226_22 #x0000000000000005))
(assert (= temp10226_23 temp10226_22))
(assert (= temp10226_24 (select ARGNAME_padding_NAMEEND_VAL temp10226_23)))
(assert (= temp10226_25 #x0000000000000000))
(assert (= temp10226_26 #x0000000000000000))
(assert (= temp10226_27 temp10226_26))
(assert (= temp10226_28 (select ARGNAME_padding_NAMEEND_VAL temp10226_27)))
(assert (= temp10226_29 #x0000000000000000))
(assert (= temp10226_30 #x0000000000000001))
(assert (= temp10226_31 temp10226_30))
(assert (= temp10226_32 (select ARGNAME_padding_NAMEEND_VAL temp10226_31)))
(assert (= temp10226_33 #x0000000000000000))
(assert (= temp10226_34 #x0000000000000002))
(assert (= temp10226_35 temp10226_34))
(assert (= temp10226_36 (select ARGNAME_padding_NAMEEND_VAL temp10226_35)))
(assert (= temp10226_37 #x0000000000000000))
(assert (= temp10226_38 #x0000000000000003))
(assert (= temp10226_39 temp10226_38))
(assert (= temp10226_40 (select ARGNAME_padding_NAMEEND_VAL temp10226_39)))
(assert (= temp10226_41 #x0000000000000000))
(assert (= temp10226_42 #x0000000000000004))
(assert (= temp10226_43 temp10226_42))
(assert (= temp10226_44 (select ARGNAME_padding_NAMEEND_VAL temp10226_43)))
(assert (= temp10226_45 #x0000000000000000))
(assert (= temp10226_46 #x0000000000000005))
(assert (= temp10226_47 temp10226_46))
(assert (= temp10226_48 (select ARGNAME_padding_NAMEEND_VAL temp10226_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10226_28 temp10226_25)
             (bvslt temp10226_32 temp10226_29)
             (bvslt temp10226_36 temp10226_33)
             (bvslt temp10226_40 temp10226_37)
             (bvslt temp10226_44 temp10226_41)
             (bvslt temp10226_48 temp10226_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10226_49 #x0000000000000000))
(assert (= var1191714 temp10226_49))
(assert (= temp10226_50 #x0000000000000000))
(assert (= temp10226_51 temp10226_50))
(assert (= temp10226_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10226_51)))
(assert (= temp10226_53 #x0000000000000001))
(assert (= temp10226_54 temp10226_53))
(assert (= temp10226_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10226_54)))
(assert (= temp10226_56 #x0000000000000002))
(assert (= temp10226_57 temp10226_56))
(assert (= temp10226_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10226_57)))
(assert (= temp10226_59 #x0000000000000003))
(assert (= temp10226_60 temp10226_59))
(assert (= temp10226_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10226_60)))
(assert (= temp10226_62 #x0000000000000004))
(assert (= temp10226_63 temp10226_62))
(assert (= temp10226_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10226_63)))
(assert (= temp10226_65 #x0000000000000005))
(assert (= temp10226_66 temp10226_65))
(assert (= temp10226_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10226_66)))
(assert (= temp10226_68 #x0000000000000000))
(assert (= temp10226_69 #x0000000000000000))
(assert (= temp10226_70 temp10226_69))
(assert (= temp10226_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10226_70)))
(assert (= temp10226_72 #x0000000000000000))
(assert (= temp10226_73 #x0000000000000001))
(assert (= temp10226_74 temp10226_73))
(assert (= temp10226_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10226_74)))
(assert (= temp10226_76 #x0000000000000000))
(assert (= temp10226_77 #x0000000000000002))
(assert (= temp10226_78 temp10226_77))
(assert (= temp10226_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10226_78)))
(assert (= temp10226_80 #x0000000000000000))
(assert (= temp10226_81 #x0000000000000003))
(assert (= temp10226_82 temp10226_81))
(assert (= temp10226_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10226_82)))
(assert (= temp10226_84 #x0000000000000000))
(assert (= temp10226_85 #x0000000000000004))
(assert (= temp10226_86 temp10226_85))
(assert (= temp10226_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10226_86)))
(assert (= temp10226_88 #x0000000000000000))
(assert (= temp10226_89 #x0000000000000005))
(assert (= temp10226_90 temp10226_89))
(assert (= temp10226_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10226_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10226_71 temp10226_68)
             (bvslt temp10226_75 temp10226_72)
             (bvslt temp10226_79 temp10226_76)
             (bvslt temp10226_83 temp10226_80)
             (bvslt temp10226_87 temp10226_84)
             (bvslt temp10226_91 temp10226_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10226_92 #x0000000000000000))
(assert (= var1191725 temp10226_92))
(assert (= temp10226_93 #x0000000000000000))
(assert (= temp10226_94 temp10226_93))
(assert (= temp10226_95 (select ARGNAME_stride_NAMEEND_VAL temp10226_94)))
(assert (= temp10226_96 #x0000000000000001))
(assert (= temp10226_97 temp10226_96))
(assert (= temp10226_98 (select ARGNAME_stride_NAMEEND_VAL temp10226_97)))
(assert (= temp10226_99 #x0000000000000002))
(assert (= temp10226_100 temp10226_99))
(assert (= temp10226_101 (select ARGNAME_stride_NAMEEND_VAL temp10226_100)))
(assert (= temp10226_102 #x0000000000000003))
(assert (= temp10226_103 temp10226_102))
(assert (= temp10226_104 (select ARGNAME_stride_NAMEEND_VAL temp10226_103)))
(assert (= temp10226_105 #x0000000000000004))
(assert (= temp10226_106 temp10226_105))
(assert (= temp10226_107 (select ARGNAME_stride_NAMEEND_VAL temp10226_106)))
(assert (= temp10226_108 #x0000000000000005))
(assert (= temp10226_109 temp10226_108))
(assert (= temp10226_110 (select ARGNAME_stride_NAMEEND_VAL temp10226_109)))
(assert (= temp10226_111 #x0000000000000000))
(assert (= temp10226_112 #x0000000000000000))
(assert (= temp10226_113 temp10226_112))
(assert (= temp10226_114 (select ARGNAME_stride_NAMEEND_VAL temp10226_113)))
(assert (= temp10226_115 #x0000000000000000))
(assert (= temp10226_116 #x0000000000000001))
(assert (= temp10226_117 temp10226_116))
(assert (= temp10226_118 (select ARGNAME_stride_NAMEEND_VAL temp10226_117)))
(assert (= temp10226_119 #x0000000000000000))
(assert (= temp10226_120 #x0000000000000002))
(assert (= temp10226_121 temp10226_120))
(assert (= temp10226_122 (select ARGNAME_stride_NAMEEND_VAL temp10226_121)))
(assert (= temp10226_123 #x0000000000000000))
(assert (= temp10226_124 #x0000000000000003))
(assert (= temp10226_125 temp10226_124))
(assert (= temp10226_126 (select ARGNAME_stride_NAMEEND_VAL temp10226_125)))
(assert (= temp10226_127 #x0000000000000000))
(assert (= temp10226_128 #x0000000000000004))
(assert (= temp10226_129 temp10226_128))
(assert (= temp10226_130 (select ARGNAME_stride_NAMEEND_VAL temp10226_129)))
(assert (= temp10226_131 #x0000000000000000))
(assert (= temp10226_132 #x0000000000000005))
(assert (= temp10226_133 temp10226_132))
(assert (= temp10226_134 (select ARGNAME_stride_NAMEEND_VAL temp10226_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10226_114 temp10226_111)
             (bvsle temp10226_118 temp10226_115)
             (bvsle temp10226_122 temp10226_119)
             (bvsle temp10226_126 temp10226_123)
             (bvsle temp10226_130 temp10226_127)
             (bvsle temp10226_134 temp10226_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10226_135 #x0000000000000000))
(assert (= var1191735 temp10226_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10226_136 #x0000000000000001))
(assert (= var1191747 temp10226_136))
(assert (= temp10226_137 #x0000000000000000))
(assert (= var1179826 temp10226_137))
(assert (= temp10226_138 #x0000000000000000))
(assert (= temp10226_139 temp10226_138))
(assert (= temp10226_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10226_139)))
(assert (= temp10226_141 #x0000000000000001))
(assert (= temp10226_142 temp10226_141))
(assert (= temp10226_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10226_142)))
(assert (= temp10226_144 #x0000000000000002))
(assert (= temp10226_145 temp10226_144))
(assert (= temp10226_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10226_145)))
(assert (= temp10226_147 #x0000000000000003))
(assert (= temp10226_148 temp10226_147))
(assert (= temp10226_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10226_148)))
(assert (= temp10226_150 #x0000000000000004))
(assert (= temp10226_151 temp10226_150))
(assert (= temp10226_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10226_151)))
(assert (= temp10226_153 #x0000000000000005))
(assert (= temp10226_154 temp10226_153))
(assert (= temp10226_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10226_154)))
(assert (= temp10226_157 var1179826))
(assert (= temp10226_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10226_157)))
(assert (= temp10226_156 temp10226_158))
(assert (= var1191780
   (ite (bvslt temp10226_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10226_159 #x0000000000000000))
(assert (= var1191780 temp10226_159))
(assert (= temp10226_160 #x0000000000000000))
(assert (= var1179826 temp10226_160))
(assert (= temp10226_162 var1179826))
(assert (= temp10226_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10226_162)))
(assert (= temp10226_161 temp10226_163))
(assert (= var1191802 (bvsmod temp10226_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10226_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10226_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10226_165 #x0000000000000001))
(assert (= var1191803 temp10226_165))
(assert (= temp10226_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10226_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10226_167 #x0000000000000001))
(assert (= var1191823 temp10226_167))
(assert (= temp10226_168 #x0000000000000001))
(assert (= var1180714 temp10226_168))
(assert (= temp10226_169 #x0000000000000000))
(assert (= temp10226_170 temp10226_169))
(assert (= temp10226_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10226_170)))
(assert (= temp10226_172 #x0000000000000001))
(assert (= temp10226_173 temp10226_172))
(assert (= temp10226_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10226_173)))
(assert (= temp10226_175 #x0000000000000002))
(assert (= temp10226_176 temp10226_175))
(assert (= temp10226_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10226_176)))
(assert (= temp10226_178 #x0000000000000003))
(assert (= temp10226_179 temp10226_178))
(assert (= temp10226_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10226_179)))
(assert (= temp10226_181 #x0000000000000004))
(assert (= temp10226_182 temp10226_181))
(assert (= temp10226_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10226_182)))
(assert (= temp10226_184 #x0000000000000005))
(assert (= temp10226_185 temp10226_184))
(assert (= temp10226_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10226_185)))
(assert (= temp10226_187 #x0000000000000000))
(assert (= temp10226_188
   (ite (bvslt var1180714 temp10226_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10226_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10226_188)))
(assert (= var1191831 temp10226_189))
(assert (bvslt (ite (bvslt var1180714 temp10226_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10226_190 #x0000000000000001))
(assert (= var1180714 temp10226_190))
(assert (= temp10226_192 var1180714))
(assert (= temp10226_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10226_192)))
(assert (= temp10226_191 temp10226_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10226_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10226_194 #x0000000000000001))
(assert (= var1191836 temp10226_194))
(assert (= temp10226_195 #x0000000000000000))
(assert (= var1179826 temp10226_195))
(assert (= temp10226_197 var1179826))
(assert (= temp10226_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10226_197)))
(assert (= temp10226_196 temp10226_198))
(assert (= temp10226_199 #x0000000000000002))
(assert (= var1586025 temp10226_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10226_200 #x0000000000000001))
(assert (= var1191993 temp10226_200))
(assert (= temp10226_201 #x0000000000000001))
(assert (= var2700303 temp10226_201))
(assert (= temp10226_202 #x0000000000000001))
(assert (= var2962447 temp10226_202))
(assert (= temp10226_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10226_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10226_204 #x0000000000000001))
(assert (= var211058 temp10226_204))
(assert (= temp10226_205 #x0000000000000001))
(assert (= var211188 temp10226_205))
(assert (= var3879401 var211188))
(assert (= temp10226_206 #x0000000000000000))
(assert (= var3866802 temp10226_206))
(assert (= temp10226_207 #x0000000000000000))
(assert (= temp10226_208
   (ite (bvslt var3866802 temp10226_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10226_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10226_208)))
(assert (= var3879420 temp10226_209))
(assert (bvslt (ite (bvslt var3866802 temp10226_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10226_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10226_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10226_211 #x0000000000000000))
(assert (= var3879421 temp10226_211))
(assert (= temp10226_212 #x0000000000000001))
(assert (= var3867690 temp10226_212))
(assert (= temp10226_213 #x0000000000000000))
(assert (= temp10226_214
   (ite (bvslt var3867690 temp10226_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10226_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10226_214)))
(assert (= var3879423 temp10226_215))
(assert (bvslt (ite (bvslt var3867690 temp10226_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10226_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10226_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10226_217 #x0000000000000001))
(assert (= var3879424 temp10226_217))
(assert (= temp10226_218 #x0000000000000000))
(assert (= var4079423 temp10226_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10226_219 #x0000000000000002))
(assert (= var4208259 temp10226_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10226_220 #x0000000000000000))
(assert (= var4273820 temp10226_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var5321104 var211201))
(assert (= var5583248 var211201))
(assert (= temp10226_221 #x0000000000000001))
(assert (= var211058 temp10226_221))
(model-add temp10226_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10226_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10226_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10226_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





