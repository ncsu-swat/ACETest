(declare-fun temp10938_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10938_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10938_3 () (_ BitVec 64))
(declare-fun temp10938_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10938_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10938_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10938_7 () (_ BitVec 64))
(declare-fun temp10938_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10938_9 () (_ BitVec 64))
(declare-fun temp10938_10 () (_ BitVec 64))
(declare-fun temp10938_11 () (_ BitVec 64))
(declare-fun temp10938_12 () (_ BitVec 64))
(declare-fun temp10938_13 () (_ BitVec 64))
(declare-fun temp10938_14 () (_ BitVec 64))
(declare-fun temp10938_15 () (_ BitVec 64))
(declare-fun temp10938_16 () (_ BitVec 64))
(declare-fun temp10938_17 () (_ BitVec 64))
(declare-fun temp10938_18 () (_ BitVec 64))
(declare-fun temp10938_19 () (_ BitVec 64))
(declare-fun temp10938_20 () (_ BitVec 64))
(declare-fun temp10938_21 () (_ BitVec 64))
(declare-fun temp10938_22 () (_ BitVec 64))
(declare-fun temp10938_23 () (_ BitVec 64))
(declare-fun temp10938_24 () (_ BitVec 64))
(declare-fun temp10938_25 () (_ BitVec 64))
(declare-fun temp10938_26 () (_ BitVec 64))
(declare-fun temp10938_27 () (_ BitVec 64))
(declare-fun temp10938_28 () (_ BitVec 64))
(declare-fun temp10938_29 () (_ BitVec 64))
(declare-fun temp10938_30 () (_ BitVec 64))
(declare-fun temp10938_31 () (_ BitVec 64))
(declare-fun temp10938_32 () (_ BitVec 64))
(declare-fun temp10938_33 () (_ BitVec 64))
(declare-fun temp10938_34 () (_ BitVec 64))
(declare-fun temp10938_35 () (_ BitVec 64))
(declare-fun temp10938_36 () (_ BitVec 64))
(declare-fun temp10938_37 () (_ BitVec 64))
(declare-fun temp10938_38 () (_ BitVec 64))
(declare-fun temp10938_39 () (_ BitVec 64))
(declare-fun temp10938_40 () (_ BitVec 64))
(declare-fun temp10938_41 () (_ BitVec 64))
(declare-fun temp10938_42 () (_ BitVec 64))
(declare-fun temp10938_43 () (_ BitVec 64))
(declare-fun temp10938_44 () (_ BitVec 64))
(declare-fun temp10938_45 () (_ BitVec 64))
(declare-fun temp10938_46 () (_ BitVec 64))
(declare-fun temp10938_47 () (_ BitVec 64))
(declare-fun temp10938_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10938_49 () (_ BitVec 64))
(declare-fun temp10938_50 () (_ BitVec 64))
(declare-fun temp10938_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10938_52 () (_ BitVec 64))
(declare-fun temp10938_53 () (_ BitVec 64))
(declare-fun temp10938_54 () (_ BitVec 64))
(declare-fun temp10938_55 () (_ BitVec 64))
(declare-fun temp10938_56 () (_ BitVec 64))
(declare-fun temp10938_57 () (_ BitVec 64))
(declare-fun temp10938_58 () (_ BitVec 64))
(declare-fun temp10938_59 () (_ BitVec 64))
(declare-fun temp10938_60 () (_ BitVec 64))
(declare-fun temp10938_61 () (_ BitVec 64))
(declare-fun temp10938_62 () (_ BitVec 64))
(declare-fun temp10938_63 () (_ BitVec 64))
(declare-fun temp10938_64 () (_ BitVec 64))
(declare-fun temp10938_65 () (_ BitVec 64))
(declare-fun temp10938_66 () (_ BitVec 64))
(declare-fun temp10938_67 () (_ BitVec 64))
(declare-fun temp10938_68 () (_ BitVec 64))
(declare-fun temp10938_69 () (_ BitVec 64))
(declare-fun temp10938_70 () (_ BitVec 64))
(declare-fun temp10938_71 () (_ BitVec 64))
(declare-fun temp10938_72 () (_ BitVec 64))
(declare-fun temp10938_73 () (_ BitVec 64))
(declare-fun temp10938_74 () (_ BitVec 64))
(declare-fun temp10938_75 () (_ BitVec 64))
(declare-fun temp10938_76 () (_ BitVec 64))
(declare-fun temp10938_77 () (_ BitVec 64))
(declare-fun temp10938_78 () (_ BitVec 64))
(declare-fun temp10938_79 () (_ BitVec 64))
(declare-fun temp10938_80 () (_ BitVec 64))
(declare-fun temp10938_81 () (_ BitVec 64))
(declare-fun temp10938_82 () (_ BitVec 64))
(declare-fun temp10938_83 () (_ BitVec 64))
(declare-fun temp10938_84 () (_ BitVec 64))
(declare-fun temp10938_85 () (_ BitVec 64))
(declare-fun temp10938_86 () (_ BitVec 64))
(declare-fun temp10938_87 () (_ BitVec 64))
(declare-fun temp10938_88 () (_ BitVec 64))
(declare-fun temp10938_89 () (_ BitVec 64))
(declare-fun temp10938_90 () (_ BitVec 64))
(declare-fun temp10938_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10938_92 () (_ BitVec 64))
(declare-fun temp10938_93 () (_ BitVec 64))
(declare-fun temp10938_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10938_95 () (_ BitVec 64))
(declare-fun temp10938_96 () (_ BitVec 64))
(declare-fun temp10938_97 () (_ BitVec 64))
(declare-fun temp10938_98 () (_ BitVec 64))
(declare-fun temp10938_99 () (_ BitVec 64))
(declare-fun temp10938_100 () (_ BitVec 64))
(declare-fun temp10938_101 () (_ BitVec 64))
(declare-fun temp10938_102 () (_ BitVec 64))
(declare-fun temp10938_103 () (_ BitVec 64))
(declare-fun temp10938_104 () (_ BitVec 64))
(declare-fun temp10938_105 () (_ BitVec 64))
(declare-fun temp10938_106 () (_ BitVec 64))
(declare-fun temp10938_107 () (_ BitVec 64))
(declare-fun temp10938_108 () (_ BitVec 64))
(declare-fun temp10938_109 () (_ BitVec 64))
(declare-fun temp10938_110 () (_ BitVec 64))
(declare-fun temp10938_111 () (_ BitVec 64))
(declare-fun temp10938_112 () (_ BitVec 64))
(declare-fun temp10938_113 () (_ BitVec 64))
(declare-fun temp10938_114 () (_ BitVec 64))
(declare-fun temp10938_115 () (_ BitVec 64))
(declare-fun temp10938_116 () (_ BitVec 64))
(declare-fun temp10938_117 () (_ BitVec 64))
(declare-fun temp10938_118 () (_ BitVec 64))
(declare-fun temp10938_119 () (_ BitVec 64))
(declare-fun temp10938_120 () (_ BitVec 64))
(declare-fun temp10938_121 () (_ BitVec 64))
(declare-fun temp10938_122 () (_ BitVec 64))
(declare-fun temp10938_123 () (_ BitVec 64))
(declare-fun temp10938_124 () (_ BitVec 64))
(declare-fun temp10938_125 () (_ BitVec 64))
(declare-fun temp10938_126 () (_ BitVec 64))
(declare-fun temp10938_127 () (_ BitVec 64))
(declare-fun temp10938_128 () (_ BitVec 64))
(declare-fun temp10938_129 () (_ BitVec 64))
(declare-fun temp10938_130 () (_ BitVec 64))
(declare-fun temp10938_131 () (_ BitVec 64))
(declare-fun temp10938_132 () (_ BitVec 64))
(declare-fun temp10938_133 () (_ BitVec 64))
(declare-fun temp10938_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10938_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10938_136 () (_ BitVec 64))
(declare-fun temp10938_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10938_138 () (_ BitVec 64))
(declare-fun temp10938_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10938_140 () (_ BitVec 64))
(declare-fun temp10938_141 () (_ BitVec 64))
(declare-fun temp10938_142 () (_ BitVec 64))
(declare-fun temp10938_143 () (_ BitVec 64))
(declare-fun temp10938_144 () (_ BitVec 64))
(declare-fun temp10938_145 () (_ BitVec 64))
(declare-fun temp10938_146 () (_ BitVec 64))
(declare-fun temp10938_147 () (_ BitVec 64))
(declare-fun temp10938_148 () (_ BitVec 64))
(declare-fun temp10938_149 () (_ BitVec 64))
(declare-fun temp10938_150 () (_ BitVec 64))
(declare-fun temp10938_151 () (_ BitVec 64))
(declare-fun temp10938_152 () (_ BitVec 64))
(declare-fun temp10938_153 () (_ BitVec 64))
(declare-fun temp10938_154 () (_ BitVec 64))
(declare-fun temp10938_155 () (_ BitVec 64))
(declare-fun temp10938_157 () (_ BitVec 64))
(declare-fun temp10938_158 () (_ BitVec 64))
(declare-fun temp10938_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10938_159 () (_ BitVec 64))
(declare-fun temp10938_160 () (_ BitVec 64))
(declare-fun temp10938_162 () (_ BitVec 64))
(declare-fun temp10938_163 () (_ BitVec 64))
(declare-fun temp10938_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10938_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10938_165 () (_ BitVec 64))
(declare-fun temp10938_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10938_167 () (_ BitVec 64))
(declare-fun temp10938_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10938_169 () (_ BitVec 64))
(declare-fun temp10938_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10938_171 () (_ BitVec 64))
(declare-fun temp10938_172 () (_ BitVec 64))
(declare-fun temp10938_173 () (_ BitVec 64))
(declare-fun temp10938_174 () (_ BitVec 64))
(declare-fun temp10938_175 () (_ BitVec 64))
(declare-fun temp10938_176 () (_ BitVec 64))
(declare-fun temp10938_177 () (_ BitVec 64))
(declare-fun temp10938_178 () (_ BitVec 64))
(declare-fun temp10938_179 () (_ BitVec 64))
(declare-fun temp10938_180 () (_ BitVec 64))
(declare-fun temp10938_181 () (_ BitVec 64))
(declare-fun temp10938_182 () (_ BitVec 64))
(declare-fun temp10938_183 () (_ BitVec 64))
(declare-fun temp10938_184 () (_ BitVec 64))
(declare-fun temp10938_185 () (_ BitVec 64))
(declare-fun temp10938_186 () (_ BitVec 64))
(declare-fun temp10938_187 () (_ BitVec 64))
(declare-fun temp10938_188 () (_ BitVec 64))
(declare-fun temp10938_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10938_190 () (_ BitVec 64))
(declare-fun temp10938_192 () (_ BitVec 64))
(declare-fun temp10938_193 () (_ BitVec 64))
(declare-fun temp10938_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10938_194 () (_ BitVec 64))
(declare-fun temp10938_195 () (_ BitVec 64))
(declare-fun temp10938_197 () (_ BitVec 64))
(declare-fun temp10938_198 () (_ BitVec 64))
(declare-fun temp10938_196 () (_ BitVec 64))
(declare-fun temp10938_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10938_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10938_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10938_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10938_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10938_204 () (_ BitVec 64))
(declare-fun temp10938_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10938_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10938_207 () (_ BitVec 64))
(declare-fun temp10938_208 () (_ BitVec 64))
(declare-fun temp10938_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10938_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10938_211 () (_ BitVec 64))
(declare-fun temp10938_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10938_213 () (_ BitVec 64))
(declare-fun temp10938_214 () (_ BitVec 64))
(declare-fun temp10938_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10938_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10938_217 () (_ BitVec 64))
(declare-fun temp10938_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10938_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10938_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp10938_221 () (_ BitVec 64))
(assert (= temp10938_1 #x0000000000000001))
(assert (= var77203 temp10938_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10938_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10938_2)))
(assert (= temp10938_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10938_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10938_4 #x0000000000000000))
(assert (= var210941 temp10938_4))
(assert (= temp10938_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10938_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10938_6 #x0000000000000000))
(assert (= var210986 temp10938_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10938_7 #x0000000000000000))
(assert (= temp10938_8 temp10938_7))
(assert (= temp10938_9 (select ARGNAME_padding_NAMEEND_VAL temp10938_8)))
(assert (= temp10938_10 #x0000000000000001))
(assert (= temp10938_11 temp10938_10))
(assert (= temp10938_12 (select ARGNAME_padding_NAMEEND_VAL temp10938_11)))
(assert (= temp10938_13 #x0000000000000002))
(assert (= temp10938_14 temp10938_13))
(assert (= temp10938_15 (select ARGNAME_padding_NAMEEND_VAL temp10938_14)))
(assert (= temp10938_16 #x0000000000000003))
(assert (= temp10938_17 temp10938_16))
(assert (= temp10938_18 (select ARGNAME_padding_NAMEEND_VAL temp10938_17)))
(assert (= temp10938_19 #x0000000000000004))
(assert (= temp10938_20 temp10938_19))
(assert (= temp10938_21 (select ARGNAME_padding_NAMEEND_VAL temp10938_20)))
(assert (= temp10938_22 #x0000000000000005))
(assert (= temp10938_23 temp10938_22))
(assert (= temp10938_24 (select ARGNAME_padding_NAMEEND_VAL temp10938_23)))
(assert (= temp10938_25 #x0000000000000000))
(assert (= temp10938_26 #x0000000000000000))
(assert (= temp10938_27 temp10938_26))
(assert (= temp10938_28 (select ARGNAME_padding_NAMEEND_VAL temp10938_27)))
(assert (= temp10938_29 #x0000000000000000))
(assert (= temp10938_30 #x0000000000000001))
(assert (= temp10938_31 temp10938_30))
(assert (= temp10938_32 (select ARGNAME_padding_NAMEEND_VAL temp10938_31)))
(assert (= temp10938_33 #x0000000000000000))
(assert (= temp10938_34 #x0000000000000002))
(assert (= temp10938_35 temp10938_34))
(assert (= temp10938_36 (select ARGNAME_padding_NAMEEND_VAL temp10938_35)))
(assert (= temp10938_37 #x0000000000000000))
(assert (= temp10938_38 #x0000000000000003))
(assert (= temp10938_39 temp10938_38))
(assert (= temp10938_40 (select ARGNAME_padding_NAMEEND_VAL temp10938_39)))
(assert (= temp10938_41 #x0000000000000000))
(assert (= temp10938_42 #x0000000000000004))
(assert (= temp10938_43 temp10938_42))
(assert (= temp10938_44 (select ARGNAME_padding_NAMEEND_VAL temp10938_43)))
(assert (= temp10938_45 #x0000000000000000))
(assert (= temp10938_46 #x0000000000000005))
(assert (= temp10938_47 temp10938_46))
(assert (= temp10938_48 (select ARGNAME_padding_NAMEEND_VAL temp10938_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10938_28 temp10938_25)
             (bvslt temp10938_32 temp10938_29)
             (bvslt temp10938_36 temp10938_33)
             (bvslt temp10938_40 temp10938_37)
             (bvslt temp10938_44 temp10938_41)
             (bvslt temp10938_48 temp10938_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10938_49 #x0000000000000000))
(assert (= var1191714 temp10938_49))
(assert (= temp10938_50 #x0000000000000000))
(assert (= temp10938_51 temp10938_50))
(assert (= temp10938_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10938_51)))
(assert (= temp10938_53 #x0000000000000001))
(assert (= temp10938_54 temp10938_53))
(assert (= temp10938_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10938_54)))
(assert (= temp10938_56 #x0000000000000002))
(assert (= temp10938_57 temp10938_56))
(assert (= temp10938_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10938_57)))
(assert (= temp10938_59 #x0000000000000003))
(assert (= temp10938_60 temp10938_59))
(assert (= temp10938_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10938_60)))
(assert (= temp10938_62 #x0000000000000004))
(assert (= temp10938_63 temp10938_62))
(assert (= temp10938_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10938_63)))
(assert (= temp10938_65 #x0000000000000005))
(assert (= temp10938_66 temp10938_65))
(assert (= temp10938_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10938_66)))
(assert (= temp10938_68 #x0000000000000000))
(assert (= temp10938_69 #x0000000000000000))
(assert (= temp10938_70 temp10938_69))
(assert (= temp10938_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10938_70)))
(assert (= temp10938_72 #x0000000000000000))
(assert (= temp10938_73 #x0000000000000001))
(assert (= temp10938_74 temp10938_73))
(assert (= temp10938_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10938_74)))
(assert (= temp10938_76 #x0000000000000000))
(assert (= temp10938_77 #x0000000000000002))
(assert (= temp10938_78 temp10938_77))
(assert (= temp10938_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10938_78)))
(assert (= temp10938_80 #x0000000000000000))
(assert (= temp10938_81 #x0000000000000003))
(assert (= temp10938_82 temp10938_81))
(assert (= temp10938_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10938_82)))
(assert (= temp10938_84 #x0000000000000000))
(assert (= temp10938_85 #x0000000000000004))
(assert (= temp10938_86 temp10938_85))
(assert (= temp10938_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10938_86)))
(assert (= temp10938_88 #x0000000000000000))
(assert (= temp10938_89 #x0000000000000005))
(assert (= temp10938_90 temp10938_89))
(assert (= temp10938_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10938_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10938_71 temp10938_68)
             (bvslt temp10938_75 temp10938_72)
             (bvslt temp10938_79 temp10938_76)
             (bvslt temp10938_83 temp10938_80)
             (bvslt temp10938_87 temp10938_84)
             (bvslt temp10938_91 temp10938_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10938_92 #x0000000000000000))
(assert (= var1191725 temp10938_92))
(assert (= temp10938_93 #x0000000000000000))
(assert (= temp10938_94 temp10938_93))
(assert (= temp10938_95 (select ARGNAME_stride_NAMEEND_VAL temp10938_94)))
(assert (= temp10938_96 #x0000000000000001))
(assert (= temp10938_97 temp10938_96))
(assert (= temp10938_98 (select ARGNAME_stride_NAMEEND_VAL temp10938_97)))
(assert (= temp10938_99 #x0000000000000002))
(assert (= temp10938_100 temp10938_99))
(assert (= temp10938_101 (select ARGNAME_stride_NAMEEND_VAL temp10938_100)))
(assert (= temp10938_102 #x0000000000000003))
(assert (= temp10938_103 temp10938_102))
(assert (= temp10938_104 (select ARGNAME_stride_NAMEEND_VAL temp10938_103)))
(assert (= temp10938_105 #x0000000000000004))
(assert (= temp10938_106 temp10938_105))
(assert (= temp10938_107 (select ARGNAME_stride_NAMEEND_VAL temp10938_106)))
(assert (= temp10938_108 #x0000000000000005))
(assert (= temp10938_109 temp10938_108))
(assert (= temp10938_110 (select ARGNAME_stride_NAMEEND_VAL temp10938_109)))
(assert (= temp10938_111 #x0000000000000000))
(assert (= temp10938_112 #x0000000000000000))
(assert (= temp10938_113 temp10938_112))
(assert (= temp10938_114 (select ARGNAME_stride_NAMEEND_VAL temp10938_113)))
(assert (= temp10938_115 #x0000000000000000))
(assert (= temp10938_116 #x0000000000000001))
(assert (= temp10938_117 temp10938_116))
(assert (= temp10938_118 (select ARGNAME_stride_NAMEEND_VAL temp10938_117)))
(assert (= temp10938_119 #x0000000000000000))
(assert (= temp10938_120 #x0000000000000002))
(assert (= temp10938_121 temp10938_120))
(assert (= temp10938_122 (select ARGNAME_stride_NAMEEND_VAL temp10938_121)))
(assert (= temp10938_123 #x0000000000000000))
(assert (= temp10938_124 #x0000000000000003))
(assert (= temp10938_125 temp10938_124))
(assert (= temp10938_126 (select ARGNAME_stride_NAMEEND_VAL temp10938_125)))
(assert (= temp10938_127 #x0000000000000000))
(assert (= temp10938_128 #x0000000000000004))
(assert (= temp10938_129 temp10938_128))
(assert (= temp10938_130 (select ARGNAME_stride_NAMEEND_VAL temp10938_129)))
(assert (= temp10938_131 #x0000000000000000))
(assert (= temp10938_132 #x0000000000000005))
(assert (= temp10938_133 temp10938_132))
(assert (= temp10938_134 (select ARGNAME_stride_NAMEEND_VAL temp10938_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10938_114 temp10938_111)
             (bvsle temp10938_118 temp10938_115)
             (bvsle temp10938_122 temp10938_119)
             (bvsle temp10938_126 temp10938_123)
             (bvsle temp10938_130 temp10938_127)
             (bvsle temp10938_134 temp10938_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10938_135 #x0000000000000000))
(assert (= var1191735 temp10938_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10938_136 #x0000000000000001))
(assert (= var1191747 temp10938_136))
(assert (= temp10938_137 #x0000000000000000))
(assert (= var1179826 temp10938_137))
(assert (= temp10938_138 #x0000000000000000))
(assert (= temp10938_139 temp10938_138))
(assert (= temp10938_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10938_139)))
(assert (= temp10938_141 #x0000000000000001))
(assert (= temp10938_142 temp10938_141))
(assert (= temp10938_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10938_142)))
(assert (= temp10938_144 #x0000000000000002))
(assert (= temp10938_145 temp10938_144))
(assert (= temp10938_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10938_145)))
(assert (= temp10938_147 #x0000000000000003))
(assert (= temp10938_148 temp10938_147))
(assert (= temp10938_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10938_148)))
(assert (= temp10938_150 #x0000000000000004))
(assert (= temp10938_151 temp10938_150))
(assert (= temp10938_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10938_151)))
(assert (= temp10938_153 #x0000000000000005))
(assert (= temp10938_154 temp10938_153))
(assert (= temp10938_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10938_154)))
(assert (= temp10938_157 var1179826))
(assert (= temp10938_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10938_157)))
(assert (= temp10938_156 temp10938_158))
(assert (= var1191780
   (ite (bvslt temp10938_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10938_159 #x0000000000000000))
(assert (= var1191780 temp10938_159))
(assert (= temp10938_160 #x0000000000000000))
(assert (= var1179826 temp10938_160))
(assert (= temp10938_162 var1179826))
(assert (= temp10938_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10938_162)))
(assert (= temp10938_161 temp10938_163))
(assert (= var1191802 (bvsmod temp10938_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10938_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10938_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10938_165 #x0000000000000001))
(assert (= var1191803 temp10938_165))
(assert (= temp10938_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10938_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10938_167 #x0000000000000001))
(assert (= var1191823 temp10938_167))
(assert (= temp10938_168 #x0000000000000001))
(assert (= var1180714 temp10938_168))
(assert (= temp10938_169 #x0000000000000000))
(assert (= temp10938_170 temp10938_169))
(assert (= temp10938_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10938_170)))
(assert (= temp10938_172 #x0000000000000001))
(assert (= temp10938_173 temp10938_172))
(assert (= temp10938_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10938_173)))
(assert (= temp10938_175 #x0000000000000002))
(assert (= temp10938_176 temp10938_175))
(assert (= temp10938_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10938_176)))
(assert (= temp10938_178 #x0000000000000003))
(assert (= temp10938_179 temp10938_178))
(assert (= temp10938_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10938_179)))
(assert (= temp10938_181 #x0000000000000004))
(assert (= temp10938_182 temp10938_181))
(assert (= temp10938_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10938_182)))
(assert (= temp10938_184 #x0000000000000005))
(assert (= temp10938_185 temp10938_184))
(assert (= temp10938_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10938_185)))
(assert (= temp10938_187 #x0000000000000000))
(assert (= temp10938_188
   (ite (bvslt var1180714 temp10938_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10938_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10938_188)))
(assert (= var1191831 temp10938_189))
(assert (bvslt (ite (bvslt var1180714 temp10938_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10938_190 #x0000000000000001))
(assert (= var1180714 temp10938_190))
(assert (= temp10938_192 var1180714))
(assert (= temp10938_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10938_192)))
(assert (= temp10938_191 temp10938_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10938_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10938_194 #x0000000000000001))
(assert (= var1191836 temp10938_194))
(assert (= temp10938_195 #x0000000000000000))
(assert (= var1179826 temp10938_195))
(assert (= temp10938_197 var1179826))
(assert (= temp10938_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10938_197)))
(assert (= temp10938_196 temp10938_198))
(assert (= temp10938_199 #x0000000000000002))
(assert (= var1586025 temp10938_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10938_200 #x0000000000000001))
(assert (= var1191993 temp10938_200))
(assert (= temp10938_201 #x0000000000000001))
(assert (= var2700303 temp10938_201))
(assert (= temp10938_202 #x0000000000000001))
(assert (= var2962447 temp10938_202))
(assert (= temp10938_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10938_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10938_204 #x0000000000000001))
(assert (= var211058 temp10938_204))
(assert (= temp10938_205 #x0000000000000001))
(assert (= var211188 temp10938_205))
(assert (= var3879401 var211188))
(assert (= temp10938_206 #x0000000000000000))
(assert (= var3866802 temp10938_206))
(assert (= temp10938_207 #x0000000000000000))
(assert (= temp10938_208
   (ite (bvslt var3866802 temp10938_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10938_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10938_208)))
(assert (= var3879420 temp10938_209))
(assert (bvslt (ite (bvslt var3866802 temp10938_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10938_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10938_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10938_211 #x0000000000000000))
(assert (= var3879421 temp10938_211))
(assert (= temp10938_212 #x0000000000000001))
(assert (= var3867690 temp10938_212))
(assert (= temp10938_213 #x0000000000000000))
(assert (= temp10938_214
   (ite (bvslt var3867690 temp10938_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10938_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10938_214)))
(assert (= var3879423 temp10938_215))
(assert (bvslt (ite (bvslt var3867690 temp10938_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10938_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10938_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10938_217 #x0000000000000001))
(assert (= var3879424 temp10938_217))
(assert (= temp10938_218 #x0000000000000000))
(assert (= var4133117 temp10938_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10938_219 #x0000000000000002))
(assert (= var4339331 temp10938_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10938_220 #x0000000000000000))
(assert (= var4404892 temp10938_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp10938_221 #x0000000000000001))
(assert (= var211058 temp10938_221))
(model-add temp10938_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10938_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10938_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10938_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))



