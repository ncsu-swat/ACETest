(declare-fun temp10150_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10150_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10150_3 () (_ BitVec 64))
(declare-fun temp10150_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10150_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10150_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10150_7 () (_ BitVec 64))
(declare-fun temp10150_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10150_9 () (_ BitVec 64))
(declare-fun temp10150_10 () (_ BitVec 64))
(declare-fun temp10150_11 () (_ BitVec 64))
(declare-fun temp10150_12 () (_ BitVec 64))
(declare-fun temp10150_13 () (_ BitVec 64))
(declare-fun temp10150_14 () (_ BitVec 64))
(declare-fun temp10150_15 () (_ BitVec 64))
(declare-fun temp10150_16 () (_ BitVec 64))
(declare-fun temp10150_17 () (_ BitVec 64))
(declare-fun temp10150_18 () (_ BitVec 64))
(declare-fun temp10150_19 () (_ BitVec 64))
(declare-fun temp10150_20 () (_ BitVec 64))
(declare-fun temp10150_21 () (_ BitVec 64))
(declare-fun temp10150_22 () (_ BitVec 64))
(declare-fun temp10150_23 () (_ BitVec 64))
(declare-fun temp10150_24 () (_ BitVec 64))
(declare-fun temp10150_25 () (_ BitVec 64))
(declare-fun temp10150_26 () (_ BitVec 64))
(declare-fun temp10150_27 () (_ BitVec 64))
(declare-fun temp10150_28 () (_ BitVec 64))
(declare-fun temp10150_29 () (_ BitVec 64))
(declare-fun temp10150_30 () (_ BitVec 64))
(declare-fun temp10150_31 () (_ BitVec 64))
(declare-fun temp10150_32 () (_ BitVec 64))
(declare-fun temp10150_33 () (_ BitVec 64))
(declare-fun temp10150_34 () (_ BitVec 64))
(declare-fun temp10150_35 () (_ BitVec 64))
(declare-fun temp10150_36 () (_ BitVec 64))
(declare-fun temp10150_37 () (_ BitVec 64))
(declare-fun temp10150_38 () (_ BitVec 64))
(declare-fun temp10150_39 () (_ BitVec 64))
(declare-fun temp10150_40 () (_ BitVec 64))
(declare-fun temp10150_41 () (_ BitVec 64))
(declare-fun temp10150_42 () (_ BitVec 64))
(declare-fun temp10150_43 () (_ BitVec 64))
(declare-fun temp10150_44 () (_ BitVec 64))
(declare-fun temp10150_45 () (_ BitVec 64))
(declare-fun temp10150_46 () (_ BitVec 64))
(declare-fun temp10150_47 () (_ BitVec 64))
(declare-fun temp10150_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10150_49 () (_ BitVec 64))
(declare-fun temp10150_50 () (_ BitVec 64))
(declare-fun temp10150_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10150_52 () (_ BitVec 64))
(declare-fun temp10150_53 () (_ BitVec 64))
(declare-fun temp10150_54 () (_ BitVec 64))
(declare-fun temp10150_55 () (_ BitVec 64))
(declare-fun temp10150_56 () (_ BitVec 64))
(declare-fun temp10150_57 () (_ BitVec 64))
(declare-fun temp10150_58 () (_ BitVec 64))
(declare-fun temp10150_59 () (_ BitVec 64))
(declare-fun temp10150_60 () (_ BitVec 64))
(declare-fun temp10150_61 () (_ BitVec 64))
(declare-fun temp10150_62 () (_ BitVec 64))
(declare-fun temp10150_63 () (_ BitVec 64))
(declare-fun temp10150_64 () (_ BitVec 64))
(declare-fun temp10150_65 () (_ BitVec 64))
(declare-fun temp10150_66 () (_ BitVec 64))
(declare-fun temp10150_67 () (_ BitVec 64))
(declare-fun temp10150_68 () (_ BitVec 64))
(declare-fun temp10150_69 () (_ BitVec 64))
(declare-fun temp10150_70 () (_ BitVec 64))
(declare-fun temp10150_71 () (_ BitVec 64))
(declare-fun temp10150_72 () (_ BitVec 64))
(declare-fun temp10150_73 () (_ BitVec 64))
(declare-fun temp10150_74 () (_ BitVec 64))
(declare-fun temp10150_75 () (_ BitVec 64))
(declare-fun temp10150_76 () (_ BitVec 64))
(declare-fun temp10150_77 () (_ BitVec 64))
(declare-fun temp10150_78 () (_ BitVec 64))
(declare-fun temp10150_79 () (_ BitVec 64))
(declare-fun temp10150_80 () (_ BitVec 64))
(declare-fun temp10150_81 () (_ BitVec 64))
(declare-fun temp10150_82 () (_ BitVec 64))
(declare-fun temp10150_83 () (_ BitVec 64))
(declare-fun temp10150_84 () (_ BitVec 64))
(declare-fun temp10150_85 () (_ BitVec 64))
(declare-fun temp10150_86 () (_ BitVec 64))
(declare-fun temp10150_87 () (_ BitVec 64))
(declare-fun temp10150_88 () (_ BitVec 64))
(declare-fun temp10150_89 () (_ BitVec 64))
(declare-fun temp10150_90 () (_ BitVec 64))
(declare-fun temp10150_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10150_92 () (_ BitVec 64))
(declare-fun temp10150_93 () (_ BitVec 64))
(declare-fun temp10150_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10150_95 () (_ BitVec 64))
(declare-fun temp10150_96 () (_ BitVec 64))
(declare-fun temp10150_97 () (_ BitVec 64))
(declare-fun temp10150_98 () (_ BitVec 64))
(declare-fun temp10150_99 () (_ BitVec 64))
(declare-fun temp10150_100 () (_ BitVec 64))
(declare-fun temp10150_101 () (_ BitVec 64))
(declare-fun temp10150_102 () (_ BitVec 64))
(declare-fun temp10150_103 () (_ BitVec 64))
(declare-fun temp10150_104 () (_ BitVec 64))
(declare-fun temp10150_105 () (_ BitVec 64))
(declare-fun temp10150_106 () (_ BitVec 64))
(declare-fun temp10150_107 () (_ BitVec 64))
(declare-fun temp10150_108 () (_ BitVec 64))
(declare-fun temp10150_109 () (_ BitVec 64))
(declare-fun temp10150_110 () (_ BitVec 64))
(declare-fun temp10150_111 () (_ BitVec 64))
(declare-fun temp10150_112 () (_ BitVec 64))
(declare-fun temp10150_113 () (_ BitVec 64))
(declare-fun temp10150_114 () (_ BitVec 64))
(declare-fun temp10150_115 () (_ BitVec 64))
(declare-fun temp10150_116 () (_ BitVec 64))
(declare-fun temp10150_117 () (_ BitVec 64))
(declare-fun temp10150_118 () (_ BitVec 64))
(declare-fun temp10150_119 () (_ BitVec 64))
(declare-fun temp10150_120 () (_ BitVec 64))
(declare-fun temp10150_121 () (_ BitVec 64))
(declare-fun temp10150_122 () (_ BitVec 64))
(declare-fun temp10150_123 () (_ BitVec 64))
(declare-fun temp10150_124 () (_ BitVec 64))
(declare-fun temp10150_125 () (_ BitVec 64))
(declare-fun temp10150_126 () (_ BitVec 64))
(declare-fun temp10150_127 () (_ BitVec 64))
(declare-fun temp10150_128 () (_ BitVec 64))
(declare-fun temp10150_129 () (_ BitVec 64))
(declare-fun temp10150_130 () (_ BitVec 64))
(declare-fun temp10150_131 () (_ BitVec 64))
(declare-fun temp10150_132 () (_ BitVec 64))
(declare-fun temp10150_133 () (_ BitVec 64))
(declare-fun temp10150_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10150_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10150_136 () (_ BitVec 64))
(declare-fun temp10150_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10150_138 () (_ BitVec 64))
(declare-fun temp10150_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10150_140 () (_ BitVec 64))
(declare-fun temp10150_141 () (_ BitVec 64))
(declare-fun temp10150_142 () (_ BitVec 64))
(declare-fun temp10150_143 () (_ BitVec 64))
(declare-fun temp10150_144 () (_ BitVec 64))
(declare-fun temp10150_145 () (_ BitVec 64))
(declare-fun temp10150_146 () (_ BitVec 64))
(declare-fun temp10150_147 () (_ BitVec 64))
(declare-fun temp10150_148 () (_ BitVec 64))
(declare-fun temp10150_149 () (_ BitVec 64))
(declare-fun temp10150_150 () (_ BitVec 64))
(declare-fun temp10150_151 () (_ BitVec 64))
(declare-fun temp10150_152 () (_ BitVec 64))
(declare-fun temp10150_153 () (_ BitVec 64))
(declare-fun temp10150_154 () (_ BitVec 64))
(declare-fun temp10150_155 () (_ BitVec 64))
(declare-fun temp10150_157 () (_ BitVec 64))
(declare-fun temp10150_158 () (_ BitVec 64))
(declare-fun temp10150_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10150_159 () (_ BitVec 64))
(declare-fun temp10150_160 () (_ BitVec 64))
(declare-fun temp10150_162 () (_ BitVec 64))
(declare-fun temp10150_163 () (_ BitVec 64))
(declare-fun temp10150_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10150_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10150_165 () (_ BitVec 64))
(declare-fun temp10150_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10150_167 () (_ BitVec 64))
(declare-fun temp10150_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10150_169 () (_ BitVec 64))
(declare-fun temp10150_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10150_171 () (_ BitVec 64))
(declare-fun temp10150_172 () (_ BitVec 64))
(declare-fun temp10150_173 () (_ BitVec 64))
(declare-fun temp10150_174 () (_ BitVec 64))
(declare-fun temp10150_175 () (_ BitVec 64))
(declare-fun temp10150_176 () (_ BitVec 64))
(declare-fun temp10150_177 () (_ BitVec 64))
(declare-fun temp10150_178 () (_ BitVec 64))
(declare-fun temp10150_179 () (_ BitVec 64))
(declare-fun temp10150_180 () (_ BitVec 64))
(declare-fun temp10150_181 () (_ BitVec 64))
(declare-fun temp10150_182 () (_ BitVec 64))
(declare-fun temp10150_183 () (_ BitVec 64))
(declare-fun temp10150_184 () (_ BitVec 64))
(declare-fun temp10150_185 () (_ BitVec 64))
(declare-fun temp10150_186 () (_ BitVec 64))
(declare-fun temp10150_187 () (_ BitVec 64))
(declare-fun temp10150_188 () (_ BitVec 64))
(declare-fun temp10150_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10150_190 () (_ BitVec 64))
(declare-fun temp10150_192 () (_ BitVec 64))
(declare-fun temp10150_193 () (_ BitVec 64))
(declare-fun temp10150_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10150_194 () (_ BitVec 64))
(declare-fun temp10150_195 () (_ BitVec 64))
(declare-fun temp10150_197 () (_ BitVec 64))
(declare-fun temp10150_198 () (_ BitVec 64))
(declare-fun temp10150_196 () (_ BitVec 64))
(declare-fun temp10150_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10150_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10150_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10150_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10150_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10150_204 () (_ BitVec 64))
(declare-fun temp10150_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10150_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10150_207 () (_ BitVec 64))
(declare-fun temp10150_208 () (_ BitVec 64))
(declare-fun temp10150_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10150_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10150_211 () (_ BitVec 64))
(declare-fun temp10150_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10150_213 () (_ BitVec 64))
(declare-fun temp10150_214 () (_ BitVec 64))
(declare-fun temp10150_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10150_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10150_217 () (_ BitVec 64))
(declare-fun temp10150_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10150_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10150_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4993424 () (_ BitVec 64))
(declare-fun var211820 () (_ BitVec 64))
(declare-fun temp10150_221 () (_ BitVec 64))
(declare-fun var211821 () (_ BitVec 64))
(declare-fun temp10150_222 () (_ BitVec 64))
(assert (= temp10150_1 #x0000000000000001))
(assert (= var77203 temp10150_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10150_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10150_2)))
(assert (= temp10150_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10150_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10150_4 #x0000000000000000))
(assert (= var210941 temp10150_4))
(assert (= temp10150_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10150_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10150_6 #x0000000000000000))
(assert (= var210986 temp10150_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10150_7 #x0000000000000000))
(assert (= temp10150_8 temp10150_7))
(assert (= temp10150_9 (select ARGNAME_padding_NAMEEND_VAL temp10150_8)))
(assert (= temp10150_10 #x0000000000000001))
(assert (= temp10150_11 temp10150_10))
(assert (= temp10150_12 (select ARGNAME_padding_NAMEEND_VAL temp10150_11)))
(assert (= temp10150_13 #x0000000000000002))
(assert (= temp10150_14 temp10150_13))
(assert (= temp10150_15 (select ARGNAME_padding_NAMEEND_VAL temp10150_14)))
(assert (= temp10150_16 #x0000000000000003))
(assert (= temp10150_17 temp10150_16))
(assert (= temp10150_18 (select ARGNAME_padding_NAMEEND_VAL temp10150_17)))
(assert (= temp10150_19 #x0000000000000004))
(assert (= temp10150_20 temp10150_19))
(assert (= temp10150_21 (select ARGNAME_padding_NAMEEND_VAL temp10150_20)))
(assert (= temp10150_22 #x0000000000000005))
(assert (= temp10150_23 temp10150_22))
(assert (= temp10150_24 (select ARGNAME_padding_NAMEEND_VAL temp10150_23)))
(assert (= temp10150_25 #x0000000000000000))
(assert (= temp10150_26 #x0000000000000000))
(assert (= temp10150_27 temp10150_26))
(assert (= temp10150_28 (select ARGNAME_padding_NAMEEND_VAL temp10150_27)))
(assert (= temp10150_29 #x0000000000000000))
(assert (= temp10150_30 #x0000000000000001))
(assert (= temp10150_31 temp10150_30))
(assert (= temp10150_32 (select ARGNAME_padding_NAMEEND_VAL temp10150_31)))
(assert (= temp10150_33 #x0000000000000000))
(assert (= temp10150_34 #x0000000000000002))
(assert (= temp10150_35 temp10150_34))
(assert (= temp10150_36 (select ARGNAME_padding_NAMEEND_VAL temp10150_35)))
(assert (= temp10150_37 #x0000000000000000))
(assert (= temp10150_38 #x0000000000000003))
(assert (= temp10150_39 temp10150_38))
(assert (= temp10150_40 (select ARGNAME_padding_NAMEEND_VAL temp10150_39)))
(assert (= temp10150_41 #x0000000000000000))
(assert (= temp10150_42 #x0000000000000004))
(assert (= temp10150_43 temp10150_42))
(assert (= temp10150_44 (select ARGNAME_padding_NAMEEND_VAL temp10150_43)))
(assert (= temp10150_45 #x0000000000000000))
(assert (= temp10150_46 #x0000000000000005))
(assert (= temp10150_47 temp10150_46))
(assert (= temp10150_48 (select ARGNAME_padding_NAMEEND_VAL temp10150_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10150_28 temp10150_25)
             (bvslt temp10150_32 temp10150_29)
             (bvslt temp10150_36 temp10150_33)
             (bvslt temp10150_40 temp10150_37)
             (bvslt temp10150_44 temp10150_41)
             (bvslt temp10150_48 temp10150_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10150_49 #x0000000000000000))
(assert (= var1191714 temp10150_49))
(assert (= temp10150_50 #x0000000000000000))
(assert (= temp10150_51 temp10150_50))
(assert (= temp10150_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10150_51)))
(assert (= temp10150_53 #x0000000000000001))
(assert (= temp10150_54 temp10150_53))
(assert (= temp10150_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10150_54)))
(assert (= temp10150_56 #x0000000000000002))
(assert (= temp10150_57 temp10150_56))
(assert (= temp10150_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10150_57)))
(assert (= temp10150_59 #x0000000000000003))
(assert (= temp10150_60 temp10150_59))
(assert (= temp10150_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10150_60)))
(assert (= temp10150_62 #x0000000000000004))
(assert (= temp10150_63 temp10150_62))
(assert (= temp10150_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10150_63)))
(assert (= temp10150_65 #x0000000000000005))
(assert (= temp10150_66 temp10150_65))
(assert (= temp10150_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10150_66)))
(assert (= temp10150_68 #x0000000000000000))
(assert (= temp10150_69 #x0000000000000000))
(assert (= temp10150_70 temp10150_69))
(assert (= temp10150_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10150_70)))
(assert (= temp10150_72 #x0000000000000000))
(assert (= temp10150_73 #x0000000000000001))
(assert (= temp10150_74 temp10150_73))
(assert (= temp10150_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10150_74)))
(assert (= temp10150_76 #x0000000000000000))
(assert (= temp10150_77 #x0000000000000002))
(assert (= temp10150_78 temp10150_77))
(assert (= temp10150_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10150_78)))
(assert (= temp10150_80 #x0000000000000000))
(assert (= temp10150_81 #x0000000000000003))
(assert (= temp10150_82 temp10150_81))
(assert (= temp10150_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10150_82)))
(assert (= temp10150_84 #x0000000000000000))
(assert (= temp10150_85 #x0000000000000004))
(assert (= temp10150_86 temp10150_85))
(assert (= temp10150_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10150_86)))
(assert (= temp10150_88 #x0000000000000000))
(assert (= temp10150_89 #x0000000000000005))
(assert (= temp10150_90 temp10150_89))
(assert (= temp10150_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10150_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10150_71 temp10150_68)
             (bvslt temp10150_75 temp10150_72)
             (bvslt temp10150_79 temp10150_76)
             (bvslt temp10150_83 temp10150_80)
             (bvslt temp10150_87 temp10150_84)
             (bvslt temp10150_91 temp10150_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10150_92 #x0000000000000000))
(assert (= var1191725 temp10150_92))
(assert (= temp10150_93 #x0000000000000000))
(assert (= temp10150_94 temp10150_93))
(assert (= temp10150_95 (select ARGNAME_stride_NAMEEND_VAL temp10150_94)))
(assert (= temp10150_96 #x0000000000000001))
(assert (= temp10150_97 temp10150_96))
(assert (= temp10150_98 (select ARGNAME_stride_NAMEEND_VAL temp10150_97)))
(assert (= temp10150_99 #x0000000000000002))
(assert (= temp10150_100 temp10150_99))
(assert (= temp10150_101 (select ARGNAME_stride_NAMEEND_VAL temp10150_100)))
(assert (= temp10150_102 #x0000000000000003))
(assert (= temp10150_103 temp10150_102))
(assert (= temp10150_104 (select ARGNAME_stride_NAMEEND_VAL temp10150_103)))
(assert (= temp10150_105 #x0000000000000004))
(assert (= temp10150_106 temp10150_105))
(assert (= temp10150_107 (select ARGNAME_stride_NAMEEND_VAL temp10150_106)))
(assert (= temp10150_108 #x0000000000000005))
(assert (= temp10150_109 temp10150_108))
(assert (= temp10150_110 (select ARGNAME_stride_NAMEEND_VAL temp10150_109)))
(assert (= temp10150_111 #x0000000000000000))
(assert (= temp10150_112 #x0000000000000000))
(assert (= temp10150_113 temp10150_112))
(assert (= temp10150_114 (select ARGNAME_stride_NAMEEND_VAL temp10150_113)))
(assert (= temp10150_115 #x0000000000000000))
(assert (= temp10150_116 #x0000000000000001))
(assert (= temp10150_117 temp10150_116))
(assert (= temp10150_118 (select ARGNAME_stride_NAMEEND_VAL temp10150_117)))
(assert (= temp10150_119 #x0000000000000000))
(assert (= temp10150_120 #x0000000000000002))
(assert (= temp10150_121 temp10150_120))
(assert (= temp10150_122 (select ARGNAME_stride_NAMEEND_VAL temp10150_121)))
(assert (= temp10150_123 #x0000000000000000))
(assert (= temp10150_124 #x0000000000000003))
(assert (= temp10150_125 temp10150_124))
(assert (= temp10150_126 (select ARGNAME_stride_NAMEEND_VAL temp10150_125)))
(assert (= temp10150_127 #x0000000000000000))
(assert (= temp10150_128 #x0000000000000004))
(assert (= temp10150_129 temp10150_128))
(assert (= temp10150_130 (select ARGNAME_stride_NAMEEND_VAL temp10150_129)))
(assert (= temp10150_131 #x0000000000000000))
(assert (= temp10150_132 #x0000000000000005))
(assert (= temp10150_133 temp10150_132))
(assert (= temp10150_134 (select ARGNAME_stride_NAMEEND_VAL temp10150_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10150_114 temp10150_111)
             (bvsle temp10150_118 temp10150_115)
             (bvsle temp10150_122 temp10150_119)
             (bvsle temp10150_126 temp10150_123)
             (bvsle temp10150_130 temp10150_127)
             (bvsle temp10150_134 temp10150_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10150_135 #x0000000000000000))
(assert (= var1191735 temp10150_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10150_136 #x0000000000000001))
(assert (= var1191747 temp10150_136))
(assert (= temp10150_137 #x0000000000000000))
(assert (= var1179826 temp10150_137))
(assert (= temp10150_138 #x0000000000000000))
(assert (= temp10150_139 temp10150_138))
(assert (= temp10150_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10150_139)))
(assert (= temp10150_141 #x0000000000000001))
(assert (= temp10150_142 temp10150_141))
(assert (= temp10150_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10150_142)))
(assert (= temp10150_144 #x0000000000000002))
(assert (= temp10150_145 temp10150_144))
(assert (= temp10150_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10150_145)))
(assert (= temp10150_147 #x0000000000000003))
(assert (= temp10150_148 temp10150_147))
(assert (= temp10150_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10150_148)))
(assert (= temp10150_150 #x0000000000000004))
(assert (= temp10150_151 temp10150_150))
(assert (= temp10150_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10150_151)))
(assert (= temp10150_153 #x0000000000000005))
(assert (= temp10150_154 temp10150_153))
(assert (= temp10150_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10150_154)))
(assert (= temp10150_157 var1179826))
(assert (= temp10150_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10150_157)))
(assert (= temp10150_156 temp10150_158))
(assert (= var1191780
   (ite (bvslt temp10150_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10150_159 #x0000000000000000))
(assert (= var1191780 temp10150_159))
(assert (= temp10150_160 #x0000000000000000))
(assert (= var1179826 temp10150_160))
(assert (= temp10150_162 var1179826))
(assert (= temp10150_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10150_162)))
(assert (= temp10150_161 temp10150_163))
(assert (= var1191802 (bvsmod temp10150_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10150_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10150_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10150_165 #x0000000000000001))
(assert (= var1191803 temp10150_165))
(assert (= temp10150_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10150_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10150_167 #x0000000000000001))
(assert (= var1191823 temp10150_167))
(assert (= temp10150_168 #x0000000000000001))
(assert (= var1180714 temp10150_168))
(assert (= temp10150_169 #x0000000000000000))
(assert (= temp10150_170 temp10150_169))
(assert (= temp10150_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10150_170)))
(assert (= temp10150_172 #x0000000000000001))
(assert (= temp10150_173 temp10150_172))
(assert (= temp10150_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10150_173)))
(assert (= temp10150_175 #x0000000000000002))
(assert (= temp10150_176 temp10150_175))
(assert (= temp10150_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10150_176)))
(assert (= temp10150_178 #x0000000000000003))
(assert (= temp10150_179 temp10150_178))
(assert (= temp10150_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10150_179)))
(assert (= temp10150_181 #x0000000000000004))
(assert (= temp10150_182 temp10150_181))
(assert (= temp10150_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10150_182)))
(assert (= temp10150_184 #x0000000000000005))
(assert (= temp10150_185 temp10150_184))
(assert (= temp10150_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10150_185)))
(assert (= temp10150_187 #x0000000000000000))
(assert (= temp10150_188
   (ite (bvslt var1180714 temp10150_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10150_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10150_188)))
(assert (= var1191831 temp10150_189))
(assert (bvslt (ite (bvslt var1180714 temp10150_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10150_190 #x0000000000000001))
(assert (= var1180714 temp10150_190))
(assert (= temp10150_192 var1180714))
(assert (= temp10150_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10150_192)))
(assert (= temp10150_191 temp10150_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10150_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10150_194 #x0000000000000001))
(assert (= var1191836 temp10150_194))
(assert (= temp10150_195 #x0000000000000000))
(assert (= var1179826 temp10150_195))
(assert (= temp10150_197 var1179826))
(assert (= temp10150_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10150_197)))
(assert (= temp10150_196 temp10150_198))
(assert (= temp10150_199 #x0000000000000002))
(assert (= var1586025 temp10150_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10150_200 #x0000000000000001))
(assert (= var1191993 temp10150_200))
(assert (= temp10150_201 #x0000000000000001))
(assert (= var2700303 temp10150_201))
(assert (= temp10150_202 #x0000000000000001))
(assert (= var2962447 temp10150_202))
(assert (= temp10150_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10150_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10150_204 #x0000000000000001))
(assert (= var211058 temp10150_204))
(assert (= temp10150_205 #x0000000000000001))
(assert (= var211188 temp10150_205))
(assert (= var3879401 var211188))
(assert (= temp10150_206 #x0000000000000000))
(assert (= var3866802 temp10150_206))
(assert (= temp10150_207 #x0000000000000000))
(assert (= temp10150_208
   (ite (bvslt var3866802 temp10150_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10150_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10150_208)))
(assert (= var3879420 temp10150_209))
(assert (bvslt (ite (bvslt var3866802 temp10150_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10150_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10150_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10150_211 #x0000000000000000))
(assert (= var3879421 temp10150_211))
(assert (= temp10150_212 #x0000000000000001))
(assert (= var3867690 temp10150_212))
(assert (= temp10150_213 #x0000000000000000))
(assert (= temp10150_214
   (ite (bvslt var3867690 temp10150_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10150_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10150_214)))
(assert (= var3879423 temp10150_215))
(assert (bvslt (ite (bvslt var3867690 temp10150_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10150_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10150_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10150_217 #x0000000000000001))
(assert (= var3879424 temp10150_217))
(assert (= temp10150_218 #x0000000000000000))
(assert (= var4079423 temp10150_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10150_219 #x0000000000000002))
(assert (= var4208259 temp10150_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10150_220 #x0000000000000000))
(assert (= var4273820 temp10150_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4993424 var211201))
(assert (= var211820 var210913))
(assert (= temp10150_221 #x0000000000000000))
(assert (= var211821
   (ite (distinct var211820 temp10150_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10150_222 #x0000000000000001))
(assert (= var211058 temp10150_222))
(model-add temp10150_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10150_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10150_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10150_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





