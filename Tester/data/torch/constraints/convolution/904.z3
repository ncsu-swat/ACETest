(declare-fun temp1205_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp1205_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1205_3 () (_ BitVec 64))
(declare-fun temp1205_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1205_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp1205_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1205_7 () (_ BitVec 64))
(declare-fun temp1205_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1205_9 () (_ BitVec 64))
(declare-fun temp1205_10 () (_ BitVec 64))
(declare-fun temp1205_11 () (_ BitVec 64))
(declare-fun temp1205_12 () (_ BitVec 64))
(declare-fun temp1205_13 () (_ BitVec 64))
(declare-fun temp1205_14 () (_ BitVec 64))
(declare-fun temp1205_15 () (_ BitVec 64))
(declare-fun temp1205_16 () (_ BitVec 64))
(declare-fun temp1205_17 () (_ BitVec 64))
(declare-fun temp1205_18 () (_ BitVec 64))
(declare-fun temp1205_19 () (_ BitVec 64))
(declare-fun temp1205_20 () (_ BitVec 64))
(declare-fun temp1205_21 () (_ BitVec 64))
(declare-fun temp1205_22 () (_ BitVec 64))
(declare-fun temp1205_23 () (_ BitVec 64))
(declare-fun temp1205_24 () (_ BitVec 64))
(declare-fun temp1205_25 () (_ BitVec 64))
(declare-fun temp1205_26 () (_ BitVec 64))
(declare-fun temp1205_27 () (_ BitVec 64))
(declare-fun temp1205_28 () (_ BitVec 64))
(declare-fun temp1205_29 () (_ BitVec 64))
(declare-fun temp1205_30 () (_ BitVec 64))
(declare-fun temp1205_31 () (_ BitVec 64))
(declare-fun temp1205_32 () (_ BitVec 64))
(declare-fun temp1205_33 () (_ BitVec 64))
(declare-fun temp1205_34 () (_ BitVec 64))
(declare-fun temp1205_35 () (_ BitVec 64))
(declare-fun temp1205_36 () (_ BitVec 64))
(declare-fun temp1205_37 () (_ BitVec 64))
(declare-fun temp1205_38 () (_ BitVec 64))
(declare-fun temp1205_39 () (_ BitVec 64))
(declare-fun temp1205_40 () (_ BitVec 64))
(declare-fun temp1205_41 () (_ BitVec 64))
(declare-fun temp1205_42 () (_ BitVec 64))
(declare-fun temp1205_43 () (_ BitVec 64))
(declare-fun temp1205_44 () (_ BitVec 64))
(declare-fun temp1205_45 () (_ BitVec 64))
(declare-fun temp1205_46 () (_ BitVec 64))
(declare-fun temp1205_47 () (_ BitVec 64))
(declare-fun temp1205_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp1205_49 () (_ BitVec 64))
(declare-fun temp1205_50 () (_ BitVec 64))
(declare-fun temp1205_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1205_52 () (_ BitVec 64))
(declare-fun temp1205_53 () (_ BitVec 64))
(declare-fun temp1205_54 () (_ BitVec 64))
(declare-fun temp1205_55 () (_ BitVec 64))
(declare-fun temp1205_56 () (_ BitVec 64))
(declare-fun temp1205_57 () (_ BitVec 64))
(declare-fun temp1205_58 () (_ BitVec 64))
(declare-fun temp1205_59 () (_ BitVec 64))
(declare-fun temp1205_60 () (_ BitVec 64))
(declare-fun temp1205_61 () (_ BitVec 64))
(declare-fun temp1205_62 () (_ BitVec 64))
(declare-fun temp1205_63 () (_ BitVec 64))
(declare-fun temp1205_64 () (_ BitVec 64))
(declare-fun temp1205_65 () (_ BitVec 64))
(declare-fun temp1205_66 () (_ BitVec 64))
(declare-fun temp1205_67 () (_ BitVec 64))
(declare-fun temp1205_68 () (_ BitVec 64))
(declare-fun temp1205_69 () (_ BitVec 64))
(declare-fun temp1205_70 () (_ BitVec 64))
(declare-fun temp1205_71 () (_ BitVec 64))
(declare-fun temp1205_72 () (_ BitVec 64))
(declare-fun temp1205_73 () (_ BitVec 64))
(declare-fun temp1205_74 () (_ BitVec 64))
(declare-fun temp1205_75 () (_ BitVec 64))
(declare-fun temp1205_76 () (_ BitVec 64))
(declare-fun temp1205_77 () (_ BitVec 64))
(declare-fun temp1205_78 () (_ BitVec 64))
(declare-fun temp1205_79 () (_ BitVec 64))
(declare-fun temp1205_80 () (_ BitVec 64))
(declare-fun temp1205_81 () (_ BitVec 64))
(declare-fun temp1205_82 () (_ BitVec 64))
(declare-fun temp1205_83 () (_ BitVec 64))
(declare-fun temp1205_84 () (_ BitVec 64))
(declare-fun temp1205_85 () (_ BitVec 64))
(declare-fun temp1205_86 () (_ BitVec 64))
(declare-fun temp1205_87 () (_ BitVec 64))
(declare-fun temp1205_88 () (_ BitVec 64))
(declare-fun temp1205_89 () (_ BitVec 64))
(declare-fun temp1205_90 () (_ BitVec 64))
(declare-fun temp1205_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp1205_92 () (_ BitVec 64))
(declare-fun temp1205_93 () (_ BitVec 64))
(declare-fun temp1205_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1205_95 () (_ BitVec 64))
(declare-fun temp1205_96 () (_ BitVec 64))
(declare-fun temp1205_97 () (_ BitVec 64))
(declare-fun temp1205_98 () (_ BitVec 64))
(declare-fun temp1205_99 () (_ BitVec 64))
(declare-fun temp1205_100 () (_ BitVec 64))
(declare-fun temp1205_101 () (_ BitVec 64))
(declare-fun temp1205_102 () (_ BitVec 64))
(declare-fun temp1205_103 () (_ BitVec 64))
(declare-fun temp1205_104 () (_ BitVec 64))
(declare-fun temp1205_105 () (_ BitVec 64))
(declare-fun temp1205_106 () (_ BitVec 64))
(declare-fun temp1205_107 () (_ BitVec 64))
(declare-fun temp1205_108 () (_ BitVec 64))
(declare-fun temp1205_109 () (_ BitVec 64))
(declare-fun temp1205_110 () (_ BitVec 64))
(declare-fun temp1205_111 () (_ BitVec 64))
(declare-fun temp1205_112 () (_ BitVec 64))
(declare-fun temp1205_113 () (_ BitVec 64))
(declare-fun temp1205_114 () (_ BitVec 64))
(declare-fun temp1205_115 () (_ BitVec 64))
(declare-fun temp1205_116 () (_ BitVec 64))
(declare-fun temp1205_117 () (_ BitVec 64))
(declare-fun temp1205_118 () (_ BitVec 64))
(declare-fun temp1205_119 () (_ BitVec 64))
(declare-fun temp1205_120 () (_ BitVec 64))
(declare-fun temp1205_121 () (_ BitVec 64))
(declare-fun temp1205_122 () (_ BitVec 64))
(declare-fun temp1205_123 () (_ BitVec 64))
(declare-fun temp1205_124 () (_ BitVec 64))
(declare-fun temp1205_125 () (_ BitVec 64))
(declare-fun temp1205_126 () (_ BitVec 64))
(declare-fun temp1205_127 () (_ BitVec 64))
(declare-fun temp1205_128 () (_ BitVec 64))
(declare-fun temp1205_129 () (_ BitVec 64))
(declare-fun temp1205_130 () (_ BitVec 64))
(declare-fun temp1205_131 () (_ BitVec 64))
(declare-fun temp1205_132 () (_ BitVec 64))
(declare-fun temp1205_133 () (_ BitVec 64))
(declare-fun temp1205_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp1205_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp1205_136 () (_ BitVec 64))
(declare-fun temp1205_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp1205_138 () (_ BitVec 64))
(declare-fun temp1205_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1205_140 () (_ BitVec 64))
(declare-fun temp1205_141 () (_ BitVec 64))
(declare-fun temp1205_142 () (_ BitVec 64))
(declare-fun temp1205_143 () (_ BitVec 64))
(declare-fun temp1205_144 () (_ BitVec 64))
(declare-fun temp1205_145 () (_ BitVec 64))
(declare-fun temp1205_146 () (_ BitVec 64))
(declare-fun temp1205_147 () (_ BitVec 64))
(declare-fun temp1205_148 () (_ BitVec 64))
(declare-fun temp1205_149 () (_ BitVec 64))
(declare-fun temp1205_150 () (_ BitVec 64))
(declare-fun temp1205_151 () (_ BitVec 64))
(declare-fun temp1205_152 () (_ BitVec 64))
(declare-fun temp1205_153 () (_ BitVec 64))
(declare-fun temp1205_154 () (_ BitVec 64))
(declare-fun temp1205_155 () (_ BitVec 64))
(declare-fun temp1205_157 () (_ BitVec 64))
(declare-fun temp1205_158 () (_ BitVec 64))
(declare-fun temp1205_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp1205_159 () (_ BitVec 64))
(declare-fun temp1205_160 () (_ BitVec 64))
(declare-fun temp1205_162 () (_ BitVec 64))
(declare-fun temp1205_163 () (_ BitVec 64))
(declare-fun temp1205_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp1205_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp1205_165 () (_ BitVec 64))
(declare-fun temp1205_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp1205_167 () (_ BitVec 64))
(declare-fun temp1205_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp1205_169 () (_ BitVec 64))
(declare-fun temp1205_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1205_171 () (_ BitVec 64))
(declare-fun temp1205_172 () (_ BitVec 64))
(declare-fun temp1205_173 () (_ BitVec 64))
(declare-fun temp1205_174 () (_ BitVec 64))
(declare-fun temp1205_175 () (_ BitVec 64))
(declare-fun temp1205_176 () (_ BitVec 64))
(declare-fun temp1205_177 () (_ BitVec 64))
(declare-fun temp1205_178 () (_ BitVec 64))
(declare-fun temp1205_179 () (_ BitVec 64))
(declare-fun temp1205_180 () (_ BitVec 64))
(declare-fun temp1205_181 () (_ BitVec 64))
(declare-fun temp1205_182 () (_ BitVec 64))
(declare-fun temp1205_183 () (_ BitVec 64))
(declare-fun temp1205_184 () (_ BitVec 64))
(declare-fun temp1205_185 () (_ BitVec 64))
(declare-fun temp1205_186 () (_ BitVec 64))
(declare-fun temp1205_187 () (_ BitVec 64))
(declare-fun temp1205_188 () (_ BitVec 64))
(declare-fun temp1205_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp1205_190 () (_ BitVec 64))
(declare-fun temp1205_192 () (_ BitVec 64))
(declare-fun temp1205_193 () (_ BitVec 64))
(declare-fun temp1205_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp1205_194 () (_ BitVec 64))
(declare-fun temp1205_195 () (_ BitVec 64))
(declare-fun temp1205_197 () (_ BitVec 64))
(declare-fun temp1205_198 () (_ BitVec 64))
(declare-fun temp1205_196 () (_ BitVec 64))
(declare-fun temp1205_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp1205_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp1205_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp1205_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp1205_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp1205_204 () (_ BitVec 64))
(declare-fun temp1205_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp1205_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp1205_207 () (_ BitVec 64))
(declare-fun temp1205_208 () (_ BitVec 64))
(declare-fun temp1205_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp1205_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp1205_211 () (_ BitVec 64))
(declare-fun temp1205_212 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp1205_213 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp1205_214 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var5124496 () (_ BitVec 64))
(declare-fun var211388 () (_ BitVec 64))
(declare-fun temp1205_215 () (_ BitVec 64))
(declare-fun var211389 () (_ BitVec 64))
(declare-fun var6045517 () (_ BitVec 64))
(declare-fun temp1205_217 () (_ BitVec 64))
(declare-fun temp1205_216 () (_ BitVec 64))
(declare-fun temp1205_218 () (_ BitVec 64))
(declare-fun var6884842 () (_ BitVec 64))
(declare-fun temp1205_220 () (_ BitVec 64))
(declare-fun temp1205_219 () (_ BitVec 64))
(declare-fun temp1205_221 () (_ BitVec 64))
(assert (= temp1205_1 #x0000000000000001))
(assert (= var77203 temp1205_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp1205_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp1205_2)))
(assert (= temp1205_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1205_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1205_4 #x0000000000000000))
(assert (= var210941 temp1205_4))
(assert (= temp1205_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp1205_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1205_6 #x0000000000000000))
(assert (= var210986 temp1205_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp1205_7 #x0000000000000000))
(assert (= temp1205_8 temp1205_7))
(assert (= temp1205_9 (select ARGNAME_padding_NAMEEND_VAL temp1205_8)))
(assert (= temp1205_10 #x0000000000000001))
(assert (= temp1205_11 temp1205_10))
(assert (= temp1205_12 (select ARGNAME_padding_NAMEEND_VAL temp1205_11)))
(assert (= temp1205_13 #x0000000000000002))
(assert (= temp1205_14 temp1205_13))
(assert (= temp1205_15 (select ARGNAME_padding_NAMEEND_VAL temp1205_14)))
(assert (= temp1205_16 #x0000000000000003))
(assert (= temp1205_17 temp1205_16))
(assert (= temp1205_18 (select ARGNAME_padding_NAMEEND_VAL temp1205_17)))
(assert (= temp1205_19 #x0000000000000004))
(assert (= temp1205_20 temp1205_19))
(assert (= temp1205_21 (select ARGNAME_padding_NAMEEND_VAL temp1205_20)))
(assert (= temp1205_22 #x0000000000000005))
(assert (= temp1205_23 temp1205_22))
(assert (= temp1205_24 (select ARGNAME_padding_NAMEEND_VAL temp1205_23)))
(assert (= temp1205_25 #x0000000000000000))
(assert (= temp1205_26 #x0000000000000000))
(assert (= temp1205_27 temp1205_26))
(assert (= temp1205_28 (select ARGNAME_padding_NAMEEND_VAL temp1205_27)))
(assert (= temp1205_29 #x0000000000000000))
(assert (= temp1205_30 #x0000000000000001))
(assert (= temp1205_31 temp1205_30))
(assert (= temp1205_32 (select ARGNAME_padding_NAMEEND_VAL temp1205_31)))
(assert (= temp1205_33 #x0000000000000000))
(assert (= temp1205_34 #x0000000000000002))
(assert (= temp1205_35 temp1205_34))
(assert (= temp1205_36 (select ARGNAME_padding_NAMEEND_VAL temp1205_35)))
(assert (= temp1205_37 #x0000000000000000))
(assert (= temp1205_38 #x0000000000000003))
(assert (= temp1205_39 temp1205_38))
(assert (= temp1205_40 (select ARGNAME_padding_NAMEEND_VAL temp1205_39)))
(assert (= temp1205_41 #x0000000000000000))
(assert (= temp1205_42 #x0000000000000004))
(assert (= temp1205_43 temp1205_42))
(assert (= temp1205_44 (select ARGNAME_padding_NAMEEND_VAL temp1205_43)))
(assert (= temp1205_45 #x0000000000000000))
(assert (= temp1205_46 #x0000000000000005))
(assert (= temp1205_47 temp1205_46))
(assert (= temp1205_48 (select ARGNAME_padding_NAMEEND_VAL temp1205_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp1205_28 temp1205_25)
             (bvslt temp1205_32 temp1205_29)
             (bvslt temp1205_36 temp1205_33)
             (bvslt temp1205_40 temp1205_37)
             (bvslt temp1205_44 temp1205_41)
             (bvslt temp1205_48 temp1205_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1205_49 #x0000000000000000))
(assert (= var1191714 temp1205_49))
(assert (= temp1205_50 #x0000000000000000))
(assert (= temp1205_51 temp1205_50))
(assert (= temp1205_52 (select ARGNAME_output_padding_NAMEEND_VAL temp1205_51)))
(assert (= temp1205_53 #x0000000000000001))
(assert (= temp1205_54 temp1205_53))
(assert (= temp1205_55 (select ARGNAME_output_padding_NAMEEND_VAL temp1205_54)))
(assert (= temp1205_56 #x0000000000000002))
(assert (= temp1205_57 temp1205_56))
(assert (= temp1205_58 (select ARGNAME_output_padding_NAMEEND_VAL temp1205_57)))
(assert (= temp1205_59 #x0000000000000003))
(assert (= temp1205_60 temp1205_59))
(assert (= temp1205_61 (select ARGNAME_output_padding_NAMEEND_VAL temp1205_60)))
(assert (= temp1205_62 #x0000000000000004))
(assert (= temp1205_63 temp1205_62))
(assert (= temp1205_64 (select ARGNAME_output_padding_NAMEEND_VAL temp1205_63)))
(assert (= temp1205_65 #x0000000000000005))
(assert (= temp1205_66 temp1205_65))
(assert (= temp1205_67 (select ARGNAME_output_padding_NAMEEND_VAL temp1205_66)))
(assert (= temp1205_68 #x0000000000000000))
(assert (= temp1205_69 #x0000000000000000))
(assert (= temp1205_70 temp1205_69))
(assert (= temp1205_71 (select ARGNAME_output_padding_NAMEEND_VAL temp1205_70)))
(assert (= temp1205_72 #x0000000000000000))
(assert (= temp1205_73 #x0000000000000001))
(assert (= temp1205_74 temp1205_73))
(assert (= temp1205_75 (select ARGNAME_output_padding_NAMEEND_VAL temp1205_74)))
(assert (= temp1205_76 #x0000000000000000))
(assert (= temp1205_77 #x0000000000000002))
(assert (= temp1205_78 temp1205_77))
(assert (= temp1205_79 (select ARGNAME_output_padding_NAMEEND_VAL temp1205_78)))
(assert (= temp1205_80 #x0000000000000000))
(assert (= temp1205_81 #x0000000000000003))
(assert (= temp1205_82 temp1205_81))
(assert (= temp1205_83 (select ARGNAME_output_padding_NAMEEND_VAL temp1205_82)))
(assert (= temp1205_84 #x0000000000000000))
(assert (= temp1205_85 #x0000000000000004))
(assert (= temp1205_86 temp1205_85))
(assert (= temp1205_87 (select ARGNAME_output_padding_NAMEEND_VAL temp1205_86)))
(assert (= temp1205_88 #x0000000000000000))
(assert (= temp1205_89 #x0000000000000005))
(assert (= temp1205_90 temp1205_89))
(assert (= temp1205_91 (select ARGNAME_output_padding_NAMEEND_VAL temp1205_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp1205_71 temp1205_68)
             (bvslt temp1205_75 temp1205_72)
             (bvslt temp1205_79 temp1205_76)
             (bvslt temp1205_83 temp1205_80)
             (bvslt temp1205_87 temp1205_84)
             (bvslt temp1205_91 temp1205_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1205_92 #x0000000000000000))
(assert (= var1191725 temp1205_92))
(assert (= temp1205_93 #x0000000000000000))
(assert (= temp1205_94 temp1205_93))
(assert (= temp1205_95 (select ARGNAME_stride_NAMEEND_VAL temp1205_94)))
(assert (= temp1205_96 #x0000000000000001))
(assert (= temp1205_97 temp1205_96))
(assert (= temp1205_98 (select ARGNAME_stride_NAMEEND_VAL temp1205_97)))
(assert (= temp1205_99 #x0000000000000002))
(assert (= temp1205_100 temp1205_99))
(assert (= temp1205_101 (select ARGNAME_stride_NAMEEND_VAL temp1205_100)))
(assert (= temp1205_102 #x0000000000000003))
(assert (= temp1205_103 temp1205_102))
(assert (= temp1205_104 (select ARGNAME_stride_NAMEEND_VAL temp1205_103)))
(assert (= temp1205_105 #x0000000000000004))
(assert (= temp1205_106 temp1205_105))
(assert (= temp1205_107 (select ARGNAME_stride_NAMEEND_VAL temp1205_106)))
(assert (= temp1205_108 #x0000000000000005))
(assert (= temp1205_109 temp1205_108))
(assert (= temp1205_110 (select ARGNAME_stride_NAMEEND_VAL temp1205_109)))
(assert (= temp1205_111 #x0000000000000000))
(assert (= temp1205_112 #x0000000000000000))
(assert (= temp1205_113 temp1205_112))
(assert (= temp1205_114 (select ARGNAME_stride_NAMEEND_VAL temp1205_113)))
(assert (= temp1205_115 #x0000000000000000))
(assert (= temp1205_116 #x0000000000000001))
(assert (= temp1205_117 temp1205_116))
(assert (= temp1205_118 (select ARGNAME_stride_NAMEEND_VAL temp1205_117)))
(assert (= temp1205_119 #x0000000000000000))
(assert (= temp1205_120 #x0000000000000002))
(assert (= temp1205_121 temp1205_120))
(assert (= temp1205_122 (select ARGNAME_stride_NAMEEND_VAL temp1205_121)))
(assert (= temp1205_123 #x0000000000000000))
(assert (= temp1205_124 #x0000000000000003))
(assert (= temp1205_125 temp1205_124))
(assert (= temp1205_126 (select ARGNAME_stride_NAMEEND_VAL temp1205_125)))
(assert (= temp1205_127 #x0000000000000000))
(assert (= temp1205_128 #x0000000000000004))
(assert (= temp1205_129 temp1205_128))
(assert (= temp1205_130 (select ARGNAME_stride_NAMEEND_VAL temp1205_129)))
(assert (= temp1205_131 #x0000000000000000))
(assert (= temp1205_132 #x0000000000000005))
(assert (= temp1205_133 temp1205_132))
(assert (= temp1205_134 (select ARGNAME_stride_NAMEEND_VAL temp1205_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp1205_114 temp1205_111)
             (bvsle temp1205_118 temp1205_115)
             (bvsle temp1205_122 temp1205_119)
             (bvsle temp1205_126 temp1205_123)
             (bvsle temp1205_130 temp1205_127)
             (bvsle temp1205_134 temp1205_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1205_135 #x0000000000000000))
(assert (= var1191735 temp1205_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1205_136 #x0000000000000001))
(assert (= var1191747 temp1205_136))
(assert (= temp1205_137 #x0000000000000000))
(assert (= var1179826 temp1205_137))
(assert (= temp1205_138 #x0000000000000000))
(assert (= temp1205_139 temp1205_138))
(assert (= temp1205_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1205_139)))
(assert (= temp1205_141 #x0000000000000001))
(assert (= temp1205_142 temp1205_141))
(assert (= temp1205_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1205_142)))
(assert (= temp1205_144 #x0000000000000002))
(assert (= temp1205_145 temp1205_144))
(assert (= temp1205_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1205_145)))
(assert (= temp1205_147 #x0000000000000003))
(assert (= temp1205_148 temp1205_147))
(assert (= temp1205_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1205_148)))
(assert (= temp1205_150 #x0000000000000004))
(assert (= temp1205_151 temp1205_150))
(assert (= temp1205_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1205_151)))
(assert (= temp1205_153 #x0000000000000005))
(assert (= temp1205_154 temp1205_153))
(assert (= temp1205_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1205_154)))
(assert (= temp1205_157 var1179826))
(assert (= temp1205_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1205_157)))
(assert (= temp1205_156 temp1205_158))
(assert (= var1191780
   (ite (bvslt temp1205_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1205_159 #x0000000000000000))
(assert (= var1191780 temp1205_159))
(assert (= temp1205_160 #x0000000000000000))
(assert (= var1179826 temp1205_160))
(assert (= temp1205_162 var1179826))
(assert (= temp1205_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1205_162)))
(assert (= temp1205_161 temp1205_163))
(assert (= var1191802 (bvsmod temp1205_161 ARGNAME_groups_NAMEEND)))
(assert (= temp1205_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp1205_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp1205_165 #x0000000000000001))
(assert (= var1191803 temp1205_165))
(assert (= temp1205_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp1205_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1205_167 #x0000000000000001))
(assert (= var1191823 temp1205_167))
(assert (= temp1205_168 #x0000000000000001))
(assert (= var1180714 temp1205_168))
(assert (= temp1205_169 #x0000000000000000))
(assert (= temp1205_170 temp1205_169))
(assert (= temp1205_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp1205_170)))
(assert (= temp1205_172 #x0000000000000001))
(assert (= temp1205_173 temp1205_172))
(assert (= temp1205_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp1205_173)))
(assert (= temp1205_175 #x0000000000000002))
(assert (= temp1205_176 temp1205_175))
(assert (= temp1205_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp1205_176)))
(assert (= temp1205_178 #x0000000000000003))
(assert (= temp1205_179 temp1205_178))
(assert (= temp1205_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp1205_179)))
(assert (= temp1205_181 #x0000000000000004))
(assert (= temp1205_182 temp1205_181))
(assert (= temp1205_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp1205_182)))
(assert (= temp1205_184 #x0000000000000005))
(assert (= temp1205_185 temp1205_184))
(assert (= temp1205_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp1205_185)))
(assert (= temp1205_187 #x0000000000000000))
(assert (= temp1205_188
   (ite (bvslt var1180714 temp1205_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp1205_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp1205_188)))
(assert (= var1191831 temp1205_189))
(assert (bvslt (ite (bvslt var1180714 temp1205_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1205_190 #x0000000000000001))
(assert (= var1180714 temp1205_190))
(assert (= temp1205_192 var1180714))
(assert (= temp1205_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1205_192)))
(assert (= temp1205_191 temp1205_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp1205_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp1205_194 #x0000000000000001))
(assert (= var1191836 temp1205_194))
(assert (= temp1205_195 #x0000000000000000))
(assert (= var1179826 temp1205_195))
(assert (= temp1205_197 var1179826))
(assert (= temp1205_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1205_197)))
(assert (= temp1205_196 temp1205_198))
(assert (= temp1205_199 #x0000000000000002))
(assert (= var1586025 temp1205_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp1205_200 #x0000000000000001))
(assert (= var1191993 temp1205_200))
(assert (= temp1205_201 #x0000000000000001))
(assert (= var2700303 temp1205_201))
(assert (= temp1205_202 #x0000000000000001))
(assert (= var2962447 temp1205_202))
(assert (= temp1205_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1205_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1205_204 #x0000000000000001))
(assert (= var211058 temp1205_204))
(assert (= temp1205_205 #x0000000000000001))
(assert (= var211188 temp1205_205))
(assert (= var3879401 var211188))
(assert (= temp1205_206 #x0000000000000000))
(assert (= var3866802 temp1205_206))
(assert (= temp1205_207 #x0000000000000000))
(assert (= temp1205_208
   (ite (bvslt var3866802 temp1205_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp1205_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp1205_208)))
(assert (= var3879420 temp1205_209))
(assert (bvslt (ite (bvslt var3866802 temp1205_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1205_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp1205_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp1205_211 #x0000000000000001))
(assert (= var3879421 temp1205_211))
(assert (= temp1205_212 #x0000000000000000))
(assert (= var4133117 temp1205_212))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp1205_213 #x0000000000000002))
(assert (= var4339331 temp1205_213))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1205_214 #x0000000000000000))
(assert (= var4404892 temp1205_214))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var5124496 var211201))
(assert (= var211388 var210913))
(assert (= temp1205_215 #x0000000000000000))
(assert (= var211389
   (ite (distinct var211388 temp1205_215) #x0000000000000001 #x0000000000000000)))
(assert (= var6045517 var211389))
(assert (= temp1205_217 #x0000000000000001))
(assert (= temp1205_216 temp1205_217))
(assert (= temp1205_218 #x0000000000000001))
(assert (= var6884842 temp1205_218))
(assert (= temp1205_220 #xffffffffffffffff))
(assert (= temp1205_219 temp1205_220))
(assert (= temp1205_221 #x0000000000000001))
(assert (= var211058 temp1205_221))
(model-add temp1205_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp1205_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1205_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp1205_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





