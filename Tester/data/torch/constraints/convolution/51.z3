(declare-fun temp68_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp68_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp68_3 () (_ BitVec 64))
(declare-fun temp68_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp68_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp68_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp68_7 () (_ BitVec 64))
(declare-fun temp68_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp68_9 () (_ BitVec 64))
(declare-fun temp68_10 () (_ BitVec 64))
(declare-fun temp68_11 () (_ BitVec 64))
(declare-fun temp68_12 () (_ BitVec 64))
(declare-fun temp68_13 () (_ BitVec 64))
(declare-fun temp68_14 () (_ BitVec 64))
(declare-fun temp68_15 () (_ BitVec 64))
(declare-fun temp68_16 () (_ BitVec 64))
(declare-fun temp68_17 () (_ BitVec 64))
(declare-fun temp68_18 () (_ BitVec 64))
(declare-fun temp68_19 () (_ BitVec 64))
(declare-fun temp68_20 () (_ BitVec 64))
(declare-fun temp68_21 () (_ BitVec 64))
(declare-fun temp68_22 () (_ BitVec 64))
(declare-fun temp68_23 () (_ BitVec 64))
(declare-fun temp68_24 () (_ BitVec 64))
(declare-fun temp68_25 () (_ BitVec 64))
(declare-fun temp68_26 () (_ BitVec 64))
(declare-fun temp68_27 () (_ BitVec 64))
(declare-fun temp68_28 () (_ BitVec 64))
(declare-fun temp68_29 () (_ BitVec 64))
(declare-fun temp68_30 () (_ BitVec 64))
(declare-fun temp68_31 () (_ BitVec 64))
(declare-fun temp68_32 () (_ BitVec 64))
(declare-fun temp68_33 () (_ BitVec 64))
(declare-fun temp68_34 () (_ BitVec 64))
(declare-fun temp68_35 () (_ BitVec 64))
(declare-fun temp68_36 () (_ BitVec 64))
(declare-fun temp68_37 () (_ BitVec 64))
(declare-fun temp68_38 () (_ BitVec 64))
(declare-fun temp68_39 () (_ BitVec 64))
(declare-fun temp68_40 () (_ BitVec 64))
(declare-fun temp68_41 () (_ BitVec 64))
(declare-fun temp68_42 () (_ BitVec 64))
(declare-fun temp68_43 () (_ BitVec 64))
(declare-fun temp68_44 () (_ BitVec 64))
(declare-fun temp68_45 () (_ BitVec 64))
(declare-fun temp68_46 () (_ BitVec 64))
(declare-fun temp68_47 () (_ BitVec 64))
(declare-fun temp68_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp68_49 () (_ BitVec 64))
(declare-fun temp68_50 () (_ BitVec 64))
(declare-fun temp68_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp68_52 () (_ BitVec 64))
(declare-fun temp68_53 () (_ BitVec 64))
(declare-fun temp68_54 () (_ BitVec 64))
(declare-fun temp68_55 () (_ BitVec 64))
(declare-fun temp68_56 () (_ BitVec 64))
(declare-fun temp68_57 () (_ BitVec 64))
(declare-fun temp68_58 () (_ BitVec 64))
(declare-fun temp68_59 () (_ BitVec 64))
(declare-fun temp68_60 () (_ BitVec 64))
(declare-fun temp68_61 () (_ BitVec 64))
(declare-fun temp68_62 () (_ BitVec 64))
(declare-fun temp68_63 () (_ BitVec 64))
(declare-fun temp68_64 () (_ BitVec 64))
(declare-fun temp68_65 () (_ BitVec 64))
(declare-fun temp68_66 () (_ BitVec 64))
(declare-fun temp68_67 () (_ BitVec 64))
(declare-fun temp68_68 () (_ BitVec 64))
(declare-fun temp68_69 () (_ BitVec 64))
(declare-fun temp68_70 () (_ BitVec 64))
(declare-fun temp68_71 () (_ BitVec 64))
(declare-fun temp68_72 () (_ BitVec 64))
(declare-fun temp68_73 () (_ BitVec 64))
(declare-fun temp68_74 () (_ BitVec 64))
(declare-fun temp68_75 () (_ BitVec 64))
(declare-fun temp68_76 () (_ BitVec 64))
(declare-fun temp68_77 () (_ BitVec 64))
(declare-fun temp68_78 () (_ BitVec 64))
(declare-fun temp68_79 () (_ BitVec 64))
(declare-fun temp68_80 () (_ BitVec 64))
(declare-fun temp68_81 () (_ BitVec 64))
(declare-fun temp68_82 () (_ BitVec 64))
(declare-fun temp68_83 () (_ BitVec 64))
(declare-fun temp68_84 () (_ BitVec 64))
(declare-fun temp68_85 () (_ BitVec 64))
(declare-fun temp68_86 () (_ BitVec 64))
(declare-fun temp68_87 () (_ BitVec 64))
(declare-fun temp68_88 () (_ BitVec 64))
(declare-fun temp68_89 () (_ BitVec 64))
(declare-fun temp68_90 () (_ BitVec 64))
(declare-fun temp68_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp68_92 () (_ BitVec 64))
(declare-fun temp68_93 () (_ BitVec 64))
(declare-fun temp68_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp68_95 () (_ BitVec 64))
(declare-fun temp68_96 () (_ BitVec 64))
(declare-fun temp68_97 () (_ BitVec 64))
(declare-fun temp68_98 () (_ BitVec 64))
(declare-fun temp68_99 () (_ BitVec 64))
(declare-fun temp68_100 () (_ BitVec 64))
(declare-fun temp68_101 () (_ BitVec 64))
(declare-fun temp68_102 () (_ BitVec 64))
(declare-fun temp68_103 () (_ BitVec 64))
(declare-fun temp68_104 () (_ BitVec 64))
(declare-fun temp68_105 () (_ BitVec 64))
(declare-fun temp68_106 () (_ BitVec 64))
(declare-fun temp68_107 () (_ BitVec 64))
(declare-fun temp68_108 () (_ BitVec 64))
(declare-fun temp68_109 () (_ BitVec 64))
(declare-fun temp68_110 () (_ BitVec 64))
(declare-fun temp68_111 () (_ BitVec 64))
(declare-fun temp68_112 () (_ BitVec 64))
(declare-fun temp68_113 () (_ BitVec 64))
(declare-fun temp68_114 () (_ BitVec 64))
(declare-fun temp68_115 () (_ BitVec 64))
(declare-fun temp68_116 () (_ BitVec 64))
(declare-fun temp68_117 () (_ BitVec 64))
(declare-fun temp68_118 () (_ BitVec 64))
(declare-fun temp68_119 () (_ BitVec 64))
(declare-fun temp68_120 () (_ BitVec 64))
(declare-fun temp68_121 () (_ BitVec 64))
(declare-fun temp68_122 () (_ BitVec 64))
(declare-fun temp68_123 () (_ BitVec 64))
(declare-fun temp68_124 () (_ BitVec 64))
(declare-fun temp68_125 () (_ BitVec 64))
(declare-fun temp68_126 () (_ BitVec 64))
(declare-fun temp68_127 () (_ BitVec 64))
(declare-fun temp68_128 () (_ BitVec 64))
(declare-fun temp68_129 () (_ BitVec 64))
(declare-fun temp68_130 () (_ BitVec 64))
(declare-fun temp68_131 () (_ BitVec 64))
(declare-fun temp68_132 () (_ BitVec 64))
(declare-fun temp68_133 () (_ BitVec 64))
(declare-fun temp68_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp68_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp68_136 () (_ BitVec 64))
(declare-fun temp68_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp68_138 () (_ BitVec 64))
(declare-fun temp68_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp68_140 () (_ BitVec 64))
(declare-fun temp68_141 () (_ BitVec 64))
(declare-fun temp68_142 () (_ BitVec 64))
(declare-fun temp68_143 () (_ BitVec 64))
(declare-fun temp68_144 () (_ BitVec 64))
(declare-fun temp68_145 () (_ BitVec 64))
(declare-fun temp68_146 () (_ BitVec 64))
(declare-fun temp68_147 () (_ BitVec 64))
(declare-fun temp68_148 () (_ BitVec 64))
(declare-fun temp68_149 () (_ BitVec 64))
(declare-fun temp68_150 () (_ BitVec 64))
(declare-fun temp68_151 () (_ BitVec 64))
(declare-fun temp68_152 () (_ BitVec 64))
(declare-fun temp68_153 () (_ BitVec 64))
(declare-fun temp68_154 () (_ BitVec 64))
(declare-fun temp68_155 () (_ BitVec 64))
(declare-fun temp68_157 () (_ BitVec 64))
(declare-fun temp68_158 () (_ BitVec 64))
(declare-fun temp68_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp68_159 () (_ BitVec 64))
(declare-fun temp68_160 () (_ BitVec 64))
(declare-fun temp68_162 () (_ BitVec 64))
(declare-fun temp68_163 () (_ BitVec 64))
(declare-fun temp68_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp68_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp68_165 () (_ BitVec 64))
(declare-fun temp68_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp68_167 () (_ BitVec 64))
(declare-fun temp68_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp68_169 () (_ BitVec 64))
(declare-fun temp68_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp68_171 () (_ BitVec 64))
(declare-fun temp68_172 () (_ BitVec 64))
(declare-fun temp68_173 () (_ BitVec 64))
(declare-fun temp68_174 () (_ BitVec 64))
(declare-fun temp68_175 () (_ BitVec 64))
(declare-fun temp68_176 () (_ BitVec 64))
(declare-fun temp68_177 () (_ BitVec 64))
(declare-fun temp68_178 () (_ BitVec 64))
(declare-fun temp68_179 () (_ BitVec 64))
(declare-fun temp68_180 () (_ BitVec 64))
(declare-fun temp68_181 () (_ BitVec 64))
(declare-fun temp68_182 () (_ BitVec 64))
(declare-fun temp68_183 () (_ BitVec 64))
(declare-fun temp68_184 () (_ BitVec 64))
(declare-fun temp68_185 () (_ BitVec 64))
(declare-fun temp68_186 () (_ BitVec 64))
(declare-fun temp68_187 () (_ BitVec 64))
(declare-fun temp68_188 () (_ BitVec 64))
(declare-fun temp68_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp68_190 () (_ BitVec 64))
(declare-fun temp68_192 () (_ BitVec 64))
(declare-fun temp68_193 () (_ BitVec 64))
(declare-fun temp68_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp68_194 () (_ BitVec 64))
(declare-fun temp68_195 () (_ BitVec 64))
(declare-fun temp68_197 () (_ BitVec 64))
(declare-fun temp68_198 () (_ BitVec 64))
(declare-fun temp68_196 () (_ BitVec 64))
(declare-fun temp68_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp68_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp68_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp68_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp68_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp68_204 () (_ BitVec 64))
(declare-fun temp68_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp68_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp68_207 () (_ BitVec 64))
(declare-fun temp68_208 () (_ BitVec 64))
(declare-fun temp68_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp68_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp68_211 () (_ BitVec 64))
(declare-fun temp68_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp68_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp68_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4993424 () (_ BitVec 64))
(declare-fun var211494 () (_ BitVec 64))
(declare-fun temp68_215 () (_ BitVec 64))
(declare-fun var211495 () (_ BitVec 64))
(declare-fun temp68_217 () (_ BitVec 64))
(declare-fun temp68_216 () (_ BitVec 64))
(declare-fun temp68_218 () (_ BitVec 64))
(declare-fun var6950378 () (_ BitVec 64))
(declare-fun temp68_220 () (_ BitVec 64))
(declare-fun temp68_219 () (_ BitVec 64))
(declare-fun temp68_221 () (_ BitVec 64))
(declare-fun temp68_222 () (_ BitVec 64))
(declare-fun var7680788 () (_ BitVec 64))
(declare-fun var7680755 () (_ BitVec 64))
(declare-fun var7549319 () (_ BitVec 64))
(declare-fun var7549315 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp68_223 () (_ BitVec 64))
(assert (= temp68_1 #x0000000000000001))
(assert (= var77203 temp68_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp68_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp68_2)))
(assert (= temp68_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp68_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp68_4 #x0000000000000000))
(assert (= var210941 temp68_4))
(assert (= temp68_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp68_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp68_6 #x0000000000000000))
(assert (= var210986 temp68_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp68_7 #x0000000000000000))
(assert (= temp68_8 temp68_7))
(assert (= temp68_9 (select ARGNAME_padding_NAMEEND_VAL temp68_8)))
(assert (= temp68_10 #x0000000000000001))
(assert (= temp68_11 temp68_10))
(assert (= temp68_12 (select ARGNAME_padding_NAMEEND_VAL temp68_11)))
(assert (= temp68_13 #x0000000000000002))
(assert (= temp68_14 temp68_13))
(assert (= temp68_15 (select ARGNAME_padding_NAMEEND_VAL temp68_14)))
(assert (= temp68_16 #x0000000000000003))
(assert (= temp68_17 temp68_16))
(assert (= temp68_18 (select ARGNAME_padding_NAMEEND_VAL temp68_17)))
(assert (= temp68_19 #x0000000000000004))
(assert (= temp68_20 temp68_19))
(assert (= temp68_21 (select ARGNAME_padding_NAMEEND_VAL temp68_20)))
(assert (= temp68_22 #x0000000000000005))
(assert (= temp68_23 temp68_22))
(assert (= temp68_24 (select ARGNAME_padding_NAMEEND_VAL temp68_23)))
(assert (= temp68_25 #x0000000000000000))
(assert (= temp68_26 #x0000000000000000))
(assert (= temp68_27 temp68_26))
(assert (= temp68_28 (select ARGNAME_padding_NAMEEND_VAL temp68_27)))
(assert (= temp68_29 #x0000000000000000))
(assert (= temp68_30 #x0000000000000001))
(assert (= temp68_31 temp68_30))
(assert (= temp68_32 (select ARGNAME_padding_NAMEEND_VAL temp68_31)))
(assert (= temp68_33 #x0000000000000000))
(assert (= temp68_34 #x0000000000000002))
(assert (= temp68_35 temp68_34))
(assert (= temp68_36 (select ARGNAME_padding_NAMEEND_VAL temp68_35)))
(assert (= temp68_37 #x0000000000000000))
(assert (= temp68_38 #x0000000000000003))
(assert (= temp68_39 temp68_38))
(assert (= temp68_40 (select ARGNAME_padding_NAMEEND_VAL temp68_39)))
(assert (= temp68_41 #x0000000000000000))
(assert (= temp68_42 #x0000000000000004))
(assert (= temp68_43 temp68_42))
(assert (= temp68_44 (select ARGNAME_padding_NAMEEND_VAL temp68_43)))
(assert (= temp68_45 #x0000000000000000))
(assert (= temp68_46 #x0000000000000005))
(assert (= temp68_47 temp68_46))
(assert (= temp68_48 (select ARGNAME_padding_NAMEEND_VAL temp68_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp68_28 temp68_25)
             (bvslt temp68_32 temp68_29)
             (bvslt temp68_36 temp68_33)
             (bvslt temp68_40 temp68_37)
             (bvslt temp68_44 temp68_41)
             (bvslt temp68_48 temp68_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp68_49 #x0000000000000000))
(assert (= var1191714 temp68_49))
(assert (= temp68_50 #x0000000000000000))
(assert (= temp68_51 temp68_50))
(assert (= temp68_52 (select ARGNAME_output_padding_NAMEEND_VAL temp68_51)))
(assert (= temp68_53 #x0000000000000001))
(assert (= temp68_54 temp68_53))
(assert (= temp68_55 (select ARGNAME_output_padding_NAMEEND_VAL temp68_54)))
(assert (= temp68_56 #x0000000000000002))
(assert (= temp68_57 temp68_56))
(assert (= temp68_58 (select ARGNAME_output_padding_NAMEEND_VAL temp68_57)))
(assert (= temp68_59 #x0000000000000003))
(assert (= temp68_60 temp68_59))
(assert (= temp68_61 (select ARGNAME_output_padding_NAMEEND_VAL temp68_60)))
(assert (= temp68_62 #x0000000000000004))
(assert (= temp68_63 temp68_62))
(assert (= temp68_64 (select ARGNAME_output_padding_NAMEEND_VAL temp68_63)))
(assert (= temp68_65 #x0000000000000005))
(assert (= temp68_66 temp68_65))
(assert (= temp68_67 (select ARGNAME_output_padding_NAMEEND_VAL temp68_66)))
(assert (= temp68_68 #x0000000000000000))
(assert (= temp68_69 #x0000000000000000))
(assert (= temp68_70 temp68_69))
(assert (= temp68_71 (select ARGNAME_output_padding_NAMEEND_VAL temp68_70)))
(assert (= temp68_72 #x0000000000000000))
(assert (= temp68_73 #x0000000000000001))
(assert (= temp68_74 temp68_73))
(assert (= temp68_75 (select ARGNAME_output_padding_NAMEEND_VAL temp68_74)))
(assert (= temp68_76 #x0000000000000000))
(assert (= temp68_77 #x0000000000000002))
(assert (= temp68_78 temp68_77))
(assert (= temp68_79 (select ARGNAME_output_padding_NAMEEND_VAL temp68_78)))
(assert (= temp68_80 #x0000000000000000))
(assert (= temp68_81 #x0000000000000003))
(assert (= temp68_82 temp68_81))
(assert (= temp68_83 (select ARGNAME_output_padding_NAMEEND_VAL temp68_82)))
(assert (= temp68_84 #x0000000000000000))
(assert (= temp68_85 #x0000000000000004))
(assert (= temp68_86 temp68_85))
(assert (= temp68_87 (select ARGNAME_output_padding_NAMEEND_VAL temp68_86)))
(assert (= temp68_88 #x0000000000000000))
(assert (= temp68_89 #x0000000000000005))
(assert (= temp68_90 temp68_89))
(assert (= temp68_91 (select ARGNAME_output_padding_NAMEEND_VAL temp68_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp68_71 temp68_68)
             (bvslt temp68_75 temp68_72)
             (bvslt temp68_79 temp68_76)
             (bvslt temp68_83 temp68_80)
             (bvslt temp68_87 temp68_84)
             (bvslt temp68_91 temp68_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp68_92 #x0000000000000000))
(assert (= var1191725 temp68_92))
(assert (= temp68_93 #x0000000000000000))
(assert (= temp68_94 temp68_93))
(assert (= temp68_95 (select ARGNAME_stride_NAMEEND_VAL temp68_94)))
(assert (= temp68_96 #x0000000000000001))
(assert (= temp68_97 temp68_96))
(assert (= temp68_98 (select ARGNAME_stride_NAMEEND_VAL temp68_97)))
(assert (= temp68_99 #x0000000000000002))
(assert (= temp68_100 temp68_99))
(assert (= temp68_101 (select ARGNAME_stride_NAMEEND_VAL temp68_100)))
(assert (= temp68_102 #x0000000000000003))
(assert (= temp68_103 temp68_102))
(assert (= temp68_104 (select ARGNAME_stride_NAMEEND_VAL temp68_103)))
(assert (= temp68_105 #x0000000000000004))
(assert (= temp68_106 temp68_105))
(assert (= temp68_107 (select ARGNAME_stride_NAMEEND_VAL temp68_106)))
(assert (= temp68_108 #x0000000000000005))
(assert (= temp68_109 temp68_108))
(assert (= temp68_110 (select ARGNAME_stride_NAMEEND_VAL temp68_109)))
(assert (= temp68_111 #x0000000000000000))
(assert (= temp68_112 #x0000000000000000))
(assert (= temp68_113 temp68_112))
(assert (= temp68_114 (select ARGNAME_stride_NAMEEND_VAL temp68_113)))
(assert (= temp68_115 #x0000000000000000))
(assert (= temp68_116 #x0000000000000001))
(assert (= temp68_117 temp68_116))
(assert (= temp68_118 (select ARGNAME_stride_NAMEEND_VAL temp68_117)))
(assert (= temp68_119 #x0000000000000000))
(assert (= temp68_120 #x0000000000000002))
(assert (= temp68_121 temp68_120))
(assert (= temp68_122 (select ARGNAME_stride_NAMEEND_VAL temp68_121)))
(assert (= temp68_123 #x0000000000000000))
(assert (= temp68_124 #x0000000000000003))
(assert (= temp68_125 temp68_124))
(assert (= temp68_126 (select ARGNAME_stride_NAMEEND_VAL temp68_125)))
(assert (= temp68_127 #x0000000000000000))
(assert (= temp68_128 #x0000000000000004))
(assert (= temp68_129 temp68_128))
(assert (= temp68_130 (select ARGNAME_stride_NAMEEND_VAL temp68_129)))
(assert (= temp68_131 #x0000000000000000))
(assert (= temp68_132 #x0000000000000005))
(assert (= temp68_133 temp68_132))
(assert (= temp68_134 (select ARGNAME_stride_NAMEEND_VAL temp68_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp68_114 temp68_111)
             (bvsle temp68_118 temp68_115)
             (bvsle temp68_122 temp68_119)
             (bvsle temp68_126 temp68_123)
             (bvsle temp68_130 temp68_127)
             (bvsle temp68_134 temp68_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp68_135 #x0000000000000000))
(assert (= var1191735 temp68_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp68_136 #x0000000000000001))
(assert (= var1191747 temp68_136))
(assert (= temp68_137 #x0000000000000000))
(assert (= var1179826 temp68_137))
(assert (= temp68_138 #x0000000000000000))
(assert (= temp68_139 temp68_138))
(assert (= temp68_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp68_139)))
(assert (= temp68_141 #x0000000000000001))
(assert (= temp68_142 temp68_141))
(assert (= temp68_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp68_142)))
(assert (= temp68_144 #x0000000000000002))
(assert (= temp68_145 temp68_144))
(assert (= temp68_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp68_145)))
(assert (= temp68_147 #x0000000000000003))
(assert (= temp68_148 temp68_147))
(assert (= temp68_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp68_148)))
(assert (= temp68_150 #x0000000000000004))
(assert (= temp68_151 temp68_150))
(assert (= temp68_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp68_151)))
(assert (= temp68_153 #x0000000000000005))
(assert (= temp68_154 temp68_153))
(assert (= temp68_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp68_154)))
(assert (= temp68_157 var1179826))
(assert (= temp68_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp68_157)))
(assert (= temp68_156 temp68_158))
(assert (= var1191780
   (ite (bvslt temp68_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp68_159 #x0000000000000000))
(assert (= var1191780 temp68_159))
(assert (= temp68_160 #x0000000000000000))
(assert (= var1179826 temp68_160))
(assert (= temp68_162 var1179826))
(assert (= temp68_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp68_162)))
(assert (= temp68_161 temp68_163))
(assert (= var1191802 (bvsmod temp68_161 ARGNAME_groups_NAMEEND)))
(assert (= temp68_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp68_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp68_165 #x0000000000000001))
(assert (= var1191803 temp68_165))
(assert (= temp68_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp68_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp68_167 #x0000000000000001))
(assert (= var1191823 temp68_167))
(assert (= temp68_168 #x0000000000000001))
(assert (= var1180714 temp68_168))
(assert (= temp68_169 #x0000000000000000))
(assert (= temp68_170 temp68_169))
(assert (= temp68_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp68_170)))
(assert (= temp68_172 #x0000000000000001))
(assert (= temp68_173 temp68_172))
(assert (= temp68_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp68_173)))
(assert (= temp68_175 #x0000000000000002))
(assert (= temp68_176 temp68_175))
(assert (= temp68_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp68_176)))
(assert (= temp68_178 #x0000000000000003))
(assert (= temp68_179 temp68_178))
(assert (= temp68_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp68_179)))
(assert (= temp68_181 #x0000000000000004))
(assert (= temp68_182 temp68_181))
(assert (= temp68_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp68_182)))
(assert (= temp68_184 #x0000000000000005))
(assert (= temp68_185 temp68_184))
(assert (= temp68_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp68_185)))
(assert (= temp68_187 #x0000000000000000))
(assert (= temp68_188
   (ite (bvslt var1180714 temp68_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp68_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp68_188)))
(assert (= var1191831 temp68_189))
(assert (bvslt (ite (bvslt var1180714 temp68_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp68_190 #x0000000000000001))
(assert (= var1180714 temp68_190))
(assert (= temp68_192 var1180714))
(assert (= temp68_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp68_192)))
(assert (= temp68_191 temp68_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp68_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp68_194 #x0000000000000001))
(assert (= var1191836 temp68_194))
(assert (= temp68_195 #x0000000000000000))
(assert (= var1179826 temp68_195))
(assert (= temp68_197 var1179826))
(assert (= temp68_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp68_197)))
(assert (= temp68_196 temp68_198))
(assert (= temp68_199 #x0000000000000002))
(assert (= var1586025 temp68_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp68_200 #x0000000000000001))
(assert (= var1191993 temp68_200))
(assert (= temp68_201 #x0000000000000001))
(assert (= var2700303 temp68_201))
(assert (= temp68_202 #x0000000000000001))
(assert (= var2962447 temp68_202))
(assert (= temp68_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp68_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp68_204 #x0000000000000001))
(assert (= var211058 temp68_204))
(assert (= temp68_205 #x0000000000000001))
(assert (= var211188 temp68_205))
(assert (= var3879401 var211188))
(assert (= temp68_206 #x0000000000000000))
(assert (= var3866802 temp68_206))
(assert (= temp68_207 #x0000000000000000))
(assert (= temp68_208
   (ite (bvslt var3866802 temp68_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp68_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp68_208)))
(assert (= var3879420 temp68_209))
(assert (bvslt (ite (bvslt var3866802 temp68_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp68_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp68_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp68_211 #x0000000000000001))
(assert (= var3879421 temp68_211))
(assert (= temp68_212 #x0000000000000000))
(assert (= var4079423 temp68_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp68_213 #x0000000000000002))
(assert (= var4208259 temp68_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp68_214 #x0000000000000000))
(assert (= var4273820 temp68_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4993424 var211201))
(assert (= var211494 var210913))
(assert (= temp68_215 #x0000000000000000))
(assert (= var211495
   (ite (distinct var211494 temp68_215) #x0000000000000001 #x0000000000000000)))
(assert (= temp68_217 #x0000000000000001))
(assert (= temp68_216 temp68_217))
(assert (= temp68_218 #x0000000000000001))
(assert (= var6950378 temp68_218))
(assert (= temp68_220 #xffffffffffffffff))
(assert (= temp68_219 temp68_220))
(assert (= temp68_221 #x0000000000000001))
(assert (= var211058 temp68_221))
(assert (= temp68_222 #x0000000000000000))
(assert (= var7680788 temp68_222))
(assert (= var7680755 var7680788))
(assert (= var7549319 var7680755))
(assert (= var7549315 var7549319))
(assert (= var212669 var7549315))
(assert (= temp68_223 #x0000000000000000))
(assert (= var212669 temp68_223))
(model-add temp68_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp68_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp68_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp68_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





