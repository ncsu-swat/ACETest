(declare-fun temp1013_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp1013_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1013_3 () (_ BitVec 64))
(declare-fun temp1013_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1013_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp1013_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1013_7 () (_ BitVec 64))
(declare-fun temp1013_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1013_9 () (_ BitVec 64))
(declare-fun temp1013_10 () (_ BitVec 64))
(declare-fun temp1013_11 () (_ BitVec 64))
(declare-fun temp1013_12 () (_ BitVec 64))
(declare-fun temp1013_13 () (_ BitVec 64))
(declare-fun temp1013_14 () (_ BitVec 64))
(declare-fun temp1013_15 () (_ BitVec 64))
(declare-fun temp1013_16 () (_ BitVec 64))
(declare-fun temp1013_17 () (_ BitVec 64))
(declare-fun temp1013_18 () (_ BitVec 64))
(declare-fun temp1013_19 () (_ BitVec 64))
(declare-fun temp1013_20 () (_ BitVec 64))
(declare-fun temp1013_21 () (_ BitVec 64))
(declare-fun temp1013_22 () (_ BitVec 64))
(declare-fun temp1013_23 () (_ BitVec 64))
(declare-fun temp1013_24 () (_ BitVec 64))
(declare-fun temp1013_25 () (_ BitVec 64))
(declare-fun temp1013_26 () (_ BitVec 64))
(declare-fun temp1013_27 () (_ BitVec 64))
(declare-fun temp1013_28 () (_ BitVec 64))
(declare-fun temp1013_29 () (_ BitVec 64))
(declare-fun temp1013_30 () (_ BitVec 64))
(declare-fun temp1013_31 () (_ BitVec 64))
(declare-fun temp1013_32 () (_ BitVec 64))
(declare-fun temp1013_33 () (_ BitVec 64))
(declare-fun temp1013_34 () (_ BitVec 64))
(declare-fun temp1013_35 () (_ BitVec 64))
(declare-fun temp1013_36 () (_ BitVec 64))
(declare-fun temp1013_37 () (_ BitVec 64))
(declare-fun temp1013_38 () (_ BitVec 64))
(declare-fun temp1013_39 () (_ BitVec 64))
(declare-fun temp1013_40 () (_ BitVec 64))
(declare-fun temp1013_41 () (_ BitVec 64))
(declare-fun temp1013_42 () (_ BitVec 64))
(declare-fun temp1013_43 () (_ BitVec 64))
(declare-fun temp1013_44 () (_ BitVec 64))
(declare-fun temp1013_45 () (_ BitVec 64))
(declare-fun temp1013_46 () (_ BitVec 64))
(declare-fun temp1013_47 () (_ BitVec 64))
(declare-fun temp1013_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp1013_49 () (_ BitVec 64))
(declare-fun temp1013_50 () (_ BitVec 64))
(declare-fun temp1013_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1013_52 () (_ BitVec 64))
(declare-fun temp1013_53 () (_ BitVec 64))
(declare-fun temp1013_54 () (_ BitVec 64))
(declare-fun temp1013_55 () (_ BitVec 64))
(declare-fun temp1013_56 () (_ BitVec 64))
(declare-fun temp1013_57 () (_ BitVec 64))
(declare-fun temp1013_58 () (_ BitVec 64))
(declare-fun temp1013_59 () (_ BitVec 64))
(declare-fun temp1013_60 () (_ BitVec 64))
(declare-fun temp1013_61 () (_ BitVec 64))
(declare-fun temp1013_62 () (_ BitVec 64))
(declare-fun temp1013_63 () (_ BitVec 64))
(declare-fun temp1013_64 () (_ BitVec 64))
(declare-fun temp1013_65 () (_ BitVec 64))
(declare-fun temp1013_66 () (_ BitVec 64))
(declare-fun temp1013_67 () (_ BitVec 64))
(declare-fun temp1013_68 () (_ BitVec 64))
(declare-fun temp1013_69 () (_ BitVec 64))
(declare-fun temp1013_70 () (_ BitVec 64))
(declare-fun temp1013_71 () (_ BitVec 64))
(declare-fun temp1013_72 () (_ BitVec 64))
(declare-fun temp1013_73 () (_ BitVec 64))
(declare-fun temp1013_74 () (_ BitVec 64))
(declare-fun temp1013_75 () (_ BitVec 64))
(declare-fun temp1013_76 () (_ BitVec 64))
(declare-fun temp1013_77 () (_ BitVec 64))
(declare-fun temp1013_78 () (_ BitVec 64))
(declare-fun temp1013_79 () (_ BitVec 64))
(declare-fun temp1013_80 () (_ BitVec 64))
(declare-fun temp1013_81 () (_ BitVec 64))
(declare-fun temp1013_82 () (_ BitVec 64))
(declare-fun temp1013_83 () (_ BitVec 64))
(declare-fun temp1013_84 () (_ BitVec 64))
(declare-fun temp1013_85 () (_ BitVec 64))
(declare-fun temp1013_86 () (_ BitVec 64))
(declare-fun temp1013_87 () (_ BitVec 64))
(declare-fun temp1013_88 () (_ BitVec 64))
(declare-fun temp1013_89 () (_ BitVec 64))
(declare-fun temp1013_90 () (_ BitVec 64))
(declare-fun temp1013_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp1013_92 () (_ BitVec 64))
(declare-fun temp1013_93 () (_ BitVec 64))
(declare-fun temp1013_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1013_95 () (_ BitVec 64))
(declare-fun temp1013_96 () (_ BitVec 64))
(declare-fun temp1013_97 () (_ BitVec 64))
(declare-fun temp1013_98 () (_ BitVec 64))
(declare-fun temp1013_99 () (_ BitVec 64))
(declare-fun temp1013_100 () (_ BitVec 64))
(declare-fun temp1013_101 () (_ BitVec 64))
(declare-fun temp1013_102 () (_ BitVec 64))
(declare-fun temp1013_103 () (_ BitVec 64))
(declare-fun temp1013_104 () (_ BitVec 64))
(declare-fun temp1013_105 () (_ BitVec 64))
(declare-fun temp1013_106 () (_ BitVec 64))
(declare-fun temp1013_107 () (_ BitVec 64))
(declare-fun temp1013_108 () (_ BitVec 64))
(declare-fun temp1013_109 () (_ BitVec 64))
(declare-fun temp1013_110 () (_ BitVec 64))
(declare-fun temp1013_111 () (_ BitVec 64))
(declare-fun temp1013_112 () (_ BitVec 64))
(declare-fun temp1013_113 () (_ BitVec 64))
(declare-fun temp1013_114 () (_ BitVec 64))
(declare-fun temp1013_115 () (_ BitVec 64))
(declare-fun temp1013_116 () (_ BitVec 64))
(declare-fun temp1013_117 () (_ BitVec 64))
(declare-fun temp1013_118 () (_ BitVec 64))
(declare-fun temp1013_119 () (_ BitVec 64))
(declare-fun temp1013_120 () (_ BitVec 64))
(declare-fun temp1013_121 () (_ BitVec 64))
(declare-fun temp1013_122 () (_ BitVec 64))
(declare-fun temp1013_123 () (_ BitVec 64))
(declare-fun temp1013_124 () (_ BitVec 64))
(declare-fun temp1013_125 () (_ BitVec 64))
(declare-fun temp1013_126 () (_ BitVec 64))
(declare-fun temp1013_127 () (_ BitVec 64))
(declare-fun temp1013_128 () (_ BitVec 64))
(declare-fun temp1013_129 () (_ BitVec 64))
(declare-fun temp1013_130 () (_ BitVec 64))
(declare-fun temp1013_131 () (_ BitVec 64))
(declare-fun temp1013_132 () (_ BitVec 64))
(declare-fun temp1013_133 () (_ BitVec 64))
(declare-fun temp1013_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp1013_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp1013_136 () (_ BitVec 64))
(declare-fun temp1013_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp1013_138 () (_ BitVec 64))
(declare-fun temp1013_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1013_140 () (_ BitVec 64))
(declare-fun temp1013_141 () (_ BitVec 64))
(declare-fun temp1013_142 () (_ BitVec 64))
(declare-fun temp1013_143 () (_ BitVec 64))
(declare-fun temp1013_144 () (_ BitVec 64))
(declare-fun temp1013_145 () (_ BitVec 64))
(declare-fun temp1013_146 () (_ BitVec 64))
(declare-fun temp1013_147 () (_ BitVec 64))
(declare-fun temp1013_148 () (_ BitVec 64))
(declare-fun temp1013_149 () (_ BitVec 64))
(declare-fun temp1013_150 () (_ BitVec 64))
(declare-fun temp1013_151 () (_ BitVec 64))
(declare-fun temp1013_152 () (_ BitVec 64))
(declare-fun temp1013_153 () (_ BitVec 64))
(declare-fun temp1013_154 () (_ BitVec 64))
(declare-fun temp1013_155 () (_ BitVec 64))
(declare-fun temp1013_157 () (_ BitVec 64))
(declare-fun temp1013_158 () (_ BitVec 64))
(declare-fun temp1013_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp1013_159 () (_ BitVec 64))
(declare-fun temp1013_160 () (_ BitVec 64))
(declare-fun temp1013_162 () (_ BitVec 64))
(declare-fun temp1013_163 () (_ BitVec 64))
(declare-fun temp1013_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp1013_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp1013_165 () (_ BitVec 64))
(declare-fun temp1013_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp1013_167 () (_ BitVec 64))
(declare-fun temp1013_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp1013_169 () (_ BitVec 64))
(declare-fun temp1013_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1013_171 () (_ BitVec 64))
(declare-fun temp1013_172 () (_ BitVec 64))
(declare-fun temp1013_173 () (_ BitVec 64))
(declare-fun temp1013_174 () (_ BitVec 64))
(declare-fun temp1013_175 () (_ BitVec 64))
(declare-fun temp1013_176 () (_ BitVec 64))
(declare-fun temp1013_177 () (_ BitVec 64))
(declare-fun temp1013_178 () (_ BitVec 64))
(declare-fun temp1013_179 () (_ BitVec 64))
(declare-fun temp1013_180 () (_ BitVec 64))
(declare-fun temp1013_181 () (_ BitVec 64))
(declare-fun temp1013_182 () (_ BitVec 64))
(declare-fun temp1013_183 () (_ BitVec 64))
(declare-fun temp1013_184 () (_ BitVec 64))
(declare-fun temp1013_185 () (_ BitVec 64))
(declare-fun temp1013_186 () (_ BitVec 64))
(declare-fun temp1013_187 () (_ BitVec 64))
(declare-fun temp1013_188 () (_ BitVec 64))
(declare-fun temp1013_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp1013_190 () (_ BitVec 64))
(declare-fun temp1013_192 () (_ BitVec 64))
(declare-fun temp1013_193 () (_ BitVec 64))
(declare-fun temp1013_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp1013_194 () (_ BitVec 64))
(declare-fun temp1013_195 () (_ BitVec 64))
(declare-fun temp1013_197 () (_ BitVec 64))
(declare-fun temp1013_198 () (_ BitVec 64))
(declare-fun temp1013_196 () (_ BitVec 64))
(declare-fun temp1013_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp1013_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp1013_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp1013_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp1013_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp1013_204 () (_ BitVec 64))
(declare-fun temp1013_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp1013_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp1013_207 () (_ BitVec 64))
(declare-fun temp1013_208 () (_ BitVec 64))
(declare-fun temp1013_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp1013_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp1013_211 () (_ BitVec 64))
(declare-fun temp1013_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp1013_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp1013_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp1013_215 () (_ BitVec 64))
(assert (= temp1013_1 #x0000000000000001))
(assert (= var77203 temp1013_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp1013_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp1013_2)))
(assert (= temp1013_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1013_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1013_4 #x0000000000000000))
(assert (= var210941 temp1013_4))
(assert (= temp1013_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp1013_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1013_6 #x0000000000000000))
(assert (= var210986 temp1013_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp1013_7 #x0000000000000000))
(assert (= temp1013_8 temp1013_7))
(assert (= temp1013_9 (select ARGNAME_padding_NAMEEND_VAL temp1013_8)))
(assert (= temp1013_10 #x0000000000000001))
(assert (= temp1013_11 temp1013_10))
(assert (= temp1013_12 (select ARGNAME_padding_NAMEEND_VAL temp1013_11)))
(assert (= temp1013_13 #x0000000000000002))
(assert (= temp1013_14 temp1013_13))
(assert (= temp1013_15 (select ARGNAME_padding_NAMEEND_VAL temp1013_14)))
(assert (= temp1013_16 #x0000000000000003))
(assert (= temp1013_17 temp1013_16))
(assert (= temp1013_18 (select ARGNAME_padding_NAMEEND_VAL temp1013_17)))
(assert (= temp1013_19 #x0000000000000004))
(assert (= temp1013_20 temp1013_19))
(assert (= temp1013_21 (select ARGNAME_padding_NAMEEND_VAL temp1013_20)))
(assert (= temp1013_22 #x0000000000000005))
(assert (= temp1013_23 temp1013_22))
(assert (= temp1013_24 (select ARGNAME_padding_NAMEEND_VAL temp1013_23)))
(assert (= temp1013_25 #x0000000000000000))
(assert (= temp1013_26 #x0000000000000000))
(assert (= temp1013_27 temp1013_26))
(assert (= temp1013_28 (select ARGNAME_padding_NAMEEND_VAL temp1013_27)))
(assert (= temp1013_29 #x0000000000000000))
(assert (= temp1013_30 #x0000000000000001))
(assert (= temp1013_31 temp1013_30))
(assert (= temp1013_32 (select ARGNAME_padding_NAMEEND_VAL temp1013_31)))
(assert (= temp1013_33 #x0000000000000000))
(assert (= temp1013_34 #x0000000000000002))
(assert (= temp1013_35 temp1013_34))
(assert (= temp1013_36 (select ARGNAME_padding_NAMEEND_VAL temp1013_35)))
(assert (= temp1013_37 #x0000000000000000))
(assert (= temp1013_38 #x0000000000000003))
(assert (= temp1013_39 temp1013_38))
(assert (= temp1013_40 (select ARGNAME_padding_NAMEEND_VAL temp1013_39)))
(assert (= temp1013_41 #x0000000000000000))
(assert (= temp1013_42 #x0000000000000004))
(assert (= temp1013_43 temp1013_42))
(assert (= temp1013_44 (select ARGNAME_padding_NAMEEND_VAL temp1013_43)))
(assert (= temp1013_45 #x0000000000000000))
(assert (= temp1013_46 #x0000000000000005))
(assert (= temp1013_47 temp1013_46))
(assert (= temp1013_48 (select ARGNAME_padding_NAMEEND_VAL temp1013_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp1013_28 temp1013_25)
             (bvslt temp1013_32 temp1013_29)
             (bvslt temp1013_36 temp1013_33)
             (bvslt temp1013_40 temp1013_37)
             (bvslt temp1013_44 temp1013_41)
             (bvslt temp1013_48 temp1013_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1013_49 #x0000000000000000))
(assert (= var1191714 temp1013_49))
(assert (= temp1013_50 #x0000000000000000))
(assert (= temp1013_51 temp1013_50))
(assert (= temp1013_52 (select ARGNAME_output_padding_NAMEEND_VAL temp1013_51)))
(assert (= temp1013_53 #x0000000000000001))
(assert (= temp1013_54 temp1013_53))
(assert (= temp1013_55 (select ARGNAME_output_padding_NAMEEND_VAL temp1013_54)))
(assert (= temp1013_56 #x0000000000000002))
(assert (= temp1013_57 temp1013_56))
(assert (= temp1013_58 (select ARGNAME_output_padding_NAMEEND_VAL temp1013_57)))
(assert (= temp1013_59 #x0000000000000003))
(assert (= temp1013_60 temp1013_59))
(assert (= temp1013_61 (select ARGNAME_output_padding_NAMEEND_VAL temp1013_60)))
(assert (= temp1013_62 #x0000000000000004))
(assert (= temp1013_63 temp1013_62))
(assert (= temp1013_64 (select ARGNAME_output_padding_NAMEEND_VAL temp1013_63)))
(assert (= temp1013_65 #x0000000000000005))
(assert (= temp1013_66 temp1013_65))
(assert (= temp1013_67 (select ARGNAME_output_padding_NAMEEND_VAL temp1013_66)))
(assert (= temp1013_68 #x0000000000000000))
(assert (= temp1013_69 #x0000000000000000))
(assert (= temp1013_70 temp1013_69))
(assert (= temp1013_71 (select ARGNAME_output_padding_NAMEEND_VAL temp1013_70)))
(assert (= temp1013_72 #x0000000000000000))
(assert (= temp1013_73 #x0000000000000001))
(assert (= temp1013_74 temp1013_73))
(assert (= temp1013_75 (select ARGNAME_output_padding_NAMEEND_VAL temp1013_74)))
(assert (= temp1013_76 #x0000000000000000))
(assert (= temp1013_77 #x0000000000000002))
(assert (= temp1013_78 temp1013_77))
(assert (= temp1013_79 (select ARGNAME_output_padding_NAMEEND_VAL temp1013_78)))
(assert (= temp1013_80 #x0000000000000000))
(assert (= temp1013_81 #x0000000000000003))
(assert (= temp1013_82 temp1013_81))
(assert (= temp1013_83 (select ARGNAME_output_padding_NAMEEND_VAL temp1013_82)))
(assert (= temp1013_84 #x0000000000000000))
(assert (= temp1013_85 #x0000000000000004))
(assert (= temp1013_86 temp1013_85))
(assert (= temp1013_87 (select ARGNAME_output_padding_NAMEEND_VAL temp1013_86)))
(assert (= temp1013_88 #x0000000000000000))
(assert (= temp1013_89 #x0000000000000005))
(assert (= temp1013_90 temp1013_89))
(assert (= temp1013_91 (select ARGNAME_output_padding_NAMEEND_VAL temp1013_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp1013_71 temp1013_68)
             (bvslt temp1013_75 temp1013_72)
             (bvslt temp1013_79 temp1013_76)
             (bvslt temp1013_83 temp1013_80)
             (bvslt temp1013_87 temp1013_84)
             (bvslt temp1013_91 temp1013_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1013_92 #x0000000000000000))
(assert (= var1191725 temp1013_92))
(assert (= temp1013_93 #x0000000000000000))
(assert (= temp1013_94 temp1013_93))
(assert (= temp1013_95 (select ARGNAME_stride_NAMEEND_VAL temp1013_94)))
(assert (= temp1013_96 #x0000000000000001))
(assert (= temp1013_97 temp1013_96))
(assert (= temp1013_98 (select ARGNAME_stride_NAMEEND_VAL temp1013_97)))
(assert (= temp1013_99 #x0000000000000002))
(assert (= temp1013_100 temp1013_99))
(assert (= temp1013_101 (select ARGNAME_stride_NAMEEND_VAL temp1013_100)))
(assert (= temp1013_102 #x0000000000000003))
(assert (= temp1013_103 temp1013_102))
(assert (= temp1013_104 (select ARGNAME_stride_NAMEEND_VAL temp1013_103)))
(assert (= temp1013_105 #x0000000000000004))
(assert (= temp1013_106 temp1013_105))
(assert (= temp1013_107 (select ARGNAME_stride_NAMEEND_VAL temp1013_106)))
(assert (= temp1013_108 #x0000000000000005))
(assert (= temp1013_109 temp1013_108))
(assert (= temp1013_110 (select ARGNAME_stride_NAMEEND_VAL temp1013_109)))
(assert (= temp1013_111 #x0000000000000000))
(assert (= temp1013_112 #x0000000000000000))
(assert (= temp1013_113 temp1013_112))
(assert (= temp1013_114 (select ARGNAME_stride_NAMEEND_VAL temp1013_113)))
(assert (= temp1013_115 #x0000000000000000))
(assert (= temp1013_116 #x0000000000000001))
(assert (= temp1013_117 temp1013_116))
(assert (= temp1013_118 (select ARGNAME_stride_NAMEEND_VAL temp1013_117)))
(assert (= temp1013_119 #x0000000000000000))
(assert (= temp1013_120 #x0000000000000002))
(assert (= temp1013_121 temp1013_120))
(assert (= temp1013_122 (select ARGNAME_stride_NAMEEND_VAL temp1013_121)))
(assert (= temp1013_123 #x0000000000000000))
(assert (= temp1013_124 #x0000000000000003))
(assert (= temp1013_125 temp1013_124))
(assert (= temp1013_126 (select ARGNAME_stride_NAMEEND_VAL temp1013_125)))
(assert (= temp1013_127 #x0000000000000000))
(assert (= temp1013_128 #x0000000000000004))
(assert (= temp1013_129 temp1013_128))
(assert (= temp1013_130 (select ARGNAME_stride_NAMEEND_VAL temp1013_129)))
(assert (= temp1013_131 #x0000000000000000))
(assert (= temp1013_132 #x0000000000000005))
(assert (= temp1013_133 temp1013_132))
(assert (= temp1013_134 (select ARGNAME_stride_NAMEEND_VAL temp1013_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp1013_114 temp1013_111)
             (bvsle temp1013_118 temp1013_115)
             (bvsle temp1013_122 temp1013_119)
             (bvsle temp1013_126 temp1013_123)
             (bvsle temp1013_130 temp1013_127)
             (bvsle temp1013_134 temp1013_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1013_135 #x0000000000000000))
(assert (= var1191735 temp1013_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1013_136 #x0000000000000001))
(assert (= var1191747 temp1013_136))
(assert (= temp1013_137 #x0000000000000000))
(assert (= var1179826 temp1013_137))
(assert (= temp1013_138 #x0000000000000000))
(assert (= temp1013_139 temp1013_138))
(assert (= temp1013_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1013_139)))
(assert (= temp1013_141 #x0000000000000001))
(assert (= temp1013_142 temp1013_141))
(assert (= temp1013_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1013_142)))
(assert (= temp1013_144 #x0000000000000002))
(assert (= temp1013_145 temp1013_144))
(assert (= temp1013_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1013_145)))
(assert (= temp1013_147 #x0000000000000003))
(assert (= temp1013_148 temp1013_147))
(assert (= temp1013_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1013_148)))
(assert (= temp1013_150 #x0000000000000004))
(assert (= temp1013_151 temp1013_150))
(assert (= temp1013_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1013_151)))
(assert (= temp1013_153 #x0000000000000005))
(assert (= temp1013_154 temp1013_153))
(assert (= temp1013_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1013_154)))
(assert (= temp1013_157 var1179826))
(assert (= temp1013_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1013_157)))
(assert (= temp1013_156 temp1013_158))
(assert (= var1191780
   (ite (bvslt temp1013_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1013_159 #x0000000000000000))
(assert (= var1191780 temp1013_159))
(assert (= temp1013_160 #x0000000000000000))
(assert (= var1179826 temp1013_160))
(assert (= temp1013_162 var1179826))
(assert (= temp1013_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1013_162)))
(assert (= temp1013_161 temp1013_163))
(assert (= var1191802 (bvsmod temp1013_161 ARGNAME_groups_NAMEEND)))
(assert (= temp1013_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp1013_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp1013_165 #x0000000000000001))
(assert (= var1191803 temp1013_165))
(assert (= temp1013_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp1013_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1013_167 #x0000000000000001))
(assert (= var1191823 temp1013_167))
(assert (= temp1013_168 #x0000000000000001))
(assert (= var1180714 temp1013_168))
(assert (= temp1013_169 #x0000000000000000))
(assert (= temp1013_170 temp1013_169))
(assert (= temp1013_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp1013_170)))
(assert (= temp1013_172 #x0000000000000001))
(assert (= temp1013_173 temp1013_172))
(assert (= temp1013_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp1013_173)))
(assert (= temp1013_175 #x0000000000000002))
(assert (= temp1013_176 temp1013_175))
(assert (= temp1013_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp1013_176)))
(assert (= temp1013_178 #x0000000000000003))
(assert (= temp1013_179 temp1013_178))
(assert (= temp1013_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp1013_179)))
(assert (= temp1013_181 #x0000000000000004))
(assert (= temp1013_182 temp1013_181))
(assert (= temp1013_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp1013_182)))
(assert (= temp1013_184 #x0000000000000005))
(assert (= temp1013_185 temp1013_184))
(assert (= temp1013_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp1013_185)))
(assert (= temp1013_187 #x0000000000000000))
(assert (= temp1013_188
   (ite (bvslt var1180714 temp1013_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp1013_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp1013_188)))
(assert (= var1191831 temp1013_189))
(assert (bvslt (ite (bvslt var1180714 temp1013_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1013_190 #x0000000000000001))
(assert (= var1180714 temp1013_190))
(assert (= temp1013_192 var1180714))
(assert (= temp1013_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1013_192)))
(assert (= temp1013_191 temp1013_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp1013_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp1013_194 #x0000000000000001))
(assert (= var1191836 temp1013_194))
(assert (= temp1013_195 #x0000000000000000))
(assert (= var1179826 temp1013_195))
(assert (= temp1013_197 var1179826))
(assert (= temp1013_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1013_197)))
(assert (= temp1013_196 temp1013_198))
(assert (= temp1013_199 #x0000000000000002))
(assert (= var1586025 temp1013_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp1013_200 #x0000000000000001))
(assert (= var1191993 temp1013_200))
(assert (= temp1013_201 #x0000000000000001))
(assert (= var2700303 temp1013_201))
(assert (= temp1013_202 #x0000000000000001))
(assert (= var2962447 temp1013_202))
(assert (= temp1013_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1013_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1013_204 #x0000000000000001))
(assert (= var211058 temp1013_204))
(assert (= temp1013_205 #x0000000000000001))
(assert (= var211188 temp1013_205))
(assert (= var3879401 var211188))
(assert (= temp1013_206 #x0000000000000000))
(assert (= var3866802 temp1013_206))
(assert (= temp1013_207 #x0000000000000000))
(assert (= temp1013_208
   (ite (bvslt var3866802 temp1013_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp1013_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp1013_208)))
(assert (= var3879420 temp1013_209))
(assert (bvslt (ite (bvslt var3866802 temp1013_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1013_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp1013_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp1013_211 #x0000000000000001))
(assert (= var3879421 temp1013_211))
(assert (= temp1013_212 #x0000000000000000))
(assert (= var4079423 temp1013_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp1013_213 #x0000000000000002))
(assert (= var4208259 temp1013_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1013_214 #x0000000000000000))
(assert (= var4273820 temp1013_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp1013_215 #x0000000000000001))
(assert (= var211058 temp1013_215))
(model-add temp1013_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp1013_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1013_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp1013_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




