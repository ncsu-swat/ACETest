(declare-fun temp11426_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp11426_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp11426_3 () (_ BitVec 64))
(declare-fun temp11426_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp11426_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp11426_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp11426_7 () (_ BitVec 64))
(declare-fun temp11426_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11426_9 () (_ BitVec 64))
(declare-fun temp11426_10 () (_ BitVec 64))
(declare-fun temp11426_11 () (_ BitVec 64))
(declare-fun temp11426_12 () (_ BitVec 64))
(declare-fun temp11426_13 () (_ BitVec 64))
(declare-fun temp11426_14 () (_ BitVec 64))
(declare-fun temp11426_15 () (_ BitVec 64))
(declare-fun temp11426_16 () (_ BitVec 64))
(declare-fun temp11426_17 () (_ BitVec 64))
(declare-fun temp11426_18 () (_ BitVec 64))
(declare-fun temp11426_19 () (_ BitVec 64))
(declare-fun temp11426_20 () (_ BitVec 64))
(declare-fun temp11426_21 () (_ BitVec 64))
(declare-fun temp11426_22 () (_ BitVec 64))
(declare-fun temp11426_23 () (_ BitVec 64))
(declare-fun temp11426_24 () (_ BitVec 64))
(declare-fun temp11426_25 () (_ BitVec 64))
(declare-fun temp11426_26 () (_ BitVec 64))
(declare-fun temp11426_27 () (_ BitVec 64))
(declare-fun temp11426_28 () (_ BitVec 64))
(declare-fun temp11426_29 () (_ BitVec 64))
(declare-fun temp11426_30 () (_ BitVec 64))
(declare-fun temp11426_31 () (_ BitVec 64))
(declare-fun temp11426_32 () (_ BitVec 64))
(declare-fun temp11426_33 () (_ BitVec 64))
(declare-fun temp11426_34 () (_ BitVec 64))
(declare-fun temp11426_35 () (_ BitVec 64))
(declare-fun temp11426_36 () (_ BitVec 64))
(declare-fun temp11426_37 () (_ BitVec 64))
(declare-fun temp11426_38 () (_ BitVec 64))
(declare-fun temp11426_39 () (_ BitVec 64))
(declare-fun temp11426_40 () (_ BitVec 64))
(declare-fun temp11426_41 () (_ BitVec 64))
(declare-fun temp11426_42 () (_ BitVec 64))
(declare-fun temp11426_43 () (_ BitVec 64))
(declare-fun temp11426_44 () (_ BitVec 64))
(declare-fun temp11426_45 () (_ BitVec 64))
(declare-fun temp11426_46 () (_ BitVec 64))
(declare-fun temp11426_47 () (_ BitVec 64))
(declare-fun temp11426_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp11426_49 () (_ BitVec 64))
(declare-fun temp11426_50 () (_ BitVec 64))
(declare-fun temp11426_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11426_52 () (_ BitVec 64))
(declare-fun temp11426_53 () (_ BitVec 64))
(declare-fun temp11426_54 () (_ BitVec 64))
(declare-fun temp11426_55 () (_ BitVec 64))
(declare-fun temp11426_56 () (_ BitVec 64))
(declare-fun temp11426_57 () (_ BitVec 64))
(declare-fun temp11426_58 () (_ BitVec 64))
(declare-fun temp11426_59 () (_ BitVec 64))
(declare-fun temp11426_60 () (_ BitVec 64))
(declare-fun temp11426_61 () (_ BitVec 64))
(declare-fun temp11426_62 () (_ BitVec 64))
(declare-fun temp11426_63 () (_ BitVec 64))
(declare-fun temp11426_64 () (_ BitVec 64))
(declare-fun temp11426_65 () (_ BitVec 64))
(declare-fun temp11426_66 () (_ BitVec 64))
(declare-fun temp11426_67 () (_ BitVec 64))
(declare-fun temp11426_68 () (_ BitVec 64))
(declare-fun temp11426_69 () (_ BitVec 64))
(declare-fun temp11426_70 () (_ BitVec 64))
(declare-fun temp11426_71 () (_ BitVec 64))
(declare-fun temp11426_72 () (_ BitVec 64))
(declare-fun temp11426_73 () (_ BitVec 64))
(declare-fun temp11426_74 () (_ BitVec 64))
(declare-fun temp11426_75 () (_ BitVec 64))
(declare-fun temp11426_76 () (_ BitVec 64))
(declare-fun temp11426_77 () (_ BitVec 64))
(declare-fun temp11426_78 () (_ BitVec 64))
(declare-fun temp11426_79 () (_ BitVec 64))
(declare-fun temp11426_80 () (_ BitVec 64))
(declare-fun temp11426_81 () (_ BitVec 64))
(declare-fun temp11426_82 () (_ BitVec 64))
(declare-fun temp11426_83 () (_ BitVec 64))
(declare-fun temp11426_84 () (_ BitVec 64))
(declare-fun temp11426_85 () (_ BitVec 64))
(declare-fun temp11426_86 () (_ BitVec 64))
(declare-fun temp11426_87 () (_ BitVec 64))
(declare-fun temp11426_88 () (_ BitVec 64))
(declare-fun temp11426_89 () (_ BitVec 64))
(declare-fun temp11426_90 () (_ BitVec 64))
(declare-fun temp11426_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp11426_92 () (_ BitVec 64))
(declare-fun temp11426_93 () (_ BitVec 64))
(declare-fun temp11426_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11426_95 () (_ BitVec 64))
(declare-fun temp11426_96 () (_ BitVec 64))
(declare-fun temp11426_97 () (_ BitVec 64))
(declare-fun temp11426_98 () (_ BitVec 64))
(declare-fun temp11426_99 () (_ BitVec 64))
(declare-fun temp11426_100 () (_ BitVec 64))
(declare-fun temp11426_101 () (_ BitVec 64))
(declare-fun temp11426_102 () (_ BitVec 64))
(declare-fun temp11426_103 () (_ BitVec 64))
(declare-fun temp11426_104 () (_ BitVec 64))
(declare-fun temp11426_105 () (_ BitVec 64))
(declare-fun temp11426_106 () (_ BitVec 64))
(declare-fun temp11426_107 () (_ BitVec 64))
(declare-fun temp11426_108 () (_ BitVec 64))
(declare-fun temp11426_109 () (_ BitVec 64))
(declare-fun temp11426_110 () (_ BitVec 64))
(declare-fun temp11426_111 () (_ BitVec 64))
(declare-fun temp11426_112 () (_ BitVec 64))
(declare-fun temp11426_113 () (_ BitVec 64))
(declare-fun temp11426_114 () (_ BitVec 64))
(declare-fun temp11426_115 () (_ BitVec 64))
(declare-fun temp11426_116 () (_ BitVec 64))
(declare-fun temp11426_117 () (_ BitVec 64))
(declare-fun temp11426_118 () (_ BitVec 64))
(declare-fun temp11426_119 () (_ BitVec 64))
(declare-fun temp11426_120 () (_ BitVec 64))
(declare-fun temp11426_121 () (_ BitVec 64))
(declare-fun temp11426_122 () (_ BitVec 64))
(declare-fun temp11426_123 () (_ BitVec 64))
(declare-fun temp11426_124 () (_ BitVec 64))
(declare-fun temp11426_125 () (_ BitVec 64))
(declare-fun temp11426_126 () (_ BitVec 64))
(declare-fun temp11426_127 () (_ BitVec 64))
(declare-fun temp11426_128 () (_ BitVec 64))
(declare-fun temp11426_129 () (_ BitVec 64))
(declare-fun temp11426_130 () (_ BitVec 64))
(declare-fun temp11426_131 () (_ BitVec 64))
(declare-fun temp11426_132 () (_ BitVec 64))
(declare-fun temp11426_133 () (_ BitVec 64))
(declare-fun temp11426_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp11426_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp11426_136 () (_ BitVec 64))
(declare-fun temp11426_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp11426_138 () (_ BitVec 64))
(declare-fun temp11426_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11426_140 () (_ BitVec 64))
(declare-fun temp11426_141 () (_ BitVec 64))
(declare-fun temp11426_142 () (_ BitVec 64))
(declare-fun temp11426_143 () (_ BitVec 64))
(declare-fun temp11426_144 () (_ BitVec 64))
(declare-fun temp11426_145 () (_ BitVec 64))
(declare-fun temp11426_146 () (_ BitVec 64))
(declare-fun temp11426_147 () (_ BitVec 64))
(declare-fun temp11426_148 () (_ BitVec 64))
(declare-fun temp11426_149 () (_ BitVec 64))
(declare-fun temp11426_150 () (_ BitVec 64))
(declare-fun temp11426_151 () (_ BitVec 64))
(declare-fun temp11426_152 () (_ BitVec 64))
(declare-fun temp11426_153 () (_ BitVec 64))
(declare-fun temp11426_154 () (_ BitVec 64))
(declare-fun temp11426_155 () (_ BitVec 64))
(declare-fun temp11426_157 () (_ BitVec 64))
(declare-fun temp11426_158 () (_ BitVec 64))
(declare-fun temp11426_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp11426_159 () (_ BitVec 64))
(declare-fun temp11426_160 () (_ BitVec 64))
(declare-fun temp11426_162 () (_ BitVec 64))
(declare-fun temp11426_163 () (_ BitVec 64))
(declare-fun temp11426_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp11426_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp11426_165 () (_ BitVec 64))
(declare-fun temp11426_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp11426_167 () (_ BitVec 64))
(declare-fun temp11426_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp11426_169 () (_ BitVec 64))
(declare-fun temp11426_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11426_171 () (_ BitVec 64))
(declare-fun temp11426_172 () (_ BitVec 64))
(declare-fun temp11426_173 () (_ BitVec 64))
(declare-fun temp11426_174 () (_ BitVec 64))
(declare-fun temp11426_175 () (_ BitVec 64))
(declare-fun temp11426_176 () (_ BitVec 64))
(declare-fun temp11426_177 () (_ BitVec 64))
(declare-fun temp11426_178 () (_ BitVec 64))
(declare-fun temp11426_179 () (_ BitVec 64))
(declare-fun temp11426_180 () (_ BitVec 64))
(declare-fun temp11426_181 () (_ BitVec 64))
(declare-fun temp11426_182 () (_ BitVec 64))
(declare-fun temp11426_183 () (_ BitVec 64))
(declare-fun temp11426_184 () (_ BitVec 64))
(declare-fun temp11426_185 () (_ BitVec 64))
(declare-fun temp11426_186 () (_ BitVec 64))
(declare-fun temp11426_187 () (_ BitVec 64))
(declare-fun temp11426_188 () (_ BitVec 64))
(declare-fun temp11426_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp11426_190 () (_ BitVec 64))
(declare-fun temp11426_192 () (_ BitVec 64))
(declare-fun temp11426_193 () (_ BitVec 64))
(declare-fun temp11426_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp11426_194 () (_ BitVec 64))
(declare-fun temp11426_195 () (_ BitVec 64))
(declare-fun temp11426_197 () (_ BitVec 64))
(declare-fun temp11426_198 () (_ BitVec 64))
(declare-fun temp11426_196 () (_ BitVec 64))
(declare-fun temp11426_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp11426_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp11426_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp11426_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp11426_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp11426_204 () (_ BitVec 64))
(declare-fun temp11426_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp11426_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp11426_207 () (_ BitVec 64))
(declare-fun temp11426_208 () (_ BitVec 64))
(declare-fun temp11426_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp11426_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp11426_211 () (_ BitVec 64))
(declare-fun temp11426_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp11426_213 () (_ BitVec 64))
(declare-fun temp11426_214 () (_ BitVec 64))
(declare-fun temp11426_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp11426_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp11426_217 () (_ BitVec 64))
(declare-fun temp11426_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp11426_219 () (_ BitVec 64))
(declare-fun var4404867 () (_ BitVec 64))
(declare-fun var4404869 () (_ BitVec 64))
(declare-fun var4470412 () (_ BitVec 64))
(declare-fun var4470413 () (_ BitVec 64))
(declare-fun var4470426 () (_ BitVec 64))
(declare-fun var4470428 () (_ BitVec 64))
(declare-fun temp11426_220 () (_ BitVec 64))
(declare-fun var4470453 () (_ BitVec 64))
(declare-fun var4470455 () (_ BitVec 64))
(declare-fun var4591443 () (_ BitVec 64))
(declare-fun temp11426_221 () (_ BitVec 64))
(assert (= temp11426_1 #x0000000000000001))
(assert (= var77203 temp11426_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp11426_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp11426_2)))
(assert (= temp11426_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp11426_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11426_4 #x0000000000000000))
(assert (= var210941 temp11426_4))
(assert (= temp11426_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp11426_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11426_6 #x0000000000000000))
(assert (= var210986 temp11426_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp11426_7 #x0000000000000000))
(assert (= temp11426_8 temp11426_7))
(assert (= temp11426_9 (select ARGNAME_padding_NAMEEND_VAL temp11426_8)))
(assert (= temp11426_10 #x0000000000000001))
(assert (= temp11426_11 temp11426_10))
(assert (= temp11426_12 (select ARGNAME_padding_NAMEEND_VAL temp11426_11)))
(assert (= temp11426_13 #x0000000000000002))
(assert (= temp11426_14 temp11426_13))
(assert (= temp11426_15 (select ARGNAME_padding_NAMEEND_VAL temp11426_14)))
(assert (= temp11426_16 #x0000000000000003))
(assert (= temp11426_17 temp11426_16))
(assert (= temp11426_18 (select ARGNAME_padding_NAMEEND_VAL temp11426_17)))
(assert (= temp11426_19 #x0000000000000004))
(assert (= temp11426_20 temp11426_19))
(assert (= temp11426_21 (select ARGNAME_padding_NAMEEND_VAL temp11426_20)))
(assert (= temp11426_22 #x0000000000000005))
(assert (= temp11426_23 temp11426_22))
(assert (= temp11426_24 (select ARGNAME_padding_NAMEEND_VAL temp11426_23)))
(assert (= temp11426_25 #x0000000000000000))
(assert (= temp11426_26 #x0000000000000000))
(assert (= temp11426_27 temp11426_26))
(assert (= temp11426_28 (select ARGNAME_padding_NAMEEND_VAL temp11426_27)))
(assert (= temp11426_29 #x0000000000000000))
(assert (= temp11426_30 #x0000000000000001))
(assert (= temp11426_31 temp11426_30))
(assert (= temp11426_32 (select ARGNAME_padding_NAMEEND_VAL temp11426_31)))
(assert (= temp11426_33 #x0000000000000000))
(assert (= temp11426_34 #x0000000000000002))
(assert (= temp11426_35 temp11426_34))
(assert (= temp11426_36 (select ARGNAME_padding_NAMEEND_VAL temp11426_35)))
(assert (= temp11426_37 #x0000000000000000))
(assert (= temp11426_38 #x0000000000000003))
(assert (= temp11426_39 temp11426_38))
(assert (= temp11426_40 (select ARGNAME_padding_NAMEEND_VAL temp11426_39)))
(assert (= temp11426_41 #x0000000000000000))
(assert (= temp11426_42 #x0000000000000004))
(assert (= temp11426_43 temp11426_42))
(assert (= temp11426_44 (select ARGNAME_padding_NAMEEND_VAL temp11426_43)))
(assert (= temp11426_45 #x0000000000000000))
(assert (= temp11426_46 #x0000000000000005))
(assert (= temp11426_47 temp11426_46))
(assert (= temp11426_48 (select ARGNAME_padding_NAMEEND_VAL temp11426_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp11426_28 temp11426_25)
             (bvslt temp11426_32 temp11426_29)
             (bvslt temp11426_36 temp11426_33)
             (bvslt temp11426_40 temp11426_37)
             (bvslt temp11426_44 temp11426_41)
             (bvslt temp11426_48 temp11426_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11426_49 #x0000000000000000))
(assert (= var1191714 temp11426_49))
(assert (= temp11426_50 #x0000000000000000))
(assert (= temp11426_51 temp11426_50))
(assert (= temp11426_52 (select ARGNAME_output_padding_NAMEEND_VAL temp11426_51)))
(assert (= temp11426_53 #x0000000000000001))
(assert (= temp11426_54 temp11426_53))
(assert (= temp11426_55 (select ARGNAME_output_padding_NAMEEND_VAL temp11426_54)))
(assert (= temp11426_56 #x0000000000000002))
(assert (= temp11426_57 temp11426_56))
(assert (= temp11426_58 (select ARGNAME_output_padding_NAMEEND_VAL temp11426_57)))
(assert (= temp11426_59 #x0000000000000003))
(assert (= temp11426_60 temp11426_59))
(assert (= temp11426_61 (select ARGNAME_output_padding_NAMEEND_VAL temp11426_60)))
(assert (= temp11426_62 #x0000000000000004))
(assert (= temp11426_63 temp11426_62))
(assert (= temp11426_64 (select ARGNAME_output_padding_NAMEEND_VAL temp11426_63)))
(assert (= temp11426_65 #x0000000000000005))
(assert (= temp11426_66 temp11426_65))
(assert (= temp11426_67 (select ARGNAME_output_padding_NAMEEND_VAL temp11426_66)))
(assert (= temp11426_68 #x0000000000000000))
(assert (= temp11426_69 #x0000000000000000))
(assert (= temp11426_70 temp11426_69))
(assert (= temp11426_71 (select ARGNAME_output_padding_NAMEEND_VAL temp11426_70)))
(assert (= temp11426_72 #x0000000000000000))
(assert (= temp11426_73 #x0000000000000001))
(assert (= temp11426_74 temp11426_73))
(assert (= temp11426_75 (select ARGNAME_output_padding_NAMEEND_VAL temp11426_74)))
(assert (= temp11426_76 #x0000000000000000))
(assert (= temp11426_77 #x0000000000000002))
(assert (= temp11426_78 temp11426_77))
(assert (= temp11426_79 (select ARGNAME_output_padding_NAMEEND_VAL temp11426_78)))
(assert (= temp11426_80 #x0000000000000000))
(assert (= temp11426_81 #x0000000000000003))
(assert (= temp11426_82 temp11426_81))
(assert (= temp11426_83 (select ARGNAME_output_padding_NAMEEND_VAL temp11426_82)))
(assert (= temp11426_84 #x0000000000000000))
(assert (= temp11426_85 #x0000000000000004))
(assert (= temp11426_86 temp11426_85))
(assert (= temp11426_87 (select ARGNAME_output_padding_NAMEEND_VAL temp11426_86)))
(assert (= temp11426_88 #x0000000000000000))
(assert (= temp11426_89 #x0000000000000005))
(assert (= temp11426_90 temp11426_89))
(assert (= temp11426_91 (select ARGNAME_output_padding_NAMEEND_VAL temp11426_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp11426_71 temp11426_68)
             (bvslt temp11426_75 temp11426_72)
             (bvslt temp11426_79 temp11426_76)
             (bvslt temp11426_83 temp11426_80)
             (bvslt temp11426_87 temp11426_84)
             (bvslt temp11426_91 temp11426_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11426_92 #x0000000000000000))
(assert (= var1191725 temp11426_92))
(assert (= temp11426_93 #x0000000000000000))
(assert (= temp11426_94 temp11426_93))
(assert (= temp11426_95 (select ARGNAME_stride_NAMEEND_VAL temp11426_94)))
(assert (= temp11426_96 #x0000000000000001))
(assert (= temp11426_97 temp11426_96))
(assert (= temp11426_98 (select ARGNAME_stride_NAMEEND_VAL temp11426_97)))
(assert (= temp11426_99 #x0000000000000002))
(assert (= temp11426_100 temp11426_99))
(assert (= temp11426_101 (select ARGNAME_stride_NAMEEND_VAL temp11426_100)))
(assert (= temp11426_102 #x0000000000000003))
(assert (= temp11426_103 temp11426_102))
(assert (= temp11426_104 (select ARGNAME_stride_NAMEEND_VAL temp11426_103)))
(assert (= temp11426_105 #x0000000000000004))
(assert (= temp11426_106 temp11426_105))
(assert (= temp11426_107 (select ARGNAME_stride_NAMEEND_VAL temp11426_106)))
(assert (= temp11426_108 #x0000000000000005))
(assert (= temp11426_109 temp11426_108))
(assert (= temp11426_110 (select ARGNAME_stride_NAMEEND_VAL temp11426_109)))
(assert (= temp11426_111 #x0000000000000000))
(assert (= temp11426_112 #x0000000000000000))
(assert (= temp11426_113 temp11426_112))
(assert (= temp11426_114 (select ARGNAME_stride_NAMEEND_VAL temp11426_113)))
(assert (= temp11426_115 #x0000000000000000))
(assert (= temp11426_116 #x0000000000000001))
(assert (= temp11426_117 temp11426_116))
(assert (= temp11426_118 (select ARGNAME_stride_NAMEEND_VAL temp11426_117)))
(assert (= temp11426_119 #x0000000000000000))
(assert (= temp11426_120 #x0000000000000002))
(assert (= temp11426_121 temp11426_120))
(assert (= temp11426_122 (select ARGNAME_stride_NAMEEND_VAL temp11426_121)))
(assert (= temp11426_123 #x0000000000000000))
(assert (= temp11426_124 #x0000000000000003))
(assert (= temp11426_125 temp11426_124))
(assert (= temp11426_126 (select ARGNAME_stride_NAMEEND_VAL temp11426_125)))
(assert (= temp11426_127 #x0000000000000000))
(assert (= temp11426_128 #x0000000000000004))
(assert (= temp11426_129 temp11426_128))
(assert (= temp11426_130 (select ARGNAME_stride_NAMEEND_VAL temp11426_129)))
(assert (= temp11426_131 #x0000000000000000))
(assert (= temp11426_132 #x0000000000000005))
(assert (= temp11426_133 temp11426_132))
(assert (= temp11426_134 (select ARGNAME_stride_NAMEEND_VAL temp11426_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp11426_114 temp11426_111)
             (bvsle temp11426_118 temp11426_115)
             (bvsle temp11426_122 temp11426_119)
             (bvsle temp11426_126 temp11426_123)
             (bvsle temp11426_130 temp11426_127)
             (bvsle temp11426_134 temp11426_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11426_135 #x0000000000000000))
(assert (= var1191735 temp11426_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11426_136 #x0000000000000001))
(assert (= var1191747 temp11426_136))
(assert (= temp11426_137 #x0000000000000000))
(assert (= var1179826 temp11426_137))
(assert (= temp11426_138 #x0000000000000000))
(assert (= temp11426_139 temp11426_138))
(assert (= temp11426_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11426_139)))
(assert (= temp11426_141 #x0000000000000001))
(assert (= temp11426_142 temp11426_141))
(assert (= temp11426_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11426_142)))
(assert (= temp11426_144 #x0000000000000002))
(assert (= temp11426_145 temp11426_144))
(assert (= temp11426_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11426_145)))
(assert (= temp11426_147 #x0000000000000003))
(assert (= temp11426_148 temp11426_147))
(assert (= temp11426_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11426_148)))
(assert (= temp11426_150 #x0000000000000004))
(assert (= temp11426_151 temp11426_150))
(assert (= temp11426_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11426_151)))
(assert (= temp11426_153 #x0000000000000005))
(assert (= temp11426_154 temp11426_153))
(assert (= temp11426_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11426_154)))
(assert (= temp11426_157 var1179826))
(assert (= temp11426_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11426_157)))
(assert (= temp11426_156 temp11426_158))
(assert (= var1191780
   (ite (bvslt temp11426_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11426_159 #x0000000000000000))
(assert (= var1191780 temp11426_159))
(assert (= temp11426_160 #x0000000000000000))
(assert (= var1179826 temp11426_160))
(assert (= temp11426_162 var1179826))
(assert (= temp11426_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11426_162)))
(assert (= temp11426_161 temp11426_163))
(assert (= var1191802 (bvsmod temp11426_161 ARGNAME_groups_NAMEEND)))
(assert (= temp11426_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp11426_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp11426_165 #x0000000000000001))
(assert (= var1191803 temp11426_165))
(assert (= temp11426_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp11426_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11426_167 #x0000000000000001))
(assert (= var1191823 temp11426_167))
(assert (= temp11426_168 #x0000000000000001))
(assert (= var1180714 temp11426_168))
(assert (= temp11426_169 #x0000000000000000))
(assert (= temp11426_170 temp11426_169))
(assert (= temp11426_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp11426_170)))
(assert (= temp11426_172 #x0000000000000001))
(assert (= temp11426_173 temp11426_172))
(assert (= temp11426_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp11426_173)))
(assert (= temp11426_175 #x0000000000000002))
(assert (= temp11426_176 temp11426_175))
(assert (= temp11426_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp11426_176)))
(assert (= temp11426_178 #x0000000000000003))
(assert (= temp11426_179 temp11426_178))
(assert (= temp11426_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp11426_179)))
(assert (= temp11426_181 #x0000000000000004))
(assert (= temp11426_182 temp11426_181))
(assert (= temp11426_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp11426_182)))
(assert (= temp11426_184 #x0000000000000005))
(assert (= temp11426_185 temp11426_184))
(assert (= temp11426_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp11426_185)))
(assert (= temp11426_187 #x0000000000000000))
(assert (= temp11426_188
   (ite (bvslt var1180714 temp11426_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp11426_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp11426_188)))
(assert (= var1191831 temp11426_189))
(assert (bvslt (ite (bvslt var1180714 temp11426_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11426_190 #x0000000000000001))
(assert (= var1180714 temp11426_190))
(assert (= temp11426_192 var1180714))
(assert (= temp11426_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11426_192)))
(assert (= temp11426_191 temp11426_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp11426_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp11426_194 #x0000000000000001))
(assert (= var1191836 temp11426_194))
(assert (= temp11426_195 #x0000000000000000))
(assert (= var1179826 temp11426_195))
(assert (= temp11426_197 var1179826))
(assert (= temp11426_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11426_197)))
(assert (= temp11426_196 temp11426_198))
(assert (= temp11426_199 #x0000000000000002))
(assert (= var1586025 temp11426_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp11426_200 #x0000000000000001))
(assert (= var1191993 temp11426_200))
(assert (= temp11426_201 #x0000000000000001))
(assert (= var2700303 temp11426_201))
(assert (= temp11426_202 #x0000000000000001))
(assert (= var2962447 temp11426_202))
(assert (= temp11426_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp11426_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11426_204 #x0000000000000001))
(assert (= var211058 temp11426_204))
(assert (= temp11426_205 #x0000000000000001))
(assert (= var211188 temp11426_205))
(assert (= var3879401 var211188))
(assert (= temp11426_206 #x0000000000000000))
(assert (= var3866802 temp11426_206))
(assert (= temp11426_207 #x0000000000000000))
(assert (= temp11426_208
   (ite (bvslt var3866802 temp11426_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp11426_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp11426_208)))
(assert (= var3879420 temp11426_209))
(assert (bvslt (ite (bvslt var3866802 temp11426_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11426_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp11426_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp11426_211 #x0000000000000000))
(assert (= var3879421 temp11426_211))
(assert (= temp11426_212 #x0000000000000001))
(assert (= var3867690 temp11426_212))
(assert (= temp11426_213 #x0000000000000000))
(assert (= temp11426_214
   (ite (bvslt var3867690 temp11426_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp11426_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp11426_214)))
(assert (= var3879423 temp11426_215))
(assert (bvslt (ite (bvslt var3867690 temp11426_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11426_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp11426_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp11426_217 #x0000000000000001))
(assert (= var3879424 temp11426_217))
(assert (= temp11426_218 #x0000000000000000))
(assert (= var4133117 temp11426_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp11426_219 #x0000000000000002))
(assert (= var4404867 temp11426_219))
(assert (= var4404869 (bvsub ARGNAME_weight_NAMEEND_DIM var4404867)))
(assert (= var4470412 var4404867))
(assert (= var4470413 var4404869))
(assert (= var4470426 (bvadd var4470413 var4470412)))
(assert (= var4470428
   (ite (bvsgt var4470426 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11426_220 #x0000000000000000))
(assert (= var4470428 temp11426_220))
(assert (= var4470453 var4470412))
(assert (= var4470455 var4470413))
(assert (= var4591443 var4470455))
(assert (= temp11426_221 #x0000000000000001))
(assert (= var211058 temp11426_221))
(model-add temp11426_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp11426_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp11426_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp11426_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





