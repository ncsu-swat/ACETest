(declare-fun temp801_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp801_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp801_3 () (_ BitVec 64))
(declare-fun temp801_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp801_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp801_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp801_7 () (_ BitVec 64))
(declare-fun temp801_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp801_9 () (_ BitVec 64))
(declare-fun temp801_10 () (_ BitVec 64))
(declare-fun temp801_11 () (_ BitVec 64))
(declare-fun temp801_12 () (_ BitVec 64))
(declare-fun temp801_13 () (_ BitVec 64))
(declare-fun temp801_14 () (_ BitVec 64))
(declare-fun temp801_15 () (_ BitVec 64))
(declare-fun temp801_16 () (_ BitVec 64))
(declare-fun temp801_17 () (_ BitVec 64))
(declare-fun temp801_18 () (_ BitVec 64))
(declare-fun temp801_19 () (_ BitVec 64))
(declare-fun temp801_20 () (_ BitVec 64))
(declare-fun temp801_21 () (_ BitVec 64))
(declare-fun temp801_22 () (_ BitVec 64))
(declare-fun temp801_23 () (_ BitVec 64))
(declare-fun temp801_24 () (_ BitVec 64))
(declare-fun temp801_25 () (_ BitVec 64))
(declare-fun temp801_26 () (_ BitVec 64))
(declare-fun temp801_27 () (_ BitVec 64))
(declare-fun temp801_28 () (_ BitVec 64))
(declare-fun temp801_29 () (_ BitVec 64))
(declare-fun temp801_30 () (_ BitVec 64))
(declare-fun temp801_31 () (_ BitVec 64))
(declare-fun temp801_32 () (_ BitVec 64))
(declare-fun temp801_33 () (_ BitVec 64))
(declare-fun temp801_34 () (_ BitVec 64))
(declare-fun temp801_35 () (_ BitVec 64))
(declare-fun temp801_36 () (_ BitVec 64))
(declare-fun temp801_37 () (_ BitVec 64))
(declare-fun temp801_38 () (_ BitVec 64))
(declare-fun temp801_39 () (_ BitVec 64))
(declare-fun temp801_40 () (_ BitVec 64))
(declare-fun temp801_41 () (_ BitVec 64))
(declare-fun temp801_42 () (_ BitVec 64))
(declare-fun temp801_43 () (_ BitVec 64))
(declare-fun temp801_44 () (_ BitVec 64))
(declare-fun temp801_45 () (_ BitVec 64))
(declare-fun temp801_46 () (_ BitVec 64))
(declare-fun temp801_47 () (_ BitVec 64))
(declare-fun temp801_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp801_49 () (_ BitVec 64))
(declare-fun temp801_50 () (_ BitVec 64))
(declare-fun temp801_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp801_52 () (_ BitVec 64))
(declare-fun temp801_53 () (_ BitVec 64))
(declare-fun temp801_54 () (_ BitVec 64))
(declare-fun temp801_55 () (_ BitVec 64))
(declare-fun temp801_56 () (_ BitVec 64))
(declare-fun temp801_57 () (_ BitVec 64))
(declare-fun temp801_58 () (_ BitVec 64))
(declare-fun temp801_59 () (_ BitVec 64))
(declare-fun temp801_60 () (_ BitVec 64))
(declare-fun temp801_61 () (_ BitVec 64))
(declare-fun temp801_62 () (_ BitVec 64))
(declare-fun temp801_63 () (_ BitVec 64))
(declare-fun temp801_64 () (_ BitVec 64))
(declare-fun temp801_65 () (_ BitVec 64))
(declare-fun temp801_66 () (_ BitVec 64))
(declare-fun temp801_67 () (_ BitVec 64))
(declare-fun temp801_68 () (_ BitVec 64))
(declare-fun temp801_69 () (_ BitVec 64))
(declare-fun temp801_70 () (_ BitVec 64))
(declare-fun temp801_71 () (_ BitVec 64))
(declare-fun temp801_72 () (_ BitVec 64))
(declare-fun temp801_73 () (_ BitVec 64))
(declare-fun temp801_74 () (_ BitVec 64))
(declare-fun temp801_75 () (_ BitVec 64))
(declare-fun temp801_76 () (_ BitVec 64))
(declare-fun temp801_77 () (_ BitVec 64))
(declare-fun temp801_78 () (_ BitVec 64))
(declare-fun temp801_79 () (_ BitVec 64))
(declare-fun temp801_80 () (_ BitVec 64))
(declare-fun temp801_81 () (_ BitVec 64))
(declare-fun temp801_82 () (_ BitVec 64))
(declare-fun temp801_83 () (_ BitVec 64))
(declare-fun temp801_84 () (_ BitVec 64))
(declare-fun temp801_85 () (_ BitVec 64))
(declare-fun temp801_86 () (_ BitVec 64))
(declare-fun temp801_87 () (_ BitVec 64))
(declare-fun temp801_88 () (_ BitVec 64))
(declare-fun temp801_89 () (_ BitVec 64))
(declare-fun temp801_90 () (_ BitVec 64))
(declare-fun temp801_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp801_92 () (_ BitVec 64))
(declare-fun temp801_93 () (_ BitVec 64))
(declare-fun temp801_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp801_95 () (_ BitVec 64))
(declare-fun temp801_96 () (_ BitVec 64))
(declare-fun temp801_97 () (_ BitVec 64))
(declare-fun temp801_98 () (_ BitVec 64))
(declare-fun temp801_99 () (_ BitVec 64))
(declare-fun temp801_100 () (_ BitVec 64))
(declare-fun temp801_101 () (_ BitVec 64))
(declare-fun temp801_102 () (_ BitVec 64))
(declare-fun temp801_103 () (_ BitVec 64))
(declare-fun temp801_104 () (_ BitVec 64))
(declare-fun temp801_105 () (_ BitVec 64))
(declare-fun temp801_106 () (_ BitVec 64))
(declare-fun temp801_107 () (_ BitVec 64))
(declare-fun temp801_108 () (_ BitVec 64))
(declare-fun temp801_109 () (_ BitVec 64))
(declare-fun temp801_110 () (_ BitVec 64))
(declare-fun temp801_111 () (_ BitVec 64))
(declare-fun temp801_112 () (_ BitVec 64))
(declare-fun temp801_113 () (_ BitVec 64))
(declare-fun temp801_114 () (_ BitVec 64))
(declare-fun temp801_115 () (_ BitVec 64))
(declare-fun temp801_116 () (_ BitVec 64))
(declare-fun temp801_117 () (_ BitVec 64))
(declare-fun temp801_118 () (_ BitVec 64))
(declare-fun temp801_119 () (_ BitVec 64))
(declare-fun temp801_120 () (_ BitVec 64))
(declare-fun temp801_121 () (_ BitVec 64))
(declare-fun temp801_122 () (_ BitVec 64))
(declare-fun temp801_123 () (_ BitVec 64))
(declare-fun temp801_124 () (_ BitVec 64))
(declare-fun temp801_125 () (_ BitVec 64))
(declare-fun temp801_126 () (_ BitVec 64))
(declare-fun temp801_127 () (_ BitVec 64))
(declare-fun temp801_128 () (_ BitVec 64))
(declare-fun temp801_129 () (_ BitVec 64))
(declare-fun temp801_130 () (_ BitVec 64))
(declare-fun temp801_131 () (_ BitVec 64))
(declare-fun temp801_132 () (_ BitVec 64))
(declare-fun temp801_133 () (_ BitVec 64))
(declare-fun temp801_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp801_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp801_136 () (_ BitVec 64))
(declare-fun temp801_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp801_138 () (_ BitVec 64))
(declare-fun temp801_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp801_140 () (_ BitVec 64))
(declare-fun temp801_141 () (_ BitVec 64))
(declare-fun temp801_142 () (_ BitVec 64))
(declare-fun temp801_143 () (_ BitVec 64))
(declare-fun temp801_144 () (_ BitVec 64))
(declare-fun temp801_145 () (_ BitVec 64))
(declare-fun temp801_146 () (_ BitVec 64))
(declare-fun temp801_147 () (_ BitVec 64))
(declare-fun temp801_148 () (_ BitVec 64))
(declare-fun temp801_149 () (_ BitVec 64))
(declare-fun temp801_150 () (_ BitVec 64))
(declare-fun temp801_151 () (_ BitVec 64))
(declare-fun temp801_152 () (_ BitVec 64))
(declare-fun temp801_153 () (_ BitVec 64))
(declare-fun temp801_154 () (_ BitVec 64))
(declare-fun temp801_155 () (_ BitVec 64))
(declare-fun temp801_157 () (_ BitVec 64))
(declare-fun temp801_158 () (_ BitVec 64))
(declare-fun temp801_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp801_159 () (_ BitVec 64))
(declare-fun temp801_160 () (_ BitVec 64))
(declare-fun temp801_162 () (_ BitVec 64))
(declare-fun temp801_163 () (_ BitVec 64))
(declare-fun temp801_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp801_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp801_165 () (_ BitVec 64))
(declare-fun temp801_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp801_167 () (_ BitVec 64))
(declare-fun temp801_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp801_169 () (_ BitVec 64))
(declare-fun temp801_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp801_171 () (_ BitVec 64))
(declare-fun temp801_172 () (_ BitVec 64))
(declare-fun temp801_173 () (_ BitVec 64))
(declare-fun temp801_174 () (_ BitVec 64))
(declare-fun temp801_175 () (_ BitVec 64))
(declare-fun temp801_176 () (_ BitVec 64))
(declare-fun temp801_177 () (_ BitVec 64))
(declare-fun temp801_178 () (_ BitVec 64))
(declare-fun temp801_179 () (_ BitVec 64))
(declare-fun temp801_180 () (_ BitVec 64))
(declare-fun temp801_181 () (_ BitVec 64))
(declare-fun temp801_182 () (_ BitVec 64))
(declare-fun temp801_183 () (_ BitVec 64))
(declare-fun temp801_184 () (_ BitVec 64))
(declare-fun temp801_185 () (_ BitVec 64))
(declare-fun temp801_186 () (_ BitVec 64))
(declare-fun temp801_187 () (_ BitVec 64))
(declare-fun temp801_188 () (_ BitVec 64))
(declare-fun temp801_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp801_190 () (_ BitVec 64))
(declare-fun temp801_192 () (_ BitVec 64))
(declare-fun temp801_193 () (_ BitVec 64))
(declare-fun temp801_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp801_194 () (_ BitVec 64))
(declare-fun temp801_195 () (_ BitVec 64))
(declare-fun temp801_197 () (_ BitVec 64))
(declare-fun temp801_198 () (_ BitVec 64))
(declare-fun temp801_196 () (_ BitVec 64))
(declare-fun temp801_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp801_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp801_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp801_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp801_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp801_204 () (_ BitVec 64))
(declare-fun temp801_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp801_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp801_207 () (_ BitVec 64))
(declare-fun temp801_208 () (_ BitVec 64))
(declare-fun temp801_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp801_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp801_211 () (_ BitVec 64))
(declare-fun temp801_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp801_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp801_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4993424 () (_ BitVec 64))
(declare-fun var211820 () (_ BitVec 64))
(declare-fun temp801_215 () (_ BitVec 64))
(declare-fun var211821 () (_ BitVec 64))
(declare-fun temp801_216 () (_ BitVec 64))
(assert (= temp801_1 #x0000000000000001))
(assert (= var77203 temp801_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp801_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp801_2)))
(assert (= temp801_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp801_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp801_4 #x0000000000000000))
(assert (= var210941 temp801_4))
(assert (= temp801_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp801_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp801_6 #x0000000000000000))
(assert (= var210986 temp801_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp801_7 #x0000000000000000))
(assert (= temp801_8 temp801_7))
(assert (= temp801_9 (select ARGNAME_padding_NAMEEND_VAL temp801_8)))
(assert (= temp801_10 #x0000000000000001))
(assert (= temp801_11 temp801_10))
(assert (= temp801_12 (select ARGNAME_padding_NAMEEND_VAL temp801_11)))
(assert (= temp801_13 #x0000000000000002))
(assert (= temp801_14 temp801_13))
(assert (= temp801_15 (select ARGNAME_padding_NAMEEND_VAL temp801_14)))
(assert (= temp801_16 #x0000000000000003))
(assert (= temp801_17 temp801_16))
(assert (= temp801_18 (select ARGNAME_padding_NAMEEND_VAL temp801_17)))
(assert (= temp801_19 #x0000000000000004))
(assert (= temp801_20 temp801_19))
(assert (= temp801_21 (select ARGNAME_padding_NAMEEND_VAL temp801_20)))
(assert (= temp801_22 #x0000000000000005))
(assert (= temp801_23 temp801_22))
(assert (= temp801_24 (select ARGNAME_padding_NAMEEND_VAL temp801_23)))
(assert (= temp801_25 #x0000000000000000))
(assert (= temp801_26 #x0000000000000000))
(assert (= temp801_27 temp801_26))
(assert (= temp801_28 (select ARGNAME_padding_NAMEEND_VAL temp801_27)))
(assert (= temp801_29 #x0000000000000000))
(assert (= temp801_30 #x0000000000000001))
(assert (= temp801_31 temp801_30))
(assert (= temp801_32 (select ARGNAME_padding_NAMEEND_VAL temp801_31)))
(assert (= temp801_33 #x0000000000000000))
(assert (= temp801_34 #x0000000000000002))
(assert (= temp801_35 temp801_34))
(assert (= temp801_36 (select ARGNAME_padding_NAMEEND_VAL temp801_35)))
(assert (= temp801_37 #x0000000000000000))
(assert (= temp801_38 #x0000000000000003))
(assert (= temp801_39 temp801_38))
(assert (= temp801_40 (select ARGNAME_padding_NAMEEND_VAL temp801_39)))
(assert (= temp801_41 #x0000000000000000))
(assert (= temp801_42 #x0000000000000004))
(assert (= temp801_43 temp801_42))
(assert (= temp801_44 (select ARGNAME_padding_NAMEEND_VAL temp801_43)))
(assert (= temp801_45 #x0000000000000000))
(assert (= temp801_46 #x0000000000000005))
(assert (= temp801_47 temp801_46))
(assert (= temp801_48 (select ARGNAME_padding_NAMEEND_VAL temp801_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp801_28 temp801_25)
             (bvslt temp801_32 temp801_29)
             (bvslt temp801_36 temp801_33)
             (bvslt temp801_40 temp801_37)
             (bvslt temp801_44 temp801_41)
             (bvslt temp801_48 temp801_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp801_49 #x0000000000000000))
(assert (= var1191714 temp801_49))
(assert (= temp801_50 #x0000000000000000))
(assert (= temp801_51 temp801_50))
(assert (= temp801_52 (select ARGNAME_output_padding_NAMEEND_VAL temp801_51)))
(assert (= temp801_53 #x0000000000000001))
(assert (= temp801_54 temp801_53))
(assert (= temp801_55 (select ARGNAME_output_padding_NAMEEND_VAL temp801_54)))
(assert (= temp801_56 #x0000000000000002))
(assert (= temp801_57 temp801_56))
(assert (= temp801_58 (select ARGNAME_output_padding_NAMEEND_VAL temp801_57)))
(assert (= temp801_59 #x0000000000000003))
(assert (= temp801_60 temp801_59))
(assert (= temp801_61 (select ARGNAME_output_padding_NAMEEND_VAL temp801_60)))
(assert (= temp801_62 #x0000000000000004))
(assert (= temp801_63 temp801_62))
(assert (= temp801_64 (select ARGNAME_output_padding_NAMEEND_VAL temp801_63)))
(assert (= temp801_65 #x0000000000000005))
(assert (= temp801_66 temp801_65))
(assert (= temp801_67 (select ARGNAME_output_padding_NAMEEND_VAL temp801_66)))
(assert (= temp801_68 #x0000000000000000))
(assert (= temp801_69 #x0000000000000000))
(assert (= temp801_70 temp801_69))
(assert (= temp801_71 (select ARGNAME_output_padding_NAMEEND_VAL temp801_70)))
(assert (= temp801_72 #x0000000000000000))
(assert (= temp801_73 #x0000000000000001))
(assert (= temp801_74 temp801_73))
(assert (= temp801_75 (select ARGNAME_output_padding_NAMEEND_VAL temp801_74)))
(assert (= temp801_76 #x0000000000000000))
(assert (= temp801_77 #x0000000000000002))
(assert (= temp801_78 temp801_77))
(assert (= temp801_79 (select ARGNAME_output_padding_NAMEEND_VAL temp801_78)))
(assert (= temp801_80 #x0000000000000000))
(assert (= temp801_81 #x0000000000000003))
(assert (= temp801_82 temp801_81))
(assert (= temp801_83 (select ARGNAME_output_padding_NAMEEND_VAL temp801_82)))
(assert (= temp801_84 #x0000000000000000))
(assert (= temp801_85 #x0000000000000004))
(assert (= temp801_86 temp801_85))
(assert (= temp801_87 (select ARGNAME_output_padding_NAMEEND_VAL temp801_86)))
(assert (= temp801_88 #x0000000000000000))
(assert (= temp801_89 #x0000000000000005))
(assert (= temp801_90 temp801_89))
(assert (= temp801_91 (select ARGNAME_output_padding_NAMEEND_VAL temp801_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp801_71 temp801_68)
             (bvslt temp801_75 temp801_72)
             (bvslt temp801_79 temp801_76)
             (bvslt temp801_83 temp801_80)
             (bvslt temp801_87 temp801_84)
             (bvslt temp801_91 temp801_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp801_92 #x0000000000000000))
(assert (= var1191725 temp801_92))
(assert (= temp801_93 #x0000000000000000))
(assert (= temp801_94 temp801_93))
(assert (= temp801_95 (select ARGNAME_stride_NAMEEND_VAL temp801_94)))
(assert (= temp801_96 #x0000000000000001))
(assert (= temp801_97 temp801_96))
(assert (= temp801_98 (select ARGNAME_stride_NAMEEND_VAL temp801_97)))
(assert (= temp801_99 #x0000000000000002))
(assert (= temp801_100 temp801_99))
(assert (= temp801_101 (select ARGNAME_stride_NAMEEND_VAL temp801_100)))
(assert (= temp801_102 #x0000000000000003))
(assert (= temp801_103 temp801_102))
(assert (= temp801_104 (select ARGNAME_stride_NAMEEND_VAL temp801_103)))
(assert (= temp801_105 #x0000000000000004))
(assert (= temp801_106 temp801_105))
(assert (= temp801_107 (select ARGNAME_stride_NAMEEND_VAL temp801_106)))
(assert (= temp801_108 #x0000000000000005))
(assert (= temp801_109 temp801_108))
(assert (= temp801_110 (select ARGNAME_stride_NAMEEND_VAL temp801_109)))
(assert (= temp801_111 #x0000000000000000))
(assert (= temp801_112 #x0000000000000000))
(assert (= temp801_113 temp801_112))
(assert (= temp801_114 (select ARGNAME_stride_NAMEEND_VAL temp801_113)))
(assert (= temp801_115 #x0000000000000000))
(assert (= temp801_116 #x0000000000000001))
(assert (= temp801_117 temp801_116))
(assert (= temp801_118 (select ARGNAME_stride_NAMEEND_VAL temp801_117)))
(assert (= temp801_119 #x0000000000000000))
(assert (= temp801_120 #x0000000000000002))
(assert (= temp801_121 temp801_120))
(assert (= temp801_122 (select ARGNAME_stride_NAMEEND_VAL temp801_121)))
(assert (= temp801_123 #x0000000000000000))
(assert (= temp801_124 #x0000000000000003))
(assert (= temp801_125 temp801_124))
(assert (= temp801_126 (select ARGNAME_stride_NAMEEND_VAL temp801_125)))
(assert (= temp801_127 #x0000000000000000))
(assert (= temp801_128 #x0000000000000004))
(assert (= temp801_129 temp801_128))
(assert (= temp801_130 (select ARGNAME_stride_NAMEEND_VAL temp801_129)))
(assert (= temp801_131 #x0000000000000000))
(assert (= temp801_132 #x0000000000000005))
(assert (= temp801_133 temp801_132))
(assert (= temp801_134 (select ARGNAME_stride_NAMEEND_VAL temp801_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp801_114 temp801_111)
             (bvsle temp801_118 temp801_115)
             (bvsle temp801_122 temp801_119)
             (bvsle temp801_126 temp801_123)
             (bvsle temp801_130 temp801_127)
             (bvsle temp801_134 temp801_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp801_135 #x0000000000000000))
(assert (= var1191735 temp801_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp801_136 #x0000000000000001))
(assert (= var1191747 temp801_136))
(assert (= temp801_137 #x0000000000000000))
(assert (= var1179826 temp801_137))
(assert (= temp801_138 #x0000000000000000))
(assert (= temp801_139 temp801_138))
(assert (= temp801_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp801_139)))
(assert (= temp801_141 #x0000000000000001))
(assert (= temp801_142 temp801_141))
(assert (= temp801_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp801_142)))
(assert (= temp801_144 #x0000000000000002))
(assert (= temp801_145 temp801_144))
(assert (= temp801_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp801_145)))
(assert (= temp801_147 #x0000000000000003))
(assert (= temp801_148 temp801_147))
(assert (= temp801_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp801_148)))
(assert (= temp801_150 #x0000000000000004))
(assert (= temp801_151 temp801_150))
(assert (= temp801_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp801_151)))
(assert (= temp801_153 #x0000000000000005))
(assert (= temp801_154 temp801_153))
(assert (= temp801_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp801_154)))
(assert (= temp801_157 var1179826))
(assert (= temp801_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp801_157)))
(assert (= temp801_156 temp801_158))
(assert (= var1191780
   (ite (bvslt temp801_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp801_159 #x0000000000000000))
(assert (= var1191780 temp801_159))
(assert (= temp801_160 #x0000000000000000))
(assert (= var1179826 temp801_160))
(assert (= temp801_162 var1179826))
(assert (= temp801_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp801_162)))
(assert (= temp801_161 temp801_163))
(assert (= var1191802 (bvsmod temp801_161 ARGNAME_groups_NAMEEND)))
(assert (= temp801_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp801_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp801_165 #x0000000000000001))
(assert (= var1191803 temp801_165))
(assert (= temp801_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp801_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp801_167 #x0000000000000001))
(assert (= var1191823 temp801_167))
(assert (= temp801_168 #x0000000000000001))
(assert (= var1180714 temp801_168))
(assert (= temp801_169 #x0000000000000000))
(assert (= temp801_170 temp801_169))
(assert (= temp801_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp801_170)))
(assert (= temp801_172 #x0000000000000001))
(assert (= temp801_173 temp801_172))
(assert (= temp801_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp801_173)))
(assert (= temp801_175 #x0000000000000002))
(assert (= temp801_176 temp801_175))
(assert (= temp801_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp801_176)))
(assert (= temp801_178 #x0000000000000003))
(assert (= temp801_179 temp801_178))
(assert (= temp801_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp801_179)))
(assert (= temp801_181 #x0000000000000004))
(assert (= temp801_182 temp801_181))
(assert (= temp801_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp801_182)))
(assert (= temp801_184 #x0000000000000005))
(assert (= temp801_185 temp801_184))
(assert (= temp801_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp801_185)))
(assert (= temp801_187 #x0000000000000000))
(assert (= temp801_188
   (ite (bvslt var1180714 temp801_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp801_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp801_188)))
(assert (= var1191831 temp801_189))
(assert (bvslt (ite (bvslt var1180714 temp801_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp801_190 #x0000000000000001))
(assert (= var1180714 temp801_190))
(assert (= temp801_192 var1180714))
(assert (= temp801_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp801_192)))
(assert (= temp801_191 temp801_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp801_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp801_194 #x0000000000000001))
(assert (= var1191836 temp801_194))
(assert (= temp801_195 #x0000000000000000))
(assert (= var1179826 temp801_195))
(assert (= temp801_197 var1179826))
(assert (= temp801_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp801_197)))
(assert (= temp801_196 temp801_198))
(assert (= temp801_199 #x0000000000000002))
(assert (= var1586025 temp801_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp801_200 #x0000000000000001))
(assert (= var1191993 temp801_200))
(assert (= temp801_201 #x0000000000000001))
(assert (= var2700303 temp801_201))
(assert (= temp801_202 #x0000000000000001))
(assert (= var2962447 temp801_202))
(assert (= temp801_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp801_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp801_204 #x0000000000000001))
(assert (= var211058 temp801_204))
(assert (= temp801_205 #x0000000000000001))
(assert (= var211188 temp801_205))
(assert (= var3879401 var211188))
(assert (= temp801_206 #x0000000000000000))
(assert (= var3866802 temp801_206))
(assert (= temp801_207 #x0000000000000000))
(assert (= temp801_208
   (ite (bvslt var3866802 temp801_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp801_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp801_208)))
(assert (= var3879420 temp801_209))
(assert (bvslt (ite (bvslt var3866802 temp801_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp801_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp801_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp801_211 #x0000000000000001))
(assert (= var3879421 temp801_211))
(assert (= temp801_212 #x0000000000000000))
(assert (= var4079423 temp801_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp801_213 #x0000000000000002))
(assert (= var4208259 temp801_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp801_214 #x0000000000000000))
(assert (= var4273820 temp801_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4993424 var211201))
(assert (= var211820 var210913))
(assert (= temp801_215 #x0000000000000000))
(assert (= var211821
   (ite (distinct var211820 temp801_215) #x0000000000000001 #x0000000000000000)))
(assert (= temp801_216 #x0000000000000001))
(assert (= var211058 temp801_216))
(model-add temp801_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp801_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp801_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp801_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))



