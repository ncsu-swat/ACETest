(declare-fun temp10789_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10789_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10789_3 () (_ BitVec 64))
(declare-fun temp10789_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10789_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10789_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10789_7 () (_ BitVec 64))
(declare-fun temp10789_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10789_9 () (_ BitVec 64))
(declare-fun temp10789_10 () (_ BitVec 64))
(declare-fun temp10789_11 () (_ BitVec 64))
(declare-fun temp10789_12 () (_ BitVec 64))
(declare-fun temp10789_13 () (_ BitVec 64))
(declare-fun temp10789_14 () (_ BitVec 64))
(declare-fun temp10789_15 () (_ BitVec 64))
(declare-fun temp10789_16 () (_ BitVec 64))
(declare-fun temp10789_17 () (_ BitVec 64))
(declare-fun temp10789_18 () (_ BitVec 64))
(declare-fun temp10789_19 () (_ BitVec 64))
(declare-fun temp10789_20 () (_ BitVec 64))
(declare-fun temp10789_21 () (_ BitVec 64))
(declare-fun temp10789_22 () (_ BitVec 64))
(declare-fun temp10789_23 () (_ BitVec 64))
(declare-fun temp10789_24 () (_ BitVec 64))
(declare-fun temp10789_25 () (_ BitVec 64))
(declare-fun temp10789_26 () (_ BitVec 64))
(declare-fun temp10789_27 () (_ BitVec 64))
(declare-fun temp10789_28 () (_ BitVec 64))
(declare-fun temp10789_29 () (_ BitVec 64))
(declare-fun temp10789_30 () (_ BitVec 64))
(declare-fun temp10789_31 () (_ BitVec 64))
(declare-fun temp10789_32 () (_ BitVec 64))
(declare-fun temp10789_33 () (_ BitVec 64))
(declare-fun temp10789_34 () (_ BitVec 64))
(declare-fun temp10789_35 () (_ BitVec 64))
(declare-fun temp10789_36 () (_ BitVec 64))
(declare-fun temp10789_37 () (_ BitVec 64))
(declare-fun temp10789_38 () (_ BitVec 64))
(declare-fun temp10789_39 () (_ BitVec 64))
(declare-fun temp10789_40 () (_ BitVec 64))
(declare-fun temp10789_41 () (_ BitVec 64))
(declare-fun temp10789_42 () (_ BitVec 64))
(declare-fun temp10789_43 () (_ BitVec 64))
(declare-fun temp10789_44 () (_ BitVec 64))
(declare-fun temp10789_45 () (_ BitVec 64))
(declare-fun temp10789_46 () (_ BitVec 64))
(declare-fun temp10789_47 () (_ BitVec 64))
(declare-fun temp10789_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10789_49 () (_ BitVec 64))
(declare-fun temp10789_50 () (_ BitVec 64))
(declare-fun temp10789_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10789_52 () (_ BitVec 64))
(declare-fun temp10789_53 () (_ BitVec 64))
(declare-fun temp10789_54 () (_ BitVec 64))
(declare-fun temp10789_55 () (_ BitVec 64))
(declare-fun temp10789_56 () (_ BitVec 64))
(declare-fun temp10789_57 () (_ BitVec 64))
(declare-fun temp10789_58 () (_ BitVec 64))
(declare-fun temp10789_59 () (_ BitVec 64))
(declare-fun temp10789_60 () (_ BitVec 64))
(declare-fun temp10789_61 () (_ BitVec 64))
(declare-fun temp10789_62 () (_ BitVec 64))
(declare-fun temp10789_63 () (_ BitVec 64))
(declare-fun temp10789_64 () (_ BitVec 64))
(declare-fun temp10789_65 () (_ BitVec 64))
(declare-fun temp10789_66 () (_ BitVec 64))
(declare-fun temp10789_67 () (_ BitVec 64))
(declare-fun temp10789_68 () (_ BitVec 64))
(declare-fun temp10789_69 () (_ BitVec 64))
(declare-fun temp10789_70 () (_ BitVec 64))
(declare-fun temp10789_71 () (_ BitVec 64))
(declare-fun temp10789_72 () (_ BitVec 64))
(declare-fun temp10789_73 () (_ BitVec 64))
(declare-fun temp10789_74 () (_ BitVec 64))
(declare-fun temp10789_75 () (_ BitVec 64))
(declare-fun temp10789_76 () (_ BitVec 64))
(declare-fun temp10789_77 () (_ BitVec 64))
(declare-fun temp10789_78 () (_ BitVec 64))
(declare-fun temp10789_79 () (_ BitVec 64))
(declare-fun temp10789_80 () (_ BitVec 64))
(declare-fun temp10789_81 () (_ BitVec 64))
(declare-fun temp10789_82 () (_ BitVec 64))
(declare-fun temp10789_83 () (_ BitVec 64))
(declare-fun temp10789_84 () (_ BitVec 64))
(declare-fun temp10789_85 () (_ BitVec 64))
(declare-fun temp10789_86 () (_ BitVec 64))
(declare-fun temp10789_87 () (_ BitVec 64))
(declare-fun temp10789_88 () (_ BitVec 64))
(declare-fun temp10789_89 () (_ BitVec 64))
(declare-fun temp10789_90 () (_ BitVec 64))
(declare-fun temp10789_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10789_92 () (_ BitVec 64))
(declare-fun temp10789_93 () (_ BitVec 64))
(declare-fun temp10789_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10789_95 () (_ BitVec 64))
(declare-fun temp10789_96 () (_ BitVec 64))
(declare-fun temp10789_97 () (_ BitVec 64))
(declare-fun temp10789_98 () (_ BitVec 64))
(declare-fun temp10789_99 () (_ BitVec 64))
(declare-fun temp10789_100 () (_ BitVec 64))
(declare-fun temp10789_101 () (_ BitVec 64))
(declare-fun temp10789_102 () (_ BitVec 64))
(declare-fun temp10789_103 () (_ BitVec 64))
(declare-fun temp10789_104 () (_ BitVec 64))
(declare-fun temp10789_105 () (_ BitVec 64))
(declare-fun temp10789_106 () (_ BitVec 64))
(declare-fun temp10789_107 () (_ BitVec 64))
(declare-fun temp10789_108 () (_ BitVec 64))
(declare-fun temp10789_109 () (_ BitVec 64))
(declare-fun temp10789_110 () (_ BitVec 64))
(declare-fun temp10789_111 () (_ BitVec 64))
(declare-fun temp10789_112 () (_ BitVec 64))
(declare-fun temp10789_113 () (_ BitVec 64))
(declare-fun temp10789_114 () (_ BitVec 64))
(declare-fun temp10789_115 () (_ BitVec 64))
(declare-fun temp10789_116 () (_ BitVec 64))
(declare-fun temp10789_117 () (_ BitVec 64))
(declare-fun temp10789_118 () (_ BitVec 64))
(declare-fun temp10789_119 () (_ BitVec 64))
(declare-fun temp10789_120 () (_ BitVec 64))
(declare-fun temp10789_121 () (_ BitVec 64))
(declare-fun temp10789_122 () (_ BitVec 64))
(declare-fun temp10789_123 () (_ BitVec 64))
(declare-fun temp10789_124 () (_ BitVec 64))
(declare-fun temp10789_125 () (_ BitVec 64))
(declare-fun temp10789_126 () (_ BitVec 64))
(declare-fun temp10789_127 () (_ BitVec 64))
(declare-fun temp10789_128 () (_ BitVec 64))
(declare-fun temp10789_129 () (_ BitVec 64))
(declare-fun temp10789_130 () (_ BitVec 64))
(declare-fun temp10789_131 () (_ BitVec 64))
(declare-fun temp10789_132 () (_ BitVec 64))
(declare-fun temp10789_133 () (_ BitVec 64))
(declare-fun temp10789_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10789_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10789_136 () (_ BitVec 64))
(declare-fun temp10789_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10789_138 () (_ BitVec 64))
(declare-fun temp10789_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10789_140 () (_ BitVec 64))
(declare-fun temp10789_141 () (_ BitVec 64))
(declare-fun temp10789_142 () (_ BitVec 64))
(declare-fun temp10789_143 () (_ BitVec 64))
(declare-fun temp10789_144 () (_ BitVec 64))
(declare-fun temp10789_145 () (_ BitVec 64))
(declare-fun temp10789_146 () (_ BitVec 64))
(declare-fun temp10789_147 () (_ BitVec 64))
(declare-fun temp10789_148 () (_ BitVec 64))
(declare-fun temp10789_149 () (_ BitVec 64))
(declare-fun temp10789_150 () (_ BitVec 64))
(declare-fun temp10789_151 () (_ BitVec 64))
(declare-fun temp10789_152 () (_ BitVec 64))
(declare-fun temp10789_153 () (_ BitVec 64))
(declare-fun temp10789_154 () (_ BitVec 64))
(declare-fun temp10789_155 () (_ BitVec 64))
(declare-fun temp10789_157 () (_ BitVec 64))
(declare-fun temp10789_158 () (_ BitVec 64))
(declare-fun temp10789_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10789_159 () (_ BitVec 64))
(declare-fun temp10789_160 () (_ BitVec 64))
(declare-fun temp10789_162 () (_ BitVec 64))
(declare-fun temp10789_163 () (_ BitVec 64))
(declare-fun temp10789_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10789_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10789_165 () (_ BitVec 64))
(declare-fun temp10789_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10789_167 () (_ BitVec 64))
(declare-fun temp10789_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10789_169 () (_ BitVec 64))
(declare-fun temp10789_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10789_171 () (_ BitVec 64))
(declare-fun temp10789_172 () (_ BitVec 64))
(declare-fun temp10789_173 () (_ BitVec 64))
(declare-fun temp10789_174 () (_ BitVec 64))
(declare-fun temp10789_175 () (_ BitVec 64))
(declare-fun temp10789_176 () (_ BitVec 64))
(declare-fun temp10789_177 () (_ BitVec 64))
(declare-fun temp10789_178 () (_ BitVec 64))
(declare-fun temp10789_179 () (_ BitVec 64))
(declare-fun temp10789_180 () (_ BitVec 64))
(declare-fun temp10789_181 () (_ BitVec 64))
(declare-fun temp10789_182 () (_ BitVec 64))
(declare-fun temp10789_183 () (_ BitVec 64))
(declare-fun temp10789_184 () (_ BitVec 64))
(declare-fun temp10789_185 () (_ BitVec 64))
(declare-fun temp10789_186 () (_ BitVec 64))
(declare-fun temp10789_187 () (_ BitVec 64))
(declare-fun temp10789_188 () (_ BitVec 64))
(declare-fun temp10789_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10789_190 () (_ BitVec 64))
(declare-fun temp10789_192 () (_ BitVec 64))
(declare-fun temp10789_193 () (_ BitVec 64))
(declare-fun temp10789_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10789_194 () (_ BitVec 64))
(declare-fun temp10789_195 () (_ BitVec 64))
(declare-fun temp10789_197 () (_ BitVec 64))
(declare-fun temp10789_198 () (_ BitVec 64))
(declare-fun temp10789_196 () (_ BitVec 64))
(declare-fun temp10789_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10789_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10789_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10789_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10789_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10789_204 () (_ BitVec 64))
(declare-fun temp10789_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10789_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10789_207 () (_ BitVec 64))
(declare-fun temp10789_208 () (_ BitVec 64))
(declare-fun temp10789_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10789_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10789_211 () (_ BitVec 64))
(declare-fun temp10789_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10789_213 () (_ BitVec 64))
(declare-fun temp10789_214 () (_ BitVec 64))
(declare-fun temp10789_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10789_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10789_217 () (_ BitVec 64))
(declare-fun temp10789_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10789_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10789_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var5190032 () (_ BitVec 64))
(declare-fun var5452176 () (_ BitVec 64))
(declare-fun temp10789_221 () (_ BitVec 64))
(assert (= temp10789_1 #x0000000000000001))
(assert (= var77203 temp10789_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10789_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10789_2)))
(assert (= temp10789_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10789_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10789_4 #x0000000000000000))
(assert (= var210941 temp10789_4))
(assert (= temp10789_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10789_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10789_6 #x0000000000000000))
(assert (= var210986 temp10789_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10789_7 #x0000000000000000))
(assert (= temp10789_8 temp10789_7))
(assert (= temp10789_9 (select ARGNAME_padding_NAMEEND_VAL temp10789_8)))
(assert (= temp10789_10 #x0000000000000001))
(assert (= temp10789_11 temp10789_10))
(assert (= temp10789_12 (select ARGNAME_padding_NAMEEND_VAL temp10789_11)))
(assert (= temp10789_13 #x0000000000000002))
(assert (= temp10789_14 temp10789_13))
(assert (= temp10789_15 (select ARGNAME_padding_NAMEEND_VAL temp10789_14)))
(assert (= temp10789_16 #x0000000000000003))
(assert (= temp10789_17 temp10789_16))
(assert (= temp10789_18 (select ARGNAME_padding_NAMEEND_VAL temp10789_17)))
(assert (= temp10789_19 #x0000000000000004))
(assert (= temp10789_20 temp10789_19))
(assert (= temp10789_21 (select ARGNAME_padding_NAMEEND_VAL temp10789_20)))
(assert (= temp10789_22 #x0000000000000005))
(assert (= temp10789_23 temp10789_22))
(assert (= temp10789_24 (select ARGNAME_padding_NAMEEND_VAL temp10789_23)))
(assert (= temp10789_25 #x0000000000000000))
(assert (= temp10789_26 #x0000000000000000))
(assert (= temp10789_27 temp10789_26))
(assert (= temp10789_28 (select ARGNAME_padding_NAMEEND_VAL temp10789_27)))
(assert (= temp10789_29 #x0000000000000000))
(assert (= temp10789_30 #x0000000000000001))
(assert (= temp10789_31 temp10789_30))
(assert (= temp10789_32 (select ARGNAME_padding_NAMEEND_VAL temp10789_31)))
(assert (= temp10789_33 #x0000000000000000))
(assert (= temp10789_34 #x0000000000000002))
(assert (= temp10789_35 temp10789_34))
(assert (= temp10789_36 (select ARGNAME_padding_NAMEEND_VAL temp10789_35)))
(assert (= temp10789_37 #x0000000000000000))
(assert (= temp10789_38 #x0000000000000003))
(assert (= temp10789_39 temp10789_38))
(assert (= temp10789_40 (select ARGNAME_padding_NAMEEND_VAL temp10789_39)))
(assert (= temp10789_41 #x0000000000000000))
(assert (= temp10789_42 #x0000000000000004))
(assert (= temp10789_43 temp10789_42))
(assert (= temp10789_44 (select ARGNAME_padding_NAMEEND_VAL temp10789_43)))
(assert (= temp10789_45 #x0000000000000000))
(assert (= temp10789_46 #x0000000000000005))
(assert (= temp10789_47 temp10789_46))
(assert (= temp10789_48 (select ARGNAME_padding_NAMEEND_VAL temp10789_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10789_28 temp10789_25)
             (bvslt temp10789_32 temp10789_29)
             (bvslt temp10789_36 temp10789_33)
             (bvslt temp10789_40 temp10789_37)
             (bvslt temp10789_44 temp10789_41)
             (bvslt temp10789_48 temp10789_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10789_49 #x0000000000000000))
(assert (= var1191714 temp10789_49))
(assert (= temp10789_50 #x0000000000000000))
(assert (= temp10789_51 temp10789_50))
(assert (= temp10789_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10789_51)))
(assert (= temp10789_53 #x0000000000000001))
(assert (= temp10789_54 temp10789_53))
(assert (= temp10789_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10789_54)))
(assert (= temp10789_56 #x0000000000000002))
(assert (= temp10789_57 temp10789_56))
(assert (= temp10789_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10789_57)))
(assert (= temp10789_59 #x0000000000000003))
(assert (= temp10789_60 temp10789_59))
(assert (= temp10789_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10789_60)))
(assert (= temp10789_62 #x0000000000000004))
(assert (= temp10789_63 temp10789_62))
(assert (= temp10789_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10789_63)))
(assert (= temp10789_65 #x0000000000000005))
(assert (= temp10789_66 temp10789_65))
(assert (= temp10789_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10789_66)))
(assert (= temp10789_68 #x0000000000000000))
(assert (= temp10789_69 #x0000000000000000))
(assert (= temp10789_70 temp10789_69))
(assert (= temp10789_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10789_70)))
(assert (= temp10789_72 #x0000000000000000))
(assert (= temp10789_73 #x0000000000000001))
(assert (= temp10789_74 temp10789_73))
(assert (= temp10789_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10789_74)))
(assert (= temp10789_76 #x0000000000000000))
(assert (= temp10789_77 #x0000000000000002))
(assert (= temp10789_78 temp10789_77))
(assert (= temp10789_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10789_78)))
(assert (= temp10789_80 #x0000000000000000))
(assert (= temp10789_81 #x0000000000000003))
(assert (= temp10789_82 temp10789_81))
(assert (= temp10789_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10789_82)))
(assert (= temp10789_84 #x0000000000000000))
(assert (= temp10789_85 #x0000000000000004))
(assert (= temp10789_86 temp10789_85))
(assert (= temp10789_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10789_86)))
(assert (= temp10789_88 #x0000000000000000))
(assert (= temp10789_89 #x0000000000000005))
(assert (= temp10789_90 temp10789_89))
(assert (= temp10789_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10789_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10789_71 temp10789_68)
             (bvslt temp10789_75 temp10789_72)
             (bvslt temp10789_79 temp10789_76)
             (bvslt temp10789_83 temp10789_80)
             (bvslt temp10789_87 temp10789_84)
             (bvslt temp10789_91 temp10789_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10789_92 #x0000000000000000))
(assert (= var1191725 temp10789_92))
(assert (= temp10789_93 #x0000000000000000))
(assert (= temp10789_94 temp10789_93))
(assert (= temp10789_95 (select ARGNAME_stride_NAMEEND_VAL temp10789_94)))
(assert (= temp10789_96 #x0000000000000001))
(assert (= temp10789_97 temp10789_96))
(assert (= temp10789_98 (select ARGNAME_stride_NAMEEND_VAL temp10789_97)))
(assert (= temp10789_99 #x0000000000000002))
(assert (= temp10789_100 temp10789_99))
(assert (= temp10789_101 (select ARGNAME_stride_NAMEEND_VAL temp10789_100)))
(assert (= temp10789_102 #x0000000000000003))
(assert (= temp10789_103 temp10789_102))
(assert (= temp10789_104 (select ARGNAME_stride_NAMEEND_VAL temp10789_103)))
(assert (= temp10789_105 #x0000000000000004))
(assert (= temp10789_106 temp10789_105))
(assert (= temp10789_107 (select ARGNAME_stride_NAMEEND_VAL temp10789_106)))
(assert (= temp10789_108 #x0000000000000005))
(assert (= temp10789_109 temp10789_108))
(assert (= temp10789_110 (select ARGNAME_stride_NAMEEND_VAL temp10789_109)))
(assert (= temp10789_111 #x0000000000000000))
(assert (= temp10789_112 #x0000000000000000))
(assert (= temp10789_113 temp10789_112))
(assert (= temp10789_114 (select ARGNAME_stride_NAMEEND_VAL temp10789_113)))
(assert (= temp10789_115 #x0000000000000000))
(assert (= temp10789_116 #x0000000000000001))
(assert (= temp10789_117 temp10789_116))
(assert (= temp10789_118 (select ARGNAME_stride_NAMEEND_VAL temp10789_117)))
(assert (= temp10789_119 #x0000000000000000))
(assert (= temp10789_120 #x0000000000000002))
(assert (= temp10789_121 temp10789_120))
(assert (= temp10789_122 (select ARGNAME_stride_NAMEEND_VAL temp10789_121)))
(assert (= temp10789_123 #x0000000000000000))
(assert (= temp10789_124 #x0000000000000003))
(assert (= temp10789_125 temp10789_124))
(assert (= temp10789_126 (select ARGNAME_stride_NAMEEND_VAL temp10789_125)))
(assert (= temp10789_127 #x0000000000000000))
(assert (= temp10789_128 #x0000000000000004))
(assert (= temp10789_129 temp10789_128))
(assert (= temp10789_130 (select ARGNAME_stride_NAMEEND_VAL temp10789_129)))
(assert (= temp10789_131 #x0000000000000000))
(assert (= temp10789_132 #x0000000000000005))
(assert (= temp10789_133 temp10789_132))
(assert (= temp10789_134 (select ARGNAME_stride_NAMEEND_VAL temp10789_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10789_114 temp10789_111)
             (bvsle temp10789_118 temp10789_115)
             (bvsle temp10789_122 temp10789_119)
             (bvsle temp10789_126 temp10789_123)
             (bvsle temp10789_130 temp10789_127)
             (bvsle temp10789_134 temp10789_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10789_135 #x0000000000000000))
(assert (= var1191735 temp10789_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10789_136 #x0000000000000001))
(assert (= var1191747 temp10789_136))
(assert (= temp10789_137 #x0000000000000000))
(assert (= var1179826 temp10789_137))
(assert (= temp10789_138 #x0000000000000000))
(assert (= temp10789_139 temp10789_138))
(assert (= temp10789_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10789_139)))
(assert (= temp10789_141 #x0000000000000001))
(assert (= temp10789_142 temp10789_141))
(assert (= temp10789_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10789_142)))
(assert (= temp10789_144 #x0000000000000002))
(assert (= temp10789_145 temp10789_144))
(assert (= temp10789_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10789_145)))
(assert (= temp10789_147 #x0000000000000003))
(assert (= temp10789_148 temp10789_147))
(assert (= temp10789_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10789_148)))
(assert (= temp10789_150 #x0000000000000004))
(assert (= temp10789_151 temp10789_150))
(assert (= temp10789_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10789_151)))
(assert (= temp10789_153 #x0000000000000005))
(assert (= temp10789_154 temp10789_153))
(assert (= temp10789_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10789_154)))
(assert (= temp10789_157 var1179826))
(assert (= temp10789_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10789_157)))
(assert (= temp10789_156 temp10789_158))
(assert (= var1191780
   (ite (bvslt temp10789_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10789_159 #x0000000000000000))
(assert (= var1191780 temp10789_159))
(assert (= temp10789_160 #x0000000000000000))
(assert (= var1179826 temp10789_160))
(assert (= temp10789_162 var1179826))
(assert (= temp10789_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10789_162)))
(assert (= temp10789_161 temp10789_163))
(assert (= var1191802 (bvsmod temp10789_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10789_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10789_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10789_165 #x0000000000000001))
(assert (= var1191803 temp10789_165))
(assert (= temp10789_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10789_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10789_167 #x0000000000000001))
(assert (= var1191823 temp10789_167))
(assert (= temp10789_168 #x0000000000000001))
(assert (= var1180714 temp10789_168))
(assert (= temp10789_169 #x0000000000000000))
(assert (= temp10789_170 temp10789_169))
(assert (= temp10789_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10789_170)))
(assert (= temp10789_172 #x0000000000000001))
(assert (= temp10789_173 temp10789_172))
(assert (= temp10789_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10789_173)))
(assert (= temp10789_175 #x0000000000000002))
(assert (= temp10789_176 temp10789_175))
(assert (= temp10789_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10789_176)))
(assert (= temp10789_178 #x0000000000000003))
(assert (= temp10789_179 temp10789_178))
(assert (= temp10789_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10789_179)))
(assert (= temp10789_181 #x0000000000000004))
(assert (= temp10789_182 temp10789_181))
(assert (= temp10789_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10789_182)))
(assert (= temp10789_184 #x0000000000000005))
(assert (= temp10789_185 temp10789_184))
(assert (= temp10789_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10789_185)))
(assert (= temp10789_187 #x0000000000000000))
(assert (= temp10789_188
   (ite (bvslt var1180714 temp10789_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10789_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10789_188)))
(assert (= var1191831 temp10789_189))
(assert (bvslt (ite (bvslt var1180714 temp10789_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10789_190 #x0000000000000001))
(assert (= var1180714 temp10789_190))
(assert (= temp10789_192 var1180714))
(assert (= temp10789_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10789_192)))
(assert (= temp10789_191 temp10789_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10789_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10789_194 #x0000000000000001))
(assert (= var1191836 temp10789_194))
(assert (= temp10789_195 #x0000000000000000))
(assert (= var1179826 temp10789_195))
(assert (= temp10789_197 var1179826))
(assert (= temp10789_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10789_197)))
(assert (= temp10789_196 temp10789_198))
(assert (= temp10789_199 #x0000000000000002))
(assert (= var1586025 temp10789_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10789_200 #x0000000000000001))
(assert (= var1191993 temp10789_200))
(assert (= temp10789_201 #x0000000000000001))
(assert (= var2700303 temp10789_201))
(assert (= temp10789_202 #x0000000000000001))
(assert (= var2962447 temp10789_202))
(assert (= temp10789_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10789_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10789_204 #x0000000000000001))
(assert (= var211058 temp10789_204))
(assert (= temp10789_205 #x0000000000000001))
(assert (= var211188 temp10789_205))
(assert (= var3879401 var211188))
(assert (= temp10789_206 #x0000000000000000))
(assert (= var3866802 temp10789_206))
(assert (= temp10789_207 #x0000000000000000))
(assert (= temp10789_208
   (ite (bvslt var3866802 temp10789_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10789_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10789_208)))
(assert (= var3879420 temp10789_209))
(assert (bvslt (ite (bvslt var3866802 temp10789_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10789_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10789_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10789_211 #x0000000000000000))
(assert (= var3879421 temp10789_211))
(assert (= temp10789_212 #x0000000000000001))
(assert (= var3867690 temp10789_212))
(assert (= temp10789_213 #x0000000000000000))
(assert (= temp10789_214
   (ite (bvslt var3867690 temp10789_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10789_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10789_214)))
(assert (= var3879423 temp10789_215))
(assert (bvslt (ite (bvslt var3867690 temp10789_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10789_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10789_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10789_217 #x0000000000000001))
(assert (= var3879424 temp10789_217))
(assert (= temp10789_218 #x0000000000000000))
(assert (= var4133117 temp10789_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10789_219 #x0000000000000002))
(assert (= var4339331 temp10789_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10789_220 #x0000000000000000))
(assert (= var4404892 temp10789_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var5190032 var211201))
(assert (= var5452176 var211201))
(assert (= temp10789_221 #x0000000000000001))
(assert (= var211058 temp10789_221))
(model-add temp10789_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10789_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10789_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10789_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





