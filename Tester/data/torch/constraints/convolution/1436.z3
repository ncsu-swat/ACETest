(declare-fun temp10645_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10645_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10645_3 () (_ BitVec 64))
(declare-fun temp10645_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10645_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10645_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10645_7 () (_ BitVec 64))
(declare-fun temp10645_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10645_9 () (_ BitVec 64))
(declare-fun temp10645_10 () (_ BitVec 64))
(declare-fun temp10645_11 () (_ BitVec 64))
(declare-fun temp10645_12 () (_ BitVec 64))
(declare-fun temp10645_13 () (_ BitVec 64))
(declare-fun temp10645_14 () (_ BitVec 64))
(declare-fun temp10645_15 () (_ BitVec 64))
(declare-fun temp10645_16 () (_ BitVec 64))
(declare-fun temp10645_17 () (_ BitVec 64))
(declare-fun temp10645_18 () (_ BitVec 64))
(declare-fun temp10645_19 () (_ BitVec 64))
(declare-fun temp10645_20 () (_ BitVec 64))
(declare-fun temp10645_21 () (_ BitVec 64))
(declare-fun temp10645_22 () (_ BitVec 64))
(declare-fun temp10645_23 () (_ BitVec 64))
(declare-fun temp10645_24 () (_ BitVec 64))
(declare-fun temp10645_25 () (_ BitVec 64))
(declare-fun temp10645_26 () (_ BitVec 64))
(declare-fun temp10645_27 () (_ BitVec 64))
(declare-fun temp10645_28 () (_ BitVec 64))
(declare-fun temp10645_29 () (_ BitVec 64))
(declare-fun temp10645_30 () (_ BitVec 64))
(declare-fun temp10645_31 () (_ BitVec 64))
(declare-fun temp10645_32 () (_ BitVec 64))
(declare-fun temp10645_33 () (_ BitVec 64))
(declare-fun temp10645_34 () (_ BitVec 64))
(declare-fun temp10645_35 () (_ BitVec 64))
(declare-fun temp10645_36 () (_ BitVec 64))
(declare-fun temp10645_37 () (_ BitVec 64))
(declare-fun temp10645_38 () (_ BitVec 64))
(declare-fun temp10645_39 () (_ BitVec 64))
(declare-fun temp10645_40 () (_ BitVec 64))
(declare-fun temp10645_41 () (_ BitVec 64))
(declare-fun temp10645_42 () (_ BitVec 64))
(declare-fun temp10645_43 () (_ BitVec 64))
(declare-fun temp10645_44 () (_ BitVec 64))
(declare-fun temp10645_45 () (_ BitVec 64))
(declare-fun temp10645_46 () (_ BitVec 64))
(declare-fun temp10645_47 () (_ BitVec 64))
(declare-fun temp10645_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10645_49 () (_ BitVec 64))
(declare-fun temp10645_50 () (_ BitVec 64))
(declare-fun temp10645_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10645_52 () (_ BitVec 64))
(declare-fun temp10645_53 () (_ BitVec 64))
(declare-fun temp10645_54 () (_ BitVec 64))
(declare-fun temp10645_55 () (_ BitVec 64))
(declare-fun temp10645_56 () (_ BitVec 64))
(declare-fun temp10645_57 () (_ BitVec 64))
(declare-fun temp10645_58 () (_ BitVec 64))
(declare-fun temp10645_59 () (_ BitVec 64))
(declare-fun temp10645_60 () (_ BitVec 64))
(declare-fun temp10645_61 () (_ BitVec 64))
(declare-fun temp10645_62 () (_ BitVec 64))
(declare-fun temp10645_63 () (_ BitVec 64))
(declare-fun temp10645_64 () (_ BitVec 64))
(declare-fun temp10645_65 () (_ BitVec 64))
(declare-fun temp10645_66 () (_ BitVec 64))
(declare-fun temp10645_67 () (_ BitVec 64))
(declare-fun temp10645_68 () (_ BitVec 64))
(declare-fun temp10645_69 () (_ BitVec 64))
(declare-fun temp10645_70 () (_ BitVec 64))
(declare-fun temp10645_71 () (_ BitVec 64))
(declare-fun temp10645_72 () (_ BitVec 64))
(declare-fun temp10645_73 () (_ BitVec 64))
(declare-fun temp10645_74 () (_ BitVec 64))
(declare-fun temp10645_75 () (_ BitVec 64))
(declare-fun temp10645_76 () (_ BitVec 64))
(declare-fun temp10645_77 () (_ BitVec 64))
(declare-fun temp10645_78 () (_ BitVec 64))
(declare-fun temp10645_79 () (_ BitVec 64))
(declare-fun temp10645_80 () (_ BitVec 64))
(declare-fun temp10645_81 () (_ BitVec 64))
(declare-fun temp10645_82 () (_ BitVec 64))
(declare-fun temp10645_83 () (_ BitVec 64))
(declare-fun temp10645_84 () (_ BitVec 64))
(declare-fun temp10645_85 () (_ BitVec 64))
(declare-fun temp10645_86 () (_ BitVec 64))
(declare-fun temp10645_87 () (_ BitVec 64))
(declare-fun temp10645_88 () (_ BitVec 64))
(declare-fun temp10645_89 () (_ BitVec 64))
(declare-fun temp10645_90 () (_ BitVec 64))
(declare-fun temp10645_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10645_92 () (_ BitVec 64))
(declare-fun temp10645_93 () (_ BitVec 64))
(declare-fun temp10645_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10645_95 () (_ BitVec 64))
(declare-fun temp10645_96 () (_ BitVec 64))
(declare-fun temp10645_97 () (_ BitVec 64))
(declare-fun temp10645_98 () (_ BitVec 64))
(declare-fun temp10645_99 () (_ BitVec 64))
(declare-fun temp10645_100 () (_ BitVec 64))
(declare-fun temp10645_101 () (_ BitVec 64))
(declare-fun temp10645_102 () (_ BitVec 64))
(declare-fun temp10645_103 () (_ BitVec 64))
(declare-fun temp10645_104 () (_ BitVec 64))
(declare-fun temp10645_105 () (_ BitVec 64))
(declare-fun temp10645_106 () (_ BitVec 64))
(declare-fun temp10645_107 () (_ BitVec 64))
(declare-fun temp10645_108 () (_ BitVec 64))
(declare-fun temp10645_109 () (_ BitVec 64))
(declare-fun temp10645_110 () (_ BitVec 64))
(declare-fun temp10645_111 () (_ BitVec 64))
(declare-fun temp10645_112 () (_ BitVec 64))
(declare-fun temp10645_113 () (_ BitVec 64))
(declare-fun temp10645_114 () (_ BitVec 64))
(declare-fun temp10645_115 () (_ BitVec 64))
(declare-fun temp10645_116 () (_ BitVec 64))
(declare-fun temp10645_117 () (_ BitVec 64))
(declare-fun temp10645_118 () (_ BitVec 64))
(declare-fun temp10645_119 () (_ BitVec 64))
(declare-fun temp10645_120 () (_ BitVec 64))
(declare-fun temp10645_121 () (_ BitVec 64))
(declare-fun temp10645_122 () (_ BitVec 64))
(declare-fun temp10645_123 () (_ BitVec 64))
(declare-fun temp10645_124 () (_ BitVec 64))
(declare-fun temp10645_125 () (_ BitVec 64))
(declare-fun temp10645_126 () (_ BitVec 64))
(declare-fun temp10645_127 () (_ BitVec 64))
(declare-fun temp10645_128 () (_ BitVec 64))
(declare-fun temp10645_129 () (_ BitVec 64))
(declare-fun temp10645_130 () (_ BitVec 64))
(declare-fun temp10645_131 () (_ BitVec 64))
(declare-fun temp10645_132 () (_ BitVec 64))
(declare-fun temp10645_133 () (_ BitVec 64))
(declare-fun temp10645_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10645_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10645_136 () (_ BitVec 64))
(declare-fun temp10645_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10645_138 () (_ BitVec 64))
(declare-fun temp10645_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10645_140 () (_ BitVec 64))
(declare-fun temp10645_141 () (_ BitVec 64))
(declare-fun temp10645_142 () (_ BitVec 64))
(declare-fun temp10645_143 () (_ BitVec 64))
(declare-fun temp10645_144 () (_ BitVec 64))
(declare-fun temp10645_145 () (_ BitVec 64))
(declare-fun temp10645_146 () (_ BitVec 64))
(declare-fun temp10645_147 () (_ BitVec 64))
(declare-fun temp10645_148 () (_ BitVec 64))
(declare-fun temp10645_149 () (_ BitVec 64))
(declare-fun temp10645_150 () (_ BitVec 64))
(declare-fun temp10645_151 () (_ BitVec 64))
(declare-fun temp10645_152 () (_ BitVec 64))
(declare-fun temp10645_153 () (_ BitVec 64))
(declare-fun temp10645_154 () (_ BitVec 64))
(declare-fun temp10645_155 () (_ BitVec 64))
(declare-fun temp10645_157 () (_ BitVec 64))
(declare-fun temp10645_158 () (_ BitVec 64))
(declare-fun temp10645_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10645_159 () (_ BitVec 64))
(declare-fun temp10645_160 () (_ BitVec 64))
(declare-fun temp10645_162 () (_ BitVec 64))
(declare-fun temp10645_163 () (_ BitVec 64))
(declare-fun temp10645_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10645_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10645_165 () (_ BitVec 64))
(declare-fun temp10645_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10645_167 () (_ BitVec 64))
(declare-fun temp10645_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10645_169 () (_ BitVec 64))
(declare-fun temp10645_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10645_171 () (_ BitVec 64))
(declare-fun temp10645_172 () (_ BitVec 64))
(declare-fun temp10645_173 () (_ BitVec 64))
(declare-fun temp10645_174 () (_ BitVec 64))
(declare-fun temp10645_175 () (_ BitVec 64))
(declare-fun temp10645_176 () (_ BitVec 64))
(declare-fun temp10645_177 () (_ BitVec 64))
(declare-fun temp10645_178 () (_ BitVec 64))
(declare-fun temp10645_179 () (_ BitVec 64))
(declare-fun temp10645_180 () (_ BitVec 64))
(declare-fun temp10645_181 () (_ BitVec 64))
(declare-fun temp10645_182 () (_ BitVec 64))
(declare-fun temp10645_183 () (_ BitVec 64))
(declare-fun temp10645_184 () (_ BitVec 64))
(declare-fun temp10645_185 () (_ BitVec 64))
(declare-fun temp10645_186 () (_ BitVec 64))
(declare-fun temp10645_187 () (_ BitVec 64))
(declare-fun temp10645_188 () (_ BitVec 64))
(declare-fun temp10645_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10645_190 () (_ BitVec 64))
(declare-fun temp10645_192 () (_ BitVec 64))
(declare-fun temp10645_193 () (_ BitVec 64))
(declare-fun temp10645_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10645_194 () (_ BitVec 64))
(declare-fun temp10645_195 () (_ BitVec 64))
(declare-fun temp10645_197 () (_ BitVec 64))
(declare-fun temp10645_198 () (_ BitVec 64))
(declare-fun temp10645_196 () (_ BitVec 64))
(declare-fun temp10645_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10645_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10645_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10645_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10645_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10645_204 () (_ BitVec 64))
(declare-fun temp10645_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10645_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10645_207 () (_ BitVec 64))
(declare-fun temp10645_208 () (_ BitVec 64))
(declare-fun temp10645_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10645_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10645_211 () (_ BitVec 64))
(declare-fun temp10645_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10645_213 () (_ BitVec 64))
(declare-fun temp10645_214 () (_ BitVec 64))
(declare-fun temp10645_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10645_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10645_217 () (_ BitVec 64))
(declare-fun temp10645_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10645_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10645_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp10645_222 () (_ BitVec 64))
(declare-fun temp10645_221 () (_ BitVec 64))
(declare-fun temp10645_223 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp10645_224 () (_ BitVec 64))
(declare-fun temp10645_225 () (_ BitVec 64))
(declare-fun temp10645_226 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp10645_227 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp10645_228 () (_ BitVec 64))
(declare-fun temp10645_230 () (_ BitVec 64))
(declare-fun temp10645_229 () (_ BitVec 64))
(declare-fun temp10645_231 () (_ BitVec 64))
(assert (= temp10645_1 #x0000000000000001))
(assert (= var77203 temp10645_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10645_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10645_2)))
(assert (= temp10645_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10645_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10645_4 #x0000000000000000))
(assert (= var210941 temp10645_4))
(assert (= temp10645_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10645_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10645_6 #x0000000000000000))
(assert (= var210986 temp10645_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10645_7 #x0000000000000000))
(assert (= temp10645_8 temp10645_7))
(assert (= temp10645_9 (select ARGNAME_padding_NAMEEND_VAL temp10645_8)))
(assert (= temp10645_10 #x0000000000000001))
(assert (= temp10645_11 temp10645_10))
(assert (= temp10645_12 (select ARGNAME_padding_NAMEEND_VAL temp10645_11)))
(assert (= temp10645_13 #x0000000000000002))
(assert (= temp10645_14 temp10645_13))
(assert (= temp10645_15 (select ARGNAME_padding_NAMEEND_VAL temp10645_14)))
(assert (= temp10645_16 #x0000000000000003))
(assert (= temp10645_17 temp10645_16))
(assert (= temp10645_18 (select ARGNAME_padding_NAMEEND_VAL temp10645_17)))
(assert (= temp10645_19 #x0000000000000004))
(assert (= temp10645_20 temp10645_19))
(assert (= temp10645_21 (select ARGNAME_padding_NAMEEND_VAL temp10645_20)))
(assert (= temp10645_22 #x0000000000000005))
(assert (= temp10645_23 temp10645_22))
(assert (= temp10645_24 (select ARGNAME_padding_NAMEEND_VAL temp10645_23)))
(assert (= temp10645_25 #x0000000000000000))
(assert (= temp10645_26 #x0000000000000000))
(assert (= temp10645_27 temp10645_26))
(assert (= temp10645_28 (select ARGNAME_padding_NAMEEND_VAL temp10645_27)))
(assert (= temp10645_29 #x0000000000000000))
(assert (= temp10645_30 #x0000000000000001))
(assert (= temp10645_31 temp10645_30))
(assert (= temp10645_32 (select ARGNAME_padding_NAMEEND_VAL temp10645_31)))
(assert (= temp10645_33 #x0000000000000000))
(assert (= temp10645_34 #x0000000000000002))
(assert (= temp10645_35 temp10645_34))
(assert (= temp10645_36 (select ARGNAME_padding_NAMEEND_VAL temp10645_35)))
(assert (= temp10645_37 #x0000000000000000))
(assert (= temp10645_38 #x0000000000000003))
(assert (= temp10645_39 temp10645_38))
(assert (= temp10645_40 (select ARGNAME_padding_NAMEEND_VAL temp10645_39)))
(assert (= temp10645_41 #x0000000000000000))
(assert (= temp10645_42 #x0000000000000004))
(assert (= temp10645_43 temp10645_42))
(assert (= temp10645_44 (select ARGNAME_padding_NAMEEND_VAL temp10645_43)))
(assert (= temp10645_45 #x0000000000000000))
(assert (= temp10645_46 #x0000000000000005))
(assert (= temp10645_47 temp10645_46))
(assert (= temp10645_48 (select ARGNAME_padding_NAMEEND_VAL temp10645_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10645_28 temp10645_25)
             (bvslt temp10645_32 temp10645_29)
             (bvslt temp10645_36 temp10645_33)
             (bvslt temp10645_40 temp10645_37)
             (bvslt temp10645_44 temp10645_41)
             (bvslt temp10645_48 temp10645_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10645_49 #x0000000000000000))
(assert (= var1191714 temp10645_49))
(assert (= temp10645_50 #x0000000000000000))
(assert (= temp10645_51 temp10645_50))
(assert (= temp10645_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10645_51)))
(assert (= temp10645_53 #x0000000000000001))
(assert (= temp10645_54 temp10645_53))
(assert (= temp10645_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10645_54)))
(assert (= temp10645_56 #x0000000000000002))
(assert (= temp10645_57 temp10645_56))
(assert (= temp10645_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10645_57)))
(assert (= temp10645_59 #x0000000000000003))
(assert (= temp10645_60 temp10645_59))
(assert (= temp10645_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10645_60)))
(assert (= temp10645_62 #x0000000000000004))
(assert (= temp10645_63 temp10645_62))
(assert (= temp10645_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10645_63)))
(assert (= temp10645_65 #x0000000000000005))
(assert (= temp10645_66 temp10645_65))
(assert (= temp10645_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10645_66)))
(assert (= temp10645_68 #x0000000000000000))
(assert (= temp10645_69 #x0000000000000000))
(assert (= temp10645_70 temp10645_69))
(assert (= temp10645_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10645_70)))
(assert (= temp10645_72 #x0000000000000000))
(assert (= temp10645_73 #x0000000000000001))
(assert (= temp10645_74 temp10645_73))
(assert (= temp10645_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10645_74)))
(assert (= temp10645_76 #x0000000000000000))
(assert (= temp10645_77 #x0000000000000002))
(assert (= temp10645_78 temp10645_77))
(assert (= temp10645_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10645_78)))
(assert (= temp10645_80 #x0000000000000000))
(assert (= temp10645_81 #x0000000000000003))
(assert (= temp10645_82 temp10645_81))
(assert (= temp10645_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10645_82)))
(assert (= temp10645_84 #x0000000000000000))
(assert (= temp10645_85 #x0000000000000004))
(assert (= temp10645_86 temp10645_85))
(assert (= temp10645_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10645_86)))
(assert (= temp10645_88 #x0000000000000000))
(assert (= temp10645_89 #x0000000000000005))
(assert (= temp10645_90 temp10645_89))
(assert (= temp10645_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10645_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10645_71 temp10645_68)
             (bvslt temp10645_75 temp10645_72)
             (bvslt temp10645_79 temp10645_76)
             (bvslt temp10645_83 temp10645_80)
             (bvslt temp10645_87 temp10645_84)
             (bvslt temp10645_91 temp10645_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10645_92 #x0000000000000000))
(assert (= var1191725 temp10645_92))
(assert (= temp10645_93 #x0000000000000000))
(assert (= temp10645_94 temp10645_93))
(assert (= temp10645_95 (select ARGNAME_stride_NAMEEND_VAL temp10645_94)))
(assert (= temp10645_96 #x0000000000000001))
(assert (= temp10645_97 temp10645_96))
(assert (= temp10645_98 (select ARGNAME_stride_NAMEEND_VAL temp10645_97)))
(assert (= temp10645_99 #x0000000000000002))
(assert (= temp10645_100 temp10645_99))
(assert (= temp10645_101 (select ARGNAME_stride_NAMEEND_VAL temp10645_100)))
(assert (= temp10645_102 #x0000000000000003))
(assert (= temp10645_103 temp10645_102))
(assert (= temp10645_104 (select ARGNAME_stride_NAMEEND_VAL temp10645_103)))
(assert (= temp10645_105 #x0000000000000004))
(assert (= temp10645_106 temp10645_105))
(assert (= temp10645_107 (select ARGNAME_stride_NAMEEND_VAL temp10645_106)))
(assert (= temp10645_108 #x0000000000000005))
(assert (= temp10645_109 temp10645_108))
(assert (= temp10645_110 (select ARGNAME_stride_NAMEEND_VAL temp10645_109)))
(assert (= temp10645_111 #x0000000000000000))
(assert (= temp10645_112 #x0000000000000000))
(assert (= temp10645_113 temp10645_112))
(assert (= temp10645_114 (select ARGNAME_stride_NAMEEND_VAL temp10645_113)))
(assert (= temp10645_115 #x0000000000000000))
(assert (= temp10645_116 #x0000000000000001))
(assert (= temp10645_117 temp10645_116))
(assert (= temp10645_118 (select ARGNAME_stride_NAMEEND_VAL temp10645_117)))
(assert (= temp10645_119 #x0000000000000000))
(assert (= temp10645_120 #x0000000000000002))
(assert (= temp10645_121 temp10645_120))
(assert (= temp10645_122 (select ARGNAME_stride_NAMEEND_VAL temp10645_121)))
(assert (= temp10645_123 #x0000000000000000))
(assert (= temp10645_124 #x0000000000000003))
(assert (= temp10645_125 temp10645_124))
(assert (= temp10645_126 (select ARGNAME_stride_NAMEEND_VAL temp10645_125)))
(assert (= temp10645_127 #x0000000000000000))
(assert (= temp10645_128 #x0000000000000004))
(assert (= temp10645_129 temp10645_128))
(assert (= temp10645_130 (select ARGNAME_stride_NAMEEND_VAL temp10645_129)))
(assert (= temp10645_131 #x0000000000000000))
(assert (= temp10645_132 #x0000000000000005))
(assert (= temp10645_133 temp10645_132))
(assert (= temp10645_134 (select ARGNAME_stride_NAMEEND_VAL temp10645_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10645_114 temp10645_111)
             (bvsle temp10645_118 temp10645_115)
             (bvsle temp10645_122 temp10645_119)
             (bvsle temp10645_126 temp10645_123)
             (bvsle temp10645_130 temp10645_127)
             (bvsle temp10645_134 temp10645_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10645_135 #x0000000000000000))
(assert (= var1191735 temp10645_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10645_136 #x0000000000000001))
(assert (= var1191747 temp10645_136))
(assert (= temp10645_137 #x0000000000000000))
(assert (= var1179826 temp10645_137))
(assert (= temp10645_138 #x0000000000000000))
(assert (= temp10645_139 temp10645_138))
(assert (= temp10645_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10645_139)))
(assert (= temp10645_141 #x0000000000000001))
(assert (= temp10645_142 temp10645_141))
(assert (= temp10645_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10645_142)))
(assert (= temp10645_144 #x0000000000000002))
(assert (= temp10645_145 temp10645_144))
(assert (= temp10645_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10645_145)))
(assert (= temp10645_147 #x0000000000000003))
(assert (= temp10645_148 temp10645_147))
(assert (= temp10645_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10645_148)))
(assert (= temp10645_150 #x0000000000000004))
(assert (= temp10645_151 temp10645_150))
(assert (= temp10645_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10645_151)))
(assert (= temp10645_153 #x0000000000000005))
(assert (= temp10645_154 temp10645_153))
(assert (= temp10645_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10645_154)))
(assert (= temp10645_157 var1179826))
(assert (= temp10645_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10645_157)))
(assert (= temp10645_156 temp10645_158))
(assert (= var1191780
   (ite (bvslt temp10645_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10645_159 #x0000000000000000))
(assert (= var1191780 temp10645_159))
(assert (= temp10645_160 #x0000000000000000))
(assert (= var1179826 temp10645_160))
(assert (= temp10645_162 var1179826))
(assert (= temp10645_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10645_162)))
(assert (= temp10645_161 temp10645_163))
(assert (= var1191802 (bvsmod temp10645_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10645_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10645_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10645_165 #x0000000000000001))
(assert (= var1191803 temp10645_165))
(assert (= temp10645_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10645_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10645_167 #x0000000000000001))
(assert (= var1191823 temp10645_167))
(assert (= temp10645_168 #x0000000000000001))
(assert (= var1180714 temp10645_168))
(assert (= temp10645_169 #x0000000000000000))
(assert (= temp10645_170 temp10645_169))
(assert (= temp10645_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10645_170)))
(assert (= temp10645_172 #x0000000000000001))
(assert (= temp10645_173 temp10645_172))
(assert (= temp10645_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10645_173)))
(assert (= temp10645_175 #x0000000000000002))
(assert (= temp10645_176 temp10645_175))
(assert (= temp10645_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10645_176)))
(assert (= temp10645_178 #x0000000000000003))
(assert (= temp10645_179 temp10645_178))
(assert (= temp10645_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10645_179)))
(assert (= temp10645_181 #x0000000000000004))
(assert (= temp10645_182 temp10645_181))
(assert (= temp10645_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10645_182)))
(assert (= temp10645_184 #x0000000000000005))
(assert (= temp10645_185 temp10645_184))
(assert (= temp10645_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10645_185)))
(assert (= temp10645_187 #x0000000000000000))
(assert (= temp10645_188
   (ite (bvslt var1180714 temp10645_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10645_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10645_188)))
(assert (= var1191831 temp10645_189))
(assert (bvslt (ite (bvslt var1180714 temp10645_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10645_190 #x0000000000000001))
(assert (= var1180714 temp10645_190))
(assert (= temp10645_192 var1180714))
(assert (= temp10645_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10645_192)))
(assert (= temp10645_191 temp10645_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10645_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10645_194 #x0000000000000001))
(assert (= var1191836 temp10645_194))
(assert (= temp10645_195 #x0000000000000000))
(assert (= var1179826 temp10645_195))
(assert (= temp10645_197 var1179826))
(assert (= temp10645_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10645_197)))
(assert (= temp10645_196 temp10645_198))
(assert (= temp10645_199 #x0000000000000002))
(assert (= var1586025 temp10645_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10645_200 #x0000000000000001))
(assert (= var1191993 temp10645_200))
(assert (= temp10645_201 #x0000000000000001))
(assert (= var2700303 temp10645_201))
(assert (= temp10645_202 #x0000000000000001))
(assert (= var2962447 temp10645_202))
(assert (= temp10645_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10645_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10645_204 #x0000000000000001))
(assert (= var211058 temp10645_204))
(assert (= temp10645_205 #x0000000000000001))
(assert (= var211188 temp10645_205))
(assert (= var3879401 var211188))
(assert (= temp10645_206 #x0000000000000000))
(assert (= var3866802 temp10645_206))
(assert (= temp10645_207 #x0000000000000000))
(assert (= temp10645_208
   (ite (bvslt var3866802 temp10645_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10645_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10645_208)))
(assert (= var3879420 temp10645_209))
(assert (bvslt (ite (bvslt var3866802 temp10645_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10645_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10645_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10645_211 #x0000000000000000))
(assert (= var3879421 temp10645_211))
(assert (= temp10645_212 #x0000000000000001))
(assert (= var3867690 temp10645_212))
(assert (= temp10645_213 #x0000000000000000))
(assert (= temp10645_214
   (ite (bvslt var3867690 temp10645_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10645_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10645_214)))
(assert (= var3879423 temp10645_215))
(assert (bvslt (ite (bvslt var3867690 temp10645_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10645_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10645_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10645_217 #x0000000000000001))
(assert (= var3879424 temp10645_217))
(assert (= temp10645_218 #x0000000000000000))
(assert (= var4133117 temp10645_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10645_219 #x0000000000000002))
(assert (= var4339331 temp10645_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10645_220 #x0000000000000000))
(assert (= var4404892 temp10645_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp10645_222 #xffffffffffffffff))
(assert (= temp10645_221 temp10645_222))
(assert (= temp10645_223 #x0000000000000001))
(assert (= var197674 temp10645_223))
(assert (= temp10645_224 #x0000000000000000))
(assert (= temp10645_225
   (ite (bvslt var197674 temp10645_224)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp10645_226 (select ARGNAME_input_NAMEEND_DIMSIZE temp10645_225)))
(assert (= var211595 temp10645_226))
(assert (bvslt (ite (bvslt var197674 temp10645_224)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10645_227 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp10645_227) #x0000000000000001 #x0000000000000000)))
(assert (= temp10645_228 #x0000000000000001))
(assert (= var211596 temp10645_228))
(assert (= temp10645_230 #xffffffffffffffff))
(assert (= temp10645_229 temp10645_230))
(assert (= temp10645_231 #x0000000000000001))
(assert (= var211058 temp10645_231))
(model-add temp10645_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10645_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10645_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10645_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





