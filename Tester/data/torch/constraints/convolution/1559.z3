(declare-fun temp10873_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10873_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10873_3 () (_ BitVec 64))
(declare-fun temp10873_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10873_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10873_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10873_7 () (_ BitVec 64))
(declare-fun temp10873_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10873_9 () (_ BitVec 64))
(declare-fun temp10873_10 () (_ BitVec 64))
(declare-fun temp10873_11 () (_ BitVec 64))
(declare-fun temp10873_12 () (_ BitVec 64))
(declare-fun temp10873_13 () (_ BitVec 64))
(declare-fun temp10873_14 () (_ BitVec 64))
(declare-fun temp10873_15 () (_ BitVec 64))
(declare-fun temp10873_16 () (_ BitVec 64))
(declare-fun temp10873_17 () (_ BitVec 64))
(declare-fun temp10873_18 () (_ BitVec 64))
(declare-fun temp10873_19 () (_ BitVec 64))
(declare-fun temp10873_20 () (_ BitVec 64))
(declare-fun temp10873_21 () (_ BitVec 64))
(declare-fun temp10873_22 () (_ BitVec 64))
(declare-fun temp10873_23 () (_ BitVec 64))
(declare-fun temp10873_24 () (_ BitVec 64))
(declare-fun temp10873_25 () (_ BitVec 64))
(declare-fun temp10873_26 () (_ BitVec 64))
(declare-fun temp10873_27 () (_ BitVec 64))
(declare-fun temp10873_28 () (_ BitVec 64))
(declare-fun temp10873_29 () (_ BitVec 64))
(declare-fun temp10873_30 () (_ BitVec 64))
(declare-fun temp10873_31 () (_ BitVec 64))
(declare-fun temp10873_32 () (_ BitVec 64))
(declare-fun temp10873_33 () (_ BitVec 64))
(declare-fun temp10873_34 () (_ BitVec 64))
(declare-fun temp10873_35 () (_ BitVec 64))
(declare-fun temp10873_36 () (_ BitVec 64))
(declare-fun temp10873_37 () (_ BitVec 64))
(declare-fun temp10873_38 () (_ BitVec 64))
(declare-fun temp10873_39 () (_ BitVec 64))
(declare-fun temp10873_40 () (_ BitVec 64))
(declare-fun temp10873_41 () (_ BitVec 64))
(declare-fun temp10873_42 () (_ BitVec 64))
(declare-fun temp10873_43 () (_ BitVec 64))
(declare-fun temp10873_44 () (_ BitVec 64))
(declare-fun temp10873_45 () (_ BitVec 64))
(declare-fun temp10873_46 () (_ BitVec 64))
(declare-fun temp10873_47 () (_ BitVec 64))
(declare-fun temp10873_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10873_49 () (_ BitVec 64))
(declare-fun temp10873_50 () (_ BitVec 64))
(declare-fun temp10873_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10873_52 () (_ BitVec 64))
(declare-fun temp10873_53 () (_ BitVec 64))
(declare-fun temp10873_54 () (_ BitVec 64))
(declare-fun temp10873_55 () (_ BitVec 64))
(declare-fun temp10873_56 () (_ BitVec 64))
(declare-fun temp10873_57 () (_ BitVec 64))
(declare-fun temp10873_58 () (_ BitVec 64))
(declare-fun temp10873_59 () (_ BitVec 64))
(declare-fun temp10873_60 () (_ BitVec 64))
(declare-fun temp10873_61 () (_ BitVec 64))
(declare-fun temp10873_62 () (_ BitVec 64))
(declare-fun temp10873_63 () (_ BitVec 64))
(declare-fun temp10873_64 () (_ BitVec 64))
(declare-fun temp10873_65 () (_ BitVec 64))
(declare-fun temp10873_66 () (_ BitVec 64))
(declare-fun temp10873_67 () (_ BitVec 64))
(declare-fun temp10873_68 () (_ BitVec 64))
(declare-fun temp10873_69 () (_ BitVec 64))
(declare-fun temp10873_70 () (_ BitVec 64))
(declare-fun temp10873_71 () (_ BitVec 64))
(declare-fun temp10873_72 () (_ BitVec 64))
(declare-fun temp10873_73 () (_ BitVec 64))
(declare-fun temp10873_74 () (_ BitVec 64))
(declare-fun temp10873_75 () (_ BitVec 64))
(declare-fun temp10873_76 () (_ BitVec 64))
(declare-fun temp10873_77 () (_ BitVec 64))
(declare-fun temp10873_78 () (_ BitVec 64))
(declare-fun temp10873_79 () (_ BitVec 64))
(declare-fun temp10873_80 () (_ BitVec 64))
(declare-fun temp10873_81 () (_ BitVec 64))
(declare-fun temp10873_82 () (_ BitVec 64))
(declare-fun temp10873_83 () (_ BitVec 64))
(declare-fun temp10873_84 () (_ BitVec 64))
(declare-fun temp10873_85 () (_ BitVec 64))
(declare-fun temp10873_86 () (_ BitVec 64))
(declare-fun temp10873_87 () (_ BitVec 64))
(declare-fun temp10873_88 () (_ BitVec 64))
(declare-fun temp10873_89 () (_ BitVec 64))
(declare-fun temp10873_90 () (_ BitVec 64))
(declare-fun temp10873_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10873_92 () (_ BitVec 64))
(declare-fun temp10873_93 () (_ BitVec 64))
(declare-fun temp10873_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10873_95 () (_ BitVec 64))
(declare-fun temp10873_96 () (_ BitVec 64))
(declare-fun temp10873_97 () (_ BitVec 64))
(declare-fun temp10873_98 () (_ BitVec 64))
(declare-fun temp10873_99 () (_ BitVec 64))
(declare-fun temp10873_100 () (_ BitVec 64))
(declare-fun temp10873_101 () (_ BitVec 64))
(declare-fun temp10873_102 () (_ BitVec 64))
(declare-fun temp10873_103 () (_ BitVec 64))
(declare-fun temp10873_104 () (_ BitVec 64))
(declare-fun temp10873_105 () (_ BitVec 64))
(declare-fun temp10873_106 () (_ BitVec 64))
(declare-fun temp10873_107 () (_ BitVec 64))
(declare-fun temp10873_108 () (_ BitVec 64))
(declare-fun temp10873_109 () (_ BitVec 64))
(declare-fun temp10873_110 () (_ BitVec 64))
(declare-fun temp10873_111 () (_ BitVec 64))
(declare-fun temp10873_112 () (_ BitVec 64))
(declare-fun temp10873_113 () (_ BitVec 64))
(declare-fun temp10873_114 () (_ BitVec 64))
(declare-fun temp10873_115 () (_ BitVec 64))
(declare-fun temp10873_116 () (_ BitVec 64))
(declare-fun temp10873_117 () (_ BitVec 64))
(declare-fun temp10873_118 () (_ BitVec 64))
(declare-fun temp10873_119 () (_ BitVec 64))
(declare-fun temp10873_120 () (_ BitVec 64))
(declare-fun temp10873_121 () (_ BitVec 64))
(declare-fun temp10873_122 () (_ BitVec 64))
(declare-fun temp10873_123 () (_ BitVec 64))
(declare-fun temp10873_124 () (_ BitVec 64))
(declare-fun temp10873_125 () (_ BitVec 64))
(declare-fun temp10873_126 () (_ BitVec 64))
(declare-fun temp10873_127 () (_ BitVec 64))
(declare-fun temp10873_128 () (_ BitVec 64))
(declare-fun temp10873_129 () (_ BitVec 64))
(declare-fun temp10873_130 () (_ BitVec 64))
(declare-fun temp10873_131 () (_ BitVec 64))
(declare-fun temp10873_132 () (_ BitVec 64))
(declare-fun temp10873_133 () (_ BitVec 64))
(declare-fun temp10873_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10873_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10873_136 () (_ BitVec 64))
(declare-fun temp10873_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10873_138 () (_ BitVec 64))
(declare-fun temp10873_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10873_140 () (_ BitVec 64))
(declare-fun temp10873_141 () (_ BitVec 64))
(declare-fun temp10873_142 () (_ BitVec 64))
(declare-fun temp10873_143 () (_ BitVec 64))
(declare-fun temp10873_144 () (_ BitVec 64))
(declare-fun temp10873_145 () (_ BitVec 64))
(declare-fun temp10873_146 () (_ BitVec 64))
(declare-fun temp10873_147 () (_ BitVec 64))
(declare-fun temp10873_148 () (_ BitVec 64))
(declare-fun temp10873_149 () (_ BitVec 64))
(declare-fun temp10873_150 () (_ BitVec 64))
(declare-fun temp10873_151 () (_ BitVec 64))
(declare-fun temp10873_152 () (_ BitVec 64))
(declare-fun temp10873_153 () (_ BitVec 64))
(declare-fun temp10873_154 () (_ BitVec 64))
(declare-fun temp10873_155 () (_ BitVec 64))
(declare-fun temp10873_157 () (_ BitVec 64))
(declare-fun temp10873_158 () (_ BitVec 64))
(declare-fun temp10873_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10873_159 () (_ BitVec 64))
(declare-fun temp10873_160 () (_ BitVec 64))
(declare-fun temp10873_162 () (_ BitVec 64))
(declare-fun temp10873_163 () (_ BitVec 64))
(declare-fun temp10873_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10873_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10873_165 () (_ BitVec 64))
(declare-fun temp10873_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10873_167 () (_ BitVec 64))
(declare-fun temp10873_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10873_169 () (_ BitVec 64))
(declare-fun temp10873_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10873_171 () (_ BitVec 64))
(declare-fun temp10873_172 () (_ BitVec 64))
(declare-fun temp10873_173 () (_ BitVec 64))
(declare-fun temp10873_174 () (_ BitVec 64))
(declare-fun temp10873_175 () (_ BitVec 64))
(declare-fun temp10873_176 () (_ BitVec 64))
(declare-fun temp10873_177 () (_ BitVec 64))
(declare-fun temp10873_178 () (_ BitVec 64))
(declare-fun temp10873_179 () (_ BitVec 64))
(declare-fun temp10873_180 () (_ BitVec 64))
(declare-fun temp10873_181 () (_ BitVec 64))
(declare-fun temp10873_182 () (_ BitVec 64))
(declare-fun temp10873_183 () (_ BitVec 64))
(declare-fun temp10873_184 () (_ BitVec 64))
(declare-fun temp10873_185 () (_ BitVec 64))
(declare-fun temp10873_186 () (_ BitVec 64))
(declare-fun temp10873_187 () (_ BitVec 64))
(declare-fun temp10873_188 () (_ BitVec 64))
(declare-fun temp10873_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10873_190 () (_ BitVec 64))
(declare-fun temp10873_192 () (_ BitVec 64))
(declare-fun temp10873_193 () (_ BitVec 64))
(declare-fun temp10873_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10873_194 () (_ BitVec 64))
(declare-fun temp10873_195 () (_ BitVec 64))
(declare-fun temp10873_197 () (_ BitVec 64))
(declare-fun temp10873_198 () (_ BitVec 64))
(declare-fun temp10873_196 () (_ BitVec 64))
(declare-fun temp10873_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10873_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10873_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10873_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10873_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10873_204 () (_ BitVec 64))
(declare-fun temp10873_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10873_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10873_207 () (_ BitVec 64))
(declare-fun temp10873_208 () (_ BitVec 64))
(declare-fun temp10873_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10873_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10873_211 () (_ BitVec 64))
(declare-fun temp10873_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10873_213 () (_ BitVec 64))
(declare-fun temp10873_214 () (_ BitVec 64))
(declare-fun temp10873_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10873_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10873_217 () (_ BitVec 64))
(declare-fun temp10873_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10873_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10873_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var5714320 () (_ BitVec 64))
(declare-fun var5976464 () (_ BitVec 64))
(declare-fun temp10873_221 () (_ BitVec 64))
(declare-fun var6304144 () (_ BitVec 64))
(declare-fun temp10873_222 () (_ BitVec 64))
(assert (= temp10873_1 #x0000000000000001))
(assert (= var77203 temp10873_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10873_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10873_2)))
(assert (= temp10873_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10873_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10873_4 #x0000000000000000))
(assert (= var210941 temp10873_4))
(assert (= temp10873_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10873_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10873_6 #x0000000000000000))
(assert (= var210986 temp10873_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10873_7 #x0000000000000000))
(assert (= temp10873_8 temp10873_7))
(assert (= temp10873_9 (select ARGNAME_padding_NAMEEND_VAL temp10873_8)))
(assert (= temp10873_10 #x0000000000000001))
(assert (= temp10873_11 temp10873_10))
(assert (= temp10873_12 (select ARGNAME_padding_NAMEEND_VAL temp10873_11)))
(assert (= temp10873_13 #x0000000000000002))
(assert (= temp10873_14 temp10873_13))
(assert (= temp10873_15 (select ARGNAME_padding_NAMEEND_VAL temp10873_14)))
(assert (= temp10873_16 #x0000000000000003))
(assert (= temp10873_17 temp10873_16))
(assert (= temp10873_18 (select ARGNAME_padding_NAMEEND_VAL temp10873_17)))
(assert (= temp10873_19 #x0000000000000004))
(assert (= temp10873_20 temp10873_19))
(assert (= temp10873_21 (select ARGNAME_padding_NAMEEND_VAL temp10873_20)))
(assert (= temp10873_22 #x0000000000000005))
(assert (= temp10873_23 temp10873_22))
(assert (= temp10873_24 (select ARGNAME_padding_NAMEEND_VAL temp10873_23)))
(assert (= temp10873_25 #x0000000000000000))
(assert (= temp10873_26 #x0000000000000000))
(assert (= temp10873_27 temp10873_26))
(assert (= temp10873_28 (select ARGNAME_padding_NAMEEND_VAL temp10873_27)))
(assert (= temp10873_29 #x0000000000000000))
(assert (= temp10873_30 #x0000000000000001))
(assert (= temp10873_31 temp10873_30))
(assert (= temp10873_32 (select ARGNAME_padding_NAMEEND_VAL temp10873_31)))
(assert (= temp10873_33 #x0000000000000000))
(assert (= temp10873_34 #x0000000000000002))
(assert (= temp10873_35 temp10873_34))
(assert (= temp10873_36 (select ARGNAME_padding_NAMEEND_VAL temp10873_35)))
(assert (= temp10873_37 #x0000000000000000))
(assert (= temp10873_38 #x0000000000000003))
(assert (= temp10873_39 temp10873_38))
(assert (= temp10873_40 (select ARGNAME_padding_NAMEEND_VAL temp10873_39)))
(assert (= temp10873_41 #x0000000000000000))
(assert (= temp10873_42 #x0000000000000004))
(assert (= temp10873_43 temp10873_42))
(assert (= temp10873_44 (select ARGNAME_padding_NAMEEND_VAL temp10873_43)))
(assert (= temp10873_45 #x0000000000000000))
(assert (= temp10873_46 #x0000000000000005))
(assert (= temp10873_47 temp10873_46))
(assert (= temp10873_48 (select ARGNAME_padding_NAMEEND_VAL temp10873_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10873_28 temp10873_25)
             (bvslt temp10873_32 temp10873_29)
             (bvslt temp10873_36 temp10873_33)
             (bvslt temp10873_40 temp10873_37)
             (bvslt temp10873_44 temp10873_41)
             (bvslt temp10873_48 temp10873_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10873_49 #x0000000000000000))
(assert (= var1191714 temp10873_49))
(assert (= temp10873_50 #x0000000000000000))
(assert (= temp10873_51 temp10873_50))
(assert (= temp10873_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10873_51)))
(assert (= temp10873_53 #x0000000000000001))
(assert (= temp10873_54 temp10873_53))
(assert (= temp10873_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10873_54)))
(assert (= temp10873_56 #x0000000000000002))
(assert (= temp10873_57 temp10873_56))
(assert (= temp10873_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10873_57)))
(assert (= temp10873_59 #x0000000000000003))
(assert (= temp10873_60 temp10873_59))
(assert (= temp10873_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10873_60)))
(assert (= temp10873_62 #x0000000000000004))
(assert (= temp10873_63 temp10873_62))
(assert (= temp10873_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10873_63)))
(assert (= temp10873_65 #x0000000000000005))
(assert (= temp10873_66 temp10873_65))
(assert (= temp10873_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10873_66)))
(assert (= temp10873_68 #x0000000000000000))
(assert (= temp10873_69 #x0000000000000000))
(assert (= temp10873_70 temp10873_69))
(assert (= temp10873_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10873_70)))
(assert (= temp10873_72 #x0000000000000000))
(assert (= temp10873_73 #x0000000000000001))
(assert (= temp10873_74 temp10873_73))
(assert (= temp10873_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10873_74)))
(assert (= temp10873_76 #x0000000000000000))
(assert (= temp10873_77 #x0000000000000002))
(assert (= temp10873_78 temp10873_77))
(assert (= temp10873_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10873_78)))
(assert (= temp10873_80 #x0000000000000000))
(assert (= temp10873_81 #x0000000000000003))
(assert (= temp10873_82 temp10873_81))
(assert (= temp10873_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10873_82)))
(assert (= temp10873_84 #x0000000000000000))
(assert (= temp10873_85 #x0000000000000004))
(assert (= temp10873_86 temp10873_85))
(assert (= temp10873_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10873_86)))
(assert (= temp10873_88 #x0000000000000000))
(assert (= temp10873_89 #x0000000000000005))
(assert (= temp10873_90 temp10873_89))
(assert (= temp10873_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10873_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10873_71 temp10873_68)
             (bvslt temp10873_75 temp10873_72)
             (bvslt temp10873_79 temp10873_76)
             (bvslt temp10873_83 temp10873_80)
             (bvslt temp10873_87 temp10873_84)
             (bvslt temp10873_91 temp10873_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10873_92 #x0000000000000000))
(assert (= var1191725 temp10873_92))
(assert (= temp10873_93 #x0000000000000000))
(assert (= temp10873_94 temp10873_93))
(assert (= temp10873_95 (select ARGNAME_stride_NAMEEND_VAL temp10873_94)))
(assert (= temp10873_96 #x0000000000000001))
(assert (= temp10873_97 temp10873_96))
(assert (= temp10873_98 (select ARGNAME_stride_NAMEEND_VAL temp10873_97)))
(assert (= temp10873_99 #x0000000000000002))
(assert (= temp10873_100 temp10873_99))
(assert (= temp10873_101 (select ARGNAME_stride_NAMEEND_VAL temp10873_100)))
(assert (= temp10873_102 #x0000000000000003))
(assert (= temp10873_103 temp10873_102))
(assert (= temp10873_104 (select ARGNAME_stride_NAMEEND_VAL temp10873_103)))
(assert (= temp10873_105 #x0000000000000004))
(assert (= temp10873_106 temp10873_105))
(assert (= temp10873_107 (select ARGNAME_stride_NAMEEND_VAL temp10873_106)))
(assert (= temp10873_108 #x0000000000000005))
(assert (= temp10873_109 temp10873_108))
(assert (= temp10873_110 (select ARGNAME_stride_NAMEEND_VAL temp10873_109)))
(assert (= temp10873_111 #x0000000000000000))
(assert (= temp10873_112 #x0000000000000000))
(assert (= temp10873_113 temp10873_112))
(assert (= temp10873_114 (select ARGNAME_stride_NAMEEND_VAL temp10873_113)))
(assert (= temp10873_115 #x0000000000000000))
(assert (= temp10873_116 #x0000000000000001))
(assert (= temp10873_117 temp10873_116))
(assert (= temp10873_118 (select ARGNAME_stride_NAMEEND_VAL temp10873_117)))
(assert (= temp10873_119 #x0000000000000000))
(assert (= temp10873_120 #x0000000000000002))
(assert (= temp10873_121 temp10873_120))
(assert (= temp10873_122 (select ARGNAME_stride_NAMEEND_VAL temp10873_121)))
(assert (= temp10873_123 #x0000000000000000))
(assert (= temp10873_124 #x0000000000000003))
(assert (= temp10873_125 temp10873_124))
(assert (= temp10873_126 (select ARGNAME_stride_NAMEEND_VAL temp10873_125)))
(assert (= temp10873_127 #x0000000000000000))
(assert (= temp10873_128 #x0000000000000004))
(assert (= temp10873_129 temp10873_128))
(assert (= temp10873_130 (select ARGNAME_stride_NAMEEND_VAL temp10873_129)))
(assert (= temp10873_131 #x0000000000000000))
(assert (= temp10873_132 #x0000000000000005))
(assert (= temp10873_133 temp10873_132))
(assert (= temp10873_134 (select ARGNAME_stride_NAMEEND_VAL temp10873_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10873_114 temp10873_111)
             (bvsle temp10873_118 temp10873_115)
             (bvsle temp10873_122 temp10873_119)
             (bvsle temp10873_126 temp10873_123)
             (bvsle temp10873_130 temp10873_127)
             (bvsle temp10873_134 temp10873_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10873_135 #x0000000000000000))
(assert (= var1191735 temp10873_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10873_136 #x0000000000000001))
(assert (= var1191747 temp10873_136))
(assert (= temp10873_137 #x0000000000000000))
(assert (= var1179826 temp10873_137))
(assert (= temp10873_138 #x0000000000000000))
(assert (= temp10873_139 temp10873_138))
(assert (= temp10873_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10873_139)))
(assert (= temp10873_141 #x0000000000000001))
(assert (= temp10873_142 temp10873_141))
(assert (= temp10873_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10873_142)))
(assert (= temp10873_144 #x0000000000000002))
(assert (= temp10873_145 temp10873_144))
(assert (= temp10873_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10873_145)))
(assert (= temp10873_147 #x0000000000000003))
(assert (= temp10873_148 temp10873_147))
(assert (= temp10873_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10873_148)))
(assert (= temp10873_150 #x0000000000000004))
(assert (= temp10873_151 temp10873_150))
(assert (= temp10873_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10873_151)))
(assert (= temp10873_153 #x0000000000000005))
(assert (= temp10873_154 temp10873_153))
(assert (= temp10873_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10873_154)))
(assert (= temp10873_157 var1179826))
(assert (= temp10873_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10873_157)))
(assert (= temp10873_156 temp10873_158))
(assert (= var1191780
   (ite (bvslt temp10873_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10873_159 #x0000000000000000))
(assert (= var1191780 temp10873_159))
(assert (= temp10873_160 #x0000000000000000))
(assert (= var1179826 temp10873_160))
(assert (= temp10873_162 var1179826))
(assert (= temp10873_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10873_162)))
(assert (= temp10873_161 temp10873_163))
(assert (= var1191802 (bvsmod temp10873_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10873_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10873_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10873_165 #x0000000000000001))
(assert (= var1191803 temp10873_165))
(assert (= temp10873_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10873_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10873_167 #x0000000000000001))
(assert (= var1191823 temp10873_167))
(assert (= temp10873_168 #x0000000000000001))
(assert (= var1180714 temp10873_168))
(assert (= temp10873_169 #x0000000000000000))
(assert (= temp10873_170 temp10873_169))
(assert (= temp10873_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10873_170)))
(assert (= temp10873_172 #x0000000000000001))
(assert (= temp10873_173 temp10873_172))
(assert (= temp10873_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10873_173)))
(assert (= temp10873_175 #x0000000000000002))
(assert (= temp10873_176 temp10873_175))
(assert (= temp10873_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10873_176)))
(assert (= temp10873_178 #x0000000000000003))
(assert (= temp10873_179 temp10873_178))
(assert (= temp10873_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10873_179)))
(assert (= temp10873_181 #x0000000000000004))
(assert (= temp10873_182 temp10873_181))
(assert (= temp10873_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10873_182)))
(assert (= temp10873_184 #x0000000000000005))
(assert (= temp10873_185 temp10873_184))
(assert (= temp10873_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10873_185)))
(assert (= temp10873_187 #x0000000000000000))
(assert (= temp10873_188
   (ite (bvslt var1180714 temp10873_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10873_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10873_188)))
(assert (= var1191831 temp10873_189))
(assert (bvslt (ite (bvslt var1180714 temp10873_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10873_190 #x0000000000000001))
(assert (= var1180714 temp10873_190))
(assert (= temp10873_192 var1180714))
(assert (= temp10873_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10873_192)))
(assert (= temp10873_191 temp10873_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10873_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10873_194 #x0000000000000001))
(assert (= var1191836 temp10873_194))
(assert (= temp10873_195 #x0000000000000000))
(assert (= var1179826 temp10873_195))
(assert (= temp10873_197 var1179826))
(assert (= temp10873_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10873_197)))
(assert (= temp10873_196 temp10873_198))
(assert (= temp10873_199 #x0000000000000002))
(assert (= var1586025 temp10873_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10873_200 #x0000000000000001))
(assert (= var1191993 temp10873_200))
(assert (= temp10873_201 #x0000000000000001))
(assert (= var2700303 temp10873_201))
(assert (= temp10873_202 #x0000000000000001))
(assert (= var2962447 temp10873_202))
(assert (= temp10873_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10873_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10873_204 #x0000000000000001))
(assert (= var211058 temp10873_204))
(assert (= temp10873_205 #x0000000000000001))
(assert (= var211188 temp10873_205))
(assert (= var3879401 var211188))
(assert (= temp10873_206 #x0000000000000000))
(assert (= var3866802 temp10873_206))
(assert (= temp10873_207 #x0000000000000000))
(assert (= temp10873_208
   (ite (bvslt var3866802 temp10873_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10873_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10873_208)))
(assert (= var3879420 temp10873_209))
(assert (bvslt (ite (bvslt var3866802 temp10873_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10873_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10873_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10873_211 #x0000000000000000))
(assert (= var3879421 temp10873_211))
(assert (= temp10873_212 #x0000000000000001))
(assert (= var3867690 temp10873_212))
(assert (= temp10873_213 #x0000000000000000))
(assert (= temp10873_214
   (ite (bvslt var3867690 temp10873_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10873_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10873_214)))
(assert (= var3879423 temp10873_215))
(assert (bvslt (ite (bvslt var3867690 temp10873_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10873_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10873_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10873_217 #x0000000000000001))
(assert (= var3879424 temp10873_217))
(assert (= temp10873_218 #x0000000000000000))
(assert (= var4133117 temp10873_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10873_219 #x0000000000000002))
(assert (= var4339331 temp10873_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10873_220 #x0000000000000000))
(assert (= var4404892 temp10873_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var5714320 var211201))
(assert (= var5976464 var211201))
(assert (= temp10873_221 #x0000000000000000))
(assert (= var6304144 temp10873_221))
(assert (= temp10873_222 #x0000000000000001))
(assert (= var211058 temp10873_222))
(model-add temp10873_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10873_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10873_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10873_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))



