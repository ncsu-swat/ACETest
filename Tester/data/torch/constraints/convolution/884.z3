(declare-fun temp1178_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp1178_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1178_3 () (_ BitVec 64))
(declare-fun temp1178_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1178_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp1178_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1178_7 () (_ BitVec 64))
(declare-fun temp1178_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1178_9 () (_ BitVec 64))
(declare-fun temp1178_10 () (_ BitVec 64))
(declare-fun temp1178_11 () (_ BitVec 64))
(declare-fun temp1178_12 () (_ BitVec 64))
(declare-fun temp1178_13 () (_ BitVec 64))
(declare-fun temp1178_14 () (_ BitVec 64))
(declare-fun temp1178_15 () (_ BitVec 64))
(declare-fun temp1178_16 () (_ BitVec 64))
(declare-fun temp1178_17 () (_ BitVec 64))
(declare-fun temp1178_18 () (_ BitVec 64))
(declare-fun temp1178_19 () (_ BitVec 64))
(declare-fun temp1178_20 () (_ BitVec 64))
(declare-fun temp1178_21 () (_ BitVec 64))
(declare-fun temp1178_22 () (_ BitVec 64))
(declare-fun temp1178_23 () (_ BitVec 64))
(declare-fun temp1178_24 () (_ BitVec 64))
(declare-fun temp1178_25 () (_ BitVec 64))
(declare-fun temp1178_26 () (_ BitVec 64))
(declare-fun temp1178_27 () (_ BitVec 64))
(declare-fun temp1178_28 () (_ BitVec 64))
(declare-fun temp1178_29 () (_ BitVec 64))
(declare-fun temp1178_30 () (_ BitVec 64))
(declare-fun temp1178_31 () (_ BitVec 64))
(declare-fun temp1178_32 () (_ BitVec 64))
(declare-fun temp1178_33 () (_ BitVec 64))
(declare-fun temp1178_34 () (_ BitVec 64))
(declare-fun temp1178_35 () (_ BitVec 64))
(declare-fun temp1178_36 () (_ BitVec 64))
(declare-fun temp1178_37 () (_ BitVec 64))
(declare-fun temp1178_38 () (_ BitVec 64))
(declare-fun temp1178_39 () (_ BitVec 64))
(declare-fun temp1178_40 () (_ BitVec 64))
(declare-fun temp1178_41 () (_ BitVec 64))
(declare-fun temp1178_42 () (_ BitVec 64))
(declare-fun temp1178_43 () (_ BitVec 64))
(declare-fun temp1178_44 () (_ BitVec 64))
(declare-fun temp1178_45 () (_ BitVec 64))
(declare-fun temp1178_46 () (_ BitVec 64))
(declare-fun temp1178_47 () (_ BitVec 64))
(declare-fun temp1178_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp1178_49 () (_ BitVec 64))
(declare-fun temp1178_50 () (_ BitVec 64))
(declare-fun temp1178_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1178_52 () (_ BitVec 64))
(declare-fun temp1178_53 () (_ BitVec 64))
(declare-fun temp1178_54 () (_ BitVec 64))
(declare-fun temp1178_55 () (_ BitVec 64))
(declare-fun temp1178_56 () (_ BitVec 64))
(declare-fun temp1178_57 () (_ BitVec 64))
(declare-fun temp1178_58 () (_ BitVec 64))
(declare-fun temp1178_59 () (_ BitVec 64))
(declare-fun temp1178_60 () (_ BitVec 64))
(declare-fun temp1178_61 () (_ BitVec 64))
(declare-fun temp1178_62 () (_ BitVec 64))
(declare-fun temp1178_63 () (_ BitVec 64))
(declare-fun temp1178_64 () (_ BitVec 64))
(declare-fun temp1178_65 () (_ BitVec 64))
(declare-fun temp1178_66 () (_ BitVec 64))
(declare-fun temp1178_67 () (_ BitVec 64))
(declare-fun temp1178_68 () (_ BitVec 64))
(declare-fun temp1178_69 () (_ BitVec 64))
(declare-fun temp1178_70 () (_ BitVec 64))
(declare-fun temp1178_71 () (_ BitVec 64))
(declare-fun temp1178_72 () (_ BitVec 64))
(declare-fun temp1178_73 () (_ BitVec 64))
(declare-fun temp1178_74 () (_ BitVec 64))
(declare-fun temp1178_75 () (_ BitVec 64))
(declare-fun temp1178_76 () (_ BitVec 64))
(declare-fun temp1178_77 () (_ BitVec 64))
(declare-fun temp1178_78 () (_ BitVec 64))
(declare-fun temp1178_79 () (_ BitVec 64))
(declare-fun temp1178_80 () (_ BitVec 64))
(declare-fun temp1178_81 () (_ BitVec 64))
(declare-fun temp1178_82 () (_ BitVec 64))
(declare-fun temp1178_83 () (_ BitVec 64))
(declare-fun temp1178_84 () (_ BitVec 64))
(declare-fun temp1178_85 () (_ BitVec 64))
(declare-fun temp1178_86 () (_ BitVec 64))
(declare-fun temp1178_87 () (_ BitVec 64))
(declare-fun temp1178_88 () (_ BitVec 64))
(declare-fun temp1178_89 () (_ BitVec 64))
(declare-fun temp1178_90 () (_ BitVec 64))
(declare-fun temp1178_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp1178_92 () (_ BitVec 64))
(declare-fun temp1178_93 () (_ BitVec 64))
(declare-fun temp1178_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1178_95 () (_ BitVec 64))
(declare-fun temp1178_96 () (_ BitVec 64))
(declare-fun temp1178_97 () (_ BitVec 64))
(declare-fun temp1178_98 () (_ BitVec 64))
(declare-fun temp1178_99 () (_ BitVec 64))
(declare-fun temp1178_100 () (_ BitVec 64))
(declare-fun temp1178_101 () (_ BitVec 64))
(declare-fun temp1178_102 () (_ BitVec 64))
(declare-fun temp1178_103 () (_ BitVec 64))
(declare-fun temp1178_104 () (_ BitVec 64))
(declare-fun temp1178_105 () (_ BitVec 64))
(declare-fun temp1178_106 () (_ BitVec 64))
(declare-fun temp1178_107 () (_ BitVec 64))
(declare-fun temp1178_108 () (_ BitVec 64))
(declare-fun temp1178_109 () (_ BitVec 64))
(declare-fun temp1178_110 () (_ BitVec 64))
(declare-fun temp1178_111 () (_ BitVec 64))
(declare-fun temp1178_112 () (_ BitVec 64))
(declare-fun temp1178_113 () (_ BitVec 64))
(declare-fun temp1178_114 () (_ BitVec 64))
(declare-fun temp1178_115 () (_ BitVec 64))
(declare-fun temp1178_116 () (_ BitVec 64))
(declare-fun temp1178_117 () (_ BitVec 64))
(declare-fun temp1178_118 () (_ BitVec 64))
(declare-fun temp1178_119 () (_ BitVec 64))
(declare-fun temp1178_120 () (_ BitVec 64))
(declare-fun temp1178_121 () (_ BitVec 64))
(declare-fun temp1178_122 () (_ BitVec 64))
(declare-fun temp1178_123 () (_ BitVec 64))
(declare-fun temp1178_124 () (_ BitVec 64))
(declare-fun temp1178_125 () (_ BitVec 64))
(declare-fun temp1178_126 () (_ BitVec 64))
(declare-fun temp1178_127 () (_ BitVec 64))
(declare-fun temp1178_128 () (_ BitVec 64))
(declare-fun temp1178_129 () (_ BitVec 64))
(declare-fun temp1178_130 () (_ BitVec 64))
(declare-fun temp1178_131 () (_ BitVec 64))
(declare-fun temp1178_132 () (_ BitVec 64))
(declare-fun temp1178_133 () (_ BitVec 64))
(declare-fun temp1178_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp1178_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp1178_136 () (_ BitVec 64))
(declare-fun temp1178_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp1178_138 () (_ BitVec 64))
(declare-fun temp1178_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1178_140 () (_ BitVec 64))
(declare-fun temp1178_141 () (_ BitVec 64))
(declare-fun temp1178_142 () (_ BitVec 64))
(declare-fun temp1178_143 () (_ BitVec 64))
(declare-fun temp1178_144 () (_ BitVec 64))
(declare-fun temp1178_145 () (_ BitVec 64))
(declare-fun temp1178_146 () (_ BitVec 64))
(declare-fun temp1178_147 () (_ BitVec 64))
(declare-fun temp1178_148 () (_ BitVec 64))
(declare-fun temp1178_149 () (_ BitVec 64))
(declare-fun temp1178_150 () (_ BitVec 64))
(declare-fun temp1178_151 () (_ BitVec 64))
(declare-fun temp1178_152 () (_ BitVec 64))
(declare-fun temp1178_153 () (_ BitVec 64))
(declare-fun temp1178_154 () (_ BitVec 64))
(declare-fun temp1178_155 () (_ BitVec 64))
(declare-fun temp1178_157 () (_ BitVec 64))
(declare-fun temp1178_158 () (_ BitVec 64))
(declare-fun temp1178_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp1178_159 () (_ BitVec 64))
(declare-fun temp1178_160 () (_ BitVec 64))
(declare-fun temp1178_162 () (_ BitVec 64))
(declare-fun temp1178_163 () (_ BitVec 64))
(declare-fun temp1178_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp1178_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp1178_165 () (_ BitVec 64))
(declare-fun temp1178_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp1178_167 () (_ BitVec 64))
(declare-fun temp1178_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp1178_169 () (_ BitVec 64))
(declare-fun temp1178_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1178_171 () (_ BitVec 64))
(declare-fun temp1178_172 () (_ BitVec 64))
(declare-fun temp1178_173 () (_ BitVec 64))
(declare-fun temp1178_174 () (_ BitVec 64))
(declare-fun temp1178_175 () (_ BitVec 64))
(declare-fun temp1178_176 () (_ BitVec 64))
(declare-fun temp1178_177 () (_ BitVec 64))
(declare-fun temp1178_178 () (_ BitVec 64))
(declare-fun temp1178_179 () (_ BitVec 64))
(declare-fun temp1178_180 () (_ BitVec 64))
(declare-fun temp1178_181 () (_ BitVec 64))
(declare-fun temp1178_182 () (_ BitVec 64))
(declare-fun temp1178_183 () (_ BitVec 64))
(declare-fun temp1178_184 () (_ BitVec 64))
(declare-fun temp1178_185 () (_ BitVec 64))
(declare-fun temp1178_186 () (_ BitVec 64))
(declare-fun temp1178_187 () (_ BitVec 64))
(declare-fun temp1178_188 () (_ BitVec 64))
(declare-fun temp1178_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp1178_190 () (_ BitVec 64))
(declare-fun temp1178_192 () (_ BitVec 64))
(declare-fun temp1178_193 () (_ BitVec 64))
(declare-fun temp1178_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp1178_194 () (_ BitVec 64))
(declare-fun temp1178_195 () (_ BitVec 64))
(declare-fun temp1178_197 () (_ BitVec 64))
(declare-fun temp1178_198 () (_ BitVec 64))
(declare-fun temp1178_196 () (_ BitVec 64))
(declare-fun temp1178_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp1178_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp1178_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp1178_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp1178_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp1178_204 () (_ BitVec 64))
(declare-fun temp1178_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp1178_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp1178_207 () (_ BitVec 64))
(declare-fun temp1178_208 () (_ BitVec 64))
(declare-fun temp1178_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp1178_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp1178_211 () (_ BitVec 64))
(declare-fun temp1178_212 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp1178_213 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp1178_214 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp1178_215 () (_ BitVec 64))
(declare-fun var4600208 () (_ BitVec 64))
(declare-fun temp1178_216 () (_ BitVec 64))
(assert (= temp1178_1 #x0000000000000001))
(assert (= var77203 temp1178_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp1178_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp1178_2)))
(assert (= temp1178_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1178_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1178_4 #x0000000000000000))
(assert (= var210941 temp1178_4))
(assert (= temp1178_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp1178_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1178_6 #x0000000000000000))
(assert (= var210986 temp1178_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp1178_7 #x0000000000000000))
(assert (= temp1178_8 temp1178_7))
(assert (= temp1178_9 (select ARGNAME_padding_NAMEEND_VAL temp1178_8)))
(assert (= temp1178_10 #x0000000000000001))
(assert (= temp1178_11 temp1178_10))
(assert (= temp1178_12 (select ARGNAME_padding_NAMEEND_VAL temp1178_11)))
(assert (= temp1178_13 #x0000000000000002))
(assert (= temp1178_14 temp1178_13))
(assert (= temp1178_15 (select ARGNAME_padding_NAMEEND_VAL temp1178_14)))
(assert (= temp1178_16 #x0000000000000003))
(assert (= temp1178_17 temp1178_16))
(assert (= temp1178_18 (select ARGNAME_padding_NAMEEND_VAL temp1178_17)))
(assert (= temp1178_19 #x0000000000000004))
(assert (= temp1178_20 temp1178_19))
(assert (= temp1178_21 (select ARGNAME_padding_NAMEEND_VAL temp1178_20)))
(assert (= temp1178_22 #x0000000000000005))
(assert (= temp1178_23 temp1178_22))
(assert (= temp1178_24 (select ARGNAME_padding_NAMEEND_VAL temp1178_23)))
(assert (= temp1178_25 #x0000000000000000))
(assert (= temp1178_26 #x0000000000000000))
(assert (= temp1178_27 temp1178_26))
(assert (= temp1178_28 (select ARGNAME_padding_NAMEEND_VAL temp1178_27)))
(assert (= temp1178_29 #x0000000000000000))
(assert (= temp1178_30 #x0000000000000001))
(assert (= temp1178_31 temp1178_30))
(assert (= temp1178_32 (select ARGNAME_padding_NAMEEND_VAL temp1178_31)))
(assert (= temp1178_33 #x0000000000000000))
(assert (= temp1178_34 #x0000000000000002))
(assert (= temp1178_35 temp1178_34))
(assert (= temp1178_36 (select ARGNAME_padding_NAMEEND_VAL temp1178_35)))
(assert (= temp1178_37 #x0000000000000000))
(assert (= temp1178_38 #x0000000000000003))
(assert (= temp1178_39 temp1178_38))
(assert (= temp1178_40 (select ARGNAME_padding_NAMEEND_VAL temp1178_39)))
(assert (= temp1178_41 #x0000000000000000))
(assert (= temp1178_42 #x0000000000000004))
(assert (= temp1178_43 temp1178_42))
(assert (= temp1178_44 (select ARGNAME_padding_NAMEEND_VAL temp1178_43)))
(assert (= temp1178_45 #x0000000000000000))
(assert (= temp1178_46 #x0000000000000005))
(assert (= temp1178_47 temp1178_46))
(assert (= temp1178_48 (select ARGNAME_padding_NAMEEND_VAL temp1178_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp1178_28 temp1178_25)
             (bvslt temp1178_32 temp1178_29)
             (bvslt temp1178_36 temp1178_33)
             (bvslt temp1178_40 temp1178_37)
             (bvslt temp1178_44 temp1178_41)
             (bvslt temp1178_48 temp1178_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1178_49 #x0000000000000000))
(assert (= var1191714 temp1178_49))
(assert (= temp1178_50 #x0000000000000000))
(assert (= temp1178_51 temp1178_50))
(assert (= temp1178_52 (select ARGNAME_output_padding_NAMEEND_VAL temp1178_51)))
(assert (= temp1178_53 #x0000000000000001))
(assert (= temp1178_54 temp1178_53))
(assert (= temp1178_55 (select ARGNAME_output_padding_NAMEEND_VAL temp1178_54)))
(assert (= temp1178_56 #x0000000000000002))
(assert (= temp1178_57 temp1178_56))
(assert (= temp1178_58 (select ARGNAME_output_padding_NAMEEND_VAL temp1178_57)))
(assert (= temp1178_59 #x0000000000000003))
(assert (= temp1178_60 temp1178_59))
(assert (= temp1178_61 (select ARGNAME_output_padding_NAMEEND_VAL temp1178_60)))
(assert (= temp1178_62 #x0000000000000004))
(assert (= temp1178_63 temp1178_62))
(assert (= temp1178_64 (select ARGNAME_output_padding_NAMEEND_VAL temp1178_63)))
(assert (= temp1178_65 #x0000000000000005))
(assert (= temp1178_66 temp1178_65))
(assert (= temp1178_67 (select ARGNAME_output_padding_NAMEEND_VAL temp1178_66)))
(assert (= temp1178_68 #x0000000000000000))
(assert (= temp1178_69 #x0000000000000000))
(assert (= temp1178_70 temp1178_69))
(assert (= temp1178_71 (select ARGNAME_output_padding_NAMEEND_VAL temp1178_70)))
(assert (= temp1178_72 #x0000000000000000))
(assert (= temp1178_73 #x0000000000000001))
(assert (= temp1178_74 temp1178_73))
(assert (= temp1178_75 (select ARGNAME_output_padding_NAMEEND_VAL temp1178_74)))
(assert (= temp1178_76 #x0000000000000000))
(assert (= temp1178_77 #x0000000000000002))
(assert (= temp1178_78 temp1178_77))
(assert (= temp1178_79 (select ARGNAME_output_padding_NAMEEND_VAL temp1178_78)))
(assert (= temp1178_80 #x0000000000000000))
(assert (= temp1178_81 #x0000000000000003))
(assert (= temp1178_82 temp1178_81))
(assert (= temp1178_83 (select ARGNAME_output_padding_NAMEEND_VAL temp1178_82)))
(assert (= temp1178_84 #x0000000000000000))
(assert (= temp1178_85 #x0000000000000004))
(assert (= temp1178_86 temp1178_85))
(assert (= temp1178_87 (select ARGNAME_output_padding_NAMEEND_VAL temp1178_86)))
(assert (= temp1178_88 #x0000000000000000))
(assert (= temp1178_89 #x0000000000000005))
(assert (= temp1178_90 temp1178_89))
(assert (= temp1178_91 (select ARGNAME_output_padding_NAMEEND_VAL temp1178_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp1178_71 temp1178_68)
             (bvslt temp1178_75 temp1178_72)
             (bvslt temp1178_79 temp1178_76)
             (bvslt temp1178_83 temp1178_80)
             (bvslt temp1178_87 temp1178_84)
             (bvslt temp1178_91 temp1178_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1178_92 #x0000000000000000))
(assert (= var1191725 temp1178_92))
(assert (= temp1178_93 #x0000000000000000))
(assert (= temp1178_94 temp1178_93))
(assert (= temp1178_95 (select ARGNAME_stride_NAMEEND_VAL temp1178_94)))
(assert (= temp1178_96 #x0000000000000001))
(assert (= temp1178_97 temp1178_96))
(assert (= temp1178_98 (select ARGNAME_stride_NAMEEND_VAL temp1178_97)))
(assert (= temp1178_99 #x0000000000000002))
(assert (= temp1178_100 temp1178_99))
(assert (= temp1178_101 (select ARGNAME_stride_NAMEEND_VAL temp1178_100)))
(assert (= temp1178_102 #x0000000000000003))
(assert (= temp1178_103 temp1178_102))
(assert (= temp1178_104 (select ARGNAME_stride_NAMEEND_VAL temp1178_103)))
(assert (= temp1178_105 #x0000000000000004))
(assert (= temp1178_106 temp1178_105))
(assert (= temp1178_107 (select ARGNAME_stride_NAMEEND_VAL temp1178_106)))
(assert (= temp1178_108 #x0000000000000005))
(assert (= temp1178_109 temp1178_108))
(assert (= temp1178_110 (select ARGNAME_stride_NAMEEND_VAL temp1178_109)))
(assert (= temp1178_111 #x0000000000000000))
(assert (= temp1178_112 #x0000000000000000))
(assert (= temp1178_113 temp1178_112))
(assert (= temp1178_114 (select ARGNAME_stride_NAMEEND_VAL temp1178_113)))
(assert (= temp1178_115 #x0000000000000000))
(assert (= temp1178_116 #x0000000000000001))
(assert (= temp1178_117 temp1178_116))
(assert (= temp1178_118 (select ARGNAME_stride_NAMEEND_VAL temp1178_117)))
(assert (= temp1178_119 #x0000000000000000))
(assert (= temp1178_120 #x0000000000000002))
(assert (= temp1178_121 temp1178_120))
(assert (= temp1178_122 (select ARGNAME_stride_NAMEEND_VAL temp1178_121)))
(assert (= temp1178_123 #x0000000000000000))
(assert (= temp1178_124 #x0000000000000003))
(assert (= temp1178_125 temp1178_124))
(assert (= temp1178_126 (select ARGNAME_stride_NAMEEND_VAL temp1178_125)))
(assert (= temp1178_127 #x0000000000000000))
(assert (= temp1178_128 #x0000000000000004))
(assert (= temp1178_129 temp1178_128))
(assert (= temp1178_130 (select ARGNAME_stride_NAMEEND_VAL temp1178_129)))
(assert (= temp1178_131 #x0000000000000000))
(assert (= temp1178_132 #x0000000000000005))
(assert (= temp1178_133 temp1178_132))
(assert (= temp1178_134 (select ARGNAME_stride_NAMEEND_VAL temp1178_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp1178_114 temp1178_111)
             (bvsle temp1178_118 temp1178_115)
             (bvsle temp1178_122 temp1178_119)
             (bvsle temp1178_126 temp1178_123)
             (bvsle temp1178_130 temp1178_127)
             (bvsle temp1178_134 temp1178_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1178_135 #x0000000000000000))
(assert (= var1191735 temp1178_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1178_136 #x0000000000000001))
(assert (= var1191747 temp1178_136))
(assert (= temp1178_137 #x0000000000000000))
(assert (= var1179826 temp1178_137))
(assert (= temp1178_138 #x0000000000000000))
(assert (= temp1178_139 temp1178_138))
(assert (= temp1178_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1178_139)))
(assert (= temp1178_141 #x0000000000000001))
(assert (= temp1178_142 temp1178_141))
(assert (= temp1178_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1178_142)))
(assert (= temp1178_144 #x0000000000000002))
(assert (= temp1178_145 temp1178_144))
(assert (= temp1178_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1178_145)))
(assert (= temp1178_147 #x0000000000000003))
(assert (= temp1178_148 temp1178_147))
(assert (= temp1178_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1178_148)))
(assert (= temp1178_150 #x0000000000000004))
(assert (= temp1178_151 temp1178_150))
(assert (= temp1178_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1178_151)))
(assert (= temp1178_153 #x0000000000000005))
(assert (= temp1178_154 temp1178_153))
(assert (= temp1178_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1178_154)))
(assert (= temp1178_157 var1179826))
(assert (= temp1178_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1178_157)))
(assert (= temp1178_156 temp1178_158))
(assert (= var1191780
   (ite (bvslt temp1178_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1178_159 #x0000000000000000))
(assert (= var1191780 temp1178_159))
(assert (= temp1178_160 #x0000000000000000))
(assert (= var1179826 temp1178_160))
(assert (= temp1178_162 var1179826))
(assert (= temp1178_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1178_162)))
(assert (= temp1178_161 temp1178_163))
(assert (= var1191802 (bvsmod temp1178_161 ARGNAME_groups_NAMEEND)))
(assert (= temp1178_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp1178_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp1178_165 #x0000000000000001))
(assert (= var1191803 temp1178_165))
(assert (= temp1178_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp1178_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1178_167 #x0000000000000001))
(assert (= var1191823 temp1178_167))
(assert (= temp1178_168 #x0000000000000001))
(assert (= var1180714 temp1178_168))
(assert (= temp1178_169 #x0000000000000000))
(assert (= temp1178_170 temp1178_169))
(assert (= temp1178_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp1178_170)))
(assert (= temp1178_172 #x0000000000000001))
(assert (= temp1178_173 temp1178_172))
(assert (= temp1178_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp1178_173)))
(assert (= temp1178_175 #x0000000000000002))
(assert (= temp1178_176 temp1178_175))
(assert (= temp1178_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp1178_176)))
(assert (= temp1178_178 #x0000000000000003))
(assert (= temp1178_179 temp1178_178))
(assert (= temp1178_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp1178_179)))
(assert (= temp1178_181 #x0000000000000004))
(assert (= temp1178_182 temp1178_181))
(assert (= temp1178_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp1178_182)))
(assert (= temp1178_184 #x0000000000000005))
(assert (= temp1178_185 temp1178_184))
(assert (= temp1178_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp1178_185)))
(assert (= temp1178_187 #x0000000000000000))
(assert (= temp1178_188
   (ite (bvslt var1180714 temp1178_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp1178_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp1178_188)))
(assert (= var1191831 temp1178_189))
(assert (bvslt (ite (bvslt var1180714 temp1178_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1178_190 #x0000000000000001))
(assert (= var1180714 temp1178_190))
(assert (= temp1178_192 var1180714))
(assert (= temp1178_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1178_192)))
(assert (= temp1178_191 temp1178_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp1178_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp1178_194 #x0000000000000001))
(assert (= var1191836 temp1178_194))
(assert (= temp1178_195 #x0000000000000000))
(assert (= var1179826 temp1178_195))
(assert (= temp1178_197 var1179826))
(assert (= temp1178_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1178_197)))
(assert (= temp1178_196 temp1178_198))
(assert (= temp1178_199 #x0000000000000002))
(assert (= var1586025 temp1178_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp1178_200 #x0000000000000001))
(assert (= var1191993 temp1178_200))
(assert (= temp1178_201 #x0000000000000001))
(assert (= var2700303 temp1178_201))
(assert (= temp1178_202 #x0000000000000001))
(assert (= var2962447 temp1178_202))
(assert (= temp1178_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1178_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1178_204 #x0000000000000001))
(assert (= var211058 temp1178_204))
(assert (= temp1178_205 #x0000000000000001))
(assert (= var211188 temp1178_205))
(assert (= var3879401 var211188))
(assert (= temp1178_206 #x0000000000000000))
(assert (= var3866802 temp1178_206))
(assert (= temp1178_207 #x0000000000000000))
(assert (= temp1178_208
   (ite (bvslt var3866802 temp1178_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp1178_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp1178_208)))
(assert (= var3879420 temp1178_209))
(assert (bvslt (ite (bvslt var3866802 temp1178_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1178_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp1178_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp1178_211 #x0000000000000001))
(assert (= var3879421 temp1178_211))
(assert (= temp1178_212 #x0000000000000000))
(assert (= var4133117 temp1178_212))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp1178_213 #x0000000000000002))
(assert (= var4339331 temp1178_213))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1178_214 #x0000000000000000))
(assert (= var4404892 temp1178_214))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp1178_215 #x0000000000000000))
(assert (= var4600208 temp1178_215))
(assert (= temp1178_216 #x0000000000000001))
(assert (= var211058 temp1178_216))
(model-add temp1178_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp1178_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1178_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp1178_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




