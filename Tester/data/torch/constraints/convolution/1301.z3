(declare-fun temp10465_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10465_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10465_3 () (_ BitVec 64))
(declare-fun temp10465_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10465_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10465_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10465_7 () (_ BitVec 64))
(declare-fun temp10465_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10465_9 () (_ BitVec 64))
(declare-fun temp10465_10 () (_ BitVec 64))
(declare-fun temp10465_11 () (_ BitVec 64))
(declare-fun temp10465_12 () (_ BitVec 64))
(declare-fun temp10465_13 () (_ BitVec 64))
(declare-fun temp10465_14 () (_ BitVec 64))
(declare-fun temp10465_15 () (_ BitVec 64))
(declare-fun temp10465_16 () (_ BitVec 64))
(declare-fun temp10465_17 () (_ BitVec 64))
(declare-fun temp10465_18 () (_ BitVec 64))
(declare-fun temp10465_19 () (_ BitVec 64))
(declare-fun temp10465_20 () (_ BitVec 64))
(declare-fun temp10465_21 () (_ BitVec 64))
(declare-fun temp10465_22 () (_ BitVec 64))
(declare-fun temp10465_23 () (_ BitVec 64))
(declare-fun temp10465_24 () (_ BitVec 64))
(declare-fun temp10465_25 () (_ BitVec 64))
(declare-fun temp10465_26 () (_ BitVec 64))
(declare-fun temp10465_27 () (_ BitVec 64))
(declare-fun temp10465_28 () (_ BitVec 64))
(declare-fun temp10465_29 () (_ BitVec 64))
(declare-fun temp10465_30 () (_ BitVec 64))
(declare-fun temp10465_31 () (_ BitVec 64))
(declare-fun temp10465_32 () (_ BitVec 64))
(declare-fun temp10465_33 () (_ BitVec 64))
(declare-fun temp10465_34 () (_ BitVec 64))
(declare-fun temp10465_35 () (_ BitVec 64))
(declare-fun temp10465_36 () (_ BitVec 64))
(declare-fun temp10465_37 () (_ BitVec 64))
(declare-fun temp10465_38 () (_ BitVec 64))
(declare-fun temp10465_39 () (_ BitVec 64))
(declare-fun temp10465_40 () (_ BitVec 64))
(declare-fun temp10465_41 () (_ BitVec 64))
(declare-fun temp10465_42 () (_ BitVec 64))
(declare-fun temp10465_43 () (_ BitVec 64))
(declare-fun temp10465_44 () (_ BitVec 64))
(declare-fun temp10465_45 () (_ BitVec 64))
(declare-fun temp10465_46 () (_ BitVec 64))
(declare-fun temp10465_47 () (_ BitVec 64))
(declare-fun temp10465_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10465_49 () (_ BitVec 64))
(declare-fun temp10465_50 () (_ BitVec 64))
(declare-fun temp10465_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10465_52 () (_ BitVec 64))
(declare-fun temp10465_53 () (_ BitVec 64))
(declare-fun temp10465_54 () (_ BitVec 64))
(declare-fun temp10465_55 () (_ BitVec 64))
(declare-fun temp10465_56 () (_ BitVec 64))
(declare-fun temp10465_57 () (_ BitVec 64))
(declare-fun temp10465_58 () (_ BitVec 64))
(declare-fun temp10465_59 () (_ BitVec 64))
(declare-fun temp10465_60 () (_ BitVec 64))
(declare-fun temp10465_61 () (_ BitVec 64))
(declare-fun temp10465_62 () (_ BitVec 64))
(declare-fun temp10465_63 () (_ BitVec 64))
(declare-fun temp10465_64 () (_ BitVec 64))
(declare-fun temp10465_65 () (_ BitVec 64))
(declare-fun temp10465_66 () (_ BitVec 64))
(declare-fun temp10465_67 () (_ BitVec 64))
(declare-fun temp10465_68 () (_ BitVec 64))
(declare-fun temp10465_69 () (_ BitVec 64))
(declare-fun temp10465_70 () (_ BitVec 64))
(declare-fun temp10465_71 () (_ BitVec 64))
(declare-fun temp10465_72 () (_ BitVec 64))
(declare-fun temp10465_73 () (_ BitVec 64))
(declare-fun temp10465_74 () (_ BitVec 64))
(declare-fun temp10465_75 () (_ BitVec 64))
(declare-fun temp10465_76 () (_ BitVec 64))
(declare-fun temp10465_77 () (_ BitVec 64))
(declare-fun temp10465_78 () (_ BitVec 64))
(declare-fun temp10465_79 () (_ BitVec 64))
(declare-fun temp10465_80 () (_ BitVec 64))
(declare-fun temp10465_81 () (_ BitVec 64))
(declare-fun temp10465_82 () (_ BitVec 64))
(declare-fun temp10465_83 () (_ BitVec 64))
(declare-fun temp10465_84 () (_ BitVec 64))
(declare-fun temp10465_85 () (_ BitVec 64))
(declare-fun temp10465_86 () (_ BitVec 64))
(declare-fun temp10465_87 () (_ BitVec 64))
(declare-fun temp10465_88 () (_ BitVec 64))
(declare-fun temp10465_89 () (_ BitVec 64))
(declare-fun temp10465_90 () (_ BitVec 64))
(declare-fun temp10465_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10465_92 () (_ BitVec 64))
(declare-fun temp10465_93 () (_ BitVec 64))
(declare-fun temp10465_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10465_95 () (_ BitVec 64))
(declare-fun temp10465_96 () (_ BitVec 64))
(declare-fun temp10465_97 () (_ BitVec 64))
(declare-fun temp10465_98 () (_ BitVec 64))
(declare-fun temp10465_99 () (_ BitVec 64))
(declare-fun temp10465_100 () (_ BitVec 64))
(declare-fun temp10465_101 () (_ BitVec 64))
(declare-fun temp10465_102 () (_ BitVec 64))
(declare-fun temp10465_103 () (_ BitVec 64))
(declare-fun temp10465_104 () (_ BitVec 64))
(declare-fun temp10465_105 () (_ BitVec 64))
(declare-fun temp10465_106 () (_ BitVec 64))
(declare-fun temp10465_107 () (_ BitVec 64))
(declare-fun temp10465_108 () (_ BitVec 64))
(declare-fun temp10465_109 () (_ BitVec 64))
(declare-fun temp10465_110 () (_ BitVec 64))
(declare-fun temp10465_111 () (_ BitVec 64))
(declare-fun temp10465_112 () (_ BitVec 64))
(declare-fun temp10465_113 () (_ BitVec 64))
(declare-fun temp10465_114 () (_ BitVec 64))
(declare-fun temp10465_115 () (_ BitVec 64))
(declare-fun temp10465_116 () (_ BitVec 64))
(declare-fun temp10465_117 () (_ BitVec 64))
(declare-fun temp10465_118 () (_ BitVec 64))
(declare-fun temp10465_119 () (_ BitVec 64))
(declare-fun temp10465_120 () (_ BitVec 64))
(declare-fun temp10465_121 () (_ BitVec 64))
(declare-fun temp10465_122 () (_ BitVec 64))
(declare-fun temp10465_123 () (_ BitVec 64))
(declare-fun temp10465_124 () (_ BitVec 64))
(declare-fun temp10465_125 () (_ BitVec 64))
(declare-fun temp10465_126 () (_ BitVec 64))
(declare-fun temp10465_127 () (_ BitVec 64))
(declare-fun temp10465_128 () (_ BitVec 64))
(declare-fun temp10465_129 () (_ BitVec 64))
(declare-fun temp10465_130 () (_ BitVec 64))
(declare-fun temp10465_131 () (_ BitVec 64))
(declare-fun temp10465_132 () (_ BitVec 64))
(declare-fun temp10465_133 () (_ BitVec 64))
(declare-fun temp10465_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10465_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10465_136 () (_ BitVec 64))
(declare-fun temp10465_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10465_138 () (_ BitVec 64))
(declare-fun temp10465_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10465_140 () (_ BitVec 64))
(declare-fun temp10465_141 () (_ BitVec 64))
(declare-fun temp10465_142 () (_ BitVec 64))
(declare-fun temp10465_143 () (_ BitVec 64))
(declare-fun temp10465_144 () (_ BitVec 64))
(declare-fun temp10465_145 () (_ BitVec 64))
(declare-fun temp10465_146 () (_ BitVec 64))
(declare-fun temp10465_147 () (_ BitVec 64))
(declare-fun temp10465_148 () (_ BitVec 64))
(declare-fun temp10465_149 () (_ BitVec 64))
(declare-fun temp10465_150 () (_ BitVec 64))
(declare-fun temp10465_151 () (_ BitVec 64))
(declare-fun temp10465_152 () (_ BitVec 64))
(declare-fun temp10465_153 () (_ BitVec 64))
(declare-fun temp10465_154 () (_ BitVec 64))
(declare-fun temp10465_155 () (_ BitVec 64))
(declare-fun temp10465_157 () (_ BitVec 64))
(declare-fun temp10465_158 () (_ BitVec 64))
(declare-fun temp10465_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10465_159 () (_ BitVec 64))
(declare-fun temp10465_160 () (_ BitVec 64))
(declare-fun temp10465_162 () (_ BitVec 64))
(declare-fun temp10465_163 () (_ BitVec 64))
(declare-fun temp10465_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10465_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10465_165 () (_ BitVec 64))
(declare-fun temp10465_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10465_167 () (_ BitVec 64))
(declare-fun temp10465_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10465_169 () (_ BitVec 64))
(declare-fun temp10465_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10465_171 () (_ BitVec 64))
(declare-fun temp10465_172 () (_ BitVec 64))
(declare-fun temp10465_173 () (_ BitVec 64))
(declare-fun temp10465_174 () (_ BitVec 64))
(declare-fun temp10465_175 () (_ BitVec 64))
(declare-fun temp10465_176 () (_ BitVec 64))
(declare-fun temp10465_177 () (_ BitVec 64))
(declare-fun temp10465_178 () (_ BitVec 64))
(declare-fun temp10465_179 () (_ BitVec 64))
(declare-fun temp10465_180 () (_ BitVec 64))
(declare-fun temp10465_181 () (_ BitVec 64))
(declare-fun temp10465_182 () (_ BitVec 64))
(declare-fun temp10465_183 () (_ BitVec 64))
(declare-fun temp10465_184 () (_ BitVec 64))
(declare-fun temp10465_185 () (_ BitVec 64))
(declare-fun temp10465_186 () (_ BitVec 64))
(declare-fun temp10465_187 () (_ BitVec 64))
(declare-fun temp10465_188 () (_ BitVec 64))
(declare-fun temp10465_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10465_190 () (_ BitVec 64))
(declare-fun temp10465_192 () (_ BitVec 64))
(declare-fun temp10465_193 () (_ BitVec 64))
(declare-fun temp10465_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10465_194 () (_ BitVec 64))
(declare-fun temp10465_195 () (_ BitVec 64))
(declare-fun temp10465_197 () (_ BitVec 64))
(declare-fun temp10465_198 () (_ BitVec 64))
(declare-fun temp10465_196 () (_ BitVec 64))
(declare-fun temp10465_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10465_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10465_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10465_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10465_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10465_204 () (_ BitVec 64))
(declare-fun temp10465_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10465_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10465_207 () (_ BitVec 64))
(declare-fun temp10465_208 () (_ BitVec 64))
(declare-fun temp10465_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10465_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10465_211 () (_ BitVec 64))
(declare-fun temp10465_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10465_213 () (_ BitVec 64))
(declare-fun temp10465_214 () (_ BitVec 64))
(declare-fun temp10465_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10465_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10465_217 () (_ BitVec 64))
(declare-fun temp10465_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10465_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10465_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4469136 () (_ BitVec 64))
(declare-fun var4731280 () (_ BitVec 64))
(declare-fun temp10465_221 () (_ BitVec 64))
(declare-fun var212414 () (_ BitVec 64))
(declare-fun temp10465_222 () (_ BitVec 64))
(declare-fun temp10465_223 () (_ BitVec 64))
(declare-fun var5060227 () (_ BitVec 64))
(declare-fun var5125772 () (_ BitVec 64))
(declare-fun temp10465_224 () (_ BitVec 64))
(assert (= temp10465_1 #x0000000000000001))
(assert (= var77203 temp10465_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10465_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10465_2)))
(assert (= temp10465_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10465_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10465_4 #x0000000000000000))
(assert (= var210941 temp10465_4))
(assert (= temp10465_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10465_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10465_6 #x0000000000000000))
(assert (= var210986 temp10465_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10465_7 #x0000000000000000))
(assert (= temp10465_8 temp10465_7))
(assert (= temp10465_9 (select ARGNAME_padding_NAMEEND_VAL temp10465_8)))
(assert (= temp10465_10 #x0000000000000001))
(assert (= temp10465_11 temp10465_10))
(assert (= temp10465_12 (select ARGNAME_padding_NAMEEND_VAL temp10465_11)))
(assert (= temp10465_13 #x0000000000000002))
(assert (= temp10465_14 temp10465_13))
(assert (= temp10465_15 (select ARGNAME_padding_NAMEEND_VAL temp10465_14)))
(assert (= temp10465_16 #x0000000000000003))
(assert (= temp10465_17 temp10465_16))
(assert (= temp10465_18 (select ARGNAME_padding_NAMEEND_VAL temp10465_17)))
(assert (= temp10465_19 #x0000000000000004))
(assert (= temp10465_20 temp10465_19))
(assert (= temp10465_21 (select ARGNAME_padding_NAMEEND_VAL temp10465_20)))
(assert (= temp10465_22 #x0000000000000005))
(assert (= temp10465_23 temp10465_22))
(assert (= temp10465_24 (select ARGNAME_padding_NAMEEND_VAL temp10465_23)))
(assert (= temp10465_25 #x0000000000000000))
(assert (= temp10465_26 #x0000000000000000))
(assert (= temp10465_27 temp10465_26))
(assert (= temp10465_28 (select ARGNAME_padding_NAMEEND_VAL temp10465_27)))
(assert (= temp10465_29 #x0000000000000000))
(assert (= temp10465_30 #x0000000000000001))
(assert (= temp10465_31 temp10465_30))
(assert (= temp10465_32 (select ARGNAME_padding_NAMEEND_VAL temp10465_31)))
(assert (= temp10465_33 #x0000000000000000))
(assert (= temp10465_34 #x0000000000000002))
(assert (= temp10465_35 temp10465_34))
(assert (= temp10465_36 (select ARGNAME_padding_NAMEEND_VAL temp10465_35)))
(assert (= temp10465_37 #x0000000000000000))
(assert (= temp10465_38 #x0000000000000003))
(assert (= temp10465_39 temp10465_38))
(assert (= temp10465_40 (select ARGNAME_padding_NAMEEND_VAL temp10465_39)))
(assert (= temp10465_41 #x0000000000000000))
(assert (= temp10465_42 #x0000000000000004))
(assert (= temp10465_43 temp10465_42))
(assert (= temp10465_44 (select ARGNAME_padding_NAMEEND_VAL temp10465_43)))
(assert (= temp10465_45 #x0000000000000000))
(assert (= temp10465_46 #x0000000000000005))
(assert (= temp10465_47 temp10465_46))
(assert (= temp10465_48 (select ARGNAME_padding_NAMEEND_VAL temp10465_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10465_28 temp10465_25)
             (bvslt temp10465_32 temp10465_29)
             (bvslt temp10465_36 temp10465_33)
             (bvslt temp10465_40 temp10465_37)
             (bvslt temp10465_44 temp10465_41)
             (bvslt temp10465_48 temp10465_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10465_49 #x0000000000000000))
(assert (= var1191714 temp10465_49))
(assert (= temp10465_50 #x0000000000000000))
(assert (= temp10465_51 temp10465_50))
(assert (= temp10465_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10465_51)))
(assert (= temp10465_53 #x0000000000000001))
(assert (= temp10465_54 temp10465_53))
(assert (= temp10465_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10465_54)))
(assert (= temp10465_56 #x0000000000000002))
(assert (= temp10465_57 temp10465_56))
(assert (= temp10465_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10465_57)))
(assert (= temp10465_59 #x0000000000000003))
(assert (= temp10465_60 temp10465_59))
(assert (= temp10465_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10465_60)))
(assert (= temp10465_62 #x0000000000000004))
(assert (= temp10465_63 temp10465_62))
(assert (= temp10465_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10465_63)))
(assert (= temp10465_65 #x0000000000000005))
(assert (= temp10465_66 temp10465_65))
(assert (= temp10465_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10465_66)))
(assert (= temp10465_68 #x0000000000000000))
(assert (= temp10465_69 #x0000000000000000))
(assert (= temp10465_70 temp10465_69))
(assert (= temp10465_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10465_70)))
(assert (= temp10465_72 #x0000000000000000))
(assert (= temp10465_73 #x0000000000000001))
(assert (= temp10465_74 temp10465_73))
(assert (= temp10465_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10465_74)))
(assert (= temp10465_76 #x0000000000000000))
(assert (= temp10465_77 #x0000000000000002))
(assert (= temp10465_78 temp10465_77))
(assert (= temp10465_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10465_78)))
(assert (= temp10465_80 #x0000000000000000))
(assert (= temp10465_81 #x0000000000000003))
(assert (= temp10465_82 temp10465_81))
(assert (= temp10465_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10465_82)))
(assert (= temp10465_84 #x0000000000000000))
(assert (= temp10465_85 #x0000000000000004))
(assert (= temp10465_86 temp10465_85))
(assert (= temp10465_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10465_86)))
(assert (= temp10465_88 #x0000000000000000))
(assert (= temp10465_89 #x0000000000000005))
(assert (= temp10465_90 temp10465_89))
(assert (= temp10465_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10465_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10465_71 temp10465_68)
             (bvslt temp10465_75 temp10465_72)
             (bvslt temp10465_79 temp10465_76)
             (bvslt temp10465_83 temp10465_80)
             (bvslt temp10465_87 temp10465_84)
             (bvslt temp10465_91 temp10465_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10465_92 #x0000000000000000))
(assert (= var1191725 temp10465_92))
(assert (= temp10465_93 #x0000000000000000))
(assert (= temp10465_94 temp10465_93))
(assert (= temp10465_95 (select ARGNAME_stride_NAMEEND_VAL temp10465_94)))
(assert (= temp10465_96 #x0000000000000001))
(assert (= temp10465_97 temp10465_96))
(assert (= temp10465_98 (select ARGNAME_stride_NAMEEND_VAL temp10465_97)))
(assert (= temp10465_99 #x0000000000000002))
(assert (= temp10465_100 temp10465_99))
(assert (= temp10465_101 (select ARGNAME_stride_NAMEEND_VAL temp10465_100)))
(assert (= temp10465_102 #x0000000000000003))
(assert (= temp10465_103 temp10465_102))
(assert (= temp10465_104 (select ARGNAME_stride_NAMEEND_VAL temp10465_103)))
(assert (= temp10465_105 #x0000000000000004))
(assert (= temp10465_106 temp10465_105))
(assert (= temp10465_107 (select ARGNAME_stride_NAMEEND_VAL temp10465_106)))
(assert (= temp10465_108 #x0000000000000005))
(assert (= temp10465_109 temp10465_108))
(assert (= temp10465_110 (select ARGNAME_stride_NAMEEND_VAL temp10465_109)))
(assert (= temp10465_111 #x0000000000000000))
(assert (= temp10465_112 #x0000000000000000))
(assert (= temp10465_113 temp10465_112))
(assert (= temp10465_114 (select ARGNAME_stride_NAMEEND_VAL temp10465_113)))
(assert (= temp10465_115 #x0000000000000000))
(assert (= temp10465_116 #x0000000000000001))
(assert (= temp10465_117 temp10465_116))
(assert (= temp10465_118 (select ARGNAME_stride_NAMEEND_VAL temp10465_117)))
(assert (= temp10465_119 #x0000000000000000))
(assert (= temp10465_120 #x0000000000000002))
(assert (= temp10465_121 temp10465_120))
(assert (= temp10465_122 (select ARGNAME_stride_NAMEEND_VAL temp10465_121)))
(assert (= temp10465_123 #x0000000000000000))
(assert (= temp10465_124 #x0000000000000003))
(assert (= temp10465_125 temp10465_124))
(assert (= temp10465_126 (select ARGNAME_stride_NAMEEND_VAL temp10465_125)))
(assert (= temp10465_127 #x0000000000000000))
(assert (= temp10465_128 #x0000000000000004))
(assert (= temp10465_129 temp10465_128))
(assert (= temp10465_130 (select ARGNAME_stride_NAMEEND_VAL temp10465_129)))
(assert (= temp10465_131 #x0000000000000000))
(assert (= temp10465_132 #x0000000000000005))
(assert (= temp10465_133 temp10465_132))
(assert (= temp10465_134 (select ARGNAME_stride_NAMEEND_VAL temp10465_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10465_114 temp10465_111)
             (bvsle temp10465_118 temp10465_115)
             (bvsle temp10465_122 temp10465_119)
             (bvsle temp10465_126 temp10465_123)
             (bvsle temp10465_130 temp10465_127)
             (bvsle temp10465_134 temp10465_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10465_135 #x0000000000000000))
(assert (= var1191735 temp10465_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10465_136 #x0000000000000001))
(assert (= var1191747 temp10465_136))
(assert (= temp10465_137 #x0000000000000000))
(assert (= var1179826 temp10465_137))
(assert (= temp10465_138 #x0000000000000000))
(assert (= temp10465_139 temp10465_138))
(assert (= temp10465_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10465_139)))
(assert (= temp10465_141 #x0000000000000001))
(assert (= temp10465_142 temp10465_141))
(assert (= temp10465_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10465_142)))
(assert (= temp10465_144 #x0000000000000002))
(assert (= temp10465_145 temp10465_144))
(assert (= temp10465_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10465_145)))
(assert (= temp10465_147 #x0000000000000003))
(assert (= temp10465_148 temp10465_147))
(assert (= temp10465_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10465_148)))
(assert (= temp10465_150 #x0000000000000004))
(assert (= temp10465_151 temp10465_150))
(assert (= temp10465_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10465_151)))
(assert (= temp10465_153 #x0000000000000005))
(assert (= temp10465_154 temp10465_153))
(assert (= temp10465_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10465_154)))
(assert (= temp10465_157 var1179826))
(assert (= temp10465_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10465_157)))
(assert (= temp10465_156 temp10465_158))
(assert (= var1191780
   (ite (bvslt temp10465_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10465_159 #x0000000000000000))
(assert (= var1191780 temp10465_159))
(assert (= temp10465_160 #x0000000000000000))
(assert (= var1179826 temp10465_160))
(assert (= temp10465_162 var1179826))
(assert (= temp10465_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10465_162)))
(assert (= temp10465_161 temp10465_163))
(assert (= var1191802 (bvsmod temp10465_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10465_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10465_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10465_165 #x0000000000000001))
(assert (= var1191803 temp10465_165))
(assert (= temp10465_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10465_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10465_167 #x0000000000000001))
(assert (= var1191823 temp10465_167))
(assert (= temp10465_168 #x0000000000000001))
(assert (= var1180714 temp10465_168))
(assert (= temp10465_169 #x0000000000000000))
(assert (= temp10465_170 temp10465_169))
(assert (= temp10465_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10465_170)))
(assert (= temp10465_172 #x0000000000000001))
(assert (= temp10465_173 temp10465_172))
(assert (= temp10465_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10465_173)))
(assert (= temp10465_175 #x0000000000000002))
(assert (= temp10465_176 temp10465_175))
(assert (= temp10465_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10465_176)))
(assert (= temp10465_178 #x0000000000000003))
(assert (= temp10465_179 temp10465_178))
(assert (= temp10465_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10465_179)))
(assert (= temp10465_181 #x0000000000000004))
(assert (= temp10465_182 temp10465_181))
(assert (= temp10465_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10465_182)))
(assert (= temp10465_184 #x0000000000000005))
(assert (= temp10465_185 temp10465_184))
(assert (= temp10465_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10465_185)))
(assert (= temp10465_187 #x0000000000000000))
(assert (= temp10465_188
   (ite (bvslt var1180714 temp10465_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10465_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10465_188)))
(assert (= var1191831 temp10465_189))
(assert (bvslt (ite (bvslt var1180714 temp10465_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10465_190 #x0000000000000001))
(assert (= var1180714 temp10465_190))
(assert (= temp10465_192 var1180714))
(assert (= temp10465_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10465_192)))
(assert (= temp10465_191 temp10465_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10465_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10465_194 #x0000000000000001))
(assert (= var1191836 temp10465_194))
(assert (= temp10465_195 #x0000000000000000))
(assert (= var1179826 temp10465_195))
(assert (= temp10465_197 var1179826))
(assert (= temp10465_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10465_197)))
(assert (= temp10465_196 temp10465_198))
(assert (= temp10465_199 #x0000000000000002))
(assert (= var1586025 temp10465_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10465_200 #x0000000000000001))
(assert (= var1191993 temp10465_200))
(assert (= temp10465_201 #x0000000000000001))
(assert (= var2700303 temp10465_201))
(assert (= temp10465_202 #x0000000000000001))
(assert (= var2962447 temp10465_202))
(assert (= temp10465_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10465_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10465_204 #x0000000000000001))
(assert (= var211058 temp10465_204))
(assert (= temp10465_205 #x0000000000000001))
(assert (= var211188 temp10465_205))
(assert (= var3879401 var211188))
(assert (= temp10465_206 #x0000000000000000))
(assert (= var3866802 temp10465_206))
(assert (= temp10465_207 #x0000000000000000))
(assert (= temp10465_208
   (ite (bvslt var3866802 temp10465_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10465_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10465_208)))
(assert (= var3879420 temp10465_209))
(assert (bvslt (ite (bvslt var3866802 temp10465_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10465_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10465_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10465_211 #x0000000000000000))
(assert (= var3879421 temp10465_211))
(assert (= temp10465_212 #x0000000000000001))
(assert (= var3867690 temp10465_212))
(assert (= temp10465_213 #x0000000000000000))
(assert (= temp10465_214
   (ite (bvslt var3867690 temp10465_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10465_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10465_214)))
(assert (= var3879423 temp10465_215))
(assert (bvslt (ite (bvslt var3867690 temp10465_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10465_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10465_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10465_217 #x0000000000000001))
(assert (= var3879424 temp10465_217))
(assert (= temp10465_218 #x0000000000000000))
(assert (= var4079423 temp10465_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10465_219 #x0000000000000002))
(assert (= var4208259 temp10465_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10465_220 #x0000000000000000))
(assert (= var4273820 temp10465_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4469136 var211201))
(assert (= var4731280 var211201))
(assert (= temp10465_221 #x0000000000000001))
(assert (= var212414
   (ite (= ARGNAME_groups_NAMEEND temp10465_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10465_222 #x0000000000000000))
(assert (= var212414 temp10465_222))
(assert (= temp10465_223 #x0000000000000002))
(assert (= var5060227 temp10465_223))
(assert (= var5125772 var5060227))
(assert (= temp10465_224 #x0000000000000001))
(assert (= var211058 temp10465_224))
(model-add temp10465_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10465_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10465_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10465_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




