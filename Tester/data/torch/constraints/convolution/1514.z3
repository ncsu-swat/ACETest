(declare-fun temp10813_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10813_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10813_3 () (_ BitVec 64))
(declare-fun temp10813_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10813_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10813_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10813_7 () (_ BitVec 64))
(declare-fun temp10813_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10813_9 () (_ BitVec 64))
(declare-fun temp10813_10 () (_ BitVec 64))
(declare-fun temp10813_11 () (_ BitVec 64))
(declare-fun temp10813_12 () (_ BitVec 64))
(declare-fun temp10813_13 () (_ BitVec 64))
(declare-fun temp10813_14 () (_ BitVec 64))
(declare-fun temp10813_15 () (_ BitVec 64))
(declare-fun temp10813_16 () (_ BitVec 64))
(declare-fun temp10813_17 () (_ BitVec 64))
(declare-fun temp10813_18 () (_ BitVec 64))
(declare-fun temp10813_19 () (_ BitVec 64))
(declare-fun temp10813_20 () (_ BitVec 64))
(declare-fun temp10813_21 () (_ BitVec 64))
(declare-fun temp10813_22 () (_ BitVec 64))
(declare-fun temp10813_23 () (_ BitVec 64))
(declare-fun temp10813_24 () (_ BitVec 64))
(declare-fun temp10813_25 () (_ BitVec 64))
(declare-fun temp10813_26 () (_ BitVec 64))
(declare-fun temp10813_27 () (_ BitVec 64))
(declare-fun temp10813_28 () (_ BitVec 64))
(declare-fun temp10813_29 () (_ BitVec 64))
(declare-fun temp10813_30 () (_ BitVec 64))
(declare-fun temp10813_31 () (_ BitVec 64))
(declare-fun temp10813_32 () (_ BitVec 64))
(declare-fun temp10813_33 () (_ BitVec 64))
(declare-fun temp10813_34 () (_ BitVec 64))
(declare-fun temp10813_35 () (_ BitVec 64))
(declare-fun temp10813_36 () (_ BitVec 64))
(declare-fun temp10813_37 () (_ BitVec 64))
(declare-fun temp10813_38 () (_ BitVec 64))
(declare-fun temp10813_39 () (_ BitVec 64))
(declare-fun temp10813_40 () (_ BitVec 64))
(declare-fun temp10813_41 () (_ BitVec 64))
(declare-fun temp10813_42 () (_ BitVec 64))
(declare-fun temp10813_43 () (_ BitVec 64))
(declare-fun temp10813_44 () (_ BitVec 64))
(declare-fun temp10813_45 () (_ BitVec 64))
(declare-fun temp10813_46 () (_ BitVec 64))
(declare-fun temp10813_47 () (_ BitVec 64))
(declare-fun temp10813_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10813_49 () (_ BitVec 64))
(declare-fun temp10813_50 () (_ BitVec 64))
(declare-fun temp10813_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10813_52 () (_ BitVec 64))
(declare-fun temp10813_53 () (_ BitVec 64))
(declare-fun temp10813_54 () (_ BitVec 64))
(declare-fun temp10813_55 () (_ BitVec 64))
(declare-fun temp10813_56 () (_ BitVec 64))
(declare-fun temp10813_57 () (_ BitVec 64))
(declare-fun temp10813_58 () (_ BitVec 64))
(declare-fun temp10813_59 () (_ BitVec 64))
(declare-fun temp10813_60 () (_ BitVec 64))
(declare-fun temp10813_61 () (_ BitVec 64))
(declare-fun temp10813_62 () (_ BitVec 64))
(declare-fun temp10813_63 () (_ BitVec 64))
(declare-fun temp10813_64 () (_ BitVec 64))
(declare-fun temp10813_65 () (_ BitVec 64))
(declare-fun temp10813_66 () (_ BitVec 64))
(declare-fun temp10813_67 () (_ BitVec 64))
(declare-fun temp10813_68 () (_ BitVec 64))
(declare-fun temp10813_69 () (_ BitVec 64))
(declare-fun temp10813_70 () (_ BitVec 64))
(declare-fun temp10813_71 () (_ BitVec 64))
(declare-fun temp10813_72 () (_ BitVec 64))
(declare-fun temp10813_73 () (_ BitVec 64))
(declare-fun temp10813_74 () (_ BitVec 64))
(declare-fun temp10813_75 () (_ BitVec 64))
(declare-fun temp10813_76 () (_ BitVec 64))
(declare-fun temp10813_77 () (_ BitVec 64))
(declare-fun temp10813_78 () (_ BitVec 64))
(declare-fun temp10813_79 () (_ BitVec 64))
(declare-fun temp10813_80 () (_ BitVec 64))
(declare-fun temp10813_81 () (_ BitVec 64))
(declare-fun temp10813_82 () (_ BitVec 64))
(declare-fun temp10813_83 () (_ BitVec 64))
(declare-fun temp10813_84 () (_ BitVec 64))
(declare-fun temp10813_85 () (_ BitVec 64))
(declare-fun temp10813_86 () (_ BitVec 64))
(declare-fun temp10813_87 () (_ BitVec 64))
(declare-fun temp10813_88 () (_ BitVec 64))
(declare-fun temp10813_89 () (_ BitVec 64))
(declare-fun temp10813_90 () (_ BitVec 64))
(declare-fun temp10813_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10813_92 () (_ BitVec 64))
(declare-fun temp10813_93 () (_ BitVec 64))
(declare-fun temp10813_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10813_95 () (_ BitVec 64))
(declare-fun temp10813_96 () (_ BitVec 64))
(declare-fun temp10813_97 () (_ BitVec 64))
(declare-fun temp10813_98 () (_ BitVec 64))
(declare-fun temp10813_99 () (_ BitVec 64))
(declare-fun temp10813_100 () (_ BitVec 64))
(declare-fun temp10813_101 () (_ BitVec 64))
(declare-fun temp10813_102 () (_ BitVec 64))
(declare-fun temp10813_103 () (_ BitVec 64))
(declare-fun temp10813_104 () (_ BitVec 64))
(declare-fun temp10813_105 () (_ BitVec 64))
(declare-fun temp10813_106 () (_ BitVec 64))
(declare-fun temp10813_107 () (_ BitVec 64))
(declare-fun temp10813_108 () (_ BitVec 64))
(declare-fun temp10813_109 () (_ BitVec 64))
(declare-fun temp10813_110 () (_ BitVec 64))
(declare-fun temp10813_111 () (_ BitVec 64))
(declare-fun temp10813_112 () (_ BitVec 64))
(declare-fun temp10813_113 () (_ BitVec 64))
(declare-fun temp10813_114 () (_ BitVec 64))
(declare-fun temp10813_115 () (_ BitVec 64))
(declare-fun temp10813_116 () (_ BitVec 64))
(declare-fun temp10813_117 () (_ BitVec 64))
(declare-fun temp10813_118 () (_ BitVec 64))
(declare-fun temp10813_119 () (_ BitVec 64))
(declare-fun temp10813_120 () (_ BitVec 64))
(declare-fun temp10813_121 () (_ BitVec 64))
(declare-fun temp10813_122 () (_ BitVec 64))
(declare-fun temp10813_123 () (_ BitVec 64))
(declare-fun temp10813_124 () (_ BitVec 64))
(declare-fun temp10813_125 () (_ BitVec 64))
(declare-fun temp10813_126 () (_ BitVec 64))
(declare-fun temp10813_127 () (_ BitVec 64))
(declare-fun temp10813_128 () (_ BitVec 64))
(declare-fun temp10813_129 () (_ BitVec 64))
(declare-fun temp10813_130 () (_ BitVec 64))
(declare-fun temp10813_131 () (_ BitVec 64))
(declare-fun temp10813_132 () (_ BitVec 64))
(declare-fun temp10813_133 () (_ BitVec 64))
(declare-fun temp10813_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10813_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10813_136 () (_ BitVec 64))
(declare-fun temp10813_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10813_138 () (_ BitVec 64))
(declare-fun temp10813_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10813_140 () (_ BitVec 64))
(declare-fun temp10813_141 () (_ BitVec 64))
(declare-fun temp10813_142 () (_ BitVec 64))
(declare-fun temp10813_143 () (_ BitVec 64))
(declare-fun temp10813_144 () (_ BitVec 64))
(declare-fun temp10813_145 () (_ BitVec 64))
(declare-fun temp10813_146 () (_ BitVec 64))
(declare-fun temp10813_147 () (_ BitVec 64))
(declare-fun temp10813_148 () (_ BitVec 64))
(declare-fun temp10813_149 () (_ BitVec 64))
(declare-fun temp10813_150 () (_ BitVec 64))
(declare-fun temp10813_151 () (_ BitVec 64))
(declare-fun temp10813_152 () (_ BitVec 64))
(declare-fun temp10813_153 () (_ BitVec 64))
(declare-fun temp10813_154 () (_ BitVec 64))
(declare-fun temp10813_155 () (_ BitVec 64))
(declare-fun temp10813_157 () (_ BitVec 64))
(declare-fun temp10813_158 () (_ BitVec 64))
(declare-fun temp10813_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10813_159 () (_ BitVec 64))
(declare-fun temp10813_160 () (_ BitVec 64))
(declare-fun temp10813_162 () (_ BitVec 64))
(declare-fun temp10813_163 () (_ BitVec 64))
(declare-fun temp10813_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10813_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10813_165 () (_ BitVec 64))
(declare-fun temp10813_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10813_167 () (_ BitVec 64))
(declare-fun temp10813_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10813_169 () (_ BitVec 64))
(declare-fun temp10813_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10813_171 () (_ BitVec 64))
(declare-fun temp10813_172 () (_ BitVec 64))
(declare-fun temp10813_173 () (_ BitVec 64))
(declare-fun temp10813_174 () (_ BitVec 64))
(declare-fun temp10813_175 () (_ BitVec 64))
(declare-fun temp10813_176 () (_ BitVec 64))
(declare-fun temp10813_177 () (_ BitVec 64))
(declare-fun temp10813_178 () (_ BitVec 64))
(declare-fun temp10813_179 () (_ BitVec 64))
(declare-fun temp10813_180 () (_ BitVec 64))
(declare-fun temp10813_181 () (_ BitVec 64))
(declare-fun temp10813_182 () (_ BitVec 64))
(declare-fun temp10813_183 () (_ BitVec 64))
(declare-fun temp10813_184 () (_ BitVec 64))
(declare-fun temp10813_185 () (_ BitVec 64))
(declare-fun temp10813_186 () (_ BitVec 64))
(declare-fun temp10813_187 () (_ BitVec 64))
(declare-fun temp10813_188 () (_ BitVec 64))
(declare-fun temp10813_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10813_190 () (_ BitVec 64))
(declare-fun temp10813_192 () (_ BitVec 64))
(declare-fun temp10813_193 () (_ BitVec 64))
(declare-fun temp10813_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10813_194 () (_ BitVec 64))
(declare-fun temp10813_195 () (_ BitVec 64))
(declare-fun temp10813_197 () (_ BitVec 64))
(declare-fun temp10813_198 () (_ BitVec 64))
(declare-fun temp10813_196 () (_ BitVec 64))
(declare-fun temp10813_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10813_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10813_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10813_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10813_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10813_204 () (_ BitVec 64))
(declare-fun temp10813_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10813_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10813_207 () (_ BitVec 64))
(declare-fun temp10813_208 () (_ BitVec 64))
(declare-fun temp10813_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10813_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10813_211 () (_ BitVec 64))
(declare-fun temp10813_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10813_213 () (_ BitVec 64))
(declare-fun temp10813_214 () (_ BitVec 64))
(declare-fun temp10813_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10813_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10813_217 () (_ BitVec 64))
(declare-fun temp10813_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10813_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10813_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var5452176 () (_ BitVec 64))
(declare-fun var5714320 () (_ BitVec 64))
(declare-fun temp10813_221 () (_ BitVec 64))
(assert (= temp10813_1 #x0000000000000001))
(assert (= var77203 temp10813_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10813_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10813_2)))
(assert (= temp10813_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10813_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10813_4 #x0000000000000000))
(assert (= var210941 temp10813_4))
(assert (= temp10813_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10813_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10813_6 #x0000000000000000))
(assert (= var210986 temp10813_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10813_7 #x0000000000000000))
(assert (= temp10813_8 temp10813_7))
(assert (= temp10813_9 (select ARGNAME_padding_NAMEEND_VAL temp10813_8)))
(assert (= temp10813_10 #x0000000000000001))
(assert (= temp10813_11 temp10813_10))
(assert (= temp10813_12 (select ARGNAME_padding_NAMEEND_VAL temp10813_11)))
(assert (= temp10813_13 #x0000000000000002))
(assert (= temp10813_14 temp10813_13))
(assert (= temp10813_15 (select ARGNAME_padding_NAMEEND_VAL temp10813_14)))
(assert (= temp10813_16 #x0000000000000003))
(assert (= temp10813_17 temp10813_16))
(assert (= temp10813_18 (select ARGNAME_padding_NAMEEND_VAL temp10813_17)))
(assert (= temp10813_19 #x0000000000000004))
(assert (= temp10813_20 temp10813_19))
(assert (= temp10813_21 (select ARGNAME_padding_NAMEEND_VAL temp10813_20)))
(assert (= temp10813_22 #x0000000000000005))
(assert (= temp10813_23 temp10813_22))
(assert (= temp10813_24 (select ARGNAME_padding_NAMEEND_VAL temp10813_23)))
(assert (= temp10813_25 #x0000000000000000))
(assert (= temp10813_26 #x0000000000000000))
(assert (= temp10813_27 temp10813_26))
(assert (= temp10813_28 (select ARGNAME_padding_NAMEEND_VAL temp10813_27)))
(assert (= temp10813_29 #x0000000000000000))
(assert (= temp10813_30 #x0000000000000001))
(assert (= temp10813_31 temp10813_30))
(assert (= temp10813_32 (select ARGNAME_padding_NAMEEND_VAL temp10813_31)))
(assert (= temp10813_33 #x0000000000000000))
(assert (= temp10813_34 #x0000000000000002))
(assert (= temp10813_35 temp10813_34))
(assert (= temp10813_36 (select ARGNAME_padding_NAMEEND_VAL temp10813_35)))
(assert (= temp10813_37 #x0000000000000000))
(assert (= temp10813_38 #x0000000000000003))
(assert (= temp10813_39 temp10813_38))
(assert (= temp10813_40 (select ARGNAME_padding_NAMEEND_VAL temp10813_39)))
(assert (= temp10813_41 #x0000000000000000))
(assert (= temp10813_42 #x0000000000000004))
(assert (= temp10813_43 temp10813_42))
(assert (= temp10813_44 (select ARGNAME_padding_NAMEEND_VAL temp10813_43)))
(assert (= temp10813_45 #x0000000000000000))
(assert (= temp10813_46 #x0000000000000005))
(assert (= temp10813_47 temp10813_46))
(assert (= temp10813_48 (select ARGNAME_padding_NAMEEND_VAL temp10813_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10813_28 temp10813_25)
             (bvslt temp10813_32 temp10813_29)
             (bvslt temp10813_36 temp10813_33)
             (bvslt temp10813_40 temp10813_37)
             (bvslt temp10813_44 temp10813_41)
             (bvslt temp10813_48 temp10813_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10813_49 #x0000000000000000))
(assert (= var1191714 temp10813_49))
(assert (= temp10813_50 #x0000000000000000))
(assert (= temp10813_51 temp10813_50))
(assert (= temp10813_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10813_51)))
(assert (= temp10813_53 #x0000000000000001))
(assert (= temp10813_54 temp10813_53))
(assert (= temp10813_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10813_54)))
(assert (= temp10813_56 #x0000000000000002))
(assert (= temp10813_57 temp10813_56))
(assert (= temp10813_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10813_57)))
(assert (= temp10813_59 #x0000000000000003))
(assert (= temp10813_60 temp10813_59))
(assert (= temp10813_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10813_60)))
(assert (= temp10813_62 #x0000000000000004))
(assert (= temp10813_63 temp10813_62))
(assert (= temp10813_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10813_63)))
(assert (= temp10813_65 #x0000000000000005))
(assert (= temp10813_66 temp10813_65))
(assert (= temp10813_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10813_66)))
(assert (= temp10813_68 #x0000000000000000))
(assert (= temp10813_69 #x0000000000000000))
(assert (= temp10813_70 temp10813_69))
(assert (= temp10813_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10813_70)))
(assert (= temp10813_72 #x0000000000000000))
(assert (= temp10813_73 #x0000000000000001))
(assert (= temp10813_74 temp10813_73))
(assert (= temp10813_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10813_74)))
(assert (= temp10813_76 #x0000000000000000))
(assert (= temp10813_77 #x0000000000000002))
(assert (= temp10813_78 temp10813_77))
(assert (= temp10813_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10813_78)))
(assert (= temp10813_80 #x0000000000000000))
(assert (= temp10813_81 #x0000000000000003))
(assert (= temp10813_82 temp10813_81))
(assert (= temp10813_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10813_82)))
(assert (= temp10813_84 #x0000000000000000))
(assert (= temp10813_85 #x0000000000000004))
(assert (= temp10813_86 temp10813_85))
(assert (= temp10813_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10813_86)))
(assert (= temp10813_88 #x0000000000000000))
(assert (= temp10813_89 #x0000000000000005))
(assert (= temp10813_90 temp10813_89))
(assert (= temp10813_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10813_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10813_71 temp10813_68)
             (bvslt temp10813_75 temp10813_72)
             (bvslt temp10813_79 temp10813_76)
             (bvslt temp10813_83 temp10813_80)
             (bvslt temp10813_87 temp10813_84)
             (bvslt temp10813_91 temp10813_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10813_92 #x0000000000000000))
(assert (= var1191725 temp10813_92))
(assert (= temp10813_93 #x0000000000000000))
(assert (= temp10813_94 temp10813_93))
(assert (= temp10813_95 (select ARGNAME_stride_NAMEEND_VAL temp10813_94)))
(assert (= temp10813_96 #x0000000000000001))
(assert (= temp10813_97 temp10813_96))
(assert (= temp10813_98 (select ARGNAME_stride_NAMEEND_VAL temp10813_97)))
(assert (= temp10813_99 #x0000000000000002))
(assert (= temp10813_100 temp10813_99))
(assert (= temp10813_101 (select ARGNAME_stride_NAMEEND_VAL temp10813_100)))
(assert (= temp10813_102 #x0000000000000003))
(assert (= temp10813_103 temp10813_102))
(assert (= temp10813_104 (select ARGNAME_stride_NAMEEND_VAL temp10813_103)))
(assert (= temp10813_105 #x0000000000000004))
(assert (= temp10813_106 temp10813_105))
(assert (= temp10813_107 (select ARGNAME_stride_NAMEEND_VAL temp10813_106)))
(assert (= temp10813_108 #x0000000000000005))
(assert (= temp10813_109 temp10813_108))
(assert (= temp10813_110 (select ARGNAME_stride_NAMEEND_VAL temp10813_109)))
(assert (= temp10813_111 #x0000000000000000))
(assert (= temp10813_112 #x0000000000000000))
(assert (= temp10813_113 temp10813_112))
(assert (= temp10813_114 (select ARGNAME_stride_NAMEEND_VAL temp10813_113)))
(assert (= temp10813_115 #x0000000000000000))
(assert (= temp10813_116 #x0000000000000001))
(assert (= temp10813_117 temp10813_116))
(assert (= temp10813_118 (select ARGNAME_stride_NAMEEND_VAL temp10813_117)))
(assert (= temp10813_119 #x0000000000000000))
(assert (= temp10813_120 #x0000000000000002))
(assert (= temp10813_121 temp10813_120))
(assert (= temp10813_122 (select ARGNAME_stride_NAMEEND_VAL temp10813_121)))
(assert (= temp10813_123 #x0000000000000000))
(assert (= temp10813_124 #x0000000000000003))
(assert (= temp10813_125 temp10813_124))
(assert (= temp10813_126 (select ARGNAME_stride_NAMEEND_VAL temp10813_125)))
(assert (= temp10813_127 #x0000000000000000))
(assert (= temp10813_128 #x0000000000000004))
(assert (= temp10813_129 temp10813_128))
(assert (= temp10813_130 (select ARGNAME_stride_NAMEEND_VAL temp10813_129)))
(assert (= temp10813_131 #x0000000000000000))
(assert (= temp10813_132 #x0000000000000005))
(assert (= temp10813_133 temp10813_132))
(assert (= temp10813_134 (select ARGNAME_stride_NAMEEND_VAL temp10813_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10813_114 temp10813_111)
             (bvsle temp10813_118 temp10813_115)
             (bvsle temp10813_122 temp10813_119)
             (bvsle temp10813_126 temp10813_123)
             (bvsle temp10813_130 temp10813_127)
             (bvsle temp10813_134 temp10813_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10813_135 #x0000000000000000))
(assert (= var1191735 temp10813_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10813_136 #x0000000000000001))
(assert (= var1191747 temp10813_136))
(assert (= temp10813_137 #x0000000000000000))
(assert (= var1179826 temp10813_137))
(assert (= temp10813_138 #x0000000000000000))
(assert (= temp10813_139 temp10813_138))
(assert (= temp10813_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10813_139)))
(assert (= temp10813_141 #x0000000000000001))
(assert (= temp10813_142 temp10813_141))
(assert (= temp10813_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10813_142)))
(assert (= temp10813_144 #x0000000000000002))
(assert (= temp10813_145 temp10813_144))
(assert (= temp10813_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10813_145)))
(assert (= temp10813_147 #x0000000000000003))
(assert (= temp10813_148 temp10813_147))
(assert (= temp10813_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10813_148)))
(assert (= temp10813_150 #x0000000000000004))
(assert (= temp10813_151 temp10813_150))
(assert (= temp10813_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10813_151)))
(assert (= temp10813_153 #x0000000000000005))
(assert (= temp10813_154 temp10813_153))
(assert (= temp10813_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10813_154)))
(assert (= temp10813_157 var1179826))
(assert (= temp10813_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10813_157)))
(assert (= temp10813_156 temp10813_158))
(assert (= var1191780
   (ite (bvslt temp10813_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10813_159 #x0000000000000000))
(assert (= var1191780 temp10813_159))
(assert (= temp10813_160 #x0000000000000000))
(assert (= var1179826 temp10813_160))
(assert (= temp10813_162 var1179826))
(assert (= temp10813_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10813_162)))
(assert (= temp10813_161 temp10813_163))
(assert (= var1191802 (bvsmod temp10813_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10813_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10813_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10813_165 #x0000000000000001))
(assert (= var1191803 temp10813_165))
(assert (= temp10813_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10813_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10813_167 #x0000000000000001))
(assert (= var1191823 temp10813_167))
(assert (= temp10813_168 #x0000000000000001))
(assert (= var1180714 temp10813_168))
(assert (= temp10813_169 #x0000000000000000))
(assert (= temp10813_170 temp10813_169))
(assert (= temp10813_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10813_170)))
(assert (= temp10813_172 #x0000000000000001))
(assert (= temp10813_173 temp10813_172))
(assert (= temp10813_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10813_173)))
(assert (= temp10813_175 #x0000000000000002))
(assert (= temp10813_176 temp10813_175))
(assert (= temp10813_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10813_176)))
(assert (= temp10813_178 #x0000000000000003))
(assert (= temp10813_179 temp10813_178))
(assert (= temp10813_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10813_179)))
(assert (= temp10813_181 #x0000000000000004))
(assert (= temp10813_182 temp10813_181))
(assert (= temp10813_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10813_182)))
(assert (= temp10813_184 #x0000000000000005))
(assert (= temp10813_185 temp10813_184))
(assert (= temp10813_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10813_185)))
(assert (= temp10813_187 #x0000000000000000))
(assert (= temp10813_188
   (ite (bvslt var1180714 temp10813_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10813_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10813_188)))
(assert (= var1191831 temp10813_189))
(assert (bvslt (ite (bvslt var1180714 temp10813_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10813_190 #x0000000000000001))
(assert (= var1180714 temp10813_190))
(assert (= temp10813_192 var1180714))
(assert (= temp10813_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10813_192)))
(assert (= temp10813_191 temp10813_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10813_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10813_194 #x0000000000000001))
(assert (= var1191836 temp10813_194))
(assert (= temp10813_195 #x0000000000000000))
(assert (= var1179826 temp10813_195))
(assert (= temp10813_197 var1179826))
(assert (= temp10813_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10813_197)))
(assert (= temp10813_196 temp10813_198))
(assert (= temp10813_199 #x0000000000000002))
(assert (= var1586025 temp10813_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10813_200 #x0000000000000001))
(assert (= var1191993 temp10813_200))
(assert (= temp10813_201 #x0000000000000001))
(assert (= var2700303 temp10813_201))
(assert (= temp10813_202 #x0000000000000001))
(assert (= var2962447 temp10813_202))
(assert (= temp10813_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10813_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10813_204 #x0000000000000001))
(assert (= var211058 temp10813_204))
(assert (= temp10813_205 #x0000000000000001))
(assert (= var211188 temp10813_205))
(assert (= var3879401 var211188))
(assert (= temp10813_206 #x0000000000000000))
(assert (= var3866802 temp10813_206))
(assert (= temp10813_207 #x0000000000000000))
(assert (= temp10813_208
   (ite (bvslt var3866802 temp10813_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10813_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10813_208)))
(assert (= var3879420 temp10813_209))
(assert (bvslt (ite (bvslt var3866802 temp10813_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10813_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10813_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10813_211 #x0000000000000000))
(assert (= var3879421 temp10813_211))
(assert (= temp10813_212 #x0000000000000001))
(assert (= var3867690 temp10813_212))
(assert (= temp10813_213 #x0000000000000000))
(assert (= temp10813_214
   (ite (bvslt var3867690 temp10813_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10813_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10813_214)))
(assert (= var3879423 temp10813_215))
(assert (bvslt (ite (bvslt var3867690 temp10813_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10813_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10813_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10813_217 #x0000000000000001))
(assert (= var3879424 temp10813_217))
(assert (= temp10813_218 #x0000000000000000))
(assert (= var4133117 temp10813_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10813_219 #x0000000000000002))
(assert (= var4339331 temp10813_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10813_220 #x0000000000000000))
(assert (= var4404892 temp10813_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var5452176 var211201))
(assert (= var5714320 var211201))
(assert (= temp10813_221 #x0000000000000001))
(assert (= var211058 temp10813_221))
(model-add temp10813_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10813_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10813_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10813_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






