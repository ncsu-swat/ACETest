(declare-fun temp10628_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10628_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10628_3 () (_ BitVec 64))
(declare-fun temp10628_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10628_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10628_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10628_7 () (_ BitVec 64))
(declare-fun temp10628_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10628_9 () (_ BitVec 64))
(declare-fun temp10628_10 () (_ BitVec 64))
(declare-fun temp10628_11 () (_ BitVec 64))
(declare-fun temp10628_12 () (_ BitVec 64))
(declare-fun temp10628_13 () (_ BitVec 64))
(declare-fun temp10628_14 () (_ BitVec 64))
(declare-fun temp10628_15 () (_ BitVec 64))
(declare-fun temp10628_16 () (_ BitVec 64))
(declare-fun temp10628_17 () (_ BitVec 64))
(declare-fun temp10628_18 () (_ BitVec 64))
(declare-fun temp10628_19 () (_ BitVec 64))
(declare-fun temp10628_20 () (_ BitVec 64))
(declare-fun temp10628_21 () (_ BitVec 64))
(declare-fun temp10628_22 () (_ BitVec 64))
(declare-fun temp10628_23 () (_ BitVec 64))
(declare-fun temp10628_24 () (_ BitVec 64))
(declare-fun temp10628_25 () (_ BitVec 64))
(declare-fun temp10628_26 () (_ BitVec 64))
(declare-fun temp10628_27 () (_ BitVec 64))
(declare-fun temp10628_28 () (_ BitVec 64))
(declare-fun temp10628_29 () (_ BitVec 64))
(declare-fun temp10628_30 () (_ BitVec 64))
(declare-fun temp10628_31 () (_ BitVec 64))
(declare-fun temp10628_32 () (_ BitVec 64))
(declare-fun temp10628_33 () (_ BitVec 64))
(declare-fun temp10628_34 () (_ BitVec 64))
(declare-fun temp10628_35 () (_ BitVec 64))
(declare-fun temp10628_36 () (_ BitVec 64))
(declare-fun temp10628_37 () (_ BitVec 64))
(declare-fun temp10628_38 () (_ BitVec 64))
(declare-fun temp10628_39 () (_ BitVec 64))
(declare-fun temp10628_40 () (_ BitVec 64))
(declare-fun temp10628_41 () (_ BitVec 64))
(declare-fun temp10628_42 () (_ BitVec 64))
(declare-fun temp10628_43 () (_ BitVec 64))
(declare-fun temp10628_44 () (_ BitVec 64))
(declare-fun temp10628_45 () (_ BitVec 64))
(declare-fun temp10628_46 () (_ BitVec 64))
(declare-fun temp10628_47 () (_ BitVec 64))
(declare-fun temp10628_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10628_49 () (_ BitVec 64))
(declare-fun temp10628_50 () (_ BitVec 64))
(declare-fun temp10628_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10628_52 () (_ BitVec 64))
(declare-fun temp10628_53 () (_ BitVec 64))
(declare-fun temp10628_54 () (_ BitVec 64))
(declare-fun temp10628_55 () (_ BitVec 64))
(declare-fun temp10628_56 () (_ BitVec 64))
(declare-fun temp10628_57 () (_ BitVec 64))
(declare-fun temp10628_58 () (_ BitVec 64))
(declare-fun temp10628_59 () (_ BitVec 64))
(declare-fun temp10628_60 () (_ BitVec 64))
(declare-fun temp10628_61 () (_ BitVec 64))
(declare-fun temp10628_62 () (_ BitVec 64))
(declare-fun temp10628_63 () (_ BitVec 64))
(declare-fun temp10628_64 () (_ BitVec 64))
(declare-fun temp10628_65 () (_ BitVec 64))
(declare-fun temp10628_66 () (_ BitVec 64))
(declare-fun temp10628_67 () (_ BitVec 64))
(declare-fun temp10628_68 () (_ BitVec 64))
(declare-fun temp10628_69 () (_ BitVec 64))
(declare-fun temp10628_70 () (_ BitVec 64))
(declare-fun temp10628_71 () (_ BitVec 64))
(declare-fun temp10628_72 () (_ BitVec 64))
(declare-fun temp10628_73 () (_ BitVec 64))
(declare-fun temp10628_74 () (_ BitVec 64))
(declare-fun temp10628_75 () (_ BitVec 64))
(declare-fun temp10628_76 () (_ BitVec 64))
(declare-fun temp10628_77 () (_ BitVec 64))
(declare-fun temp10628_78 () (_ BitVec 64))
(declare-fun temp10628_79 () (_ BitVec 64))
(declare-fun temp10628_80 () (_ BitVec 64))
(declare-fun temp10628_81 () (_ BitVec 64))
(declare-fun temp10628_82 () (_ BitVec 64))
(declare-fun temp10628_83 () (_ BitVec 64))
(declare-fun temp10628_84 () (_ BitVec 64))
(declare-fun temp10628_85 () (_ BitVec 64))
(declare-fun temp10628_86 () (_ BitVec 64))
(declare-fun temp10628_87 () (_ BitVec 64))
(declare-fun temp10628_88 () (_ BitVec 64))
(declare-fun temp10628_89 () (_ BitVec 64))
(declare-fun temp10628_90 () (_ BitVec 64))
(declare-fun temp10628_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10628_92 () (_ BitVec 64))
(declare-fun temp10628_93 () (_ BitVec 64))
(declare-fun temp10628_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10628_95 () (_ BitVec 64))
(declare-fun temp10628_96 () (_ BitVec 64))
(declare-fun temp10628_97 () (_ BitVec 64))
(declare-fun temp10628_98 () (_ BitVec 64))
(declare-fun temp10628_99 () (_ BitVec 64))
(declare-fun temp10628_100 () (_ BitVec 64))
(declare-fun temp10628_101 () (_ BitVec 64))
(declare-fun temp10628_102 () (_ BitVec 64))
(declare-fun temp10628_103 () (_ BitVec 64))
(declare-fun temp10628_104 () (_ BitVec 64))
(declare-fun temp10628_105 () (_ BitVec 64))
(declare-fun temp10628_106 () (_ BitVec 64))
(declare-fun temp10628_107 () (_ BitVec 64))
(declare-fun temp10628_108 () (_ BitVec 64))
(declare-fun temp10628_109 () (_ BitVec 64))
(declare-fun temp10628_110 () (_ BitVec 64))
(declare-fun temp10628_111 () (_ BitVec 64))
(declare-fun temp10628_112 () (_ BitVec 64))
(declare-fun temp10628_113 () (_ BitVec 64))
(declare-fun temp10628_114 () (_ BitVec 64))
(declare-fun temp10628_115 () (_ BitVec 64))
(declare-fun temp10628_116 () (_ BitVec 64))
(declare-fun temp10628_117 () (_ BitVec 64))
(declare-fun temp10628_118 () (_ BitVec 64))
(declare-fun temp10628_119 () (_ BitVec 64))
(declare-fun temp10628_120 () (_ BitVec 64))
(declare-fun temp10628_121 () (_ BitVec 64))
(declare-fun temp10628_122 () (_ BitVec 64))
(declare-fun temp10628_123 () (_ BitVec 64))
(declare-fun temp10628_124 () (_ BitVec 64))
(declare-fun temp10628_125 () (_ BitVec 64))
(declare-fun temp10628_126 () (_ BitVec 64))
(declare-fun temp10628_127 () (_ BitVec 64))
(declare-fun temp10628_128 () (_ BitVec 64))
(declare-fun temp10628_129 () (_ BitVec 64))
(declare-fun temp10628_130 () (_ BitVec 64))
(declare-fun temp10628_131 () (_ BitVec 64))
(declare-fun temp10628_132 () (_ BitVec 64))
(declare-fun temp10628_133 () (_ BitVec 64))
(declare-fun temp10628_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10628_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10628_136 () (_ BitVec 64))
(declare-fun temp10628_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10628_138 () (_ BitVec 64))
(declare-fun temp10628_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10628_140 () (_ BitVec 64))
(declare-fun temp10628_141 () (_ BitVec 64))
(declare-fun temp10628_142 () (_ BitVec 64))
(declare-fun temp10628_143 () (_ BitVec 64))
(declare-fun temp10628_144 () (_ BitVec 64))
(declare-fun temp10628_145 () (_ BitVec 64))
(declare-fun temp10628_146 () (_ BitVec 64))
(declare-fun temp10628_147 () (_ BitVec 64))
(declare-fun temp10628_148 () (_ BitVec 64))
(declare-fun temp10628_149 () (_ BitVec 64))
(declare-fun temp10628_150 () (_ BitVec 64))
(declare-fun temp10628_151 () (_ BitVec 64))
(declare-fun temp10628_152 () (_ BitVec 64))
(declare-fun temp10628_153 () (_ BitVec 64))
(declare-fun temp10628_154 () (_ BitVec 64))
(declare-fun temp10628_155 () (_ BitVec 64))
(declare-fun temp10628_157 () (_ BitVec 64))
(declare-fun temp10628_158 () (_ BitVec 64))
(declare-fun temp10628_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10628_159 () (_ BitVec 64))
(declare-fun temp10628_160 () (_ BitVec 64))
(declare-fun temp10628_162 () (_ BitVec 64))
(declare-fun temp10628_163 () (_ BitVec 64))
(declare-fun temp10628_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10628_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10628_165 () (_ BitVec 64))
(declare-fun temp10628_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10628_167 () (_ BitVec 64))
(declare-fun temp10628_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10628_169 () (_ BitVec 64))
(declare-fun temp10628_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10628_171 () (_ BitVec 64))
(declare-fun temp10628_172 () (_ BitVec 64))
(declare-fun temp10628_173 () (_ BitVec 64))
(declare-fun temp10628_174 () (_ BitVec 64))
(declare-fun temp10628_175 () (_ BitVec 64))
(declare-fun temp10628_176 () (_ BitVec 64))
(declare-fun temp10628_177 () (_ BitVec 64))
(declare-fun temp10628_178 () (_ BitVec 64))
(declare-fun temp10628_179 () (_ BitVec 64))
(declare-fun temp10628_180 () (_ BitVec 64))
(declare-fun temp10628_181 () (_ BitVec 64))
(declare-fun temp10628_182 () (_ BitVec 64))
(declare-fun temp10628_183 () (_ BitVec 64))
(declare-fun temp10628_184 () (_ BitVec 64))
(declare-fun temp10628_185 () (_ BitVec 64))
(declare-fun temp10628_186 () (_ BitVec 64))
(declare-fun temp10628_187 () (_ BitVec 64))
(declare-fun temp10628_188 () (_ BitVec 64))
(declare-fun temp10628_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10628_190 () (_ BitVec 64))
(declare-fun temp10628_192 () (_ BitVec 64))
(declare-fun temp10628_193 () (_ BitVec 64))
(declare-fun temp10628_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10628_194 () (_ BitVec 64))
(declare-fun temp10628_195 () (_ BitVec 64))
(declare-fun temp10628_197 () (_ BitVec 64))
(declare-fun temp10628_198 () (_ BitVec 64))
(declare-fun temp10628_196 () (_ BitVec 64))
(declare-fun temp10628_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10628_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10628_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10628_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10628_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10628_204 () (_ BitVec 64))
(declare-fun temp10628_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10628_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10628_207 () (_ BitVec 64))
(declare-fun temp10628_208 () (_ BitVec 64))
(declare-fun temp10628_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10628_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10628_211 () (_ BitVec 64))
(declare-fun temp10628_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10628_213 () (_ BitVec 64))
(declare-fun temp10628_214 () (_ BitVec 64))
(declare-fun temp10628_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10628_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10628_217 () (_ BitVec 64))
(declare-fun temp10628_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10628_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10628_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp10628_222 () (_ BitVec 64))
(declare-fun temp10628_221 () (_ BitVec 64))
(declare-fun temp10628_223 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp10628_224 () (_ BitVec 64))
(declare-fun temp10628_225 () (_ BitVec 64))
(declare-fun temp10628_226 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp10628_227 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp10628_228 () (_ BitVec 64))
(declare-fun temp10628_230 () (_ BitVec 64))
(declare-fun temp10628_229 () (_ BitVec 64))
(declare-fun temp10628_231 () (_ BitVec 64))
(declare-fun temp10628_232 () (_ BitVec 64))
(declare-fun var5583636 () (_ BitVec 64))
(declare-fun var5583603 () (_ BitVec 64))
(declare-fun var5452167 () (_ BitVec 64))
(declare-fun var5452163 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp10628_233 () (_ BitVec 64))
(assert (= temp10628_1 #x0000000000000001))
(assert (= var77203 temp10628_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10628_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10628_2)))
(assert (= temp10628_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10628_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10628_4 #x0000000000000000))
(assert (= var210941 temp10628_4))
(assert (= temp10628_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10628_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10628_6 #x0000000000000000))
(assert (= var210986 temp10628_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10628_7 #x0000000000000000))
(assert (= temp10628_8 temp10628_7))
(assert (= temp10628_9 (select ARGNAME_padding_NAMEEND_VAL temp10628_8)))
(assert (= temp10628_10 #x0000000000000001))
(assert (= temp10628_11 temp10628_10))
(assert (= temp10628_12 (select ARGNAME_padding_NAMEEND_VAL temp10628_11)))
(assert (= temp10628_13 #x0000000000000002))
(assert (= temp10628_14 temp10628_13))
(assert (= temp10628_15 (select ARGNAME_padding_NAMEEND_VAL temp10628_14)))
(assert (= temp10628_16 #x0000000000000003))
(assert (= temp10628_17 temp10628_16))
(assert (= temp10628_18 (select ARGNAME_padding_NAMEEND_VAL temp10628_17)))
(assert (= temp10628_19 #x0000000000000004))
(assert (= temp10628_20 temp10628_19))
(assert (= temp10628_21 (select ARGNAME_padding_NAMEEND_VAL temp10628_20)))
(assert (= temp10628_22 #x0000000000000005))
(assert (= temp10628_23 temp10628_22))
(assert (= temp10628_24 (select ARGNAME_padding_NAMEEND_VAL temp10628_23)))
(assert (= temp10628_25 #x0000000000000000))
(assert (= temp10628_26 #x0000000000000000))
(assert (= temp10628_27 temp10628_26))
(assert (= temp10628_28 (select ARGNAME_padding_NAMEEND_VAL temp10628_27)))
(assert (= temp10628_29 #x0000000000000000))
(assert (= temp10628_30 #x0000000000000001))
(assert (= temp10628_31 temp10628_30))
(assert (= temp10628_32 (select ARGNAME_padding_NAMEEND_VAL temp10628_31)))
(assert (= temp10628_33 #x0000000000000000))
(assert (= temp10628_34 #x0000000000000002))
(assert (= temp10628_35 temp10628_34))
(assert (= temp10628_36 (select ARGNAME_padding_NAMEEND_VAL temp10628_35)))
(assert (= temp10628_37 #x0000000000000000))
(assert (= temp10628_38 #x0000000000000003))
(assert (= temp10628_39 temp10628_38))
(assert (= temp10628_40 (select ARGNAME_padding_NAMEEND_VAL temp10628_39)))
(assert (= temp10628_41 #x0000000000000000))
(assert (= temp10628_42 #x0000000000000004))
(assert (= temp10628_43 temp10628_42))
(assert (= temp10628_44 (select ARGNAME_padding_NAMEEND_VAL temp10628_43)))
(assert (= temp10628_45 #x0000000000000000))
(assert (= temp10628_46 #x0000000000000005))
(assert (= temp10628_47 temp10628_46))
(assert (= temp10628_48 (select ARGNAME_padding_NAMEEND_VAL temp10628_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10628_28 temp10628_25)
             (bvslt temp10628_32 temp10628_29)
             (bvslt temp10628_36 temp10628_33)
             (bvslt temp10628_40 temp10628_37)
             (bvslt temp10628_44 temp10628_41)
             (bvslt temp10628_48 temp10628_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10628_49 #x0000000000000000))
(assert (= var1191714 temp10628_49))
(assert (= temp10628_50 #x0000000000000000))
(assert (= temp10628_51 temp10628_50))
(assert (= temp10628_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10628_51)))
(assert (= temp10628_53 #x0000000000000001))
(assert (= temp10628_54 temp10628_53))
(assert (= temp10628_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10628_54)))
(assert (= temp10628_56 #x0000000000000002))
(assert (= temp10628_57 temp10628_56))
(assert (= temp10628_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10628_57)))
(assert (= temp10628_59 #x0000000000000003))
(assert (= temp10628_60 temp10628_59))
(assert (= temp10628_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10628_60)))
(assert (= temp10628_62 #x0000000000000004))
(assert (= temp10628_63 temp10628_62))
(assert (= temp10628_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10628_63)))
(assert (= temp10628_65 #x0000000000000005))
(assert (= temp10628_66 temp10628_65))
(assert (= temp10628_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10628_66)))
(assert (= temp10628_68 #x0000000000000000))
(assert (= temp10628_69 #x0000000000000000))
(assert (= temp10628_70 temp10628_69))
(assert (= temp10628_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10628_70)))
(assert (= temp10628_72 #x0000000000000000))
(assert (= temp10628_73 #x0000000000000001))
(assert (= temp10628_74 temp10628_73))
(assert (= temp10628_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10628_74)))
(assert (= temp10628_76 #x0000000000000000))
(assert (= temp10628_77 #x0000000000000002))
(assert (= temp10628_78 temp10628_77))
(assert (= temp10628_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10628_78)))
(assert (= temp10628_80 #x0000000000000000))
(assert (= temp10628_81 #x0000000000000003))
(assert (= temp10628_82 temp10628_81))
(assert (= temp10628_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10628_82)))
(assert (= temp10628_84 #x0000000000000000))
(assert (= temp10628_85 #x0000000000000004))
(assert (= temp10628_86 temp10628_85))
(assert (= temp10628_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10628_86)))
(assert (= temp10628_88 #x0000000000000000))
(assert (= temp10628_89 #x0000000000000005))
(assert (= temp10628_90 temp10628_89))
(assert (= temp10628_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10628_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10628_71 temp10628_68)
             (bvslt temp10628_75 temp10628_72)
             (bvslt temp10628_79 temp10628_76)
             (bvslt temp10628_83 temp10628_80)
             (bvslt temp10628_87 temp10628_84)
             (bvslt temp10628_91 temp10628_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10628_92 #x0000000000000000))
(assert (= var1191725 temp10628_92))
(assert (= temp10628_93 #x0000000000000000))
(assert (= temp10628_94 temp10628_93))
(assert (= temp10628_95 (select ARGNAME_stride_NAMEEND_VAL temp10628_94)))
(assert (= temp10628_96 #x0000000000000001))
(assert (= temp10628_97 temp10628_96))
(assert (= temp10628_98 (select ARGNAME_stride_NAMEEND_VAL temp10628_97)))
(assert (= temp10628_99 #x0000000000000002))
(assert (= temp10628_100 temp10628_99))
(assert (= temp10628_101 (select ARGNAME_stride_NAMEEND_VAL temp10628_100)))
(assert (= temp10628_102 #x0000000000000003))
(assert (= temp10628_103 temp10628_102))
(assert (= temp10628_104 (select ARGNAME_stride_NAMEEND_VAL temp10628_103)))
(assert (= temp10628_105 #x0000000000000004))
(assert (= temp10628_106 temp10628_105))
(assert (= temp10628_107 (select ARGNAME_stride_NAMEEND_VAL temp10628_106)))
(assert (= temp10628_108 #x0000000000000005))
(assert (= temp10628_109 temp10628_108))
(assert (= temp10628_110 (select ARGNAME_stride_NAMEEND_VAL temp10628_109)))
(assert (= temp10628_111 #x0000000000000000))
(assert (= temp10628_112 #x0000000000000000))
(assert (= temp10628_113 temp10628_112))
(assert (= temp10628_114 (select ARGNAME_stride_NAMEEND_VAL temp10628_113)))
(assert (= temp10628_115 #x0000000000000000))
(assert (= temp10628_116 #x0000000000000001))
(assert (= temp10628_117 temp10628_116))
(assert (= temp10628_118 (select ARGNAME_stride_NAMEEND_VAL temp10628_117)))
(assert (= temp10628_119 #x0000000000000000))
(assert (= temp10628_120 #x0000000000000002))
(assert (= temp10628_121 temp10628_120))
(assert (= temp10628_122 (select ARGNAME_stride_NAMEEND_VAL temp10628_121)))
(assert (= temp10628_123 #x0000000000000000))
(assert (= temp10628_124 #x0000000000000003))
(assert (= temp10628_125 temp10628_124))
(assert (= temp10628_126 (select ARGNAME_stride_NAMEEND_VAL temp10628_125)))
(assert (= temp10628_127 #x0000000000000000))
(assert (= temp10628_128 #x0000000000000004))
(assert (= temp10628_129 temp10628_128))
(assert (= temp10628_130 (select ARGNAME_stride_NAMEEND_VAL temp10628_129)))
(assert (= temp10628_131 #x0000000000000000))
(assert (= temp10628_132 #x0000000000000005))
(assert (= temp10628_133 temp10628_132))
(assert (= temp10628_134 (select ARGNAME_stride_NAMEEND_VAL temp10628_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10628_114 temp10628_111)
             (bvsle temp10628_118 temp10628_115)
             (bvsle temp10628_122 temp10628_119)
             (bvsle temp10628_126 temp10628_123)
             (bvsle temp10628_130 temp10628_127)
             (bvsle temp10628_134 temp10628_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10628_135 #x0000000000000000))
(assert (= var1191735 temp10628_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10628_136 #x0000000000000001))
(assert (= var1191747 temp10628_136))
(assert (= temp10628_137 #x0000000000000000))
(assert (= var1179826 temp10628_137))
(assert (= temp10628_138 #x0000000000000000))
(assert (= temp10628_139 temp10628_138))
(assert (= temp10628_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10628_139)))
(assert (= temp10628_141 #x0000000000000001))
(assert (= temp10628_142 temp10628_141))
(assert (= temp10628_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10628_142)))
(assert (= temp10628_144 #x0000000000000002))
(assert (= temp10628_145 temp10628_144))
(assert (= temp10628_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10628_145)))
(assert (= temp10628_147 #x0000000000000003))
(assert (= temp10628_148 temp10628_147))
(assert (= temp10628_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10628_148)))
(assert (= temp10628_150 #x0000000000000004))
(assert (= temp10628_151 temp10628_150))
(assert (= temp10628_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10628_151)))
(assert (= temp10628_153 #x0000000000000005))
(assert (= temp10628_154 temp10628_153))
(assert (= temp10628_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10628_154)))
(assert (= temp10628_157 var1179826))
(assert (= temp10628_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10628_157)))
(assert (= temp10628_156 temp10628_158))
(assert (= var1191780
   (ite (bvslt temp10628_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10628_159 #x0000000000000000))
(assert (= var1191780 temp10628_159))
(assert (= temp10628_160 #x0000000000000000))
(assert (= var1179826 temp10628_160))
(assert (= temp10628_162 var1179826))
(assert (= temp10628_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10628_162)))
(assert (= temp10628_161 temp10628_163))
(assert (= var1191802 (bvsmod temp10628_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10628_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10628_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10628_165 #x0000000000000001))
(assert (= var1191803 temp10628_165))
(assert (= temp10628_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10628_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10628_167 #x0000000000000001))
(assert (= var1191823 temp10628_167))
(assert (= temp10628_168 #x0000000000000001))
(assert (= var1180714 temp10628_168))
(assert (= temp10628_169 #x0000000000000000))
(assert (= temp10628_170 temp10628_169))
(assert (= temp10628_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10628_170)))
(assert (= temp10628_172 #x0000000000000001))
(assert (= temp10628_173 temp10628_172))
(assert (= temp10628_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10628_173)))
(assert (= temp10628_175 #x0000000000000002))
(assert (= temp10628_176 temp10628_175))
(assert (= temp10628_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10628_176)))
(assert (= temp10628_178 #x0000000000000003))
(assert (= temp10628_179 temp10628_178))
(assert (= temp10628_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10628_179)))
(assert (= temp10628_181 #x0000000000000004))
(assert (= temp10628_182 temp10628_181))
(assert (= temp10628_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10628_182)))
(assert (= temp10628_184 #x0000000000000005))
(assert (= temp10628_185 temp10628_184))
(assert (= temp10628_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10628_185)))
(assert (= temp10628_187 #x0000000000000000))
(assert (= temp10628_188
   (ite (bvslt var1180714 temp10628_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10628_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10628_188)))
(assert (= var1191831 temp10628_189))
(assert (bvslt (ite (bvslt var1180714 temp10628_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10628_190 #x0000000000000001))
(assert (= var1180714 temp10628_190))
(assert (= temp10628_192 var1180714))
(assert (= temp10628_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10628_192)))
(assert (= temp10628_191 temp10628_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10628_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10628_194 #x0000000000000001))
(assert (= var1191836 temp10628_194))
(assert (= temp10628_195 #x0000000000000000))
(assert (= var1179826 temp10628_195))
(assert (= temp10628_197 var1179826))
(assert (= temp10628_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10628_197)))
(assert (= temp10628_196 temp10628_198))
(assert (= temp10628_199 #x0000000000000002))
(assert (= var1586025 temp10628_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10628_200 #x0000000000000001))
(assert (= var1191993 temp10628_200))
(assert (= temp10628_201 #x0000000000000001))
(assert (= var2700303 temp10628_201))
(assert (= temp10628_202 #x0000000000000001))
(assert (= var2962447 temp10628_202))
(assert (= temp10628_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10628_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10628_204 #x0000000000000001))
(assert (= var211058 temp10628_204))
(assert (= temp10628_205 #x0000000000000001))
(assert (= var211188 temp10628_205))
(assert (= var3879401 var211188))
(assert (= temp10628_206 #x0000000000000000))
(assert (= var3866802 temp10628_206))
(assert (= temp10628_207 #x0000000000000000))
(assert (= temp10628_208
   (ite (bvslt var3866802 temp10628_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10628_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10628_208)))
(assert (= var3879420 temp10628_209))
(assert (bvslt (ite (bvslt var3866802 temp10628_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10628_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10628_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10628_211 #x0000000000000000))
(assert (= var3879421 temp10628_211))
(assert (= temp10628_212 #x0000000000000001))
(assert (= var3867690 temp10628_212))
(assert (= temp10628_213 #x0000000000000000))
(assert (= temp10628_214
   (ite (bvslt var3867690 temp10628_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10628_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10628_214)))
(assert (= var3879423 temp10628_215))
(assert (bvslt (ite (bvslt var3867690 temp10628_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10628_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10628_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10628_217 #x0000000000000001))
(assert (= var3879424 temp10628_217))
(assert (= temp10628_218 #x0000000000000000))
(assert (= var4133117 temp10628_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10628_219 #x0000000000000002))
(assert (= var4339331 temp10628_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10628_220 #x0000000000000000))
(assert (= var4404892 temp10628_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp10628_222 #xffffffffffffffff))
(assert (= temp10628_221 temp10628_222))
(assert (= temp10628_223 #x0000000000000001))
(assert (= var197674 temp10628_223))
(assert (= temp10628_224 #x0000000000000000))
(assert (= temp10628_225
   (ite (bvslt var197674 temp10628_224)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp10628_226 (select ARGNAME_input_NAMEEND_DIMSIZE temp10628_225)))
(assert (= var211595 temp10628_226))
(assert (bvslt (ite (bvslt var197674 temp10628_224)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10628_227 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp10628_227) #x0000000000000001 #x0000000000000000)))
(assert (= temp10628_228 #x0000000000000001))
(assert (= var211596 temp10628_228))
(assert (= temp10628_230 #xffffffffffffffff))
(assert (= temp10628_229 temp10628_230))
(assert (= temp10628_231 #x0000000000000001))
(assert (= var211058 temp10628_231))
(assert (= temp10628_232 #x0000000000000000))
(assert (= var5583636 temp10628_232))
(assert (= var5583603 var5583636))
(assert (= var5452167 var5583603))
(assert (= var5452163 var5452167))
(assert (= var212669 var5452163))
(assert (= temp10628_233 #x0000000000000000))
(assert (= var212669 temp10628_233))
(model-add temp10628_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10628_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10628_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10628_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




