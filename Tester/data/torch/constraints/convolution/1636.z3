(declare-fun temp10976_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10976_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10976_3 () (_ BitVec 64))
(declare-fun temp10976_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10976_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10976_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10976_7 () (_ BitVec 64))
(declare-fun temp10976_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10976_9 () (_ BitVec 64))
(declare-fun temp10976_10 () (_ BitVec 64))
(declare-fun temp10976_11 () (_ BitVec 64))
(declare-fun temp10976_12 () (_ BitVec 64))
(declare-fun temp10976_13 () (_ BitVec 64))
(declare-fun temp10976_14 () (_ BitVec 64))
(declare-fun temp10976_15 () (_ BitVec 64))
(declare-fun temp10976_16 () (_ BitVec 64))
(declare-fun temp10976_17 () (_ BitVec 64))
(declare-fun temp10976_18 () (_ BitVec 64))
(declare-fun temp10976_19 () (_ BitVec 64))
(declare-fun temp10976_20 () (_ BitVec 64))
(declare-fun temp10976_21 () (_ BitVec 64))
(declare-fun temp10976_22 () (_ BitVec 64))
(declare-fun temp10976_23 () (_ BitVec 64))
(declare-fun temp10976_24 () (_ BitVec 64))
(declare-fun temp10976_25 () (_ BitVec 64))
(declare-fun temp10976_26 () (_ BitVec 64))
(declare-fun temp10976_27 () (_ BitVec 64))
(declare-fun temp10976_28 () (_ BitVec 64))
(declare-fun temp10976_29 () (_ BitVec 64))
(declare-fun temp10976_30 () (_ BitVec 64))
(declare-fun temp10976_31 () (_ BitVec 64))
(declare-fun temp10976_32 () (_ BitVec 64))
(declare-fun temp10976_33 () (_ BitVec 64))
(declare-fun temp10976_34 () (_ BitVec 64))
(declare-fun temp10976_35 () (_ BitVec 64))
(declare-fun temp10976_36 () (_ BitVec 64))
(declare-fun temp10976_37 () (_ BitVec 64))
(declare-fun temp10976_38 () (_ BitVec 64))
(declare-fun temp10976_39 () (_ BitVec 64))
(declare-fun temp10976_40 () (_ BitVec 64))
(declare-fun temp10976_41 () (_ BitVec 64))
(declare-fun temp10976_42 () (_ BitVec 64))
(declare-fun temp10976_43 () (_ BitVec 64))
(declare-fun temp10976_44 () (_ BitVec 64))
(declare-fun temp10976_45 () (_ BitVec 64))
(declare-fun temp10976_46 () (_ BitVec 64))
(declare-fun temp10976_47 () (_ BitVec 64))
(declare-fun temp10976_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10976_49 () (_ BitVec 64))
(declare-fun temp10976_50 () (_ BitVec 64))
(declare-fun temp10976_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10976_52 () (_ BitVec 64))
(declare-fun temp10976_53 () (_ BitVec 64))
(declare-fun temp10976_54 () (_ BitVec 64))
(declare-fun temp10976_55 () (_ BitVec 64))
(declare-fun temp10976_56 () (_ BitVec 64))
(declare-fun temp10976_57 () (_ BitVec 64))
(declare-fun temp10976_58 () (_ BitVec 64))
(declare-fun temp10976_59 () (_ BitVec 64))
(declare-fun temp10976_60 () (_ BitVec 64))
(declare-fun temp10976_61 () (_ BitVec 64))
(declare-fun temp10976_62 () (_ BitVec 64))
(declare-fun temp10976_63 () (_ BitVec 64))
(declare-fun temp10976_64 () (_ BitVec 64))
(declare-fun temp10976_65 () (_ BitVec 64))
(declare-fun temp10976_66 () (_ BitVec 64))
(declare-fun temp10976_67 () (_ BitVec 64))
(declare-fun temp10976_68 () (_ BitVec 64))
(declare-fun temp10976_69 () (_ BitVec 64))
(declare-fun temp10976_70 () (_ BitVec 64))
(declare-fun temp10976_71 () (_ BitVec 64))
(declare-fun temp10976_72 () (_ BitVec 64))
(declare-fun temp10976_73 () (_ BitVec 64))
(declare-fun temp10976_74 () (_ BitVec 64))
(declare-fun temp10976_75 () (_ BitVec 64))
(declare-fun temp10976_76 () (_ BitVec 64))
(declare-fun temp10976_77 () (_ BitVec 64))
(declare-fun temp10976_78 () (_ BitVec 64))
(declare-fun temp10976_79 () (_ BitVec 64))
(declare-fun temp10976_80 () (_ BitVec 64))
(declare-fun temp10976_81 () (_ BitVec 64))
(declare-fun temp10976_82 () (_ BitVec 64))
(declare-fun temp10976_83 () (_ BitVec 64))
(declare-fun temp10976_84 () (_ BitVec 64))
(declare-fun temp10976_85 () (_ BitVec 64))
(declare-fun temp10976_86 () (_ BitVec 64))
(declare-fun temp10976_87 () (_ BitVec 64))
(declare-fun temp10976_88 () (_ BitVec 64))
(declare-fun temp10976_89 () (_ BitVec 64))
(declare-fun temp10976_90 () (_ BitVec 64))
(declare-fun temp10976_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10976_92 () (_ BitVec 64))
(declare-fun temp10976_93 () (_ BitVec 64))
(declare-fun temp10976_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10976_95 () (_ BitVec 64))
(declare-fun temp10976_96 () (_ BitVec 64))
(declare-fun temp10976_97 () (_ BitVec 64))
(declare-fun temp10976_98 () (_ BitVec 64))
(declare-fun temp10976_99 () (_ BitVec 64))
(declare-fun temp10976_100 () (_ BitVec 64))
(declare-fun temp10976_101 () (_ BitVec 64))
(declare-fun temp10976_102 () (_ BitVec 64))
(declare-fun temp10976_103 () (_ BitVec 64))
(declare-fun temp10976_104 () (_ BitVec 64))
(declare-fun temp10976_105 () (_ BitVec 64))
(declare-fun temp10976_106 () (_ BitVec 64))
(declare-fun temp10976_107 () (_ BitVec 64))
(declare-fun temp10976_108 () (_ BitVec 64))
(declare-fun temp10976_109 () (_ BitVec 64))
(declare-fun temp10976_110 () (_ BitVec 64))
(declare-fun temp10976_111 () (_ BitVec 64))
(declare-fun temp10976_112 () (_ BitVec 64))
(declare-fun temp10976_113 () (_ BitVec 64))
(declare-fun temp10976_114 () (_ BitVec 64))
(declare-fun temp10976_115 () (_ BitVec 64))
(declare-fun temp10976_116 () (_ BitVec 64))
(declare-fun temp10976_117 () (_ BitVec 64))
(declare-fun temp10976_118 () (_ BitVec 64))
(declare-fun temp10976_119 () (_ BitVec 64))
(declare-fun temp10976_120 () (_ BitVec 64))
(declare-fun temp10976_121 () (_ BitVec 64))
(declare-fun temp10976_122 () (_ BitVec 64))
(declare-fun temp10976_123 () (_ BitVec 64))
(declare-fun temp10976_124 () (_ BitVec 64))
(declare-fun temp10976_125 () (_ BitVec 64))
(declare-fun temp10976_126 () (_ BitVec 64))
(declare-fun temp10976_127 () (_ BitVec 64))
(declare-fun temp10976_128 () (_ BitVec 64))
(declare-fun temp10976_129 () (_ BitVec 64))
(declare-fun temp10976_130 () (_ BitVec 64))
(declare-fun temp10976_131 () (_ BitVec 64))
(declare-fun temp10976_132 () (_ BitVec 64))
(declare-fun temp10976_133 () (_ BitVec 64))
(declare-fun temp10976_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10976_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10976_136 () (_ BitVec 64))
(declare-fun temp10976_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10976_138 () (_ BitVec 64))
(declare-fun temp10976_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10976_140 () (_ BitVec 64))
(declare-fun temp10976_141 () (_ BitVec 64))
(declare-fun temp10976_142 () (_ BitVec 64))
(declare-fun temp10976_143 () (_ BitVec 64))
(declare-fun temp10976_144 () (_ BitVec 64))
(declare-fun temp10976_145 () (_ BitVec 64))
(declare-fun temp10976_146 () (_ BitVec 64))
(declare-fun temp10976_147 () (_ BitVec 64))
(declare-fun temp10976_148 () (_ BitVec 64))
(declare-fun temp10976_149 () (_ BitVec 64))
(declare-fun temp10976_150 () (_ BitVec 64))
(declare-fun temp10976_151 () (_ BitVec 64))
(declare-fun temp10976_152 () (_ BitVec 64))
(declare-fun temp10976_153 () (_ BitVec 64))
(declare-fun temp10976_154 () (_ BitVec 64))
(declare-fun temp10976_155 () (_ BitVec 64))
(declare-fun temp10976_157 () (_ BitVec 64))
(declare-fun temp10976_158 () (_ BitVec 64))
(declare-fun temp10976_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10976_159 () (_ BitVec 64))
(declare-fun temp10976_160 () (_ BitVec 64))
(declare-fun temp10976_162 () (_ BitVec 64))
(declare-fun temp10976_163 () (_ BitVec 64))
(declare-fun temp10976_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10976_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10976_165 () (_ BitVec 64))
(declare-fun temp10976_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10976_167 () (_ BitVec 64))
(declare-fun temp10976_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10976_169 () (_ BitVec 64))
(declare-fun temp10976_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10976_171 () (_ BitVec 64))
(declare-fun temp10976_172 () (_ BitVec 64))
(declare-fun temp10976_173 () (_ BitVec 64))
(declare-fun temp10976_174 () (_ BitVec 64))
(declare-fun temp10976_175 () (_ BitVec 64))
(declare-fun temp10976_176 () (_ BitVec 64))
(declare-fun temp10976_177 () (_ BitVec 64))
(declare-fun temp10976_178 () (_ BitVec 64))
(declare-fun temp10976_179 () (_ BitVec 64))
(declare-fun temp10976_180 () (_ BitVec 64))
(declare-fun temp10976_181 () (_ BitVec 64))
(declare-fun temp10976_182 () (_ BitVec 64))
(declare-fun temp10976_183 () (_ BitVec 64))
(declare-fun temp10976_184 () (_ BitVec 64))
(declare-fun temp10976_185 () (_ BitVec 64))
(declare-fun temp10976_186 () (_ BitVec 64))
(declare-fun temp10976_187 () (_ BitVec 64))
(declare-fun temp10976_188 () (_ BitVec 64))
(declare-fun temp10976_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10976_190 () (_ BitVec 64))
(declare-fun temp10976_192 () (_ BitVec 64))
(declare-fun temp10976_193 () (_ BitVec 64))
(declare-fun temp10976_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10976_194 () (_ BitVec 64))
(declare-fun temp10976_195 () (_ BitVec 64))
(declare-fun temp10976_197 () (_ BitVec 64))
(declare-fun temp10976_198 () (_ BitVec 64))
(declare-fun temp10976_196 () (_ BitVec 64))
(declare-fun temp10976_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10976_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10976_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10976_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10976_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10976_204 () (_ BitVec 64))
(declare-fun temp10976_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10976_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10976_207 () (_ BitVec 64))
(declare-fun temp10976_208 () (_ BitVec 64))
(declare-fun temp10976_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10976_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10976_211 () (_ BitVec 64))
(declare-fun temp10976_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10976_213 () (_ BitVec 64))
(declare-fun temp10976_214 () (_ BitVec 64))
(declare-fun temp10976_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10976_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10976_217 () (_ BitVec 64))
(declare-fun temp10976_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10976_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10976_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp10976_221 () (_ BitVec 64))
(assert (= temp10976_1 #x0000000000000001))
(assert (= var77203 temp10976_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10976_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10976_2)))
(assert (= temp10976_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10976_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10976_4 #x0000000000000000))
(assert (= var210941 temp10976_4))
(assert (= temp10976_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10976_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10976_6 #x0000000000000000))
(assert (= var210986 temp10976_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10976_7 #x0000000000000000))
(assert (= temp10976_8 temp10976_7))
(assert (= temp10976_9 (select ARGNAME_padding_NAMEEND_VAL temp10976_8)))
(assert (= temp10976_10 #x0000000000000001))
(assert (= temp10976_11 temp10976_10))
(assert (= temp10976_12 (select ARGNAME_padding_NAMEEND_VAL temp10976_11)))
(assert (= temp10976_13 #x0000000000000002))
(assert (= temp10976_14 temp10976_13))
(assert (= temp10976_15 (select ARGNAME_padding_NAMEEND_VAL temp10976_14)))
(assert (= temp10976_16 #x0000000000000003))
(assert (= temp10976_17 temp10976_16))
(assert (= temp10976_18 (select ARGNAME_padding_NAMEEND_VAL temp10976_17)))
(assert (= temp10976_19 #x0000000000000004))
(assert (= temp10976_20 temp10976_19))
(assert (= temp10976_21 (select ARGNAME_padding_NAMEEND_VAL temp10976_20)))
(assert (= temp10976_22 #x0000000000000005))
(assert (= temp10976_23 temp10976_22))
(assert (= temp10976_24 (select ARGNAME_padding_NAMEEND_VAL temp10976_23)))
(assert (= temp10976_25 #x0000000000000000))
(assert (= temp10976_26 #x0000000000000000))
(assert (= temp10976_27 temp10976_26))
(assert (= temp10976_28 (select ARGNAME_padding_NAMEEND_VAL temp10976_27)))
(assert (= temp10976_29 #x0000000000000000))
(assert (= temp10976_30 #x0000000000000001))
(assert (= temp10976_31 temp10976_30))
(assert (= temp10976_32 (select ARGNAME_padding_NAMEEND_VAL temp10976_31)))
(assert (= temp10976_33 #x0000000000000000))
(assert (= temp10976_34 #x0000000000000002))
(assert (= temp10976_35 temp10976_34))
(assert (= temp10976_36 (select ARGNAME_padding_NAMEEND_VAL temp10976_35)))
(assert (= temp10976_37 #x0000000000000000))
(assert (= temp10976_38 #x0000000000000003))
(assert (= temp10976_39 temp10976_38))
(assert (= temp10976_40 (select ARGNAME_padding_NAMEEND_VAL temp10976_39)))
(assert (= temp10976_41 #x0000000000000000))
(assert (= temp10976_42 #x0000000000000004))
(assert (= temp10976_43 temp10976_42))
(assert (= temp10976_44 (select ARGNAME_padding_NAMEEND_VAL temp10976_43)))
(assert (= temp10976_45 #x0000000000000000))
(assert (= temp10976_46 #x0000000000000005))
(assert (= temp10976_47 temp10976_46))
(assert (= temp10976_48 (select ARGNAME_padding_NAMEEND_VAL temp10976_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10976_28 temp10976_25)
             (bvslt temp10976_32 temp10976_29)
             (bvslt temp10976_36 temp10976_33)
             (bvslt temp10976_40 temp10976_37)
             (bvslt temp10976_44 temp10976_41)
             (bvslt temp10976_48 temp10976_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10976_49 #x0000000000000000))
(assert (= var1191714 temp10976_49))
(assert (= temp10976_50 #x0000000000000000))
(assert (= temp10976_51 temp10976_50))
(assert (= temp10976_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10976_51)))
(assert (= temp10976_53 #x0000000000000001))
(assert (= temp10976_54 temp10976_53))
(assert (= temp10976_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10976_54)))
(assert (= temp10976_56 #x0000000000000002))
(assert (= temp10976_57 temp10976_56))
(assert (= temp10976_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10976_57)))
(assert (= temp10976_59 #x0000000000000003))
(assert (= temp10976_60 temp10976_59))
(assert (= temp10976_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10976_60)))
(assert (= temp10976_62 #x0000000000000004))
(assert (= temp10976_63 temp10976_62))
(assert (= temp10976_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10976_63)))
(assert (= temp10976_65 #x0000000000000005))
(assert (= temp10976_66 temp10976_65))
(assert (= temp10976_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10976_66)))
(assert (= temp10976_68 #x0000000000000000))
(assert (= temp10976_69 #x0000000000000000))
(assert (= temp10976_70 temp10976_69))
(assert (= temp10976_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10976_70)))
(assert (= temp10976_72 #x0000000000000000))
(assert (= temp10976_73 #x0000000000000001))
(assert (= temp10976_74 temp10976_73))
(assert (= temp10976_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10976_74)))
(assert (= temp10976_76 #x0000000000000000))
(assert (= temp10976_77 #x0000000000000002))
(assert (= temp10976_78 temp10976_77))
(assert (= temp10976_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10976_78)))
(assert (= temp10976_80 #x0000000000000000))
(assert (= temp10976_81 #x0000000000000003))
(assert (= temp10976_82 temp10976_81))
(assert (= temp10976_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10976_82)))
(assert (= temp10976_84 #x0000000000000000))
(assert (= temp10976_85 #x0000000000000004))
(assert (= temp10976_86 temp10976_85))
(assert (= temp10976_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10976_86)))
(assert (= temp10976_88 #x0000000000000000))
(assert (= temp10976_89 #x0000000000000005))
(assert (= temp10976_90 temp10976_89))
(assert (= temp10976_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10976_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10976_71 temp10976_68)
             (bvslt temp10976_75 temp10976_72)
             (bvslt temp10976_79 temp10976_76)
             (bvslt temp10976_83 temp10976_80)
             (bvslt temp10976_87 temp10976_84)
             (bvslt temp10976_91 temp10976_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10976_92 #x0000000000000000))
(assert (= var1191725 temp10976_92))
(assert (= temp10976_93 #x0000000000000000))
(assert (= temp10976_94 temp10976_93))
(assert (= temp10976_95 (select ARGNAME_stride_NAMEEND_VAL temp10976_94)))
(assert (= temp10976_96 #x0000000000000001))
(assert (= temp10976_97 temp10976_96))
(assert (= temp10976_98 (select ARGNAME_stride_NAMEEND_VAL temp10976_97)))
(assert (= temp10976_99 #x0000000000000002))
(assert (= temp10976_100 temp10976_99))
(assert (= temp10976_101 (select ARGNAME_stride_NAMEEND_VAL temp10976_100)))
(assert (= temp10976_102 #x0000000000000003))
(assert (= temp10976_103 temp10976_102))
(assert (= temp10976_104 (select ARGNAME_stride_NAMEEND_VAL temp10976_103)))
(assert (= temp10976_105 #x0000000000000004))
(assert (= temp10976_106 temp10976_105))
(assert (= temp10976_107 (select ARGNAME_stride_NAMEEND_VAL temp10976_106)))
(assert (= temp10976_108 #x0000000000000005))
(assert (= temp10976_109 temp10976_108))
(assert (= temp10976_110 (select ARGNAME_stride_NAMEEND_VAL temp10976_109)))
(assert (= temp10976_111 #x0000000000000000))
(assert (= temp10976_112 #x0000000000000000))
(assert (= temp10976_113 temp10976_112))
(assert (= temp10976_114 (select ARGNAME_stride_NAMEEND_VAL temp10976_113)))
(assert (= temp10976_115 #x0000000000000000))
(assert (= temp10976_116 #x0000000000000001))
(assert (= temp10976_117 temp10976_116))
(assert (= temp10976_118 (select ARGNAME_stride_NAMEEND_VAL temp10976_117)))
(assert (= temp10976_119 #x0000000000000000))
(assert (= temp10976_120 #x0000000000000002))
(assert (= temp10976_121 temp10976_120))
(assert (= temp10976_122 (select ARGNAME_stride_NAMEEND_VAL temp10976_121)))
(assert (= temp10976_123 #x0000000000000000))
(assert (= temp10976_124 #x0000000000000003))
(assert (= temp10976_125 temp10976_124))
(assert (= temp10976_126 (select ARGNAME_stride_NAMEEND_VAL temp10976_125)))
(assert (= temp10976_127 #x0000000000000000))
(assert (= temp10976_128 #x0000000000000004))
(assert (= temp10976_129 temp10976_128))
(assert (= temp10976_130 (select ARGNAME_stride_NAMEEND_VAL temp10976_129)))
(assert (= temp10976_131 #x0000000000000000))
(assert (= temp10976_132 #x0000000000000005))
(assert (= temp10976_133 temp10976_132))
(assert (= temp10976_134 (select ARGNAME_stride_NAMEEND_VAL temp10976_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10976_114 temp10976_111)
             (bvsle temp10976_118 temp10976_115)
             (bvsle temp10976_122 temp10976_119)
             (bvsle temp10976_126 temp10976_123)
             (bvsle temp10976_130 temp10976_127)
             (bvsle temp10976_134 temp10976_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10976_135 #x0000000000000000))
(assert (= var1191735 temp10976_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10976_136 #x0000000000000001))
(assert (= var1191747 temp10976_136))
(assert (= temp10976_137 #x0000000000000000))
(assert (= var1179826 temp10976_137))
(assert (= temp10976_138 #x0000000000000000))
(assert (= temp10976_139 temp10976_138))
(assert (= temp10976_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10976_139)))
(assert (= temp10976_141 #x0000000000000001))
(assert (= temp10976_142 temp10976_141))
(assert (= temp10976_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10976_142)))
(assert (= temp10976_144 #x0000000000000002))
(assert (= temp10976_145 temp10976_144))
(assert (= temp10976_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10976_145)))
(assert (= temp10976_147 #x0000000000000003))
(assert (= temp10976_148 temp10976_147))
(assert (= temp10976_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10976_148)))
(assert (= temp10976_150 #x0000000000000004))
(assert (= temp10976_151 temp10976_150))
(assert (= temp10976_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10976_151)))
(assert (= temp10976_153 #x0000000000000005))
(assert (= temp10976_154 temp10976_153))
(assert (= temp10976_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10976_154)))
(assert (= temp10976_157 var1179826))
(assert (= temp10976_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10976_157)))
(assert (= temp10976_156 temp10976_158))
(assert (= var1191780
   (ite (bvslt temp10976_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10976_159 #x0000000000000000))
(assert (= var1191780 temp10976_159))
(assert (= temp10976_160 #x0000000000000000))
(assert (= var1179826 temp10976_160))
(assert (= temp10976_162 var1179826))
(assert (= temp10976_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10976_162)))
(assert (= temp10976_161 temp10976_163))
(assert (= var1191802 (bvsmod temp10976_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10976_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10976_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10976_165 #x0000000000000001))
(assert (= var1191803 temp10976_165))
(assert (= temp10976_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10976_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10976_167 #x0000000000000001))
(assert (= var1191823 temp10976_167))
(assert (= temp10976_168 #x0000000000000001))
(assert (= var1180714 temp10976_168))
(assert (= temp10976_169 #x0000000000000000))
(assert (= temp10976_170 temp10976_169))
(assert (= temp10976_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10976_170)))
(assert (= temp10976_172 #x0000000000000001))
(assert (= temp10976_173 temp10976_172))
(assert (= temp10976_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10976_173)))
(assert (= temp10976_175 #x0000000000000002))
(assert (= temp10976_176 temp10976_175))
(assert (= temp10976_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10976_176)))
(assert (= temp10976_178 #x0000000000000003))
(assert (= temp10976_179 temp10976_178))
(assert (= temp10976_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10976_179)))
(assert (= temp10976_181 #x0000000000000004))
(assert (= temp10976_182 temp10976_181))
(assert (= temp10976_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10976_182)))
(assert (= temp10976_184 #x0000000000000005))
(assert (= temp10976_185 temp10976_184))
(assert (= temp10976_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10976_185)))
(assert (= temp10976_187 #x0000000000000000))
(assert (= temp10976_188
   (ite (bvslt var1180714 temp10976_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10976_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10976_188)))
(assert (= var1191831 temp10976_189))
(assert (bvslt (ite (bvslt var1180714 temp10976_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10976_190 #x0000000000000001))
(assert (= var1180714 temp10976_190))
(assert (= temp10976_192 var1180714))
(assert (= temp10976_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10976_192)))
(assert (= temp10976_191 temp10976_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10976_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10976_194 #x0000000000000001))
(assert (= var1191836 temp10976_194))
(assert (= temp10976_195 #x0000000000000000))
(assert (= var1179826 temp10976_195))
(assert (= temp10976_197 var1179826))
(assert (= temp10976_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10976_197)))
(assert (= temp10976_196 temp10976_198))
(assert (= temp10976_199 #x0000000000000002))
(assert (= var1586025 temp10976_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10976_200 #x0000000000000001))
(assert (= var1191993 temp10976_200))
(assert (= temp10976_201 #x0000000000000001))
(assert (= var2700303 temp10976_201))
(assert (= temp10976_202 #x0000000000000001))
(assert (= var2962447 temp10976_202))
(assert (= temp10976_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10976_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10976_204 #x0000000000000001))
(assert (= var211058 temp10976_204))
(assert (= temp10976_205 #x0000000000000001))
(assert (= var211188 temp10976_205))
(assert (= var3879401 var211188))
(assert (= temp10976_206 #x0000000000000000))
(assert (= var3866802 temp10976_206))
(assert (= temp10976_207 #x0000000000000000))
(assert (= temp10976_208
   (ite (bvslt var3866802 temp10976_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10976_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10976_208)))
(assert (= var3879420 temp10976_209))
(assert (bvslt (ite (bvslt var3866802 temp10976_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10976_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10976_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10976_211 #x0000000000000000))
(assert (= var3879421 temp10976_211))
(assert (= temp10976_212 #x0000000000000001))
(assert (= var3867690 temp10976_212))
(assert (= temp10976_213 #x0000000000000000))
(assert (= temp10976_214
   (ite (bvslt var3867690 temp10976_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10976_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10976_214)))
(assert (= var3879423 temp10976_215))
(assert (bvslt (ite (bvslt var3867690 temp10976_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10976_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10976_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10976_217 #x0000000000000001))
(assert (= var3879424 temp10976_217))
(assert (= temp10976_218 #x0000000000000000))
(assert (= var4133117 temp10976_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10976_219 #x0000000000000002))
(assert (= var4339331 temp10976_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10976_220 #x0000000000000000))
(assert (= var4404892 temp10976_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp10976_221 #x0000000000000001))
(assert (= var211058 temp10976_221))
(model-add temp10976_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10976_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10976_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10976_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




