(declare-fun temp136_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp136_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp136_3 () (_ BitVec 64))
(declare-fun temp136_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp136_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp136_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp136_7 () (_ BitVec 64))
(declare-fun temp136_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp136_9 () (_ BitVec 64))
(declare-fun temp136_10 () (_ BitVec 64))
(declare-fun temp136_11 () (_ BitVec 64))
(declare-fun temp136_12 () (_ BitVec 64))
(declare-fun temp136_13 () (_ BitVec 64))
(declare-fun temp136_14 () (_ BitVec 64))
(declare-fun temp136_15 () (_ BitVec 64))
(declare-fun temp136_16 () (_ BitVec 64))
(declare-fun temp136_17 () (_ BitVec 64))
(declare-fun temp136_18 () (_ BitVec 64))
(declare-fun temp136_19 () (_ BitVec 64))
(declare-fun temp136_20 () (_ BitVec 64))
(declare-fun temp136_21 () (_ BitVec 64))
(declare-fun temp136_22 () (_ BitVec 64))
(declare-fun temp136_23 () (_ BitVec 64))
(declare-fun temp136_24 () (_ BitVec 64))
(declare-fun temp136_25 () (_ BitVec 64))
(declare-fun temp136_26 () (_ BitVec 64))
(declare-fun temp136_27 () (_ BitVec 64))
(declare-fun temp136_28 () (_ BitVec 64))
(declare-fun temp136_29 () (_ BitVec 64))
(declare-fun temp136_30 () (_ BitVec 64))
(declare-fun temp136_31 () (_ BitVec 64))
(declare-fun temp136_32 () (_ BitVec 64))
(declare-fun temp136_33 () (_ BitVec 64))
(declare-fun temp136_34 () (_ BitVec 64))
(declare-fun temp136_35 () (_ BitVec 64))
(declare-fun temp136_36 () (_ BitVec 64))
(declare-fun temp136_37 () (_ BitVec 64))
(declare-fun temp136_38 () (_ BitVec 64))
(declare-fun temp136_39 () (_ BitVec 64))
(declare-fun temp136_40 () (_ BitVec 64))
(declare-fun temp136_41 () (_ BitVec 64))
(declare-fun temp136_42 () (_ BitVec 64))
(declare-fun temp136_43 () (_ BitVec 64))
(declare-fun temp136_44 () (_ BitVec 64))
(declare-fun temp136_45 () (_ BitVec 64))
(declare-fun temp136_46 () (_ BitVec 64))
(declare-fun temp136_47 () (_ BitVec 64))
(declare-fun temp136_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp136_49 () (_ BitVec 64))
(declare-fun temp136_50 () (_ BitVec 64))
(declare-fun temp136_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp136_52 () (_ BitVec 64))
(declare-fun temp136_53 () (_ BitVec 64))
(declare-fun temp136_54 () (_ BitVec 64))
(declare-fun temp136_55 () (_ BitVec 64))
(declare-fun temp136_56 () (_ BitVec 64))
(declare-fun temp136_57 () (_ BitVec 64))
(declare-fun temp136_58 () (_ BitVec 64))
(declare-fun temp136_59 () (_ BitVec 64))
(declare-fun temp136_60 () (_ BitVec 64))
(declare-fun temp136_61 () (_ BitVec 64))
(declare-fun temp136_62 () (_ BitVec 64))
(declare-fun temp136_63 () (_ BitVec 64))
(declare-fun temp136_64 () (_ BitVec 64))
(declare-fun temp136_65 () (_ BitVec 64))
(declare-fun temp136_66 () (_ BitVec 64))
(declare-fun temp136_67 () (_ BitVec 64))
(declare-fun temp136_68 () (_ BitVec 64))
(declare-fun temp136_69 () (_ BitVec 64))
(declare-fun temp136_70 () (_ BitVec 64))
(declare-fun temp136_71 () (_ BitVec 64))
(declare-fun temp136_72 () (_ BitVec 64))
(declare-fun temp136_73 () (_ BitVec 64))
(declare-fun temp136_74 () (_ BitVec 64))
(declare-fun temp136_75 () (_ BitVec 64))
(declare-fun temp136_76 () (_ BitVec 64))
(declare-fun temp136_77 () (_ BitVec 64))
(declare-fun temp136_78 () (_ BitVec 64))
(declare-fun temp136_79 () (_ BitVec 64))
(declare-fun temp136_80 () (_ BitVec 64))
(declare-fun temp136_81 () (_ BitVec 64))
(declare-fun temp136_82 () (_ BitVec 64))
(declare-fun temp136_83 () (_ BitVec 64))
(declare-fun temp136_84 () (_ BitVec 64))
(declare-fun temp136_85 () (_ BitVec 64))
(declare-fun temp136_86 () (_ BitVec 64))
(declare-fun temp136_87 () (_ BitVec 64))
(declare-fun temp136_88 () (_ BitVec 64))
(declare-fun temp136_89 () (_ BitVec 64))
(declare-fun temp136_90 () (_ BitVec 64))
(declare-fun temp136_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp136_92 () (_ BitVec 64))
(declare-fun temp136_93 () (_ BitVec 64))
(declare-fun temp136_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp136_95 () (_ BitVec 64))
(declare-fun temp136_96 () (_ BitVec 64))
(declare-fun temp136_97 () (_ BitVec 64))
(declare-fun temp136_98 () (_ BitVec 64))
(declare-fun temp136_99 () (_ BitVec 64))
(declare-fun temp136_100 () (_ BitVec 64))
(declare-fun temp136_101 () (_ BitVec 64))
(declare-fun temp136_102 () (_ BitVec 64))
(declare-fun temp136_103 () (_ BitVec 64))
(declare-fun temp136_104 () (_ BitVec 64))
(declare-fun temp136_105 () (_ BitVec 64))
(declare-fun temp136_106 () (_ BitVec 64))
(declare-fun temp136_107 () (_ BitVec 64))
(declare-fun temp136_108 () (_ BitVec 64))
(declare-fun temp136_109 () (_ BitVec 64))
(declare-fun temp136_110 () (_ BitVec 64))
(declare-fun temp136_111 () (_ BitVec 64))
(declare-fun temp136_112 () (_ BitVec 64))
(declare-fun temp136_113 () (_ BitVec 64))
(declare-fun temp136_114 () (_ BitVec 64))
(declare-fun temp136_115 () (_ BitVec 64))
(declare-fun temp136_116 () (_ BitVec 64))
(declare-fun temp136_117 () (_ BitVec 64))
(declare-fun temp136_118 () (_ BitVec 64))
(declare-fun temp136_119 () (_ BitVec 64))
(declare-fun temp136_120 () (_ BitVec 64))
(declare-fun temp136_121 () (_ BitVec 64))
(declare-fun temp136_122 () (_ BitVec 64))
(declare-fun temp136_123 () (_ BitVec 64))
(declare-fun temp136_124 () (_ BitVec 64))
(declare-fun temp136_125 () (_ BitVec 64))
(declare-fun temp136_126 () (_ BitVec 64))
(declare-fun temp136_127 () (_ BitVec 64))
(declare-fun temp136_128 () (_ BitVec 64))
(declare-fun temp136_129 () (_ BitVec 64))
(declare-fun temp136_130 () (_ BitVec 64))
(declare-fun temp136_131 () (_ BitVec 64))
(declare-fun temp136_132 () (_ BitVec 64))
(declare-fun temp136_133 () (_ BitVec 64))
(declare-fun temp136_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp136_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp136_136 () (_ BitVec 64))
(declare-fun temp136_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp136_138 () (_ BitVec 64))
(declare-fun temp136_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp136_140 () (_ BitVec 64))
(declare-fun temp136_141 () (_ BitVec 64))
(declare-fun temp136_142 () (_ BitVec 64))
(declare-fun temp136_143 () (_ BitVec 64))
(declare-fun temp136_144 () (_ BitVec 64))
(declare-fun temp136_145 () (_ BitVec 64))
(declare-fun temp136_146 () (_ BitVec 64))
(declare-fun temp136_147 () (_ BitVec 64))
(declare-fun temp136_148 () (_ BitVec 64))
(declare-fun temp136_149 () (_ BitVec 64))
(declare-fun temp136_150 () (_ BitVec 64))
(declare-fun temp136_151 () (_ BitVec 64))
(declare-fun temp136_152 () (_ BitVec 64))
(declare-fun temp136_153 () (_ BitVec 64))
(declare-fun temp136_154 () (_ BitVec 64))
(declare-fun temp136_155 () (_ BitVec 64))
(declare-fun temp136_157 () (_ BitVec 64))
(declare-fun temp136_158 () (_ BitVec 64))
(declare-fun temp136_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp136_159 () (_ BitVec 64))
(declare-fun temp136_160 () (_ BitVec 64))
(declare-fun temp136_162 () (_ BitVec 64))
(declare-fun temp136_163 () (_ BitVec 64))
(declare-fun temp136_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp136_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp136_165 () (_ BitVec 64))
(declare-fun temp136_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp136_167 () (_ BitVec 64))
(declare-fun temp136_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp136_169 () (_ BitVec 64))
(declare-fun temp136_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp136_171 () (_ BitVec 64))
(declare-fun temp136_172 () (_ BitVec 64))
(declare-fun temp136_173 () (_ BitVec 64))
(declare-fun temp136_174 () (_ BitVec 64))
(declare-fun temp136_175 () (_ BitVec 64))
(declare-fun temp136_176 () (_ BitVec 64))
(declare-fun temp136_177 () (_ BitVec 64))
(declare-fun temp136_178 () (_ BitVec 64))
(declare-fun temp136_179 () (_ BitVec 64))
(declare-fun temp136_180 () (_ BitVec 64))
(declare-fun temp136_181 () (_ BitVec 64))
(declare-fun temp136_182 () (_ BitVec 64))
(declare-fun temp136_183 () (_ BitVec 64))
(declare-fun temp136_184 () (_ BitVec 64))
(declare-fun temp136_185 () (_ BitVec 64))
(declare-fun temp136_186 () (_ BitVec 64))
(declare-fun temp136_187 () (_ BitVec 64))
(declare-fun temp136_188 () (_ BitVec 64))
(declare-fun temp136_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp136_190 () (_ BitVec 64))
(declare-fun temp136_192 () (_ BitVec 64))
(declare-fun temp136_193 () (_ BitVec 64))
(declare-fun temp136_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp136_194 () (_ BitVec 64))
(declare-fun temp136_195 () (_ BitVec 64))
(declare-fun temp136_197 () (_ BitVec 64))
(declare-fun temp136_198 () (_ BitVec 64))
(declare-fun temp136_196 () (_ BitVec 64))
(declare-fun temp136_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp136_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp136_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp136_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp136_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp136_204 () (_ BitVec 64))
(declare-fun temp136_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp136_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp136_207 () (_ BitVec 64))
(declare-fun temp136_208 () (_ BitVec 64))
(declare-fun temp136_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp136_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp136_211 () (_ BitVec 64))
(declare-fun temp136_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp136_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp136_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp136_216 () (_ BitVec 64))
(declare-fun temp136_215 () (_ BitVec 64))
(declare-fun temp136_217 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp136_218 () (_ BitVec 64))
(declare-fun temp136_219 () (_ BitVec 64))
(declare-fun temp136_220 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp136_221 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp136_222 () (_ BitVec 64))
(declare-fun temp136_224 () (_ BitVec 64))
(declare-fun temp136_223 () (_ BitVec 64))
(declare-fun temp136_225 () (_ BitVec 64))
(assert (= temp136_1 #x0000000000000001))
(assert (= var77203 temp136_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp136_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp136_2)))
(assert (= temp136_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp136_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp136_4 #x0000000000000000))
(assert (= var210941 temp136_4))
(assert (= temp136_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp136_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp136_6 #x0000000000000000))
(assert (= var210986 temp136_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp136_7 #x0000000000000000))
(assert (= temp136_8 temp136_7))
(assert (= temp136_9 (select ARGNAME_padding_NAMEEND_VAL temp136_8)))
(assert (= temp136_10 #x0000000000000001))
(assert (= temp136_11 temp136_10))
(assert (= temp136_12 (select ARGNAME_padding_NAMEEND_VAL temp136_11)))
(assert (= temp136_13 #x0000000000000002))
(assert (= temp136_14 temp136_13))
(assert (= temp136_15 (select ARGNAME_padding_NAMEEND_VAL temp136_14)))
(assert (= temp136_16 #x0000000000000003))
(assert (= temp136_17 temp136_16))
(assert (= temp136_18 (select ARGNAME_padding_NAMEEND_VAL temp136_17)))
(assert (= temp136_19 #x0000000000000004))
(assert (= temp136_20 temp136_19))
(assert (= temp136_21 (select ARGNAME_padding_NAMEEND_VAL temp136_20)))
(assert (= temp136_22 #x0000000000000005))
(assert (= temp136_23 temp136_22))
(assert (= temp136_24 (select ARGNAME_padding_NAMEEND_VAL temp136_23)))
(assert (= temp136_25 #x0000000000000000))
(assert (= temp136_26 #x0000000000000000))
(assert (= temp136_27 temp136_26))
(assert (= temp136_28 (select ARGNAME_padding_NAMEEND_VAL temp136_27)))
(assert (= temp136_29 #x0000000000000000))
(assert (= temp136_30 #x0000000000000001))
(assert (= temp136_31 temp136_30))
(assert (= temp136_32 (select ARGNAME_padding_NAMEEND_VAL temp136_31)))
(assert (= temp136_33 #x0000000000000000))
(assert (= temp136_34 #x0000000000000002))
(assert (= temp136_35 temp136_34))
(assert (= temp136_36 (select ARGNAME_padding_NAMEEND_VAL temp136_35)))
(assert (= temp136_37 #x0000000000000000))
(assert (= temp136_38 #x0000000000000003))
(assert (= temp136_39 temp136_38))
(assert (= temp136_40 (select ARGNAME_padding_NAMEEND_VAL temp136_39)))
(assert (= temp136_41 #x0000000000000000))
(assert (= temp136_42 #x0000000000000004))
(assert (= temp136_43 temp136_42))
(assert (= temp136_44 (select ARGNAME_padding_NAMEEND_VAL temp136_43)))
(assert (= temp136_45 #x0000000000000000))
(assert (= temp136_46 #x0000000000000005))
(assert (= temp136_47 temp136_46))
(assert (= temp136_48 (select ARGNAME_padding_NAMEEND_VAL temp136_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp136_28 temp136_25)
             (bvslt temp136_32 temp136_29)
             (bvslt temp136_36 temp136_33)
             (bvslt temp136_40 temp136_37)
             (bvslt temp136_44 temp136_41)
             (bvslt temp136_48 temp136_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp136_49 #x0000000000000000))
(assert (= var1191714 temp136_49))
(assert (= temp136_50 #x0000000000000000))
(assert (= temp136_51 temp136_50))
(assert (= temp136_52 (select ARGNAME_output_padding_NAMEEND_VAL temp136_51)))
(assert (= temp136_53 #x0000000000000001))
(assert (= temp136_54 temp136_53))
(assert (= temp136_55 (select ARGNAME_output_padding_NAMEEND_VAL temp136_54)))
(assert (= temp136_56 #x0000000000000002))
(assert (= temp136_57 temp136_56))
(assert (= temp136_58 (select ARGNAME_output_padding_NAMEEND_VAL temp136_57)))
(assert (= temp136_59 #x0000000000000003))
(assert (= temp136_60 temp136_59))
(assert (= temp136_61 (select ARGNAME_output_padding_NAMEEND_VAL temp136_60)))
(assert (= temp136_62 #x0000000000000004))
(assert (= temp136_63 temp136_62))
(assert (= temp136_64 (select ARGNAME_output_padding_NAMEEND_VAL temp136_63)))
(assert (= temp136_65 #x0000000000000005))
(assert (= temp136_66 temp136_65))
(assert (= temp136_67 (select ARGNAME_output_padding_NAMEEND_VAL temp136_66)))
(assert (= temp136_68 #x0000000000000000))
(assert (= temp136_69 #x0000000000000000))
(assert (= temp136_70 temp136_69))
(assert (= temp136_71 (select ARGNAME_output_padding_NAMEEND_VAL temp136_70)))
(assert (= temp136_72 #x0000000000000000))
(assert (= temp136_73 #x0000000000000001))
(assert (= temp136_74 temp136_73))
(assert (= temp136_75 (select ARGNAME_output_padding_NAMEEND_VAL temp136_74)))
(assert (= temp136_76 #x0000000000000000))
(assert (= temp136_77 #x0000000000000002))
(assert (= temp136_78 temp136_77))
(assert (= temp136_79 (select ARGNAME_output_padding_NAMEEND_VAL temp136_78)))
(assert (= temp136_80 #x0000000000000000))
(assert (= temp136_81 #x0000000000000003))
(assert (= temp136_82 temp136_81))
(assert (= temp136_83 (select ARGNAME_output_padding_NAMEEND_VAL temp136_82)))
(assert (= temp136_84 #x0000000000000000))
(assert (= temp136_85 #x0000000000000004))
(assert (= temp136_86 temp136_85))
(assert (= temp136_87 (select ARGNAME_output_padding_NAMEEND_VAL temp136_86)))
(assert (= temp136_88 #x0000000000000000))
(assert (= temp136_89 #x0000000000000005))
(assert (= temp136_90 temp136_89))
(assert (= temp136_91 (select ARGNAME_output_padding_NAMEEND_VAL temp136_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp136_71 temp136_68)
             (bvslt temp136_75 temp136_72)
             (bvslt temp136_79 temp136_76)
             (bvslt temp136_83 temp136_80)
             (bvslt temp136_87 temp136_84)
             (bvslt temp136_91 temp136_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp136_92 #x0000000000000000))
(assert (= var1191725 temp136_92))
(assert (= temp136_93 #x0000000000000000))
(assert (= temp136_94 temp136_93))
(assert (= temp136_95 (select ARGNAME_stride_NAMEEND_VAL temp136_94)))
(assert (= temp136_96 #x0000000000000001))
(assert (= temp136_97 temp136_96))
(assert (= temp136_98 (select ARGNAME_stride_NAMEEND_VAL temp136_97)))
(assert (= temp136_99 #x0000000000000002))
(assert (= temp136_100 temp136_99))
(assert (= temp136_101 (select ARGNAME_stride_NAMEEND_VAL temp136_100)))
(assert (= temp136_102 #x0000000000000003))
(assert (= temp136_103 temp136_102))
(assert (= temp136_104 (select ARGNAME_stride_NAMEEND_VAL temp136_103)))
(assert (= temp136_105 #x0000000000000004))
(assert (= temp136_106 temp136_105))
(assert (= temp136_107 (select ARGNAME_stride_NAMEEND_VAL temp136_106)))
(assert (= temp136_108 #x0000000000000005))
(assert (= temp136_109 temp136_108))
(assert (= temp136_110 (select ARGNAME_stride_NAMEEND_VAL temp136_109)))
(assert (= temp136_111 #x0000000000000000))
(assert (= temp136_112 #x0000000000000000))
(assert (= temp136_113 temp136_112))
(assert (= temp136_114 (select ARGNAME_stride_NAMEEND_VAL temp136_113)))
(assert (= temp136_115 #x0000000000000000))
(assert (= temp136_116 #x0000000000000001))
(assert (= temp136_117 temp136_116))
(assert (= temp136_118 (select ARGNAME_stride_NAMEEND_VAL temp136_117)))
(assert (= temp136_119 #x0000000000000000))
(assert (= temp136_120 #x0000000000000002))
(assert (= temp136_121 temp136_120))
(assert (= temp136_122 (select ARGNAME_stride_NAMEEND_VAL temp136_121)))
(assert (= temp136_123 #x0000000000000000))
(assert (= temp136_124 #x0000000000000003))
(assert (= temp136_125 temp136_124))
(assert (= temp136_126 (select ARGNAME_stride_NAMEEND_VAL temp136_125)))
(assert (= temp136_127 #x0000000000000000))
(assert (= temp136_128 #x0000000000000004))
(assert (= temp136_129 temp136_128))
(assert (= temp136_130 (select ARGNAME_stride_NAMEEND_VAL temp136_129)))
(assert (= temp136_131 #x0000000000000000))
(assert (= temp136_132 #x0000000000000005))
(assert (= temp136_133 temp136_132))
(assert (= temp136_134 (select ARGNAME_stride_NAMEEND_VAL temp136_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp136_114 temp136_111)
             (bvsle temp136_118 temp136_115)
             (bvsle temp136_122 temp136_119)
             (bvsle temp136_126 temp136_123)
             (bvsle temp136_130 temp136_127)
             (bvsle temp136_134 temp136_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp136_135 #x0000000000000000))
(assert (= var1191735 temp136_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp136_136 #x0000000000000001))
(assert (= var1191747 temp136_136))
(assert (= temp136_137 #x0000000000000000))
(assert (= var1179826 temp136_137))
(assert (= temp136_138 #x0000000000000000))
(assert (= temp136_139 temp136_138))
(assert (= temp136_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp136_139)))
(assert (= temp136_141 #x0000000000000001))
(assert (= temp136_142 temp136_141))
(assert (= temp136_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp136_142)))
(assert (= temp136_144 #x0000000000000002))
(assert (= temp136_145 temp136_144))
(assert (= temp136_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp136_145)))
(assert (= temp136_147 #x0000000000000003))
(assert (= temp136_148 temp136_147))
(assert (= temp136_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp136_148)))
(assert (= temp136_150 #x0000000000000004))
(assert (= temp136_151 temp136_150))
(assert (= temp136_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp136_151)))
(assert (= temp136_153 #x0000000000000005))
(assert (= temp136_154 temp136_153))
(assert (= temp136_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp136_154)))
(assert (= temp136_157 var1179826))
(assert (= temp136_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp136_157)))
(assert (= temp136_156 temp136_158))
(assert (= var1191780
   (ite (bvslt temp136_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp136_159 #x0000000000000000))
(assert (= var1191780 temp136_159))
(assert (= temp136_160 #x0000000000000000))
(assert (= var1179826 temp136_160))
(assert (= temp136_162 var1179826))
(assert (= temp136_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp136_162)))
(assert (= temp136_161 temp136_163))
(assert (= var1191802 (bvsmod temp136_161 ARGNAME_groups_NAMEEND)))
(assert (= temp136_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp136_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp136_165 #x0000000000000001))
(assert (= var1191803 temp136_165))
(assert (= temp136_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp136_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp136_167 #x0000000000000001))
(assert (= var1191823 temp136_167))
(assert (= temp136_168 #x0000000000000001))
(assert (= var1180714 temp136_168))
(assert (= temp136_169 #x0000000000000000))
(assert (= temp136_170 temp136_169))
(assert (= temp136_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp136_170)))
(assert (= temp136_172 #x0000000000000001))
(assert (= temp136_173 temp136_172))
(assert (= temp136_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp136_173)))
(assert (= temp136_175 #x0000000000000002))
(assert (= temp136_176 temp136_175))
(assert (= temp136_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp136_176)))
(assert (= temp136_178 #x0000000000000003))
(assert (= temp136_179 temp136_178))
(assert (= temp136_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp136_179)))
(assert (= temp136_181 #x0000000000000004))
(assert (= temp136_182 temp136_181))
(assert (= temp136_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp136_182)))
(assert (= temp136_184 #x0000000000000005))
(assert (= temp136_185 temp136_184))
(assert (= temp136_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp136_185)))
(assert (= temp136_187 #x0000000000000000))
(assert (= temp136_188
   (ite (bvslt var1180714 temp136_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp136_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp136_188)))
(assert (= var1191831 temp136_189))
(assert (bvslt (ite (bvslt var1180714 temp136_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp136_190 #x0000000000000001))
(assert (= var1180714 temp136_190))
(assert (= temp136_192 var1180714))
(assert (= temp136_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp136_192)))
(assert (= temp136_191 temp136_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp136_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp136_194 #x0000000000000001))
(assert (= var1191836 temp136_194))
(assert (= temp136_195 #x0000000000000000))
(assert (= var1179826 temp136_195))
(assert (= temp136_197 var1179826))
(assert (= temp136_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp136_197)))
(assert (= temp136_196 temp136_198))
(assert (= temp136_199 #x0000000000000002))
(assert (= var1586025 temp136_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp136_200 #x0000000000000001))
(assert (= var1191993 temp136_200))
(assert (= temp136_201 #x0000000000000001))
(assert (= var2700303 temp136_201))
(assert (= temp136_202 #x0000000000000001))
(assert (= var2962447 temp136_202))
(assert (= temp136_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp136_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp136_204 #x0000000000000001))
(assert (= var211058 temp136_204))
(assert (= temp136_205 #x0000000000000001))
(assert (= var211188 temp136_205))
(assert (= var3879401 var211188))
(assert (= temp136_206 #x0000000000000000))
(assert (= var3866802 temp136_206))
(assert (= temp136_207 #x0000000000000000))
(assert (= temp136_208
   (ite (bvslt var3866802 temp136_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp136_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp136_208)))
(assert (= var3879420 temp136_209))
(assert (bvslt (ite (bvslt var3866802 temp136_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp136_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp136_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp136_211 #x0000000000000001))
(assert (= var3879421 temp136_211))
(assert (= temp136_212 #x0000000000000000))
(assert (= var4079423 temp136_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp136_213 #x0000000000000002))
(assert (= var4208259 temp136_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp136_214 #x0000000000000000))
(assert (= var4273820 temp136_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp136_216 #xffffffffffffffff))
(assert (= temp136_215 temp136_216))
(assert (= temp136_217 #x0000000000000001))
(assert (= var197674 temp136_217))
(assert (= temp136_218 #x0000000000000000))
(assert (= temp136_219
   (ite (bvslt var197674 temp136_218)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp136_220 (select ARGNAME_input_NAMEEND_DIMSIZE temp136_219)))
(assert (= var211595 temp136_220))
(assert (bvslt (ite (bvslt var197674 temp136_218)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp136_221 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp136_221) #x0000000000000001 #x0000000000000000)))
(assert (= temp136_222 #x0000000000000001))
(assert (= var211596 temp136_222))
(assert (= temp136_224 #xffffffffffffffff))
(assert (= temp136_223 temp136_224))
(assert (= temp136_225 #x0000000000000001))
(assert (= var211058 temp136_225))
(model-add temp136_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp136_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp136_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp136_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





