(declare-fun temp658_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp658_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp658_3 () (_ BitVec 64))
(declare-fun temp658_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp658_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp658_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp658_7 () (_ BitVec 64))
(declare-fun temp658_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp658_9 () (_ BitVec 64))
(declare-fun temp658_10 () (_ BitVec 64))
(declare-fun temp658_11 () (_ BitVec 64))
(declare-fun temp658_12 () (_ BitVec 64))
(declare-fun temp658_13 () (_ BitVec 64))
(declare-fun temp658_14 () (_ BitVec 64))
(declare-fun temp658_15 () (_ BitVec 64))
(declare-fun temp658_16 () (_ BitVec 64))
(declare-fun temp658_17 () (_ BitVec 64))
(declare-fun temp658_18 () (_ BitVec 64))
(declare-fun temp658_19 () (_ BitVec 64))
(declare-fun temp658_20 () (_ BitVec 64))
(declare-fun temp658_21 () (_ BitVec 64))
(declare-fun temp658_22 () (_ BitVec 64))
(declare-fun temp658_23 () (_ BitVec 64))
(declare-fun temp658_24 () (_ BitVec 64))
(declare-fun temp658_25 () (_ BitVec 64))
(declare-fun temp658_26 () (_ BitVec 64))
(declare-fun temp658_27 () (_ BitVec 64))
(declare-fun temp658_28 () (_ BitVec 64))
(declare-fun temp658_29 () (_ BitVec 64))
(declare-fun temp658_30 () (_ BitVec 64))
(declare-fun temp658_31 () (_ BitVec 64))
(declare-fun temp658_32 () (_ BitVec 64))
(declare-fun temp658_33 () (_ BitVec 64))
(declare-fun temp658_34 () (_ BitVec 64))
(declare-fun temp658_35 () (_ BitVec 64))
(declare-fun temp658_36 () (_ BitVec 64))
(declare-fun temp658_37 () (_ BitVec 64))
(declare-fun temp658_38 () (_ BitVec 64))
(declare-fun temp658_39 () (_ BitVec 64))
(declare-fun temp658_40 () (_ BitVec 64))
(declare-fun temp658_41 () (_ BitVec 64))
(declare-fun temp658_42 () (_ BitVec 64))
(declare-fun temp658_43 () (_ BitVec 64))
(declare-fun temp658_44 () (_ BitVec 64))
(declare-fun temp658_45 () (_ BitVec 64))
(declare-fun temp658_46 () (_ BitVec 64))
(declare-fun temp658_47 () (_ BitVec 64))
(declare-fun temp658_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp658_49 () (_ BitVec 64))
(declare-fun temp658_50 () (_ BitVec 64))
(declare-fun temp658_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp658_52 () (_ BitVec 64))
(declare-fun temp658_53 () (_ BitVec 64))
(declare-fun temp658_54 () (_ BitVec 64))
(declare-fun temp658_55 () (_ BitVec 64))
(declare-fun temp658_56 () (_ BitVec 64))
(declare-fun temp658_57 () (_ BitVec 64))
(declare-fun temp658_58 () (_ BitVec 64))
(declare-fun temp658_59 () (_ BitVec 64))
(declare-fun temp658_60 () (_ BitVec 64))
(declare-fun temp658_61 () (_ BitVec 64))
(declare-fun temp658_62 () (_ BitVec 64))
(declare-fun temp658_63 () (_ BitVec 64))
(declare-fun temp658_64 () (_ BitVec 64))
(declare-fun temp658_65 () (_ BitVec 64))
(declare-fun temp658_66 () (_ BitVec 64))
(declare-fun temp658_67 () (_ BitVec 64))
(declare-fun temp658_68 () (_ BitVec 64))
(declare-fun temp658_69 () (_ BitVec 64))
(declare-fun temp658_70 () (_ BitVec 64))
(declare-fun temp658_71 () (_ BitVec 64))
(declare-fun temp658_72 () (_ BitVec 64))
(declare-fun temp658_73 () (_ BitVec 64))
(declare-fun temp658_74 () (_ BitVec 64))
(declare-fun temp658_75 () (_ BitVec 64))
(declare-fun temp658_76 () (_ BitVec 64))
(declare-fun temp658_77 () (_ BitVec 64))
(declare-fun temp658_78 () (_ BitVec 64))
(declare-fun temp658_79 () (_ BitVec 64))
(declare-fun temp658_80 () (_ BitVec 64))
(declare-fun temp658_81 () (_ BitVec 64))
(declare-fun temp658_82 () (_ BitVec 64))
(declare-fun temp658_83 () (_ BitVec 64))
(declare-fun temp658_84 () (_ BitVec 64))
(declare-fun temp658_85 () (_ BitVec 64))
(declare-fun temp658_86 () (_ BitVec 64))
(declare-fun temp658_87 () (_ BitVec 64))
(declare-fun temp658_88 () (_ BitVec 64))
(declare-fun temp658_89 () (_ BitVec 64))
(declare-fun temp658_90 () (_ BitVec 64))
(declare-fun temp658_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp658_92 () (_ BitVec 64))
(declare-fun temp658_93 () (_ BitVec 64))
(declare-fun temp658_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp658_95 () (_ BitVec 64))
(declare-fun temp658_96 () (_ BitVec 64))
(declare-fun temp658_97 () (_ BitVec 64))
(declare-fun temp658_98 () (_ BitVec 64))
(declare-fun temp658_99 () (_ BitVec 64))
(declare-fun temp658_100 () (_ BitVec 64))
(declare-fun temp658_101 () (_ BitVec 64))
(declare-fun temp658_102 () (_ BitVec 64))
(declare-fun temp658_103 () (_ BitVec 64))
(declare-fun temp658_104 () (_ BitVec 64))
(declare-fun temp658_105 () (_ BitVec 64))
(declare-fun temp658_106 () (_ BitVec 64))
(declare-fun temp658_107 () (_ BitVec 64))
(declare-fun temp658_108 () (_ BitVec 64))
(declare-fun temp658_109 () (_ BitVec 64))
(declare-fun temp658_110 () (_ BitVec 64))
(declare-fun temp658_111 () (_ BitVec 64))
(declare-fun temp658_112 () (_ BitVec 64))
(declare-fun temp658_113 () (_ BitVec 64))
(declare-fun temp658_114 () (_ BitVec 64))
(declare-fun temp658_115 () (_ BitVec 64))
(declare-fun temp658_116 () (_ BitVec 64))
(declare-fun temp658_117 () (_ BitVec 64))
(declare-fun temp658_118 () (_ BitVec 64))
(declare-fun temp658_119 () (_ BitVec 64))
(declare-fun temp658_120 () (_ BitVec 64))
(declare-fun temp658_121 () (_ BitVec 64))
(declare-fun temp658_122 () (_ BitVec 64))
(declare-fun temp658_123 () (_ BitVec 64))
(declare-fun temp658_124 () (_ BitVec 64))
(declare-fun temp658_125 () (_ BitVec 64))
(declare-fun temp658_126 () (_ BitVec 64))
(declare-fun temp658_127 () (_ BitVec 64))
(declare-fun temp658_128 () (_ BitVec 64))
(declare-fun temp658_129 () (_ BitVec 64))
(declare-fun temp658_130 () (_ BitVec 64))
(declare-fun temp658_131 () (_ BitVec 64))
(declare-fun temp658_132 () (_ BitVec 64))
(declare-fun temp658_133 () (_ BitVec 64))
(declare-fun temp658_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp658_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp658_136 () (_ BitVec 64))
(declare-fun temp658_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp658_138 () (_ BitVec 64))
(declare-fun temp658_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp658_140 () (_ BitVec 64))
(declare-fun temp658_141 () (_ BitVec 64))
(declare-fun temp658_142 () (_ BitVec 64))
(declare-fun temp658_143 () (_ BitVec 64))
(declare-fun temp658_144 () (_ BitVec 64))
(declare-fun temp658_145 () (_ BitVec 64))
(declare-fun temp658_146 () (_ BitVec 64))
(declare-fun temp658_147 () (_ BitVec 64))
(declare-fun temp658_148 () (_ BitVec 64))
(declare-fun temp658_149 () (_ BitVec 64))
(declare-fun temp658_150 () (_ BitVec 64))
(declare-fun temp658_151 () (_ BitVec 64))
(declare-fun temp658_152 () (_ BitVec 64))
(declare-fun temp658_153 () (_ BitVec 64))
(declare-fun temp658_154 () (_ BitVec 64))
(declare-fun temp658_155 () (_ BitVec 64))
(declare-fun temp658_157 () (_ BitVec 64))
(declare-fun temp658_158 () (_ BitVec 64))
(declare-fun temp658_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp658_159 () (_ BitVec 64))
(declare-fun temp658_160 () (_ BitVec 64))
(declare-fun temp658_162 () (_ BitVec 64))
(declare-fun temp658_163 () (_ BitVec 64))
(declare-fun temp658_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp658_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp658_165 () (_ BitVec 64))
(declare-fun temp658_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp658_167 () (_ BitVec 64))
(declare-fun temp658_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp658_169 () (_ BitVec 64))
(declare-fun temp658_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp658_171 () (_ BitVec 64))
(declare-fun temp658_172 () (_ BitVec 64))
(declare-fun temp658_173 () (_ BitVec 64))
(declare-fun temp658_174 () (_ BitVec 64))
(declare-fun temp658_175 () (_ BitVec 64))
(declare-fun temp658_176 () (_ BitVec 64))
(declare-fun temp658_177 () (_ BitVec 64))
(declare-fun temp658_178 () (_ BitVec 64))
(declare-fun temp658_179 () (_ BitVec 64))
(declare-fun temp658_180 () (_ BitVec 64))
(declare-fun temp658_181 () (_ BitVec 64))
(declare-fun temp658_182 () (_ BitVec 64))
(declare-fun temp658_183 () (_ BitVec 64))
(declare-fun temp658_184 () (_ BitVec 64))
(declare-fun temp658_185 () (_ BitVec 64))
(declare-fun temp658_186 () (_ BitVec 64))
(declare-fun temp658_187 () (_ BitVec 64))
(declare-fun temp658_188 () (_ BitVec 64))
(declare-fun temp658_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp658_190 () (_ BitVec 64))
(declare-fun temp658_192 () (_ BitVec 64))
(declare-fun temp658_193 () (_ BitVec 64))
(declare-fun temp658_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp658_194 () (_ BitVec 64))
(declare-fun temp658_195 () (_ BitVec 64))
(declare-fun temp658_197 () (_ BitVec 64))
(declare-fun temp658_198 () (_ BitVec 64))
(declare-fun temp658_196 () (_ BitVec 64))
(declare-fun temp658_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp658_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp658_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp658_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp658_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp658_204 () (_ BitVec 64))
(declare-fun temp658_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp658_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp658_207 () (_ BitVec 64))
(declare-fun temp658_208 () (_ BitVec 64))
(declare-fun temp658_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp658_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp658_211 () (_ BitVec 64))
(declare-fun temp658_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp658_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp658_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4796816 () (_ BitVec 64))
(declare-fun var211494 () (_ BitVec 64))
(declare-fun temp658_215 () (_ BitVec 64))
(declare-fun var211495 () (_ BitVec 64))
(declare-fun temp658_216 () (_ BitVec 64))
(assert (= temp658_1 #x0000000000000001))
(assert (= var77203 temp658_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp658_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp658_2)))
(assert (= temp658_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp658_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp658_4 #x0000000000000000))
(assert (= var210941 temp658_4))
(assert (= temp658_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp658_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp658_6 #x0000000000000000))
(assert (= var210986 temp658_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp658_7 #x0000000000000000))
(assert (= temp658_8 temp658_7))
(assert (= temp658_9 (select ARGNAME_padding_NAMEEND_VAL temp658_8)))
(assert (= temp658_10 #x0000000000000001))
(assert (= temp658_11 temp658_10))
(assert (= temp658_12 (select ARGNAME_padding_NAMEEND_VAL temp658_11)))
(assert (= temp658_13 #x0000000000000002))
(assert (= temp658_14 temp658_13))
(assert (= temp658_15 (select ARGNAME_padding_NAMEEND_VAL temp658_14)))
(assert (= temp658_16 #x0000000000000003))
(assert (= temp658_17 temp658_16))
(assert (= temp658_18 (select ARGNAME_padding_NAMEEND_VAL temp658_17)))
(assert (= temp658_19 #x0000000000000004))
(assert (= temp658_20 temp658_19))
(assert (= temp658_21 (select ARGNAME_padding_NAMEEND_VAL temp658_20)))
(assert (= temp658_22 #x0000000000000005))
(assert (= temp658_23 temp658_22))
(assert (= temp658_24 (select ARGNAME_padding_NAMEEND_VAL temp658_23)))
(assert (= temp658_25 #x0000000000000000))
(assert (= temp658_26 #x0000000000000000))
(assert (= temp658_27 temp658_26))
(assert (= temp658_28 (select ARGNAME_padding_NAMEEND_VAL temp658_27)))
(assert (= temp658_29 #x0000000000000000))
(assert (= temp658_30 #x0000000000000001))
(assert (= temp658_31 temp658_30))
(assert (= temp658_32 (select ARGNAME_padding_NAMEEND_VAL temp658_31)))
(assert (= temp658_33 #x0000000000000000))
(assert (= temp658_34 #x0000000000000002))
(assert (= temp658_35 temp658_34))
(assert (= temp658_36 (select ARGNAME_padding_NAMEEND_VAL temp658_35)))
(assert (= temp658_37 #x0000000000000000))
(assert (= temp658_38 #x0000000000000003))
(assert (= temp658_39 temp658_38))
(assert (= temp658_40 (select ARGNAME_padding_NAMEEND_VAL temp658_39)))
(assert (= temp658_41 #x0000000000000000))
(assert (= temp658_42 #x0000000000000004))
(assert (= temp658_43 temp658_42))
(assert (= temp658_44 (select ARGNAME_padding_NAMEEND_VAL temp658_43)))
(assert (= temp658_45 #x0000000000000000))
(assert (= temp658_46 #x0000000000000005))
(assert (= temp658_47 temp658_46))
(assert (= temp658_48 (select ARGNAME_padding_NAMEEND_VAL temp658_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp658_28 temp658_25)
             (bvslt temp658_32 temp658_29)
             (bvslt temp658_36 temp658_33)
             (bvslt temp658_40 temp658_37)
             (bvslt temp658_44 temp658_41)
             (bvslt temp658_48 temp658_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp658_49 #x0000000000000000))
(assert (= var1191714 temp658_49))
(assert (= temp658_50 #x0000000000000000))
(assert (= temp658_51 temp658_50))
(assert (= temp658_52 (select ARGNAME_output_padding_NAMEEND_VAL temp658_51)))
(assert (= temp658_53 #x0000000000000001))
(assert (= temp658_54 temp658_53))
(assert (= temp658_55 (select ARGNAME_output_padding_NAMEEND_VAL temp658_54)))
(assert (= temp658_56 #x0000000000000002))
(assert (= temp658_57 temp658_56))
(assert (= temp658_58 (select ARGNAME_output_padding_NAMEEND_VAL temp658_57)))
(assert (= temp658_59 #x0000000000000003))
(assert (= temp658_60 temp658_59))
(assert (= temp658_61 (select ARGNAME_output_padding_NAMEEND_VAL temp658_60)))
(assert (= temp658_62 #x0000000000000004))
(assert (= temp658_63 temp658_62))
(assert (= temp658_64 (select ARGNAME_output_padding_NAMEEND_VAL temp658_63)))
(assert (= temp658_65 #x0000000000000005))
(assert (= temp658_66 temp658_65))
(assert (= temp658_67 (select ARGNAME_output_padding_NAMEEND_VAL temp658_66)))
(assert (= temp658_68 #x0000000000000000))
(assert (= temp658_69 #x0000000000000000))
(assert (= temp658_70 temp658_69))
(assert (= temp658_71 (select ARGNAME_output_padding_NAMEEND_VAL temp658_70)))
(assert (= temp658_72 #x0000000000000000))
(assert (= temp658_73 #x0000000000000001))
(assert (= temp658_74 temp658_73))
(assert (= temp658_75 (select ARGNAME_output_padding_NAMEEND_VAL temp658_74)))
(assert (= temp658_76 #x0000000000000000))
(assert (= temp658_77 #x0000000000000002))
(assert (= temp658_78 temp658_77))
(assert (= temp658_79 (select ARGNAME_output_padding_NAMEEND_VAL temp658_78)))
(assert (= temp658_80 #x0000000000000000))
(assert (= temp658_81 #x0000000000000003))
(assert (= temp658_82 temp658_81))
(assert (= temp658_83 (select ARGNAME_output_padding_NAMEEND_VAL temp658_82)))
(assert (= temp658_84 #x0000000000000000))
(assert (= temp658_85 #x0000000000000004))
(assert (= temp658_86 temp658_85))
(assert (= temp658_87 (select ARGNAME_output_padding_NAMEEND_VAL temp658_86)))
(assert (= temp658_88 #x0000000000000000))
(assert (= temp658_89 #x0000000000000005))
(assert (= temp658_90 temp658_89))
(assert (= temp658_91 (select ARGNAME_output_padding_NAMEEND_VAL temp658_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp658_71 temp658_68)
             (bvslt temp658_75 temp658_72)
             (bvslt temp658_79 temp658_76)
             (bvslt temp658_83 temp658_80)
             (bvslt temp658_87 temp658_84)
             (bvslt temp658_91 temp658_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp658_92 #x0000000000000000))
(assert (= var1191725 temp658_92))
(assert (= temp658_93 #x0000000000000000))
(assert (= temp658_94 temp658_93))
(assert (= temp658_95 (select ARGNAME_stride_NAMEEND_VAL temp658_94)))
(assert (= temp658_96 #x0000000000000001))
(assert (= temp658_97 temp658_96))
(assert (= temp658_98 (select ARGNAME_stride_NAMEEND_VAL temp658_97)))
(assert (= temp658_99 #x0000000000000002))
(assert (= temp658_100 temp658_99))
(assert (= temp658_101 (select ARGNAME_stride_NAMEEND_VAL temp658_100)))
(assert (= temp658_102 #x0000000000000003))
(assert (= temp658_103 temp658_102))
(assert (= temp658_104 (select ARGNAME_stride_NAMEEND_VAL temp658_103)))
(assert (= temp658_105 #x0000000000000004))
(assert (= temp658_106 temp658_105))
(assert (= temp658_107 (select ARGNAME_stride_NAMEEND_VAL temp658_106)))
(assert (= temp658_108 #x0000000000000005))
(assert (= temp658_109 temp658_108))
(assert (= temp658_110 (select ARGNAME_stride_NAMEEND_VAL temp658_109)))
(assert (= temp658_111 #x0000000000000000))
(assert (= temp658_112 #x0000000000000000))
(assert (= temp658_113 temp658_112))
(assert (= temp658_114 (select ARGNAME_stride_NAMEEND_VAL temp658_113)))
(assert (= temp658_115 #x0000000000000000))
(assert (= temp658_116 #x0000000000000001))
(assert (= temp658_117 temp658_116))
(assert (= temp658_118 (select ARGNAME_stride_NAMEEND_VAL temp658_117)))
(assert (= temp658_119 #x0000000000000000))
(assert (= temp658_120 #x0000000000000002))
(assert (= temp658_121 temp658_120))
(assert (= temp658_122 (select ARGNAME_stride_NAMEEND_VAL temp658_121)))
(assert (= temp658_123 #x0000000000000000))
(assert (= temp658_124 #x0000000000000003))
(assert (= temp658_125 temp658_124))
(assert (= temp658_126 (select ARGNAME_stride_NAMEEND_VAL temp658_125)))
(assert (= temp658_127 #x0000000000000000))
(assert (= temp658_128 #x0000000000000004))
(assert (= temp658_129 temp658_128))
(assert (= temp658_130 (select ARGNAME_stride_NAMEEND_VAL temp658_129)))
(assert (= temp658_131 #x0000000000000000))
(assert (= temp658_132 #x0000000000000005))
(assert (= temp658_133 temp658_132))
(assert (= temp658_134 (select ARGNAME_stride_NAMEEND_VAL temp658_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp658_114 temp658_111)
             (bvsle temp658_118 temp658_115)
             (bvsle temp658_122 temp658_119)
             (bvsle temp658_126 temp658_123)
             (bvsle temp658_130 temp658_127)
             (bvsle temp658_134 temp658_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp658_135 #x0000000000000000))
(assert (= var1191735 temp658_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp658_136 #x0000000000000001))
(assert (= var1191747 temp658_136))
(assert (= temp658_137 #x0000000000000000))
(assert (= var1179826 temp658_137))
(assert (= temp658_138 #x0000000000000000))
(assert (= temp658_139 temp658_138))
(assert (= temp658_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp658_139)))
(assert (= temp658_141 #x0000000000000001))
(assert (= temp658_142 temp658_141))
(assert (= temp658_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp658_142)))
(assert (= temp658_144 #x0000000000000002))
(assert (= temp658_145 temp658_144))
(assert (= temp658_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp658_145)))
(assert (= temp658_147 #x0000000000000003))
(assert (= temp658_148 temp658_147))
(assert (= temp658_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp658_148)))
(assert (= temp658_150 #x0000000000000004))
(assert (= temp658_151 temp658_150))
(assert (= temp658_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp658_151)))
(assert (= temp658_153 #x0000000000000005))
(assert (= temp658_154 temp658_153))
(assert (= temp658_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp658_154)))
(assert (= temp658_157 var1179826))
(assert (= temp658_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp658_157)))
(assert (= temp658_156 temp658_158))
(assert (= var1191780
   (ite (bvslt temp658_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp658_159 #x0000000000000000))
(assert (= var1191780 temp658_159))
(assert (= temp658_160 #x0000000000000000))
(assert (= var1179826 temp658_160))
(assert (= temp658_162 var1179826))
(assert (= temp658_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp658_162)))
(assert (= temp658_161 temp658_163))
(assert (= var1191802 (bvsmod temp658_161 ARGNAME_groups_NAMEEND)))
(assert (= temp658_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp658_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp658_165 #x0000000000000001))
(assert (= var1191803 temp658_165))
(assert (= temp658_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp658_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp658_167 #x0000000000000001))
(assert (= var1191823 temp658_167))
(assert (= temp658_168 #x0000000000000001))
(assert (= var1180714 temp658_168))
(assert (= temp658_169 #x0000000000000000))
(assert (= temp658_170 temp658_169))
(assert (= temp658_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp658_170)))
(assert (= temp658_172 #x0000000000000001))
(assert (= temp658_173 temp658_172))
(assert (= temp658_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp658_173)))
(assert (= temp658_175 #x0000000000000002))
(assert (= temp658_176 temp658_175))
(assert (= temp658_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp658_176)))
(assert (= temp658_178 #x0000000000000003))
(assert (= temp658_179 temp658_178))
(assert (= temp658_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp658_179)))
(assert (= temp658_181 #x0000000000000004))
(assert (= temp658_182 temp658_181))
(assert (= temp658_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp658_182)))
(assert (= temp658_184 #x0000000000000005))
(assert (= temp658_185 temp658_184))
(assert (= temp658_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp658_185)))
(assert (= temp658_187 #x0000000000000000))
(assert (= temp658_188
   (ite (bvslt var1180714 temp658_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp658_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp658_188)))
(assert (= var1191831 temp658_189))
(assert (bvslt (ite (bvslt var1180714 temp658_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp658_190 #x0000000000000001))
(assert (= var1180714 temp658_190))
(assert (= temp658_192 var1180714))
(assert (= temp658_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp658_192)))
(assert (= temp658_191 temp658_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp658_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp658_194 #x0000000000000001))
(assert (= var1191836 temp658_194))
(assert (= temp658_195 #x0000000000000000))
(assert (= var1179826 temp658_195))
(assert (= temp658_197 var1179826))
(assert (= temp658_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp658_197)))
(assert (= temp658_196 temp658_198))
(assert (= temp658_199 #x0000000000000002))
(assert (= var1586025 temp658_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp658_200 #x0000000000000001))
(assert (= var1191993 temp658_200))
(assert (= temp658_201 #x0000000000000001))
(assert (= var2700303 temp658_201))
(assert (= temp658_202 #x0000000000000001))
(assert (= var2962447 temp658_202))
(assert (= temp658_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp658_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp658_204 #x0000000000000001))
(assert (= var211058 temp658_204))
(assert (= temp658_205 #x0000000000000001))
(assert (= var211188 temp658_205))
(assert (= var3879401 var211188))
(assert (= temp658_206 #x0000000000000000))
(assert (= var3866802 temp658_206))
(assert (= temp658_207 #x0000000000000000))
(assert (= temp658_208
   (ite (bvslt var3866802 temp658_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp658_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp658_208)))
(assert (= var3879420 temp658_209))
(assert (bvslt (ite (bvslt var3866802 temp658_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp658_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp658_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp658_211 #x0000000000000001))
(assert (= var3879421 temp658_211))
(assert (= temp658_212 #x0000000000000000))
(assert (= var4079423 temp658_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp658_213 #x0000000000000002))
(assert (= var4208259 temp658_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp658_214 #x0000000000000000))
(assert (= var4273820 temp658_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4796816 var211201))
(assert (= var211494 var210913))
(assert (= temp658_215 #x0000000000000000))
(assert (= var211495
   (ite (distinct var211494 temp658_215) #x0000000000000001 #x0000000000000000)))
(assert (= temp658_216 #x0000000000000001))
(assert (= var211058 temp658_216))
(model-add temp658_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp658_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp658_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp658_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))



