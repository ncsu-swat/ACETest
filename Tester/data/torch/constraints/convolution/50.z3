(declare-fun temp66_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp66_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp66_3 () (_ BitVec 64))
(declare-fun temp66_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp66_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp66_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp66_7 () (_ BitVec 64))
(declare-fun temp66_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp66_9 () (_ BitVec 64))
(declare-fun temp66_10 () (_ BitVec 64))
(declare-fun temp66_11 () (_ BitVec 64))
(declare-fun temp66_12 () (_ BitVec 64))
(declare-fun temp66_13 () (_ BitVec 64))
(declare-fun temp66_14 () (_ BitVec 64))
(declare-fun temp66_15 () (_ BitVec 64))
(declare-fun temp66_16 () (_ BitVec 64))
(declare-fun temp66_17 () (_ BitVec 64))
(declare-fun temp66_18 () (_ BitVec 64))
(declare-fun temp66_19 () (_ BitVec 64))
(declare-fun temp66_20 () (_ BitVec 64))
(declare-fun temp66_21 () (_ BitVec 64))
(declare-fun temp66_22 () (_ BitVec 64))
(declare-fun temp66_23 () (_ BitVec 64))
(declare-fun temp66_24 () (_ BitVec 64))
(declare-fun temp66_25 () (_ BitVec 64))
(declare-fun temp66_26 () (_ BitVec 64))
(declare-fun temp66_27 () (_ BitVec 64))
(declare-fun temp66_28 () (_ BitVec 64))
(declare-fun temp66_29 () (_ BitVec 64))
(declare-fun temp66_30 () (_ BitVec 64))
(declare-fun temp66_31 () (_ BitVec 64))
(declare-fun temp66_32 () (_ BitVec 64))
(declare-fun temp66_33 () (_ BitVec 64))
(declare-fun temp66_34 () (_ BitVec 64))
(declare-fun temp66_35 () (_ BitVec 64))
(declare-fun temp66_36 () (_ BitVec 64))
(declare-fun temp66_37 () (_ BitVec 64))
(declare-fun temp66_38 () (_ BitVec 64))
(declare-fun temp66_39 () (_ BitVec 64))
(declare-fun temp66_40 () (_ BitVec 64))
(declare-fun temp66_41 () (_ BitVec 64))
(declare-fun temp66_42 () (_ BitVec 64))
(declare-fun temp66_43 () (_ BitVec 64))
(declare-fun temp66_44 () (_ BitVec 64))
(declare-fun temp66_45 () (_ BitVec 64))
(declare-fun temp66_46 () (_ BitVec 64))
(declare-fun temp66_47 () (_ BitVec 64))
(declare-fun temp66_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp66_49 () (_ BitVec 64))
(declare-fun temp66_50 () (_ BitVec 64))
(declare-fun temp66_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp66_52 () (_ BitVec 64))
(declare-fun temp66_53 () (_ BitVec 64))
(declare-fun temp66_54 () (_ BitVec 64))
(declare-fun temp66_55 () (_ BitVec 64))
(declare-fun temp66_56 () (_ BitVec 64))
(declare-fun temp66_57 () (_ BitVec 64))
(declare-fun temp66_58 () (_ BitVec 64))
(declare-fun temp66_59 () (_ BitVec 64))
(declare-fun temp66_60 () (_ BitVec 64))
(declare-fun temp66_61 () (_ BitVec 64))
(declare-fun temp66_62 () (_ BitVec 64))
(declare-fun temp66_63 () (_ BitVec 64))
(declare-fun temp66_64 () (_ BitVec 64))
(declare-fun temp66_65 () (_ BitVec 64))
(declare-fun temp66_66 () (_ BitVec 64))
(declare-fun temp66_67 () (_ BitVec 64))
(declare-fun temp66_68 () (_ BitVec 64))
(declare-fun temp66_69 () (_ BitVec 64))
(declare-fun temp66_70 () (_ BitVec 64))
(declare-fun temp66_71 () (_ BitVec 64))
(declare-fun temp66_72 () (_ BitVec 64))
(declare-fun temp66_73 () (_ BitVec 64))
(declare-fun temp66_74 () (_ BitVec 64))
(declare-fun temp66_75 () (_ BitVec 64))
(declare-fun temp66_76 () (_ BitVec 64))
(declare-fun temp66_77 () (_ BitVec 64))
(declare-fun temp66_78 () (_ BitVec 64))
(declare-fun temp66_79 () (_ BitVec 64))
(declare-fun temp66_80 () (_ BitVec 64))
(declare-fun temp66_81 () (_ BitVec 64))
(declare-fun temp66_82 () (_ BitVec 64))
(declare-fun temp66_83 () (_ BitVec 64))
(declare-fun temp66_84 () (_ BitVec 64))
(declare-fun temp66_85 () (_ BitVec 64))
(declare-fun temp66_86 () (_ BitVec 64))
(declare-fun temp66_87 () (_ BitVec 64))
(declare-fun temp66_88 () (_ BitVec 64))
(declare-fun temp66_89 () (_ BitVec 64))
(declare-fun temp66_90 () (_ BitVec 64))
(declare-fun temp66_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp66_92 () (_ BitVec 64))
(declare-fun temp66_93 () (_ BitVec 64))
(declare-fun temp66_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp66_95 () (_ BitVec 64))
(declare-fun temp66_96 () (_ BitVec 64))
(declare-fun temp66_97 () (_ BitVec 64))
(declare-fun temp66_98 () (_ BitVec 64))
(declare-fun temp66_99 () (_ BitVec 64))
(declare-fun temp66_100 () (_ BitVec 64))
(declare-fun temp66_101 () (_ BitVec 64))
(declare-fun temp66_102 () (_ BitVec 64))
(declare-fun temp66_103 () (_ BitVec 64))
(declare-fun temp66_104 () (_ BitVec 64))
(declare-fun temp66_105 () (_ BitVec 64))
(declare-fun temp66_106 () (_ BitVec 64))
(declare-fun temp66_107 () (_ BitVec 64))
(declare-fun temp66_108 () (_ BitVec 64))
(declare-fun temp66_109 () (_ BitVec 64))
(declare-fun temp66_110 () (_ BitVec 64))
(declare-fun temp66_111 () (_ BitVec 64))
(declare-fun temp66_112 () (_ BitVec 64))
(declare-fun temp66_113 () (_ BitVec 64))
(declare-fun temp66_114 () (_ BitVec 64))
(declare-fun temp66_115 () (_ BitVec 64))
(declare-fun temp66_116 () (_ BitVec 64))
(declare-fun temp66_117 () (_ BitVec 64))
(declare-fun temp66_118 () (_ BitVec 64))
(declare-fun temp66_119 () (_ BitVec 64))
(declare-fun temp66_120 () (_ BitVec 64))
(declare-fun temp66_121 () (_ BitVec 64))
(declare-fun temp66_122 () (_ BitVec 64))
(declare-fun temp66_123 () (_ BitVec 64))
(declare-fun temp66_124 () (_ BitVec 64))
(declare-fun temp66_125 () (_ BitVec 64))
(declare-fun temp66_126 () (_ BitVec 64))
(declare-fun temp66_127 () (_ BitVec 64))
(declare-fun temp66_128 () (_ BitVec 64))
(declare-fun temp66_129 () (_ BitVec 64))
(declare-fun temp66_130 () (_ BitVec 64))
(declare-fun temp66_131 () (_ BitVec 64))
(declare-fun temp66_132 () (_ BitVec 64))
(declare-fun temp66_133 () (_ BitVec 64))
(declare-fun temp66_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp66_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp66_136 () (_ BitVec 64))
(declare-fun temp66_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp66_138 () (_ BitVec 64))
(declare-fun temp66_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp66_140 () (_ BitVec 64))
(declare-fun temp66_141 () (_ BitVec 64))
(declare-fun temp66_142 () (_ BitVec 64))
(declare-fun temp66_143 () (_ BitVec 64))
(declare-fun temp66_144 () (_ BitVec 64))
(declare-fun temp66_145 () (_ BitVec 64))
(declare-fun temp66_146 () (_ BitVec 64))
(declare-fun temp66_147 () (_ BitVec 64))
(declare-fun temp66_148 () (_ BitVec 64))
(declare-fun temp66_149 () (_ BitVec 64))
(declare-fun temp66_150 () (_ BitVec 64))
(declare-fun temp66_151 () (_ BitVec 64))
(declare-fun temp66_152 () (_ BitVec 64))
(declare-fun temp66_153 () (_ BitVec 64))
(declare-fun temp66_154 () (_ BitVec 64))
(declare-fun temp66_155 () (_ BitVec 64))
(declare-fun temp66_157 () (_ BitVec 64))
(declare-fun temp66_158 () (_ BitVec 64))
(declare-fun temp66_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp66_159 () (_ BitVec 64))
(declare-fun temp66_160 () (_ BitVec 64))
(declare-fun temp66_162 () (_ BitVec 64))
(declare-fun temp66_163 () (_ BitVec 64))
(declare-fun temp66_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp66_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp66_165 () (_ BitVec 64))
(declare-fun temp66_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp66_167 () (_ BitVec 64))
(declare-fun temp66_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp66_169 () (_ BitVec 64))
(declare-fun temp66_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp66_171 () (_ BitVec 64))
(declare-fun temp66_172 () (_ BitVec 64))
(declare-fun temp66_173 () (_ BitVec 64))
(declare-fun temp66_174 () (_ BitVec 64))
(declare-fun temp66_175 () (_ BitVec 64))
(declare-fun temp66_176 () (_ BitVec 64))
(declare-fun temp66_177 () (_ BitVec 64))
(declare-fun temp66_178 () (_ BitVec 64))
(declare-fun temp66_179 () (_ BitVec 64))
(declare-fun temp66_180 () (_ BitVec 64))
(declare-fun temp66_181 () (_ BitVec 64))
(declare-fun temp66_182 () (_ BitVec 64))
(declare-fun temp66_183 () (_ BitVec 64))
(declare-fun temp66_184 () (_ BitVec 64))
(declare-fun temp66_185 () (_ BitVec 64))
(declare-fun temp66_186 () (_ BitVec 64))
(declare-fun temp66_187 () (_ BitVec 64))
(declare-fun temp66_188 () (_ BitVec 64))
(declare-fun temp66_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp66_190 () (_ BitVec 64))
(declare-fun temp66_192 () (_ BitVec 64))
(declare-fun temp66_193 () (_ BitVec 64))
(declare-fun temp66_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp66_194 () (_ BitVec 64))
(declare-fun temp66_195 () (_ BitVec 64))
(declare-fun temp66_197 () (_ BitVec 64))
(declare-fun temp66_198 () (_ BitVec 64))
(declare-fun temp66_196 () (_ BitVec 64))
(declare-fun temp66_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp66_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp66_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp66_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp66_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp66_204 () (_ BitVec 64))
(declare-fun temp66_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp66_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp66_207 () (_ BitVec 64))
(declare-fun temp66_208 () (_ BitVec 64))
(declare-fun temp66_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp66_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp66_211 () (_ BitVec 64))
(declare-fun temp66_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp66_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp66_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4993424 () (_ BitVec 64))
(declare-fun var211494 () (_ BitVec 64))
(declare-fun temp66_215 () (_ BitVec 64))
(declare-fun var211495 () (_ BitVec 64))
(declare-fun temp66_217 () (_ BitVec 64))
(declare-fun temp66_216 () (_ BitVec 64))
(declare-fun temp66_218 () (_ BitVec 64))
(declare-fun var6950378 () (_ BitVec 64))
(declare-fun temp66_220 () (_ BitVec 64))
(declare-fun temp66_219 () (_ BitVec 64))
(declare-fun temp66_221 () (_ BitVec 64))
(assert (= temp66_1 #x0000000000000001))
(assert (= var77203 temp66_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp66_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp66_2)))
(assert (= temp66_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp66_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp66_4 #x0000000000000000))
(assert (= var210941 temp66_4))
(assert (= temp66_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp66_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp66_6 #x0000000000000000))
(assert (= var210986 temp66_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp66_7 #x0000000000000000))
(assert (= temp66_8 temp66_7))
(assert (= temp66_9 (select ARGNAME_padding_NAMEEND_VAL temp66_8)))
(assert (= temp66_10 #x0000000000000001))
(assert (= temp66_11 temp66_10))
(assert (= temp66_12 (select ARGNAME_padding_NAMEEND_VAL temp66_11)))
(assert (= temp66_13 #x0000000000000002))
(assert (= temp66_14 temp66_13))
(assert (= temp66_15 (select ARGNAME_padding_NAMEEND_VAL temp66_14)))
(assert (= temp66_16 #x0000000000000003))
(assert (= temp66_17 temp66_16))
(assert (= temp66_18 (select ARGNAME_padding_NAMEEND_VAL temp66_17)))
(assert (= temp66_19 #x0000000000000004))
(assert (= temp66_20 temp66_19))
(assert (= temp66_21 (select ARGNAME_padding_NAMEEND_VAL temp66_20)))
(assert (= temp66_22 #x0000000000000005))
(assert (= temp66_23 temp66_22))
(assert (= temp66_24 (select ARGNAME_padding_NAMEEND_VAL temp66_23)))
(assert (= temp66_25 #x0000000000000000))
(assert (= temp66_26 #x0000000000000000))
(assert (= temp66_27 temp66_26))
(assert (= temp66_28 (select ARGNAME_padding_NAMEEND_VAL temp66_27)))
(assert (= temp66_29 #x0000000000000000))
(assert (= temp66_30 #x0000000000000001))
(assert (= temp66_31 temp66_30))
(assert (= temp66_32 (select ARGNAME_padding_NAMEEND_VAL temp66_31)))
(assert (= temp66_33 #x0000000000000000))
(assert (= temp66_34 #x0000000000000002))
(assert (= temp66_35 temp66_34))
(assert (= temp66_36 (select ARGNAME_padding_NAMEEND_VAL temp66_35)))
(assert (= temp66_37 #x0000000000000000))
(assert (= temp66_38 #x0000000000000003))
(assert (= temp66_39 temp66_38))
(assert (= temp66_40 (select ARGNAME_padding_NAMEEND_VAL temp66_39)))
(assert (= temp66_41 #x0000000000000000))
(assert (= temp66_42 #x0000000000000004))
(assert (= temp66_43 temp66_42))
(assert (= temp66_44 (select ARGNAME_padding_NAMEEND_VAL temp66_43)))
(assert (= temp66_45 #x0000000000000000))
(assert (= temp66_46 #x0000000000000005))
(assert (= temp66_47 temp66_46))
(assert (= temp66_48 (select ARGNAME_padding_NAMEEND_VAL temp66_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp66_28 temp66_25)
             (bvslt temp66_32 temp66_29)
             (bvslt temp66_36 temp66_33)
             (bvslt temp66_40 temp66_37)
             (bvslt temp66_44 temp66_41)
             (bvslt temp66_48 temp66_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp66_49 #x0000000000000000))
(assert (= var1191714 temp66_49))
(assert (= temp66_50 #x0000000000000000))
(assert (= temp66_51 temp66_50))
(assert (= temp66_52 (select ARGNAME_output_padding_NAMEEND_VAL temp66_51)))
(assert (= temp66_53 #x0000000000000001))
(assert (= temp66_54 temp66_53))
(assert (= temp66_55 (select ARGNAME_output_padding_NAMEEND_VAL temp66_54)))
(assert (= temp66_56 #x0000000000000002))
(assert (= temp66_57 temp66_56))
(assert (= temp66_58 (select ARGNAME_output_padding_NAMEEND_VAL temp66_57)))
(assert (= temp66_59 #x0000000000000003))
(assert (= temp66_60 temp66_59))
(assert (= temp66_61 (select ARGNAME_output_padding_NAMEEND_VAL temp66_60)))
(assert (= temp66_62 #x0000000000000004))
(assert (= temp66_63 temp66_62))
(assert (= temp66_64 (select ARGNAME_output_padding_NAMEEND_VAL temp66_63)))
(assert (= temp66_65 #x0000000000000005))
(assert (= temp66_66 temp66_65))
(assert (= temp66_67 (select ARGNAME_output_padding_NAMEEND_VAL temp66_66)))
(assert (= temp66_68 #x0000000000000000))
(assert (= temp66_69 #x0000000000000000))
(assert (= temp66_70 temp66_69))
(assert (= temp66_71 (select ARGNAME_output_padding_NAMEEND_VAL temp66_70)))
(assert (= temp66_72 #x0000000000000000))
(assert (= temp66_73 #x0000000000000001))
(assert (= temp66_74 temp66_73))
(assert (= temp66_75 (select ARGNAME_output_padding_NAMEEND_VAL temp66_74)))
(assert (= temp66_76 #x0000000000000000))
(assert (= temp66_77 #x0000000000000002))
(assert (= temp66_78 temp66_77))
(assert (= temp66_79 (select ARGNAME_output_padding_NAMEEND_VAL temp66_78)))
(assert (= temp66_80 #x0000000000000000))
(assert (= temp66_81 #x0000000000000003))
(assert (= temp66_82 temp66_81))
(assert (= temp66_83 (select ARGNAME_output_padding_NAMEEND_VAL temp66_82)))
(assert (= temp66_84 #x0000000000000000))
(assert (= temp66_85 #x0000000000000004))
(assert (= temp66_86 temp66_85))
(assert (= temp66_87 (select ARGNAME_output_padding_NAMEEND_VAL temp66_86)))
(assert (= temp66_88 #x0000000000000000))
(assert (= temp66_89 #x0000000000000005))
(assert (= temp66_90 temp66_89))
(assert (= temp66_91 (select ARGNAME_output_padding_NAMEEND_VAL temp66_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp66_71 temp66_68)
             (bvslt temp66_75 temp66_72)
             (bvslt temp66_79 temp66_76)
             (bvslt temp66_83 temp66_80)
             (bvslt temp66_87 temp66_84)
             (bvslt temp66_91 temp66_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp66_92 #x0000000000000000))
(assert (= var1191725 temp66_92))
(assert (= temp66_93 #x0000000000000000))
(assert (= temp66_94 temp66_93))
(assert (= temp66_95 (select ARGNAME_stride_NAMEEND_VAL temp66_94)))
(assert (= temp66_96 #x0000000000000001))
(assert (= temp66_97 temp66_96))
(assert (= temp66_98 (select ARGNAME_stride_NAMEEND_VAL temp66_97)))
(assert (= temp66_99 #x0000000000000002))
(assert (= temp66_100 temp66_99))
(assert (= temp66_101 (select ARGNAME_stride_NAMEEND_VAL temp66_100)))
(assert (= temp66_102 #x0000000000000003))
(assert (= temp66_103 temp66_102))
(assert (= temp66_104 (select ARGNAME_stride_NAMEEND_VAL temp66_103)))
(assert (= temp66_105 #x0000000000000004))
(assert (= temp66_106 temp66_105))
(assert (= temp66_107 (select ARGNAME_stride_NAMEEND_VAL temp66_106)))
(assert (= temp66_108 #x0000000000000005))
(assert (= temp66_109 temp66_108))
(assert (= temp66_110 (select ARGNAME_stride_NAMEEND_VAL temp66_109)))
(assert (= temp66_111 #x0000000000000000))
(assert (= temp66_112 #x0000000000000000))
(assert (= temp66_113 temp66_112))
(assert (= temp66_114 (select ARGNAME_stride_NAMEEND_VAL temp66_113)))
(assert (= temp66_115 #x0000000000000000))
(assert (= temp66_116 #x0000000000000001))
(assert (= temp66_117 temp66_116))
(assert (= temp66_118 (select ARGNAME_stride_NAMEEND_VAL temp66_117)))
(assert (= temp66_119 #x0000000000000000))
(assert (= temp66_120 #x0000000000000002))
(assert (= temp66_121 temp66_120))
(assert (= temp66_122 (select ARGNAME_stride_NAMEEND_VAL temp66_121)))
(assert (= temp66_123 #x0000000000000000))
(assert (= temp66_124 #x0000000000000003))
(assert (= temp66_125 temp66_124))
(assert (= temp66_126 (select ARGNAME_stride_NAMEEND_VAL temp66_125)))
(assert (= temp66_127 #x0000000000000000))
(assert (= temp66_128 #x0000000000000004))
(assert (= temp66_129 temp66_128))
(assert (= temp66_130 (select ARGNAME_stride_NAMEEND_VAL temp66_129)))
(assert (= temp66_131 #x0000000000000000))
(assert (= temp66_132 #x0000000000000005))
(assert (= temp66_133 temp66_132))
(assert (= temp66_134 (select ARGNAME_stride_NAMEEND_VAL temp66_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp66_114 temp66_111)
             (bvsle temp66_118 temp66_115)
             (bvsle temp66_122 temp66_119)
             (bvsle temp66_126 temp66_123)
             (bvsle temp66_130 temp66_127)
             (bvsle temp66_134 temp66_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp66_135 #x0000000000000000))
(assert (= var1191735 temp66_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp66_136 #x0000000000000001))
(assert (= var1191747 temp66_136))
(assert (= temp66_137 #x0000000000000000))
(assert (= var1179826 temp66_137))
(assert (= temp66_138 #x0000000000000000))
(assert (= temp66_139 temp66_138))
(assert (= temp66_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp66_139)))
(assert (= temp66_141 #x0000000000000001))
(assert (= temp66_142 temp66_141))
(assert (= temp66_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp66_142)))
(assert (= temp66_144 #x0000000000000002))
(assert (= temp66_145 temp66_144))
(assert (= temp66_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp66_145)))
(assert (= temp66_147 #x0000000000000003))
(assert (= temp66_148 temp66_147))
(assert (= temp66_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp66_148)))
(assert (= temp66_150 #x0000000000000004))
(assert (= temp66_151 temp66_150))
(assert (= temp66_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp66_151)))
(assert (= temp66_153 #x0000000000000005))
(assert (= temp66_154 temp66_153))
(assert (= temp66_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp66_154)))
(assert (= temp66_157 var1179826))
(assert (= temp66_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp66_157)))
(assert (= temp66_156 temp66_158))
(assert (= var1191780
   (ite (bvslt temp66_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp66_159 #x0000000000000000))
(assert (= var1191780 temp66_159))
(assert (= temp66_160 #x0000000000000000))
(assert (= var1179826 temp66_160))
(assert (= temp66_162 var1179826))
(assert (= temp66_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp66_162)))
(assert (= temp66_161 temp66_163))
(assert (= var1191802 (bvsmod temp66_161 ARGNAME_groups_NAMEEND)))
(assert (= temp66_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp66_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp66_165 #x0000000000000001))
(assert (= var1191803 temp66_165))
(assert (= temp66_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp66_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp66_167 #x0000000000000001))
(assert (= var1191823 temp66_167))
(assert (= temp66_168 #x0000000000000001))
(assert (= var1180714 temp66_168))
(assert (= temp66_169 #x0000000000000000))
(assert (= temp66_170 temp66_169))
(assert (= temp66_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp66_170)))
(assert (= temp66_172 #x0000000000000001))
(assert (= temp66_173 temp66_172))
(assert (= temp66_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp66_173)))
(assert (= temp66_175 #x0000000000000002))
(assert (= temp66_176 temp66_175))
(assert (= temp66_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp66_176)))
(assert (= temp66_178 #x0000000000000003))
(assert (= temp66_179 temp66_178))
(assert (= temp66_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp66_179)))
(assert (= temp66_181 #x0000000000000004))
(assert (= temp66_182 temp66_181))
(assert (= temp66_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp66_182)))
(assert (= temp66_184 #x0000000000000005))
(assert (= temp66_185 temp66_184))
(assert (= temp66_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp66_185)))
(assert (= temp66_187 #x0000000000000000))
(assert (= temp66_188
   (ite (bvslt var1180714 temp66_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp66_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp66_188)))
(assert (= var1191831 temp66_189))
(assert (bvslt (ite (bvslt var1180714 temp66_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp66_190 #x0000000000000001))
(assert (= var1180714 temp66_190))
(assert (= temp66_192 var1180714))
(assert (= temp66_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp66_192)))
(assert (= temp66_191 temp66_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp66_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp66_194 #x0000000000000001))
(assert (= var1191836 temp66_194))
(assert (= temp66_195 #x0000000000000000))
(assert (= var1179826 temp66_195))
(assert (= temp66_197 var1179826))
(assert (= temp66_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp66_197)))
(assert (= temp66_196 temp66_198))
(assert (= temp66_199 #x0000000000000002))
(assert (= var1586025 temp66_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp66_200 #x0000000000000001))
(assert (= var1191993 temp66_200))
(assert (= temp66_201 #x0000000000000001))
(assert (= var2700303 temp66_201))
(assert (= temp66_202 #x0000000000000001))
(assert (= var2962447 temp66_202))
(assert (= temp66_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp66_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp66_204 #x0000000000000001))
(assert (= var211058 temp66_204))
(assert (= temp66_205 #x0000000000000001))
(assert (= var211188 temp66_205))
(assert (= var3879401 var211188))
(assert (= temp66_206 #x0000000000000000))
(assert (= var3866802 temp66_206))
(assert (= temp66_207 #x0000000000000000))
(assert (= temp66_208
   (ite (bvslt var3866802 temp66_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp66_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp66_208)))
(assert (= var3879420 temp66_209))
(assert (bvslt (ite (bvslt var3866802 temp66_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp66_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp66_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp66_211 #x0000000000000001))
(assert (= var3879421 temp66_211))
(assert (= temp66_212 #x0000000000000000))
(assert (= var4079423 temp66_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp66_213 #x0000000000000002))
(assert (= var4208259 temp66_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp66_214 #x0000000000000000))
(assert (= var4273820 temp66_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4993424 var211201))
(assert (= var211494 var210913))
(assert (= temp66_215 #x0000000000000000))
(assert (= var211495
   (ite (distinct var211494 temp66_215) #x0000000000000001 #x0000000000000000)))
(assert (= temp66_217 #x0000000000000001))
(assert (= temp66_216 temp66_217))
(assert (= temp66_218 #x0000000000000001))
(assert (= var6950378 temp66_218))
(assert (= temp66_220 #xffffffffffffffff))
(assert (= temp66_219 temp66_220))
(assert (= temp66_221 #x0000000000000001))
(assert (= var211058 temp66_221))
(model-add temp66_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp66_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp66_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp66_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






