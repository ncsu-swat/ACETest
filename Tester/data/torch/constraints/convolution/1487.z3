(declare-fun temp10777_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10777_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10777_3 () (_ BitVec 64))
(declare-fun temp10777_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10777_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10777_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10777_7 () (_ BitVec 64))
(declare-fun temp10777_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10777_9 () (_ BitVec 64))
(declare-fun temp10777_10 () (_ BitVec 64))
(declare-fun temp10777_11 () (_ BitVec 64))
(declare-fun temp10777_12 () (_ BitVec 64))
(declare-fun temp10777_13 () (_ BitVec 64))
(declare-fun temp10777_14 () (_ BitVec 64))
(declare-fun temp10777_15 () (_ BitVec 64))
(declare-fun temp10777_16 () (_ BitVec 64))
(declare-fun temp10777_17 () (_ BitVec 64))
(declare-fun temp10777_18 () (_ BitVec 64))
(declare-fun temp10777_19 () (_ BitVec 64))
(declare-fun temp10777_20 () (_ BitVec 64))
(declare-fun temp10777_21 () (_ BitVec 64))
(declare-fun temp10777_22 () (_ BitVec 64))
(declare-fun temp10777_23 () (_ BitVec 64))
(declare-fun temp10777_24 () (_ BitVec 64))
(declare-fun temp10777_25 () (_ BitVec 64))
(declare-fun temp10777_26 () (_ BitVec 64))
(declare-fun temp10777_27 () (_ BitVec 64))
(declare-fun temp10777_28 () (_ BitVec 64))
(declare-fun temp10777_29 () (_ BitVec 64))
(declare-fun temp10777_30 () (_ BitVec 64))
(declare-fun temp10777_31 () (_ BitVec 64))
(declare-fun temp10777_32 () (_ BitVec 64))
(declare-fun temp10777_33 () (_ BitVec 64))
(declare-fun temp10777_34 () (_ BitVec 64))
(declare-fun temp10777_35 () (_ BitVec 64))
(declare-fun temp10777_36 () (_ BitVec 64))
(declare-fun temp10777_37 () (_ BitVec 64))
(declare-fun temp10777_38 () (_ BitVec 64))
(declare-fun temp10777_39 () (_ BitVec 64))
(declare-fun temp10777_40 () (_ BitVec 64))
(declare-fun temp10777_41 () (_ BitVec 64))
(declare-fun temp10777_42 () (_ BitVec 64))
(declare-fun temp10777_43 () (_ BitVec 64))
(declare-fun temp10777_44 () (_ BitVec 64))
(declare-fun temp10777_45 () (_ BitVec 64))
(declare-fun temp10777_46 () (_ BitVec 64))
(declare-fun temp10777_47 () (_ BitVec 64))
(declare-fun temp10777_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10777_49 () (_ BitVec 64))
(declare-fun temp10777_50 () (_ BitVec 64))
(declare-fun temp10777_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10777_52 () (_ BitVec 64))
(declare-fun temp10777_53 () (_ BitVec 64))
(declare-fun temp10777_54 () (_ BitVec 64))
(declare-fun temp10777_55 () (_ BitVec 64))
(declare-fun temp10777_56 () (_ BitVec 64))
(declare-fun temp10777_57 () (_ BitVec 64))
(declare-fun temp10777_58 () (_ BitVec 64))
(declare-fun temp10777_59 () (_ BitVec 64))
(declare-fun temp10777_60 () (_ BitVec 64))
(declare-fun temp10777_61 () (_ BitVec 64))
(declare-fun temp10777_62 () (_ BitVec 64))
(declare-fun temp10777_63 () (_ BitVec 64))
(declare-fun temp10777_64 () (_ BitVec 64))
(declare-fun temp10777_65 () (_ BitVec 64))
(declare-fun temp10777_66 () (_ BitVec 64))
(declare-fun temp10777_67 () (_ BitVec 64))
(declare-fun temp10777_68 () (_ BitVec 64))
(declare-fun temp10777_69 () (_ BitVec 64))
(declare-fun temp10777_70 () (_ BitVec 64))
(declare-fun temp10777_71 () (_ BitVec 64))
(declare-fun temp10777_72 () (_ BitVec 64))
(declare-fun temp10777_73 () (_ BitVec 64))
(declare-fun temp10777_74 () (_ BitVec 64))
(declare-fun temp10777_75 () (_ BitVec 64))
(declare-fun temp10777_76 () (_ BitVec 64))
(declare-fun temp10777_77 () (_ BitVec 64))
(declare-fun temp10777_78 () (_ BitVec 64))
(declare-fun temp10777_79 () (_ BitVec 64))
(declare-fun temp10777_80 () (_ BitVec 64))
(declare-fun temp10777_81 () (_ BitVec 64))
(declare-fun temp10777_82 () (_ BitVec 64))
(declare-fun temp10777_83 () (_ BitVec 64))
(declare-fun temp10777_84 () (_ BitVec 64))
(declare-fun temp10777_85 () (_ BitVec 64))
(declare-fun temp10777_86 () (_ BitVec 64))
(declare-fun temp10777_87 () (_ BitVec 64))
(declare-fun temp10777_88 () (_ BitVec 64))
(declare-fun temp10777_89 () (_ BitVec 64))
(declare-fun temp10777_90 () (_ BitVec 64))
(declare-fun temp10777_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10777_92 () (_ BitVec 64))
(declare-fun temp10777_93 () (_ BitVec 64))
(declare-fun temp10777_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10777_95 () (_ BitVec 64))
(declare-fun temp10777_96 () (_ BitVec 64))
(declare-fun temp10777_97 () (_ BitVec 64))
(declare-fun temp10777_98 () (_ BitVec 64))
(declare-fun temp10777_99 () (_ BitVec 64))
(declare-fun temp10777_100 () (_ BitVec 64))
(declare-fun temp10777_101 () (_ BitVec 64))
(declare-fun temp10777_102 () (_ BitVec 64))
(declare-fun temp10777_103 () (_ BitVec 64))
(declare-fun temp10777_104 () (_ BitVec 64))
(declare-fun temp10777_105 () (_ BitVec 64))
(declare-fun temp10777_106 () (_ BitVec 64))
(declare-fun temp10777_107 () (_ BitVec 64))
(declare-fun temp10777_108 () (_ BitVec 64))
(declare-fun temp10777_109 () (_ BitVec 64))
(declare-fun temp10777_110 () (_ BitVec 64))
(declare-fun temp10777_111 () (_ BitVec 64))
(declare-fun temp10777_112 () (_ BitVec 64))
(declare-fun temp10777_113 () (_ BitVec 64))
(declare-fun temp10777_114 () (_ BitVec 64))
(declare-fun temp10777_115 () (_ BitVec 64))
(declare-fun temp10777_116 () (_ BitVec 64))
(declare-fun temp10777_117 () (_ BitVec 64))
(declare-fun temp10777_118 () (_ BitVec 64))
(declare-fun temp10777_119 () (_ BitVec 64))
(declare-fun temp10777_120 () (_ BitVec 64))
(declare-fun temp10777_121 () (_ BitVec 64))
(declare-fun temp10777_122 () (_ BitVec 64))
(declare-fun temp10777_123 () (_ BitVec 64))
(declare-fun temp10777_124 () (_ BitVec 64))
(declare-fun temp10777_125 () (_ BitVec 64))
(declare-fun temp10777_126 () (_ BitVec 64))
(declare-fun temp10777_127 () (_ BitVec 64))
(declare-fun temp10777_128 () (_ BitVec 64))
(declare-fun temp10777_129 () (_ BitVec 64))
(declare-fun temp10777_130 () (_ BitVec 64))
(declare-fun temp10777_131 () (_ BitVec 64))
(declare-fun temp10777_132 () (_ BitVec 64))
(declare-fun temp10777_133 () (_ BitVec 64))
(declare-fun temp10777_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10777_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10777_136 () (_ BitVec 64))
(declare-fun temp10777_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10777_138 () (_ BitVec 64))
(declare-fun temp10777_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10777_140 () (_ BitVec 64))
(declare-fun temp10777_141 () (_ BitVec 64))
(declare-fun temp10777_142 () (_ BitVec 64))
(declare-fun temp10777_143 () (_ BitVec 64))
(declare-fun temp10777_144 () (_ BitVec 64))
(declare-fun temp10777_145 () (_ BitVec 64))
(declare-fun temp10777_146 () (_ BitVec 64))
(declare-fun temp10777_147 () (_ BitVec 64))
(declare-fun temp10777_148 () (_ BitVec 64))
(declare-fun temp10777_149 () (_ BitVec 64))
(declare-fun temp10777_150 () (_ BitVec 64))
(declare-fun temp10777_151 () (_ BitVec 64))
(declare-fun temp10777_152 () (_ BitVec 64))
(declare-fun temp10777_153 () (_ BitVec 64))
(declare-fun temp10777_154 () (_ BitVec 64))
(declare-fun temp10777_155 () (_ BitVec 64))
(declare-fun temp10777_157 () (_ BitVec 64))
(declare-fun temp10777_158 () (_ BitVec 64))
(declare-fun temp10777_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10777_159 () (_ BitVec 64))
(declare-fun temp10777_160 () (_ BitVec 64))
(declare-fun temp10777_162 () (_ BitVec 64))
(declare-fun temp10777_163 () (_ BitVec 64))
(declare-fun temp10777_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10777_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10777_165 () (_ BitVec 64))
(declare-fun temp10777_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10777_167 () (_ BitVec 64))
(declare-fun temp10777_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10777_169 () (_ BitVec 64))
(declare-fun temp10777_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10777_171 () (_ BitVec 64))
(declare-fun temp10777_172 () (_ BitVec 64))
(declare-fun temp10777_173 () (_ BitVec 64))
(declare-fun temp10777_174 () (_ BitVec 64))
(declare-fun temp10777_175 () (_ BitVec 64))
(declare-fun temp10777_176 () (_ BitVec 64))
(declare-fun temp10777_177 () (_ BitVec 64))
(declare-fun temp10777_178 () (_ BitVec 64))
(declare-fun temp10777_179 () (_ BitVec 64))
(declare-fun temp10777_180 () (_ BitVec 64))
(declare-fun temp10777_181 () (_ BitVec 64))
(declare-fun temp10777_182 () (_ BitVec 64))
(declare-fun temp10777_183 () (_ BitVec 64))
(declare-fun temp10777_184 () (_ BitVec 64))
(declare-fun temp10777_185 () (_ BitVec 64))
(declare-fun temp10777_186 () (_ BitVec 64))
(declare-fun temp10777_187 () (_ BitVec 64))
(declare-fun temp10777_188 () (_ BitVec 64))
(declare-fun temp10777_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10777_190 () (_ BitVec 64))
(declare-fun temp10777_192 () (_ BitVec 64))
(declare-fun temp10777_193 () (_ BitVec 64))
(declare-fun temp10777_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10777_194 () (_ BitVec 64))
(declare-fun temp10777_195 () (_ BitVec 64))
(declare-fun temp10777_197 () (_ BitVec 64))
(declare-fun temp10777_198 () (_ BitVec 64))
(declare-fun temp10777_196 () (_ BitVec 64))
(declare-fun temp10777_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10777_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10777_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10777_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10777_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10777_204 () (_ BitVec 64))
(declare-fun temp10777_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10777_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10777_207 () (_ BitVec 64))
(declare-fun temp10777_208 () (_ BitVec 64))
(declare-fun temp10777_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10777_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10777_211 () (_ BitVec 64))
(declare-fun temp10777_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10777_213 () (_ BitVec 64))
(declare-fun temp10777_214 () (_ BitVec 64))
(declare-fun temp10777_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10777_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10777_217 () (_ BitVec 64))
(declare-fun temp10777_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10777_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10777_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var5190032 () (_ BitVec 64))
(declare-fun var5452176 () (_ BitVec 64))
(declare-fun temp10777_221 () (_ BitVec 64))
(declare-fun var5779856 () (_ BitVec 64))
(declare-fun temp10777_222 () (_ BitVec 64))
(assert (= temp10777_1 #x0000000000000001))
(assert (= var77203 temp10777_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10777_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10777_2)))
(assert (= temp10777_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10777_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10777_4 #x0000000000000000))
(assert (= var210941 temp10777_4))
(assert (= temp10777_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10777_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10777_6 #x0000000000000000))
(assert (= var210986 temp10777_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10777_7 #x0000000000000000))
(assert (= temp10777_8 temp10777_7))
(assert (= temp10777_9 (select ARGNAME_padding_NAMEEND_VAL temp10777_8)))
(assert (= temp10777_10 #x0000000000000001))
(assert (= temp10777_11 temp10777_10))
(assert (= temp10777_12 (select ARGNAME_padding_NAMEEND_VAL temp10777_11)))
(assert (= temp10777_13 #x0000000000000002))
(assert (= temp10777_14 temp10777_13))
(assert (= temp10777_15 (select ARGNAME_padding_NAMEEND_VAL temp10777_14)))
(assert (= temp10777_16 #x0000000000000003))
(assert (= temp10777_17 temp10777_16))
(assert (= temp10777_18 (select ARGNAME_padding_NAMEEND_VAL temp10777_17)))
(assert (= temp10777_19 #x0000000000000004))
(assert (= temp10777_20 temp10777_19))
(assert (= temp10777_21 (select ARGNAME_padding_NAMEEND_VAL temp10777_20)))
(assert (= temp10777_22 #x0000000000000005))
(assert (= temp10777_23 temp10777_22))
(assert (= temp10777_24 (select ARGNAME_padding_NAMEEND_VAL temp10777_23)))
(assert (= temp10777_25 #x0000000000000000))
(assert (= temp10777_26 #x0000000000000000))
(assert (= temp10777_27 temp10777_26))
(assert (= temp10777_28 (select ARGNAME_padding_NAMEEND_VAL temp10777_27)))
(assert (= temp10777_29 #x0000000000000000))
(assert (= temp10777_30 #x0000000000000001))
(assert (= temp10777_31 temp10777_30))
(assert (= temp10777_32 (select ARGNAME_padding_NAMEEND_VAL temp10777_31)))
(assert (= temp10777_33 #x0000000000000000))
(assert (= temp10777_34 #x0000000000000002))
(assert (= temp10777_35 temp10777_34))
(assert (= temp10777_36 (select ARGNAME_padding_NAMEEND_VAL temp10777_35)))
(assert (= temp10777_37 #x0000000000000000))
(assert (= temp10777_38 #x0000000000000003))
(assert (= temp10777_39 temp10777_38))
(assert (= temp10777_40 (select ARGNAME_padding_NAMEEND_VAL temp10777_39)))
(assert (= temp10777_41 #x0000000000000000))
(assert (= temp10777_42 #x0000000000000004))
(assert (= temp10777_43 temp10777_42))
(assert (= temp10777_44 (select ARGNAME_padding_NAMEEND_VAL temp10777_43)))
(assert (= temp10777_45 #x0000000000000000))
(assert (= temp10777_46 #x0000000000000005))
(assert (= temp10777_47 temp10777_46))
(assert (= temp10777_48 (select ARGNAME_padding_NAMEEND_VAL temp10777_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10777_28 temp10777_25)
             (bvslt temp10777_32 temp10777_29)
             (bvslt temp10777_36 temp10777_33)
             (bvslt temp10777_40 temp10777_37)
             (bvslt temp10777_44 temp10777_41)
             (bvslt temp10777_48 temp10777_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10777_49 #x0000000000000000))
(assert (= var1191714 temp10777_49))
(assert (= temp10777_50 #x0000000000000000))
(assert (= temp10777_51 temp10777_50))
(assert (= temp10777_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10777_51)))
(assert (= temp10777_53 #x0000000000000001))
(assert (= temp10777_54 temp10777_53))
(assert (= temp10777_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10777_54)))
(assert (= temp10777_56 #x0000000000000002))
(assert (= temp10777_57 temp10777_56))
(assert (= temp10777_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10777_57)))
(assert (= temp10777_59 #x0000000000000003))
(assert (= temp10777_60 temp10777_59))
(assert (= temp10777_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10777_60)))
(assert (= temp10777_62 #x0000000000000004))
(assert (= temp10777_63 temp10777_62))
(assert (= temp10777_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10777_63)))
(assert (= temp10777_65 #x0000000000000005))
(assert (= temp10777_66 temp10777_65))
(assert (= temp10777_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10777_66)))
(assert (= temp10777_68 #x0000000000000000))
(assert (= temp10777_69 #x0000000000000000))
(assert (= temp10777_70 temp10777_69))
(assert (= temp10777_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10777_70)))
(assert (= temp10777_72 #x0000000000000000))
(assert (= temp10777_73 #x0000000000000001))
(assert (= temp10777_74 temp10777_73))
(assert (= temp10777_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10777_74)))
(assert (= temp10777_76 #x0000000000000000))
(assert (= temp10777_77 #x0000000000000002))
(assert (= temp10777_78 temp10777_77))
(assert (= temp10777_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10777_78)))
(assert (= temp10777_80 #x0000000000000000))
(assert (= temp10777_81 #x0000000000000003))
(assert (= temp10777_82 temp10777_81))
(assert (= temp10777_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10777_82)))
(assert (= temp10777_84 #x0000000000000000))
(assert (= temp10777_85 #x0000000000000004))
(assert (= temp10777_86 temp10777_85))
(assert (= temp10777_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10777_86)))
(assert (= temp10777_88 #x0000000000000000))
(assert (= temp10777_89 #x0000000000000005))
(assert (= temp10777_90 temp10777_89))
(assert (= temp10777_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10777_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10777_71 temp10777_68)
             (bvslt temp10777_75 temp10777_72)
             (bvslt temp10777_79 temp10777_76)
             (bvslt temp10777_83 temp10777_80)
             (bvslt temp10777_87 temp10777_84)
             (bvslt temp10777_91 temp10777_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10777_92 #x0000000000000000))
(assert (= var1191725 temp10777_92))
(assert (= temp10777_93 #x0000000000000000))
(assert (= temp10777_94 temp10777_93))
(assert (= temp10777_95 (select ARGNAME_stride_NAMEEND_VAL temp10777_94)))
(assert (= temp10777_96 #x0000000000000001))
(assert (= temp10777_97 temp10777_96))
(assert (= temp10777_98 (select ARGNAME_stride_NAMEEND_VAL temp10777_97)))
(assert (= temp10777_99 #x0000000000000002))
(assert (= temp10777_100 temp10777_99))
(assert (= temp10777_101 (select ARGNAME_stride_NAMEEND_VAL temp10777_100)))
(assert (= temp10777_102 #x0000000000000003))
(assert (= temp10777_103 temp10777_102))
(assert (= temp10777_104 (select ARGNAME_stride_NAMEEND_VAL temp10777_103)))
(assert (= temp10777_105 #x0000000000000004))
(assert (= temp10777_106 temp10777_105))
(assert (= temp10777_107 (select ARGNAME_stride_NAMEEND_VAL temp10777_106)))
(assert (= temp10777_108 #x0000000000000005))
(assert (= temp10777_109 temp10777_108))
(assert (= temp10777_110 (select ARGNAME_stride_NAMEEND_VAL temp10777_109)))
(assert (= temp10777_111 #x0000000000000000))
(assert (= temp10777_112 #x0000000000000000))
(assert (= temp10777_113 temp10777_112))
(assert (= temp10777_114 (select ARGNAME_stride_NAMEEND_VAL temp10777_113)))
(assert (= temp10777_115 #x0000000000000000))
(assert (= temp10777_116 #x0000000000000001))
(assert (= temp10777_117 temp10777_116))
(assert (= temp10777_118 (select ARGNAME_stride_NAMEEND_VAL temp10777_117)))
(assert (= temp10777_119 #x0000000000000000))
(assert (= temp10777_120 #x0000000000000002))
(assert (= temp10777_121 temp10777_120))
(assert (= temp10777_122 (select ARGNAME_stride_NAMEEND_VAL temp10777_121)))
(assert (= temp10777_123 #x0000000000000000))
(assert (= temp10777_124 #x0000000000000003))
(assert (= temp10777_125 temp10777_124))
(assert (= temp10777_126 (select ARGNAME_stride_NAMEEND_VAL temp10777_125)))
(assert (= temp10777_127 #x0000000000000000))
(assert (= temp10777_128 #x0000000000000004))
(assert (= temp10777_129 temp10777_128))
(assert (= temp10777_130 (select ARGNAME_stride_NAMEEND_VAL temp10777_129)))
(assert (= temp10777_131 #x0000000000000000))
(assert (= temp10777_132 #x0000000000000005))
(assert (= temp10777_133 temp10777_132))
(assert (= temp10777_134 (select ARGNAME_stride_NAMEEND_VAL temp10777_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10777_114 temp10777_111)
             (bvsle temp10777_118 temp10777_115)
             (bvsle temp10777_122 temp10777_119)
             (bvsle temp10777_126 temp10777_123)
             (bvsle temp10777_130 temp10777_127)
             (bvsle temp10777_134 temp10777_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10777_135 #x0000000000000000))
(assert (= var1191735 temp10777_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10777_136 #x0000000000000001))
(assert (= var1191747 temp10777_136))
(assert (= temp10777_137 #x0000000000000000))
(assert (= var1179826 temp10777_137))
(assert (= temp10777_138 #x0000000000000000))
(assert (= temp10777_139 temp10777_138))
(assert (= temp10777_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10777_139)))
(assert (= temp10777_141 #x0000000000000001))
(assert (= temp10777_142 temp10777_141))
(assert (= temp10777_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10777_142)))
(assert (= temp10777_144 #x0000000000000002))
(assert (= temp10777_145 temp10777_144))
(assert (= temp10777_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10777_145)))
(assert (= temp10777_147 #x0000000000000003))
(assert (= temp10777_148 temp10777_147))
(assert (= temp10777_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10777_148)))
(assert (= temp10777_150 #x0000000000000004))
(assert (= temp10777_151 temp10777_150))
(assert (= temp10777_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10777_151)))
(assert (= temp10777_153 #x0000000000000005))
(assert (= temp10777_154 temp10777_153))
(assert (= temp10777_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10777_154)))
(assert (= temp10777_157 var1179826))
(assert (= temp10777_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10777_157)))
(assert (= temp10777_156 temp10777_158))
(assert (= var1191780
   (ite (bvslt temp10777_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10777_159 #x0000000000000000))
(assert (= var1191780 temp10777_159))
(assert (= temp10777_160 #x0000000000000000))
(assert (= var1179826 temp10777_160))
(assert (= temp10777_162 var1179826))
(assert (= temp10777_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10777_162)))
(assert (= temp10777_161 temp10777_163))
(assert (= var1191802 (bvsmod temp10777_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10777_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10777_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10777_165 #x0000000000000001))
(assert (= var1191803 temp10777_165))
(assert (= temp10777_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10777_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10777_167 #x0000000000000001))
(assert (= var1191823 temp10777_167))
(assert (= temp10777_168 #x0000000000000001))
(assert (= var1180714 temp10777_168))
(assert (= temp10777_169 #x0000000000000000))
(assert (= temp10777_170 temp10777_169))
(assert (= temp10777_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10777_170)))
(assert (= temp10777_172 #x0000000000000001))
(assert (= temp10777_173 temp10777_172))
(assert (= temp10777_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10777_173)))
(assert (= temp10777_175 #x0000000000000002))
(assert (= temp10777_176 temp10777_175))
(assert (= temp10777_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10777_176)))
(assert (= temp10777_178 #x0000000000000003))
(assert (= temp10777_179 temp10777_178))
(assert (= temp10777_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10777_179)))
(assert (= temp10777_181 #x0000000000000004))
(assert (= temp10777_182 temp10777_181))
(assert (= temp10777_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10777_182)))
(assert (= temp10777_184 #x0000000000000005))
(assert (= temp10777_185 temp10777_184))
(assert (= temp10777_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10777_185)))
(assert (= temp10777_187 #x0000000000000000))
(assert (= temp10777_188
   (ite (bvslt var1180714 temp10777_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10777_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10777_188)))
(assert (= var1191831 temp10777_189))
(assert (bvslt (ite (bvslt var1180714 temp10777_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10777_190 #x0000000000000001))
(assert (= var1180714 temp10777_190))
(assert (= temp10777_192 var1180714))
(assert (= temp10777_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10777_192)))
(assert (= temp10777_191 temp10777_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10777_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10777_194 #x0000000000000001))
(assert (= var1191836 temp10777_194))
(assert (= temp10777_195 #x0000000000000000))
(assert (= var1179826 temp10777_195))
(assert (= temp10777_197 var1179826))
(assert (= temp10777_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10777_197)))
(assert (= temp10777_196 temp10777_198))
(assert (= temp10777_199 #x0000000000000002))
(assert (= var1586025 temp10777_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10777_200 #x0000000000000001))
(assert (= var1191993 temp10777_200))
(assert (= temp10777_201 #x0000000000000001))
(assert (= var2700303 temp10777_201))
(assert (= temp10777_202 #x0000000000000001))
(assert (= var2962447 temp10777_202))
(assert (= temp10777_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10777_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10777_204 #x0000000000000001))
(assert (= var211058 temp10777_204))
(assert (= temp10777_205 #x0000000000000001))
(assert (= var211188 temp10777_205))
(assert (= var3879401 var211188))
(assert (= temp10777_206 #x0000000000000000))
(assert (= var3866802 temp10777_206))
(assert (= temp10777_207 #x0000000000000000))
(assert (= temp10777_208
   (ite (bvslt var3866802 temp10777_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10777_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10777_208)))
(assert (= var3879420 temp10777_209))
(assert (bvslt (ite (bvslt var3866802 temp10777_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10777_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10777_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10777_211 #x0000000000000000))
(assert (= var3879421 temp10777_211))
(assert (= temp10777_212 #x0000000000000001))
(assert (= var3867690 temp10777_212))
(assert (= temp10777_213 #x0000000000000000))
(assert (= temp10777_214
   (ite (bvslt var3867690 temp10777_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10777_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10777_214)))
(assert (= var3879423 temp10777_215))
(assert (bvslt (ite (bvslt var3867690 temp10777_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10777_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10777_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10777_217 #x0000000000000001))
(assert (= var3879424 temp10777_217))
(assert (= temp10777_218 #x0000000000000000))
(assert (= var4133117 temp10777_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10777_219 #x0000000000000002))
(assert (= var4339331 temp10777_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10777_220 #x0000000000000000))
(assert (= var4404892 temp10777_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var5190032 var211201))
(assert (= var5452176 var211201))
(assert (= temp10777_221 #x0000000000000000))
(assert (= var5779856 temp10777_221))
(assert (= temp10777_222 #x0000000000000001))
(assert (= var211058 temp10777_222))
(model-add temp10777_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10777_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10777_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10777_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





