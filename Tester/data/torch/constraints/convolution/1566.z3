(declare-fun temp10882_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10882_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10882_3 () (_ BitVec 64))
(declare-fun temp10882_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10882_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10882_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10882_7 () (_ BitVec 64))
(declare-fun temp10882_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10882_9 () (_ BitVec 64))
(declare-fun temp10882_10 () (_ BitVec 64))
(declare-fun temp10882_11 () (_ BitVec 64))
(declare-fun temp10882_12 () (_ BitVec 64))
(declare-fun temp10882_13 () (_ BitVec 64))
(declare-fun temp10882_14 () (_ BitVec 64))
(declare-fun temp10882_15 () (_ BitVec 64))
(declare-fun temp10882_16 () (_ BitVec 64))
(declare-fun temp10882_17 () (_ BitVec 64))
(declare-fun temp10882_18 () (_ BitVec 64))
(declare-fun temp10882_19 () (_ BitVec 64))
(declare-fun temp10882_20 () (_ BitVec 64))
(declare-fun temp10882_21 () (_ BitVec 64))
(declare-fun temp10882_22 () (_ BitVec 64))
(declare-fun temp10882_23 () (_ BitVec 64))
(declare-fun temp10882_24 () (_ BitVec 64))
(declare-fun temp10882_25 () (_ BitVec 64))
(declare-fun temp10882_26 () (_ BitVec 64))
(declare-fun temp10882_27 () (_ BitVec 64))
(declare-fun temp10882_28 () (_ BitVec 64))
(declare-fun temp10882_29 () (_ BitVec 64))
(declare-fun temp10882_30 () (_ BitVec 64))
(declare-fun temp10882_31 () (_ BitVec 64))
(declare-fun temp10882_32 () (_ BitVec 64))
(declare-fun temp10882_33 () (_ BitVec 64))
(declare-fun temp10882_34 () (_ BitVec 64))
(declare-fun temp10882_35 () (_ BitVec 64))
(declare-fun temp10882_36 () (_ BitVec 64))
(declare-fun temp10882_37 () (_ BitVec 64))
(declare-fun temp10882_38 () (_ BitVec 64))
(declare-fun temp10882_39 () (_ BitVec 64))
(declare-fun temp10882_40 () (_ BitVec 64))
(declare-fun temp10882_41 () (_ BitVec 64))
(declare-fun temp10882_42 () (_ BitVec 64))
(declare-fun temp10882_43 () (_ BitVec 64))
(declare-fun temp10882_44 () (_ BitVec 64))
(declare-fun temp10882_45 () (_ BitVec 64))
(declare-fun temp10882_46 () (_ BitVec 64))
(declare-fun temp10882_47 () (_ BitVec 64))
(declare-fun temp10882_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10882_49 () (_ BitVec 64))
(declare-fun temp10882_50 () (_ BitVec 64))
(declare-fun temp10882_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10882_52 () (_ BitVec 64))
(declare-fun temp10882_53 () (_ BitVec 64))
(declare-fun temp10882_54 () (_ BitVec 64))
(declare-fun temp10882_55 () (_ BitVec 64))
(declare-fun temp10882_56 () (_ BitVec 64))
(declare-fun temp10882_57 () (_ BitVec 64))
(declare-fun temp10882_58 () (_ BitVec 64))
(declare-fun temp10882_59 () (_ BitVec 64))
(declare-fun temp10882_60 () (_ BitVec 64))
(declare-fun temp10882_61 () (_ BitVec 64))
(declare-fun temp10882_62 () (_ BitVec 64))
(declare-fun temp10882_63 () (_ BitVec 64))
(declare-fun temp10882_64 () (_ BitVec 64))
(declare-fun temp10882_65 () (_ BitVec 64))
(declare-fun temp10882_66 () (_ BitVec 64))
(declare-fun temp10882_67 () (_ BitVec 64))
(declare-fun temp10882_68 () (_ BitVec 64))
(declare-fun temp10882_69 () (_ BitVec 64))
(declare-fun temp10882_70 () (_ BitVec 64))
(declare-fun temp10882_71 () (_ BitVec 64))
(declare-fun temp10882_72 () (_ BitVec 64))
(declare-fun temp10882_73 () (_ BitVec 64))
(declare-fun temp10882_74 () (_ BitVec 64))
(declare-fun temp10882_75 () (_ BitVec 64))
(declare-fun temp10882_76 () (_ BitVec 64))
(declare-fun temp10882_77 () (_ BitVec 64))
(declare-fun temp10882_78 () (_ BitVec 64))
(declare-fun temp10882_79 () (_ BitVec 64))
(declare-fun temp10882_80 () (_ BitVec 64))
(declare-fun temp10882_81 () (_ BitVec 64))
(declare-fun temp10882_82 () (_ BitVec 64))
(declare-fun temp10882_83 () (_ BitVec 64))
(declare-fun temp10882_84 () (_ BitVec 64))
(declare-fun temp10882_85 () (_ BitVec 64))
(declare-fun temp10882_86 () (_ BitVec 64))
(declare-fun temp10882_87 () (_ BitVec 64))
(declare-fun temp10882_88 () (_ BitVec 64))
(declare-fun temp10882_89 () (_ BitVec 64))
(declare-fun temp10882_90 () (_ BitVec 64))
(declare-fun temp10882_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10882_92 () (_ BitVec 64))
(declare-fun temp10882_93 () (_ BitVec 64))
(declare-fun temp10882_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10882_95 () (_ BitVec 64))
(declare-fun temp10882_96 () (_ BitVec 64))
(declare-fun temp10882_97 () (_ BitVec 64))
(declare-fun temp10882_98 () (_ BitVec 64))
(declare-fun temp10882_99 () (_ BitVec 64))
(declare-fun temp10882_100 () (_ BitVec 64))
(declare-fun temp10882_101 () (_ BitVec 64))
(declare-fun temp10882_102 () (_ BitVec 64))
(declare-fun temp10882_103 () (_ BitVec 64))
(declare-fun temp10882_104 () (_ BitVec 64))
(declare-fun temp10882_105 () (_ BitVec 64))
(declare-fun temp10882_106 () (_ BitVec 64))
(declare-fun temp10882_107 () (_ BitVec 64))
(declare-fun temp10882_108 () (_ BitVec 64))
(declare-fun temp10882_109 () (_ BitVec 64))
(declare-fun temp10882_110 () (_ BitVec 64))
(declare-fun temp10882_111 () (_ BitVec 64))
(declare-fun temp10882_112 () (_ BitVec 64))
(declare-fun temp10882_113 () (_ BitVec 64))
(declare-fun temp10882_114 () (_ BitVec 64))
(declare-fun temp10882_115 () (_ BitVec 64))
(declare-fun temp10882_116 () (_ BitVec 64))
(declare-fun temp10882_117 () (_ BitVec 64))
(declare-fun temp10882_118 () (_ BitVec 64))
(declare-fun temp10882_119 () (_ BitVec 64))
(declare-fun temp10882_120 () (_ BitVec 64))
(declare-fun temp10882_121 () (_ BitVec 64))
(declare-fun temp10882_122 () (_ BitVec 64))
(declare-fun temp10882_123 () (_ BitVec 64))
(declare-fun temp10882_124 () (_ BitVec 64))
(declare-fun temp10882_125 () (_ BitVec 64))
(declare-fun temp10882_126 () (_ BitVec 64))
(declare-fun temp10882_127 () (_ BitVec 64))
(declare-fun temp10882_128 () (_ BitVec 64))
(declare-fun temp10882_129 () (_ BitVec 64))
(declare-fun temp10882_130 () (_ BitVec 64))
(declare-fun temp10882_131 () (_ BitVec 64))
(declare-fun temp10882_132 () (_ BitVec 64))
(declare-fun temp10882_133 () (_ BitVec 64))
(declare-fun temp10882_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10882_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10882_136 () (_ BitVec 64))
(declare-fun temp10882_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10882_138 () (_ BitVec 64))
(declare-fun temp10882_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10882_140 () (_ BitVec 64))
(declare-fun temp10882_141 () (_ BitVec 64))
(declare-fun temp10882_142 () (_ BitVec 64))
(declare-fun temp10882_143 () (_ BitVec 64))
(declare-fun temp10882_144 () (_ BitVec 64))
(declare-fun temp10882_145 () (_ BitVec 64))
(declare-fun temp10882_146 () (_ BitVec 64))
(declare-fun temp10882_147 () (_ BitVec 64))
(declare-fun temp10882_148 () (_ BitVec 64))
(declare-fun temp10882_149 () (_ BitVec 64))
(declare-fun temp10882_150 () (_ BitVec 64))
(declare-fun temp10882_151 () (_ BitVec 64))
(declare-fun temp10882_152 () (_ BitVec 64))
(declare-fun temp10882_153 () (_ BitVec 64))
(declare-fun temp10882_154 () (_ BitVec 64))
(declare-fun temp10882_155 () (_ BitVec 64))
(declare-fun temp10882_157 () (_ BitVec 64))
(declare-fun temp10882_158 () (_ BitVec 64))
(declare-fun temp10882_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10882_159 () (_ BitVec 64))
(declare-fun temp10882_160 () (_ BitVec 64))
(declare-fun temp10882_162 () (_ BitVec 64))
(declare-fun temp10882_163 () (_ BitVec 64))
(declare-fun temp10882_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10882_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10882_165 () (_ BitVec 64))
(declare-fun temp10882_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10882_167 () (_ BitVec 64))
(declare-fun temp10882_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10882_169 () (_ BitVec 64))
(declare-fun temp10882_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10882_171 () (_ BitVec 64))
(declare-fun temp10882_172 () (_ BitVec 64))
(declare-fun temp10882_173 () (_ BitVec 64))
(declare-fun temp10882_174 () (_ BitVec 64))
(declare-fun temp10882_175 () (_ BitVec 64))
(declare-fun temp10882_176 () (_ BitVec 64))
(declare-fun temp10882_177 () (_ BitVec 64))
(declare-fun temp10882_178 () (_ BitVec 64))
(declare-fun temp10882_179 () (_ BitVec 64))
(declare-fun temp10882_180 () (_ BitVec 64))
(declare-fun temp10882_181 () (_ BitVec 64))
(declare-fun temp10882_182 () (_ BitVec 64))
(declare-fun temp10882_183 () (_ BitVec 64))
(declare-fun temp10882_184 () (_ BitVec 64))
(declare-fun temp10882_185 () (_ BitVec 64))
(declare-fun temp10882_186 () (_ BitVec 64))
(declare-fun temp10882_187 () (_ BitVec 64))
(declare-fun temp10882_188 () (_ BitVec 64))
(declare-fun temp10882_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10882_190 () (_ BitVec 64))
(declare-fun temp10882_192 () (_ BitVec 64))
(declare-fun temp10882_193 () (_ BitVec 64))
(declare-fun temp10882_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10882_194 () (_ BitVec 64))
(declare-fun temp10882_195 () (_ BitVec 64))
(declare-fun temp10882_197 () (_ BitVec 64))
(declare-fun temp10882_198 () (_ BitVec 64))
(declare-fun temp10882_196 () (_ BitVec 64))
(declare-fun temp10882_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10882_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10882_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10882_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10882_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10882_204 () (_ BitVec 64))
(declare-fun temp10882_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10882_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10882_207 () (_ BitVec 64))
(declare-fun temp10882_208 () (_ BitVec 64))
(declare-fun temp10882_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10882_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10882_211 () (_ BitVec 64))
(declare-fun temp10882_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10882_213 () (_ BitVec 64))
(declare-fun temp10882_214 () (_ BitVec 64))
(declare-fun temp10882_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10882_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10882_217 () (_ BitVec 64))
(declare-fun temp10882_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10882_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10882_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var5714320 () (_ BitVec 64))
(declare-fun var5976464 () (_ BitVec 64))
(declare-fun temp10882_221 () (_ BitVec 64))
(assert (= temp10882_1 #x0000000000000001))
(assert (= var77203 temp10882_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10882_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10882_2)))
(assert (= temp10882_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10882_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10882_4 #x0000000000000000))
(assert (= var210941 temp10882_4))
(assert (= temp10882_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10882_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10882_6 #x0000000000000000))
(assert (= var210986 temp10882_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10882_7 #x0000000000000000))
(assert (= temp10882_8 temp10882_7))
(assert (= temp10882_9 (select ARGNAME_padding_NAMEEND_VAL temp10882_8)))
(assert (= temp10882_10 #x0000000000000001))
(assert (= temp10882_11 temp10882_10))
(assert (= temp10882_12 (select ARGNAME_padding_NAMEEND_VAL temp10882_11)))
(assert (= temp10882_13 #x0000000000000002))
(assert (= temp10882_14 temp10882_13))
(assert (= temp10882_15 (select ARGNAME_padding_NAMEEND_VAL temp10882_14)))
(assert (= temp10882_16 #x0000000000000003))
(assert (= temp10882_17 temp10882_16))
(assert (= temp10882_18 (select ARGNAME_padding_NAMEEND_VAL temp10882_17)))
(assert (= temp10882_19 #x0000000000000004))
(assert (= temp10882_20 temp10882_19))
(assert (= temp10882_21 (select ARGNAME_padding_NAMEEND_VAL temp10882_20)))
(assert (= temp10882_22 #x0000000000000005))
(assert (= temp10882_23 temp10882_22))
(assert (= temp10882_24 (select ARGNAME_padding_NAMEEND_VAL temp10882_23)))
(assert (= temp10882_25 #x0000000000000000))
(assert (= temp10882_26 #x0000000000000000))
(assert (= temp10882_27 temp10882_26))
(assert (= temp10882_28 (select ARGNAME_padding_NAMEEND_VAL temp10882_27)))
(assert (= temp10882_29 #x0000000000000000))
(assert (= temp10882_30 #x0000000000000001))
(assert (= temp10882_31 temp10882_30))
(assert (= temp10882_32 (select ARGNAME_padding_NAMEEND_VAL temp10882_31)))
(assert (= temp10882_33 #x0000000000000000))
(assert (= temp10882_34 #x0000000000000002))
(assert (= temp10882_35 temp10882_34))
(assert (= temp10882_36 (select ARGNAME_padding_NAMEEND_VAL temp10882_35)))
(assert (= temp10882_37 #x0000000000000000))
(assert (= temp10882_38 #x0000000000000003))
(assert (= temp10882_39 temp10882_38))
(assert (= temp10882_40 (select ARGNAME_padding_NAMEEND_VAL temp10882_39)))
(assert (= temp10882_41 #x0000000000000000))
(assert (= temp10882_42 #x0000000000000004))
(assert (= temp10882_43 temp10882_42))
(assert (= temp10882_44 (select ARGNAME_padding_NAMEEND_VAL temp10882_43)))
(assert (= temp10882_45 #x0000000000000000))
(assert (= temp10882_46 #x0000000000000005))
(assert (= temp10882_47 temp10882_46))
(assert (= temp10882_48 (select ARGNAME_padding_NAMEEND_VAL temp10882_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10882_28 temp10882_25)
             (bvslt temp10882_32 temp10882_29)
             (bvslt temp10882_36 temp10882_33)
             (bvslt temp10882_40 temp10882_37)
             (bvslt temp10882_44 temp10882_41)
             (bvslt temp10882_48 temp10882_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10882_49 #x0000000000000000))
(assert (= var1191714 temp10882_49))
(assert (= temp10882_50 #x0000000000000000))
(assert (= temp10882_51 temp10882_50))
(assert (= temp10882_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10882_51)))
(assert (= temp10882_53 #x0000000000000001))
(assert (= temp10882_54 temp10882_53))
(assert (= temp10882_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10882_54)))
(assert (= temp10882_56 #x0000000000000002))
(assert (= temp10882_57 temp10882_56))
(assert (= temp10882_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10882_57)))
(assert (= temp10882_59 #x0000000000000003))
(assert (= temp10882_60 temp10882_59))
(assert (= temp10882_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10882_60)))
(assert (= temp10882_62 #x0000000000000004))
(assert (= temp10882_63 temp10882_62))
(assert (= temp10882_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10882_63)))
(assert (= temp10882_65 #x0000000000000005))
(assert (= temp10882_66 temp10882_65))
(assert (= temp10882_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10882_66)))
(assert (= temp10882_68 #x0000000000000000))
(assert (= temp10882_69 #x0000000000000000))
(assert (= temp10882_70 temp10882_69))
(assert (= temp10882_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10882_70)))
(assert (= temp10882_72 #x0000000000000000))
(assert (= temp10882_73 #x0000000000000001))
(assert (= temp10882_74 temp10882_73))
(assert (= temp10882_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10882_74)))
(assert (= temp10882_76 #x0000000000000000))
(assert (= temp10882_77 #x0000000000000002))
(assert (= temp10882_78 temp10882_77))
(assert (= temp10882_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10882_78)))
(assert (= temp10882_80 #x0000000000000000))
(assert (= temp10882_81 #x0000000000000003))
(assert (= temp10882_82 temp10882_81))
(assert (= temp10882_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10882_82)))
(assert (= temp10882_84 #x0000000000000000))
(assert (= temp10882_85 #x0000000000000004))
(assert (= temp10882_86 temp10882_85))
(assert (= temp10882_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10882_86)))
(assert (= temp10882_88 #x0000000000000000))
(assert (= temp10882_89 #x0000000000000005))
(assert (= temp10882_90 temp10882_89))
(assert (= temp10882_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10882_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10882_71 temp10882_68)
             (bvslt temp10882_75 temp10882_72)
             (bvslt temp10882_79 temp10882_76)
             (bvslt temp10882_83 temp10882_80)
             (bvslt temp10882_87 temp10882_84)
             (bvslt temp10882_91 temp10882_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10882_92 #x0000000000000000))
(assert (= var1191725 temp10882_92))
(assert (= temp10882_93 #x0000000000000000))
(assert (= temp10882_94 temp10882_93))
(assert (= temp10882_95 (select ARGNAME_stride_NAMEEND_VAL temp10882_94)))
(assert (= temp10882_96 #x0000000000000001))
(assert (= temp10882_97 temp10882_96))
(assert (= temp10882_98 (select ARGNAME_stride_NAMEEND_VAL temp10882_97)))
(assert (= temp10882_99 #x0000000000000002))
(assert (= temp10882_100 temp10882_99))
(assert (= temp10882_101 (select ARGNAME_stride_NAMEEND_VAL temp10882_100)))
(assert (= temp10882_102 #x0000000000000003))
(assert (= temp10882_103 temp10882_102))
(assert (= temp10882_104 (select ARGNAME_stride_NAMEEND_VAL temp10882_103)))
(assert (= temp10882_105 #x0000000000000004))
(assert (= temp10882_106 temp10882_105))
(assert (= temp10882_107 (select ARGNAME_stride_NAMEEND_VAL temp10882_106)))
(assert (= temp10882_108 #x0000000000000005))
(assert (= temp10882_109 temp10882_108))
(assert (= temp10882_110 (select ARGNAME_stride_NAMEEND_VAL temp10882_109)))
(assert (= temp10882_111 #x0000000000000000))
(assert (= temp10882_112 #x0000000000000000))
(assert (= temp10882_113 temp10882_112))
(assert (= temp10882_114 (select ARGNAME_stride_NAMEEND_VAL temp10882_113)))
(assert (= temp10882_115 #x0000000000000000))
(assert (= temp10882_116 #x0000000000000001))
(assert (= temp10882_117 temp10882_116))
(assert (= temp10882_118 (select ARGNAME_stride_NAMEEND_VAL temp10882_117)))
(assert (= temp10882_119 #x0000000000000000))
(assert (= temp10882_120 #x0000000000000002))
(assert (= temp10882_121 temp10882_120))
(assert (= temp10882_122 (select ARGNAME_stride_NAMEEND_VAL temp10882_121)))
(assert (= temp10882_123 #x0000000000000000))
(assert (= temp10882_124 #x0000000000000003))
(assert (= temp10882_125 temp10882_124))
(assert (= temp10882_126 (select ARGNAME_stride_NAMEEND_VAL temp10882_125)))
(assert (= temp10882_127 #x0000000000000000))
(assert (= temp10882_128 #x0000000000000004))
(assert (= temp10882_129 temp10882_128))
(assert (= temp10882_130 (select ARGNAME_stride_NAMEEND_VAL temp10882_129)))
(assert (= temp10882_131 #x0000000000000000))
(assert (= temp10882_132 #x0000000000000005))
(assert (= temp10882_133 temp10882_132))
(assert (= temp10882_134 (select ARGNAME_stride_NAMEEND_VAL temp10882_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10882_114 temp10882_111)
             (bvsle temp10882_118 temp10882_115)
             (bvsle temp10882_122 temp10882_119)
             (bvsle temp10882_126 temp10882_123)
             (bvsle temp10882_130 temp10882_127)
             (bvsle temp10882_134 temp10882_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10882_135 #x0000000000000000))
(assert (= var1191735 temp10882_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10882_136 #x0000000000000001))
(assert (= var1191747 temp10882_136))
(assert (= temp10882_137 #x0000000000000000))
(assert (= var1179826 temp10882_137))
(assert (= temp10882_138 #x0000000000000000))
(assert (= temp10882_139 temp10882_138))
(assert (= temp10882_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10882_139)))
(assert (= temp10882_141 #x0000000000000001))
(assert (= temp10882_142 temp10882_141))
(assert (= temp10882_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10882_142)))
(assert (= temp10882_144 #x0000000000000002))
(assert (= temp10882_145 temp10882_144))
(assert (= temp10882_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10882_145)))
(assert (= temp10882_147 #x0000000000000003))
(assert (= temp10882_148 temp10882_147))
(assert (= temp10882_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10882_148)))
(assert (= temp10882_150 #x0000000000000004))
(assert (= temp10882_151 temp10882_150))
(assert (= temp10882_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10882_151)))
(assert (= temp10882_153 #x0000000000000005))
(assert (= temp10882_154 temp10882_153))
(assert (= temp10882_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10882_154)))
(assert (= temp10882_157 var1179826))
(assert (= temp10882_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10882_157)))
(assert (= temp10882_156 temp10882_158))
(assert (= var1191780
   (ite (bvslt temp10882_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10882_159 #x0000000000000000))
(assert (= var1191780 temp10882_159))
(assert (= temp10882_160 #x0000000000000000))
(assert (= var1179826 temp10882_160))
(assert (= temp10882_162 var1179826))
(assert (= temp10882_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10882_162)))
(assert (= temp10882_161 temp10882_163))
(assert (= var1191802 (bvsmod temp10882_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10882_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10882_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10882_165 #x0000000000000001))
(assert (= var1191803 temp10882_165))
(assert (= temp10882_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10882_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10882_167 #x0000000000000001))
(assert (= var1191823 temp10882_167))
(assert (= temp10882_168 #x0000000000000001))
(assert (= var1180714 temp10882_168))
(assert (= temp10882_169 #x0000000000000000))
(assert (= temp10882_170 temp10882_169))
(assert (= temp10882_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10882_170)))
(assert (= temp10882_172 #x0000000000000001))
(assert (= temp10882_173 temp10882_172))
(assert (= temp10882_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10882_173)))
(assert (= temp10882_175 #x0000000000000002))
(assert (= temp10882_176 temp10882_175))
(assert (= temp10882_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10882_176)))
(assert (= temp10882_178 #x0000000000000003))
(assert (= temp10882_179 temp10882_178))
(assert (= temp10882_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10882_179)))
(assert (= temp10882_181 #x0000000000000004))
(assert (= temp10882_182 temp10882_181))
(assert (= temp10882_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10882_182)))
(assert (= temp10882_184 #x0000000000000005))
(assert (= temp10882_185 temp10882_184))
(assert (= temp10882_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10882_185)))
(assert (= temp10882_187 #x0000000000000000))
(assert (= temp10882_188
   (ite (bvslt var1180714 temp10882_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10882_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10882_188)))
(assert (= var1191831 temp10882_189))
(assert (bvslt (ite (bvslt var1180714 temp10882_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10882_190 #x0000000000000001))
(assert (= var1180714 temp10882_190))
(assert (= temp10882_192 var1180714))
(assert (= temp10882_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10882_192)))
(assert (= temp10882_191 temp10882_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10882_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10882_194 #x0000000000000001))
(assert (= var1191836 temp10882_194))
(assert (= temp10882_195 #x0000000000000000))
(assert (= var1179826 temp10882_195))
(assert (= temp10882_197 var1179826))
(assert (= temp10882_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10882_197)))
(assert (= temp10882_196 temp10882_198))
(assert (= temp10882_199 #x0000000000000002))
(assert (= var1586025 temp10882_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10882_200 #x0000000000000001))
(assert (= var1191993 temp10882_200))
(assert (= temp10882_201 #x0000000000000001))
(assert (= var2700303 temp10882_201))
(assert (= temp10882_202 #x0000000000000001))
(assert (= var2962447 temp10882_202))
(assert (= temp10882_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10882_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10882_204 #x0000000000000001))
(assert (= var211058 temp10882_204))
(assert (= temp10882_205 #x0000000000000001))
(assert (= var211188 temp10882_205))
(assert (= var3879401 var211188))
(assert (= temp10882_206 #x0000000000000000))
(assert (= var3866802 temp10882_206))
(assert (= temp10882_207 #x0000000000000000))
(assert (= temp10882_208
   (ite (bvslt var3866802 temp10882_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10882_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10882_208)))
(assert (= var3879420 temp10882_209))
(assert (bvslt (ite (bvslt var3866802 temp10882_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10882_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10882_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10882_211 #x0000000000000000))
(assert (= var3879421 temp10882_211))
(assert (= temp10882_212 #x0000000000000001))
(assert (= var3867690 temp10882_212))
(assert (= temp10882_213 #x0000000000000000))
(assert (= temp10882_214
   (ite (bvslt var3867690 temp10882_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10882_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10882_214)))
(assert (= var3879423 temp10882_215))
(assert (bvslt (ite (bvslt var3867690 temp10882_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10882_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10882_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10882_217 #x0000000000000001))
(assert (= var3879424 temp10882_217))
(assert (= temp10882_218 #x0000000000000000))
(assert (= var4133117 temp10882_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10882_219 #x0000000000000002))
(assert (= var4339331 temp10882_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10882_220 #x0000000000000000))
(assert (= var4404892 temp10882_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var5714320 var211201))
(assert (= var5976464 var211201))
(assert (= temp10882_221 #x0000000000000001))
(assert (= var211058 temp10882_221))
(model-add temp10882_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10882_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10882_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10882_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




