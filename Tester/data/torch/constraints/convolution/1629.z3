(declare-fun temp10966_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10966_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10966_3 () (_ BitVec 64))
(declare-fun temp10966_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10966_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10966_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10966_7 () (_ BitVec 64))
(declare-fun temp10966_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10966_9 () (_ BitVec 64))
(declare-fun temp10966_10 () (_ BitVec 64))
(declare-fun temp10966_11 () (_ BitVec 64))
(declare-fun temp10966_12 () (_ BitVec 64))
(declare-fun temp10966_13 () (_ BitVec 64))
(declare-fun temp10966_14 () (_ BitVec 64))
(declare-fun temp10966_15 () (_ BitVec 64))
(declare-fun temp10966_16 () (_ BitVec 64))
(declare-fun temp10966_17 () (_ BitVec 64))
(declare-fun temp10966_18 () (_ BitVec 64))
(declare-fun temp10966_19 () (_ BitVec 64))
(declare-fun temp10966_20 () (_ BitVec 64))
(declare-fun temp10966_21 () (_ BitVec 64))
(declare-fun temp10966_22 () (_ BitVec 64))
(declare-fun temp10966_23 () (_ BitVec 64))
(declare-fun temp10966_24 () (_ BitVec 64))
(declare-fun temp10966_25 () (_ BitVec 64))
(declare-fun temp10966_26 () (_ BitVec 64))
(declare-fun temp10966_27 () (_ BitVec 64))
(declare-fun temp10966_28 () (_ BitVec 64))
(declare-fun temp10966_29 () (_ BitVec 64))
(declare-fun temp10966_30 () (_ BitVec 64))
(declare-fun temp10966_31 () (_ BitVec 64))
(declare-fun temp10966_32 () (_ BitVec 64))
(declare-fun temp10966_33 () (_ BitVec 64))
(declare-fun temp10966_34 () (_ BitVec 64))
(declare-fun temp10966_35 () (_ BitVec 64))
(declare-fun temp10966_36 () (_ BitVec 64))
(declare-fun temp10966_37 () (_ BitVec 64))
(declare-fun temp10966_38 () (_ BitVec 64))
(declare-fun temp10966_39 () (_ BitVec 64))
(declare-fun temp10966_40 () (_ BitVec 64))
(declare-fun temp10966_41 () (_ BitVec 64))
(declare-fun temp10966_42 () (_ BitVec 64))
(declare-fun temp10966_43 () (_ BitVec 64))
(declare-fun temp10966_44 () (_ BitVec 64))
(declare-fun temp10966_45 () (_ BitVec 64))
(declare-fun temp10966_46 () (_ BitVec 64))
(declare-fun temp10966_47 () (_ BitVec 64))
(declare-fun temp10966_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10966_49 () (_ BitVec 64))
(declare-fun temp10966_50 () (_ BitVec 64))
(declare-fun temp10966_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10966_52 () (_ BitVec 64))
(declare-fun temp10966_53 () (_ BitVec 64))
(declare-fun temp10966_54 () (_ BitVec 64))
(declare-fun temp10966_55 () (_ BitVec 64))
(declare-fun temp10966_56 () (_ BitVec 64))
(declare-fun temp10966_57 () (_ BitVec 64))
(declare-fun temp10966_58 () (_ BitVec 64))
(declare-fun temp10966_59 () (_ BitVec 64))
(declare-fun temp10966_60 () (_ BitVec 64))
(declare-fun temp10966_61 () (_ BitVec 64))
(declare-fun temp10966_62 () (_ BitVec 64))
(declare-fun temp10966_63 () (_ BitVec 64))
(declare-fun temp10966_64 () (_ BitVec 64))
(declare-fun temp10966_65 () (_ BitVec 64))
(declare-fun temp10966_66 () (_ BitVec 64))
(declare-fun temp10966_67 () (_ BitVec 64))
(declare-fun temp10966_68 () (_ BitVec 64))
(declare-fun temp10966_69 () (_ BitVec 64))
(declare-fun temp10966_70 () (_ BitVec 64))
(declare-fun temp10966_71 () (_ BitVec 64))
(declare-fun temp10966_72 () (_ BitVec 64))
(declare-fun temp10966_73 () (_ BitVec 64))
(declare-fun temp10966_74 () (_ BitVec 64))
(declare-fun temp10966_75 () (_ BitVec 64))
(declare-fun temp10966_76 () (_ BitVec 64))
(declare-fun temp10966_77 () (_ BitVec 64))
(declare-fun temp10966_78 () (_ BitVec 64))
(declare-fun temp10966_79 () (_ BitVec 64))
(declare-fun temp10966_80 () (_ BitVec 64))
(declare-fun temp10966_81 () (_ BitVec 64))
(declare-fun temp10966_82 () (_ BitVec 64))
(declare-fun temp10966_83 () (_ BitVec 64))
(declare-fun temp10966_84 () (_ BitVec 64))
(declare-fun temp10966_85 () (_ BitVec 64))
(declare-fun temp10966_86 () (_ BitVec 64))
(declare-fun temp10966_87 () (_ BitVec 64))
(declare-fun temp10966_88 () (_ BitVec 64))
(declare-fun temp10966_89 () (_ BitVec 64))
(declare-fun temp10966_90 () (_ BitVec 64))
(declare-fun temp10966_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10966_92 () (_ BitVec 64))
(declare-fun temp10966_93 () (_ BitVec 64))
(declare-fun temp10966_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10966_95 () (_ BitVec 64))
(declare-fun temp10966_96 () (_ BitVec 64))
(declare-fun temp10966_97 () (_ BitVec 64))
(declare-fun temp10966_98 () (_ BitVec 64))
(declare-fun temp10966_99 () (_ BitVec 64))
(declare-fun temp10966_100 () (_ BitVec 64))
(declare-fun temp10966_101 () (_ BitVec 64))
(declare-fun temp10966_102 () (_ BitVec 64))
(declare-fun temp10966_103 () (_ BitVec 64))
(declare-fun temp10966_104 () (_ BitVec 64))
(declare-fun temp10966_105 () (_ BitVec 64))
(declare-fun temp10966_106 () (_ BitVec 64))
(declare-fun temp10966_107 () (_ BitVec 64))
(declare-fun temp10966_108 () (_ BitVec 64))
(declare-fun temp10966_109 () (_ BitVec 64))
(declare-fun temp10966_110 () (_ BitVec 64))
(declare-fun temp10966_111 () (_ BitVec 64))
(declare-fun temp10966_112 () (_ BitVec 64))
(declare-fun temp10966_113 () (_ BitVec 64))
(declare-fun temp10966_114 () (_ BitVec 64))
(declare-fun temp10966_115 () (_ BitVec 64))
(declare-fun temp10966_116 () (_ BitVec 64))
(declare-fun temp10966_117 () (_ BitVec 64))
(declare-fun temp10966_118 () (_ BitVec 64))
(declare-fun temp10966_119 () (_ BitVec 64))
(declare-fun temp10966_120 () (_ BitVec 64))
(declare-fun temp10966_121 () (_ BitVec 64))
(declare-fun temp10966_122 () (_ BitVec 64))
(declare-fun temp10966_123 () (_ BitVec 64))
(declare-fun temp10966_124 () (_ BitVec 64))
(declare-fun temp10966_125 () (_ BitVec 64))
(declare-fun temp10966_126 () (_ BitVec 64))
(declare-fun temp10966_127 () (_ BitVec 64))
(declare-fun temp10966_128 () (_ BitVec 64))
(declare-fun temp10966_129 () (_ BitVec 64))
(declare-fun temp10966_130 () (_ BitVec 64))
(declare-fun temp10966_131 () (_ BitVec 64))
(declare-fun temp10966_132 () (_ BitVec 64))
(declare-fun temp10966_133 () (_ BitVec 64))
(declare-fun temp10966_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10966_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10966_136 () (_ BitVec 64))
(declare-fun temp10966_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10966_138 () (_ BitVec 64))
(declare-fun temp10966_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10966_140 () (_ BitVec 64))
(declare-fun temp10966_141 () (_ BitVec 64))
(declare-fun temp10966_142 () (_ BitVec 64))
(declare-fun temp10966_143 () (_ BitVec 64))
(declare-fun temp10966_144 () (_ BitVec 64))
(declare-fun temp10966_145 () (_ BitVec 64))
(declare-fun temp10966_146 () (_ BitVec 64))
(declare-fun temp10966_147 () (_ BitVec 64))
(declare-fun temp10966_148 () (_ BitVec 64))
(declare-fun temp10966_149 () (_ BitVec 64))
(declare-fun temp10966_150 () (_ BitVec 64))
(declare-fun temp10966_151 () (_ BitVec 64))
(declare-fun temp10966_152 () (_ BitVec 64))
(declare-fun temp10966_153 () (_ BitVec 64))
(declare-fun temp10966_154 () (_ BitVec 64))
(declare-fun temp10966_155 () (_ BitVec 64))
(declare-fun temp10966_157 () (_ BitVec 64))
(declare-fun temp10966_158 () (_ BitVec 64))
(declare-fun temp10966_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10966_159 () (_ BitVec 64))
(declare-fun temp10966_160 () (_ BitVec 64))
(declare-fun temp10966_162 () (_ BitVec 64))
(declare-fun temp10966_163 () (_ BitVec 64))
(declare-fun temp10966_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10966_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10966_165 () (_ BitVec 64))
(declare-fun temp10966_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10966_167 () (_ BitVec 64))
(declare-fun temp10966_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10966_169 () (_ BitVec 64))
(declare-fun temp10966_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10966_171 () (_ BitVec 64))
(declare-fun temp10966_172 () (_ BitVec 64))
(declare-fun temp10966_173 () (_ BitVec 64))
(declare-fun temp10966_174 () (_ BitVec 64))
(declare-fun temp10966_175 () (_ BitVec 64))
(declare-fun temp10966_176 () (_ BitVec 64))
(declare-fun temp10966_177 () (_ BitVec 64))
(declare-fun temp10966_178 () (_ BitVec 64))
(declare-fun temp10966_179 () (_ BitVec 64))
(declare-fun temp10966_180 () (_ BitVec 64))
(declare-fun temp10966_181 () (_ BitVec 64))
(declare-fun temp10966_182 () (_ BitVec 64))
(declare-fun temp10966_183 () (_ BitVec 64))
(declare-fun temp10966_184 () (_ BitVec 64))
(declare-fun temp10966_185 () (_ BitVec 64))
(declare-fun temp10966_186 () (_ BitVec 64))
(declare-fun temp10966_187 () (_ BitVec 64))
(declare-fun temp10966_188 () (_ BitVec 64))
(declare-fun temp10966_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10966_190 () (_ BitVec 64))
(declare-fun temp10966_192 () (_ BitVec 64))
(declare-fun temp10966_193 () (_ BitVec 64))
(declare-fun temp10966_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10966_194 () (_ BitVec 64))
(declare-fun temp10966_195 () (_ BitVec 64))
(declare-fun temp10966_197 () (_ BitVec 64))
(declare-fun temp10966_198 () (_ BitVec 64))
(declare-fun temp10966_196 () (_ BitVec 64))
(declare-fun temp10966_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10966_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10966_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10966_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10966_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10966_204 () (_ BitVec 64))
(declare-fun temp10966_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10966_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10966_207 () (_ BitVec 64))
(declare-fun temp10966_208 () (_ BitVec 64))
(declare-fun temp10966_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10966_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10966_211 () (_ BitVec 64))
(declare-fun temp10966_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10966_213 () (_ BitVec 64))
(declare-fun temp10966_214 () (_ BitVec 64))
(declare-fun temp10966_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10966_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10966_217 () (_ BitVec 64))
(declare-fun temp10966_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10966_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10966_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp10966_221 () (_ BitVec 64))
(assert (= temp10966_1 #x0000000000000001))
(assert (= var77203 temp10966_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10966_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10966_2)))
(assert (= temp10966_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10966_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10966_4 #x0000000000000000))
(assert (= var210941 temp10966_4))
(assert (= temp10966_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10966_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10966_6 #x0000000000000000))
(assert (= var210986 temp10966_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10966_7 #x0000000000000000))
(assert (= temp10966_8 temp10966_7))
(assert (= temp10966_9 (select ARGNAME_padding_NAMEEND_VAL temp10966_8)))
(assert (= temp10966_10 #x0000000000000001))
(assert (= temp10966_11 temp10966_10))
(assert (= temp10966_12 (select ARGNAME_padding_NAMEEND_VAL temp10966_11)))
(assert (= temp10966_13 #x0000000000000002))
(assert (= temp10966_14 temp10966_13))
(assert (= temp10966_15 (select ARGNAME_padding_NAMEEND_VAL temp10966_14)))
(assert (= temp10966_16 #x0000000000000003))
(assert (= temp10966_17 temp10966_16))
(assert (= temp10966_18 (select ARGNAME_padding_NAMEEND_VAL temp10966_17)))
(assert (= temp10966_19 #x0000000000000004))
(assert (= temp10966_20 temp10966_19))
(assert (= temp10966_21 (select ARGNAME_padding_NAMEEND_VAL temp10966_20)))
(assert (= temp10966_22 #x0000000000000005))
(assert (= temp10966_23 temp10966_22))
(assert (= temp10966_24 (select ARGNAME_padding_NAMEEND_VAL temp10966_23)))
(assert (= temp10966_25 #x0000000000000000))
(assert (= temp10966_26 #x0000000000000000))
(assert (= temp10966_27 temp10966_26))
(assert (= temp10966_28 (select ARGNAME_padding_NAMEEND_VAL temp10966_27)))
(assert (= temp10966_29 #x0000000000000000))
(assert (= temp10966_30 #x0000000000000001))
(assert (= temp10966_31 temp10966_30))
(assert (= temp10966_32 (select ARGNAME_padding_NAMEEND_VAL temp10966_31)))
(assert (= temp10966_33 #x0000000000000000))
(assert (= temp10966_34 #x0000000000000002))
(assert (= temp10966_35 temp10966_34))
(assert (= temp10966_36 (select ARGNAME_padding_NAMEEND_VAL temp10966_35)))
(assert (= temp10966_37 #x0000000000000000))
(assert (= temp10966_38 #x0000000000000003))
(assert (= temp10966_39 temp10966_38))
(assert (= temp10966_40 (select ARGNAME_padding_NAMEEND_VAL temp10966_39)))
(assert (= temp10966_41 #x0000000000000000))
(assert (= temp10966_42 #x0000000000000004))
(assert (= temp10966_43 temp10966_42))
(assert (= temp10966_44 (select ARGNAME_padding_NAMEEND_VAL temp10966_43)))
(assert (= temp10966_45 #x0000000000000000))
(assert (= temp10966_46 #x0000000000000005))
(assert (= temp10966_47 temp10966_46))
(assert (= temp10966_48 (select ARGNAME_padding_NAMEEND_VAL temp10966_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10966_28 temp10966_25)
             (bvslt temp10966_32 temp10966_29)
             (bvslt temp10966_36 temp10966_33)
             (bvslt temp10966_40 temp10966_37)
             (bvslt temp10966_44 temp10966_41)
             (bvslt temp10966_48 temp10966_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10966_49 #x0000000000000000))
(assert (= var1191714 temp10966_49))
(assert (= temp10966_50 #x0000000000000000))
(assert (= temp10966_51 temp10966_50))
(assert (= temp10966_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10966_51)))
(assert (= temp10966_53 #x0000000000000001))
(assert (= temp10966_54 temp10966_53))
(assert (= temp10966_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10966_54)))
(assert (= temp10966_56 #x0000000000000002))
(assert (= temp10966_57 temp10966_56))
(assert (= temp10966_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10966_57)))
(assert (= temp10966_59 #x0000000000000003))
(assert (= temp10966_60 temp10966_59))
(assert (= temp10966_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10966_60)))
(assert (= temp10966_62 #x0000000000000004))
(assert (= temp10966_63 temp10966_62))
(assert (= temp10966_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10966_63)))
(assert (= temp10966_65 #x0000000000000005))
(assert (= temp10966_66 temp10966_65))
(assert (= temp10966_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10966_66)))
(assert (= temp10966_68 #x0000000000000000))
(assert (= temp10966_69 #x0000000000000000))
(assert (= temp10966_70 temp10966_69))
(assert (= temp10966_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10966_70)))
(assert (= temp10966_72 #x0000000000000000))
(assert (= temp10966_73 #x0000000000000001))
(assert (= temp10966_74 temp10966_73))
(assert (= temp10966_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10966_74)))
(assert (= temp10966_76 #x0000000000000000))
(assert (= temp10966_77 #x0000000000000002))
(assert (= temp10966_78 temp10966_77))
(assert (= temp10966_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10966_78)))
(assert (= temp10966_80 #x0000000000000000))
(assert (= temp10966_81 #x0000000000000003))
(assert (= temp10966_82 temp10966_81))
(assert (= temp10966_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10966_82)))
(assert (= temp10966_84 #x0000000000000000))
(assert (= temp10966_85 #x0000000000000004))
(assert (= temp10966_86 temp10966_85))
(assert (= temp10966_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10966_86)))
(assert (= temp10966_88 #x0000000000000000))
(assert (= temp10966_89 #x0000000000000005))
(assert (= temp10966_90 temp10966_89))
(assert (= temp10966_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10966_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10966_71 temp10966_68)
             (bvslt temp10966_75 temp10966_72)
             (bvslt temp10966_79 temp10966_76)
             (bvslt temp10966_83 temp10966_80)
             (bvslt temp10966_87 temp10966_84)
             (bvslt temp10966_91 temp10966_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10966_92 #x0000000000000000))
(assert (= var1191725 temp10966_92))
(assert (= temp10966_93 #x0000000000000000))
(assert (= temp10966_94 temp10966_93))
(assert (= temp10966_95 (select ARGNAME_stride_NAMEEND_VAL temp10966_94)))
(assert (= temp10966_96 #x0000000000000001))
(assert (= temp10966_97 temp10966_96))
(assert (= temp10966_98 (select ARGNAME_stride_NAMEEND_VAL temp10966_97)))
(assert (= temp10966_99 #x0000000000000002))
(assert (= temp10966_100 temp10966_99))
(assert (= temp10966_101 (select ARGNAME_stride_NAMEEND_VAL temp10966_100)))
(assert (= temp10966_102 #x0000000000000003))
(assert (= temp10966_103 temp10966_102))
(assert (= temp10966_104 (select ARGNAME_stride_NAMEEND_VAL temp10966_103)))
(assert (= temp10966_105 #x0000000000000004))
(assert (= temp10966_106 temp10966_105))
(assert (= temp10966_107 (select ARGNAME_stride_NAMEEND_VAL temp10966_106)))
(assert (= temp10966_108 #x0000000000000005))
(assert (= temp10966_109 temp10966_108))
(assert (= temp10966_110 (select ARGNAME_stride_NAMEEND_VAL temp10966_109)))
(assert (= temp10966_111 #x0000000000000000))
(assert (= temp10966_112 #x0000000000000000))
(assert (= temp10966_113 temp10966_112))
(assert (= temp10966_114 (select ARGNAME_stride_NAMEEND_VAL temp10966_113)))
(assert (= temp10966_115 #x0000000000000000))
(assert (= temp10966_116 #x0000000000000001))
(assert (= temp10966_117 temp10966_116))
(assert (= temp10966_118 (select ARGNAME_stride_NAMEEND_VAL temp10966_117)))
(assert (= temp10966_119 #x0000000000000000))
(assert (= temp10966_120 #x0000000000000002))
(assert (= temp10966_121 temp10966_120))
(assert (= temp10966_122 (select ARGNAME_stride_NAMEEND_VAL temp10966_121)))
(assert (= temp10966_123 #x0000000000000000))
(assert (= temp10966_124 #x0000000000000003))
(assert (= temp10966_125 temp10966_124))
(assert (= temp10966_126 (select ARGNAME_stride_NAMEEND_VAL temp10966_125)))
(assert (= temp10966_127 #x0000000000000000))
(assert (= temp10966_128 #x0000000000000004))
(assert (= temp10966_129 temp10966_128))
(assert (= temp10966_130 (select ARGNAME_stride_NAMEEND_VAL temp10966_129)))
(assert (= temp10966_131 #x0000000000000000))
(assert (= temp10966_132 #x0000000000000005))
(assert (= temp10966_133 temp10966_132))
(assert (= temp10966_134 (select ARGNAME_stride_NAMEEND_VAL temp10966_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10966_114 temp10966_111)
             (bvsle temp10966_118 temp10966_115)
             (bvsle temp10966_122 temp10966_119)
             (bvsle temp10966_126 temp10966_123)
             (bvsle temp10966_130 temp10966_127)
             (bvsle temp10966_134 temp10966_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10966_135 #x0000000000000000))
(assert (= var1191735 temp10966_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10966_136 #x0000000000000001))
(assert (= var1191747 temp10966_136))
(assert (= temp10966_137 #x0000000000000000))
(assert (= var1179826 temp10966_137))
(assert (= temp10966_138 #x0000000000000000))
(assert (= temp10966_139 temp10966_138))
(assert (= temp10966_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10966_139)))
(assert (= temp10966_141 #x0000000000000001))
(assert (= temp10966_142 temp10966_141))
(assert (= temp10966_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10966_142)))
(assert (= temp10966_144 #x0000000000000002))
(assert (= temp10966_145 temp10966_144))
(assert (= temp10966_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10966_145)))
(assert (= temp10966_147 #x0000000000000003))
(assert (= temp10966_148 temp10966_147))
(assert (= temp10966_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10966_148)))
(assert (= temp10966_150 #x0000000000000004))
(assert (= temp10966_151 temp10966_150))
(assert (= temp10966_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10966_151)))
(assert (= temp10966_153 #x0000000000000005))
(assert (= temp10966_154 temp10966_153))
(assert (= temp10966_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10966_154)))
(assert (= temp10966_157 var1179826))
(assert (= temp10966_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10966_157)))
(assert (= temp10966_156 temp10966_158))
(assert (= var1191780
   (ite (bvslt temp10966_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10966_159 #x0000000000000000))
(assert (= var1191780 temp10966_159))
(assert (= temp10966_160 #x0000000000000000))
(assert (= var1179826 temp10966_160))
(assert (= temp10966_162 var1179826))
(assert (= temp10966_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10966_162)))
(assert (= temp10966_161 temp10966_163))
(assert (= var1191802 (bvsmod temp10966_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10966_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10966_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10966_165 #x0000000000000001))
(assert (= var1191803 temp10966_165))
(assert (= temp10966_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10966_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10966_167 #x0000000000000001))
(assert (= var1191823 temp10966_167))
(assert (= temp10966_168 #x0000000000000001))
(assert (= var1180714 temp10966_168))
(assert (= temp10966_169 #x0000000000000000))
(assert (= temp10966_170 temp10966_169))
(assert (= temp10966_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10966_170)))
(assert (= temp10966_172 #x0000000000000001))
(assert (= temp10966_173 temp10966_172))
(assert (= temp10966_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10966_173)))
(assert (= temp10966_175 #x0000000000000002))
(assert (= temp10966_176 temp10966_175))
(assert (= temp10966_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10966_176)))
(assert (= temp10966_178 #x0000000000000003))
(assert (= temp10966_179 temp10966_178))
(assert (= temp10966_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10966_179)))
(assert (= temp10966_181 #x0000000000000004))
(assert (= temp10966_182 temp10966_181))
(assert (= temp10966_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10966_182)))
(assert (= temp10966_184 #x0000000000000005))
(assert (= temp10966_185 temp10966_184))
(assert (= temp10966_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10966_185)))
(assert (= temp10966_187 #x0000000000000000))
(assert (= temp10966_188
   (ite (bvslt var1180714 temp10966_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10966_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10966_188)))
(assert (= var1191831 temp10966_189))
(assert (bvslt (ite (bvslt var1180714 temp10966_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10966_190 #x0000000000000001))
(assert (= var1180714 temp10966_190))
(assert (= temp10966_192 var1180714))
(assert (= temp10966_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10966_192)))
(assert (= temp10966_191 temp10966_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10966_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10966_194 #x0000000000000001))
(assert (= var1191836 temp10966_194))
(assert (= temp10966_195 #x0000000000000000))
(assert (= var1179826 temp10966_195))
(assert (= temp10966_197 var1179826))
(assert (= temp10966_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10966_197)))
(assert (= temp10966_196 temp10966_198))
(assert (= temp10966_199 #x0000000000000002))
(assert (= var1586025 temp10966_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10966_200 #x0000000000000001))
(assert (= var1191993 temp10966_200))
(assert (= temp10966_201 #x0000000000000001))
(assert (= var2700303 temp10966_201))
(assert (= temp10966_202 #x0000000000000001))
(assert (= var2962447 temp10966_202))
(assert (= temp10966_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10966_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10966_204 #x0000000000000001))
(assert (= var211058 temp10966_204))
(assert (= temp10966_205 #x0000000000000001))
(assert (= var211188 temp10966_205))
(assert (= var3879401 var211188))
(assert (= temp10966_206 #x0000000000000000))
(assert (= var3866802 temp10966_206))
(assert (= temp10966_207 #x0000000000000000))
(assert (= temp10966_208
   (ite (bvslt var3866802 temp10966_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10966_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10966_208)))
(assert (= var3879420 temp10966_209))
(assert (bvslt (ite (bvslt var3866802 temp10966_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10966_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10966_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10966_211 #x0000000000000000))
(assert (= var3879421 temp10966_211))
(assert (= temp10966_212 #x0000000000000001))
(assert (= var3867690 temp10966_212))
(assert (= temp10966_213 #x0000000000000000))
(assert (= temp10966_214
   (ite (bvslt var3867690 temp10966_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10966_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10966_214)))
(assert (= var3879423 temp10966_215))
(assert (bvslt (ite (bvslt var3867690 temp10966_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10966_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10966_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10966_217 #x0000000000000001))
(assert (= var3879424 temp10966_217))
(assert (= temp10966_218 #x0000000000000000))
(assert (= var4133117 temp10966_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10966_219 #x0000000000000002))
(assert (= var4339331 temp10966_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10966_220 #x0000000000000000))
(assert (= var4404892 temp10966_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp10966_221 #x0000000000000001))
(assert (= var211058 temp10966_221))
(model-add temp10966_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10966_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10966_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10966_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




