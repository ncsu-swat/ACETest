(declare-fun temp10853_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10853_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10853_3 () (_ BitVec 64))
(declare-fun temp10853_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10853_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10853_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10853_7 () (_ BitVec 64))
(declare-fun temp10853_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10853_9 () (_ BitVec 64))
(declare-fun temp10853_10 () (_ BitVec 64))
(declare-fun temp10853_11 () (_ BitVec 64))
(declare-fun temp10853_12 () (_ BitVec 64))
(declare-fun temp10853_13 () (_ BitVec 64))
(declare-fun temp10853_14 () (_ BitVec 64))
(declare-fun temp10853_15 () (_ BitVec 64))
(declare-fun temp10853_16 () (_ BitVec 64))
(declare-fun temp10853_17 () (_ BitVec 64))
(declare-fun temp10853_18 () (_ BitVec 64))
(declare-fun temp10853_19 () (_ BitVec 64))
(declare-fun temp10853_20 () (_ BitVec 64))
(declare-fun temp10853_21 () (_ BitVec 64))
(declare-fun temp10853_22 () (_ BitVec 64))
(declare-fun temp10853_23 () (_ BitVec 64))
(declare-fun temp10853_24 () (_ BitVec 64))
(declare-fun temp10853_25 () (_ BitVec 64))
(declare-fun temp10853_26 () (_ BitVec 64))
(declare-fun temp10853_27 () (_ BitVec 64))
(declare-fun temp10853_28 () (_ BitVec 64))
(declare-fun temp10853_29 () (_ BitVec 64))
(declare-fun temp10853_30 () (_ BitVec 64))
(declare-fun temp10853_31 () (_ BitVec 64))
(declare-fun temp10853_32 () (_ BitVec 64))
(declare-fun temp10853_33 () (_ BitVec 64))
(declare-fun temp10853_34 () (_ BitVec 64))
(declare-fun temp10853_35 () (_ BitVec 64))
(declare-fun temp10853_36 () (_ BitVec 64))
(declare-fun temp10853_37 () (_ BitVec 64))
(declare-fun temp10853_38 () (_ BitVec 64))
(declare-fun temp10853_39 () (_ BitVec 64))
(declare-fun temp10853_40 () (_ BitVec 64))
(declare-fun temp10853_41 () (_ BitVec 64))
(declare-fun temp10853_42 () (_ BitVec 64))
(declare-fun temp10853_43 () (_ BitVec 64))
(declare-fun temp10853_44 () (_ BitVec 64))
(declare-fun temp10853_45 () (_ BitVec 64))
(declare-fun temp10853_46 () (_ BitVec 64))
(declare-fun temp10853_47 () (_ BitVec 64))
(declare-fun temp10853_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10853_49 () (_ BitVec 64))
(declare-fun temp10853_50 () (_ BitVec 64))
(declare-fun temp10853_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10853_52 () (_ BitVec 64))
(declare-fun temp10853_53 () (_ BitVec 64))
(declare-fun temp10853_54 () (_ BitVec 64))
(declare-fun temp10853_55 () (_ BitVec 64))
(declare-fun temp10853_56 () (_ BitVec 64))
(declare-fun temp10853_57 () (_ BitVec 64))
(declare-fun temp10853_58 () (_ BitVec 64))
(declare-fun temp10853_59 () (_ BitVec 64))
(declare-fun temp10853_60 () (_ BitVec 64))
(declare-fun temp10853_61 () (_ BitVec 64))
(declare-fun temp10853_62 () (_ BitVec 64))
(declare-fun temp10853_63 () (_ BitVec 64))
(declare-fun temp10853_64 () (_ BitVec 64))
(declare-fun temp10853_65 () (_ BitVec 64))
(declare-fun temp10853_66 () (_ BitVec 64))
(declare-fun temp10853_67 () (_ BitVec 64))
(declare-fun temp10853_68 () (_ BitVec 64))
(declare-fun temp10853_69 () (_ BitVec 64))
(declare-fun temp10853_70 () (_ BitVec 64))
(declare-fun temp10853_71 () (_ BitVec 64))
(declare-fun temp10853_72 () (_ BitVec 64))
(declare-fun temp10853_73 () (_ BitVec 64))
(declare-fun temp10853_74 () (_ BitVec 64))
(declare-fun temp10853_75 () (_ BitVec 64))
(declare-fun temp10853_76 () (_ BitVec 64))
(declare-fun temp10853_77 () (_ BitVec 64))
(declare-fun temp10853_78 () (_ BitVec 64))
(declare-fun temp10853_79 () (_ BitVec 64))
(declare-fun temp10853_80 () (_ BitVec 64))
(declare-fun temp10853_81 () (_ BitVec 64))
(declare-fun temp10853_82 () (_ BitVec 64))
(declare-fun temp10853_83 () (_ BitVec 64))
(declare-fun temp10853_84 () (_ BitVec 64))
(declare-fun temp10853_85 () (_ BitVec 64))
(declare-fun temp10853_86 () (_ BitVec 64))
(declare-fun temp10853_87 () (_ BitVec 64))
(declare-fun temp10853_88 () (_ BitVec 64))
(declare-fun temp10853_89 () (_ BitVec 64))
(declare-fun temp10853_90 () (_ BitVec 64))
(declare-fun temp10853_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10853_92 () (_ BitVec 64))
(declare-fun temp10853_93 () (_ BitVec 64))
(declare-fun temp10853_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10853_95 () (_ BitVec 64))
(declare-fun temp10853_96 () (_ BitVec 64))
(declare-fun temp10853_97 () (_ BitVec 64))
(declare-fun temp10853_98 () (_ BitVec 64))
(declare-fun temp10853_99 () (_ BitVec 64))
(declare-fun temp10853_100 () (_ BitVec 64))
(declare-fun temp10853_101 () (_ BitVec 64))
(declare-fun temp10853_102 () (_ BitVec 64))
(declare-fun temp10853_103 () (_ BitVec 64))
(declare-fun temp10853_104 () (_ BitVec 64))
(declare-fun temp10853_105 () (_ BitVec 64))
(declare-fun temp10853_106 () (_ BitVec 64))
(declare-fun temp10853_107 () (_ BitVec 64))
(declare-fun temp10853_108 () (_ BitVec 64))
(declare-fun temp10853_109 () (_ BitVec 64))
(declare-fun temp10853_110 () (_ BitVec 64))
(declare-fun temp10853_111 () (_ BitVec 64))
(declare-fun temp10853_112 () (_ BitVec 64))
(declare-fun temp10853_113 () (_ BitVec 64))
(declare-fun temp10853_114 () (_ BitVec 64))
(declare-fun temp10853_115 () (_ BitVec 64))
(declare-fun temp10853_116 () (_ BitVec 64))
(declare-fun temp10853_117 () (_ BitVec 64))
(declare-fun temp10853_118 () (_ BitVec 64))
(declare-fun temp10853_119 () (_ BitVec 64))
(declare-fun temp10853_120 () (_ BitVec 64))
(declare-fun temp10853_121 () (_ BitVec 64))
(declare-fun temp10853_122 () (_ BitVec 64))
(declare-fun temp10853_123 () (_ BitVec 64))
(declare-fun temp10853_124 () (_ BitVec 64))
(declare-fun temp10853_125 () (_ BitVec 64))
(declare-fun temp10853_126 () (_ BitVec 64))
(declare-fun temp10853_127 () (_ BitVec 64))
(declare-fun temp10853_128 () (_ BitVec 64))
(declare-fun temp10853_129 () (_ BitVec 64))
(declare-fun temp10853_130 () (_ BitVec 64))
(declare-fun temp10853_131 () (_ BitVec 64))
(declare-fun temp10853_132 () (_ BitVec 64))
(declare-fun temp10853_133 () (_ BitVec 64))
(declare-fun temp10853_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10853_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10853_136 () (_ BitVec 64))
(declare-fun temp10853_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10853_138 () (_ BitVec 64))
(declare-fun temp10853_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10853_140 () (_ BitVec 64))
(declare-fun temp10853_141 () (_ BitVec 64))
(declare-fun temp10853_142 () (_ BitVec 64))
(declare-fun temp10853_143 () (_ BitVec 64))
(declare-fun temp10853_144 () (_ BitVec 64))
(declare-fun temp10853_145 () (_ BitVec 64))
(declare-fun temp10853_146 () (_ BitVec 64))
(declare-fun temp10853_147 () (_ BitVec 64))
(declare-fun temp10853_148 () (_ BitVec 64))
(declare-fun temp10853_149 () (_ BitVec 64))
(declare-fun temp10853_150 () (_ BitVec 64))
(declare-fun temp10853_151 () (_ BitVec 64))
(declare-fun temp10853_152 () (_ BitVec 64))
(declare-fun temp10853_153 () (_ BitVec 64))
(declare-fun temp10853_154 () (_ BitVec 64))
(declare-fun temp10853_155 () (_ BitVec 64))
(declare-fun temp10853_157 () (_ BitVec 64))
(declare-fun temp10853_158 () (_ BitVec 64))
(declare-fun temp10853_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10853_159 () (_ BitVec 64))
(declare-fun temp10853_160 () (_ BitVec 64))
(declare-fun temp10853_162 () (_ BitVec 64))
(declare-fun temp10853_163 () (_ BitVec 64))
(declare-fun temp10853_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10853_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10853_165 () (_ BitVec 64))
(declare-fun temp10853_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10853_167 () (_ BitVec 64))
(declare-fun temp10853_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10853_169 () (_ BitVec 64))
(declare-fun temp10853_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10853_171 () (_ BitVec 64))
(declare-fun temp10853_172 () (_ BitVec 64))
(declare-fun temp10853_173 () (_ BitVec 64))
(declare-fun temp10853_174 () (_ BitVec 64))
(declare-fun temp10853_175 () (_ BitVec 64))
(declare-fun temp10853_176 () (_ BitVec 64))
(declare-fun temp10853_177 () (_ BitVec 64))
(declare-fun temp10853_178 () (_ BitVec 64))
(declare-fun temp10853_179 () (_ BitVec 64))
(declare-fun temp10853_180 () (_ BitVec 64))
(declare-fun temp10853_181 () (_ BitVec 64))
(declare-fun temp10853_182 () (_ BitVec 64))
(declare-fun temp10853_183 () (_ BitVec 64))
(declare-fun temp10853_184 () (_ BitVec 64))
(declare-fun temp10853_185 () (_ BitVec 64))
(declare-fun temp10853_186 () (_ BitVec 64))
(declare-fun temp10853_187 () (_ BitVec 64))
(declare-fun temp10853_188 () (_ BitVec 64))
(declare-fun temp10853_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10853_190 () (_ BitVec 64))
(declare-fun temp10853_192 () (_ BitVec 64))
(declare-fun temp10853_193 () (_ BitVec 64))
(declare-fun temp10853_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10853_194 () (_ BitVec 64))
(declare-fun temp10853_195 () (_ BitVec 64))
(declare-fun temp10853_197 () (_ BitVec 64))
(declare-fun temp10853_198 () (_ BitVec 64))
(declare-fun temp10853_196 () (_ BitVec 64))
(declare-fun temp10853_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10853_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10853_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10853_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10853_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10853_204 () (_ BitVec 64))
(declare-fun temp10853_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10853_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10853_207 () (_ BitVec 64))
(declare-fun temp10853_208 () (_ BitVec 64))
(declare-fun temp10853_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10853_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10853_211 () (_ BitVec 64))
(declare-fun temp10853_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10853_213 () (_ BitVec 64))
(declare-fun temp10853_214 () (_ BitVec 64))
(declare-fun temp10853_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10853_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10853_217 () (_ BitVec 64))
(declare-fun temp10853_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10853_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10853_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var5452176 () (_ BitVec 64))
(declare-fun var5714320 () (_ BitVec 64))
(declare-fun temp10853_221 () (_ BitVec 64))
(declare-fun var6042000 () (_ BitVec 64))
(declare-fun temp10853_222 () (_ BitVec 64))
(assert (= temp10853_1 #x0000000000000001))
(assert (= var77203 temp10853_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10853_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10853_2)))
(assert (= temp10853_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10853_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10853_4 #x0000000000000000))
(assert (= var210941 temp10853_4))
(assert (= temp10853_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10853_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10853_6 #x0000000000000000))
(assert (= var210986 temp10853_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10853_7 #x0000000000000000))
(assert (= temp10853_8 temp10853_7))
(assert (= temp10853_9 (select ARGNAME_padding_NAMEEND_VAL temp10853_8)))
(assert (= temp10853_10 #x0000000000000001))
(assert (= temp10853_11 temp10853_10))
(assert (= temp10853_12 (select ARGNAME_padding_NAMEEND_VAL temp10853_11)))
(assert (= temp10853_13 #x0000000000000002))
(assert (= temp10853_14 temp10853_13))
(assert (= temp10853_15 (select ARGNAME_padding_NAMEEND_VAL temp10853_14)))
(assert (= temp10853_16 #x0000000000000003))
(assert (= temp10853_17 temp10853_16))
(assert (= temp10853_18 (select ARGNAME_padding_NAMEEND_VAL temp10853_17)))
(assert (= temp10853_19 #x0000000000000004))
(assert (= temp10853_20 temp10853_19))
(assert (= temp10853_21 (select ARGNAME_padding_NAMEEND_VAL temp10853_20)))
(assert (= temp10853_22 #x0000000000000005))
(assert (= temp10853_23 temp10853_22))
(assert (= temp10853_24 (select ARGNAME_padding_NAMEEND_VAL temp10853_23)))
(assert (= temp10853_25 #x0000000000000000))
(assert (= temp10853_26 #x0000000000000000))
(assert (= temp10853_27 temp10853_26))
(assert (= temp10853_28 (select ARGNAME_padding_NAMEEND_VAL temp10853_27)))
(assert (= temp10853_29 #x0000000000000000))
(assert (= temp10853_30 #x0000000000000001))
(assert (= temp10853_31 temp10853_30))
(assert (= temp10853_32 (select ARGNAME_padding_NAMEEND_VAL temp10853_31)))
(assert (= temp10853_33 #x0000000000000000))
(assert (= temp10853_34 #x0000000000000002))
(assert (= temp10853_35 temp10853_34))
(assert (= temp10853_36 (select ARGNAME_padding_NAMEEND_VAL temp10853_35)))
(assert (= temp10853_37 #x0000000000000000))
(assert (= temp10853_38 #x0000000000000003))
(assert (= temp10853_39 temp10853_38))
(assert (= temp10853_40 (select ARGNAME_padding_NAMEEND_VAL temp10853_39)))
(assert (= temp10853_41 #x0000000000000000))
(assert (= temp10853_42 #x0000000000000004))
(assert (= temp10853_43 temp10853_42))
(assert (= temp10853_44 (select ARGNAME_padding_NAMEEND_VAL temp10853_43)))
(assert (= temp10853_45 #x0000000000000000))
(assert (= temp10853_46 #x0000000000000005))
(assert (= temp10853_47 temp10853_46))
(assert (= temp10853_48 (select ARGNAME_padding_NAMEEND_VAL temp10853_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10853_28 temp10853_25)
             (bvslt temp10853_32 temp10853_29)
             (bvslt temp10853_36 temp10853_33)
             (bvslt temp10853_40 temp10853_37)
             (bvslt temp10853_44 temp10853_41)
             (bvslt temp10853_48 temp10853_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10853_49 #x0000000000000000))
(assert (= var1191714 temp10853_49))
(assert (= temp10853_50 #x0000000000000000))
(assert (= temp10853_51 temp10853_50))
(assert (= temp10853_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10853_51)))
(assert (= temp10853_53 #x0000000000000001))
(assert (= temp10853_54 temp10853_53))
(assert (= temp10853_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10853_54)))
(assert (= temp10853_56 #x0000000000000002))
(assert (= temp10853_57 temp10853_56))
(assert (= temp10853_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10853_57)))
(assert (= temp10853_59 #x0000000000000003))
(assert (= temp10853_60 temp10853_59))
(assert (= temp10853_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10853_60)))
(assert (= temp10853_62 #x0000000000000004))
(assert (= temp10853_63 temp10853_62))
(assert (= temp10853_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10853_63)))
(assert (= temp10853_65 #x0000000000000005))
(assert (= temp10853_66 temp10853_65))
(assert (= temp10853_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10853_66)))
(assert (= temp10853_68 #x0000000000000000))
(assert (= temp10853_69 #x0000000000000000))
(assert (= temp10853_70 temp10853_69))
(assert (= temp10853_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10853_70)))
(assert (= temp10853_72 #x0000000000000000))
(assert (= temp10853_73 #x0000000000000001))
(assert (= temp10853_74 temp10853_73))
(assert (= temp10853_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10853_74)))
(assert (= temp10853_76 #x0000000000000000))
(assert (= temp10853_77 #x0000000000000002))
(assert (= temp10853_78 temp10853_77))
(assert (= temp10853_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10853_78)))
(assert (= temp10853_80 #x0000000000000000))
(assert (= temp10853_81 #x0000000000000003))
(assert (= temp10853_82 temp10853_81))
(assert (= temp10853_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10853_82)))
(assert (= temp10853_84 #x0000000000000000))
(assert (= temp10853_85 #x0000000000000004))
(assert (= temp10853_86 temp10853_85))
(assert (= temp10853_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10853_86)))
(assert (= temp10853_88 #x0000000000000000))
(assert (= temp10853_89 #x0000000000000005))
(assert (= temp10853_90 temp10853_89))
(assert (= temp10853_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10853_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10853_71 temp10853_68)
             (bvslt temp10853_75 temp10853_72)
             (bvslt temp10853_79 temp10853_76)
             (bvslt temp10853_83 temp10853_80)
             (bvslt temp10853_87 temp10853_84)
             (bvslt temp10853_91 temp10853_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10853_92 #x0000000000000000))
(assert (= var1191725 temp10853_92))
(assert (= temp10853_93 #x0000000000000000))
(assert (= temp10853_94 temp10853_93))
(assert (= temp10853_95 (select ARGNAME_stride_NAMEEND_VAL temp10853_94)))
(assert (= temp10853_96 #x0000000000000001))
(assert (= temp10853_97 temp10853_96))
(assert (= temp10853_98 (select ARGNAME_stride_NAMEEND_VAL temp10853_97)))
(assert (= temp10853_99 #x0000000000000002))
(assert (= temp10853_100 temp10853_99))
(assert (= temp10853_101 (select ARGNAME_stride_NAMEEND_VAL temp10853_100)))
(assert (= temp10853_102 #x0000000000000003))
(assert (= temp10853_103 temp10853_102))
(assert (= temp10853_104 (select ARGNAME_stride_NAMEEND_VAL temp10853_103)))
(assert (= temp10853_105 #x0000000000000004))
(assert (= temp10853_106 temp10853_105))
(assert (= temp10853_107 (select ARGNAME_stride_NAMEEND_VAL temp10853_106)))
(assert (= temp10853_108 #x0000000000000005))
(assert (= temp10853_109 temp10853_108))
(assert (= temp10853_110 (select ARGNAME_stride_NAMEEND_VAL temp10853_109)))
(assert (= temp10853_111 #x0000000000000000))
(assert (= temp10853_112 #x0000000000000000))
(assert (= temp10853_113 temp10853_112))
(assert (= temp10853_114 (select ARGNAME_stride_NAMEEND_VAL temp10853_113)))
(assert (= temp10853_115 #x0000000000000000))
(assert (= temp10853_116 #x0000000000000001))
(assert (= temp10853_117 temp10853_116))
(assert (= temp10853_118 (select ARGNAME_stride_NAMEEND_VAL temp10853_117)))
(assert (= temp10853_119 #x0000000000000000))
(assert (= temp10853_120 #x0000000000000002))
(assert (= temp10853_121 temp10853_120))
(assert (= temp10853_122 (select ARGNAME_stride_NAMEEND_VAL temp10853_121)))
(assert (= temp10853_123 #x0000000000000000))
(assert (= temp10853_124 #x0000000000000003))
(assert (= temp10853_125 temp10853_124))
(assert (= temp10853_126 (select ARGNAME_stride_NAMEEND_VAL temp10853_125)))
(assert (= temp10853_127 #x0000000000000000))
(assert (= temp10853_128 #x0000000000000004))
(assert (= temp10853_129 temp10853_128))
(assert (= temp10853_130 (select ARGNAME_stride_NAMEEND_VAL temp10853_129)))
(assert (= temp10853_131 #x0000000000000000))
(assert (= temp10853_132 #x0000000000000005))
(assert (= temp10853_133 temp10853_132))
(assert (= temp10853_134 (select ARGNAME_stride_NAMEEND_VAL temp10853_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10853_114 temp10853_111)
             (bvsle temp10853_118 temp10853_115)
             (bvsle temp10853_122 temp10853_119)
             (bvsle temp10853_126 temp10853_123)
             (bvsle temp10853_130 temp10853_127)
             (bvsle temp10853_134 temp10853_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10853_135 #x0000000000000000))
(assert (= var1191735 temp10853_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10853_136 #x0000000000000001))
(assert (= var1191747 temp10853_136))
(assert (= temp10853_137 #x0000000000000000))
(assert (= var1179826 temp10853_137))
(assert (= temp10853_138 #x0000000000000000))
(assert (= temp10853_139 temp10853_138))
(assert (= temp10853_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10853_139)))
(assert (= temp10853_141 #x0000000000000001))
(assert (= temp10853_142 temp10853_141))
(assert (= temp10853_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10853_142)))
(assert (= temp10853_144 #x0000000000000002))
(assert (= temp10853_145 temp10853_144))
(assert (= temp10853_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10853_145)))
(assert (= temp10853_147 #x0000000000000003))
(assert (= temp10853_148 temp10853_147))
(assert (= temp10853_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10853_148)))
(assert (= temp10853_150 #x0000000000000004))
(assert (= temp10853_151 temp10853_150))
(assert (= temp10853_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10853_151)))
(assert (= temp10853_153 #x0000000000000005))
(assert (= temp10853_154 temp10853_153))
(assert (= temp10853_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10853_154)))
(assert (= temp10853_157 var1179826))
(assert (= temp10853_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10853_157)))
(assert (= temp10853_156 temp10853_158))
(assert (= var1191780
   (ite (bvslt temp10853_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10853_159 #x0000000000000000))
(assert (= var1191780 temp10853_159))
(assert (= temp10853_160 #x0000000000000000))
(assert (= var1179826 temp10853_160))
(assert (= temp10853_162 var1179826))
(assert (= temp10853_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10853_162)))
(assert (= temp10853_161 temp10853_163))
(assert (= var1191802 (bvsmod temp10853_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10853_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10853_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10853_165 #x0000000000000001))
(assert (= var1191803 temp10853_165))
(assert (= temp10853_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10853_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10853_167 #x0000000000000001))
(assert (= var1191823 temp10853_167))
(assert (= temp10853_168 #x0000000000000001))
(assert (= var1180714 temp10853_168))
(assert (= temp10853_169 #x0000000000000000))
(assert (= temp10853_170 temp10853_169))
(assert (= temp10853_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10853_170)))
(assert (= temp10853_172 #x0000000000000001))
(assert (= temp10853_173 temp10853_172))
(assert (= temp10853_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10853_173)))
(assert (= temp10853_175 #x0000000000000002))
(assert (= temp10853_176 temp10853_175))
(assert (= temp10853_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10853_176)))
(assert (= temp10853_178 #x0000000000000003))
(assert (= temp10853_179 temp10853_178))
(assert (= temp10853_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10853_179)))
(assert (= temp10853_181 #x0000000000000004))
(assert (= temp10853_182 temp10853_181))
(assert (= temp10853_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10853_182)))
(assert (= temp10853_184 #x0000000000000005))
(assert (= temp10853_185 temp10853_184))
(assert (= temp10853_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10853_185)))
(assert (= temp10853_187 #x0000000000000000))
(assert (= temp10853_188
   (ite (bvslt var1180714 temp10853_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10853_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10853_188)))
(assert (= var1191831 temp10853_189))
(assert (bvslt (ite (bvslt var1180714 temp10853_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10853_190 #x0000000000000001))
(assert (= var1180714 temp10853_190))
(assert (= temp10853_192 var1180714))
(assert (= temp10853_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10853_192)))
(assert (= temp10853_191 temp10853_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10853_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10853_194 #x0000000000000001))
(assert (= var1191836 temp10853_194))
(assert (= temp10853_195 #x0000000000000000))
(assert (= var1179826 temp10853_195))
(assert (= temp10853_197 var1179826))
(assert (= temp10853_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10853_197)))
(assert (= temp10853_196 temp10853_198))
(assert (= temp10853_199 #x0000000000000002))
(assert (= var1586025 temp10853_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10853_200 #x0000000000000001))
(assert (= var1191993 temp10853_200))
(assert (= temp10853_201 #x0000000000000001))
(assert (= var2700303 temp10853_201))
(assert (= temp10853_202 #x0000000000000001))
(assert (= var2962447 temp10853_202))
(assert (= temp10853_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10853_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10853_204 #x0000000000000001))
(assert (= var211058 temp10853_204))
(assert (= temp10853_205 #x0000000000000001))
(assert (= var211188 temp10853_205))
(assert (= var3879401 var211188))
(assert (= temp10853_206 #x0000000000000000))
(assert (= var3866802 temp10853_206))
(assert (= temp10853_207 #x0000000000000000))
(assert (= temp10853_208
   (ite (bvslt var3866802 temp10853_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10853_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10853_208)))
(assert (= var3879420 temp10853_209))
(assert (bvslt (ite (bvslt var3866802 temp10853_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10853_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10853_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10853_211 #x0000000000000000))
(assert (= var3879421 temp10853_211))
(assert (= temp10853_212 #x0000000000000001))
(assert (= var3867690 temp10853_212))
(assert (= temp10853_213 #x0000000000000000))
(assert (= temp10853_214
   (ite (bvslt var3867690 temp10853_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10853_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10853_214)))
(assert (= var3879423 temp10853_215))
(assert (bvslt (ite (bvslt var3867690 temp10853_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10853_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10853_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10853_217 #x0000000000000001))
(assert (= var3879424 temp10853_217))
(assert (= temp10853_218 #x0000000000000000))
(assert (= var4133117 temp10853_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10853_219 #x0000000000000002))
(assert (= var4339331 temp10853_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10853_220 #x0000000000000000))
(assert (= var4404892 temp10853_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var5452176 var211201))
(assert (= var5714320 var211201))
(assert (= temp10853_221 #x0000000000000000))
(assert (= var6042000 temp10853_221))
(assert (= temp10853_222 #x0000000000000001))
(assert (= var211058 temp10853_222))
(model-add temp10853_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10853_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10853_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10853_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))



