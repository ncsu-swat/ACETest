(declare-fun temp29_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp29_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp29_3 () (_ BitVec 64))
(declare-fun temp29_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp29_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp29_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp29_7 () (_ BitVec 64))
(declare-fun temp29_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp29_9 () (_ BitVec 64))
(declare-fun temp29_10 () (_ BitVec 64))
(declare-fun temp29_11 () (_ BitVec 64))
(declare-fun temp29_12 () (_ BitVec 64))
(declare-fun temp29_13 () (_ BitVec 64))
(declare-fun temp29_14 () (_ BitVec 64))
(declare-fun temp29_15 () (_ BitVec 64))
(declare-fun temp29_16 () (_ BitVec 64))
(declare-fun temp29_17 () (_ BitVec 64))
(declare-fun temp29_18 () (_ BitVec 64))
(declare-fun temp29_19 () (_ BitVec 64))
(declare-fun temp29_20 () (_ BitVec 64))
(declare-fun temp29_21 () (_ BitVec 64))
(declare-fun temp29_22 () (_ BitVec 64))
(declare-fun temp29_23 () (_ BitVec 64))
(declare-fun temp29_24 () (_ BitVec 64))
(declare-fun temp29_25 () (_ BitVec 64))
(declare-fun temp29_26 () (_ BitVec 64))
(declare-fun temp29_27 () (_ BitVec 64))
(declare-fun temp29_28 () (_ BitVec 64))
(declare-fun temp29_29 () (_ BitVec 64))
(declare-fun temp29_30 () (_ BitVec 64))
(declare-fun temp29_31 () (_ BitVec 64))
(declare-fun temp29_32 () (_ BitVec 64))
(declare-fun temp29_33 () (_ BitVec 64))
(declare-fun temp29_34 () (_ BitVec 64))
(declare-fun temp29_35 () (_ BitVec 64))
(declare-fun temp29_36 () (_ BitVec 64))
(declare-fun temp29_37 () (_ BitVec 64))
(declare-fun temp29_38 () (_ BitVec 64))
(declare-fun temp29_39 () (_ BitVec 64))
(declare-fun temp29_40 () (_ BitVec 64))
(declare-fun temp29_41 () (_ BitVec 64))
(declare-fun temp29_42 () (_ BitVec 64))
(declare-fun temp29_43 () (_ BitVec 64))
(declare-fun temp29_44 () (_ BitVec 64))
(declare-fun temp29_45 () (_ BitVec 64))
(declare-fun temp29_46 () (_ BitVec 64))
(declare-fun temp29_47 () (_ BitVec 64))
(declare-fun temp29_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp29_49 () (_ BitVec 64))
(declare-fun temp29_50 () (_ BitVec 64))
(declare-fun temp29_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp29_52 () (_ BitVec 64))
(declare-fun temp29_53 () (_ BitVec 64))
(declare-fun temp29_54 () (_ BitVec 64))
(declare-fun temp29_55 () (_ BitVec 64))
(declare-fun temp29_56 () (_ BitVec 64))
(declare-fun temp29_57 () (_ BitVec 64))
(declare-fun temp29_58 () (_ BitVec 64))
(declare-fun temp29_59 () (_ BitVec 64))
(declare-fun temp29_60 () (_ BitVec 64))
(declare-fun temp29_61 () (_ BitVec 64))
(declare-fun temp29_62 () (_ BitVec 64))
(declare-fun temp29_63 () (_ BitVec 64))
(declare-fun temp29_64 () (_ BitVec 64))
(declare-fun temp29_65 () (_ BitVec 64))
(declare-fun temp29_66 () (_ BitVec 64))
(declare-fun temp29_67 () (_ BitVec 64))
(declare-fun temp29_68 () (_ BitVec 64))
(declare-fun temp29_69 () (_ BitVec 64))
(declare-fun temp29_70 () (_ BitVec 64))
(declare-fun temp29_71 () (_ BitVec 64))
(declare-fun temp29_72 () (_ BitVec 64))
(declare-fun temp29_73 () (_ BitVec 64))
(declare-fun temp29_74 () (_ BitVec 64))
(declare-fun temp29_75 () (_ BitVec 64))
(declare-fun temp29_76 () (_ BitVec 64))
(declare-fun temp29_77 () (_ BitVec 64))
(declare-fun temp29_78 () (_ BitVec 64))
(declare-fun temp29_79 () (_ BitVec 64))
(declare-fun temp29_80 () (_ BitVec 64))
(declare-fun temp29_81 () (_ BitVec 64))
(declare-fun temp29_82 () (_ BitVec 64))
(declare-fun temp29_83 () (_ BitVec 64))
(declare-fun temp29_84 () (_ BitVec 64))
(declare-fun temp29_85 () (_ BitVec 64))
(declare-fun temp29_86 () (_ BitVec 64))
(declare-fun temp29_87 () (_ BitVec 64))
(declare-fun temp29_88 () (_ BitVec 64))
(declare-fun temp29_89 () (_ BitVec 64))
(declare-fun temp29_90 () (_ BitVec 64))
(declare-fun temp29_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp29_92 () (_ BitVec 64))
(declare-fun temp29_93 () (_ BitVec 64))
(declare-fun temp29_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp29_95 () (_ BitVec 64))
(declare-fun temp29_96 () (_ BitVec 64))
(declare-fun temp29_97 () (_ BitVec 64))
(declare-fun temp29_98 () (_ BitVec 64))
(declare-fun temp29_99 () (_ BitVec 64))
(declare-fun temp29_100 () (_ BitVec 64))
(declare-fun temp29_101 () (_ BitVec 64))
(declare-fun temp29_102 () (_ BitVec 64))
(declare-fun temp29_103 () (_ BitVec 64))
(declare-fun temp29_104 () (_ BitVec 64))
(declare-fun temp29_105 () (_ BitVec 64))
(declare-fun temp29_106 () (_ BitVec 64))
(declare-fun temp29_107 () (_ BitVec 64))
(declare-fun temp29_108 () (_ BitVec 64))
(declare-fun temp29_109 () (_ BitVec 64))
(declare-fun temp29_110 () (_ BitVec 64))
(declare-fun temp29_111 () (_ BitVec 64))
(declare-fun temp29_112 () (_ BitVec 64))
(declare-fun temp29_113 () (_ BitVec 64))
(declare-fun temp29_114 () (_ BitVec 64))
(declare-fun temp29_115 () (_ BitVec 64))
(declare-fun temp29_116 () (_ BitVec 64))
(declare-fun temp29_117 () (_ BitVec 64))
(declare-fun temp29_118 () (_ BitVec 64))
(declare-fun temp29_119 () (_ BitVec 64))
(declare-fun temp29_120 () (_ BitVec 64))
(declare-fun temp29_121 () (_ BitVec 64))
(declare-fun temp29_122 () (_ BitVec 64))
(declare-fun temp29_123 () (_ BitVec 64))
(declare-fun temp29_124 () (_ BitVec 64))
(declare-fun temp29_125 () (_ BitVec 64))
(declare-fun temp29_126 () (_ BitVec 64))
(declare-fun temp29_127 () (_ BitVec 64))
(declare-fun temp29_128 () (_ BitVec 64))
(declare-fun temp29_129 () (_ BitVec 64))
(declare-fun temp29_130 () (_ BitVec 64))
(declare-fun temp29_131 () (_ BitVec 64))
(declare-fun temp29_132 () (_ BitVec 64))
(declare-fun temp29_133 () (_ BitVec 64))
(declare-fun temp29_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp29_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp29_136 () (_ BitVec 64))
(declare-fun temp29_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp29_138 () (_ BitVec 64))
(declare-fun temp29_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp29_140 () (_ BitVec 64))
(declare-fun temp29_141 () (_ BitVec 64))
(declare-fun temp29_142 () (_ BitVec 64))
(declare-fun temp29_143 () (_ BitVec 64))
(declare-fun temp29_144 () (_ BitVec 64))
(declare-fun temp29_145 () (_ BitVec 64))
(declare-fun temp29_146 () (_ BitVec 64))
(declare-fun temp29_147 () (_ BitVec 64))
(declare-fun temp29_148 () (_ BitVec 64))
(declare-fun temp29_149 () (_ BitVec 64))
(declare-fun temp29_150 () (_ BitVec 64))
(declare-fun temp29_151 () (_ BitVec 64))
(declare-fun temp29_152 () (_ BitVec 64))
(declare-fun temp29_153 () (_ BitVec 64))
(declare-fun temp29_154 () (_ BitVec 64))
(declare-fun temp29_155 () (_ BitVec 64))
(declare-fun temp29_157 () (_ BitVec 64))
(declare-fun temp29_158 () (_ BitVec 64))
(declare-fun temp29_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp29_159 () (_ BitVec 64))
(declare-fun temp29_160 () (_ BitVec 64))
(declare-fun temp29_162 () (_ BitVec 64))
(declare-fun temp29_163 () (_ BitVec 64))
(declare-fun temp29_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp29_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp29_165 () (_ BitVec 64))
(declare-fun temp29_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp29_167 () (_ BitVec 64))
(declare-fun temp29_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp29_169 () (_ BitVec 64))
(declare-fun temp29_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp29_171 () (_ BitVec 64))
(declare-fun temp29_172 () (_ BitVec 64))
(declare-fun temp29_173 () (_ BitVec 64))
(declare-fun temp29_174 () (_ BitVec 64))
(declare-fun temp29_175 () (_ BitVec 64))
(declare-fun temp29_176 () (_ BitVec 64))
(declare-fun temp29_177 () (_ BitVec 64))
(declare-fun temp29_178 () (_ BitVec 64))
(declare-fun temp29_179 () (_ BitVec 64))
(declare-fun temp29_180 () (_ BitVec 64))
(declare-fun temp29_181 () (_ BitVec 64))
(declare-fun temp29_182 () (_ BitVec 64))
(declare-fun temp29_183 () (_ BitVec 64))
(declare-fun temp29_184 () (_ BitVec 64))
(declare-fun temp29_185 () (_ BitVec 64))
(declare-fun temp29_186 () (_ BitVec 64))
(declare-fun temp29_187 () (_ BitVec 64))
(declare-fun temp29_188 () (_ BitVec 64))
(declare-fun temp29_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp29_190 () (_ BitVec 64))
(declare-fun temp29_192 () (_ BitVec 64))
(declare-fun temp29_193 () (_ BitVec 64))
(declare-fun temp29_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp29_194 () (_ BitVec 64))
(declare-fun temp29_195 () (_ BitVec 64))
(declare-fun temp29_197 () (_ BitVec 64))
(declare-fun temp29_198 () (_ BitVec 64))
(declare-fun temp29_196 () (_ BitVec 64))
(declare-fun temp29_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp29_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp29_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp29_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp29_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp29_204 () (_ BitVec 64))
(declare-fun temp29_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp29_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp29_207 () (_ BitVec 64))
(declare-fun temp29_208 () (_ BitVec 64))
(declare-fun temp29_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp29_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp29_211 () (_ BitVec 64))
(declare-fun temp29_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp29_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp29_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4993424 () (_ BitVec 64))
(declare-fun var211388 () (_ BitVec 64))
(declare-fun temp29_215 () (_ BitVec 64))
(declare-fun var211389 () (_ BitVec 64))
(declare-fun var5914445 () (_ BitVec 64))
(declare-fun temp29_216 () (_ BitVec 64))
(assert (= temp29_1 #x0000000000000001))
(assert (= var77203 temp29_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp29_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp29_2)))
(assert (= temp29_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp29_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp29_4 #x0000000000000000))
(assert (= var210941 temp29_4))
(assert (= temp29_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp29_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp29_6 #x0000000000000000))
(assert (= var210986 temp29_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp29_7 #x0000000000000000))
(assert (= temp29_8 temp29_7))
(assert (= temp29_9 (select ARGNAME_padding_NAMEEND_VAL temp29_8)))
(assert (= temp29_10 #x0000000000000001))
(assert (= temp29_11 temp29_10))
(assert (= temp29_12 (select ARGNAME_padding_NAMEEND_VAL temp29_11)))
(assert (= temp29_13 #x0000000000000002))
(assert (= temp29_14 temp29_13))
(assert (= temp29_15 (select ARGNAME_padding_NAMEEND_VAL temp29_14)))
(assert (= temp29_16 #x0000000000000003))
(assert (= temp29_17 temp29_16))
(assert (= temp29_18 (select ARGNAME_padding_NAMEEND_VAL temp29_17)))
(assert (= temp29_19 #x0000000000000004))
(assert (= temp29_20 temp29_19))
(assert (= temp29_21 (select ARGNAME_padding_NAMEEND_VAL temp29_20)))
(assert (= temp29_22 #x0000000000000005))
(assert (= temp29_23 temp29_22))
(assert (= temp29_24 (select ARGNAME_padding_NAMEEND_VAL temp29_23)))
(assert (= temp29_25 #x0000000000000000))
(assert (= temp29_26 #x0000000000000000))
(assert (= temp29_27 temp29_26))
(assert (= temp29_28 (select ARGNAME_padding_NAMEEND_VAL temp29_27)))
(assert (= temp29_29 #x0000000000000000))
(assert (= temp29_30 #x0000000000000001))
(assert (= temp29_31 temp29_30))
(assert (= temp29_32 (select ARGNAME_padding_NAMEEND_VAL temp29_31)))
(assert (= temp29_33 #x0000000000000000))
(assert (= temp29_34 #x0000000000000002))
(assert (= temp29_35 temp29_34))
(assert (= temp29_36 (select ARGNAME_padding_NAMEEND_VAL temp29_35)))
(assert (= temp29_37 #x0000000000000000))
(assert (= temp29_38 #x0000000000000003))
(assert (= temp29_39 temp29_38))
(assert (= temp29_40 (select ARGNAME_padding_NAMEEND_VAL temp29_39)))
(assert (= temp29_41 #x0000000000000000))
(assert (= temp29_42 #x0000000000000004))
(assert (= temp29_43 temp29_42))
(assert (= temp29_44 (select ARGNAME_padding_NAMEEND_VAL temp29_43)))
(assert (= temp29_45 #x0000000000000000))
(assert (= temp29_46 #x0000000000000005))
(assert (= temp29_47 temp29_46))
(assert (= temp29_48 (select ARGNAME_padding_NAMEEND_VAL temp29_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp29_28 temp29_25)
             (bvslt temp29_32 temp29_29)
             (bvslt temp29_36 temp29_33)
             (bvslt temp29_40 temp29_37)
             (bvslt temp29_44 temp29_41)
             (bvslt temp29_48 temp29_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp29_49 #x0000000000000000))
(assert (= var1191714 temp29_49))
(assert (= temp29_50 #x0000000000000000))
(assert (= temp29_51 temp29_50))
(assert (= temp29_52 (select ARGNAME_output_padding_NAMEEND_VAL temp29_51)))
(assert (= temp29_53 #x0000000000000001))
(assert (= temp29_54 temp29_53))
(assert (= temp29_55 (select ARGNAME_output_padding_NAMEEND_VAL temp29_54)))
(assert (= temp29_56 #x0000000000000002))
(assert (= temp29_57 temp29_56))
(assert (= temp29_58 (select ARGNAME_output_padding_NAMEEND_VAL temp29_57)))
(assert (= temp29_59 #x0000000000000003))
(assert (= temp29_60 temp29_59))
(assert (= temp29_61 (select ARGNAME_output_padding_NAMEEND_VAL temp29_60)))
(assert (= temp29_62 #x0000000000000004))
(assert (= temp29_63 temp29_62))
(assert (= temp29_64 (select ARGNAME_output_padding_NAMEEND_VAL temp29_63)))
(assert (= temp29_65 #x0000000000000005))
(assert (= temp29_66 temp29_65))
(assert (= temp29_67 (select ARGNAME_output_padding_NAMEEND_VAL temp29_66)))
(assert (= temp29_68 #x0000000000000000))
(assert (= temp29_69 #x0000000000000000))
(assert (= temp29_70 temp29_69))
(assert (= temp29_71 (select ARGNAME_output_padding_NAMEEND_VAL temp29_70)))
(assert (= temp29_72 #x0000000000000000))
(assert (= temp29_73 #x0000000000000001))
(assert (= temp29_74 temp29_73))
(assert (= temp29_75 (select ARGNAME_output_padding_NAMEEND_VAL temp29_74)))
(assert (= temp29_76 #x0000000000000000))
(assert (= temp29_77 #x0000000000000002))
(assert (= temp29_78 temp29_77))
(assert (= temp29_79 (select ARGNAME_output_padding_NAMEEND_VAL temp29_78)))
(assert (= temp29_80 #x0000000000000000))
(assert (= temp29_81 #x0000000000000003))
(assert (= temp29_82 temp29_81))
(assert (= temp29_83 (select ARGNAME_output_padding_NAMEEND_VAL temp29_82)))
(assert (= temp29_84 #x0000000000000000))
(assert (= temp29_85 #x0000000000000004))
(assert (= temp29_86 temp29_85))
(assert (= temp29_87 (select ARGNAME_output_padding_NAMEEND_VAL temp29_86)))
(assert (= temp29_88 #x0000000000000000))
(assert (= temp29_89 #x0000000000000005))
(assert (= temp29_90 temp29_89))
(assert (= temp29_91 (select ARGNAME_output_padding_NAMEEND_VAL temp29_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp29_71 temp29_68)
             (bvslt temp29_75 temp29_72)
             (bvslt temp29_79 temp29_76)
             (bvslt temp29_83 temp29_80)
             (bvslt temp29_87 temp29_84)
             (bvslt temp29_91 temp29_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp29_92 #x0000000000000000))
(assert (= var1191725 temp29_92))
(assert (= temp29_93 #x0000000000000000))
(assert (= temp29_94 temp29_93))
(assert (= temp29_95 (select ARGNAME_stride_NAMEEND_VAL temp29_94)))
(assert (= temp29_96 #x0000000000000001))
(assert (= temp29_97 temp29_96))
(assert (= temp29_98 (select ARGNAME_stride_NAMEEND_VAL temp29_97)))
(assert (= temp29_99 #x0000000000000002))
(assert (= temp29_100 temp29_99))
(assert (= temp29_101 (select ARGNAME_stride_NAMEEND_VAL temp29_100)))
(assert (= temp29_102 #x0000000000000003))
(assert (= temp29_103 temp29_102))
(assert (= temp29_104 (select ARGNAME_stride_NAMEEND_VAL temp29_103)))
(assert (= temp29_105 #x0000000000000004))
(assert (= temp29_106 temp29_105))
(assert (= temp29_107 (select ARGNAME_stride_NAMEEND_VAL temp29_106)))
(assert (= temp29_108 #x0000000000000005))
(assert (= temp29_109 temp29_108))
(assert (= temp29_110 (select ARGNAME_stride_NAMEEND_VAL temp29_109)))
(assert (= temp29_111 #x0000000000000000))
(assert (= temp29_112 #x0000000000000000))
(assert (= temp29_113 temp29_112))
(assert (= temp29_114 (select ARGNAME_stride_NAMEEND_VAL temp29_113)))
(assert (= temp29_115 #x0000000000000000))
(assert (= temp29_116 #x0000000000000001))
(assert (= temp29_117 temp29_116))
(assert (= temp29_118 (select ARGNAME_stride_NAMEEND_VAL temp29_117)))
(assert (= temp29_119 #x0000000000000000))
(assert (= temp29_120 #x0000000000000002))
(assert (= temp29_121 temp29_120))
(assert (= temp29_122 (select ARGNAME_stride_NAMEEND_VAL temp29_121)))
(assert (= temp29_123 #x0000000000000000))
(assert (= temp29_124 #x0000000000000003))
(assert (= temp29_125 temp29_124))
(assert (= temp29_126 (select ARGNAME_stride_NAMEEND_VAL temp29_125)))
(assert (= temp29_127 #x0000000000000000))
(assert (= temp29_128 #x0000000000000004))
(assert (= temp29_129 temp29_128))
(assert (= temp29_130 (select ARGNAME_stride_NAMEEND_VAL temp29_129)))
(assert (= temp29_131 #x0000000000000000))
(assert (= temp29_132 #x0000000000000005))
(assert (= temp29_133 temp29_132))
(assert (= temp29_134 (select ARGNAME_stride_NAMEEND_VAL temp29_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp29_114 temp29_111)
             (bvsle temp29_118 temp29_115)
             (bvsle temp29_122 temp29_119)
             (bvsle temp29_126 temp29_123)
             (bvsle temp29_130 temp29_127)
             (bvsle temp29_134 temp29_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp29_135 #x0000000000000000))
(assert (= var1191735 temp29_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp29_136 #x0000000000000001))
(assert (= var1191747 temp29_136))
(assert (= temp29_137 #x0000000000000000))
(assert (= var1179826 temp29_137))
(assert (= temp29_138 #x0000000000000000))
(assert (= temp29_139 temp29_138))
(assert (= temp29_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp29_139)))
(assert (= temp29_141 #x0000000000000001))
(assert (= temp29_142 temp29_141))
(assert (= temp29_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp29_142)))
(assert (= temp29_144 #x0000000000000002))
(assert (= temp29_145 temp29_144))
(assert (= temp29_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp29_145)))
(assert (= temp29_147 #x0000000000000003))
(assert (= temp29_148 temp29_147))
(assert (= temp29_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp29_148)))
(assert (= temp29_150 #x0000000000000004))
(assert (= temp29_151 temp29_150))
(assert (= temp29_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp29_151)))
(assert (= temp29_153 #x0000000000000005))
(assert (= temp29_154 temp29_153))
(assert (= temp29_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp29_154)))
(assert (= temp29_157 var1179826))
(assert (= temp29_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp29_157)))
(assert (= temp29_156 temp29_158))
(assert (= var1191780
   (ite (bvslt temp29_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp29_159 #x0000000000000000))
(assert (= var1191780 temp29_159))
(assert (= temp29_160 #x0000000000000000))
(assert (= var1179826 temp29_160))
(assert (= temp29_162 var1179826))
(assert (= temp29_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp29_162)))
(assert (= temp29_161 temp29_163))
(assert (= var1191802 (bvsmod temp29_161 ARGNAME_groups_NAMEEND)))
(assert (= temp29_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp29_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp29_165 #x0000000000000001))
(assert (= var1191803 temp29_165))
(assert (= temp29_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp29_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp29_167 #x0000000000000001))
(assert (= var1191823 temp29_167))
(assert (= temp29_168 #x0000000000000001))
(assert (= var1180714 temp29_168))
(assert (= temp29_169 #x0000000000000000))
(assert (= temp29_170 temp29_169))
(assert (= temp29_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp29_170)))
(assert (= temp29_172 #x0000000000000001))
(assert (= temp29_173 temp29_172))
(assert (= temp29_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp29_173)))
(assert (= temp29_175 #x0000000000000002))
(assert (= temp29_176 temp29_175))
(assert (= temp29_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp29_176)))
(assert (= temp29_178 #x0000000000000003))
(assert (= temp29_179 temp29_178))
(assert (= temp29_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp29_179)))
(assert (= temp29_181 #x0000000000000004))
(assert (= temp29_182 temp29_181))
(assert (= temp29_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp29_182)))
(assert (= temp29_184 #x0000000000000005))
(assert (= temp29_185 temp29_184))
(assert (= temp29_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp29_185)))
(assert (= temp29_187 #x0000000000000000))
(assert (= temp29_188
   (ite (bvslt var1180714 temp29_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp29_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp29_188)))
(assert (= var1191831 temp29_189))
(assert (bvslt (ite (bvslt var1180714 temp29_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp29_190 #x0000000000000001))
(assert (= var1180714 temp29_190))
(assert (= temp29_192 var1180714))
(assert (= temp29_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp29_192)))
(assert (= temp29_191 temp29_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp29_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp29_194 #x0000000000000001))
(assert (= var1191836 temp29_194))
(assert (= temp29_195 #x0000000000000000))
(assert (= var1179826 temp29_195))
(assert (= temp29_197 var1179826))
(assert (= temp29_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp29_197)))
(assert (= temp29_196 temp29_198))
(assert (= temp29_199 #x0000000000000002))
(assert (= var1586025 temp29_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp29_200 #x0000000000000001))
(assert (= var1191993 temp29_200))
(assert (= temp29_201 #x0000000000000001))
(assert (= var2700303 temp29_201))
(assert (= temp29_202 #x0000000000000001))
(assert (= var2962447 temp29_202))
(assert (= temp29_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp29_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp29_204 #x0000000000000001))
(assert (= var211058 temp29_204))
(assert (= temp29_205 #x0000000000000001))
(assert (= var211188 temp29_205))
(assert (= var3879401 var211188))
(assert (= temp29_206 #x0000000000000000))
(assert (= var3866802 temp29_206))
(assert (= temp29_207 #x0000000000000000))
(assert (= temp29_208
   (ite (bvslt var3866802 temp29_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp29_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp29_208)))
(assert (= var3879420 temp29_209))
(assert (bvslt (ite (bvslt var3866802 temp29_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp29_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp29_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp29_211 #x0000000000000001))
(assert (= var3879421 temp29_211))
(assert (= temp29_212 #x0000000000000000))
(assert (= var4079423 temp29_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp29_213 #x0000000000000002))
(assert (= var4208259 temp29_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp29_214 #x0000000000000000))
(assert (= var4273820 temp29_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4993424 var211201))
(assert (= var211388 var210913))
(assert (= temp29_215 #x0000000000000000))
(assert (= var211389
   (ite (distinct var211388 temp29_215) #x0000000000000001 #x0000000000000000)))
(assert (= var5914445 var211389))
(assert (= temp29_216 #x0000000000000001))
(assert (= var211058 temp29_216))
(model-add temp29_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp29_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp29_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp29_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





