(declare-fun temp11036_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp11036_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp11036_3 () (_ BitVec 64))
(declare-fun temp11036_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp11036_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp11036_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp11036_7 () (_ BitVec 64))
(declare-fun temp11036_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11036_9 () (_ BitVec 64))
(declare-fun temp11036_10 () (_ BitVec 64))
(declare-fun temp11036_11 () (_ BitVec 64))
(declare-fun temp11036_12 () (_ BitVec 64))
(declare-fun temp11036_13 () (_ BitVec 64))
(declare-fun temp11036_14 () (_ BitVec 64))
(declare-fun temp11036_15 () (_ BitVec 64))
(declare-fun temp11036_16 () (_ BitVec 64))
(declare-fun temp11036_17 () (_ BitVec 64))
(declare-fun temp11036_18 () (_ BitVec 64))
(declare-fun temp11036_19 () (_ BitVec 64))
(declare-fun temp11036_20 () (_ BitVec 64))
(declare-fun temp11036_21 () (_ BitVec 64))
(declare-fun temp11036_22 () (_ BitVec 64))
(declare-fun temp11036_23 () (_ BitVec 64))
(declare-fun temp11036_24 () (_ BitVec 64))
(declare-fun temp11036_25 () (_ BitVec 64))
(declare-fun temp11036_26 () (_ BitVec 64))
(declare-fun temp11036_27 () (_ BitVec 64))
(declare-fun temp11036_28 () (_ BitVec 64))
(declare-fun temp11036_29 () (_ BitVec 64))
(declare-fun temp11036_30 () (_ BitVec 64))
(declare-fun temp11036_31 () (_ BitVec 64))
(declare-fun temp11036_32 () (_ BitVec 64))
(declare-fun temp11036_33 () (_ BitVec 64))
(declare-fun temp11036_34 () (_ BitVec 64))
(declare-fun temp11036_35 () (_ BitVec 64))
(declare-fun temp11036_36 () (_ BitVec 64))
(declare-fun temp11036_37 () (_ BitVec 64))
(declare-fun temp11036_38 () (_ BitVec 64))
(declare-fun temp11036_39 () (_ BitVec 64))
(declare-fun temp11036_40 () (_ BitVec 64))
(declare-fun temp11036_41 () (_ BitVec 64))
(declare-fun temp11036_42 () (_ BitVec 64))
(declare-fun temp11036_43 () (_ BitVec 64))
(declare-fun temp11036_44 () (_ BitVec 64))
(declare-fun temp11036_45 () (_ BitVec 64))
(declare-fun temp11036_46 () (_ BitVec 64))
(declare-fun temp11036_47 () (_ BitVec 64))
(declare-fun temp11036_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp11036_49 () (_ BitVec 64))
(declare-fun temp11036_50 () (_ BitVec 64))
(declare-fun temp11036_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11036_52 () (_ BitVec 64))
(declare-fun temp11036_53 () (_ BitVec 64))
(declare-fun temp11036_54 () (_ BitVec 64))
(declare-fun temp11036_55 () (_ BitVec 64))
(declare-fun temp11036_56 () (_ BitVec 64))
(declare-fun temp11036_57 () (_ BitVec 64))
(declare-fun temp11036_58 () (_ BitVec 64))
(declare-fun temp11036_59 () (_ BitVec 64))
(declare-fun temp11036_60 () (_ BitVec 64))
(declare-fun temp11036_61 () (_ BitVec 64))
(declare-fun temp11036_62 () (_ BitVec 64))
(declare-fun temp11036_63 () (_ BitVec 64))
(declare-fun temp11036_64 () (_ BitVec 64))
(declare-fun temp11036_65 () (_ BitVec 64))
(declare-fun temp11036_66 () (_ BitVec 64))
(declare-fun temp11036_67 () (_ BitVec 64))
(declare-fun temp11036_68 () (_ BitVec 64))
(declare-fun temp11036_69 () (_ BitVec 64))
(declare-fun temp11036_70 () (_ BitVec 64))
(declare-fun temp11036_71 () (_ BitVec 64))
(declare-fun temp11036_72 () (_ BitVec 64))
(declare-fun temp11036_73 () (_ BitVec 64))
(declare-fun temp11036_74 () (_ BitVec 64))
(declare-fun temp11036_75 () (_ BitVec 64))
(declare-fun temp11036_76 () (_ BitVec 64))
(declare-fun temp11036_77 () (_ BitVec 64))
(declare-fun temp11036_78 () (_ BitVec 64))
(declare-fun temp11036_79 () (_ BitVec 64))
(declare-fun temp11036_80 () (_ BitVec 64))
(declare-fun temp11036_81 () (_ BitVec 64))
(declare-fun temp11036_82 () (_ BitVec 64))
(declare-fun temp11036_83 () (_ BitVec 64))
(declare-fun temp11036_84 () (_ BitVec 64))
(declare-fun temp11036_85 () (_ BitVec 64))
(declare-fun temp11036_86 () (_ BitVec 64))
(declare-fun temp11036_87 () (_ BitVec 64))
(declare-fun temp11036_88 () (_ BitVec 64))
(declare-fun temp11036_89 () (_ BitVec 64))
(declare-fun temp11036_90 () (_ BitVec 64))
(declare-fun temp11036_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp11036_92 () (_ BitVec 64))
(declare-fun temp11036_93 () (_ BitVec 64))
(declare-fun temp11036_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11036_95 () (_ BitVec 64))
(declare-fun temp11036_96 () (_ BitVec 64))
(declare-fun temp11036_97 () (_ BitVec 64))
(declare-fun temp11036_98 () (_ BitVec 64))
(declare-fun temp11036_99 () (_ BitVec 64))
(declare-fun temp11036_100 () (_ BitVec 64))
(declare-fun temp11036_101 () (_ BitVec 64))
(declare-fun temp11036_102 () (_ BitVec 64))
(declare-fun temp11036_103 () (_ BitVec 64))
(declare-fun temp11036_104 () (_ BitVec 64))
(declare-fun temp11036_105 () (_ BitVec 64))
(declare-fun temp11036_106 () (_ BitVec 64))
(declare-fun temp11036_107 () (_ BitVec 64))
(declare-fun temp11036_108 () (_ BitVec 64))
(declare-fun temp11036_109 () (_ BitVec 64))
(declare-fun temp11036_110 () (_ BitVec 64))
(declare-fun temp11036_111 () (_ BitVec 64))
(declare-fun temp11036_112 () (_ BitVec 64))
(declare-fun temp11036_113 () (_ BitVec 64))
(declare-fun temp11036_114 () (_ BitVec 64))
(declare-fun temp11036_115 () (_ BitVec 64))
(declare-fun temp11036_116 () (_ BitVec 64))
(declare-fun temp11036_117 () (_ BitVec 64))
(declare-fun temp11036_118 () (_ BitVec 64))
(declare-fun temp11036_119 () (_ BitVec 64))
(declare-fun temp11036_120 () (_ BitVec 64))
(declare-fun temp11036_121 () (_ BitVec 64))
(declare-fun temp11036_122 () (_ BitVec 64))
(declare-fun temp11036_123 () (_ BitVec 64))
(declare-fun temp11036_124 () (_ BitVec 64))
(declare-fun temp11036_125 () (_ BitVec 64))
(declare-fun temp11036_126 () (_ BitVec 64))
(declare-fun temp11036_127 () (_ BitVec 64))
(declare-fun temp11036_128 () (_ BitVec 64))
(declare-fun temp11036_129 () (_ BitVec 64))
(declare-fun temp11036_130 () (_ BitVec 64))
(declare-fun temp11036_131 () (_ BitVec 64))
(declare-fun temp11036_132 () (_ BitVec 64))
(declare-fun temp11036_133 () (_ BitVec 64))
(declare-fun temp11036_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp11036_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp11036_136 () (_ BitVec 64))
(declare-fun temp11036_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp11036_138 () (_ BitVec 64))
(declare-fun temp11036_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11036_140 () (_ BitVec 64))
(declare-fun temp11036_141 () (_ BitVec 64))
(declare-fun temp11036_142 () (_ BitVec 64))
(declare-fun temp11036_143 () (_ BitVec 64))
(declare-fun temp11036_144 () (_ BitVec 64))
(declare-fun temp11036_145 () (_ BitVec 64))
(declare-fun temp11036_146 () (_ BitVec 64))
(declare-fun temp11036_147 () (_ BitVec 64))
(declare-fun temp11036_148 () (_ BitVec 64))
(declare-fun temp11036_149 () (_ BitVec 64))
(declare-fun temp11036_150 () (_ BitVec 64))
(declare-fun temp11036_151 () (_ BitVec 64))
(declare-fun temp11036_152 () (_ BitVec 64))
(declare-fun temp11036_153 () (_ BitVec 64))
(declare-fun temp11036_154 () (_ BitVec 64))
(declare-fun temp11036_155 () (_ BitVec 64))
(declare-fun temp11036_157 () (_ BitVec 64))
(declare-fun temp11036_158 () (_ BitVec 64))
(declare-fun temp11036_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp11036_159 () (_ BitVec 64))
(declare-fun temp11036_160 () (_ BitVec 64))
(declare-fun temp11036_162 () (_ BitVec 64))
(declare-fun temp11036_163 () (_ BitVec 64))
(declare-fun temp11036_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp11036_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp11036_165 () (_ BitVec 64))
(declare-fun temp11036_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp11036_167 () (_ BitVec 64))
(declare-fun temp11036_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp11036_169 () (_ BitVec 64))
(declare-fun temp11036_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11036_171 () (_ BitVec 64))
(declare-fun temp11036_172 () (_ BitVec 64))
(declare-fun temp11036_173 () (_ BitVec 64))
(declare-fun temp11036_174 () (_ BitVec 64))
(declare-fun temp11036_175 () (_ BitVec 64))
(declare-fun temp11036_176 () (_ BitVec 64))
(declare-fun temp11036_177 () (_ BitVec 64))
(declare-fun temp11036_178 () (_ BitVec 64))
(declare-fun temp11036_179 () (_ BitVec 64))
(declare-fun temp11036_180 () (_ BitVec 64))
(declare-fun temp11036_181 () (_ BitVec 64))
(declare-fun temp11036_182 () (_ BitVec 64))
(declare-fun temp11036_183 () (_ BitVec 64))
(declare-fun temp11036_184 () (_ BitVec 64))
(declare-fun temp11036_185 () (_ BitVec 64))
(declare-fun temp11036_186 () (_ BitVec 64))
(declare-fun temp11036_187 () (_ BitVec 64))
(declare-fun temp11036_188 () (_ BitVec 64))
(declare-fun temp11036_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp11036_190 () (_ BitVec 64))
(declare-fun temp11036_192 () (_ BitVec 64))
(declare-fun temp11036_193 () (_ BitVec 64))
(declare-fun temp11036_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp11036_194 () (_ BitVec 64))
(declare-fun temp11036_195 () (_ BitVec 64))
(declare-fun temp11036_197 () (_ BitVec 64))
(declare-fun temp11036_198 () (_ BitVec 64))
(declare-fun temp11036_196 () (_ BitVec 64))
(declare-fun temp11036_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp11036_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp11036_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp11036_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp11036_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp11036_204 () (_ BitVec 64))
(declare-fun temp11036_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp11036_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp11036_207 () (_ BitVec 64))
(declare-fun temp11036_208 () (_ BitVec 64))
(declare-fun temp11036_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp11036_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp11036_211 () (_ BitVec 64))
(declare-fun temp11036_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp11036_213 () (_ BitVec 64))
(declare-fun temp11036_214 () (_ BitVec 64))
(declare-fun temp11036_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp11036_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp11036_217 () (_ BitVec 64))
(declare-fun temp11036_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp11036_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp11036_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var4600208 () (_ BitVec 64))
(declare-fun var4862352 () (_ BitVec 64))
(declare-fun temp11036_221 () (_ BitVec 64))
(declare-fun var212414 () (_ BitVec 64))
(declare-fun temp11036_222 () (_ BitVec 64))
(declare-fun temp11036_223 () (_ BitVec 64))
(declare-fun var5191299 () (_ BitVec 64))
(declare-fun var5191301 () (_ BitVec 64))
(declare-fun var5256844 () (_ BitVec 64))
(declare-fun var5256845 () (_ BitVec 64))
(declare-fun temp11036_224 () (_ BitVec 64))
(declare-fun temp11036_225 () (_ BitVec 64))
(declare-fun var6501140 () (_ BitVec 64))
(declare-fun var6501107 () (_ BitVec 64))
(declare-fun var6369671 () (_ BitVec 64))
(declare-fun var6369667 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp11036_226 () (_ BitVec 64))
(assert (= temp11036_1 #x0000000000000001))
(assert (= var77203 temp11036_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp11036_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp11036_2)))
(assert (= temp11036_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp11036_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11036_4 #x0000000000000000))
(assert (= var210941 temp11036_4))
(assert (= temp11036_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp11036_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11036_6 #x0000000000000000))
(assert (= var210986 temp11036_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp11036_7 #x0000000000000000))
(assert (= temp11036_8 temp11036_7))
(assert (= temp11036_9 (select ARGNAME_padding_NAMEEND_VAL temp11036_8)))
(assert (= temp11036_10 #x0000000000000001))
(assert (= temp11036_11 temp11036_10))
(assert (= temp11036_12 (select ARGNAME_padding_NAMEEND_VAL temp11036_11)))
(assert (= temp11036_13 #x0000000000000002))
(assert (= temp11036_14 temp11036_13))
(assert (= temp11036_15 (select ARGNAME_padding_NAMEEND_VAL temp11036_14)))
(assert (= temp11036_16 #x0000000000000003))
(assert (= temp11036_17 temp11036_16))
(assert (= temp11036_18 (select ARGNAME_padding_NAMEEND_VAL temp11036_17)))
(assert (= temp11036_19 #x0000000000000004))
(assert (= temp11036_20 temp11036_19))
(assert (= temp11036_21 (select ARGNAME_padding_NAMEEND_VAL temp11036_20)))
(assert (= temp11036_22 #x0000000000000005))
(assert (= temp11036_23 temp11036_22))
(assert (= temp11036_24 (select ARGNAME_padding_NAMEEND_VAL temp11036_23)))
(assert (= temp11036_25 #x0000000000000000))
(assert (= temp11036_26 #x0000000000000000))
(assert (= temp11036_27 temp11036_26))
(assert (= temp11036_28 (select ARGNAME_padding_NAMEEND_VAL temp11036_27)))
(assert (= temp11036_29 #x0000000000000000))
(assert (= temp11036_30 #x0000000000000001))
(assert (= temp11036_31 temp11036_30))
(assert (= temp11036_32 (select ARGNAME_padding_NAMEEND_VAL temp11036_31)))
(assert (= temp11036_33 #x0000000000000000))
(assert (= temp11036_34 #x0000000000000002))
(assert (= temp11036_35 temp11036_34))
(assert (= temp11036_36 (select ARGNAME_padding_NAMEEND_VAL temp11036_35)))
(assert (= temp11036_37 #x0000000000000000))
(assert (= temp11036_38 #x0000000000000003))
(assert (= temp11036_39 temp11036_38))
(assert (= temp11036_40 (select ARGNAME_padding_NAMEEND_VAL temp11036_39)))
(assert (= temp11036_41 #x0000000000000000))
(assert (= temp11036_42 #x0000000000000004))
(assert (= temp11036_43 temp11036_42))
(assert (= temp11036_44 (select ARGNAME_padding_NAMEEND_VAL temp11036_43)))
(assert (= temp11036_45 #x0000000000000000))
(assert (= temp11036_46 #x0000000000000005))
(assert (= temp11036_47 temp11036_46))
(assert (= temp11036_48 (select ARGNAME_padding_NAMEEND_VAL temp11036_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp11036_28 temp11036_25)
             (bvslt temp11036_32 temp11036_29)
             (bvslt temp11036_36 temp11036_33)
             (bvslt temp11036_40 temp11036_37)
             (bvslt temp11036_44 temp11036_41)
             (bvslt temp11036_48 temp11036_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11036_49 #x0000000000000000))
(assert (= var1191714 temp11036_49))
(assert (= temp11036_50 #x0000000000000000))
(assert (= temp11036_51 temp11036_50))
(assert (= temp11036_52 (select ARGNAME_output_padding_NAMEEND_VAL temp11036_51)))
(assert (= temp11036_53 #x0000000000000001))
(assert (= temp11036_54 temp11036_53))
(assert (= temp11036_55 (select ARGNAME_output_padding_NAMEEND_VAL temp11036_54)))
(assert (= temp11036_56 #x0000000000000002))
(assert (= temp11036_57 temp11036_56))
(assert (= temp11036_58 (select ARGNAME_output_padding_NAMEEND_VAL temp11036_57)))
(assert (= temp11036_59 #x0000000000000003))
(assert (= temp11036_60 temp11036_59))
(assert (= temp11036_61 (select ARGNAME_output_padding_NAMEEND_VAL temp11036_60)))
(assert (= temp11036_62 #x0000000000000004))
(assert (= temp11036_63 temp11036_62))
(assert (= temp11036_64 (select ARGNAME_output_padding_NAMEEND_VAL temp11036_63)))
(assert (= temp11036_65 #x0000000000000005))
(assert (= temp11036_66 temp11036_65))
(assert (= temp11036_67 (select ARGNAME_output_padding_NAMEEND_VAL temp11036_66)))
(assert (= temp11036_68 #x0000000000000000))
(assert (= temp11036_69 #x0000000000000000))
(assert (= temp11036_70 temp11036_69))
(assert (= temp11036_71 (select ARGNAME_output_padding_NAMEEND_VAL temp11036_70)))
(assert (= temp11036_72 #x0000000000000000))
(assert (= temp11036_73 #x0000000000000001))
(assert (= temp11036_74 temp11036_73))
(assert (= temp11036_75 (select ARGNAME_output_padding_NAMEEND_VAL temp11036_74)))
(assert (= temp11036_76 #x0000000000000000))
(assert (= temp11036_77 #x0000000000000002))
(assert (= temp11036_78 temp11036_77))
(assert (= temp11036_79 (select ARGNAME_output_padding_NAMEEND_VAL temp11036_78)))
(assert (= temp11036_80 #x0000000000000000))
(assert (= temp11036_81 #x0000000000000003))
(assert (= temp11036_82 temp11036_81))
(assert (= temp11036_83 (select ARGNAME_output_padding_NAMEEND_VAL temp11036_82)))
(assert (= temp11036_84 #x0000000000000000))
(assert (= temp11036_85 #x0000000000000004))
(assert (= temp11036_86 temp11036_85))
(assert (= temp11036_87 (select ARGNAME_output_padding_NAMEEND_VAL temp11036_86)))
(assert (= temp11036_88 #x0000000000000000))
(assert (= temp11036_89 #x0000000000000005))
(assert (= temp11036_90 temp11036_89))
(assert (= temp11036_91 (select ARGNAME_output_padding_NAMEEND_VAL temp11036_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp11036_71 temp11036_68)
             (bvslt temp11036_75 temp11036_72)
             (bvslt temp11036_79 temp11036_76)
             (bvslt temp11036_83 temp11036_80)
             (bvslt temp11036_87 temp11036_84)
             (bvslt temp11036_91 temp11036_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11036_92 #x0000000000000000))
(assert (= var1191725 temp11036_92))
(assert (= temp11036_93 #x0000000000000000))
(assert (= temp11036_94 temp11036_93))
(assert (= temp11036_95 (select ARGNAME_stride_NAMEEND_VAL temp11036_94)))
(assert (= temp11036_96 #x0000000000000001))
(assert (= temp11036_97 temp11036_96))
(assert (= temp11036_98 (select ARGNAME_stride_NAMEEND_VAL temp11036_97)))
(assert (= temp11036_99 #x0000000000000002))
(assert (= temp11036_100 temp11036_99))
(assert (= temp11036_101 (select ARGNAME_stride_NAMEEND_VAL temp11036_100)))
(assert (= temp11036_102 #x0000000000000003))
(assert (= temp11036_103 temp11036_102))
(assert (= temp11036_104 (select ARGNAME_stride_NAMEEND_VAL temp11036_103)))
(assert (= temp11036_105 #x0000000000000004))
(assert (= temp11036_106 temp11036_105))
(assert (= temp11036_107 (select ARGNAME_stride_NAMEEND_VAL temp11036_106)))
(assert (= temp11036_108 #x0000000000000005))
(assert (= temp11036_109 temp11036_108))
(assert (= temp11036_110 (select ARGNAME_stride_NAMEEND_VAL temp11036_109)))
(assert (= temp11036_111 #x0000000000000000))
(assert (= temp11036_112 #x0000000000000000))
(assert (= temp11036_113 temp11036_112))
(assert (= temp11036_114 (select ARGNAME_stride_NAMEEND_VAL temp11036_113)))
(assert (= temp11036_115 #x0000000000000000))
(assert (= temp11036_116 #x0000000000000001))
(assert (= temp11036_117 temp11036_116))
(assert (= temp11036_118 (select ARGNAME_stride_NAMEEND_VAL temp11036_117)))
(assert (= temp11036_119 #x0000000000000000))
(assert (= temp11036_120 #x0000000000000002))
(assert (= temp11036_121 temp11036_120))
(assert (= temp11036_122 (select ARGNAME_stride_NAMEEND_VAL temp11036_121)))
(assert (= temp11036_123 #x0000000000000000))
(assert (= temp11036_124 #x0000000000000003))
(assert (= temp11036_125 temp11036_124))
(assert (= temp11036_126 (select ARGNAME_stride_NAMEEND_VAL temp11036_125)))
(assert (= temp11036_127 #x0000000000000000))
(assert (= temp11036_128 #x0000000000000004))
(assert (= temp11036_129 temp11036_128))
(assert (= temp11036_130 (select ARGNAME_stride_NAMEEND_VAL temp11036_129)))
(assert (= temp11036_131 #x0000000000000000))
(assert (= temp11036_132 #x0000000000000005))
(assert (= temp11036_133 temp11036_132))
(assert (= temp11036_134 (select ARGNAME_stride_NAMEEND_VAL temp11036_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp11036_114 temp11036_111)
             (bvsle temp11036_118 temp11036_115)
             (bvsle temp11036_122 temp11036_119)
             (bvsle temp11036_126 temp11036_123)
             (bvsle temp11036_130 temp11036_127)
             (bvsle temp11036_134 temp11036_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11036_135 #x0000000000000000))
(assert (= var1191735 temp11036_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11036_136 #x0000000000000001))
(assert (= var1191747 temp11036_136))
(assert (= temp11036_137 #x0000000000000000))
(assert (= var1179826 temp11036_137))
(assert (= temp11036_138 #x0000000000000000))
(assert (= temp11036_139 temp11036_138))
(assert (= temp11036_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11036_139)))
(assert (= temp11036_141 #x0000000000000001))
(assert (= temp11036_142 temp11036_141))
(assert (= temp11036_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11036_142)))
(assert (= temp11036_144 #x0000000000000002))
(assert (= temp11036_145 temp11036_144))
(assert (= temp11036_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11036_145)))
(assert (= temp11036_147 #x0000000000000003))
(assert (= temp11036_148 temp11036_147))
(assert (= temp11036_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11036_148)))
(assert (= temp11036_150 #x0000000000000004))
(assert (= temp11036_151 temp11036_150))
(assert (= temp11036_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11036_151)))
(assert (= temp11036_153 #x0000000000000005))
(assert (= temp11036_154 temp11036_153))
(assert (= temp11036_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11036_154)))
(assert (= temp11036_157 var1179826))
(assert (= temp11036_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11036_157)))
(assert (= temp11036_156 temp11036_158))
(assert (= var1191780
   (ite (bvslt temp11036_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11036_159 #x0000000000000000))
(assert (= var1191780 temp11036_159))
(assert (= temp11036_160 #x0000000000000000))
(assert (= var1179826 temp11036_160))
(assert (= temp11036_162 var1179826))
(assert (= temp11036_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11036_162)))
(assert (= temp11036_161 temp11036_163))
(assert (= var1191802 (bvsmod temp11036_161 ARGNAME_groups_NAMEEND)))
(assert (= temp11036_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp11036_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp11036_165 #x0000000000000001))
(assert (= var1191803 temp11036_165))
(assert (= temp11036_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp11036_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11036_167 #x0000000000000001))
(assert (= var1191823 temp11036_167))
(assert (= temp11036_168 #x0000000000000001))
(assert (= var1180714 temp11036_168))
(assert (= temp11036_169 #x0000000000000000))
(assert (= temp11036_170 temp11036_169))
(assert (= temp11036_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp11036_170)))
(assert (= temp11036_172 #x0000000000000001))
(assert (= temp11036_173 temp11036_172))
(assert (= temp11036_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp11036_173)))
(assert (= temp11036_175 #x0000000000000002))
(assert (= temp11036_176 temp11036_175))
(assert (= temp11036_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp11036_176)))
(assert (= temp11036_178 #x0000000000000003))
(assert (= temp11036_179 temp11036_178))
(assert (= temp11036_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp11036_179)))
(assert (= temp11036_181 #x0000000000000004))
(assert (= temp11036_182 temp11036_181))
(assert (= temp11036_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp11036_182)))
(assert (= temp11036_184 #x0000000000000005))
(assert (= temp11036_185 temp11036_184))
(assert (= temp11036_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp11036_185)))
(assert (= temp11036_187 #x0000000000000000))
(assert (= temp11036_188
   (ite (bvslt var1180714 temp11036_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp11036_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp11036_188)))
(assert (= var1191831 temp11036_189))
(assert (bvslt (ite (bvslt var1180714 temp11036_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11036_190 #x0000000000000001))
(assert (= var1180714 temp11036_190))
(assert (= temp11036_192 var1180714))
(assert (= temp11036_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11036_192)))
(assert (= temp11036_191 temp11036_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp11036_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp11036_194 #x0000000000000001))
(assert (= var1191836 temp11036_194))
(assert (= temp11036_195 #x0000000000000000))
(assert (= var1179826 temp11036_195))
(assert (= temp11036_197 var1179826))
(assert (= temp11036_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11036_197)))
(assert (= temp11036_196 temp11036_198))
(assert (= temp11036_199 #x0000000000000002))
(assert (= var1586025 temp11036_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp11036_200 #x0000000000000001))
(assert (= var1191993 temp11036_200))
(assert (= temp11036_201 #x0000000000000001))
(assert (= var2700303 temp11036_201))
(assert (= temp11036_202 #x0000000000000001))
(assert (= var2962447 temp11036_202))
(assert (= temp11036_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp11036_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11036_204 #x0000000000000001))
(assert (= var211058 temp11036_204))
(assert (= temp11036_205 #x0000000000000001))
(assert (= var211188 temp11036_205))
(assert (= var3879401 var211188))
(assert (= temp11036_206 #x0000000000000000))
(assert (= var3866802 temp11036_206))
(assert (= temp11036_207 #x0000000000000000))
(assert (= temp11036_208
   (ite (bvslt var3866802 temp11036_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp11036_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp11036_208)))
(assert (= var3879420 temp11036_209))
(assert (bvslt (ite (bvslt var3866802 temp11036_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11036_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp11036_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp11036_211 #x0000000000000000))
(assert (= var3879421 temp11036_211))
(assert (= temp11036_212 #x0000000000000001))
(assert (= var3867690 temp11036_212))
(assert (= temp11036_213 #x0000000000000000))
(assert (= temp11036_214
   (ite (bvslt var3867690 temp11036_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp11036_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp11036_214)))
(assert (= var3879423 temp11036_215))
(assert (bvslt (ite (bvslt var3867690 temp11036_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11036_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp11036_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp11036_217 #x0000000000000001))
(assert (= var3879424 temp11036_217))
(assert (= temp11036_218 #x0000000000000000))
(assert (= var4133117 temp11036_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp11036_219 #x0000000000000002))
(assert (= var4339331 temp11036_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11036_220 #x0000000000000000))
(assert (= var4404892 temp11036_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var4600208 var211201))
(assert (= var4862352 var211201))
(assert (= temp11036_221 #x0000000000000001))
(assert (= var212414
   (ite (= ARGNAME_groups_NAMEEND temp11036_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11036_222 #x0000000000000001))
(assert (= var212414 temp11036_222))
(assert (= temp11036_223 #x0000000000000002))
(assert (= var5191299 temp11036_223))
(assert (= var5191301 (bvsub ARGNAME_weight_NAMEEND_DIM var5191299)))
(assert (= var5256844 var5191299))
(assert (= var5256845 var5191301))
(assert (= temp11036_224 #x0000000000000001))
(assert (= var211058 temp11036_224))
(assert (= temp11036_225 #x0000000000000000))
(assert (= var6501140 temp11036_225))
(assert (= var6501107 var6501140))
(assert (= var6369671 var6501107))
(assert (= var6369667 var6369671))
(assert (= var212669 var6369667))
(assert (= temp11036_226 #x0000000000000000))
(assert (= var212669 temp11036_226))
(model-add temp11036_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp11036_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp11036_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp11036_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





