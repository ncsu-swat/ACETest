(declare-fun temp65_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp65_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp65_3 () (_ BitVec 64))
(declare-fun temp65_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp65_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp65_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp65_7 () (_ BitVec 64))
(declare-fun temp65_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp65_9 () (_ BitVec 64))
(declare-fun temp65_10 () (_ BitVec 64))
(declare-fun temp65_11 () (_ BitVec 64))
(declare-fun temp65_12 () (_ BitVec 64))
(declare-fun temp65_13 () (_ BitVec 64))
(declare-fun temp65_14 () (_ BitVec 64))
(declare-fun temp65_15 () (_ BitVec 64))
(declare-fun temp65_16 () (_ BitVec 64))
(declare-fun temp65_17 () (_ BitVec 64))
(declare-fun temp65_18 () (_ BitVec 64))
(declare-fun temp65_19 () (_ BitVec 64))
(declare-fun temp65_20 () (_ BitVec 64))
(declare-fun temp65_21 () (_ BitVec 64))
(declare-fun temp65_22 () (_ BitVec 64))
(declare-fun temp65_23 () (_ BitVec 64))
(declare-fun temp65_24 () (_ BitVec 64))
(declare-fun temp65_25 () (_ BitVec 64))
(declare-fun temp65_26 () (_ BitVec 64))
(declare-fun temp65_27 () (_ BitVec 64))
(declare-fun temp65_28 () (_ BitVec 64))
(declare-fun temp65_29 () (_ BitVec 64))
(declare-fun temp65_30 () (_ BitVec 64))
(declare-fun temp65_31 () (_ BitVec 64))
(declare-fun temp65_32 () (_ BitVec 64))
(declare-fun temp65_33 () (_ BitVec 64))
(declare-fun temp65_34 () (_ BitVec 64))
(declare-fun temp65_35 () (_ BitVec 64))
(declare-fun temp65_36 () (_ BitVec 64))
(declare-fun temp65_37 () (_ BitVec 64))
(declare-fun temp65_38 () (_ BitVec 64))
(declare-fun temp65_39 () (_ BitVec 64))
(declare-fun temp65_40 () (_ BitVec 64))
(declare-fun temp65_41 () (_ BitVec 64))
(declare-fun temp65_42 () (_ BitVec 64))
(declare-fun temp65_43 () (_ BitVec 64))
(declare-fun temp65_44 () (_ BitVec 64))
(declare-fun temp65_45 () (_ BitVec 64))
(declare-fun temp65_46 () (_ BitVec 64))
(declare-fun temp65_47 () (_ BitVec 64))
(declare-fun temp65_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp65_49 () (_ BitVec 64))
(declare-fun temp65_50 () (_ BitVec 64))
(declare-fun temp65_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp65_52 () (_ BitVec 64))
(declare-fun temp65_53 () (_ BitVec 64))
(declare-fun temp65_54 () (_ BitVec 64))
(declare-fun temp65_55 () (_ BitVec 64))
(declare-fun temp65_56 () (_ BitVec 64))
(declare-fun temp65_57 () (_ BitVec 64))
(declare-fun temp65_58 () (_ BitVec 64))
(declare-fun temp65_59 () (_ BitVec 64))
(declare-fun temp65_60 () (_ BitVec 64))
(declare-fun temp65_61 () (_ BitVec 64))
(declare-fun temp65_62 () (_ BitVec 64))
(declare-fun temp65_63 () (_ BitVec 64))
(declare-fun temp65_64 () (_ BitVec 64))
(declare-fun temp65_65 () (_ BitVec 64))
(declare-fun temp65_66 () (_ BitVec 64))
(declare-fun temp65_67 () (_ BitVec 64))
(declare-fun temp65_68 () (_ BitVec 64))
(declare-fun temp65_69 () (_ BitVec 64))
(declare-fun temp65_70 () (_ BitVec 64))
(declare-fun temp65_71 () (_ BitVec 64))
(declare-fun temp65_72 () (_ BitVec 64))
(declare-fun temp65_73 () (_ BitVec 64))
(declare-fun temp65_74 () (_ BitVec 64))
(declare-fun temp65_75 () (_ BitVec 64))
(declare-fun temp65_76 () (_ BitVec 64))
(declare-fun temp65_77 () (_ BitVec 64))
(declare-fun temp65_78 () (_ BitVec 64))
(declare-fun temp65_79 () (_ BitVec 64))
(declare-fun temp65_80 () (_ BitVec 64))
(declare-fun temp65_81 () (_ BitVec 64))
(declare-fun temp65_82 () (_ BitVec 64))
(declare-fun temp65_83 () (_ BitVec 64))
(declare-fun temp65_84 () (_ BitVec 64))
(declare-fun temp65_85 () (_ BitVec 64))
(declare-fun temp65_86 () (_ BitVec 64))
(declare-fun temp65_87 () (_ BitVec 64))
(declare-fun temp65_88 () (_ BitVec 64))
(declare-fun temp65_89 () (_ BitVec 64))
(declare-fun temp65_90 () (_ BitVec 64))
(declare-fun temp65_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp65_92 () (_ BitVec 64))
(declare-fun temp65_93 () (_ BitVec 64))
(declare-fun temp65_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp65_95 () (_ BitVec 64))
(declare-fun temp65_96 () (_ BitVec 64))
(declare-fun temp65_97 () (_ BitVec 64))
(declare-fun temp65_98 () (_ BitVec 64))
(declare-fun temp65_99 () (_ BitVec 64))
(declare-fun temp65_100 () (_ BitVec 64))
(declare-fun temp65_101 () (_ BitVec 64))
(declare-fun temp65_102 () (_ BitVec 64))
(declare-fun temp65_103 () (_ BitVec 64))
(declare-fun temp65_104 () (_ BitVec 64))
(declare-fun temp65_105 () (_ BitVec 64))
(declare-fun temp65_106 () (_ BitVec 64))
(declare-fun temp65_107 () (_ BitVec 64))
(declare-fun temp65_108 () (_ BitVec 64))
(declare-fun temp65_109 () (_ BitVec 64))
(declare-fun temp65_110 () (_ BitVec 64))
(declare-fun temp65_111 () (_ BitVec 64))
(declare-fun temp65_112 () (_ BitVec 64))
(declare-fun temp65_113 () (_ BitVec 64))
(declare-fun temp65_114 () (_ BitVec 64))
(declare-fun temp65_115 () (_ BitVec 64))
(declare-fun temp65_116 () (_ BitVec 64))
(declare-fun temp65_117 () (_ BitVec 64))
(declare-fun temp65_118 () (_ BitVec 64))
(declare-fun temp65_119 () (_ BitVec 64))
(declare-fun temp65_120 () (_ BitVec 64))
(declare-fun temp65_121 () (_ BitVec 64))
(declare-fun temp65_122 () (_ BitVec 64))
(declare-fun temp65_123 () (_ BitVec 64))
(declare-fun temp65_124 () (_ BitVec 64))
(declare-fun temp65_125 () (_ BitVec 64))
(declare-fun temp65_126 () (_ BitVec 64))
(declare-fun temp65_127 () (_ BitVec 64))
(declare-fun temp65_128 () (_ BitVec 64))
(declare-fun temp65_129 () (_ BitVec 64))
(declare-fun temp65_130 () (_ BitVec 64))
(declare-fun temp65_131 () (_ BitVec 64))
(declare-fun temp65_132 () (_ BitVec 64))
(declare-fun temp65_133 () (_ BitVec 64))
(declare-fun temp65_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp65_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp65_136 () (_ BitVec 64))
(declare-fun temp65_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp65_138 () (_ BitVec 64))
(declare-fun temp65_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp65_140 () (_ BitVec 64))
(declare-fun temp65_141 () (_ BitVec 64))
(declare-fun temp65_142 () (_ BitVec 64))
(declare-fun temp65_143 () (_ BitVec 64))
(declare-fun temp65_144 () (_ BitVec 64))
(declare-fun temp65_145 () (_ BitVec 64))
(declare-fun temp65_146 () (_ BitVec 64))
(declare-fun temp65_147 () (_ BitVec 64))
(declare-fun temp65_148 () (_ BitVec 64))
(declare-fun temp65_149 () (_ BitVec 64))
(declare-fun temp65_150 () (_ BitVec 64))
(declare-fun temp65_151 () (_ BitVec 64))
(declare-fun temp65_152 () (_ BitVec 64))
(declare-fun temp65_153 () (_ BitVec 64))
(declare-fun temp65_154 () (_ BitVec 64))
(declare-fun temp65_155 () (_ BitVec 64))
(declare-fun temp65_157 () (_ BitVec 64))
(declare-fun temp65_158 () (_ BitVec 64))
(declare-fun temp65_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp65_159 () (_ BitVec 64))
(declare-fun temp65_160 () (_ BitVec 64))
(declare-fun temp65_162 () (_ BitVec 64))
(declare-fun temp65_163 () (_ BitVec 64))
(declare-fun temp65_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp65_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp65_165 () (_ BitVec 64))
(declare-fun temp65_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp65_167 () (_ BitVec 64))
(declare-fun temp65_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp65_169 () (_ BitVec 64))
(declare-fun temp65_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp65_171 () (_ BitVec 64))
(declare-fun temp65_172 () (_ BitVec 64))
(declare-fun temp65_173 () (_ BitVec 64))
(declare-fun temp65_174 () (_ BitVec 64))
(declare-fun temp65_175 () (_ BitVec 64))
(declare-fun temp65_176 () (_ BitVec 64))
(declare-fun temp65_177 () (_ BitVec 64))
(declare-fun temp65_178 () (_ BitVec 64))
(declare-fun temp65_179 () (_ BitVec 64))
(declare-fun temp65_180 () (_ BitVec 64))
(declare-fun temp65_181 () (_ BitVec 64))
(declare-fun temp65_182 () (_ BitVec 64))
(declare-fun temp65_183 () (_ BitVec 64))
(declare-fun temp65_184 () (_ BitVec 64))
(declare-fun temp65_185 () (_ BitVec 64))
(declare-fun temp65_186 () (_ BitVec 64))
(declare-fun temp65_187 () (_ BitVec 64))
(declare-fun temp65_188 () (_ BitVec 64))
(declare-fun temp65_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp65_190 () (_ BitVec 64))
(declare-fun temp65_192 () (_ BitVec 64))
(declare-fun temp65_193 () (_ BitVec 64))
(declare-fun temp65_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp65_194 () (_ BitVec 64))
(declare-fun temp65_195 () (_ BitVec 64))
(declare-fun temp65_197 () (_ BitVec 64))
(declare-fun temp65_198 () (_ BitVec 64))
(declare-fun temp65_196 () (_ BitVec 64))
(declare-fun temp65_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp65_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp65_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp65_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp65_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp65_204 () (_ BitVec 64))
(declare-fun temp65_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp65_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp65_207 () (_ BitVec 64))
(declare-fun temp65_208 () (_ BitVec 64))
(declare-fun temp65_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp65_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp65_211 () (_ BitVec 64))
(declare-fun temp65_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp65_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp65_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4993424 () (_ BitVec 64))
(declare-fun var211494 () (_ BitVec 64))
(declare-fun temp65_215 () (_ BitVec 64))
(declare-fun var211495 () (_ BitVec 64))
(declare-fun temp65_217 () (_ BitVec 64))
(declare-fun temp65_216 () (_ BitVec 64))
(declare-fun temp65_218 () (_ BitVec 64))
(declare-fun var6950378 () (_ BitVec 64))
(declare-fun temp65_220 () (_ BitVec 64))
(declare-fun temp65_219 () (_ BitVec 64))
(declare-fun temp65_221 () (_ BitVec 64))
(assert (= temp65_1 #x0000000000000001))
(assert (= var77203 temp65_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp65_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp65_2)))
(assert (= temp65_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp65_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp65_4 #x0000000000000000))
(assert (= var210941 temp65_4))
(assert (= temp65_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp65_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp65_6 #x0000000000000000))
(assert (= var210986 temp65_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp65_7 #x0000000000000000))
(assert (= temp65_8 temp65_7))
(assert (= temp65_9 (select ARGNAME_padding_NAMEEND_VAL temp65_8)))
(assert (= temp65_10 #x0000000000000001))
(assert (= temp65_11 temp65_10))
(assert (= temp65_12 (select ARGNAME_padding_NAMEEND_VAL temp65_11)))
(assert (= temp65_13 #x0000000000000002))
(assert (= temp65_14 temp65_13))
(assert (= temp65_15 (select ARGNAME_padding_NAMEEND_VAL temp65_14)))
(assert (= temp65_16 #x0000000000000003))
(assert (= temp65_17 temp65_16))
(assert (= temp65_18 (select ARGNAME_padding_NAMEEND_VAL temp65_17)))
(assert (= temp65_19 #x0000000000000004))
(assert (= temp65_20 temp65_19))
(assert (= temp65_21 (select ARGNAME_padding_NAMEEND_VAL temp65_20)))
(assert (= temp65_22 #x0000000000000005))
(assert (= temp65_23 temp65_22))
(assert (= temp65_24 (select ARGNAME_padding_NAMEEND_VAL temp65_23)))
(assert (= temp65_25 #x0000000000000000))
(assert (= temp65_26 #x0000000000000000))
(assert (= temp65_27 temp65_26))
(assert (= temp65_28 (select ARGNAME_padding_NAMEEND_VAL temp65_27)))
(assert (= temp65_29 #x0000000000000000))
(assert (= temp65_30 #x0000000000000001))
(assert (= temp65_31 temp65_30))
(assert (= temp65_32 (select ARGNAME_padding_NAMEEND_VAL temp65_31)))
(assert (= temp65_33 #x0000000000000000))
(assert (= temp65_34 #x0000000000000002))
(assert (= temp65_35 temp65_34))
(assert (= temp65_36 (select ARGNAME_padding_NAMEEND_VAL temp65_35)))
(assert (= temp65_37 #x0000000000000000))
(assert (= temp65_38 #x0000000000000003))
(assert (= temp65_39 temp65_38))
(assert (= temp65_40 (select ARGNAME_padding_NAMEEND_VAL temp65_39)))
(assert (= temp65_41 #x0000000000000000))
(assert (= temp65_42 #x0000000000000004))
(assert (= temp65_43 temp65_42))
(assert (= temp65_44 (select ARGNAME_padding_NAMEEND_VAL temp65_43)))
(assert (= temp65_45 #x0000000000000000))
(assert (= temp65_46 #x0000000000000005))
(assert (= temp65_47 temp65_46))
(assert (= temp65_48 (select ARGNAME_padding_NAMEEND_VAL temp65_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp65_28 temp65_25)
             (bvslt temp65_32 temp65_29)
             (bvslt temp65_36 temp65_33)
             (bvslt temp65_40 temp65_37)
             (bvslt temp65_44 temp65_41)
             (bvslt temp65_48 temp65_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp65_49 #x0000000000000000))
(assert (= var1191714 temp65_49))
(assert (= temp65_50 #x0000000000000000))
(assert (= temp65_51 temp65_50))
(assert (= temp65_52 (select ARGNAME_output_padding_NAMEEND_VAL temp65_51)))
(assert (= temp65_53 #x0000000000000001))
(assert (= temp65_54 temp65_53))
(assert (= temp65_55 (select ARGNAME_output_padding_NAMEEND_VAL temp65_54)))
(assert (= temp65_56 #x0000000000000002))
(assert (= temp65_57 temp65_56))
(assert (= temp65_58 (select ARGNAME_output_padding_NAMEEND_VAL temp65_57)))
(assert (= temp65_59 #x0000000000000003))
(assert (= temp65_60 temp65_59))
(assert (= temp65_61 (select ARGNAME_output_padding_NAMEEND_VAL temp65_60)))
(assert (= temp65_62 #x0000000000000004))
(assert (= temp65_63 temp65_62))
(assert (= temp65_64 (select ARGNAME_output_padding_NAMEEND_VAL temp65_63)))
(assert (= temp65_65 #x0000000000000005))
(assert (= temp65_66 temp65_65))
(assert (= temp65_67 (select ARGNAME_output_padding_NAMEEND_VAL temp65_66)))
(assert (= temp65_68 #x0000000000000000))
(assert (= temp65_69 #x0000000000000000))
(assert (= temp65_70 temp65_69))
(assert (= temp65_71 (select ARGNAME_output_padding_NAMEEND_VAL temp65_70)))
(assert (= temp65_72 #x0000000000000000))
(assert (= temp65_73 #x0000000000000001))
(assert (= temp65_74 temp65_73))
(assert (= temp65_75 (select ARGNAME_output_padding_NAMEEND_VAL temp65_74)))
(assert (= temp65_76 #x0000000000000000))
(assert (= temp65_77 #x0000000000000002))
(assert (= temp65_78 temp65_77))
(assert (= temp65_79 (select ARGNAME_output_padding_NAMEEND_VAL temp65_78)))
(assert (= temp65_80 #x0000000000000000))
(assert (= temp65_81 #x0000000000000003))
(assert (= temp65_82 temp65_81))
(assert (= temp65_83 (select ARGNAME_output_padding_NAMEEND_VAL temp65_82)))
(assert (= temp65_84 #x0000000000000000))
(assert (= temp65_85 #x0000000000000004))
(assert (= temp65_86 temp65_85))
(assert (= temp65_87 (select ARGNAME_output_padding_NAMEEND_VAL temp65_86)))
(assert (= temp65_88 #x0000000000000000))
(assert (= temp65_89 #x0000000000000005))
(assert (= temp65_90 temp65_89))
(assert (= temp65_91 (select ARGNAME_output_padding_NAMEEND_VAL temp65_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp65_71 temp65_68)
             (bvslt temp65_75 temp65_72)
             (bvslt temp65_79 temp65_76)
             (bvslt temp65_83 temp65_80)
             (bvslt temp65_87 temp65_84)
             (bvslt temp65_91 temp65_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp65_92 #x0000000000000000))
(assert (= var1191725 temp65_92))
(assert (= temp65_93 #x0000000000000000))
(assert (= temp65_94 temp65_93))
(assert (= temp65_95 (select ARGNAME_stride_NAMEEND_VAL temp65_94)))
(assert (= temp65_96 #x0000000000000001))
(assert (= temp65_97 temp65_96))
(assert (= temp65_98 (select ARGNAME_stride_NAMEEND_VAL temp65_97)))
(assert (= temp65_99 #x0000000000000002))
(assert (= temp65_100 temp65_99))
(assert (= temp65_101 (select ARGNAME_stride_NAMEEND_VAL temp65_100)))
(assert (= temp65_102 #x0000000000000003))
(assert (= temp65_103 temp65_102))
(assert (= temp65_104 (select ARGNAME_stride_NAMEEND_VAL temp65_103)))
(assert (= temp65_105 #x0000000000000004))
(assert (= temp65_106 temp65_105))
(assert (= temp65_107 (select ARGNAME_stride_NAMEEND_VAL temp65_106)))
(assert (= temp65_108 #x0000000000000005))
(assert (= temp65_109 temp65_108))
(assert (= temp65_110 (select ARGNAME_stride_NAMEEND_VAL temp65_109)))
(assert (= temp65_111 #x0000000000000000))
(assert (= temp65_112 #x0000000000000000))
(assert (= temp65_113 temp65_112))
(assert (= temp65_114 (select ARGNAME_stride_NAMEEND_VAL temp65_113)))
(assert (= temp65_115 #x0000000000000000))
(assert (= temp65_116 #x0000000000000001))
(assert (= temp65_117 temp65_116))
(assert (= temp65_118 (select ARGNAME_stride_NAMEEND_VAL temp65_117)))
(assert (= temp65_119 #x0000000000000000))
(assert (= temp65_120 #x0000000000000002))
(assert (= temp65_121 temp65_120))
(assert (= temp65_122 (select ARGNAME_stride_NAMEEND_VAL temp65_121)))
(assert (= temp65_123 #x0000000000000000))
(assert (= temp65_124 #x0000000000000003))
(assert (= temp65_125 temp65_124))
(assert (= temp65_126 (select ARGNAME_stride_NAMEEND_VAL temp65_125)))
(assert (= temp65_127 #x0000000000000000))
(assert (= temp65_128 #x0000000000000004))
(assert (= temp65_129 temp65_128))
(assert (= temp65_130 (select ARGNAME_stride_NAMEEND_VAL temp65_129)))
(assert (= temp65_131 #x0000000000000000))
(assert (= temp65_132 #x0000000000000005))
(assert (= temp65_133 temp65_132))
(assert (= temp65_134 (select ARGNAME_stride_NAMEEND_VAL temp65_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp65_114 temp65_111)
             (bvsle temp65_118 temp65_115)
             (bvsle temp65_122 temp65_119)
             (bvsle temp65_126 temp65_123)
             (bvsle temp65_130 temp65_127)
             (bvsle temp65_134 temp65_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp65_135 #x0000000000000000))
(assert (= var1191735 temp65_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp65_136 #x0000000000000001))
(assert (= var1191747 temp65_136))
(assert (= temp65_137 #x0000000000000000))
(assert (= var1179826 temp65_137))
(assert (= temp65_138 #x0000000000000000))
(assert (= temp65_139 temp65_138))
(assert (= temp65_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp65_139)))
(assert (= temp65_141 #x0000000000000001))
(assert (= temp65_142 temp65_141))
(assert (= temp65_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp65_142)))
(assert (= temp65_144 #x0000000000000002))
(assert (= temp65_145 temp65_144))
(assert (= temp65_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp65_145)))
(assert (= temp65_147 #x0000000000000003))
(assert (= temp65_148 temp65_147))
(assert (= temp65_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp65_148)))
(assert (= temp65_150 #x0000000000000004))
(assert (= temp65_151 temp65_150))
(assert (= temp65_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp65_151)))
(assert (= temp65_153 #x0000000000000005))
(assert (= temp65_154 temp65_153))
(assert (= temp65_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp65_154)))
(assert (= temp65_157 var1179826))
(assert (= temp65_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp65_157)))
(assert (= temp65_156 temp65_158))
(assert (= var1191780
   (ite (bvslt temp65_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp65_159 #x0000000000000000))
(assert (= var1191780 temp65_159))
(assert (= temp65_160 #x0000000000000000))
(assert (= var1179826 temp65_160))
(assert (= temp65_162 var1179826))
(assert (= temp65_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp65_162)))
(assert (= temp65_161 temp65_163))
(assert (= var1191802 (bvsmod temp65_161 ARGNAME_groups_NAMEEND)))
(assert (= temp65_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp65_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp65_165 #x0000000000000001))
(assert (= var1191803 temp65_165))
(assert (= temp65_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp65_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp65_167 #x0000000000000001))
(assert (= var1191823 temp65_167))
(assert (= temp65_168 #x0000000000000001))
(assert (= var1180714 temp65_168))
(assert (= temp65_169 #x0000000000000000))
(assert (= temp65_170 temp65_169))
(assert (= temp65_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp65_170)))
(assert (= temp65_172 #x0000000000000001))
(assert (= temp65_173 temp65_172))
(assert (= temp65_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp65_173)))
(assert (= temp65_175 #x0000000000000002))
(assert (= temp65_176 temp65_175))
(assert (= temp65_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp65_176)))
(assert (= temp65_178 #x0000000000000003))
(assert (= temp65_179 temp65_178))
(assert (= temp65_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp65_179)))
(assert (= temp65_181 #x0000000000000004))
(assert (= temp65_182 temp65_181))
(assert (= temp65_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp65_182)))
(assert (= temp65_184 #x0000000000000005))
(assert (= temp65_185 temp65_184))
(assert (= temp65_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp65_185)))
(assert (= temp65_187 #x0000000000000000))
(assert (= temp65_188
   (ite (bvslt var1180714 temp65_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp65_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp65_188)))
(assert (= var1191831 temp65_189))
(assert (bvslt (ite (bvslt var1180714 temp65_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp65_190 #x0000000000000001))
(assert (= var1180714 temp65_190))
(assert (= temp65_192 var1180714))
(assert (= temp65_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp65_192)))
(assert (= temp65_191 temp65_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp65_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp65_194 #x0000000000000001))
(assert (= var1191836 temp65_194))
(assert (= temp65_195 #x0000000000000000))
(assert (= var1179826 temp65_195))
(assert (= temp65_197 var1179826))
(assert (= temp65_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp65_197)))
(assert (= temp65_196 temp65_198))
(assert (= temp65_199 #x0000000000000002))
(assert (= var1586025 temp65_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp65_200 #x0000000000000001))
(assert (= var1191993 temp65_200))
(assert (= temp65_201 #x0000000000000001))
(assert (= var2700303 temp65_201))
(assert (= temp65_202 #x0000000000000001))
(assert (= var2962447 temp65_202))
(assert (= temp65_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp65_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp65_204 #x0000000000000001))
(assert (= var211058 temp65_204))
(assert (= temp65_205 #x0000000000000001))
(assert (= var211188 temp65_205))
(assert (= var3879401 var211188))
(assert (= temp65_206 #x0000000000000000))
(assert (= var3866802 temp65_206))
(assert (= temp65_207 #x0000000000000000))
(assert (= temp65_208
   (ite (bvslt var3866802 temp65_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp65_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp65_208)))
(assert (= var3879420 temp65_209))
(assert (bvslt (ite (bvslt var3866802 temp65_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp65_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp65_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp65_211 #x0000000000000001))
(assert (= var3879421 temp65_211))
(assert (= temp65_212 #x0000000000000000))
(assert (= var4079423 temp65_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp65_213 #x0000000000000002))
(assert (= var4208259 temp65_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp65_214 #x0000000000000000))
(assert (= var4273820 temp65_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4993424 var211201))
(assert (= var211494 var210913))
(assert (= temp65_215 #x0000000000000000))
(assert (= var211495
   (ite (distinct var211494 temp65_215) #x0000000000000001 #x0000000000000000)))
(assert (= temp65_217 #x0000000000000001))
(assert (= temp65_216 temp65_217))
(assert (= temp65_218 #x0000000000000001))
(assert (= var6950378 temp65_218))
(assert (= temp65_220 #xffffffffffffffff))
(assert (= temp65_219 temp65_220))
(assert (= temp65_221 #x0000000000000001))
(assert (= var211058 temp65_221))
(model-add temp65_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp65_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp65_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp65_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




