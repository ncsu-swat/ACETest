(declare-fun temp10650_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10650_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10650_3 () (_ BitVec 64))
(declare-fun temp10650_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10650_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10650_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10650_7 () (_ BitVec 64))
(declare-fun temp10650_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10650_9 () (_ BitVec 64))
(declare-fun temp10650_10 () (_ BitVec 64))
(declare-fun temp10650_11 () (_ BitVec 64))
(declare-fun temp10650_12 () (_ BitVec 64))
(declare-fun temp10650_13 () (_ BitVec 64))
(declare-fun temp10650_14 () (_ BitVec 64))
(declare-fun temp10650_15 () (_ BitVec 64))
(declare-fun temp10650_16 () (_ BitVec 64))
(declare-fun temp10650_17 () (_ BitVec 64))
(declare-fun temp10650_18 () (_ BitVec 64))
(declare-fun temp10650_19 () (_ BitVec 64))
(declare-fun temp10650_20 () (_ BitVec 64))
(declare-fun temp10650_21 () (_ BitVec 64))
(declare-fun temp10650_22 () (_ BitVec 64))
(declare-fun temp10650_23 () (_ BitVec 64))
(declare-fun temp10650_24 () (_ BitVec 64))
(declare-fun temp10650_25 () (_ BitVec 64))
(declare-fun temp10650_26 () (_ BitVec 64))
(declare-fun temp10650_27 () (_ BitVec 64))
(declare-fun temp10650_28 () (_ BitVec 64))
(declare-fun temp10650_29 () (_ BitVec 64))
(declare-fun temp10650_30 () (_ BitVec 64))
(declare-fun temp10650_31 () (_ BitVec 64))
(declare-fun temp10650_32 () (_ BitVec 64))
(declare-fun temp10650_33 () (_ BitVec 64))
(declare-fun temp10650_34 () (_ BitVec 64))
(declare-fun temp10650_35 () (_ BitVec 64))
(declare-fun temp10650_36 () (_ BitVec 64))
(declare-fun temp10650_37 () (_ BitVec 64))
(declare-fun temp10650_38 () (_ BitVec 64))
(declare-fun temp10650_39 () (_ BitVec 64))
(declare-fun temp10650_40 () (_ BitVec 64))
(declare-fun temp10650_41 () (_ BitVec 64))
(declare-fun temp10650_42 () (_ BitVec 64))
(declare-fun temp10650_43 () (_ BitVec 64))
(declare-fun temp10650_44 () (_ BitVec 64))
(declare-fun temp10650_45 () (_ BitVec 64))
(declare-fun temp10650_46 () (_ BitVec 64))
(declare-fun temp10650_47 () (_ BitVec 64))
(declare-fun temp10650_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10650_49 () (_ BitVec 64))
(declare-fun temp10650_50 () (_ BitVec 64))
(declare-fun temp10650_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10650_52 () (_ BitVec 64))
(declare-fun temp10650_53 () (_ BitVec 64))
(declare-fun temp10650_54 () (_ BitVec 64))
(declare-fun temp10650_55 () (_ BitVec 64))
(declare-fun temp10650_56 () (_ BitVec 64))
(declare-fun temp10650_57 () (_ BitVec 64))
(declare-fun temp10650_58 () (_ BitVec 64))
(declare-fun temp10650_59 () (_ BitVec 64))
(declare-fun temp10650_60 () (_ BitVec 64))
(declare-fun temp10650_61 () (_ BitVec 64))
(declare-fun temp10650_62 () (_ BitVec 64))
(declare-fun temp10650_63 () (_ BitVec 64))
(declare-fun temp10650_64 () (_ BitVec 64))
(declare-fun temp10650_65 () (_ BitVec 64))
(declare-fun temp10650_66 () (_ BitVec 64))
(declare-fun temp10650_67 () (_ BitVec 64))
(declare-fun temp10650_68 () (_ BitVec 64))
(declare-fun temp10650_69 () (_ BitVec 64))
(declare-fun temp10650_70 () (_ BitVec 64))
(declare-fun temp10650_71 () (_ BitVec 64))
(declare-fun temp10650_72 () (_ BitVec 64))
(declare-fun temp10650_73 () (_ BitVec 64))
(declare-fun temp10650_74 () (_ BitVec 64))
(declare-fun temp10650_75 () (_ BitVec 64))
(declare-fun temp10650_76 () (_ BitVec 64))
(declare-fun temp10650_77 () (_ BitVec 64))
(declare-fun temp10650_78 () (_ BitVec 64))
(declare-fun temp10650_79 () (_ BitVec 64))
(declare-fun temp10650_80 () (_ BitVec 64))
(declare-fun temp10650_81 () (_ BitVec 64))
(declare-fun temp10650_82 () (_ BitVec 64))
(declare-fun temp10650_83 () (_ BitVec 64))
(declare-fun temp10650_84 () (_ BitVec 64))
(declare-fun temp10650_85 () (_ BitVec 64))
(declare-fun temp10650_86 () (_ BitVec 64))
(declare-fun temp10650_87 () (_ BitVec 64))
(declare-fun temp10650_88 () (_ BitVec 64))
(declare-fun temp10650_89 () (_ BitVec 64))
(declare-fun temp10650_90 () (_ BitVec 64))
(declare-fun temp10650_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10650_92 () (_ BitVec 64))
(declare-fun temp10650_93 () (_ BitVec 64))
(declare-fun temp10650_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10650_95 () (_ BitVec 64))
(declare-fun temp10650_96 () (_ BitVec 64))
(declare-fun temp10650_97 () (_ BitVec 64))
(declare-fun temp10650_98 () (_ BitVec 64))
(declare-fun temp10650_99 () (_ BitVec 64))
(declare-fun temp10650_100 () (_ BitVec 64))
(declare-fun temp10650_101 () (_ BitVec 64))
(declare-fun temp10650_102 () (_ BitVec 64))
(declare-fun temp10650_103 () (_ BitVec 64))
(declare-fun temp10650_104 () (_ BitVec 64))
(declare-fun temp10650_105 () (_ BitVec 64))
(declare-fun temp10650_106 () (_ BitVec 64))
(declare-fun temp10650_107 () (_ BitVec 64))
(declare-fun temp10650_108 () (_ BitVec 64))
(declare-fun temp10650_109 () (_ BitVec 64))
(declare-fun temp10650_110 () (_ BitVec 64))
(declare-fun temp10650_111 () (_ BitVec 64))
(declare-fun temp10650_112 () (_ BitVec 64))
(declare-fun temp10650_113 () (_ BitVec 64))
(declare-fun temp10650_114 () (_ BitVec 64))
(declare-fun temp10650_115 () (_ BitVec 64))
(declare-fun temp10650_116 () (_ BitVec 64))
(declare-fun temp10650_117 () (_ BitVec 64))
(declare-fun temp10650_118 () (_ BitVec 64))
(declare-fun temp10650_119 () (_ BitVec 64))
(declare-fun temp10650_120 () (_ BitVec 64))
(declare-fun temp10650_121 () (_ BitVec 64))
(declare-fun temp10650_122 () (_ BitVec 64))
(declare-fun temp10650_123 () (_ BitVec 64))
(declare-fun temp10650_124 () (_ BitVec 64))
(declare-fun temp10650_125 () (_ BitVec 64))
(declare-fun temp10650_126 () (_ BitVec 64))
(declare-fun temp10650_127 () (_ BitVec 64))
(declare-fun temp10650_128 () (_ BitVec 64))
(declare-fun temp10650_129 () (_ BitVec 64))
(declare-fun temp10650_130 () (_ BitVec 64))
(declare-fun temp10650_131 () (_ BitVec 64))
(declare-fun temp10650_132 () (_ BitVec 64))
(declare-fun temp10650_133 () (_ BitVec 64))
(declare-fun temp10650_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10650_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10650_136 () (_ BitVec 64))
(declare-fun temp10650_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10650_138 () (_ BitVec 64))
(declare-fun temp10650_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10650_140 () (_ BitVec 64))
(declare-fun temp10650_141 () (_ BitVec 64))
(declare-fun temp10650_142 () (_ BitVec 64))
(declare-fun temp10650_143 () (_ BitVec 64))
(declare-fun temp10650_144 () (_ BitVec 64))
(declare-fun temp10650_145 () (_ BitVec 64))
(declare-fun temp10650_146 () (_ BitVec 64))
(declare-fun temp10650_147 () (_ BitVec 64))
(declare-fun temp10650_148 () (_ BitVec 64))
(declare-fun temp10650_149 () (_ BitVec 64))
(declare-fun temp10650_150 () (_ BitVec 64))
(declare-fun temp10650_151 () (_ BitVec 64))
(declare-fun temp10650_152 () (_ BitVec 64))
(declare-fun temp10650_153 () (_ BitVec 64))
(declare-fun temp10650_154 () (_ BitVec 64))
(declare-fun temp10650_155 () (_ BitVec 64))
(declare-fun temp10650_157 () (_ BitVec 64))
(declare-fun temp10650_158 () (_ BitVec 64))
(declare-fun temp10650_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10650_159 () (_ BitVec 64))
(declare-fun temp10650_160 () (_ BitVec 64))
(declare-fun temp10650_162 () (_ BitVec 64))
(declare-fun temp10650_163 () (_ BitVec 64))
(declare-fun temp10650_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10650_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10650_165 () (_ BitVec 64))
(declare-fun temp10650_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10650_167 () (_ BitVec 64))
(declare-fun temp10650_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10650_169 () (_ BitVec 64))
(declare-fun temp10650_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10650_171 () (_ BitVec 64))
(declare-fun temp10650_172 () (_ BitVec 64))
(declare-fun temp10650_173 () (_ BitVec 64))
(declare-fun temp10650_174 () (_ BitVec 64))
(declare-fun temp10650_175 () (_ BitVec 64))
(declare-fun temp10650_176 () (_ BitVec 64))
(declare-fun temp10650_177 () (_ BitVec 64))
(declare-fun temp10650_178 () (_ BitVec 64))
(declare-fun temp10650_179 () (_ BitVec 64))
(declare-fun temp10650_180 () (_ BitVec 64))
(declare-fun temp10650_181 () (_ BitVec 64))
(declare-fun temp10650_182 () (_ BitVec 64))
(declare-fun temp10650_183 () (_ BitVec 64))
(declare-fun temp10650_184 () (_ BitVec 64))
(declare-fun temp10650_185 () (_ BitVec 64))
(declare-fun temp10650_186 () (_ BitVec 64))
(declare-fun temp10650_187 () (_ BitVec 64))
(declare-fun temp10650_188 () (_ BitVec 64))
(declare-fun temp10650_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10650_190 () (_ BitVec 64))
(declare-fun temp10650_192 () (_ BitVec 64))
(declare-fun temp10650_193 () (_ BitVec 64))
(declare-fun temp10650_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10650_194 () (_ BitVec 64))
(declare-fun temp10650_195 () (_ BitVec 64))
(declare-fun temp10650_197 () (_ BitVec 64))
(declare-fun temp10650_198 () (_ BitVec 64))
(declare-fun temp10650_196 () (_ BitVec 64))
(declare-fun temp10650_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10650_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10650_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10650_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10650_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10650_204 () (_ BitVec 64))
(declare-fun temp10650_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10650_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10650_207 () (_ BitVec 64))
(declare-fun temp10650_208 () (_ BitVec 64))
(declare-fun temp10650_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10650_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10650_211 () (_ BitVec 64))
(declare-fun temp10650_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10650_213 () (_ BitVec 64))
(declare-fun temp10650_214 () (_ BitVec 64))
(declare-fun temp10650_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10650_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10650_217 () (_ BitVec 64))
(declare-fun temp10650_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10650_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10650_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp10650_222 () (_ BitVec 64))
(declare-fun temp10650_221 () (_ BitVec 64))
(declare-fun temp10650_223 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp10650_224 () (_ BitVec 64))
(declare-fun temp10650_225 () (_ BitVec 64))
(declare-fun temp10650_226 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp10650_227 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp10650_228 () (_ BitVec 64))
(declare-fun temp10650_230 () (_ BitVec 64))
(declare-fun temp10650_229 () (_ BitVec 64))
(declare-fun temp10650_231 () (_ BitVec 64))
(assert (= temp10650_1 #x0000000000000001))
(assert (= var77203 temp10650_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10650_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10650_2)))
(assert (= temp10650_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10650_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10650_4 #x0000000000000000))
(assert (= var210941 temp10650_4))
(assert (= temp10650_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10650_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10650_6 #x0000000000000000))
(assert (= var210986 temp10650_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10650_7 #x0000000000000000))
(assert (= temp10650_8 temp10650_7))
(assert (= temp10650_9 (select ARGNAME_padding_NAMEEND_VAL temp10650_8)))
(assert (= temp10650_10 #x0000000000000001))
(assert (= temp10650_11 temp10650_10))
(assert (= temp10650_12 (select ARGNAME_padding_NAMEEND_VAL temp10650_11)))
(assert (= temp10650_13 #x0000000000000002))
(assert (= temp10650_14 temp10650_13))
(assert (= temp10650_15 (select ARGNAME_padding_NAMEEND_VAL temp10650_14)))
(assert (= temp10650_16 #x0000000000000003))
(assert (= temp10650_17 temp10650_16))
(assert (= temp10650_18 (select ARGNAME_padding_NAMEEND_VAL temp10650_17)))
(assert (= temp10650_19 #x0000000000000004))
(assert (= temp10650_20 temp10650_19))
(assert (= temp10650_21 (select ARGNAME_padding_NAMEEND_VAL temp10650_20)))
(assert (= temp10650_22 #x0000000000000005))
(assert (= temp10650_23 temp10650_22))
(assert (= temp10650_24 (select ARGNAME_padding_NAMEEND_VAL temp10650_23)))
(assert (= temp10650_25 #x0000000000000000))
(assert (= temp10650_26 #x0000000000000000))
(assert (= temp10650_27 temp10650_26))
(assert (= temp10650_28 (select ARGNAME_padding_NAMEEND_VAL temp10650_27)))
(assert (= temp10650_29 #x0000000000000000))
(assert (= temp10650_30 #x0000000000000001))
(assert (= temp10650_31 temp10650_30))
(assert (= temp10650_32 (select ARGNAME_padding_NAMEEND_VAL temp10650_31)))
(assert (= temp10650_33 #x0000000000000000))
(assert (= temp10650_34 #x0000000000000002))
(assert (= temp10650_35 temp10650_34))
(assert (= temp10650_36 (select ARGNAME_padding_NAMEEND_VAL temp10650_35)))
(assert (= temp10650_37 #x0000000000000000))
(assert (= temp10650_38 #x0000000000000003))
(assert (= temp10650_39 temp10650_38))
(assert (= temp10650_40 (select ARGNAME_padding_NAMEEND_VAL temp10650_39)))
(assert (= temp10650_41 #x0000000000000000))
(assert (= temp10650_42 #x0000000000000004))
(assert (= temp10650_43 temp10650_42))
(assert (= temp10650_44 (select ARGNAME_padding_NAMEEND_VAL temp10650_43)))
(assert (= temp10650_45 #x0000000000000000))
(assert (= temp10650_46 #x0000000000000005))
(assert (= temp10650_47 temp10650_46))
(assert (= temp10650_48 (select ARGNAME_padding_NAMEEND_VAL temp10650_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10650_28 temp10650_25)
             (bvslt temp10650_32 temp10650_29)
             (bvslt temp10650_36 temp10650_33)
             (bvslt temp10650_40 temp10650_37)
             (bvslt temp10650_44 temp10650_41)
             (bvslt temp10650_48 temp10650_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10650_49 #x0000000000000000))
(assert (= var1191714 temp10650_49))
(assert (= temp10650_50 #x0000000000000000))
(assert (= temp10650_51 temp10650_50))
(assert (= temp10650_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10650_51)))
(assert (= temp10650_53 #x0000000000000001))
(assert (= temp10650_54 temp10650_53))
(assert (= temp10650_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10650_54)))
(assert (= temp10650_56 #x0000000000000002))
(assert (= temp10650_57 temp10650_56))
(assert (= temp10650_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10650_57)))
(assert (= temp10650_59 #x0000000000000003))
(assert (= temp10650_60 temp10650_59))
(assert (= temp10650_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10650_60)))
(assert (= temp10650_62 #x0000000000000004))
(assert (= temp10650_63 temp10650_62))
(assert (= temp10650_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10650_63)))
(assert (= temp10650_65 #x0000000000000005))
(assert (= temp10650_66 temp10650_65))
(assert (= temp10650_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10650_66)))
(assert (= temp10650_68 #x0000000000000000))
(assert (= temp10650_69 #x0000000000000000))
(assert (= temp10650_70 temp10650_69))
(assert (= temp10650_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10650_70)))
(assert (= temp10650_72 #x0000000000000000))
(assert (= temp10650_73 #x0000000000000001))
(assert (= temp10650_74 temp10650_73))
(assert (= temp10650_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10650_74)))
(assert (= temp10650_76 #x0000000000000000))
(assert (= temp10650_77 #x0000000000000002))
(assert (= temp10650_78 temp10650_77))
(assert (= temp10650_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10650_78)))
(assert (= temp10650_80 #x0000000000000000))
(assert (= temp10650_81 #x0000000000000003))
(assert (= temp10650_82 temp10650_81))
(assert (= temp10650_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10650_82)))
(assert (= temp10650_84 #x0000000000000000))
(assert (= temp10650_85 #x0000000000000004))
(assert (= temp10650_86 temp10650_85))
(assert (= temp10650_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10650_86)))
(assert (= temp10650_88 #x0000000000000000))
(assert (= temp10650_89 #x0000000000000005))
(assert (= temp10650_90 temp10650_89))
(assert (= temp10650_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10650_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10650_71 temp10650_68)
             (bvslt temp10650_75 temp10650_72)
             (bvslt temp10650_79 temp10650_76)
             (bvslt temp10650_83 temp10650_80)
             (bvslt temp10650_87 temp10650_84)
             (bvslt temp10650_91 temp10650_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10650_92 #x0000000000000000))
(assert (= var1191725 temp10650_92))
(assert (= temp10650_93 #x0000000000000000))
(assert (= temp10650_94 temp10650_93))
(assert (= temp10650_95 (select ARGNAME_stride_NAMEEND_VAL temp10650_94)))
(assert (= temp10650_96 #x0000000000000001))
(assert (= temp10650_97 temp10650_96))
(assert (= temp10650_98 (select ARGNAME_stride_NAMEEND_VAL temp10650_97)))
(assert (= temp10650_99 #x0000000000000002))
(assert (= temp10650_100 temp10650_99))
(assert (= temp10650_101 (select ARGNAME_stride_NAMEEND_VAL temp10650_100)))
(assert (= temp10650_102 #x0000000000000003))
(assert (= temp10650_103 temp10650_102))
(assert (= temp10650_104 (select ARGNAME_stride_NAMEEND_VAL temp10650_103)))
(assert (= temp10650_105 #x0000000000000004))
(assert (= temp10650_106 temp10650_105))
(assert (= temp10650_107 (select ARGNAME_stride_NAMEEND_VAL temp10650_106)))
(assert (= temp10650_108 #x0000000000000005))
(assert (= temp10650_109 temp10650_108))
(assert (= temp10650_110 (select ARGNAME_stride_NAMEEND_VAL temp10650_109)))
(assert (= temp10650_111 #x0000000000000000))
(assert (= temp10650_112 #x0000000000000000))
(assert (= temp10650_113 temp10650_112))
(assert (= temp10650_114 (select ARGNAME_stride_NAMEEND_VAL temp10650_113)))
(assert (= temp10650_115 #x0000000000000000))
(assert (= temp10650_116 #x0000000000000001))
(assert (= temp10650_117 temp10650_116))
(assert (= temp10650_118 (select ARGNAME_stride_NAMEEND_VAL temp10650_117)))
(assert (= temp10650_119 #x0000000000000000))
(assert (= temp10650_120 #x0000000000000002))
(assert (= temp10650_121 temp10650_120))
(assert (= temp10650_122 (select ARGNAME_stride_NAMEEND_VAL temp10650_121)))
(assert (= temp10650_123 #x0000000000000000))
(assert (= temp10650_124 #x0000000000000003))
(assert (= temp10650_125 temp10650_124))
(assert (= temp10650_126 (select ARGNAME_stride_NAMEEND_VAL temp10650_125)))
(assert (= temp10650_127 #x0000000000000000))
(assert (= temp10650_128 #x0000000000000004))
(assert (= temp10650_129 temp10650_128))
(assert (= temp10650_130 (select ARGNAME_stride_NAMEEND_VAL temp10650_129)))
(assert (= temp10650_131 #x0000000000000000))
(assert (= temp10650_132 #x0000000000000005))
(assert (= temp10650_133 temp10650_132))
(assert (= temp10650_134 (select ARGNAME_stride_NAMEEND_VAL temp10650_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10650_114 temp10650_111)
             (bvsle temp10650_118 temp10650_115)
             (bvsle temp10650_122 temp10650_119)
             (bvsle temp10650_126 temp10650_123)
             (bvsle temp10650_130 temp10650_127)
             (bvsle temp10650_134 temp10650_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10650_135 #x0000000000000000))
(assert (= var1191735 temp10650_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10650_136 #x0000000000000001))
(assert (= var1191747 temp10650_136))
(assert (= temp10650_137 #x0000000000000000))
(assert (= var1179826 temp10650_137))
(assert (= temp10650_138 #x0000000000000000))
(assert (= temp10650_139 temp10650_138))
(assert (= temp10650_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10650_139)))
(assert (= temp10650_141 #x0000000000000001))
(assert (= temp10650_142 temp10650_141))
(assert (= temp10650_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10650_142)))
(assert (= temp10650_144 #x0000000000000002))
(assert (= temp10650_145 temp10650_144))
(assert (= temp10650_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10650_145)))
(assert (= temp10650_147 #x0000000000000003))
(assert (= temp10650_148 temp10650_147))
(assert (= temp10650_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10650_148)))
(assert (= temp10650_150 #x0000000000000004))
(assert (= temp10650_151 temp10650_150))
(assert (= temp10650_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10650_151)))
(assert (= temp10650_153 #x0000000000000005))
(assert (= temp10650_154 temp10650_153))
(assert (= temp10650_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10650_154)))
(assert (= temp10650_157 var1179826))
(assert (= temp10650_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10650_157)))
(assert (= temp10650_156 temp10650_158))
(assert (= var1191780
   (ite (bvslt temp10650_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10650_159 #x0000000000000000))
(assert (= var1191780 temp10650_159))
(assert (= temp10650_160 #x0000000000000000))
(assert (= var1179826 temp10650_160))
(assert (= temp10650_162 var1179826))
(assert (= temp10650_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10650_162)))
(assert (= temp10650_161 temp10650_163))
(assert (= var1191802 (bvsmod temp10650_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10650_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10650_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10650_165 #x0000000000000001))
(assert (= var1191803 temp10650_165))
(assert (= temp10650_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10650_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10650_167 #x0000000000000001))
(assert (= var1191823 temp10650_167))
(assert (= temp10650_168 #x0000000000000001))
(assert (= var1180714 temp10650_168))
(assert (= temp10650_169 #x0000000000000000))
(assert (= temp10650_170 temp10650_169))
(assert (= temp10650_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10650_170)))
(assert (= temp10650_172 #x0000000000000001))
(assert (= temp10650_173 temp10650_172))
(assert (= temp10650_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10650_173)))
(assert (= temp10650_175 #x0000000000000002))
(assert (= temp10650_176 temp10650_175))
(assert (= temp10650_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10650_176)))
(assert (= temp10650_178 #x0000000000000003))
(assert (= temp10650_179 temp10650_178))
(assert (= temp10650_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10650_179)))
(assert (= temp10650_181 #x0000000000000004))
(assert (= temp10650_182 temp10650_181))
(assert (= temp10650_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10650_182)))
(assert (= temp10650_184 #x0000000000000005))
(assert (= temp10650_185 temp10650_184))
(assert (= temp10650_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10650_185)))
(assert (= temp10650_187 #x0000000000000000))
(assert (= temp10650_188
   (ite (bvslt var1180714 temp10650_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10650_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10650_188)))
(assert (= var1191831 temp10650_189))
(assert (bvslt (ite (bvslt var1180714 temp10650_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10650_190 #x0000000000000001))
(assert (= var1180714 temp10650_190))
(assert (= temp10650_192 var1180714))
(assert (= temp10650_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10650_192)))
(assert (= temp10650_191 temp10650_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10650_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10650_194 #x0000000000000001))
(assert (= var1191836 temp10650_194))
(assert (= temp10650_195 #x0000000000000000))
(assert (= var1179826 temp10650_195))
(assert (= temp10650_197 var1179826))
(assert (= temp10650_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10650_197)))
(assert (= temp10650_196 temp10650_198))
(assert (= temp10650_199 #x0000000000000002))
(assert (= var1586025 temp10650_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10650_200 #x0000000000000001))
(assert (= var1191993 temp10650_200))
(assert (= temp10650_201 #x0000000000000001))
(assert (= var2700303 temp10650_201))
(assert (= temp10650_202 #x0000000000000001))
(assert (= var2962447 temp10650_202))
(assert (= temp10650_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10650_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10650_204 #x0000000000000001))
(assert (= var211058 temp10650_204))
(assert (= temp10650_205 #x0000000000000001))
(assert (= var211188 temp10650_205))
(assert (= var3879401 var211188))
(assert (= temp10650_206 #x0000000000000000))
(assert (= var3866802 temp10650_206))
(assert (= temp10650_207 #x0000000000000000))
(assert (= temp10650_208
   (ite (bvslt var3866802 temp10650_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10650_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10650_208)))
(assert (= var3879420 temp10650_209))
(assert (bvslt (ite (bvslt var3866802 temp10650_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10650_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10650_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10650_211 #x0000000000000000))
(assert (= var3879421 temp10650_211))
(assert (= temp10650_212 #x0000000000000001))
(assert (= var3867690 temp10650_212))
(assert (= temp10650_213 #x0000000000000000))
(assert (= temp10650_214
   (ite (bvslt var3867690 temp10650_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10650_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10650_214)))
(assert (= var3879423 temp10650_215))
(assert (bvslt (ite (bvslt var3867690 temp10650_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10650_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10650_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10650_217 #x0000000000000001))
(assert (= var3879424 temp10650_217))
(assert (= temp10650_218 #x0000000000000000))
(assert (= var4133117 temp10650_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10650_219 #x0000000000000002))
(assert (= var4339331 temp10650_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10650_220 #x0000000000000000))
(assert (= var4404892 temp10650_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp10650_222 #xffffffffffffffff))
(assert (= temp10650_221 temp10650_222))
(assert (= temp10650_223 #x0000000000000001))
(assert (= var197674 temp10650_223))
(assert (= temp10650_224 #x0000000000000000))
(assert (= temp10650_225
   (ite (bvslt var197674 temp10650_224)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp10650_226 (select ARGNAME_input_NAMEEND_DIMSIZE temp10650_225)))
(assert (= var211595 temp10650_226))
(assert (bvslt (ite (bvslt var197674 temp10650_224)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10650_227 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp10650_227) #x0000000000000001 #x0000000000000000)))
(assert (= temp10650_228 #x0000000000000001))
(assert (= var211596 temp10650_228))
(assert (= temp10650_230 #xffffffffffffffff))
(assert (= temp10650_229 temp10650_230))
(assert (= temp10650_231 #x0000000000000001))
(assert (= var211058 temp10650_231))
(model-add temp10650_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10650_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10650_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10650_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




