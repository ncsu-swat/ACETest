(declare-fun temp248_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp248_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp248_3 () (_ BitVec 64))
(declare-fun temp248_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp248_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp248_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp248_7 () (_ BitVec 64))
(declare-fun temp248_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp248_9 () (_ BitVec 64))
(declare-fun temp248_10 () (_ BitVec 64))
(declare-fun temp248_11 () (_ BitVec 64))
(declare-fun temp248_12 () (_ BitVec 64))
(declare-fun temp248_13 () (_ BitVec 64))
(declare-fun temp248_14 () (_ BitVec 64))
(declare-fun temp248_15 () (_ BitVec 64))
(declare-fun temp248_16 () (_ BitVec 64))
(declare-fun temp248_17 () (_ BitVec 64))
(declare-fun temp248_18 () (_ BitVec 64))
(declare-fun temp248_19 () (_ BitVec 64))
(declare-fun temp248_20 () (_ BitVec 64))
(declare-fun temp248_21 () (_ BitVec 64))
(declare-fun temp248_22 () (_ BitVec 64))
(declare-fun temp248_23 () (_ BitVec 64))
(declare-fun temp248_24 () (_ BitVec 64))
(declare-fun temp248_25 () (_ BitVec 64))
(declare-fun temp248_26 () (_ BitVec 64))
(declare-fun temp248_27 () (_ BitVec 64))
(declare-fun temp248_28 () (_ BitVec 64))
(declare-fun temp248_29 () (_ BitVec 64))
(declare-fun temp248_30 () (_ BitVec 64))
(declare-fun temp248_31 () (_ BitVec 64))
(declare-fun temp248_32 () (_ BitVec 64))
(declare-fun temp248_33 () (_ BitVec 64))
(declare-fun temp248_34 () (_ BitVec 64))
(declare-fun temp248_35 () (_ BitVec 64))
(declare-fun temp248_36 () (_ BitVec 64))
(declare-fun temp248_37 () (_ BitVec 64))
(declare-fun temp248_38 () (_ BitVec 64))
(declare-fun temp248_39 () (_ BitVec 64))
(declare-fun temp248_40 () (_ BitVec 64))
(declare-fun temp248_41 () (_ BitVec 64))
(declare-fun temp248_42 () (_ BitVec 64))
(declare-fun temp248_43 () (_ BitVec 64))
(declare-fun temp248_44 () (_ BitVec 64))
(declare-fun temp248_45 () (_ BitVec 64))
(declare-fun temp248_46 () (_ BitVec 64))
(declare-fun temp248_47 () (_ BitVec 64))
(declare-fun temp248_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp248_49 () (_ BitVec 64))
(declare-fun temp248_50 () (_ BitVec 64))
(declare-fun temp248_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp248_52 () (_ BitVec 64))
(declare-fun temp248_53 () (_ BitVec 64))
(declare-fun temp248_54 () (_ BitVec 64))
(declare-fun temp248_55 () (_ BitVec 64))
(declare-fun temp248_56 () (_ BitVec 64))
(declare-fun temp248_57 () (_ BitVec 64))
(declare-fun temp248_58 () (_ BitVec 64))
(declare-fun temp248_59 () (_ BitVec 64))
(declare-fun temp248_60 () (_ BitVec 64))
(declare-fun temp248_61 () (_ BitVec 64))
(declare-fun temp248_62 () (_ BitVec 64))
(declare-fun temp248_63 () (_ BitVec 64))
(declare-fun temp248_64 () (_ BitVec 64))
(declare-fun temp248_65 () (_ BitVec 64))
(declare-fun temp248_66 () (_ BitVec 64))
(declare-fun temp248_67 () (_ BitVec 64))
(declare-fun temp248_68 () (_ BitVec 64))
(declare-fun temp248_69 () (_ BitVec 64))
(declare-fun temp248_70 () (_ BitVec 64))
(declare-fun temp248_71 () (_ BitVec 64))
(declare-fun temp248_72 () (_ BitVec 64))
(declare-fun temp248_73 () (_ BitVec 64))
(declare-fun temp248_74 () (_ BitVec 64))
(declare-fun temp248_75 () (_ BitVec 64))
(declare-fun temp248_76 () (_ BitVec 64))
(declare-fun temp248_77 () (_ BitVec 64))
(declare-fun temp248_78 () (_ BitVec 64))
(declare-fun temp248_79 () (_ BitVec 64))
(declare-fun temp248_80 () (_ BitVec 64))
(declare-fun temp248_81 () (_ BitVec 64))
(declare-fun temp248_82 () (_ BitVec 64))
(declare-fun temp248_83 () (_ BitVec 64))
(declare-fun temp248_84 () (_ BitVec 64))
(declare-fun temp248_85 () (_ BitVec 64))
(declare-fun temp248_86 () (_ BitVec 64))
(declare-fun temp248_87 () (_ BitVec 64))
(declare-fun temp248_88 () (_ BitVec 64))
(declare-fun temp248_89 () (_ BitVec 64))
(declare-fun temp248_90 () (_ BitVec 64))
(declare-fun temp248_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp248_92 () (_ BitVec 64))
(declare-fun temp248_93 () (_ BitVec 64))
(declare-fun temp248_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp248_95 () (_ BitVec 64))
(declare-fun temp248_96 () (_ BitVec 64))
(declare-fun temp248_97 () (_ BitVec 64))
(declare-fun temp248_98 () (_ BitVec 64))
(declare-fun temp248_99 () (_ BitVec 64))
(declare-fun temp248_100 () (_ BitVec 64))
(declare-fun temp248_101 () (_ BitVec 64))
(declare-fun temp248_102 () (_ BitVec 64))
(declare-fun temp248_103 () (_ BitVec 64))
(declare-fun temp248_104 () (_ BitVec 64))
(declare-fun temp248_105 () (_ BitVec 64))
(declare-fun temp248_106 () (_ BitVec 64))
(declare-fun temp248_107 () (_ BitVec 64))
(declare-fun temp248_108 () (_ BitVec 64))
(declare-fun temp248_109 () (_ BitVec 64))
(declare-fun temp248_110 () (_ BitVec 64))
(declare-fun temp248_111 () (_ BitVec 64))
(declare-fun temp248_112 () (_ BitVec 64))
(declare-fun temp248_113 () (_ BitVec 64))
(declare-fun temp248_114 () (_ BitVec 64))
(declare-fun temp248_115 () (_ BitVec 64))
(declare-fun temp248_116 () (_ BitVec 64))
(declare-fun temp248_117 () (_ BitVec 64))
(declare-fun temp248_118 () (_ BitVec 64))
(declare-fun temp248_119 () (_ BitVec 64))
(declare-fun temp248_120 () (_ BitVec 64))
(declare-fun temp248_121 () (_ BitVec 64))
(declare-fun temp248_122 () (_ BitVec 64))
(declare-fun temp248_123 () (_ BitVec 64))
(declare-fun temp248_124 () (_ BitVec 64))
(declare-fun temp248_125 () (_ BitVec 64))
(declare-fun temp248_126 () (_ BitVec 64))
(declare-fun temp248_127 () (_ BitVec 64))
(declare-fun temp248_128 () (_ BitVec 64))
(declare-fun temp248_129 () (_ BitVec 64))
(declare-fun temp248_130 () (_ BitVec 64))
(declare-fun temp248_131 () (_ BitVec 64))
(declare-fun temp248_132 () (_ BitVec 64))
(declare-fun temp248_133 () (_ BitVec 64))
(declare-fun temp248_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp248_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp248_136 () (_ BitVec 64))
(declare-fun temp248_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp248_138 () (_ BitVec 64))
(declare-fun temp248_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp248_140 () (_ BitVec 64))
(declare-fun temp248_141 () (_ BitVec 64))
(declare-fun temp248_142 () (_ BitVec 64))
(declare-fun temp248_143 () (_ BitVec 64))
(declare-fun temp248_144 () (_ BitVec 64))
(declare-fun temp248_145 () (_ BitVec 64))
(declare-fun temp248_146 () (_ BitVec 64))
(declare-fun temp248_147 () (_ BitVec 64))
(declare-fun temp248_148 () (_ BitVec 64))
(declare-fun temp248_149 () (_ BitVec 64))
(declare-fun temp248_150 () (_ BitVec 64))
(declare-fun temp248_151 () (_ BitVec 64))
(declare-fun temp248_152 () (_ BitVec 64))
(declare-fun temp248_153 () (_ BitVec 64))
(declare-fun temp248_154 () (_ BitVec 64))
(declare-fun temp248_155 () (_ BitVec 64))
(declare-fun temp248_157 () (_ BitVec 64))
(declare-fun temp248_158 () (_ BitVec 64))
(declare-fun temp248_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp248_159 () (_ BitVec 64))
(declare-fun temp248_160 () (_ BitVec 64))
(declare-fun temp248_162 () (_ BitVec 64))
(declare-fun temp248_163 () (_ BitVec 64))
(declare-fun temp248_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp248_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp248_165 () (_ BitVec 64))
(declare-fun temp248_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp248_167 () (_ BitVec 64))
(declare-fun temp248_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp248_169 () (_ BitVec 64))
(declare-fun temp248_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp248_171 () (_ BitVec 64))
(declare-fun temp248_172 () (_ BitVec 64))
(declare-fun temp248_173 () (_ BitVec 64))
(declare-fun temp248_174 () (_ BitVec 64))
(declare-fun temp248_175 () (_ BitVec 64))
(declare-fun temp248_176 () (_ BitVec 64))
(declare-fun temp248_177 () (_ BitVec 64))
(declare-fun temp248_178 () (_ BitVec 64))
(declare-fun temp248_179 () (_ BitVec 64))
(declare-fun temp248_180 () (_ BitVec 64))
(declare-fun temp248_181 () (_ BitVec 64))
(declare-fun temp248_182 () (_ BitVec 64))
(declare-fun temp248_183 () (_ BitVec 64))
(declare-fun temp248_184 () (_ BitVec 64))
(declare-fun temp248_185 () (_ BitVec 64))
(declare-fun temp248_186 () (_ BitVec 64))
(declare-fun temp248_187 () (_ BitVec 64))
(declare-fun temp248_188 () (_ BitVec 64))
(declare-fun temp248_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp248_190 () (_ BitVec 64))
(declare-fun temp248_192 () (_ BitVec 64))
(declare-fun temp248_193 () (_ BitVec 64))
(declare-fun temp248_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp248_194 () (_ BitVec 64))
(declare-fun temp248_195 () (_ BitVec 64))
(declare-fun temp248_197 () (_ BitVec 64))
(declare-fun temp248_198 () (_ BitVec 64))
(declare-fun temp248_196 () (_ BitVec 64))
(declare-fun temp248_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp248_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp248_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp248_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp248_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp248_204 () (_ BitVec 64))
(declare-fun temp248_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp248_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp248_207 () (_ BitVec 64))
(declare-fun temp248_208 () (_ BitVec 64))
(declare-fun temp248_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp248_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp248_211 () (_ BitVec 64))
(declare-fun temp248_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp248_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp248_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4796816 () (_ BitVec 64))
(declare-fun var211962 () (_ BitVec 64))
(declare-fun temp248_215 () (_ BitVec 64))
(declare-fun var211963 () (_ BitVec 64))
(declare-fun temp248_216 () (_ BitVec 64))
(assert (= temp248_1 #x0000000000000001))
(assert (= var77203 temp248_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp248_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp248_2)))
(assert (= temp248_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp248_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp248_4 #x0000000000000000))
(assert (= var210941 temp248_4))
(assert (= temp248_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp248_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp248_6 #x0000000000000000))
(assert (= var210986 temp248_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp248_7 #x0000000000000000))
(assert (= temp248_8 temp248_7))
(assert (= temp248_9 (select ARGNAME_padding_NAMEEND_VAL temp248_8)))
(assert (= temp248_10 #x0000000000000001))
(assert (= temp248_11 temp248_10))
(assert (= temp248_12 (select ARGNAME_padding_NAMEEND_VAL temp248_11)))
(assert (= temp248_13 #x0000000000000002))
(assert (= temp248_14 temp248_13))
(assert (= temp248_15 (select ARGNAME_padding_NAMEEND_VAL temp248_14)))
(assert (= temp248_16 #x0000000000000003))
(assert (= temp248_17 temp248_16))
(assert (= temp248_18 (select ARGNAME_padding_NAMEEND_VAL temp248_17)))
(assert (= temp248_19 #x0000000000000004))
(assert (= temp248_20 temp248_19))
(assert (= temp248_21 (select ARGNAME_padding_NAMEEND_VAL temp248_20)))
(assert (= temp248_22 #x0000000000000005))
(assert (= temp248_23 temp248_22))
(assert (= temp248_24 (select ARGNAME_padding_NAMEEND_VAL temp248_23)))
(assert (= temp248_25 #x0000000000000000))
(assert (= temp248_26 #x0000000000000000))
(assert (= temp248_27 temp248_26))
(assert (= temp248_28 (select ARGNAME_padding_NAMEEND_VAL temp248_27)))
(assert (= temp248_29 #x0000000000000000))
(assert (= temp248_30 #x0000000000000001))
(assert (= temp248_31 temp248_30))
(assert (= temp248_32 (select ARGNAME_padding_NAMEEND_VAL temp248_31)))
(assert (= temp248_33 #x0000000000000000))
(assert (= temp248_34 #x0000000000000002))
(assert (= temp248_35 temp248_34))
(assert (= temp248_36 (select ARGNAME_padding_NAMEEND_VAL temp248_35)))
(assert (= temp248_37 #x0000000000000000))
(assert (= temp248_38 #x0000000000000003))
(assert (= temp248_39 temp248_38))
(assert (= temp248_40 (select ARGNAME_padding_NAMEEND_VAL temp248_39)))
(assert (= temp248_41 #x0000000000000000))
(assert (= temp248_42 #x0000000000000004))
(assert (= temp248_43 temp248_42))
(assert (= temp248_44 (select ARGNAME_padding_NAMEEND_VAL temp248_43)))
(assert (= temp248_45 #x0000000000000000))
(assert (= temp248_46 #x0000000000000005))
(assert (= temp248_47 temp248_46))
(assert (= temp248_48 (select ARGNAME_padding_NAMEEND_VAL temp248_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp248_28 temp248_25)
             (bvslt temp248_32 temp248_29)
             (bvslt temp248_36 temp248_33)
             (bvslt temp248_40 temp248_37)
             (bvslt temp248_44 temp248_41)
             (bvslt temp248_48 temp248_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp248_49 #x0000000000000000))
(assert (= var1191714 temp248_49))
(assert (= temp248_50 #x0000000000000000))
(assert (= temp248_51 temp248_50))
(assert (= temp248_52 (select ARGNAME_output_padding_NAMEEND_VAL temp248_51)))
(assert (= temp248_53 #x0000000000000001))
(assert (= temp248_54 temp248_53))
(assert (= temp248_55 (select ARGNAME_output_padding_NAMEEND_VAL temp248_54)))
(assert (= temp248_56 #x0000000000000002))
(assert (= temp248_57 temp248_56))
(assert (= temp248_58 (select ARGNAME_output_padding_NAMEEND_VAL temp248_57)))
(assert (= temp248_59 #x0000000000000003))
(assert (= temp248_60 temp248_59))
(assert (= temp248_61 (select ARGNAME_output_padding_NAMEEND_VAL temp248_60)))
(assert (= temp248_62 #x0000000000000004))
(assert (= temp248_63 temp248_62))
(assert (= temp248_64 (select ARGNAME_output_padding_NAMEEND_VAL temp248_63)))
(assert (= temp248_65 #x0000000000000005))
(assert (= temp248_66 temp248_65))
(assert (= temp248_67 (select ARGNAME_output_padding_NAMEEND_VAL temp248_66)))
(assert (= temp248_68 #x0000000000000000))
(assert (= temp248_69 #x0000000000000000))
(assert (= temp248_70 temp248_69))
(assert (= temp248_71 (select ARGNAME_output_padding_NAMEEND_VAL temp248_70)))
(assert (= temp248_72 #x0000000000000000))
(assert (= temp248_73 #x0000000000000001))
(assert (= temp248_74 temp248_73))
(assert (= temp248_75 (select ARGNAME_output_padding_NAMEEND_VAL temp248_74)))
(assert (= temp248_76 #x0000000000000000))
(assert (= temp248_77 #x0000000000000002))
(assert (= temp248_78 temp248_77))
(assert (= temp248_79 (select ARGNAME_output_padding_NAMEEND_VAL temp248_78)))
(assert (= temp248_80 #x0000000000000000))
(assert (= temp248_81 #x0000000000000003))
(assert (= temp248_82 temp248_81))
(assert (= temp248_83 (select ARGNAME_output_padding_NAMEEND_VAL temp248_82)))
(assert (= temp248_84 #x0000000000000000))
(assert (= temp248_85 #x0000000000000004))
(assert (= temp248_86 temp248_85))
(assert (= temp248_87 (select ARGNAME_output_padding_NAMEEND_VAL temp248_86)))
(assert (= temp248_88 #x0000000000000000))
(assert (= temp248_89 #x0000000000000005))
(assert (= temp248_90 temp248_89))
(assert (= temp248_91 (select ARGNAME_output_padding_NAMEEND_VAL temp248_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp248_71 temp248_68)
             (bvslt temp248_75 temp248_72)
             (bvslt temp248_79 temp248_76)
             (bvslt temp248_83 temp248_80)
             (bvslt temp248_87 temp248_84)
             (bvslt temp248_91 temp248_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp248_92 #x0000000000000000))
(assert (= var1191725 temp248_92))
(assert (= temp248_93 #x0000000000000000))
(assert (= temp248_94 temp248_93))
(assert (= temp248_95 (select ARGNAME_stride_NAMEEND_VAL temp248_94)))
(assert (= temp248_96 #x0000000000000001))
(assert (= temp248_97 temp248_96))
(assert (= temp248_98 (select ARGNAME_stride_NAMEEND_VAL temp248_97)))
(assert (= temp248_99 #x0000000000000002))
(assert (= temp248_100 temp248_99))
(assert (= temp248_101 (select ARGNAME_stride_NAMEEND_VAL temp248_100)))
(assert (= temp248_102 #x0000000000000003))
(assert (= temp248_103 temp248_102))
(assert (= temp248_104 (select ARGNAME_stride_NAMEEND_VAL temp248_103)))
(assert (= temp248_105 #x0000000000000004))
(assert (= temp248_106 temp248_105))
(assert (= temp248_107 (select ARGNAME_stride_NAMEEND_VAL temp248_106)))
(assert (= temp248_108 #x0000000000000005))
(assert (= temp248_109 temp248_108))
(assert (= temp248_110 (select ARGNAME_stride_NAMEEND_VAL temp248_109)))
(assert (= temp248_111 #x0000000000000000))
(assert (= temp248_112 #x0000000000000000))
(assert (= temp248_113 temp248_112))
(assert (= temp248_114 (select ARGNAME_stride_NAMEEND_VAL temp248_113)))
(assert (= temp248_115 #x0000000000000000))
(assert (= temp248_116 #x0000000000000001))
(assert (= temp248_117 temp248_116))
(assert (= temp248_118 (select ARGNAME_stride_NAMEEND_VAL temp248_117)))
(assert (= temp248_119 #x0000000000000000))
(assert (= temp248_120 #x0000000000000002))
(assert (= temp248_121 temp248_120))
(assert (= temp248_122 (select ARGNAME_stride_NAMEEND_VAL temp248_121)))
(assert (= temp248_123 #x0000000000000000))
(assert (= temp248_124 #x0000000000000003))
(assert (= temp248_125 temp248_124))
(assert (= temp248_126 (select ARGNAME_stride_NAMEEND_VAL temp248_125)))
(assert (= temp248_127 #x0000000000000000))
(assert (= temp248_128 #x0000000000000004))
(assert (= temp248_129 temp248_128))
(assert (= temp248_130 (select ARGNAME_stride_NAMEEND_VAL temp248_129)))
(assert (= temp248_131 #x0000000000000000))
(assert (= temp248_132 #x0000000000000005))
(assert (= temp248_133 temp248_132))
(assert (= temp248_134 (select ARGNAME_stride_NAMEEND_VAL temp248_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp248_114 temp248_111)
             (bvsle temp248_118 temp248_115)
             (bvsle temp248_122 temp248_119)
             (bvsle temp248_126 temp248_123)
             (bvsle temp248_130 temp248_127)
             (bvsle temp248_134 temp248_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp248_135 #x0000000000000000))
(assert (= var1191735 temp248_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp248_136 #x0000000000000001))
(assert (= var1191747 temp248_136))
(assert (= temp248_137 #x0000000000000000))
(assert (= var1179826 temp248_137))
(assert (= temp248_138 #x0000000000000000))
(assert (= temp248_139 temp248_138))
(assert (= temp248_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp248_139)))
(assert (= temp248_141 #x0000000000000001))
(assert (= temp248_142 temp248_141))
(assert (= temp248_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp248_142)))
(assert (= temp248_144 #x0000000000000002))
(assert (= temp248_145 temp248_144))
(assert (= temp248_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp248_145)))
(assert (= temp248_147 #x0000000000000003))
(assert (= temp248_148 temp248_147))
(assert (= temp248_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp248_148)))
(assert (= temp248_150 #x0000000000000004))
(assert (= temp248_151 temp248_150))
(assert (= temp248_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp248_151)))
(assert (= temp248_153 #x0000000000000005))
(assert (= temp248_154 temp248_153))
(assert (= temp248_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp248_154)))
(assert (= temp248_157 var1179826))
(assert (= temp248_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp248_157)))
(assert (= temp248_156 temp248_158))
(assert (= var1191780
   (ite (bvslt temp248_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp248_159 #x0000000000000000))
(assert (= var1191780 temp248_159))
(assert (= temp248_160 #x0000000000000000))
(assert (= var1179826 temp248_160))
(assert (= temp248_162 var1179826))
(assert (= temp248_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp248_162)))
(assert (= temp248_161 temp248_163))
(assert (= var1191802 (bvsmod temp248_161 ARGNAME_groups_NAMEEND)))
(assert (= temp248_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp248_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp248_165 #x0000000000000001))
(assert (= var1191803 temp248_165))
(assert (= temp248_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp248_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp248_167 #x0000000000000001))
(assert (= var1191823 temp248_167))
(assert (= temp248_168 #x0000000000000001))
(assert (= var1180714 temp248_168))
(assert (= temp248_169 #x0000000000000000))
(assert (= temp248_170 temp248_169))
(assert (= temp248_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp248_170)))
(assert (= temp248_172 #x0000000000000001))
(assert (= temp248_173 temp248_172))
(assert (= temp248_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp248_173)))
(assert (= temp248_175 #x0000000000000002))
(assert (= temp248_176 temp248_175))
(assert (= temp248_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp248_176)))
(assert (= temp248_178 #x0000000000000003))
(assert (= temp248_179 temp248_178))
(assert (= temp248_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp248_179)))
(assert (= temp248_181 #x0000000000000004))
(assert (= temp248_182 temp248_181))
(assert (= temp248_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp248_182)))
(assert (= temp248_184 #x0000000000000005))
(assert (= temp248_185 temp248_184))
(assert (= temp248_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp248_185)))
(assert (= temp248_187 #x0000000000000000))
(assert (= temp248_188
   (ite (bvslt var1180714 temp248_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp248_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp248_188)))
(assert (= var1191831 temp248_189))
(assert (bvslt (ite (bvslt var1180714 temp248_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp248_190 #x0000000000000001))
(assert (= var1180714 temp248_190))
(assert (= temp248_192 var1180714))
(assert (= temp248_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp248_192)))
(assert (= temp248_191 temp248_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp248_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp248_194 #x0000000000000001))
(assert (= var1191836 temp248_194))
(assert (= temp248_195 #x0000000000000000))
(assert (= var1179826 temp248_195))
(assert (= temp248_197 var1179826))
(assert (= temp248_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp248_197)))
(assert (= temp248_196 temp248_198))
(assert (= temp248_199 #x0000000000000002))
(assert (= var1586025 temp248_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp248_200 #x0000000000000001))
(assert (= var1191993 temp248_200))
(assert (= temp248_201 #x0000000000000001))
(assert (= var2700303 temp248_201))
(assert (= temp248_202 #x0000000000000001))
(assert (= var2962447 temp248_202))
(assert (= temp248_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp248_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp248_204 #x0000000000000001))
(assert (= var211058 temp248_204))
(assert (= temp248_205 #x0000000000000001))
(assert (= var211188 temp248_205))
(assert (= var3879401 var211188))
(assert (= temp248_206 #x0000000000000000))
(assert (= var3866802 temp248_206))
(assert (= temp248_207 #x0000000000000000))
(assert (= temp248_208
   (ite (bvslt var3866802 temp248_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp248_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp248_208)))
(assert (= var3879420 temp248_209))
(assert (bvslt (ite (bvslt var3866802 temp248_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp248_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp248_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp248_211 #x0000000000000001))
(assert (= var3879421 temp248_211))
(assert (= temp248_212 #x0000000000000000))
(assert (= var4079423 temp248_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp248_213 #x0000000000000002))
(assert (= var4208259 temp248_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp248_214 #x0000000000000000))
(assert (= var4273820 temp248_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4796816 var211201))
(assert (= var211962 var210913))
(assert (= temp248_215 #x0000000000000000))
(assert (= var211963
   (ite (distinct var211962 temp248_215) #x0000000000000001 #x0000000000000000)))
(assert (= temp248_216 #x0000000000000001))
(assert (= var211058 temp248_216))
(model-add temp248_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp248_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp248_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp248_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





