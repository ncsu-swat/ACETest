(declare-fun temp10536_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10536_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10536_3 () (_ BitVec 64))
(declare-fun temp10536_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10536_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10536_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10536_7 () (_ BitVec 64))
(declare-fun temp10536_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10536_9 () (_ BitVec 64))
(declare-fun temp10536_10 () (_ BitVec 64))
(declare-fun temp10536_11 () (_ BitVec 64))
(declare-fun temp10536_12 () (_ BitVec 64))
(declare-fun temp10536_13 () (_ BitVec 64))
(declare-fun temp10536_14 () (_ BitVec 64))
(declare-fun temp10536_15 () (_ BitVec 64))
(declare-fun temp10536_16 () (_ BitVec 64))
(declare-fun temp10536_17 () (_ BitVec 64))
(declare-fun temp10536_18 () (_ BitVec 64))
(declare-fun temp10536_19 () (_ BitVec 64))
(declare-fun temp10536_20 () (_ BitVec 64))
(declare-fun temp10536_21 () (_ BitVec 64))
(declare-fun temp10536_22 () (_ BitVec 64))
(declare-fun temp10536_23 () (_ BitVec 64))
(declare-fun temp10536_24 () (_ BitVec 64))
(declare-fun temp10536_25 () (_ BitVec 64))
(declare-fun temp10536_26 () (_ BitVec 64))
(declare-fun temp10536_27 () (_ BitVec 64))
(declare-fun temp10536_28 () (_ BitVec 64))
(declare-fun temp10536_29 () (_ BitVec 64))
(declare-fun temp10536_30 () (_ BitVec 64))
(declare-fun temp10536_31 () (_ BitVec 64))
(declare-fun temp10536_32 () (_ BitVec 64))
(declare-fun temp10536_33 () (_ BitVec 64))
(declare-fun temp10536_34 () (_ BitVec 64))
(declare-fun temp10536_35 () (_ BitVec 64))
(declare-fun temp10536_36 () (_ BitVec 64))
(declare-fun temp10536_37 () (_ BitVec 64))
(declare-fun temp10536_38 () (_ BitVec 64))
(declare-fun temp10536_39 () (_ BitVec 64))
(declare-fun temp10536_40 () (_ BitVec 64))
(declare-fun temp10536_41 () (_ BitVec 64))
(declare-fun temp10536_42 () (_ BitVec 64))
(declare-fun temp10536_43 () (_ BitVec 64))
(declare-fun temp10536_44 () (_ BitVec 64))
(declare-fun temp10536_45 () (_ BitVec 64))
(declare-fun temp10536_46 () (_ BitVec 64))
(declare-fun temp10536_47 () (_ BitVec 64))
(declare-fun temp10536_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10536_49 () (_ BitVec 64))
(declare-fun temp10536_50 () (_ BitVec 64))
(declare-fun temp10536_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10536_52 () (_ BitVec 64))
(declare-fun temp10536_53 () (_ BitVec 64))
(declare-fun temp10536_54 () (_ BitVec 64))
(declare-fun temp10536_55 () (_ BitVec 64))
(declare-fun temp10536_56 () (_ BitVec 64))
(declare-fun temp10536_57 () (_ BitVec 64))
(declare-fun temp10536_58 () (_ BitVec 64))
(declare-fun temp10536_59 () (_ BitVec 64))
(declare-fun temp10536_60 () (_ BitVec 64))
(declare-fun temp10536_61 () (_ BitVec 64))
(declare-fun temp10536_62 () (_ BitVec 64))
(declare-fun temp10536_63 () (_ BitVec 64))
(declare-fun temp10536_64 () (_ BitVec 64))
(declare-fun temp10536_65 () (_ BitVec 64))
(declare-fun temp10536_66 () (_ BitVec 64))
(declare-fun temp10536_67 () (_ BitVec 64))
(declare-fun temp10536_68 () (_ BitVec 64))
(declare-fun temp10536_69 () (_ BitVec 64))
(declare-fun temp10536_70 () (_ BitVec 64))
(declare-fun temp10536_71 () (_ BitVec 64))
(declare-fun temp10536_72 () (_ BitVec 64))
(declare-fun temp10536_73 () (_ BitVec 64))
(declare-fun temp10536_74 () (_ BitVec 64))
(declare-fun temp10536_75 () (_ BitVec 64))
(declare-fun temp10536_76 () (_ BitVec 64))
(declare-fun temp10536_77 () (_ BitVec 64))
(declare-fun temp10536_78 () (_ BitVec 64))
(declare-fun temp10536_79 () (_ BitVec 64))
(declare-fun temp10536_80 () (_ BitVec 64))
(declare-fun temp10536_81 () (_ BitVec 64))
(declare-fun temp10536_82 () (_ BitVec 64))
(declare-fun temp10536_83 () (_ BitVec 64))
(declare-fun temp10536_84 () (_ BitVec 64))
(declare-fun temp10536_85 () (_ BitVec 64))
(declare-fun temp10536_86 () (_ BitVec 64))
(declare-fun temp10536_87 () (_ BitVec 64))
(declare-fun temp10536_88 () (_ BitVec 64))
(declare-fun temp10536_89 () (_ BitVec 64))
(declare-fun temp10536_90 () (_ BitVec 64))
(declare-fun temp10536_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10536_92 () (_ BitVec 64))
(declare-fun temp10536_93 () (_ BitVec 64))
(declare-fun temp10536_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10536_95 () (_ BitVec 64))
(declare-fun temp10536_96 () (_ BitVec 64))
(declare-fun temp10536_97 () (_ BitVec 64))
(declare-fun temp10536_98 () (_ BitVec 64))
(declare-fun temp10536_99 () (_ BitVec 64))
(declare-fun temp10536_100 () (_ BitVec 64))
(declare-fun temp10536_101 () (_ BitVec 64))
(declare-fun temp10536_102 () (_ BitVec 64))
(declare-fun temp10536_103 () (_ BitVec 64))
(declare-fun temp10536_104 () (_ BitVec 64))
(declare-fun temp10536_105 () (_ BitVec 64))
(declare-fun temp10536_106 () (_ BitVec 64))
(declare-fun temp10536_107 () (_ BitVec 64))
(declare-fun temp10536_108 () (_ BitVec 64))
(declare-fun temp10536_109 () (_ BitVec 64))
(declare-fun temp10536_110 () (_ BitVec 64))
(declare-fun temp10536_111 () (_ BitVec 64))
(declare-fun temp10536_112 () (_ BitVec 64))
(declare-fun temp10536_113 () (_ BitVec 64))
(declare-fun temp10536_114 () (_ BitVec 64))
(declare-fun temp10536_115 () (_ BitVec 64))
(declare-fun temp10536_116 () (_ BitVec 64))
(declare-fun temp10536_117 () (_ BitVec 64))
(declare-fun temp10536_118 () (_ BitVec 64))
(declare-fun temp10536_119 () (_ BitVec 64))
(declare-fun temp10536_120 () (_ BitVec 64))
(declare-fun temp10536_121 () (_ BitVec 64))
(declare-fun temp10536_122 () (_ BitVec 64))
(declare-fun temp10536_123 () (_ BitVec 64))
(declare-fun temp10536_124 () (_ BitVec 64))
(declare-fun temp10536_125 () (_ BitVec 64))
(declare-fun temp10536_126 () (_ BitVec 64))
(declare-fun temp10536_127 () (_ BitVec 64))
(declare-fun temp10536_128 () (_ BitVec 64))
(declare-fun temp10536_129 () (_ BitVec 64))
(declare-fun temp10536_130 () (_ BitVec 64))
(declare-fun temp10536_131 () (_ BitVec 64))
(declare-fun temp10536_132 () (_ BitVec 64))
(declare-fun temp10536_133 () (_ BitVec 64))
(declare-fun temp10536_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10536_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10536_136 () (_ BitVec 64))
(declare-fun temp10536_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10536_138 () (_ BitVec 64))
(declare-fun temp10536_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10536_140 () (_ BitVec 64))
(declare-fun temp10536_141 () (_ BitVec 64))
(declare-fun temp10536_142 () (_ BitVec 64))
(declare-fun temp10536_143 () (_ BitVec 64))
(declare-fun temp10536_144 () (_ BitVec 64))
(declare-fun temp10536_145 () (_ BitVec 64))
(declare-fun temp10536_146 () (_ BitVec 64))
(declare-fun temp10536_147 () (_ BitVec 64))
(declare-fun temp10536_148 () (_ BitVec 64))
(declare-fun temp10536_149 () (_ BitVec 64))
(declare-fun temp10536_150 () (_ BitVec 64))
(declare-fun temp10536_151 () (_ BitVec 64))
(declare-fun temp10536_152 () (_ BitVec 64))
(declare-fun temp10536_153 () (_ BitVec 64))
(declare-fun temp10536_154 () (_ BitVec 64))
(declare-fun temp10536_155 () (_ BitVec 64))
(declare-fun temp10536_157 () (_ BitVec 64))
(declare-fun temp10536_158 () (_ BitVec 64))
(declare-fun temp10536_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10536_159 () (_ BitVec 64))
(declare-fun temp10536_160 () (_ BitVec 64))
(declare-fun temp10536_162 () (_ BitVec 64))
(declare-fun temp10536_163 () (_ BitVec 64))
(declare-fun temp10536_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10536_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10536_165 () (_ BitVec 64))
(declare-fun temp10536_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10536_167 () (_ BitVec 64))
(declare-fun temp10536_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10536_169 () (_ BitVec 64))
(declare-fun temp10536_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10536_171 () (_ BitVec 64))
(declare-fun temp10536_172 () (_ BitVec 64))
(declare-fun temp10536_173 () (_ BitVec 64))
(declare-fun temp10536_174 () (_ BitVec 64))
(declare-fun temp10536_175 () (_ BitVec 64))
(declare-fun temp10536_176 () (_ BitVec 64))
(declare-fun temp10536_177 () (_ BitVec 64))
(declare-fun temp10536_178 () (_ BitVec 64))
(declare-fun temp10536_179 () (_ BitVec 64))
(declare-fun temp10536_180 () (_ BitVec 64))
(declare-fun temp10536_181 () (_ BitVec 64))
(declare-fun temp10536_182 () (_ BitVec 64))
(declare-fun temp10536_183 () (_ BitVec 64))
(declare-fun temp10536_184 () (_ BitVec 64))
(declare-fun temp10536_185 () (_ BitVec 64))
(declare-fun temp10536_186 () (_ BitVec 64))
(declare-fun temp10536_187 () (_ BitVec 64))
(declare-fun temp10536_188 () (_ BitVec 64))
(declare-fun temp10536_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10536_190 () (_ BitVec 64))
(declare-fun temp10536_192 () (_ BitVec 64))
(declare-fun temp10536_193 () (_ BitVec 64))
(declare-fun temp10536_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10536_194 () (_ BitVec 64))
(declare-fun temp10536_195 () (_ BitVec 64))
(declare-fun temp10536_197 () (_ BitVec 64))
(declare-fun temp10536_198 () (_ BitVec 64))
(declare-fun temp10536_196 () (_ BitVec 64))
(declare-fun temp10536_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10536_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10536_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10536_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10536_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10536_204 () (_ BitVec 64))
(declare-fun temp10536_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10536_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10536_207 () (_ BitVec 64))
(declare-fun temp10536_208 () (_ BitVec 64))
(declare-fun temp10536_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10536_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10536_211 () (_ BitVec 64))
(declare-fun temp10536_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10536_213 () (_ BitVec 64))
(declare-fun temp10536_214 () (_ BitVec 64))
(declare-fun temp10536_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10536_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10536_217 () (_ BitVec 64))
(declare-fun temp10536_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10536_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10536_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var5124496 () (_ BitVec 64))
(declare-fun var211388 () (_ BitVec 64))
(declare-fun temp10536_221 () (_ BitVec 64))
(declare-fun var211389 () (_ BitVec 64))
(declare-fun var6045517 () (_ BitVec 64))
(declare-fun temp10536_222 () (_ BitVec 64))
(assert (= temp10536_1 #x0000000000000001))
(assert (= var77203 temp10536_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10536_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10536_2)))
(assert (= temp10536_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10536_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10536_4 #x0000000000000000))
(assert (= var210941 temp10536_4))
(assert (= temp10536_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10536_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10536_6 #x0000000000000000))
(assert (= var210986 temp10536_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10536_7 #x0000000000000000))
(assert (= temp10536_8 temp10536_7))
(assert (= temp10536_9 (select ARGNAME_padding_NAMEEND_VAL temp10536_8)))
(assert (= temp10536_10 #x0000000000000001))
(assert (= temp10536_11 temp10536_10))
(assert (= temp10536_12 (select ARGNAME_padding_NAMEEND_VAL temp10536_11)))
(assert (= temp10536_13 #x0000000000000002))
(assert (= temp10536_14 temp10536_13))
(assert (= temp10536_15 (select ARGNAME_padding_NAMEEND_VAL temp10536_14)))
(assert (= temp10536_16 #x0000000000000003))
(assert (= temp10536_17 temp10536_16))
(assert (= temp10536_18 (select ARGNAME_padding_NAMEEND_VAL temp10536_17)))
(assert (= temp10536_19 #x0000000000000004))
(assert (= temp10536_20 temp10536_19))
(assert (= temp10536_21 (select ARGNAME_padding_NAMEEND_VAL temp10536_20)))
(assert (= temp10536_22 #x0000000000000005))
(assert (= temp10536_23 temp10536_22))
(assert (= temp10536_24 (select ARGNAME_padding_NAMEEND_VAL temp10536_23)))
(assert (= temp10536_25 #x0000000000000000))
(assert (= temp10536_26 #x0000000000000000))
(assert (= temp10536_27 temp10536_26))
(assert (= temp10536_28 (select ARGNAME_padding_NAMEEND_VAL temp10536_27)))
(assert (= temp10536_29 #x0000000000000000))
(assert (= temp10536_30 #x0000000000000001))
(assert (= temp10536_31 temp10536_30))
(assert (= temp10536_32 (select ARGNAME_padding_NAMEEND_VAL temp10536_31)))
(assert (= temp10536_33 #x0000000000000000))
(assert (= temp10536_34 #x0000000000000002))
(assert (= temp10536_35 temp10536_34))
(assert (= temp10536_36 (select ARGNAME_padding_NAMEEND_VAL temp10536_35)))
(assert (= temp10536_37 #x0000000000000000))
(assert (= temp10536_38 #x0000000000000003))
(assert (= temp10536_39 temp10536_38))
(assert (= temp10536_40 (select ARGNAME_padding_NAMEEND_VAL temp10536_39)))
(assert (= temp10536_41 #x0000000000000000))
(assert (= temp10536_42 #x0000000000000004))
(assert (= temp10536_43 temp10536_42))
(assert (= temp10536_44 (select ARGNAME_padding_NAMEEND_VAL temp10536_43)))
(assert (= temp10536_45 #x0000000000000000))
(assert (= temp10536_46 #x0000000000000005))
(assert (= temp10536_47 temp10536_46))
(assert (= temp10536_48 (select ARGNAME_padding_NAMEEND_VAL temp10536_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10536_28 temp10536_25)
             (bvslt temp10536_32 temp10536_29)
             (bvslt temp10536_36 temp10536_33)
             (bvslt temp10536_40 temp10536_37)
             (bvslt temp10536_44 temp10536_41)
             (bvslt temp10536_48 temp10536_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10536_49 #x0000000000000000))
(assert (= var1191714 temp10536_49))
(assert (= temp10536_50 #x0000000000000000))
(assert (= temp10536_51 temp10536_50))
(assert (= temp10536_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10536_51)))
(assert (= temp10536_53 #x0000000000000001))
(assert (= temp10536_54 temp10536_53))
(assert (= temp10536_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10536_54)))
(assert (= temp10536_56 #x0000000000000002))
(assert (= temp10536_57 temp10536_56))
(assert (= temp10536_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10536_57)))
(assert (= temp10536_59 #x0000000000000003))
(assert (= temp10536_60 temp10536_59))
(assert (= temp10536_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10536_60)))
(assert (= temp10536_62 #x0000000000000004))
(assert (= temp10536_63 temp10536_62))
(assert (= temp10536_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10536_63)))
(assert (= temp10536_65 #x0000000000000005))
(assert (= temp10536_66 temp10536_65))
(assert (= temp10536_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10536_66)))
(assert (= temp10536_68 #x0000000000000000))
(assert (= temp10536_69 #x0000000000000000))
(assert (= temp10536_70 temp10536_69))
(assert (= temp10536_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10536_70)))
(assert (= temp10536_72 #x0000000000000000))
(assert (= temp10536_73 #x0000000000000001))
(assert (= temp10536_74 temp10536_73))
(assert (= temp10536_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10536_74)))
(assert (= temp10536_76 #x0000000000000000))
(assert (= temp10536_77 #x0000000000000002))
(assert (= temp10536_78 temp10536_77))
(assert (= temp10536_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10536_78)))
(assert (= temp10536_80 #x0000000000000000))
(assert (= temp10536_81 #x0000000000000003))
(assert (= temp10536_82 temp10536_81))
(assert (= temp10536_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10536_82)))
(assert (= temp10536_84 #x0000000000000000))
(assert (= temp10536_85 #x0000000000000004))
(assert (= temp10536_86 temp10536_85))
(assert (= temp10536_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10536_86)))
(assert (= temp10536_88 #x0000000000000000))
(assert (= temp10536_89 #x0000000000000005))
(assert (= temp10536_90 temp10536_89))
(assert (= temp10536_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10536_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10536_71 temp10536_68)
             (bvslt temp10536_75 temp10536_72)
             (bvslt temp10536_79 temp10536_76)
             (bvslt temp10536_83 temp10536_80)
             (bvslt temp10536_87 temp10536_84)
             (bvslt temp10536_91 temp10536_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10536_92 #x0000000000000000))
(assert (= var1191725 temp10536_92))
(assert (= temp10536_93 #x0000000000000000))
(assert (= temp10536_94 temp10536_93))
(assert (= temp10536_95 (select ARGNAME_stride_NAMEEND_VAL temp10536_94)))
(assert (= temp10536_96 #x0000000000000001))
(assert (= temp10536_97 temp10536_96))
(assert (= temp10536_98 (select ARGNAME_stride_NAMEEND_VAL temp10536_97)))
(assert (= temp10536_99 #x0000000000000002))
(assert (= temp10536_100 temp10536_99))
(assert (= temp10536_101 (select ARGNAME_stride_NAMEEND_VAL temp10536_100)))
(assert (= temp10536_102 #x0000000000000003))
(assert (= temp10536_103 temp10536_102))
(assert (= temp10536_104 (select ARGNAME_stride_NAMEEND_VAL temp10536_103)))
(assert (= temp10536_105 #x0000000000000004))
(assert (= temp10536_106 temp10536_105))
(assert (= temp10536_107 (select ARGNAME_stride_NAMEEND_VAL temp10536_106)))
(assert (= temp10536_108 #x0000000000000005))
(assert (= temp10536_109 temp10536_108))
(assert (= temp10536_110 (select ARGNAME_stride_NAMEEND_VAL temp10536_109)))
(assert (= temp10536_111 #x0000000000000000))
(assert (= temp10536_112 #x0000000000000000))
(assert (= temp10536_113 temp10536_112))
(assert (= temp10536_114 (select ARGNAME_stride_NAMEEND_VAL temp10536_113)))
(assert (= temp10536_115 #x0000000000000000))
(assert (= temp10536_116 #x0000000000000001))
(assert (= temp10536_117 temp10536_116))
(assert (= temp10536_118 (select ARGNAME_stride_NAMEEND_VAL temp10536_117)))
(assert (= temp10536_119 #x0000000000000000))
(assert (= temp10536_120 #x0000000000000002))
(assert (= temp10536_121 temp10536_120))
(assert (= temp10536_122 (select ARGNAME_stride_NAMEEND_VAL temp10536_121)))
(assert (= temp10536_123 #x0000000000000000))
(assert (= temp10536_124 #x0000000000000003))
(assert (= temp10536_125 temp10536_124))
(assert (= temp10536_126 (select ARGNAME_stride_NAMEEND_VAL temp10536_125)))
(assert (= temp10536_127 #x0000000000000000))
(assert (= temp10536_128 #x0000000000000004))
(assert (= temp10536_129 temp10536_128))
(assert (= temp10536_130 (select ARGNAME_stride_NAMEEND_VAL temp10536_129)))
(assert (= temp10536_131 #x0000000000000000))
(assert (= temp10536_132 #x0000000000000005))
(assert (= temp10536_133 temp10536_132))
(assert (= temp10536_134 (select ARGNAME_stride_NAMEEND_VAL temp10536_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10536_114 temp10536_111)
             (bvsle temp10536_118 temp10536_115)
             (bvsle temp10536_122 temp10536_119)
             (bvsle temp10536_126 temp10536_123)
             (bvsle temp10536_130 temp10536_127)
             (bvsle temp10536_134 temp10536_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10536_135 #x0000000000000000))
(assert (= var1191735 temp10536_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10536_136 #x0000000000000001))
(assert (= var1191747 temp10536_136))
(assert (= temp10536_137 #x0000000000000000))
(assert (= var1179826 temp10536_137))
(assert (= temp10536_138 #x0000000000000000))
(assert (= temp10536_139 temp10536_138))
(assert (= temp10536_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10536_139)))
(assert (= temp10536_141 #x0000000000000001))
(assert (= temp10536_142 temp10536_141))
(assert (= temp10536_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10536_142)))
(assert (= temp10536_144 #x0000000000000002))
(assert (= temp10536_145 temp10536_144))
(assert (= temp10536_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10536_145)))
(assert (= temp10536_147 #x0000000000000003))
(assert (= temp10536_148 temp10536_147))
(assert (= temp10536_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10536_148)))
(assert (= temp10536_150 #x0000000000000004))
(assert (= temp10536_151 temp10536_150))
(assert (= temp10536_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10536_151)))
(assert (= temp10536_153 #x0000000000000005))
(assert (= temp10536_154 temp10536_153))
(assert (= temp10536_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10536_154)))
(assert (= temp10536_157 var1179826))
(assert (= temp10536_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10536_157)))
(assert (= temp10536_156 temp10536_158))
(assert (= var1191780
   (ite (bvslt temp10536_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10536_159 #x0000000000000000))
(assert (= var1191780 temp10536_159))
(assert (= temp10536_160 #x0000000000000000))
(assert (= var1179826 temp10536_160))
(assert (= temp10536_162 var1179826))
(assert (= temp10536_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10536_162)))
(assert (= temp10536_161 temp10536_163))
(assert (= var1191802 (bvsmod temp10536_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10536_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10536_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10536_165 #x0000000000000001))
(assert (= var1191803 temp10536_165))
(assert (= temp10536_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10536_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10536_167 #x0000000000000001))
(assert (= var1191823 temp10536_167))
(assert (= temp10536_168 #x0000000000000001))
(assert (= var1180714 temp10536_168))
(assert (= temp10536_169 #x0000000000000000))
(assert (= temp10536_170 temp10536_169))
(assert (= temp10536_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10536_170)))
(assert (= temp10536_172 #x0000000000000001))
(assert (= temp10536_173 temp10536_172))
(assert (= temp10536_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10536_173)))
(assert (= temp10536_175 #x0000000000000002))
(assert (= temp10536_176 temp10536_175))
(assert (= temp10536_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10536_176)))
(assert (= temp10536_178 #x0000000000000003))
(assert (= temp10536_179 temp10536_178))
(assert (= temp10536_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10536_179)))
(assert (= temp10536_181 #x0000000000000004))
(assert (= temp10536_182 temp10536_181))
(assert (= temp10536_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10536_182)))
(assert (= temp10536_184 #x0000000000000005))
(assert (= temp10536_185 temp10536_184))
(assert (= temp10536_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10536_185)))
(assert (= temp10536_187 #x0000000000000000))
(assert (= temp10536_188
   (ite (bvslt var1180714 temp10536_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10536_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10536_188)))
(assert (= var1191831 temp10536_189))
(assert (bvslt (ite (bvslt var1180714 temp10536_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10536_190 #x0000000000000001))
(assert (= var1180714 temp10536_190))
(assert (= temp10536_192 var1180714))
(assert (= temp10536_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10536_192)))
(assert (= temp10536_191 temp10536_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10536_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10536_194 #x0000000000000001))
(assert (= var1191836 temp10536_194))
(assert (= temp10536_195 #x0000000000000000))
(assert (= var1179826 temp10536_195))
(assert (= temp10536_197 var1179826))
(assert (= temp10536_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10536_197)))
(assert (= temp10536_196 temp10536_198))
(assert (= temp10536_199 #x0000000000000002))
(assert (= var1586025 temp10536_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10536_200 #x0000000000000001))
(assert (= var1191993 temp10536_200))
(assert (= temp10536_201 #x0000000000000001))
(assert (= var2700303 temp10536_201))
(assert (= temp10536_202 #x0000000000000001))
(assert (= var2962447 temp10536_202))
(assert (= temp10536_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10536_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10536_204 #x0000000000000001))
(assert (= var211058 temp10536_204))
(assert (= temp10536_205 #x0000000000000001))
(assert (= var211188 temp10536_205))
(assert (= var3879401 var211188))
(assert (= temp10536_206 #x0000000000000000))
(assert (= var3866802 temp10536_206))
(assert (= temp10536_207 #x0000000000000000))
(assert (= temp10536_208
   (ite (bvslt var3866802 temp10536_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10536_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10536_208)))
(assert (= var3879420 temp10536_209))
(assert (bvslt (ite (bvslt var3866802 temp10536_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10536_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10536_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10536_211 #x0000000000000000))
(assert (= var3879421 temp10536_211))
(assert (= temp10536_212 #x0000000000000001))
(assert (= var3867690 temp10536_212))
(assert (= temp10536_213 #x0000000000000000))
(assert (= temp10536_214
   (ite (bvslt var3867690 temp10536_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10536_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10536_214)))
(assert (= var3879423 temp10536_215))
(assert (bvslt (ite (bvslt var3867690 temp10536_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10536_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10536_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10536_217 #x0000000000000001))
(assert (= var3879424 temp10536_217))
(assert (= temp10536_218 #x0000000000000000))
(assert (= var4133117 temp10536_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10536_219 #x0000000000000002))
(assert (= var4339331 temp10536_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10536_220 #x0000000000000000))
(assert (= var4404892 temp10536_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var5124496 var211201))
(assert (= var211388 var210913))
(assert (= temp10536_221 #x0000000000000000))
(assert (= var211389
   (ite (distinct var211388 temp10536_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var6045517 var211389))
(assert (= temp10536_222 #x0000000000000001))
(assert (= var211058 temp10536_222))
(model-add temp10536_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10536_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10536_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10536_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))



