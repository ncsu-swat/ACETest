(declare-fun temp10749_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10749_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10749_3 () (_ BitVec 64))
(declare-fun temp10749_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10749_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10749_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10749_7 () (_ BitVec 64))
(declare-fun temp10749_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10749_9 () (_ BitVec 64))
(declare-fun temp10749_10 () (_ BitVec 64))
(declare-fun temp10749_11 () (_ BitVec 64))
(declare-fun temp10749_12 () (_ BitVec 64))
(declare-fun temp10749_13 () (_ BitVec 64))
(declare-fun temp10749_14 () (_ BitVec 64))
(declare-fun temp10749_15 () (_ BitVec 64))
(declare-fun temp10749_16 () (_ BitVec 64))
(declare-fun temp10749_17 () (_ BitVec 64))
(declare-fun temp10749_18 () (_ BitVec 64))
(declare-fun temp10749_19 () (_ BitVec 64))
(declare-fun temp10749_20 () (_ BitVec 64))
(declare-fun temp10749_21 () (_ BitVec 64))
(declare-fun temp10749_22 () (_ BitVec 64))
(declare-fun temp10749_23 () (_ BitVec 64))
(declare-fun temp10749_24 () (_ BitVec 64))
(declare-fun temp10749_25 () (_ BitVec 64))
(declare-fun temp10749_26 () (_ BitVec 64))
(declare-fun temp10749_27 () (_ BitVec 64))
(declare-fun temp10749_28 () (_ BitVec 64))
(declare-fun temp10749_29 () (_ BitVec 64))
(declare-fun temp10749_30 () (_ BitVec 64))
(declare-fun temp10749_31 () (_ BitVec 64))
(declare-fun temp10749_32 () (_ BitVec 64))
(declare-fun temp10749_33 () (_ BitVec 64))
(declare-fun temp10749_34 () (_ BitVec 64))
(declare-fun temp10749_35 () (_ BitVec 64))
(declare-fun temp10749_36 () (_ BitVec 64))
(declare-fun temp10749_37 () (_ BitVec 64))
(declare-fun temp10749_38 () (_ BitVec 64))
(declare-fun temp10749_39 () (_ BitVec 64))
(declare-fun temp10749_40 () (_ BitVec 64))
(declare-fun temp10749_41 () (_ BitVec 64))
(declare-fun temp10749_42 () (_ BitVec 64))
(declare-fun temp10749_43 () (_ BitVec 64))
(declare-fun temp10749_44 () (_ BitVec 64))
(declare-fun temp10749_45 () (_ BitVec 64))
(declare-fun temp10749_46 () (_ BitVec 64))
(declare-fun temp10749_47 () (_ BitVec 64))
(declare-fun temp10749_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10749_49 () (_ BitVec 64))
(declare-fun temp10749_50 () (_ BitVec 64))
(declare-fun temp10749_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10749_52 () (_ BitVec 64))
(declare-fun temp10749_53 () (_ BitVec 64))
(declare-fun temp10749_54 () (_ BitVec 64))
(declare-fun temp10749_55 () (_ BitVec 64))
(declare-fun temp10749_56 () (_ BitVec 64))
(declare-fun temp10749_57 () (_ BitVec 64))
(declare-fun temp10749_58 () (_ BitVec 64))
(declare-fun temp10749_59 () (_ BitVec 64))
(declare-fun temp10749_60 () (_ BitVec 64))
(declare-fun temp10749_61 () (_ BitVec 64))
(declare-fun temp10749_62 () (_ BitVec 64))
(declare-fun temp10749_63 () (_ BitVec 64))
(declare-fun temp10749_64 () (_ BitVec 64))
(declare-fun temp10749_65 () (_ BitVec 64))
(declare-fun temp10749_66 () (_ BitVec 64))
(declare-fun temp10749_67 () (_ BitVec 64))
(declare-fun temp10749_68 () (_ BitVec 64))
(declare-fun temp10749_69 () (_ BitVec 64))
(declare-fun temp10749_70 () (_ BitVec 64))
(declare-fun temp10749_71 () (_ BitVec 64))
(declare-fun temp10749_72 () (_ BitVec 64))
(declare-fun temp10749_73 () (_ BitVec 64))
(declare-fun temp10749_74 () (_ BitVec 64))
(declare-fun temp10749_75 () (_ BitVec 64))
(declare-fun temp10749_76 () (_ BitVec 64))
(declare-fun temp10749_77 () (_ BitVec 64))
(declare-fun temp10749_78 () (_ BitVec 64))
(declare-fun temp10749_79 () (_ BitVec 64))
(declare-fun temp10749_80 () (_ BitVec 64))
(declare-fun temp10749_81 () (_ BitVec 64))
(declare-fun temp10749_82 () (_ BitVec 64))
(declare-fun temp10749_83 () (_ BitVec 64))
(declare-fun temp10749_84 () (_ BitVec 64))
(declare-fun temp10749_85 () (_ BitVec 64))
(declare-fun temp10749_86 () (_ BitVec 64))
(declare-fun temp10749_87 () (_ BitVec 64))
(declare-fun temp10749_88 () (_ BitVec 64))
(declare-fun temp10749_89 () (_ BitVec 64))
(declare-fun temp10749_90 () (_ BitVec 64))
(declare-fun temp10749_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10749_92 () (_ BitVec 64))
(declare-fun temp10749_93 () (_ BitVec 64))
(declare-fun temp10749_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10749_95 () (_ BitVec 64))
(declare-fun temp10749_96 () (_ BitVec 64))
(declare-fun temp10749_97 () (_ BitVec 64))
(declare-fun temp10749_98 () (_ BitVec 64))
(declare-fun temp10749_99 () (_ BitVec 64))
(declare-fun temp10749_100 () (_ BitVec 64))
(declare-fun temp10749_101 () (_ BitVec 64))
(declare-fun temp10749_102 () (_ BitVec 64))
(declare-fun temp10749_103 () (_ BitVec 64))
(declare-fun temp10749_104 () (_ BitVec 64))
(declare-fun temp10749_105 () (_ BitVec 64))
(declare-fun temp10749_106 () (_ BitVec 64))
(declare-fun temp10749_107 () (_ BitVec 64))
(declare-fun temp10749_108 () (_ BitVec 64))
(declare-fun temp10749_109 () (_ BitVec 64))
(declare-fun temp10749_110 () (_ BitVec 64))
(declare-fun temp10749_111 () (_ BitVec 64))
(declare-fun temp10749_112 () (_ BitVec 64))
(declare-fun temp10749_113 () (_ BitVec 64))
(declare-fun temp10749_114 () (_ BitVec 64))
(declare-fun temp10749_115 () (_ BitVec 64))
(declare-fun temp10749_116 () (_ BitVec 64))
(declare-fun temp10749_117 () (_ BitVec 64))
(declare-fun temp10749_118 () (_ BitVec 64))
(declare-fun temp10749_119 () (_ BitVec 64))
(declare-fun temp10749_120 () (_ BitVec 64))
(declare-fun temp10749_121 () (_ BitVec 64))
(declare-fun temp10749_122 () (_ BitVec 64))
(declare-fun temp10749_123 () (_ BitVec 64))
(declare-fun temp10749_124 () (_ BitVec 64))
(declare-fun temp10749_125 () (_ BitVec 64))
(declare-fun temp10749_126 () (_ BitVec 64))
(declare-fun temp10749_127 () (_ BitVec 64))
(declare-fun temp10749_128 () (_ BitVec 64))
(declare-fun temp10749_129 () (_ BitVec 64))
(declare-fun temp10749_130 () (_ BitVec 64))
(declare-fun temp10749_131 () (_ BitVec 64))
(declare-fun temp10749_132 () (_ BitVec 64))
(declare-fun temp10749_133 () (_ BitVec 64))
(declare-fun temp10749_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10749_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10749_136 () (_ BitVec 64))
(declare-fun temp10749_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10749_138 () (_ BitVec 64))
(declare-fun temp10749_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10749_140 () (_ BitVec 64))
(declare-fun temp10749_141 () (_ BitVec 64))
(declare-fun temp10749_142 () (_ BitVec 64))
(declare-fun temp10749_143 () (_ BitVec 64))
(declare-fun temp10749_144 () (_ BitVec 64))
(declare-fun temp10749_145 () (_ BitVec 64))
(declare-fun temp10749_146 () (_ BitVec 64))
(declare-fun temp10749_147 () (_ BitVec 64))
(declare-fun temp10749_148 () (_ BitVec 64))
(declare-fun temp10749_149 () (_ BitVec 64))
(declare-fun temp10749_150 () (_ BitVec 64))
(declare-fun temp10749_151 () (_ BitVec 64))
(declare-fun temp10749_152 () (_ BitVec 64))
(declare-fun temp10749_153 () (_ BitVec 64))
(declare-fun temp10749_154 () (_ BitVec 64))
(declare-fun temp10749_155 () (_ BitVec 64))
(declare-fun temp10749_157 () (_ BitVec 64))
(declare-fun temp10749_158 () (_ BitVec 64))
(declare-fun temp10749_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10749_159 () (_ BitVec 64))
(declare-fun temp10749_160 () (_ BitVec 64))
(declare-fun temp10749_162 () (_ BitVec 64))
(declare-fun temp10749_163 () (_ BitVec 64))
(declare-fun temp10749_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10749_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10749_165 () (_ BitVec 64))
(declare-fun temp10749_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10749_167 () (_ BitVec 64))
(declare-fun temp10749_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10749_169 () (_ BitVec 64))
(declare-fun temp10749_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10749_171 () (_ BitVec 64))
(declare-fun temp10749_172 () (_ BitVec 64))
(declare-fun temp10749_173 () (_ BitVec 64))
(declare-fun temp10749_174 () (_ BitVec 64))
(declare-fun temp10749_175 () (_ BitVec 64))
(declare-fun temp10749_176 () (_ BitVec 64))
(declare-fun temp10749_177 () (_ BitVec 64))
(declare-fun temp10749_178 () (_ BitVec 64))
(declare-fun temp10749_179 () (_ BitVec 64))
(declare-fun temp10749_180 () (_ BitVec 64))
(declare-fun temp10749_181 () (_ BitVec 64))
(declare-fun temp10749_182 () (_ BitVec 64))
(declare-fun temp10749_183 () (_ BitVec 64))
(declare-fun temp10749_184 () (_ BitVec 64))
(declare-fun temp10749_185 () (_ BitVec 64))
(declare-fun temp10749_186 () (_ BitVec 64))
(declare-fun temp10749_187 () (_ BitVec 64))
(declare-fun temp10749_188 () (_ BitVec 64))
(declare-fun temp10749_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10749_190 () (_ BitVec 64))
(declare-fun temp10749_192 () (_ BitVec 64))
(declare-fun temp10749_193 () (_ BitVec 64))
(declare-fun temp10749_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10749_194 () (_ BitVec 64))
(declare-fun temp10749_195 () (_ BitVec 64))
(declare-fun temp10749_197 () (_ BitVec 64))
(declare-fun temp10749_198 () (_ BitVec 64))
(declare-fun temp10749_196 () (_ BitVec 64))
(declare-fun temp10749_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10749_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10749_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10749_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10749_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10749_204 () (_ BitVec 64))
(declare-fun temp10749_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10749_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10749_207 () (_ BitVec 64))
(declare-fun temp10749_208 () (_ BitVec 64))
(declare-fun temp10749_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10749_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10749_211 () (_ BitVec 64))
(declare-fun temp10749_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10749_213 () (_ BitVec 64))
(declare-fun temp10749_214 () (_ BitVec 64))
(declare-fun temp10749_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10749_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10749_217 () (_ BitVec 64))
(declare-fun temp10749_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10749_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10749_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var4600208 () (_ BitVec 64))
(declare-fun var211890 () (_ BitVec 64))
(declare-fun temp10749_221 () (_ BitVec 64))
(declare-fun var211891 () (_ BitVec 64))
(declare-fun temp10749_222 () (_ BitVec 64))
(assert (= temp10749_1 #x0000000000000001))
(assert (= var77203 temp10749_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10749_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10749_2)))
(assert (= temp10749_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10749_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10749_4 #x0000000000000000))
(assert (= var210941 temp10749_4))
(assert (= temp10749_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10749_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10749_6 #x0000000000000000))
(assert (= var210986 temp10749_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10749_7 #x0000000000000000))
(assert (= temp10749_8 temp10749_7))
(assert (= temp10749_9 (select ARGNAME_padding_NAMEEND_VAL temp10749_8)))
(assert (= temp10749_10 #x0000000000000001))
(assert (= temp10749_11 temp10749_10))
(assert (= temp10749_12 (select ARGNAME_padding_NAMEEND_VAL temp10749_11)))
(assert (= temp10749_13 #x0000000000000002))
(assert (= temp10749_14 temp10749_13))
(assert (= temp10749_15 (select ARGNAME_padding_NAMEEND_VAL temp10749_14)))
(assert (= temp10749_16 #x0000000000000003))
(assert (= temp10749_17 temp10749_16))
(assert (= temp10749_18 (select ARGNAME_padding_NAMEEND_VAL temp10749_17)))
(assert (= temp10749_19 #x0000000000000004))
(assert (= temp10749_20 temp10749_19))
(assert (= temp10749_21 (select ARGNAME_padding_NAMEEND_VAL temp10749_20)))
(assert (= temp10749_22 #x0000000000000005))
(assert (= temp10749_23 temp10749_22))
(assert (= temp10749_24 (select ARGNAME_padding_NAMEEND_VAL temp10749_23)))
(assert (= temp10749_25 #x0000000000000000))
(assert (= temp10749_26 #x0000000000000000))
(assert (= temp10749_27 temp10749_26))
(assert (= temp10749_28 (select ARGNAME_padding_NAMEEND_VAL temp10749_27)))
(assert (= temp10749_29 #x0000000000000000))
(assert (= temp10749_30 #x0000000000000001))
(assert (= temp10749_31 temp10749_30))
(assert (= temp10749_32 (select ARGNAME_padding_NAMEEND_VAL temp10749_31)))
(assert (= temp10749_33 #x0000000000000000))
(assert (= temp10749_34 #x0000000000000002))
(assert (= temp10749_35 temp10749_34))
(assert (= temp10749_36 (select ARGNAME_padding_NAMEEND_VAL temp10749_35)))
(assert (= temp10749_37 #x0000000000000000))
(assert (= temp10749_38 #x0000000000000003))
(assert (= temp10749_39 temp10749_38))
(assert (= temp10749_40 (select ARGNAME_padding_NAMEEND_VAL temp10749_39)))
(assert (= temp10749_41 #x0000000000000000))
(assert (= temp10749_42 #x0000000000000004))
(assert (= temp10749_43 temp10749_42))
(assert (= temp10749_44 (select ARGNAME_padding_NAMEEND_VAL temp10749_43)))
(assert (= temp10749_45 #x0000000000000000))
(assert (= temp10749_46 #x0000000000000005))
(assert (= temp10749_47 temp10749_46))
(assert (= temp10749_48 (select ARGNAME_padding_NAMEEND_VAL temp10749_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10749_28 temp10749_25)
             (bvslt temp10749_32 temp10749_29)
             (bvslt temp10749_36 temp10749_33)
             (bvslt temp10749_40 temp10749_37)
             (bvslt temp10749_44 temp10749_41)
             (bvslt temp10749_48 temp10749_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10749_49 #x0000000000000000))
(assert (= var1191714 temp10749_49))
(assert (= temp10749_50 #x0000000000000000))
(assert (= temp10749_51 temp10749_50))
(assert (= temp10749_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10749_51)))
(assert (= temp10749_53 #x0000000000000001))
(assert (= temp10749_54 temp10749_53))
(assert (= temp10749_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10749_54)))
(assert (= temp10749_56 #x0000000000000002))
(assert (= temp10749_57 temp10749_56))
(assert (= temp10749_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10749_57)))
(assert (= temp10749_59 #x0000000000000003))
(assert (= temp10749_60 temp10749_59))
(assert (= temp10749_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10749_60)))
(assert (= temp10749_62 #x0000000000000004))
(assert (= temp10749_63 temp10749_62))
(assert (= temp10749_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10749_63)))
(assert (= temp10749_65 #x0000000000000005))
(assert (= temp10749_66 temp10749_65))
(assert (= temp10749_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10749_66)))
(assert (= temp10749_68 #x0000000000000000))
(assert (= temp10749_69 #x0000000000000000))
(assert (= temp10749_70 temp10749_69))
(assert (= temp10749_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10749_70)))
(assert (= temp10749_72 #x0000000000000000))
(assert (= temp10749_73 #x0000000000000001))
(assert (= temp10749_74 temp10749_73))
(assert (= temp10749_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10749_74)))
(assert (= temp10749_76 #x0000000000000000))
(assert (= temp10749_77 #x0000000000000002))
(assert (= temp10749_78 temp10749_77))
(assert (= temp10749_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10749_78)))
(assert (= temp10749_80 #x0000000000000000))
(assert (= temp10749_81 #x0000000000000003))
(assert (= temp10749_82 temp10749_81))
(assert (= temp10749_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10749_82)))
(assert (= temp10749_84 #x0000000000000000))
(assert (= temp10749_85 #x0000000000000004))
(assert (= temp10749_86 temp10749_85))
(assert (= temp10749_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10749_86)))
(assert (= temp10749_88 #x0000000000000000))
(assert (= temp10749_89 #x0000000000000005))
(assert (= temp10749_90 temp10749_89))
(assert (= temp10749_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10749_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10749_71 temp10749_68)
             (bvslt temp10749_75 temp10749_72)
             (bvslt temp10749_79 temp10749_76)
             (bvslt temp10749_83 temp10749_80)
             (bvslt temp10749_87 temp10749_84)
             (bvslt temp10749_91 temp10749_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10749_92 #x0000000000000000))
(assert (= var1191725 temp10749_92))
(assert (= temp10749_93 #x0000000000000000))
(assert (= temp10749_94 temp10749_93))
(assert (= temp10749_95 (select ARGNAME_stride_NAMEEND_VAL temp10749_94)))
(assert (= temp10749_96 #x0000000000000001))
(assert (= temp10749_97 temp10749_96))
(assert (= temp10749_98 (select ARGNAME_stride_NAMEEND_VAL temp10749_97)))
(assert (= temp10749_99 #x0000000000000002))
(assert (= temp10749_100 temp10749_99))
(assert (= temp10749_101 (select ARGNAME_stride_NAMEEND_VAL temp10749_100)))
(assert (= temp10749_102 #x0000000000000003))
(assert (= temp10749_103 temp10749_102))
(assert (= temp10749_104 (select ARGNAME_stride_NAMEEND_VAL temp10749_103)))
(assert (= temp10749_105 #x0000000000000004))
(assert (= temp10749_106 temp10749_105))
(assert (= temp10749_107 (select ARGNAME_stride_NAMEEND_VAL temp10749_106)))
(assert (= temp10749_108 #x0000000000000005))
(assert (= temp10749_109 temp10749_108))
(assert (= temp10749_110 (select ARGNAME_stride_NAMEEND_VAL temp10749_109)))
(assert (= temp10749_111 #x0000000000000000))
(assert (= temp10749_112 #x0000000000000000))
(assert (= temp10749_113 temp10749_112))
(assert (= temp10749_114 (select ARGNAME_stride_NAMEEND_VAL temp10749_113)))
(assert (= temp10749_115 #x0000000000000000))
(assert (= temp10749_116 #x0000000000000001))
(assert (= temp10749_117 temp10749_116))
(assert (= temp10749_118 (select ARGNAME_stride_NAMEEND_VAL temp10749_117)))
(assert (= temp10749_119 #x0000000000000000))
(assert (= temp10749_120 #x0000000000000002))
(assert (= temp10749_121 temp10749_120))
(assert (= temp10749_122 (select ARGNAME_stride_NAMEEND_VAL temp10749_121)))
(assert (= temp10749_123 #x0000000000000000))
(assert (= temp10749_124 #x0000000000000003))
(assert (= temp10749_125 temp10749_124))
(assert (= temp10749_126 (select ARGNAME_stride_NAMEEND_VAL temp10749_125)))
(assert (= temp10749_127 #x0000000000000000))
(assert (= temp10749_128 #x0000000000000004))
(assert (= temp10749_129 temp10749_128))
(assert (= temp10749_130 (select ARGNAME_stride_NAMEEND_VAL temp10749_129)))
(assert (= temp10749_131 #x0000000000000000))
(assert (= temp10749_132 #x0000000000000005))
(assert (= temp10749_133 temp10749_132))
(assert (= temp10749_134 (select ARGNAME_stride_NAMEEND_VAL temp10749_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10749_114 temp10749_111)
             (bvsle temp10749_118 temp10749_115)
             (bvsle temp10749_122 temp10749_119)
             (bvsle temp10749_126 temp10749_123)
             (bvsle temp10749_130 temp10749_127)
             (bvsle temp10749_134 temp10749_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10749_135 #x0000000000000000))
(assert (= var1191735 temp10749_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10749_136 #x0000000000000001))
(assert (= var1191747 temp10749_136))
(assert (= temp10749_137 #x0000000000000000))
(assert (= var1179826 temp10749_137))
(assert (= temp10749_138 #x0000000000000000))
(assert (= temp10749_139 temp10749_138))
(assert (= temp10749_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10749_139)))
(assert (= temp10749_141 #x0000000000000001))
(assert (= temp10749_142 temp10749_141))
(assert (= temp10749_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10749_142)))
(assert (= temp10749_144 #x0000000000000002))
(assert (= temp10749_145 temp10749_144))
(assert (= temp10749_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10749_145)))
(assert (= temp10749_147 #x0000000000000003))
(assert (= temp10749_148 temp10749_147))
(assert (= temp10749_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10749_148)))
(assert (= temp10749_150 #x0000000000000004))
(assert (= temp10749_151 temp10749_150))
(assert (= temp10749_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10749_151)))
(assert (= temp10749_153 #x0000000000000005))
(assert (= temp10749_154 temp10749_153))
(assert (= temp10749_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10749_154)))
(assert (= temp10749_157 var1179826))
(assert (= temp10749_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10749_157)))
(assert (= temp10749_156 temp10749_158))
(assert (= var1191780
   (ite (bvslt temp10749_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10749_159 #x0000000000000000))
(assert (= var1191780 temp10749_159))
(assert (= temp10749_160 #x0000000000000000))
(assert (= var1179826 temp10749_160))
(assert (= temp10749_162 var1179826))
(assert (= temp10749_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10749_162)))
(assert (= temp10749_161 temp10749_163))
(assert (= var1191802 (bvsmod temp10749_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10749_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10749_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10749_165 #x0000000000000001))
(assert (= var1191803 temp10749_165))
(assert (= temp10749_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10749_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10749_167 #x0000000000000001))
(assert (= var1191823 temp10749_167))
(assert (= temp10749_168 #x0000000000000001))
(assert (= var1180714 temp10749_168))
(assert (= temp10749_169 #x0000000000000000))
(assert (= temp10749_170 temp10749_169))
(assert (= temp10749_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10749_170)))
(assert (= temp10749_172 #x0000000000000001))
(assert (= temp10749_173 temp10749_172))
(assert (= temp10749_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10749_173)))
(assert (= temp10749_175 #x0000000000000002))
(assert (= temp10749_176 temp10749_175))
(assert (= temp10749_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10749_176)))
(assert (= temp10749_178 #x0000000000000003))
(assert (= temp10749_179 temp10749_178))
(assert (= temp10749_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10749_179)))
(assert (= temp10749_181 #x0000000000000004))
(assert (= temp10749_182 temp10749_181))
(assert (= temp10749_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10749_182)))
(assert (= temp10749_184 #x0000000000000005))
(assert (= temp10749_185 temp10749_184))
(assert (= temp10749_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10749_185)))
(assert (= temp10749_187 #x0000000000000000))
(assert (= temp10749_188
   (ite (bvslt var1180714 temp10749_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10749_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10749_188)))
(assert (= var1191831 temp10749_189))
(assert (bvslt (ite (bvslt var1180714 temp10749_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10749_190 #x0000000000000001))
(assert (= var1180714 temp10749_190))
(assert (= temp10749_192 var1180714))
(assert (= temp10749_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10749_192)))
(assert (= temp10749_191 temp10749_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10749_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10749_194 #x0000000000000001))
(assert (= var1191836 temp10749_194))
(assert (= temp10749_195 #x0000000000000000))
(assert (= var1179826 temp10749_195))
(assert (= temp10749_197 var1179826))
(assert (= temp10749_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10749_197)))
(assert (= temp10749_196 temp10749_198))
(assert (= temp10749_199 #x0000000000000002))
(assert (= var1586025 temp10749_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10749_200 #x0000000000000001))
(assert (= var1191993 temp10749_200))
(assert (= temp10749_201 #x0000000000000001))
(assert (= var2700303 temp10749_201))
(assert (= temp10749_202 #x0000000000000001))
(assert (= var2962447 temp10749_202))
(assert (= temp10749_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10749_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10749_204 #x0000000000000001))
(assert (= var211058 temp10749_204))
(assert (= temp10749_205 #x0000000000000001))
(assert (= var211188 temp10749_205))
(assert (= var3879401 var211188))
(assert (= temp10749_206 #x0000000000000000))
(assert (= var3866802 temp10749_206))
(assert (= temp10749_207 #x0000000000000000))
(assert (= temp10749_208
   (ite (bvslt var3866802 temp10749_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10749_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10749_208)))
(assert (= var3879420 temp10749_209))
(assert (bvslt (ite (bvslt var3866802 temp10749_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10749_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10749_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10749_211 #x0000000000000000))
(assert (= var3879421 temp10749_211))
(assert (= temp10749_212 #x0000000000000001))
(assert (= var3867690 temp10749_212))
(assert (= temp10749_213 #x0000000000000000))
(assert (= temp10749_214
   (ite (bvslt var3867690 temp10749_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10749_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10749_214)))
(assert (= var3879423 temp10749_215))
(assert (bvslt (ite (bvslt var3867690 temp10749_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10749_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10749_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10749_217 #x0000000000000001))
(assert (= var3879424 temp10749_217))
(assert (= temp10749_218 #x0000000000000000))
(assert (= var4133117 temp10749_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10749_219 #x0000000000000002))
(assert (= var4339331 temp10749_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10749_220 #x0000000000000000))
(assert (= var4404892 temp10749_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var4600208 var211201))
(assert (= var211890 var210913))
(assert (= temp10749_221 #x0000000000000000))
(assert (= var211891
   (ite (distinct var211890 temp10749_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10749_222 #x0000000000000001))
(assert (= var211058 temp10749_222))
(model-add temp10749_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10749_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10749_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10749_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))



