(declare-fun temp10565_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10565_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10565_3 () (_ BitVec 64))
(declare-fun temp10565_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10565_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10565_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10565_7 () (_ BitVec 64))
(declare-fun temp10565_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10565_9 () (_ BitVec 64))
(declare-fun temp10565_10 () (_ BitVec 64))
(declare-fun temp10565_11 () (_ BitVec 64))
(declare-fun temp10565_12 () (_ BitVec 64))
(declare-fun temp10565_13 () (_ BitVec 64))
(declare-fun temp10565_14 () (_ BitVec 64))
(declare-fun temp10565_15 () (_ BitVec 64))
(declare-fun temp10565_16 () (_ BitVec 64))
(declare-fun temp10565_17 () (_ BitVec 64))
(declare-fun temp10565_18 () (_ BitVec 64))
(declare-fun temp10565_19 () (_ BitVec 64))
(declare-fun temp10565_20 () (_ BitVec 64))
(declare-fun temp10565_21 () (_ BitVec 64))
(declare-fun temp10565_22 () (_ BitVec 64))
(declare-fun temp10565_23 () (_ BitVec 64))
(declare-fun temp10565_24 () (_ BitVec 64))
(declare-fun temp10565_25 () (_ BitVec 64))
(declare-fun temp10565_26 () (_ BitVec 64))
(declare-fun temp10565_27 () (_ BitVec 64))
(declare-fun temp10565_28 () (_ BitVec 64))
(declare-fun temp10565_29 () (_ BitVec 64))
(declare-fun temp10565_30 () (_ BitVec 64))
(declare-fun temp10565_31 () (_ BitVec 64))
(declare-fun temp10565_32 () (_ BitVec 64))
(declare-fun temp10565_33 () (_ BitVec 64))
(declare-fun temp10565_34 () (_ BitVec 64))
(declare-fun temp10565_35 () (_ BitVec 64))
(declare-fun temp10565_36 () (_ BitVec 64))
(declare-fun temp10565_37 () (_ BitVec 64))
(declare-fun temp10565_38 () (_ BitVec 64))
(declare-fun temp10565_39 () (_ BitVec 64))
(declare-fun temp10565_40 () (_ BitVec 64))
(declare-fun temp10565_41 () (_ BitVec 64))
(declare-fun temp10565_42 () (_ BitVec 64))
(declare-fun temp10565_43 () (_ BitVec 64))
(declare-fun temp10565_44 () (_ BitVec 64))
(declare-fun temp10565_45 () (_ BitVec 64))
(declare-fun temp10565_46 () (_ BitVec 64))
(declare-fun temp10565_47 () (_ BitVec 64))
(declare-fun temp10565_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10565_49 () (_ BitVec 64))
(declare-fun temp10565_50 () (_ BitVec 64))
(declare-fun temp10565_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10565_52 () (_ BitVec 64))
(declare-fun temp10565_53 () (_ BitVec 64))
(declare-fun temp10565_54 () (_ BitVec 64))
(declare-fun temp10565_55 () (_ BitVec 64))
(declare-fun temp10565_56 () (_ BitVec 64))
(declare-fun temp10565_57 () (_ BitVec 64))
(declare-fun temp10565_58 () (_ BitVec 64))
(declare-fun temp10565_59 () (_ BitVec 64))
(declare-fun temp10565_60 () (_ BitVec 64))
(declare-fun temp10565_61 () (_ BitVec 64))
(declare-fun temp10565_62 () (_ BitVec 64))
(declare-fun temp10565_63 () (_ BitVec 64))
(declare-fun temp10565_64 () (_ BitVec 64))
(declare-fun temp10565_65 () (_ BitVec 64))
(declare-fun temp10565_66 () (_ BitVec 64))
(declare-fun temp10565_67 () (_ BitVec 64))
(declare-fun temp10565_68 () (_ BitVec 64))
(declare-fun temp10565_69 () (_ BitVec 64))
(declare-fun temp10565_70 () (_ BitVec 64))
(declare-fun temp10565_71 () (_ BitVec 64))
(declare-fun temp10565_72 () (_ BitVec 64))
(declare-fun temp10565_73 () (_ BitVec 64))
(declare-fun temp10565_74 () (_ BitVec 64))
(declare-fun temp10565_75 () (_ BitVec 64))
(declare-fun temp10565_76 () (_ BitVec 64))
(declare-fun temp10565_77 () (_ BitVec 64))
(declare-fun temp10565_78 () (_ BitVec 64))
(declare-fun temp10565_79 () (_ BitVec 64))
(declare-fun temp10565_80 () (_ BitVec 64))
(declare-fun temp10565_81 () (_ BitVec 64))
(declare-fun temp10565_82 () (_ BitVec 64))
(declare-fun temp10565_83 () (_ BitVec 64))
(declare-fun temp10565_84 () (_ BitVec 64))
(declare-fun temp10565_85 () (_ BitVec 64))
(declare-fun temp10565_86 () (_ BitVec 64))
(declare-fun temp10565_87 () (_ BitVec 64))
(declare-fun temp10565_88 () (_ BitVec 64))
(declare-fun temp10565_89 () (_ BitVec 64))
(declare-fun temp10565_90 () (_ BitVec 64))
(declare-fun temp10565_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10565_92 () (_ BitVec 64))
(declare-fun temp10565_93 () (_ BitVec 64))
(declare-fun temp10565_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10565_95 () (_ BitVec 64))
(declare-fun temp10565_96 () (_ BitVec 64))
(declare-fun temp10565_97 () (_ BitVec 64))
(declare-fun temp10565_98 () (_ BitVec 64))
(declare-fun temp10565_99 () (_ BitVec 64))
(declare-fun temp10565_100 () (_ BitVec 64))
(declare-fun temp10565_101 () (_ BitVec 64))
(declare-fun temp10565_102 () (_ BitVec 64))
(declare-fun temp10565_103 () (_ BitVec 64))
(declare-fun temp10565_104 () (_ BitVec 64))
(declare-fun temp10565_105 () (_ BitVec 64))
(declare-fun temp10565_106 () (_ BitVec 64))
(declare-fun temp10565_107 () (_ BitVec 64))
(declare-fun temp10565_108 () (_ BitVec 64))
(declare-fun temp10565_109 () (_ BitVec 64))
(declare-fun temp10565_110 () (_ BitVec 64))
(declare-fun temp10565_111 () (_ BitVec 64))
(declare-fun temp10565_112 () (_ BitVec 64))
(declare-fun temp10565_113 () (_ BitVec 64))
(declare-fun temp10565_114 () (_ BitVec 64))
(declare-fun temp10565_115 () (_ BitVec 64))
(declare-fun temp10565_116 () (_ BitVec 64))
(declare-fun temp10565_117 () (_ BitVec 64))
(declare-fun temp10565_118 () (_ BitVec 64))
(declare-fun temp10565_119 () (_ BitVec 64))
(declare-fun temp10565_120 () (_ BitVec 64))
(declare-fun temp10565_121 () (_ BitVec 64))
(declare-fun temp10565_122 () (_ BitVec 64))
(declare-fun temp10565_123 () (_ BitVec 64))
(declare-fun temp10565_124 () (_ BitVec 64))
(declare-fun temp10565_125 () (_ BitVec 64))
(declare-fun temp10565_126 () (_ BitVec 64))
(declare-fun temp10565_127 () (_ BitVec 64))
(declare-fun temp10565_128 () (_ BitVec 64))
(declare-fun temp10565_129 () (_ BitVec 64))
(declare-fun temp10565_130 () (_ BitVec 64))
(declare-fun temp10565_131 () (_ BitVec 64))
(declare-fun temp10565_132 () (_ BitVec 64))
(declare-fun temp10565_133 () (_ BitVec 64))
(declare-fun temp10565_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10565_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10565_136 () (_ BitVec 64))
(declare-fun temp10565_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10565_138 () (_ BitVec 64))
(declare-fun temp10565_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10565_140 () (_ BitVec 64))
(declare-fun temp10565_141 () (_ BitVec 64))
(declare-fun temp10565_142 () (_ BitVec 64))
(declare-fun temp10565_143 () (_ BitVec 64))
(declare-fun temp10565_144 () (_ BitVec 64))
(declare-fun temp10565_145 () (_ BitVec 64))
(declare-fun temp10565_146 () (_ BitVec 64))
(declare-fun temp10565_147 () (_ BitVec 64))
(declare-fun temp10565_148 () (_ BitVec 64))
(declare-fun temp10565_149 () (_ BitVec 64))
(declare-fun temp10565_150 () (_ BitVec 64))
(declare-fun temp10565_151 () (_ BitVec 64))
(declare-fun temp10565_152 () (_ BitVec 64))
(declare-fun temp10565_153 () (_ BitVec 64))
(declare-fun temp10565_154 () (_ BitVec 64))
(declare-fun temp10565_155 () (_ BitVec 64))
(declare-fun temp10565_157 () (_ BitVec 64))
(declare-fun temp10565_158 () (_ BitVec 64))
(declare-fun temp10565_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10565_159 () (_ BitVec 64))
(declare-fun temp10565_160 () (_ BitVec 64))
(declare-fun temp10565_162 () (_ BitVec 64))
(declare-fun temp10565_163 () (_ BitVec 64))
(declare-fun temp10565_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10565_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10565_165 () (_ BitVec 64))
(declare-fun temp10565_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10565_167 () (_ BitVec 64))
(declare-fun temp10565_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10565_169 () (_ BitVec 64))
(declare-fun temp10565_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10565_171 () (_ BitVec 64))
(declare-fun temp10565_172 () (_ BitVec 64))
(declare-fun temp10565_173 () (_ BitVec 64))
(declare-fun temp10565_174 () (_ BitVec 64))
(declare-fun temp10565_175 () (_ BitVec 64))
(declare-fun temp10565_176 () (_ BitVec 64))
(declare-fun temp10565_177 () (_ BitVec 64))
(declare-fun temp10565_178 () (_ BitVec 64))
(declare-fun temp10565_179 () (_ BitVec 64))
(declare-fun temp10565_180 () (_ BitVec 64))
(declare-fun temp10565_181 () (_ BitVec 64))
(declare-fun temp10565_182 () (_ BitVec 64))
(declare-fun temp10565_183 () (_ BitVec 64))
(declare-fun temp10565_184 () (_ BitVec 64))
(declare-fun temp10565_185 () (_ BitVec 64))
(declare-fun temp10565_186 () (_ BitVec 64))
(declare-fun temp10565_187 () (_ BitVec 64))
(declare-fun temp10565_188 () (_ BitVec 64))
(declare-fun temp10565_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10565_190 () (_ BitVec 64))
(declare-fun temp10565_192 () (_ BitVec 64))
(declare-fun temp10565_193 () (_ BitVec 64))
(declare-fun temp10565_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10565_194 () (_ BitVec 64))
(declare-fun temp10565_195 () (_ BitVec 64))
(declare-fun temp10565_197 () (_ BitVec 64))
(declare-fun temp10565_198 () (_ BitVec 64))
(declare-fun temp10565_196 () (_ BitVec 64))
(declare-fun temp10565_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10565_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10565_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10565_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10565_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10565_204 () (_ BitVec 64))
(declare-fun temp10565_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10565_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10565_207 () (_ BitVec 64))
(declare-fun temp10565_208 () (_ BitVec 64))
(declare-fun temp10565_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10565_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10565_211 () (_ BitVec 64))
(declare-fun temp10565_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10565_213 () (_ BitVec 64))
(declare-fun temp10565_214 () (_ BitVec 64))
(declare-fun temp10565_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10565_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10565_217 () (_ BitVec 64))
(declare-fun temp10565_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10565_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10565_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var4927888 () (_ BitVec 64))
(declare-fun var211388 () (_ BitVec 64))
(declare-fun temp10565_221 () (_ BitVec 64))
(declare-fun var211389 () (_ BitVec 64))
(declare-fun var5848909 () (_ BitVec 64))
(declare-fun temp10565_223 () (_ BitVec 64))
(declare-fun temp10565_222 () (_ BitVec 64))
(declare-fun temp10565_224 () (_ BitVec 64))
(declare-fun var6688234 () (_ BitVec 64))
(declare-fun temp10565_226 () (_ BitVec 64))
(declare-fun temp10565_225 () (_ BitVec 64))
(declare-fun temp10565_227 () (_ BitVec 64))
(assert (= temp10565_1 #x0000000000000001))
(assert (= var77203 temp10565_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10565_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10565_2)))
(assert (= temp10565_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10565_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10565_4 #x0000000000000000))
(assert (= var210941 temp10565_4))
(assert (= temp10565_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10565_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10565_6 #x0000000000000000))
(assert (= var210986 temp10565_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10565_7 #x0000000000000000))
(assert (= temp10565_8 temp10565_7))
(assert (= temp10565_9 (select ARGNAME_padding_NAMEEND_VAL temp10565_8)))
(assert (= temp10565_10 #x0000000000000001))
(assert (= temp10565_11 temp10565_10))
(assert (= temp10565_12 (select ARGNAME_padding_NAMEEND_VAL temp10565_11)))
(assert (= temp10565_13 #x0000000000000002))
(assert (= temp10565_14 temp10565_13))
(assert (= temp10565_15 (select ARGNAME_padding_NAMEEND_VAL temp10565_14)))
(assert (= temp10565_16 #x0000000000000003))
(assert (= temp10565_17 temp10565_16))
(assert (= temp10565_18 (select ARGNAME_padding_NAMEEND_VAL temp10565_17)))
(assert (= temp10565_19 #x0000000000000004))
(assert (= temp10565_20 temp10565_19))
(assert (= temp10565_21 (select ARGNAME_padding_NAMEEND_VAL temp10565_20)))
(assert (= temp10565_22 #x0000000000000005))
(assert (= temp10565_23 temp10565_22))
(assert (= temp10565_24 (select ARGNAME_padding_NAMEEND_VAL temp10565_23)))
(assert (= temp10565_25 #x0000000000000000))
(assert (= temp10565_26 #x0000000000000000))
(assert (= temp10565_27 temp10565_26))
(assert (= temp10565_28 (select ARGNAME_padding_NAMEEND_VAL temp10565_27)))
(assert (= temp10565_29 #x0000000000000000))
(assert (= temp10565_30 #x0000000000000001))
(assert (= temp10565_31 temp10565_30))
(assert (= temp10565_32 (select ARGNAME_padding_NAMEEND_VAL temp10565_31)))
(assert (= temp10565_33 #x0000000000000000))
(assert (= temp10565_34 #x0000000000000002))
(assert (= temp10565_35 temp10565_34))
(assert (= temp10565_36 (select ARGNAME_padding_NAMEEND_VAL temp10565_35)))
(assert (= temp10565_37 #x0000000000000000))
(assert (= temp10565_38 #x0000000000000003))
(assert (= temp10565_39 temp10565_38))
(assert (= temp10565_40 (select ARGNAME_padding_NAMEEND_VAL temp10565_39)))
(assert (= temp10565_41 #x0000000000000000))
(assert (= temp10565_42 #x0000000000000004))
(assert (= temp10565_43 temp10565_42))
(assert (= temp10565_44 (select ARGNAME_padding_NAMEEND_VAL temp10565_43)))
(assert (= temp10565_45 #x0000000000000000))
(assert (= temp10565_46 #x0000000000000005))
(assert (= temp10565_47 temp10565_46))
(assert (= temp10565_48 (select ARGNAME_padding_NAMEEND_VAL temp10565_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10565_28 temp10565_25)
             (bvslt temp10565_32 temp10565_29)
             (bvslt temp10565_36 temp10565_33)
             (bvslt temp10565_40 temp10565_37)
             (bvslt temp10565_44 temp10565_41)
             (bvslt temp10565_48 temp10565_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10565_49 #x0000000000000000))
(assert (= var1191714 temp10565_49))
(assert (= temp10565_50 #x0000000000000000))
(assert (= temp10565_51 temp10565_50))
(assert (= temp10565_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10565_51)))
(assert (= temp10565_53 #x0000000000000001))
(assert (= temp10565_54 temp10565_53))
(assert (= temp10565_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10565_54)))
(assert (= temp10565_56 #x0000000000000002))
(assert (= temp10565_57 temp10565_56))
(assert (= temp10565_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10565_57)))
(assert (= temp10565_59 #x0000000000000003))
(assert (= temp10565_60 temp10565_59))
(assert (= temp10565_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10565_60)))
(assert (= temp10565_62 #x0000000000000004))
(assert (= temp10565_63 temp10565_62))
(assert (= temp10565_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10565_63)))
(assert (= temp10565_65 #x0000000000000005))
(assert (= temp10565_66 temp10565_65))
(assert (= temp10565_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10565_66)))
(assert (= temp10565_68 #x0000000000000000))
(assert (= temp10565_69 #x0000000000000000))
(assert (= temp10565_70 temp10565_69))
(assert (= temp10565_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10565_70)))
(assert (= temp10565_72 #x0000000000000000))
(assert (= temp10565_73 #x0000000000000001))
(assert (= temp10565_74 temp10565_73))
(assert (= temp10565_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10565_74)))
(assert (= temp10565_76 #x0000000000000000))
(assert (= temp10565_77 #x0000000000000002))
(assert (= temp10565_78 temp10565_77))
(assert (= temp10565_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10565_78)))
(assert (= temp10565_80 #x0000000000000000))
(assert (= temp10565_81 #x0000000000000003))
(assert (= temp10565_82 temp10565_81))
(assert (= temp10565_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10565_82)))
(assert (= temp10565_84 #x0000000000000000))
(assert (= temp10565_85 #x0000000000000004))
(assert (= temp10565_86 temp10565_85))
(assert (= temp10565_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10565_86)))
(assert (= temp10565_88 #x0000000000000000))
(assert (= temp10565_89 #x0000000000000005))
(assert (= temp10565_90 temp10565_89))
(assert (= temp10565_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10565_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10565_71 temp10565_68)
             (bvslt temp10565_75 temp10565_72)
             (bvslt temp10565_79 temp10565_76)
             (bvslt temp10565_83 temp10565_80)
             (bvslt temp10565_87 temp10565_84)
             (bvslt temp10565_91 temp10565_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10565_92 #x0000000000000000))
(assert (= var1191725 temp10565_92))
(assert (= temp10565_93 #x0000000000000000))
(assert (= temp10565_94 temp10565_93))
(assert (= temp10565_95 (select ARGNAME_stride_NAMEEND_VAL temp10565_94)))
(assert (= temp10565_96 #x0000000000000001))
(assert (= temp10565_97 temp10565_96))
(assert (= temp10565_98 (select ARGNAME_stride_NAMEEND_VAL temp10565_97)))
(assert (= temp10565_99 #x0000000000000002))
(assert (= temp10565_100 temp10565_99))
(assert (= temp10565_101 (select ARGNAME_stride_NAMEEND_VAL temp10565_100)))
(assert (= temp10565_102 #x0000000000000003))
(assert (= temp10565_103 temp10565_102))
(assert (= temp10565_104 (select ARGNAME_stride_NAMEEND_VAL temp10565_103)))
(assert (= temp10565_105 #x0000000000000004))
(assert (= temp10565_106 temp10565_105))
(assert (= temp10565_107 (select ARGNAME_stride_NAMEEND_VAL temp10565_106)))
(assert (= temp10565_108 #x0000000000000005))
(assert (= temp10565_109 temp10565_108))
(assert (= temp10565_110 (select ARGNAME_stride_NAMEEND_VAL temp10565_109)))
(assert (= temp10565_111 #x0000000000000000))
(assert (= temp10565_112 #x0000000000000000))
(assert (= temp10565_113 temp10565_112))
(assert (= temp10565_114 (select ARGNAME_stride_NAMEEND_VAL temp10565_113)))
(assert (= temp10565_115 #x0000000000000000))
(assert (= temp10565_116 #x0000000000000001))
(assert (= temp10565_117 temp10565_116))
(assert (= temp10565_118 (select ARGNAME_stride_NAMEEND_VAL temp10565_117)))
(assert (= temp10565_119 #x0000000000000000))
(assert (= temp10565_120 #x0000000000000002))
(assert (= temp10565_121 temp10565_120))
(assert (= temp10565_122 (select ARGNAME_stride_NAMEEND_VAL temp10565_121)))
(assert (= temp10565_123 #x0000000000000000))
(assert (= temp10565_124 #x0000000000000003))
(assert (= temp10565_125 temp10565_124))
(assert (= temp10565_126 (select ARGNAME_stride_NAMEEND_VAL temp10565_125)))
(assert (= temp10565_127 #x0000000000000000))
(assert (= temp10565_128 #x0000000000000004))
(assert (= temp10565_129 temp10565_128))
(assert (= temp10565_130 (select ARGNAME_stride_NAMEEND_VAL temp10565_129)))
(assert (= temp10565_131 #x0000000000000000))
(assert (= temp10565_132 #x0000000000000005))
(assert (= temp10565_133 temp10565_132))
(assert (= temp10565_134 (select ARGNAME_stride_NAMEEND_VAL temp10565_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10565_114 temp10565_111)
             (bvsle temp10565_118 temp10565_115)
             (bvsle temp10565_122 temp10565_119)
             (bvsle temp10565_126 temp10565_123)
             (bvsle temp10565_130 temp10565_127)
             (bvsle temp10565_134 temp10565_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10565_135 #x0000000000000000))
(assert (= var1191735 temp10565_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10565_136 #x0000000000000001))
(assert (= var1191747 temp10565_136))
(assert (= temp10565_137 #x0000000000000000))
(assert (= var1179826 temp10565_137))
(assert (= temp10565_138 #x0000000000000000))
(assert (= temp10565_139 temp10565_138))
(assert (= temp10565_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10565_139)))
(assert (= temp10565_141 #x0000000000000001))
(assert (= temp10565_142 temp10565_141))
(assert (= temp10565_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10565_142)))
(assert (= temp10565_144 #x0000000000000002))
(assert (= temp10565_145 temp10565_144))
(assert (= temp10565_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10565_145)))
(assert (= temp10565_147 #x0000000000000003))
(assert (= temp10565_148 temp10565_147))
(assert (= temp10565_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10565_148)))
(assert (= temp10565_150 #x0000000000000004))
(assert (= temp10565_151 temp10565_150))
(assert (= temp10565_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10565_151)))
(assert (= temp10565_153 #x0000000000000005))
(assert (= temp10565_154 temp10565_153))
(assert (= temp10565_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10565_154)))
(assert (= temp10565_157 var1179826))
(assert (= temp10565_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10565_157)))
(assert (= temp10565_156 temp10565_158))
(assert (= var1191780
   (ite (bvslt temp10565_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10565_159 #x0000000000000000))
(assert (= var1191780 temp10565_159))
(assert (= temp10565_160 #x0000000000000000))
(assert (= var1179826 temp10565_160))
(assert (= temp10565_162 var1179826))
(assert (= temp10565_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10565_162)))
(assert (= temp10565_161 temp10565_163))
(assert (= var1191802 (bvsmod temp10565_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10565_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10565_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10565_165 #x0000000000000001))
(assert (= var1191803 temp10565_165))
(assert (= temp10565_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10565_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10565_167 #x0000000000000001))
(assert (= var1191823 temp10565_167))
(assert (= temp10565_168 #x0000000000000001))
(assert (= var1180714 temp10565_168))
(assert (= temp10565_169 #x0000000000000000))
(assert (= temp10565_170 temp10565_169))
(assert (= temp10565_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10565_170)))
(assert (= temp10565_172 #x0000000000000001))
(assert (= temp10565_173 temp10565_172))
(assert (= temp10565_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10565_173)))
(assert (= temp10565_175 #x0000000000000002))
(assert (= temp10565_176 temp10565_175))
(assert (= temp10565_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10565_176)))
(assert (= temp10565_178 #x0000000000000003))
(assert (= temp10565_179 temp10565_178))
(assert (= temp10565_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10565_179)))
(assert (= temp10565_181 #x0000000000000004))
(assert (= temp10565_182 temp10565_181))
(assert (= temp10565_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10565_182)))
(assert (= temp10565_184 #x0000000000000005))
(assert (= temp10565_185 temp10565_184))
(assert (= temp10565_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10565_185)))
(assert (= temp10565_187 #x0000000000000000))
(assert (= temp10565_188
   (ite (bvslt var1180714 temp10565_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10565_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10565_188)))
(assert (= var1191831 temp10565_189))
(assert (bvslt (ite (bvslt var1180714 temp10565_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10565_190 #x0000000000000001))
(assert (= var1180714 temp10565_190))
(assert (= temp10565_192 var1180714))
(assert (= temp10565_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10565_192)))
(assert (= temp10565_191 temp10565_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10565_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10565_194 #x0000000000000001))
(assert (= var1191836 temp10565_194))
(assert (= temp10565_195 #x0000000000000000))
(assert (= var1179826 temp10565_195))
(assert (= temp10565_197 var1179826))
(assert (= temp10565_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10565_197)))
(assert (= temp10565_196 temp10565_198))
(assert (= temp10565_199 #x0000000000000002))
(assert (= var1586025 temp10565_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10565_200 #x0000000000000001))
(assert (= var1191993 temp10565_200))
(assert (= temp10565_201 #x0000000000000001))
(assert (= var2700303 temp10565_201))
(assert (= temp10565_202 #x0000000000000001))
(assert (= var2962447 temp10565_202))
(assert (= temp10565_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10565_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10565_204 #x0000000000000001))
(assert (= var211058 temp10565_204))
(assert (= temp10565_205 #x0000000000000001))
(assert (= var211188 temp10565_205))
(assert (= var3879401 var211188))
(assert (= temp10565_206 #x0000000000000000))
(assert (= var3866802 temp10565_206))
(assert (= temp10565_207 #x0000000000000000))
(assert (= temp10565_208
   (ite (bvslt var3866802 temp10565_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10565_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10565_208)))
(assert (= var3879420 temp10565_209))
(assert (bvslt (ite (bvslt var3866802 temp10565_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10565_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10565_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10565_211 #x0000000000000000))
(assert (= var3879421 temp10565_211))
(assert (= temp10565_212 #x0000000000000001))
(assert (= var3867690 temp10565_212))
(assert (= temp10565_213 #x0000000000000000))
(assert (= temp10565_214
   (ite (bvslt var3867690 temp10565_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10565_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10565_214)))
(assert (= var3879423 temp10565_215))
(assert (bvslt (ite (bvslt var3867690 temp10565_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10565_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10565_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10565_217 #x0000000000000001))
(assert (= var3879424 temp10565_217))
(assert (= temp10565_218 #x0000000000000000))
(assert (= var4133117 temp10565_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10565_219 #x0000000000000002))
(assert (= var4339331 temp10565_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10565_220 #x0000000000000000))
(assert (= var4404892 temp10565_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var4927888 var211201))
(assert (= var211388 var210913))
(assert (= temp10565_221 #x0000000000000000))
(assert (= var211389
   (ite (distinct var211388 temp10565_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var5848909 var211389))
(assert (= temp10565_223 #x0000000000000001))
(assert (= temp10565_222 temp10565_223))
(assert (= temp10565_224 #x0000000000000001))
(assert (= var6688234 temp10565_224))
(assert (= temp10565_226 #xffffffffffffffff))
(assert (= temp10565_225 temp10565_226))
(assert (= temp10565_227 #x0000000000000001))
(assert (= var211058 temp10565_227))
(model-add temp10565_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10565_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10565_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10565_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






