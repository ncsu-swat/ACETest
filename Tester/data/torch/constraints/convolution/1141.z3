(declare-fun temp10252_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10252_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10252_3 () (_ BitVec 64))
(declare-fun temp10252_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10252_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10252_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10252_7 () (_ BitVec 64))
(declare-fun temp10252_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10252_9 () (_ BitVec 64))
(declare-fun temp10252_10 () (_ BitVec 64))
(declare-fun temp10252_11 () (_ BitVec 64))
(declare-fun temp10252_12 () (_ BitVec 64))
(declare-fun temp10252_13 () (_ BitVec 64))
(declare-fun temp10252_14 () (_ BitVec 64))
(declare-fun temp10252_15 () (_ BitVec 64))
(declare-fun temp10252_16 () (_ BitVec 64))
(declare-fun temp10252_17 () (_ BitVec 64))
(declare-fun temp10252_18 () (_ BitVec 64))
(declare-fun temp10252_19 () (_ BitVec 64))
(declare-fun temp10252_20 () (_ BitVec 64))
(declare-fun temp10252_21 () (_ BitVec 64))
(declare-fun temp10252_22 () (_ BitVec 64))
(declare-fun temp10252_23 () (_ BitVec 64))
(declare-fun temp10252_24 () (_ BitVec 64))
(declare-fun temp10252_25 () (_ BitVec 64))
(declare-fun temp10252_26 () (_ BitVec 64))
(declare-fun temp10252_27 () (_ BitVec 64))
(declare-fun temp10252_28 () (_ BitVec 64))
(declare-fun temp10252_29 () (_ BitVec 64))
(declare-fun temp10252_30 () (_ BitVec 64))
(declare-fun temp10252_31 () (_ BitVec 64))
(declare-fun temp10252_32 () (_ BitVec 64))
(declare-fun temp10252_33 () (_ BitVec 64))
(declare-fun temp10252_34 () (_ BitVec 64))
(declare-fun temp10252_35 () (_ BitVec 64))
(declare-fun temp10252_36 () (_ BitVec 64))
(declare-fun temp10252_37 () (_ BitVec 64))
(declare-fun temp10252_38 () (_ BitVec 64))
(declare-fun temp10252_39 () (_ BitVec 64))
(declare-fun temp10252_40 () (_ BitVec 64))
(declare-fun temp10252_41 () (_ BitVec 64))
(declare-fun temp10252_42 () (_ BitVec 64))
(declare-fun temp10252_43 () (_ BitVec 64))
(declare-fun temp10252_44 () (_ BitVec 64))
(declare-fun temp10252_45 () (_ BitVec 64))
(declare-fun temp10252_46 () (_ BitVec 64))
(declare-fun temp10252_47 () (_ BitVec 64))
(declare-fun temp10252_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10252_49 () (_ BitVec 64))
(declare-fun temp10252_50 () (_ BitVec 64))
(declare-fun temp10252_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10252_52 () (_ BitVec 64))
(declare-fun temp10252_53 () (_ BitVec 64))
(declare-fun temp10252_54 () (_ BitVec 64))
(declare-fun temp10252_55 () (_ BitVec 64))
(declare-fun temp10252_56 () (_ BitVec 64))
(declare-fun temp10252_57 () (_ BitVec 64))
(declare-fun temp10252_58 () (_ BitVec 64))
(declare-fun temp10252_59 () (_ BitVec 64))
(declare-fun temp10252_60 () (_ BitVec 64))
(declare-fun temp10252_61 () (_ BitVec 64))
(declare-fun temp10252_62 () (_ BitVec 64))
(declare-fun temp10252_63 () (_ BitVec 64))
(declare-fun temp10252_64 () (_ BitVec 64))
(declare-fun temp10252_65 () (_ BitVec 64))
(declare-fun temp10252_66 () (_ BitVec 64))
(declare-fun temp10252_67 () (_ BitVec 64))
(declare-fun temp10252_68 () (_ BitVec 64))
(declare-fun temp10252_69 () (_ BitVec 64))
(declare-fun temp10252_70 () (_ BitVec 64))
(declare-fun temp10252_71 () (_ BitVec 64))
(declare-fun temp10252_72 () (_ BitVec 64))
(declare-fun temp10252_73 () (_ BitVec 64))
(declare-fun temp10252_74 () (_ BitVec 64))
(declare-fun temp10252_75 () (_ BitVec 64))
(declare-fun temp10252_76 () (_ BitVec 64))
(declare-fun temp10252_77 () (_ BitVec 64))
(declare-fun temp10252_78 () (_ BitVec 64))
(declare-fun temp10252_79 () (_ BitVec 64))
(declare-fun temp10252_80 () (_ BitVec 64))
(declare-fun temp10252_81 () (_ BitVec 64))
(declare-fun temp10252_82 () (_ BitVec 64))
(declare-fun temp10252_83 () (_ BitVec 64))
(declare-fun temp10252_84 () (_ BitVec 64))
(declare-fun temp10252_85 () (_ BitVec 64))
(declare-fun temp10252_86 () (_ BitVec 64))
(declare-fun temp10252_87 () (_ BitVec 64))
(declare-fun temp10252_88 () (_ BitVec 64))
(declare-fun temp10252_89 () (_ BitVec 64))
(declare-fun temp10252_90 () (_ BitVec 64))
(declare-fun temp10252_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10252_92 () (_ BitVec 64))
(declare-fun temp10252_93 () (_ BitVec 64))
(declare-fun temp10252_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10252_95 () (_ BitVec 64))
(declare-fun temp10252_96 () (_ BitVec 64))
(declare-fun temp10252_97 () (_ BitVec 64))
(declare-fun temp10252_98 () (_ BitVec 64))
(declare-fun temp10252_99 () (_ BitVec 64))
(declare-fun temp10252_100 () (_ BitVec 64))
(declare-fun temp10252_101 () (_ BitVec 64))
(declare-fun temp10252_102 () (_ BitVec 64))
(declare-fun temp10252_103 () (_ BitVec 64))
(declare-fun temp10252_104 () (_ BitVec 64))
(declare-fun temp10252_105 () (_ BitVec 64))
(declare-fun temp10252_106 () (_ BitVec 64))
(declare-fun temp10252_107 () (_ BitVec 64))
(declare-fun temp10252_108 () (_ BitVec 64))
(declare-fun temp10252_109 () (_ BitVec 64))
(declare-fun temp10252_110 () (_ BitVec 64))
(declare-fun temp10252_111 () (_ BitVec 64))
(declare-fun temp10252_112 () (_ BitVec 64))
(declare-fun temp10252_113 () (_ BitVec 64))
(declare-fun temp10252_114 () (_ BitVec 64))
(declare-fun temp10252_115 () (_ BitVec 64))
(declare-fun temp10252_116 () (_ BitVec 64))
(declare-fun temp10252_117 () (_ BitVec 64))
(declare-fun temp10252_118 () (_ BitVec 64))
(declare-fun temp10252_119 () (_ BitVec 64))
(declare-fun temp10252_120 () (_ BitVec 64))
(declare-fun temp10252_121 () (_ BitVec 64))
(declare-fun temp10252_122 () (_ BitVec 64))
(declare-fun temp10252_123 () (_ BitVec 64))
(declare-fun temp10252_124 () (_ BitVec 64))
(declare-fun temp10252_125 () (_ BitVec 64))
(declare-fun temp10252_126 () (_ BitVec 64))
(declare-fun temp10252_127 () (_ BitVec 64))
(declare-fun temp10252_128 () (_ BitVec 64))
(declare-fun temp10252_129 () (_ BitVec 64))
(declare-fun temp10252_130 () (_ BitVec 64))
(declare-fun temp10252_131 () (_ BitVec 64))
(declare-fun temp10252_132 () (_ BitVec 64))
(declare-fun temp10252_133 () (_ BitVec 64))
(declare-fun temp10252_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10252_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10252_136 () (_ BitVec 64))
(declare-fun temp10252_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10252_138 () (_ BitVec 64))
(declare-fun temp10252_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10252_140 () (_ BitVec 64))
(declare-fun temp10252_141 () (_ BitVec 64))
(declare-fun temp10252_142 () (_ BitVec 64))
(declare-fun temp10252_143 () (_ BitVec 64))
(declare-fun temp10252_144 () (_ BitVec 64))
(declare-fun temp10252_145 () (_ BitVec 64))
(declare-fun temp10252_146 () (_ BitVec 64))
(declare-fun temp10252_147 () (_ BitVec 64))
(declare-fun temp10252_148 () (_ BitVec 64))
(declare-fun temp10252_149 () (_ BitVec 64))
(declare-fun temp10252_150 () (_ BitVec 64))
(declare-fun temp10252_151 () (_ BitVec 64))
(declare-fun temp10252_152 () (_ BitVec 64))
(declare-fun temp10252_153 () (_ BitVec 64))
(declare-fun temp10252_154 () (_ BitVec 64))
(declare-fun temp10252_155 () (_ BitVec 64))
(declare-fun temp10252_157 () (_ BitVec 64))
(declare-fun temp10252_158 () (_ BitVec 64))
(declare-fun temp10252_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10252_159 () (_ BitVec 64))
(declare-fun temp10252_160 () (_ BitVec 64))
(declare-fun temp10252_162 () (_ BitVec 64))
(declare-fun temp10252_163 () (_ BitVec 64))
(declare-fun temp10252_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10252_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10252_165 () (_ BitVec 64))
(declare-fun temp10252_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10252_167 () (_ BitVec 64))
(declare-fun temp10252_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10252_169 () (_ BitVec 64))
(declare-fun temp10252_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10252_171 () (_ BitVec 64))
(declare-fun temp10252_172 () (_ BitVec 64))
(declare-fun temp10252_173 () (_ BitVec 64))
(declare-fun temp10252_174 () (_ BitVec 64))
(declare-fun temp10252_175 () (_ BitVec 64))
(declare-fun temp10252_176 () (_ BitVec 64))
(declare-fun temp10252_177 () (_ BitVec 64))
(declare-fun temp10252_178 () (_ BitVec 64))
(declare-fun temp10252_179 () (_ BitVec 64))
(declare-fun temp10252_180 () (_ BitVec 64))
(declare-fun temp10252_181 () (_ BitVec 64))
(declare-fun temp10252_182 () (_ BitVec 64))
(declare-fun temp10252_183 () (_ BitVec 64))
(declare-fun temp10252_184 () (_ BitVec 64))
(declare-fun temp10252_185 () (_ BitVec 64))
(declare-fun temp10252_186 () (_ BitVec 64))
(declare-fun temp10252_187 () (_ BitVec 64))
(declare-fun temp10252_188 () (_ BitVec 64))
(declare-fun temp10252_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10252_190 () (_ BitVec 64))
(declare-fun temp10252_192 () (_ BitVec 64))
(declare-fun temp10252_193 () (_ BitVec 64))
(declare-fun temp10252_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10252_194 () (_ BitVec 64))
(declare-fun temp10252_195 () (_ BitVec 64))
(declare-fun temp10252_197 () (_ BitVec 64))
(declare-fun temp10252_198 () (_ BitVec 64))
(declare-fun temp10252_196 () (_ BitVec 64))
(declare-fun temp10252_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10252_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10252_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10252_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10252_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10252_204 () (_ BitVec 64))
(declare-fun temp10252_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10252_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10252_207 () (_ BitVec 64))
(declare-fun temp10252_208 () (_ BitVec 64))
(declare-fun temp10252_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10252_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10252_211 () (_ BitVec 64))
(declare-fun temp10252_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10252_213 () (_ BitVec 64))
(declare-fun temp10252_214 () (_ BitVec 64))
(declare-fun temp10252_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10252_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10252_217 () (_ BitVec 64))
(declare-fun temp10252_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10252_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10252_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4862352 () (_ BitVec 64))
(declare-fun var5124496 () (_ BitVec 64))
(declare-fun temp10252_221 () (_ BitVec 64))
(declare-fun temp10252_222 () (_ BitVec 64))
(declare-fun var6763284 () (_ BitVec 64))
(declare-fun var6763251 () (_ BitVec 64))
(declare-fun var6631815 () (_ BitVec 64))
(declare-fun var6631811 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp10252_223 () (_ BitVec 64))
(assert (= temp10252_1 #x0000000000000001))
(assert (= var77203 temp10252_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10252_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10252_2)))
(assert (= temp10252_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10252_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10252_4 #x0000000000000000))
(assert (= var210941 temp10252_4))
(assert (= temp10252_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10252_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10252_6 #x0000000000000000))
(assert (= var210986 temp10252_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10252_7 #x0000000000000000))
(assert (= temp10252_8 temp10252_7))
(assert (= temp10252_9 (select ARGNAME_padding_NAMEEND_VAL temp10252_8)))
(assert (= temp10252_10 #x0000000000000001))
(assert (= temp10252_11 temp10252_10))
(assert (= temp10252_12 (select ARGNAME_padding_NAMEEND_VAL temp10252_11)))
(assert (= temp10252_13 #x0000000000000002))
(assert (= temp10252_14 temp10252_13))
(assert (= temp10252_15 (select ARGNAME_padding_NAMEEND_VAL temp10252_14)))
(assert (= temp10252_16 #x0000000000000003))
(assert (= temp10252_17 temp10252_16))
(assert (= temp10252_18 (select ARGNAME_padding_NAMEEND_VAL temp10252_17)))
(assert (= temp10252_19 #x0000000000000004))
(assert (= temp10252_20 temp10252_19))
(assert (= temp10252_21 (select ARGNAME_padding_NAMEEND_VAL temp10252_20)))
(assert (= temp10252_22 #x0000000000000005))
(assert (= temp10252_23 temp10252_22))
(assert (= temp10252_24 (select ARGNAME_padding_NAMEEND_VAL temp10252_23)))
(assert (= temp10252_25 #x0000000000000000))
(assert (= temp10252_26 #x0000000000000000))
(assert (= temp10252_27 temp10252_26))
(assert (= temp10252_28 (select ARGNAME_padding_NAMEEND_VAL temp10252_27)))
(assert (= temp10252_29 #x0000000000000000))
(assert (= temp10252_30 #x0000000000000001))
(assert (= temp10252_31 temp10252_30))
(assert (= temp10252_32 (select ARGNAME_padding_NAMEEND_VAL temp10252_31)))
(assert (= temp10252_33 #x0000000000000000))
(assert (= temp10252_34 #x0000000000000002))
(assert (= temp10252_35 temp10252_34))
(assert (= temp10252_36 (select ARGNAME_padding_NAMEEND_VAL temp10252_35)))
(assert (= temp10252_37 #x0000000000000000))
(assert (= temp10252_38 #x0000000000000003))
(assert (= temp10252_39 temp10252_38))
(assert (= temp10252_40 (select ARGNAME_padding_NAMEEND_VAL temp10252_39)))
(assert (= temp10252_41 #x0000000000000000))
(assert (= temp10252_42 #x0000000000000004))
(assert (= temp10252_43 temp10252_42))
(assert (= temp10252_44 (select ARGNAME_padding_NAMEEND_VAL temp10252_43)))
(assert (= temp10252_45 #x0000000000000000))
(assert (= temp10252_46 #x0000000000000005))
(assert (= temp10252_47 temp10252_46))
(assert (= temp10252_48 (select ARGNAME_padding_NAMEEND_VAL temp10252_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10252_28 temp10252_25)
             (bvslt temp10252_32 temp10252_29)
             (bvslt temp10252_36 temp10252_33)
             (bvslt temp10252_40 temp10252_37)
             (bvslt temp10252_44 temp10252_41)
             (bvslt temp10252_48 temp10252_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10252_49 #x0000000000000000))
(assert (= var1191714 temp10252_49))
(assert (= temp10252_50 #x0000000000000000))
(assert (= temp10252_51 temp10252_50))
(assert (= temp10252_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10252_51)))
(assert (= temp10252_53 #x0000000000000001))
(assert (= temp10252_54 temp10252_53))
(assert (= temp10252_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10252_54)))
(assert (= temp10252_56 #x0000000000000002))
(assert (= temp10252_57 temp10252_56))
(assert (= temp10252_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10252_57)))
(assert (= temp10252_59 #x0000000000000003))
(assert (= temp10252_60 temp10252_59))
(assert (= temp10252_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10252_60)))
(assert (= temp10252_62 #x0000000000000004))
(assert (= temp10252_63 temp10252_62))
(assert (= temp10252_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10252_63)))
(assert (= temp10252_65 #x0000000000000005))
(assert (= temp10252_66 temp10252_65))
(assert (= temp10252_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10252_66)))
(assert (= temp10252_68 #x0000000000000000))
(assert (= temp10252_69 #x0000000000000000))
(assert (= temp10252_70 temp10252_69))
(assert (= temp10252_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10252_70)))
(assert (= temp10252_72 #x0000000000000000))
(assert (= temp10252_73 #x0000000000000001))
(assert (= temp10252_74 temp10252_73))
(assert (= temp10252_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10252_74)))
(assert (= temp10252_76 #x0000000000000000))
(assert (= temp10252_77 #x0000000000000002))
(assert (= temp10252_78 temp10252_77))
(assert (= temp10252_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10252_78)))
(assert (= temp10252_80 #x0000000000000000))
(assert (= temp10252_81 #x0000000000000003))
(assert (= temp10252_82 temp10252_81))
(assert (= temp10252_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10252_82)))
(assert (= temp10252_84 #x0000000000000000))
(assert (= temp10252_85 #x0000000000000004))
(assert (= temp10252_86 temp10252_85))
(assert (= temp10252_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10252_86)))
(assert (= temp10252_88 #x0000000000000000))
(assert (= temp10252_89 #x0000000000000005))
(assert (= temp10252_90 temp10252_89))
(assert (= temp10252_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10252_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10252_71 temp10252_68)
             (bvslt temp10252_75 temp10252_72)
             (bvslt temp10252_79 temp10252_76)
             (bvslt temp10252_83 temp10252_80)
             (bvslt temp10252_87 temp10252_84)
             (bvslt temp10252_91 temp10252_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10252_92 #x0000000000000000))
(assert (= var1191725 temp10252_92))
(assert (= temp10252_93 #x0000000000000000))
(assert (= temp10252_94 temp10252_93))
(assert (= temp10252_95 (select ARGNAME_stride_NAMEEND_VAL temp10252_94)))
(assert (= temp10252_96 #x0000000000000001))
(assert (= temp10252_97 temp10252_96))
(assert (= temp10252_98 (select ARGNAME_stride_NAMEEND_VAL temp10252_97)))
(assert (= temp10252_99 #x0000000000000002))
(assert (= temp10252_100 temp10252_99))
(assert (= temp10252_101 (select ARGNAME_stride_NAMEEND_VAL temp10252_100)))
(assert (= temp10252_102 #x0000000000000003))
(assert (= temp10252_103 temp10252_102))
(assert (= temp10252_104 (select ARGNAME_stride_NAMEEND_VAL temp10252_103)))
(assert (= temp10252_105 #x0000000000000004))
(assert (= temp10252_106 temp10252_105))
(assert (= temp10252_107 (select ARGNAME_stride_NAMEEND_VAL temp10252_106)))
(assert (= temp10252_108 #x0000000000000005))
(assert (= temp10252_109 temp10252_108))
(assert (= temp10252_110 (select ARGNAME_stride_NAMEEND_VAL temp10252_109)))
(assert (= temp10252_111 #x0000000000000000))
(assert (= temp10252_112 #x0000000000000000))
(assert (= temp10252_113 temp10252_112))
(assert (= temp10252_114 (select ARGNAME_stride_NAMEEND_VAL temp10252_113)))
(assert (= temp10252_115 #x0000000000000000))
(assert (= temp10252_116 #x0000000000000001))
(assert (= temp10252_117 temp10252_116))
(assert (= temp10252_118 (select ARGNAME_stride_NAMEEND_VAL temp10252_117)))
(assert (= temp10252_119 #x0000000000000000))
(assert (= temp10252_120 #x0000000000000002))
(assert (= temp10252_121 temp10252_120))
(assert (= temp10252_122 (select ARGNAME_stride_NAMEEND_VAL temp10252_121)))
(assert (= temp10252_123 #x0000000000000000))
(assert (= temp10252_124 #x0000000000000003))
(assert (= temp10252_125 temp10252_124))
(assert (= temp10252_126 (select ARGNAME_stride_NAMEEND_VAL temp10252_125)))
(assert (= temp10252_127 #x0000000000000000))
(assert (= temp10252_128 #x0000000000000004))
(assert (= temp10252_129 temp10252_128))
(assert (= temp10252_130 (select ARGNAME_stride_NAMEEND_VAL temp10252_129)))
(assert (= temp10252_131 #x0000000000000000))
(assert (= temp10252_132 #x0000000000000005))
(assert (= temp10252_133 temp10252_132))
(assert (= temp10252_134 (select ARGNAME_stride_NAMEEND_VAL temp10252_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10252_114 temp10252_111)
             (bvsle temp10252_118 temp10252_115)
             (bvsle temp10252_122 temp10252_119)
             (bvsle temp10252_126 temp10252_123)
             (bvsle temp10252_130 temp10252_127)
             (bvsle temp10252_134 temp10252_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10252_135 #x0000000000000000))
(assert (= var1191735 temp10252_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10252_136 #x0000000000000001))
(assert (= var1191747 temp10252_136))
(assert (= temp10252_137 #x0000000000000000))
(assert (= var1179826 temp10252_137))
(assert (= temp10252_138 #x0000000000000000))
(assert (= temp10252_139 temp10252_138))
(assert (= temp10252_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10252_139)))
(assert (= temp10252_141 #x0000000000000001))
(assert (= temp10252_142 temp10252_141))
(assert (= temp10252_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10252_142)))
(assert (= temp10252_144 #x0000000000000002))
(assert (= temp10252_145 temp10252_144))
(assert (= temp10252_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10252_145)))
(assert (= temp10252_147 #x0000000000000003))
(assert (= temp10252_148 temp10252_147))
(assert (= temp10252_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10252_148)))
(assert (= temp10252_150 #x0000000000000004))
(assert (= temp10252_151 temp10252_150))
(assert (= temp10252_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10252_151)))
(assert (= temp10252_153 #x0000000000000005))
(assert (= temp10252_154 temp10252_153))
(assert (= temp10252_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10252_154)))
(assert (= temp10252_157 var1179826))
(assert (= temp10252_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10252_157)))
(assert (= temp10252_156 temp10252_158))
(assert (= var1191780
   (ite (bvslt temp10252_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10252_159 #x0000000000000000))
(assert (= var1191780 temp10252_159))
(assert (= temp10252_160 #x0000000000000000))
(assert (= var1179826 temp10252_160))
(assert (= temp10252_162 var1179826))
(assert (= temp10252_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10252_162)))
(assert (= temp10252_161 temp10252_163))
(assert (= var1191802 (bvsmod temp10252_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10252_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10252_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10252_165 #x0000000000000001))
(assert (= var1191803 temp10252_165))
(assert (= temp10252_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10252_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10252_167 #x0000000000000001))
(assert (= var1191823 temp10252_167))
(assert (= temp10252_168 #x0000000000000001))
(assert (= var1180714 temp10252_168))
(assert (= temp10252_169 #x0000000000000000))
(assert (= temp10252_170 temp10252_169))
(assert (= temp10252_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10252_170)))
(assert (= temp10252_172 #x0000000000000001))
(assert (= temp10252_173 temp10252_172))
(assert (= temp10252_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10252_173)))
(assert (= temp10252_175 #x0000000000000002))
(assert (= temp10252_176 temp10252_175))
(assert (= temp10252_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10252_176)))
(assert (= temp10252_178 #x0000000000000003))
(assert (= temp10252_179 temp10252_178))
(assert (= temp10252_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10252_179)))
(assert (= temp10252_181 #x0000000000000004))
(assert (= temp10252_182 temp10252_181))
(assert (= temp10252_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10252_182)))
(assert (= temp10252_184 #x0000000000000005))
(assert (= temp10252_185 temp10252_184))
(assert (= temp10252_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10252_185)))
(assert (= temp10252_187 #x0000000000000000))
(assert (= temp10252_188
   (ite (bvslt var1180714 temp10252_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10252_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10252_188)))
(assert (= var1191831 temp10252_189))
(assert (bvslt (ite (bvslt var1180714 temp10252_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10252_190 #x0000000000000001))
(assert (= var1180714 temp10252_190))
(assert (= temp10252_192 var1180714))
(assert (= temp10252_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10252_192)))
(assert (= temp10252_191 temp10252_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10252_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10252_194 #x0000000000000001))
(assert (= var1191836 temp10252_194))
(assert (= temp10252_195 #x0000000000000000))
(assert (= var1179826 temp10252_195))
(assert (= temp10252_197 var1179826))
(assert (= temp10252_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10252_197)))
(assert (= temp10252_196 temp10252_198))
(assert (= temp10252_199 #x0000000000000002))
(assert (= var1586025 temp10252_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10252_200 #x0000000000000001))
(assert (= var1191993 temp10252_200))
(assert (= temp10252_201 #x0000000000000001))
(assert (= var2700303 temp10252_201))
(assert (= temp10252_202 #x0000000000000001))
(assert (= var2962447 temp10252_202))
(assert (= temp10252_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10252_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10252_204 #x0000000000000001))
(assert (= var211058 temp10252_204))
(assert (= temp10252_205 #x0000000000000001))
(assert (= var211188 temp10252_205))
(assert (= var3879401 var211188))
(assert (= temp10252_206 #x0000000000000000))
(assert (= var3866802 temp10252_206))
(assert (= temp10252_207 #x0000000000000000))
(assert (= temp10252_208
   (ite (bvslt var3866802 temp10252_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10252_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10252_208)))
(assert (= var3879420 temp10252_209))
(assert (bvslt (ite (bvslt var3866802 temp10252_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10252_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10252_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10252_211 #x0000000000000000))
(assert (= var3879421 temp10252_211))
(assert (= temp10252_212 #x0000000000000001))
(assert (= var3867690 temp10252_212))
(assert (= temp10252_213 #x0000000000000000))
(assert (= temp10252_214
   (ite (bvslt var3867690 temp10252_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10252_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10252_214)))
(assert (= var3879423 temp10252_215))
(assert (bvslt (ite (bvslt var3867690 temp10252_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10252_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10252_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10252_217 #x0000000000000001))
(assert (= var3879424 temp10252_217))
(assert (= temp10252_218 #x0000000000000000))
(assert (= var4079423 temp10252_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10252_219 #x0000000000000002))
(assert (= var4208259 temp10252_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10252_220 #x0000000000000000))
(assert (= var4273820 temp10252_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4862352 var211201))
(assert (= var5124496 var211201))
(assert (= temp10252_221 #x0000000000000001))
(assert (= var211058 temp10252_221))
(assert (= temp10252_222 #x0000000000000000))
(assert (= var6763284 temp10252_222))
(assert (= var6763251 var6763284))
(assert (= var6631815 var6763251))
(assert (= var6631811 var6631815))
(assert (= var212669 var6631811))
(assert (= temp10252_223 #x0000000000000000))
(assert (= var212669 temp10252_223))
(model-add temp10252_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10252_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10252_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10252_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





