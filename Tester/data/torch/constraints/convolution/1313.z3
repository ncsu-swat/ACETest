(declare-fun temp10481_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10481_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10481_3 () (_ BitVec 64))
(declare-fun temp10481_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10481_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10481_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10481_7 () (_ BitVec 64))
(declare-fun temp10481_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10481_9 () (_ BitVec 64))
(declare-fun temp10481_10 () (_ BitVec 64))
(declare-fun temp10481_11 () (_ BitVec 64))
(declare-fun temp10481_12 () (_ BitVec 64))
(declare-fun temp10481_13 () (_ BitVec 64))
(declare-fun temp10481_14 () (_ BitVec 64))
(declare-fun temp10481_15 () (_ BitVec 64))
(declare-fun temp10481_16 () (_ BitVec 64))
(declare-fun temp10481_17 () (_ BitVec 64))
(declare-fun temp10481_18 () (_ BitVec 64))
(declare-fun temp10481_19 () (_ BitVec 64))
(declare-fun temp10481_20 () (_ BitVec 64))
(declare-fun temp10481_21 () (_ BitVec 64))
(declare-fun temp10481_22 () (_ BitVec 64))
(declare-fun temp10481_23 () (_ BitVec 64))
(declare-fun temp10481_24 () (_ BitVec 64))
(declare-fun temp10481_25 () (_ BitVec 64))
(declare-fun temp10481_26 () (_ BitVec 64))
(declare-fun temp10481_27 () (_ BitVec 64))
(declare-fun temp10481_28 () (_ BitVec 64))
(declare-fun temp10481_29 () (_ BitVec 64))
(declare-fun temp10481_30 () (_ BitVec 64))
(declare-fun temp10481_31 () (_ BitVec 64))
(declare-fun temp10481_32 () (_ BitVec 64))
(declare-fun temp10481_33 () (_ BitVec 64))
(declare-fun temp10481_34 () (_ BitVec 64))
(declare-fun temp10481_35 () (_ BitVec 64))
(declare-fun temp10481_36 () (_ BitVec 64))
(declare-fun temp10481_37 () (_ BitVec 64))
(declare-fun temp10481_38 () (_ BitVec 64))
(declare-fun temp10481_39 () (_ BitVec 64))
(declare-fun temp10481_40 () (_ BitVec 64))
(declare-fun temp10481_41 () (_ BitVec 64))
(declare-fun temp10481_42 () (_ BitVec 64))
(declare-fun temp10481_43 () (_ BitVec 64))
(declare-fun temp10481_44 () (_ BitVec 64))
(declare-fun temp10481_45 () (_ BitVec 64))
(declare-fun temp10481_46 () (_ BitVec 64))
(declare-fun temp10481_47 () (_ BitVec 64))
(declare-fun temp10481_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10481_49 () (_ BitVec 64))
(declare-fun temp10481_50 () (_ BitVec 64))
(declare-fun temp10481_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10481_52 () (_ BitVec 64))
(declare-fun temp10481_53 () (_ BitVec 64))
(declare-fun temp10481_54 () (_ BitVec 64))
(declare-fun temp10481_55 () (_ BitVec 64))
(declare-fun temp10481_56 () (_ BitVec 64))
(declare-fun temp10481_57 () (_ BitVec 64))
(declare-fun temp10481_58 () (_ BitVec 64))
(declare-fun temp10481_59 () (_ BitVec 64))
(declare-fun temp10481_60 () (_ BitVec 64))
(declare-fun temp10481_61 () (_ BitVec 64))
(declare-fun temp10481_62 () (_ BitVec 64))
(declare-fun temp10481_63 () (_ BitVec 64))
(declare-fun temp10481_64 () (_ BitVec 64))
(declare-fun temp10481_65 () (_ BitVec 64))
(declare-fun temp10481_66 () (_ BitVec 64))
(declare-fun temp10481_67 () (_ BitVec 64))
(declare-fun temp10481_68 () (_ BitVec 64))
(declare-fun temp10481_69 () (_ BitVec 64))
(declare-fun temp10481_70 () (_ BitVec 64))
(declare-fun temp10481_71 () (_ BitVec 64))
(declare-fun temp10481_72 () (_ BitVec 64))
(declare-fun temp10481_73 () (_ BitVec 64))
(declare-fun temp10481_74 () (_ BitVec 64))
(declare-fun temp10481_75 () (_ BitVec 64))
(declare-fun temp10481_76 () (_ BitVec 64))
(declare-fun temp10481_77 () (_ BitVec 64))
(declare-fun temp10481_78 () (_ BitVec 64))
(declare-fun temp10481_79 () (_ BitVec 64))
(declare-fun temp10481_80 () (_ BitVec 64))
(declare-fun temp10481_81 () (_ BitVec 64))
(declare-fun temp10481_82 () (_ BitVec 64))
(declare-fun temp10481_83 () (_ BitVec 64))
(declare-fun temp10481_84 () (_ BitVec 64))
(declare-fun temp10481_85 () (_ BitVec 64))
(declare-fun temp10481_86 () (_ BitVec 64))
(declare-fun temp10481_87 () (_ BitVec 64))
(declare-fun temp10481_88 () (_ BitVec 64))
(declare-fun temp10481_89 () (_ BitVec 64))
(declare-fun temp10481_90 () (_ BitVec 64))
(declare-fun temp10481_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10481_92 () (_ BitVec 64))
(declare-fun temp10481_93 () (_ BitVec 64))
(declare-fun temp10481_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10481_95 () (_ BitVec 64))
(declare-fun temp10481_96 () (_ BitVec 64))
(declare-fun temp10481_97 () (_ BitVec 64))
(declare-fun temp10481_98 () (_ BitVec 64))
(declare-fun temp10481_99 () (_ BitVec 64))
(declare-fun temp10481_100 () (_ BitVec 64))
(declare-fun temp10481_101 () (_ BitVec 64))
(declare-fun temp10481_102 () (_ BitVec 64))
(declare-fun temp10481_103 () (_ BitVec 64))
(declare-fun temp10481_104 () (_ BitVec 64))
(declare-fun temp10481_105 () (_ BitVec 64))
(declare-fun temp10481_106 () (_ BitVec 64))
(declare-fun temp10481_107 () (_ BitVec 64))
(declare-fun temp10481_108 () (_ BitVec 64))
(declare-fun temp10481_109 () (_ BitVec 64))
(declare-fun temp10481_110 () (_ BitVec 64))
(declare-fun temp10481_111 () (_ BitVec 64))
(declare-fun temp10481_112 () (_ BitVec 64))
(declare-fun temp10481_113 () (_ BitVec 64))
(declare-fun temp10481_114 () (_ BitVec 64))
(declare-fun temp10481_115 () (_ BitVec 64))
(declare-fun temp10481_116 () (_ BitVec 64))
(declare-fun temp10481_117 () (_ BitVec 64))
(declare-fun temp10481_118 () (_ BitVec 64))
(declare-fun temp10481_119 () (_ BitVec 64))
(declare-fun temp10481_120 () (_ BitVec 64))
(declare-fun temp10481_121 () (_ BitVec 64))
(declare-fun temp10481_122 () (_ BitVec 64))
(declare-fun temp10481_123 () (_ BitVec 64))
(declare-fun temp10481_124 () (_ BitVec 64))
(declare-fun temp10481_125 () (_ BitVec 64))
(declare-fun temp10481_126 () (_ BitVec 64))
(declare-fun temp10481_127 () (_ BitVec 64))
(declare-fun temp10481_128 () (_ BitVec 64))
(declare-fun temp10481_129 () (_ BitVec 64))
(declare-fun temp10481_130 () (_ BitVec 64))
(declare-fun temp10481_131 () (_ BitVec 64))
(declare-fun temp10481_132 () (_ BitVec 64))
(declare-fun temp10481_133 () (_ BitVec 64))
(declare-fun temp10481_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10481_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10481_136 () (_ BitVec 64))
(declare-fun temp10481_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10481_138 () (_ BitVec 64))
(declare-fun temp10481_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10481_140 () (_ BitVec 64))
(declare-fun temp10481_141 () (_ BitVec 64))
(declare-fun temp10481_142 () (_ BitVec 64))
(declare-fun temp10481_143 () (_ BitVec 64))
(declare-fun temp10481_144 () (_ BitVec 64))
(declare-fun temp10481_145 () (_ BitVec 64))
(declare-fun temp10481_146 () (_ BitVec 64))
(declare-fun temp10481_147 () (_ BitVec 64))
(declare-fun temp10481_148 () (_ BitVec 64))
(declare-fun temp10481_149 () (_ BitVec 64))
(declare-fun temp10481_150 () (_ BitVec 64))
(declare-fun temp10481_151 () (_ BitVec 64))
(declare-fun temp10481_152 () (_ BitVec 64))
(declare-fun temp10481_153 () (_ BitVec 64))
(declare-fun temp10481_154 () (_ BitVec 64))
(declare-fun temp10481_155 () (_ BitVec 64))
(declare-fun temp10481_157 () (_ BitVec 64))
(declare-fun temp10481_158 () (_ BitVec 64))
(declare-fun temp10481_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10481_159 () (_ BitVec 64))
(declare-fun temp10481_160 () (_ BitVec 64))
(declare-fun temp10481_162 () (_ BitVec 64))
(declare-fun temp10481_163 () (_ BitVec 64))
(declare-fun temp10481_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10481_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10481_165 () (_ BitVec 64))
(declare-fun temp10481_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10481_167 () (_ BitVec 64))
(declare-fun temp10481_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10481_169 () (_ BitVec 64))
(declare-fun temp10481_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10481_171 () (_ BitVec 64))
(declare-fun temp10481_172 () (_ BitVec 64))
(declare-fun temp10481_173 () (_ BitVec 64))
(declare-fun temp10481_174 () (_ BitVec 64))
(declare-fun temp10481_175 () (_ BitVec 64))
(declare-fun temp10481_176 () (_ BitVec 64))
(declare-fun temp10481_177 () (_ BitVec 64))
(declare-fun temp10481_178 () (_ BitVec 64))
(declare-fun temp10481_179 () (_ BitVec 64))
(declare-fun temp10481_180 () (_ BitVec 64))
(declare-fun temp10481_181 () (_ BitVec 64))
(declare-fun temp10481_182 () (_ BitVec 64))
(declare-fun temp10481_183 () (_ BitVec 64))
(declare-fun temp10481_184 () (_ BitVec 64))
(declare-fun temp10481_185 () (_ BitVec 64))
(declare-fun temp10481_186 () (_ BitVec 64))
(declare-fun temp10481_187 () (_ BitVec 64))
(declare-fun temp10481_188 () (_ BitVec 64))
(declare-fun temp10481_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10481_190 () (_ BitVec 64))
(declare-fun temp10481_192 () (_ BitVec 64))
(declare-fun temp10481_193 () (_ BitVec 64))
(declare-fun temp10481_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10481_194 () (_ BitVec 64))
(declare-fun temp10481_195 () (_ BitVec 64))
(declare-fun temp10481_197 () (_ BitVec 64))
(declare-fun temp10481_198 () (_ BitVec 64))
(declare-fun temp10481_196 () (_ BitVec 64))
(declare-fun temp10481_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10481_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10481_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10481_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10481_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10481_204 () (_ BitVec 64))
(declare-fun temp10481_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10481_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10481_207 () (_ BitVec 64))
(declare-fun temp10481_208 () (_ BitVec 64))
(declare-fun temp10481_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10481_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10481_211 () (_ BitVec 64))
(declare-fun temp10481_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10481_213 () (_ BitVec 64))
(declare-fun temp10481_214 () (_ BitVec 64))
(declare-fun temp10481_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10481_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10481_217 () (_ BitVec 64))
(declare-fun temp10481_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10481_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10481_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4469136 () (_ BitVec 64))
(declare-fun var4731280 () (_ BitVec 64))
(declare-fun temp10481_221 () (_ BitVec 64))
(declare-fun var212414 () (_ BitVec 64))
(declare-fun temp10481_222 () (_ BitVec 64))
(declare-fun temp10481_223 () (_ BitVec 64))
(declare-fun var5060227 () (_ BitVec 64))
(declare-fun var5125772 () (_ BitVec 64))
(declare-fun temp10481_224 () (_ BitVec 64))
(assert (= temp10481_1 #x0000000000000001))
(assert (= var77203 temp10481_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10481_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10481_2)))
(assert (= temp10481_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10481_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10481_4 #x0000000000000000))
(assert (= var210941 temp10481_4))
(assert (= temp10481_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10481_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10481_6 #x0000000000000000))
(assert (= var210986 temp10481_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10481_7 #x0000000000000000))
(assert (= temp10481_8 temp10481_7))
(assert (= temp10481_9 (select ARGNAME_padding_NAMEEND_VAL temp10481_8)))
(assert (= temp10481_10 #x0000000000000001))
(assert (= temp10481_11 temp10481_10))
(assert (= temp10481_12 (select ARGNAME_padding_NAMEEND_VAL temp10481_11)))
(assert (= temp10481_13 #x0000000000000002))
(assert (= temp10481_14 temp10481_13))
(assert (= temp10481_15 (select ARGNAME_padding_NAMEEND_VAL temp10481_14)))
(assert (= temp10481_16 #x0000000000000003))
(assert (= temp10481_17 temp10481_16))
(assert (= temp10481_18 (select ARGNAME_padding_NAMEEND_VAL temp10481_17)))
(assert (= temp10481_19 #x0000000000000004))
(assert (= temp10481_20 temp10481_19))
(assert (= temp10481_21 (select ARGNAME_padding_NAMEEND_VAL temp10481_20)))
(assert (= temp10481_22 #x0000000000000005))
(assert (= temp10481_23 temp10481_22))
(assert (= temp10481_24 (select ARGNAME_padding_NAMEEND_VAL temp10481_23)))
(assert (= temp10481_25 #x0000000000000000))
(assert (= temp10481_26 #x0000000000000000))
(assert (= temp10481_27 temp10481_26))
(assert (= temp10481_28 (select ARGNAME_padding_NAMEEND_VAL temp10481_27)))
(assert (= temp10481_29 #x0000000000000000))
(assert (= temp10481_30 #x0000000000000001))
(assert (= temp10481_31 temp10481_30))
(assert (= temp10481_32 (select ARGNAME_padding_NAMEEND_VAL temp10481_31)))
(assert (= temp10481_33 #x0000000000000000))
(assert (= temp10481_34 #x0000000000000002))
(assert (= temp10481_35 temp10481_34))
(assert (= temp10481_36 (select ARGNAME_padding_NAMEEND_VAL temp10481_35)))
(assert (= temp10481_37 #x0000000000000000))
(assert (= temp10481_38 #x0000000000000003))
(assert (= temp10481_39 temp10481_38))
(assert (= temp10481_40 (select ARGNAME_padding_NAMEEND_VAL temp10481_39)))
(assert (= temp10481_41 #x0000000000000000))
(assert (= temp10481_42 #x0000000000000004))
(assert (= temp10481_43 temp10481_42))
(assert (= temp10481_44 (select ARGNAME_padding_NAMEEND_VAL temp10481_43)))
(assert (= temp10481_45 #x0000000000000000))
(assert (= temp10481_46 #x0000000000000005))
(assert (= temp10481_47 temp10481_46))
(assert (= temp10481_48 (select ARGNAME_padding_NAMEEND_VAL temp10481_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10481_28 temp10481_25)
             (bvslt temp10481_32 temp10481_29)
             (bvslt temp10481_36 temp10481_33)
             (bvslt temp10481_40 temp10481_37)
             (bvslt temp10481_44 temp10481_41)
             (bvslt temp10481_48 temp10481_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10481_49 #x0000000000000000))
(assert (= var1191714 temp10481_49))
(assert (= temp10481_50 #x0000000000000000))
(assert (= temp10481_51 temp10481_50))
(assert (= temp10481_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10481_51)))
(assert (= temp10481_53 #x0000000000000001))
(assert (= temp10481_54 temp10481_53))
(assert (= temp10481_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10481_54)))
(assert (= temp10481_56 #x0000000000000002))
(assert (= temp10481_57 temp10481_56))
(assert (= temp10481_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10481_57)))
(assert (= temp10481_59 #x0000000000000003))
(assert (= temp10481_60 temp10481_59))
(assert (= temp10481_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10481_60)))
(assert (= temp10481_62 #x0000000000000004))
(assert (= temp10481_63 temp10481_62))
(assert (= temp10481_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10481_63)))
(assert (= temp10481_65 #x0000000000000005))
(assert (= temp10481_66 temp10481_65))
(assert (= temp10481_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10481_66)))
(assert (= temp10481_68 #x0000000000000000))
(assert (= temp10481_69 #x0000000000000000))
(assert (= temp10481_70 temp10481_69))
(assert (= temp10481_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10481_70)))
(assert (= temp10481_72 #x0000000000000000))
(assert (= temp10481_73 #x0000000000000001))
(assert (= temp10481_74 temp10481_73))
(assert (= temp10481_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10481_74)))
(assert (= temp10481_76 #x0000000000000000))
(assert (= temp10481_77 #x0000000000000002))
(assert (= temp10481_78 temp10481_77))
(assert (= temp10481_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10481_78)))
(assert (= temp10481_80 #x0000000000000000))
(assert (= temp10481_81 #x0000000000000003))
(assert (= temp10481_82 temp10481_81))
(assert (= temp10481_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10481_82)))
(assert (= temp10481_84 #x0000000000000000))
(assert (= temp10481_85 #x0000000000000004))
(assert (= temp10481_86 temp10481_85))
(assert (= temp10481_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10481_86)))
(assert (= temp10481_88 #x0000000000000000))
(assert (= temp10481_89 #x0000000000000005))
(assert (= temp10481_90 temp10481_89))
(assert (= temp10481_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10481_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10481_71 temp10481_68)
             (bvslt temp10481_75 temp10481_72)
             (bvslt temp10481_79 temp10481_76)
             (bvslt temp10481_83 temp10481_80)
             (bvslt temp10481_87 temp10481_84)
             (bvslt temp10481_91 temp10481_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10481_92 #x0000000000000000))
(assert (= var1191725 temp10481_92))
(assert (= temp10481_93 #x0000000000000000))
(assert (= temp10481_94 temp10481_93))
(assert (= temp10481_95 (select ARGNAME_stride_NAMEEND_VAL temp10481_94)))
(assert (= temp10481_96 #x0000000000000001))
(assert (= temp10481_97 temp10481_96))
(assert (= temp10481_98 (select ARGNAME_stride_NAMEEND_VAL temp10481_97)))
(assert (= temp10481_99 #x0000000000000002))
(assert (= temp10481_100 temp10481_99))
(assert (= temp10481_101 (select ARGNAME_stride_NAMEEND_VAL temp10481_100)))
(assert (= temp10481_102 #x0000000000000003))
(assert (= temp10481_103 temp10481_102))
(assert (= temp10481_104 (select ARGNAME_stride_NAMEEND_VAL temp10481_103)))
(assert (= temp10481_105 #x0000000000000004))
(assert (= temp10481_106 temp10481_105))
(assert (= temp10481_107 (select ARGNAME_stride_NAMEEND_VAL temp10481_106)))
(assert (= temp10481_108 #x0000000000000005))
(assert (= temp10481_109 temp10481_108))
(assert (= temp10481_110 (select ARGNAME_stride_NAMEEND_VAL temp10481_109)))
(assert (= temp10481_111 #x0000000000000000))
(assert (= temp10481_112 #x0000000000000000))
(assert (= temp10481_113 temp10481_112))
(assert (= temp10481_114 (select ARGNAME_stride_NAMEEND_VAL temp10481_113)))
(assert (= temp10481_115 #x0000000000000000))
(assert (= temp10481_116 #x0000000000000001))
(assert (= temp10481_117 temp10481_116))
(assert (= temp10481_118 (select ARGNAME_stride_NAMEEND_VAL temp10481_117)))
(assert (= temp10481_119 #x0000000000000000))
(assert (= temp10481_120 #x0000000000000002))
(assert (= temp10481_121 temp10481_120))
(assert (= temp10481_122 (select ARGNAME_stride_NAMEEND_VAL temp10481_121)))
(assert (= temp10481_123 #x0000000000000000))
(assert (= temp10481_124 #x0000000000000003))
(assert (= temp10481_125 temp10481_124))
(assert (= temp10481_126 (select ARGNAME_stride_NAMEEND_VAL temp10481_125)))
(assert (= temp10481_127 #x0000000000000000))
(assert (= temp10481_128 #x0000000000000004))
(assert (= temp10481_129 temp10481_128))
(assert (= temp10481_130 (select ARGNAME_stride_NAMEEND_VAL temp10481_129)))
(assert (= temp10481_131 #x0000000000000000))
(assert (= temp10481_132 #x0000000000000005))
(assert (= temp10481_133 temp10481_132))
(assert (= temp10481_134 (select ARGNAME_stride_NAMEEND_VAL temp10481_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10481_114 temp10481_111)
             (bvsle temp10481_118 temp10481_115)
             (bvsle temp10481_122 temp10481_119)
             (bvsle temp10481_126 temp10481_123)
             (bvsle temp10481_130 temp10481_127)
             (bvsle temp10481_134 temp10481_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10481_135 #x0000000000000000))
(assert (= var1191735 temp10481_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10481_136 #x0000000000000001))
(assert (= var1191747 temp10481_136))
(assert (= temp10481_137 #x0000000000000000))
(assert (= var1179826 temp10481_137))
(assert (= temp10481_138 #x0000000000000000))
(assert (= temp10481_139 temp10481_138))
(assert (= temp10481_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10481_139)))
(assert (= temp10481_141 #x0000000000000001))
(assert (= temp10481_142 temp10481_141))
(assert (= temp10481_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10481_142)))
(assert (= temp10481_144 #x0000000000000002))
(assert (= temp10481_145 temp10481_144))
(assert (= temp10481_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10481_145)))
(assert (= temp10481_147 #x0000000000000003))
(assert (= temp10481_148 temp10481_147))
(assert (= temp10481_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10481_148)))
(assert (= temp10481_150 #x0000000000000004))
(assert (= temp10481_151 temp10481_150))
(assert (= temp10481_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10481_151)))
(assert (= temp10481_153 #x0000000000000005))
(assert (= temp10481_154 temp10481_153))
(assert (= temp10481_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10481_154)))
(assert (= temp10481_157 var1179826))
(assert (= temp10481_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10481_157)))
(assert (= temp10481_156 temp10481_158))
(assert (= var1191780
   (ite (bvslt temp10481_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10481_159 #x0000000000000000))
(assert (= var1191780 temp10481_159))
(assert (= temp10481_160 #x0000000000000000))
(assert (= var1179826 temp10481_160))
(assert (= temp10481_162 var1179826))
(assert (= temp10481_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10481_162)))
(assert (= temp10481_161 temp10481_163))
(assert (= var1191802 (bvsmod temp10481_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10481_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10481_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10481_165 #x0000000000000001))
(assert (= var1191803 temp10481_165))
(assert (= temp10481_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10481_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10481_167 #x0000000000000001))
(assert (= var1191823 temp10481_167))
(assert (= temp10481_168 #x0000000000000001))
(assert (= var1180714 temp10481_168))
(assert (= temp10481_169 #x0000000000000000))
(assert (= temp10481_170 temp10481_169))
(assert (= temp10481_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10481_170)))
(assert (= temp10481_172 #x0000000000000001))
(assert (= temp10481_173 temp10481_172))
(assert (= temp10481_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10481_173)))
(assert (= temp10481_175 #x0000000000000002))
(assert (= temp10481_176 temp10481_175))
(assert (= temp10481_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10481_176)))
(assert (= temp10481_178 #x0000000000000003))
(assert (= temp10481_179 temp10481_178))
(assert (= temp10481_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10481_179)))
(assert (= temp10481_181 #x0000000000000004))
(assert (= temp10481_182 temp10481_181))
(assert (= temp10481_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10481_182)))
(assert (= temp10481_184 #x0000000000000005))
(assert (= temp10481_185 temp10481_184))
(assert (= temp10481_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10481_185)))
(assert (= temp10481_187 #x0000000000000000))
(assert (= temp10481_188
   (ite (bvslt var1180714 temp10481_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10481_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10481_188)))
(assert (= var1191831 temp10481_189))
(assert (bvslt (ite (bvslt var1180714 temp10481_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10481_190 #x0000000000000001))
(assert (= var1180714 temp10481_190))
(assert (= temp10481_192 var1180714))
(assert (= temp10481_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10481_192)))
(assert (= temp10481_191 temp10481_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10481_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10481_194 #x0000000000000001))
(assert (= var1191836 temp10481_194))
(assert (= temp10481_195 #x0000000000000000))
(assert (= var1179826 temp10481_195))
(assert (= temp10481_197 var1179826))
(assert (= temp10481_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10481_197)))
(assert (= temp10481_196 temp10481_198))
(assert (= temp10481_199 #x0000000000000002))
(assert (= var1586025 temp10481_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10481_200 #x0000000000000001))
(assert (= var1191993 temp10481_200))
(assert (= temp10481_201 #x0000000000000001))
(assert (= var2700303 temp10481_201))
(assert (= temp10481_202 #x0000000000000001))
(assert (= var2962447 temp10481_202))
(assert (= temp10481_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10481_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10481_204 #x0000000000000001))
(assert (= var211058 temp10481_204))
(assert (= temp10481_205 #x0000000000000001))
(assert (= var211188 temp10481_205))
(assert (= var3879401 var211188))
(assert (= temp10481_206 #x0000000000000000))
(assert (= var3866802 temp10481_206))
(assert (= temp10481_207 #x0000000000000000))
(assert (= temp10481_208
   (ite (bvslt var3866802 temp10481_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10481_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10481_208)))
(assert (= var3879420 temp10481_209))
(assert (bvslt (ite (bvslt var3866802 temp10481_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10481_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10481_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10481_211 #x0000000000000000))
(assert (= var3879421 temp10481_211))
(assert (= temp10481_212 #x0000000000000001))
(assert (= var3867690 temp10481_212))
(assert (= temp10481_213 #x0000000000000000))
(assert (= temp10481_214
   (ite (bvslt var3867690 temp10481_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10481_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10481_214)))
(assert (= var3879423 temp10481_215))
(assert (bvslt (ite (bvslt var3867690 temp10481_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10481_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10481_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10481_217 #x0000000000000001))
(assert (= var3879424 temp10481_217))
(assert (= temp10481_218 #x0000000000000000))
(assert (= var4079423 temp10481_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10481_219 #x0000000000000002))
(assert (= var4208259 temp10481_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10481_220 #x0000000000000000))
(assert (= var4273820 temp10481_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4469136 var211201))
(assert (= var4731280 var211201))
(assert (= temp10481_221 #x0000000000000001))
(assert (= var212414
   (ite (= ARGNAME_groups_NAMEEND temp10481_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10481_222 #x0000000000000000))
(assert (= var212414 temp10481_222))
(assert (= temp10481_223 #x0000000000000002))
(assert (= var5060227 temp10481_223))
(assert (= var5125772 var5060227))
(assert (= temp10481_224 #x0000000000000001))
(assert (= var211058 temp10481_224))
(model-add temp10481_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10481_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10481_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10481_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))



