(declare-fun temp11381_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp11381_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp11381_3 () (_ BitVec 64))
(declare-fun temp11381_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp11381_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp11381_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp11381_7 () (_ BitVec 64))
(declare-fun temp11381_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11381_9 () (_ BitVec 64))
(declare-fun temp11381_10 () (_ BitVec 64))
(declare-fun temp11381_11 () (_ BitVec 64))
(declare-fun temp11381_12 () (_ BitVec 64))
(declare-fun temp11381_13 () (_ BitVec 64))
(declare-fun temp11381_14 () (_ BitVec 64))
(declare-fun temp11381_15 () (_ BitVec 64))
(declare-fun temp11381_16 () (_ BitVec 64))
(declare-fun temp11381_17 () (_ BitVec 64))
(declare-fun temp11381_18 () (_ BitVec 64))
(declare-fun temp11381_19 () (_ BitVec 64))
(declare-fun temp11381_20 () (_ BitVec 64))
(declare-fun temp11381_21 () (_ BitVec 64))
(declare-fun temp11381_22 () (_ BitVec 64))
(declare-fun temp11381_23 () (_ BitVec 64))
(declare-fun temp11381_24 () (_ BitVec 64))
(declare-fun temp11381_25 () (_ BitVec 64))
(declare-fun temp11381_26 () (_ BitVec 64))
(declare-fun temp11381_27 () (_ BitVec 64))
(declare-fun temp11381_28 () (_ BitVec 64))
(declare-fun temp11381_29 () (_ BitVec 64))
(declare-fun temp11381_30 () (_ BitVec 64))
(declare-fun temp11381_31 () (_ BitVec 64))
(declare-fun temp11381_32 () (_ BitVec 64))
(declare-fun temp11381_33 () (_ BitVec 64))
(declare-fun temp11381_34 () (_ BitVec 64))
(declare-fun temp11381_35 () (_ BitVec 64))
(declare-fun temp11381_36 () (_ BitVec 64))
(declare-fun temp11381_37 () (_ BitVec 64))
(declare-fun temp11381_38 () (_ BitVec 64))
(declare-fun temp11381_39 () (_ BitVec 64))
(declare-fun temp11381_40 () (_ BitVec 64))
(declare-fun temp11381_41 () (_ BitVec 64))
(declare-fun temp11381_42 () (_ BitVec 64))
(declare-fun temp11381_43 () (_ BitVec 64))
(declare-fun temp11381_44 () (_ BitVec 64))
(declare-fun temp11381_45 () (_ BitVec 64))
(declare-fun temp11381_46 () (_ BitVec 64))
(declare-fun temp11381_47 () (_ BitVec 64))
(declare-fun temp11381_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp11381_49 () (_ BitVec 64))
(declare-fun temp11381_50 () (_ BitVec 64))
(declare-fun temp11381_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11381_52 () (_ BitVec 64))
(declare-fun temp11381_53 () (_ BitVec 64))
(declare-fun temp11381_54 () (_ BitVec 64))
(declare-fun temp11381_55 () (_ BitVec 64))
(declare-fun temp11381_56 () (_ BitVec 64))
(declare-fun temp11381_57 () (_ BitVec 64))
(declare-fun temp11381_58 () (_ BitVec 64))
(declare-fun temp11381_59 () (_ BitVec 64))
(declare-fun temp11381_60 () (_ BitVec 64))
(declare-fun temp11381_61 () (_ BitVec 64))
(declare-fun temp11381_62 () (_ BitVec 64))
(declare-fun temp11381_63 () (_ BitVec 64))
(declare-fun temp11381_64 () (_ BitVec 64))
(declare-fun temp11381_65 () (_ BitVec 64))
(declare-fun temp11381_66 () (_ BitVec 64))
(declare-fun temp11381_67 () (_ BitVec 64))
(declare-fun temp11381_68 () (_ BitVec 64))
(declare-fun temp11381_69 () (_ BitVec 64))
(declare-fun temp11381_70 () (_ BitVec 64))
(declare-fun temp11381_71 () (_ BitVec 64))
(declare-fun temp11381_72 () (_ BitVec 64))
(declare-fun temp11381_73 () (_ BitVec 64))
(declare-fun temp11381_74 () (_ BitVec 64))
(declare-fun temp11381_75 () (_ BitVec 64))
(declare-fun temp11381_76 () (_ BitVec 64))
(declare-fun temp11381_77 () (_ BitVec 64))
(declare-fun temp11381_78 () (_ BitVec 64))
(declare-fun temp11381_79 () (_ BitVec 64))
(declare-fun temp11381_80 () (_ BitVec 64))
(declare-fun temp11381_81 () (_ BitVec 64))
(declare-fun temp11381_82 () (_ BitVec 64))
(declare-fun temp11381_83 () (_ BitVec 64))
(declare-fun temp11381_84 () (_ BitVec 64))
(declare-fun temp11381_85 () (_ BitVec 64))
(declare-fun temp11381_86 () (_ BitVec 64))
(declare-fun temp11381_87 () (_ BitVec 64))
(declare-fun temp11381_88 () (_ BitVec 64))
(declare-fun temp11381_89 () (_ BitVec 64))
(declare-fun temp11381_90 () (_ BitVec 64))
(declare-fun temp11381_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp11381_92 () (_ BitVec 64))
(declare-fun temp11381_93 () (_ BitVec 64))
(declare-fun temp11381_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11381_95 () (_ BitVec 64))
(declare-fun temp11381_96 () (_ BitVec 64))
(declare-fun temp11381_97 () (_ BitVec 64))
(declare-fun temp11381_98 () (_ BitVec 64))
(declare-fun temp11381_99 () (_ BitVec 64))
(declare-fun temp11381_100 () (_ BitVec 64))
(declare-fun temp11381_101 () (_ BitVec 64))
(declare-fun temp11381_102 () (_ BitVec 64))
(declare-fun temp11381_103 () (_ BitVec 64))
(declare-fun temp11381_104 () (_ BitVec 64))
(declare-fun temp11381_105 () (_ BitVec 64))
(declare-fun temp11381_106 () (_ BitVec 64))
(declare-fun temp11381_107 () (_ BitVec 64))
(declare-fun temp11381_108 () (_ BitVec 64))
(declare-fun temp11381_109 () (_ BitVec 64))
(declare-fun temp11381_110 () (_ BitVec 64))
(declare-fun temp11381_111 () (_ BitVec 64))
(declare-fun temp11381_112 () (_ BitVec 64))
(declare-fun temp11381_113 () (_ BitVec 64))
(declare-fun temp11381_114 () (_ BitVec 64))
(declare-fun temp11381_115 () (_ BitVec 64))
(declare-fun temp11381_116 () (_ BitVec 64))
(declare-fun temp11381_117 () (_ BitVec 64))
(declare-fun temp11381_118 () (_ BitVec 64))
(declare-fun temp11381_119 () (_ BitVec 64))
(declare-fun temp11381_120 () (_ BitVec 64))
(declare-fun temp11381_121 () (_ BitVec 64))
(declare-fun temp11381_122 () (_ BitVec 64))
(declare-fun temp11381_123 () (_ BitVec 64))
(declare-fun temp11381_124 () (_ BitVec 64))
(declare-fun temp11381_125 () (_ BitVec 64))
(declare-fun temp11381_126 () (_ BitVec 64))
(declare-fun temp11381_127 () (_ BitVec 64))
(declare-fun temp11381_128 () (_ BitVec 64))
(declare-fun temp11381_129 () (_ BitVec 64))
(declare-fun temp11381_130 () (_ BitVec 64))
(declare-fun temp11381_131 () (_ BitVec 64))
(declare-fun temp11381_132 () (_ BitVec 64))
(declare-fun temp11381_133 () (_ BitVec 64))
(declare-fun temp11381_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp11381_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp11381_136 () (_ BitVec 64))
(declare-fun temp11381_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp11381_138 () (_ BitVec 64))
(declare-fun temp11381_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11381_140 () (_ BitVec 64))
(declare-fun temp11381_141 () (_ BitVec 64))
(declare-fun temp11381_142 () (_ BitVec 64))
(declare-fun temp11381_143 () (_ BitVec 64))
(declare-fun temp11381_144 () (_ BitVec 64))
(declare-fun temp11381_145 () (_ BitVec 64))
(declare-fun temp11381_146 () (_ BitVec 64))
(declare-fun temp11381_147 () (_ BitVec 64))
(declare-fun temp11381_148 () (_ BitVec 64))
(declare-fun temp11381_149 () (_ BitVec 64))
(declare-fun temp11381_150 () (_ BitVec 64))
(declare-fun temp11381_151 () (_ BitVec 64))
(declare-fun temp11381_152 () (_ BitVec 64))
(declare-fun temp11381_153 () (_ BitVec 64))
(declare-fun temp11381_154 () (_ BitVec 64))
(declare-fun temp11381_155 () (_ BitVec 64))
(declare-fun temp11381_157 () (_ BitVec 64))
(declare-fun temp11381_158 () (_ BitVec 64))
(declare-fun temp11381_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp11381_159 () (_ BitVec 64))
(declare-fun temp11381_160 () (_ BitVec 64))
(declare-fun temp11381_162 () (_ BitVec 64))
(declare-fun temp11381_163 () (_ BitVec 64))
(declare-fun temp11381_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp11381_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp11381_165 () (_ BitVec 64))
(declare-fun temp11381_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp11381_167 () (_ BitVec 64))
(declare-fun temp11381_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp11381_169 () (_ BitVec 64))
(declare-fun temp11381_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11381_171 () (_ BitVec 64))
(declare-fun temp11381_172 () (_ BitVec 64))
(declare-fun temp11381_173 () (_ BitVec 64))
(declare-fun temp11381_174 () (_ BitVec 64))
(declare-fun temp11381_175 () (_ BitVec 64))
(declare-fun temp11381_176 () (_ BitVec 64))
(declare-fun temp11381_177 () (_ BitVec 64))
(declare-fun temp11381_178 () (_ BitVec 64))
(declare-fun temp11381_179 () (_ BitVec 64))
(declare-fun temp11381_180 () (_ BitVec 64))
(declare-fun temp11381_181 () (_ BitVec 64))
(declare-fun temp11381_182 () (_ BitVec 64))
(declare-fun temp11381_183 () (_ BitVec 64))
(declare-fun temp11381_184 () (_ BitVec 64))
(declare-fun temp11381_185 () (_ BitVec 64))
(declare-fun temp11381_186 () (_ BitVec 64))
(declare-fun temp11381_187 () (_ BitVec 64))
(declare-fun temp11381_188 () (_ BitVec 64))
(declare-fun temp11381_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp11381_190 () (_ BitVec 64))
(declare-fun temp11381_192 () (_ BitVec 64))
(declare-fun temp11381_193 () (_ BitVec 64))
(declare-fun temp11381_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp11381_194 () (_ BitVec 64))
(declare-fun temp11381_195 () (_ BitVec 64))
(declare-fun temp11381_197 () (_ BitVec 64))
(declare-fun temp11381_198 () (_ BitVec 64))
(declare-fun temp11381_196 () (_ BitVec 64))
(declare-fun temp11381_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp11381_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp11381_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp11381_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp11381_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp11381_204 () (_ BitVec 64))
(declare-fun temp11381_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp11381_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp11381_207 () (_ BitVec 64))
(declare-fun temp11381_208 () (_ BitVec 64))
(declare-fun temp11381_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp11381_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp11381_211 () (_ BitVec 64))
(declare-fun temp11381_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp11381_213 () (_ BitVec 64))
(declare-fun temp11381_214 () (_ BitVec 64))
(declare-fun temp11381_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp11381_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp11381_217 () (_ BitVec 64))
(declare-fun temp11381_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp11381_219 () (_ BitVec 64))
(declare-fun var4404867 () (_ BitVec 64))
(declare-fun var4404869 () (_ BitVec 64))
(declare-fun var4470412 () (_ BitVec 64))
(declare-fun var4470413 () (_ BitVec 64))
(declare-fun var4470426 () (_ BitVec 64))
(declare-fun var4470428 () (_ BitVec 64))
(declare-fun temp11381_220 () (_ BitVec 64))
(declare-fun var4470453 () (_ BitVec 64))
(declare-fun var4470455 () (_ BitVec 64))
(declare-fun var4591443 () (_ BitVec 64))
(declare-fun temp11381_221 () (_ BitVec 64))
(assert (= temp11381_1 #x0000000000000001))
(assert (= var77203 temp11381_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp11381_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp11381_2)))
(assert (= temp11381_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp11381_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11381_4 #x0000000000000000))
(assert (= var210941 temp11381_4))
(assert (= temp11381_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp11381_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11381_6 #x0000000000000000))
(assert (= var210986 temp11381_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp11381_7 #x0000000000000000))
(assert (= temp11381_8 temp11381_7))
(assert (= temp11381_9 (select ARGNAME_padding_NAMEEND_VAL temp11381_8)))
(assert (= temp11381_10 #x0000000000000001))
(assert (= temp11381_11 temp11381_10))
(assert (= temp11381_12 (select ARGNAME_padding_NAMEEND_VAL temp11381_11)))
(assert (= temp11381_13 #x0000000000000002))
(assert (= temp11381_14 temp11381_13))
(assert (= temp11381_15 (select ARGNAME_padding_NAMEEND_VAL temp11381_14)))
(assert (= temp11381_16 #x0000000000000003))
(assert (= temp11381_17 temp11381_16))
(assert (= temp11381_18 (select ARGNAME_padding_NAMEEND_VAL temp11381_17)))
(assert (= temp11381_19 #x0000000000000004))
(assert (= temp11381_20 temp11381_19))
(assert (= temp11381_21 (select ARGNAME_padding_NAMEEND_VAL temp11381_20)))
(assert (= temp11381_22 #x0000000000000005))
(assert (= temp11381_23 temp11381_22))
(assert (= temp11381_24 (select ARGNAME_padding_NAMEEND_VAL temp11381_23)))
(assert (= temp11381_25 #x0000000000000000))
(assert (= temp11381_26 #x0000000000000000))
(assert (= temp11381_27 temp11381_26))
(assert (= temp11381_28 (select ARGNAME_padding_NAMEEND_VAL temp11381_27)))
(assert (= temp11381_29 #x0000000000000000))
(assert (= temp11381_30 #x0000000000000001))
(assert (= temp11381_31 temp11381_30))
(assert (= temp11381_32 (select ARGNAME_padding_NAMEEND_VAL temp11381_31)))
(assert (= temp11381_33 #x0000000000000000))
(assert (= temp11381_34 #x0000000000000002))
(assert (= temp11381_35 temp11381_34))
(assert (= temp11381_36 (select ARGNAME_padding_NAMEEND_VAL temp11381_35)))
(assert (= temp11381_37 #x0000000000000000))
(assert (= temp11381_38 #x0000000000000003))
(assert (= temp11381_39 temp11381_38))
(assert (= temp11381_40 (select ARGNAME_padding_NAMEEND_VAL temp11381_39)))
(assert (= temp11381_41 #x0000000000000000))
(assert (= temp11381_42 #x0000000000000004))
(assert (= temp11381_43 temp11381_42))
(assert (= temp11381_44 (select ARGNAME_padding_NAMEEND_VAL temp11381_43)))
(assert (= temp11381_45 #x0000000000000000))
(assert (= temp11381_46 #x0000000000000005))
(assert (= temp11381_47 temp11381_46))
(assert (= temp11381_48 (select ARGNAME_padding_NAMEEND_VAL temp11381_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp11381_28 temp11381_25)
             (bvslt temp11381_32 temp11381_29)
             (bvslt temp11381_36 temp11381_33)
             (bvslt temp11381_40 temp11381_37)
             (bvslt temp11381_44 temp11381_41)
             (bvslt temp11381_48 temp11381_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11381_49 #x0000000000000000))
(assert (= var1191714 temp11381_49))
(assert (= temp11381_50 #x0000000000000000))
(assert (= temp11381_51 temp11381_50))
(assert (= temp11381_52 (select ARGNAME_output_padding_NAMEEND_VAL temp11381_51)))
(assert (= temp11381_53 #x0000000000000001))
(assert (= temp11381_54 temp11381_53))
(assert (= temp11381_55 (select ARGNAME_output_padding_NAMEEND_VAL temp11381_54)))
(assert (= temp11381_56 #x0000000000000002))
(assert (= temp11381_57 temp11381_56))
(assert (= temp11381_58 (select ARGNAME_output_padding_NAMEEND_VAL temp11381_57)))
(assert (= temp11381_59 #x0000000000000003))
(assert (= temp11381_60 temp11381_59))
(assert (= temp11381_61 (select ARGNAME_output_padding_NAMEEND_VAL temp11381_60)))
(assert (= temp11381_62 #x0000000000000004))
(assert (= temp11381_63 temp11381_62))
(assert (= temp11381_64 (select ARGNAME_output_padding_NAMEEND_VAL temp11381_63)))
(assert (= temp11381_65 #x0000000000000005))
(assert (= temp11381_66 temp11381_65))
(assert (= temp11381_67 (select ARGNAME_output_padding_NAMEEND_VAL temp11381_66)))
(assert (= temp11381_68 #x0000000000000000))
(assert (= temp11381_69 #x0000000000000000))
(assert (= temp11381_70 temp11381_69))
(assert (= temp11381_71 (select ARGNAME_output_padding_NAMEEND_VAL temp11381_70)))
(assert (= temp11381_72 #x0000000000000000))
(assert (= temp11381_73 #x0000000000000001))
(assert (= temp11381_74 temp11381_73))
(assert (= temp11381_75 (select ARGNAME_output_padding_NAMEEND_VAL temp11381_74)))
(assert (= temp11381_76 #x0000000000000000))
(assert (= temp11381_77 #x0000000000000002))
(assert (= temp11381_78 temp11381_77))
(assert (= temp11381_79 (select ARGNAME_output_padding_NAMEEND_VAL temp11381_78)))
(assert (= temp11381_80 #x0000000000000000))
(assert (= temp11381_81 #x0000000000000003))
(assert (= temp11381_82 temp11381_81))
(assert (= temp11381_83 (select ARGNAME_output_padding_NAMEEND_VAL temp11381_82)))
(assert (= temp11381_84 #x0000000000000000))
(assert (= temp11381_85 #x0000000000000004))
(assert (= temp11381_86 temp11381_85))
(assert (= temp11381_87 (select ARGNAME_output_padding_NAMEEND_VAL temp11381_86)))
(assert (= temp11381_88 #x0000000000000000))
(assert (= temp11381_89 #x0000000000000005))
(assert (= temp11381_90 temp11381_89))
(assert (= temp11381_91 (select ARGNAME_output_padding_NAMEEND_VAL temp11381_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp11381_71 temp11381_68)
             (bvslt temp11381_75 temp11381_72)
             (bvslt temp11381_79 temp11381_76)
             (bvslt temp11381_83 temp11381_80)
             (bvslt temp11381_87 temp11381_84)
             (bvslt temp11381_91 temp11381_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11381_92 #x0000000000000000))
(assert (= var1191725 temp11381_92))
(assert (= temp11381_93 #x0000000000000000))
(assert (= temp11381_94 temp11381_93))
(assert (= temp11381_95 (select ARGNAME_stride_NAMEEND_VAL temp11381_94)))
(assert (= temp11381_96 #x0000000000000001))
(assert (= temp11381_97 temp11381_96))
(assert (= temp11381_98 (select ARGNAME_stride_NAMEEND_VAL temp11381_97)))
(assert (= temp11381_99 #x0000000000000002))
(assert (= temp11381_100 temp11381_99))
(assert (= temp11381_101 (select ARGNAME_stride_NAMEEND_VAL temp11381_100)))
(assert (= temp11381_102 #x0000000000000003))
(assert (= temp11381_103 temp11381_102))
(assert (= temp11381_104 (select ARGNAME_stride_NAMEEND_VAL temp11381_103)))
(assert (= temp11381_105 #x0000000000000004))
(assert (= temp11381_106 temp11381_105))
(assert (= temp11381_107 (select ARGNAME_stride_NAMEEND_VAL temp11381_106)))
(assert (= temp11381_108 #x0000000000000005))
(assert (= temp11381_109 temp11381_108))
(assert (= temp11381_110 (select ARGNAME_stride_NAMEEND_VAL temp11381_109)))
(assert (= temp11381_111 #x0000000000000000))
(assert (= temp11381_112 #x0000000000000000))
(assert (= temp11381_113 temp11381_112))
(assert (= temp11381_114 (select ARGNAME_stride_NAMEEND_VAL temp11381_113)))
(assert (= temp11381_115 #x0000000000000000))
(assert (= temp11381_116 #x0000000000000001))
(assert (= temp11381_117 temp11381_116))
(assert (= temp11381_118 (select ARGNAME_stride_NAMEEND_VAL temp11381_117)))
(assert (= temp11381_119 #x0000000000000000))
(assert (= temp11381_120 #x0000000000000002))
(assert (= temp11381_121 temp11381_120))
(assert (= temp11381_122 (select ARGNAME_stride_NAMEEND_VAL temp11381_121)))
(assert (= temp11381_123 #x0000000000000000))
(assert (= temp11381_124 #x0000000000000003))
(assert (= temp11381_125 temp11381_124))
(assert (= temp11381_126 (select ARGNAME_stride_NAMEEND_VAL temp11381_125)))
(assert (= temp11381_127 #x0000000000000000))
(assert (= temp11381_128 #x0000000000000004))
(assert (= temp11381_129 temp11381_128))
(assert (= temp11381_130 (select ARGNAME_stride_NAMEEND_VAL temp11381_129)))
(assert (= temp11381_131 #x0000000000000000))
(assert (= temp11381_132 #x0000000000000005))
(assert (= temp11381_133 temp11381_132))
(assert (= temp11381_134 (select ARGNAME_stride_NAMEEND_VAL temp11381_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp11381_114 temp11381_111)
             (bvsle temp11381_118 temp11381_115)
             (bvsle temp11381_122 temp11381_119)
             (bvsle temp11381_126 temp11381_123)
             (bvsle temp11381_130 temp11381_127)
             (bvsle temp11381_134 temp11381_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11381_135 #x0000000000000000))
(assert (= var1191735 temp11381_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11381_136 #x0000000000000001))
(assert (= var1191747 temp11381_136))
(assert (= temp11381_137 #x0000000000000000))
(assert (= var1179826 temp11381_137))
(assert (= temp11381_138 #x0000000000000000))
(assert (= temp11381_139 temp11381_138))
(assert (= temp11381_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11381_139)))
(assert (= temp11381_141 #x0000000000000001))
(assert (= temp11381_142 temp11381_141))
(assert (= temp11381_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11381_142)))
(assert (= temp11381_144 #x0000000000000002))
(assert (= temp11381_145 temp11381_144))
(assert (= temp11381_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11381_145)))
(assert (= temp11381_147 #x0000000000000003))
(assert (= temp11381_148 temp11381_147))
(assert (= temp11381_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11381_148)))
(assert (= temp11381_150 #x0000000000000004))
(assert (= temp11381_151 temp11381_150))
(assert (= temp11381_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11381_151)))
(assert (= temp11381_153 #x0000000000000005))
(assert (= temp11381_154 temp11381_153))
(assert (= temp11381_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11381_154)))
(assert (= temp11381_157 var1179826))
(assert (= temp11381_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11381_157)))
(assert (= temp11381_156 temp11381_158))
(assert (= var1191780
   (ite (bvslt temp11381_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11381_159 #x0000000000000000))
(assert (= var1191780 temp11381_159))
(assert (= temp11381_160 #x0000000000000000))
(assert (= var1179826 temp11381_160))
(assert (= temp11381_162 var1179826))
(assert (= temp11381_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11381_162)))
(assert (= temp11381_161 temp11381_163))
(assert (= var1191802 (bvsmod temp11381_161 ARGNAME_groups_NAMEEND)))
(assert (= temp11381_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp11381_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp11381_165 #x0000000000000001))
(assert (= var1191803 temp11381_165))
(assert (= temp11381_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp11381_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11381_167 #x0000000000000001))
(assert (= var1191823 temp11381_167))
(assert (= temp11381_168 #x0000000000000001))
(assert (= var1180714 temp11381_168))
(assert (= temp11381_169 #x0000000000000000))
(assert (= temp11381_170 temp11381_169))
(assert (= temp11381_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp11381_170)))
(assert (= temp11381_172 #x0000000000000001))
(assert (= temp11381_173 temp11381_172))
(assert (= temp11381_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp11381_173)))
(assert (= temp11381_175 #x0000000000000002))
(assert (= temp11381_176 temp11381_175))
(assert (= temp11381_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp11381_176)))
(assert (= temp11381_178 #x0000000000000003))
(assert (= temp11381_179 temp11381_178))
(assert (= temp11381_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp11381_179)))
(assert (= temp11381_181 #x0000000000000004))
(assert (= temp11381_182 temp11381_181))
(assert (= temp11381_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp11381_182)))
(assert (= temp11381_184 #x0000000000000005))
(assert (= temp11381_185 temp11381_184))
(assert (= temp11381_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp11381_185)))
(assert (= temp11381_187 #x0000000000000000))
(assert (= temp11381_188
   (ite (bvslt var1180714 temp11381_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp11381_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp11381_188)))
(assert (= var1191831 temp11381_189))
(assert (bvslt (ite (bvslt var1180714 temp11381_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11381_190 #x0000000000000001))
(assert (= var1180714 temp11381_190))
(assert (= temp11381_192 var1180714))
(assert (= temp11381_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11381_192)))
(assert (= temp11381_191 temp11381_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp11381_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp11381_194 #x0000000000000001))
(assert (= var1191836 temp11381_194))
(assert (= temp11381_195 #x0000000000000000))
(assert (= var1179826 temp11381_195))
(assert (= temp11381_197 var1179826))
(assert (= temp11381_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11381_197)))
(assert (= temp11381_196 temp11381_198))
(assert (= temp11381_199 #x0000000000000002))
(assert (= var1586025 temp11381_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp11381_200 #x0000000000000001))
(assert (= var1191993 temp11381_200))
(assert (= temp11381_201 #x0000000000000001))
(assert (= var2700303 temp11381_201))
(assert (= temp11381_202 #x0000000000000001))
(assert (= var2962447 temp11381_202))
(assert (= temp11381_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp11381_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11381_204 #x0000000000000001))
(assert (= var211058 temp11381_204))
(assert (= temp11381_205 #x0000000000000001))
(assert (= var211188 temp11381_205))
(assert (= var3879401 var211188))
(assert (= temp11381_206 #x0000000000000000))
(assert (= var3866802 temp11381_206))
(assert (= temp11381_207 #x0000000000000000))
(assert (= temp11381_208
   (ite (bvslt var3866802 temp11381_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp11381_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp11381_208)))
(assert (= var3879420 temp11381_209))
(assert (bvslt (ite (bvslt var3866802 temp11381_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11381_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp11381_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp11381_211 #x0000000000000000))
(assert (= var3879421 temp11381_211))
(assert (= temp11381_212 #x0000000000000001))
(assert (= var3867690 temp11381_212))
(assert (= temp11381_213 #x0000000000000000))
(assert (= temp11381_214
   (ite (bvslt var3867690 temp11381_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp11381_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp11381_214)))
(assert (= var3879423 temp11381_215))
(assert (bvslt (ite (bvslt var3867690 temp11381_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11381_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp11381_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp11381_217 #x0000000000000001))
(assert (= var3879424 temp11381_217))
(assert (= temp11381_218 #x0000000000000000))
(assert (= var4133117 temp11381_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp11381_219 #x0000000000000002))
(assert (= var4404867 temp11381_219))
(assert (= var4404869 (bvsub ARGNAME_weight_NAMEEND_DIM var4404867)))
(assert (= var4470412 var4404867))
(assert (= var4470413 var4404869))
(assert (= var4470426 (bvadd var4470413 var4470412)))
(assert (= var4470428
   (ite (bvsgt var4470426 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11381_220 #x0000000000000000))
(assert (= var4470428 temp11381_220))
(assert (= var4470453 var4470412))
(assert (= var4470455 var4470413))
(assert (= var4591443 var4470455))
(assert (= temp11381_221 #x0000000000000001))
(assert (= var211058 temp11381_221))
(model-add temp11381_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp11381_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp11381_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp11381_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




