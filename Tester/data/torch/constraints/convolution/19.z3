(declare-fun temp25_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp25_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp25_3 () (_ BitVec 64))
(declare-fun temp25_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp25_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp25_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp25_7 () (_ BitVec 64))
(declare-fun temp25_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp25_9 () (_ BitVec 64))
(declare-fun temp25_10 () (_ BitVec 64))
(declare-fun temp25_11 () (_ BitVec 64))
(declare-fun temp25_12 () (_ BitVec 64))
(declare-fun temp25_13 () (_ BitVec 64))
(declare-fun temp25_14 () (_ BitVec 64))
(declare-fun temp25_15 () (_ BitVec 64))
(declare-fun temp25_16 () (_ BitVec 64))
(declare-fun temp25_17 () (_ BitVec 64))
(declare-fun temp25_18 () (_ BitVec 64))
(declare-fun temp25_19 () (_ BitVec 64))
(declare-fun temp25_20 () (_ BitVec 64))
(declare-fun temp25_21 () (_ BitVec 64))
(declare-fun temp25_22 () (_ BitVec 64))
(declare-fun temp25_23 () (_ BitVec 64))
(declare-fun temp25_24 () (_ BitVec 64))
(declare-fun temp25_25 () (_ BitVec 64))
(declare-fun temp25_26 () (_ BitVec 64))
(declare-fun temp25_27 () (_ BitVec 64))
(declare-fun temp25_28 () (_ BitVec 64))
(declare-fun temp25_29 () (_ BitVec 64))
(declare-fun temp25_30 () (_ BitVec 64))
(declare-fun temp25_31 () (_ BitVec 64))
(declare-fun temp25_32 () (_ BitVec 64))
(declare-fun temp25_33 () (_ BitVec 64))
(declare-fun temp25_34 () (_ BitVec 64))
(declare-fun temp25_35 () (_ BitVec 64))
(declare-fun temp25_36 () (_ BitVec 64))
(declare-fun temp25_37 () (_ BitVec 64))
(declare-fun temp25_38 () (_ BitVec 64))
(declare-fun temp25_39 () (_ BitVec 64))
(declare-fun temp25_40 () (_ BitVec 64))
(declare-fun temp25_41 () (_ BitVec 64))
(declare-fun temp25_42 () (_ BitVec 64))
(declare-fun temp25_43 () (_ BitVec 64))
(declare-fun temp25_44 () (_ BitVec 64))
(declare-fun temp25_45 () (_ BitVec 64))
(declare-fun temp25_46 () (_ BitVec 64))
(declare-fun temp25_47 () (_ BitVec 64))
(declare-fun temp25_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp25_49 () (_ BitVec 64))
(declare-fun temp25_50 () (_ BitVec 64))
(declare-fun temp25_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp25_52 () (_ BitVec 64))
(declare-fun temp25_53 () (_ BitVec 64))
(declare-fun temp25_54 () (_ BitVec 64))
(declare-fun temp25_55 () (_ BitVec 64))
(declare-fun temp25_56 () (_ BitVec 64))
(declare-fun temp25_57 () (_ BitVec 64))
(declare-fun temp25_58 () (_ BitVec 64))
(declare-fun temp25_59 () (_ BitVec 64))
(declare-fun temp25_60 () (_ BitVec 64))
(declare-fun temp25_61 () (_ BitVec 64))
(declare-fun temp25_62 () (_ BitVec 64))
(declare-fun temp25_63 () (_ BitVec 64))
(declare-fun temp25_64 () (_ BitVec 64))
(declare-fun temp25_65 () (_ BitVec 64))
(declare-fun temp25_66 () (_ BitVec 64))
(declare-fun temp25_67 () (_ BitVec 64))
(declare-fun temp25_68 () (_ BitVec 64))
(declare-fun temp25_69 () (_ BitVec 64))
(declare-fun temp25_70 () (_ BitVec 64))
(declare-fun temp25_71 () (_ BitVec 64))
(declare-fun temp25_72 () (_ BitVec 64))
(declare-fun temp25_73 () (_ BitVec 64))
(declare-fun temp25_74 () (_ BitVec 64))
(declare-fun temp25_75 () (_ BitVec 64))
(declare-fun temp25_76 () (_ BitVec 64))
(declare-fun temp25_77 () (_ BitVec 64))
(declare-fun temp25_78 () (_ BitVec 64))
(declare-fun temp25_79 () (_ BitVec 64))
(declare-fun temp25_80 () (_ BitVec 64))
(declare-fun temp25_81 () (_ BitVec 64))
(declare-fun temp25_82 () (_ BitVec 64))
(declare-fun temp25_83 () (_ BitVec 64))
(declare-fun temp25_84 () (_ BitVec 64))
(declare-fun temp25_85 () (_ BitVec 64))
(declare-fun temp25_86 () (_ BitVec 64))
(declare-fun temp25_87 () (_ BitVec 64))
(declare-fun temp25_88 () (_ BitVec 64))
(declare-fun temp25_89 () (_ BitVec 64))
(declare-fun temp25_90 () (_ BitVec 64))
(declare-fun temp25_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp25_92 () (_ BitVec 64))
(declare-fun temp25_93 () (_ BitVec 64))
(declare-fun temp25_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp25_95 () (_ BitVec 64))
(declare-fun temp25_96 () (_ BitVec 64))
(declare-fun temp25_97 () (_ BitVec 64))
(declare-fun temp25_98 () (_ BitVec 64))
(declare-fun temp25_99 () (_ BitVec 64))
(declare-fun temp25_100 () (_ BitVec 64))
(declare-fun temp25_101 () (_ BitVec 64))
(declare-fun temp25_102 () (_ BitVec 64))
(declare-fun temp25_103 () (_ BitVec 64))
(declare-fun temp25_104 () (_ BitVec 64))
(declare-fun temp25_105 () (_ BitVec 64))
(declare-fun temp25_106 () (_ BitVec 64))
(declare-fun temp25_107 () (_ BitVec 64))
(declare-fun temp25_108 () (_ BitVec 64))
(declare-fun temp25_109 () (_ BitVec 64))
(declare-fun temp25_110 () (_ BitVec 64))
(declare-fun temp25_111 () (_ BitVec 64))
(declare-fun temp25_112 () (_ BitVec 64))
(declare-fun temp25_113 () (_ BitVec 64))
(declare-fun temp25_114 () (_ BitVec 64))
(declare-fun temp25_115 () (_ BitVec 64))
(declare-fun temp25_116 () (_ BitVec 64))
(declare-fun temp25_117 () (_ BitVec 64))
(declare-fun temp25_118 () (_ BitVec 64))
(declare-fun temp25_119 () (_ BitVec 64))
(declare-fun temp25_120 () (_ BitVec 64))
(declare-fun temp25_121 () (_ BitVec 64))
(declare-fun temp25_122 () (_ BitVec 64))
(declare-fun temp25_123 () (_ BitVec 64))
(declare-fun temp25_124 () (_ BitVec 64))
(declare-fun temp25_125 () (_ BitVec 64))
(declare-fun temp25_126 () (_ BitVec 64))
(declare-fun temp25_127 () (_ BitVec 64))
(declare-fun temp25_128 () (_ BitVec 64))
(declare-fun temp25_129 () (_ BitVec 64))
(declare-fun temp25_130 () (_ BitVec 64))
(declare-fun temp25_131 () (_ BitVec 64))
(declare-fun temp25_132 () (_ BitVec 64))
(declare-fun temp25_133 () (_ BitVec 64))
(declare-fun temp25_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp25_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp25_136 () (_ BitVec 64))
(declare-fun temp25_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp25_138 () (_ BitVec 64))
(declare-fun temp25_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp25_140 () (_ BitVec 64))
(declare-fun temp25_141 () (_ BitVec 64))
(declare-fun temp25_142 () (_ BitVec 64))
(declare-fun temp25_143 () (_ BitVec 64))
(declare-fun temp25_144 () (_ BitVec 64))
(declare-fun temp25_145 () (_ BitVec 64))
(declare-fun temp25_146 () (_ BitVec 64))
(declare-fun temp25_147 () (_ BitVec 64))
(declare-fun temp25_148 () (_ BitVec 64))
(declare-fun temp25_149 () (_ BitVec 64))
(declare-fun temp25_150 () (_ BitVec 64))
(declare-fun temp25_151 () (_ BitVec 64))
(declare-fun temp25_152 () (_ BitVec 64))
(declare-fun temp25_153 () (_ BitVec 64))
(declare-fun temp25_154 () (_ BitVec 64))
(declare-fun temp25_155 () (_ BitVec 64))
(declare-fun temp25_157 () (_ BitVec 64))
(declare-fun temp25_158 () (_ BitVec 64))
(declare-fun temp25_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp25_159 () (_ BitVec 64))
(declare-fun temp25_160 () (_ BitVec 64))
(declare-fun temp25_162 () (_ BitVec 64))
(declare-fun temp25_163 () (_ BitVec 64))
(declare-fun temp25_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp25_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp25_165 () (_ BitVec 64))
(declare-fun temp25_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp25_167 () (_ BitVec 64))
(declare-fun temp25_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp25_169 () (_ BitVec 64))
(declare-fun temp25_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp25_171 () (_ BitVec 64))
(declare-fun temp25_172 () (_ BitVec 64))
(declare-fun temp25_173 () (_ BitVec 64))
(declare-fun temp25_174 () (_ BitVec 64))
(declare-fun temp25_175 () (_ BitVec 64))
(declare-fun temp25_176 () (_ BitVec 64))
(declare-fun temp25_177 () (_ BitVec 64))
(declare-fun temp25_178 () (_ BitVec 64))
(declare-fun temp25_179 () (_ BitVec 64))
(declare-fun temp25_180 () (_ BitVec 64))
(declare-fun temp25_181 () (_ BitVec 64))
(declare-fun temp25_182 () (_ BitVec 64))
(declare-fun temp25_183 () (_ BitVec 64))
(declare-fun temp25_184 () (_ BitVec 64))
(declare-fun temp25_185 () (_ BitVec 64))
(declare-fun temp25_186 () (_ BitVec 64))
(declare-fun temp25_187 () (_ BitVec 64))
(declare-fun temp25_188 () (_ BitVec 64))
(declare-fun temp25_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp25_190 () (_ BitVec 64))
(declare-fun temp25_192 () (_ BitVec 64))
(declare-fun temp25_193 () (_ BitVec 64))
(declare-fun temp25_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp25_194 () (_ BitVec 64))
(declare-fun temp25_195 () (_ BitVec 64))
(declare-fun temp25_197 () (_ BitVec 64))
(declare-fun temp25_198 () (_ BitVec 64))
(declare-fun temp25_196 () (_ BitVec 64))
(declare-fun temp25_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp25_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp25_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp25_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp25_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp25_204 () (_ BitVec 64))
(declare-fun temp25_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp25_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp25_207 () (_ BitVec 64))
(declare-fun temp25_208 () (_ BitVec 64))
(declare-fun temp25_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp25_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp25_211 () (_ BitVec 64))
(declare-fun temp25_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp25_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp25_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4993424 () (_ BitVec 64))
(declare-fun var211388 () (_ BitVec 64))
(declare-fun temp25_215 () (_ BitVec 64))
(declare-fun var211389 () (_ BitVec 64))
(declare-fun var5914445 () (_ BitVec 64))
(declare-fun temp25_216 () (_ BitVec 64))
(assert (= temp25_1 #x0000000000000001))
(assert (= var77203 temp25_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp25_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp25_2)))
(assert (= temp25_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp25_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp25_4 #x0000000000000000))
(assert (= var210941 temp25_4))
(assert (= temp25_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp25_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp25_6 #x0000000000000000))
(assert (= var210986 temp25_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp25_7 #x0000000000000000))
(assert (= temp25_8 temp25_7))
(assert (= temp25_9 (select ARGNAME_padding_NAMEEND_VAL temp25_8)))
(assert (= temp25_10 #x0000000000000001))
(assert (= temp25_11 temp25_10))
(assert (= temp25_12 (select ARGNAME_padding_NAMEEND_VAL temp25_11)))
(assert (= temp25_13 #x0000000000000002))
(assert (= temp25_14 temp25_13))
(assert (= temp25_15 (select ARGNAME_padding_NAMEEND_VAL temp25_14)))
(assert (= temp25_16 #x0000000000000003))
(assert (= temp25_17 temp25_16))
(assert (= temp25_18 (select ARGNAME_padding_NAMEEND_VAL temp25_17)))
(assert (= temp25_19 #x0000000000000004))
(assert (= temp25_20 temp25_19))
(assert (= temp25_21 (select ARGNAME_padding_NAMEEND_VAL temp25_20)))
(assert (= temp25_22 #x0000000000000005))
(assert (= temp25_23 temp25_22))
(assert (= temp25_24 (select ARGNAME_padding_NAMEEND_VAL temp25_23)))
(assert (= temp25_25 #x0000000000000000))
(assert (= temp25_26 #x0000000000000000))
(assert (= temp25_27 temp25_26))
(assert (= temp25_28 (select ARGNAME_padding_NAMEEND_VAL temp25_27)))
(assert (= temp25_29 #x0000000000000000))
(assert (= temp25_30 #x0000000000000001))
(assert (= temp25_31 temp25_30))
(assert (= temp25_32 (select ARGNAME_padding_NAMEEND_VAL temp25_31)))
(assert (= temp25_33 #x0000000000000000))
(assert (= temp25_34 #x0000000000000002))
(assert (= temp25_35 temp25_34))
(assert (= temp25_36 (select ARGNAME_padding_NAMEEND_VAL temp25_35)))
(assert (= temp25_37 #x0000000000000000))
(assert (= temp25_38 #x0000000000000003))
(assert (= temp25_39 temp25_38))
(assert (= temp25_40 (select ARGNAME_padding_NAMEEND_VAL temp25_39)))
(assert (= temp25_41 #x0000000000000000))
(assert (= temp25_42 #x0000000000000004))
(assert (= temp25_43 temp25_42))
(assert (= temp25_44 (select ARGNAME_padding_NAMEEND_VAL temp25_43)))
(assert (= temp25_45 #x0000000000000000))
(assert (= temp25_46 #x0000000000000005))
(assert (= temp25_47 temp25_46))
(assert (= temp25_48 (select ARGNAME_padding_NAMEEND_VAL temp25_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp25_28 temp25_25)
             (bvslt temp25_32 temp25_29)
             (bvslt temp25_36 temp25_33)
             (bvslt temp25_40 temp25_37)
             (bvslt temp25_44 temp25_41)
             (bvslt temp25_48 temp25_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp25_49 #x0000000000000000))
(assert (= var1191714 temp25_49))
(assert (= temp25_50 #x0000000000000000))
(assert (= temp25_51 temp25_50))
(assert (= temp25_52 (select ARGNAME_output_padding_NAMEEND_VAL temp25_51)))
(assert (= temp25_53 #x0000000000000001))
(assert (= temp25_54 temp25_53))
(assert (= temp25_55 (select ARGNAME_output_padding_NAMEEND_VAL temp25_54)))
(assert (= temp25_56 #x0000000000000002))
(assert (= temp25_57 temp25_56))
(assert (= temp25_58 (select ARGNAME_output_padding_NAMEEND_VAL temp25_57)))
(assert (= temp25_59 #x0000000000000003))
(assert (= temp25_60 temp25_59))
(assert (= temp25_61 (select ARGNAME_output_padding_NAMEEND_VAL temp25_60)))
(assert (= temp25_62 #x0000000000000004))
(assert (= temp25_63 temp25_62))
(assert (= temp25_64 (select ARGNAME_output_padding_NAMEEND_VAL temp25_63)))
(assert (= temp25_65 #x0000000000000005))
(assert (= temp25_66 temp25_65))
(assert (= temp25_67 (select ARGNAME_output_padding_NAMEEND_VAL temp25_66)))
(assert (= temp25_68 #x0000000000000000))
(assert (= temp25_69 #x0000000000000000))
(assert (= temp25_70 temp25_69))
(assert (= temp25_71 (select ARGNAME_output_padding_NAMEEND_VAL temp25_70)))
(assert (= temp25_72 #x0000000000000000))
(assert (= temp25_73 #x0000000000000001))
(assert (= temp25_74 temp25_73))
(assert (= temp25_75 (select ARGNAME_output_padding_NAMEEND_VAL temp25_74)))
(assert (= temp25_76 #x0000000000000000))
(assert (= temp25_77 #x0000000000000002))
(assert (= temp25_78 temp25_77))
(assert (= temp25_79 (select ARGNAME_output_padding_NAMEEND_VAL temp25_78)))
(assert (= temp25_80 #x0000000000000000))
(assert (= temp25_81 #x0000000000000003))
(assert (= temp25_82 temp25_81))
(assert (= temp25_83 (select ARGNAME_output_padding_NAMEEND_VAL temp25_82)))
(assert (= temp25_84 #x0000000000000000))
(assert (= temp25_85 #x0000000000000004))
(assert (= temp25_86 temp25_85))
(assert (= temp25_87 (select ARGNAME_output_padding_NAMEEND_VAL temp25_86)))
(assert (= temp25_88 #x0000000000000000))
(assert (= temp25_89 #x0000000000000005))
(assert (= temp25_90 temp25_89))
(assert (= temp25_91 (select ARGNAME_output_padding_NAMEEND_VAL temp25_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp25_71 temp25_68)
             (bvslt temp25_75 temp25_72)
             (bvslt temp25_79 temp25_76)
             (bvslt temp25_83 temp25_80)
             (bvslt temp25_87 temp25_84)
             (bvslt temp25_91 temp25_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp25_92 #x0000000000000000))
(assert (= var1191725 temp25_92))
(assert (= temp25_93 #x0000000000000000))
(assert (= temp25_94 temp25_93))
(assert (= temp25_95 (select ARGNAME_stride_NAMEEND_VAL temp25_94)))
(assert (= temp25_96 #x0000000000000001))
(assert (= temp25_97 temp25_96))
(assert (= temp25_98 (select ARGNAME_stride_NAMEEND_VAL temp25_97)))
(assert (= temp25_99 #x0000000000000002))
(assert (= temp25_100 temp25_99))
(assert (= temp25_101 (select ARGNAME_stride_NAMEEND_VAL temp25_100)))
(assert (= temp25_102 #x0000000000000003))
(assert (= temp25_103 temp25_102))
(assert (= temp25_104 (select ARGNAME_stride_NAMEEND_VAL temp25_103)))
(assert (= temp25_105 #x0000000000000004))
(assert (= temp25_106 temp25_105))
(assert (= temp25_107 (select ARGNAME_stride_NAMEEND_VAL temp25_106)))
(assert (= temp25_108 #x0000000000000005))
(assert (= temp25_109 temp25_108))
(assert (= temp25_110 (select ARGNAME_stride_NAMEEND_VAL temp25_109)))
(assert (= temp25_111 #x0000000000000000))
(assert (= temp25_112 #x0000000000000000))
(assert (= temp25_113 temp25_112))
(assert (= temp25_114 (select ARGNAME_stride_NAMEEND_VAL temp25_113)))
(assert (= temp25_115 #x0000000000000000))
(assert (= temp25_116 #x0000000000000001))
(assert (= temp25_117 temp25_116))
(assert (= temp25_118 (select ARGNAME_stride_NAMEEND_VAL temp25_117)))
(assert (= temp25_119 #x0000000000000000))
(assert (= temp25_120 #x0000000000000002))
(assert (= temp25_121 temp25_120))
(assert (= temp25_122 (select ARGNAME_stride_NAMEEND_VAL temp25_121)))
(assert (= temp25_123 #x0000000000000000))
(assert (= temp25_124 #x0000000000000003))
(assert (= temp25_125 temp25_124))
(assert (= temp25_126 (select ARGNAME_stride_NAMEEND_VAL temp25_125)))
(assert (= temp25_127 #x0000000000000000))
(assert (= temp25_128 #x0000000000000004))
(assert (= temp25_129 temp25_128))
(assert (= temp25_130 (select ARGNAME_stride_NAMEEND_VAL temp25_129)))
(assert (= temp25_131 #x0000000000000000))
(assert (= temp25_132 #x0000000000000005))
(assert (= temp25_133 temp25_132))
(assert (= temp25_134 (select ARGNAME_stride_NAMEEND_VAL temp25_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp25_114 temp25_111)
             (bvsle temp25_118 temp25_115)
             (bvsle temp25_122 temp25_119)
             (bvsle temp25_126 temp25_123)
             (bvsle temp25_130 temp25_127)
             (bvsle temp25_134 temp25_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp25_135 #x0000000000000000))
(assert (= var1191735 temp25_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp25_136 #x0000000000000001))
(assert (= var1191747 temp25_136))
(assert (= temp25_137 #x0000000000000000))
(assert (= var1179826 temp25_137))
(assert (= temp25_138 #x0000000000000000))
(assert (= temp25_139 temp25_138))
(assert (= temp25_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp25_139)))
(assert (= temp25_141 #x0000000000000001))
(assert (= temp25_142 temp25_141))
(assert (= temp25_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp25_142)))
(assert (= temp25_144 #x0000000000000002))
(assert (= temp25_145 temp25_144))
(assert (= temp25_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp25_145)))
(assert (= temp25_147 #x0000000000000003))
(assert (= temp25_148 temp25_147))
(assert (= temp25_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp25_148)))
(assert (= temp25_150 #x0000000000000004))
(assert (= temp25_151 temp25_150))
(assert (= temp25_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp25_151)))
(assert (= temp25_153 #x0000000000000005))
(assert (= temp25_154 temp25_153))
(assert (= temp25_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp25_154)))
(assert (= temp25_157 var1179826))
(assert (= temp25_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp25_157)))
(assert (= temp25_156 temp25_158))
(assert (= var1191780
   (ite (bvslt temp25_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp25_159 #x0000000000000000))
(assert (= var1191780 temp25_159))
(assert (= temp25_160 #x0000000000000000))
(assert (= var1179826 temp25_160))
(assert (= temp25_162 var1179826))
(assert (= temp25_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp25_162)))
(assert (= temp25_161 temp25_163))
(assert (= var1191802 (bvsmod temp25_161 ARGNAME_groups_NAMEEND)))
(assert (= temp25_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp25_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp25_165 #x0000000000000001))
(assert (= var1191803 temp25_165))
(assert (= temp25_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp25_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp25_167 #x0000000000000001))
(assert (= var1191823 temp25_167))
(assert (= temp25_168 #x0000000000000001))
(assert (= var1180714 temp25_168))
(assert (= temp25_169 #x0000000000000000))
(assert (= temp25_170 temp25_169))
(assert (= temp25_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp25_170)))
(assert (= temp25_172 #x0000000000000001))
(assert (= temp25_173 temp25_172))
(assert (= temp25_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp25_173)))
(assert (= temp25_175 #x0000000000000002))
(assert (= temp25_176 temp25_175))
(assert (= temp25_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp25_176)))
(assert (= temp25_178 #x0000000000000003))
(assert (= temp25_179 temp25_178))
(assert (= temp25_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp25_179)))
(assert (= temp25_181 #x0000000000000004))
(assert (= temp25_182 temp25_181))
(assert (= temp25_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp25_182)))
(assert (= temp25_184 #x0000000000000005))
(assert (= temp25_185 temp25_184))
(assert (= temp25_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp25_185)))
(assert (= temp25_187 #x0000000000000000))
(assert (= temp25_188
   (ite (bvslt var1180714 temp25_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp25_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp25_188)))
(assert (= var1191831 temp25_189))
(assert (bvslt (ite (bvslt var1180714 temp25_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp25_190 #x0000000000000001))
(assert (= var1180714 temp25_190))
(assert (= temp25_192 var1180714))
(assert (= temp25_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp25_192)))
(assert (= temp25_191 temp25_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp25_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp25_194 #x0000000000000001))
(assert (= var1191836 temp25_194))
(assert (= temp25_195 #x0000000000000000))
(assert (= var1179826 temp25_195))
(assert (= temp25_197 var1179826))
(assert (= temp25_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp25_197)))
(assert (= temp25_196 temp25_198))
(assert (= temp25_199 #x0000000000000002))
(assert (= var1586025 temp25_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp25_200 #x0000000000000001))
(assert (= var1191993 temp25_200))
(assert (= temp25_201 #x0000000000000001))
(assert (= var2700303 temp25_201))
(assert (= temp25_202 #x0000000000000001))
(assert (= var2962447 temp25_202))
(assert (= temp25_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp25_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp25_204 #x0000000000000001))
(assert (= var211058 temp25_204))
(assert (= temp25_205 #x0000000000000001))
(assert (= var211188 temp25_205))
(assert (= var3879401 var211188))
(assert (= temp25_206 #x0000000000000000))
(assert (= var3866802 temp25_206))
(assert (= temp25_207 #x0000000000000000))
(assert (= temp25_208
   (ite (bvslt var3866802 temp25_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp25_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp25_208)))
(assert (= var3879420 temp25_209))
(assert (bvslt (ite (bvslt var3866802 temp25_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp25_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp25_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp25_211 #x0000000000000001))
(assert (= var3879421 temp25_211))
(assert (= temp25_212 #x0000000000000000))
(assert (= var4079423 temp25_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp25_213 #x0000000000000002))
(assert (= var4208259 temp25_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp25_214 #x0000000000000000))
(assert (= var4273820 temp25_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4993424 var211201))
(assert (= var211388 var210913))
(assert (= temp25_215 #x0000000000000000))
(assert (= var211389
   (ite (distinct var211388 temp25_215) #x0000000000000001 #x0000000000000000)))
(assert (= var5914445 var211389))
(assert (= temp25_216 #x0000000000000001))
(assert (= var211058 temp25_216))
(model-add temp25_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp25_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp25_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp25_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




