(declare-fun temp10808_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10808_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10808_3 () (_ BitVec 64))
(declare-fun temp10808_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10808_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10808_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10808_7 () (_ BitVec 64))
(declare-fun temp10808_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10808_9 () (_ BitVec 64))
(declare-fun temp10808_10 () (_ BitVec 64))
(declare-fun temp10808_11 () (_ BitVec 64))
(declare-fun temp10808_12 () (_ BitVec 64))
(declare-fun temp10808_13 () (_ BitVec 64))
(declare-fun temp10808_14 () (_ BitVec 64))
(declare-fun temp10808_15 () (_ BitVec 64))
(declare-fun temp10808_16 () (_ BitVec 64))
(declare-fun temp10808_17 () (_ BitVec 64))
(declare-fun temp10808_18 () (_ BitVec 64))
(declare-fun temp10808_19 () (_ BitVec 64))
(declare-fun temp10808_20 () (_ BitVec 64))
(declare-fun temp10808_21 () (_ BitVec 64))
(declare-fun temp10808_22 () (_ BitVec 64))
(declare-fun temp10808_23 () (_ BitVec 64))
(declare-fun temp10808_24 () (_ BitVec 64))
(declare-fun temp10808_25 () (_ BitVec 64))
(declare-fun temp10808_26 () (_ BitVec 64))
(declare-fun temp10808_27 () (_ BitVec 64))
(declare-fun temp10808_28 () (_ BitVec 64))
(declare-fun temp10808_29 () (_ BitVec 64))
(declare-fun temp10808_30 () (_ BitVec 64))
(declare-fun temp10808_31 () (_ BitVec 64))
(declare-fun temp10808_32 () (_ BitVec 64))
(declare-fun temp10808_33 () (_ BitVec 64))
(declare-fun temp10808_34 () (_ BitVec 64))
(declare-fun temp10808_35 () (_ BitVec 64))
(declare-fun temp10808_36 () (_ BitVec 64))
(declare-fun temp10808_37 () (_ BitVec 64))
(declare-fun temp10808_38 () (_ BitVec 64))
(declare-fun temp10808_39 () (_ BitVec 64))
(declare-fun temp10808_40 () (_ BitVec 64))
(declare-fun temp10808_41 () (_ BitVec 64))
(declare-fun temp10808_42 () (_ BitVec 64))
(declare-fun temp10808_43 () (_ BitVec 64))
(declare-fun temp10808_44 () (_ BitVec 64))
(declare-fun temp10808_45 () (_ BitVec 64))
(declare-fun temp10808_46 () (_ BitVec 64))
(declare-fun temp10808_47 () (_ BitVec 64))
(declare-fun temp10808_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10808_49 () (_ BitVec 64))
(declare-fun temp10808_50 () (_ BitVec 64))
(declare-fun temp10808_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10808_52 () (_ BitVec 64))
(declare-fun temp10808_53 () (_ BitVec 64))
(declare-fun temp10808_54 () (_ BitVec 64))
(declare-fun temp10808_55 () (_ BitVec 64))
(declare-fun temp10808_56 () (_ BitVec 64))
(declare-fun temp10808_57 () (_ BitVec 64))
(declare-fun temp10808_58 () (_ BitVec 64))
(declare-fun temp10808_59 () (_ BitVec 64))
(declare-fun temp10808_60 () (_ BitVec 64))
(declare-fun temp10808_61 () (_ BitVec 64))
(declare-fun temp10808_62 () (_ BitVec 64))
(declare-fun temp10808_63 () (_ BitVec 64))
(declare-fun temp10808_64 () (_ BitVec 64))
(declare-fun temp10808_65 () (_ BitVec 64))
(declare-fun temp10808_66 () (_ BitVec 64))
(declare-fun temp10808_67 () (_ BitVec 64))
(declare-fun temp10808_68 () (_ BitVec 64))
(declare-fun temp10808_69 () (_ BitVec 64))
(declare-fun temp10808_70 () (_ BitVec 64))
(declare-fun temp10808_71 () (_ BitVec 64))
(declare-fun temp10808_72 () (_ BitVec 64))
(declare-fun temp10808_73 () (_ BitVec 64))
(declare-fun temp10808_74 () (_ BitVec 64))
(declare-fun temp10808_75 () (_ BitVec 64))
(declare-fun temp10808_76 () (_ BitVec 64))
(declare-fun temp10808_77 () (_ BitVec 64))
(declare-fun temp10808_78 () (_ BitVec 64))
(declare-fun temp10808_79 () (_ BitVec 64))
(declare-fun temp10808_80 () (_ BitVec 64))
(declare-fun temp10808_81 () (_ BitVec 64))
(declare-fun temp10808_82 () (_ BitVec 64))
(declare-fun temp10808_83 () (_ BitVec 64))
(declare-fun temp10808_84 () (_ BitVec 64))
(declare-fun temp10808_85 () (_ BitVec 64))
(declare-fun temp10808_86 () (_ BitVec 64))
(declare-fun temp10808_87 () (_ BitVec 64))
(declare-fun temp10808_88 () (_ BitVec 64))
(declare-fun temp10808_89 () (_ BitVec 64))
(declare-fun temp10808_90 () (_ BitVec 64))
(declare-fun temp10808_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10808_92 () (_ BitVec 64))
(declare-fun temp10808_93 () (_ BitVec 64))
(declare-fun temp10808_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10808_95 () (_ BitVec 64))
(declare-fun temp10808_96 () (_ BitVec 64))
(declare-fun temp10808_97 () (_ BitVec 64))
(declare-fun temp10808_98 () (_ BitVec 64))
(declare-fun temp10808_99 () (_ BitVec 64))
(declare-fun temp10808_100 () (_ BitVec 64))
(declare-fun temp10808_101 () (_ BitVec 64))
(declare-fun temp10808_102 () (_ BitVec 64))
(declare-fun temp10808_103 () (_ BitVec 64))
(declare-fun temp10808_104 () (_ BitVec 64))
(declare-fun temp10808_105 () (_ BitVec 64))
(declare-fun temp10808_106 () (_ BitVec 64))
(declare-fun temp10808_107 () (_ BitVec 64))
(declare-fun temp10808_108 () (_ BitVec 64))
(declare-fun temp10808_109 () (_ BitVec 64))
(declare-fun temp10808_110 () (_ BitVec 64))
(declare-fun temp10808_111 () (_ BitVec 64))
(declare-fun temp10808_112 () (_ BitVec 64))
(declare-fun temp10808_113 () (_ BitVec 64))
(declare-fun temp10808_114 () (_ BitVec 64))
(declare-fun temp10808_115 () (_ BitVec 64))
(declare-fun temp10808_116 () (_ BitVec 64))
(declare-fun temp10808_117 () (_ BitVec 64))
(declare-fun temp10808_118 () (_ BitVec 64))
(declare-fun temp10808_119 () (_ BitVec 64))
(declare-fun temp10808_120 () (_ BitVec 64))
(declare-fun temp10808_121 () (_ BitVec 64))
(declare-fun temp10808_122 () (_ BitVec 64))
(declare-fun temp10808_123 () (_ BitVec 64))
(declare-fun temp10808_124 () (_ BitVec 64))
(declare-fun temp10808_125 () (_ BitVec 64))
(declare-fun temp10808_126 () (_ BitVec 64))
(declare-fun temp10808_127 () (_ BitVec 64))
(declare-fun temp10808_128 () (_ BitVec 64))
(declare-fun temp10808_129 () (_ BitVec 64))
(declare-fun temp10808_130 () (_ BitVec 64))
(declare-fun temp10808_131 () (_ BitVec 64))
(declare-fun temp10808_132 () (_ BitVec 64))
(declare-fun temp10808_133 () (_ BitVec 64))
(declare-fun temp10808_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10808_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10808_136 () (_ BitVec 64))
(declare-fun temp10808_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10808_138 () (_ BitVec 64))
(declare-fun temp10808_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10808_140 () (_ BitVec 64))
(declare-fun temp10808_141 () (_ BitVec 64))
(declare-fun temp10808_142 () (_ BitVec 64))
(declare-fun temp10808_143 () (_ BitVec 64))
(declare-fun temp10808_144 () (_ BitVec 64))
(declare-fun temp10808_145 () (_ BitVec 64))
(declare-fun temp10808_146 () (_ BitVec 64))
(declare-fun temp10808_147 () (_ BitVec 64))
(declare-fun temp10808_148 () (_ BitVec 64))
(declare-fun temp10808_149 () (_ BitVec 64))
(declare-fun temp10808_150 () (_ BitVec 64))
(declare-fun temp10808_151 () (_ BitVec 64))
(declare-fun temp10808_152 () (_ BitVec 64))
(declare-fun temp10808_153 () (_ BitVec 64))
(declare-fun temp10808_154 () (_ BitVec 64))
(declare-fun temp10808_155 () (_ BitVec 64))
(declare-fun temp10808_157 () (_ BitVec 64))
(declare-fun temp10808_158 () (_ BitVec 64))
(declare-fun temp10808_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10808_159 () (_ BitVec 64))
(declare-fun temp10808_160 () (_ BitVec 64))
(declare-fun temp10808_162 () (_ BitVec 64))
(declare-fun temp10808_163 () (_ BitVec 64))
(declare-fun temp10808_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10808_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10808_165 () (_ BitVec 64))
(declare-fun temp10808_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10808_167 () (_ BitVec 64))
(declare-fun temp10808_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10808_169 () (_ BitVec 64))
(declare-fun temp10808_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10808_171 () (_ BitVec 64))
(declare-fun temp10808_172 () (_ BitVec 64))
(declare-fun temp10808_173 () (_ BitVec 64))
(declare-fun temp10808_174 () (_ BitVec 64))
(declare-fun temp10808_175 () (_ BitVec 64))
(declare-fun temp10808_176 () (_ BitVec 64))
(declare-fun temp10808_177 () (_ BitVec 64))
(declare-fun temp10808_178 () (_ BitVec 64))
(declare-fun temp10808_179 () (_ BitVec 64))
(declare-fun temp10808_180 () (_ BitVec 64))
(declare-fun temp10808_181 () (_ BitVec 64))
(declare-fun temp10808_182 () (_ BitVec 64))
(declare-fun temp10808_183 () (_ BitVec 64))
(declare-fun temp10808_184 () (_ BitVec 64))
(declare-fun temp10808_185 () (_ BitVec 64))
(declare-fun temp10808_186 () (_ BitVec 64))
(declare-fun temp10808_187 () (_ BitVec 64))
(declare-fun temp10808_188 () (_ BitVec 64))
(declare-fun temp10808_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10808_190 () (_ BitVec 64))
(declare-fun temp10808_192 () (_ BitVec 64))
(declare-fun temp10808_193 () (_ BitVec 64))
(declare-fun temp10808_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10808_194 () (_ BitVec 64))
(declare-fun temp10808_195 () (_ BitVec 64))
(declare-fun temp10808_197 () (_ BitVec 64))
(declare-fun temp10808_198 () (_ BitVec 64))
(declare-fun temp10808_196 () (_ BitVec 64))
(declare-fun temp10808_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10808_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10808_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10808_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10808_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10808_204 () (_ BitVec 64))
(declare-fun temp10808_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10808_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10808_207 () (_ BitVec 64))
(declare-fun temp10808_208 () (_ BitVec 64))
(declare-fun temp10808_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10808_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10808_211 () (_ BitVec 64))
(declare-fun temp10808_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10808_213 () (_ BitVec 64))
(declare-fun temp10808_214 () (_ BitVec 64))
(declare-fun temp10808_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10808_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10808_217 () (_ BitVec 64))
(declare-fun temp10808_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10808_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10808_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var5452176 () (_ BitVec 64))
(declare-fun var5714320 () (_ BitVec 64))
(declare-fun temp10808_221 () (_ BitVec 64))
(assert (= temp10808_1 #x0000000000000001))
(assert (= var77203 temp10808_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10808_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10808_2)))
(assert (= temp10808_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10808_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10808_4 #x0000000000000000))
(assert (= var210941 temp10808_4))
(assert (= temp10808_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10808_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10808_6 #x0000000000000000))
(assert (= var210986 temp10808_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10808_7 #x0000000000000000))
(assert (= temp10808_8 temp10808_7))
(assert (= temp10808_9 (select ARGNAME_padding_NAMEEND_VAL temp10808_8)))
(assert (= temp10808_10 #x0000000000000001))
(assert (= temp10808_11 temp10808_10))
(assert (= temp10808_12 (select ARGNAME_padding_NAMEEND_VAL temp10808_11)))
(assert (= temp10808_13 #x0000000000000002))
(assert (= temp10808_14 temp10808_13))
(assert (= temp10808_15 (select ARGNAME_padding_NAMEEND_VAL temp10808_14)))
(assert (= temp10808_16 #x0000000000000003))
(assert (= temp10808_17 temp10808_16))
(assert (= temp10808_18 (select ARGNAME_padding_NAMEEND_VAL temp10808_17)))
(assert (= temp10808_19 #x0000000000000004))
(assert (= temp10808_20 temp10808_19))
(assert (= temp10808_21 (select ARGNAME_padding_NAMEEND_VAL temp10808_20)))
(assert (= temp10808_22 #x0000000000000005))
(assert (= temp10808_23 temp10808_22))
(assert (= temp10808_24 (select ARGNAME_padding_NAMEEND_VAL temp10808_23)))
(assert (= temp10808_25 #x0000000000000000))
(assert (= temp10808_26 #x0000000000000000))
(assert (= temp10808_27 temp10808_26))
(assert (= temp10808_28 (select ARGNAME_padding_NAMEEND_VAL temp10808_27)))
(assert (= temp10808_29 #x0000000000000000))
(assert (= temp10808_30 #x0000000000000001))
(assert (= temp10808_31 temp10808_30))
(assert (= temp10808_32 (select ARGNAME_padding_NAMEEND_VAL temp10808_31)))
(assert (= temp10808_33 #x0000000000000000))
(assert (= temp10808_34 #x0000000000000002))
(assert (= temp10808_35 temp10808_34))
(assert (= temp10808_36 (select ARGNAME_padding_NAMEEND_VAL temp10808_35)))
(assert (= temp10808_37 #x0000000000000000))
(assert (= temp10808_38 #x0000000000000003))
(assert (= temp10808_39 temp10808_38))
(assert (= temp10808_40 (select ARGNAME_padding_NAMEEND_VAL temp10808_39)))
(assert (= temp10808_41 #x0000000000000000))
(assert (= temp10808_42 #x0000000000000004))
(assert (= temp10808_43 temp10808_42))
(assert (= temp10808_44 (select ARGNAME_padding_NAMEEND_VAL temp10808_43)))
(assert (= temp10808_45 #x0000000000000000))
(assert (= temp10808_46 #x0000000000000005))
(assert (= temp10808_47 temp10808_46))
(assert (= temp10808_48 (select ARGNAME_padding_NAMEEND_VAL temp10808_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10808_28 temp10808_25)
             (bvslt temp10808_32 temp10808_29)
             (bvslt temp10808_36 temp10808_33)
             (bvslt temp10808_40 temp10808_37)
             (bvslt temp10808_44 temp10808_41)
             (bvslt temp10808_48 temp10808_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10808_49 #x0000000000000000))
(assert (= var1191714 temp10808_49))
(assert (= temp10808_50 #x0000000000000000))
(assert (= temp10808_51 temp10808_50))
(assert (= temp10808_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10808_51)))
(assert (= temp10808_53 #x0000000000000001))
(assert (= temp10808_54 temp10808_53))
(assert (= temp10808_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10808_54)))
(assert (= temp10808_56 #x0000000000000002))
(assert (= temp10808_57 temp10808_56))
(assert (= temp10808_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10808_57)))
(assert (= temp10808_59 #x0000000000000003))
(assert (= temp10808_60 temp10808_59))
(assert (= temp10808_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10808_60)))
(assert (= temp10808_62 #x0000000000000004))
(assert (= temp10808_63 temp10808_62))
(assert (= temp10808_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10808_63)))
(assert (= temp10808_65 #x0000000000000005))
(assert (= temp10808_66 temp10808_65))
(assert (= temp10808_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10808_66)))
(assert (= temp10808_68 #x0000000000000000))
(assert (= temp10808_69 #x0000000000000000))
(assert (= temp10808_70 temp10808_69))
(assert (= temp10808_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10808_70)))
(assert (= temp10808_72 #x0000000000000000))
(assert (= temp10808_73 #x0000000000000001))
(assert (= temp10808_74 temp10808_73))
(assert (= temp10808_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10808_74)))
(assert (= temp10808_76 #x0000000000000000))
(assert (= temp10808_77 #x0000000000000002))
(assert (= temp10808_78 temp10808_77))
(assert (= temp10808_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10808_78)))
(assert (= temp10808_80 #x0000000000000000))
(assert (= temp10808_81 #x0000000000000003))
(assert (= temp10808_82 temp10808_81))
(assert (= temp10808_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10808_82)))
(assert (= temp10808_84 #x0000000000000000))
(assert (= temp10808_85 #x0000000000000004))
(assert (= temp10808_86 temp10808_85))
(assert (= temp10808_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10808_86)))
(assert (= temp10808_88 #x0000000000000000))
(assert (= temp10808_89 #x0000000000000005))
(assert (= temp10808_90 temp10808_89))
(assert (= temp10808_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10808_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10808_71 temp10808_68)
             (bvslt temp10808_75 temp10808_72)
             (bvslt temp10808_79 temp10808_76)
             (bvslt temp10808_83 temp10808_80)
             (bvslt temp10808_87 temp10808_84)
             (bvslt temp10808_91 temp10808_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10808_92 #x0000000000000000))
(assert (= var1191725 temp10808_92))
(assert (= temp10808_93 #x0000000000000000))
(assert (= temp10808_94 temp10808_93))
(assert (= temp10808_95 (select ARGNAME_stride_NAMEEND_VAL temp10808_94)))
(assert (= temp10808_96 #x0000000000000001))
(assert (= temp10808_97 temp10808_96))
(assert (= temp10808_98 (select ARGNAME_stride_NAMEEND_VAL temp10808_97)))
(assert (= temp10808_99 #x0000000000000002))
(assert (= temp10808_100 temp10808_99))
(assert (= temp10808_101 (select ARGNAME_stride_NAMEEND_VAL temp10808_100)))
(assert (= temp10808_102 #x0000000000000003))
(assert (= temp10808_103 temp10808_102))
(assert (= temp10808_104 (select ARGNAME_stride_NAMEEND_VAL temp10808_103)))
(assert (= temp10808_105 #x0000000000000004))
(assert (= temp10808_106 temp10808_105))
(assert (= temp10808_107 (select ARGNAME_stride_NAMEEND_VAL temp10808_106)))
(assert (= temp10808_108 #x0000000000000005))
(assert (= temp10808_109 temp10808_108))
(assert (= temp10808_110 (select ARGNAME_stride_NAMEEND_VAL temp10808_109)))
(assert (= temp10808_111 #x0000000000000000))
(assert (= temp10808_112 #x0000000000000000))
(assert (= temp10808_113 temp10808_112))
(assert (= temp10808_114 (select ARGNAME_stride_NAMEEND_VAL temp10808_113)))
(assert (= temp10808_115 #x0000000000000000))
(assert (= temp10808_116 #x0000000000000001))
(assert (= temp10808_117 temp10808_116))
(assert (= temp10808_118 (select ARGNAME_stride_NAMEEND_VAL temp10808_117)))
(assert (= temp10808_119 #x0000000000000000))
(assert (= temp10808_120 #x0000000000000002))
(assert (= temp10808_121 temp10808_120))
(assert (= temp10808_122 (select ARGNAME_stride_NAMEEND_VAL temp10808_121)))
(assert (= temp10808_123 #x0000000000000000))
(assert (= temp10808_124 #x0000000000000003))
(assert (= temp10808_125 temp10808_124))
(assert (= temp10808_126 (select ARGNAME_stride_NAMEEND_VAL temp10808_125)))
(assert (= temp10808_127 #x0000000000000000))
(assert (= temp10808_128 #x0000000000000004))
(assert (= temp10808_129 temp10808_128))
(assert (= temp10808_130 (select ARGNAME_stride_NAMEEND_VAL temp10808_129)))
(assert (= temp10808_131 #x0000000000000000))
(assert (= temp10808_132 #x0000000000000005))
(assert (= temp10808_133 temp10808_132))
(assert (= temp10808_134 (select ARGNAME_stride_NAMEEND_VAL temp10808_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10808_114 temp10808_111)
             (bvsle temp10808_118 temp10808_115)
             (bvsle temp10808_122 temp10808_119)
             (bvsle temp10808_126 temp10808_123)
             (bvsle temp10808_130 temp10808_127)
             (bvsle temp10808_134 temp10808_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10808_135 #x0000000000000000))
(assert (= var1191735 temp10808_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10808_136 #x0000000000000001))
(assert (= var1191747 temp10808_136))
(assert (= temp10808_137 #x0000000000000000))
(assert (= var1179826 temp10808_137))
(assert (= temp10808_138 #x0000000000000000))
(assert (= temp10808_139 temp10808_138))
(assert (= temp10808_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10808_139)))
(assert (= temp10808_141 #x0000000000000001))
(assert (= temp10808_142 temp10808_141))
(assert (= temp10808_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10808_142)))
(assert (= temp10808_144 #x0000000000000002))
(assert (= temp10808_145 temp10808_144))
(assert (= temp10808_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10808_145)))
(assert (= temp10808_147 #x0000000000000003))
(assert (= temp10808_148 temp10808_147))
(assert (= temp10808_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10808_148)))
(assert (= temp10808_150 #x0000000000000004))
(assert (= temp10808_151 temp10808_150))
(assert (= temp10808_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10808_151)))
(assert (= temp10808_153 #x0000000000000005))
(assert (= temp10808_154 temp10808_153))
(assert (= temp10808_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10808_154)))
(assert (= temp10808_157 var1179826))
(assert (= temp10808_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10808_157)))
(assert (= temp10808_156 temp10808_158))
(assert (= var1191780
   (ite (bvslt temp10808_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10808_159 #x0000000000000000))
(assert (= var1191780 temp10808_159))
(assert (= temp10808_160 #x0000000000000000))
(assert (= var1179826 temp10808_160))
(assert (= temp10808_162 var1179826))
(assert (= temp10808_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10808_162)))
(assert (= temp10808_161 temp10808_163))
(assert (= var1191802 (bvsmod temp10808_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10808_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10808_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10808_165 #x0000000000000001))
(assert (= var1191803 temp10808_165))
(assert (= temp10808_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10808_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10808_167 #x0000000000000001))
(assert (= var1191823 temp10808_167))
(assert (= temp10808_168 #x0000000000000001))
(assert (= var1180714 temp10808_168))
(assert (= temp10808_169 #x0000000000000000))
(assert (= temp10808_170 temp10808_169))
(assert (= temp10808_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10808_170)))
(assert (= temp10808_172 #x0000000000000001))
(assert (= temp10808_173 temp10808_172))
(assert (= temp10808_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10808_173)))
(assert (= temp10808_175 #x0000000000000002))
(assert (= temp10808_176 temp10808_175))
(assert (= temp10808_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10808_176)))
(assert (= temp10808_178 #x0000000000000003))
(assert (= temp10808_179 temp10808_178))
(assert (= temp10808_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10808_179)))
(assert (= temp10808_181 #x0000000000000004))
(assert (= temp10808_182 temp10808_181))
(assert (= temp10808_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10808_182)))
(assert (= temp10808_184 #x0000000000000005))
(assert (= temp10808_185 temp10808_184))
(assert (= temp10808_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10808_185)))
(assert (= temp10808_187 #x0000000000000000))
(assert (= temp10808_188
   (ite (bvslt var1180714 temp10808_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10808_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10808_188)))
(assert (= var1191831 temp10808_189))
(assert (bvslt (ite (bvslt var1180714 temp10808_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10808_190 #x0000000000000001))
(assert (= var1180714 temp10808_190))
(assert (= temp10808_192 var1180714))
(assert (= temp10808_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10808_192)))
(assert (= temp10808_191 temp10808_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10808_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10808_194 #x0000000000000001))
(assert (= var1191836 temp10808_194))
(assert (= temp10808_195 #x0000000000000000))
(assert (= var1179826 temp10808_195))
(assert (= temp10808_197 var1179826))
(assert (= temp10808_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10808_197)))
(assert (= temp10808_196 temp10808_198))
(assert (= temp10808_199 #x0000000000000002))
(assert (= var1586025 temp10808_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10808_200 #x0000000000000001))
(assert (= var1191993 temp10808_200))
(assert (= temp10808_201 #x0000000000000001))
(assert (= var2700303 temp10808_201))
(assert (= temp10808_202 #x0000000000000001))
(assert (= var2962447 temp10808_202))
(assert (= temp10808_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10808_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10808_204 #x0000000000000001))
(assert (= var211058 temp10808_204))
(assert (= temp10808_205 #x0000000000000001))
(assert (= var211188 temp10808_205))
(assert (= var3879401 var211188))
(assert (= temp10808_206 #x0000000000000000))
(assert (= var3866802 temp10808_206))
(assert (= temp10808_207 #x0000000000000000))
(assert (= temp10808_208
   (ite (bvslt var3866802 temp10808_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10808_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10808_208)))
(assert (= var3879420 temp10808_209))
(assert (bvslt (ite (bvslt var3866802 temp10808_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10808_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10808_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10808_211 #x0000000000000000))
(assert (= var3879421 temp10808_211))
(assert (= temp10808_212 #x0000000000000001))
(assert (= var3867690 temp10808_212))
(assert (= temp10808_213 #x0000000000000000))
(assert (= temp10808_214
   (ite (bvslt var3867690 temp10808_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10808_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10808_214)))
(assert (= var3879423 temp10808_215))
(assert (bvslt (ite (bvslt var3867690 temp10808_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10808_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10808_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10808_217 #x0000000000000001))
(assert (= var3879424 temp10808_217))
(assert (= temp10808_218 #x0000000000000000))
(assert (= var4133117 temp10808_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10808_219 #x0000000000000002))
(assert (= var4339331 temp10808_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10808_220 #x0000000000000000))
(assert (= var4404892 temp10808_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var5452176 var211201))
(assert (= var5714320 var211201))
(assert (= temp10808_221 #x0000000000000001))
(assert (= var211058 temp10808_221))
(model-add temp10808_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10808_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10808_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10808_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




