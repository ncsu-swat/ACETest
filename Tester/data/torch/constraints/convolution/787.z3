(declare-fun temp1049_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp1049_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1049_3 () (_ BitVec 64))
(declare-fun temp1049_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1049_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp1049_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1049_7 () (_ BitVec 64))
(declare-fun temp1049_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1049_9 () (_ BitVec 64))
(declare-fun temp1049_10 () (_ BitVec 64))
(declare-fun temp1049_11 () (_ BitVec 64))
(declare-fun temp1049_12 () (_ BitVec 64))
(declare-fun temp1049_13 () (_ BitVec 64))
(declare-fun temp1049_14 () (_ BitVec 64))
(declare-fun temp1049_15 () (_ BitVec 64))
(declare-fun temp1049_16 () (_ BitVec 64))
(declare-fun temp1049_17 () (_ BitVec 64))
(declare-fun temp1049_18 () (_ BitVec 64))
(declare-fun temp1049_19 () (_ BitVec 64))
(declare-fun temp1049_20 () (_ BitVec 64))
(declare-fun temp1049_21 () (_ BitVec 64))
(declare-fun temp1049_22 () (_ BitVec 64))
(declare-fun temp1049_23 () (_ BitVec 64))
(declare-fun temp1049_24 () (_ BitVec 64))
(declare-fun temp1049_25 () (_ BitVec 64))
(declare-fun temp1049_26 () (_ BitVec 64))
(declare-fun temp1049_27 () (_ BitVec 64))
(declare-fun temp1049_28 () (_ BitVec 64))
(declare-fun temp1049_29 () (_ BitVec 64))
(declare-fun temp1049_30 () (_ BitVec 64))
(declare-fun temp1049_31 () (_ BitVec 64))
(declare-fun temp1049_32 () (_ BitVec 64))
(declare-fun temp1049_33 () (_ BitVec 64))
(declare-fun temp1049_34 () (_ BitVec 64))
(declare-fun temp1049_35 () (_ BitVec 64))
(declare-fun temp1049_36 () (_ BitVec 64))
(declare-fun temp1049_37 () (_ BitVec 64))
(declare-fun temp1049_38 () (_ BitVec 64))
(declare-fun temp1049_39 () (_ BitVec 64))
(declare-fun temp1049_40 () (_ BitVec 64))
(declare-fun temp1049_41 () (_ BitVec 64))
(declare-fun temp1049_42 () (_ BitVec 64))
(declare-fun temp1049_43 () (_ BitVec 64))
(declare-fun temp1049_44 () (_ BitVec 64))
(declare-fun temp1049_45 () (_ BitVec 64))
(declare-fun temp1049_46 () (_ BitVec 64))
(declare-fun temp1049_47 () (_ BitVec 64))
(declare-fun temp1049_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp1049_49 () (_ BitVec 64))
(declare-fun temp1049_50 () (_ BitVec 64))
(declare-fun temp1049_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1049_52 () (_ BitVec 64))
(declare-fun temp1049_53 () (_ BitVec 64))
(declare-fun temp1049_54 () (_ BitVec 64))
(declare-fun temp1049_55 () (_ BitVec 64))
(declare-fun temp1049_56 () (_ BitVec 64))
(declare-fun temp1049_57 () (_ BitVec 64))
(declare-fun temp1049_58 () (_ BitVec 64))
(declare-fun temp1049_59 () (_ BitVec 64))
(declare-fun temp1049_60 () (_ BitVec 64))
(declare-fun temp1049_61 () (_ BitVec 64))
(declare-fun temp1049_62 () (_ BitVec 64))
(declare-fun temp1049_63 () (_ BitVec 64))
(declare-fun temp1049_64 () (_ BitVec 64))
(declare-fun temp1049_65 () (_ BitVec 64))
(declare-fun temp1049_66 () (_ BitVec 64))
(declare-fun temp1049_67 () (_ BitVec 64))
(declare-fun temp1049_68 () (_ BitVec 64))
(declare-fun temp1049_69 () (_ BitVec 64))
(declare-fun temp1049_70 () (_ BitVec 64))
(declare-fun temp1049_71 () (_ BitVec 64))
(declare-fun temp1049_72 () (_ BitVec 64))
(declare-fun temp1049_73 () (_ BitVec 64))
(declare-fun temp1049_74 () (_ BitVec 64))
(declare-fun temp1049_75 () (_ BitVec 64))
(declare-fun temp1049_76 () (_ BitVec 64))
(declare-fun temp1049_77 () (_ BitVec 64))
(declare-fun temp1049_78 () (_ BitVec 64))
(declare-fun temp1049_79 () (_ BitVec 64))
(declare-fun temp1049_80 () (_ BitVec 64))
(declare-fun temp1049_81 () (_ BitVec 64))
(declare-fun temp1049_82 () (_ BitVec 64))
(declare-fun temp1049_83 () (_ BitVec 64))
(declare-fun temp1049_84 () (_ BitVec 64))
(declare-fun temp1049_85 () (_ BitVec 64))
(declare-fun temp1049_86 () (_ BitVec 64))
(declare-fun temp1049_87 () (_ BitVec 64))
(declare-fun temp1049_88 () (_ BitVec 64))
(declare-fun temp1049_89 () (_ BitVec 64))
(declare-fun temp1049_90 () (_ BitVec 64))
(declare-fun temp1049_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp1049_92 () (_ BitVec 64))
(declare-fun temp1049_93 () (_ BitVec 64))
(declare-fun temp1049_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1049_95 () (_ BitVec 64))
(declare-fun temp1049_96 () (_ BitVec 64))
(declare-fun temp1049_97 () (_ BitVec 64))
(declare-fun temp1049_98 () (_ BitVec 64))
(declare-fun temp1049_99 () (_ BitVec 64))
(declare-fun temp1049_100 () (_ BitVec 64))
(declare-fun temp1049_101 () (_ BitVec 64))
(declare-fun temp1049_102 () (_ BitVec 64))
(declare-fun temp1049_103 () (_ BitVec 64))
(declare-fun temp1049_104 () (_ BitVec 64))
(declare-fun temp1049_105 () (_ BitVec 64))
(declare-fun temp1049_106 () (_ BitVec 64))
(declare-fun temp1049_107 () (_ BitVec 64))
(declare-fun temp1049_108 () (_ BitVec 64))
(declare-fun temp1049_109 () (_ BitVec 64))
(declare-fun temp1049_110 () (_ BitVec 64))
(declare-fun temp1049_111 () (_ BitVec 64))
(declare-fun temp1049_112 () (_ BitVec 64))
(declare-fun temp1049_113 () (_ BitVec 64))
(declare-fun temp1049_114 () (_ BitVec 64))
(declare-fun temp1049_115 () (_ BitVec 64))
(declare-fun temp1049_116 () (_ BitVec 64))
(declare-fun temp1049_117 () (_ BitVec 64))
(declare-fun temp1049_118 () (_ BitVec 64))
(declare-fun temp1049_119 () (_ BitVec 64))
(declare-fun temp1049_120 () (_ BitVec 64))
(declare-fun temp1049_121 () (_ BitVec 64))
(declare-fun temp1049_122 () (_ BitVec 64))
(declare-fun temp1049_123 () (_ BitVec 64))
(declare-fun temp1049_124 () (_ BitVec 64))
(declare-fun temp1049_125 () (_ BitVec 64))
(declare-fun temp1049_126 () (_ BitVec 64))
(declare-fun temp1049_127 () (_ BitVec 64))
(declare-fun temp1049_128 () (_ BitVec 64))
(declare-fun temp1049_129 () (_ BitVec 64))
(declare-fun temp1049_130 () (_ BitVec 64))
(declare-fun temp1049_131 () (_ BitVec 64))
(declare-fun temp1049_132 () (_ BitVec 64))
(declare-fun temp1049_133 () (_ BitVec 64))
(declare-fun temp1049_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp1049_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp1049_136 () (_ BitVec 64))
(declare-fun temp1049_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp1049_138 () (_ BitVec 64))
(declare-fun temp1049_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1049_140 () (_ BitVec 64))
(declare-fun temp1049_141 () (_ BitVec 64))
(declare-fun temp1049_142 () (_ BitVec 64))
(declare-fun temp1049_143 () (_ BitVec 64))
(declare-fun temp1049_144 () (_ BitVec 64))
(declare-fun temp1049_145 () (_ BitVec 64))
(declare-fun temp1049_146 () (_ BitVec 64))
(declare-fun temp1049_147 () (_ BitVec 64))
(declare-fun temp1049_148 () (_ BitVec 64))
(declare-fun temp1049_149 () (_ BitVec 64))
(declare-fun temp1049_150 () (_ BitVec 64))
(declare-fun temp1049_151 () (_ BitVec 64))
(declare-fun temp1049_152 () (_ BitVec 64))
(declare-fun temp1049_153 () (_ BitVec 64))
(declare-fun temp1049_154 () (_ BitVec 64))
(declare-fun temp1049_155 () (_ BitVec 64))
(declare-fun temp1049_157 () (_ BitVec 64))
(declare-fun temp1049_158 () (_ BitVec 64))
(declare-fun temp1049_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp1049_159 () (_ BitVec 64))
(declare-fun temp1049_160 () (_ BitVec 64))
(declare-fun temp1049_162 () (_ BitVec 64))
(declare-fun temp1049_163 () (_ BitVec 64))
(declare-fun temp1049_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp1049_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp1049_165 () (_ BitVec 64))
(declare-fun temp1049_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp1049_167 () (_ BitVec 64))
(declare-fun temp1049_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp1049_169 () (_ BitVec 64))
(declare-fun temp1049_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1049_171 () (_ BitVec 64))
(declare-fun temp1049_172 () (_ BitVec 64))
(declare-fun temp1049_173 () (_ BitVec 64))
(declare-fun temp1049_174 () (_ BitVec 64))
(declare-fun temp1049_175 () (_ BitVec 64))
(declare-fun temp1049_176 () (_ BitVec 64))
(declare-fun temp1049_177 () (_ BitVec 64))
(declare-fun temp1049_178 () (_ BitVec 64))
(declare-fun temp1049_179 () (_ BitVec 64))
(declare-fun temp1049_180 () (_ BitVec 64))
(declare-fun temp1049_181 () (_ BitVec 64))
(declare-fun temp1049_182 () (_ BitVec 64))
(declare-fun temp1049_183 () (_ BitVec 64))
(declare-fun temp1049_184 () (_ BitVec 64))
(declare-fun temp1049_185 () (_ BitVec 64))
(declare-fun temp1049_186 () (_ BitVec 64))
(declare-fun temp1049_187 () (_ BitVec 64))
(declare-fun temp1049_188 () (_ BitVec 64))
(declare-fun temp1049_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp1049_190 () (_ BitVec 64))
(declare-fun temp1049_192 () (_ BitVec 64))
(declare-fun temp1049_193 () (_ BitVec 64))
(declare-fun temp1049_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp1049_194 () (_ BitVec 64))
(declare-fun temp1049_195 () (_ BitVec 64))
(declare-fun temp1049_197 () (_ BitVec 64))
(declare-fun temp1049_198 () (_ BitVec 64))
(declare-fun temp1049_196 () (_ BitVec 64))
(declare-fun temp1049_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp1049_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp1049_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp1049_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp1049_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp1049_204 () (_ BitVec 64))
(declare-fun temp1049_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp1049_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp1049_207 () (_ BitVec 64))
(declare-fun temp1049_208 () (_ BitVec 64))
(declare-fun temp1049_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp1049_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp1049_211 () (_ BitVec 64))
(declare-fun temp1049_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp1049_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp1049_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp1049_215 () (_ BitVec 64))
(assert (= temp1049_1 #x0000000000000001))
(assert (= var77203 temp1049_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp1049_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp1049_2)))
(assert (= temp1049_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1049_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1049_4 #x0000000000000000))
(assert (= var210941 temp1049_4))
(assert (= temp1049_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp1049_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1049_6 #x0000000000000000))
(assert (= var210986 temp1049_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp1049_7 #x0000000000000000))
(assert (= temp1049_8 temp1049_7))
(assert (= temp1049_9 (select ARGNAME_padding_NAMEEND_VAL temp1049_8)))
(assert (= temp1049_10 #x0000000000000001))
(assert (= temp1049_11 temp1049_10))
(assert (= temp1049_12 (select ARGNAME_padding_NAMEEND_VAL temp1049_11)))
(assert (= temp1049_13 #x0000000000000002))
(assert (= temp1049_14 temp1049_13))
(assert (= temp1049_15 (select ARGNAME_padding_NAMEEND_VAL temp1049_14)))
(assert (= temp1049_16 #x0000000000000003))
(assert (= temp1049_17 temp1049_16))
(assert (= temp1049_18 (select ARGNAME_padding_NAMEEND_VAL temp1049_17)))
(assert (= temp1049_19 #x0000000000000004))
(assert (= temp1049_20 temp1049_19))
(assert (= temp1049_21 (select ARGNAME_padding_NAMEEND_VAL temp1049_20)))
(assert (= temp1049_22 #x0000000000000005))
(assert (= temp1049_23 temp1049_22))
(assert (= temp1049_24 (select ARGNAME_padding_NAMEEND_VAL temp1049_23)))
(assert (= temp1049_25 #x0000000000000000))
(assert (= temp1049_26 #x0000000000000000))
(assert (= temp1049_27 temp1049_26))
(assert (= temp1049_28 (select ARGNAME_padding_NAMEEND_VAL temp1049_27)))
(assert (= temp1049_29 #x0000000000000000))
(assert (= temp1049_30 #x0000000000000001))
(assert (= temp1049_31 temp1049_30))
(assert (= temp1049_32 (select ARGNAME_padding_NAMEEND_VAL temp1049_31)))
(assert (= temp1049_33 #x0000000000000000))
(assert (= temp1049_34 #x0000000000000002))
(assert (= temp1049_35 temp1049_34))
(assert (= temp1049_36 (select ARGNAME_padding_NAMEEND_VAL temp1049_35)))
(assert (= temp1049_37 #x0000000000000000))
(assert (= temp1049_38 #x0000000000000003))
(assert (= temp1049_39 temp1049_38))
(assert (= temp1049_40 (select ARGNAME_padding_NAMEEND_VAL temp1049_39)))
(assert (= temp1049_41 #x0000000000000000))
(assert (= temp1049_42 #x0000000000000004))
(assert (= temp1049_43 temp1049_42))
(assert (= temp1049_44 (select ARGNAME_padding_NAMEEND_VAL temp1049_43)))
(assert (= temp1049_45 #x0000000000000000))
(assert (= temp1049_46 #x0000000000000005))
(assert (= temp1049_47 temp1049_46))
(assert (= temp1049_48 (select ARGNAME_padding_NAMEEND_VAL temp1049_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp1049_28 temp1049_25)
             (bvslt temp1049_32 temp1049_29)
             (bvslt temp1049_36 temp1049_33)
             (bvslt temp1049_40 temp1049_37)
             (bvslt temp1049_44 temp1049_41)
             (bvslt temp1049_48 temp1049_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1049_49 #x0000000000000000))
(assert (= var1191714 temp1049_49))
(assert (= temp1049_50 #x0000000000000000))
(assert (= temp1049_51 temp1049_50))
(assert (= temp1049_52 (select ARGNAME_output_padding_NAMEEND_VAL temp1049_51)))
(assert (= temp1049_53 #x0000000000000001))
(assert (= temp1049_54 temp1049_53))
(assert (= temp1049_55 (select ARGNAME_output_padding_NAMEEND_VAL temp1049_54)))
(assert (= temp1049_56 #x0000000000000002))
(assert (= temp1049_57 temp1049_56))
(assert (= temp1049_58 (select ARGNAME_output_padding_NAMEEND_VAL temp1049_57)))
(assert (= temp1049_59 #x0000000000000003))
(assert (= temp1049_60 temp1049_59))
(assert (= temp1049_61 (select ARGNAME_output_padding_NAMEEND_VAL temp1049_60)))
(assert (= temp1049_62 #x0000000000000004))
(assert (= temp1049_63 temp1049_62))
(assert (= temp1049_64 (select ARGNAME_output_padding_NAMEEND_VAL temp1049_63)))
(assert (= temp1049_65 #x0000000000000005))
(assert (= temp1049_66 temp1049_65))
(assert (= temp1049_67 (select ARGNAME_output_padding_NAMEEND_VAL temp1049_66)))
(assert (= temp1049_68 #x0000000000000000))
(assert (= temp1049_69 #x0000000000000000))
(assert (= temp1049_70 temp1049_69))
(assert (= temp1049_71 (select ARGNAME_output_padding_NAMEEND_VAL temp1049_70)))
(assert (= temp1049_72 #x0000000000000000))
(assert (= temp1049_73 #x0000000000000001))
(assert (= temp1049_74 temp1049_73))
(assert (= temp1049_75 (select ARGNAME_output_padding_NAMEEND_VAL temp1049_74)))
(assert (= temp1049_76 #x0000000000000000))
(assert (= temp1049_77 #x0000000000000002))
(assert (= temp1049_78 temp1049_77))
(assert (= temp1049_79 (select ARGNAME_output_padding_NAMEEND_VAL temp1049_78)))
(assert (= temp1049_80 #x0000000000000000))
(assert (= temp1049_81 #x0000000000000003))
(assert (= temp1049_82 temp1049_81))
(assert (= temp1049_83 (select ARGNAME_output_padding_NAMEEND_VAL temp1049_82)))
(assert (= temp1049_84 #x0000000000000000))
(assert (= temp1049_85 #x0000000000000004))
(assert (= temp1049_86 temp1049_85))
(assert (= temp1049_87 (select ARGNAME_output_padding_NAMEEND_VAL temp1049_86)))
(assert (= temp1049_88 #x0000000000000000))
(assert (= temp1049_89 #x0000000000000005))
(assert (= temp1049_90 temp1049_89))
(assert (= temp1049_91 (select ARGNAME_output_padding_NAMEEND_VAL temp1049_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp1049_71 temp1049_68)
             (bvslt temp1049_75 temp1049_72)
             (bvslt temp1049_79 temp1049_76)
             (bvslt temp1049_83 temp1049_80)
             (bvslt temp1049_87 temp1049_84)
             (bvslt temp1049_91 temp1049_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1049_92 #x0000000000000000))
(assert (= var1191725 temp1049_92))
(assert (= temp1049_93 #x0000000000000000))
(assert (= temp1049_94 temp1049_93))
(assert (= temp1049_95 (select ARGNAME_stride_NAMEEND_VAL temp1049_94)))
(assert (= temp1049_96 #x0000000000000001))
(assert (= temp1049_97 temp1049_96))
(assert (= temp1049_98 (select ARGNAME_stride_NAMEEND_VAL temp1049_97)))
(assert (= temp1049_99 #x0000000000000002))
(assert (= temp1049_100 temp1049_99))
(assert (= temp1049_101 (select ARGNAME_stride_NAMEEND_VAL temp1049_100)))
(assert (= temp1049_102 #x0000000000000003))
(assert (= temp1049_103 temp1049_102))
(assert (= temp1049_104 (select ARGNAME_stride_NAMEEND_VAL temp1049_103)))
(assert (= temp1049_105 #x0000000000000004))
(assert (= temp1049_106 temp1049_105))
(assert (= temp1049_107 (select ARGNAME_stride_NAMEEND_VAL temp1049_106)))
(assert (= temp1049_108 #x0000000000000005))
(assert (= temp1049_109 temp1049_108))
(assert (= temp1049_110 (select ARGNAME_stride_NAMEEND_VAL temp1049_109)))
(assert (= temp1049_111 #x0000000000000000))
(assert (= temp1049_112 #x0000000000000000))
(assert (= temp1049_113 temp1049_112))
(assert (= temp1049_114 (select ARGNAME_stride_NAMEEND_VAL temp1049_113)))
(assert (= temp1049_115 #x0000000000000000))
(assert (= temp1049_116 #x0000000000000001))
(assert (= temp1049_117 temp1049_116))
(assert (= temp1049_118 (select ARGNAME_stride_NAMEEND_VAL temp1049_117)))
(assert (= temp1049_119 #x0000000000000000))
(assert (= temp1049_120 #x0000000000000002))
(assert (= temp1049_121 temp1049_120))
(assert (= temp1049_122 (select ARGNAME_stride_NAMEEND_VAL temp1049_121)))
(assert (= temp1049_123 #x0000000000000000))
(assert (= temp1049_124 #x0000000000000003))
(assert (= temp1049_125 temp1049_124))
(assert (= temp1049_126 (select ARGNAME_stride_NAMEEND_VAL temp1049_125)))
(assert (= temp1049_127 #x0000000000000000))
(assert (= temp1049_128 #x0000000000000004))
(assert (= temp1049_129 temp1049_128))
(assert (= temp1049_130 (select ARGNAME_stride_NAMEEND_VAL temp1049_129)))
(assert (= temp1049_131 #x0000000000000000))
(assert (= temp1049_132 #x0000000000000005))
(assert (= temp1049_133 temp1049_132))
(assert (= temp1049_134 (select ARGNAME_stride_NAMEEND_VAL temp1049_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp1049_114 temp1049_111)
             (bvsle temp1049_118 temp1049_115)
             (bvsle temp1049_122 temp1049_119)
             (bvsle temp1049_126 temp1049_123)
             (bvsle temp1049_130 temp1049_127)
             (bvsle temp1049_134 temp1049_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1049_135 #x0000000000000000))
(assert (= var1191735 temp1049_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1049_136 #x0000000000000001))
(assert (= var1191747 temp1049_136))
(assert (= temp1049_137 #x0000000000000000))
(assert (= var1179826 temp1049_137))
(assert (= temp1049_138 #x0000000000000000))
(assert (= temp1049_139 temp1049_138))
(assert (= temp1049_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1049_139)))
(assert (= temp1049_141 #x0000000000000001))
(assert (= temp1049_142 temp1049_141))
(assert (= temp1049_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1049_142)))
(assert (= temp1049_144 #x0000000000000002))
(assert (= temp1049_145 temp1049_144))
(assert (= temp1049_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1049_145)))
(assert (= temp1049_147 #x0000000000000003))
(assert (= temp1049_148 temp1049_147))
(assert (= temp1049_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1049_148)))
(assert (= temp1049_150 #x0000000000000004))
(assert (= temp1049_151 temp1049_150))
(assert (= temp1049_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1049_151)))
(assert (= temp1049_153 #x0000000000000005))
(assert (= temp1049_154 temp1049_153))
(assert (= temp1049_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1049_154)))
(assert (= temp1049_157 var1179826))
(assert (= temp1049_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1049_157)))
(assert (= temp1049_156 temp1049_158))
(assert (= var1191780
   (ite (bvslt temp1049_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1049_159 #x0000000000000000))
(assert (= var1191780 temp1049_159))
(assert (= temp1049_160 #x0000000000000000))
(assert (= var1179826 temp1049_160))
(assert (= temp1049_162 var1179826))
(assert (= temp1049_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1049_162)))
(assert (= temp1049_161 temp1049_163))
(assert (= var1191802 (bvsmod temp1049_161 ARGNAME_groups_NAMEEND)))
(assert (= temp1049_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp1049_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp1049_165 #x0000000000000001))
(assert (= var1191803 temp1049_165))
(assert (= temp1049_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp1049_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1049_167 #x0000000000000001))
(assert (= var1191823 temp1049_167))
(assert (= temp1049_168 #x0000000000000001))
(assert (= var1180714 temp1049_168))
(assert (= temp1049_169 #x0000000000000000))
(assert (= temp1049_170 temp1049_169))
(assert (= temp1049_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp1049_170)))
(assert (= temp1049_172 #x0000000000000001))
(assert (= temp1049_173 temp1049_172))
(assert (= temp1049_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp1049_173)))
(assert (= temp1049_175 #x0000000000000002))
(assert (= temp1049_176 temp1049_175))
(assert (= temp1049_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp1049_176)))
(assert (= temp1049_178 #x0000000000000003))
(assert (= temp1049_179 temp1049_178))
(assert (= temp1049_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp1049_179)))
(assert (= temp1049_181 #x0000000000000004))
(assert (= temp1049_182 temp1049_181))
(assert (= temp1049_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp1049_182)))
(assert (= temp1049_184 #x0000000000000005))
(assert (= temp1049_185 temp1049_184))
(assert (= temp1049_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp1049_185)))
(assert (= temp1049_187 #x0000000000000000))
(assert (= temp1049_188
   (ite (bvslt var1180714 temp1049_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp1049_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp1049_188)))
(assert (= var1191831 temp1049_189))
(assert (bvslt (ite (bvslt var1180714 temp1049_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1049_190 #x0000000000000001))
(assert (= var1180714 temp1049_190))
(assert (= temp1049_192 var1180714))
(assert (= temp1049_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1049_192)))
(assert (= temp1049_191 temp1049_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp1049_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp1049_194 #x0000000000000001))
(assert (= var1191836 temp1049_194))
(assert (= temp1049_195 #x0000000000000000))
(assert (= var1179826 temp1049_195))
(assert (= temp1049_197 var1179826))
(assert (= temp1049_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1049_197)))
(assert (= temp1049_196 temp1049_198))
(assert (= temp1049_199 #x0000000000000002))
(assert (= var1586025 temp1049_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp1049_200 #x0000000000000001))
(assert (= var1191993 temp1049_200))
(assert (= temp1049_201 #x0000000000000001))
(assert (= var2700303 temp1049_201))
(assert (= temp1049_202 #x0000000000000001))
(assert (= var2962447 temp1049_202))
(assert (= temp1049_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1049_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1049_204 #x0000000000000001))
(assert (= var211058 temp1049_204))
(assert (= temp1049_205 #x0000000000000001))
(assert (= var211188 temp1049_205))
(assert (= var3879401 var211188))
(assert (= temp1049_206 #x0000000000000000))
(assert (= var3866802 temp1049_206))
(assert (= temp1049_207 #x0000000000000000))
(assert (= temp1049_208
   (ite (bvslt var3866802 temp1049_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp1049_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp1049_208)))
(assert (= var3879420 temp1049_209))
(assert (bvslt (ite (bvslt var3866802 temp1049_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1049_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp1049_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp1049_211 #x0000000000000001))
(assert (= var3879421 temp1049_211))
(assert (= temp1049_212 #x0000000000000000))
(assert (= var4079423 temp1049_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp1049_213 #x0000000000000002))
(assert (= var4208259 temp1049_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1049_214 #x0000000000000000))
(assert (= var4273820 temp1049_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp1049_215 #x0000000000000001))
(assert (= var211058 temp1049_215))
(model-add temp1049_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp1049_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1049_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp1049_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




