(declare-fun temp196_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp196_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp196_3 () (_ BitVec 64))
(declare-fun temp196_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp196_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp196_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp196_7 () (_ BitVec 64))
(declare-fun temp196_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp196_9 () (_ BitVec 64))
(declare-fun temp196_10 () (_ BitVec 64))
(declare-fun temp196_11 () (_ BitVec 64))
(declare-fun temp196_12 () (_ BitVec 64))
(declare-fun temp196_13 () (_ BitVec 64))
(declare-fun temp196_14 () (_ BitVec 64))
(declare-fun temp196_15 () (_ BitVec 64))
(declare-fun temp196_16 () (_ BitVec 64))
(declare-fun temp196_17 () (_ BitVec 64))
(declare-fun temp196_18 () (_ BitVec 64))
(declare-fun temp196_19 () (_ BitVec 64))
(declare-fun temp196_20 () (_ BitVec 64))
(declare-fun temp196_21 () (_ BitVec 64))
(declare-fun temp196_22 () (_ BitVec 64))
(declare-fun temp196_23 () (_ BitVec 64))
(declare-fun temp196_24 () (_ BitVec 64))
(declare-fun temp196_25 () (_ BitVec 64))
(declare-fun temp196_26 () (_ BitVec 64))
(declare-fun temp196_27 () (_ BitVec 64))
(declare-fun temp196_28 () (_ BitVec 64))
(declare-fun temp196_29 () (_ BitVec 64))
(declare-fun temp196_30 () (_ BitVec 64))
(declare-fun temp196_31 () (_ BitVec 64))
(declare-fun temp196_32 () (_ BitVec 64))
(declare-fun temp196_33 () (_ BitVec 64))
(declare-fun temp196_34 () (_ BitVec 64))
(declare-fun temp196_35 () (_ BitVec 64))
(declare-fun temp196_36 () (_ BitVec 64))
(declare-fun temp196_37 () (_ BitVec 64))
(declare-fun temp196_38 () (_ BitVec 64))
(declare-fun temp196_39 () (_ BitVec 64))
(declare-fun temp196_40 () (_ BitVec 64))
(declare-fun temp196_41 () (_ BitVec 64))
(declare-fun temp196_42 () (_ BitVec 64))
(declare-fun temp196_43 () (_ BitVec 64))
(declare-fun temp196_44 () (_ BitVec 64))
(declare-fun temp196_45 () (_ BitVec 64))
(declare-fun temp196_46 () (_ BitVec 64))
(declare-fun temp196_47 () (_ BitVec 64))
(declare-fun temp196_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp196_49 () (_ BitVec 64))
(declare-fun temp196_50 () (_ BitVec 64))
(declare-fun temp196_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp196_52 () (_ BitVec 64))
(declare-fun temp196_53 () (_ BitVec 64))
(declare-fun temp196_54 () (_ BitVec 64))
(declare-fun temp196_55 () (_ BitVec 64))
(declare-fun temp196_56 () (_ BitVec 64))
(declare-fun temp196_57 () (_ BitVec 64))
(declare-fun temp196_58 () (_ BitVec 64))
(declare-fun temp196_59 () (_ BitVec 64))
(declare-fun temp196_60 () (_ BitVec 64))
(declare-fun temp196_61 () (_ BitVec 64))
(declare-fun temp196_62 () (_ BitVec 64))
(declare-fun temp196_63 () (_ BitVec 64))
(declare-fun temp196_64 () (_ BitVec 64))
(declare-fun temp196_65 () (_ BitVec 64))
(declare-fun temp196_66 () (_ BitVec 64))
(declare-fun temp196_67 () (_ BitVec 64))
(declare-fun temp196_68 () (_ BitVec 64))
(declare-fun temp196_69 () (_ BitVec 64))
(declare-fun temp196_70 () (_ BitVec 64))
(declare-fun temp196_71 () (_ BitVec 64))
(declare-fun temp196_72 () (_ BitVec 64))
(declare-fun temp196_73 () (_ BitVec 64))
(declare-fun temp196_74 () (_ BitVec 64))
(declare-fun temp196_75 () (_ BitVec 64))
(declare-fun temp196_76 () (_ BitVec 64))
(declare-fun temp196_77 () (_ BitVec 64))
(declare-fun temp196_78 () (_ BitVec 64))
(declare-fun temp196_79 () (_ BitVec 64))
(declare-fun temp196_80 () (_ BitVec 64))
(declare-fun temp196_81 () (_ BitVec 64))
(declare-fun temp196_82 () (_ BitVec 64))
(declare-fun temp196_83 () (_ BitVec 64))
(declare-fun temp196_84 () (_ BitVec 64))
(declare-fun temp196_85 () (_ BitVec 64))
(declare-fun temp196_86 () (_ BitVec 64))
(declare-fun temp196_87 () (_ BitVec 64))
(declare-fun temp196_88 () (_ BitVec 64))
(declare-fun temp196_89 () (_ BitVec 64))
(declare-fun temp196_90 () (_ BitVec 64))
(declare-fun temp196_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp196_92 () (_ BitVec 64))
(declare-fun temp196_93 () (_ BitVec 64))
(declare-fun temp196_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp196_95 () (_ BitVec 64))
(declare-fun temp196_96 () (_ BitVec 64))
(declare-fun temp196_97 () (_ BitVec 64))
(declare-fun temp196_98 () (_ BitVec 64))
(declare-fun temp196_99 () (_ BitVec 64))
(declare-fun temp196_100 () (_ BitVec 64))
(declare-fun temp196_101 () (_ BitVec 64))
(declare-fun temp196_102 () (_ BitVec 64))
(declare-fun temp196_103 () (_ BitVec 64))
(declare-fun temp196_104 () (_ BitVec 64))
(declare-fun temp196_105 () (_ BitVec 64))
(declare-fun temp196_106 () (_ BitVec 64))
(declare-fun temp196_107 () (_ BitVec 64))
(declare-fun temp196_108 () (_ BitVec 64))
(declare-fun temp196_109 () (_ BitVec 64))
(declare-fun temp196_110 () (_ BitVec 64))
(declare-fun temp196_111 () (_ BitVec 64))
(declare-fun temp196_112 () (_ BitVec 64))
(declare-fun temp196_113 () (_ BitVec 64))
(declare-fun temp196_114 () (_ BitVec 64))
(declare-fun temp196_115 () (_ BitVec 64))
(declare-fun temp196_116 () (_ BitVec 64))
(declare-fun temp196_117 () (_ BitVec 64))
(declare-fun temp196_118 () (_ BitVec 64))
(declare-fun temp196_119 () (_ BitVec 64))
(declare-fun temp196_120 () (_ BitVec 64))
(declare-fun temp196_121 () (_ BitVec 64))
(declare-fun temp196_122 () (_ BitVec 64))
(declare-fun temp196_123 () (_ BitVec 64))
(declare-fun temp196_124 () (_ BitVec 64))
(declare-fun temp196_125 () (_ BitVec 64))
(declare-fun temp196_126 () (_ BitVec 64))
(declare-fun temp196_127 () (_ BitVec 64))
(declare-fun temp196_128 () (_ BitVec 64))
(declare-fun temp196_129 () (_ BitVec 64))
(declare-fun temp196_130 () (_ BitVec 64))
(declare-fun temp196_131 () (_ BitVec 64))
(declare-fun temp196_132 () (_ BitVec 64))
(declare-fun temp196_133 () (_ BitVec 64))
(declare-fun temp196_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp196_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp196_136 () (_ BitVec 64))
(declare-fun temp196_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp196_138 () (_ BitVec 64))
(declare-fun temp196_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp196_140 () (_ BitVec 64))
(declare-fun temp196_141 () (_ BitVec 64))
(declare-fun temp196_142 () (_ BitVec 64))
(declare-fun temp196_143 () (_ BitVec 64))
(declare-fun temp196_144 () (_ BitVec 64))
(declare-fun temp196_145 () (_ BitVec 64))
(declare-fun temp196_146 () (_ BitVec 64))
(declare-fun temp196_147 () (_ BitVec 64))
(declare-fun temp196_148 () (_ BitVec 64))
(declare-fun temp196_149 () (_ BitVec 64))
(declare-fun temp196_150 () (_ BitVec 64))
(declare-fun temp196_151 () (_ BitVec 64))
(declare-fun temp196_152 () (_ BitVec 64))
(declare-fun temp196_153 () (_ BitVec 64))
(declare-fun temp196_154 () (_ BitVec 64))
(declare-fun temp196_155 () (_ BitVec 64))
(declare-fun temp196_157 () (_ BitVec 64))
(declare-fun temp196_158 () (_ BitVec 64))
(declare-fun temp196_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp196_159 () (_ BitVec 64))
(declare-fun temp196_160 () (_ BitVec 64))
(declare-fun temp196_162 () (_ BitVec 64))
(declare-fun temp196_163 () (_ BitVec 64))
(declare-fun temp196_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp196_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp196_165 () (_ BitVec 64))
(declare-fun temp196_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp196_167 () (_ BitVec 64))
(declare-fun temp196_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp196_169 () (_ BitVec 64))
(declare-fun temp196_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp196_171 () (_ BitVec 64))
(declare-fun temp196_172 () (_ BitVec 64))
(declare-fun temp196_173 () (_ BitVec 64))
(declare-fun temp196_174 () (_ BitVec 64))
(declare-fun temp196_175 () (_ BitVec 64))
(declare-fun temp196_176 () (_ BitVec 64))
(declare-fun temp196_177 () (_ BitVec 64))
(declare-fun temp196_178 () (_ BitVec 64))
(declare-fun temp196_179 () (_ BitVec 64))
(declare-fun temp196_180 () (_ BitVec 64))
(declare-fun temp196_181 () (_ BitVec 64))
(declare-fun temp196_182 () (_ BitVec 64))
(declare-fun temp196_183 () (_ BitVec 64))
(declare-fun temp196_184 () (_ BitVec 64))
(declare-fun temp196_185 () (_ BitVec 64))
(declare-fun temp196_186 () (_ BitVec 64))
(declare-fun temp196_187 () (_ BitVec 64))
(declare-fun temp196_188 () (_ BitVec 64))
(declare-fun temp196_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp196_190 () (_ BitVec 64))
(declare-fun temp196_192 () (_ BitVec 64))
(declare-fun temp196_193 () (_ BitVec 64))
(declare-fun temp196_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp196_194 () (_ BitVec 64))
(declare-fun temp196_195 () (_ BitVec 64))
(declare-fun temp196_197 () (_ BitVec 64))
(declare-fun temp196_198 () (_ BitVec 64))
(declare-fun temp196_196 () (_ BitVec 64))
(declare-fun temp196_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp196_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp196_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp196_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp196_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp196_204 () (_ BitVec 64))
(declare-fun temp196_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp196_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp196_207 () (_ BitVec 64))
(declare-fun temp196_208 () (_ BitVec 64))
(declare-fun temp196_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp196_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp196_211 () (_ BitVec 64))
(declare-fun temp196_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp196_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp196_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp196_216 () (_ BitVec 64))
(declare-fun temp196_215 () (_ BitVec 64))
(declare-fun temp196_217 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp196_218 () (_ BitVec 64))
(declare-fun temp196_219 () (_ BitVec 64))
(declare-fun temp196_220 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp196_221 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp196_222 () (_ BitVec 64))
(declare-fun temp196_223 () (_ BitVec 64))
(declare-fun temp196_224 () (_ BitVec 64))
(declare-fun var5452564 () (_ BitVec 64))
(declare-fun var5452531 () (_ BitVec 64))
(declare-fun var5321095 () (_ BitVec 64))
(declare-fun var5321091 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp196_225 () (_ BitVec 64))
(assert (= temp196_1 #x0000000000000001))
(assert (= var77203 temp196_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp196_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp196_2)))
(assert (= temp196_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp196_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp196_4 #x0000000000000000))
(assert (= var210941 temp196_4))
(assert (= temp196_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp196_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp196_6 #x0000000000000000))
(assert (= var210986 temp196_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp196_7 #x0000000000000000))
(assert (= temp196_8 temp196_7))
(assert (= temp196_9 (select ARGNAME_padding_NAMEEND_VAL temp196_8)))
(assert (= temp196_10 #x0000000000000001))
(assert (= temp196_11 temp196_10))
(assert (= temp196_12 (select ARGNAME_padding_NAMEEND_VAL temp196_11)))
(assert (= temp196_13 #x0000000000000002))
(assert (= temp196_14 temp196_13))
(assert (= temp196_15 (select ARGNAME_padding_NAMEEND_VAL temp196_14)))
(assert (= temp196_16 #x0000000000000003))
(assert (= temp196_17 temp196_16))
(assert (= temp196_18 (select ARGNAME_padding_NAMEEND_VAL temp196_17)))
(assert (= temp196_19 #x0000000000000004))
(assert (= temp196_20 temp196_19))
(assert (= temp196_21 (select ARGNAME_padding_NAMEEND_VAL temp196_20)))
(assert (= temp196_22 #x0000000000000005))
(assert (= temp196_23 temp196_22))
(assert (= temp196_24 (select ARGNAME_padding_NAMEEND_VAL temp196_23)))
(assert (= temp196_25 #x0000000000000000))
(assert (= temp196_26 #x0000000000000000))
(assert (= temp196_27 temp196_26))
(assert (= temp196_28 (select ARGNAME_padding_NAMEEND_VAL temp196_27)))
(assert (= temp196_29 #x0000000000000000))
(assert (= temp196_30 #x0000000000000001))
(assert (= temp196_31 temp196_30))
(assert (= temp196_32 (select ARGNAME_padding_NAMEEND_VAL temp196_31)))
(assert (= temp196_33 #x0000000000000000))
(assert (= temp196_34 #x0000000000000002))
(assert (= temp196_35 temp196_34))
(assert (= temp196_36 (select ARGNAME_padding_NAMEEND_VAL temp196_35)))
(assert (= temp196_37 #x0000000000000000))
(assert (= temp196_38 #x0000000000000003))
(assert (= temp196_39 temp196_38))
(assert (= temp196_40 (select ARGNAME_padding_NAMEEND_VAL temp196_39)))
(assert (= temp196_41 #x0000000000000000))
(assert (= temp196_42 #x0000000000000004))
(assert (= temp196_43 temp196_42))
(assert (= temp196_44 (select ARGNAME_padding_NAMEEND_VAL temp196_43)))
(assert (= temp196_45 #x0000000000000000))
(assert (= temp196_46 #x0000000000000005))
(assert (= temp196_47 temp196_46))
(assert (= temp196_48 (select ARGNAME_padding_NAMEEND_VAL temp196_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp196_28 temp196_25)
             (bvslt temp196_32 temp196_29)
             (bvslt temp196_36 temp196_33)
             (bvslt temp196_40 temp196_37)
             (bvslt temp196_44 temp196_41)
             (bvslt temp196_48 temp196_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp196_49 #x0000000000000000))
(assert (= var1191714 temp196_49))
(assert (= temp196_50 #x0000000000000000))
(assert (= temp196_51 temp196_50))
(assert (= temp196_52 (select ARGNAME_output_padding_NAMEEND_VAL temp196_51)))
(assert (= temp196_53 #x0000000000000001))
(assert (= temp196_54 temp196_53))
(assert (= temp196_55 (select ARGNAME_output_padding_NAMEEND_VAL temp196_54)))
(assert (= temp196_56 #x0000000000000002))
(assert (= temp196_57 temp196_56))
(assert (= temp196_58 (select ARGNAME_output_padding_NAMEEND_VAL temp196_57)))
(assert (= temp196_59 #x0000000000000003))
(assert (= temp196_60 temp196_59))
(assert (= temp196_61 (select ARGNAME_output_padding_NAMEEND_VAL temp196_60)))
(assert (= temp196_62 #x0000000000000004))
(assert (= temp196_63 temp196_62))
(assert (= temp196_64 (select ARGNAME_output_padding_NAMEEND_VAL temp196_63)))
(assert (= temp196_65 #x0000000000000005))
(assert (= temp196_66 temp196_65))
(assert (= temp196_67 (select ARGNAME_output_padding_NAMEEND_VAL temp196_66)))
(assert (= temp196_68 #x0000000000000000))
(assert (= temp196_69 #x0000000000000000))
(assert (= temp196_70 temp196_69))
(assert (= temp196_71 (select ARGNAME_output_padding_NAMEEND_VAL temp196_70)))
(assert (= temp196_72 #x0000000000000000))
(assert (= temp196_73 #x0000000000000001))
(assert (= temp196_74 temp196_73))
(assert (= temp196_75 (select ARGNAME_output_padding_NAMEEND_VAL temp196_74)))
(assert (= temp196_76 #x0000000000000000))
(assert (= temp196_77 #x0000000000000002))
(assert (= temp196_78 temp196_77))
(assert (= temp196_79 (select ARGNAME_output_padding_NAMEEND_VAL temp196_78)))
(assert (= temp196_80 #x0000000000000000))
(assert (= temp196_81 #x0000000000000003))
(assert (= temp196_82 temp196_81))
(assert (= temp196_83 (select ARGNAME_output_padding_NAMEEND_VAL temp196_82)))
(assert (= temp196_84 #x0000000000000000))
(assert (= temp196_85 #x0000000000000004))
(assert (= temp196_86 temp196_85))
(assert (= temp196_87 (select ARGNAME_output_padding_NAMEEND_VAL temp196_86)))
(assert (= temp196_88 #x0000000000000000))
(assert (= temp196_89 #x0000000000000005))
(assert (= temp196_90 temp196_89))
(assert (= temp196_91 (select ARGNAME_output_padding_NAMEEND_VAL temp196_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp196_71 temp196_68)
             (bvslt temp196_75 temp196_72)
             (bvslt temp196_79 temp196_76)
             (bvslt temp196_83 temp196_80)
             (bvslt temp196_87 temp196_84)
             (bvslt temp196_91 temp196_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp196_92 #x0000000000000000))
(assert (= var1191725 temp196_92))
(assert (= temp196_93 #x0000000000000000))
(assert (= temp196_94 temp196_93))
(assert (= temp196_95 (select ARGNAME_stride_NAMEEND_VAL temp196_94)))
(assert (= temp196_96 #x0000000000000001))
(assert (= temp196_97 temp196_96))
(assert (= temp196_98 (select ARGNAME_stride_NAMEEND_VAL temp196_97)))
(assert (= temp196_99 #x0000000000000002))
(assert (= temp196_100 temp196_99))
(assert (= temp196_101 (select ARGNAME_stride_NAMEEND_VAL temp196_100)))
(assert (= temp196_102 #x0000000000000003))
(assert (= temp196_103 temp196_102))
(assert (= temp196_104 (select ARGNAME_stride_NAMEEND_VAL temp196_103)))
(assert (= temp196_105 #x0000000000000004))
(assert (= temp196_106 temp196_105))
(assert (= temp196_107 (select ARGNAME_stride_NAMEEND_VAL temp196_106)))
(assert (= temp196_108 #x0000000000000005))
(assert (= temp196_109 temp196_108))
(assert (= temp196_110 (select ARGNAME_stride_NAMEEND_VAL temp196_109)))
(assert (= temp196_111 #x0000000000000000))
(assert (= temp196_112 #x0000000000000000))
(assert (= temp196_113 temp196_112))
(assert (= temp196_114 (select ARGNAME_stride_NAMEEND_VAL temp196_113)))
(assert (= temp196_115 #x0000000000000000))
(assert (= temp196_116 #x0000000000000001))
(assert (= temp196_117 temp196_116))
(assert (= temp196_118 (select ARGNAME_stride_NAMEEND_VAL temp196_117)))
(assert (= temp196_119 #x0000000000000000))
(assert (= temp196_120 #x0000000000000002))
(assert (= temp196_121 temp196_120))
(assert (= temp196_122 (select ARGNAME_stride_NAMEEND_VAL temp196_121)))
(assert (= temp196_123 #x0000000000000000))
(assert (= temp196_124 #x0000000000000003))
(assert (= temp196_125 temp196_124))
(assert (= temp196_126 (select ARGNAME_stride_NAMEEND_VAL temp196_125)))
(assert (= temp196_127 #x0000000000000000))
(assert (= temp196_128 #x0000000000000004))
(assert (= temp196_129 temp196_128))
(assert (= temp196_130 (select ARGNAME_stride_NAMEEND_VAL temp196_129)))
(assert (= temp196_131 #x0000000000000000))
(assert (= temp196_132 #x0000000000000005))
(assert (= temp196_133 temp196_132))
(assert (= temp196_134 (select ARGNAME_stride_NAMEEND_VAL temp196_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp196_114 temp196_111)
             (bvsle temp196_118 temp196_115)
             (bvsle temp196_122 temp196_119)
             (bvsle temp196_126 temp196_123)
             (bvsle temp196_130 temp196_127)
             (bvsle temp196_134 temp196_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp196_135 #x0000000000000000))
(assert (= var1191735 temp196_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp196_136 #x0000000000000001))
(assert (= var1191747 temp196_136))
(assert (= temp196_137 #x0000000000000000))
(assert (= var1179826 temp196_137))
(assert (= temp196_138 #x0000000000000000))
(assert (= temp196_139 temp196_138))
(assert (= temp196_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp196_139)))
(assert (= temp196_141 #x0000000000000001))
(assert (= temp196_142 temp196_141))
(assert (= temp196_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp196_142)))
(assert (= temp196_144 #x0000000000000002))
(assert (= temp196_145 temp196_144))
(assert (= temp196_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp196_145)))
(assert (= temp196_147 #x0000000000000003))
(assert (= temp196_148 temp196_147))
(assert (= temp196_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp196_148)))
(assert (= temp196_150 #x0000000000000004))
(assert (= temp196_151 temp196_150))
(assert (= temp196_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp196_151)))
(assert (= temp196_153 #x0000000000000005))
(assert (= temp196_154 temp196_153))
(assert (= temp196_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp196_154)))
(assert (= temp196_157 var1179826))
(assert (= temp196_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp196_157)))
(assert (= temp196_156 temp196_158))
(assert (= var1191780
   (ite (bvslt temp196_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp196_159 #x0000000000000000))
(assert (= var1191780 temp196_159))
(assert (= temp196_160 #x0000000000000000))
(assert (= var1179826 temp196_160))
(assert (= temp196_162 var1179826))
(assert (= temp196_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp196_162)))
(assert (= temp196_161 temp196_163))
(assert (= var1191802 (bvsmod temp196_161 ARGNAME_groups_NAMEEND)))
(assert (= temp196_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp196_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp196_165 #x0000000000000001))
(assert (= var1191803 temp196_165))
(assert (= temp196_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp196_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp196_167 #x0000000000000001))
(assert (= var1191823 temp196_167))
(assert (= temp196_168 #x0000000000000001))
(assert (= var1180714 temp196_168))
(assert (= temp196_169 #x0000000000000000))
(assert (= temp196_170 temp196_169))
(assert (= temp196_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp196_170)))
(assert (= temp196_172 #x0000000000000001))
(assert (= temp196_173 temp196_172))
(assert (= temp196_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp196_173)))
(assert (= temp196_175 #x0000000000000002))
(assert (= temp196_176 temp196_175))
(assert (= temp196_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp196_176)))
(assert (= temp196_178 #x0000000000000003))
(assert (= temp196_179 temp196_178))
(assert (= temp196_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp196_179)))
(assert (= temp196_181 #x0000000000000004))
(assert (= temp196_182 temp196_181))
(assert (= temp196_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp196_182)))
(assert (= temp196_184 #x0000000000000005))
(assert (= temp196_185 temp196_184))
(assert (= temp196_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp196_185)))
(assert (= temp196_187 #x0000000000000000))
(assert (= temp196_188
   (ite (bvslt var1180714 temp196_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp196_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp196_188)))
(assert (= var1191831 temp196_189))
(assert (bvslt (ite (bvslt var1180714 temp196_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp196_190 #x0000000000000001))
(assert (= var1180714 temp196_190))
(assert (= temp196_192 var1180714))
(assert (= temp196_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp196_192)))
(assert (= temp196_191 temp196_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp196_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp196_194 #x0000000000000001))
(assert (= var1191836 temp196_194))
(assert (= temp196_195 #x0000000000000000))
(assert (= var1179826 temp196_195))
(assert (= temp196_197 var1179826))
(assert (= temp196_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp196_197)))
(assert (= temp196_196 temp196_198))
(assert (= temp196_199 #x0000000000000002))
(assert (= var1586025 temp196_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp196_200 #x0000000000000001))
(assert (= var1191993 temp196_200))
(assert (= temp196_201 #x0000000000000001))
(assert (= var2700303 temp196_201))
(assert (= temp196_202 #x0000000000000001))
(assert (= var2962447 temp196_202))
(assert (= temp196_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp196_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp196_204 #x0000000000000001))
(assert (= var211058 temp196_204))
(assert (= temp196_205 #x0000000000000001))
(assert (= var211188 temp196_205))
(assert (= var3879401 var211188))
(assert (= temp196_206 #x0000000000000000))
(assert (= var3866802 temp196_206))
(assert (= temp196_207 #x0000000000000000))
(assert (= temp196_208
   (ite (bvslt var3866802 temp196_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp196_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp196_208)))
(assert (= var3879420 temp196_209))
(assert (bvslt (ite (bvslt var3866802 temp196_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp196_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp196_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp196_211 #x0000000000000001))
(assert (= var3879421 temp196_211))
(assert (= temp196_212 #x0000000000000000))
(assert (= var4079423 temp196_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp196_213 #x0000000000000002))
(assert (= var4208259 temp196_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp196_214 #x0000000000000000))
(assert (= var4273820 temp196_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp196_216 #xffffffffffffffff))
(assert (= temp196_215 temp196_216))
(assert (= temp196_217 #x0000000000000001))
(assert (= var197674 temp196_217))
(assert (= temp196_218 #x0000000000000000))
(assert (= temp196_219
   (ite (bvslt var197674 temp196_218)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp196_220 (select ARGNAME_input_NAMEEND_DIMSIZE temp196_219)))
(assert (= var211595 temp196_220))
(assert (bvslt (ite (bvslt var197674 temp196_218)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp196_221 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp196_221) #x0000000000000001 #x0000000000000000)))
(assert (= temp196_222 #x0000000000000000))
(assert (= var211596 temp196_222))
(assert (= temp196_223 #x0000000000000001))
(assert (= var211058 temp196_223))
(assert (= temp196_224 #x0000000000000000))
(assert (= var5452564 temp196_224))
(assert (= var5452531 var5452564))
(assert (= var5321095 var5452531))
(assert (= var5321091 var5321095))
(assert (= var212669 var5321091))
(assert (= temp196_225 #x0000000000000000))
(assert (= var212669 temp196_225))
(model-add temp196_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp196_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp196_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp196_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





