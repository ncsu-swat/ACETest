(declare-fun temp10848_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10848_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10848_3 () (_ BitVec 64))
(declare-fun temp10848_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10848_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10848_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10848_7 () (_ BitVec 64))
(declare-fun temp10848_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10848_9 () (_ BitVec 64))
(declare-fun temp10848_10 () (_ BitVec 64))
(declare-fun temp10848_11 () (_ BitVec 64))
(declare-fun temp10848_12 () (_ BitVec 64))
(declare-fun temp10848_13 () (_ BitVec 64))
(declare-fun temp10848_14 () (_ BitVec 64))
(declare-fun temp10848_15 () (_ BitVec 64))
(declare-fun temp10848_16 () (_ BitVec 64))
(declare-fun temp10848_17 () (_ BitVec 64))
(declare-fun temp10848_18 () (_ BitVec 64))
(declare-fun temp10848_19 () (_ BitVec 64))
(declare-fun temp10848_20 () (_ BitVec 64))
(declare-fun temp10848_21 () (_ BitVec 64))
(declare-fun temp10848_22 () (_ BitVec 64))
(declare-fun temp10848_23 () (_ BitVec 64))
(declare-fun temp10848_24 () (_ BitVec 64))
(declare-fun temp10848_25 () (_ BitVec 64))
(declare-fun temp10848_26 () (_ BitVec 64))
(declare-fun temp10848_27 () (_ BitVec 64))
(declare-fun temp10848_28 () (_ BitVec 64))
(declare-fun temp10848_29 () (_ BitVec 64))
(declare-fun temp10848_30 () (_ BitVec 64))
(declare-fun temp10848_31 () (_ BitVec 64))
(declare-fun temp10848_32 () (_ BitVec 64))
(declare-fun temp10848_33 () (_ BitVec 64))
(declare-fun temp10848_34 () (_ BitVec 64))
(declare-fun temp10848_35 () (_ BitVec 64))
(declare-fun temp10848_36 () (_ BitVec 64))
(declare-fun temp10848_37 () (_ BitVec 64))
(declare-fun temp10848_38 () (_ BitVec 64))
(declare-fun temp10848_39 () (_ BitVec 64))
(declare-fun temp10848_40 () (_ BitVec 64))
(declare-fun temp10848_41 () (_ BitVec 64))
(declare-fun temp10848_42 () (_ BitVec 64))
(declare-fun temp10848_43 () (_ BitVec 64))
(declare-fun temp10848_44 () (_ BitVec 64))
(declare-fun temp10848_45 () (_ BitVec 64))
(declare-fun temp10848_46 () (_ BitVec 64))
(declare-fun temp10848_47 () (_ BitVec 64))
(declare-fun temp10848_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10848_49 () (_ BitVec 64))
(declare-fun temp10848_50 () (_ BitVec 64))
(declare-fun temp10848_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10848_52 () (_ BitVec 64))
(declare-fun temp10848_53 () (_ BitVec 64))
(declare-fun temp10848_54 () (_ BitVec 64))
(declare-fun temp10848_55 () (_ BitVec 64))
(declare-fun temp10848_56 () (_ BitVec 64))
(declare-fun temp10848_57 () (_ BitVec 64))
(declare-fun temp10848_58 () (_ BitVec 64))
(declare-fun temp10848_59 () (_ BitVec 64))
(declare-fun temp10848_60 () (_ BitVec 64))
(declare-fun temp10848_61 () (_ BitVec 64))
(declare-fun temp10848_62 () (_ BitVec 64))
(declare-fun temp10848_63 () (_ BitVec 64))
(declare-fun temp10848_64 () (_ BitVec 64))
(declare-fun temp10848_65 () (_ BitVec 64))
(declare-fun temp10848_66 () (_ BitVec 64))
(declare-fun temp10848_67 () (_ BitVec 64))
(declare-fun temp10848_68 () (_ BitVec 64))
(declare-fun temp10848_69 () (_ BitVec 64))
(declare-fun temp10848_70 () (_ BitVec 64))
(declare-fun temp10848_71 () (_ BitVec 64))
(declare-fun temp10848_72 () (_ BitVec 64))
(declare-fun temp10848_73 () (_ BitVec 64))
(declare-fun temp10848_74 () (_ BitVec 64))
(declare-fun temp10848_75 () (_ BitVec 64))
(declare-fun temp10848_76 () (_ BitVec 64))
(declare-fun temp10848_77 () (_ BitVec 64))
(declare-fun temp10848_78 () (_ BitVec 64))
(declare-fun temp10848_79 () (_ BitVec 64))
(declare-fun temp10848_80 () (_ BitVec 64))
(declare-fun temp10848_81 () (_ BitVec 64))
(declare-fun temp10848_82 () (_ BitVec 64))
(declare-fun temp10848_83 () (_ BitVec 64))
(declare-fun temp10848_84 () (_ BitVec 64))
(declare-fun temp10848_85 () (_ BitVec 64))
(declare-fun temp10848_86 () (_ BitVec 64))
(declare-fun temp10848_87 () (_ BitVec 64))
(declare-fun temp10848_88 () (_ BitVec 64))
(declare-fun temp10848_89 () (_ BitVec 64))
(declare-fun temp10848_90 () (_ BitVec 64))
(declare-fun temp10848_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10848_92 () (_ BitVec 64))
(declare-fun temp10848_93 () (_ BitVec 64))
(declare-fun temp10848_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10848_95 () (_ BitVec 64))
(declare-fun temp10848_96 () (_ BitVec 64))
(declare-fun temp10848_97 () (_ BitVec 64))
(declare-fun temp10848_98 () (_ BitVec 64))
(declare-fun temp10848_99 () (_ BitVec 64))
(declare-fun temp10848_100 () (_ BitVec 64))
(declare-fun temp10848_101 () (_ BitVec 64))
(declare-fun temp10848_102 () (_ BitVec 64))
(declare-fun temp10848_103 () (_ BitVec 64))
(declare-fun temp10848_104 () (_ BitVec 64))
(declare-fun temp10848_105 () (_ BitVec 64))
(declare-fun temp10848_106 () (_ BitVec 64))
(declare-fun temp10848_107 () (_ BitVec 64))
(declare-fun temp10848_108 () (_ BitVec 64))
(declare-fun temp10848_109 () (_ BitVec 64))
(declare-fun temp10848_110 () (_ BitVec 64))
(declare-fun temp10848_111 () (_ BitVec 64))
(declare-fun temp10848_112 () (_ BitVec 64))
(declare-fun temp10848_113 () (_ BitVec 64))
(declare-fun temp10848_114 () (_ BitVec 64))
(declare-fun temp10848_115 () (_ BitVec 64))
(declare-fun temp10848_116 () (_ BitVec 64))
(declare-fun temp10848_117 () (_ BitVec 64))
(declare-fun temp10848_118 () (_ BitVec 64))
(declare-fun temp10848_119 () (_ BitVec 64))
(declare-fun temp10848_120 () (_ BitVec 64))
(declare-fun temp10848_121 () (_ BitVec 64))
(declare-fun temp10848_122 () (_ BitVec 64))
(declare-fun temp10848_123 () (_ BitVec 64))
(declare-fun temp10848_124 () (_ BitVec 64))
(declare-fun temp10848_125 () (_ BitVec 64))
(declare-fun temp10848_126 () (_ BitVec 64))
(declare-fun temp10848_127 () (_ BitVec 64))
(declare-fun temp10848_128 () (_ BitVec 64))
(declare-fun temp10848_129 () (_ BitVec 64))
(declare-fun temp10848_130 () (_ BitVec 64))
(declare-fun temp10848_131 () (_ BitVec 64))
(declare-fun temp10848_132 () (_ BitVec 64))
(declare-fun temp10848_133 () (_ BitVec 64))
(declare-fun temp10848_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10848_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10848_136 () (_ BitVec 64))
(declare-fun temp10848_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10848_138 () (_ BitVec 64))
(declare-fun temp10848_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10848_140 () (_ BitVec 64))
(declare-fun temp10848_141 () (_ BitVec 64))
(declare-fun temp10848_142 () (_ BitVec 64))
(declare-fun temp10848_143 () (_ BitVec 64))
(declare-fun temp10848_144 () (_ BitVec 64))
(declare-fun temp10848_145 () (_ BitVec 64))
(declare-fun temp10848_146 () (_ BitVec 64))
(declare-fun temp10848_147 () (_ BitVec 64))
(declare-fun temp10848_148 () (_ BitVec 64))
(declare-fun temp10848_149 () (_ BitVec 64))
(declare-fun temp10848_150 () (_ BitVec 64))
(declare-fun temp10848_151 () (_ BitVec 64))
(declare-fun temp10848_152 () (_ BitVec 64))
(declare-fun temp10848_153 () (_ BitVec 64))
(declare-fun temp10848_154 () (_ BitVec 64))
(declare-fun temp10848_155 () (_ BitVec 64))
(declare-fun temp10848_157 () (_ BitVec 64))
(declare-fun temp10848_158 () (_ BitVec 64))
(declare-fun temp10848_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10848_159 () (_ BitVec 64))
(declare-fun temp10848_160 () (_ BitVec 64))
(declare-fun temp10848_162 () (_ BitVec 64))
(declare-fun temp10848_163 () (_ BitVec 64))
(declare-fun temp10848_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10848_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10848_165 () (_ BitVec 64))
(declare-fun temp10848_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10848_167 () (_ BitVec 64))
(declare-fun temp10848_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10848_169 () (_ BitVec 64))
(declare-fun temp10848_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10848_171 () (_ BitVec 64))
(declare-fun temp10848_172 () (_ BitVec 64))
(declare-fun temp10848_173 () (_ BitVec 64))
(declare-fun temp10848_174 () (_ BitVec 64))
(declare-fun temp10848_175 () (_ BitVec 64))
(declare-fun temp10848_176 () (_ BitVec 64))
(declare-fun temp10848_177 () (_ BitVec 64))
(declare-fun temp10848_178 () (_ BitVec 64))
(declare-fun temp10848_179 () (_ BitVec 64))
(declare-fun temp10848_180 () (_ BitVec 64))
(declare-fun temp10848_181 () (_ BitVec 64))
(declare-fun temp10848_182 () (_ BitVec 64))
(declare-fun temp10848_183 () (_ BitVec 64))
(declare-fun temp10848_184 () (_ BitVec 64))
(declare-fun temp10848_185 () (_ BitVec 64))
(declare-fun temp10848_186 () (_ BitVec 64))
(declare-fun temp10848_187 () (_ BitVec 64))
(declare-fun temp10848_188 () (_ BitVec 64))
(declare-fun temp10848_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10848_190 () (_ BitVec 64))
(declare-fun temp10848_192 () (_ BitVec 64))
(declare-fun temp10848_193 () (_ BitVec 64))
(declare-fun temp10848_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10848_194 () (_ BitVec 64))
(declare-fun temp10848_195 () (_ BitVec 64))
(declare-fun temp10848_197 () (_ BitVec 64))
(declare-fun temp10848_198 () (_ BitVec 64))
(declare-fun temp10848_196 () (_ BitVec 64))
(declare-fun temp10848_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10848_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10848_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10848_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10848_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10848_204 () (_ BitVec 64))
(declare-fun temp10848_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10848_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10848_207 () (_ BitVec 64))
(declare-fun temp10848_208 () (_ BitVec 64))
(declare-fun temp10848_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10848_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10848_211 () (_ BitVec 64))
(declare-fun temp10848_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10848_213 () (_ BitVec 64))
(declare-fun temp10848_214 () (_ BitVec 64))
(declare-fun temp10848_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10848_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10848_217 () (_ BitVec 64))
(declare-fun temp10848_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10848_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10848_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var5452176 () (_ BitVec 64))
(declare-fun var5714320 () (_ BitVec 64))
(declare-fun temp10848_221 () (_ BitVec 64))
(declare-fun var6042000 () (_ BitVec 64))
(declare-fun temp10848_222 () (_ BitVec 64))
(assert (= temp10848_1 #x0000000000000001))
(assert (= var77203 temp10848_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10848_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10848_2)))
(assert (= temp10848_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10848_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10848_4 #x0000000000000000))
(assert (= var210941 temp10848_4))
(assert (= temp10848_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10848_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10848_6 #x0000000000000000))
(assert (= var210986 temp10848_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10848_7 #x0000000000000000))
(assert (= temp10848_8 temp10848_7))
(assert (= temp10848_9 (select ARGNAME_padding_NAMEEND_VAL temp10848_8)))
(assert (= temp10848_10 #x0000000000000001))
(assert (= temp10848_11 temp10848_10))
(assert (= temp10848_12 (select ARGNAME_padding_NAMEEND_VAL temp10848_11)))
(assert (= temp10848_13 #x0000000000000002))
(assert (= temp10848_14 temp10848_13))
(assert (= temp10848_15 (select ARGNAME_padding_NAMEEND_VAL temp10848_14)))
(assert (= temp10848_16 #x0000000000000003))
(assert (= temp10848_17 temp10848_16))
(assert (= temp10848_18 (select ARGNAME_padding_NAMEEND_VAL temp10848_17)))
(assert (= temp10848_19 #x0000000000000004))
(assert (= temp10848_20 temp10848_19))
(assert (= temp10848_21 (select ARGNAME_padding_NAMEEND_VAL temp10848_20)))
(assert (= temp10848_22 #x0000000000000005))
(assert (= temp10848_23 temp10848_22))
(assert (= temp10848_24 (select ARGNAME_padding_NAMEEND_VAL temp10848_23)))
(assert (= temp10848_25 #x0000000000000000))
(assert (= temp10848_26 #x0000000000000000))
(assert (= temp10848_27 temp10848_26))
(assert (= temp10848_28 (select ARGNAME_padding_NAMEEND_VAL temp10848_27)))
(assert (= temp10848_29 #x0000000000000000))
(assert (= temp10848_30 #x0000000000000001))
(assert (= temp10848_31 temp10848_30))
(assert (= temp10848_32 (select ARGNAME_padding_NAMEEND_VAL temp10848_31)))
(assert (= temp10848_33 #x0000000000000000))
(assert (= temp10848_34 #x0000000000000002))
(assert (= temp10848_35 temp10848_34))
(assert (= temp10848_36 (select ARGNAME_padding_NAMEEND_VAL temp10848_35)))
(assert (= temp10848_37 #x0000000000000000))
(assert (= temp10848_38 #x0000000000000003))
(assert (= temp10848_39 temp10848_38))
(assert (= temp10848_40 (select ARGNAME_padding_NAMEEND_VAL temp10848_39)))
(assert (= temp10848_41 #x0000000000000000))
(assert (= temp10848_42 #x0000000000000004))
(assert (= temp10848_43 temp10848_42))
(assert (= temp10848_44 (select ARGNAME_padding_NAMEEND_VAL temp10848_43)))
(assert (= temp10848_45 #x0000000000000000))
(assert (= temp10848_46 #x0000000000000005))
(assert (= temp10848_47 temp10848_46))
(assert (= temp10848_48 (select ARGNAME_padding_NAMEEND_VAL temp10848_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10848_28 temp10848_25)
             (bvslt temp10848_32 temp10848_29)
             (bvslt temp10848_36 temp10848_33)
             (bvslt temp10848_40 temp10848_37)
             (bvslt temp10848_44 temp10848_41)
             (bvslt temp10848_48 temp10848_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10848_49 #x0000000000000000))
(assert (= var1191714 temp10848_49))
(assert (= temp10848_50 #x0000000000000000))
(assert (= temp10848_51 temp10848_50))
(assert (= temp10848_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10848_51)))
(assert (= temp10848_53 #x0000000000000001))
(assert (= temp10848_54 temp10848_53))
(assert (= temp10848_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10848_54)))
(assert (= temp10848_56 #x0000000000000002))
(assert (= temp10848_57 temp10848_56))
(assert (= temp10848_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10848_57)))
(assert (= temp10848_59 #x0000000000000003))
(assert (= temp10848_60 temp10848_59))
(assert (= temp10848_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10848_60)))
(assert (= temp10848_62 #x0000000000000004))
(assert (= temp10848_63 temp10848_62))
(assert (= temp10848_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10848_63)))
(assert (= temp10848_65 #x0000000000000005))
(assert (= temp10848_66 temp10848_65))
(assert (= temp10848_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10848_66)))
(assert (= temp10848_68 #x0000000000000000))
(assert (= temp10848_69 #x0000000000000000))
(assert (= temp10848_70 temp10848_69))
(assert (= temp10848_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10848_70)))
(assert (= temp10848_72 #x0000000000000000))
(assert (= temp10848_73 #x0000000000000001))
(assert (= temp10848_74 temp10848_73))
(assert (= temp10848_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10848_74)))
(assert (= temp10848_76 #x0000000000000000))
(assert (= temp10848_77 #x0000000000000002))
(assert (= temp10848_78 temp10848_77))
(assert (= temp10848_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10848_78)))
(assert (= temp10848_80 #x0000000000000000))
(assert (= temp10848_81 #x0000000000000003))
(assert (= temp10848_82 temp10848_81))
(assert (= temp10848_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10848_82)))
(assert (= temp10848_84 #x0000000000000000))
(assert (= temp10848_85 #x0000000000000004))
(assert (= temp10848_86 temp10848_85))
(assert (= temp10848_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10848_86)))
(assert (= temp10848_88 #x0000000000000000))
(assert (= temp10848_89 #x0000000000000005))
(assert (= temp10848_90 temp10848_89))
(assert (= temp10848_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10848_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10848_71 temp10848_68)
             (bvslt temp10848_75 temp10848_72)
             (bvslt temp10848_79 temp10848_76)
             (bvslt temp10848_83 temp10848_80)
             (bvslt temp10848_87 temp10848_84)
             (bvslt temp10848_91 temp10848_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10848_92 #x0000000000000000))
(assert (= var1191725 temp10848_92))
(assert (= temp10848_93 #x0000000000000000))
(assert (= temp10848_94 temp10848_93))
(assert (= temp10848_95 (select ARGNAME_stride_NAMEEND_VAL temp10848_94)))
(assert (= temp10848_96 #x0000000000000001))
(assert (= temp10848_97 temp10848_96))
(assert (= temp10848_98 (select ARGNAME_stride_NAMEEND_VAL temp10848_97)))
(assert (= temp10848_99 #x0000000000000002))
(assert (= temp10848_100 temp10848_99))
(assert (= temp10848_101 (select ARGNAME_stride_NAMEEND_VAL temp10848_100)))
(assert (= temp10848_102 #x0000000000000003))
(assert (= temp10848_103 temp10848_102))
(assert (= temp10848_104 (select ARGNAME_stride_NAMEEND_VAL temp10848_103)))
(assert (= temp10848_105 #x0000000000000004))
(assert (= temp10848_106 temp10848_105))
(assert (= temp10848_107 (select ARGNAME_stride_NAMEEND_VAL temp10848_106)))
(assert (= temp10848_108 #x0000000000000005))
(assert (= temp10848_109 temp10848_108))
(assert (= temp10848_110 (select ARGNAME_stride_NAMEEND_VAL temp10848_109)))
(assert (= temp10848_111 #x0000000000000000))
(assert (= temp10848_112 #x0000000000000000))
(assert (= temp10848_113 temp10848_112))
(assert (= temp10848_114 (select ARGNAME_stride_NAMEEND_VAL temp10848_113)))
(assert (= temp10848_115 #x0000000000000000))
(assert (= temp10848_116 #x0000000000000001))
(assert (= temp10848_117 temp10848_116))
(assert (= temp10848_118 (select ARGNAME_stride_NAMEEND_VAL temp10848_117)))
(assert (= temp10848_119 #x0000000000000000))
(assert (= temp10848_120 #x0000000000000002))
(assert (= temp10848_121 temp10848_120))
(assert (= temp10848_122 (select ARGNAME_stride_NAMEEND_VAL temp10848_121)))
(assert (= temp10848_123 #x0000000000000000))
(assert (= temp10848_124 #x0000000000000003))
(assert (= temp10848_125 temp10848_124))
(assert (= temp10848_126 (select ARGNAME_stride_NAMEEND_VAL temp10848_125)))
(assert (= temp10848_127 #x0000000000000000))
(assert (= temp10848_128 #x0000000000000004))
(assert (= temp10848_129 temp10848_128))
(assert (= temp10848_130 (select ARGNAME_stride_NAMEEND_VAL temp10848_129)))
(assert (= temp10848_131 #x0000000000000000))
(assert (= temp10848_132 #x0000000000000005))
(assert (= temp10848_133 temp10848_132))
(assert (= temp10848_134 (select ARGNAME_stride_NAMEEND_VAL temp10848_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10848_114 temp10848_111)
             (bvsle temp10848_118 temp10848_115)
             (bvsle temp10848_122 temp10848_119)
             (bvsle temp10848_126 temp10848_123)
             (bvsle temp10848_130 temp10848_127)
             (bvsle temp10848_134 temp10848_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10848_135 #x0000000000000000))
(assert (= var1191735 temp10848_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10848_136 #x0000000000000001))
(assert (= var1191747 temp10848_136))
(assert (= temp10848_137 #x0000000000000000))
(assert (= var1179826 temp10848_137))
(assert (= temp10848_138 #x0000000000000000))
(assert (= temp10848_139 temp10848_138))
(assert (= temp10848_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10848_139)))
(assert (= temp10848_141 #x0000000000000001))
(assert (= temp10848_142 temp10848_141))
(assert (= temp10848_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10848_142)))
(assert (= temp10848_144 #x0000000000000002))
(assert (= temp10848_145 temp10848_144))
(assert (= temp10848_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10848_145)))
(assert (= temp10848_147 #x0000000000000003))
(assert (= temp10848_148 temp10848_147))
(assert (= temp10848_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10848_148)))
(assert (= temp10848_150 #x0000000000000004))
(assert (= temp10848_151 temp10848_150))
(assert (= temp10848_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10848_151)))
(assert (= temp10848_153 #x0000000000000005))
(assert (= temp10848_154 temp10848_153))
(assert (= temp10848_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10848_154)))
(assert (= temp10848_157 var1179826))
(assert (= temp10848_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10848_157)))
(assert (= temp10848_156 temp10848_158))
(assert (= var1191780
   (ite (bvslt temp10848_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10848_159 #x0000000000000000))
(assert (= var1191780 temp10848_159))
(assert (= temp10848_160 #x0000000000000000))
(assert (= var1179826 temp10848_160))
(assert (= temp10848_162 var1179826))
(assert (= temp10848_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10848_162)))
(assert (= temp10848_161 temp10848_163))
(assert (= var1191802 (bvsmod temp10848_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10848_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10848_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10848_165 #x0000000000000001))
(assert (= var1191803 temp10848_165))
(assert (= temp10848_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10848_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10848_167 #x0000000000000001))
(assert (= var1191823 temp10848_167))
(assert (= temp10848_168 #x0000000000000001))
(assert (= var1180714 temp10848_168))
(assert (= temp10848_169 #x0000000000000000))
(assert (= temp10848_170 temp10848_169))
(assert (= temp10848_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10848_170)))
(assert (= temp10848_172 #x0000000000000001))
(assert (= temp10848_173 temp10848_172))
(assert (= temp10848_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10848_173)))
(assert (= temp10848_175 #x0000000000000002))
(assert (= temp10848_176 temp10848_175))
(assert (= temp10848_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10848_176)))
(assert (= temp10848_178 #x0000000000000003))
(assert (= temp10848_179 temp10848_178))
(assert (= temp10848_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10848_179)))
(assert (= temp10848_181 #x0000000000000004))
(assert (= temp10848_182 temp10848_181))
(assert (= temp10848_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10848_182)))
(assert (= temp10848_184 #x0000000000000005))
(assert (= temp10848_185 temp10848_184))
(assert (= temp10848_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10848_185)))
(assert (= temp10848_187 #x0000000000000000))
(assert (= temp10848_188
   (ite (bvslt var1180714 temp10848_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10848_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10848_188)))
(assert (= var1191831 temp10848_189))
(assert (bvslt (ite (bvslt var1180714 temp10848_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10848_190 #x0000000000000001))
(assert (= var1180714 temp10848_190))
(assert (= temp10848_192 var1180714))
(assert (= temp10848_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10848_192)))
(assert (= temp10848_191 temp10848_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10848_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10848_194 #x0000000000000001))
(assert (= var1191836 temp10848_194))
(assert (= temp10848_195 #x0000000000000000))
(assert (= var1179826 temp10848_195))
(assert (= temp10848_197 var1179826))
(assert (= temp10848_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10848_197)))
(assert (= temp10848_196 temp10848_198))
(assert (= temp10848_199 #x0000000000000002))
(assert (= var1586025 temp10848_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10848_200 #x0000000000000001))
(assert (= var1191993 temp10848_200))
(assert (= temp10848_201 #x0000000000000001))
(assert (= var2700303 temp10848_201))
(assert (= temp10848_202 #x0000000000000001))
(assert (= var2962447 temp10848_202))
(assert (= temp10848_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10848_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10848_204 #x0000000000000001))
(assert (= var211058 temp10848_204))
(assert (= temp10848_205 #x0000000000000001))
(assert (= var211188 temp10848_205))
(assert (= var3879401 var211188))
(assert (= temp10848_206 #x0000000000000000))
(assert (= var3866802 temp10848_206))
(assert (= temp10848_207 #x0000000000000000))
(assert (= temp10848_208
   (ite (bvslt var3866802 temp10848_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10848_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10848_208)))
(assert (= var3879420 temp10848_209))
(assert (bvslt (ite (bvslt var3866802 temp10848_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10848_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10848_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10848_211 #x0000000000000000))
(assert (= var3879421 temp10848_211))
(assert (= temp10848_212 #x0000000000000001))
(assert (= var3867690 temp10848_212))
(assert (= temp10848_213 #x0000000000000000))
(assert (= temp10848_214
   (ite (bvslt var3867690 temp10848_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10848_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10848_214)))
(assert (= var3879423 temp10848_215))
(assert (bvslt (ite (bvslt var3867690 temp10848_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10848_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10848_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10848_217 #x0000000000000001))
(assert (= var3879424 temp10848_217))
(assert (= temp10848_218 #x0000000000000000))
(assert (= var4133117 temp10848_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10848_219 #x0000000000000002))
(assert (= var4339331 temp10848_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10848_220 #x0000000000000000))
(assert (= var4404892 temp10848_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var5452176 var211201))
(assert (= var5714320 var211201))
(assert (= temp10848_221 #x0000000000000000))
(assert (= var6042000 temp10848_221))
(assert (= temp10848_222 #x0000000000000001))
(assert (= var211058 temp10848_222))
(model-add temp10848_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10848_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10848_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10848_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))



