(declare-fun temp10610_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10610_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10610_3 () (_ BitVec 64))
(declare-fun temp10610_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10610_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10610_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10610_7 () (_ BitVec 64))
(declare-fun temp10610_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10610_9 () (_ BitVec 64))
(declare-fun temp10610_10 () (_ BitVec 64))
(declare-fun temp10610_11 () (_ BitVec 64))
(declare-fun temp10610_12 () (_ BitVec 64))
(declare-fun temp10610_13 () (_ BitVec 64))
(declare-fun temp10610_14 () (_ BitVec 64))
(declare-fun temp10610_15 () (_ BitVec 64))
(declare-fun temp10610_16 () (_ BitVec 64))
(declare-fun temp10610_17 () (_ BitVec 64))
(declare-fun temp10610_18 () (_ BitVec 64))
(declare-fun temp10610_19 () (_ BitVec 64))
(declare-fun temp10610_20 () (_ BitVec 64))
(declare-fun temp10610_21 () (_ BitVec 64))
(declare-fun temp10610_22 () (_ BitVec 64))
(declare-fun temp10610_23 () (_ BitVec 64))
(declare-fun temp10610_24 () (_ BitVec 64))
(declare-fun temp10610_25 () (_ BitVec 64))
(declare-fun temp10610_26 () (_ BitVec 64))
(declare-fun temp10610_27 () (_ BitVec 64))
(declare-fun temp10610_28 () (_ BitVec 64))
(declare-fun temp10610_29 () (_ BitVec 64))
(declare-fun temp10610_30 () (_ BitVec 64))
(declare-fun temp10610_31 () (_ BitVec 64))
(declare-fun temp10610_32 () (_ BitVec 64))
(declare-fun temp10610_33 () (_ BitVec 64))
(declare-fun temp10610_34 () (_ BitVec 64))
(declare-fun temp10610_35 () (_ BitVec 64))
(declare-fun temp10610_36 () (_ BitVec 64))
(declare-fun temp10610_37 () (_ BitVec 64))
(declare-fun temp10610_38 () (_ BitVec 64))
(declare-fun temp10610_39 () (_ BitVec 64))
(declare-fun temp10610_40 () (_ BitVec 64))
(declare-fun temp10610_41 () (_ BitVec 64))
(declare-fun temp10610_42 () (_ BitVec 64))
(declare-fun temp10610_43 () (_ BitVec 64))
(declare-fun temp10610_44 () (_ BitVec 64))
(declare-fun temp10610_45 () (_ BitVec 64))
(declare-fun temp10610_46 () (_ BitVec 64))
(declare-fun temp10610_47 () (_ BitVec 64))
(declare-fun temp10610_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10610_49 () (_ BitVec 64))
(declare-fun temp10610_50 () (_ BitVec 64))
(declare-fun temp10610_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10610_52 () (_ BitVec 64))
(declare-fun temp10610_53 () (_ BitVec 64))
(declare-fun temp10610_54 () (_ BitVec 64))
(declare-fun temp10610_55 () (_ BitVec 64))
(declare-fun temp10610_56 () (_ BitVec 64))
(declare-fun temp10610_57 () (_ BitVec 64))
(declare-fun temp10610_58 () (_ BitVec 64))
(declare-fun temp10610_59 () (_ BitVec 64))
(declare-fun temp10610_60 () (_ BitVec 64))
(declare-fun temp10610_61 () (_ BitVec 64))
(declare-fun temp10610_62 () (_ BitVec 64))
(declare-fun temp10610_63 () (_ BitVec 64))
(declare-fun temp10610_64 () (_ BitVec 64))
(declare-fun temp10610_65 () (_ BitVec 64))
(declare-fun temp10610_66 () (_ BitVec 64))
(declare-fun temp10610_67 () (_ BitVec 64))
(declare-fun temp10610_68 () (_ BitVec 64))
(declare-fun temp10610_69 () (_ BitVec 64))
(declare-fun temp10610_70 () (_ BitVec 64))
(declare-fun temp10610_71 () (_ BitVec 64))
(declare-fun temp10610_72 () (_ BitVec 64))
(declare-fun temp10610_73 () (_ BitVec 64))
(declare-fun temp10610_74 () (_ BitVec 64))
(declare-fun temp10610_75 () (_ BitVec 64))
(declare-fun temp10610_76 () (_ BitVec 64))
(declare-fun temp10610_77 () (_ BitVec 64))
(declare-fun temp10610_78 () (_ BitVec 64))
(declare-fun temp10610_79 () (_ BitVec 64))
(declare-fun temp10610_80 () (_ BitVec 64))
(declare-fun temp10610_81 () (_ BitVec 64))
(declare-fun temp10610_82 () (_ BitVec 64))
(declare-fun temp10610_83 () (_ BitVec 64))
(declare-fun temp10610_84 () (_ BitVec 64))
(declare-fun temp10610_85 () (_ BitVec 64))
(declare-fun temp10610_86 () (_ BitVec 64))
(declare-fun temp10610_87 () (_ BitVec 64))
(declare-fun temp10610_88 () (_ BitVec 64))
(declare-fun temp10610_89 () (_ BitVec 64))
(declare-fun temp10610_90 () (_ BitVec 64))
(declare-fun temp10610_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10610_92 () (_ BitVec 64))
(declare-fun temp10610_93 () (_ BitVec 64))
(declare-fun temp10610_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10610_95 () (_ BitVec 64))
(declare-fun temp10610_96 () (_ BitVec 64))
(declare-fun temp10610_97 () (_ BitVec 64))
(declare-fun temp10610_98 () (_ BitVec 64))
(declare-fun temp10610_99 () (_ BitVec 64))
(declare-fun temp10610_100 () (_ BitVec 64))
(declare-fun temp10610_101 () (_ BitVec 64))
(declare-fun temp10610_102 () (_ BitVec 64))
(declare-fun temp10610_103 () (_ BitVec 64))
(declare-fun temp10610_104 () (_ BitVec 64))
(declare-fun temp10610_105 () (_ BitVec 64))
(declare-fun temp10610_106 () (_ BitVec 64))
(declare-fun temp10610_107 () (_ BitVec 64))
(declare-fun temp10610_108 () (_ BitVec 64))
(declare-fun temp10610_109 () (_ BitVec 64))
(declare-fun temp10610_110 () (_ BitVec 64))
(declare-fun temp10610_111 () (_ BitVec 64))
(declare-fun temp10610_112 () (_ BitVec 64))
(declare-fun temp10610_113 () (_ BitVec 64))
(declare-fun temp10610_114 () (_ BitVec 64))
(declare-fun temp10610_115 () (_ BitVec 64))
(declare-fun temp10610_116 () (_ BitVec 64))
(declare-fun temp10610_117 () (_ BitVec 64))
(declare-fun temp10610_118 () (_ BitVec 64))
(declare-fun temp10610_119 () (_ BitVec 64))
(declare-fun temp10610_120 () (_ BitVec 64))
(declare-fun temp10610_121 () (_ BitVec 64))
(declare-fun temp10610_122 () (_ BitVec 64))
(declare-fun temp10610_123 () (_ BitVec 64))
(declare-fun temp10610_124 () (_ BitVec 64))
(declare-fun temp10610_125 () (_ BitVec 64))
(declare-fun temp10610_126 () (_ BitVec 64))
(declare-fun temp10610_127 () (_ BitVec 64))
(declare-fun temp10610_128 () (_ BitVec 64))
(declare-fun temp10610_129 () (_ BitVec 64))
(declare-fun temp10610_130 () (_ BitVec 64))
(declare-fun temp10610_131 () (_ BitVec 64))
(declare-fun temp10610_132 () (_ BitVec 64))
(declare-fun temp10610_133 () (_ BitVec 64))
(declare-fun temp10610_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10610_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10610_136 () (_ BitVec 64))
(declare-fun temp10610_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10610_138 () (_ BitVec 64))
(declare-fun temp10610_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10610_140 () (_ BitVec 64))
(declare-fun temp10610_141 () (_ BitVec 64))
(declare-fun temp10610_142 () (_ BitVec 64))
(declare-fun temp10610_143 () (_ BitVec 64))
(declare-fun temp10610_144 () (_ BitVec 64))
(declare-fun temp10610_145 () (_ BitVec 64))
(declare-fun temp10610_146 () (_ BitVec 64))
(declare-fun temp10610_147 () (_ BitVec 64))
(declare-fun temp10610_148 () (_ BitVec 64))
(declare-fun temp10610_149 () (_ BitVec 64))
(declare-fun temp10610_150 () (_ BitVec 64))
(declare-fun temp10610_151 () (_ BitVec 64))
(declare-fun temp10610_152 () (_ BitVec 64))
(declare-fun temp10610_153 () (_ BitVec 64))
(declare-fun temp10610_154 () (_ BitVec 64))
(declare-fun temp10610_155 () (_ BitVec 64))
(declare-fun temp10610_157 () (_ BitVec 64))
(declare-fun temp10610_158 () (_ BitVec 64))
(declare-fun temp10610_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10610_159 () (_ BitVec 64))
(declare-fun temp10610_160 () (_ BitVec 64))
(declare-fun temp10610_162 () (_ BitVec 64))
(declare-fun temp10610_163 () (_ BitVec 64))
(declare-fun temp10610_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10610_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10610_165 () (_ BitVec 64))
(declare-fun temp10610_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10610_167 () (_ BitVec 64))
(declare-fun temp10610_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10610_169 () (_ BitVec 64))
(declare-fun temp10610_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10610_171 () (_ BitVec 64))
(declare-fun temp10610_172 () (_ BitVec 64))
(declare-fun temp10610_173 () (_ BitVec 64))
(declare-fun temp10610_174 () (_ BitVec 64))
(declare-fun temp10610_175 () (_ BitVec 64))
(declare-fun temp10610_176 () (_ BitVec 64))
(declare-fun temp10610_177 () (_ BitVec 64))
(declare-fun temp10610_178 () (_ BitVec 64))
(declare-fun temp10610_179 () (_ BitVec 64))
(declare-fun temp10610_180 () (_ BitVec 64))
(declare-fun temp10610_181 () (_ BitVec 64))
(declare-fun temp10610_182 () (_ BitVec 64))
(declare-fun temp10610_183 () (_ BitVec 64))
(declare-fun temp10610_184 () (_ BitVec 64))
(declare-fun temp10610_185 () (_ BitVec 64))
(declare-fun temp10610_186 () (_ BitVec 64))
(declare-fun temp10610_187 () (_ BitVec 64))
(declare-fun temp10610_188 () (_ BitVec 64))
(declare-fun temp10610_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10610_190 () (_ BitVec 64))
(declare-fun temp10610_192 () (_ BitVec 64))
(declare-fun temp10610_193 () (_ BitVec 64))
(declare-fun temp10610_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10610_194 () (_ BitVec 64))
(declare-fun temp10610_195 () (_ BitVec 64))
(declare-fun temp10610_197 () (_ BitVec 64))
(declare-fun temp10610_198 () (_ BitVec 64))
(declare-fun temp10610_196 () (_ BitVec 64))
(declare-fun temp10610_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10610_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10610_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10610_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10610_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10610_204 () (_ BitVec 64))
(declare-fun temp10610_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10610_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10610_207 () (_ BitVec 64))
(declare-fun temp10610_208 () (_ BitVec 64))
(declare-fun temp10610_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10610_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10610_211 () (_ BitVec 64))
(declare-fun temp10610_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10610_213 () (_ BitVec 64))
(declare-fun temp10610_214 () (_ BitVec 64))
(declare-fun temp10610_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10610_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10610_217 () (_ BitVec 64))
(declare-fun temp10610_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10610_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10610_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp10610_222 () (_ BitVec 64))
(declare-fun temp10610_221 () (_ BitVec 64))
(declare-fun temp10610_223 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp10610_224 () (_ BitVec 64))
(declare-fun temp10610_225 () (_ BitVec 64))
(declare-fun temp10610_226 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp10610_227 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp10610_228 () (_ BitVec 64))
(declare-fun temp10610_230 () (_ BitVec 64))
(declare-fun temp10610_229 () (_ BitVec 64))
(declare-fun temp10610_231 () (_ BitVec 64))
(assert (= temp10610_1 #x0000000000000001))
(assert (= var77203 temp10610_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10610_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10610_2)))
(assert (= temp10610_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10610_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10610_4 #x0000000000000000))
(assert (= var210941 temp10610_4))
(assert (= temp10610_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10610_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10610_6 #x0000000000000000))
(assert (= var210986 temp10610_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10610_7 #x0000000000000000))
(assert (= temp10610_8 temp10610_7))
(assert (= temp10610_9 (select ARGNAME_padding_NAMEEND_VAL temp10610_8)))
(assert (= temp10610_10 #x0000000000000001))
(assert (= temp10610_11 temp10610_10))
(assert (= temp10610_12 (select ARGNAME_padding_NAMEEND_VAL temp10610_11)))
(assert (= temp10610_13 #x0000000000000002))
(assert (= temp10610_14 temp10610_13))
(assert (= temp10610_15 (select ARGNAME_padding_NAMEEND_VAL temp10610_14)))
(assert (= temp10610_16 #x0000000000000003))
(assert (= temp10610_17 temp10610_16))
(assert (= temp10610_18 (select ARGNAME_padding_NAMEEND_VAL temp10610_17)))
(assert (= temp10610_19 #x0000000000000004))
(assert (= temp10610_20 temp10610_19))
(assert (= temp10610_21 (select ARGNAME_padding_NAMEEND_VAL temp10610_20)))
(assert (= temp10610_22 #x0000000000000005))
(assert (= temp10610_23 temp10610_22))
(assert (= temp10610_24 (select ARGNAME_padding_NAMEEND_VAL temp10610_23)))
(assert (= temp10610_25 #x0000000000000000))
(assert (= temp10610_26 #x0000000000000000))
(assert (= temp10610_27 temp10610_26))
(assert (= temp10610_28 (select ARGNAME_padding_NAMEEND_VAL temp10610_27)))
(assert (= temp10610_29 #x0000000000000000))
(assert (= temp10610_30 #x0000000000000001))
(assert (= temp10610_31 temp10610_30))
(assert (= temp10610_32 (select ARGNAME_padding_NAMEEND_VAL temp10610_31)))
(assert (= temp10610_33 #x0000000000000000))
(assert (= temp10610_34 #x0000000000000002))
(assert (= temp10610_35 temp10610_34))
(assert (= temp10610_36 (select ARGNAME_padding_NAMEEND_VAL temp10610_35)))
(assert (= temp10610_37 #x0000000000000000))
(assert (= temp10610_38 #x0000000000000003))
(assert (= temp10610_39 temp10610_38))
(assert (= temp10610_40 (select ARGNAME_padding_NAMEEND_VAL temp10610_39)))
(assert (= temp10610_41 #x0000000000000000))
(assert (= temp10610_42 #x0000000000000004))
(assert (= temp10610_43 temp10610_42))
(assert (= temp10610_44 (select ARGNAME_padding_NAMEEND_VAL temp10610_43)))
(assert (= temp10610_45 #x0000000000000000))
(assert (= temp10610_46 #x0000000000000005))
(assert (= temp10610_47 temp10610_46))
(assert (= temp10610_48 (select ARGNAME_padding_NAMEEND_VAL temp10610_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10610_28 temp10610_25)
             (bvslt temp10610_32 temp10610_29)
             (bvslt temp10610_36 temp10610_33)
             (bvslt temp10610_40 temp10610_37)
             (bvslt temp10610_44 temp10610_41)
             (bvslt temp10610_48 temp10610_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10610_49 #x0000000000000000))
(assert (= var1191714 temp10610_49))
(assert (= temp10610_50 #x0000000000000000))
(assert (= temp10610_51 temp10610_50))
(assert (= temp10610_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10610_51)))
(assert (= temp10610_53 #x0000000000000001))
(assert (= temp10610_54 temp10610_53))
(assert (= temp10610_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10610_54)))
(assert (= temp10610_56 #x0000000000000002))
(assert (= temp10610_57 temp10610_56))
(assert (= temp10610_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10610_57)))
(assert (= temp10610_59 #x0000000000000003))
(assert (= temp10610_60 temp10610_59))
(assert (= temp10610_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10610_60)))
(assert (= temp10610_62 #x0000000000000004))
(assert (= temp10610_63 temp10610_62))
(assert (= temp10610_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10610_63)))
(assert (= temp10610_65 #x0000000000000005))
(assert (= temp10610_66 temp10610_65))
(assert (= temp10610_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10610_66)))
(assert (= temp10610_68 #x0000000000000000))
(assert (= temp10610_69 #x0000000000000000))
(assert (= temp10610_70 temp10610_69))
(assert (= temp10610_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10610_70)))
(assert (= temp10610_72 #x0000000000000000))
(assert (= temp10610_73 #x0000000000000001))
(assert (= temp10610_74 temp10610_73))
(assert (= temp10610_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10610_74)))
(assert (= temp10610_76 #x0000000000000000))
(assert (= temp10610_77 #x0000000000000002))
(assert (= temp10610_78 temp10610_77))
(assert (= temp10610_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10610_78)))
(assert (= temp10610_80 #x0000000000000000))
(assert (= temp10610_81 #x0000000000000003))
(assert (= temp10610_82 temp10610_81))
(assert (= temp10610_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10610_82)))
(assert (= temp10610_84 #x0000000000000000))
(assert (= temp10610_85 #x0000000000000004))
(assert (= temp10610_86 temp10610_85))
(assert (= temp10610_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10610_86)))
(assert (= temp10610_88 #x0000000000000000))
(assert (= temp10610_89 #x0000000000000005))
(assert (= temp10610_90 temp10610_89))
(assert (= temp10610_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10610_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10610_71 temp10610_68)
             (bvslt temp10610_75 temp10610_72)
             (bvslt temp10610_79 temp10610_76)
             (bvslt temp10610_83 temp10610_80)
             (bvslt temp10610_87 temp10610_84)
             (bvslt temp10610_91 temp10610_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10610_92 #x0000000000000000))
(assert (= var1191725 temp10610_92))
(assert (= temp10610_93 #x0000000000000000))
(assert (= temp10610_94 temp10610_93))
(assert (= temp10610_95 (select ARGNAME_stride_NAMEEND_VAL temp10610_94)))
(assert (= temp10610_96 #x0000000000000001))
(assert (= temp10610_97 temp10610_96))
(assert (= temp10610_98 (select ARGNAME_stride_NAMEEND_VAL temp10610_97)))
(assert (= temp10610_99 #x0000000000000002))
(assert (= temp10610_100 temp10610_99))
(assert (= temp10610_101 (select ARGNAME_stride_NAMEEND_VAL temp10610_100)))
(assert (= temp10610_102 #x0000000000000003))
(assert (= temp10610_103 temp10610_102))
(assert (= temp10610_104 (select ARGNAME_stride_NAMEEND_VAL temp10610_103)))
(assert (= temp10610_105 #x0000000000000004))
(assert (= temp10610_106 temp10610_105))
(assert (= temp10610_107 (select ARGNAME_stride_NAMEEND_VAL temp10610_106)))
(assert (= temp10610_108 #x0000000000000005))
(assert (= temp10610_109 temp10610_108))
(assert (= temp10610_110 (select ARGNAME_stride_NAMEEND_VAL temp10610_109)))
(assert (= temp10610_111 #x0000000000000000))
(assert (= temp10610_112 #x0000000000000000))
(assert (= temp10610_113 temp10610_112))
(assert (= temp10610_114 (select ARGNAME_stride_NAMEEND_VAL temp10610_113)))
(assert (= temp10610_115 #x0000000000000000))
(assert (= temp10610_116 #x0000000000000001))
(assert (= temp10610_117 temp10610_116))
(assert (= temp10610_118 (select ARGNAME_stride_NAMEEND_VAL temp10610_117)))
(assert (= temp10610_119 #x0000000000000000))
(assert (= temp10610_120 #x0000000000000002))
(assert (= temp10610_121 temp10610_120))
(assert (= temp10610_122 (select ARGNAME_stride_NAMEEND_VAL temp10610_121)))
(assert (= temp10610_123 #x0000000000000000))
(assert (= temp10610_124 #x0000000000000003))
(assert (= temp10610_125 temp10610_124))
(assert (= temp10610_126 (select ARGNAME_stride_NAMEEND_VAL temp10610_125)))
(assert (= temp10610_127 #x0000000000000000))
(assert (= temp10610_128 #x0000000000000004))
(assert (= temp10610_129 temp10610_128))
(assert (= temp10610_130 (select ARGNAME_stride_NAMEEND_VAL temp10610_129)))
(assert (= temp10610_131 #x0000000000000000))
(assert (= temp10610_132 #x0000000000000005))
(assert (= temp10610_133 temp10610_132))
(assert (= temp10610_134 (select ARGNAME_stride_NAMEEND_VAL temp10610_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10610_114 temp10610_111)
             (bvsle temp10610_118 temp10610_115)
             (bvsle temp10610_122 temp10610_119)
             (bvsle temp10610_126 temp10610_123)
             (bvsle temp10610_130 temp10610_127)
             (bvsle temp10610_134 temp10610_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10610_135 #x0000000000000000))
(assert (= var1191735 temp10610_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10610_136 #x0000000000000001))
(assert (= var1191747 temp10610_136))
(assert (= temp10610_137 #x0000000000000000))
(assert (= var1179826 temp10610_137))
(assert (= temp10610_138 #x0000000000000000))
(assert (= temp10610_139 temp10610_138))
(assert (= temp10610_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10610_139)))
(assert (= temp10610_141 #x0000000000000001))
(assert (= temp10610_142 temp10610_141))
(assert (= temp10610_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10610_142)))
(assert (= temp10610_144 #x0000000000000002))
(assert (= temp10610_145 temp10610_144))
(assert (= temp10610_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10610_145)))
(assert (= temp10610_147 #x0000000000000003))
(assert (= temp10610_148 temp10610_147))
(assert (= temp10610_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10610_148)))
(assert (= temp10610_150 #x0000000000000004))
(assert (= temp10610_151 temp10610_150))
(assert (= temp10610_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10610_151)))
(assert (= temp10610_153 #x0000000000000005))
(assert (= temp10610_154 temp10610_153))
(assert (= temp10610_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10610_154)))
(assert (= temp10610_157 var1179826))
(assert (= temp10610_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10610_157)))
(assert (= temp10610_156 temp10610_158))
(assert (= var1191780
   (ite (bvslt temp10610_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10610_159 #x0000000000000000))
(assert (= var1191780 temp10610_159))
(assert (= temp10610_160 #x0000000000000000))
(assert (= var1179826 temp10610_160))
(assert (= temp10610_162 var1179826))
(assert (= temp10610_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10610_162)))
(assert (= temp10610_161 temp10610_163))
(assert (= var1191802 (bvsmod temp10610_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10610_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10610_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10610_165 #x0000000000000001))
(assert (= var1191803 temp10610_165))
(assert (= temp10610_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10610_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10610_167 #x0000000000000001))
(assert (= var1191823 temp10610_167))
(assert (= temp10610_168 #x0000000000000001))
(assert (= var1180714 temp10610_168))
(assert (= temp10610_169 #x0000000000000000))
(assert (= temp10610_170 temp10610_169))
(assert (= temp10610_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10610_170)))
(assert (= temp10610_172 #x0000000000000001))
(assert (= temp10610_173 temp10610_172))
(assert (= temp10610_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10610_173)))
(assert (= temp10610_175 #x0000000000000002))
(assert (= temp10610_176 temp10610_175))
(assert (= temp10610_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10610_176)))
(assert (= temp10610_178 #x0000000000000003))
(assert (= temp10610_179 temp10610_178))
(assert (= temp10610_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10610_179)))
(assert (= temp10610_181 #x0000000000000004))
(assert (= temp10610_182 temp10610_181))
(assert (= temp10610_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10610_182)))
(assert (= temp10610_184 #x0000000000000005))
(assert (= temp10610_185 temp10610_184))
(assert (= temp10610_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10610_185)))
(assert (= temp10610_187 #x0000000000000000))
(assert (= temp10610_188
   (ite (bvslt var1180714 temp10610_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10610_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10610_188)))
(assert (= var1191831 temp10610_189))
(assert (bvslt (ite (bvslt var1180714 temp10610_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10610_190 #x0000000000000001))
(assert (= var1180714 temp10610_190))
(assert (= temp10610_192 var1180714))
(assert (= temp10610_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10610_192)))
(assert (= temp10610_191 temp10610_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10610_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10610_194 #x0000000000000001))
(assert (= var1191836 temp10610_194))
(assert (= temp10610_195 #x0000000000000000))
(assert (= var1179826 temp10610_195))
(assert (= temp10610_197 var1179826))
(assert (= temp10610_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10610_197)))
(assert (= temp10610_196 temp10610_198))
(assert (= temp10610_199 #x0000000000000002))
(assert (= var1586025 temp10610_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10610_200 #x0000000000000001))
(assert (= var1191993 temp10610_200))
(assert (= temp10610_201 #x0000000000000001))
(assert (= var2700303 temp10610_201))
(assert (= temp10610_202 #x0000000000000001))
(assert (= var2962447 temp10610_202))
(assert (= temp10610_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10610_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10610_204 #x0000000000000001))
(assert (= var211058 temp10610_204))
(assert (= temp10610_205 #x0000000000000001))
(assert (= var211188 temp10610_205))
(assert (= var3879401 var211188))
(assert (= temp10610_206 #x0000000000000000))
(assert (= var3866802 temp10610_206))
(assert (= temp10610_207 #x0000000000000000))
(assert (= temp10610_208
   (ite (bvslt var3866802 temp10610_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10610_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10610_208)))
(assert (= var3879420 temp10610_209))
(assert (bvslt (ite (bvslt var3866802 temp10610_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10610_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10610_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10610_211 #x0000000000000000))
(assert (= var3879421 temp10610_211))
(assert (= temp10610_212 #x0000000000000001))
(assert (= var3867690 temp10610_212))
(assert (= temp10610_213 #x0000000000000000))
(assert (= temp10610_214
   (ite (bvslt var3867690 temp10610_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10610_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10610_214)))
(assert (= var3879423 temp10610_215))
(assert (bvslt (ite (bvslt var3867690 temp10610_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10610_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10610_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10610_217 #x0000000000000001))
(assert (= var3879424 temp10610_217))
(assert (= temp10610_218 #x0000000000000000))
(assert (= var4133117 temp10610_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10610_219 #x0000000000000002))
(assert (= var4339331 temp10610_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10610_220 #x0000000000000000))
(assert (= var4404892 temp10610_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp10610_222 #xffffffffffffffff))
(assert (= temp10610_221 temp10610_222))
(assert (= temp10610_223 #x0000000000000001))
(assert (= var197674 temp10610_223))
(assert (= temp10610_224 #x0000000000000000))
(assert (= temp10610_225
   (ite (bvslt var197674 temp10610_224)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp10610_226 (select ARGNAME_input_NAMEEND_DIMSIZE temp10610_225)))
(assert (= var211595 temp10610_226))
(assert (bvslt (ite (bvslt var197674 temp10610_224)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10610_227 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp10610_227) #x0000000000000001 #x0000000000000000)))
(assert (= temp10610_228 #x0000000000000001))
(assert (= var211596 temp10610_228))
(assert (= temp10610_230 #xffffffffffffffff))
(assert (= temp10610_229 temp10610_230))
(assert (= temp10610_231 #x0000000000000001))
(assert (= var211058 temp10610_231))
(model-add temp10610_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10610_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10610_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10610_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





