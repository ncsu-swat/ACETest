(declare-fun temp766_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp766_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp766_3 () (_ BitVec 64))
(declare-fun temp766_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp766_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp766_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp766_7 () (_ BitVec 64))
(declare-fun temp766_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp766_9 () (_ BitVec 64))
(declare-fun temp766_10 () (_ BitVec 64))
(declare-fun temp766_11 () (_ BitVec 64))
(declare-fun temp766_12 () (_ BitVec 64))
(declare-fun temp766_13 () (_ BitVec 64))
(declare-fun temp766_14 () (_ BitVec 64))
(declare-fun temp766_15 () (_ BitVec 64))
(declare-fun temp766_16 () (_ BitVec 64))
(declare-fun temp766_17 () (_ BitVec 64))
(declare-fun temp766_18 () (_ BitVec 64))
(declare-fun temp766_19 () (_ BitVec 64))
(declare-fun temp766_20 () (_ BitVec 64))
(declare-fun temp766_21 () (_ BitVec 64))
(declare-fun temp766_22 () (_ BitVec 64))
(declare-fun temp766_23 () (_ BitVec 64))
(declare-fun temp766_24 () (_ BitVec 64))
(declare-fun temp766_25 () (_ BitVec 64))
(declare-fun temp766_26 () (_ BitVec 64))
(declare-fun temp766_27 () (_ BitVec 64))
(declare-fun temp766_28 () (_ BitVec 64))
(declare-fun temp766_29 () (_ BitVec 64))
(declare-fun temp766_30 () (_ BitVec 64))
(declare-fun temp766_31 () (_ BitVec 64))
(declare-fun temp766_32 () (_ BitVec 64))
(declare-fun temp766_33 () (_ BitVec 64))
(declare-fun temp766_34 () (_ BitVec 64))
(declare-fun temp766_35 () (_ BitVec 64))
(declare-fun temp766_36 () (_ BitVec 64))
(declare-fun temp766_37 () (_ BitVec 64))
(declare-fun temp766_38 () (_ BitVec 64))
(declare-fun temp766_39 () (_ BitVec 64))
(declare-fun temp766_40 () (_ BitVec 64))
(declare-fun temp766_41 () (_ BitVec 64))
(declare-fun temp766_42 () (_ BitVec 64))
(declare-fun temp766_43 () (_ BitVec 64))
(declare-fun temp766_44 () (_ BitVec 64))
(declare-fun temp766_45 () (_ BitVec 64))
(declare-fun temp766_46 () (_ BitVec 64))
(declare-fun temp766_47 () (_ BitVec 64))
(declare-fun temp766_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp766_49 () (_ BitVec 64))
(declare-fun temp766_50 () (_ BitVec 64))
(declare-fun temp766_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp766_52 () (_ BitVec 64))
(declare-fun temp766_53 () (_ BitVec 64))
(declare-fun temp766_54 () (_ BitVec 64))
(declare-fun temp766_55 () (_ BitVec 64))
(declare-fun temp766_56 () (_ BitVec 64))
(declare-fun temp766_57 () (_ BitVec 64))
(declare-fun temp766_58 () (_ BitVec 64))
(declare-fun temp766_59 () (_ BitVec 64))
(declare-fun temp766_60 () (_ BitVec 64))
(declare-fun temp766_61 () (_ BitVec 64))
(declare-fun temp766_62 () (_ BitVec 64))
(declare-fun temp766_63 () (_ BitVec 64))
(declare-fun temp766_64 () (_ BitVec 64))
(declare-fun temp766_65 () (_ BitVec 64))
(declare-fun temp766_66 () (_ BitVec 64))
(declare-fun temp766_67 () (_ BitVec 64))
(declare-fun temp766_68 () (_ BitVec 64))
(declare-fun temp766_69 () (_ BitVec 64))
(declare-fun temp766_70 () (_ BitVec 64))
(declare-fun temp766_71 () (_ BitVec 64))
(declare-fun temp766_72 () (_ BitVec 64))
(declare-fun temp766_73 () (_ BitVec 64))
(declare-fun temp766_74 () (_ BitVec 64))
(declare-fun temp766_75 () (_ BitVec 64))
(declare-fun temp766_76 () (_ BitVec 64))
(declare-fun temp766_77 () (_ BitVec 64))
(declare-fun temp766_78 () (_ BitVec 64))
(declare-fun temp766_79 () (_ BitVec 64))
(declare-fun temp766_80 () (_ BitVec 64))
(declare-fun temp766_81 () (_ BitVec 64))
(declare-fun temp766_82 () (_ BitVec 64))
(declare-fun temp766_83 () (_ BitVec 64))
(declare-fun temp766_84 () (_ BitVec 64))
(declare-fun temp766_85 () (_ BitVec 64))
(declare-fun temp766_86 () (_ BitVec 64))
(declare-fun temp766_87 () (_ BitVec 64))
(declare-fun temp766_88 () (_ BitVec 64))
(declare-fun temp766_89 () (_ BitVec 64))
(declare-fun temp766_90 () (_ BitVec 64))
(declare-fun temp766_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp766_92 () (_ BitVec 64))
(declare-fun temp766_93 () (_ BitVec 64))
(declare-fun temp766_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp766_95 () (_ BitVec 64))
(declare-fun temp766_96 () (_ BitVec 64))
(declare-fun temp766_97 () (_ BitVec 64))
(declare-fun temp766_98 () (_ BitVec 64))
(declare-fun temp766_99 () (_ BitVec 64))
(declare-fun temp766_100 () (_ BitVec 64))
(declare-fun temp766_101 () (_ BitVec 64))
(declare-fun temp766_102 () (_ BitVec 64))
(declare-fun temp766_103 () (_ BitVec 64))
(declare-fun temp766_104 () (_ BitVec 64))
(declare-fun temp766_105 () (_ BitVec 64))
(declare-fun temp766_106 () (_ BitVec 64))
(declare-fun temp766_107 () (_ BitVec 64))
(declare-fun temp766_108 () (_ BitVec 64))
(declare-fun temp766_109 () (_ BitVec 64))
(declare-fun temp766_110 () (_ BitVec 64))
(declare-fun temp766_111 () (_ BitVec 64))
(declare-fun temp766_112 () (_ BitVec 64))
(declare-fun temp766_113 () (_ BitVec 64))
(declare-fun temp766_114 () (_ BitVec 64))
(declare-fun temp766_115 () (_ BitVec 64))
(declare-fun temp766_116 () (_ BitVec 64))
(declare-fun temp766_117 () (_ BitVec 64))
(declare-fun temp766_118 () (_ BitVec 64))
(declare-fun temp766_119 () (_ BitVec 64))
(declare-fun temp766_120 () (_ BitVec 64))
(declare-fun temp766_121 () (_ BitVec 64))
(declare-fun temp766_122 () (_ BitVec 64))
(declare-fun temp766_123 () (_ BitVec 64))
(declare-fun temp766_124 () (_ BitVec 64))
(declare-fun temp766_125 () (_ BitVec 64))
(declare-fun temp766_126 () (_ BitVec 64))
(declare-fun temp766_127 () (_ BitVec 64))
(declare-fun temp766_128 () (_ BitVec 64))
(declare-fun temp766_129 () (_ BitVec 64))
(declare-fun temp766_130 () (_ BitVec 64))
(declare-fun temp766_131 () (_ BitVec 64))
(declare-fun temp766_132 () (_ BitVec 64))
(declare-fun temp766_133 () (_ BitVec 64))
(declare-fun temp766_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp766_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp766_136 () (_ BitVec 64))
(declare-fun temp766_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp766_138 () (_ BitVec 64))
(declare-fun temp766_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp766_140 () (_ BitVec 64))
(declare-fun temp766_141 () (_ BitVec 64))
(declare-fun temp766_142 () (_ BitVec 64))
(declare-fun temp766_143 () (_ BitVec 64))
(declare-fun temp766_144 () (_ BitVec 64))
(declare-fun temp766_145 () (_ BitVec 64))
(declare-fun temp766_146 () (_ BitVec 64))
(declare-fun temp766_147 () (_ BitVec 64))
(declare-fun temp766_148 () (_ BitVec 64))
(declare-fun temp766_149 () (_ BitVec 64))
(declare-fun temp766_150 () (_ BitVec 64))
(declare-fun temp766_151 () (_ BitVec 64))
(declare-fun temp766_152 () (_ BitVec 64))
(declare-fun temp766_153 () (_ BitVec 64))
(declare-fun temp766_154 () (_ BitVec 64))
(declare-fun temp766_155 () (_ BitVec 64))
(declare-fun temp766_157 () (_ BitVec 64))
(declare-fun temp766_158 () (_ BitVec 64))
(declare-fun temp766_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp766_159 () (_ BitVec 64))
(declare-fun temp766_160 () (_ BitVec 64))
(declare-fun temp766_162 () (_ BitVec 64))
(declare-fun temp766_163 () (_ BitVec 64))
(declare-fun temp766_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp766_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp766_165 () (_ BitVec 64))
(declare-fun temp766_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp766_167 () (_ BitVec 64))
(declare-fun temp766_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp766_169 () (_ BitVec 64))
(declare-fun temp766_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp766_171 () (_ BitVec 64))
(declare-fun temp766_172 () (_ BitVec 64))
(declare-fun temp766_173 () (_ BitVec 64))
(declare-fun temp766_174 () (_ BitVec 64))
(declare-fun temp766_175 () (_ BitVec 64))
(declare-fun temp766_176 () (_ BitVec 64))
(declare-fun temp766_177 () (_ BitVec 64))
(declare-fun temp766_178 () (_ BitVec 64))
(declare-fun temp766_179 () (_ BitVec 64))
(declare-fun temp766_180 () (_ BitVec 64))
(declare-fun temp766_181 () (_ BitVec 64))
(declare-fun temp766_182 () (_ BitVec 64))
(declare-fun temp766_183 () (_ BitVec 64))
(declare-fun temp766_184 () (_ BitVec 64))
(declare-fun temp766_185 () (_ BitVec 64))
(declare-fun temp766_186 () (_ BitVec 64))
(declare-fun temp766_187 () (_ BitVec 64))
(declare-fun temp766_188 () (_ BitVec 64))
(declare-fun temp766_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp766_190 () (_ BitVec 64))
(declare-fun temp766_192 () (_ BitVec 64))
(declare-fun temp766_193 () (_ BitVec 64))
(declare-fun temp766_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp766_194 () (_ BitVec 64))
(declare-fun temp766_195 () (_ BitVec 64))
(declare-fun temp766_197 () (_ BitVec 64))
(declare-fun temp766_198 () (_ BitVec 64))
(declare-fun temp766_196 () (_ BitVec 64))
(declare-fun temp766_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp766_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp766_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp766_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp766_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp766_204 () (_ BitVec 64))
(declare-fun temp766_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp766_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp766_207 () (_ BitVec 64))
(declare-fun temp766_208 () (_ BitVec 64))
(declare-fun temp766_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp766_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp766_211 () (_ BitVec 64))
(declare-fun temp766_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp766_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp766_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp766_216 () (_ BitVec 64))
(declare-fun temp766_215 () (_ BitVec 64))
(declare-fun temp766_217 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp766_218 () (_ BitVec 64))
(declare-fun temp766_219 () (_ BitVec 64))
(declare-fun temp766_220 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp766_221 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp766_222 () (_ BitVec 64))
(declare-fun temp766_223 () (_ BitVec 64))
(assert (= temp766_1 #x0000000000000001))
(assert (= var77203 temp766_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp766_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp766_2)))
(assert (= temp766_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp766_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp766_4 #x0000000000000000))
(assert (= var210941 temp766_4))
(assert (= temp766_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp766_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp766_6 #x0000000000000000))
(assert (= var210986 temp766_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp766_7 #x0000000000000000))
(assert (= temp766_8 temp766_7))
(assert (= temp766_9 (select ARGNAME_padding_NAMEEND_VAL temp766_8)))
(assert (= temp766_10 #x0000000000000001))
(assert (= temp766_11 temp766_10))
(assert (= temp766_12 (select ARGNAME_padding_NAMEEND_VAL temp766_11)))
(assert (= temp766_13 #x0000000000000002))
(assert (= temp766_14 temp766_13))
(assert (= temp766_15 (select ARGNAME_padding_NAMEEND_VAL temp766_14)))
(assert (= temp766_16 #x0000000000000003))
(assert (= temp766_17 temp766_16))
(assert (= temp766_18 (select ARGNAME_padding_NAMEEND_VAL temp766_17)))
(assert (= temp766_19 #x0000000000000004))
(assert (= temp766_20 temp766_19))
(assert (= temp766_21 (select ARGNAME_padding_NAMEEND_VAL temp766_20)))
(assert (= temp766_22 #x0000000000000005))
(assert (= temp766_23 temp766_22))
(assert (= temp766_24 (select ARGNAME_padding_NAMEEND_VAL temp766_23)))
(assert (= temp766_25 #x0000000000000000))
(assert (= temp766_26 #x0000000000000000))
(assert (= temp766_27 temp766_26))
(assert (= temp766_28 (select ARGNAME_padding_NAMEEND_VAL temp766_27)))
(assert (= temp766_29 #x0000000000000000))
(assert (= temp766_30 #x0000000000000001))
(assert (= temp766_31 temp766_30))
(assert (= temp766_32 (select ARGNAME_padding_NAMEEND_VAL temp766_31)))
(assert (= temp766_33 #x0000000000000000))
(assert (= temp766_34 #x0000000000000002))
(assert (= temp766_35 temp766_34))
(assert (= temp766_36 (select ARGNAME_padding_NAMEEND_VAL temp766_35)))
(assert (= temp766_37 #x0000000000000000))
(assert (= temp766_38 #x0000000000000003))
(assert (= temp766_39 temp766_38))
(assert (= temp766_40 (select ARGNAME_padding_NAMEEND_VAL temp766_39)))
(assert (= temp766_41 #x0000000000000000))
(assert (= temp766_42 #x0000000000000004))
(assert (= temp766_43 temp766_42))
(assert (= temp766_44 (select ARGNAME_padding_NAMEEND_VAL temp766_43)))
(assert (= temp766_45 #x0000000000000000))
(assert (= temp766_46 #x0000000000000005))
(assert (= temp766_47 temp766_46))
(assert (= temp766_48 (select ARGNAME_padding_NAMEEND_VAL temp766_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp766_28 temp766_25)
             (bvslt temp766_32 temp766_29)
             (bvslt temp766_36 temp766_33)
             (bvslt temp766_40 temp766_37)
             (bvslt temp766_44 temp766_41)
             (bvslt temp766_48 temp766_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp766_49 #x0000000000000000))
(assert (= var1191714 temp766_49))
(assert (= temp766_50 #x0000000000000000))
(assert (= temp766_51 temp766_50))
(assert (= temp766_52 (select ARGNAME_output_padding_NAMEEND_VAL temp766_51)))
(assert (= temp766_53 #x0000000000000001))
(assert (= temp766_54 temp766_53))
(assert (= temp766_55 (select ARGNAME_output_padding_NAMEEND_VAL temp766_54)))
(assert (= temp766_56 #x0000000000000002))
(assert (= temp766_57 temp766_56))
(assert (= temp766_58 (select ARGNAME_output_padding_NAMEEND_VAL temp766_57)))
(assert (= temp766_59 #x0000000000000003))
(assert (= temp766_60 temp766_59))
(assert (= temp766_61 (select ARGNAME_output_padding_NAMEEND_VAL temp766_60)))
(assert (= temp766_62 #x0000000000000004))
(assert (= temp766_63 temp766_62))
(assert (= temp766_64 (select ARGNAME_output_padding_NAMEEND_VAL temp766_63)))
(assert (= temp766_65 #x0000000000000005))
(assert (= temp766_66 temp766_65))
(assert (= temp766_67 (select ARGNAME_output_padding_NAMEEND_VAL temp766_66)))
(assert (= temp766_68 #x0000000000000000))
(assert (= temp766_69 #x0000000000000000))
(assert (= temp766_70 temp766_69))
(assert (= temp766_71 (select ARGNAME_output_padding_NAMEEND_VAL temp766_70)))
(assert (= temp766_72 #x0000000000000000))
(assert (= temp766_73 #x0000000000000001))
(assert (= temp766_74 temp766_73))
(assert (= temp766_75 (select ARGNAME_output_padding_NAMEEND_VAL temp766_74)))
(assert (= temp766_76 #x0000000000000000))
(assert (= temp766_77 #x0000000000000002))
(assert (= temp766_78 temp766_77))
(assert (= temp766_79 (select ARGNAME_output_padding_NAMEEND_VAL temp766_78)))
(assert (= temp766_80 #x0000000000000000))
(assert (= temp766_81 #x0000000000000003))
(assert (= temp766_82 temp766_81))
(assert (= temp766_83 (select ARGNAME_output_padding_NAMEEND_VAL temp766_82)))
(assert (= temp766_84 #x0000000000000000))
(assert (= temp766_85 #x0000000000000004))
(assert (= temp766_86 temp766_85))
(assert (= temp766_87 (select ARGNAME_output_padding_NAMEEND_VAL temp766_86)))
(assert (= temp766_88 #x0000000000000000))
(assert (= temp766_89 #x0000000000000005))
(assert (= temp766_90 temp766_89))
(assert (= temp766_91 (select ARGNAME_output_padding_NAMEEND_VAL temp766_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp766_71 temp766_68)
             (bvslt temp766_75 temp766_72)
             (bvslt temp766_79 temp766_76)
             (bvslt temp766_83 temp766_80)
             (bvslt temp766_87 temp766_84)
             (bvslt temp766_91 temp766_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp766_92 #x0000000000000000))
(assert (= var1191725 temp766_92))
(assert (= temp766_93 #x0000000000000000))
(assert (= temp766_94 temp766_93))
(assert (= temp766_95 (select ARGNAME_stride_NAMEEND_VAL temp766_94)))
(assert (= temp766_96 #x0000000000000001))
(assert (= temp766_97 temp766_96))
(assert (= temp766_98 (select ARGNAME_stride_NAMEEND_VAL temp766_97)))
(assert (= temp766_99 #x0000000000000002))
(assert (= temp766_100 temp766_99))
(assert (= temp766_101 (select ARGNAME_stride_NAMEEND_VAL temp766_100)))
(assert (= temp766_102 #x0000000000000003))
(assert (= temp766_103 temp766_102))
(assert (= temp766_104 (select ARGNAME_stride_NAMEEND_VAL temp766_103)))
(assert (= temp766_105 #x0000000000000004))
(assert (= temp766_106 temp766_105))
(assert (= temp766_107 (select ARGNAME_stride_NAMEEND_VAL temp766_106)))
(assert (= temp766_108 #x0000000000000005))
(assert (= temp766_109 temp766_108))
(assert (= temp766_110 (select ARGNAME_stride_NAMEEND_VAL temp766_109)))
(assert (= temp766_111 #x0000000000000000))
(assert (= temp766_112 #x0000000000000000))
(assert (= temp766_113 temp766_112))
(assert (= temp766_114 (select ARGNAME_stride_NAMEEND_VAL temp766_113)))
(assert (= temp766_115 #x0000000000000000))
(assert (= temp766_116 #x0000000000000001))
(assert (= temp766_117 temp766_116))
(assert (= temp766_118 (select ARGNAME_stride_NAMEEND_VAL temp766_117)))
(assert (= temp766_119 #x0000000000000000))
(assert (= temp766_120 #x0000000000000002))
(assert (= temp766_121 temp766_120))
(assert (= temp766_122 (select ARGNAME_stride_NAMEEND_VAL temp766_121)))
(assert (= temp766_123 #x0000000000000000))
(assert (= temp766_124 #x0000000000000003))
(assert (= temp766_125 temp766_124))
(assert (= temp766_126 (select ARGNAME_stride_NAMEEND_VAL temp766_125)))
(assert (= temp766_127 #x0000000000000000))
(assert (= temp766_128 #x0000000000000004))
(assert (= temp766_129 temp766_128))
(assert (= temp766_130 (select ARGNAME_stride_NAMEEND_VAL temp766_129)))
(assert (= temp766_131 #x0000000000000000))
(assert (= temp766_132 #x0000000000000005))
(assert (= temp766_133 temp766_132))
(assert (= temp766_134 (select ARGNAME_stride_NAMEEND_VAL temp766_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp766_114 temp766_111)
             (bvsle temp766_118 temp766_115)
             (bvsle temp766_122 temp766_119)
             (bvsle temp766_126 temp766_123)
             (bvsle temp766_130 temp766_127)
             (bvsle temp766_134 temp766_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp766_135 #x0000000000000000))
(assert (= var1191735 temp766_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp766_136 #x0000000000000001))
(assert (= var1191747 temp766_136))
(assert (= temp766_137 #x0000000000000000))
(assert (= var1179826 temp766_137))
(assert (= temp766_138 #x0000000000000000))
(assert (= temp766_139 temp766_138))
(assert (= temp766_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp766_139)))
(assert (= temp766_141 #x0000000000000001))
(assert (= temp766_142 temp766_141))
(assert (= temp766_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp766_142)))
(assert (= temp766_144 #x0000000000000002))
(assert (= temp766_145 temp766_144))
(assert (= temp766_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp766_145)))
(assert (= temp766_147 #x0000000000000003))
(assert (= temp766_148 temp766_147))
(assert (= temp766_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp766_148)))
(assert (= temp766_150 #x0000000000000004))
(assert (= temp766_151 temp766_150))
(assert (= temp766_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp766_151)))
(assert (= temp766_153 #x0000000000000005))
(assert (= temp766_154 temp766_153))
(assert (= temp766_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp766_154)))
(assert (= temp766_157 var1179826))
(assert (= temp766_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp766_157)))
(assert (= temp766_156 temp766_158))
(assert (= var1191780
   (ite (bvslt temp766_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp766_159 #x0000000000000000))
(assert (= var1191780 temp766_159))
(assert (= temp766_160 #x0000000000000000))
(assert (= var1179826 temp766_160))
(assert (= temp766_162 var1179826))
(assert (= temp766_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp766_162)))
(assert (= temp766_161 temp766_163))
(assert (= var1191802 (bvsmod temp766_161 ARGNAME_groups_NAMEEND)))
(assert (= temp766_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp766_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp766_165 #x0000000000000001))
(assert (= var1191803 temp766_165))
(assert (= temp766_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp766_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp766_167 #x0000000000000001))
(assert (= var1191823 temp766_167))
(assert (= temp766_168 #x0000000000000001))
(assert (= var1180714 temp766_168))
(assert (= temp766_169 #x0000000000000000))
(assert (= temp766_170 temp766_169))
(assert (= temp766_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp766_170)))
(assert (= temp766_172 #x0000000000000001))
(assert (= temp766_173 temp766_172))
(assert (= temp766_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp766_173)))
(assert (= temp766_175 #x0000000000000002))
(assert (= temp766_176 temp766_175))
(assert (= temp766_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp766_176)))
(assert (= temp766_178 #x0000000000000003))
(assert (= temp766_179 temp766_178))
(assert (= temp766_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp766_179)))
(assert (= temp766_181 #x0000000000000004))
(assert (= temp766_182 temp766_181))
(assert (= temp766_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp766_182)))
(assert (= temp766_184 #x0000000000000005))
(assert (= temp766_185 temp766_184))
(assert (= temp766_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp766_185)))
(assert (= temp766_187 #x0000000000000000))
(assert (= temp766_188
   (ite (bvslt var1180714 temp766_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp766_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp766_188)))
(assert (= var1191831 temp766_189))
(assert (bvslt (ite (bvslt var1180714 temp766_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp766_190 #x0000000000000001))
(assert (= var1180714 temp766_190))
(assert (= temp766_192 var1180714))
(assert (= temp766_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp766_192)))
(assert (= temp766_191 temp766_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp766_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp766_194 #x0000000000000001))
(assert (= var1191836 temp766_194))
(assert (= temp766_195 #x0000000000000000))
(assert (= var1179826 temp766_195))
(assert (= temp766_197 var1179826))
(assert (= temp766_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp766_197)))
(assert (= temp766_196 temp766_198))
(assert (= temp766_199 #x0000000000000002))
(assert (= var1586025 temp766_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp766_200 #x0000000000000001))
(assert (= var1191993 temp766_200))
(assert (= temp766_201 #x0000000000000001))
(assert (= var2700303 temp766_201))
(assert (= temp766_202 #x0000000000000001))
(assert (= var2962447 temp766_202))
(assert (= temp766_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp766_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp766_204 #x0000000000000001))
(assert (= var211058 temp766_204))
(assert (= temp766_205 #x0000000000000001))
(assert (= var211188 temp766_205))
(assert (= var3879401 var211188))
(assert (= temp766_206 #x0000000000000000))
(assert (= var3866802 temp766_206))
(assert (= temp766_207 #x0000000000000000))
(assert (= temp766_208
   (ite (bvslt var3866802 temp766_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp766_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp766_208)))
(assert (= var3879420 temp766_209))
(assert (bvslt (ite (bvslt var3866802 temp766_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp766_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp766_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp766_211 #x0000000000000001))
(assert (= var3879421 temp766_211))
(assert (= temp766_212 #x0000000000000000))
(assert (= var4079423 temp766_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp766_213 #x0000000000000002))
(assert (= var4208259 temp766_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp766_214 #x0000000000000000))
(assert (= var4273820 temp766_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp766_216 #xffffffffffffffff))
(assert (= temp766_215 temp766_216))
(assert (= temp766_217 #x0000000000000001))
(assert (= var197674 temp766_217))
(assert (= temp766_218 #x0000000000000000))
(assert (= temp766_219
   (ite (bvslt var197674 temp766_218)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp766_220 (select ARGNAME_input_NAMEEND_DIMSIZE temp766_219)))
(assert (= var211595 temp766_220))
(assert (bvslt (ite (bvslt var197674 temp766_218)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp766_221 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp766_221) #x0000000000000001 #x0000000000000000)))
(assert (= temp766_222 #x0000000000000000))
(assert (= var211596 temp766_222))
(assert (= temp766_223 #x0000000000000001))
(assert (= var211058 temp766_223))
(model-add temp766_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp766_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp766_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp766_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




