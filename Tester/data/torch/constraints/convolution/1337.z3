(declare-fun temp10513_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10513_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10513_3 () (_ BitVec 64))
(declare-fun temp10513_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10513_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10513_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10513_7 () (_ BitVec 64))
(declare-fun temp10513_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10513_9 () (_ BitVec 64))
(declare-fun temp10513_10 () (_ BitVec 64))
(declare-fun temp10513_11 () (_ BitVec 64))
(declare-fun temp10513_12 () (_ BitVec 64))
(declare-fun temp10513_13 () (_ BitVec 64))
(declare-fun temp10513_14 () (_ BitVec 64))
(declare-fun temp10513_15 () (_ BitVec 64))
(declare-fun temp10513_16 () (_ BitVec 64))
(declare-fun temp10513_17 () (_ BitVec 64))
(declare-fun temp10513_18 () (_ BitVec 64))
(declare-fun temp10513_19 () (_ BitVec 64))
(declare-fun temp10513_20 () (_ BitVec 64))
(declare-fun temp10513_21 () (_ BitVec 64))
(declare-fun temp10513_22 () (_ BitVec 64))
(declare-fun temp10513_23 () (_ BitVec 64))
(declare-fun temp10513_24 () (_ BitVec 64))
(declare-fun temp10513_25 () (_ BitVec 64))
(declare-fun temp10513_26 () (_ BitVec 64))
(declare-fun temp10513_27 () (_ BitVec 64))
(declare-fun temp10513_28 () (_ BitVec 64))
(declare-fun temp10513_29 () (_ BitVec 64))
(declare-fun temp10513_30 () (_ BitVec 64))
(declare-fun temp10513_31 () (_ BitVec 64))
(declare-fun temp10513_32 () (_ BitVec 64))
(declare-fun temp10513_33 () (_ BitVec 64))
(declare-fun temp10513_34 () (_ BitVec 64))
(declare-fun temp10513_35 () (_ BitVec 64))
(declare-fun temp10513_36 () (_ BitVec 64))
(declare-fun temp10513_37 () (_ BitVec 64))
(declare-fun temp10513_38 () (_ BitVec 64))
(declare-fun temp10513_39 () (_ BitVec 64))
(declare-fun temp10513_40 () (_ BitVec 64))
(declare-fun temp10513_41 () (_ BitVec 64))
(declare-fun temp10513_42 () (_ BitVec 64))
(declare-fun temp10513_43 () (_ BitVec 64))
(declare-fun temp10513_44 () (_ BitVec 64))
(declare-fun temp10513_45 () (_ BitVec 64))
(declare-fun temp10513_46 () (_ BitVec 64))
(declare-fun temp10513_47 () (_ BitVec 64))
(declare-fun temp10513_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10513_49 () (_ BitVec 64))
(declare-fun temp10513_50 () (_ BitVec 64))
(declare-fun temp10513_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10513_52 () (_ BitVec 64))
(declare-fun temp10513_53 () (_ BitVec 64))
(declare-fun temp10513_54 () (_ BitVec 64))
(declare-fun temp10513_55 () (_ BitVec 64))
(declare-fun temp10513_56 () (_ BitVec 64))
(declare-fun temp10513_57 () (_ BitVec 64))
(declare-fun temp10513_58 () (_ BitVec 64))
(declare-fun temp10513_59 () (_ BitVec 64))
(declare-fun temp10513_60 () (_ BitVec 64))
(declare-fun temp10513_61 () (_ BitVec 64))
(declare-fun temp10513_62 () (_ BitVec 64))
(declare-fun temp10513_63 () (_ BitVec 64))
(declare-fun temp10513_64 () (_ BitVec 64))
(declare-fun temp10513_65 () (_ BitVec 64))
(declare-fun temp10513_66 () (_ BitVec 64))
(declare-fun temp10513_67 () (_ BitVec 64))
(declare-fun temp10513_68 () (_ BitVec 64))
(declare-fun temp10513_69 () (_ BitVec 64))
(declare-fun temp10513_70 () (_ BitVec 64))
(declare-fun temp10513_71 () (_ BitVec 64))
(declare-fun temp10513_72 () (_ BitVec 64))
(declare-fun temp10513_73 () (_ BitVec 64))
(declare-fun temp10513_74 () (_ BitVec 64))
(declare-fun temp10513_75 () (_ BitVec 64))
(declare-fun temp10513_76 () (_ BitVec 64))
(declare-fun temp10513_77 () (_ BitVec 64))
(declare-fun temp10513_78 () (_ BitVec 64))
(declare-fun temp10513_79 () (_ BitVec 64))
(declare-fun temp10513_80 () (_ BitVec 64))
(declare-fun temp10513_81 () (_ BitVec 64))
(declare-fun temp10513_82 () (_ BitVec 64))
(declare-fun temp10513_83 () (_ BitVec 64))
(declare-fun temp10513_84 () (_ BitVec 64))
(declare-fun temp10513_85 () (_ BitVec 64))
(declare-fun temp10513_86 () (_ BitVec 64))
(declare-fun temp10513_87 () (_ BitVec 64))
(declare-fun temp10513_88 () (_ BitVec 64))
(declare-fun temp10513_89 () (_ BitVec 64))
(declare-fun temp10513_90 () (_ BitVec 64))
(declare-fun temp10513_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10513_92 () (_ BitVec 64))
(declare-fun temp10513_93 () (_ BitVec 64))
(declare-fun temp10513_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10513_95 () (_ BitVec 64))
(declare-fun temp10513_96 () (_ BitVec 64))
(declare-fun temp10513_97 () (_ BitVec 64))
(declare-fun temp10513_98 () (_ BitVec 64))
(declare-fun temp10513_99 () (_ BitVec 64))
(declare-fun temp10513_100 () (_ BitVec 64))
(declare-fun temp10513_101 () (_ BitVec 64))
(declare-fun temp10513_102 () (_ BitVec 64))
(declare-fun temp10513_103 () (_ BitVec 64))
(declare-fun temp10513_104 () (_ BitVec 64))
(declare-fun temp10513_105 () (_ BitVec 64))
(declare-fun temp10513_106 () (_ BitVec 64))
(declare-fun temp10513_107 () (_ BitVec 64))
(declare-fun temp10513_108 () (_ BitVec 64))
(declare-fun temp10513_109 () (_ BitVec 64))
(declare-fun temp10513_110 () (_ BitVec 64))
(declare-fun temp10513_111 () (_ BitVec 64))
(declare-fun temp10513_112 () (_ BitVec 64))
(declare-fun temp10513_113 () (_ BitVec 64))
(declare-fun temp10513_114 () (_ BitVec 64))
(declare-fun temp10513_115 () (_ BitVec 64))
(declare-fun temp10513_116 () (_ BitVec 64))
(declare-fun temp10513_117 () (_ BitVec 64))
(declare-fun temp10513_118 () (_ BitVec 64))
(declare-fun temp10513_119 () (_ BitVec 64))
(declare-fun temp10513_120 () (_ BitVec 64))
(declare-fun temp10513_121 () (_ BitVec 64))
(declare-fun temp10513_122 () (_ BitVec 64))
(declare-fun temp10513_123 () (_ BitVec 64))
(declare-fun temp10513_124 () (_ BitVec 64))
(declare-fun temp10513_125 () (_ BitVec 64))
(declare-fun temp10513_126 () (_ BitVec 64))
(declare-fun temp10513_127 () (_ BitVec 64))
(declare-fun temp10513_128 () (_ BitVec 64))
(declare-fun temp10513_129 () (_ BitVec 64))
(declare-fun temp10513_130 () (_ BitVec 64))
(declare-fun temp10513_131 () (_ BitVec 64))
(declare-fun temp10513_132 () (_ BitVec 64))
(declare-fun temp10513_133 () (_ BitVec 64))
(declare-fun temp10513_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10513_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10513_136 () (_ BitVec 64))
(declare-fun temp10513_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10513_138 () (_ BitVec 64))
(declare-fun temp10513_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10513_140 () (_ BitVec 64))
(declare-fun temp10513_141 () (_ BitVec 64))
(declare-fun temp10513_142 () (_ BitVec 64))
(declare-fun temp10513_143 () (_ BitVec 64))
(declare-fun temp10513_144 () (_ BitVec 64))
(declare-fun temp10513_145 () (_ BitVec 64))
(declare-fun temp10513_146 () (_ BitVec 64))
(declare-fun temp10513_147 () (_ BitVec 64))
(declare-fun temp10513_148 () (_ BitVec 64))
(declare-fun temp10513_149 () (_ BitVec 64))
(declare-fun temp10513_150 () (_ BitVec 64))
(declare-fun temp10513_151 () (_ BitVec 64))
(declare-fun temp10513_152 () (_ BitVec 64))
(declare-fun temp10513_153 () (_ BitVec 64))
(declare-fun temp10513_154 () (_ BitVec 64))
(declare-fun temp10513_155 () (_ BitVec 64))
(declare-fun temp10513_157 () (_ BitVec 64))
(declare-fun temp10513_158 () (_ BitVec 64))
(declare-fun temp10513_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10513_159 () (_ BitVec 64))
(declare-fun temp10513_160 () (_ BitVec 64))
(declare-fun temp10513_162 () (_ BitVec 64))
(declare-fun temp10513_163 () (_ BitVec 64))
(declare-fun temp10513_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10513_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10513_165 () (_ BitVec 64))
(declare-fun temp10513_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10513_167 () (_ BitVec 64))
(declare-fun temp10513_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10513_169 () (_ BitVec 64))
(declare-fun temp10513_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10513_171 () (_ BitVec 64))
(declare-fun temp10513_172 () (_ BitVec 64))
(declare-fun temp10513_173 () (_ BitVec 64))
(declare-fun temp10513_174 () (_ BitVec 64))
(declare-fun temp10513_175 () (_ BitVec 64))
(declare-fun temp10513_176 () (_ BitVec 64))
(declare-fun temp10513_177 () (_ BitVec 64))
(declare-fun temp10513_178 () (_ BitVec 64))
(declare-fun temp10513_179 () (_ BitVec 64))
(declare-fun temp10513_180 () (_ BitVec 64))
(declare-fun temp10513_181 () (_ BitVec 64))
(declare-fun temp10513_182 () (_ BitVec 64))
(declare-fun temp10513_183 () (_ BitVec 64))
(declare-fun temp10513_184 () (_ BitVec 64))
(declare-fun temp10513_185 () (_ BitVec 64))
(declare-fun temp10513_186 () (_ BitVec 64))
(declare-fun temp10513_187 () (_ BitVec 64))
(declare-fun temp10513_188 () (_ BitVec 64))
(declare-fun temp10513_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10513_190 () (_ BitVec 64))
(declare-fun temp10513_192 () (_ BitVec 64))
(declare-fun temp10513_193 () (_ BitVec 64))
(declare-fun temp10513_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10513_194 () (_ BitVec 64))
(declare-fun temp10513_195 () (_ BitVec 64))
(declare-fun temp10513_197 () (_ BitVec 64))
(declare-fun temp10513_198 () (_ BitVec 64))
(declare-fun temp10513_196 () (_ BitVec 64))
(declare-fun temp10513_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10513_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10513_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10513_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10513_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10513_204 () (_ BitVec 64))
(declare-fun temp10513_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10513_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10513_207 () (_ BitVec 64))
(declare-fun temp10513_208 () (_ BitVec 64))
(declare-fun temp10513_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10513_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10513_211 () (_ BitVec 64))
(declare-fun temp10513_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10513_213 () (_ BitVec 64))
(declare-fun temp10513_214 () (_ BitVec 64))
(declare-fun temp10513_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10513_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10513_217 () (_ BitVec 64))
(declare-fun temp10513_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10513_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10513_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp10513_221 () (_ BitVec 64))
(assert (= temp10513_1 #x0000000000000001))
(assert (= var77203 temp10513_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10513_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10513_2)))
(assert (= temp10513_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10513_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10513_4 #x0000000000000000))
(assert (= var210941 temp10513_4))
(assert (= temp10513_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10513_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10513_6 #x0000000000000000))
(assert (= var210986 temp10513_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10513_7 #x0000000000000000))
(assert (= temp10513_8 temp10513_7))
(assert (= temp10513_9 (select ARGNAME_padding_NAMEEND_VAL temp10513_8)))
(assert (= temp10513_10 #x0000000000000001))
(assert (= temp10513_11 temp10513_10))
(assert (= temp10513_12 (select ARGNAME_padding_NAMEEND_VAL temp10513_11)))
(assert (= temp10513_13 #x0000000000000002))
(assert (= temp10513_14 temp10513_13))
(assert (= temp10513_15 (select ARGNAME_padding_NAMEEND_VAL temp10513_14)))
(assert (= temp10513_16 #x0000000000000003))
(assert (= temp10513_17 temp10513_16))
(assert (= temp10513_18 (select ARGNAME_padding_NAMEEND_VAL temp10513_17)))
(assert (= temp10513_19 #x0000000000000004))
(assert (= temp10513_20 temp10513_19))
(assert (= temp10513_21 (select ARGNAME_padding_NAMEEND_VAL temp10513_20)))
(assert (= temp10513_22 #x0000000000000005))
(assert (= temp10513_23 temp10513_22))
(assert (= temp10513_24 (select ARGNAME_padding_NAMEEND_VAL temp10513_23)))
(assert (= temp10513_25 #x0000000000000000))
(assert (= temp10513_26 #x0000000000000000))
(assert (= temp10513_27 temp10513_26))
(assert (= temp10513_28 (select ARGNAME_padding_NAMEEND_VAL temp10513_27)))
(assert (= temp10513_29 #x0000000000000000))
(assert (= temp10513_30 #x0000000000000001))
(assert (= temp10513_31 temp10513_30))
(assert (= temp10513_32 (select ARGNAME_padding_NAMEEND_VAL temp10513_31)))
(assert (= temp10513_33 #x0000000000000000))
(assert (= temp10513_34 #x0000000000000002))
(assert (= temp10513_35 temp10513_34))
(assert (= temp10513_36 (select ARGNAME_padding_NAMEEND_VAL temp10513_35)))
(assert (= temp10513_37 #x0000000000000000))
(assert (= temp10513_38 #x0000000000000003))
(assert (= temp10513_39 temp10513_38))
(assert (= temp10513_40 (select ARGNAME_padding_NAMEEND_VAL temp10513_39)))
(assert (= temp10513_41 #x0000000000000000))
(assert (= temp10513_42 #x0000000000000004))
(assert (= temp10513_43 temp10513_42))
(assert (= temp10513_44 (select ARGNAME_padding_NAMEEND_VAL temp10513_43)))
(assert (= temp10513_45 #x0000000000000000))
(assert (= temp10513_46 #x0000000000000005))
(assert (= temp10513_47 temp10513_46))
(assert (= temp10513_48 (select ARGNAME_padding_NAMEEND_VAL temp10513_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10513_28 temp10513_25)
             (bvslt temp10513_32 temp10513_29)
             (bvslt temp10513_36 temp10513_33)
             (bvslt temp10513_40 temp10513_37)
             (bvslt temp10513_44 temp10513_41)
             (bvslt temp10513_48 temp10513_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10513_49 #x0000000000000000))
(assert (= var1191714 temp10513_49))
(assert (= temp10513_50 #x0000000000000000))
(assert (= temp10513_51 temp10513_50))
(assert (= temp10513_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10513_51)))
(assert (= temp10513_53 #x0000000000000001))
(assert (= temp10513_54 temp10513_53))
(assert (= temp10513_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10513_54)))
(assert (= temp10513_56 #x0000000000000002))
(assert (= temp10513_57 temp10513_56))
(assert (= temp10513_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10513_57)))
(assert (= temp10513_59 #x0000000000000003))
(assert (= temp10513_60 temp10513_59))
(assert (= temp10513_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10513_60)))
(assert (= temp10513_62 #x0000000000000004))
(assert (= temp10513_63 temp10513_62))
(assert (= temp10513_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10513_63)))
(assert (= temp10513_65 #x0000000000000005))
(assert (= temp10513_66 temp10513_65))
(assert (= temp10513_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10513_66)))
(assert (= temp10513_68 #x0000000000000000))
(assert (= temp10513_69 #x0000000000000000))
(assert (= temp10513_70 temp10513_69))
(assert (= temp10513_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10513_70)))
(assert (= temp10513_72 #x0000000000000000))
(assert (= temp10513_73 #x0000000000000001))
(assert (= temp10513_74 temp10513_73))
(assert (= temp10513_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10513_74)))
(assert (= temp10513_76 #x0000000000000000))
(assert (= temp10513_77 #x0000000000000002))
(assert (= temp10513_78 temp10513_77))
(assert (= temp10513_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10513_78)))
(assert (= temp10513_80 #x0000000000000000))
(assert (= temp10513_81 #x0000000000000003))
(assert (= temp10513_82 temp10513_81))
(assert (= temp10513_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10513_82)))
(assert (= temp10513_84 #x0000000000000000))
(assert (= temp10513_85 #x0000000000000004))
(assert (= temp10513_86 temp10513_85))
(assert (= temp10513_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10513_86)))
(assert (= temp10513_88 #x0000000000000000))
(assert (= temp10513_89 #x0000000000000005))
(assert (= temp10513_90 temp10513_89))
(assert (= temp10513_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10513_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10513_71 temp10513_68)
             (bvslt temp10513_75 temp10513_72)
             (bvslt temp10513_79 temp10513_76)
             (bvslt temp10513_83 temp10513_80)
             (bvslt temp10513_87 temp10513_84)
             (bvslt temp10513_91 temp10513_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10513_92 #x0000000000000000))
(assert (= var1191725 temp10513_92))
(assert (= temp10513_93 #x0000000000000000))
(assert (= temp10513_94 temp10513_93))
(assert (= temp10513_95 (select ARGNAME_stride_NAMEEND_VAL temp10513_94)))
(assert (= temp10513_96 #x0000000000000001))
(assert (= temp10513_97 temp10513_96))
(assert (= temp10513_98 (select ARGNAME_stride_NAMEEND_VAL temp10513_97)))
(assert (= temp10513_99 #x0000000000000002))
(assert (= temp10513_100 temp10513_99))
(assert (= temp10513_101 (select ARGNAME_stride_NAMEEND_VAL temp10513_100)))
(assert (= temp10513_102 #x0000000000000003))
(assert (= temp10513_103 temp10513_102))
(assert (= temp10513_104 (select ARGNAME_stride_NAMEEND_VAL temp10513_103)))
(assert (= temp10513_105 #x0000000000000004))
(assert (= temp10513_106 temp10513_105))
(assert (= temp10513_107 (select ARGNAME_stride_NAMEEND_VAL temp10513_106)))
(assert (= temp10513_108 #x0000000000000005))
(assert (= temp10513_109 temp10513_108))
(assert (= temp10513_110 (select ARGNAME_stride_NAMEEND_VAL temp10513_109)))
(assert (= temp10513_111 #x0000000000000000))
(assert (= temp10513_112 #x0000000000000000))
(assert (= temp10513_113 temp10513_112))
(assert (= temp10513_114 (select ARGNAME_stride_NAMEEND_VAL temp10513_113)))
(assert (= temp10513_115 #x0000000000000000))
(assert (= temp10513_116 #x0000000000000001))
(assert (= temp10513_117 temp10513_116))
(assert (= temp10513_118 (select ARGNAME_stride_NAMEEND_VAL temp10513_117)))
(assert (= temp10513_119 #x0000000000000000))
(assert (= temp10513_120 #x0000000000000002))
(assert (= temp10513_121 temp10513_120))
(assert (= temp10513_122 (select ARGNAME_stride_NAMEEND_VAL temp10513_121)))
(assert (= temp10513_123 #x0000000000000000))
(assert (= temp10513_124 #x0000000000000003))
(assert (= temp10513_125 temp10513_124))
(assert (= temp10513_126 (select ARGNAME_stride_NAMEEND_VAL temp10513_125)))
(assert (= temp10513_127 #x0000000000000000))
(assert (= temp10513_128 #x0000000000000004))
(assert (= temp10513_129 temp10513_128))
(assert (= temp10513_130 (select ARGNAME_stride_NAMEEND_VAL temp10513_129)))
(assert (= temp10513_131 #x0000000000000000))
(assert (= temp10513_132 #x0000000000000005))
(assert (= temp10513_133 temp10513_132))
(assert (= temp10513_134 (select ARGNAME_stride_NAMEEND_VAL temp10513_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10513_114 temp10513_111)
             (bvsle temp10513_118 temp10513_115)
             (bvsle temp10513_122 temp10513_119)
             (bvsle temp10513_126 temp10513_123)
             (bvsle temp10513_130 temp10513_127)
             (bvsle temp10513_134 temp10513_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10513_135 #x0000000000000000))
(assert (= var1191735 temp10513_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10513_136 #x0000000000000001))
(assert (= var1191747 temp10513_136))
(assert (= temp10513_137 #x0000000000000000))
(assert (= var1179826 temp10513_137))
(assert (= temp10513_138 #x0000000000000000))
(assert (= temp10513_139 temp10513_138))
(assert (= temp10513_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10513_139)))
(assert (= temp10513_141 #x0000000000000001))
(assert (= temp10513_142 temp10513_141))
(assert (= temp10513_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10513_142)))
(assert (= temp10513_144 #x0000000000000002))
(assert (= temp10513_145 temp10513_144))
(assert (= temp10513_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10513_145)))
(assert (= temp10513_147 #x0000000000000003))
(assert (= temp10513_148 temp10513_147))
(assert (= temp10513_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10513_148)))
(assert (= temp10513_150 #x0000000000000004))
(assert (= temp10513_151 temp10513_150))
(assert (= temp10513_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10513_151)))
(assert (= temp10513_153 #x0000000000000005))
(assert (= temp10513_154 temp10513_153))
(assert (= temp10513_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10513_154)))
(assert (= temp10513_157 var1179826))
(assert (= temp10513_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10513_157)))
(assert (= temp10513_156 temp10513_158))
(assert (= var1191780
   (ite (bvslt temp10513_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10513_159 #x0000000000000000))
(assert (= var1191780 temp10513_159))
(assert (= temp10513_160 #x0000000000000000))
(assert (= var1179826 temp10513_160))
(assert (= temp10513_162 var1179826))
(assert (= temp10513_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10513_162)))
(assert (= temp10513_161 temp10513_163))
(assert (= var1191802 (bvsmod temp10513_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10513_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10513_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10513_165 #x0000000000000001))
(assert (= var1191803 temp10513_165))
(assert (= temp10513_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10513_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10513_167 #x0000000000000001))
(assert (= var1191823 temp10513_167))
(assert (= temp10513_168 #x0000000000000001))
(assert (= var1180714 temp10513_168))
(assert (= temp10513_169 #x0000000000000000))
(assert (= temp10513_170 temp10513_169))
(assert (= temp10513_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10513_170)))
(assert (= temp10513_172 #x0000000000000001))
(assert (= temp10513_173 temp10513_172))
(assert (= temp10513_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10513_173)))
(assert (= temp10513_175 #x0000000000000002))
(assert (= temp10513_176 temp10513_175))
(assert (= temp10513_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10513_176)))
(assert (= temp10513_178 #x0000000000000003))
(assert (= temp10513_179 temp10513_178))
(assert (= temp10513_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10513_179)))
(assert (= temp10513_181 #x0000000000000004))
(assert (= temp10513_182 temp10513_181))
(assert (= temp10513_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10513_182)))
(assert (= temp10513_184 #x0000000000000005))
(assert (= temp10513_185 temp10513_184))
(assert (= temp10513_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10513_185)))
(assert (= temp10513_187 #x0000000000000000))
(assert (= temp10513_188
   (ite (bvslt var1180714 temp10513_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10513_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10513_188)))
(assert (= var1191831 temp10513_189))
(assert (bvslt (ite (bvslt var1180714 temp10513_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10513_190 #x0000000000000001))
(assert (= var1180714 temp10513_190))
(assert (= temp10513_192 var1180714))
(assert (= temp10513_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10513_192)))
(assert (= temp10513_191 temp10513_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10513_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10513_194 #x0000000000000001))
(assert (= var1191836 temp10513_194))
(assert (= temp10513_195 #x0000000000000000))
(assert (= var1179826 temp10513_195))
(assert (= temp10513_197 var1179826))
(assert (= temp10513_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10513_197)))
(assert (= temp10513_196 temp10513_198))
(assert (= temp10513_199 #x0000000000000002))
(assert (= var1586025 temp10513_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10513_200 #x0000000000000001))
(assert (= var1191993 temp10513_200))
(assert (= temp10513_201 #x0000000000000001))
(assert (= var2700303 temp10513_201))
(assert (= temp10513_202 #x0000000000000001))
(assert (= var2962447 temp10513_202))
(assert (= temp10513_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10513_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10513_204 #x0000000000000001))
(assert (= var211058 temp10513_204))
(assert (= temp10513_205 #x0000000000000001))
(assert (= var211188 temp10513_205))
(assert (= var3879401 var211188))
(assert (= temp10513_206 #x0000000000000000))
(assert (= var3866802 temp10513_206))
(assert (= temp10513_207 #x0000000000000000))
(assert (= temp10513_208
   (ite (bvslt var3866802 temp10513_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10513_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10513_208)))
(assert (= var3879420 temp10513_209))
(assert (bvslt (ite (bvslt var3866802 temp10513_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10513_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10513_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10513_211 #x0000000000000000))
(assert (= var3879421 temp10513_211))
(assert (= temp10513_212 #x0000000000000001))
(assert (= var3867690 temp10513_212))
(assert (= temp10513_213 #x0000000000000000))
(assert (= temp10513_214
   (ite (bvslt var3867690 temp10513_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10513_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10513_214)))
(assert (= var3879423 temp10513_215))
(assert (bvslt (ite (bvslt var3867690 temp10513_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10513_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10513_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10513_217 #x0000000000000001))
(assert (= var3879424 temp10513_217))
(assert (= temp10513_218 #x0000000000000000))
(assert (= var4133117 temp10513_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10513_219 #x0000000000000002))
(assert (= var4339331 temp10513_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10513_220 #x0000000000000000))
(assert (= var4404892 temp10513_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp10513_221 #x0000000000000001))
(assert (= var211058 temp10513_221))
(model-add temp10513_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10513_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10513_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10513_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))



