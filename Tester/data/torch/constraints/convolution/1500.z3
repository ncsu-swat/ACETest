(declare-fun temp10794_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10794_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10794_3 () (_ BitVec 64))
(declare-fun temp10794_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10794_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10794_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10794_7 () (_ BitVec 64))
(declare-fun temp10794_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10794_9 () (_ BitVec 64))
(declare-fun temp10794_10 () (_ BitVec 64))
(declare-fun temp10794_11 () (_ BitVec 64))
(declare-fun temp10794_12 () (_ BitVec 64))
(declare-fun temp10794_13 () (_ BitVec 64))
(declare-fun temp10794_14 () (_ BitVec 64))
(declare-fun temp10794_15 () (_ BitVec 64))
(declare-fun temp10794_16 () (_ BitVec 64))
(declare-fun temp10794_17 () (_ BitVec 64))
(declare-fun temp10794_18 () (_ BitVec 64))
(declare-fun temp10794_19 () (_ BitVec 64))
(declare-fun temp10794_20 () (_ BitVec 64))
(declare-fun temp10794_21 () (_ BitVec 64))
(declare-fun temp10794_22 () (_ BitVec 64))
(declare-fun temp10794_23 () (_ BitVec 64))
(declare-fun temp10794_24 () (_ BitVec 64))
(declare-fun temp10794_25 () (_ BitVec 64))
(declare-fun temp10794_26 () (_ BitVec 64))
(declare-fun temp10794_27 () (_ BitVec 64))
(declare-fun temp10794_28 () (_ BitVec 64))
(declare-fun temp10794_29 () (_ BitVec 64))
(declare-fun temp10794_30 () (_ BitVec 64))
(declare-fun temp10794_31 () (_ BitVec 64))
(declare-fun temp10794_32 () (_ BitVec 64))
(declare-fun temp10794_33 () (_ BitVec 64))
(declare-fun temp10794_34 () (_ BitVec 64))
(declare-fun temp10794_35 () (_ BitVec 64))
(declare-fun temp10794_36 () (_ BitVec 64))
(declare-fun temp10794_37 () (_ BitVec 64))
(declare-fun temp10794_38 () (_ BitVec 64))
(declare-fun temp10794_39 () (_ BitVec 64))
(declare-fun temp10794_40 () (_ BitVec 64))
(declare-fun temp10794_41 () (_ BitVec 64))
(declare-fun temp10794_42 () (_ BitVec 64))
(declare-fun temp10794_43 () (_ BitVec 64))
(declare-fun temp10794_44 () (_ BitVec 64))
(declare-fun temp10794_45 () (_ BitVec 64))
(declare-fun temp10794_46 () (_ BitVec 64))
(declare-fun temp10794_47 () (_ BitVec 64))
(declare-fun temp10794_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10794_49 () (_ BitVec 64))
(declare-fun temp10794_50 () (_ BitVec 64))
(declare-fun temp10794_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10794_52 () (_ BitVec 64))
(declare-fun temp10794_53 () (_ BitVec 64))
(declare-fun temp10794_54 () (_ BitVec 64))
(declare-fun temp10794_55 () (_ BitVec 64))
(declare-fun temp10794_56 () (_ BitVec 64))
(declare-fun temp10794_57 () (_ BitVec 64))
(declare-fun temp10794_58 () (_ BitVec 64))
(declare-fun temp10794_59 () (_ BitVec 64))
(declare-fun temp10794_60 () (_ BitVec 64))
(declare-fun temp10794_61 () (_ BitVec 64))
(declare-fun temp10794_62 () (_ BitVec 64))
(declare-fun temp10794_63 () (_ BitVec 64))
(declare-fun temp10794_64 () (_ BitVec 64))
(declare-fun temp10794_65 () (_ BitVec 64))
(declare-fun temp10794_66 () (_ BitVec 64))
(declare-fun temp10794_67 () (_ BitVec 64))
(declare-fun temp10794_68 () (_ BitVec 64))
(declare-fun temp10794_69 () (_ BitVec 64))
(declare-fun temp10794_70 () (_ BitVec 64))
(declare-fun temp10794_71 () (_ BitVec 64))
(declare-fun temp10794_72 () (_ BitVec 64))
(declare-fun temp10794_73 () (_ BitVec 64))
(declare-fun temp10794_74 () (_ BitVec 64))
(declare-fun temp10794_75 () (_ BitVec 64))
(declare-fun temp10794_76 () (_ BitVec 64))
(declare-fun temp10794_77 () (_ BitVec 64))
(declare-fun temp10794_78 () (_ BitVec 64))
(declare-fun temp10794_79 () (_ BitVec 64))
(declare-fun temp10794_80 () (_ BitVec 64))
(declare-fun temp10794_81 () (_ BitVec 64))
(declare-fun temp10794_82 () (_ BitVec 64))
(declare-fun temp10794_83 () (_ BitVec 64))
(declare-fun temp10794_84 () (_ BitVec 64))
(declare-fun temp10794_85 () (_ BitVec 64))
(declare-fun temp10794_86 () (_ BitVec 64))
(declare-fun temp10794_87 () (_ BitVec 64))
(declare-fun temp10794_88 () (_ BitVec 64))
(declare-fun temp10794_89 () (_ BitVec 64))
(declare-fun temp10794_90 () (_ BitVec 64))
(declare-fun temp10794_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10794_92 () (_ BitVec 64))
(declare-fun temp10794_93 () (_ BitVec 64))
(declare-fun temp10794_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10794_95 () (_ BitVec 64))
(declare-fun temp10794_96 () (_ BitVec 64))
(declare-fun temp10794_97 () (_ BitVec 64))
(declare-fun temp10794_98 () (_ BitVec 64))
(declare-fun temp10794_99 () (_ BitVec 64))
(declare-fun temp10794_100 () (_ BitVec 64))
(declare-fun temp10794_101 () (_ BitVec 64))
(declare-fun temp10794_102 () (_ BitVec 64))
(declare-fun temp10794_103 () (_ BitVec 64))
(declare-fun temp10794_104 () (_ BitVec 64))
(declare-fun temp10794_105 () (_ BitVec 64))
(declare-fun temp10794_106 () (_ BitVec 64))
(declare-fun temp10794_107 () (_ BitVec 64))
(declare-fun temp10794_108 () (_ BitVec 64))
(declare-fun temp10794_109 () (_ BitVec 64))
(declare-fun temp10794_110 () (_ BitVec 64))
(declare-fun temp10794_111 () (_ BitVec 64))
(declare-fun temp10794_112 () (_ BitVec 64))
(declare-fun temp10794_113 () (_ BitVec 64))
(declare-fun temp10794_114 () (_ BitVec 64))
(declare-fun temp10794_115 () (_ BitVec 64))
(declare-fun temp10794_116 () (_ BitVec 64))
(declare-fun temp10794_117 () (_ BitVec 64))
(declare-fun temp10794_118 () (_ BitVec 64))
(declare-fun temp10794_119 () (_ BitVec 64))
(declare-fun temp10794_120 () (_ BitVec 64))
(declare-fun temp10794_121 () (_ BitVec 64))
(declare-fun temp10794_122 () (_ BitVec 64))
(declare-fun temp10794_123 () (_ BitVec 64))
(declare-fun temp10794_124 () (_ BitVec 64))
(declare-fun temp10794_125 () (_ BitVec 64))
(declare-fun temp10794_126 () (_ BitVec 64))
(declare-fun temp10794_127 () (_ BitVec 64))
(declare-fun temp10794_128 () (_ BitVec 64))
(declare-fun temp10794_129 () (_ BitVec 64))
(declare-fun temp10794_130 () (_ BitVec 64))
(declare-fun temp10794_131 () (_ BitVec 64))
(declare-fun temp10794_132 () (_ BitVec 64))
(declare-fun temp10794_133 () (_ BitVec 64))
(declare-fun temp10794_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10794_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10794_136 () (_ BitVec 64))
(declare-fun temp10794_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10794_138 () (_ BitVec 64))
(declare-fun temp10794_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10794_140 () (_ BitVec 64))
(declare-fun temp10794_141 () (_ BitVec 64))
(declare-fun temp10794_142 () (_ BitVec 64))
(declare-fun temp10794_143 () (_ BitVec 64))
(declare-fun temp10794_144 () (_ BitVec 64))
(declare-fun temp10794_145 () (_ BitVec 64))
(declare-fun temp10794_146 () (_ BitVec 64))
(declare-fun temp10794_147 () (_ BitVec 64))
(declare-fun temp10794_148 () (_ BitVec 64))
(declare-fun temp10794_149 () (_ BitVec 64))
(declare-fun temp10794_150 () (_ BitVec 64))
(declare-fun temp10794_151 () (_ BitVec 64))
(declare-fun temp10794_152 () (_ BitVec 64))
(declare-fun temp10794_153 () (_ BitVec 64))
(declare-fun temp10794_154 () (_ BitVec 64))
(declare-fun temp10794_155 () (_ BitVec 64))
(declare-fun temp10794_157 () (_ BitVec 64))
(declare-fun temp10794_158 () (_ BitVec 64))
(declare-fun temp10794_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10794_159 () (_ BitVec 64))
(declare-fun temp10794_160 () (_ BitVec 64))
(declare-fun temp10794_162 () (_ BitVec 64))
(declare-fun temp10794_163 () (_ BitVec 64))
(declare-fun temp10794_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10794_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10794_165 () (_ BitVec 64))
(declare-fun temp10794_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10794_167 () (_ BitVec 64))
(declare-fun temp10794_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10794_169 () (_ BitVec 64))
(declare-fun temp10794_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10794_171 () (_ BitVec 64))
(declare-fun temp10794_172 () (_ BitVec 64))
(declare-fun temp10794_173 () (_ BitVec 64))
(declare-fun temp10794_174 () (_ BitVec 64))
(declare-fun temp10794_175 () (_ BitVec 64))
(declare-fun temp10794_176 () (_ BitVec 64))
(declare-fun temp10794_177 () (_ BitVec 64))
(declare-fun temp10794_178 () (_ BitVec 64))
(declare-fun temp10794_179 () (_ BitVec 64))
(declare-fun temp10794_180 () (_ BitVec 64))
(declare-fun temp10794_181 () (_ BitVec 64))
(declare-fun temp10794_182 () (_ BitVec 64))
(declare-fun temp10794_183 () (_ BitVec 64))
(declare-fun temp10794_184 () (_ BitVec 64))
(declare-fun temp10794_185 () (_ BitVec 64))
(declare-fun temp10794_186 () (_ BitVec 64))
(declare-fun temp10794_187 () (_ BitVec 64))
(declare-fun temp10794_188 () (_ BitVec 64))
(declare-fun temp10794_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10794_190 () (_ BitVec 64))
(declare-fun temp10794_192 () (_ BitVec 64))
(declare-fun temp10794_193 () (_ BitVec 64))
(declare-fun temp10794_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10794_194 () (_ BitVec 64))
(declare-fun temp10794_195 () (_ BitVec 64))
(declare-fun temp10794_197 () (_ BitVec 64))
(declare-fun temp10794_198 () (_ BitVec 64))
(declare-fun temp10794_196 () (_ BitVec 64))
(declare-fun temp10794_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10794_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10794_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10794_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10794_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10794_204 () (_ BitVec 64))
(declare-fun temp10794_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10794_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10794_207 () (_ BitVec 64))
(declare-fun temp10794_208 () (_ BitVec 64))
(declare-fun temp10794_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10794_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10794_211 () (_ BitVec 64))
(declare-fun temp10794_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10794_213 () (_ BitVec 64))
(declare-fun temp10794_214 () (_ BitVec 64))
(declare-fun temp10794_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10794_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10794_217 () (_ BitVec 64))
(declare-fun temp10794_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10794_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10794_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp10794_221 () (_ BitVec 64))
(assert (= temp10794_1 #x0000000000000001))
(assert (= var77203 temp10794_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10794_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10794_2)))
(assert (= temp10794_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10794_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10794_4 #x0000000000000000))
(assert (= var210941 temp10794_4))
(assert (= temp10794_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10794_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10794_6 #x0000000000000000))
(assert (= var210986 temp10794_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10794_7 #x0000000000000000))
(assert (= temp10794_8 temp10794_7))
(assert (= temp10794_9 (select ARGNAME_padding_NAMEEND_VAL temp10794_8)))
(assert (= temp10794_10 #x0000000000000001))
(assert (= temp10794_11 temp10794_10))
(assert (= temp10794_12 (select ARGNAME_padding_NAMEEND_VAL temp10794_11)))
(assert (= temp10794_13 #x0000000000000002))
(assert (= temp10794_14 temp10794_13))
(assert (= temp10794_15 (select ARGNAME_padding_NAMEEND_VAL temp10794_14)))
(assert (= temp10794_16 #x0000000000000003))
(assert (= temp10794_17 temp10794_16))
(assert (= temp10794_18 (select ARGNAME_padding_NAMEEND_VAL temp10794_17)))
(assert (= temp10794_19 #x0000000000000004))
(assert (= temp10794_20 temp10794_19))
(assert (= temp10794_21 (select ARGNAME_padding_NAMEEND_VAL temp10794_20)))
(assert (= temp10794_22 #x0000000000000005))
(assert (= temp10794_23 temp10794_22))
(assert (= temp10794_24 (select ARGNAME_padding_NAMEEND_VAL temp10794_23)))
(assert (= temp10794_25 #x0000000000000000))
(assert (= temp10794_26 #x0000000000000000))
(assert (= temp10794_27 temp10794_26))
(assert (= temp10794_28 (select ARGNAME_padding_NAMEEND_VAL temp10794_27)))
(assert (= temp10794_29 #x0000000000000000))
(assert (= temp10794_30 #x0000000000000001))
(assert (= temp10794_31 temp10794_30))
(assert (= temp10794_32 (select ARGNAME_padding_NAMEEND_VAL temp10794_31)))
(assert (= temp10794_33 #x0000000000000000))
(assert (= temp10794_34 #x0000000000000002))
(assert (= temp10794_35 temp10794_34))
(assert (= temp10794_36 (select ARGNAME_padding_NAMEEND_VAL temp10794_35)))
(assert (= temp10794_37 #x0000000000000000))
(assert (= temp10794_38 #x0000000000000003))
(assert (= temp10794_39 temp10794_38))
(assert (= temp10794_40 (select ARGNAME_padding_NAMEEND_VAL temp10794_39)))
(assert (= temp10794_41 #x0000000000000000))
(assert (= temp10794_42 #x0000000000000004))
(assert (= temp10794_43 temp10794_42))
(assert (= temp10794_44 (select ARGNAME_padding_NAMEEND_VAL temp10794_43)))
(assert (= temp10794_45 #x0000000000000000))
(assert (= temp10794_46 #x0000000000000005))
(assert (= temp10794_47 temp10794_46))
(assert (= temp10794_48 (select ARGNAME_padding_NAMEEND_VAL temp10794_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10794_28 temp10794_25)
             (bvslt temp10794_32 temp10794_29)
             (bvslt temp10794_36 temp10794_33)
             (bvslt temp10794_40 temp10794_37)
             (bvslt temp10794_44 temp10794_41)
             (bvslt temp10794_48 temp10794_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10794_49 #x0000000000000000))
(assert (= var1191714 temp10794_49))
(assert (= temp10794_50 #x0000000000000000))
(assert (= temp10794_51 temp10794_50))
(assert (= temp10794_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10794_51)))
(assert (= temp10794_53 #x0000000000000001))
(assert (= temp10794_54 temp10794_53))
(assert (= temp10794_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10794_54)))
(assert (= temp10794_56 #x0000000000000002))
(assert (= temp10794_57 temp10794_56))
(assert (= temp10794_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10794_57)))
(assert (= temp10794_59 #x0000000000000003))
(assert (= temp10794_60 temp10794_59))
(assert (= temp10794_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10794_60)))
(assert (= temp10794_62 #x0000000000000004))
(assert (= temp10794_63 temp10794_62))
(assert (= temp10794_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10794_63)))
(assert (= temp10794_65 #x0000000000000005))
(assert (= temp10794_66 temp10794_65))
(assert (= temp10794_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10794_66)))
(assert (= temp10794_68 #x0000000000000000))
(assert (= temp10794_69 #x0000000000000000))
(assert (= temp10794_70 temp10794_69))
(assert (= temp10794_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10794_70)))
(assert (= temp10794_72 #x0000000000000000))
(assert (= temp10794_73 #x0000000000000001))
(assert (= temp10794_74 temp10794_73))
(assert (= temp10794_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10794_74)))
(assert (= temp10794_76 #x0000000000000000))
(assert (= temp10794_77 #x0000000000000002))
(assert (= temp10794_78 temp10794_77))
(assert (= temp10794_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10794_78)))
(assert (= temp10794_80 #x0000000000000000))
(assert (= temp10794_81 #x0000000000000003))
(assert (= temp10794_82 temp10794_81))
(assert (= temp10794_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10794_82)))
(assert (= temp10794_84 #x0000000000000000))
(assert (= temp10794_85 #x0000000000000004))
(assert (= temp10794_86 temp10794_85))
(assert (= temp10794_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10794_86)))
(assert (= temp10794_88 #x0000000000000000))
(assert (= temp10794_89 #x0000000000000005))
(assert (= temp10794_90 temp10794_89))
(assert (= temp10794_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10794_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10794_71 temp10794_68)
             (bvslt temp10794_75 temp10794_72)
             (bvslt temp10794_79 temp10794_76)
             (bvslt temp10794_83 temp10794_80)
             (bvslt temp10794_87 temp10794_84)
             (bvslt temp10794_91 temp10794_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10794_92 #x0000000000000000))
(assert (= var1191725 temp10794_92))
(assert (= temp10794_93 #x0000000000000000))
(assert (= temp10794_94 temp10794_93))
(assert (= temp10794_95 (select ARGNAME_stride_NAMEEND_VAL temp10794_94)))
(assert (= temp10794_96 #x0000000000000001))
(assert (= temp10794_97 temp10794_96))
(assert (= temp10794_98 (select ARGNAME_stride_NAMEEND_VAL temp10794_97)))
(assert (= temp10794_99 #x0000000000000002))
(assert (= temp10794_100 temp10794_99))
(assert (= temp10794_101 (select ARGNAME_stride_NAMEEND_VAL temp10794_100)))
(assert (= temp10794_102 #x0000000000000003))
(assert (= temp10794_103 temp10794_102))
(assert (= temp10794_104 (select ARGNAME_stride_NAMEEND_VAL temp10794_103)))
(assert (= temp10794_105 #x0000000000000004))
(assert (= temp10794_106 temp10794_105))
(assert (= temp10794_107 (select ARGNAME_stride_NAMEEND_VAL temp10794_106)))
(assert (= temp10794_108 #x0000000000000005))
(assert (= temp10794_109 temp10794_108))
(assert (= temp10794_110 (select ARGNAME_stride_NAMEEND_VAL temp10794_109)))
(assert (= temp10794_111 #x0000000000000000))
(assert (= temp10794_112 #x0000000000000000))
(assert (= temp10794_113 temp10794_112))
(assert (= temp10794_114 (select ARGNAME_stride_NAMEEND_VAL temp10794_113)))
(assert (= temp10794_115 #x0000000000000000))
(assert (= temp10794_116 #x0000000000000001))
(assert (= temp10794_117 temp10794_116))
(assert (= temp10794_118 (select ARGNAME_stride_NAMEEND_VAL temp10794_117)))
(assert (= temp10794_119 #x0000000000000000))
(assert (= temp10794_120 #x0000000000000002))
(assert (= temp10794_121 temp10794_120))
(assert (= temp10794_122 (select ARGNAME_stride_NAMEEND_VAL temp10794_121)))
(assert (= temp10794_123 #x0000000000000000))
(assert (= temp10794_124 #x0000000000000003))
(assert (= temp10794_125 temp10794_124))
(assert (= temp10794_126 (select ARGNAME_stride_NAMEEND_VAL temp10794_125)))
(assert (= temp10794_127 #x0000000000000000))
(assert (= temp10794_128 #x0000000000000004))
(assert (= temp10794_129 temp10794_128))
(assert (= temp10794_130 (select ARGNAME_stride_NAMEEND_VAL temp10794_129)))
(assert (= temp10794_131 #x0000000000000000))
(assert (= temp10794_132 #x0000000000000005))
(assert (= temp10794_133 temp10794_132))
(assert (= temp10794_134 (select ARGNAME_stride_NAMEEND_VAL temp10794_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10794_114 temp10794_111)
             (bvsle temp10794_118 temp10794_115)
             (bvsle temp10794_122 temp10794_119)
             (bvsle temp10794_126 temp10794_123)
             (bvsle temp10794_130 temp10794_127)
             (bvsle temp10794_134 temp10794_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10794_135 #x0000000000000000))
(assert (= var1191735 temp10794_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10794_136 #x0000000000000001))
(assert (= var1191747 temp10794_136))
(assert (= temp10794_137 #x0000000000000000))
(assert (= var1179826 temp10794_137))
(assert (= temp10794_138 #x0000000000000000))
(assert (= temp10794_139 temp10794_138))
(assert (= temp10794_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10794_139)))
(assert (= temp10794_141 #x0000000000000001))
(assert (= temp10794_142 temp10794_141))
(assert (= temp10794_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10794_142)))
(assert (= temp10794_144 #x0000000000000002))
(assert (= temp10794_145 temp10794_144))
(assert (= temp10794_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10794_145)))
(assert (= temp10794_147 #x0000000000000003))
(assert (= temp10794_148 temp10794_147))
(assert (= temp10794_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10794_148)))
(assert (= temp10794_150 #x0000000000000004))
(assert (= temp10794_151 temp10794_150))
(assert (= temp10794_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10794_151)))
(assert (= temp10794_153 #x0000000000000005))
(assert (= temp10794_154 temp10794_153))
(assert (= temp10794_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10794_154)))
(assert (= temp10794_157 var1179826))
(assert (= temp10794_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10794_157)))
(assert (= temp10794_156 temp10794_158))
(assert (= var1191780
   (ite (bvslt temp10794_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10794_159 #x0000000000000000))
(assert (= var1191780 temp10794_159))
(assert (= temp10794_160 #x0000000000000000))
(assert (= var1179826 temp10794_160))
(assert (= temp10794_162 var1179826))
(assert (= temp10794_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10794_162)))
(assert (= temp10794_161 temp10794_163))
(assert (= var1191802 (bvsmod temp10794_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10794_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10794_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10794_165 #x0000000000000001))
(assert (= var1191803 temp10794_165))
(assert (= temp10794_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10794_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10794_167 #x0000000000000001))
(assert (= var1191823 temp10794_167))
(assert (= temp10794_168 #x0000000000000001))
(assert (= var1180714 temp10794_168))
(assert (= temp10794_169 #x0000000000000000))
(assert (= temp10794_170 temp10794_169))
(assert (= temp10794_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10794_170)))
(assert (= temp10794_172 #x0000000000000001))
(assert (= temp10794_173 temp10794_172))
(assert (= temp10794_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10794_173)))
(assert (= temp10794_175 #x0000000000000002))
(assert (= temp10794_176 temp10794_175))
(assert (= temp10794_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10794_176)))
(assert (= temp10794_178 #x0000000000000003))
(assert (= temp10794_179 temp10794_178))
(assert (= temp10794_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10794_179)))
(assert (= temp10794_181 #x0000000000000004))
(assert (= temp10794_182 temp10794_181))
(assert (= temp10794_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10794_182)))
(assert (= temp10794_184 #x0000000000000005))
(assert (= temp10794_185 temp10794_184))
(assert (= temp10794_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10794_185)))
(assert (= temp10794_187 #x0000000000000000))
(assert (= temp10794_188
   (ite (bvslt var1180714 temp10794_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10794_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10794_188)))
(assert (= var1191831 temp10794_189))
(assert (bvslt (ite (bvslt var1180714 temp10794_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10794_190 #x0000000000000001))
(assert (= var1180714 temp10794_190))
(assert (= temp10794_192 var1180714))
(assert (= temp10794_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10794_192)))
(assert (= temp10794_191 temp10794_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10794_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10794_194 #x0000000000000001))
(assert (= var1191836 temp10794_194))
(assert (= temp10794_195 #x0000000000000000))
(assert (= var1179826 temp10794_195))
(assert (= temp10794_197 var1179826))
(assert (= temp10794_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10794_197)))
(assert (= temp10794_196 temp10794_198))
(assert (= temp10794_199 #x0000000000000002))
(assert (= var1586025 temp10794_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10794_200 #x0000000000000001))
(assert (= var1191993 temp10794_200))
(assert (= temp10794_201 #x0000000000000001))
(assert (= var2700303 temp10794_201))
(assert (= temp10794_202 #x0000000000000001))
(assert (= var2962447 temp10794_202))
(assert (= temp10794_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10794_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10794_204 #x0000000000000001))
(assert (= var211058 temp10794_204))
(assert (= temp10794_205 #x0000000000000001))
(assert (= var211188 temp10794_205))
(assert (= var3879401 var211188))
(assert (= temp10794_206 #x0000000000000000))
(assert (= var3866802 temp10794_206))
(assert (= temp10794_207 #x0000000000000000))
(assert (= temp10794_208
   (ite (bvslt var3866802 temp10794_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10794_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10794_208)))
(assert (= var3879420 temp10794_209))
(assert (bvslt (ite (bvslt var3866802 temp10794_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10794_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10794_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10794_211 #x0000000000000000))
(assert (= var3879421 temp10794_211))
(assert (= temp10794_212 #x0000000000000001))
(assert (= var3867690 temp10794_212))
(assert (= temp10794_213 #x0000000000000000))
(assert (= temp10794_214
   (ite (bvslt var3867690 temp10794_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10794_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10794_214)))
(assert (= var3879423 temp10794_215))
(assert (bvslt (ite (bvslt var3867690 temp10794_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10794_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10794_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10794_217 #x0000000000000001))
(assert (= var3879424 temp10794_217))
(assert (= temp10794_218 #x0000000000000000))
(assert (= var4133117 temp10794_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10794_219 #x0000000000000002))
(assert (= var4339331 temp10794_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10794_220 #x0000000000000000))
(assert (= var4404892 temp10794_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp10794_221 #x0000000000000001))
(assert (= var211058 temp10794_221))
(model-add temp10794_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10794_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10794_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10794_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




