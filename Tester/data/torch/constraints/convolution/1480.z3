(declare-fun temp10768_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10768_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10768_3 () (_ BitVec 64))
(declare-fun temp10768_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10768_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10768_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10768_7 () (_ BitVec 64))
(declare-fun temp10768_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10768_9 () (_ BitVec 64))
(declare-fun temp10768_10 () (_ BitVec 64))
(declare-fun temp10768_11 () (_ BitVec 64))
(declare-fun temp10768_12 () (_ BitVec 64))
(declare-fun temp10768_13 () (_ BitVec 64))
(declare-fun temp10768_14 () (_ BitVec 64))
(declare-fun temp10768_15 () (_ BitVec 64))
(declare-fun temp10768_16 () (_ BitVec 64))
(declare-fun temp10768_17 () (_ BitVec 64))
(declare-fun temp10768_18 () (_ BitVec 64))
(declare-fun temp10768_19 () (_ BitVec 64))
(declare-fun temp10768_20 () (_ BitVec 64))
(declare-fun temp10768_21 () (_ BitVec 64))
(declare-fun temp10768_22 () (_ BitVec 64))
(declare-fun temp10768_23 () (_ BitVec 64))
(declare-fun temp10768_24 () (_ BitVec 64))
(declare-fun temp10768_25 () (_ BitVec 64))
(declare-fun temp10768_26 () (_ BitVec 64))
(declare-fun temp10768_27 () (_ BitVec 64))
(declare-fun temp10768_28 () (_ BitVec 64))
(declare-fun temp10768_29 () (_ BitVec 64))
(declare-fun temp10768_30 () (_ BitVec 64))
(declare-fun temp10768_31 () (_ BitVec 64))
(declare-fun temp10768_32 () (_ BitVec 64))
(declare-fun temp10768_33 () (_ BitVec 64))
(declare-fun temp10768_34 () (_ BitVec 64))
(declare-fun temp10768_35 () (_ BitVec 64))
(declare-fun temp10768_36 () (_ BitVec 64))
(declare-fun temp10768_37 () (_ BitVec 64))
(declare-fun temp10768_38 () (_ BitVec 64))
(declare-fun temp10768_39 () (_ BitVec 64))
(declare-fun temp10768_40 () (_ BitVec 64))
(declare-fun temp10768_41 () (_ BitVec 64))
(declare-fun temp10768_42 () (_ BitVec 64))
(declare-fun temp10768_43 () (_ BitVec 64))
(declare-fun temp10768_44 () (_ BitVec 64))
(declare-fun temp10768_45 () (_ BitVec 64))
(declare-fun temp10768_46 () (_ BitVec 64))
(declare-fun temp10768_47 () (_ BitVec 64))
(declare-fun temp10768_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10768_49 () (_ BitVec 64))
(declare-fun temp10768_50 () (_ BitVec 64))
(declare-fun temp10768_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10768_52 () (_ BitVec 64))
(declare-fun temp10768_53 () (_ BitVec 64))
(declare-fun temp10768_54 () (_ BitVec 64))
(declare-fun temp10768_55 () (_ BitVec 64))
(declare-fun temp10768_56 () (_ BitVec 64))
(declare-fun temp10768_57 () (_ BitVec 64))
(declare-fun temp10768_58 () (_ BitVec 64))
(declare-fun temp10768_59 () (_ BitVec 64))
(declare-fun temp10768_60 () (_ BitVec 64))
(declare-fun temp10768_61 () (_ BitVec 64))
(declare-fun temp10768_62 () (_ BitVec 64))
(declare-fun temp10768_63 () (_ BitVec 64))
(declare-fun temp10768_64 () (_ BitVec 64))
(declare-fun temp10768_65 () (_ BitVec 64))
(declare-fun temp10768_66 () (_ BitVec 64))
(declare-fun temp10768_67 () (_ BitVec 64))
(declare-fun temp10768_68 () (_ BitVec 64))
(declare-fun temp10768_69 () (_ BitVec 64))
(declare-fun temp10768_70 () (_ BitVec 64))
(declare-fun temp10768_71 () (_ BitVec 64))
(declare-fun temp10768_72 () (_ BitVec 64))
(declare-fun temp10768_73 () (_ BitVec 64))
(declare-fun temp10768_74 () (_ BitVec 64))
(declare-fun temp10768_75 () (_ BitVec 64))
(declare-fun temp10768_76 () (_ BitVec 64))
(declare-fun temp10768_77 () (_ BitVec 64))
(declare-fun temp10768_78 () (_ BitVec 64))
(declare-fun temp10768_79 () (_ BitVec 64))
(declare-fun temp10768_80 () (_ BitVec 64))
(declare-fun temp10768_81 () (_ BitVec 64))
(declare-fun temp10768_82 () (_ BitVec 64))
(declare-fun temp10768_83 () (_ BitVec 64))
(declare-fun temp10768_84 () (_ BitVec 64))
(declare-fun temp10768_85 () (_ BitVec 64))
(declare-fun temp10768_86 () (_ BitVec 64))
(declare-fun temp10768_87 () (_ BitVec 64))
(declare-fun temp10768_88 () (_ BitVec 64))
(declare-fun temp10768_89 () (_ BitVec 64))
(declare-fun temp10768_90 () (_ BitVec 64))
(declare-fun temp10768_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10768_92 () (_ BitVec 64))
(declare-fun temp10768_93 () (_ BitVec 64))
(declare-fun temp10768_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10768_95 () (_ BitVec 64))
(declare-fun temp10768_96 () (_ BitVec 64))
(declare-fun temp10768_97 () (_ BitVec 64))
(declare-fun temp10768_98 () (_ BitVec 64))
(declare-fun temp10768_99 () (_ BitVec 64))
(declare-fun temp10768_100 () (_ BitVec 64))
(declare-fun temp10768_101 () (_ BitVec 64))
(declare-fun temp10768_102 () (_ BitVec 64))
(declare-fun temp10768_103 () (_ BitVec 64))
(declare-fun temp10768_104 () (_ BitVec 64))
(declare-fun temp10768_105 () (_ BitVec 64))
(declare-fun temp10768_106 () (_ BitVec 64))
(declare-fun temp10768_107 () (_ BitVec 64))
(declare-fun temp10768_108 () (_ BitVec 64))
(declare-fun temp10768_109 () (_ BitVec 64))
(declare-fun temp10768_110 () (_ BitVec 64))
(declare-fun temp10768_111 () (_ BitVec 64))
(declare-fun temp10768_112 () (_ BitVec 64))
(declare-fun temp10768_113 () (_ BitVec 64))
(declare-fun temp10768_114 () (_ BitVec 64))
(declare-fun temp10768_115 () (_ BitVec 64))
(declare-fun temp10768_116 () (_ BitVec 64))
(declare-fun temp10768_117 () (_ BitVec 64))
(declare-fun temp10768_118 () (_ BitVec 64))
(declare-fun temp10768_119 () (_ BitVec 64))
(declare-fun temp10768_120 () (_ BitVec 64))
(declare-fun temp10768_121 () (_ BitVec 64))
(declare-fun temp10768_122 () (_ BitVec 64))
(declare-fun temp10768_123 () (_ BitVec 64))
(declare-fun temp10768_124 () (_ BitVec 64))
(declare-fun temp10768_125 () (_ BitVec 64))
(declare-fun temp10768_126 () (_ BitVec 64))
(declare-fun temp10768_127 () (_ BitVec 64))
(declare-fun temp10768_128 () (_ BitVec 64))
(declare-fun temp10768_129 () (_ BitVec 64))
(declare-fun temp10768_130 () (_ BitVec 64))
(declare-fun temp10768_131 () (_ BitVec 64))
(declare-fun temp10768_132 () (_ BitVec 64))
(declare-fun temp10768_133 () (_ BitVec 64))
(declare-fun temp10768_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10768_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10768_136 () (_ BitVec 64))
(declare-fun temp10768_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10768_138 () (_ BitVec 64))
(declare-fun temp10768_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10768_140 () (_ BitVec 64))
(declare-fun temp10768_141 () (_ BitVec 64))
(declare-fun temp10768_142 () (_ BitVec 64))
(declare-fun temp10768_143 () (_ BitVec 64))
(declare-fun temp10768_144 () (_ BitVec 64))
(declare-fun temp10768_145 () (_ BitVec 64))
(declare-fun temp10768_146 () (_ BitVec 64))
(declare-fun temp10768_147 () (_ BitVec 64))
(declare-fun temp10768_148 () (_ BitVec 64))
(declare-fun temp10768_149 () (_ BitVec 64))
(declare-fun temp10768_150 () (_ BitVec 64))
(declare-fun temp10768_151 () (_ BitVec 64))
(declare-fun temp10768_152 () (_ BitVec 64))
(declare-fun temp10768_153 () (_ BitVec 64))
(declare-fun temp10768_154 () (_ BitVec 64))
(declare-fun temp10768_155 () (_ BitVec 64))
(declare-fun temp10768_157 () (_ BitVec 64))
(declare-fun temp10768_158 () (_ BitVec 64))
(declare-fun temp10768_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10768_159 () (_ BitVec 64))
(declare-fun temp10768_160 () (_ BitVec 64))
(declare-fun temp10768_162 () (_ BitVec 64))
(declare-fun temp10768_163 () (_ BitVec 64))
(declare-fun temp10768_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10768_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10768_165 () (_ BitVec 64))
(declare-fun temp10768_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10768_167 () (_ BitVec 64))
(declare-fun temp10768_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10768_169 () (_ BitVec 64))
(declare-fun temp10768_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10768_171 () (_ BitVec 64))
(declare-fun temp10768_172 () (_ BitVec 64))
(declare-fun temp10768_173 () (_ BitVec 64))
(declare-fun temp10768_174 () (_ BitVec 64))
(declare-fun temp10768_175 () (_ BitVec 64))
(declare-fun temp10768_176 () (_ BitVec 64))
(declare-fun temp10768_177 () (_ BitVec 64))
(declare-fun temp10768_178 () (_ BitVec 64))
(declare-fun temp10768_179 () (_ BitVec 64))
(declare-fun temp10768_180 () (_ BitVec 64))
(declare-fun temp10768_181 () (_ BitVec 64))
(declare-fun temp10768_182 () (_ BitVec 64))
(declare-fun temp10768_183 () (_ BitVec 64))
(declare-fun temp10768_184 () (_ BitVec 64))
(declare-fun temp10768_185 () (_ BitVec 64))
(declare-fun temp10768_186 () (_ BitVec 64))
(declare-fun temp10768_187 () (_ BitVec 64))
(declare-fun temp10768_188 () (_ BitVec 64))
(declare-fun temp10768_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10768_190 () (_ BitVec 64))
(declare-fun temp10768_192 () (_ BitVec 64))
(declare-fun temp10768_193 () (_ BitVec 64))
(declare-fun temp10768_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10768_194 () (_ BitVec 64))
(declare-fun temp10768_195 () (_ BitVec 64))
(declare-fun temp10768_197 () (_ BitVec 64))
(declare-fun temp10768_198 () (_ BitVec 64))
(declare-fun temp10768_196 () (_ BitVec 64))
(declare-fun temp10768_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10768_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10768_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10768_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10768_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10768_204 () (_ BitVec 64))
(declare-fun temp10768_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10768_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10768_207 () (_ BitVec 64))
(declare-fun temp10768_208 () (_ BitVec 64))
(declare-fun temp10768_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10768_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10768_211 () (_ BitVec 64))
(declare-fun temp10768_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10768_213 () (_ BitVec 64))
(declare-fun temp10768_214 () (_ BitVec 64))
(declare-fun temp10768_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10768_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10768_217 () (_ BitVec 64))
(declare-fun temp10768_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10768_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10768_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp10768_221 () (_ BitVec 64))
(assert (= temp10768_1 #x0000000000000001))
(assert (= var77203 temp10768_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10768_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10768_2)))
(assert (= temp10768_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10768_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10768_4 #x0000000000000000))
(assert (= var210941 temp10768_4))
(assert (= temp10768_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10768_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10768_6 #x0000000000000000))
(assert (= var210986 temp10768_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10768_7 #x0000000000000000))
(assert (= temp10768_8 temp10768_7))
(assert (= temp10768_9 (select ARGNAME_padding_NAMEEND_VAL temp10768_8)))
(assert (= temp10768_10 #x0000000000000001))
(assert (= temp10768_11 temp10768_10))
(assert (= temp10768_12 (select ARGNAME_padding_NAMEEND_VAL temp10768_11)))
(assert (= temp10768_13 #x0000000000000002))
(assert (= temp10768_14 temp10768_13))
(assert (= temp10768_15 (select ARGNAME_padding_NAMEEND_VAL temp10768_14)))
(assert (= temp10768_16 #x0000000000000003))
(assert (= temp10768_17 temp10768_16))
(assert (= temp10768_18 (select ARGNAME_padding_NAMEEND_VAL temp10768_17)))
(assert (= temp10768_19 #x0000000000000004))
(assert (= temp10768_20 temp10768_19))
(assert (= temp10768_21 (select ARGNAME_padding_NAMEEND_VAL temp10768_20)))
(assert (= temp10768_22 #x0000000000000005))
(assert (= temp10768_23 temp10768_22))
(assert (= temp10768_24 (select ARGNAME_padding_NAMEEND_VAL temp10768_23)))
(assert (= temp10768_25 #x0000000000000000))
(assert (= temp10768_26 #x0000000000000000))
(assert (= temp10768_27 temp10768_26))
(assert (= temp10768_28 (select ARGNAME_padding_NAMEEND_VAL temp10768_27)))
(assert (= temp10768_29 #x0000000000000000))
(assert (= temp10768_30 #x0000000000000001))
(assert (= temp10768_31 temp10768_30))
(assert (= temp10768_32 (select ARGNAME_padding_NAMEEND_VAL temp10768_31)))
(assert (= temp10768_33 #x0000000000000000))
(assert (= temp10768_34 #x0000000000000002))
(assert (= temp10768_35 temp10768_34))
(assert (= temp10768_36 (select ARGNAME_padding_NAMEEND_VAL temp10768_35)))
(assert (= temp10768_37 #x0000000000000000))
(assert (= temp10768_38 #x0000000000000003))
(assert (= temp10768_39 temp10768_38))
(assert (= temp10768_40 (select ARGNAME_padding_NAMEEND_VAL temp10768_39)))
(assert (= temp10768_41 #x0000000000000000))
(assert (= temp10768_42 #x0000000000000004))
(assert (= temp10768_43 temp10768_42))
(assert (= temp10768_44 (select ARGNAME_padding_NAMEEND_VAL temp10768_43)))
(assert (= temp10768_45 #x0000000000000000))
(assert (= temp10768_46 #x0000000000000005))
(assert (= temp10768_47 temp10768_46))
(assert (= temp10768_48 (select ARGNAME_padding_NAMEEND_VAL temp10768_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10768_28 temp10768_25)
             (bvslt temp10768_32 temp10768_29)
             (bvslt temp10768_36 temp10768_33)
             (bvslt temp10768_40 temp10768_37)
             (bvslt temp10768_44 temp10768_41)
             (bvslt temp10768_48 temp10768_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10768_49 #x0000000000000000))
(assert (= var1191714 temp10768_49))
(assert (= temp10768_50 #x0000000000000000))
(assert (= temp10768_51 temp10768_50))
(assert (= temp10768_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10768_51)))
(assert (= temp10768_53 #x0000000000000001))
(assert (= temp10768_54 temp10768_53))
(assert (= temp10768_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10768_54)))
(assert (= temp10768_56 #x0000000000000002))
(assert (= temp10768_57 temp10768_56))
(assert (= temp10768_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10768_57)))
(assert (= temp10768_59 #x0000000000000003))
(assert (= temp10768_60 temp10768_59))
(assert (= temp10768_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10768_60)))
(assert (= temp10768_62 #x0000000000000004))
(assert (= temp10768_63 temp10768_62))
(assert (= temp10768_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10768_63)))
(assert (= temp10768_65 #x0000000000000005))
(assert (= temp10768_66 temp10768_65))
(assert (= temp10768_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10768_66)))
(assert (= temp10768_68 #x0000000000000000))
(assert (= temp10768_69 #x0000000000000000))
(assert (= temp10768_70 temp10768_69))
(assert (= temp10768_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10768_70)))
(assert (= temp10768_72 #x0000000000000000))
(assert (= temp10768_73 #x0000000000000001))
(assert (= temp10768_74 temp10768_73))
(assert (= temp10768_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10768_74)))
(assert (= temp10768_76 #x0000000000000000))
(assert (= temp10768_77 #x0000000000000002))
(assert (= temp10768_78 temp10768_77))
(assert (= temp10768_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10768_78)))
(assert (= temp10768_80 #x0000000000000000))
(assert (= temp10768_81 #x0000000000000003))
(assert (= temp10768_82 temp10768_81))
(assert (= temp10768_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10768_82)))
(assert (= temp10768_84 #x0000000000000000))
(assert (= temp10768_85 #x0000000000000004))
(assert (= temp10768_86 temp10768_85))
(assert (= temp10768_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10768_86)))
(assert (= temp10768_88 #x0000000000000000))
(assert (= temp10768_89 #x0000000000000005))
(assert (= temp10768_90 temp10768_89))
(assert (= temp10768_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10768_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10768_71 temp10768_68)
             (bvslt temp10768_75 temp10768_72)
             (bvslt temp10768_79 temp10768_76)
             (bvslt temp10768_83 temp10768_80)
             (bvslt temp10768_87 temp10768_84)
             (bvslt temp10768_91 temp10768_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10768_92 #x0000000000000000))
(assert (= var1191725 temp10768_92))
(assert (= temp10768_93 #x0000000000000000))
(assert (= temp10768_94 temp10768_93))
(assert (= temp10768_95 (select ARGNAME_stride_NAMEEND_VAL temp10768_94)))
(assert (= temp10768_96 #x0000000000000001))
(assert (= temp10768_97 temp10768_96))
(assert (= temp10768_98 (select ARGNAME_stride_NAMEEND_VAL temp10768_97)))
(assert (= temp10768_99 #x0000000000000002))
(assert (= temp10768_100 temp10768_99))
(assert (= temp10768_101 (select ARGNAME_stride_NAMEEND_VAL temp10768_100)))
(assert (= temp10768_102 #x0000000000000003))
(assert (= temp10768_103 temp10768_102))
(assert (= temp10768_104 (select ARGNAME_stride_NAMEEND_VAL temp10768_103)))
(assert (= temp10768_105 #x0000000000000004))
(assert (= temp10768_106 temp10768_105))
(assert (= temp10768_107 (select ARGNAME_stride_NAMEEND_VAL temp10768_106)))
(assert (= temp10768_108 #x0000000000000005))
(assert (= temp10768_109 temp10768_108))
(assert (= temp10768_110 (select ARGNAME_stride_NAMEEND_VAL temp10768_109)))
(assert (= temp10768_111 #x0000000000000000))
(assert (= temp10768_112 #x0000000000000000))
(assert (= temp10768_113 temp10768_112))
(assert (= temp10768_114 (select ARGNAME_stride_NAMEEND_VAL temp10768_113)))
(assert (= temp10768_115 #x0000000000000000))
(assert (= temp10768_116 #x0000000000000001))
(assert (= temp10768_117 temp10768_116))
(assert (= temp10768_118 (select ARGNAME_stride_NAMEEND_VAL temp10768_117)))
(assert (= temp10768_119 #x0000000000000000))
(assert (= temp10768_120 #x0000000000000002))
(assert (= temp10768_121 temp10768_120))
(assert (= temp10768_122 (select ARGNAME_stride_NAMEEND_VAL temp10768_121)))
(assert (= temp10768_123 #x0000000000000000))
(assert (= temp10768_124 #x0000000000000003))
(assert (= temp10768_125 temp10768_124))
(assert (= temp10768_126 (select ARGNAME_stride_NAMEEND_VAL temp10768_125)))
(assert (= temp10768_127 #x0000000000000000))
(assert (= temp10768_128 #x0000000000000004))
(assert (= temp10768_129 temp10768_128))
(assert (= temp10768_130 (select ARGNAME_stride_NAMEEND_VAL temp10768_129)))
(assert (= temp10768_131 #x0000000000000000))
(assert (= temp10768_132 #x0000000000000005))
(assert (= temp10768_133 temp10768_132))
(assert (= temp10768_134 (select ARGNAME_stride_NAMEEND_VAL temp10768_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10768_114 temp10768_111)
             (bvsle temp10768_118 temp10768_115)
             (bvsle temp10768_122 temp10768_119)
             (bvsle temp10768_126 temp10768_123)
             (bvsle temp10768_130 temp10768_127)
             (bvsle temp10768_134 temp10768_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10768_135 #x0000000000000000))
(assert (= var1191735 temp10768_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10768_136 #x0000000000000001))
(assert (= var1191747 temp10768_136))
(assert (= temp10768_137 #x0000000000000000))
(assert (= var1179826 temp10768_137))
(assert (= temp10768_138 #x0000000000000000))
(assert (= temp10768_139 temp10768_138))
(assert (= temp10768_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10768_139)))
(assert (= temp10768_141 #x0000000000000001))
(assert (= temp10768_142 temp10768_141))
(assert (= temp10768_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10768_142)))
(assert (= temp10768_144 #x0000000000000002))
(assert (= temp10768_145 temp10768_144))
(assert (= temp10768_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10768_145)))
(assert (= temp10768_147 #x0000000000000003))
(assert (= temp10768_148 temp10768_147))
(assert (= temp10768_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10768_148)))
(assert (= temp10768_150 #x0000000000000004))
(assert (= temp10768_151 temp10768_150))
(assert (= temp10768_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10768_151)))
(assert (= temp10768_153 #x0000000000000005))
(assert (= temp10768_154 temp10768_153))
(assert (= temp10768_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10768_154)))
(assert (= temp10768_157 var1179826))
(assert (= temp10768_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10768_157)))
(assert (= temp10768_156 temp10768_158))
(assert (= var1191780
   (ite (bvslt temp10768_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10768_159 #x0000000000000000))
(assert (= var1191780 temp10768_159))
(assert (= temp10768_160 #x0000000000000000))
(assert (= var1179826 temp10768_160))
(assert (= temp10768_162 var1179826))
(assert (= temp10768_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10768_162)))
(assert (= temp10768_161 temp10768_163))
(assert (= var1191802 (bvsmod temp10768_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10768_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10768_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10768_165 #x0000000000000001))
(assert (= var1191803 temp10768_165))
(assert (= temp10768_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10768_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10768_167 #x0000000000000001))
(assert (= var1191823 temp10768_167))
(assert (= temp10768_168 #x0000000000000001))
(assert (= var1180714 temp10768_168))
(assert (= temp10768_169 #x0000000000000000))
(assert (= temp10768_170 temp10768_169))
(assert (= temp10768_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10768_170)))
(assert (= temp10768_172 #x0000000000000001))
(assert (= temp10768_173 temp10768_172))
(assert (= temp10768_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10768_173)))
(assert (= temp10768_175 #x0000000000000002))
(assert (= temp10768_176 temp10768_175))
(assert (= temp10768_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10768_176)))
(assert (= temp10768_178 #x0000000000000003))
(assert (= temp10768_179 temp10768_178))
(assert (= temp10768_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10768_179)))
(assert (= temp10768_181 #x0000000000000004))
(assert (= temp10768_182 temp10768_181))
(assert (= temp10768_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10768_182)))
(assert (= temp10768_184 #x0000000000000005))
(assert (= temp10768_185 temp10768_184))
(assert (= temp10768_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10768_185)))
(assert (= temp10768_187 #x0000000000000000))
(assert (= temp10768_188
   (ite (bvslt var1180714 temp10768_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10768_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10768_188)))
(assert (= var1191831 temp10768_189))
(assert (bvslt (ite (bvslt var1180714 temp10768_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10768_190 #x0000000000000001))
(assert (= var1180714 temp10768_190))
(assert (= temp10768_192 var1180714))
(assert (= temp10768_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10768_192)))
(assert (= temp10768_191 temp10768_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10768_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10768_194 #x0000000000000001))
(assert (= var1191836 temp10768_194))
(assert (= temp10768_195 #x0000000000000000))
(assert (= var1179826 temp10768_195))
(assert (= temp10768_197 var1179826))
(assert (= temp10768_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10768_197)))
(assert (= temp10768_196 temp10768_198))
(assert (= temp10768_199 #x0000000000000002))
(assert (= var1586025 temp10768_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10768_200 #x0000000000000001))
(assert (= var1191993 temp10768_200))
(assert (= temp10768_201 #x0000000000000001))
(assert (= var2700303 temp10768_201))
(assert (= temp10768_202 #x0000000000000001))
(assert (= var2962447 temp10768_202))
(assert (= temp10768_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10768_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10768_204 #x0000000000000001))
(assert (= var211058 temp10768_204))
(assert (= temp10768_205 #x0000000000000001))
(assert (= var211188 temp10768_205))
(assert (= var3879401 var211188))
(assert (= temp10768_206 #x0000000000000000))
(assert (= var3866802 temp10768_206))
(assert (= temp10768_207 #x0000000000000000))
(assert (= temp10768_208
   (ite (bvslt var3866802 temp10768_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10768_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10768_208)))
(assert (= var3879420 temp10768_209))
(assert (bvslt (ite (bvslt var3866802 temp10768_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10768_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10768_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10768_211 #x0000000000000000))
(assert (= var3879421 temp10768_211))
(assert (= temp10768_212 #x0000000000000001))
(assert (= var3867690 temp10768_212))
(assert (= temp10768_213 #x0000000000000000))
(assert (= temp10768_214
   (ite (bvslt var3867690 temp10768_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10768_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10768_214)))
(assert (= var3879423 temp10768_215))
(assert (bvslt (ite (bvslt var3867690 temp10768_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10768_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10768_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10768_217 #x0000000000000001))
(assert (= var3879424 temp10768_217))
(assert (= temp10768_218 #x0000000000000000))
(assert (= var4133117 temp10768_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10768_219 #x0000000000000002))
(assert (= var4339331 temp10768_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10768_220 #x0000000000000000))
(assert (= var4404892 temp10768_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp10768_221 #x0000000000000001))
(assert (= var211058 temp10768_221))
(model-add temp10768_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10768_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10768_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10768_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




