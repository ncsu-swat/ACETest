(declare-fun temp10314_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10314_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10314_3 () (_ BitVec 64))
(declare-fun temp10314_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10314_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10314_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10314_7 () (_ BitVec 64))
(declare-fun temp10314_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10314_9 () (_ BitVec 64))
(declare-fun temp10314_10 () (_ BitVec 64))
(declare-fun temp10314_11 () (_ BitVec 64))
(declare-fun temp10314_12 () (_ BitVec 64))
(declare-fun temp10314_13 () (_ BitVec 64))
(declare-fun temp10314_14 () (_ BitVec 64))
(declare-fun temp10314_15 () (_ BitVec 64))
(declare-fun temp10314_16 () (_ BitVec 64))
(declare-fun temp10314_17 () (_ BitVec 64))
(declare-fun temp10314_18 () (_ BitVec 64))
(declare-fun temp10314_19 () (_ BitVec 64))
(declare-fun temp10314_20 () (_ BitVec 64))
(declare-fun temp10314_21 () (_ BitVec 64))
(declare-fun temp10314_22 () (_ BitVec 64))
(declare-fun temp10314_23 () (_ BitVec 64))
(declare-fun temp10314_24 () (_ BitVec 64))
(declare-fun temp10314_25 () (_ BitVec 64))
(declare-fun temp10314_26 () (_ BitVec 64))
(declare-fun temp10314_27 () (_ BitVec 64))
(declare-fun temp10314_28 () (_ BitVec 64))
(declare-fun temp10314_29 () (_ BitVec 64))
(declare-fun temp10314_30 () (_ BitVec 64))
(declare-fun temp10314_31 () (_ BitVec 64))
(declare-fun temp10314_32 () (_ BitVec 64))
(declare-fun temp10314_33 () (_ BitVec 64))
(declare-fun temp10314_34 () (_ BitVec 64))
(declare-fun temp10314_35 () (_ BitVec 64))
(declare-fun temp10314_36 () (_ BitVec 64))
(declare-fun temp10314_37 () (_ BitVec 64))
(declare-fun temp10314_38 () (_ BitVec 64))
(declare-fun temp10314_39 () (_ BitVec 64))
(declare-fun temp10314_40 () (_ BitVec 64))
(declare-fun temp10314_41 () (_ BitVec 64))
(declare-fun temp10314_42 () (_ BitVec 64))
(declare-fun temp10314_43 () (_ BitVec 64))
(declare-fun temp10314_44 () (_ BitVec 64))
(declare-fun temp10314_45 () (_ BitVec 64))
(declare-fun temp10314_46 () (_ BitVec 64))
(declare-fun temp10314_47 () (_ BitVec 64))
(declare-fun temp10314_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10314_49 () (_ BitVec 64))
(declare-fun temp10314_50 () (_ BitVec 64))
(declare-fun temp10314_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10314_52 () (_ BitVec 64))
(declare-fun temp10314_53 () (_ BitVec 64))
(declare-fun temp10314_54 () (_ BitVec 64))
(declare-fun temp10314_55 () (_ BitVec 64))
(declare-fun temp10314_56 () (_ BitVec 64))
(declare-fun temp10314_57 () (_ BitVec 64))
(declare-fun temp10314_58 () (_ BitVec 64))
(declare-fun temp10314_59 () (_ BitVec 64))
(declare-fun temp10314_60 () (_ BitVec 64))
(declare-fun temp10314_61 () (_ BitVec 64))
(declare-fun temp10314_62 () (_ BitVec 64))
(declare-fun temp10314_63 () (_ BitVec 64))
(declare-fun temp10314_64 () (_ BitVec 64))
(declare-fun temp10314_65 () (_ BitVec 64))
(declare-fun temp10314_66 () (_ BitVec 64))
(declare-fun temp10314_67 () (_ BitVec 64))
(declare-fun temp10314_68 () (_ BitVec 64))
(declare-fun temp10314_69 () (_ BitVec 64))
(declare-fun temp10314_70 () (_ BitVec 64))
(declare-fun temp10314_71 () (_ BitVec 64))
(declare-fun temp10314_72 () (_ BitVec 64))
(declare-fun temp10314_73 () (_ BitVec 64))
(declare-fun temp10314_74 () (_ BitVec 64))
(declare-fun temp10314_75 () (_ BitVec 64))
(declare-fun temp10314_76 () (_ BitVec 64))
(declare-fun temp10314_77 () (_ BitVec 64))
(declare-fun temp10314_78 () (_ BitVec 64))
(declare-fun temp10314_79 () (_ BitVec 64))
(declare-fun temp10314_80 () (_ BitVec 64))
(declare-fun temp10314_81 () (_ BitVec 64))
(declare-fun temp10314_82 () (_ BitVec 64))
(declare-fun temp10314_83 () (_ BitVec 64))
(declare-fun temp10314_84 () (_ BitVec 64))
(declare-fun temp10314_85 () (_ BitVec 64))
(declare-fun temp10314_86 () (_ BitVec 64))
(declare-fun temp10314_87 () (_ BitVec 64))
(declare-fun temp10314_88 () (_ BitVec 64))
(declare-fun temp10314_89 () (_ BitVec 64))
(declare-fun temp10314_90 () (_ BitVec 64))
(declare-fun temp10314_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10314_92 () (_ BitVec 64))
(declare-fun temp10314_93 () (_ BitVec 64))
(declare-fun temp10314_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10314_95 () (_ BitVec 64))
(declare-fun temp10314_96 () (_ BitVec 64))
(declare-fun temp10314_97 () (_ BitVec 64))
(declare-fun temp10314_98 () (_ BitVec 64))
(declare-fun temp10314_99 () (_ BitVec 64))
(declare-fun temp10314_100 () (_ BitVec 64))
(declare-fun temp10314_101 () (_ BitVec 64))
(declare-fun temp10314_102 () (_ BitVec 64))
(declare-fun temp10314_103 () (_ BitVec 64))
(declare-fun temp10314_104 () (_ BitVec 64))
(declare-fun temp10314_105 () (_ BitVec 64))
(declare-fun temp10314_106 () (_ BitVec 64))
(declare-fun temp10314_107 () (_ BitVec 64))
(declare-fun temp10314_108 () (_ BitVec 64))
(declare-fun temp10314_109 () (_ BitVec 64))
(declare-fun temp10314_110 () (_ BitVec 64))
(declare-fun temp10314_111 () (_ BitVec 64))
(declare-fun temp10314_112 () (_ BitVec 64))
(declare-fun temp10314_113 () (_ BitVec 64))
(declare-fun temp10314_114 () (_ BitVec 64))
(declare-fun temp10314_115 () (_ BitVec 64))
(declare-fun temp10314_116 () (_ BitVec 64))
(declare-fun temp10314_117 () (_ BitVec 64))
(declare-fun temp10314_118 () (_ BitVec 64))
(declare-fun temp10314_119 () (_ BitVec 64))
(declare-fun temp10314_120 () (_ BitVec 64))
(declare-fun temp10314_121 () (_ BitVec 64))
(declare-fun temp10314_122 () (_ BitVec 64))
(declare-fun temp10314_123 () (_ BitVec 64))
(declare-fun temp10314_124 () (_ BitVec 64))
(declare-fun temp10314_125 () (_ BitVec 64))
(declare-fun temp10314_126 () (_ BitVec 64))
(declare-fun temp10314_127 () (_ BitVec 64))
(declare-fun temp10314_128 () (_ BitVec 64))
(declare-fun temp10314_129 () (_ BitVec 64))
(declare-fun temp10314_130 () (_ BitVec 64))
(declare-fun temp10314_131 () (_ BitVec 64))
(declare-fun temp10314_132 () (_ BitVec 64))
(declare-fun temp10314_133 () (_ BitVec 64))
(declare-fun temp10314_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10314_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10314_136 () (_ BitVec 64))
(declare-fun temp10314_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10314_138 () (_ BitVec 64))
(declare-fun temp10314_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10314_140 () (_ BitVec 64))
(declare-fun temp10314_141 () (_ BitVec 64))
(declare-fun temp10314_142 () (_ BitVec 64))
(declare-fun temp10314_143 () (_ BitVec 64))
(declare-fun temp10314_144 () (_ BitVec 64))
(declare-fun temp10314_145 () (_ BitVec 64))
(declare-fun temp10314_146 () (_ BitVec 64))
(declare-fun temp10314_147 () (_ BitVec 64))
(declare-fun temp10314_148 () (_ BitVec 64))
(declare-fun temp10314_149 () (_ BitVec 64))
(declare-fun temp10314_150 () (_ BitVec 64))
(declare-fun temp10314_151 () (_ BitVec 64))
(declare-fun temp10314_152 () (_ BitVec 64))
(declare-fun temp10314_153 () (_ BitVec 64))
(declare-fun temp10314_154 () (_ BitVec 64))
(declare-fun temp10314_155 () (_ BitVec 64))
(declare-fun temp10314_157 () (_ BitVec 64))
(declare-fun temp10314_158 () (_ BitVec 64))
(declare-fun temp10314_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10314_159 () (_ BitVec 64))
(declare-fun temp10314_160 () (_ BitVec 64))
(declare-fun temp10314_162 () (_ BitVec 64))
(declare-fun temp10314_163 () (_ BitVec 64))
(declare-fun temp10314_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10314_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10314_165 () (_ BitVec 64))
(declare-fun temp10314_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10314_167 () (_ BitVec 64))
(declare-fun temp10314_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10314_169 () (_ BitVec 64))
(declare-fun temp10314_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10314_171 () (_ BitVec 64))
(declare-fun temp10314_172 () (_ BitVec 64))
(declare-fun temp10314_173 () (_ BitVec 64))
(declare-fun temp10314_174 () (_ BitVec 64))
(declare-fun temp10314_175 () (_ BitVec 64))
(declare-fun temp10314_176 () (_ BitVec 64))
(declare-fun temp10314_177 () (_ BitVec 64))
(declare-fun temp10314_178 () (_ BitVec 64))
(declare-fun temp10314_179 () (_ BitVec 64))
(declare-fun temp10314_180 () (_ BitVec 64))
(declare-fun temp10314_181 () (_ BitVec 64))
(declare-fun temp10314_182 () (_ BitVec 64))
(declare-fun temp10314_183 () (_ BitVec 64))
(declare-fun temp10314_184 () (_ BitVec 64))
(declare-fun temp10314_185 () (_ BitVec 64))
(declare-fun temp10314_186 () (_ BitVec 64))
(declare-fun temp10314_187 () (_ BitVec 64))
(declare-fun temp10314_188 () (_ BitVec 64))
(declare-fun temp10314_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10314_190 () (_ BitVec 64))
(declare-fun temp10314_192 () (_ BitVec 64))
(declare-fun temp10314_193 () (_ BitVec 64))
(declare-fun temp10314_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10314_194 () (_ BitVec 64))
(declare-fun temp10314_195 () (_ BitVec 64))
(declare-fun temp10314_197 () (_ BitVec 64))
(declare-fun temp10314_198 () (_ BitVec 64))
(declare-fun temp10314_196 () (_ BitVec 64))
(declare-fun temp10314_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10314_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10314_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10314_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10314_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10314_204 () (_ BitVec 64))
(declare-fun temp10314_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10314_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10314_207 () (_ BitVec 64))
(declare-fun temp10314_208 () (_ BitVec 64))
(declare-fun temp10314_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10314_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10314_211 () (_ BitVec 64))
(declare-fun temp10314_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10314_213 () (_ BitVec 64))
(declare-fun temp10314_214 () (_ BitVec 64))
(declare-fun temp10314_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10314_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10314_217 () (_ BitVec 64))
(declare-fun temp10314_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10314_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10314_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var5124496 () (_ BitVec 64))
(declare-fun var5386640 () (_ BitVec 64))
(declare-fun temp10314_221 () (_ BitVec 64))
(declare-fun var5714320 () (_ BitVec 64))
(declare-fun temp10314_222 () (_ BitVec 64))
(assert (= temp10314_1 #x0000000000000001))
(assert (= var77203 temp10314_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10314_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10314_2)))
(assert (= temp10314_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10314_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10314_4 #x0000000000000000))
(assert (= var210941 temp10314_4))
(assert (= temp10314_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10314_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10314_6 #x0000000000000000))
(assert (= var210986 temp10314_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10314_7 #x0000000000000000))
(assert (= temp10314_8 temp10314_7))
(assert (= temp10314_9 (select ARGNAME_padding_NAMEEND_VAL temp10314_8)))
(assert (= temp10314_10 #x0000000000000001))
(assert (= temp10314_11 temp10314_10))
(assert (= temp10314_12 (select ARGNAME_padding_NAMEEND_VAL temp10314_11)))
(assert (= temp10314_13 #x0000000000000002))
(assert (= temp10314_14 temp10314_13))
(assert (= temp10314_15 (select ARGNAME_padding_NAMEEND_VAL temp10314_14)))
(assert (= temp10314_16 #x0000000000000003))
(assert (= temp10314_17 temp10314_16))
(assert (= temp10314_18 (select ARGNAME_padding_NAMEEND_VAL temp10314_17)))
(assert (= temp10314_19 #x0000000000000004))
(assert (= temp10314_20 temp10314_19))
(assert (= temp10314_21 (select ARGNAME_padding_NAMEEND_VAL temp10314_20)))
(assert (= temp10314_22 #x0000000000000005))
(assert (= temp10314_23 temp10314_22))
(assert (= temp10314_24 (select ARGNAME_padding_NAMEEND_VAL temp10314_23)))
(assert (= temp10314_25 #x0000000000000000))
(assert (= temp10314_26 #x0000000000000000))
(assert (= temp10314_27 temp10314_26))
(assert (= temp10314_28 (select ARGNAME_padding_NAMEEND_VAL temp10314_27)))
(assert (= temp10314_29 #x0000000000000000))
(assert (= temp10314_30 #x0000000000000001))
(assert (= temp10314_31 temp10314_30))
(assert (= temp10314_32 (select ARGNAME_padding_NAMEEND_VAL temp10314_31)))
(assert (= temp10314_33 #x0000000000000000))
(assert (= temp10314_34 #x0000000000000002))
(assert (= temp10314_35 temp10314_34))
(assert (= temp10314_36 (select ARGNAME_padding_NAMEEND_VAL temp10314_35)))
(assert (= temp10314_37 #x0000000000000000))
(assert (= temp10314_38 #x0000000000000003))
(assert (= temp10314_39 temp10314_38))
(assert (= temp10314_40 (select ARGNAME_padding_NAMEEND_VAL temp10314_39)))
(assert (= temp10314_41 #x0000000000000000))
(assert (= temp10314_42 #x0000000000000004))
(assert (= temp10314_43 temp10314_42))
(assert (= temp10314_44 (select ARGNAME_padding_NAMEEND_VAL temp10314_43)))
(assert (= temp10314_45 #x0000000000000000))
(assert (= temp10314_46 #x0000000000000005))
(assert (= temp10314_47 temp10314_46))
(assert (= temp10314_48 (select ARGNAME_padding_NAMEEND_VAL temp10314_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10314_28 temp10314_25)
             (bvslt temp10314_32 temp10314_29)
             (bvslt temp10314_36 temp10314_33)
             (bvslt temp10314_40 temp10314_37)
             (bvslt temp10314_44 temp10314_41)
             (bvslt temp10314_48 temp10314_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10314_49 #x0000000000000000))
(assert (= var1191714 temp10314_49))
(assert (= temp10314_50 #x0000000000000000))
(assert (= temp10314_51 temp10314_50))
(assert (= temp10314_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10314_51)))
(assert (= temp10314_53 #x0000000000000001))
(assert (= temp10314_54 temp10314_53))
(assert (= temp10314_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10314_54)))
(assert (= temp10314_56 #x0000000000000002))
(assert (= temp10314_57 temp10314_56))
(assert (= temp10314_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10314_57)))
(assert (= temp10314_59 #x0000000000000003))
(assert (= temp10314_60 temp10314_59))
(assert (= temp10314_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10314_60)))
(assert (= temp10314_62 #x0000000000000004))
(assert (= temp10314_63 temp10314_62))
(assert (= temp10314_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10314_63)))
(assert (= temp10314_65 #x0000000000000005))
(assert (= temp10314_66 temp10314_65))
(assert (= temp10314_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10314_66)))
(assert (= temp10314_68 #x0000000000000000))
(assert (= temp10314_69 #x0000000000000000))
(assert (= temp10314_70 temp10314_69))
(assert (= temp10314_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10314_70)))
(assert (= temp10314_72 #x0000000000000000))
(assert (= temp10314_73 #x0000000000000001))
(assert (= temp10314_74 temp10314_73))
(assert (= temp10314_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10314_74)))
(assert (= temp10314_76 #x0000000000000000))
(assert (= temp10314_77 #x0000000000000002))
(assert (= temp10314_78 temp10314_77))
(assert (= temp10314_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10314_78)))
(assert (= temp10314_80 #x0000000000000000))
(assert (= temp10314_81 #x0000000000000003))
(assert (= temp10314_82 temp10314_81))
(assert (= temp10314_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10314_82)))
(assert (= temp10314_84 #x0000000000000000))
(assert (= temp10314_85 #x0000000000000004))
(assert (= temp10314_86 temp10314_85))
(assert (= temp10314_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10314_86)))
(assert (= temp10314_88 #x0000000000000000))
(assert (= temp10314_89 #x0000000000000005))
(assert (= temp10314_90 temp10314_89))
(assert (= temp10314_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10314_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10314_71 temp10314_68)
             (bvslt temp10314_75 temp10314_72)
             (bvslt temp10314_79 temp10314_76)
             (bvslt temp10314_83 temp10314_80)
             (bvslt temp10314_87 temp10314_84)
             (bvslt temp10314_91 temp10314_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10314_92 #x0000000000000000))
(assert (= var1191725 temp10314_92))
(assert (= temp10314_93 #x0000000000000000))
(assert (= temp10314_94 temp10314_93))
(assert (= temp10314_95 (select ARGNAME_stride_NAMEEND_VAL temp10314_94)))
(assert (= temp10314_96 #x0000000000000001))
(assert (= temp10314_97 temp10314_96))
(assert (= temp10314_98 (select ARGNAME_stride_NAMEEND_VAL temp10314_97)))
(assert (= temp10314_99 #x0000000000000002))
(assert (= temp10314_100 temp10314_99))
(assert (= temp10314_101 (select ARGNAME_stride_NAMEEND_VAL temp10314_100)))
(assert (= temp10314_102 #x0000000000000003))
(assert (= temp10314_103 temp10314_102))
(assert (= temp10314_104 (select ARGNAME_stride_NAMEEND_VAL temp10314_103)))
(assert (= temp10314_105 #x0000000000000004))
(assert (= temp10314_106 temp10314_105))
(assert (= temp10314_107 (select ARGNAME_stride_NAMEEND_VAL temp10314_106)))
(assert (= temp10314_108 #x0000000000000005))
(assert (= temp10314_109 temp10314_108))
(assert (= temp10314_110 (select ARGNAME_stride_NAMEEND_VAL temp10314_109)))
(assert (= temp10314_111 #x0000000000000000))
(assert (= temp10314_112 #x0000000000000000))
(assert (= temp10314_113 temp10314_112))
(assert (= temp10314_114 (select ARGNAME_stride_NAMEEND_VAL temp10314_113)))
(assert (= temp10314_115 #x0000000000000000))
(assert (= temp10314_116 #x0000000000000001))
(assert (= temp10314_117 temp10314_116))
(assert (= temp10314_118 (select ARGNAME_stride_NAMEEND_VAL temp10314_117)))
(assert (= temp10314_119 #x0000000000000000))
(assert (= temp10314_120 #x0000000000000002))
(assert (= temp10314_121 temp10314_120))
(assert (= temp10314_122 (select ARGNAME_stride_NAMEEND_VAL temp10314_121)))
(assert (= temp10314_123 #x0000000000000000))
(assert (= temp10314_124 #x0000000000000003))
(assert (= temp10314_125 temp10314_124))
(assert (= temp10314_126 (select ARGNAME_stride_NAMEEND_VAL temp10314_125)))
(assert (= temp10314_127 #x0000000000000000))
(assert (= temp10314_128 #x0000000000000004))
(assert (= temp10314_129 temp10314_128))
(assert (= temp10314_130 (select ARGNAME_stride_NAMEEND_VAL temp10314_129)))
(assert (= temp10314_131 #x0000000000000000))
(assert (= temp10314_132 #x0000000000000005))
(assert (= temp10314_133 temp10314_132))
(assert (= temp10314_134 (select ARGNAME_stride_NAMEEND_VAL temp10314_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10314_114 temp10314_111)
             (bvsle temp10314_118 temp10314_115)
             (bvsle temp10314_122 temp10314_119)
             (bvsle temp10314_126 temp10314_123)
             (bvsle temp10314_130 temp10314_127)
             (bvsle temp10314_134 temp10314_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10314_135 #x0000000000000000))
(assert (= var1191735 temp10314_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10314_136 #x0000000000000001))
(assert (= var1191747 temp10314_136))
(assert (= temp10314_137 #x0000000000000000))
(assert (= var1179826 temp10314_137))
(assert (= temp10314_138 #x0000000000000000))
(assert (= temp10314_139 temp10314_138))
(assert (= temp10314_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10314_139)))
(assert (= temp10314_141 #x0000000000000001))
(assert (= temp10314_142 temp10314_141))
(assert (= temp10314_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10314_142)))
(assert (= temp10314_144 #x0000000000000002))
(assert (= temp10314_145 temp10314_144))
(assert (= temp10314_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10314_145)))
(assert (= temp10314_147 #x0000000000000003))
(assert (= temp10314_148 temp10314_147))
(assert (= temp10314_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10314_148)))
(assert (= temp10314_150 #x0000000000000004))
(assert (= temp10314_151 temp10314_150))
(assert (= temp10314_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10314_151)))
(assert (= temp10314_153 #x0000000000000005))
(assert (= temp10314_154 temp10314_153))
(assert (= temp10314_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10314_154)))
(assert (= temp10314_157 var1179826))
(assert (= temp10314_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10314_157)))
(assert (= temp10314_156 temp10314_158))
(assert (= var1191780
   (ite (bvslt temp10314_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10314_159 #x0000000000000000))
(assert (= var1191780 temp10314_159))
(assert (= temp10314_160 #x0000000000000000))
(assert (= var1179826 temp10314_160))
(assert (= temp10314_162 var1179826))
(assert (= temp10314_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10314_162)))
(assert (= temp10314_161 temp10314_163))
(assert (= var1191802 (bvsmod temp10314_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10314_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10314_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10314_165 #x0000000000000001))
(assert (= var1191803 temp10314_165))
(assert (= temp10314_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10314_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10314_167 #x0000000000000001))
(assert (= var1191823 temp10314_167))
(assert (= temp10314_168 #x0000000000000001))
(assert (= var1180714 temp10314_168))
(assert (= temp10314_169 #x0000000000000000))
(assert (= temp10314_170 temp10314_169))
(assert (= temp10314_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10314_170)))
(assert (= temp10314_172 #x0000000000000001))
(assert (= temp10314_173 temp10314_172))
(assert (= temp10314_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10314_173)))
(assert (= temp10314_175 #x0000000000000002))
(assert (= temp10314_176 temp10314_175))
(assert (= temp10314_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10314_176)))
(assert (= temp10314_178 #x0000000000000003))
(assert (= temp10314_179 temp10314_178))
(assert (= temp10314_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10314_179)))
(assert (= temp10314_181 #x0000000000000004))
(assert (= temp10314_182 temp10314_181))
(assert (= temp10314_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10314_182)))
(assert (= temp10314_184 #x0000000000000005))
(assert (= temp10314_185 temp10314_184))
(assert (= temp10314_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10314_185)))
(assert (= temp10314_187 #x0000000000000000))
(assert (= temp10314_188
   (ite (bvslt var1180714 temp10314_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10314_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10314_188)))
(assert (= var1191831 temp10314_189))
(assert (bvslt (ite (bvslt var1180714 temp10314_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10314_190 #x0000000000000001))
(assert (= var1180714 temp10314_190))
(assert (= temp10314_192 var1180714))
(assert (= temp10314_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10314_192)))
(assert (= temp10314_191 temp10314_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10314_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10314_194 #x0000000000000001))
(assert (= var1191836 temp10314_194))
(assert (= temp10314_195 #x0000000000000000))
(assert (= var1179826 temp10314_195))
(assert (= temp10314_197 var1179826))
(assert (= temp10314_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10314_197)))
(assert (= temp10314_196 temp10314_198))
(assert (= temp10314_199 #x0000000000000002))
(assert (= var1586025 temp10314_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10314_200 #x0000000000000001))
(assert (= var1191993 temp10314_200))
(assert (= temp10314_201 #x0000000000000001))
(assert (= var2700303 temp10314_201))
(assert (= temp10314_202 #x0000000000000001))
(assert (= var2962447 temp10314_202))
(assert (= temp10314_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10314_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10314_204 #x0000000000000001))
(assert (= var211058 temp10314_204))
(assert (= temp10314_205 #x0000000000000001))
(assert (= var211188 temp10314_205))
(assert (= var3879401 var211188))
(assert (= temp10314_206 #x0000000000000000))
(assert (= var3866802 temp10314_206))
(assert (= temp10314_207 #x0000000000000000))
(assert (= temp10314_208
   (ite (bvslt var3866802 temp10314_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10314_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10314_208)))
(assert (= var3879420 temp10314_209))
(assert (bvslt (ite (bvslt var3866802 temp10314_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10314_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10314_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10314_211 #x0000000000000000))
(assert (= var3879421 temp10314_211))
(assert (= temp10314_212 #x0000000000000001))
(assert (= var3867690 temp10314_212))
(assert (= temp10314_213 #x0000000000000000))
(assert (= temp10314_214
   (ite (bvslt var3867690 temp10314_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10314_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10314_214)))
(assert (= var3879423 temp10314_215))
(assert (bvslt (ite (bvslt var3867690 temp10314_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10314_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10314_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10314_217 #x0000000000000001))
(assert (= var3879424 temp10314_217))
(assert (= temp10314_218 #x0000000000000000))
(assert (= var4079423 temp10314_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10314_219 #x0000000000000002))
(assert (= var4208259 temp10314_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10314_220 #x0000000000000000))
(assert (= var4273820 temp10314_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var5124496 var211201))
(assert (= var5386640 var211201))
(assert (= temp10314_221 #x0000000000000000))
(assert (= var5714320 temp10314_221))
(assert (= temp10314_222 #x0000000000000001))
(assert (= var211058 temp10314_222))
(model-add temp10314_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10314_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10314_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10314_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





