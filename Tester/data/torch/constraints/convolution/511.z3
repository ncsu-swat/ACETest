(declare-fun temp681_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp681_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp681_3 () (_ BitVec 64))
(declare-fun temp681_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp681_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp681_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp681_7 () (_ BitVec 64))
(declare-fun temp681_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp681_9 () (_ BitVec 64))
(declare-fun temp681_10 () (_ BitVec 64))
(declare-fun temp681_11 () (_ BitVec 64))
(declare-fun temp681_12 () (_ BitVec 64))
(declare-fun temp681_13 () (_ BitVec 64))
(declare-fun temp681_14 () (_ BitVec 64))
(declare-fun temp681_15 () (_ BitVec 64))
(declare-fun temp681_16 () (_ BitVec 64))
(declare-fun temp681_17 () (_ BitVec 64))
(declare-fun temp681_18 () (_ BitVec 64))
(declare-fun temp681_19 () (_ BitVec 64))
(declare-fun temp681_20 () (_ BitVec 64))
(declare-fun temp681_21 () (_ BitVec 64))
(declare-fun temp681_22 () (_ BitVec 64))
(declare-fun temp681_23 () (_ BitVec 64))
(declare-fun temp681_24 () (_ BitVec 64))
(declare-fun temp681_25 () (_ BitVec 64))
(declare-fun temp681_26 () (_ BitVec 64))
(declare-fun temp681_27 () (_ BitVec 64))
(declare-fun temp681_28 () (_ BitVec 64))
(declare-fun temp681_29 () (_ BitVec 64))
(declare-fun temp681_30 () (_ BitVec 64))
(declare-fun temp681_31 () (_ BitVec 64))
(declare-fun temp681_32 () (_ BitVec 64))
(declare-fun temp681_33 () (_ BitVec 64))
(declare-fun temp681_34 () (_ BitVec 64))
(declare-fun temp681_35 () (_ BitVec 64))
(declare-fun temp681_36 () (_ BitVec 64))
(declare-fun temp681_37 () (_ BitVec 64))
(declare-fun temp681_38 () (_ BitVec 64))
(declare-fun temp681_39 () (_ BitVec 64))
(declare-fun temp681_40 () (_ BitVec 64))
(declare-fun temp681_41 () (_ BitVec 64))
(declare-fun temp681_42 () (_ BitVec 64))
(declare-fun temp681_43 () (_ BitVec 64))
(declare-fun temp681_44 () (_ BitVec 64))
(declare-fun temp681_45 () (_ BitVec 64))
(declare-fun temp681_46 () (_ BitVec 64))
(declare-fun temp681_47 () (_ BitVec 64))
(declare-fun temp681_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp681_49 () (_ BitVec 64))
(declare-fun temp681_50 () (_ BitVec 64))
(declare-fun temp681_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp681_52 () (_ BitVec 64))
(declare-fun temp681_53 () (_ BitVec 64))
(declare-fun temp681_54 () (_ BitVec 64))
(declare-fun temp681_55 () (_ BitVec 64))
(declare-fun temp681_56 () (_ BitVec 64))
(declare-fun temp681_57 () (_ BitVec 64))
(declare-fun temp681_58 () (_ BitVec 64))
(declare-fun temp681_59 () (_ BitVec 64))
(declare-fun temp681_60 () (_ BitVec 64))
(declare-fun temp681_61 () (_ BitVec 64))
(declare-fun temp681_62 () (_ BitVec 64))
(declare-fun temp681_63 () (_ BitVec 64))
(declare-fun temp681_64 () (_ BitVec 64))
(declare-fun temp681_65 () (_ BitVec 64))
(declare-fun temp681_66 () (_ BitVec 64))
(declare-fun temp681_67 () (_ BitVec 64))
(declare-fun temp681_68 () (_ BitVec 64))
(declare-fun temp681_69 () (_ BitVec 64))
(declare-fun temp681_70 () (_ BitVec 64))
(declare-fun temp681_71 () (_ BitVec 64))
(declare-fun temp681_72 () (_ BitVec 64))
(declare-fun temp681_73 () (_ BitVec 64))
(declare-fun temp681_74 () (_ BitVec 64))
(declare-fun temp681_75 () (_ BitVec 64))
(declare-fun temp681_76 () (_ BitVec 64))
(declare-fun temp681_77 () (_ BitVec 64))
(declare-fun temp681_78 () (_ BitVec 64))
(declare-fun temp681_79 () (_ BitVec 64))
(declare-fun temp681_80 () (_ BitVec 64))
(declare-fun temp681_81 () (_ BitVec 64))
(declare-fun temp681_82 () (_ BitVec 64))
(declare-fun temp681_83 () (_ BitVec 64))
(declare-fun temp681_84 () (_ BitVec 64))
(declare-fun temp681_85 () (_ BitVec 64))
(declare-fun temp681_86 () (_ BitVec 64))
(declare-fun temp681_87 () (_ BitVec 64))
(declare-fun temp681_88 () (_ BitVec 64))
(declare-fun temp681_89 () (_ BitVec 64))
(declare-fun temp681_90 () (_ BitVec 64))
(declare-fun temp681_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp681_92 () (_ BitVec 64))
(declare-fun temp681_93 () (_ BitVec 64))
(declare-fun temp681_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp681_95 () (_ BitVec 64))
(declare-fun temp681_96 () (_ BitVec 64))
(declare-fun temp681_97 () (_ BitVec 64))
(declare-fun temp681_98 () (_ BitVec 64))
(declare-fun temp681_99 () (_ BitVec 64))
(declare-fun temp681_100 () (_ BitVec 64))
(declare-fun temp681_101 () (_ BitVec 64))
(declare-fun temp681_102 () (_ BitVec 64))
(declare-fun temp681_103 () (_ BitVec 64))
(declare-fun temp681_104 () (_ BitVec 64))
(declare-fun temp681_105 () (_ BitVec 64))
(declare-fun temp681_106 () (_ BitVec 64))
(declare-fun temp681_107 () (_ BitVec 64))
(declare-fun temp681_108 () (_ BitVec 64))
(declare-fun temp681_109 () (_ BitVec 64))
(declare-fun temp681_110 () (_ BitVec 64))
(declare-fun temp681_111 () (_ BitVec 64))
(declare-fun temp681_112 () (_ BitVec 64))
(declare-fun temp681_113 () (_ BitVec 64))
(declare-fun temp681_114 () (_ BitVec 64))
(declare-fun temp681_115 () (_ BitVec 64))
(declare-fun temp681_116 () (_ BitVec 64))
(declare-fun temp681_117 () (_ BitVec 64))
(declare-fun temp681_118 () (_ BitVec 64))
(declare-fun temp681_119 () (_ BitVec 64))
(declare-fun temp681_120 () (_ BitVec 64))
(declare-fun temp681_121 () (_ BitVec 64))
(declare-fun temp681_122 () (_ BitVec 64))
(declare-fun temp681_123 () (_ BitVec 64))
(declare-fun temp681_124 () (_ BitVec 64))
(declare-fun temp681_125 () (_ BitVec 64))
(declare-fun temp681_126 () (_ BitVec 64))
(declare-fun temp681_127 () (_ BitVec 64))
(declare-fun temp681_128 () (_ BitVec 64))
(declare-fun temp681_129 () (_ BitVec 64))
(declare-fun temp681_130 () (_ BitVec 64))
(declare-fun temp681_131 () (_ BitVec 64))
(declare-fun temp681_132 () (_ BitVec 64))
(declare-fun temp681_133 () (_ BitVec 64))
(declare-fun temp681_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp681_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp681_136 () (_ BitVec 64))
(declare-fun temp681_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp681_138 () (_ BitVec 64))
(declare-fun temp681_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp681_140 () (_ BitVec 64))
(declare-fun temp681_141 () (_ BitVec 64))
(declare-fun temp681_142 () (_ BitVec 64))
(declare-fun temp681_143 () (_ BitVec 64))
(declare-fun temp681_144 () (_ BitVec 64))
(declare-fun temp681_145 () (_ BitVec 64))
(declare-fun temp681_146 () (_ BitVec 64))
(declare-fun temp681_147 () (_ BitVec 64))
(declare-fun temp681_148 () (_ BitVec 64))
(declare-fun temp681_149 () (_ BitVec 64))
(declare-fun temp681_150 () (_ BitVec 64))
(declare-fun temp681_151 () (_ BitVec 64))
(declare-fun temp681_152 () (_ BitVec 64))
(declare-fun temp681_153 () (_ BitVec 64))
(declare-fun temp681_154 () (_ BitVec 64))
(declare-fun temp681_155 () (_ BitVec 64))
(declare-fun temp681_157 () (_ BitVec 64))
(declare-fun temp681_158 () (_ BitVec 64))
(declare-fun temp681_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp681_159 () (_ BitVec 64))
(declare-fun temp681_160 () (_ BitVec 64))
(declare-fun temp681_162 () (_ BitVec 64))
(declare-fun temp681_163 () (_ BitVec 64))
(declare-fun temp681_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp681_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp681_165 () (_ BitVec 64))
(declare-fun temp681_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp681_167 () (_ BitVec 64))
(declare-fun temp681_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp681_169 () (_ BitVec 64))
(declare-fun temp681_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp681_171 () (_ BitVec 64))
(declare-fun temp681_172 () (_ BitVec 64))
(declare-fun temp681_173 () (_ BitVec 64))
(declare-fun temp681_174 () (_ BitVec 64))
(declare-fun temp681_175 () (_ BitVec 64))
(declare-fun temp681_176 () (_ BitVec 64))
(declare-fun temp681_177 () (_ BitVec 64))
(declare-fun temp681_178 () (_ BitVec 64))
(declare-fun temp681_179 () (_ BitVec 64))
(declare-fun temp681_180 () (_ BitVec 64))
(declare-fun temp681_181 () (_ BitVec 64))
(declare-fun temp681_182 () (_ BitVec 64))
(declare-fun temp681_183 () (_ BitVec 64))
(declare-fun temp681_184 () (_ BitVec 64))
(declare-fun temp681_185 () (_ BitVec 64))
(declare-fun temp681_186 () (_ BitVec 64))
(declare-fun temp681_187 () (_ BitVec 64))
(declare-fun temp681_188 () (_ BitVec 64))
(declare-fun temp681_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp681_190 () (_ BitVec 64))
(declare-fun temp681_192 () (_ BitVec 64))
(declare-fun temp681_193 () (_ BitVec 64))
(declare-fun temp681_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp681_194 () (_ BitVec 64))
(declare-fun temp681_195 () (_ BitVec 64))
(declare-fun temp681_197 () (_ BitVec 64))
(declare-fun temp681_198 () (_ BitVec 64))
(declare-fun temp681_196 () (_ BitVec 64))
(declare-fun temp681_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp681_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp681_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp681_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp681_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp681_204 () (_ BitVec 64))
(declare-fun temp681_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp681_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp681_207 () (_ BitVec 64))
(declare-fun temp681_208 () (_ BitVec 64))
(declare-fun temp681_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp681_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp681_211 () (_ BitVec 64))
(declare-fun temp681_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp681_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp681_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp681_216 () (_ BitVec 64))
(declare-fun temp681_215 () (_ BitVec 64))
(declare-fun temp681_217 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp681_218 () (_ BitVec 64))
(declare-fun temp681_219 () (_ BitVec 64))
(declare-fun temp681_220 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp681_221 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp681_222 () (_ BitVec 64))
(declare-fun temp681_224 () (_ BitVec 64))
(declare-fun temp681_223 () (_ BitVec 64))
(declare-fun temp681_225 () (_ BitVec 64))
(assert (= temp681_1 #x0000000000000001))
(assert (= var77203 temp681_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp681_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp681_2)))
(assert (= temp681_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp681_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp681_4 #x0000000000000000))
(assert (= var210941 temp681_4))
(assert (= temp681_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp681_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp681_6 #x0000000000000000))
(assert (= var210986 temp681_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp681_7 #x0000000000000000))
(assert (= temp681_8 temp681_7))
(assert (= temp681_9 (select ARGNAME_padding_NAMEEND_VAL temp681_8)))
(assert (= temp681_10 #x0000000000000001))
(assert (= temp681_11 temp681_10))
(assert (= temp681_12 (select ARGNAME_padding_NAMEEND_VAL temp681_11)))
(assert (= temp681_13 #x0000000000000002))
(assert (= temp681_14 temp681_13))
(assert (= temp681_15 (select ARGNAME_padding_NAMEEND_VAL temp681_14)))
(assert (= temp681_16 #x0000000000000003))
(assert (= temp681_17 temp681_16))
(assert (= temp681_18 (select ARGNAME_padding_NAMEEND_VAL temp681_17)))
(assert (= temp681_19 #x0000000000000004))
(assert (= temp681_20 temp681_19))
(assert (= temp681_21 (select ARGNAME_padding_NAMEEND_VAL temp681_20)))
(assert (= temp681_22 #x0000000000000005))
(assert (= temp681_23 temp681_22))
(assert (= temp681_24 (select ARGNAME_padding_NAMEEND_VAL temp681_23)))
(assert (= temp681_25 #x0000000000000000))
(assert (= temp681_26 #x0000000000000000))
(assert (= temp681_27 temp681_26))
(assert (= temp681_28 (select ARGNAME_padding_NAMEEND_VAL temp681_27)))
(assert (= temp681_29 #x0000000000000000))
(assert (= temp681_30 #x0000000000000001))
(assert (= temp681_31 temp681_30))
(assert (= temp681_32 (select ARGNAME_padding_NAMEEND_VAL temp681_31)))
(assert (= temp681_33 #x0000000000000000))
(assert (= temp681_34 #x0000000000000002))
(assert (= temp681_35 temp681_34))
(assert (= temp681_36 (select ARGNAME_padding_NAMEEND_VAL temp681_35)))
(assert (= temp681_37 #x0000000000000000))
(assert (= temp681_38 #x0000000000000003))
(assert (= temp681_39 temp681_38))
(assert (= temp681_40 (select ARGNAME_padding_NAMEEND_VAL temp681_39)))
(assert (= temp681_41 #x0000000000000000))
(assert (= temp681_42 #x0000000000000004))
(assert (= temp681_43 temp681_42))
(assert (= temp681_44 (select ARGNAME_padding_NAMEEND_VAL temp681_43)))
(assert (= temp681_45 #x0000000000000000))
(assert (= temp681_46 #x0000000000000005))
(assert (= temp681_47 temp681_46))
(assert (= temp681_48 (select ARGNAME_padding_NAMEEND_VAL temp681_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp681_28 temp681_25)
             (bvslt temp681_32 temp681_29)
             (bvslt temp681_36 temp681_33)
             (bvslt temp681_40 temp681_37)
             (bvslt temp681_44 temp681_41)
             (bvslt temp681_48 temp681_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp681_49 #x0000000000000000))
(assert (= var1191714 temp681_49))
(assert (= temp681_50 #x0000000000000000))
(assert (= temp681_51 temp681_50))
(assert (= temp681_52 (select ARGNAME_output_padding_NAMEEND_VAL temp681_51)))
(assert (= temp681_53 #x0000000000000001))
(assert (= temp681_54 temp681_53))
(assert (= temp681_55 (select ARGNAME_output_padding_NAMEEND_VAL temp681_54)))
(assert (= temp681_56 #x0000000000000002))
(assert (= temp681_57 temp681_56))
(assert (= temp681_58 (select ARGNAME_output_padding_NAMEEND_VAL temp681_57)))
(assert (= temp681_59 #x0000000000000003))
(assert (= temp681_60 temp681_59))
(assert (= temp681_61 (select ARGNAME_output_padding_NAMEEND_VAL temp681_60)))
(assert (= temp681_62 #x0000000000000004))
(assert (= temp681_63 temp681_62))
(assert (= temp681_64 (select ARGNAME_output_padding_NAMEEND_VAL temp681_63)))
(assert (= temp681_65 #x0000000000000005))
(assert (= temp681_66 temp681_65))
(assert (= temp681_67 (select ARGNAME_output_padding_NAMEEND_VAL temp681_66)))
(assert (= temp681_68 #x0000000000000000))
(assert (= temp681_69 #x0000000000000000))
(assert (= temp681_70 temp681_69))
(assert (= temp681_71 (select ARGNAME_output_padding_NAMEEND_VAL temp681_70)))
(assert (= temp681_72 #x0000000000000000))
(assert (= temp681_73 #x0000000000000001))
(assert (= temp681_74 temp681_73))
(assert (= temp681_75 (select ARGNAME_output_padding_NAMEEND_VAL temp681_74)))
(assert (= temp681_76 #x0000000000000000))
(assert (= temp681_77 #x0000000000000002))
(assert (= temp681_78 temp681_77))
(assert (= temp681_79 (select ARGNAME_output_padding_NAMEEND_VAL temp681_78)))
(assert (= temp681_80 #x0000000000000000))
(assert (= temp681_81 #x0000000000000003))
(assert (= temp681_82 temp681_81))
(assert (= temp681_83 (select ARGNAME_output_padding_NAMEEND_VAL temp681_82)))
(assert (= temp681_84 #x0000000000000000))
(assert (= temp681_85 #x0000000000000004))
(assert (= temp681_86 temp681_85))
(assert (= temp681_87 (select ARGNAME_output_padding_NAMEEND_VAL temp681_86)))
(assert (= temp681_88 #x0000000000000000))
(assert (= temp681_89 #x0000000000000005))
(assert (= temp681_90 temp681_89))
(assert (= temp681_91 (select ARGNAME_output_padding_NAMEEND_VAL temp681_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp681_71 temp681_68)
             (bvslt temp681_75 temp681_72)
             (bvslt temp681_79 temp681_76)
             (bvslt temp681_83 temp681_80)
             (bvslt temp681_87 temp681_84)
             (bvslt temp681_91 temp681_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp681_92 #x0000000000000000))
(assert (= var1191725 temp681_92))
(assert (= temp681_93 #x0000000000000000))
(assert (= temp681_94 temp681_93))
(assert (= temp681_95 (select ARGNAME_stride_NAMEEND_VAL temp681_94)))
(assert (= temp681_96 #x0000000000000001))
(assert (= temp681_97 temp681_96))
(assert (= temp681_98 (select ARGNAME_stride_NAMEEND_VAL temp681_97)))
(assert (= temp681_99 #x0000000000000002))
(assert (= temp681_100 temp681_99))
(assert (= temp681_101 (select ARGNAME_stride_NAMEEND_VAL temp681_100)))
(assert (= temp681_102 #x0000000000000003))
(assert (= temp681_103 temp681_102))
(assert (= temp681_104 (select ARGNAME_stride_NAMEEND_VAL temp681_103)))
(assert (= temp681_105 #x0000000000000004))
(assert (= temp681_106 temp681_105))
(assert (= temp681_107 (select ARGNAME_stride_NAMEEND_VAL temp681_106)))
(assert (= temp681_108 #x0000000000000005))
(assert (= temp681_109 temp681_108))
(assert (= temp681_110 (select ARGNAME_stride_NAMEEND_VAL temp681_109)))
(assert (= temp681_111 #x0000000000000000))
(assert (= temp681_112 #x0000000000000000))
(assert (= temp681_113 temp681_112))
(assert (= temp681_114 (select ARGNAME_stride_NAMEEND_VAL temp681_113)))
(assert (= temp681_115 #x0000000000000000))
(assert (= temp681_116 #x0000000000000001))
(assert (= temp681_117 temp681_116))
(assert (= temp681_118 (select ARGNAME_stride_NAMEEND_VAL temp681_117)))
(assert (= temp681_119 #x0000000000000000))
(assert (= temp681_120 #x0000000000000002))
(assert (= temp681_121 temp681_120))
(assert (= temp681_122 (select ARGNAME_stride_NAMEEND_VAL temp681_121)))
(assert (= temp681_123 #x0000000000000000))
(assert (= temp681_124 #x0000000000000003))
(assert (= temp681_125 temp681_124))
(assert (= temp681_126 (select ARGNAME_stride_NAMEEND_VAL temp681_125)))
(assert (= temp681_127 #x0000000000000000))
(assert (= temp681_128 #x0000000000000004))
(assert (= temp681_129 temp681_128))
(assert (= temp681_130 (select ARGNAME_stride_NAMEEND_VAL temp681_129)))
(assert (= temp681_131 #x0000000000000000))
(assert (= temp681_132 #x0000000000000005))
(assert (= temp681_133 temp681_132))
(assert (= temp681_134 (select ARGNAME_stride_NAMEEND_VAL temp681_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp681_114 temp681_111)
             (bvsle temp681_118 temp681_115)
             (bvsle temp681_122 temp681_119)
             (bvsle temp681_126 temp681_123)
             (bvsle temp681_130 temp681_127)
             (bvsle temp681_134 temp681_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp681_135 #x0000000000000000))
(assert (= var1191735 temp681_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp681_136 #x0000000000000001))
(assert (= var1191747 temp681_136))
(assert (= temp681_137 #x0000000000000000))
(assert (= var1179826 temp681_137))
(assert (= temp681_138 #x0000000000000000))
(assert (= temp681_139 temp681_138))
(assert (= temp681_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp681_139)))
(assert (= temp681_141 #x0000000000000001))
(assert (= temp681_142 temp681_141))
(assert (= temp681_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp681_142)))
(assert (= temp681_144 #x0000000000000002))
(assert (= temp681_145 temp681_144))
(assert (= temp681_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp681_145)))
(assert (= temp681_147 #x0000000000000003))
(assert (= temp681_148 temp681_147))
(assert (= temp681_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp681_148)))
(assert (= temp681_150 #x0000000000000004))
(assert (= temp681_151 temp681_150))
(assert (= temp681_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp681_151)))
(assert (= temp681_153 #x0000000000000005))
(assert (= temp681_154 temp681_153))
(assert (= temp681_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp681_154)))
(assert (= temp681_157 var1179826))
(assert (= temp681_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp681_157)))
(assert (= temp681_156 temp681_158))
(assert (= var1191780
   (ite (bvslt temp681_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp681_159 #x0000000000000000))
(assert (= var1191780 temp681_159))
(assert (= temp681_160 #x0000000000000000))
(assert (= var1179826 temp681_160))
(assert (= temp681_162 var1179826))
(assert (= temp681_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp681_162)))
(assert (= temp681_161 temp681_163))
(assert (= var1191802 (bvsmod temp681_161 ARGNAME_groups_NAMEEND)))
(assert (= temp681_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp681_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp681_165 #x0000000000000001))
(assert (= var1191803 temp681_165))
(assert (= temp681_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp681_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp681_167 #x0000000000000001))
(assert (= var1191823 temp681_167))
(assert (= temp681_168 #x0000000000000001))
(assert (= var1180714 temp681_168))
(assert (= temp681_169 #x0000000000000000))
(assert (= temp681_170 temp681_169))
(assert (= temp681_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp681_170)))
(assert (= temp681_172 #x0000000000000001))
(assert (= temp681_173 temp681_172))
(assert (= temp681_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp681_173)))
(assert (= temp681_175 #x0000000000000002))
(assert (= temp681_176 temp681_175))
(assert (= temp681_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp681_176)))
(assert (= temp681_178 #x0000000000000003))
(assert (= temp681_179 temp681_178))
(assert (= temp681_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp681_179)))
(assert (= temp681_181 #x0000000000000004))
(assert (= temp681_182 temp681_181))
(assert (= temp681_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp681_182)))
(assert (= temp681_184 #x0000000000000005))
(assert (= temp681_185 temp681_184))
(assert (= temp681_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp681_185)))
(assert (= temp681_187 #x0000000000000000))
(assert (= temp681_188
   (ite (bvslt var1180714 temp681_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp681_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp681_188)))
(assert (= var1191831 temp681_189))
(assert (bvslt (ite (bvslt var1180714 temp681_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp681_190 #x0000000000000001))
(assert (= var1180714 temp681_190))
(assert (= temp681_192 var1180714))
(assert (= temp681_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp681_192)))
(assert (= temp681_191 temp681_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp681_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp681_194 #x0000000000000001))
(assert (= var1191836 temp681_194))
(assert (= temp681_195 #x0000000000000000))
(assert (= var1179826 temp681_195))
(assert (= temp681_197 var1179826))
(assert (= temp681_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp681_197)))
(assert (= temp681_196 temp681_198))
(assert (= temp681_199 #x0000000000000002))
(assert (= var1586025 temp681_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp681_200 #x0000000000000001))
(assert (= var1191993 temp681_200))
(assert (= temp681_201 #x0000000000000001))
(assert (= var2700303 temp681_201))
(assert (= temp681_202 #x0000000000000001))
(assert (= var2962447 temp681_202))
(assert (= temp681_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp681_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp681_204 #x0000000000000001))
(assert (= var211058 temp681_204))
(assert (= temp681_205 #x0000000000000001))
(assert (= var211188 temp681_205))
(assert (= var3879401 var211188))
(assert (= temp681_206 #x0000000000000000))
(assert (= var3866802 temp681_206))
(assert (= temp681_207 #x0000000000000000))
(assert (= temp681_208
   (ite (bvslt var3866802 temp681_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp681_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp681_208)))
(assert (= var3879420 temp681_209))
(assert (bvslt (ite (bvslt var3866802 temp681_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp681_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp681_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp681_211 #x0000000000000001))
(assert (= var3879421 temp681_211))
(assert (= temp681_212 #x0000000000000000))
(assert (= var4079423 temp681_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp681_213 #x0000000000000002))
(assert (= var4208259 temp681_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp681_214 #x0000000000000000))
(assert (= var4273820 temp681_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp681_216 #xffffffffffffffff))
(assert (= temp681_215 temp681_216))
(assert (= temp681_217 #x0000000000000001))
(assert (= var197674 temp681_217))
(assert (= temp681_218 #x0000000000000000))
(assert (= temp681_219
   (ite (bvslt var197674 temp681_218)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp681_220 (select ARGNAME_input_NAMEEND_DIMSIZE temp681_219)))
(assert (= var211595 temp681_220))
(assert (bvslt (ite (bvslt var197674 temp681_218)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp681_221 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp681_221) #x0000000000000001 #x0000000000000000)))
(assert (= temp681_222 #x0000000000000001))
(assert (= var211596 temp681_222))
(assert (= temp681_224 #xffffffffffffffff))
(assert (= temp681_223 temp681_224))
(assert (= temp681_225 #x0000000000000001))
(assert (= var211058 temp681_225))
(model-add temp681_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp681_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp681_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp681_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






