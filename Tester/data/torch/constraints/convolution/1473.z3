(declare-fun temp10758_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10758_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10758_3 () (_ BitVec 64))
(declare-fun temp10758_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10758_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10758_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10758_7 () (_ BitVec 64))
(declare-fun temp10758_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10758_9 () (_ BitVec 64))
(declare-fun temp10758_10 () (_ BitVec 64))
(declare-fun temp10758_11 () (_ BitVec 64))
(declare-fun temp10758_12 () (_ BitVec 64))
(declare-fun temp10758_13 () (_ BitVec 64))
(declare-fun temp10758_14 () (_ BitVec 64))
(declare-fun temp10758_15 () (_ BitVec 64))
(declare-fun temp10758_16 () (_ BitVec 64))
(declare-fun temp10758_17 () (_ BitVec 64))
(declare-fun temp10758_18 () (_ BitVec 64))
(declare-fun temp10758_19 () (_ BitVec 64))
(declare-fun temp10758_20 () (_ BitVec 64))
(declare-fun temp10758_21 () (_ BitVec 64))
(declare-fun temp10758_22 () (_ BitVec 64))
(declare-fun temp10758_23 () (_ BitVec 64))
(declare-fun temp10758_24 () (_ BitVec 64))
(declare-fun temp10758_25 () (_ BitVec 64))
(declare-fun temp10758_26 () (_ BitVec 64))
(declare-fun temp10758_27 () (_ BitVec 64))
(declare-fun temp10758_28 () (_ BitVec 64))
(declare-fun temp10758_29 () (_ BitVec 64))
(declare-fun temp10758_30 () (_ BitVec 64))
(declare-fun temp10758_31 () (_ BitVec 64))
(declare-fun temp10758_32 () (_ BitVec 64))
(declare-fun temp10758_33 () (_ BitVec 64))
(declare-fun temp10758_34 () (_ BitVec 64))
(declare-fun temp10758_35 () (_ BitVec 64))
(declare-fun temp10758_36 () (_ BitVec 64))
(declare-fun temp10758_37 () (_ BitVec 64))
(declare-fun temp10758_38 () (_ BitVec 64))
(declare-fun temp10758_39 () (_ BitVec 64))
(declare-fun temp10758_40 () (_ BitVec 64))
(declare-fun temp10758_41 () (_ BitVec 64))
(declare-fun temp10758_42 () (_ BitVec 64))
(declare-fun temp10758_43 () (_ BitVec 64))
(declare-fun temp10758_44 () (_ BitVec 64))
(declare-fun temp10758_45 () (_ BitVec 64))
(declare-fun temp10758_46 () (_ BitVec 64))
(declare-fun temp10758_47 () (_ BitVec 64))
(declare-fun temp10758_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10758_49 () (_ BitVec 64))
(declare-fun temp10758_50 () (_ BitVec 64))
(declare-fun temp10758_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10758_52 () (_ BitVec 64))
(declare-fun temp10758_53 () (_ BitVec 64))
(declare-fun temp10758_54 () (_ BitVec 64))
(declare-fun temp10758_55 () (_ BitVec 64))
(declare-fun temp10758_56 () (_ BitVec 64))
(declare-fun temp10758_57 () (_ BitVec 64))
(declare-fun temp10758_58 () (_ BitVec 64))
(declare-fun temp10758_59 () (_ BitVec 64))
(declare-fun temp10758_60 () (_ BitVec 64))
(declare-fun temp10758_61 () (_ BitVec 64))
(declare-fun temp10758_62 () (_ BitVec 64))
(declare-fun temp10758_63 () (_ BitVec 64))
(declare-fun temp10758_64 () (_ BitVec 64))
(declare-fun temp10758_65 () (_ BitVec 64))
(declare-fun temp10758_66 () (_ BitVec 64))
(declare-fun temp10758_67 () (_ BitVec 64))
(declare-fun temp10758_68 () (_ BitVec 64))
(declare-fun temp10758_69 () (_ BitVec 64))
(declare-fun temp10758_70 () (_ BitVec 64))
(declare-fun temp10758_71 () (_ BitVec 64))
(declare-fun temp10758_72 () (_ BitVec 64))
(declare-fun temp10758_73 () (_ BitVec 64))
(declare-fun temp10758_74 () (_ BitVec 64))
(declare-fun temp10758_75 () (_ BitVec 64))
(declare-fun temp10758_76 () (_ BitVec 64))
(declare-fun temp10758_77 () (_ BitVec 64))
(declare-fun temp10758_78 () (_ BitVec 64))
(declare-fun temp10758_79 () (_ BitVec 64))
(declare-fun temp10758_80 () (_ BitVec 64))
(declare-fun temp10758_81 () (_ BitVec 64))
(declare-fun temp10758_82 () (_ BitVec 64))
(declare-fun temp10758_83 () (_ BitVec 64))
(declare-fun temp10758_84 () (_ BitVec 64))
(declare-fun temp10758_85 () (_ BitVec 64))
(declare-fun temp10758_86 () (_ BitVec 64))
(declare-fun temp10758_87 () (_ BitVec 64))
(declare-fun temp10758_88 () (_ BitVec 64))
(declare-fun temp10758_89 () (_ BitVec 64))
(declare-fun temp10758_90 () (_ BitVec 64))
(declare-fun temp10758_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10758_92 () (_ BitVec 64))
(declare-fun temp10758_93 () (_ BitVec 64))
(declare-fun temp10758_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10758_95 () (_ BitVec 64))
(declare-fun temp10758_96 () (_ BitVec 64))
(declare-fun temp10758_97 () (_ BitVec 64))
(declare-fun temp10758_98 () (_ BitVec 64))
(declare-fun temp10758_99 () (_ BitVec 64))
(declare-fun temp10758_100 () (_ BitVec 64))
(declare-fun temp10758_101 () (_ BitVec 64))
(declare-fun temp10758_102 () (_ BitVec 64))
(declare-fun temp10758_103 () (_ BitVec 64))
(declare-fun temp10758_104 () (_ BitVec 64))
(declare-fun temp10758_105 () (_ BitVec 64))
(declare-fun temp10758_106 () (_ BitVec 64))
(declare-fun temp10758_107 () (_ BitVec 64))
(declare-fun temp10758_108 () (_ BitVec 64))
(declare-fun temp10758_109 () (_ BitVec 64))
(declare-fun temp10758_110 () (_ BitVec 64))
(declare-fun temp10758_111 () (_ BitVec 64))
(declare-fun temp10758_112 () (_ BitVec 64))
(declare-fun temp10758_113 () (_ BitVec 64))
(declare-fun temp10758_114 () (_ BitVec 64))
(declare-fun temp10758_115 () (_ BitVec 64))
(declare-fun temp10758_116 () (_ BitVec 64))
(declare-fun temp10758_117 () (_ BitVec 64))
(declare-fun temp10758_118 () (_ BitVec 64))
(declare-fun temp10758_119 () (_ BitVec 64))
(declare-fun temp10758_120 () (_ BitVec 64))
(declare-fun temp10758_121 () (_ BitVec 64))
(declare-fun temp10758_122 () (_ BitVec 64))
(declare-fun temp10758_123 () (_ BitVec 64))
(declare-fun temp10758_124 () (_ BitVec 64))
(declare-fun temp10758_125 () (_ BitVec 64))
(declare-fun temp10758_126 () (_ BitVec 64))
(declare-fun temp10758_127 () (_ BitVec 64))
(declare-fun temp10758_128 () (_ BitVec 64))
(declare-fun temp10758_129 () (_ BitVec 64))
(declare-fun temp10758_130 () (_ BitVec 64))
(declare-fun temp10758_131 () (_ BitVec 64))
(declare-fun temp10758_132 () (_ BitVec 64))
(declare-fun temp10758_133 () (_ BitVec 64))
(declare-fun temp10758_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10758_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10758_136 () (_ BitVec 64))
(declare-fun temp10758_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10758_138 () (_ BitVec 64))
(declare-fun temp10758_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10758_140 () (_ BitVec 64))
(declare-fun temp10758_141 () (_ BitVec 64))
(declare-fun temp10758_142 () (_ BitVec 64))
(declare-fun temp10758_143 () (_ BitVec 64))
(declare-fun temp10758_144 () (_ BitVec 64))
(declare-fun temp10758_145 () (_ BitVec 64))
(declare-fun temp10758_146 () (_ BitVec 64))
(declare-fun temp10758_147 () (_ BitVec 64))
(declare-fun temp10758_148 () (_ BitVec 64))
(declare-fun temp10758_149 () (_ BitVec 64))
(declare-fun temp10758_150 () (_ BitVec 64))
(declare-fun temp10758_151 () (_ BitVec 64))
(declare-fun temp10758_152 () (_ BitVec 64))
(declare-fun temp10758_153 () (_ BitVec 64))
(declare-fun temp10758_154 () (_ BitVec 64))
(declare-fun temp10758_155 () (_ BitVec 64))
(declare-fun temp10758_157 () (_ BitVec 64))
(declare-fun temp10758_158 () (_ BitVec 64))
(declare-fun temp10758_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10758_159 () (_ BitVec 64))
(declare-fun temp10758_160 () (_ BitVec 64))
(declare-fun temp10758_162 () (_ BitVec 64))
(declare-fun temp10758_163 () (_ BitVec 64))
(declare-fun temp10758_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10758_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10758_165 () (_ BitVec 64))
(declare-fun temp10758_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10758_167 () (_ BitVec 64))
(declare-fun temp10758_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10758_169 () (_ BitVec 64))
(declare-fun temp10758_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10758_171 () (_ BitVec 64))
(declare-fun temp10758_172 () (_ BitVec 64))
(declare-fun temp10758_173 () (_ BitVec 64))
(declare-fun temp10758_174 () (_ BitVec 64))
(declare-fun temp10758_175 () (_ BitVec 64))
(declare-fun temp10758_176 () (_ BitVec 64))
(declare-fun temp10758_177 () (_ BitVec 64))
(declare-fun temp10758_178 () (_ BitVec 64))
(declare-fun temp10758_179 () (_ BitVec 64))
(declare-fun temp10758_180 () (_ BitVec 64))
(declare-fun temp10758_181 () (_ BitVec 64))
(declare-fun temp10758_182 () (_ BitVec 64))
(declare-fun temp10758_183 () (_ BitVec 64))
(declare-fun temp10758_184 () (_ BitVec 64))
(declare-fun temp10758_185 () (_ BitVec 64))
(declare-fun temp10758_186 () (_ BitVec 64))
(declare-fun temp10758_187 () (_ BitVec 64))
(declare-fun temp10758_188 () (_ BitVec 64))
(declare-fun temp10758_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10758_190 () (_ BitVec 64))
(declare-fun temp10758_192 () (_ BitVec 64))
(declare-fun temp10758_193 () (_ BitVec 64))
(declare-fun temp10758_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10758_194 () (_ BitVec 64))
(declare-fun temp10758_195 () (_ BitVec 64))
(declare-fun temp10758_197 () (_ BitVec 64))
(declare-fun temp10758_198 () (_ BitVec 64))
(declare-fun temp10758_196 () (_ BitVec 64))
(declare-fun temp10758_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10758_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10758_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10758_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10758_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10758_204 () (_ BitVec 64))
(declare-fun temp10758_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10758_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10758_207 () (_ BitVec 64))
(declare-fun temp10758_208 () (_ BitVec 64))
(declare-fun temp10758_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10758_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10758_211 () (_ BitVec 64))
(declare-fun temp10758_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10758_213 () (_ BitVec 64))
(declare-fun temp10758_214 () (_ BitVec 64))
(declare-fun temp10758_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10758_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10758_217 () (_ BitVec 64))
(declare-fun temp10758_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10758_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10758_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var5124496 () (_ BitVec 64))
(declare-fun var211962 () (_ BitVec 64))
(declare-fun temp10758_221 () (_ BitVec 64))
(declare-fun var211963 () (_ BitVec 64))
(declare-fun temp10758_222 () (_ BitVec 64))
(assert (= temp10758_1 #x0000000000000001))
(assert (= var77203 temp10758_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10758_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10758_2)))
(assert (= temp10758_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10758_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10758_4 #x0000000000000000))
(assert (= var210941 temp10758_4))
(assert (= temp10758_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10758_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10758_6 #x0000000000000000))
(assert (= var210986 temp10758_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10758_7 #x0000000000000000))
(assert (= temp10758_8 temp10758_7))
(assert (= temp10758_9 (select ARGNAME_padding_NAMEEND_VAL temp10758_8)))
(assert (= temp10758_10 #x0000000000000001))
(assert (= temp10758_11 temp10758_10))
(assert (= temp10758_12 (select ARGNAME_padding_NAMEEND_VAL temp10758_11)))
(assert (= temp10758_13 #x0000000000000002))
(assert (= temp10758_14 temp10758_13))
(assert (= temp10758_15 (select ARGNAME_padding_NAMEEND_VAL temp10758_14)))
(assert (= temp10758_16 #x0000000000000003))
(assert (= temp10758_17 temp10758_16))
(assert (= temp10758_18 (select ARGNAME_padding_NAMEEND_VAL temp10758_17)))
(assert (= temp10758_19 #x0000000000000004))
(assert (= temp10758_20 temp10758_19))
(assert (= temp10758_21 (select ARGNAME_padding_NAMEEND_VAL temp10758_20)))
(assert (= temp10758_22 #x0000000000000005))
(assert (= temp10758_23 temp10758_22))
(assert (= temp10758_24 (select ARGNAME_padding_NAMEEND_VAL temp10758_23)))
(assert (= temp10758_25 #x0000000000000000))
(assert (= temp10758_26 #x0000000000000000))
(assert (= temp10758_27 temp10758_26))
(assert (= temp10758_28 (select ARGNAME_padding_NAMEEND_VAL temp10758_27)))
(assert (= temp10758_29 #x0000000000000000))
(assert (= temp10758_30 #x0000000000000001))
(assert (= temp10758_31 temp10758_30))
(assert (= temp10758_32 (select ARGNAME_padding_NAMEEND_VAL temp10758_31)))
(assert (= temp10758_33 #x0000000000000000))
(assert (= temp10758_34 #x0000000000000002))
(assert (= temp10758_35 temp10758_34))
(assert (= temp10758_36 (select ARGNAME_padding_NAMEEND_VAL temp10758_35)))
(assert (= temp10758_37 #x0000000000000000))
(assert (= temp10758_38 #x0000000000000003))
(assert (= temp10758_39 temp10758_38))
(assert (= temp10758_40 (select ARGNAME_padding_NAMEEND_VAL temp10758_39)))
(assert (= temp10758_41 #x0000000000000000))
(assert (= temp10758_42 #x0000000000000004))
(assert (= temp10758_43 temp10758_42))
(assert (= temp10758_44 (select ARGNAME_padding_NAMEEND_VAL temp10758_43)))
(assert (= temp10758_45 #x0000000000000000))
(assert (= temp10758_46 #x0000000000000005))
(assert (= temp10758_47 temp10758_46))
(assert (= temp10758_48 (select ARGNAME_padding_NAMEEND_VAL temp10758_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10758_28 temp10758_25)
             (bvslt temp10758_32 temp10758_29)
             (bvslt temp10758_36 temp10758_33)
             (bvslt temp10758_40 temp10758_37)
             (bvslt temp10758_44 temp10758_41)
             (bvslt temp10758_48 temp10758_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10758_49 #x0000000000000000))
(assert (= var1191714 temp10758_49))
(assert (= temp10758_50 #x0000000000000000))
(assert (= temp10758_51 temp10758_50))
(assert (= temp10758_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10758_51)))
(assert (= temp10758_53 #x0000000000000001))
(assert (= temp10758_54 temp10758_53))
(assert (= temp10758_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10758_54)))
(assert (= temp10758_56 #x0000000000000002))
(assert (= temp10758_57 temp10758_56))
(assert (= temp10758_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10758_57)))
(assert (= temp10758_59 #x0000000000000003))
(assert (= temp10758_60 temp10758_59))
(assert (= temp10758_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10758_60)))
(assert (= temp10758_62 #x0000000000000004))
(assert (= temp10758_63 temp10758_62))
(assert (= temp10758_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10758_63)))
(assert (= temp10758_65 #x0000000000000005))
(assert (= temp10758_66 temp10758_65))
(assert (= temp10758_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10758_66)))
(assert (= temp10758_68 #x0000000000000000))
(assert (= temp10758_69 #x0000000000000000))
(assert (= temp10758_70 temp10758_69))
(assert (= temp10758_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10758_70)))
(assert (= temp10758_72 #x0000000000000000))
(assert (= temp10758_73 #x0000000000000001))
(assert (= temp10758_74 temp10758_73))
(assert (= temp10758_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10758_74)))
(assert (= temp10758_76 #x0000000000000000))
(assert (= temp10758_77 #x0000000000000002))
(assert (= temp10758_78 temp10758_77))
(assert (= temp10758_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10758_78)))
(assert (= temp10758_80 #x0000000000000000))
(assert (= temp10758_81 #x0000000000000003))
(assert (= temp10758_82 temp10758_81))
(assert (= temp10758_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10758_82)))
(assert (= temp10758_84 #x0000000000000000))
(assert (= temp10758_85 #x0000000000000004))
(assert (= temp10758_86 temp10758_85))
(assert (= temp10758_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10758_86)))
(assert (= temp10758_88 #x0000000000000000))
(assert (= temp10758_89 #x0000000000000005))
(assert (= temp10758_90 temp10758_89))
(assert (= temp10758_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10758_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10758_71 temp10758_68)
             (bvslt temp10758_75 temp10758_72)
             (bvslt temp10758_79 temp10758_76)
             (bvslt temp10758_83 temp10758_80)
             (bvslt temp10758_87 temp10758_84)
             (bvslt temp10758_91 temp10758_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10758_92 #x0000000000000000))
(assert (= var1191725 temp10758_92))
(assert (= temp10758_93 #x0000000000000000))
(assert (= temp10758_94 temp10758_93))
(assert (= temp10758_95 (select ARGNAME_stride_NAMEEND_VAL temp10758_94)))
(assert (= temp10758_96 #x0000000000000001))
(assert (= temp10758_97 temp10758_96))
(assert (= temp10758_98 (select ARGNAME_stride_NAMEEND_VAL temp10758_97)))
(assert (= temp10758_99 #x0000000000000002))
(assert (= temp10758_100 temp10758_99))
(assert (= temp10758_101 (select ARGNAME_stride_NAMEEND_VAL temp10758_100)))
(assert (= temp10758_102 #x0000000000000003))
(assert (= temp10758_103 temp10758_102))
(assert (= temp10758_104 (select ARGNAME_stride_NAMEEND_VAL temp10758_103)))
(assert (= temp10758_105 #x0000000000000004))
(assert (= temp10758_106 temp10758_105))
(assert (= temp10758_107 (select ARGNAME_stride_NAMEEND_VAL temp10758_106)))
(assert (= temp10758_108 #x0000000000000005))
(assert (= temp10758_109 temp10758_108))
(assert (= temp10758_110 (select ARGNAME_stride_NAMEEND_VAL temp10758_109)))
(assert (= temp10758_111 #x0000000000000000))
(assert (= temp10758_112 #x0000000000000000))
(assert (= temp10758_113 temp10758_112))
(assert (= temp10758_114 (select ARGNAME_stride_NAMEEND_VAL temp10758_113)))
(assert (= temp10758_115 #x0000000000000000))
(assert (= temp10758_116 #x0000000000000001))
(assert (= temp10758_117 temp10758_116))
(assert (= temp10758_118 (select ARGNAME_stride_NAMEEND_VAL temp10758_117)))
(assert (= temp10758_119 #x0000000000000000))
(assert (= temp10758_120 #x0000000000000002))
(assert (= temp10758_121 temp10758_120))
(assert (= temp10758_122 (select ARGNAME_stride_NAMEEND_VAL temp10758_121)))
(assert (= temp10758_123 #x0000000000000000))
(assert (= temp10758_124 #x0000000000000003))
(assert (= temp10758_125 temp10758_124))
(assert (= temp10758_126 (select ARGNAME_stride_NAMEEND_VAL temp10758_125)))
(assert (= temp10758_127 #x0000000000000000))
(assert (= temp10758_128 #x0000000000000004))
(assert (= temp10758_129 temp10758_128))
(assert (= temp10758_130 (select ARGNAME_stride_NAMEEND_VAL temp10758_129)))
(assert (= temp10758_131 #x0000000000000000))
(assert (= temp10758_132 #x0000000000000005))
(assert (= temp10758_133 temp10758_132))
(assert (= temp10758_134 (select ARGNAME_stride_NAMEEND_VAL temp10758_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10758_114 temp10758_111)
             (bvsle temp10758_118 temp10758_115)
             (bvsle temp10758_122 temp10758_119)
             (bvsle temp10758_126 temp10758_123)
             (bvsle temp10758_130 temp10758_127)
             (bvsle temp10758_134 temp10758_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10758_135 #x0000000000000000))
(assert (= var1191735 temp10758_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10758_136 #x0000000000000001))
(assert (= var1191747 temp10758_136))
(assert (= temp10758_137 #x0000000000000000))
(assert (= var1179826 temp10758_137))
(assert (= temp10758_138 #x0000000000000000))
(assert (= temp10758_139 temp10758_138))
(assert (= temp10758_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10758_139)))
(assert (= temp10758_141 #x0000000000000001))
(assert (= temp10758_142 temp10758_141))
(assert (= temp10758_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10758_142)))
(assert (= temp10758_144 #x0000000000000002))
(assert (= temp10758_145 temp10758_144))
(assert (= temp10758_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10758_145)))
(assert (= temp10758_147 #x0000000000000003))
(assert (= temp10758_148 temp10758_147))
(assert (= temp10758_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10758_148)))
(assert (= temp10758_150 #x0000000000000004))
(assert (= temp10758_151 temp10758_150))
(assert (= temp10758_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10758_151)))
(assert (= temp10758_153 #x0000000000000005))
(assert (= temp10758_154 temp10758_153))
(assert (= temp10758_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10758_154)))
(assert (= temp10758_157 var1179826))
(assert (= temp10758_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10758_157)))
(assert (= temp10758_156 temp10758_158))
(assert (= var1191780
   (ite (bvslt temp10758_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10758_159 #x0000000000000000))
(assert (= var1191780 temp10758_159))
(assert (= temp10758_160 #x0000000000000000))
(assert (= var1179826 temp10758_160))
(assert (= temp10758_162 var1179826))
(assert (= temp10758_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10758_162)))
(assert (= temp10758_161 temp10758_163))
(assert (= var1191802 (bvsmod temp10758_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10758_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10758_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10758_165 #x0000000000000001))
(assert (= var1191803 temp10758_165))
(assert (= temp10758_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10758_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10758_167 #x0000000000000001))
(assert (= var1191823 temp10758_167))
(assert (= temp10758_168 #x0000000000000001))
(assert (= var1180714 temp10758_168))
(assert (= temp10758_169 #x0000000000000000))
(assert (= temp10758_170 temp10758_169))
(assert (= temp10758_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10758_170)))
(assert (= temp10758_172 #x0000000000000001))
(assert (= temp10758_173 temp10758_172))
(assert (= temp10758_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10758_173)))
(assert (= temp10758_175 #x0000000000000002))
(assert (= temp10758_176 temp10758_175))
(assert (= temp10758_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10758_176)))
(assert (= temp10758_178 #x0000000000000003))
(assert (= temp10758_179 temp10758_178))
(assert (= temp10758_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10758_179)))
(assert (= temp10758_181 #x0000000000000004))
(assert (= temp10758_182 temp10758_181))
(assert (= temp10758_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10758_182)))
(assert (= temp10758_184 #x0000000000000005))
(assert (= temp10758_185 temp10758_184))
(assert (= temp10758_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10758_185)))
(assert (= temp10758_187 #x0000000000000000))
(assert (= temp10758_188
   (ite (bvslt var1180714 temp10758_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10758_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10758_188)))
(assert (= var1191831 temp10758_189))
(assert (bvslt (ite (bvslt var1180714 temp10758_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10758_190 #x0000000000000001))
(assert (= var1180714 temp10758_190))
(assert (= temp10758_192 var1180714))
(assert (= temp10758_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10758_192)))
(assert (= temp10758_191 temp10758_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10758_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10758_194 #x0000000000000001))
(assert (= var1191836 temp10758_194))
(assert (= temp10758_195 #x0000000000000000))
(assert (= var1179826 temp10758_195))
(assert (= temp10758_197 var1179826))
(assert (= temp10758_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10758_197)))
(assert (= temp10758_196 temp10758_198))
(assert (= temp10758_199 #x0000000000000002))
(assert (= var1586025 temp10758_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10758_200 #x0000000000000001))
(assert (= var1191993 temp10758_200))
(assert (= temp10758_201 #x0000000000000001))
(assert (= var2700303 temp10758_201))
(assert (= temp10758_202 #x0000000000000001))
(assert (= var2962447 temp10758_202))
(assert (= temp10758_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10758_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10758_204 #x0000000000000001))
(assert (= var211058 temp10758_204))
(assert (= temp10758_205 #x0000000000000001))
(assert (= var211188 temp10758_205))
(assert (= var3879401 var211188))
(assert (= temp10758_206 #x0000000000000000))
(assert (= var3866802 temp10758_206))
(assert (= temp10758_207 #x0000000000000000))
(assert (= temp10758_208
   (ite (bvslt var3866802 temp10758_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10758_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10758_208)))
(assert (= var3879420 temp10758_209))
(assert (bvslt (ite (bvslt var3866802 temp10758_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10758_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10758_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10758_211 #x0000000000000000))
(assert (= var3879421 temp10758_211))
(assert (= temp10758_212 #x0000000000000001))
(assert (= var3867690 temp10758_212))
(assert (= temp10758_213 #x0000000000000000))
(assert (= temp10758_214
   (ite (bvslt var3867690 temp10758_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10758_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10758_214)))
(assert (= var3879423 temp10758_215))
(assert (bvslt (ite (bvslt var3867690 temp10758_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10758_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10758_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10758_217 #x0000000000000001))
(assert (= var3879424 temp10758_217))
(assert (= temp10758_218 #x0000000000000000))
(assert (= var4133117 temp10758_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10758_219 #x0000000000000002))
(assert (= var4339331 temp10758_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10758_220 #x0000000000000000))
(assert (= var4404892 temp10758_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var5124496 var211201))
(assert (= var211962 var210913))
(assert (= temp10758_221 #x0000000000000000))
(assert (= var211963
   (ite (distinct var211962 temp10758_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10758_222 #x0000000000000001))
(assert (= var211058 temp10758_222))
(model-add temp10758_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10758_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10758_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10758_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





