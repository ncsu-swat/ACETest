(declare-fun temp11025_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp11025_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp11025_3 () (_ BitVec 64))
(declare-fun temp11025_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp11025_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp11025_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp11025_7 () (_ BitVec 64))
(declare-fun temp11025_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11025_9 () (_ BitVec 64))
(declare-fun temp11025_10 () (_ BitVec 64))
(declare-fun temp11025_11 () (_ BitVec 64))
(declare-fun temp11025_12 () (_ BitVec 64))
(declare-fun temp11025_13 () (_ BitVec 64))
(declare-fun temp11025_14 () (_ BitVec 64))
(declare-fun temp11025_15 () (_ BitVec 64))
(declare-fun temp11025_16 () (_ BitVec 64))
(declare-fun temp11025_17 () (_ BitVec 64))
(declare-fun temp11025_18 () (_ BitVec 64))
(declare-fun temp11025_19 () (_ BitVec 64))
(declare-fun temp11025_20 () (_ BitVec 64))
(declare-fun temp11025_21 () (_ BitVec 64))
(declare-fun temp11025_22 () (_ BitVec 64))
(declare-fun temp11025_23 () (_ BitVec 64))
(declare-fun temp11025_24 () (_ BitVec 64))
(declare-fun temp11025_25 () (_ BitVec 64))
(declare-fun temp11025_26 () (_ BitVec 64))
(declare-fun temp11025_27 () (_ BitVec 64))
(declare-fun temp11025_28 () (_ BitVec 64))
(declare-fun temp11025_29 () (_ BitVec 64))
(declare-fun temp11025_30 () (_ BitVec 64))
(declare-fun temp11025_31 () (_ BitVec 64))
(declare-fun temp11025_32 () (_ BitVec 64))
(declare-fun temp11025_33 () (_ BitVec 64))
(declare-fun temp11025_34 () (_ BitVec 64))
(declare-fun temp11025_35 () (_ BitVec 64))
(declare-fun temp11025_36 () (_ BitVec 64))
(declare-fun temp11025_37 () (_ BitVec 64))
(declare-fun temp11025_38 () (_ BitVec 64))
(declare-fun temp11025_39 () (_ BitVec 64))
(declare-fun temp11025_40 () (_ BitVec 64))
(declare-fun temp11025_41 () (_ BitVec 64))
(declare-fun temp11025_42 () (_ BitVec 64))
(declare-fun temp11025_43 () (_ BitVec 64))
(declare-fun temp11025_44 () (_ BitVec 64))
(declare-fun temp11025_45 () (_ BitVec 64))
(declare-fun temp11025_46 () (_ BitVec 64))
(declare-fun temp11025_47 () (_ BitVec 64))
(declare-fun temp11025_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp11025_49 () (_ BitVec 64))
(declare-fun temp11025_50 () (_ BitVec 64))
(declare-fun temp11025_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11025_52 () (_ BitVec 64))
(declare-fun temp11025_53 () (_ BitVec 64))
(declare-fun temp11025_54 () (_ BitVec 64))
(declare-fun temp11025_55 () (_ BitVec 64))
(declare-fun temp11025_56 () (_ BitVec 64))
(declare-fun temp11025_57 () (_ BitVec 64))
(declare-fun temp11025_58 () (_ BitVec 64))
(declare-fun temp11025_59 () (_ BitVec 64))
(declare-fun temp11025_60 () (_ BitVec 64))
(declare-fun temp11025_61 () (_ BitVec 64))
(declare-fun temp11025_62 () (_ BitVec 64))
(declare-fun temp11025_63 () (_ BitVec 64))
(declare-fun temp11025_64 () (_ BitVec 64))
(declare-fun temp11025_65 () (_ BitVec 64))
(declare-fun temp11025_66 () (_ BitVec 64))
(declare-fun temp11025_67 () (_ BitVec 64))
(declare-fun temp11025_68 () (_ BitVec 64))
(declare-fun temp11025_69 () (_ BitVec 64))
(declare-fun temp11025_70 () (_ BitVec 64))
(declare-fun temp11025_71 () (_ BitVec 64))
(declare-fun temp11025_72 () (_ BitVec 64))
(declare-fun temp11025_73 () (_ BitVec 64))
(declare-fun temp11025_74 () (_ BitVec 64))
(declare-fun temp11025_75 () (_ BitVec 64))
(declare-fun temp11025_76 () (_ BitVec 64))
(declare-fun temp11025_77 () (_ BitVec 64))
(declare-fun temp11025_78 () (_ BitVec 64))
(declare-fun temp11025_79 () (_ BitVec 64))
(declare-fun temp11025_80 () (_ BitVec 64))
(declare-fun temp11025_81 () (_ BitVec 64))
(declare-fun temp11025_82 () (_ BitVec 64))
(declare-fun temp11025_83 () (_ BitVec 64))
(declare-fun temp11025_84 () (_ BitVec 64))
(declare-fun temp11025_85 () (_ BitVec 64))
(declare-fun temp11025_86 () (_ BitVec 64))
(declare-fun temp11025_87 () (_ BitVec 64))
(declare-fun temp11025_88 () (_ BitVec 64))
(declare-fun temp11025_89 () (_ BitVec 64))
(declare-fun temp11025_90 () (_ BitVec 64))
(declare-fun temp11025_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp11025_92 () (_ BitVec 64))
(declare-fun temp11025_93 () (_ BitVec 64))
(declare-fun temp11025_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11025_95 () (_ BitVec 64))
(declare-fun temp11025_96 () (_ BitVec 64))
(declare-fun temp11025_97 () (_ BitVec 64))
(declare-fun temp11025_98 () (_ BitVec 64))
(declare-fun temp11025_99 () (_ BitVec 64))
(declare-fun temp11025_100 () (_ BitVec 64))
(declare-fun temp11025_101 () (_ BitVec 64))
(declare-fun temp11025_102 () (_ BitVec 64))
(declare-fun temp11025_103 () (_ BitVec 64))
(declare-fun temp11025_104 () (_ BitVec 64))
(declare-fun temp11025_105 () (_ BitVec 64))
(declare-fun temp11025_106 () (_ BitVec 64))
(declare-fun temp11025_107 () (_ BitVec 64))
(declare-fun temp11025_108 () (_ BitVec 64))
(declare-fun temp11025_109 () (_ BitVec 64))
(declare-fun temp11025_110 () (_ BitVec 64))
(declare-fun temp11025_111 () (_ BitVec 64))
(declare-fun temp11025_112 () (_ BitVec 64))
(declare-fun temp11025_113 () (_ BitVec 64))
(declare-fun temp11025_114 () (_ BitVec 64))
(declare-fun temp11025_115 () (_ BitVec 64))
(declare-fun temp11025_116 () (_ BitVec 64))
(declare-fun temp11025_117 () (_ BitVec 64))
(declare-fun temp11025_118 () (_ BitVec 64))
(declare-fun temp11025_119 () (_ BitVec 64))
(declare-fun temp11025_120 () (_ BitVec 64))
(declare-fun temp11025_121 () (_ BitVec 64))
(declare-fun temp11025_122 () (_ BitVec 64))
(declare-fun temp11025_123 () (_ BitVec 64))
(declare-fun temp11025_124 () (_ BitVec 64))
(declare-fun temp11025_125 () (_ BitVec 64))
(declare-fun temp11025_126 () (_ BitVec 64))
(declare-fun temp11025_127 () (_ BitVec 64))
(declare-fun temp11025_128 () (_ BitVec 64))
(declare-fun temp11025_129 () (_ BitVec 64))
(declare-fun temp11025_130 () (_ BitVec 64))
(declare-fun temp11025_131 () (_ BitVec 64))
(declare-fun temp11025_132 () (_ BitVec 64))
(declare-fun temp11025_133 () (_ BitVec 64))
(declare-fun temp11025_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp11025_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp11025_136 () (_ BitVec 64))
(declare-fun temp11025_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp11025_138 () (_ BitVec 64))
(declare-fun temp11025_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11025_140 () (_ BitVec 64))
(declare-fun temp11025_141 () (_ BitVec 64))
(declare-fun temp11025_142 () (_ BitVec 64))
(declare-fun temp11025_143 () (_ BitVec 64))
(declare-fun temp11025_144 () (_ BitVec 64))
(declare-fun temp11025_145 () (_ BitVec 64))
(declare-fun temp11025_146 () (_ BitVec 64))
(declare-fun temp11025_147 () (_ BitVec 64))
(declare-fun temp11025_148 () (_ BitVec 64))
(declare-fun temp11025_149 () (_ BitVec 64))
(declare-fun temp11025_150 () (_ BitVec 64))
(declare-fun temp11025_151 () (_ BitVec 64))
(declare-fun temp11025_152 () (_ BitVec 64))
(declare-fun temp11025_153 () (_ BitVec 64))
(declare-fun temp11025_154 () (_ BitVec 64))
(declare-fun temp11025_155 () (_ BitVec 64))
(declare-fun temp11025_157 () (_ BitVec 64))
(declare-fun temp11025_158 () (_ BitVec 64))
(declare-fun temp11025_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp11025_159 () (_ BitVec 64))
(declare-fun temp11025_160 () (_ BitVec 64))
(declare-fun temp11025_162 () (_ BitVec 64))
(declare-fun temp11025_163 () (_ BitVec 64))
(declare-fun temp11025_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp11025_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp11025_165 () (_ BitVec 64))
(declare-fun temp11025_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp11025_167 () (_ BitVec 64))
(declare-fun temp11025_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp11025_169 () (_ BitVec 64))
(declare-fun temp11025_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11025_171 () (_ BitVec 64))
(declare-fun temp11025_172 () (_ BitVec 64))
(declare-fun temp11025_173 () (_ BitVec 64))
(declare-fun temp11025_174 () (_ BitVec 64))
(declare-fun temp11025_175 () (_ BitVec 64))
(declare-fun temp11025_176 () (_ BitVec 64))
(declare-fun temp11025_177 () (_ BitVec 64))
(declare-fun temp11025_178 () (_ BitVec 64))
(declare-fun temp11025_179 () (_ BitVec 64))
(declare-fun temp11025_180 () (_ BitVec 64))
(declare-fun temp11025_181 () (_ BitVec 64))
(declare-fun temp11025_182 () (_ BitVec 64))
(declare-fun temp11025_183 () (_ BitVec 64))
(declare-fun temp11025_184 () (_ BitVec 64))
(declare-fun temp11025_185 () (_ BitVec 64))
(declare-fun temp11025_186 () (_ BitVec 64))
(declare-fun temp11025_187 () (_ BitVec 64))
(declare-fun temp11025_188 () (_ BitVec 64))
(declare-fun temp11025_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp11025_190 () (_ BitVec 64))
(declare-fun temp11025_192 () (_ BitVec 64))
(declare-fun temp11025_193 () (_ BitVec 64))
(declare-fun temp11025_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp11025_194 () (_ BitVec 64))
(declare-fun temp11025_195 () (_ BitVec 64))
(declare-fun temp11025_197 () (_ BitVec 64))
(declare-fun temp11025_198 () (_ BitVec 64))
(declare-fun temp11025_196 () (_ BitVec 64))
(declare-fun temp11025_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp11025_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp11025_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp11025_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp11025_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp11025_204 () (_ BitVec 64))
(declare-fun temp11025_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp11025_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp11025_207 () (_ BitVec 64))
(declare-fun temp11025_208 () (_ BitVec 64))
(declare-fun temp11025_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp11025_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp11025_211 () (_ BitVec 64))
(declare-fun temp11025_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp11025_213 () (_ BitVec 64))
(declare-fun temp11025_214 () (_ BitVec 64))
(declare-fun temp11025_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp11025_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp11025_217 () (_ BitVec 64))
(declare-fun temp11025_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp11025_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp11025_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var4600208 () (_ BitVec 64))
(declare-fun var4862352 () (_ BitVec 64))
(declare-fun temp11025_221 () (_ BitVec 64))
(declare-fun var212414 () (_ BitVec 64))
(declare-fun temp11025_222 () (_ BitVec 64))
(declare-fun temp11025_223 () (_ BitVec 64))
(declare-fun var5191299 () (_ BitVec 64))
(declare-fun var5191301 () (_ BitVec 64))
(declare-fun var5256844 () (_ BitVec 64))
(declare-fun var5256845 () (_ BitVec 64))
(declare-fun temp11025_224 () (_ BitVec 64))
(assert (= temp11025_1 #x0000000000000001))
(assert (= var77203 temp11025_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp11025_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp11025_2)))
(assert (= temp11025_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp11025_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11025_4 #x0000000000000000))
(assert (= var210941 temp11025_4))
(assert (= temp11025_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp11025_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11025_6 #x0000000000000000))
(assert (= var210986 temp11025_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp11025_7 #x0000000000000000))
(assert (= temp11025_8 temp11025_7))
(assert (= temp11025_9 (select ARGNAME_padding_NAMEEND_VAL temp11025_8)))
(assert (= temp11025_10 #x0000000000000001))
(assert (= temp11025_11 temp11025_10))
(assert (= temp11025_12 (select ARGNAME_padding_NAMEEND_VAL temp11025_11)))
(assert (= temp11025_13 #x0000000000000002))
(assert (= temp11025_14 temp11025_13))
(assert (= temp11025_15 (select ARGNAME_padding_NAMEEND_VAL temp11025_14)))
(assert (= temp11025_16 #x0000000000000003))
(assert (= temp11025_17 temp11025_16))
(assert (= temp11025_18 (select ARGNAME_padding_NAMEEND_VAL temp11025_17)))
(assert (= temp11025_19 #x0000000000000004))
(assert (= temp11025_20 temp11025_19))
(assert (= temp11025_21 (select ARGNAME_padding_NAMEEND_VAL temp11025_20)))
(assert (= temp11025_22 #x0000000000000005))
(assert (= temp11025_23 temp11025_22))
(assert (= temp11025_24 (select ARGNAME_padding_NAMEEND_VAL temp11025_23)))
(assert (= temp11025_25 #x0000000000000000))
(assert (= temp11025_26 #x0000000000000000))
(assert (= temp11025_27 temp11025_26))
(assert (= temp11025_28 (select ARGNAME_padding_NAMEEND_VAL temp11025_27)))
(assert (= temp11025_29 #x0000000000000000))
(assert (= temp11025_30 #x0000000000000001))
(assert (= temp11025_31 temp11025_30))
(assert (= temp11025_32 (select ARGNAME_padding_NAMEEND_VAL temp11025_31)))
(assert (= temp11025_33 #x0000000000000000))
(assert (= temp11025_34 #x0000000000000002))
(assert (= temp11025_35 temp11025_34))
(assert (= temp11025_36 (select ARGNAME_padding_NAMEEND_VAL temp11025_35)))
(assert (= temp11025_37 #x0000000000000000))
(assert (= temp11025_38 #x0000000000000003))
(assert (= temp11025_39 temp11025_38))
(assert (= temp11025_40 (select ARGNAME_padding_NAMEEND_VAL temp11025_39)))
(assert (= temp11025_41 #x0000000000000000))
(assert (= temp11025_42 #x0000000000000004))
(assert (= temp11025_43 temp11025_42))
(assert (= temp11025_44 (select ARGNAME_padding_NAMEEND_VAL temp11025_43)))
(assert (= temp11025_45 #x0000000000000000))
(assert (= temp11025_46 #x0000000000000005))
(assert (= temp11025_47 temp11025_46))
(assert (= temp11025_48 (select ARGNAME_padding_NAMEEND_VAL temp11025_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp11025_28 temp11025_25)
             (bvslt temp11025_32 temp11025_29)
             (bvslt temp11025_36 temp11025_33)
             (bvslt temp11025_40 temp11025_37)
             (bvslt temp11025_44 temp11025_41)
             (bvslt temp11025_48 temp11025_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11025_49 #x0000000000000000))
(assert (= var1191714 temp11025_49))
(assert (= temp11025_50 #x0000000000000000))
(assert (= temp11025_51 temp11025_50))
(assert (= temp11025_52 (select ARGNAME_output_padding_NAMEEND_VAL temp11025_51)))
(assert (= temp11025_53 #x0000000000000001))
(assert (= temp11025_54 temp11025_53))
(assert (= temp11025_55 (select ARGNAME_output_padding_NAMEEND_VAL temp11025_54)))
(assert (= temp11025_56 #x0000000000000002))
(assert (= temp11025_57 temp11025_56))
(assert (= temp11025_58 (select ARGNAME_output_padding_NAMEEND_VAL temp11025_57)))
(assert (= temp11025_59 #x0000000000000003))
(assert (= temp11025_60 temp11025_59))
(assert (= temp11025_61 (select ARGNAME_output_padding_NAMEEND_VAL temp11025_60)))
(assert (= temp11025_62 #x0000000000000004))
(assert (= temp11025_63 temp11025_62))
(assert (= temp11025_64 (select ARGNAME_output_padding_NAMEEND_VAL temp11025_63)))
(assert (= temp11025_65 #x0000000000000005))
(assert (= temp11025_66 temp11025_65))
(assert (= temp11025_67 (select ARGNAME_output_padding_NAMEEND_VAL temp11025_66)))
(assert (= temp11025_68 #x0000000000000000))
(assert (= temp11025_69 #x0000000000000000))
(assert (= temp11025_70 temp11025_69))
(assert (= temp11025_71 (select ARGNAME_output_padding_NAMEEND_VAL temp11025_70)))
(assert (= temp11025_72 #x0000000000000000))
(assert (= temp11025_73 #x0000000000000001))
(assert (= temp11025_74 temp11025_73))
(assert (= temp11025_75 (select ARGNAME_output_padding_NAMEEND_VAL temp11025_74)))
(assert (= temp11025_76 #x0000000000000000))
(assert (= temp11025_77 #x0000000000000002))
(assert (= temp11025_78 temp11025_77))
(assert (= temp11025_79 (select ARGNAME_output_padding_NAMEEND_VAL temp11025_78)))
(assert (= temp11025_80 #x0000000000000000))
(assert (= temp11025_81 #x0000000000000003))
(assert (= temp11025_82 temp11025_81))
(assert (= temp11025_83 (select ARGNAME_output_padding_NAMEEND_VAL temp11025_82)))
(assert (= temp11025_84 #x0000000000000000))
(assert (= temp11025_85 #x0000000000000004))
(assert (= temp11025_86 temp11025_85))
(assert (= temp11025_87 (select ARGNAME_output_padding_NAMEEND_VAL temp11025_86)))
(assert (= temp11025_88 #x0000000000000000))
(assert (= temp11025_89 #x0000000000000005))
(assert (= temp11025_90 temp11025_89))
(assert (= temp11025_91 (select ARGNAME_output_padding_NAMEEND_VAL temp11025_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp11025_71 temp11025_68)
             (bvslt temp11025_75 temp11025_72)
             (bvslt temp11025_79 temp11025_76)
             (bvslt temp11025_83 temp11025_80)
             (bvslt temp11025_87 temp11025_84)
             (bvslt temp11025_91 temp11025_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11025_92 #x0000000000000000))
(assert (= var1191725 temp11025_92))
(assert (= temp11025_93 #x0000000000000000))
(assert (= temp11025_94 temp11025_93))
(assert (= temp11025_95 (select ARGNAME_stride_NAMEEND_VAL temp11025_94)))
(assert (= temp11025_96 #x0000000000000001))
(assert (= temp11025_97 temp11025_96))
(assert (= temp11025_98 (select ARGNAME_stride_NAMEEND_VAL temp11025_97)))
(assert (= temp11025_99 #x0000000000000002))
(assert (= temp11025_100 temp11025_99))
(assert (= temp11025_101 (select ARGNAME_stride_NAMEEND_VAL temp11025_100)))
(assert (= temp11025_102 #x0000000000000003))
(assert (= temp11025_103 temp11025_102))
(assert (= temp11025_104 (select ARGNAME_stride_NAMEEND_VAL temp11025_103)))
(assert (= temp11025_105 #x0000000000000004))
(assert (= temp11025_106 temp11025_105))
(assert (= temp11025_107 (select ARGNAME_stride_NAMEEND_VAL temp11025_106)))
(assert (= temp11025_108 #x0000000000000005))
(assert (= temp11025_109 temp11025_108))
(assert (= temp11025_110 (select ARGNAME_stride_NAMEEND_VAL temp11025_109)))
(assert (= temp11025_111 #x0000000000000000))
(assert (= temp11025_112 #x0000000000000000))
(assert (= temp11025_113 temp11025_112))
(assert (= temp11025_114 (select ARGNAME_stride_NAMEEND_VAL temp11025_113)))
(assert (= temp11025_115 #x0000000000000000))
(assert (= temp11025_116 #x0000000000000001))
(assert (= temp11025_117 temp11025_116))
(assert (= temp11025_118 (select ARGNAME_stride_NAMEEND_VAL temp11025_117)))
(assert (= temp11025_119 #x0000000000000000))
(assert (= temp11025_120 #x0000000000000002))
(assert (= temp11025_121 temp11025_120))
(assert (= temp11025_122 (select ARGNAME_stride_NAMEEND_VAL temp11025_121)))
(assert (= temp11025_123 #x0000000000000000))
(assert (= temp11025_124 #x0000000000000003))
(assert (= temp11025_125 temp11025_124))
(assert (= temp11025_126 (select ARGNAME_stride_NAMEEND_VAL temp11025_125)))
(assert (= temp11025_127 #x0000000000000000))
(assert (= temp11025_128 #x0000000000000004))
(assert (= temp11025_129 temp11025_128))
(assert (= temp11025_130 (select ARGNAME_stride_NAMEEND_VAL temp11025_129)))
(assert (= temp11025_131 #x0000000000000000))
(assert (= temp11025_132 #x0000000000000005))
(assert (= temp11025_133 temp11025_132))
(assert (= temp11025_134 (select ARGNAME_stride_NAMEEND_VAL temp11025_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp11025_114 temp11025_111)
             (bvsle temp11025_118 temp11025_115)
             (bvsle temp11025_122 temp11025_119)
             (bvsle temp11025_126 temp11025_123)
             (bvsle temp11025_130 temp11025_127)
             (bvsle temp11025_134 temp11025_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11025_135 #x0000000000000000))
(assert (= var1191735 temp11025_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11025_136 #x0000000000000001))
(assert (= var1191747 temp11025_136))
(assert (= temp11025_137 #x0000000000000000))
(assert (= var1179826 temp11025_137))
(assert (= temp11025_138 #x0000000000000000))
(assert (= temp11025_139 temp11025_138))
(assert (= temp11025_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11025_139)))
(assert (= temp11025_141 #x0000000000000001))
(assert (= temp11025_142 temp11025_141))
(assert (= temp11025_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11025_142)))
(assert (= temp11025_144 #x0000000000000002))
(assert (= temp11025_145 temp11025_144))
(assert (= temp11025_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11025_145)))
(assert (= temp11025_147 #x0000000000000003))
(assert (= temp11025_148 temp11025_147))
(assert (= temp11025_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11025_148)))
(assert (= temp11025_150 #x0000000000000004))
(assert (= temp11025_151 temp11025_150))
(assert (= temp11025_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11025_151)))
(assert (= temp11025_153 #x0000000000000005))
(assert (= temp11025_154 temp11025_153))
(assert (= temp11025_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11025_154)))
(assert (= temp11025_157 var1179826))
(assert (= temp11025_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11025_157)))
(assert (= temp11025_156 temp11025_158))
(assert (= var1191780
   (ite (bvslt temp11025_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11025_159 #x0000000000000000))
(assert (= var1191780 temp11025_159))
(assert (= temp11025_160 #x0000000000000000))
(assert (= var1179826 temp11025_160))
(assert (= temp11025_162 var1179826))
(assert (= temp11025_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11025_162)))
(assert (= temp11025_161 temp11025_163))
(assert (= var1191802 (bvsmod temp11025_161 ARGNAME_groups_NAMEEND)))
(assert (= temp11025_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp11025_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp11025_165 #x0000000000000001))
(assert (= var1191803 temp11025_165))
(assert (= temp11025_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp11025_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11025_167 #x0000000000000001))
(assert (= var1191823 temp11025_167))
(assert (= temp11025_168 #x0000000000000001))
(assert (= var1180714 temp11025_168))
(assert (= temp11025_169 #x0000000000000000))
(assert (= temp11025_170 temp11025_169))
(assert (= temp11025_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp11025_170)))
(assert (= temp11025_172 #x0000000000000001))
(assert (= temp11025_173 temp11025_172))
(assert (= temp11025_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp11025_173)))
(assert (= temp11025_175 #x0000000000000002))
(assert (= temp11025_176 temp11025_175))
(assert (= temp11025_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp11025_176)))
(assert (= temp11025_178 #x0000000000000003))
(assert (= temp11025_179 temp11025_178))
(assert (= temp11025_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp11025_179)))
(assert (= temp11025_181 #x0000000000000004))
(assert (= temp11025_182 temp11025_181))
(assert (= temp11025_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp11025_182)))
(assert (= temp11025_184 #x0000000000000005))
(assert (= temp11025_185 temp11025_184))
(assert (= temp11025_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp11025_185)))
(assert (= temp11025_187 #x0000000000000000))
(assert (= temp11025_188
   (ite (bvslt var1180714 temp11025_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp11025_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp11025_188)))
(assert (= var1191831 temp11025_189))
(assert (bvslt (ite (bvslt var1180714 temp11025_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11025_190 #x0000000000000001))
(assert (= var1180714 temp11025_190))
(assert (= temp11025_192 var1180714))
(assert (= temp11025_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11025_192)))
(assert (= temp11025_191 temp11025_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp11025_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp11025_194 #x0000000000000001))
(assert (= var1191836 temp11025_194))
(assert (= temp11025_195 #x0000000000000000))
(assert (= var1179826 temp11025_195))
(assert (= temp11025_197 var1179826))
(assert (= temp11025_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11025_197)))
(assert (= temp11025_196 temp11025_198))
(assert (= temp11025_199 #x0000000000000002))
(assert (= var1586025 temp11025_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp11025_200 #x0000000000000001))
(assert (= var1191993 temp11025_200))
(assert (= temp11025_201 #x0000000000000001))
(assert (= var2700303 temp11025_201))
(assert (= temp11025_202 #x0000000000000001))
(assert (= var2962447 temp11025_202))
(assert (= temp11025_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp11025_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11025_204 #x0000000000000001))
(assert (= var211058 temp11025_204))
(assert (= temp11025_205 #x0000000000000001))
(assert (= var211188 temp11025_205))
(assert (= var3879401 var211188))
(assert (= temp11025_206 #x0000000000000000))
(assert (= var3866802 temp11025_206))
(assert (= temp11025_207 #x0000000000000000))
(assert (= temp11025_208
   (ite (bvslt var3866802 temp11025_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp11025_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp11025_208)))
(assert (= var3879420 temp11025_209))
(assert (bvslt (ite (bvslt var3866802 temp11025_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11025_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp11025_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp11025_211 #x0000000000000000))
(assert (= var3879421 temp11025_211))
(assert (= temp11025_212 #x0000000000000001))
(assert (= var3867690 temp11025_212))
(assert (= temp11025_213 #x0000000000000000))
(assert (= temp11025_214
   (ite (bvslt var3867690 temp11025_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp11025_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp11025_214)))
(assert (= var3879423 temp11025_215))
(assert (bvslt (ite (bvslt var3867690 temp11025_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11025_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp11025_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp11025_217 #x0000000000000001))
(assert (= var3879424 temp11025_217))
(assert (= temp11025_218 #x0000000000000000))
(assert (= var4133117 temp11025_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp11025_219 #x0000000000000002))
(assert (= var4339331 temp11025_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11025_220 #x0000000000000000))
(assert (= var4404892 temp11025_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var4600208 var211201))
(assert (= var4862352 var211201))
(assert (= temp11025_221 #x0000000000000001))
(assert (= var212414
   (ite (= ARGNAME_groups_NAMEEND temp11025_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11025_222 #x0000000000000001))
(assert (= var212414 temp11025_222))
(assert (= temp11025_223 #x0000000000000002))
(assert (= var5191299 temp11025_223))
(assert (= var5191301 (bvsub ARGNAME_weight_NAMEEND_DIM var5191299)))
(assert (= var5256844 var5191299))
(assert (= var5256845 var5191301))
(assert (= temp11025_224 #x0000000000000001))
(assert (= var211058 temp11025_224))
(model-add temp11025_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp11025_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp11025_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp11025_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




