(declare-fun temp11008_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp11008_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp11008_3 () (_ BitVec 64))
(declare-fun temp11008_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp11008_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp11008_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp11008_7 () (_ BitVec 64))
(declare-fun temp11008_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11008_9 () (_ BitVec 64))
(declare-fun temp11008_10 () (_ BitVec 64))
(declare-fun temp11008_11 () (_ BitVec 64))
(declare-fun temp11008_12 () (_ BitVec 64))
(declare-fun temp11008_13 () (_ BitVec 64))
(declare-fun temp11008_14 () (_ BitVec 64))
(declare-fun temp11008_15 () (_ BitVec 64))
(declare-fun temp11008_16 () (_ BitVec 64))
(declare-fun temp11008_17 () (_ BitVec 64))
(declare-fun temp11008_18 () (_ BitVec 64))
(declare-fun temp11008_19 () (_ BitVec 64))
(declare-fun temp11008_20 () (_ BitVec 64))
(declare-fun temp11008_21 () (_ BitVec 64))
(declare-fun temp11008_22 () (_ BitVec 64))
(declare-fun temp11008_23 () (_ BitVec 64))
(declare-fun temp11008_24 () (_ BitVec 64))
(declare-fun temp11008_25 () (_ BitVec 64))
(declare-fun temp11008_26 () (_ BitVec 64))
(declare-fun temp11008_27 () (_ BitVec 64))
(declare-fun temp11008_28 () (_ BitVec 64))
(declare-fun temp11008_29 () (_ BitVec 64))
(declare-fun temp11008_30 () (_ BitVec 64))
(declare-fun temp11008_31 () (_ BitVec 64))
(declare-fun temp11008_32 () (_ BitVec 64))
(declare-fun temp11008_33 () (_ BitVec 64))
(declare-fun temp11008_34 () (_ BitVec 64))
(declare-fun temp11008_35 () (_ BitVec 64))
(declare-fun temp11008_36 () (_ BitVec 64))
(declare-fun temp11008_37 () (_ BitVec 64))
(declare-fun temp11008_38 () (_ BitVec 64))
(declare-fun temp11008_39 () (_ BitVec 64))
(declare-fun temp11008_40 () (_ BitVec 64))
(declare-fun temp11008_41 () (_ BitVec 64))
(declare-fun temp11008_42 () (_ BitVec 64))
(declare-fun temp11008_43 () (_ BitVec 64))
(declare-fun temp11008_44 () (_ BitVec 64))
(declare-fun temp11008_45 () (_ BitVec 64))
(declare-fun temp11008_46 () (_ BitVec 64))
(declare-fun temp11008_47 () (_ BitVec 64))
(declare-fun temp11008_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp11008_49 () (_ BitVec 64))
(declare-fun temp11008_50 () (_ BitVec 64))
(declare-fun temp11008_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11008_52 () (_ BitVec 64))
(declare-fun temp11008_53 () (_ BitVec 64))
(declare-fun temp11008_54 () (_ BitVec 64))
(declare-fun temp11008_55 () (_ BitVec 64))
(declare-fun temp11008_56 () (_ BitVec 64))
(declare-fun temp11008_57 () (_ BitVec 64))
(declare-fun temp11008_58 () (_ BitVec 64))
(declare-fun temp11008_59 () (_ BitVec 64))
(declare-fun temp11008_60 () (_ BitVec 64))
(declare-fun temp11008_61 () (_ BitVec 64))
(declare-fun temp11008_62 () (_ BitVec 64))
(declare-fun temp11008_63 () (_ BitVec 64))
(declare-fun temp11008_64 () (_ BitVec 64))
(declare-fun temp11008_65 () (_ BitVec 64))
(declare-fun temp11008_66 () (_ BitVec 64))
(declare-fun temp11008_67 () (_ BitVec 64))
(declare-fun temp11008_68 () (_ BitVec 64))
(declare-fun temp11008_69 () (_ BitVec 64))
(declare-fun temp11008_70 () (_ BitVec 64))
(declare-fun temp11008_71 () (_ BitVec 64))
(declare-fun temp11008_72 () (_ BitVec 64))
(declare-fun temp11008_73 () (_ BitVec 64))
(declare-fun temp11008_74 () (_ BitVec 64))
(declare-fun temp11008_75 () (_ BitVec 64))
(declare-fun temp11008_76 () (_ BitVec 64))
(declare-fun temp11008_77 () (_ BitVec 64))
(declare-fun temp11008_78 () (_ BitVec 64))
(declare-fun temp11008_79 () (_ BitVec 64))
(declare-fun temp11008_80 () (_ BitVec 64))
(declare-fun temp11008_81 () (_ BitVec 64))
(declare-fun temp11008_82 () (_ BitVec 64))
(declare-fun temp11008_83 () (_ BitVec 64))
(declare-fun temp11008_84 () (_ BitVec 64))
(declare-fun temp11008_85 () (_ BitVec 64))
(declare-fun temp11008_86 () (_ BitVec 64))
(declare-fun temp11008_87 () (_ BitVec 64))
(declare-fun temp11008_88 () (_ BitVec 64))
(declare-fun temp11008_89 () (_ BitVec 64))
(declare-fun temp11008_90 () (_ BitVec 64))
(declare-fun temp11008_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp11008_92 () (_ BitVec 64))
(declare-fun temp11008_93 () (_ BitVec 64))
(declare-fun temp11008_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11008_95 () (_ BitVec 64))
(declare-fun temp11008_96 () (_ BitVec 64))
(declare-fun temp11008_97 () (_ BitVec 64))
(declare-fun temp11008_98 () (_ BitVec 64))
(declare-fun temp11008_99 () (_ BitVec 64))
(declare-fun temp11008_100 () (_ BitVec 64))
(declare-fun temp11008_101 () (_ BitVec 64))
(declare-fun temp11008_102 () (_ BitVec 64))
(declare-fun temp11008_103 () (_ BitVec 64))
(declare-fun temp11008_104 () (_ BitVec 64))
(declare-fun temp11008_105 () (_ BitVec 64))
(declare-fun temp11008_106 () (_ BitVec 64))
(declare-fun temp11008_107 () (_ BitVec 64))
(declare-fun temp11008_108 () (_ BitVec 64))
(declare-fun temp11008_109 () (_ BitVec 64))
(declare-fun temp11008_110 () (_ BitVec 64))
(declare-fun temp11008_111 () (_ BitVec 64))
(declare-fun temp11008_112 () (_ BitVec 64))
(declare-fun temp11008_113 () (_ BitVec 64))
(declare-fun temp11008_114 () (_ BitVec 64))
(declare-fun temp11008_115 () (_ BitVec 64))
(declare-fun temp11008_116 () (_ BitVec 64))
(declare-fun temp11008_117 () (_ BitVec 64))
(declare-fun temp11008_118 () (_ BitVec 64))
(declare-fun temp11008_119 () (_ BitVec 64))
(declare-fun temp11008_120 () (_ BitVec 64))
(declare-fun temp11008_121 () (_ BitVec 64))
(declare-fun temp11008_122 () (_ BitVec 64))
(declare-fun temp11008_123 () (_ BitVec 64))
(declare-fun temp11008_124 () (_ BitVec 64))
(declare-fun temp11008_125 () (_ BitVec 64))
(declare-fun temp11008_126 () (_ BitVec 64))
(declare-fun temp11008_127 () (_ BitVec 64))
(declare-fun temp11008_128 () (_ BitVec 64))
(declare-fun temp11008_129 () (_ BitVec 64))
(declare-fun temp11008_130 () (_ BitVec 64))
(declare-fun temp11008_131 () (_ BitVec 64))
(declare-fun temp11008_132 () (_ BitVec 64))
(declare-fun temp11008_133 () (_ BitVec 64))
(declare-fun temp11008_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp11008_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp11008_136 () (_ BitVec 64))
(declare-fun temp11008_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp11008_138 () (_ BitVec 64))
(declare-fun temp11008_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11008_140 () (_ BitVec 64))
(declare-fun temp11008_141 () (_ BitVec 64))
(declare-fun temp11008_142 () (_ BitVec 64))
(declare-fun temp11008_143 () (_ BitVec 64))
(declare-fun temp11008_144 () (_ BitVec 64))
(declare-fun temp11008_145 () (_ BitVec 64))
(declare-fun temp11008_146 () (_ BitVec 64))
(declare-fun temp11008_147 () (_ BitVec 64))
(declare-fun temp11008_148 () (_ BitVec 64))
(declare-fun temp11008_149 () (_ BitVec 64))
(declare-fun temp11008_150 () (_ BitVec 64))
(declare-fun temp11008_151 () (_ BitVec 64))
(declare-fun temp11008_152 () (_ BitVec 64))
(declare-fun temp11008_153 () (_ BitVec 64))
(declare-fun temp11008_154 () (_ BitVec 64))
(declare-fun temp11008_155 () (_ BitVec 64))
(declare-fun temp11008_157 () (_ BitVec 64))
(declare-fun temp11008_158 () (_ BitVec 64))
(declare-fun temp11008_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp11008_159 () (_ BitVec 64))
(declare-fun temp11008_160 () (_ BitVec 64))
(declare-fun temp11008_162 () (_ BitVec 64))
(declare-fun temp11008_163 () (_ BitVec 64))
(declare-fun temp11008_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp11008_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp11008_165 () (_ BitVec 64))
(declare-fun temp11008_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp11008_167 () (_ BitVec 64))
(declare-fun temp11008_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp11008_169 () (_ BitVec 64))
(declare-fun temp11008_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11008_171 () (_ BitVec 64))
(declare-fun temp11008_172 () (_ BitVec 64))
(declare-fun temp11008_173 () (_ BitVec 64))
(declare-fun temp11008_174 () (_ BitVec 64))
(declare-fun temp11008_175 () (_ BitVec 64))
(declare-fun temp11008_176 () (_ BitVec 64))
(declare-fun temp11008_177 () (_ BitVec 64))
(declare-fun temp11008_178 () (_ BitVec 64))
(declare-fun temp11008_179 () (_ BitVec 64))
(declare-fun temp11008_180 () (_ BitVec 64))
(declare-fun temp11008_181 () (_ BitVec 64))
(declare-fun temp11008_182 () (_ BitVec 64))
(declare-fun temp11008_183 () (_ BitVec 64))
(declare-fun temp11008_184 () (_ BitVec 64))
(declare-fun temp11008_185 () (_ BitVec 64))
(declare-fun temp11008_186 () (_ BitVec 64))
(declare-fun temp11008_187 () (_ BitVec 64))
(declare-fun temp11008_188 () (_ BitVec 64))
(declare-fun temp11008_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp11008_190 () (_ BitVec 64))
(declare-fun temp11008_192 () (_ BitVec 64))
(declare-fun temp11008_193 () (_ BitVec 64))
(declare-fun temp11008_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp11008_194 () (_ BitVec 64))
(declare-fun temp11008_195 () (_ BitVec 64))
(declare-fun temp11008_197 () (_ BitVec 64))
(declare-fun temp11008_198 () (_ BitVec 64))
(declare-fun temp11008_196 () (_ BitVec 64))
(declare-fun temp11008_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp11008_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp11008_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp11008_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp11008_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp11008_204 () (_ BitVec 64))
(declare-fun temp11008_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp11008_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp11008_207 () (_ BitVec 64))
(declare-fun temp11008_208 () (_ BitVec 64))
(declare-fun temp11008_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp11008_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp11008_211 () (_ BitVec 64))
(declare-fun temp11008_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp11008_213 () (_ BitVec 64))
(declare-fun temp11008_214 () (_ BitVec 64))
(declare-fun temp11008_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp11008_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp11008_217 () (_ BitVec 64))
(declare-fun temp11008_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp11008_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp11008_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var4600208 () (_ BitVec 64))
(declare-fun var4862352 () (_ BitVec 64))
(declare-fun temp11008_221 () (_ BitVec 64))
(declare-fun var212414 () (_ BitVec 64))
(declare-fun temp11008_222 () (_ BitVec 64))
(declare-fun temp11008_223 () (_ BitVec 64))
(declare-fun var5191299 () (_ BitVec 64))
(declare-fun var5191301 () (_ BitVec 64))
(declare-fun var5256844 () (_ BitVec 64))
(declare-fun var5256845 () (_ BitVec 64))
(declare-fun temp11008_224 () (_ BitVec 64))
(assert (= temp11008_1 #x0000000000000001))
(assert (= var77203 temp11008_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp11008_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp11008_2)))
(assert (= temp11008_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp11008_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11008_4 #x0000000000000000))
(assert (= var210941 temp11008_4))
(assert (= temp11008_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp11008_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11008_6 #x0000000000000000))
(assert (= var210986 temp11008_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp11008_7 #x0000000000000000))
(assert (= temp11008_8 temp11008_7))
(assert (= temp11008_9 (select ARGNAME_padding_NAMEEND_VAL temp11008_8)))
(assert (= temp11008_10 #x0000000000000001))
(assert (= temp11008_11 temp11008_10))
(assert (= temp11008_12 (select ARGNAME_padding_NAMEEND_VAL temp11008_11)))
(assert (= temp11008_13 #x0000000000000002))
(assert (= temp11008_14 temp11008_13))
(assert (= temp11008_15 (select ARGNAME_padding_NAMEEND_VAL temp11008_14)))
(assert (= temp11008_16 #x0000000000000003))
(assert (= temp11008_17 temp11008_16))
(assert (= temp11008_18 (select ARGNAME_padding_NAMEEND_VAL temp11008_17)))
(assert (= temp11008_19 #x0000000000000004))
(assert (= temp11008_20 temp11008_19))
(assert (= temp11008_21 (select ARGNAME_padding_NAMEEND_VAL temp11008_20)))
(assert (= temp11008_22 #x0000000000000005))
(assert (= temp11008_23 temp11008_22))
(assert (= temp11008_24 (select ARGNAME_padding_NAMEEND_VAL temp11008_23)))
(assert (= temp11008_25 #x0000000000000000))
(assert (= temp11008_26 #x0000000000000000))
(assert (= temp11008_27 temp11008_26))
(assert (= temp11008_28 (select ARGNAME_padding_NAMEEND_VAL temp11008_27)))
(assert (= temp11008_29 #x0000000000000000))
(assert (= temp11008_30 #x0000000000000001))
(assert (= temp11008_31 temp11008_30))
(assert (= temp11008_32 (select ARGNAME_padding_NAMEEND_VAL temp11008_31)))
(assert (= temp11008_33 #x0000000000000000))
(assert (= temp11008_34 #x0000000000000002))
(assert (= temp11008_35 temp11008_34))
(assert (= temp11008_36 (select ARGNAME_padding_NAMEEND_VAL temp11008_35)))
(assert (= temp11008_37 #x0000000000000000))
(assert (= temp11008_38 #x0000000000000003))
(assert (= temp11008_39 temp11008_38))
(assert (= temp11008_40 (select ARGNAME_padding_NAMEEND_VAL temp11008_39)))
(assert (= temp11008_41 #x0000000000000000))
(assert (= temp11008_42 #x0000000000000004))
(assert (= temp11008_43 temp11008_42))
(assert (= temp11008_44 (select ARGNAME_padding_NAMEEND_VAL temp11008_43)))
(assert (= temp11008_45 #x0000000000000000))
(assert (= temp11008_46 #x0000000000000005))
(assert (= temp11008_47 temp11008_46))
(assert (= temp11008_48 (select ARGNAME_padding_NAMEEND_VAL temp11008_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp11008_28 temp11008_25)
             (bvslt temp11008_32 temp11008_29)
             (bvslt temp11008_36 temp11008_33)
             (bvslt temp11008_40 temp11008_37)
             (bvslt temp11008_44 temp11008_41)
             (bvslt temp11008_48 temp11008_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11008_49 #x0000000000000000))
(assert (= var1191714 temp11008_49))
(assert (= temp11008_50 #x0000000000000000))
(assert (= temp11008_51 temp11008_50))
(assert (= temp11008_52 (select ARGNAME_output_padding_NAMEEND_VAL temp11008_51)))
(assert (= temp11008_53 #x0000000000000001))
(assert (= temp11008_54 temp11008_53))
(assert (= temp11008_55 (select ARGNAME_output_padding_NAMEEND_VAL temp11008_54)))
(assert (= temp11008_56 #x0000000000000002))
(assert (= temp11008_57 temp11008_56))
(assert (= temp11008_58 (select ARGNAME_output_padding_NAMEEND_VAL temp11008_57)))
(assert (= temp11008_59 #x0000000000000003))
(assert (= temp11008_60 temp11008_59))
(assert (= temp11008_61 (select ARGNAME_output_padding_NAMEEND_VAL temp11008_60)))
(assert (= temp11008_62 #x0000000000000004))
(assert (= temp11008_63 temp11008_62))
(assert (= temp11008_64 (select ARGNAME_output_padding_NAMEEND_VAL temp11008_63)))
(assert (= temp11008_65 #x0000000000000005))
(assert (= temp11008_66 temp11008_65))
(assert (= temp11008_67 (select ARGNAME_output_padding_NAMEEND_VAL temp11008_66)))
(assert (= temp11008_68 #x0000000000000000))
(assert (= temp11008_69 #x0000000000000000))
(assert (= temp11008_70 temp11008_69))
(assert (= temp11008_71 (select ARGNAME_output_padding_NAMEEND_VAL temp11008_70)))
(assert (= temp11008_72 #x0000000000000000))
(assert (= temp11008_73 #x0000000000000001))
(assert (= temp11008_74 temp11008_73))
(assert (= temp11008_75 (select ARGNAME_output_padding_NAMEEND_VAL temp11008_74)))
(assert (= temp11008_76 #x0000000000000000))
(assert (= temp11008_77 #x0000000000000002))
(assert (= temp11008_78 temp11008_77))
(assert (= temp11008_79 (select ARGNAME_output_padding_NAMEEND_VAL temp11008_78)))
(assert (= temp11008_80 #x0000000000000000))
(assert (= temp11008_81 #x0000000000000003))
(assert (= temp11008_82 temp11008_81))
(assert (= temp11008_83 (select ARGNAME_output_padding_NAMEEND_VAL temp11008_82)))
(assert (= temp11008_84 #x0000000000000000))
(assert (= temp11008_85 #x0000000000000004))
(assert (= temp11008_86 temp11008_85))
(assert (= temp11008_87 (select ARGNAME_output_padding_NAMEEND_VAL temp11008_86)))
(assert (= temp11008_88 #x0000000000000000))
(assert (= temp11008_89 #x0000000000000005))
(assert (= temp11008_90 temp11008_89))
(assert (= temp11008_91 (select ARGNAME_output_padding_NAMEEND_VAL temp11008_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp11008_71 temp11008_68)
             (bvslt temp11008_75 temp11008_72)
             (bvslt temp11008_79 temp11008_76)
             (bvslt temp11008_83 temp11008_80)
             (bvslt temp11008_87 temp11008_84)
             (bvslt temp11008_91 temp11008_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11008_92 #x0000000000000000))
(assert (= var1191725 temp11008_92))
(assert (= temp11008_93 #x0000000000000000))
(assert (= temp11008_94 temp11008_93))
(assert (= temp11008_95 (select ARGNAME_stride_NAMEEND_VAL temp11008_94)))
(assert (= temp11008_96 #x0000000000000001))
(assert (= temp11008_97 temp11008_96))
(assert (= temp11008_98 (select ARGNAME_stride_NAMEEND_VAL temp11008_97)))
(assert (= temp11008_99 #x0000000000000002))
(assert (= temp11008_100 temp11008_99))
(assert (= temp11008_101 (select ARGNAME_stride_NAMEEND_VAL temp11008_100)))
(assert (= temp11008_102 #x0000000000000003))
(assert (= temp11008_103 temp11008_102))
(assert (= temp11008_104 (select ARGNAME_stride_NAMEEND_VAL temp11008_103)))
(assert (= temp11008_105 #x0000000000000004))
(assert (= temp11008_106 temp11008_105))
(assert (= temp11008_107 (select ARGNAME_stride_NAMEEND_VAL temp11008_106)))
(assert (= temp11008_108 #x0000000000000005))
(assert (= temp11008_109 temp11008_108))
(assert (= temp11008_110 (select ARGNAME_stride_NAMEEND_VAL temp11008_109)))
(assert (= temp11008_111 #x0000000000000000))
(assert (= temp11008_112 #x0000000000000000))
(assert (= temp11008_113 temp11008_112))
(assert (= temp11008_114 (select ARGNAME_stride_NAMEEND_VAL temp11008_113)))
(assert (= temp11008_115 #x0000000000000000))
(assert (= temp11008_116 #x0000000000000001))
(assert (= temp11008_117 temp11008_116))
(assert (= temp11008_118 (select ARGNAME_stride_NAMEEND_VAL temp11008_117)))
(assert (= temp11008_119 #x0000000000000000))
(assert (= temp11008_120 #x0000000000000002))
(assert (= temp11008_121 temp11008_120))
(assert (= temp11008_122 (select ARGNAME_stride_NAMEEND_VAL temp11008_121)))
(assert (= temp11008_123 #x0000000000000000))
(assert (= temp11008_124 #x0000000000000003))
(assert (= temp11008_125 temp11008_124))
(assert (= temp11008_126 (select ARGNAME_stride_NAMEEND_VAL temp11008_125)))
(assert (= temp11008_127 #x0000000000000000))
(assert (= temp11008_128 #x0000000000000004))
(assert (= temp11008_129 temp11008_128))
(assert (= temp11008_130 (select ARGNAME_stride_NAMEEND_VAL temp11008_129)))
(assert (= temp11008_131 #x0000000000000000))
(assert (= temp11008_132 #x0000000000000005))
(assert (= temp11008_133 temp11008_132))
(assert (= temp11008_134 (select ARGNAME_stride_NAMEEND_VAL temp11008_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp11008_114 temp11008_111)
             (bvsle temp11008_118 temp11008_115)
             (bvsle temp11008_122 temp11008_119)
             (bvsle temp11008_126 temp11008_123)
             (bvsle temp11008_130 temp11008_127)
             (bvsle temp11008_134 temp11008_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11008_135 #x0000000000000000))
(assert (= var1191735 temp11008_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11008_136 #x0000000000000001))
(assert (= var1191747 temp11008_136))
(assert (= temp11008_137 #x0000000000000000))
(assert (= var1179826 temp11008_137))
(assert (= temp11008_138 #x0000000000000000))
(assert (= temp11008_139 temp11008_138))
(assert (= temp11008_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11008_139)))
(assert (= temp11008_141 #x0000000000000001))
(assert (= temp11008_142 temp11008_141))
(assert (= temp11008_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11008_142)))
(assert (= temp11008_144 #x0000000000000002))
(assert (= temp11008_145 temp11008_144))
(assert (= temp11008_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11008_145)))
(assert (= temp11008_147 #x0000000000000003))
(assert (= temp11008_148 temp11008_147))
(assert (= temp11008_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11008_148)))
(assert (= temp11008_150 #x0000000000000004))
(assert (= temp11008_151 temp11008_150))
(assert (= temp11008_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11008_151)))
(assert (= temp11008_153 #x0000000000000005))
(assert (= temp11008_154 temp11008_153))
(assert (= temp11008_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11008_154)))
(assert (= temp11008_157 var1179826))
(assert (= temp11008_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11008_157)))
(assert (= temp11008_156 temp11008_158))
(assert (= var1191780
   (ite (bvslt temp11008_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11008_159 #x0000000000000000))
(assert (= var1191780 temp11008_159))
(assert (= temp11008_160 #x0000000000000000))
(assert (= var1179826 temp11008_160))
(assert (= temp11008_162 var1179826))
(assert (= temp11008_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11008_162)))
(assert (= temp11008_161 temp11008_163))
(assert (= var1191802 (bvsmod temp11008_161 ARGNAME_groups_NAMEEND)))
(assert (= temp11008_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp11008_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp11008_165 #x0000000000000001))
(assert (= var1191803 temp11008_165))
(assert (= temp11008_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp11008_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11008_167 #x0000000000000001))
(assert (= var1191823 temp11008_167))
(assert (= temp11008_168 #x0000000000000001))
(assert (= var1180714 temp11008_168))
(assert (= temp11008_169 #x0000000000000000))
(assert (= temp11008_170 temp11008_169))
(assert (= temp11008_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp11008_170)))
(assert (= temp11008_172 #x0000000000000001))
(assert (= temp11008_173 temp11008_172))
(assert (= temp11008_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp11008_173)))
(assert (= temp11008_175 #x0000000000000002))
(assert (= temp11008_176 temp11008_175))
(assert (= temp11008_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp11008_176)))
(assert (= temp11008_178 #x0000000000000003))
(assert (= temp11008_179 temp11008_178))
(assert (= temp11008_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp11008_179)))
(assert (= temp11008_181 #x0000000000000004))
(assert (= temp11008_182 temp11008_181))
(assert (= temp11008_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp11008_182)))
(assert (= temp11008_184 #x0000000000000005))
(assert (= temp11008_185 temp11008_184))
(assert (= temp11008_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp11008_185)))
(assert (= temp11008_187 #x0000000000000000))
(assert (= temp11008_188
   (ite (bvslt var1180714 temp11008_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp11008_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp11008_188)))
(assert (= var1191831 temp11008_189))
(assert (bvslt (ite (bvslt var1180714 temp11008_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11008_190 #x0000000000000001))
(assert (= var1180714 temp11008_190))
(assert (= temp11008_192 var1180714))
(assert (= temp11008_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11008_192)))
(assert (= temp11008_191 temp11008_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp11008_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp11008_194 #x0000000000000001))
(assert (= var1191836 temp11008_194))
(assert (= temp11008_195 #x0000000000000000))
(assert (= var1179826 temp11008_195))
(assert (= temp11008_197 var1179826))
(assert (= temp11008_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11008_197)))
(assert (= temp11008_196 temp11008_198))
(assert (= temp11008_199 #x0000000000000002))
(assert (= var1586025 temp11008_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp11008_200 #x0000000000000001))
(assert (= var1191993 temp11008_200))
(assert (= temp11008_201 #x0000000000000001))
(assert (= var2700303 temp11008_201))
(assert (= temp11008_202 #x0000000000000001))
(assert (= var2962447 temp11008_202))
(assert (= temp11008_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp11008_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11008_204 #x0000000000000001))
(assert (= var211058 temp11008_204))
(assert (= temp11008_205 #x0000000000000001))
(assert (= var211188 temp11008_205))
(assert (= var3879401 var211188))
(assert (= temp11008_206 #x0000000000000000))
(assert (= var3866802 temp11008_206))
(assert (= temp11008_207 #x0000000000000000))
(assert (= temp11008_208
   (ite (bvslt var3866802 temp11008_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp11008_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp11008_208)))
(assert (= var3879420 temp11008_209))
(assert (bvslt (ite (bvslt var3866802 temp11008_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11008_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp11008_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp11008_211 #x0000000000000000))
(assert (= var3879421 temp11008_211))
(assert (= temp11008_212 #x0000000000000001))
(assert (= var3867690 temp11008_212))
(assert (= temp11008_213 #x0000000000000000))
(assert (= temp11008_214
   (ite (bvslt var3867690 temp11008_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp11008_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp11008_214)))
(assert (= var3879423 temp11008_215))
(assert (bvslt (ite (bvslt var3867690 temp11008_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11008_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp11008_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp11008_217 #x0000000000000001))
(assert (= var3879424 temp11008_217))
(assert (= temp11008_218 #x0000000000000000))
(assert (= var4133117 temp11008_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp11008_219 #x0000000000000002))
(assert (= var4339331 temp11008_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11008_220 #x0000000000000000))
(assert (= var4404892 temp11008_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var4600208 var211201))
(assert (= var4862352 var211201))
(assert (= temp11008_221 #x0000000000000001))
(assert (= var212414
   (ite (= ARGNAME_groups_NAMEEND temp11008_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11008_222 #x0000000000000001))
(assert (= var212414 temp11008_222))
(assert (= temp11008_223 #x0000000000000002))
(assert (= var5191299 temp11008_223))
(assert (= var5191301 (bvsub ARGNAME_weight_NAMEEND_DIM var5191299)))
(assert (= var5256844 var5191299))
(assert (= var5256845 var5191301))
(assert (= temp11008_224 #x0000000000000001))
(assert (= var211058 temp11008_224))
(model-add temp11008_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp11008_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp11008_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp11008_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))



