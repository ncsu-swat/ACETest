(declare-fun temp10578_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10578_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10578_3 () (_ BitVec 64))
(declare-fun temp10578_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10578_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10578_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10578_7 () (_ BitVec 64))
(declare-fun temp10578_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10578_9 () (_ BitVec 64))
(declare-fun temp10578_10 () (_ BitVec 64))
(declare-fun temp10578_11 () (_ BitVec 64))
(declare-fun temp10578_12 () (_ BitVec 64))
(declare-fun temp10578_13 () (_ BitVec 64))
(declare-fun temp10578_14 () (_ BitVec 64))
(declare-fun temp10578_15 () (_ BitVec 64))
(declare-fun temp10578_16 () (_ BitVec 64))
(declare-fun temp10578_17 () (_ BitVec 64))
(declare-fun temp10578_18 () (_ BitVec 64))
(declare-fun temp10578_19 () (_ BitVec 64))
(declare-fun temp10578_20 () (_ BitVec 64))
(declare-fun temp10578_21 () (_ BitVec 64))
(declare-fun temp10578_22 () (_ BitVec 64))
(declare-fun temp10578_23 () (_ BitVec 64))
(declare-fun temp10578_24 () (_ BitVec 64))
(declare-fun temp10578_25 () (_ BitVec 64))
(declare-fun temp10578_26 () (_ BitVec 64))
(declare-fun temp10578_27 () (_ BitVec 64))
(declare-fun temp10578_28 () (_ BitVec 64))
(declare-fun temp10578_29 () (_ BitVec 64))
(declare-fun temp10578_30 () (_ BitVec 64))
(declare-fun temp10578_31 () (_ BitVec 64))
(declare-fun temp10578_32 () (_ BitVec 64))
(declare-fun temp10578_33 () (_ BitVec 64))
(declare-fun temp10578_34 () (_ BitVec 64))
(declare-fun temp10578_35 () (_ BitVec 64))
(declare-fun temp10578_36 () (_ BitVec 64))
(declare-fun temp10578_37 () (_ BitVec 64))
(declare-fun temp10578_38 () (_ BitVec 64))
(declare-fun temp10578_39 () (_ BitVec 64))
(declare-fun temp10578_40 () (_ BitVec 64))
(declare-fun temp10578_41 () (_ BitVec 64))
(declare-fun temp10578_42 () (_ BitVec 64))
(declare-fun temp10578_43 () (_ BitVec 64))
(declare-fun temp10578_44 () (_ BitVec 64))
(declare-fun temp10578_45 () (_ BitVec 64))
(declare-fun temp10578_46 () (_ BitVec 64))
(declare-fun temp10578_47 () (_ BitVec 64))
(declare-fun temp10578_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10578_49 () (_ BitVec 64))
(declare-fun temp10578_50 () (_ BitVec 64))
(declare-fun temp10578_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10578_52 () (_ BitVec 64))
(declare-fun temp10578_53 () (_ BitVec 64))
(declare-fun temp10578_54 () (_ BitVec 64))
(declare-fun temp10578_55 () (_ BitVec 64))
(declare-fun temp10578_56 () (_ BitVec 64))
(declare-fun temp10578_57 () (_ BitVec 64))
(declare-fun temp10578_58 () (_ BitVec 64))
(declare-fun temp10578_59 () (_ BitVec 64))
(declare-fun temp10578_60 () (_ BitVec 64))
(declare-fun temp10578_61 () (_ BitVec 64))
(declare-fun temp10578_62 () (_ BitVec 64))
(declare-fun temp10578_63 () (_ BitVec 64))
(declare-fun temp10578_64 () (_ BitVec 64))
(declare-fun temp10578_65 () (_ BitVec 64))
(declare-fun temp10578_66 () (_ BitVec 64))
(declare-fun temp10578_67 () (_ BitVec 64))
(declare-fun temp10578_68 () (_ BitVec 64))
(declare-fun temp10578_69 () (_ BitVec 64))
(declare-fun temp10578_70 () (_ BitVec 64))
(declare-fun temp10578_71 () (_ BitVec 64))
(declare-fun temp10578_72 () (_ BitVec 64))
(declare-fun temp10578_73 () (_ BitVec 64))
(declare-fun temp10578_74 () (_ BitVec 64))
(declare-fun temp10578_75 () (_ BitVec 64))
(declare-fun temp10578_76 () (_ BitVec 64))
(declare-fun temp10578_77 () (_ BitVec 64))
(declare-fun temp10578_78 () (_ BitVec 64))
(declare-fun temp10578_79 () (_ BitVec 64))
(declare-fun temp10578_80 () (_ BitVec 64))
(declare-fun temp10578_81 () (_ BitVec 64))
(declare-fun temp10578_82 () (_ BitVec 64))
(declare-fun temp10578_83 () (_ BitVec 64))
(declare-fun temp10578_84 () (_ BitVec 64))
(declare-fun temp10578_85 () (_ BitVec 64))
(declare-fun temp10578_86 () (_ BitVec 64))
(declare-fun temp10578_87 () (_ BitVec 64))
(declare-fun temp10578_88 () (_ BitVec 64))
(declare-fun temp10578_89 () (_ BitVec 64))
(declare-fun temp10578_90 () (_ BitVec 64))
(declare-fun temp10578_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10578_92 () (_ BitVec 64))
(declare-fun temp10578_93 () (_ BitVec 64))
(declare-fun temp10578_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10578_95 () (_ BitVec 64))
(declare-fun temp10578_96 () (_ BitVec 64))
(declare-fun temp10578_97 () (_ BitVec 64))
(declare-fun temp10578_98 () (_ BitVec 64))
(declare-fun temp10578_99 () (_ BitVec 64))
(declare-fun temp10578_100 () (_ BitVec 64))
(declare-fun temp10578_101 () (_ BitVec 64))
(declare-fun temp10578_102 () (_ BitVec 64))
(declare-fun temp10578_103 () (_ BitVec 64))
(declare-fun temp10578_104 () (_ BitVec 64))
(declare-fun temp10578_105 () (_ BitVec 64))
(declare-fun temp10578_106 () (_ BitVec 64))
(declare-fun temp10578_107 () (_ BitVec 64))
(declare-fun temp10578_108 () (_ BitVec 64))
(declare-fun temp10578_109 () (_ BitVec 64))
(declare-fun temp10578_110 () (_ BitVec 64))
(declare-fun temp10578_111 () (_ BitVec 64))
(declare-fun temp10578_112 () (_ BitVec 64))
(declare-fun temp10578_113 () (_ BitVec 64))
(declare-fun temp10578_114 () (_ BitVec 64))
(declare-fun temp10578_115 () (_ BitVec 64))
(declare-fun temp10578_116 () (_ BitVec 64))
(declare-fun temp10578_117 () (_ BitVec 64))
(declare-fun temp10578_118 () (_ BitVec 64))
(declare-fun temp10578_119 () (_ BitVec 64))
(declare-fun temp10578_120 () (_ BitVec 64))
(declare-fun temp10578_121 () (_ BitVec 64))
(declare-fun temp10578_122 () (_ BitVec 64))
(declare-fun temp10578_123 () (_ BitVec 64))
(declare-fun temp10578_124 () (_ BitVec 64))
(declare-fun temp10578_125 () (_ BitVec 64))
(declare-fun temp10578_126 () (_ BitVec 64))
(declare-fun temp10578_127 () (_ BitVec 64))
(declare-fun temp10578_128 () (_ BitVec 64))
(declare-fun temp10578_129 () (_ BitVec 64))
(declare-fun temp10578_130 () (_ BitVec 64))
(declare-fun temp10578_131 () (_ BitVec 64))
(declare-fun temp10578_132 () (_ BitVec 64))
(declare-fun temp10578_133 () (_ BitVec 64))
(declare-fun temp10578_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10578_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10578_136 () (_ BitVec 64))
(declare-fun temp10578_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10578_138 () (_ BitVec 64))
(declare-fun temp10578_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10578_140 () (_ BitVec 64))
(declare-fun temp10578_141 () (_ BitVec 64))
(declare-fun temp10578_142 () (_ BitVec 64))
(declare-fun temp10578_143 () (_ BitVec 64))
(declare-fun temp10578_144 () (_ BitVec 64))
(declare-fun temp10578_145 () (_ BitVec 64))
(declare-fun temp10578_146 () (_ BitVec 64))
(declare-fun temp10578_147 () (_ BitVec 64))
(declare-fun temp10578_148 () (_ BitVec 64))
(declare-fun temp10578_149 () (_ BitVec 64))
(declare-fun temp10578_150 () (_ BitVec 64))
(declare-fun temp10578_151 () (_ BitVec 64))
(declare-fun temp10578_152 () (_ BitVec 64))
(declare-fun temp10578_153 () (_ BitVec 64))
(declare-fun temp10578_154 () (_ BitVec 64))
(declare-fun temp10578_155 () (_ BitVec 64))
(declare-fun temp10578_157 () (_ BitVec 64))
(declare-fun temp10578_158 () (_ BitVec 64))
(declare-fun temp10578_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10578_159 () (_ BitVec 64))
(declare-fun temp10578_160 () (_ BitVec 64))
(declare-fun temp10578_162 () (_ BitVec 64))
(declare-fun temp10578_163 () (_ BitVec 64))
(declare-fun temp10578_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10578_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10578_165 () (_ BitVec 64))
(declare-fun temp10578_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10578_167 () (_ BitVec 64))
(declare-fun temp10578_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10578_169 () (_ BitVec 64))
(declare-fun temp10578_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10578_171 () (_ BitVec 64))
(declare-fun temp10578_172 () (_ BitVec 64))
(declare-fun temp10578_173 () (_ BitVec 64))
(declare-fun temp10578_174 () (_ BitVec 64))
(declare-fun temp10578_175 () (_ BitVec 64))
(declare-fun temp10578_176 () (_ BitVec 64))
(declare-fun temp10578_177 () (_ BitVec 64))
(declare-fun temp10578_178 () (_ BitVec 64))
(declare-fun temp10578_179 () (_ BitVec 64))
(declare-fun temp10578_180 () (_ BitVec 64))
(declare-fun temp10578_181 () (_ BitVec 64))
(declare-fun temp10578_182 () (_ BitVec 64))
(declare-fun temp10578_183 () (_ BitVec 64))
(declare-fun temp10578_184 () (_ BitVec 64))
(declare-fun temp10578_185 () (_ BitVec 64))
(declare-fun temp10578_186 () (_ BitVec 64))
(declare-fun temp10578_187 () (_ BitVec 64))
(declare-fun temp10578_188 () (_ BitVec 64))
(declare-fun temp10578_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10578_190 () (_ BitVec 64))
(declare-fun temp10578_192 () (_ BitVec 64))
(declare-fun temp10578_193 () (_ BitVec 64))
(declare-fun temp10578_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10578_194 () (_ BitVec 64))
(declare-fun temp10578_195 () (_ BitVec 64))
(declare-fun temp10578_197 () (_ BitVec 64))
(declare-fun temp10578_198 () (_ BitVec 64))
(declare-fun temp10578_196 () (_ BitVec 64))
(declare-fun temp10578_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10578_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10578_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10578_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10578_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10578_204 () (_ BitVec 64))
(declare-fun temp10578_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10578_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10578_207 () (_ BitVec 64))
(declare-fun temp10578_208 () (_ BitVec 64))
(declare-fun temp10578_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10578_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10578_211 () (_ BitVec 64))
(declare-fun temp10578_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10578_213 () (_ BitVec 64))
(declare-fun temp10578_214 () (_ BitVec 64))
(declare-fun temp10578_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10578_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10578_217 () (_ BitVec 64))
(declare-fun temp10578_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10578_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10578_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var5124496 () (_ BitVec 64))
(declare-fun var211494 () (_ BitVec 64))
(declare-fun temp10578_221 () (_ BitVec 64))
(declare-fun var211495 () (_ BitVec 64))
(declare-fun temp10578_223 () (_ BitVec 64))
(declare-fun temp10578_222 () (_ BitVec 64))
(declare-fun temp10578_224 () (_ BitVec 64))
(declare-fun var7081450 () (_ BitVec 64))
(declare-fun temp10578_226 () (_ BitVec 64))
(declare-fun temp10578_225 () (_ BitVec 64))
(declare-fun temp10578_227 () (_ BitVec 64))
(assert (= temp10578_1 #x0000000000000001))
(assert (= var77203 temp10578_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10578_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10578_2)))
(assert (= temp10578_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10578_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10578_4 #x0000000000000000))
(assert (= var210941 temp10578_4))
(assert (= temp10578_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10578_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10578_6 #x0000000000000000))
(assert (= var210986 temp10578_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10578_7 #x0000000000000000))
(assert (= temp10578_8 temp10578_7))
(assert (= temp10578_9 (select ARGNAME_padding_NAMEEND_VAL temp10578_8)))
(assert (= temp10578_10 #x0000000000000001))
(assert (= temp10578_11 temp10578_10))
(assert (= temp10578_12 (select ARGNAME_padding_NAMEEND_VAL temp10578_11)))
(assert (= temp10578_13 #x0000000000000002))
(assert (= temp10578_14 temp10578_13))
(assert (= temp10578_15 (select ARGNAME_padding_NAMEEND_VAL temp10578_14)))
(assert (= temp10578_16 #x0000000000000003))
(assert (= temp10578_17 temp10578_16))
(assert (= temp10578_18 (select ARGNAME_padding_NAMEEND_VAL temp10578_17)))
(assert (= temp10578_19 #x0000000000000004))
(assert (= temp10578_20 temp10578_19))
(assert (= temp10578_21 (select ARGNAME_padding_NAMEEND_VAL temp10578_20)))
(assert (= temp10578_22 #x0000000000000005))
(assert (= temp10578_23 temp10578_22))
(assert (= temp10578_24 (select ARGNAME_padding_NAMEEND_VAL temp10578_23)))
(assert (= temp10578_25 #x0000000000000000))
(assert (= temp10578_26 #x0000000000000000))
(assert (= temp10578_27 temp10578_26))
(assert (= temp10578_28 (select ARGNAME_padding_NAMEEND_VAL temp10578_27)))
(assert (= temp10578_29 #x0000000000000000))
(assert (= temp10578_30 #x0000000000000001))
(assert (= temp10578_31 temp10578_30))
(assert (= temp10578_32 (select ARGNAME_padding_NAMEEND_VAL temp10578_31)))
(assert (= temp10578_33 #x0000000000000000))
(assert (= temp10578_34 #x0000000000000002))
(assert (= temp10578_35 temp10578_34))
(assert (= temp10578_36 (select ARGNAME_padding_NAMEEND_VAL temp10578_35)))
(assert (= temp10578_37 #x0000000000000000))
(assert (= temp10578_38 #x0000000000000003))
(assert (= temp10578_39 temp10578_38))
(assert (= temp10578_40 (select ARGNAME_padding_NAMEEND_VAL temp10578_39)))
(assert (= temp10578_41 #x0000000000000000))
(assert (= temp10578_42 #x0000000000000004))
(assert (= temp10578_43 temp10578_42))
(assert (= temp10578_44 (select ARGNAME_padding_NAMEEND_VAL temp10578_43)))
(assert (= temp10578_45 #x0000000000000000))
(assert (= temp10578_46 #x0000000000000005))
(assert (= temp10578_47 temp10578_46))
(assert (= temp10578_48 (select ARGNAME_padding_NAMEEND_VAL temp10578_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10578_28 temp10578_25)
             (bvslt temp10578_32 temp10578_29)
             (bvslt temp10578_36 temp10578_33)
             (bvslt temp10578_40 temp10578_37)
             (bvslt temp10578_44 temp10578_41)
             (bvslt temp10578_48 temp10578_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10578_49 #x0000000000000000))
(assert (= var1191714 temp10578_49))
(assert (= temp10578_50 #x0000000000000000))
(assert (= temp10578_51 temp10578_50))
(assert (= temp10578_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10578_51)))
(assert (= temp10578_53 #x0000000000000001))
(assert (= temp10578_54 temp10578_53))
(assert (= temp10578_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10578_54)))
(assert (= temp10578_56 #x0000000000000002))
(assert (= temp10578_57 temp10578_56))
(assert (= temp10578_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10578_57)))
(assert (= temp10578_59 #x0000000000000003))
(assert (= temp10578_60 temp10578_59))
(assert (= temp10578_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10578_60)))
(assert (= temp10578_62 #x0000000000000004))
(assert (= temp10578_63 temp10578_62))
(assert (= temp10578_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10578_63)))
(assert (= temp10578_65 #x0000000000000005))
(assert (= temp10578_66 temp10578_65))
(assert (= temp10578_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10578_66)))
(assert (= temp10578_68 #x0000000000000000))
(assert (= temp10578_69 #x0000000000000000))
(assert (= temp10578_70 temp10578_69))
(assert (= temp10578_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10578_70)))
(assert (= temp10578_72 #x0000000000000000))
(assert (= temp10578_73 #x0000000000000001))
(assert (= temp10578_74 temp10578_73))
(assert (= temp10578_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10578_74)))
(assert (= temp10578_76 #x0000000000000000))
(assert (= temp10578_77 #x0000000000000002))
(assert (= temp10578_78 temp10578_77))
(assert (= temp10578_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10578_78)))
(assert (= temp10578_80 #x0000000000000000))
(assert (= temp10578_81 #x0000000000000003))
(assert (= temp10578_82 temp10578_81))
(assert (= temp10578_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10578_82)))
(assert (= temp10578_84 #x0000000000000000))
(assert (= temp10578_85 #x0000000000000004))
(assert (= temp10578_86 temp10578_85))
(assert (= temp10578_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10578_86)))
(assert (= temp10578_88 #x0000000000000000))
(assert (= temp10578_89 #x0000000000000005))
(assert (= temp10578_90 temp10578_89))
(assert (= temp10578_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10578_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10578_71 temp10578_68)
             (bvslt temp10578_75 temp10578_72)
             (bvslt temp10578_79 temp10578_76)
             (bvslt temp10578_83 temp10578_80)
             (bvslt temp10578_87 temp10578_84)
             (bvslt temp10578_91 temp10578_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10578_92 #x0000000000000000))
(assert (= var1191725 temp10578_92))
(assert (= temp10578_93 #x0000000000000000))
(assert (= temp10578_94 temp10578_93))
(assert (= temp10578_95 (select ARGNAME_stride_NAMEEND_VAL temp10578_94)))
(assert (= temp10578_96 #x0000000000000001))
(assert (= temp10578_97 temp10578_96))
(assert (= temp10578_98 (select ARGNAME_stride_NAMEEND_VAL temp10578_97)))
(assert (= temp10578_99 #x0000000000000002))
(assert (= temp10578_100 temp10578_99))
(assert (= temp10578_101 (select ARGNAME_stride_NAMEEND_VAL temp10578_100)))
(assert (= temp10578_102 #x0000000000000003))
(assert (= temp10578_103 temp10578_102))
(assert (= temp10578_104 (select ARGNAME_stride_NAMEEND_VAL temp10578_103)))
(assert (= temp10578_105 #x0000000000000004))
(assert (= temp10578_106 temp10578_105))
(assert (= temp10578_107 (select ARGNAME_stride_NAMEEND_VAL temp10578_106)))
(assert (= temp10578_108 #x0000000000000005))
(assert (= temp10578_109 temp10578_108))
(assert (= temp10578_110 (select ARGNAME_stride_NAMEEND_VAL temp10578_109)))
(assert (= temp10578_111 #x0000000000000000))
(assert (= temp10578_112 #x0000000000000000))
(assert (= temp10578_113 temp10578_112))
(assert (= temp10578_114 (select ARGNAME_stride_NAMEEND_VAL temp10578_113)))
(assert (= temp10578_115 #x0000000000000000))
(assert (= temp10578_116 #x0000000000000001))
(assert (= temp10578_117 temp10578_116))
(assert (= temp10578_118 (select ARGNAME_stride_NAMEEND_VAL temp10578_117)))
(assert (= temp10578_119 #x0000000000000000))
(assert (= temp10578_120 #x0000000000000002))
(assert (= temp10578_121 temp10578_120))
(assert (= temp10578_122 (select ARGNAME_stride_NAMEEND_VAL temp10578_121)))
(assert (= temp10578_123 #x0000000000000000))
(assert (= temp10578_124 #x0000000000000003))
(assert (= temp10578_125 temp10578_124))
(assert (= temp10578_126 (select ARGNAME_stride_NAMEEND_VAL temp10578_125)))
(assert (= temp10578_127 #x0000000000000000))
(assert (= temp10578_128 #x0000000000000004))
(assert (= temp10578_129 temp10578_128))
(assert (= temp10578_130 (select ARGNAME_stride_NAMEEND_VAL temp10578_129)))
(assert (= temp10578_131 #x0000000000000000))
(assert (= temp10578_132 #x0000000000000005))
(assert (= temp10578_133 temp10578_132))
(assert (= temp10578_134 (select ARGNAME_stride_NAMEEND_VAL temp10578_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10578_114 temp10578_111)
             (bvsle temp10578_118 temp10578_115)
             (bvsle temp10578_122 temp10578_119)
             (bvsle temp10578_126 temp10578_123)
             (bvsle temp10578_130 temp10578_127)
             (bvsle temp10578_134 temp10578_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10578_135 #x0000000000000000))
(assert (= var1191735 temp10578_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10578_136 #x0000000000000001))
(assert (= var1191747 temp10578_136))
(assert (= temp10578_137 #x0000000000000000))
(assert (= var1179826 temp10578_137))
(assert (= temp10578_138 #x0000000000000000))
(assert (= temp10578_139 temp10578_138))
(assert (= temp10578_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10578_139)))
(assert (= temp10578_141 #x0000000000000001))
(assert (= temp10578_142 temp10578_141))
(assert (= temp10578_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10578_142)))
(assert (= temp10578_144 #x0000000000000002))
(assert (= temp10578_145 temp10578_144))
(assert (= temp10578_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10578_145)))
(assert (= temp10578_147 #x0000000000000003))
(assert (= temp10578_148 temp10578_147))
(assert (= temp10578_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10578_148)))
(assert (= temp10578_150 #x0000000000000004))
(assert (= temp10578_151 temp10578_150))
(assert (= temp10578_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10578_151)))
(assert (= temp10578_153 #x0000000000000005))
(assert (= temp10578_154 temp10578_153))
(assert (= temp10578_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10578_154)))
(assert (= temp10578_157 var1179826))
(assert (= temp10578_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10578_157)))
(assert (= temp10578_156 temp10578_158))
(assert (= var1191780
   (ite (bvslt temp10578_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10578_159 #x0000000000000000))
(assert (= var1191780 temp10578_159))
(assert (= temp10578_160 #x0000000000000000))
(assert (= var1179826 temp10578_160))
(assert (= temp10578_162 var1179826))
(assert (= temp10578_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10578_162)))
(assert (= temp10578_161 temp10578_163))
(assert (= var1191802 (bvsmod temp10578_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10578_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10578_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10578_165 #x0000000000000001))
(assert (= var1191803 temp10578_165))
(assert (= temp10578_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10578_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10578_167 #x0000000000000001))
(assert (= var1191823 temp10578_167))
(assert (= temp10578_168 #x0000000000000001))
(assert (= var1180714 temp10578_168))
(assert (= temp10578_169 #x0000000000000000))
(assert (= temp10578_170 temp10578_169))
(assert (= temp10578_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10578_170)))
(assert (= temp10578_172 #x0000000000000001))
(assert (= temp10578_173 temp10578_172))
(assert (= temp10578_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10578_173)))
(assert (= temp10578_175 #x0000000000000002))
(assert (= temp10578_176 temp10578_175))
(assert (= temp10578_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10578_176)))
(assert (= temp10578_178 #x0000000000000003))
(assert (= temp10578_179 temp10578_178))
(assert (= temp10578_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10578_179)))
(assert (= temp10578_181 #x0000000000000004))
(assert (= temp10578_182 temp10578_181))
(assert (= temp10578_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10578_182)))
(assert (= temp10578_184 #x0000000000000005))
(assert (= temp10578_185 temp10578_184))
(assert (= temp10578_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10578_185)))
(assert (= temp10578_187 #x0000000000000000))
(assert (= temp10578_188
   (ite (bvslt var1180714 temp10578_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10578_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10578_188)))
(assert (= var1191831 temp10578_189))
(assert (bvslt (ite (bvslt var1180714 temp10578_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10578_190 #x0000000000000001))
(assert (= var1180714 temp10578_190))
(assert (= temp10578_192 var1180714))
(assert (= temp10578_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10578_192)))
(assert (= temp10578_191 temp10578_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10578_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10578_194 #x0000000000000001))
(assert (= var1191836 temp10578_194))
(assert (= temp10578_195 #x0000000000000000))
(assert (= var1179826 temp10578_195))
(assert (= temp10578_197 var1179826))
(assert (= temp10578_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10578_197)))
(assert (= temp10578_196 temp10578_198))
(assert (= temp10578_199 #x0000000000000002))
(assert (= var1586025 temp10578_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10578_200 #x0000000000000001))
(assert (= var1191993 temp10578_200))
(assert (= temp10578_201 #x0000000000000001))
(assert (= var2700303 temp10578_201))
(assert (= temp10578_202 #x0000000000000001))
(assert (= var2962447 temp10578_202))
(assert (= temp10578_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10578_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10578_204 #x0000000000000001))
(assert (= var211058 temp10578_204))
(assert (= temp10578_205 #x0000000000000001))
(assert (= var211188 temp10578_205))
(assert (= var3879401 var211188))
(assert (= temp10578_206 #x0000000000000000))
(assert (= var3866802 temp10578_206))
(assert (= temp10578_207 #x0000000000000000))
(assert (= temp10578_208
   (ite (bvslt var3866802 temp10578_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10578_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10578_208)))
(assert (= var3879420 temp10578_209))
(assert (bvslt (ite (bvslt var3866802 temp10578_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10578_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10578_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10578_211 #x0000000000000000))
(assert (= var3879421 temp10578_211))
(assert (= temp10578_212 #x0000000000000001))
(assert (= var3867690 temp10578_212))
(assert (= temp10578_213 #x0000000000000000))
(assert (= temp10578_214
   (ite (bvslt var3867690 temp10578_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10578_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10578_214)))
(assert (= var3879423 temp10578_215))
(assert (bvslt (ite (bvslt var3867690 temp10578_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10578_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10578_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10578_217 #x0000000000000001))
(assert (= var3879424 temp10578_217))
(assert (= temp10578_218 #x0000000000000000))
(assert (= var4133117 temp10578_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10578_219 #x0000000000000002))
(assert (= var4339331 temp10578_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10578_220 #x0000000000000000))
(assert (= var4404892 temp10578_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var5124496 var211201))
(assert (= var211494 var210913))
(assert (= temp10578_221 #x0000000000000000))
(assert (= var211495
   (ite (distinct var211494 temp10578_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10578_223 #x0000000000000001))
(assert (= temp10578_222 temp10578_223))
(assert (= temp10578_224 #x0000000000000001))
(assert (= var7081450 temp10578_224))
(assert (= temp10578_226 #xffffffffffffffff))
(assert (= temp10578_225 temp10578_226))
(assert (= temp10578_227 #x0000000000000001))
(assert (= var211058 temp10578_227))
(model-add temp10578_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10578_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10578_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10578_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






