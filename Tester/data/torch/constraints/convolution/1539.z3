(declare-fun temp10846_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10846_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10846_3 () (_ BitVec 64))
(declare-fun temp10846_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10846_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10846_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10846_7 () (_ BitVec 64))
(declare-fun temp10846_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10846_9 () (_ BitVec 64))
(declare-fun temp10846_10 () (_ BitVec 64))
(declare-fun temp10846_11 () (_ BitVec 64))
(declare-fun temp10846_12 () (_ BitVec 64))
(declare-fun temp10846_13 () (_ BitVec 64))
(declare-fun temp10846_14 () (_ BitVec 64))
(declare-fun temp10846_15 () (_ BitVec 64))
(declare-fun temp10846_16 () (_ BitVec 64))
(declare-fun temp10846_17 () (_ BitVec 64))
(declare-fun temp10846_18 () (_ BitVec 64))
(declare-fun temp10846_19 () (_ BitVec 64))
(declare-fun temp10846_20 () (_ BitVec 64))
(declare-fun temp10846_21 () (_ BitVec 64))
(declare-fun temp10846_22 () (_ BitVec 64))
(declare-fun temp10846_23 () (_ BitVec 64))
(declare-fun temp10846_24 () (_ BitVec 64))
(declare-fun temp10846_25 () (_ BitVec 64))
(declare-fun temp10846_26 () (_ BitVec 64))
(declare-fun temp10846_27 () (_ BitVec 64))
(declare-fun temp10846_28 () (_ BitVec 64))
(declare-fun temp10846_29 () (_ BitVec 64))
(declare-fun temp10846_30 () (_ BitVec 64))
(declare-fun temp10846_31 () (_ BitVec 64))
(declare-fun temp10846_32 () (_ BitVec 64))
(declare-fun temp10846_33 () (_ BitVec 64))
(declare-fun temp10846_34 () (_ BitVec 64))
(declare-fun temp10846_35 () (_ BitVec 64))
(declare-fun temp10846_36 () (_ BitVec 64))
(declare-fun temp10846_37 () (_ BitVec 64))
(declare-fun temp10846_38 () (_ BitVec 64))
(declare-fun temp10846_39 () (_ BitVec 64))
(declare-fun temp10846_40 () (_ BitVec 64))
(declare-fun temp10846_41 () (_ BitVec 64))
(declare-fun temp10846_42 () (_ BitVec 64))
(declare-fun temp10846_43 () (_ BitVec 64))
(declare-fun temp10846_44 () (_ BitVec 64))
(declare-fun temp10846_45 () (_ BitVec 64))
(declare-fun temp10846_46 () (_ BitVec 64))
(declare-fun temp10846_47 () (_ BitVec 64))
(declare-fun temp10846_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10846_49 () (_ BitVec 64))
(declare-fun temp10846_50 () (_ BitVec 64))
(declare-fun temp10846_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10846_52 () (_ BitVec 64))
(declare-fun temp10846_53 () (_ BitVec 64))
(declare-fun temp10846_54 () (_ BitVec 64))
(declare-fun temp10846_55 () (_ BitVec 64))
(declare-fun temp10846_56 () (_ BitVec 64))
(declare-fun temp10846_57 () (_ BitVec 64))
(declare-fun temp10846_58 () (_ BitVec 64))
(declare-fun temp10846_59 () (_ BitVec 64))
(declare-fun temp10846_60 () (_ BitVec 64))
(declare-fun temp10846_61 () (_ BitVec 64))
(declare-fun temp10846_62 () (_ BitVec 64))
(declare-fun temp10846_63 () (_ BitVec 64))
(declare-fun temp10846_64 () (_ BitVec 64))
(declare-fun temp10846_65 () (_ BitVec 64))
(declare-fun temp10846_66 () (_ BitVec 64))
(declare-fun temp10846_67 () (_ BitVec 64))
(declare-fun temp10846_68 () (_ BitVec 64))
(declare-fun temp10846_69 () (_ BitVec 64))
(declare-fun temp10846_70 () (_ BitVec 64))
(declare-fun temp10846_71 () (_ BitVec 64))
(declare-fun temp10846_72 () (_ BitVec 64))
(declare-fun temp10846_73 () (_ BitVec 64))
(declare-fun temp10846_74 () (_ BitVec 64))
(declare-fun temp10846_75 () (_ BitVec 64))
(declare-fun temp10846_76 () (_ BitVec 64))
(declare-fun temp10846_77 () (_ BitVec 64))
(declare-fun temp10846_78 () (_ BitVec 64))
(declare-fun temp10846_79 () (_ BitVec 64))
(declare-fun temp10846_80 () (_ BitVec 64))
(declare-fun temp10846_81 () (_ BitVec 64))
(declare-fun temp10846_82 () (_ BitVec 64))
(declare-fun temp10846_83 () (_ BitVec 64))
(declare-fun temp10846_84 () (_ BitVec 64))
(declare-fun temp10846_85 () (_ BitVec 64))
(declare-fun temp10846_86 () (_ BitVec 64))
(declare-fun temp10846_87 () (_ BitVec 64))
(declare-fun temp10846_88 () (_ BitVec 64))
(declare-fun temp10846_89 () (_ BitVec 64))
(declare-fun temp10846_90 () (_ BitVec 64))
(declare-fun temp10846_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10846_92 () (_ BitVec 64))
(declare-fun temp10846_93 () (_ BitVec 64))
(declare-fun temp10846_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10846_95 () (_ BitVec 64))
(declare-fun temp10846_96 () (_ BitVec 64))
(declare-fun temp10846_97 () (_ BitVec 64))
(declare-fun temp10846_98 () (_ BitVec 64))
(declare-fun temp10846_99 () (_ BitVec 64))
(declare-fun temp10846_100 () (_ BitVec 64))
(declare-fun temp10846_101 () (_ BitVec 64))
(declare-fun temp10846_102 () (_ BitVec 64))
(declare-fun temp10846_103 () (_ BitVec 64))
(declare-fun temp10846_104 () (_ BitVec 64))
(declare-fun temp10846_105 () (_ BitVec 64))
(declare-fun temp10846_106 () (_ BitVec 64))
(declare-fun temp10846_107 () (_ BitVec 64))
(declare-fun temp10846_108 () (_ BitVec 64))
(declare-fun temp10846_109 () (_ BitVec 64))
(declare-fun temp10846_110 () (_ BitVec 64))
(declare-fun temp10846_111 () (_ BitVec 64))
(declare-fun temp10846_112 () (_ BitVec 64))
(declare-fun temp10846_113 () (_ BitVec 64))
(declare-fun temp10846_114 () (_ BitVec 64))
(declare-fun temp10846_115 () (_ BitVec 64))
(declare-fun temp10846_116 () (_ BitVec 64))
(declare-fun temp10846_117 () (_ BitVec 64))
(declare-fun temp10846_118 () (_ BitVec 64))
(declare-fun temp10846_119 () (_ BitVec 64))
(declare-fun temp10846_120 () (_ BitVec 64))
(declare-fun temp10846_121 () (_ BitVec 64))
(declare-fun temp10846_122 () (_ BitVec 64))
(declare-fun temp10846_123 () (_ BitVec 64))
(declare-fun temp10846_124 () (_ BitVec 64))
(declare-fun temp10846_125 () (_ BitVec 64))
(declare-fun temp10846_126 () (_ BitVec 64))
(declare-fun temp10846_127 () (_ BitVec 64))
(declare-fun temp10846_128 () (_ BitVec 64))
(declare-fun temp10846_129 () (_ BitVec 64))
(declare-fun temp10846_130 () (_ BitVec 64))
(declare-fun temp10846_131 () (_ BitVec 64))
(declare-fun temp10846_132 () (_ BitVec 64))
(declare-fun temp10846_133 () (_ BitVec 64))
(declare-fun temp10846_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10846_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10846_136 () (_ BitVec 64))
(declare-fun temp10846_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10846_138 () (_ BitVec 64))
(declare-fun temp10846_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10846_140 () (_ BitVec 64))
(declare-fun temp10846_141 () (_ BitVec 64))
(declare-fun temp10846_142 () (_ BitVec 64))
(declare-fun temp10846_143 () (_ BitVec 64))
(declare-fun temp10846_144 () (_ BitVec 64))
(declare-fun temp10846_145 () (_ BitVec 64))
(declare-fun temp10846_146 () (_ BitVec 64))
(declare-fun temp10846_147 () (_ BitVec 64))
(declare-fun temp10846_148 () (_ BitVec 64))
(declare-fun temp10846_149 () (_ BitVec 64))
(declare-fun temp10846_150 () (_ BitVec 64))
(declare-fun temp10846_151 () (_ BitVec 64))
(declare-fun temp10846_152 () (_ BitVec 64))
(declare-fun temp10846_153 () (_ BitVec 64))
(declare-fun temp10846_154 () (_ BitVec 64))
(declare-fun temp10846_155 () (_ BitVec 64))
(declare-fun temp10846_157 () (_ BitVec 64))
(declare-fun temp10846_158 () (_ BitVec 64))
(declare-fun temp10846_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10846_159 () (_ BitVec 64))
(declare-fun temp10846_160 () (_ BitVec 64))
(declare-fun temp10846_162 () (_ BitVec 64))
(declare-fun temp10846_163 () (_ BitVec 64))
(declare-fun temp10846_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10846_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10846_165 () (_ BitVec 64))
(declare-fun temp10846_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10846_167 () (_ BitVec 64))
(declare-fun temp10846_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10846_169 () (_ BitVec 64))
(declare-fun temp10846_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10846_171 () (_ BitVec 64))
(declare-fun temp10846_172 () (_ BitVec 64))
(declare-fun temp10846_173 () (_ BitVec 64))
(declare-fun temp10846_174 () (_ BitVec 64))
(declare-fun temp10846_175 () (_ BitVec 64))
(declare-fun temp10846_176 () (_ BitVec 64))
(declare-fun temp10846_177 () (_ BitVec 64))
(declare-fun temp10846_178 () (_ BitVec 64))
(declare-fun temp10846_179 () (_ BitVec 64))
(declare-fun temp10846_180 () (_ BitVec 64))
(declare-fun temp10846_181 () (_ BitVec 64))
(declare-fun temp10846_182 () (_ BitVec 64))
(declare-fun temp10846_183 () (_ BitVec 64))
(declare-fun temp10846_184 () (_ BitVec 64))
(declare-fun temp10846_185 () (_ BitVec 64))
(declare-fun temp10846_186 () (_ BitVec 64))
(declare-fun temp10846_187 () (_ BitVec 64))
(declare-fun temp10846_188 () (_ BitVec 64))
(declare-fun temp10846_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10846_190 () (_ BitVec 64))
(declare-fun temp10846_192 () (_ BitVec 64))
(declare-fun temp10846_193 () (_ BitVec 64))
(declare-fun temp10846_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10846_194 () (_ BitVec 64))
(declare-fun temp10846_195 () (_ BitVec 64))
(declare-fun temp10846_197 () (_ BitVec 64))
(declare-fun temp10846_198 () (_ BitVec 64))
(declare-fun temp10846_196 () (_ BitVec 64))
(declare-fun temp10846_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10846_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10846_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10846_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10846_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10846_204 () (_ BitVec 64))
(declare-fun temp10846_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10846_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10846_207 () (_ BitVec 64))
(declare-fun temp10846_208 () (_ BitVec 64))
(declare-fun temp10846_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10846_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10846_211 () (_ BitVec 64))
(declare-fun temp10846_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10846_213 () (_ BitVec 64))
(declare-fun temp10846_214 () (_ BitVec 64))
(declare-fun temp10846_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10846_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10846_217 () (_ BitVec 64))
(declare-fun temp10846_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10846_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10846_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp10846_221 () (_ BitVec 64))
(assert (= temp10846_1 #x0000000000000001))
(assert (= var77203 temp10846_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10846_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10846_2)))
(assert (= temp10846_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10846_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10846_4 #x0000000000000000))
(assert (= var210941 temp10846_4))
(assert (= temp10846_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10846_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10846_6 #x0000000000000000))
(assert (= var210986 temp10846_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10846_7 #x0000000000000000))
(assert (= temp10846_8 temp10846_7))
(assert (= temp10846_9 (select ARGNAME_padding_NAMEEND_VAL temp10846_8)))
(assert (= temp10846_10 #x0000000000000001))
(assert (= temp10846_11 temp10846_10))
(assert (= temp10846_12 (select ARGNAME_padding_NAMEEND_VAL temp10846_11)))
(assert (= temp10846_13 #x0000000000000002))
(assert (= temp10846_14 temp10846_13))
(assert (= temp10846_15 (select ARGNAME_padding_NAMEEND_VAL temp10846_14)))
(assert (= temp10846_16 #x0000000000000003))
(assert (= temp10846_17 temp10846_16))
(assert (= temp10846_18 (select ARGNAME_padding_NAMEEND_VAL temp10846_17)))
(assert (= temp10846_19 #x0000000000000004))
(assert (= temp10846_20 temp10846_19))
(assert (= temp10846_21 (select ARGNAME_padding_NAMEEND_VAL temp10846_20)))
(assert (= temp10846_22 #x0000000000000005))
(assert (= temp10846_23 temp10846_22))
(assert (= temp10846_24 (select ARGNAME_padding_NAMEEND_VAL temp10846_23)))
(assert (= temp10846_25 #x0000000000000000))
(assert (= temp10846_26 #x0000000000000000))
(assert (= temp10846_27 temp10846_26))
(assert (= temp10846_28 (select ARGNAME_padding_NAMEEND_VAL temp10846_27)))
(assert (= temp10846_29 #x0000000000000000))
(assert (= temp10846_30 #x0000000000000001))
(assert (= temp10846_31 temp10846_30))
(assert (= temp10846_32 (select ARGNAME_padding_NAMEEND_VAL temp10846_31)))
(assert (= temp10846_33 #x0000000000000000))
(assert (= temp10846_34 #x0000000000000002))
(assert (= temp10846_35 temp10846_34))
(assert (= temp10846_36 (select ARGNAME_padding_NAMEEND_VAL temp10846_35)))
(assert (= temp10846_37 #x0000000000000000))
(assert (= temp10846_38 #x0000000000000003))
(assert (= temp10846_39 temp10846_38))
(assert (= temp10846_40 (select ARGNAME_padding_NAMEEND_VAL temp10846_39)))
(assert (= temp10846_41 #x0000000000000000))
(assert (= temp10846_42 #x0000000000000004))
(assert (= temp10846_43 temp10846_42))
(assert (= temp10846_44 (select ARGNAME_padding_NAMEEND_VAL temp10846_43)))
(assert (= temp10846_45 #x0000000000000000))
(assert (= temp10846_46 #x0000000000000005))
(assert (= temp10846_47 temp10846_46))
(assert (= temp10846_48 (select ARGNAME_padding_NAMEEND_VAL temp10846_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10846_28 temp10846_25)
             (bvslt temp10846_32 temp10846_29)
             (bvslt temp10846_36 temp10846_33)
             (bvslt temp10846_40 temp10846_37)
             (bvslt temp10846_44 temp10846_41)
             (bvslt temp10846_48 temp10846_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10846_49 #x0000000000000000))
(assert (= var1191714 temp10846_49))
(assert (= temp10846_50 #x0000000000000000))
(assert (= temp10846_51 temp10846_50))
(assert (= temp10846_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10846_51)))
(assert (= temp10846_53 #x0000000000000001))
(assert (= temp10846_54 temp10846_53))
(assert (= temp10846_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10846_54)))
(assert (= temp10846_56 #x0000000000000002))
(assert (= temp10846_57 temp10846_56))
(assert (= temp10846_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10846_57)))
(assert (= temp10846_59 #x0000000000000003))
(assert (= temp10846_60 temp10846_59))
(assert (= temp10846_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10846_60)))
(assert (= temp10846_62 #x0000000000000004))
(assert (= temp10846_63 temp10846_62))
(assert (= temp10846_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10846_63)))
(assert (= temp10846_65 #x0000000000000005))
(assert (= temp10846_66 temp10846_65))
(assert (= temp10846_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10846_66)))
(assert (= temp10846_68 #x0000000000000000))
(assert (= temp10846_69 #x0000000000000000))
(assert (= temp10846_70 temp10846_69))
(assert (= temp10846_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10846_70)))
(assert (= temp10846_72 #x0000000000000000))
(assert (= temp10846_73 #x0000000000000001))
(assert (= temp10846_74 temp10846_73))
(assert (= temp10846_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10846_74)))
(assert (= temp10846_76 #x0000000000000000))
(assert (= temp10846_77 #x0000000000000002))
(assert (= temp10846_78 temp10846_77))
(assert (= temp10846_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10846_78)))
(assert (= temp10846_80 #x0000000000000000))
(assert (= temp10846_81 #x0000000000000003))
(assert (= temp10846_82 temp10846_81))
(assert (= temp10846_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10846_82)))
(assert (= temp10846_84 #x0000000000000000))
(assert (= temp10846_85 #x0000000000000004))
(assert (= temp10846_86 temp10846_85))
(assert (= temp10846_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10846_86)))
(assert (= temp10846_88 #x0000000000000000))
(assert (= temp10846_89 #x0000000000000005))
(assert (= temp10846_90 temp10846_89))
(assert (= temp10846_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10846_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10846_71 temp10846_68)
             (bvslt temp10846_75 temp10846_72)
             (bvslt temp10846_79 temp10846_76)
             (bvslt temp10846_83 temp10846_80)
             (bvslt temp10846_87 temp10846_84)
             (bvslt temp10846_91 temp10846_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10846_92 #x0000000000000000))
(assert (= var1191725 temp10846_92))
(assert (= temp10846_93 #x0000000000000000))
(assert (= temp10846_94 temp10846_93))
(assert (= temp10846_95 (select ARGNAME_stride_NAMEEND_VAL temp10846_94)))
(assert (= temp10846_96 #x0000000000000001))
(assert (= temp10846_97 temp10846_96))
(assert (= temp10846_98 (select ARGNAME_stride_NAMEEND_VAL temp10846_97)))
(assert (= temp10846_99 #x0000000000000002))
(assert (= temp10846_100 temp10846_99))
(assert (= temp10846_101 (select ARGNAME_stride_NAMEEND_VAL temp10846_100)))
(assert (= temp10846_102 #x0000000000000003))
(assert (= temp10846_103 temp10846_102))
(assert (= temp10846_104 (select ARGNAME_stride_NAMEEND_VAL temp10846_103)))
(assert (= temp10846_105 #x0000000000000004))
(assert (= temp10846_106 temp10846_105))
(assert (= temp10846_107 (select ARGNAME_stride_NAMEEND_VAL temp10846_106)))
(assert (= temp10846_108 #x0000000000000005))
(assert (= temp10846_109 temp10846_108))
(assert (= temp10846_110 (select ARGNAME_stride_NAMEEND_VAL temp10846_109)))
(assert (= temp10846_111 #x0000000000000000))
(assert (= temp10846_112 #x0000000000000000))
(assert (= temp10846_113 temp10846_112))
(assert (= temp10846_114 (select ARGNAME_stride_NAMEEND_VAL temp10846_113)))
(assert (= temp10846_115 #x0000000000000000))
(assert (= temp10846_116 #x0000000000000001))
(assert (= temp10846_117 temp10846_116))
(assert (= temp10846_118 (select ARGNAME_stride_NAMEEND_VAL temp10846_117)))
(assert (= temp10846_119 #x0000000000000000))
(assert (= temp10846_120 #x0000000000000002))
(assert (= temp10846_121 temp10846_120))
(assert (= temp10846_122 (select ARGNAME_stride_NAMEEND_VAL temp10846_121)))
(assert (= temp10846_123 #x0000000000000000))
(assert (= temp10846_124 #x0000000000000003))
(assert (= temp10846_125 temp10846_124))
(assert (= temp10846_126 (select ARGNAME_stride_NAMEEND_VAL temp10846_125)))
(assert (= temp10846_127 #x0000000000000000))
(assert (= temp10846_128 #x0000000000000004))
(assert (= temp10846_129 temp10846_128))
(assert (= temp10846_130 (select ARGNAME_stride_NAMEEND_VAL temp10846_129)))
(assert (= temp10846_131 #x0000000000000000))
(assert (= temp10846_132 #x0000000000000005))
(assert (= temp10846_133 temp10846_132))
(assert (= temp10846_134 (select ARGNAME_stride_NAMEEND_VAL temp10846_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10846_114 temp10846_111)
             (bvsle temp10846_118 temp10846_115)
             (bvsle temp10846_122 temp10846_119)
             (bvsle temp10846_126 temp10846_123)
             (bvsle temp10846_130 temp10846_127)
             (bvsle temp10846_134 temp10846_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10846_135 #x0000000000000000))
(assert (= var1191735 temp10846_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10846_136 #x0000000000000001))
(assert (= var1191747 temp10846_136))
(assert (= temp10846_137 #x0000000000000000))
(assert (= var1179826 temp10846_137))
(assert (= temp10846_138 #x0000000000000000))
(assert (= temp10846_139 temp10846_138))
(assert (= temp10846_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10846_139)))
(assert (= temp10846_141 #x0000000000000001))
(assert (= temp10846_142 temp10846_141))
(assert (= temp10846_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10846_142)))
(assert (= temp10846_144 #x0000000000000002))
(assert (= temp10846_145 temp10846_144))
(assert (= temp10846_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10846_145)))
(assert (= temp10846_147 #x0000000000000003))
(assert (= temp10846_148 temp10846_147))
(assert (= temp10846_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10846_148)))
(assert (= temp10846_150 #x0000000000000004))
(assert (= temp10846_151 temp10846_150))
(assert (= temp10846_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10846_151)))
(assert (= temp10846_153 #x0000000000000005))
(assert (= temp10846_154 temp10846_153))
(assert (= temp10846_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10846_154)))
(assert (= temp10846_157 var1179826))
(assert (= temp10846_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10846_157)))
(assert (= temp10846_156 temp10846_158))
(assert (= var1191780
   (ite (bvslt temp10846_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10846_159 #x0000000000000000))
(assert (= var1191780 temp10846_159))
(assert (= temp10846_160 #x0000000000000000))
(assert (= var1179826 temp10846_160))
(assert (= temp10846_162 var1179826))
(assert (= temp10846_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10846_162)))
(assert (= temp10846_161 temp10846_163))
(assert (= var1191802 (bvsmod temp10846_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10846_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10846_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10846_165 #x0000000000000001))
(assert (= var1191803 temp10846_165))
(assert (= temp10846_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10846_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10846_167 #x0000000000000001))
(assert (= var1191823 temp10846_167))
(assert (= temp10846_168 #x0000000000000001))
(assert (= var1180714 temp10846_168))
(assert (= temp10846_169 #x0000000000000000))
(assert (= temp10846_170 temp10846_169))
(assert (= temp10846_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10846_170)))
(assert (= temp10846_172 #x0000000000000001))
(assert (= temp10846_173 temp10846_172))
(assert (= temp10846_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10846_173)))
(assert (= temp10846_175 #x0000000000000002))
(assert (= temp10846_176 temp10846_175))
(assert (= temp10846_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10846_176)))
(assert (= temp10846_178 #x0000000000000003))
(assert (= temp10846_179 temp10846_178))
(assert (= temp10846_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10846_179)))
(assert (= temp10846_181 #x0000000000000004))
(assert (= temp10846_182 temp10846_181))
(assert (= temp10846_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10846_182)))
(assert (= temp10846_184 #x0000000000000005))
(assert (= temp10846_185 temp10846_184))
(assert (= temp10846_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10846_185)))
(assert (= temp10846_187 #x0000000000000000))
(assert (= temp10846_188
   (ite (bvslt var1180714 temp10846_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10846_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10846_188)))
(assert (= var1191831 temp10846_189))
(assert (bvslt (ite (bvslt var1180714 temp10846_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10846_190 #x0000000000000001))
(assert (= var1180714 temp10846_190))
(assert (= temp10846_192 var1180714))
(assert (= temp10846_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10846_192)))
(assert (= temp10846_191 temp10846_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10846_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10846_194 #x0000000000000001))
(assert (= var1191836 temp10846_194))
(assert (= temp10846_195 #x0000000000000000))
(assert (= var1179826 temp10846_195))
(assert (= temp10846_197 var1179826))
(assert (= temp10846_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10846_197)))
(assert (= temp10846_196 temp10846_198))
(assert (= temp10846_199 #x0000000000000002))
(assert (= var1586025 temp10846_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10846_200 #x0000000000000001))
(assert (= var1191993 temp10846_200))
(assert (= temp10846_201 #x0000000000000001))
(assert (= var2700303 temp10846_201))
(assert (= temp10846_202 #x0000000000000001))
(assert (= var2962447 temp10846_202))
(assert (= temp10846_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10846_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10846_204 #x0000000000000001))
(assert (= var211058 temp10846_204))
(assert (= temp10846_205 #x0000000000000001))
(assert (= var211188 temp10846_205))
(assert (= var3879401 var211188))
(assert (= temp10846_206 #x0000000000000000))
(assert (= var3866802 temp10846_206))
(assert (= temp10846_207 #x0000000000000000))
(assert (= temp10846_208
   (ite (bvslt var3866802 temp10846_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10846_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10846_208)))
(assert (= var3879420 temp10846_209))
(assert (bvslt (ite (bvslt var3866802 temp10846_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10846_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10846_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10846_211 #x0000000000000000))
(assert (= var3879421 temp10846_211))
(assert (= temp10846_212 #x0000000000000001))
(assert (= var3867690 temp10846_212))
(assert (= temp10846_213 #x0000000000000000))
(assert (= temp10846_214
   (ite (bvslt var3867690 temp10846_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10846_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10846_214)))
(assert (= var3879423 temp10846_215))
(assert (bvslt (ite (bvslt var3867690 temp10846_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10846_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10846_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10846_217 #x0000000000000001))
(assert (= var3879424 temp10846_217))
(assert (= temp10846_218 #x0000000000000000))
(assert (= var4133117 temp10846_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10846_219 #x0000000000000002))
(assert (= var4339331 temp10846_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10846_220 #x0000000000000000))
(assert (= var4404892 temp10846_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp10846_221 #x0000000000000001))
(assert (= var211058 temp10846_221))
(model-add temp10846_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10846_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10846_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10846_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




