(declare-fun temp626_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp626_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp626_3 () (_ BitVec 64))
(declare-fun temp626_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp626_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp626_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp626_7 () (_ BitVec 64))
(declare-fun temp626_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp626_9 () (_ BitVec 64))
(declare-fun temp626_10 () (_ BitVec 64))
(declare-fun temp626_11 () (_ BitVec 64))
(declare-fun temp626_12 () (_ BitVec 64))
(declare-fun temp626_13 () (_ BitVec 64))
(declare-fun temp626_14 () (_ BitVec 64))
(declare-fun temp626_15 () (_ BitVec 64))
(declare-fun temp626_16 () (_ BitVec 64))
(declare-fun temp626_17 () (_ BitVec 64))
(declare-fun temp626_18 () (_ BitVec 64))
(declare-fun temp626_19 () (_ BitVec 64))
(declare-fun temp626_20 () (_ BitVec 64))
(declare-fun temp626_21 () (_ BitVec 64))
(declare-fun temp626_22 () (_ BitVec 64))
(declare-fun temp626_23 () (_ BitVec 64))
(declare-fun temp626_24 () (_ BitVec 64))
(declare-fun temp626_25 () (_ BitVec 64))
(declare-fun temp626_26 () (_ BitVec 64))
(declare-fun temp626_27 () (_ BitVec 64))
(declare-fun temp626_28 () (_ BitVec 64))
(declare-fun temp626_29 () (_ BitVec 64))
(declare-fun temp626_30 () (_ BitVec 64))
(declare-fun temp626_31 () (_ BitVec 64))
(declare-fun temp626_32 () (_ BitVec 64))
(declare-fun temp626_33 () (_ BitVec 64))
(declare-fun temp626_34 () (_ BitVec 64))
(declare-fun temp626_35 () (_ BitVec 64))
(declare-fun temp626_36 () (_ BitVec 64))
(declare-fun temp626_37 () (_ BitVec 64))
(declare-fun temp626_38 () (_ BitVec 64))
(declare-fun temp626_39 () (_ BitVec 64))
(declare-fun temp626_40 () (_ BitVec 64))
(declare-fun temp626_41 () (_ BitVec 64))
(declare-fun temp626_42 () (_ BitVec 64))
(declare-fun temp626_43 () (_ BitVec 64))
(declare-fun temp626_44 () (_ BitVec 64))
(declare-fun temp626_45 () (_ BitVec 64))
(declare-fun temp626_46 () (_ BitVec 64))
(declare-fun temp626_47 () (_ BitVec 64))
(declare-fun temp626_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp626_49 () (_ BitVec 64))
(declare-fun temp626_50 () (_ BitVec 64))
(declare-fun temp626_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp626_52 () (_ BitVec 64))
(declare-fun temp626_53 () (_ BitVec 64))
(declare-fun temp626_54 () (_ BitVec 64))
(declare-fun temp626_55 () (_ BitVec 64))
(declare-fun temp626_56 () (_ BitVec 64))
(declare-fun temp626_57 () (_ BitVec 64))
(declare-fun temp626_58 () (_ BitVec 64))
(declare-fun temp626_59 () (_ BitVec 64))
(declare-fun temp626_60 () (_ BitVec 64))
(declare-fun temp626_61 () (_ BitVec 64))
(declare-fun temp626_62 () (_ BitVec 64))
(declare-fun temp626_63 () (_ BitVec 64))
(declare-fun temp626_64 () (_ BitVec 64))
(declare-fun temp626_65 () (_ BitVec 64))
(declare-fun temp626_66 () (_ BitVec 64))
(declare-fun temp626_67 () (_ BitVec 64))
(declare-fun temp626_68 () (_ BitVec 64))
(declare-fun temp626_69 () (_ BitVec 64))
(declare-fun temp626_70 () (_ BitVec 64))
(declare-fun temp626_71 () (_ BitVec 64))
(declare-fun temp626_72 () (_ BitVec 64))
(declare-fun temp626_73 () (_ BitVec 64))
(declare-fun temp626_74 () (_ BitVec 64))
(declare-fun temp626_75 () (_ BitVec 64))
(declare-fun temp626_76 () (_ BitVec 64))
(declare-fun temp626_77 () (_ BitVec 64))
(declare-fun temp626_78 () (_ BitVec 64))
(declare-fun temp626_79 () (_ BitVec 64))
(declare-fun temp626_80 () (_ BitVec 64))
(declare-fun temp626_81 () (_ BitVec 64))
(declare-fun temp626_82 () (_ BitVec 64))
(declare-fun temp626_83 () (_ BitVec 64))
(declare-fun temp626_84 () (_ BitVec 64))
(declare-fun temp626_85 () (_ BitVec 64))
(declare-fun temp626_86 () (_ BitVec 64))
(declare-fun temp626_87 () (_ BitVec 64))
(declare-fun temp626_88 () (_ BitVec 64))
(declare-fun temp626_89 () (_ BitVec 64))
(declare-fun temp626_90 () (_ BitVec 64))
(declare-fun temp626_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp626_92 () (_ BitVec 64))
(declare-fun temp626_93 () (_ BitVec 64))
(declare-fun temp626_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp626_95 () (_ BitVec 64))
(declare-fun temp626_96 () (_ BitVec 64))
(declare-fun temp626_97 () (_ BitVec 64))
(declare-fun temp626_98 () (_ BitVec 64))
(declare-fun temp626_99 () (_ BitVec 64))
(declare-fun temp626_100 () (_ BitVec 64))
(declare-fun temp626_101 () (_ BitVec 64))
(declare-fun temp626_102 () (_ BitVec 64))
(declare-fun temp626_103 () (_ BitVec 64))
(declare-fun temp626_104 () (_ BitVec 64))
(declare-fun temp626_105 () (_ BitVec 64))
(declare-fun temp626_106 () (_ BitVec 64))
(declare-fun temp626_107 () (_ BitVec 64))
(declare-fun temp626_108 () (_ BitVec 64))
(declare-fun temp626_109 () (_ BitVec 64))
(declare-fun temp626_110 () (_ BitVec 64))
(declare-fun temp626_111 () (_ BitVec 64))
(declare-fun temp626_112 () (_ BitVec 64))
(declare-fun temp626_113 () (_ BitVec 64))
(declare-fun temp626_114 () (_ BitVec 64))
(declare-fun temp626_115 () (_ BitVec 64))
(declare-fun temp626_116 () (_ BitVec 64))
(declare-fun temp626_117 () (_ BitVec 64))
(declare-fun temp626_118 () (_ BitVec 64))
(declare-fun temp626_119 () (_ BitVec 64))
(declare-fun temp626_120 () (_ BitVec 64))
(declare-fun temp626_121 () (_ BitVec 64))
(declare-fun temp626_122 () (_ BitVec 64))
(declare-fun temp626_123 () (_ BitVec 64))
(declare-fun temp626_124 () (_ BitVec 64))
(declare-fun temp626_125 () (_ BitVec 64))
(declare-fun temp626_126 () (_ BitVec 64))
(declare-fun temp626_127 () (_ BitVec 64))
(declare-fun temp626_128 () (_ BitVec 64))
(declare-fun temp626_129 () (_ BitVec 64))
(declare-fun temp626_130 () (_ BitVec 64))
(declare-fun temp626_131 () (_ BitVec 64))
(declare-fun temp626_132 () (_ BitVec 64))
(declare-fun temp626_133 () (_ BitVec 64))
(declare-fun temp626_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp626_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp626_136 () (_ BitVec 64))
(declare-fun temp626_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp626_138 () (_ BitVec 64))
(declare-fun temp626_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp626_140 () (_ BitVec 64))
(declare-fun temp626_141 () (_ BitVec 64))
(declare-fun temp626_142 () (_ BitVec 64))
(declare-fun temp626_143 () (_ BitVec 64))
(declare-fun temp626_144 () (_ BitVec 64))
(declare-fun temp626_145 () (_ BitVec 64))
(declare-fun temp626_146 () (_ BitVec 64))
(declare-fun temp626_147 () (_ BitVec 64))
(declare-fun temp626_148 () (_ BitVec 64))
(declare-fun temp626_149 () (_ BitVec 64))
(declare-fun temp626_150 () (_ BitVec 64))
(declare-fun temp626_151 () (_ BitVec 64))
(declare-fun temp626_152 () (_ BitVec 64))
(declare-fun temp626_153 () (_ BitVec 64))
(declare-fun temp626_154 () (_ BitVec 64))
(declare-fun temp626_155 () (_ BitVec 64))
(declare-fun temp626_157 () (_ BitVec 64))
(declare-fun temp626_158 () (_ BitVec 64))
(declare-fun temp626_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp626_159 () (_ BitVec 64))
(declare-fun temp626_160 () (_ BitVec 64))
(declare-fun temp626_162 () (_ BitVec 64))
(declare-fun temp626_163 () (_ BitVec 64))
(declare-fun temp626_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp626_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp626_165 () (_ BitVec 64))
(declare-fun temp626_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp626_167 () (_ BitVec 64))
(declare-fun temp626_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp626_169 () (_ BitVec 64))
(declare-fun temp626_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp626_171 () (_ BitVec 64))
(declare-fun temp626_172 () (_ BitVec 64))
(declare-fun temp626_173 () (_ BitVec 64))
(declare-fun temp626_174 () (_ BitVec 64))
(declare-fun temp626_175 () (_ BitVec 64))
(declare-fun temp626_176 () (_ BitVec 64))
(declare-fun temp626_177 () (_ BitVec 64))
(declare-fun temp626_178 () (_ BitVec 64))
(declare-fun temp626_179 () (_ BitVec 64))
(declare-fun temp626_180 () (_ BitVec 64))
(declare-fun temp626_181 () (_ BitVec 64))
(declare-fun temp626_182 () (_ BitVec 64))
(declare-fun temp626_183 () (_ BitVec 64))
(declare-fun temp626_184 () (_ BitVec 64))
(declare-fun temp626_185 () (_ BitVec 64))
(declare-fun temp626_186 () (_ BitVec 64))
(declare-fun temp626_187 () (_ BitVec 64))
(declare-fun temp626_188 () (_ BitVec 64))
(declare-fun temp626_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp626_190 () (_ BitVec 64))
(declare-fun temp626_192 () (_ BitVec 64))
(declare-fun temp626_193 () (_ BitVec 64))
(declare-fun temp626_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp626_194 () (_ BitVec 64))
(declare-fun temp626_195 () (_ BitVec 64))
(declare-fun temp626_197 () (_ BitVec 64))
(declare-fun temp626_198 () (_ BitVec 64))
(declare-fun temp626_196 () (_ BitVec 64))
(declare-fun temp626_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp626_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp626_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp626_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp626_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp626_204 () (_ BitVec 64))
(declare-fun temp626_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp626_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp626_207 () (_ BitVec 64))
(declare-fun temp626_208 () (_ BitVec 64))
(declare-fun temp626_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp626_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp626_211 () (_ BitVec 64))
(declare-fun temp626_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp626_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp626_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4796816 () (_ BitVec 64))
(declare-fun var211388 () (_ BitVec 64))
(declare-fun temp626_215 () (_ BitVec 64))
(declare-fun var211389 () (_ BitVec 64))
(declare-fun var5717837 () (_ BitVec 64))
(declare-fun temp626_216 () (_ BitVec 64))
(assert (= temp626_1 #x0000000000000001))
(assert (= var77203 temp626_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp626_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp626_2)))
(assert (= temp626_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp626_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp626_4 #x0000000000000000))
(assert (= var210941 temp626_4))
(assert (= temp626_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp626_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp626_6 #x0000000000000000))
(assert (= var210986 temp626_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp626_7 #x0000000000000000))
(assert (= temp626_8 temp626_7))
(assert (= temp626_9 (select ARGNAME_padding_NAMEEND_VAL temp626_8)))
(assert (= temp626_10 #x0000000000000001))
(assert (= temp626_11 temp626_10))
(assert (= temp626_12 (select ARGNAME_padding_NAMEEND_VAL temp626_11)))
(assert (= temp626_13 #x0000000000000002))
(assert (= temp626_14 temp626_13))
(assert (= temp626_15 (select ARGNAME_padding_NAMEEND_VAL temp626_14)))
(assert (= temp626_16 #x0000000000000003))
(assert (= temp626_17 temp626_16))
(assert (= temp626_18 (select ARGNAME_padding_NAMEEND_VAL temp626_17)))
(assert (= temp626_19 #x0000000000000004))
(assert (= temp626_20 temp626_19))
(assert (= temp626_21 (select ARGNAME_padding_NAMEEND_VAL temp626_20)))
(assert (= temp626_22 #x0000000000000005))
(assert (= temp626_23 temp626_22))
(assert (= temp626_24 (select ARGNAME_padding_NAMEEND_VAL temp626_23)))
(assert (= temp626_25 #x0000000000000000))
(assert (= temp626_26 #x0000000000000000))
(assert (= temp626_27 temp626_26))
(assert (= temp626_28 (select ARGNAME_padding_NAMEEND_VAL temp626_27)))
(assert (= temp626_29 #x0000000000000000))
(assert (= temp626_30 #x0000000000000001))
(assert (= temp626_31 temp626_30))
(assert (= temp626_32 (select ARGNAME_padding_NAMEEND_VAL temp626_31)))
(assert (= temp626_33 #x0000000000000000))
(assert (= temp626_34 #x0000000000000002))
(assert (= temp626_35 temp626_34))
(assert (= temp626_36 (select ARGNAME_padding_NAMEEND_VAL temp626_35)))
(assert (= temp626_37 #x0000000000000000))
(assert (= temp626_38 #x0000000000000003))
(assert (= temp626_39 temp626_38))
(assert (= temp626_40 (select ARGNAME_padding_NAMEEND_VAL temp626_39)))
(assert (= temp626_41 #x0000000000000000))
(assert (= temp626_42 #x0000000000000004))
(assert (= temp626_43 temp626_42))
(assert (= temp626_44 (select ARGNAME_padding_NAMEEND_VAL temp626_43)))
(assert (= temp626_45 #x0000000000000000))
(assert (= temp626_46 #x0000000000000005))
(assert (= temp626_47 temp626_46))
(assert (= temp626_48 (select ARGNAME_padding_NAMEEND_VAL temp626_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp626_28 temp626_25)
             (bvslt temp626_32 temp626_29)
             (bvslt temp626_36 temp626_33)
             (bvslt temp626_40 temp626_37)
             (bvslt temp626_44 temp626_41)
             (bvslt temp626_48 temp626_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp626_49 #x0000000000000000))
(assert (= var1191714 temp626_49))
(assert (= temp626_50 #x0000000000000000))
(assert (= temp626_51 temp626_50))
(assert (= temp626_52 (select ARGNAME_output_padding_NAMEEND_VAL temp626_51)))
(assert (= temp626_53 #x0000000000000001))
(assert (= temp626_54 temp626_53))
(assert (= temp626_55 (select ARGNAME_output_padding_NAMEEND_VAL temp626_54)))
(assert (= temp626_56 #x0000000000000002))
(assert (= temp626_57 temp626_56))
(assert (= temp626_58 (select ARGNAME_output_padding_NAMEEND_VAL temp626_57)))
(assert (= temp626_59 #x0000000000000003))
(assert (= temp626_60 temp626_59))
(assert (= temp626_61 (select ARGNAME_output_padding_NAMEEND_VAL temp626_60)))
(assert (= temp626_62 #x0000000000000004))
(assert (= temp626_63 temp626_62))
(assert (= temp626_64 (select ARGNAME_output_padding_NAMEEND_VAL temp626_63)))
(assert (= temp626_65 #x0000000000000005))
(assert (= temp626_66 temp626_65))
(assert (= temp626_67 (select ARGNAME_output_padding_NAMEEND_VAL temp626_66)))
(assert (= temp626_68 #x0000000000000000))
(assert (= temp626_69 #x0000000000000000))
(assert (= temp626_70 temp626_69))
(assert (= temp626_71 (select ARGNAME_output_padding_NAMEEND_VAL temp626_70)))
(assert (= temp626_72 #x0000000000000000))
(assert (= temp626_73 #x0000000000000001))
(assert (= temp626_74 temp626_73))
(assert (= temp626_75 (select ARGNAME_output_padding_NAMEEND_VAL temp626_74)))
(assert (= temp626_76 #x0000000000000000))
(assert (= temp626_77 #x0000000000000002))
(assert (= temp626_78 temp626_77))
(assert (= temp626_79 (select ARGNAME_output_padding_NAMEEND_VAL temp626_78)))
(assert (= temp626_80 #x0000000000000000))
(assert (= temp626_81 #x0000000000000003))
(assert (= temp626_82 temp626_81))
(assert (= temp626_83 (select ARGNAME_output_padding_NAMEEND_VAL temp626_82)))
(assert (= temp626_84 #x0000000000000000))
(assert (= temp626_85 #x0000000000000004))
(assert (= temp626_86 temp626_85))
(assert (= temp626_87 (select ARGNAME_output_padding_NAMEEND_VAL temp626_86)))
(assert (= temp626_88 #x0000000000000000))
(assert (= temp626_89 #x0000000000000005))
(assert (= temp626_90 temp626_89))
(assert (= temp626_91 (select ARGNAME_output_padding_NAMEEND_VAL temp626_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp626_71 temp626_68)
             (bvslt temp626_75 temp626_72)
             (bvslt temp626_79 temp626_76)
             (bvslt temp626_83 temp626_80)
             (bvslt temp626_87 temp626_84)
             (bvslt temp626_91 temp626_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp626_92 #x0000000000000000))
(assert (= var1191725 temp626_92))
(assert (= temp626_93 #x0000000000000000))
(assert (= temp626_94 temp626_93))
(assert (= temp626_95 (select ARGNAME_stride_NAMEEND_VAL temp626_94)))
(assert (= temp626_96 #x0000000000000001))
(assert (= temp626_97 temp626_96))
(assert (= temp626_98 (select ARGNAME_stride_NAMEEND_VAL temp626_97)))
(assert (= temp626_99 #x0000000000000002))
(assert (= temp626_100 temp626_99))
(assert (= temp626_101 (select ARGNAME_stride_NAMEEND_VAL temp626_100)))
(assert (= temp626_102 #x0000000000000003))
(assert (= temp626_103 temp626_102))
(assert (= temp626_104 (select ARGNAME_stride_NAMEEND_VAL temp626_103)))
(assert (= temp626_105 #x0000000000000004))
(assert (= temp626_106 temp626_105))
(assert (= temp626_107 (select ARGNAME_stride_NAMEEND_VAL temp626_106)))
(assert (= temp626_108 #x0000000000000005))
(assert (= temp626_109 temp626_108))
(assert (= temp626_110 (select ARGNAME_stride_NAMEEND_VAL temp626_109)))
(assert (= temp626_111 #x0000000000000000))
(assert (= temp626_112 #x0000000000000000))
(assert (= temp626_113 temp626_112))
(assert (= temp626_114 (select ARGNAME_stride_NAMEEND_VAL temp626_113)))
(assert (= temp626_115 #x0000000000000000))
(assert (= temp626_116 #x0000000000000001))
(assert (= temp626_117 temp626_116))
(assert (= temp626_118 (select ARGNAME_stride_NAMEEND_VAL temp626_117)))
(assert (= temp626_119 #x0000000000000000))
(assert (= temp626_120 #x0000000000000002))
(assert (= temp626_121 temp626_120))
(assert (= temp626_122 (select ARGNAME_stride_NAMEEND_VAL temp626_121)))
(assert (= temp626_123 #x0000000000000000))
(assert (= temp626_124 #x0000000000000003))
(assert (= temp626_125 temp626_124))
(assert (= temp626_126 (select ARGNAME_stride_NAMEEND_VAL temp626_125)))
(assert (= temp626_127 #x0000000000000000))
(assert (= temp626_128 #x0000000000000004))
(assert (= temp626_129 temp626_128))
(assert (= temp626_130 (select ARGNAME_stride_NAMEEND_VAL temp626_129)))
(assert (= temp626_131 #x0000000000000000))
(assert (= temp626_132 #x0000000000000005))
(assert (= temp626_133 temp626_132))
(assert (= temp626_134 (select ARGNAME_stride_NAMEEND_VAL temp626_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp626_114 temp626_111)
             (bvsle temp626_118 temp626_115)
             (bvsle temp626_122 temp626_119)
             (bvsle temp626_126 temp626_123)
             (bvsle temp626_130 temp626_127)
             (bvsle temp626_134 temp626_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp626_135 #x0000000000000000))
(assert (= var1191735 temp626_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp626_136 #x0000000000000001))
(assert (= var1191747 temp626_136))
(assert (= temp626_137 #x0000000000000000))
(assert (= var1179826 temp626_137))
(assert (= temp626_138 #x0000000000000000))
(assert (= temp626_139 temp626_138))
(assert (= temp626_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp626_139)))
(assert (= temp626_141 #x0000000000000001))
(assert (= temp626_142 temp626_141))
(assert (= temp626_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp626_142)))
(assert (= temp626_144 #x0000000000000002))
(assert (= temp626_145 temp626_144))
(assert (= temp626_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp626_145)))
(assert (= temp626_147 #x0000000000000003))
(assert (= temp626_148 temp626_147))
(assert (= temp626_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp626_148)))
(assert (= temp626_150 #x0000000000000004))
(assert (= temp626_151 temp626_150))
(assert (= temp626_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp626_151)))
(assert (= temp626_153 #x0000000000000005))
(assert (= temp626_154 temp626_153))
(assert (= temp626_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp626_154)))
(assert (= temp626_157 var1179826))
(assert (= temp626_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp626_157)))
(assert (= temp626_156 temp626_158))
(assert (= var1191780
   (ite (bvslt temp626_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp626_159 #x0000000000000000))
(assert (= var1191780 temp626_159))
(assert (= temp626_160 #x0000000000000000))
(assert (= var1179826 temp626_160))
(assert (= temp626_162 var1179826))
(assert (= temp626_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp626_162)))
(assert (= temp626_161 temp626_163))
(assert (= var1191802 (bvsmod temp626_161 ARGNAME_groups_NAMEEND)))
(assert (= temp626_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp626_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp626_165 #x0000000000000001))
(assert (= var1191803 temp626_165))
(assert (= temp626_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp626_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp626_167 #x0000000000000001))
(assert (= var1191823 temp626_167))
(assert (= temp626_168 #x0000000000000001))
(assert (= var1180714 temp626_168))
(assert (= temp626_169 #x0000000000000000))
(assert (= temp626_170 temp626_169))
(assert (= temp626_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp626_170)))
(assert (= temp626_172 #x0000000000000001))
(assert (= temp626_173 temp626_172))
(assert (= temp626_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp626_173)))
(assert (= temp626_175 #x0000000000000002))
(assert (= temp626_176 temp626_175))
(assert (= temp626_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp626_176)))
(assert (= temp626_178 #x0000000000000003))
(assert (= temp626_179 temp626_178))
(assert (= temp626_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp626_179)))
(assert (= temp626_181 #x0000000000000004))
(assert (= temp626_182 temp626_181))
(assert (= temp626_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp626_182)))
(assert (= temp626_184 #x0000000000000005))
(assert (= temp626_185 temp626_184))
(assert (= temp626_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp626_185)))
(assert (= temp626_187 #x0000000000000000))
(assert (= temp626_188
   (ite (bvslt var1180714 temp626_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp626_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp626_188)))
(assert (= var1191831 temp626_189))
(assert (bvslt (ite (bvslt var1180714 temp626_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp626_190 #x0000000000000001))
(assert (= var1180714 temp626_190))
(assert (= temp626_192 var1180714))
(assert (= temp626_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp626_192)))
(assert (= temp626_191 temp626_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp626_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp626_194 #x0000000000000001))
(assert (= var1191836 temp626_194))
(assert (= temp626_195 #x0000000000000000))
(assert (= var1179826 temp626_195))
(assert (= temp626_197 var1179826))
(assert (= temp626_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp626_197)))
(assert (= temp626_196 temp626_198))
(assert (= temp626_199 #x0000000000000002))
(assert (= var1586025 temp626_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp626_200 #x0000000000000001))
(assert (= var1191993 temp626_200))
(assert (= temp626_201 #x0000000000000001))
(assert (= var2700303 temp626_201))
(assert (= temp626_202 #x0000000000000001))
(assert (= var2962447 temp626_202))
(assert (= temp626_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp626_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp626_204 #x0000000000000001))
(assert (= var211058 temp626_204))
(assert (= temp626_205 #x0000000000000001))
(assert (= var211188 temp626_205))
(assert (= var3879401 var211188))
(assert (= temp626_206 #x0000000000000000))
(assert (= var3866802 temp626_206))
(assert (= temp626_207 #x0000000000000000))
(assert (= temp626_208
   (ite (bvslt var3866802 temp626_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp626_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp626_208)))
(assert (= var3879420 temp626_209))
(assert (bvslt (ite (bvslt var3866802 temp626_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp626_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp626_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp626_211 #x0000000000000001))
(assert (= var3879421 temp626_211))
(assert (= temp626_212 #x0000000000000000))
(assert (= var4079423 temp626_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp626_213 #x0000000000000002))
(assert (= var4208259 temp626_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp626_214 #x0000000000000000))
(assert (= var4273820 temp626_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4796816 var211201))
(assert (= var211388 var210913))
(assert (= temp626_215 #x0000000000000000))
(assert (= var211389
   (ite (distinct var211388 temp626_215) #x0000000000000001 #x0000000000000000)))
(assert (= var5717837 var211389))
(assert (= temp626_216 #x0000000000000001))
(assert (= var211058 temp626_216))
(model-add temp626_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp626_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp626_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp626_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




