(declare-fun temp10402_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10402_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10402_3 () (_ BitVec 64))
(declare-fun temp10402_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10402_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10402_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10402_7 () (_ BitVec 64))
(declare-fun temp10402_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10402_9 () (_ BitVec 64))
(declare-fun temp10402_10 () (_ BitVec 64))
(declare-fun temp10402_11 () (_ BitVec 64))
(declare-fun temp10402_12 () (_ BitVec 64))
(declare-fun temp10402_13 () (_ BitVec 64))
(declare-fun temp10402_14 () (_ BitVec 64))
(declare-fun temp10402_15 () (_ BitVec 64))
(declare-fun temp10402_16 () (_ BitVec 64))
(declare-fun temp10402_17 () (_ BitVec 64))
(declare-fun temp10402_18 () (_ BitVec 64))
(declare-fun temp10402_19 () (_ BitVec 64))
(declare-fun temp10402_20 () (_ BitVec 64))
(declare-fun temp10402_21 () (_ BitVec 64))
(declare-fun temp10402_22 () (_ BitVec 64))
(declare-fun temp10402_23 () (_ BitVec 64))
(declare-fun temp10402_24 () (_ BitVec 64))
(declare-fun temp10402_25 () (_ BitVec 64))
(declare-fun temp10402_26 () (_ BitVec 64))
(declare-fun temp10402_27 () (_ BitVec 64))
(declare-fun temp10402_28 () (_ BitVec 64))
(declare-fun temp10402_29 () (_ BitVec 64))
(declare-fun temp10402_30 () (_ BitVec 64))
(declare-fun temp10402_31 () (_ BitVec 64))
(declare-fun temp10402_32 () (_ BitVec 64))
(declare-fun temp10402_33 () (_ BitVec 64))
(declare-fun temp10402_34 () (_ BitVec 64))
(declare-fun temp10402_35 () (_ BitVec 64))
(declare-fun temp10402_36 () (_ BitVec 64))
(declare-fun temp10402_37 () (_ BitVec 64))
(declare-fun temp10402_38 () (_ BitVec 64))
(declare-fun temp10402_39 () (_ BitVec 64))
(declare-fun temp10402_40 () (_ BitVec 64))
(declare-fun temp10402_41 () (_ BitVec 64))
(declare-fun temp10402_42 () (_ BitVec 64))
(declare-fun temp10402_43 () (_ BitVec 64))
(declare-fun temp10402_44 () (_ BitVec 64))
(declare-fun temp10402_45 () (_ BitVec 64))
(declare-fun temp10402_46 () (_ BitVec 64))
(declare-fun temp10402_47 () (_ BitVec 64))
(declare-fun temp10402_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10402_49 () (_ BitVec 64))
(declare-fun temp10402_50 () (_ BitVec 64))
(declare-fun temp10402_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10402_52 () (_ BitVec 64))
(declare-fun temp10402_53 () (_ BitVec 64))
(declare-fun temp10402_54 () (_ BitVec 64))
(declare-fun temp10402_55 () (_ BitVec 64))
(declare-fun temp10402_56 () (_ BitVec 64))
(declare-fun temp10402_57 () (_ BitVec 64))
(declare-fun temp10402_58 () (_ BitVec 64))
(declare-fun temp10402_59 () (_ BitVec 64))
(declare-fun temp10402_60 () (_ BitVec 64))
(declare-fun temp10402_61 () (_ BitVec 64))
(declare-fun temp10402_62 () (_ BitVec 64))
(declare-fun temp10402_63 () (_ BitVec 64))
(declare-fun temp10402_64 () (_ BitVec 64))
(declare-fun temp10402_65 () (_ BitVec 64))
(declare-fun temp10402_66 () (_ BitVec 64))
(declare-fun temp10402_67 () (_ BitVec 64))
(declare-fun temp10402_68 () (_ BitVec 64))
(declare-fun temp10402_69 () (_ BitVec 64))
(declare-fun temp10402_70 () (_ BitVec 64))
(declare-fun temp10402_71 () (_ BitVec 64))
(declare-fun temp10402_72 () (_ BitVec 64))
(declare-fun temp10402_73 () (_ BitVec 64))
(declare-fun temp10402_74 () (_ BitVec 64))
(declare-fun temp10402_75 () (_ BitVec 64))
(declare-fun temp10402_76 () (_ BitVec 64))
(declare-fun temp10402_77 () (_ BitVec 64))
(declare-fun temp10402_78 () (_ BitVec 64))
(declare-fun temp10402_79 () (_ BitVec 64))
(declare-fun temp10402_80 () (_ BitVec 64))
(declare-fun temp10402_81 () (_ BitVec 64))
(declare-fun temp10402_82 () (_ BitVec 64))
(declare-fun temp10402_83 () (_ BitVec 64))
(declare-fun temp10402_84 () (_ BitVec 64))
(declare-fun temp10402_85 () (_ BitVec 64))
(declare-fun temp10402_86 () (_ BitVec 64))
(declare-fun temp10402_87 () (_ BitVec 64))
(declare-fun temp10402_88 () (_ BitVec 64))
(declare-fun temp10402_89 () (_ BitVec 64))
(declare-fun temp10402_90 () (_ BitVec 64))
(declare-fun temp10402_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10402_92 () (_ BitVec 64))
(declare-fun temp10402_93 () (_ BitVec 64))
(declare-fun temp10402_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10402_95 () (_ BitVec 64))
(declare-fun temp10402_96 () (_ BitVec 64))
(declare-fun temp10402_97 () (_ BitVec 64))
(declare-fun temp10402_98 () (_ BitVec 64))
(declare-fun temp10402_99 () (_ BitVec 64))
(declare-fun temp10402_100 () (_ BitVec 64))
(declare-fun temp10402_101 () (_ BitVec 64))
(declare-fun temp10402_102 () (_ BitVec 64))
(declare-fun temp10402_103 () (_ BitVec 64))
(declare-fun temp10402_104 () (_ BitVec 64))
(declare-fun temp10402_105 () (_ BitVec 64))
(declare-fun temp10402_106 () (_ BitVec 64))
(declare-fun temp10402_107 () (_ BitVec 64))
(declare-fun temp10402_108 () (_ BitVec 64))
(declare-fun temp10402_109 () (_ BitVec 64))
(declare-fun temp10402_110 () (_ BitVec 64))
(declare-fun temp10402_111 () (_ BitVec 64))
(declare-fun temp10402_112 () (_ BitVec 64))
(declare-fun temp10402_113 () (_ BitVec 64))
(declare-fun temp10402_114 () (_ BitVec 64))
(declare-fun temp10402_115 () (_ BitVec 64))
(declare-fun temp10402_116 () (_ BitVec 64))
(declare-fun temp10402_117 () (_ BitVec 64))
(declare-fun temp10402_118 () (_ BitVec 64))
(declare-fun temp10402_119 () (_ BitVec 64))
(declare-fun temp10402_120 () (_ BitVec 64))
(declare-fun temp10402_121 () (_ BitVec 64))
(declare-fun temp10402_122 () (_ BitVec 64))
(declare-fun temp10402_123 () (_ BitVec 64))
(declare-fun temp10402_124 () (_ BitVec 64))
(declare-fun temp10402_125 () (_ BitVec 64))
(declare-fun temp10402_126 () (_ BitVec 64))
(declare-fun temp10402_127 () (_ BitVec 64))
(declare-fun temp10402_128 () (_ BitVec 64))
(declare-fun temp10402_129 () (_ BitVec 64))
(declare-fun temp10402_130 () (_ BitVec 64))
(declare-fun temp10402_131 () (_ BitVec 64))
(declare-fun temp10402_132 () (_ BitVec 64))
(declare-fun temp10402_133 () (_ BitVec 64))
(declare-fun temp10402_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10402_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10402_136 () (_ BitVec 64))
(declare-fun temp10402_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10402_138 () (_ BitVec 64))
(declare-fun temp10402_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10402_140 () (_ BitVec 64))
(declare-fun temp10402_141 () (_ BitVec 64))
(declare-fun temp10402_142 () (_ BitVec 64))
(declare-fun temp10402_143 () (_ BitVec 64))
(declare-fun temp10402_144 () (_ BitVec 64))
(declare-fun temp10402_145 () (_ BitVec 64))
(declare-fun temp10402_146 () (_ BitVec 64))
(declare-fun temp10402_147 () (_ BitVec 64))
(declare-fun temp10402_148 () (_ BitVec 64))
(declare-fun temp10402_149 () (_ BitVec 64))
(declare-fun temp10402_150 () (_ BitVec 64))
(declare-fun temp10402_151 () (_ BitVec 64))
(declare-fun temp10402_152 () (_ BitVec 64))
(declare-fun temp10402_153 () (_ BitVec 64))
(declare-fun temp10402_154 () (_ BitVec 64))
(declare-fun temp10402_155 () (_ BitVec 64))
(declare-fun temp10402_157 () (_ BitVec 64))
(declare-fun temp10402_158 () (_ BitVec 64))
(declare-fun temp10402_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10402_159 () (_ BitVec 64))
(declare-fun temp10402_160 () (_ BitVec 64))
(declare-fun temp10402_162 () (_ BitVec 64))
(declare-fun temp10402_163 () (_ BitVec 64))
(declare-fun temp10402_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10402_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10402_165 () (_ BitVec 64))
(declare-fun temp10402_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10402_167 () (_ BitVec 64))
(declare-fun temp10402_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10402_169 () (_ BitVec 64))
(declare-fun temp10402_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10402_171 () (_ BitVec 64))
(declare-fun temp10402_172 () (_ BitVec 64))
(declare-fun temp10402_173 () (_ BitVec 64))
(declare-fun temp10402_174 () (_ BitVec 64))
(declare-fun temp10402_175 () (_ BitVec 64))
(declare-fun temp10402_176 () (_ BitVec 64))
(declare-fun temp10402_177 () (_ BitVec 64))
(declare-fun temp10402_178 () (_ BitVec 64))
(declare-fun temp10402_179 () (_ BitVec 64))
(declare-fun temp10402_180 () (_ BitVec 64))
(declare-fun temp10402_181 () (_ BitVec 64))
(declare-fun temp10402_182 () (_ BitVec 64))
(declare-fun temp10402_183 () (_ BitVec 64))
(declare-fun temp10402_184 () (_ BitVec 64))
(declare-fun temp10402_185 () (_ BitVec 64))
(declare-fun temp10402_186 () (_ BitVec 64))
(declare-fun temp10402_187 () (_ BitVec 64))
(declare-fun temp10402_188 () (_ BitVec 64))
(declare-fun temp10402_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10402_190 () (_ BitVec 64))
(declare-fun temp10402_192 () (_ BitVec 64))
(declare-fun temp10402_193 () (_ BitVec 64))
(declare-fun temp10402_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10402_194 () (_ BitVec 64))
(declare-fun temp10402_195 () (_ BitVec 64))
(declare-fun temp10402_197 () (_ BitVec 64))
(declare-fun temp10402_198 () (_ BitVec 64))
(declare-fun temp10402_196 () (_ BitVec 64))
(declare-fun temp10402_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10402_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10402_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10402_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10402_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10402_204 () (_ BitVec 64))
(declare-fun temp10402_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10402_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10402_207 () (_ BitVec 64))
(declare-fun temp10402_208 () (_ BitVec 64))
(declare-fun temp10402_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10402_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10402_211 () (_ BitVec 64))
(declare-fun temp10402_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10402_213 () (_ BitVec 64))
(declare-fun temp10402_214 () (_ BitVec 64))
(declare-fun temp10402_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10402_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10402_217 () (_ BitVec 64))
(declare-fun temp10402_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10402_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10402_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp10402_221 () (_ BitVec 64))
(assert (= temp10402_1 #x0000000000000001))
(assert (= var77203 temp10402_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10402_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10402_2)))
(assert (= temp10402_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10402_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10402_4 #x0000000000000000))
(assert (= var210941 temp10402_4))
(assert (= temp10402_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10402_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10402_6 #x0000000000000000))
(assert (= var210986 temp10402_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10402_7 #x0000000000000000))
(assert (= temp10402_8 temp10402_7))
(assert (= temp10402_9 (select ARGNAME_padding_NAMEEND_VAL temp10402_8)))
(assert (= temp10402_10 #x0000000000000001))
(assert (= temp10402_11 temp10402_10))
(assert (= temp10402_12 (select ARGNAME_padding_NAMEEND_VAL temp10402_11)))
(assert (= temp10402_13 #x0000000000000002))
(assert (= temp10402_14 temp10402_13))
(assert (= temp10402_15 (select ARGNAME_padding_NAMEEND_VAL temp10402_14)))
(assert (= temp10402_16 #x0000000000000003))
(assert (= temp10402_17 temp10402_16))
(assert (= temp10402_18 (select ARGNAME_padding_NAMEEND_VAL temp10402_17)))
(assert (= temp10402_19 #x0000000000000004))
(assert (= temp10402_20 temp10402_19))
(assert (= temp10402_21 (select ARGNAME_padding_NAMEEND_VAL temp10402_20)))
(assert (= temp10402_22 #x0000000000000005))
(assert (= temp10402_23 temp10402_22))
(assert (= temp10402_24 (select ARGNAME_padding_NAMEEND_VAL temp10402_23)))
(assert (= temp10402_25 #x0000000000000000))
(assert (= temp10402_26 #x0000000000000000))
(assert (= temp10402_27 temp10402_26))
(assert (= temp10402_28 (select ARGNAME_padding_NAMEEND_VAL temp10402_27)))
(assert (= temp10402_29 #x0000000000000000))
(assert (= temp10402_30 #x0000000000000001))
(assert (= temp10402_31 temp10402_30))
(assert (= temp10402_32 (select ARGNAME_padding_NAMEEND_VAL temp10402_31)))
(assert (= temp10402_33 #x0000000000000000))
(assert (= temp10402_34 #x0000000000000002))
(assert (= temp10402_35 temp10402_34))
(assert (= temp10402_36 (select ARGNAME_padding_NAMEEND_VAL temp10402_35)))
(assert (= temp10402_37 #x0000000000000000))
(assert (= temp10402_38 #x0000000000000003))
(assert (= temp10402_39 temp10402_38))
(assert (= temp10402_40 (select ARGNAME_padding_NAMEEND_VAL temp10402_39)))
(assert (= temp10402_41 #x0000000000000000))
(assert (= temp10402_42 #x0000000000000004))
(assert (= temp10402_43 temp10402_42))
(assert (= temp10402_44 (select ARGNAME_padding_NAMEEND_VAL temp10402_43)))
(assert (= temp10402_45 #x0000000000000000))
(assert (= temp10402_46 #x0000000000000005))
(assert (= temp10402_47 temp10402_46))
(assert (= temp10402_48 (select ARGNAME_padding_NAMEEND_VAL temp10402_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10402_28 temp10402_25)
             (bvslt temp10402_32 temp10402_29)
             (bvslt temp10402_36 temp10402_33)
             (bvslt temp10402_40 temp10402_37)
             (bvslt temp10402_44 temp10402_41)
             (bvslt temp10402_48 temp10402_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10402_49 #x0000000000000000))
(assert (= var1191714 temp10402_49))
(assert (= temp10402_50 #x0000000000000000))
(assert (= temp10402_51 temp10402_50))
(assert (= temp10402_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10402_51)))
(assert (= temp10402_53 #x0000000000000001))
(assert (= temp10402_54 temp10402_53))
(assert (= temp10402_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10402_54)))
(assert (= temp10402_56 #x0000000000000002))
(assert (= temp10402_57 temp10402_56))
(assert (= temp10402_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10402_57)))
(assert (= temp10402_59 #x0000000000000003))
(assert (= temp10402_60 temp10402_59))
(assert (= temp10402_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10402_60)))
(assert (= temp10402_62 #x0000000000000004))
(assert (= temp10402_63 temp10402_62))
(assert (= temp10402_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10402_63)))
(assert (= temp10402_65 #x0000000000000005))
(assert (= temp10402_66 temp10402_65))
(assert (= temp10402_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10402_66)))
(assert (= temp10402_68 #x0000000000000000))
(assert (= temp10402_69 #x0000000000000000))
(assert (= temp10402_70 temp10402_69))
(assert (= temp10402_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10402_70)))
(assert (= temp10402_72 #x0000000000000000))
(assert (= temp10402_73 #x0000000000000001))
(assert (= temp10402_74 temp10402_73))
(assert (= temp10402_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10402_74)))
(assert (= temp10402_76 #x0000000000000000))
(assert (= temp10402_77 #x0000000000000002))
(assert (= temp10402_78 temp10402_77))
(assert (= temp10402_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10402_78)))
(assert (= temp10402_80 #x0000000000000000))
(assert (= temp10402_81 #x0000000000000003))
(assert (= temp10402_82 temp10402_81))
(assert (= temp10402_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10402_82)))
(assert (= temp10402_84 #x0000000000000000))
(assert (= temp10402_85 #x0000000000000004))
(assert (= temp10402_86 temp10402_85))
(assert (= temp10402_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10402_86)))
(assert (= temp10402_88 #x0000000000000000))
(assert (= temp10402_89 #x0000000000000005))
(assert (= temp10402_90 temp10402_89))
(assert (= temp10402_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10402_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10402_71 temp10402_68)
             (bvslt temp10402_75 temp10402_72)
             (bvslt temp10402_79 temp10402_76)
             (bvslt temp10402_83 temp10402_80)
             (bvslt temp10402_87 temp10402_84)
             (bvslt temp10402_91 temp10402_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10402_92 #x0000000000000000))
(assert (= var1191725 temp10402_92))
(assert (= temp10402_93 #x0000000000000000))
(assert (= temp10402_94 temp10402_93))
(assert (= temp10402_95 (select ARGNAME_stride_NAMEEND_VAL temp10402_94)))
(assert (= temp10402_96 #x0000000000000001))
(assert (= temp10402_97 temp10402_96))
(assert (= temp10402_98 (select ARGNAME_stride_NAMEEND_VAL temp10402_97)))
(assert (= temp10402_99 #x0000000000000002))
(assert (= temp10402_100 temp10402_99))
(assert (= temp10402_101 (select ARGNAME_stride_NAMEEND_VAL temp10402_100)))
(assert (= temp10402_102 #x0000000000000003))
(assert (= temp10402_103 temp10402_102))
(assert (= temp10402_104 (select ARGNAME_stride_NAMEEND_VAL temp10402_103)))
(assert (= temp10402_105 #x0000000000000004))
(assert (= temp10402_106 temp10402_105))
(assert (= temp10402_107 (select ARGNAME_stride_NAMEEND_VAL temp10402_106)))
(assert (= temp10402_108 #x0000000000000005))
(assert (= temp10402_109 temp10402_108))
(assert (= temp10402_110 (select ARGNAME_stride_NAMEEND_VAL temp10402_109)))
(assert (= temp10402_111 #x0000000000000000))
(assert (= temp10402_112 #x0000000000000000))
(assert (= temp10402_113 temp10402_112))
(assert (= temp10402_114 (select ARGNAME_stride_NAMEEND_VAL temp10402_113)))
(assert (= temp10402_115 #x0000000000000000))
(assert (= temp10402_116 #x0000000000000001))
(assert (= temp10402_117 temp10402_116))
(assert (= temp10402_118 (select ARGNAME_stride_NAMEEND_VAL temp10402_117)))
(assert (= temp10402_119 #x0000000000000000))
(assert (= temp10402_120 #x0000000000000002))
(assert (= temp10402_121 temp10402_120))
(assert (= temp10402_122 (select ARGNAME_stride_NAMEEND_VAL temp10402_121)))
(assert (= temp10402_123 #x0000000000000000))
(assert (= temp10402_124 #x0000000000000003))
(assert (= temp10402_125 temp10402_124))
(assert (= temp10402_126 (select ARGNAME_stride_NAMEEND_VAL temp10402_125)))
(assert (= temp10402_127 #x0000000000000000))
(assert (= temp10402_128 #x0000000000000004))
(assert (= temp10402_129 temp10402_128))
(assert (= temp10402_130 (select ARGNAME_stride_NAMEEND_VAL temp10402_129)))
(assert (= temp10402_131 #x0000000000000000))
(assert (= temp10402_132 #x0000000000000005))
(assert (= temp10402_133 temp10402_132))
(assert (= temp10402_134 (select ARGNAME_stride_NAMEEND_VAL temp10402_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10402_114 temp10402_111)
             (bvsle temp10402_118 temp10402_115)
             (bvsle temp10402_122 temp10402_119)
             (bvsle temp10402_126 temp10402_123)
             (bvsle temp10402_130 temp10402_127)
             (bvsle temp10402_134 temp10402_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10402_135 #x0000000000000000))
(assert (= var1191735 temp10402_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10402_136 #x0000000000000001))
(assert (= var1191747 temp10402_136))
(assert (= temp10402_137 #x0000000000000000))
(assert (= var1179826 temp10402_137))
(assert (= temp10402_138 #x0000000000000000))
(assert (= temp10402_139 temp10402_138))
(assert (= temp10402_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10402_139)))
(assert (= temp10402_141 #x0000000000000001))
(assert (= temp10402_142 temp10402_141))
(assert (= temp10402_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10402_142)))
(assert (= temp10402_144 #x0000000000000002))
(assert (= temp10402_145 temp10402_144))
(assert (= temp10402_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10402_145)))
(assert (= temp10402_147 #x0000000000000003))
(assert (= temp10402_148 temp10402_147))
(assert (= temp10402_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10402_148)))
(assert (= temp10402_150 #x0000000000000004))
(assert (= temp10402_151 temp10402_150))
(assert (= temp10402_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10402_151)))
(assert (= temp10402_153 #x0000000000000005))
(assert (= temp10402_154 temp10402_153))
(assert (= temp10402_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10402_154)))
(assert (= temp10402_157 var1179826))
(assert (= temp10402_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10402_157)))
(assert (= temp10402_156 temp10402_158))
(assert (= var1191780
   (ite (bvslt temp10402_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10402_159 #x0000000000000000))
(assert (= var1191780 temp10402_159))
(assert (= temp10402_160 #x0000000000000000))
(assert (= var1179826 temp10402_160))
(assert (= temp10402_162 var1179826))
(assert (= temp10402_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10402_162)))
(assert (= temp10402_161 temp10402_163))
(assert (= var1191802 (bvsmod temp10402_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10402_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10402_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10402_165 #x0000000000000001))
(assert (= var1191803 temp10402_165))
(assert (= temp10402_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10402_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10402_167 #x0000000000000001))
(assert (= var1191823 temp10402_167))
(assert (= temp10402_168 #x0000000000000001))
(assert (= var1180714 temp10402_168))
(assert (= temp10402_169 #x0000000000000000))
(assert (= temp10402_170 temp10402_169))
(assert (= temp10402_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10402_170)))
(assert (= temp10402_172 #x0000000000000001))
(assert (= temp10402_173 temp10402_172))
(assert (= temp10402_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10402_173)))
(assert (= temp10402_175 #x0000000000000002))
(assert (= temp10402_176 temp10402_175))
(assert (= temp10402_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10402_176)))
(assert (= temp10402_178 #x0000000000000003))
(assert (= temp10402_179 temp10402_178))
(assert (= temp10402_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10402_179)))
(assert (= temp10402_181 #x0000000000000004))
(assert (= temp10402_182 temp10402_181))
(assert (= temp10402_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10402_182)))
(assert (= temp10402_184 #x0000000000000005))
(assert (= temp10402_185 temp10402_184))
(assert (= temp10402_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10402_185)))
(assert (= temp10402_187 #x0000000000000000))
(assert (= temp10402_188
   (ite (bvslt var1180714 temp10402_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10402_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10402_188)))
(assert (= var1191831 temp10402_189))
(assert (bvslt (ite (bvslt var1180714 temp10402_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10402_190 #x0000000000000001))
(assert (= var1180714 temp10402_190))
(assert (= temp10402_192 var1180714))
(assert (= temp10402_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10402_192)))
(assert (= temp10402_191 temp10402_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10402_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10402_194 #x0000000000000001))
(assert (= var1191836 temp10402_194))
(assert (= temp10402_195 #x0000000000000000))
(assert (= var1179826 temp10402_195))
(assert (= temp10402_197 var1179826))
(assert (= temp10402_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10402_197)))
(assert (= temp10402_196 temp10402_198))
(assert (= temp10402_199 #x0000000000000002))
(assert (= var1586025 temp10402_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10402_200 #x0000000000000001))
(assert (= var1191993 temp10402_200))
(assert (= temp10402_201 #x0000000000000001))
(assert (= var2700303 temp10402_201))
(assert (= temp10402_202 #x0000000000000001))
(assert (= var2962447 temp10402_202))
(assert (= temp10402_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10402_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10402_204 #x0000000000000001))
(assert (= var211058 temp10402_204))
(assert (= temp10402_205 #x0000000000000001))
(assert (= var211188 temp10402_205))
(assert (= var3879401 var211188))
(assert (= temp10402_206 #x0000000000000000))
(assert (= var3866802 temp10402_206))
(assert (= temp10402_207 #x0000000000000000))
(assert (= temp10402_208
   (ite (bvslt var3866802 temp10402_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10402_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10402_208)))
(assert (= var3879420 temp10402_209))
(assert (bvslt (ite (bvslt var3866802 temp10402_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10402_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10402_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10402_211 #x0000000000000000))
(assert (= var3879421 temp10402_211))
(assert (= temp10402_212 #x0000000000000001))
(assert (= var3867690 temp10402_212))
(assert (= temp10402_213 #x0000000000000000))
(assert (= temp10402_214
   (ite (bvslt var3867690 temp10402_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10402_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10402_214)))
(assert (= var3879423 temp10402_215))
(assert (bvslt (ite (bvslt var3867690 temp10402_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10402_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10402_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10402_217 #x0000000000000001))
(assert (= var3879424 temp10402_217))
(assert (= temp10402_218 #x0000000000000000))
(assert (= var4079423 temp10402_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10402_219 #x0000000000000002))
(assert (= var4208259 temp10402_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10402_220 #x0000000000000000))
(assert (= var4273820 temp10402_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp10402_221 #x0000000000000001))
(assert (= var211058 temp10402_221))
(model-add temp10402_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10402_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10402_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10402_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






