(declare-fun temp708_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp708_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp708_3 () (_ BitVec 64))
(declare-fun temp708_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp708_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp708_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp708_7 () (_ BitVec 64))
(declare-fun temp708_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp708_9 () (_ BitVec 64))
(declare-fun temp708_10 () (_ BitVec 64))
(declare-fun temp708_11 () (_ BitVec 64))
(declare-fun temp708_12 () (_ BitVec 64))
(declare-fun temp708_13 () (_ BitVec 64))
(declare-fun temp708_14 () (_ BitVec 64))
(declare-fun temp708_15 () (_ BitVec 64))
(declare-fun temp708_16 () (_ BitVec 64))
(declare-fun temp708_17 () (_ BitVec 64))
(declare-fun temp708_18 () (_ BitVec 64))
(declare-fun temp708_19 () (_ BitVec 64))
(declare-fun temp708_20 () (_ BitVec 64))
(declare-fun temp708_21 () (_ BitVec 64))
(declare-fun temp708_22 () (_ BitVec 64))
(declare-fun temp708_23 () (_ BitVec 64))
(declare-fun temp708_24 () (_ BitVec 64))
(declare-fun temp708_25 () (_ BitVec 64))
(declare-fun temp708_26 () (_ BitVec 64))
(declare-fun temp708_27 () (_ BitVec 64))
(declare-fun temp708_28 () (_ BitVec 64))
(declare-fun temp708_29 () (_ BitVec 64))
(declare-fun temp708_30 () (_ BitVec 64))
(declare-fun temp708_31 () (_ BitVec 64))
(declare-fun temp708_32 () (_ BitVec 64))
(declare-fun temp708_33 () (_ BitVec 64))
(declare-fun temp708_34 () (_ BitVec 64))
(declare-fun temp708_35 () (_ BitVec 64))
(declare-fun temp708_36 () (_ BitVec 64))
(declare-fun temp708_37 () (_ BitVec 64))
(declare-fun temp708_38 () (_ BitVec 64))
(declare-fun temp708_39 () (_ BitVec 64))
(declare-fun temp708_40 () (_ BitVec 64))
(declare-fun temp708_41 () (_ BitVec 64))
(declare-fun temp708_42 () (_ BitVec 64))
(declare-fun temp708_43 () (_ BitVec 64))
(declare-fun temp708_44 () (_ BitVec 64))
(declare-fun temp708_45 () (_ BitVec 64))
(declare-fun temp708_46 () (_ BitVec 64))
(declare-fun temp708_47 () (_ BitVec 64))
(declare-fun temp708_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp708_49 () (_ BitVec 64))
(declare-fun temp708_50 () (_ BitVec 64))
(declare-fun temp708_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp708_52 () (_ BitVec 64))
(declare-fun temp708_53 () (_ BitVec 64))
(declare-fun temp708_54 () (_ BitVec 64))
(declare-fun temp708_55 () (_ BitVec 64))
(declare-fun temp708_56 () (_ BitVec 64))
(declare-fun temp708_57 () (_ BitVec 64))
(declare-fun temp708_58 () (_ BitVec 64))
(declare-fun temp708_59 () (_ BitVec 64))
(declare-fun temp708_60 () (_ BitVec 64))
(declare-fun temp708_61 () (_ BitVec 64))
(declare-fun temp708_62 () (_ BitVec 64))
(declare-fun temp708_63 () (_ BitVec 64))
(declare-fun temp708_64 () (_ BitVec 64))
(declare-fun temp708_65 () (_ BitVec 64))
(declare-fun temp708_66 () (_ BitVec 64))
(declare-fun temp708_67 () (_ BitVec 64))
(declare-fun temp708_68 () (_ BitVec 64))
(declare-fun temp708_69 () (_ BitVec 64))
(declare-fun temp708_70 () (_ BitVec 64))
(declare-fun temp708_71 () (_ BitVec 64))
(declare-fun temp708_72 () (_ BitVec 64))
(declare-fun temp708_73 () (_ BitVec 64))
(declare-fun temp708_74 () (_ BitVec 64))
(declare-fun temp708_75 () (_ BitVec 64))
(declare-fun temp708_76 () (_ BitVec 64))
(declare-fun temp708_77 () (_ BitVec 64))
(declare-fun temp708_78 () (_ BitVec 64))
(declare-fun temp708_79 () (_ BitVec 64))
(declare-fun temp708_80 () (_ BitVec 64))
(declare-fun temp708_81 () (_ BitVec 64))
(declare-fun temp708_82 () (_ BitVec 64))
(declare-fun temp708_83 () (_ BitVec 64))
(declare-fun temp708_84 () (_ BitVec 64))
(declare-fun temp708_85 () (_ BitVec 64))
(declare-fun temp708_86 () (_ BitVec 64))
(declare-fun temp708_87 () (_ BitVec 64))
(declare-fun temp708_88 () (_ BitVec 64))
(declare-fun temp708_89 () (_ BitVec 64))
(declare-fun temp708_90 () (_ BitVec 64))
(declare-fun temp708_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp708_92 () (_ BitVec 64))
(declare-fun temp708_93 () (_ BitVec 64))
(declare-fun temp708_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp708_95 () (_ BitVec 64))
(declare-fun temp708_96 () (_ BitVec 64))
(declare-fun temp708_97 () (_ BitVec 64))
(declare-fun temp708_98 () (_ BitVec 64))
(declare-fun temp708_99 () (_ BitVec 64))
(declare-fun temp708_100 () (_ BitVec 64))
(declare-fun temp708_101 () (_ BitVec 64))
(declare-fun temp708_102 () (_ BitVec 64))
(declare-fun temp708_103 () (_ BitVec 64))
(declare-fun temp708_104 () (_ BitVec 64))
(declare-fun temp708_105 () (_ BitVec 64))
(declare-fun temp708_106 () (_ BitVec 64))
(declare-fun temp708_107 () (_ BitVec 64))
(declare-fun temp708_108 () (_ BitVec 64))
(declare-fun temp708_109 () (_ BitVec 64))
(declare-fun temp708_110 () (_ BitVec 64))
(declare-fun temp708_111 () (_ BitVec 64))
(declare-fun temp708_112 () (_ BitVec 64))
(declare-fun temp708_113 () (_ BitVec 64))
(declare-fun temp708_114 () (_ BitVec 64))
(declare-fun temp708_115 () (_ BitVec 64))
(declare-fun temp708_116 () (_ BitVec 64))
(declare-fun temp708_117 () (_ BitVec 64))
(declare-fun temp708_118 () (_ BitVec 64))
(declare-fun temp708_119 () (_ BitVec 64))
(declare-fun temp708_120 () (_ BitVec 64))
(declare-fun temp708_121 () (_ BitVec 64))
(declare-fun temp708_122 () (_ BitVec 64))
(declare-fun temp708_123 () (_ BitVec 64))
(declare-fun temp708_124 () (_ BitVec 64))
(declare-fun temp708_125 () (_ BitVec 64))
(declare-fun temp708_126 () (_ BitVec 64))
(declare-fun temp708_127 () (_ BitVec 64))
(declare-fun temp708_128 () (_ BitVec 64))
(declare-fun temp708_129 () (_ BitVec 64))
(declare-fun temp708_130 () (_ BitVec 64))
(declare-fun temp708_131 () (_ BitVec 64))
(declare-fun temp708_132 () (_ BitVec 64))
(declare-fun temp708_133 () (_ BitVec 64))
(declare-fun temp708_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp708_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp708_136 () (_ BitVec 64))
(declare-fun temp708_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp708_138 () (_ BitVec 64))
(declare-fun temp708_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp708_140 () (_ BitVec 64))
(declare-fun temp708_141 () (_ BitVec 64))
(declare-fun temp708_142 () (_ BitVec 64))
(declare-fun temp708_143 () (_ BitVec 64))
(declare-fun temp708_144 () (_ BitVec 64))
(declare-fun temp708_145 () (_ BitVec 64))
(declare-fun temp708_146 () (_ BitVec 64))
(declare-fun temp708_147 () (_ BitVec 64))
(declare-fun temp708_148 () (_ BitVec 64))
(declare-fun temp708_149 () (_ BitVec 64))
(declare-fun temp708_150 () (_ BitVec 64))
(declare-fun temp708_151 () (_ BitVec 64))
(declare-fun temp708_152 () (_ BitVec 64))
(declare-fun temp708_153 () (_ BitVec 64))
(declare-fun temp708_154 () (_ BitVec 64))
(declare-fun temp708_155 () (_ BitVec 64))
(declare-fun temp708_157 () (_ BitVec 64))
(declare-fun temp708_158 () (_ BitVec 64))
(declare-fun temp708_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp708_159 () (_ BitVec 64))
(declare-fun temp708_160 () (_ BitVec 64))
(declare-fun temp708_162 () (_ BitVec 64))
(declare-fun temp708_163 () (_ BitVec 64))
(declare-fun temp708_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp708_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp708_165 () (_ BitVec 64))
(declare-fun temp708_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp708_167 () (_ BitVec 64))
(declare-fun temp708_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp708_169 () (_ BitVec 64))
(declare-fun temp708_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp708_171 () (_ BitVec 64))
(declare-fun temp708_172 () (_ BitVec 64))
(declare-fun temp708_173 () (_ BitVec 64))
(declare-fun temp708_174 () (_ BitVec 64))
(declare-fun temp708_175 () (_ BitVec 64))
(declare-fun temp708_176 () (_ BitVec 64))
(declare-fun temp708_177 () (_ BitVec 64))
(declare-fun temp708_178 () (_ BitVec 64))
(declare-fun temp708_179 () (_ BitVec 64))
(declare-fun temp708_180 () (_ BitVec 64))
(declare-fun temp708_181 () (_ BitVec 64))
(declare-fun temp708_182 () (_ BitVec 64))
(declare-fun temp708_183 () (_ BitVec 64))
(declare-fun temp708_184 () (_ BitVec 64))
(declare-fun temp708_185 () (_ BitVec 64))
(declare-fun temp708_186 () (_ BitVec 64))
(declare-fun temp708_187 () (_ BitVec 64))
(declare-fun temp708_188 () (_ BitVec 64))
(declare-fun temp708_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp708_190 () (_ BitVec 64))
(declare-fun temp708_192 () (_ BitVec 64))
(declare-fun temp708_193 () (_ BitVec 64))
(declare-fun temp708_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp708_194 () (_ BitVec 64))
(declare-fun temp708_195 () (_ BitVec 64))
(declare-fun temp708_197 () (_ BitVec 64))
(declare-fun temp708_198 () (_ BitVec 64))
(declare-fun temp708_196 () (_ BitVec 64))
(declare-fun temp708_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp708_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp708_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp708_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp708_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp708_204 () (_ BitVec 64))
(declare-fun temp708_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp708_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp708_207 () (_ BitVec 64))
(declare-fun temp708_208 () (_ BitVec 64))
(declare-fun temp708_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp708_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp708_211 () (_ BitVec 64))
(declare-fun temp708_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp708_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp708_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp708_216 () (_ BitVec 64))
(declare-fun temp708_215 () (_ BitVec 64))
(declare-fun temp708_217 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp708_218 () (_ BitVec 64))
(declare-fun temp708_219 () (_ BitVec 64))
(declare-fun temp708_220 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp708_221 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp708_222 () (_ BitVec 64))
(declare-fun temp708_224 () (_ BitVec 64))
(declare-fun temp708_223 () (_ BitVec 64))
(declare-fun temp708_225 () (_ BitVec 64))
(declare-fun temp708_226 () (_ BitVec 64))
(declare-fun var5518100 () (_ BitVec 64))
(declare-fun var5518067 () (_ BitVec 64))
(declare-fun var5386631 () (_ BitVec 64))
(declare-fun var5386627 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp708_227 () (_ BitVec 64))
(assert (= temp708_1 #x0000000000000001))
(assert (= var77203 temp708_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp708_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp708_2)))
(assert (= temp708_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp708_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp708_4 #x0000000000000000))
(assert (= var210941 temp708_4))
(assert (= temp708_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp708_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp708_6 #x0000000000000000))
(assert (= var210986 temp708_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp708_7 #x0000000000000000))
(assert (= temp708_8 temp708_7))
(assert (= temp708_9 (select ARGNAME_padding_NAMEEND_VAL temp708_8)))
(assert (= temp708_10 #x0000000000000001))
(assert (= temp708_11 temp708_10))
(assert (= temp708_12 (select ARGNAME_padding_NAMEEND_VAL temp708_11)))
(assert (= temp708_13 #x0000000000000002))
(assert (= temp708_14 temp708_13))
(assert (= temp708_15 (select ARGNAME_padding_NAMEEND_VAL temp708_14)))
(assert (= temp708_16 #x0000000000000003))
(assert (= temp708_17 temp708_16))
(assert (= temp708_18 (select ARGNAME_padding_NAMEEND_VAL temp708_17)))
(assert (= temp708_19 #x0000000000000004))
(assert (= temp708_20 temp708_19))
(assert (= temp708_21 (select ARGNAME_padding_NAMEEND_VAL temp708_20)))
(assert (= temp708_22 #x0000000000000005))
(assert (= temp708_23 temp708_22))
(assert (= temp708_24 (select ARGNAME_padding_NAMEEND_VAL temp708_23)))
(assert (= temp708_25 #x0000000000000000))
(assert (= temp708_26 #x0000000000000000))
(assert (= temp708_27 temp708_26))
(assert (= temp708_28 (select ARGNAME_padding_NAMEEND_VAL temp708_27)))
(assert (= temp708_29 #x0000000000000000))
(assert (= temp708_30 #x0000000000000001))
(assert (= temp708_31 temp708_30))
(assert (= temp708_32 (select ARGNAME_padding_NAMEEND_VAL temp708_31)))
(assert (= temp708_33 #x0000000000000000))
(assert (= temp708_34 #x0000000000000002))
(assert (= temp708_35 temp708_34))
(assert (= temp708_36 (select ARGNAME_padding_NAMEEND_VAL temp708_35)))
(assert (= temp708_37 #x0000000000000000))
(assert (= temp708_38 #x0000000000000003))
(assert (= temp708_39 temp708_38))
(assert (= temp708_40 (select ARGNAME_padding_NAMEEND_VAL temp708_39)))
(assert (= temp708_41 #x0000000000000000))
(assert (= temp708_42 #x0000000000000004))
(assert (= temp708_43 temp708_42))
(assert (= temp708_44 (select ARGNAME_padding_NAMEEND_VAL temp708_43)))
(assert (= temp708_45 #x0000000000000000))
(assert (= temp708_46 #x0000000000000005))
(assert (= temp708_47 temp708_46))
(assert (= temp708_48 (select ARGNAME_padding_NAMEEND_VAL temp708_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp708_28 temp708_25)
             (bvslt temp708_32 temp708_29)
             (bvslt temp708_36 temp708_33)
             (bvslt temp708_40 temp708_37)
             (bvslt temp708_44 temp708_41)
             (bvslt temp708_48 temp708_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp708_49 #x0000000000000000))
(assert (= var1191714 temp708_49))
(assert (= temp708_50 #x0000000000000000))
(assert (= temp708_51 temp708_50))
(assert (= temp708_52 (select ARGNAME_output_padding_NAMEEND_VAL temp708_51)))
(assert (= temp708_53 #x0000000000000001))
(assert (= temp708_54 temp708_53))
(assert (= temp708_55 (select ARGNAME_output_padding_NAMEEND_VAL temp708_54)))
(assert (= temp708_56 #x0000000000000002))
(assert (= temp708_57 temp708_56))
(assert (= temp708_58 (select ARGNAME_output_padding_NAMEEND_VAL temp708_57)))
(assert (= temp708_59 #x0000000000000003))
(assert (= temp708_60 temp708_59))
(assert (= temp708_61 (select ARGNAME_output_padding_NAMEEND_VAL temp708_60)))
(assert (= temp708_62 #x0000000000000004))
(assert (= temp708_63 temp708_62))
(assert (= temp708_64 (select ARGNAME_output_padding_NAMEEND_VAL temp708_63)))
(assert (= temp708_65 #x0000000000000005))
(assert (= temp708_66 temp708_65))
(assert (= temp708_67 (select ARGNAME_output_padding_NAMEEND_VAL temp708_66)))
(assert (= temp708_68 #x0000000000000000))
(assert (= temp708_69 #x0000000000000000))
(assert (= temp708_70 temp708_69))
(assert (= temp708_71 (select ARGNAME_output_padding_NAMEEND_VAL temp708_70)))
(assert (= temp708_72 #x0000000000000000))
(assert (= temp708_73 #x0000000000000001))
(assert (= temp708_74 temp708_73))
(assert (= temp708_75 (select ARGNAME_output_padding_NAMEEND_VAL temp708_74)))
(assert (= temp708_76 #x0000000000000000))
(assert (= temp708_77 #x0000000000000002))
(assert (= temp708_78 temp708_77))
(assert (= temp708_79 (select ARGNAME_output_padding_NAMEEND_VAL temp708_78)))
(assert (= temp708_80 #x0000000000000000))
(assert (= temp708_81 #x0000000000000003))
(assert (= temp708_82 temp708_81))
(assert (= temp708_83 (select ARGNAME_output_padding_NAMEEND_VAL temp708_82)))
(assert (= temp708_84 #x0000000000000000))
(assert (= temp708_85 #x0000000000000004))
(assert (= temp708_86 temp708_85))
(assert (= temp708_87 (select ARGNAME_output_padding_NAMEEND_VAL temp708_86)))
(assert (= temp708_88 #x0000000000000000))
(assert (= temp708_89 #x0000000000000005))
(assert (= temp708_90 temp708_89))
(assert (= temp708_91 (select ARGNAME_output_padding_NAMEEND_VAL temp708_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp708_71 temp708_68)
             (bvslt temp708_75 temp708_72)
             (bvslt temp708_79 temp708_76)
             (bvslt temp708_83 temp708_80)
             (bvslt temp708_87 temp708_84)
             (bvslt temp708_91 temp708_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp708_92 #x0000000000000000))
(assert (= var1191725 temp708_92))
(assert (= temp708_93 #x0000000000000000))
(assert (= temp708_94 temp708_93))
(assert (= temp708_95 (select ARGNAME_stride_NAMEEND_VAL temp708_94)))
(assert (= temp708_96 #x0000000000000001))
(assert (= temp708_97 temp708_96))
(assert (= temp708_98 (select ARGNAME_stride_NAMEEND_VAL temp708_97)))
(assert (= temp708_99 #x0000000000000002))
(assert (= temp708_100 temp708_99))
(assert (= temp708_101 (select ARGNAME_stride_NAMEEND_VAL temp708_100)))
(assert (= temp708_102 #x0000000000000003))
(assert (= temp708_103 temp708_102))
(assert (= temp708_104 (select ARGNAME_stride_NAMEEND_VAL temp708_103)))
(assert (= temp708_105 #x0000000000000004))
(assert (= temp708_106 temp708_105))
(assert (= temp708_107 (select ARGNAME_stride_NAMEEND_VAL temp708_106)))
(assert (= temp708_108 #x0000000000000005))
(assert (= temp708_109 temp708_108))
(assert (= temp708_110 (select ARGNAME_stride_NAMEEND_VAL temp708_109)))
(assert (= temp708_111 #x0000000000000000))
(assert (= temp708_112 #x0000000000000000))
(assert (= temp708_113 temp708_112))
(assert (= temp708_114 (select ARGNAME_stride_NAMEEND_VAL temp708_113)))
(assert (= temp708_115 #x0000000000000000))
(assert (= temp708_116 #x0000000000000001))
(assert (= temp708_117 temp708_116))
(assert (= temp708_118 (select ARGNAME_stride_NAMEEND_VAL temp708_117)))
(assert (= temp708_119 #x0000000000000000))
(assert (= temp708_120 #x0000000000000002))
(assert (= temp708_121 temp708_120))
(assert (= temp708_122 (select ARGNAME_stride_NAMEEND_VAL temp708_121)))
(assert (= temp708_123 #x0000000000000000))
(assert (= temp708_124 #x0000000000000003))
(assert (= temp708_125 temp708_124))
(assert (= temp708_126 (select ARGNAME_stride_NAMEEND_VAL temp708_125)))
(assert (= temp708_127 #x0000000000000000))
(assert (= temp708_128 #x0000000000000004))
(assert (= temp708_129 temp708_128))
(assert (= temp708_130 (select ARGNAME_stride_NAMEEND_VAL temp708_129)))
(assert (= temp708_131 #x0000000000000000))
(assert (= temp708_132 #x0000000000000005))
(assert (= temp708_133 temp708_132))
(assert (= temp708_134 (select ARGNAME_stride_NAMEEND_VAL temp708_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp708_114 temp708_111)
             (bvsle temp708_118 temp708_115)
             (bvsle temp708_122 temp708_119)
             (bvsle temp708_126 temp708_123)
             (bvsle temp708_130 temp708_127)
             (bvsle temp708_134 temp708_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp708_135 #x0000000000000000))
(assert (= var1191735 temp708_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp708_136 #x0000000000000001))
(assert (= var1191747 temp708_136))
(assert (= temp708_137 #x0000000000000000))
(assert (= var1179826 temp708_137))
(assert (= temp708_138 #x0000000000000000))
(assert (= temp708_139 temp708_138))
(assert (= temp708_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp708_139)))
(assert (= temp708_141 #x0000000000000001))
(assert (= temp708_142 temp708_141))
(assert (= temp708_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp708_142)))
(assert (= temp708_144 #x0000000000000002))
(assert (= temp708_145 temp708_144))
(assert (= temp708_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp708_145)))
(assert (= temp708_147 #x0000000000000003))
(assert (= temp708_148 temp708_147))
(assert (= temp708_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp708_148)))
(assert (= temp708_150 #x0000000000000004))
(assert (= temp708_151 temp708_150))
(assert (= temp708_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp708_151)))
(assert (= temp708_153 #x0000000000000005))
(assert (= temp708_154 temp708_153))
(assert (= temp708_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp708_154)))
(assert (= temp708_157 var1179826))
(assert (= temp708_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp708_157)))
(assert (= temp708_156 temp708_158))
(assert (= var1191780
   (ite (bvslt temp708_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp708_159 #x0000000000000000))
(assert (= var1191780 temp708_159))
(assert (= temp708_160 #x0000000000000000))
(assert (= var1179826 temp708_160))
(assert (= temp708_162 var1179826))
(assert (= temp708_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp708_162)))
(assert (= temp708_161 temp708_163))
(assert (= var1191802 (bvsmod temp708_161 ARGNAME_groups_NAMEEND)))
(assert (= temp708_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp708_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp708_165 #x0000000000000001))
(assert (= var1191803 temp708_165))
(assert (= temp708_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp708_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp708_167 #x0000000000000001))
(assert (= var1191823 temp708_167))
(assert (= temp708_168 #x0000000000000001))
(assert (= var1180714 temp708_168))
(assert (= temp708_169 #x0000000000000000))
(assert (= temp708_170 temp708_169))
(assert (= temp708_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp708_170)))
(assert (= temp708_172 #x0000000000000001))
(assert (= temp708_173 temp708_172))
(assert (= temp708_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp708_173)))
(assert (= temp708_175 #x0000000000000002))
(assert (= temp708_176 temp708_175))
(assert (= temp708_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp708_176)))
(assert (= temp708_178 #x0000000000000003))
(assert (= temp708_179 temp708_178))
(assert (= temp708_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp708_179)))
(assert (= temp708_181 #x0000000000000004))
(assert (= temp708_182 temp708_181))
(assert (= temp708_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp708_182)))
(assert (= temp708_184 #x0000000000000005))
(assert (= temp708_185 temp708_184))
(assert (= temp708_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp708_185)))
(assert (= temp708_187 #x0000000000000000))
(assert (= temp708_188
   (ite (bvslt var1180714 temp708_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp708_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp708_188)))
(assert (= var1191831 temp708_189))
(assert (bvslt (ite (bvslt var1180714 temp708_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp708_190 #x0000000000000001))
(assert (= var1180714 temp708_190))
(assert (= temp708_192 var1180714))
(assert (= temp708_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp708_192)))
(assert (= temp708_191 temp708_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp708_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp708_194 #x0000000000000001))
(assert (= var1191836 temp708_194))
(assert (= temp708_195 #x0000000000000000))
(assert (= var1179826 temp708_195))
(assert (= temp708_197 var1179826))
(assert (= temp708_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp708_197)))
(assert (= temp708_196 temp708_198))
(assert (= temp708_199 #x0000000000000002))
(assert (= var1586025 temp708_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp708_200 #x0000000000000001))
(assert (= var1191993 temp708_200))
(assert (= temp708_201 #x0000000000000001))
(assert (= var2700303 temp708_201))
(assert (= temp708_202 #x0000000000000001))
(assert (= var2962447 temp708_202))
(assert (= temp708_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp708_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp708_204 #x0000000000000001))
(assert (= var211058 temp708_204))
(assert (= temp708_205 #x0000000000000001))
(assert (= var211188 temp708_205))
(assert (= var3879401 var211188))
(assert (= temp708_206 #x0000000000000000))
(assert (= var3866802 temp708_206))
(assert (= temp708_207 #x0000000000000000))
(assert (= temp708_208
   (ite (bvslt var3866802 temp708_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp708_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp708_208)))
(assert (= var3879420 temp708_209))
(assert (bvslt (ite (bvslt var3866802 temp708_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp708_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp708_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp708_211 #x0000000000000001))
(assert (= var3879421 temp708_211))
(assert (= temp708_212 #x0000000000000000))
(assert (= var4079423 temp708_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp708_213 #x0000000000000002))
(assert (= var4208259 temp708_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp708_214 #x0000000000000000))
(assert (= var4273820 temp708_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp708_216 #xffffffffffffffff))
(assert (= temp708_215 temp708_216))
(assert (= temp708_217 #x0000000000000001))
(assert (= var197674 temp708_217))
(assert (= temp708_218 #x0000000000000000))
(assert (= temp708_219
   (ite (bvslt var197674 temp708_218)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp708_220 (select ARGNAME_input_NAMEEND_DIMSIZE temp708_219)))
(assert (= var211595 temp708_220))
(assert (bvslt (ite (bvslt var197674 temp708_218)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp708_221 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp708_221) #x0000000000000001 #x0000000000000000)))
(assert (= temp708_222 #x0000000000000001))
(assert (= var211596 temp708_222))
(assert (= temp708_224 #xffffffffffffffff))
(assert (= temp708_223 temp708_224))
(assert (= temp708_225 #x0000000000000001))
(assert (= var211058 temp708_225))
(assert (= temp708_226 #x0000000000000000))
(assert (= var5518100 temp708_226))
(assert (= var5518067 var5518100))
(assert (= var5386631 var5518067))
(assert (= var5386627 var5386631))
(assert (= var212669 var5386627))
(assert (= temp708_227 #x0000000000000000))
(assert (= var212669 temp708_227))
(model-add temp708_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp708_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp708_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp708_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




