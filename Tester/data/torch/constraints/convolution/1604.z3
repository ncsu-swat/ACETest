(declare-fun temp10933_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10933_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10933_3 () (_ BitVec 64))
(declare-fun temp10933_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10933_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10933_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10933_7 () (_ BitVec 64))
(declare-fun temp10933_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10933_9 () (_ BitVec 64))
(declare-fun temp10933_10 () (_ BitVec 64))
(declare-fun temp10933_11 () (_ BitVec 64))
(declare-fun temp10933_12 () (_ BitVec 64))
(declare-fun temp10933_13 () (_ BitVec 64))
(declare-fun temp10933_14 () (_ BitVec 64))
(declare-fun temp10933_15 () (_ BitVec 64))
(declare-fun temp10933_16 () (_ BitVec 64))
(declare-fun temp10933_17 () (_ BitVec 64))
(declare-fun temp10933_18 () (_ BitVec 64))
(declare-fun temp10933_19 () (_ BitVec 64))
(declare-fun temp10933_20 () (_ BitVec 64))
(declare-fun temp10933_21 () (_ BitVec 64))
(declare-fun temp10933_22 () (_ BitVec 64))
(declare-fun temp10933_23 () (_ BitVec 64))
(declare-fun temp10933_24 () (_ BitVec 64))
(declare-fun temp10933_25 () (_ BitVec 64))
(declare-fun temp10933_26 () (_ BitVec 64))
(declare-fun temp10933_27 () (_ BitVec 64))
(declare-fun temp10933_28 () (_ BitVec 64))
(declare-fun temp10933_29 () (_ BitVec 64))
(declare-fun temp10933_30 () (_ BitVec 64))
(declare-fun temp10933_31 () (_ BitVec 64))
(declare-fun temp10933_32 () (_ BitVec 64))
(declare-fun temp10933_33 () (_ BitVec 64))
(declare-fun temp10933_34 () (_ BitVec 64))
(declare-fun temp10933_35 () (_ BitVec 64))
(declare-fun temp10933_36 () (_ BitVec 64))
(declare-fun temp10933_37 () (_ BitVec 64))
(declare-fun temp10933_38 () (_ BitVec 64))
(declare-fun temp10933_39 () (_ BitVec 64))
(declare-fun temp10933_40 () (_ BitVec 64))
(declare-fun temp10933_41 () (_ BitVec 64))
(declare-fun temp10933_42 () (_ BitVec 64))
(declare-fun temp10933_43 () (_ BitVec 64))
(declare-fun temp10933_44 () (_ BitVec 64))
(declare-fun temp10933_45 () (_ BitVec 64))
(declare-fun temp10933_46 () (_ BitVec 64))
(declare-fun temp10933_47 () (_ BitVec 64))
(declare-fun temp10933_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10933_49 () (_ BitVec 64))
(declare-fun temp10933_50 () (_ BitVec 64))
(declare-fun temp10933_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10933_52 () (_ BitVec 64))
(declare-fun temp10933_53 () (_ BitVec 64))
(declare-fun temp10933_54 () (_ BitVec 64))
(declare-fun temp10933_55 () (_ BitVec 64))
(declare-fun temp10933_56 () (_ BitVec 64))
(declare-fun temp10933_57 () (_ BitVec 64))
(declare-fun temp10933_58 () (_ BitVec 64))
(declare-fun temp10933_59 () (_ BitVec 64))
(declare-fun temp10933_60 () (_ BitVec 64))
(declare-fun temp10933_61 () (_ BitVec 64))
(declare-fun temp10933_62 () (_ BitVec 64))
(declare-fun temp10933_63 () (_ BitVec 64))
(declare-fun temp10933_64 () (_ BitVec 64))
(declare-fun temp10933_65 () (_ BitVec 64))
(declare-fun temp10933_66 () (_ BitVec 64))
(declare-fun temp10933_67 () (_ BitVec 64))
(declare-fun temp10933_68 () (_ BitVec 64))
(declare-fun temp10933_69 () (_ BitVec 64))
(declare-fun temp10933_70 () (_ BitVec 64))
(declare-fun temp10933_71 () (_ BitVec 64))
(declare-fun temp10933_72 () (_ BitVec 64))
(declare-fun temp10933_73 () (_ BitVec 64))
(declare-fun temp10933_74 () (_ BitVec 64))
(declare-fun temp10933_75 () (_ BitVec 64))
(declare-fun temp10933_76 () (_ BitVec 64))
(declare-fun temp10933_77 () (_ BitVec 64))
(declare-fun temp10933_78 () (_ BitVec 64))
(declare-fun temp10933_79 () (_ BitVec 64))
(declare-fun temp10933_80 () (_ BitVec 64))
(declare-fun temp10933_81 () (_ BitVec 64))
(declare-fun temp10933_82 () (_ BitVec 64))
(declare-fun temp10933_83 () (_ BitVec 64))
(declare-fun temp10933_84 () (_ BitVec 64))
(declare-fun temp10933_85 () (_ BitVec 64))
(declare-fun temp10933_86 () (_ BitVec 64))
(declare-fun temp10933_87 () (_ BitVec 64))
(declare-fun temp10933_88 () (_ BitVec 64))
(declare-fun temp10933_89 () (_ BitVec 64))
(declare-fun temp10933_90 () (_ BitVec 64))
(declare-fun temp10933_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10933_92 () (_ BitVec 64))
(declare-fun temp10933_93 () (_ BitVec 64))
(declare-fun temp10933_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10933_95 () (_ BitVec 64))
(declare-fun temp10933_96 () (_ BitVec 64))
(declare-fun temp10933_97 () (_ BitVec 64))
(declare-fun temp10933_98 () (_ BitVec 64))
(declare-fun temp10933_99 () (_ BitVec 64))
(declare-fun temp10933_100 () (_ BitVec 64))
(declare-fun temp10933_101 () (_ BitVec 64))
(declare-fun temp10933_102 () (_ BitVec 64))
(declare-fun temp10933_103 () (_ BitVec 64))
(declare-fun temp10933_104 () (_ BitVec 64))
(declare-fun temp10933_105 () (_ BitVec 64))
(declare-fun temp10933_106 () (_ BitVec 64))
(declare-fun temp10933_107 () (_ BitVec 64))
(declare-fun temp10933_108 () (_ BitVec 64))
(declare-fun temp10933_109 () (_ BitVec 64))
(declare-fun temp10933_110 () (_ BitVec 64))
(declare-fun temp10933_111 () (_ BitVec 64))
(declare-fun temp10933_112 () (_ BitVec 64))
(declare-fun temp10933_113 () (_ BitVec 64))
(declare-fun temp10933_114 () (_ BitVec 64))
(declare-fun temp10933_115 () (_ BitVec 64))
(declare-fun temp10933_116 () (_ BitVec 64))
(declare-fun temp10933_117 () (_ BitVec 64))
(declare-fun temp10933_118 () (_ BitVec 64))
(declare-fun temp10933_119 () (_ BitVec 64))
(declare-fun temp10933_120 () (_ BitVec 64))
(declare-fun temp10933_121 () (_ BitVec 64))
(declare-fun temp10933_122 () (_ BitVec 64))
(declare-fun temp10933_123 () (_ BitVec 64))
(declare-fun temp10933_124 () (_ BitVec 64))
(declare-fun temp10933_125 () (_ BitVec 64))
(declare-fun temp10933_126 () (_ BitVec 64))
(declare-fun temp10933_127 () (_ BitVec 64))
(declare-fun temp10933_128 () (_ BitVec 64))
(declare-fun temp10933_129 () (_ BitVec 64))
(declare-fun temp10933_130 () (_ BitVec 64))
(declare-fun temp10933_131 () (_ BitVec 64))
(declare-fun temp10933_132 () (_ BitVec 64))
(declare-fun temp10933_133 () (_ BitVec 64))
(declare-fun temp10933_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10933_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10933_136 () (_ BitVec 64))
(declare-fun temp10933_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10933_138 () (_ BitVec 64))
(declare-fun temp10933_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10933_140 () (_ BitVec 64))
(declare-fun temp10933_141 () (_ BitVec 64))
(declare-fun temp10933_142 () (_ BitVec 64))
(declare-fun temp10933_143 () (_ BitVec 64))
(declare-fun temp10933_144 () (_ BitVec 64))
(declare-fun temp10933_145 () (_ BitVec 64))
(declare-fun temp10933_146 () (_ BitVec 64))
(declare-fun temp10933_147 () (_ BitVec 64))
(declare-fun temp10933_148 () (_ BitVec 64))
(declare-fun temp10933_149 () (_ BitVec 64))
(declare-fun temp10933_150 () (_ BitVec 64))
(declare-fun temp10933_151 () (_ BitVec 64))
(declare-fun temp10933_152 () (_ BitVec 64))
(declare-fun temp10933_153 () (_ BitVec 64))
(declare-fun temp10933_154 () (_ BitVec 64))
(declare-fun temp10933_155 () (_ BitVec 64))
(declare-fun temp10933_157 () (_ BitVec 64))
(declare-fun temp10933_158 () (_ BitVec 64))
(declare-fun temp10933_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10933_159 () (_ BitVec 64))
(declare-fun temp10933_160 () (_ BitVec 64))
(declare-fun temp10933_162 () (_ BitVec 64))
(declare-fun temp10933_163 () (_ BitVec 64))
(declare-fun temp10933_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10933_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10933_165 () (_ BitVec 64))
(declare-fun temp10933_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10933_167 () (_ BitVec 64))
(declare-fun temp10933_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10933_169 () (_ BitVec 64))
(declare-fun temp10933_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10933_171 () (_ BitVec 64))
(declare-fun temp10933_172 () (_ BitVec 64))
(declare-fun temp10933_173 () (_ BitVec 64))
(declare-fun temp10933_174 () (_ BitVec 64))
(declare-fun temp10933_175 () (_ BitVec 64))
(declare-fun temp10933_176 () (_ BitVec 64))
(declare-fun temp10933_177 () (_ BitVec 64))
(declare-fun temp10933_178 () (_ BitVec 64))
(declare-fun temp10933_179 () (_ BitVec 64))
(declare-fun temp10933_180 () (_ BitVec 64))
(declare-fun temp10933_181 () (_ BitVec 64))
(declare-fun temp10933_182 () (_ BitVec 64))
(declare-fun temp10933_183 () (_ BitVec 64))
(declare-fun temp10933_184 () (_ BitVec 64))
(declare-fun temp10933_185 () (_ BitVec 64))
(declare-fun temp10933_186 () (_ BitVec 64))
(declare-fun temp10933_187 () (_ BitVec 64))
(declare-fun temp10933_188 () (_ BitVec 64))
(declare-fun temp10933_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10933_190 () (_ BitVec 64))
(declare-fun temp10933_192 () (_ BitVec 64))
(declare-fun temp10933_193 () (_ BitVec 64))
(declare-fun temp10933_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10933_194 () (_ BitVec 64))
(declare-fun temp10933_195 () (_ BitVec 64))
(declare-fun temp10933_197 () (_ BitVec 64))
(declare-fun temp10933_198 () (_ BitVec 64))
(declare-fun temp10933_196 () (_ BitVec 64))
(declare-fun temp10933_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10933_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10933_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10933_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10933_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10933_204 () (_ BitVec 64))
(declare-fun temp10933_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10933_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10933_207 () (_ BitVec 64))
(declare-fun temp10933_208 () (_ BitVec 64))
(declare-fun temp10933_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10933_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10933_211 () (_ BitVec 64))
(declare-fun temp10933_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10933_213 () (_ BitVec 64))
(declare-fun temp10933_214 () (_ BitVec 64))
(declare-fun temp10933_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10933_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10933_217 () (_ BitVec 64))
(declare-fun temp10933_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10933_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10933_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var5255568 () (_ BitVec 64))
(declare-fun var5517712 () (_ BitVec 64))
(declare-fun temp10933_221 () (_ BitVec 64))
(assert (= temp10933_1 #x0000000000000001))
(assert (= var77203 temp10933_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10933_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10933_2)))
(assert (= temp10933_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10933_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10933_4 #x0000000000000000))
(assert (= var210941 temp10933_4))
(assert (= temp10933_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10933_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10933_6 #x0000000000000000))
(assert (= var210986 temp10933_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10933_7 #x0000000000000000))
(assert (= temp10933_8 temp10933_7))
(assert (= temp10933_9 (select ARGNAME_padding_NAMEEND_VAL temp10933_8)))
(assert (= temp10933_10 #x0000000000000001))
(assert (= temp10933_11 temp10933_10))
(assert (= temp10933_12 (select ARGNAME_padding_NAMEEND_VAL temp10933_11)))
(assert (= temp10933_13 #x0000000000000002))
(assert (= temp10933_14 temp10933_13))
(assert (= temp10933_15 (select ARGNAME_padding_NAMEEND_VAL temp10933_14)))
(assert (= temp10933_16 #x0000000000000003))
(assert (= temp10933_17 temp10933_16))
(assert (= temp10933_18 (select ARGNAME_padding_NAMEEND_VAL temp10933_17)))
(assert (= temp10933_19 #x0000000000000004))
(assert (= temp10933_20 temp10933_19))
(assert (= temp10933_21 (select ARGNAME_padding_NAMEEND_VAL temp10933_20)))
(assert (= temp10933_22 #x0000000000000005))
(assert (= temp10933_23 temp10933_22))
(assert (= temp10933_24 (select ARGNAME_padding_NAMEEND_VAL temp10933_23)))
(assert (= temp10933_25 #x0000000000000000))
(assert (= temp10933_26 #x0000000000000000))
(assert (= temp10933_27 temp10933_26))
(assert (= temp10933_28 (select ARGNAME_padding_NAMEEND_VAL temp10933_27)))
(assert (= temp10933_29 #x0000000000000000))
(assert (= temp10933_30 #x0000000000000001))
(assert (= temp10933_31 temp10933_30))
(assert (= temp10933_32 (select ARGNAME_padding_NAMEEND_VAL temp10933_31)))
(assert (= temp10933_33 #x0000000000000000))
(assert (= temp10933_34 #x0000000000000002))
(assert (= temp10933_35 temp10933_34))
(assert (= temp10933_36 (select ARGNAME_padding_NAMEEND_VAL temp10933_35)))
(assert (= temp10933_37 #x0000000000000000))
(assert (= temp10933_38 #x0000000000000003))
(assert (= temp10933_39 temp10933_38))
(assert (= temp10933_40 (select ARGNAME_padding_NAMEEND_VAL temp10933_39)))
(assert (= temp10933_41 #x0000000000000000))
(assert (= temp10933_42 #x0000000000000004))
(assert (= temp10933_43 temp10933_42))
(assert (= temp10933_44 (select ARGNAME_padding_NAMEEND_VAL temp10933_43)))
(assert (= temp10933_45 #x0000000000000000))
(assert (= temp10933_46 #x0000000000000005))
(assert (= temp10933_47 temp10933_46))
(assert (= temp10933_48 (select ARGNAME_padding_NAMEEND_VAL temp10933_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10933_28 temp10933_25)
             (bvslt temp10933_32 temp10933_29)
             (bvslt temp10933_36 temp10933_33)
             (bvslt temp10933_40 temp10933_37)
             (bvslt temp10933_44 temp10933_41)
             (bvslt temp10933_48 temp10933_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10933_49 #x0000000000000000))
(assert (= var1191714 temp10933_49))
(assert (= temp10933_50 #x0000000000000000))
(assert (= temp10933_51 temp10933_50))
(assert (= temp10933_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10933_51)))
(assert (= temp10933_53 #x0000000000000001))
(assert (= temp10933_54 temp10933_53))
(assert (= temp10933_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10933_54)))
(assert (= temp10933_56 #x0000000000000002))
(assert (= temp10933_57 temp10933_56))
(assert (= temp10933_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10933_57)))
(assert (= temp10933_59 #x0000000000000003))
(assert (= temp10933_60 temp10933_59))
(assert (= temp10933_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10933_60)))
(assert (= temp10933_62 #x0000000000000004))
(assert (= temp10933_63 temp10933_62))
(assert (= temp10933_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10933_63)))
(assert (= temp10933_65 #x0000000000000005))
(assert (= temp10933_66 temp10933_65))
(assert (= temp10933_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10933_66)))
(assert (= temp10933_68 #x0000000000000000))
(assert (= temp10933_69 #x0000000000000000))
(assert (= temp10933_70 temp10933_69))
(assert (= temp10933_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10933_70)))
(assert (= temp10933_72 #x0000000000000000))
(assert (= temp10933_73 #x0000000000000001))
(assert (= temp10933_74 temp10933_73))
(assert (= temp10933_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10933_74)))
(assert (= temp10933_76 #x0000000000000000))
(assert (= temp10933_77 #x0000000000000002))
(assert (= temp10933_78 temp10933_77))
(assert (= temp10933_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10933_78)))
(assert (= temp10933_80 #x0000000000000000))
(assert (= temp10933_81 #x0000000000000003))
(assert (= temp10933_82 temp10933_81))
(assert (= temp10933_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10933_82)))
(assert (= temp10933_84 #x0000000000000000))
(assert (= temp10933_85 #x0000000000000004))
(assert (= temp10933_86 temp10933_85))
(assert (= temp10933_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10933_86)))
(assert (= temp10933_88 #x0000000000000000))
(assert (= temp10933_89 #x0000000000000005))
(assert (= temp10933_90 temp10933_89))
(assert (= temp10933_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10933_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10933_71 temp10933_68)
             (bvslt temp10933_75 temp10933_72)
             (bvslt temp10933_79 temp10933_76)
             (bvslt temp10933_83 temp10933_80)
             (bvslt temp10933_87 temp10933_84)
             (bvslt temp10933_91 temp10933_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10933_92 #x0000000000000000))
(assert (= var1191725 temp10933_92))
(assert (= temp10933_93 #x0000000000000000))
(assert (= temp10933_94 temp10933_93))
(assert (= temp10933_95 (select ARGNAME_stride_NAMEEND_VAL temp10933_94)))
(assert (= temp10933_96 #x0000000000000001))
(assert (= temp10933_97 temp10933_96))
(assert (= temp10933_98 (select ARGNAME_stride_NAMEEND_VAL temp10933_97)))
(assert (= temp10933_99 #x0000000000000002))
(assert (= temp10933_100 temp10933_99))
(assert (= temp10933_101 (select ARGNAME_stride_NAMEEND_VAL temp10933_100)))
(assert (= temp10933_102 #x0000000000000003))
(assert (= temp10933_103 temp10933_102))
(assert (= temp10933_104 (select ARGNAME_stride_NAMEEND_VAL temp10933_103)))
(assert (= temp10933_105 #x0000000000000004))
(assert (= temp10933_106 temp10933_105))
(assert (= temp10933_107 (select ARGNAME_stride_NAMEEND_VAL temp10933_106)))
(assert (= temp10933_108 #x0000000000000005))
(assert (= temp10933_109 temp10933_108))
(assert (= temp10933_110 (select ARGNAME_stride_NAMEEND_VAL temp10933_109)))
(assert (= temp10933_111 #x0000000000000000))
(assert (= temp10933_112 #x0000000000000000))
(assert (= temp10933_113 temp10933_112))
(assert (= temp10933_114 (select ARGNAME_stride_NAMEEND_VAL temp10933_113)))
(assert (= temp10933_115 #x0000000000000000))
(assert (= temp10933_116 #x0000000000000001))
(assert (= temp10933_117 temp10933_116))
(assert (= temp10933_118 (select ARGNAME_stride_NAMEEND_VAL temp10933_117)))
(assert (= temp10933_119 #x0000000000000000))
(assert (= temp10933_120 #x0000000000000002))
(assert (= temp10933_121 temp10933_120))
(assert (= temp10933_122 (select ARGNAME_stride_NAMEEND_VAL temp10933_121)))
(assert (= temp10933_123 #x0000000000000000))
(assert (= temp10933_124 #x0000000000000003))
(assert (= temp10933_125 temp10933_124))
(assert (= temp10933_126 (select ARGNAME_stride_NAMEEND_VAL temp10933_125)))
(assert (= temp10933_127 #x0000000000000000))
(assert (= temp10933_128 #x0000000000000004))
(assert (= temp10933_129 temp10933_128))
(assert (= temp10933_130 (select ARGNAME_stride_NAMEEND_VAL temp10933_129)))
(assert (= temp10933_131 #x0000000000000000))
(assert (= temp10933_132 #x0000000000000005))
(assert (= temp10933_133 temp10933_132))
(assert (= temp10933_134 (select ARGNAME_stride_NAMEEND_VAL temp10933_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10933_114 temp10933_111)
             (bvsle temp10933_118 temp10933_115)
             (bvsle temp10933_122 temp10933_119)
             (bvsle temp10933_126 temp10933_123)
             (bvsle temp10933_130 temp10933_127)
             (bvsle temp10933_134 temp10933_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10933_135 #x0000000000000000))
(assert (= var1191735 temp10933_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10933_136 #x0000000000000001))
(assert (= var1191747 temp10933_136))
(assert (= temp10933_137 #x0000000000000000))
(assert (= var1179826 temp10933_137))
(assert (= temp10933_138 #x0000000000000000))
(assert (= temp10933_139 temp10933_138))
(assert (= temp10933_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10933_139)))
(assert (= temp10933_141 #x0000000000000001))
(assert (= temp10933_142 temp10933_141))
(assert (= temp10933_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10933_142)))
(assert (= temp10933_144 #x0000000000000002))
(assert (= temp10933_145 temp10933_144))
(assert (= temp10933_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10933_145)))
(assert (= temp10933_147 #x0000000000000003))
(assert (= temp10933_148 temp10933_147))
(assert (= temp10933_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10933_148)))
(assert (= temp10933_150 #x0000000000000004))
(assert (= temp10933_151 temp10933_150))
(assert (= temp10933_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10933_151)))
(assert (= temp10933_153 #x0000000000000005))
(assert (= temp10933_154 temp10933_153))
(assert (= temp10933_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10933_154)))
(assert (= temp10933_157 var1179826))
(assert (= temp10933_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10933_157)))
(assert (= temp10933_156 temp10933_158))
(assert (= var1191780
   (ite (bvslt temp10933_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10933_159 #x0000000000000000))
(assert (= var1191780 temp10933_159))
(assert (= temp10933_160 #x0000000000000000))
(assert (= var1179826 temp10933_160))
(assert (= temp10933_162 var1179826))
(assert (= temp10933_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10933_162)))
(assert (= temp10933_161 temp10933_163))
(assert (= var1191802 (bvsmod temp10933_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10933_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10933_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10933_165 #x0000000000000001))
(assert (= var1191803 temp10933_165))
(assert (= temp10933_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10933_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10933_167 #x0000000000000001))
(assert (= var1191823 temp10933_167))
(assert (= temp10933_168 #x0000000000000001))
(assert (= var1180714 temp10933_168))
(assert (= temp10933_169 #x0000000000000000))
(assert (= temp10933_170 temp10933_169))
(assert (= temp10933_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10933_170)))
(assert (= temp10933_172 #x0000000000000001))
(assert (= temp10933_173 temp10933_172))
(assert (= temp10933_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10933_173)))
(assert (= temp10933_175 #x0000000000000002))
(assert (= temp10933_176 temp10933_175))
(assert (= temp10933_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10933_176)))
(assert (= temp10933_178 #x0000000000000003))
(assert (= temp10933_179 temp10933_178))
(assert (= temp10933_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10933_179)))
(assert (= temp10933_181 #x0000000000000004))
(assert (= temp10933_182 temp10933_181))
(assert (= temp10933_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10933_182)))
(assert (= temp10933_184 #x0000000000000005))
(assert (= temp10933_185 temp10933_184))
(assert (= temp10933_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10933_185)))
(assert (= temp10933_187 #x0000000000000000))
(assert (= temp10933_188
   (ite (bvslt var1180714 temp10933_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10933_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10933_188)))
(assert (= var1191831 temp10933_189))
(assert (bvslt (ite (bvslt var1180714 temp10933_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10933_190 #x0000000000000001))
(assert (= var1180714 temp10933_190))
(assert (= temp10933_192 var1180714))
(assert (= temp10933_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10933_192)))
(assert (= temp10933_191 temp10933_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10933_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10933_194 #x0000000000000001))
(assert (= var1191836 temp10933_194))
(assert (= temp10933_195 #x0000000000000000))
(assert (= var1179826 temp10933_195))
(assert (= temp10933_197 var1179826))
(assert (= temp10933_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10933_197)))
(assert (= temp10933_196 temp10933_198))
(assert (= temp10933_199 #x0000000000000002))
(assert (= var1586025 temp10933_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10933_200 #x0000000000000001))
(assert (= var1191993 temp10933_200))
(assert (= temp10933_201 #x0000000000000001))
(assert (= var2700303 temp10933_201))
(assert (= temp10933_202 #x0000000000000001))
(assert (= var2962447 temp10933_202))
(assert (= temp10933_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10933_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10933_204 #x0000000000000001))
(assert (= var211058 temp10933_204))
(assert (= temp10933_205 #x0000000000000001))
(assert (= var211188 temp10933_205))
(assert (= var3879401 var211188))
(assert (= temp10933_206 #x0000000000000000))
(assert (= var3866802 temp10933_206))
(assert (= temp10933_207 #x0000000000000000))
(assert (= temp10933_208
   (ite (bvslt var3866802 temp10933_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10933_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10933_208)))
(assert (= var3879420 temp10933_209))
(assert (bvslt (ite (bvslt var3866802 temp10933_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10933_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10933_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10933_211 #x0000000000000000))
(assert (= var3879421 temp10933_211))
(assert (= temp10933_212 #x0000000000000001))
(assert (= var3867690 temp10933_212))
(assert (= temp10933_213 #x0000000000000000))
(assert (= temp10933_214
   (ite (bvslt var3867690 temp10933_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10933_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10933_214)))
(assert (= var3879423 temp10933_215))
(assert (bvslt (ite (bvslt var3867690 temp10933_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10933_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10933_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10933_217 #x0000000000000001))
(assert (= var3879424 temp10933_217))
(assert (= temp10933_218 #x0000000000000000))
(assert (= var4133117 temp10933_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10933_219 #x0000000000000002))
(assert (= var4339331 temp10933_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10933_220 #x0000000000000000))
(assert (= var4404892 temp10933_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var5255568 var211201))
(assert (= var5517712 var211201))
(assert (= temp10933_221 #x0000000000000001))
(assert (= var211058 temp10933_221))
(model-add temp10933_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10933_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10933_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10933_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





