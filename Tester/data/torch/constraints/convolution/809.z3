(declare-fun temp1078_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp1078_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1078_3 () (_ BitVec 64))
(declare-fun temp1078_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1078_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp1078_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1078_7 () (_ BitVec 64))
(declare-fun temp1078_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1078_9 () (_ BitVec 64))
(declare-fun temp1078_10 () (_ BitVec 64))
(declare-fun temp1078_11 () (_ BitVec 64))
(declare-fun temp1078_12 () (_ BitVec 64))
(declare-fun temp1078_13 () (_ BitVec 64))
(declare-fun temp1078_14 () (_ BitVec 64))
(declare-fun temp1078_15 () (_ BitVec 64))
(declare-fun temp1078_16 () (_ BitVec 64))
(declare-fun temp1078_17 () (_ BitVec 64))
(declare-fun temp1078_18 () (_ BitVec 64))
(declare-fun temp1078_19 () (_ BitVec 64))
(declare-fun temp1078_20 () (_ BitVec 64))
(declare-fun temp1078_21 () (_ BitVec 64))
(declare-fun temp1078_22 () (_ BitVec 64))
(declare-fun temp1078_23 () (_ BitVec 64))
(declare-fun temp1078_24 () (_ BitVec 64))
(declare-fun temp1078_25 () (_ BitVec 64))
(declare-fun temp1078_26 () (_ BitVec 64))
(declare-fun temp1078_27 () (_ BitVec 64))
(declare-fun temp1078_28 () (_ BitVec 64))
(declare-fun temp1078_29 () (_ BitVec 64))
(declare-fun temp1078_30 () (_ BitVec 64))
(declare-fun temp1078_31 () (_ BitVec 64))
(declare-fun temp1078_32 () (_ BitVec 64))
(declare-fun temp1078_33 () (_ BitVec 64))
(declare-fun temp1078_34 () (_ BitVec 64))
(declare-fun temp1078_35 () (_ BitVec 64))
(declare-fun temp1078_36 () (_ BitVec 64))
(declare-fun temp1078_37 () (_ BitVec 64))
(declare-fun temp1078_38 () (_ BitVec 64))
(declare-fun temp1078_39 () (_ BitVec 64))
(declare-fun temp1078_40 () (_ BitVec 64))
(declare-fun temp1078_41 () (_ BitVec 64))
(declare-fun temp1078_42 () (_ BitVec 64))
(declare-fun temp1078_43 () (_ BitVec 64))
(declare-fun temp1078_44 () (_ BitVec 64))
(declare-fun temp1078_45 () (_ BitVec 64))
(declare-fun temp1078_46 () (_ BitVec 64))
(declare-fun temp1078_47 () (_ BitVec 64))
(declare-fun temp1078_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp1078_49 () (_ BitVec 64))
(declare-fun temp1078_50 () (_ BitVec 64))
(declare-fun temp1078_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1078_52 () (_ BitVec 64))
(declare-fun temp1078_53 () (_ BitVec 64))
(declare-fun temp1078_54 () (_ BitVec 64))
(declare-fun temp1078_55 () (_ BitVec 64))
(declare-fun temp1078_56 () (_ BitVec 64))
(declare-fun temp1078_57 () (_ BitVec 64))
(declare-fun temp1078_58 () (_ BitVec 64))
(declare-fun temp1078_59 () (_ BitVec 64))
(declare-fun temp1078_60 () (_ BitVec 64))
(declare-fun temp1078_61 () (_ BitVec 64))
(declare-fun temp1078_62 () (_ BitVec 64))
(declare-fun temp1078_63 () (_ BitVec 64))
(declare-fun temp1078_64 () (_ BitVec 64))
(declare-fun temp1078_65 () (_ BitVec 64))
(declare-fun temp1078_66 () (_ BitVec 64))
(declare-fun temp1078_67 () (_ BitVec 64))
(declare-fun temp1078_68 () (_ BitVec 64))
(declare-fun temp1078_69 () (_ BitVec 64))
(declare-fun temp1078_70 () (_ BitVec 64))
(declare-fun temp1078_71 () (_ BitVec 64))
(declare-fun temp1078_72 () (_ BitVec 64))
(declare-fun temp1078_73 () (_ BitVec 64))
(declare-fun temp1078_74 () (_ BitVec 64))
(declare-fun temp1078_75 () (_ BitVec 64))
(declare-fun temp1078_76 () (_ BitVec 64))
(declare-fun temp1078_77 () (_ BitVec 64))
(declare-fun temp1078_78 () (_ BitVec 64))
(declare-fun temp1078_79 () (_ BitVec 64))
(declare-fun temp1078_80 () (_ BitVec 64))
(declare-fun temp1078_81 () (_ BitVec 64))
(declare-fun temp1078_82 () (_ BitVec 64))
(declare-fun temp1078_83 () (_ BitVec 64))
(declare-fun temp1078_84 () (_ BitVec 64))
(declare-fun temp1078_85 () (_ BitVec 64))
(declare-fun temp1078_86 () (_ BitVec 64))
(declare-fun temp1078_87 () (_ BitVec 64))
(declare-fun temp1078_88 () (_ BitVec 64))
(declare-fun temp1078_89 () (_ BitVec 64))
(declare-fun temp1078_90 () (_ BitVec 64))
(declare-fun temp1078_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp1078_92 () (_ BitVec 64))
(declare-fun temp1078_93 () (_ BitVec 64))
(declare-fun temp1078_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1078_95 () (_ BitVec 64))
(declare-fun temp1078_96 () (_ BitVec 64))
(declare-fun temp1078_97 () (_ BitVec 64))
(declare-fun temp1078_98 () (_ BitVec 64))
(declare-fun temp1078_99 () (_ BitVec 64))
(declare-fun temp1078_100 () (_ BitVec 64))
(declare-fun temp1078_101 () (_ BitVec 64))
(declare-fun temp1078_102 () (_ BitVec 64))
(declare-fun temp1078_103 () (_ BitVec 64))
(declare-fun temp1078_104 () (_ BitVec 64))
(declare-fun temp1078_105 () (_ BitVec 64))
(declare-fun temp1078_106 () (_ BitVec 64))
(declare-fun temp1078_107 () (_ BitVec 64))
(declare-fun temp1078_108 () (_ BitVec 64))
(declare-fun temp1078_109 () (_ BitVec 64))
(declare-fun temp1078_110 () (_ BitVec 64))
(declare-fun temp1078_111 () (_ BitVec 64))
(declare-fun temp1078_112 () (_ BitVec 64))
(declare-fun temp1078_113 () (_ BitVec 64))
(declare-fun temp1078_114 () (_ BitVec 64))
(declare-fun temp1078_115 () (_ BitVec 64))
(declare-fun temp1078_116 () (_ BitVec 64))
(declare-fun temp1078_117 () (_ BitVec 64))
(declare-fun temp1078_118 () (_ BitVec 64))
(declare-fun temp1078_119 () (_ BitVec 64))
(declare-fun temp1078_120 () (_ BitVec 64))
(declare-fun temp1078_121 () (_ BitVec 64))
(declare-fun temp1078_122 () (_ BitVec 64))
(declare-fun temp1078_123 () (_ BitVec 64))
(declare-fun temp1078_124 () (_ BitVec 64))
(declare-fun temp1078_125 () (_ BitVec 64))
(declare-fun temp1078_126 () (_ BitVec 64))
(declare-fun temp1078_127 () (_ BitVec 64))
(declare-fun temp1078_128 () (_ BitVec 64))
(declare-fun temp1078_129 () (_ BitVec 64))
(declare-fun temp1078_130 () (_ BitVec 64))
(declare-fun temp1078_131 () (_ BitVec 64))
(declare-fun temp1078_132 () (_ BitVec 64))
(declare-fun temp1078_133 () (_ BitVec 64))
(declare-fun temp1078_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp1078_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp1078_136 () (_ BitVec 64))
(declare-fun temp1078_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp1078_138 () (_ BitVec 64))
(declare-fun temp1078_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1078_140 () (_ BitVec 64))
(declare-fun temp1078_141 () (_ BitVec 64))
(declare-fun temp1078_142 () (_ BitVec 64))
(declare-fun temp1078_143 () (_ BitVec 64))
(declare-fun temp1078_144 () (_ BitVec 64))
(declare-fun temp1078_145 () (_ BitVec 64))
(declare-fun temp1078_146 () (_ BitVec 64))
(declare-fun temp1078_147 () (_ BitVec 64))
(declare-fun temp1078_148 () (_ BitVec 64))
(declare-fun temp1078_149 () (_ BitVec 64))
(declare-fun temp1078_150 () (_ BitVec 64))
(declare-fun temp1078_151 () (_ BitVec 64))
(declare-fun temp1078_152 () (_ BitVec 64))
(declare-fun temp1078_153 () (_ BitVec 64))
(declare-fun temp1078_154 () (_ BitVec 64))
(declare-fun temp1078_155 () (_ BitVec 64))
(declare-fun temp1078_157 () (_ BitVec 64))
(declare-fun temp1078_158 () (_ BitVec 64))
(declare-fun temp1078_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp1078_159 () (_ BitVec 64))
(declare-fun temp1078_160 () (_ BitVec 64))
(declare-fun temp1078_162 () (_ BitVec 64))
(declare-fun temp1078_163 () (_ BitVec 64))
(declare-fun temp1078_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp1078_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp1078_165 () (_ BitVec 64))
(declare-fun temp1078_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp1078_167 () (_ BitVec 64))
(declare-fun temp1078_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp1078_169 () (_ BitVec 64))
(declare-fun temp1078_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1078_171 () (_ BitVec 64))
(declare-fun temp1078_172 () (_ BitVec 64))
(declare-fun temp1078_173 () (_ BitVec 64))
(declare-fun temp1078_174 () (_ BitVec 64))
(declare-fun temp1078_175 () (_ BitVec 64))
(declare-fun temp1078_176 () (_ BitVec 64))
(declare-fun temp1078_177 () (_ BitVec 64))
(declare-fun temp1078_178 () (_ BitVec 64))
(declare-fun temp1078_179 () (_ BitVec 64))
(declare-fun temp1078_180 () (_ BitVec 64))
(declare-fun temp1078_181 () (_ BitVec 64))
(declare-fun temp1078_182 () (_ BitVec 64))
(declare-fun temp1078_183 () (_ BitVec 64))
(declare-fun temp1078_184 () (_ BitVec 64))
(declare-fun temp1078_185 () (_ BitVec 64))
(declare-fun temp1078_186 () (_ BitVec 64))
(declare-fun temp1078_187 () (_ BitVec 64))
(declare-fun temp1078_188 () (_ BitVec 64))
(declare-fun temp1078_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp1078_190 () (_ BitVec 64))
(declare-fun temp1078_192 () (_ BitVec 64))
(declare-fun temp1078_193 () (_ BitVec 64))
(declare-fun temp1078_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp1078_194 () (_ BitVec 64))
(declare-fun temp1078_195 () (_ BitVec 64))
(declare-fun temp1078_197 () (_ BitVec 64))
(declare-fun temp1078_198 () (_ BitVec 64))
(declare-fun temp1078_196 () (_ BitVec 64))
(declare-fun temp1078_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp1078_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp1078_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp1078_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp1078_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp1078_204 () (_ BitVec 64))
(declare-fun temp1078_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp1078_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp1078_207 () (_ BitVec 64))
(declare-fun temp1078_208 () (_ BitVec 64))
(declare-fun temp1078_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp1078_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp1078_211 () (_ BitVec 64))
(declare-fun temp1078_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp1078_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp1078_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4469136 () (_ BitVec 64))
(declare-fun var4731280 () (_ BitVec 64))
(declare-fun temp1078_215 () (_ BitVec 64))
(declare-fun var212414 () (_ BitVec 64))
(declare-fun temp1078_216 () (_ BitVec 64))
(declare-fun temp1078_217 () (_ BitVec 64))
(declare-fun var5060227 () (_ BitVec 64))
(declare-fun var5060229 () (_ BitVec 64))
(declare-fun var5125772 () (_ BitVec 64))
(declare-fun var5125773 () (_ BitVec 64))
(declare-fun temp1078_218 () (_ BitVec 64))
(assert (= temp1078_1 #x0000000000000001))
(assert (= var77203 temp1078_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp1078_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp1078_2)))
(assert (= temp1078_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1078_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1078_4 #x0000000000000000))
(assert (= var210941 temp1078_4))
(assert (= temp1078_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp1078_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1078_6 #x0000000000000000))
(assert (= var210986 temp1078_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp1078_7 #x0000000000000000))
(assert (= temp1078_8 temp1078_7))
(assert (= temp1078_9 (select ARGNAME_padding_NAMEEND_VAL temp1078_8)))
(assert (= temp1078_10 #x0000000000000001))
(assert (= temp1078_11 temp1078_10))
(assert (= temp1078_12 (select ARGNAME_padding_NAMEEND_VAL temp1078_11)))
(assert (= temp1078_13 #x0000000000000002))
(assert (= temp1078_14 temp1078_13))
(assert (= temp1078_15 (select ARGNAME_padding_NAMEEND_VAL temp1078_14)))
(assert (= temp1078_16 #x0000000000000003))
(assert (= temp1078_17 temp1078_16))
(assert (= temp1078_18 (select ARGNAME_padding_NAMEEND_VAL temp1078_17)))
(assert (= temp1078_19 #x0000000000000004))
(assert (= temp1078_20 temp1078_19))
(assert (= temp1078_21 (select ARGNAME_padding_NAMEEND_VAL temp1078_20)))
(assert (= temp1078_22 #x0000000000000005))
(assert (= temp1078_23 temp1078_22))
(assert (= temp1078_24 (select ARGNAME_padding_NAMEEND_VAL temp1078_23)))
(assert (= temp1078_25 #x0000000000000000))
(assert (= temp1078_26 #x0000000000000000))
(assert (= temp1078_27 temp1078_26))
(assert (= temp1078_28 (select ARGNAME_padding_NAMEEND_VAL temp1078_27)))
(assert (= temp1078_29 #x0000000000000000))
(assert (= temp1078_30 #x0000000000000001))
(assert (= temp1078_31 temp1078_30))
(assert (= temp1078_32 (select ARGNAME_padding_NAMEEND_VAL temp1078_31)))
(assert (= temp1078_33 #x0000000000000000))
(assert (= temp1078_34 #x0000000000000002))
(assert (= temp1078_35 temp1078_34))
(assert (= temp1078_36 (select ARGNAME_padding_NAMEEND_VAL temp1078_35)))
(assert (= temp1078_37 #x0000000000000000))
(assert (= temp1078_38 #x0000000000000003))
(assert (= temp1078_39 temp1078_38))
(assert (= temp1078_40 (select ARGNAME_padding_NAMEEND_VAL temp1078_39)))
(assert (= temp1078_41 #x0000000000000000))
(assert (= temp1078_42 #x0000000000000004))
(assert (= temp1078_43 temp1078_42))
(assert (= temp1078_44 (select ARGNAME_padding_NAMEEND_VAL temp1078_43)))
(assert (= temp1078_45 #x0000000000000000))
(assert (= temp1078_46 #x0000000000000005))
(assert (= temp1078_47 temp1078_46))
(assert (= temp1078_48 (select ARGNAME_padding_NAMEEND_VAL temp1078_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp1078_28 temp1078_25)
             (bvslt temp1078_32 temp1078_29)
             (bvslt temp1078_36 temp1078_33)
             (bvslt temp1078_40 temp1078_37)
             (bvslt temp1078_44 temp1078_41)
             (bvslt temp1078_48 temp1078_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1078_49 #x0000000000000000))
(assert (= var1191714 temp1078_49))
(assert (= temp1078_50 #x0000000000000000))
(assert (= temp1078_51 temp1078_50))
(assert (= temp1078_52 (select ARGNAME_output_padding_NAMEEND_VAL temp1078_51)))
(assert (= temp1078_53 #x0000000000000001))
(assert (= temp1078_54 temp1078_53))
(assert (= temp1078_55 (select ARGNAME_output_padding_NAMEEND_VAL temp1078_54)))
(assert (= temp1078_56 #x0000000000000002))
(assert (= temp1078_57 temp1078_56))
(assert (= temp1078_58 (select ARGNAME_output_padding_NAMEEND_VAL temp1078_57)))
(assert (= temp1078_59 #x0000000000000003))
(assert (= temp1078_60 temp1078_59))
(assert (= temp1078_61 (select ARGNAME_output_padding_NAMEEND_VAL temp1078_60)))
(assert (= temp1078_62 #x0000000000000004))
(assert (= temp1078_63 temp1078_62))
(assert (= temp1078_64 (select ARGNAME_output_padding_NAMEEND_VAL temp1078_63)))
(assert (= temp1078_65 #x0000000000000005))
(assert (= temp1078_66 temp1078_65))
(assert (= temp1078_67 (select ARGNAME_output_padding_NAMEEND_VAL temp1078_66)))
(assert (= temp1078_68 #x0000000000000000))
(assert (= temp1078_69 #x0000000000000000))
(assert (= temp1078_70 temp1078_69))
(assert (= temp1078_71 (select ARGNAME_output_padding_NAMEEND_VAL temp1078_70)))
(assert (= temp1078_72 #x0000000000000000))
(assert (= temp1078_73 #x0000000000000001))
(assert (= temp1078_74 temp1078_73))
(assert (= temp1078_75 (select ARGNAME_output_padding_NAMEEND_VAL temp1078_74)))
(assert (= temp1078_76 #x0000000000000000))
(assert (= temp1078_77 #x0000000000000002))
(assert (= temp1078_78 temp1078_77))
(assert (= temp1078_79 (select ARGNAME_output_padding_NAMEEND_VAL temp1078_78)))
(assert (= temp1078_80 #x0000000000000000))
(assert (= temp1078_81 #x0000000000000003))
(assert (= temp1078_82 temp1078_81))
(assert (= temp1078_83 (select ARGNAME_output_padding_NAMEEND_VAL temp1078_82)))
(assert (= temp1078_84 #x0000000000000000))
(assert (= temp1078_85 #x0000000000000004))
(assert (= temp1078_86 temp1078_85))
(assert (= temp1078_87 (select ARGNAME_output_padding_NAMEEND_VAL temp1078_86)))
(assert (= temp1078_88 #x0000000000000000))
(assert (= temp1078_89 #x0000000000000005))
(assert (= temp1078_90 temp1078_89))
(assert (= temp1078_91 (select ARGNAME_output_padding_NAMEEND_VAL temp1078_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp1078_71 temp1078_68)
             (bvslt temp1078_75 temp1078_72)
             (bvslt temp1078_79 temp1078_76)
             (bvslt temp1078_83 temp1078_80)
             (bvslt temp1078_87 temp1078_84)
             (bvslt temp1078_91 temp1078_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1078_92 #x0000000000000000))
(assert (= var1191725 temp1078_92))
(assert (= temp1078_93 #x0000000000000000))
(assert (= temp1078_94 temp1078_93))
(assert (= temp1078_95 (select ARGNAME_stride_NAMEEND_VAL temp1078_94)))
(assert (= temp1078_96 #x0000000000000001))
(assert (= temp1078_97 temp1078_96))
(assert (= temp1078_98 (select ARGNAME_stride_NAMEEND_VAL temp1078_97)))
(assert (= temp1078_99 #x0000000000000002))
(assert (= temp1078_100 temp1078_99))
(assert (= temp1078_101 (select ARGNAME_stride_NAMEEND_VAL temp1078_100)))
(assert (= temp1078_102 #x0000000000000003))
(assert (= temp1078_103 temp1078_102))
(assert (= temp1078_104 (select ARGNAME_stride_NAMEEND_VAL temp1078_103)))
(assert (= temp1078_105 #x0000000000000004))
(assert (= temp1078_106 temp1078_105))
(assert (= temp1078_107 (select ARGNAME_stride_NAMEEND_VAL temp1078_106)))
(assert (= temp1078_108 #x0000000000000005))
(assert (= temp1078_109 temp1078_108))
(assert (= temp1078_110 (select ARGNAME_stride_NAMEEND_VAL temp1078_109)))
(assert (= temp1078_111 #x0000000000000000))
(assert (= temp1078_112 #x0000000000000000))
(assert (= temp1078_113 temp1078_112))
(assert (= temp1078_114 (select ARGNAME_stride_NAMEEND_VAL temp1078_113)))
(assert (= temp1078_115 #x0000000000000000))
(assert (= temp1078_116 #x0000000000000001))
(assert (= temp1078_117 temp1078_116))
(assert (= temp1078_118 (select ARGNAME_stride_NAMEEND_VAL temp1078_117)))
(assert (= temp1078_119 #x0000000000000000))
(assert (= temp1078_120 #x0000000000000002))
(assert (= temp1078_121 temp1078_120))
(assert (= temp1078_122 (select ARGNAME_stride_NAMEEND_VAL temp1078_121)))
(assert (= temp1078_123 #x0000000000000000))
(assert (= temp1078_124 #x0000000000000003))
(assert (= temp1078_125 temp1078_124))
(assert (= temp1078_126 (select ARGNAME_stride_NAMEEND_VAL temp1078_125)))
(assert (= temp1078_127 #x0000000000000000))
(assert (= temp1078_128 #x0000000000000004))
(assert (= temp1078_129 temp1078_128))
(assert (= temp1078_130 (select ARGNAME_stride_NAMEEND_VAL temp1078_129)))
(assert (= temp1078_131 #x0000000000000000))
(assert (= temp1078_132 #x0000000000000005))
(assert (= temp1078_133 temp1078_132))
(assert (= temp1078_134 (select ARGNAME_stride_NAMEEND_VAL temp1078_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp1078_114 temp1078_111)
             (bvsle temp1078_118 temp1078_115)
             (bvsle temp1078_122 temp1078_119)
             (bvsle temp1078_126 temp1078_123)
             (bvsle temp1078_130 temp1078_127)
             (bvsle temp1078_134 temp1078_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1078_135 #x0000000000000000))
(assert (= var1191735 temp1078_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1078_136 #x0000000000000001))
(assert (= var1191747 temp1078_136))
(assert (= temp1078_137 #x0000000000000000))
(assert (= var1179826 temp1078_137))
(assert (= temp1078_138 #x0000000000000000))
(assert (= temp1078_139 temp1078_138))
(assert (= temp1078_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1078_139)))
(assert (= temp1078_141 #x0000000000000001))
(assert (= temp1078_142 temp1078_141))
(assert (= temp1078_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1078_142)))
(assert (= temp1078_144 #x0000000000000002))
(assert (= temp1078_145 temp1078_144))
(assert (= temp1078_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1078_145)))
(assert (= temp1078_147 #x0000000000000003))
(assert (= temp1078_148 temp1078_147))
(assert (= temp1078_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1078_148)))
(assert (= temp1078_150 #x0000000000000004))
(assert (= temp1078_151 temp1078_150))
(assert (= temp1078_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1078_151)))
(assert (= temp1078_153 #x0000000000000005))
(assert (= temp1078_154 temp1078_153))
(assert (= temp1078_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1078_154)))
(assert (= temp1078_157 var1179826))
(assert (= temp1078_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1078_157)))
(assert (= temp1078_156 temp1078_158))
(assert (= var1191780
   (ite (bvslt temp1078_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1078_159 #x0000000000000000))
(assert (= var1191780 temp1078_159))
(assert (= temp1078_160 #x0000000000000000))
(assert (= var1179826 temp1078_160))
(assert (= temp1078_162 var1179826))
(assert (= temp1078_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1078_162)))
(assert (= temp1078_161 temp1078_163))
(assert (= var1191802 (bvsmod temp1078_161 ARGNAME_groups_NAMEEND)))
(assert (= temp1078_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp1078_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp1078_165 #x0000000000000001))
(assert (= var1191803 temp1078_165))
(assert (= temp1078_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp1078_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1078_167 #x0000000000000001))
(assert (= var1191823 temp1078_167))
(assert (= temp1078_168 #x0000000000000001))
(assert (= var1180714 temp1078_168))
(assert (= temp1078_169 #x0000000000000000))
(assert (= temp1078_170 temp1078_169))
(assert (= temp1078_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp1078_170)))
(assert (= temp1078_172 #x0000000000000001))
(assert (= temp1078_173 temp1078_172))
(assert (= temp1078_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp1078_173)))
(assert (= temp1078_175 #x0000000000000002))
(assert (= temp1078_176 temp1078_175))
(assert (= temp1078_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp1078_176)))
(assert (= temp1078_178 #x0000000000000003))
(assert (= temp1078_179 temp1078_178))
(assert (= temp1078_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp1078_179)))
(assert (= temp1078_181 #x0000000000000004))
(assert (= temp1078_182 temp1078_181))
(assert (= temp1078_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp1078_182)))
(assert (= temp1078_184 #x0000000000000005))
(assert (= temp1078_185 temp1078_184))
(assert (= temp1078_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp1078_185)))
(assert (= temp1078_187 #x0000000000000000))
(assert (= temp1078_188
   (ite (bvslt var1180714 temp1078_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp1078_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp1078_188)))
(assert (= var1191831 temp1078_189))
(assert (bvslt (ite (bvslt var1180714 temp1078_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1078_190 #x0000000000000001))
(assert (= var1180714 temp1078_190))
(assert (= temp1078_192 var1180714))
(assert (= temp1078_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1078_192)))
(assert (= temp1078_191 temp1078_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp1078_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp1078_194 #x0000000000000001))
(assert (= var1191836 temp1078_194))
(assert (= temp1078_195 #x0000000000000000))
(assert (= var1179826 temp1078_195))
(assert (= temp1078_197 var1179826))
(assert (= temp1078_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1078_197)))
(assert (= temp1078_196 temp1078_198))
(assert (= temp1078_199 #x0000000000000002))
(assert (= var1586025 temp1078_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp1078_200 #x0000000000000001))
(assert (= var1191993 temp1078_200))
(assert (= temp1078_201 #x0000000000000001))
(assert (= var2700303 temp1078_201))
(assert (= temp1078_202 #x0000000000000001))
(assert (= var2962447 temp1078_202))
(assert (= temp1078_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1078_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1078_204 #x0000000000000001))
(assert (= var211058 temp1078_204))
(assert (= temp1078_205 #x0000000000000001))
(assert (= var211188 temp1078_205))
(assert (= var3879401 var211188))
(assert (= temp1078_206 #x0000000000000000))
(assert (= var3866802 temp1078_206))
(assert (= temp1078_207 #x0000000000000000))
(assert (= temp1078_208
   (ite (bvslt var3866802 temp1078_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp1078_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp1078_208)))
(assert (= var3879420 temp1078_209))
(assert (bvslt (ite (bvslt var3866802 temp1078_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1078_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp1078_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp1078_211 #x0000000000000001))
(assert (= var3879421 temp1078_211))
(assert (= temp1078_212 #x0000000000000000))
(assert (= var4079423 temp1078_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp1078_213 #x0000000000000002))
(assert (= var4208259 temp1078_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1078_214 #x0000000000000000))
(assert (= var4273820 temp1078_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4469136 var211201))
(assert (= var4731280 var211201))
(assert (= temp1078_215 #x0000000000000001))
(assert (= var212414
   (ite (= ARGNAME_groups_NAMEEND temp1078_215)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1078_216 #x0000000000000001))
(assert (= var212414 temp1078_216))
(assert (= temp1078_217 #x0000000000000002))
(assert (= var5060227 temp1078_217))
(assert (= var5060229 (bvsub ARGNAME_weight_NAMEEND_DIM var5060227)))
(assert (= var5125772 var5060227))
(assert (= var5125773 var5060229))
(assert (= temp1078_218 #x0000000000000001))
(assert (= var211058 temp1078_218))
(model-add temp1078_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp1078_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1078_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp1078_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





