(declare-fun temp645_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp645_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp645_3 () (_ BitVec 64))
(declare-fun temp645_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp645_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp645_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp645_7 () (_ BitVec 64))
(declare-fun temp645_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp645_9 () (_ BitVec 64))
(declare-fun temp645_10 () (_ BitVec 64))
(declare-fun temp645_11 () (_ BitVec 64))
(declare-fun temp645_12 () (_ BitVec 64))
(declare-fun temp645_13 () (_ BitVec 64))
(declare-fun temp645_14 () (_ BitVec 64))
(declare-fun temp645_15 () (_ BitVec 64))
(declare-fun temp645_16 () (_ BitVec 64))
(declare-fun temp645_17 () (_ BitVec 64))
(declare-fun temp645_18 () (_ BitVec 64))
(declare-fun temp645_19 () (_ BitVec 64))
(declare-fun temp645_20 () (_ BitVec 64))
(declare-fun temp645_21 () (_ BitVec 64))
(declare-fun temp645_22 () (_ BitVec 64))
(declare-fun temp645_23 () (_ BitVec 64))
(declare-fun temp645_24 () (_ BitVec 64))
(declare-fun temp645_25 () (_ BitVec 64))
(declare-fun temp645_26 () (_ BitVec 64))
(declare-fun temp645_27 () (_ BitVec 64))
(declare-fun temp645_28 () (_ BitVec 64))
(declare-fun temp645_29 () (_ BitVec 64))
(declare-fun temp645_30 () (_ BitVec 64))
(declare-fun temp645_31 () (_ BitVec 64))
(declare-fun temp645_32 () (_ BitVec 64))
(declare-fun temp645_33 () (_ BitVec 64))
(declare-fun temp645_34 () (_ BitVec 64))
(declare-fun temp645_35 () (_ BitVec 64))
(declare-fun temp645_36 () (_ BitVec 64))
(declare-fun temp645_37 () (_ BitVec 64))
(declare-fun temp645_38 () (_ BitVec 64))
(declare-fun temp645_39 () (_ BitVec 64))
(declare-fun temp645_40 () (_ BitVec 64))
(declare-fun temp645_41 () (_ BitVec 64))
(declare-fun temp645_42 () (_ BitVec 64))
(declare-fun temp645_43 () (_ BitVec 64))
(declare-fun temp645_44 () (_ BitVec 64))
(declare-fun temp645_45 () (_ BitVec 64))
(declare-fun temp645_46 () (_ BitVec 64))
(declare-fun temp645_47 () (_ BitVec 64))
(declare-fun temp645_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp645_49 () (_ BitVec 64))
(declare-fun temp645_50 () (_ BitVec 64))
(declare-fun temp645_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp645_52 () (_ BitVec 64))
(declare-fun temp645_53 () (_ BitVec 64))
(declare-fun temp645_54 () (_ BitVec 64))
(declare-fun temp645_55 () (_ BitVec 64))
(declare-fun temp645_56 () (_ BitVec 64))
(declare-fun temp645_57 () (_ BitVec 64))
(declare-fun temp645_58 () (_ BitVec 64))
(declare-fun temp645_59 () (_ BitVec 64))
(declare-fun temp645_60 () (_ BitVec 64))
(declare-fun temp645_61 () (_ BitVec 64))
(declare-fun temp645_62 () (_ BitVec 64))
(declare-fun temp645_63 () (_ BitVec 64))
(declare-fun temp645_64 () (_ BitVec 64))
(declare-fun temp645_65 () (_ BitVec 64))
(declare-fun temp645_66 () (_ BitVec 64))
(declare-fun temp645_67 () (_ BitVec 64))
(declare-fun temp645_68 () (_ BitVec 64))
(declare-fun temp645_69 () (_ BitVec 64))
(declare-fun temp645_70 () (_ BitVec 64))
(declare-fun temp645_71 () (_ BitVec 64))
(declare-fun temp645_72 () (_ BitVec 64))
(declare-fun temp645_73 () (_ BitVec 64))
(declare-fun temp645_74 () (_ BitVec 64))
(declare-fun temp645_75 () (_ BitVec 64))
(declare-fun temp645_76 () (_ BitVec 64))
(declare-fun temp645_77 () (_ BitVec 64))
(declare-fun temp645_78 () (_ BitVec 64))
(declare-fun temp645_79 () (_ BitVec 64))
(declare-fun temp645_80 () (_ BitVec 64))
(declare-fun temp645_81 () (_ BitVec 64))
(declare-fun temp645_82 () (_ BitVec 64))
(declare-fun temp645_83 () (_ BitVec 64))
(declare-fun temp645_84 () (_ BitVec 64))
(declare-fun temp645_85 () (_ BitVec 64))
(declare-fun temp645_86 () (_ BitVec 64))
(declare-fun temp645_87 () (_ BitVec 64))
(declare-fun temp645_88 () (_ BitVec 64))
(declare-fun temp645_89 () (_ BitVec 64))
(declare-fun temp645_90 () (_ BitVec 64))
(declare-fun temp645_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp645_92 () (_ BitVec 64))
(declare-fun temp645_93 () (_ BitVec 64))
(declare-fun temp645_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp645_95 () (_ BitVec 64))
(declare-fun temp645_96 () (_ BitVec 64))
(declare-fun temp645_97 () (_ BitVec 64))
(declare-fun temp645_98 () (_ BitVec 64))
(declare-fun temp645_99 () (_ BitVec 64))
(declare-fun temp645_100 () (_ BitVec 64))
(declare-fun temp645_101 () (_ BitVec 64))
(declare-fun temp645_102 () (_ BitVec 64))
(declare-fun temp645_103 () (_ BitVec 64))
(declare-fun temp645_104 () (_ BitVec 64))
(declare-fun temp645_105 () (_ BitVec 64))
(declare-fun temp645_106 () (_ BitVec 64))
(declare-fun temp645_107 () (_ BitVec 64))
(declare-fun temp645_108 () (_ BitVec 64))
(declare-fun temp645_109 () (_ BitVec 64))
(declare-fun temp645_110 () (_ BitVec 64))
(declare-fun temp645_111 () (_ BitVec 64))
(declare-fun temp645_112 () (_ BitVec 64))
(declare-fun temp645_113 () (_ BitVec 64))
(declare-fun temp645_114 () (_ BitVec 64))
(declare-fun temp645_115 () (_ BitVec 64))
(declare-fun temp645_116 () (_ BitVec 64))
(declare-fun temp645_117 () (_ BitVec 64))
(declare-fun temp645_118 () (_ BitVec 64))
(declare-fun temp645_119 () (_ BitVec 64))
(declare-fun temp645_120 () (_ BitVec 64))
(declare-fun temp645_121 () (_ BitVec 64))
(declare-fun temp645_122 () (_ BitVec 64))
(declare-fun temp645_123 () (_ BitVec 64))
(declare-fun temp645_124 () (_ BitVec 64))
(declare-fun temp645_125 () (_ BitVec 64))
(declare-fun temp645_126 () (_ BitVec 64))
(declare-fun temp645_127 () (_ BitVec 64))
(declare-fun temp645_128 () (_ BitVec 64))
(declare-fun temp645_129 () (_ BitVec 64))
(declare-fun temp645_130 () (_ BitVec 64))
(declare-fun temp645_131 () (_ BitVec 64))
(declare-fun temp645_132 () (_ BitVec 64))
(declare-fun temp645_133 () (_ BitVec 64))
(declare-fun temp645_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp645_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp645_136 () (_ BitVec 64))
(declare-fun temp645_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp645_138 () (_ BitVec 64))
(declare-fun temp645_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp645_140 () (_ BitVec 64))
(declare-fun temp645_141 () (_ BitVec 64))
(declare-fun temp645_142 () (_ BitVec 64))
(declare-fun temp645_143 () (_ BitVec 64))
(declare-fun temp645_144 () (_ BitVec 64))
(declare-fun temp645_145 () (_ BitVec 64))
(declare-fun temp645_146 () (_ BitVec 64))
(declare-fun temp645_147 () (_ BitVec 64))
(declare-fun temp645_148 () (_ BitVec 64))
(declare-fun temp645_149 () (_ BitVec 64))
(declare-fun temp645_150 () (_ BitVec 64))
(declare-fun temp645_151 () (_ BitVec 64))
(declare-fun temp645_152 () (_ BitVec 64))
(declare-fun temp645_153 () (_ BitVec 64))
(declare-fun temp645_154 () (_ BitVec 64))
(declare-fun temp645_155 () (_ BitVec 64))
(declare-fun temp645_157 () (_ BitVec 64))
(declare-fun temp645_158 () (_ BitVec 64))
(declare-fun temp645_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp645_159 () (_ BitVec 64))
(declare-fun temp645_160 () (_ BitVec 64))
(declare-fun temp645_162 () (_ BitVec 64))
(declare-fun temp645_163 () (_ BitVec 64))
(declare-fun temp645_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp645_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp645_165 () (_ BitVec 64))
(declare-fun temp645_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp645_167 () (_ BitVec 64))
(declare-fun temp645_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp645_169 () (_ BitVec 64))
(declare-fun temp645_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp645_171 () (_ BitVec 64))
(declare-fun temp645_172 () (_ BitVec 64))
(declare-fun temp645_173 () (_ BitVec 64))
(declare-fun temp645_174 () (_ BitVec 64))
(declare-fun temp645_175 () (_ BitVec 64))
(declare-fun temp645_176 () (_ BitVec 64))
(declare-fun temp645_177 () (_ BitVec 64))
(declare-fun temp645_178 () (_ BitVec 64))
(declare-fun temp645_179 () (_ BitVec 64))
(declare-fun temp645_180 () (_ BitVec 64))
(declare-fun temp645_181 () (_ BitVec 64))
(declare-fun temp645_182 () (_ BitVec 64))
(declare-fun temp645_183 () (_ BitVec 64))
(declare-fun temp645_184 () (_ BitVec 64))
(declare-fun temp645_185 () (_ BitVec 64))
(declare-fun temp645_186 () (_ BitVec 64))
(declare-fun temp645_187 () (_ BitVec 64))
(declare-fun temp645_188 () (_ BitVec 64))
(declare-fun temp645_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp645_190 () (_ BitVec 64))
(declare-fun temp645_192 () (_ BitVec 64))
(declare-fun temp645_193 () (_ BitVec 64))
(declare-fun temp645_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp645_194 () (_ BitVec 64))
(declare-fun temp645_195 () (_ BitVec 64))
(declare-fun temp645_197 () (_ BitVec 64))
(declare-fun temp645_198 () (_ BitVec 64))
(declare-fun temp645_196 () (_ BitVec 64))
(declare-fun temp645_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp645_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp645_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp645_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp645_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp645_204 () (_ BitVec 64))
(declare-fun temp645_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp645_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp645_207 () (_ BitVec 64))
(declare-fun temp645_208 () (_ BitVec 64))
(declare-fun temp645_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp645_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp645_211 () (_ BitVec 64))
(declare-fun temp645_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp645_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp645_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4993424 () (_ BitVec 64))
(declare-fun var211494 () (_ BitVec 64))
(declare-fun temp645_215 () (_ BitVec 64))
(declare-fun var211495 () (_ BitVec 64))
(declare-fun temp645_216 () (_ BitVec 64))
(assert (= temp645_1 #x0000000000000001))
(assert (= var77203 temp645_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp645_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp645_2)))
(assert (= temp645_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp645_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp645_4 #x0000000000000000))
(assert (= var210941 temp645_4))
(assert (= temp645_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp645_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp645_6 #x0000000000000000))
(assert (= var210986 temp645_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp645_7 #x0000000000000000))
(assert (= temp645_8 temp645_7))
(assert (= temp645_9 (select ARGNAME_padding_NAMEEND_VAL temp645_8)))
(assert (= temp645_10 #x0000000000000001))
(assert (= temp645_11 temp645_10))
(assert (= temp645_12 (select ARGNAME_padding_NAMEEND_VAL temp645_11)))
(assert (= temp645_13 #x0000000000000002))
(assert (= temp645_14 temp645_13))
(assert (= temp645_15 (select ARGNAME_padding_NAMEEND_VAL temp645_14)))
(assert (= temp645_16 #x0000000000000003))
(assert (= temp645_17 temp645_16))
(assert (= temp645_18 (select ARGNAME_padding_NAMEEND_VAL temp645_17)))
(assert (= temp645_19 #x0000000000000004))
(assert (= temp645_20 temp645_19))
(assert (= temp645_21 (select ARGNAME_padding_NAMEEND_VAL temp645_20)))
(assert (= temp645_22 #x0000000000000005))
(assert (= temp645_23 temp645_22))
(assert (= temp645_24 (select ARGNAME_padding_NAMEEND_VAL temp645_23)))
(assert (= temp645_25 #x0000000000000000))
(assert (= temp645_26 #x0000000000000000))
(assert (= temp645_27 temp645_26))
(assert (= temp645_28 (select ARGNAME_padding_NAMEEND_VAL temp645_27)))
(assert (= temp645_29 #x0000000000000000))
(assert (= temp645_30 #x0000000000000001))
(assert (= temp645_31 temp645_30))
(assert (= temp645_32 (select ARGNAME_padding_NAMEEND_VAL temp645_31)))
(assert (= temp645_33 #x0000000000000000))
(assert (= temp645_34 #x0000000000000002))
(assert (= temp645_35 temp645_34))
(assert (= temp645_36 (select ARGNAME_padding_NAMEEND_VAL temp645_35)))
(assert (= temp645_37 #x0000000000000000))
(assert (= temp645_38 #x0000000000000003))
(assert (= temp645_39 temp645_38))
(assert (= temp645_40 (select ARGNAME_padding_NAMEEND_VAL temp645_39)))
(assert (= temp645_41 #x0000000000000000))
(assert (= temp645_42 #x0000000000000004))
(assert (= temp645_43 temp645_42))
(assert (= temp645_44 (select ARGNAME_padding_NAMEEND_VAL temp645_43)))
(assert (= temp645_45 #x0000000000000000))
(assert (= temp645_46 #x0000000000000005))
(assert (= temp645_47 temp645_46))
(assert (= temp645_48 (select ARGNAME_padding_NAMEEND_VAL temp645_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp645_28 temp645_25)
             (bvslt temp645_32 temp645_29)
             (bvslt temp645_36 temp645_33)
             (bvslt temp645_40 temp645_37)
             (bvslt temp645_44 temp645_41)
             (bvslt temp645_48 temp645_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp645_49 #x0000000000000000))
(assert (= var1191714 temp645_49))
(assert (= temp645_50 #x0000000000000000))
(assert (= temp645_51 temp645_50))
(assert (= temp645_52 (select ARGNAME_output_padding_NAMEEND_VAL temp645_51)))
(assert (= temp645_53 #x0000000000000001))
(assert (= temp645_54 temp645_53))
(assert (= temp645_55 (select ARGNAME_output_padding_NAMEEND_VAL temp645_54)))
(assert (= temp645_56 #x0000000000000002))
(assert (= temp645_57 temp645_56))
(assert (= temp645_58 (select ARGNAME_output_padding_NAMEEND_VAL temp645_57)))
(assert (= temp645_59 #x0000000000000003))
(assert (= temp645_60 temp645_59))
(assert (= temp645_61 (select ARGNAME_output_padding_NAMEEND_VAL temp645_60)))
(assert (= temp645_62 #x0000000000000004))
(assert (= temp645_63 temp645_62))
(assert (= temp645_64 (select ARGNAME_output_padding_NAMEEND_VAL temp645_63)))
(assert (= temp645_65 #x0000000000000005))
(assert (= temp645_66 temp645_65))
(assert (= temp645_67 (select ARGNAME_output_padding_NAMEEND_VAL temp645_66)))
(assert (= temp645_68 #x0000000000000000))
(assert (= temp645_69 #x0000000000000000))
(assert (= temp645_70 temp645_69))
(assert (= temp645_71 (select ARGNAME_output_padding_NAMEEND_VAL temp645_70)))
(assert (= temp645_72 #x0000000000000000))
(assert (= temp645_73 #x0000000000000001))
(assert (= temp645_74 temp645_73))
(assert (= temp645_75 (select ARGNAME_output_padding_NAMEEND_VAL temp645_74)))
(assert (= temp645_76 #x0000000000000000))
(assert (= temp645_77 #x0000000000000002))
(assert (= temp645_78 temp645_77))
(assert (= temp645_79 (select ARGNAME_output_padding_NAMEEND_VAL temp645_78)))
(assert (= temp645_80 #x0000000000000000))
(assert (= temp645_81 #x0000000000000003))
(assert (= temp645_82 temp645_81))
(assert (= temp645_83 (select ARGNAME_output_padding_NAMEEND_VAL temp645_82)))
(assert (= temp645_84 #x0000000000000000))
(assert (= temp645_85 #x0000000000000004))
(assert (= temp645_86 temp645_85))
(assert (= temp645_87 (select ARGNAME_output_padding_NAMEEND_VAL temp645_86)))
(assert (= temp645_88 #x0000000000000000))
(assert (= temp645_89 #x0000000000000005))
(assert (= temp645_90 temp645_89))
(assert (= temp645_91 (select ARGNAME_output_padding_NAMEEND_VAL temp645_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp645_71 temp645_68)
             (bvslt temp645_75 temp645_72)
             (bvslt temp645_79 temp645_76)
             (bvslt temp645_83 temp645_80)
             (bvslt temp645_87 temp645_84)
             (bvslt temp645_91 temp645_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp645_92 #x0000000000000000))
(assert (= var1191725 temp645_92))
(assert (= temp645_93 #x0000000000000000))
(assert (= temp645_94 temp645_93))
(assert (= temp645_95 (select ARGNAME_stride_NAMEEND_VAL temp645_94)))
(assert (= temp645_96 #x0000000000000001))
(assert (= temp645_97 temp645_96))
(assert (= temp645_98 (select ARGNAME_stride_NAMEEND_VAL temp645_97)))
(assert (= temp645_99 #x0000000000000002))
(assert (= temp645_100 temp645_99))
(assert (= temp645_101 (select ARGNAME_stride_NAMEEND_VAL temp645_100)))
(assert (= temp645_102 #x0000000000000003))
(assert (= temp645_103 temp645_102))
(assert (= temp645_104 (select ARGNAME_stride_NAMEEND_VAL temp645_103)))
(assert (= temp645_105 #x0000000000000004))
(assert (= temp645_106 temp645_105))
(assert (= temp645_107 (select ARGNAME_stride_NAMEEND_VAL temp645_106)))
(assert (= temp645_108 #x0000000000000005))
(assert (= temp645_109 temp645_108))
(assert (= temp645_110 (select ARGNAME_stride_NAMEEND_VAL temp645_109)))
(assert (= temp645_111 #x0000000000000000))
(assert (= temp645_112 #x0000000000000000))
(assert (= temp645_113 temp645_112))
(assert (= temp645_114 (select ARGNAME_stride_NAMEEND_VAL temp645_113)))
(assert (= temp645_115 #x0000000000000000))
(assert (= temp645_116 #x0000000000000001))
(assert (= temp645_117 temp645_116))
(assert (= temp645_118 (select ARGNAME_stride_NAMEEND_VAL temp645_117)))
(assert (= temp645_119 #x0000000000000000))
(assert (= temp645_120 #x0000000000000002))
(assert (= temp645_121 temp645_120))
(assert (= temp645_122 (select ARGNAME_stride_NAMEEND_VAL temp645_121)))
(assert (= temp645_123 #x0000000000000000))
(assert (= temp645_124 #x0000000000000003))
(assert (= temp645_125 temp645_124))
(assert (= temp645_126 (select ARGNAME_stride_NAMEEND_VAL temp645_125)))
(assert (= temp645_127 #x0000000000000000))
(assert (= temp645_128 #x0000000000000004))
(assert (= temp645_129 temp645_128))
(assert (= temp645_130 (select ARGNAME_stride_NAMEEND_VAL temp645_129)))
(assert (= temp645_131 #x0000000000000000))
(assert (= temp645_132 #x0000000000000005))
(assert (= temp645_133 temp645_132))
(assert (= temp645_134 (select ARGNAME_stride_NAMEEND_VAL temp645_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp645_114 temp645_111)
             (bvsle temp645_118 temp645_115)
             (bvsle temp645_122 temp645_119)
             (bvsle temp645_126 temp645_123)
             (bvsle temp645_130 temp645_127)
             (bvsle temp645_134 temp645_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp645_135 #x0000000000000000))
(assert (= var1191735 temp645_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp645_136 #x0000000000000001))
(assert (= var1191747 temp645_136))
(assert (= temp645_137 #x0000000000000000))
(assert (= var1179826 temp645_137))
(assert (= temp645_138 #x0000000000000000))
(assert (= temp645_139 temp645_138))
(assert (= temp645_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp645_139)))
(assert (= temp645_141 #x0000000000000001))
(assert (= temp645_142 temp645_141))
(assert (= temp645_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp645_142)))
(assert (= temp645_144 #x0000000000000002))
(assert (= temp645_145 temp645_144))
(assert (= temp645_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp645_145)))
(assert (= temp645_147 #x0000000000000003))
(assert (= temp645_148 temp645_147))
(assert (= temp645_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp645_148)))
(assert (= temp645_150 #x0000000000000004))
(assert (= temp645_151 temp645_150))
(assert (= temp645_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp645_151)))
(assert (= temp645_153 #x0000000000000005))
(assert (= temp645_154 temp645_153))
(assert (= temp645_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp645_154)))
(assert (= temp645_157 var1179826))
(assert (= temp645_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp645_157)))
(assert (= temp645_156 temp645_158))
(assert (= var1191780
   (ite (bvslt temp645_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp645_159 #x0000000000000000))
(assert (= var1191780 temp645_159))
(assert (= temp645_160 #x0000000000000000))
(assert (= var1179826 temp645_160))
(assert (= temp645_162 var1179826))
(assert (= temp645_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp645_162)))
(assert (= temp645_161 temp645_163))
(assert (= var1191802 (bvsmod temp645_161 ARGNAME_groups_NAMEEND)))
(assert (= temp645_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp645_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp645_165 #x0000000000000001))
(assert (= var1191803 temp645_165))
(assert (= temp645_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp645_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp645_167 #x0000000000000001))
(assert (= var1191823 temp645_167))
(assert (= temp645_168 #x0000000000000001))
(assert (= var1180714 temp645_168))
(assert (= temp645_169 #x0000000000000000))
(assert (= temp645_170 temp645_169))
(assert (= temp645_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp645_170)))
(assert (= temp645_172 #x0000000000000001))
(assert (= temp645_173 temp645_172))
(assert (= temp645_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp645_173)))
(assert (= temp645_175 #x0000000000000002))
(assert (= temp645_176 temp645_175))
(assert (= temp645_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp645_176)))
(assert (= temp645_178 #x0000000000000003))
(assert (= temp645_179 temp645_178))
(assert (= temp645_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp645_179)))
(assert (= temp645_181 #x0000000000000004))
(assert (= temp645_182 temp645_181))
(assert (= temp645_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp645_182)))
(assert (= temp645_184 #x0000000000000005))
(assert (= temp645_185 temp645_184))
(assert (= temp645_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp645_185)))
(assert (= temp645_187 #x0000000000000000))
(assert (= temp645_188
   (ite (bvslt var1180714 temp645_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp645_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp645_188)))
(assert (= var1191831 temp645_189))
(assert (bvslt (ite (bvslt var1180714 temp645_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp645_190 #x0000000000000001))
(assert (= var1180714 temp645_190))
(assert (= temp645_192 var1180714))
(assert (= temp645_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp645_192)))
(assert (= temp645_191 temp645_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp645_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp645_194 #x0000000000000001))
(assert (= var1191836 temp645_194))
(assert (= temp645_195 #x0000000000000000))
(assert (= var1179826 temp645_195))
(assert (= temp645_197 var1179826))
(assert (= temp645_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp645_197)))
(assert (= temp645_196 temp645_198))
(assert (= temp645_199 #x0000000000000002))
(assert (= var1586025 temp645_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp645_200 #x0000000000000001))
(assert (= var1191993 temp645_200))
(assert (= temp645_201 #x0000000000000001))
(assert (= var2700303 temp645_201))
(assert (= temp645_202 #x0000000000000001))
(assert (= var2962447 temp645_202))
(assert (= temp645_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp645_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp645_204 #x0000000000000001))
(assert (= var211058 temp645_204))
(assert (= temp645_205 #x0000000000000001))
(assert (= var211188 temp645_205))
(assert (= var3879401 var211188))
(assert (= temp645_206 #x0000000000000000))
(assert (= var3866802 temp645_206))
(assert (= temp645_207 #x0000000000000000))
(assert (= temp645_208
   (ite (bvslt var3866802 temp645_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp645_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp645_208)))
(assert (= var3879420 temp645_209))
(assert (bvslt (ite (bvslt var3866802 temp645_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp645_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp645_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp645_211 #x0000000000000001))
(assert (= var3879421 temp645_211))
(assert (= temp645_212 #x0000000000000000))
(assert (= var4079423 temp645_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp645_213 #x0000000000000002))
(assert (= var4208259 temp645_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp645_214 #x0000000000000000))
(assert (= var4273820 temp645_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4993424 var211201))
(assert (= var211494 var210913))
(assert (= temp645_215 #x0000000000000000))
(assert (= var211495
   (ite (distinct var211494 temp645_215) #x0000000000000001 #x0000000000000000)))
(assert (= temp645_216 #x0000000000000001))
(assert (= var211058 temp645_216))
(model-add temp645_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp645_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp645_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp645_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





