(declare-fun temp10790_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10790_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10790_3 () (_ BitVec 64))
(declare-fun temp10790_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10790_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10790_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10790_7 () (_ BitVec 64))
(declare-fun temp10790_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10790_9 () (_ BitVec 64))
(declare-fun temp10790_10 () (_ BitVec 64))
(declare-fun temp10790_11 () (_ BitVec 64))
(declare-fun temp10790_12 () (_ BitVec 64))
(declare-fun temp10790_13 () (_ BitVec 64))
(declare-fun temp10790_14 () (_ BitVec 64))
(declare-fun temp10790_15 () (_ BitVec 64))
(declare-fun temp10790_16 () (_ BitVec 64))
(declare-fun temp10790_17 () (_ BitVec 64))
(declare-fun temp10790_18 () (_ BitVec 64))
(declare-fun temp10790_19 () (_ BitVec 64))
(declare-fun temp10790_20 () (_ BitVec 64))
(declare-fun temp10790_21 () (_ BitVec 64))
(declare-fun temp10790_22 () (_ BitVec 64))
(declare-fun temp10790_23 () (_ BitVec 64))
(declare-fun temp10790_24 () (_ BitVec 64))
(declare-fun temp10790_25 () (_ BitVec 64))
(declare-fun temp10790_26 () (_ BitVec 64))
(declare-fun temp10790_27 () (_ BitVec 64))
(declare-fun temp10790_28 () (_ BitVec 64))
(declare-fun temp10790_29 () (_ BitVec 64))
(declare-fun temp10790_30 () (_ BitVec 64))
(declare-fun temp10790_31 () (_ BitVec 64))
(declare-fun temp10790_32 () (_ BitVec 64))
(declare-fun temp10790_33 () (_ BitVec 64))
(declare-fun temp10790_34 () (_ BitVec 64))
(declare-fun temp10790_35 () (_ BitVec 64))
(declare-fun temp10790_36 () (_ BitVec 64))
(declare-fun temp10790_37 () (_ BitVec 64))
(declare-fun temp10790_38 () (_ BitVec 64))
(declare-fun temp10790_39 () (_ BitVec 64))
(declare-fun temp10790_40 () (_ BitVec 64))
(declare-fun temp10790_41 () (_ BitVec 64))
(declare-fun temp10790_42 () (_ BitVec 64))
(declare-fun temp10790_43 () (_ BitVec 64))
(declare-fun temp10790_44 () (_ BitVec 64))
(declare-fun temp10790_45 () (_ BitVec 64))
(declare-fun temp10790_46 () (_ BitVec 64))
(declare-fun temp10790_47 () (_ BitVec 64))
(declare-fun temp10790_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10790_49 () (_ BitVec 64))
(declare-fun temp10790_50 () (_ BitVec 64))
(declare-fun temp10790_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10790_52 () (_ BitVec 64))
(declare-fun temp10790_53 () (_ BitVec 64))
(declare-fun temp10790_54 () (_ BitVec 64))
(declare-fun temp10790_55 () (_ BitVec 64))
(declare-fun temp10790_56 () (_ BitVec 64))
(declare-fun temp10790_57 () (_ BitVec 64))
(declare-fun temp10790_58 () (_ BitVec 64))
(declare-fun temp10790_59 () (_ BitVec 64))
(declare-fun temp10790_60 () (_ BitVec 64))
(declare-fun temp10790_61 () (_ BitVec 64))
(declare-fun temp10790_62 () (_ BitVec 64))
(declare-fun temp10790_63 () (_ BitVec 64))
(declare-fun temp10790_64 () (_ BitVec 64))
(declare-fun temp10790_65 () (_ BitVec 64))
(declare-fun temp10790_66 () (_ BitVec 64))
(declare-fun temp10790_67 () (_ BitVec 64))
(declare-fun temp10790_68 () (_ BitVec 64))
(declare-fun temp10790_69 () (_ BitVec 64))
(declare-fun temp10790_70 () (_ BitVec 64))
(declare-fun temp10790_71 () (_ BitVec 64))
(declare-fun temp10790_72 () (_ BitVec 64))
(declare-fun temp10790_73 () (_ BitVec 64))
(declare-fun temp10790_74 () (_ BitVec 64))
(declare-fun temp10790_75 () (_ BitVec 64))
(declare-fun temp10790_76 () (_ BitVec 64))
(declare-fun temp10790_77 () (_ BitVec 64))
(declare-fun temp10790_78 () (_ BitVec 64))
(declare-fun temp10790_79 () (_ BitVec 64))
(declare-fun temp10790_80 () (_ BitVec 64))
(declare-fun temp10790_81 () (_ BitVec 64))
(declare-fun temp10790_82 () (_ BitVec 64))
(declare-fun temp10790_83 () (_ BitVec 64))
(declare-fun temp10790_84 () (_ BitVec 64))
(declare-fun temp10790_85 () (_ BitVec 64))
(declare-fun temp10790_86 () (_ BitVec 64))
(declare-fun temp10790_87 () (_ BitVec 64))
(declare-fun temp10790_88 () (_ BitVec 64))
(declare-fun temp10790_89 () (_ BitVec 64))
(declare-fun temp10790_90 () (_ BitVec 64))
(declare-fun temp10790_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10790_92 () (_ BitVec 64))
(declare-fun temp10790_93 () (_ BitVec 64))
(declare-fun temp10790_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10790_95 () (_ BitVec 64))
(declare-fun temp10790_96 () (_ BitVec 64))
(declare-fun temp10790_97 () (_ BitVec 64))
(declare-fun temp10790_98 () (_ BitVec 64))
(declare-fun temp10790_99 () (_ BitVec 64))
(declare-fun temp10790_100 () (_ BitVec 64))
(declare-fun temp10790_101 () (_ BitVec 64))
(declare-fun temp10790_102 () (_ BitVec 64))
(declare-fun temp10790_103 () (_ BitVec 64))
(declare-fun temp10790_104 () (_ BitVec 64))
(declare-fun temp10790_105 () (_ BitVec 64))
(declare-fun temp10790_106 () (_ BitVec 64))
(declare-fun temp10790_107 () (_ BitVec 64))
(declare-fun temp10790_108 () (_ BitVec 64))
(declare-fun temp10790_109 () (_ BitVec 64))
(declare-fun temp10790_110 () (_ BitVec 64))
(declare-fun temp10790_111 () (_ BitVec 64))
(declare-fun temp10790_112 () (_ BitVec 64))
(declare-fun temp10790_113 () (_ BitVec 64))
(declare-fun temp10790_114 () (_ BitVec 64))
(declare-fun temp10790_115 () (_ BitVec 64))
(declare-fun temp10790_116 () (_ BitVec 64))
(declare-fun temp10790_117 () (_ BitVec 64))
(declare-fun temp10790_118 () (_ BitVec 64))
(declare-fun temp10790_119 () (_ BitVec 64))
(declare-fun temp10790_120 () (_ BitVec 64))
(declare-fun temp10790_121 () (_ BitVec 64))
(declare-fun temp10790_122 () (_ BitVec 64))
(declare-fun temp10790_123 () (_ BitVec 64))
(declare-fun temp10790_124 () (_ BitVec 64))
(declare-fun temp10790_125 () (_ BitVec 64))
(declare-fun temp10790_126 () (_ BitVec 64))
(declare-fun temp10790_127 () (_ BitVec 64))
(declare-fun temp10790_128 () (_ BitVec 64))
(declare-fun temp10790_129 () (_ BitVec 64))
(declare-fun temp10790_130 () (_ BitVec 64))
(declare-fun temp10790_131 () (_ BitVec 64))
(declare-fun temp10790_132 () (_ BitVec 64))
(declare-fun temp10790_133 () (_ BitVec 64))
(declare-fun temp10790_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10790_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10790_136 () (_ BitVec 64))
(declare-fun temp10790_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10790_138 () (_ BitVec 64))
(declare-fun temp10790_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10790_140 () (_ BitVec 64))
(declare-fun temp10790_141 () (_ BitVec 64))
(declare-fun temp10790_142 () (_ BitVec 64))
(declare-fun temp10790_143 () (_ BitVec 64))
(declare-fun temp10790_144 () (_ BitVec 64))
(declare-fun temp10790_145 () (_ BitVec 64))
(declare-fun temp10790_146 () (_ BitVec 64))
(declare-fun temp10790_147 () (_ BitVec 64))
(declare-fun temp10790_148 () (_ BitVec 64))
(declare-fun temp10790_149 () (_ BitVec 64))
(declare-fun temp10790_150 () (_ BitVec 64))
(declare-fun temp10790_151 () (_ BitVec 64))
(declare-fun temp10790_152 () (_ BitVec 64))
(declare-fun temp10790_153 () (_ BitVec 64))
(declare-fun temp10790_154 () (_ BitVec 64))
(declare-fun temp10790_155 () (_ BitVec 64))
(declare-fun temp10790_157 () (_ BitVec 64))
(declare-fun temp10790_158 () (_ BitVec 64))
(declare-fun temp10790_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10790_159 () (_ BitVec 64))
(declare-fun temp10790_160 () (_ BitVec 64))
(declare-fun temp10790_162 () (_ BitVec 64))
(declare-fun temp10790_163 () (_ BitVec 64))
(declare-fun temp10790_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10790_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10790_165 () (_ BitVec 64))
(declare-fun temp10790_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10790_167 () (_ BitVec 64))
(declare-fun temp10790_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10790_169 () (_ BitVec 64))
(declare-fun temp10790_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10790_171 () (_ BitVec 64))
(declare-fun temp10790_172 () (_ BitVec 64))
(declare-fun temp10790_173 () (_ BitVec 64))
(declare-fun temp10790_174 () (_ BitVec 64))
(declare-fun temp10790_175 () (_ BitVec 64))
(declare-fun temp10790_176 () (_ BitVec 64))
(declare-fun temp10790_177 () (_ BitVec 64))
(declare-fun temp10790_178 () (_ BitVec 64))
(declare-fun temp10790_179 () (_ BitVec 64))
(declare-fun temp10790_180 () (_ BitVec 64))
(declare-fun temp10790_181 () (_ BitVec 64))
(declare-fun temp10790_182 () (_ BitVec 64))
(declare-fun temp10790_183 () (_ BitVec 64))
(declare-fun temp10790_184 () (_ BitVec 64))
(declare-fun temp10790_185 () (_ BitVec 64))
(declare-fun temp10790_186 () (_ BitVec 64))
(declare-fun temp10790_187 () (_ BitVec 64))
(declare-fun temp10790_188 () (_ BitVec 64))
(declare-fun temp10790_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10790_190 () (_ BitVec 64))
(declare-fun temp10790_192 () (_ BitVec 64))
(declare-fun temp10790_193 () (_ BitVec 64))
(declare-fun temp10790_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10790_194 () (_ BitVec 64))
(declare-fun temp10790_195 () (_ BitVec 64))
(declare-fun temp10790_197 () (_ BitVec 64))
(declare-fun temp10790_198 () (_ BitVec 64))
(declare-fun temp10790_196 () (_ BitVec 64))
(declare-fun temp10790_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10790_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10790_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10790_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10790_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10790_204 () (_ BitVec 64))
(declare-fun temp10790_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10790_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10790_207 () (_ BitVec 64))
(declare-fun temp10790_208 () (_ BitVec 64))
(declare-fun temp10790_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10790_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10790_211 () (_ BitVec 64))
(declare-fun temp10790_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10790_213 () (_ BitVec 64))
(declare-fun temp10790_214 () (_ BitVec 64))
(declare-fun temp10790_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10790_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10790_217 () (_ BitVec 64))
(declare-fun temp10790_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10790_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10790_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var5190032 () (_ BitVec 64))
(declare-fun var5452176 () (_ BitVec 64))
(declare-fun temp10790_221 () (_ BitVec 64))
(assert (= temp10790_1 #x0000000000000001))
(assert (= var77203 temp10790_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10790_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10790_2)))
(assert (= temp10790_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10790_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10790_4 #x0000000000000000))
(assert (= var210941 temp10790_4))
(assert (= temp10790_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10790_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10790_6 #x0000000000000000))
(assert (= var210986 temp10790_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10790_7 #x0000000000000000))
(assert (= temp10790_8 temp10790_7))
(assert (= temp10790_9 (select ARGNAME_padding_NAMEEND_VAL temp10790_8)))
(assert (= temp10790_10 #x0000000000000001))
(assert (= temp10790_11 temp10790_10))
(assert (= temp10790_12 (select ARGNAME_padding_NAMEEND_VAL temp10790_11)))
(assert (= temp10790_13 #x0000000000000002))
(assert (= temp10790_14 temp10790_13))
(assert (= temp10790_15 (select ARGNAME_padding_NAMEEND_VAL temp10790_14)))
(assert (= temp10790_16 #x0000000000000003))
(assert (= temp10790_17 temp10790_16))
(assert (= temp10790_18 (select ARGNAME_padding_NAMEEND_VAL temp10790_17)))
(assert (= temp10790_19 #x0000000000000004))
(assert (= temp10790_20 temp10790_19))
(assert (= temp10790_21 (select ARGNAME_padding_NAMEEND_VAL temp10790_20)))
(assert (= temp10790_22 #x0000000000000005))
(assert (= temp10790_23 temp10790_22))
(assert (= temp10790_24 (select ARGNAME_padding_NAMEEND_VAL temp10790_23)))
(assert (= temp10790_25 #x0000000000000000))
(assert (= temp10790_26 #x0000000000000000))
(assert (= temp10790_27 temp10790_26))
(assert (= temp10790_28 (select ARGNAME_padding_NAMEEND_VAL temp10790_27)))
(assert (= temp10790_29 #x0000000000000000))
(assert (= temp10790_30 #x0000000000000001))
(assert (= temp10790_31 temp10790_30))
(assert (= temp10790_32 (select ARGNAME_padding_NAMEEND_VAL temp10790_31)))
(assert (= temp10790_33 #x0000000000000000))
(assert (= temp10790_34 #x0000000000000002))
(assert (= temp10790_35 temp10790_34))
(assert (= temp10790_36 (select ARGNAME_padding_NAMEEND_VAL temp10790_35)))
(assert (= temp10790_37 #x0000000000000000))
(assert (= temp10790_38 #x0000000000000003))
(assert (= temp10790_39 temp10790_38))
(assert (= temp10790_40 (select ARGNAME_padding_NAMEEND_VAL temp10790_39)))
(assert (= temp10790_41 #x0000000000000000))
(assert (= temp10790_42 #x0000000000000004))
(assert (= temp10790_43 temp10790_42))
(assert (= temp10790_44 (select ARGNAME_padding_NAMEEND_VAL temp10790_43)))
(assert (= temp10790_45 #x0000000000000000))
(assert (= temp10790_46 #x0000000000000005))
(assert (= temp10790_47 temp10790_46))
(assert (= temp10790_48 (select ARGNAME_padding_NAMEEND_VAL temp10790_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10790_28 temp10790_25)
             (bvslt temp10790_32 temp10790_29)
             (bvslt temp10790_36 temp10790_33)
             (bvslt temp10790_40 temp10790_37)
             (bvslt temp10790_44 temp10790_41)
             (bvslt temp10790_48 temp10790_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10790_49 #x0000000000000000))
(assert (= var1191714 temp10790_49))
(assert (= temp10790_50 #x0000000000000000))
(assert (= temp10790_51 temp10790_50))
(assert (= temp10790_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10790_51)))
(assert (= temp10790_53 #x0000000000000001))
(assert (= temp10790_54 temp10790_53))
(assert (= temp10790_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10790_54)))
(assert (= temp10790_56 #x0000000000000002))
(assert (= temp10790_57 temp10790_56))
(assert (= temp10790_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10790_57)))
(assert (= temp10790_59 #x0000000000000003))
(assert (= temp10790_60 temp10790_59))
(assert (= temp10790_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10790_60)))
(assert (= temp10790_62 #x0000000000000004))
(assert (= temp10790_63 temp10790_62))
(assert (= temp10790_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10790_63)))
(assert (= temp10790_65 #x0000000000000005))
(assert (= temp10790_66 temp10790_65))
(assert (= temp10790_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10790_66)))
(assert (= temp10790_68 #x0000000000000000))
(assert (= temp10790_69 #x0000000000000000))
(assert (= temp10790_70 temp10790_69))
(assert (= temp10790_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10790_70)))
(assert (= temp10790_72 #x0000000000000000))
(assert (= temp10790_73 #x0000000000000001))
(assert (= temp10790_74 temp10790_73))
(assert (= temp10790_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10790_74)))
(assert (= temp10790_76 #x0000000000000000))
(assert (= temp10790_77 #x0000000000000002))
(assert (= temp10790_78 temp10790_77))
(assert (= temp10790_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10790_78)))
(assert (= temp10790_80 #x0000000000000000))
(assert (= temp10790_81 #x0000000000000003))
(assert (= temp10790_82 temp10790_81))
(assert (= temp10790_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10790_82)))
(assert (= temp10790_84 #x0000000000000000))
(assert (= temp10790_85 #x0000000000000004))
(assert (= temp10790_86 temp10790_85))
(assert (= temp10790_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10790_86)))
(assert (= temp10790_88 #x0000000000000000))
(assert (= temp10790_89 #x0000000000000005))
(assert (= temp10790_90 temp10790_89))
(assert (= temp10790_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10790_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10790_71 temp10790_68)
             (bvslt temp10790_75 temp10790_72)
             (bvslt temp10790_79 temp10790_76)
             (bvslt temp10790_83 temp10790_80)
             (bvslt temp10790_87 temp10790_84)
             (bvslt temp10790_91 temp10790_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10790_92 #x0000000000000000))
(assert (= var1191725 temp10790_92))
(assert (= temp10790_93 #x0000000000000000))
(assert (= temp10790_94 temp10790_93))
(assert (= temp10790_95 (select ARGNAME_stride_NAMEEND_VAL temp10790_94)))
(assert (= temp10790_96 #x0000000000000001))
(assert (= temp10790_97 temp10790_96))
(assert (= temp10790_98 (select ARGNAME_stride_NAMEEND_VAL temp10790_97)))
(assert (= temp10790_99 #x0000000000000002))
(assert (= temp10790_100 temp10790_99))
(assert (= temp10790_101 (select ARGNAME_stride_NAMEEND_VAL temp10790_100)))
(assert (= temp10790_102 #x0000000000000003))
(assert (= temp10790_103 temp10790_102))
(assert (= temp10790_104 (select ARGNAME_stride_NAMEEND_VAL temp10790_103)))
(assert (= temp10790_105 #x0000000000000004))
(assert (= temp10790_106 temp10790_105))
(assert (= temp10790_107 (select ARGNAME_stride_NAMEEND_VAL temp10790_106)))
(assert (= temp10790_108 #x0000000000000005))
(assert (= temp10790_109 temp10790_108))
(assert (= temp10790_110 (select ARGNAME_stride_NAMEEND_VAL temp10790_109)))
(assert (= temp10790_111 #x0000000000000000))
(assert (= temp10790_112 #x0000000000000000))
(assert (= temp10790_113 temp10790_112))
(assert (= temp10790_114 (select ARGNAME_stride_NAMEEND_VAL temp10790_113)))
(assert (= temp10790_115 #x0000000000000000))
(assert (= temp10790_116 #x0000000000000001))
(assert (= temp10790_117 temp10790_116))
(assert (= temp10790_118 (select ARGNAME_stride_NAMEEND_VAL temp10790_117)))
(assert (= temp10790_119 #x0000000000000000))
(assert (= temp10790_120 #x0000000000000002))
(assert (= temp10790_121 temp10790_120))
(assert (= temp10790_122 (select ARGNAME_stride_NAMEEND_VAL temp10790_121)))
(assert (= temp10790_123 #x0000000000000000))
(assert (= temp10790_124 #x0000000000000003))
(assert (= temp10790_125 temp10790_124))
(assert (= temp10790_126 (select ARGNAME_stride_NAMEEND_VAL temp10790_125)))
(assert (= temp10790_127 #x0000000000000000))
(assert (= temp10790_128 #x0000000000000004))
(assert (= temp10790_129 temp10790_128))
(assert (= temp10790_130 (select ARGNAME_stride_NAMEEND_VAL temp10790_129)))
(assert (= temp10790_131 #x0000000000000000))
(assert (= temp10790_132 #x0000000000000005))
(assert (= temp10790_133 temp10790_132))
(assert (= temp10790_134 (select ARGNAME_stride_NAMEEND_VAL temp10790_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10790_114 temp10790_111)
             (bvsle temp10790_118 temp10790_115)
             (bvsle temp10790_122 temp10790_119)
             (bvsle temp10790_126 temp10790_123)
             (bvsle temp10790_130 temp10790_127)
             (bvsle temp10790_134 temp10790_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10790_135 #x0000000000000000))
(assert (= var1191735 temp10790_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10790_136 #x0000000000000001))
(assert (= var1191747 temp10790_136))
(assert (= temp10790_137 #x0000000000000000))
(assert (= var1179826 temp10790_137))
(assert (= temp10790_138 #x0000000000000000))
(assert (= temp10790_139 temp10790_138))
(assert (= temp10790_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10790_139)))
(assert (= temp10790_141 #x0000000000000001))
(assert (= temp10790_142 temp10790_141))
(assert (= temp10790_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10790_142)))
(assert (= temp10790_144 #x0000000000000002))
(assert (= temp10790_145 temp10790_144))
(assert (= temp10790_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10790_145)))
(assert (= temp10790_147 #x0000000000000003))
(assert (= temp10790_148 temp10790_147))
(assert (= temp10790_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10790_148)))
(assert (= temp10790_150 #x0000000000000004))
(assert (= temp10790_151 temp10790_150))
(assert (= temp10790_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10790_151)))
(assert (= temp10790_153 #x0000000000000005))
(assert (= temp10790_154 temp10790_153))
(assert (= temp10790_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10790_154)))
(assert (= temp10790_157 var1179826))
(assert (= temp10790_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10790_157)))
(assert (= temp10790_156 temp10790_158))
(assert (= var1191780
   (ite (bvslt temp10790_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10790_159 #x0000000000000000))
(assert (= var1191780 temp10790_159))
(assert (= temp10790_160 #x0000000000000000))
(assert (= var1179826 temp10790_160))
(assert (= temp10790_162 var1179826))
(assert (= temp10790_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10790_162)))
(assert (= temp10790_161 temp10790_163))
(assert (= var1191802 (bvsmod temp10790_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10790_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10790_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10790_165 #x0000000000000001))
(assert (= var1191803 temp10790_165))
(assert (= temp10790_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10790_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10790_167 #x0000000000000001))
(assert (= var1191823 temp10790_167))
(assert (= temp10790_168 #x0000000000000001))
(assert (= var1180714 temp10790_168))
(assert (= temp10790_169 #x0000000000000000))
(assert (= temp10790_170 temp10790_169))
(assert (= temp10790_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10790_170)))
(assert (= temp10790_172 #x0000000000000001))
(assert (= temp10790_173 temp10790_172))
(assert (= temp10790_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10790_173)))
(assert (= temp10790_175 #x0000000000000002))
(assert (= temp10790_176 temp10790_175))
(assert (= temp10790_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10790_176)))
(assert (= temp10790_178 #x0000000000000003))
(assert (= temp10790_179 temp10790_178))
(assert (= temp10790_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10790_179)))
(assert (= temp10790_181 #x0000000000000004))
(assert (= temp10790_182 temp10790_181))
(assert (= temp10790_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10790_182)))
(assert (= temp10790_184 #x0000000000000005))
(assert (= temp10790_185 temp10790_184))
(assert (= temp10790_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10790_185)))
(assert (= temp10790_187 #x0000000000000000))
(assert (= temp10790_188
   (ite (bvslt var1180714 temp10790_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10790_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10790_188)))
(assert (= var1191831 temp10790_189))
(assert (bvslt (ite (bvslt var1180714 temp10790_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10790_190 #x0000000000000001))
(assert (= var1180714 temp10790_190))
(assert (= temp10790_192 var1180714))
(assert (= temp10790_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10790_192)))
(assert (= temp10790_191 temp10790_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10790_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10790_194 #x0000000000000001))
(assert (= var1191836 temp10790_194))
(assert (= temp10790_195 #x0000000000000000))
(assert (= var1179826 temp10790_195))
(assert (= temp10790_197 var1179826))
(assert (= temp10790_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10790_197)))
(assert (= temp10790_196 temp10790_198))
(assert (= temp10790_199 #x0000000000000002))
(assert (= var1586025 temp10790_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10790_200 #x0000000000000001))
(assert (= var1191993 temp10790_200))
(assert (= temp10790_201 #x0000000000000001))
(assert (= var2700303 temp10790_201))
(assert (= temp10790_202 #x0000000000000001))
(assert (= var2962447 temp10790_202))
(assert (= temp10790_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10790_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10790_204 #x0000000000000001))
(assert (= var211058 temp10790_204))
(assert (= temp10790_205 #x0000000000000001))
(assert (= var211188 temp10790_205))
(assert (= var3879401 var211188))
(assert (= temp10790_206 #x0000000000000000))
(assert (= var3866802 temp10790_206))
(assert (= temp10790_207 #x0000000000000000))
(assert (= temp10790_208
   (ite (bvslt var3866802 temp10790_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10790_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10790_208)))
(assert (= var3879420 temp10790_209))
(assert (bvslt (ite (bvslt var3866802 temp10790_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10790_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10790_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10790_211 #x0000000000000000))
(assert (= var3879421 temp10790_211))
(assert (= temp10790_212 #x0000000000000001))
(assert (= var3867690 temp10790_212))
(assert (= temp10790_213 #x0000000000000000))
(assert (= temp10790_214
   (ite (bvslt var3867690 temp10790_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10790_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10790_214)))
(assert (= var3879423 temp10790_215))
(assert (bvslt (ite (bvslt var3867690 temp10790_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10790_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10790_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10790_217 #x0000000000000001))
(assert (= var3879424 temp10790_217))
(assert (= temp10790_218 #x0000000000000000))
(assert (= var4133117 temp10790_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10790_219 #x0000000000000002))
(assert (= var4339331 temp10790_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10790_220 #x0000000000000000))
(assert (= var4404892 temp10790_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var5190032 var211201))
(assert (= var5452176 var211201))
(assert (= temp10790_221 #x0000000000000001))
(assert (= var211058 temp10790_221))
(model-add temp10790_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10790_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10790_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10790_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





