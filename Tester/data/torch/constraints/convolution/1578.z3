(declare-fun temp10898_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10898_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10898_3 () (_ BitVec 64))
(declare-fun temp10898_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10898_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10898_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10898_7 () (_ BitVec 64))
(declare-fun temp10898_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10898_9 () (_ BitVec 64))
(declare-fun temp10898_10 () (_ BitVec 64))
(declare-fun temp10898_11 () (_ BitVec 64))
(declare-fun temp10898_12 () (_ BitVec 64))
(declare-fun temp10898_13 () (_ BitVec 64))
(declare-fun temp10898_14 () (_ BitVec 64))
(declare-fun temp10898_15 () (_ BitVec 64))
(declare-fun temp10898_16 () (_ BitVec 64))
(declare-fun temp10898_17 () (_ BitVec 64))
(declare-fun temp10898_18 () (_ BitVec 64))
(declare-fun temp10898_19 () (_ BitVec 64))
(declare-fun temp10898_20 () (_ BitVec 64))
(declare-fun temp10898_21 () (_ BitVec 64))
(declare-fun temp10898_22 () (_ BitVec 64))
(declare-fun temp10898_23 () (_ BitVec 64))
(declare-fun temp10898_24 () (_ BitVec 64))
(declare-fun temp10898_25 () (_ BitVec 64))
(declare-fun temp10898_26 () (_ BitVec 64))
(declare-fun temp10898_27 () (_ BitVec 64))
(declare-fun temp10898_28 () (_ BitVec 64))
(declare-fun temp10898_29 () (_ BitVec 64))
(declare-fun temp10898_30 () (_ BitVec 64))
(declare-fun temp10898_31 () (_ BitVec 64))
(declare-fun temp10898_32 () (_ BitVec 64))
(declare-fun temp10898_33 () (_ BitVec 64))
(declare-fun temp10898_34 () (_ BitVec 64))
(declare-fun temp10898_35 () (_ BitVec 64))
(declare-fun temp10898_36 () (_ BitVec 64))
(declare-fun temp10898_37 () (_ BitVec 64))
(declare-fun temp10898_38 () (_ BitVec 64))
(declare-fun temp10898_39 () (_ BitVec 64))
(declare-fun temp10898_40 () (_ BitVec 64))
(declare-fun temp10898_41 () (_ BitVec 64))
(declare-fun temp10898_42 () (_ BitVec 64))
(declare-fun temp10898_43 () (_ BitVec 64))
(declare-fun temp10898_44 () (_ BitVec 64))
(declare-fun temp10898_45 () (_ BitVec 64))
(declare-fun temp10898_46 () (_ BitVec 64))
(declare-fun temp10898_47 () (_ BitVec 64))
(declare-fun temp10898_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10898_49 () (_ BitVec 64))
(declare-fun temp10898_50 () (_ BitVec 64))
(declare-fun temp10898_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10898_52 () (_ BitVec 64))
(declare-fun temp10898_53 () (_ BitVec 64))
(declare-fun temp10898_54 () (_ BitVec 64))
(declare-fun temp10898_55 () (_ BitVec 64))
(declare-fun temp10898_56 () (_ BitVec 64))
(declare-fun temp10898_57 () (_ BitVec 64))
(declare-fun temp10898_58 () (_ BitVec 64))
(declare-fun temp10898_59 () (_ BitVec 64))
(declare-fun temp10898_60 () (_ BitVec 64))
(declare-fun temp10898_61 () (_ BitVec 64))
(declare-fun temp10898_62 () (_ BitVec 64))
(declare-fun temp10898_63 () (_ BitVec 64))
(declare-fun temp10898_64 () (_ BitVec 64))
(declare-fun temp10898_65 () (_ BitVec 64))
(declare-fun temp10898_66 () (_ BitVec 64))
(declare-fun temp10898_67 () (_ BitVec 64))
(declare-fun temp10898_68 () (_ BitVec 64))
(declare-fun temp10898_69 () (_ BitVec 64))
(declare-fun temp10898_70 () (_ BitVec 64))
(declare-fun temp10898_71 () (_ BitVec 64))
(declare-fun temp10898_72 () (_ BitVec 64))
(declare-fun temp10898_73 () (_ BitVec 64))
(declare-fun temp10898_74 () (_ BitVec 64))
(declare-fun temp10898_75 () (_ BitVec 64))
(declare-fun temp10898_76 () (_ BitVec 64))
(declare-fun temp10898_77 () (_ BitVec 64))
(declare-fun temp10898_78 () (_ BitVec 64))
(declare-fun temp10898_79 () (_ BitVec 64))
(declare-fun temp10898_80 () (_ BitVec 64))
(declare-fun temp10898_81 () (_ BitVec 64))
(declare-fun temp10898_82 () (_ BitVec 64))
(declare-fun temp10898_83 () (_ BitVec 64))
(declare-fun temp10898_84 () (_ BitVec 64))
(declare-fun temp10898_85 () (_ BitVec 64))
(declare-fun temp10898_86 () (_ BitVec 64))
(declare-fun temp10898_87 () (_ BitVec 64))
(declare-fun temp10898_88 () (_ BitVec 64))
(declare-fun temp10898_89 () (_ BitVec 64))
(declare-fun temp10898_90 () (_ BitVec 64))
(declare-fun temp10898_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10898_92 () (_ BitVec 64))
(declare-fun temp10898_93 () (_ BitVec 64))
(declare-fun temp10898_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10898_95 () (_ BitVec 64))
(declare-fun temp10898_96 () (_ BitVec 64))
(declare-fun temp10898_97 () (_ BitVec 64))
(declare-fun temp10898_98 () (_ BitVec 64))
(declare-fun temp10898_99 () (_ BitVec 64))
(declare-fun temp10898_100 () (_ BitVec 64))
(declare-fun temp10898_101 () (_ BitVec 64))
(declare-fun temp10898_102 () (_ BitVec 64))
(declare-fun temp10898_103 () (_ BitVec 64))
(declare-fun temp10898_104 () (_ BitVec 64))
(declare-fun temp10898_105 () (_ BitVec 64))
(declare-fun temp10898_106 () (_ BitVec 64))
(declare-fun temp10898_107 () (_ BitVec 64))
(declare-fun temp10898_108 () (_ BitVec 64))
(declare-fun temp10898_109 () (_ BitVec 64))
(declare-fun temp10898_110 () (_ BitVec 64))
(declare-fun temp10898_111 () (_ BitVec 64))
(declare-fun temp10898_112 () (_ BitVec 64))
(declare-fun temp10898_113 () (_ BitVec 64))
(declare-fun temp10898_114 () (_ BitVec 64))
(declare-fun temp10898_115 () (_ BitVec 64))
(declare-fun temp10898_116 () (_ BitVec 64))
(declare-fun temp10898_117 () (_ BitVec 64))
(declare-fun temp10898_118 () (_ BitVec 64))
(declare-fun temp10898_119 () (_ BitVec 64))
(declare-fun temp10898_120 () (_ BitVec 64))
(declare-fun temp10898_121 () (_ BitVec 64))
(declare-fun temp10898_122 () (_ BitVec 64))
(declare-fun temp10898_123 () (_ BitVec 64))
(declare-fun temp10898_124 () (_ BitVec 64))
(declare-fun temp10898_125 () (_ BitVec 64))
(declare-fun temp10898_126 () (_ BitVec 64))
(declare-fun temp10898_127 () (_ BitVec 64))
(declare-fun temp10898_128 () (_ BitVec 64))
(declare-fun temp10898_129 () (_ BitVec 64))
(declare-fun temp10898_130 () (_ BitVec 64))
(declare-fun temp10898_131 () (_ BitVec 64))
(declare-fun temp10898_132 () (_ BitVec 64))
(declare-fun temp10898_133 () (_ BitVec 64))
(declare-fun temp10898_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10898_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10898_136 () (_ BitVec 64))
(declare-fun temp10898_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10898_138 () (_ BitVec 64))
(declare-fun temp10898_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10898_140 () (_ BitVec 64))
(declare-fun temp10898_141 () (_ BitVec 64))
(declare-fun temp10898_142 () (_ BitVec 64))
(declare-fun temp10898_143 () (_ BitVec 64))
(declare-fun temp10898_144 () (_ BitVec 64))
(declare-fun temp10898_145 () (_ BitVec 64))
(declare-fun temp10898_146 () (_ BitVec 64))
(declare-fun temp10898_147 () (_ BitVec 64))
(declare-fun temp10898_148 () (_ BitVec 64))
(declare-fun temp10898_149 () (_ BitVec 64))
(declare-fun temp10898_150 () (_ BitVec 64))
(declare-fun temp10898_151 () (_ BitVec 64))
(declare-fun temp10898_152 () (_ BitVec 64))
(declare-fun temp10898_153 () (_ BitVec 64))
(declare-fun temp10898_154 () (_ BitVec 64))
(declare-fun temp10898_155 () (_ BitVec 64))
(declare-fun temp10898_157 () (_ BitVec 64))
(declare-fun temp10898_158 () (_ BitVec 64))
(declare-fun temp10898_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10898_159 () (_ BitVec 64))
(declare-fun temp10898_160 () (_ BitVec 64))
(declare-fun temp10898_162 () (_ BitVec 64))
(declare-fun temp10898_163 () (_ BitVec 64))
(declare-fun temp10898_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10898_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10898_165 () (_ BitVec 64))
(declare-fun temp10898_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10898_167 () (_ BitVec 64))
(declare-fun temp10898_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10898_169 () (_ BitVec 64))
(declare-fun temp10898_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10898_171 () (_ BitVec 64))
(declare-fun temp10898_172 () (_ BitVec 64))
(declare-fun temp10898_173 () (_ BitVec 64))
(declare-fun temp10898_174 () (_ BitVec 64))
(declare-fun temp10898_175 () (_ BitVec 64))
(declare-fun temp10898_176 () (_ BitVec 64))
(declare-fun temp10898_177 () (_ BitVec 64))
(declare-fun temp10898_178 () (_ BitVec 64))
(declare-fun temp10898_179 () (_ BitVec 64))
(declare-fun temp10898_180 () (_ BitVec 64))
(declare-fun temp10898_181 () (_ BitVec 64))
(declare-fun temp10898_182 () (_ BitVec 64))
(declare-fun temp10898_183 () (_ BitVec 64))
(declare-fun temp10898_184 () (_ BitVec 64))
(declare-fun temp10898_185 () (_ BitVec 64))
(declare-fun temp10898_186 () (_ BitVec 64))
(declare-fun temp10898_187 () (_ BitVec 64))
(declare-fun temp10898_188 () (_ BitVec 64))
(declare-fun temp10898_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10898_190 () (_ BitVec 64))
(declare-fun temp10898_192 () (_ BitVec 64))
(declare-fun temp10898_193 () (_ BitVec 64))
(declare-fun temp10898_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10898_194 () (_ BitVec 64))
(declare-fun temp10898_195 () (_ BitVec 64))
(declare-fun temp10898_197 () (_ BitVec 64))
(declare-fun temp10898_198 () (_ BitVec 64))
(declare-fun temp10898_196 () (_ BitVec 64))
(declare-fun temp10898_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10898_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10898_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10898_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10898_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10898_204 () (_ BitVec 64))
(declare-fun temp10898_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10898_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10898_207 () (_ BitVec 64))
(declare-fun temp10898_208 () (_ BitVec 64))
(declare-fun temp10898_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10898_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10898_211 () (_ BitVec 64))
(declare-fun temp10898_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10898_213 () (_ BitVec 64))
(declare-fun temp10898_214 () (_ BitVec 64))
(declare-fun temp10898_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10898_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10898_217 () (_ BitVec 64))
(declare-fun temp10898_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10898_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10898_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var5255568 () (_ BitVec 64))
(declare-fun var5517712 () (_ BitVec 64))
(declare-fun temp10898_221 () (_ BitVec 64))
(declare-fun var5845392 () (_ BitVec 64))
(declare-fun temp10898_222 () (_ BitVec 64))
(assert (= temp10898_1 #x0000000000000001))
(assert (= var77203 temp10898_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10898_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10898_2)))
(assert (= temp10898_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10898_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10898_4 #x0000000000000000))
(assert (= var210941 temp10898_4))
(assert (= temp10898_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10898_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10898_6 #x0000000000000000))
(assert (= var210986 temp10898_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10898_7 #x0000000000000000))
(assert (= temp10898_8 temp10898_7))
(assert (= temp10898_9 (select ARGNAME_padding_NAMEEND_VAL temp10898_8)))
(assert (= temp10898_10 #x0000000000000001))
(assert (= temp10898_11 temp10898_10))
(assert (= temp10898_12 (select ARGNAME_padding_NAMEEND_VAL temp10898_11)))
(assert (= temp10898_13 #x0000000000000002))
(assert (= temp10898_14 temp10898_13))
(assert (= temp10898_15 (select ARGNAME_padding_NAMEEND_VAL temp10898_14)))
(assert (= temp10898_16 #x0000000000000003))
(assert (= temp10898_17 temp10898_16))
(assert (= temp10898_18 (select ARGNAME_padding_NAMEEND_VAL temp10898_17)))
(assert (= temp10898_19 #x0000000000000004))
(assert (= temp10898_20 temp10898_19))
(assert (= temp10898_21 (select ARGNAME_padding_NAMEEND_VAL temp10898_20)))
(assert (= temp10898_22 #x0000000000000005))
(assert (= temp10898_23 temp10898_22))
(assert (= temp10898_24 (select ARGNAME_padding_NAMEEND_VAL temp10898_23)))
(assert (= temp10898_25 #x0000000000000000))
(assert (= temp10898_26 #x0000000000000000))
(assert (= temp10898_27 temp10898_26))
(assert (= temp10898_28 (select ARGNAME_padding_NAMEEND_VAL temp10898_27)))
(assert (= temp10898_29 #x0000000000000000))
(assert (= temp10898_30 #x0000000000000001))
(assert (= temp10898_31 temp10898_30))
(assert (= temp10898_32 (select ARGNAME_padding_NAMEEND_VAL temp10898_31)))
(assert (= temp10898_33 #x0000000000000000))
(assert (= temp10898_34 #x0000000000000002))
(assert (= temp10898_35 temp10898_34))
(assert (= temp10898_36 (select ARGNAME_padding_NAMEEND_VAL temp10898_35)))
(assert (= temp10898_37 #x0000000000000000))
(assert (= temp10898_38 #x0000000000000003))
(assert (= temp10898_39 temp10898_38))
(assert (= temp10898_40 (select ARGNAME_padding_NAMEEND_VAL temp10898_39)))
(assert (= temp10898_41 #x0000000000000000))
(assert (= temp10898_42 #x0000000000000004))
(assert (= temp10898_43 temp10898_42))
(assert (= temp10898_44 (select ARGNAME_padding_NAMEEND_VAL temp10898_43)))
(assert (= temp10898_45 #x0000000000000000))
(assert (= temp10898_46 #x0000000000000005))
(assert (= temp10898_47 temp10898_46))
(assert (= temp10898_48 (select ARGNAME_padding_NAMEEND_VAL temp10898_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10898_28 temp10898_25)
             (bvslt temp10898_32 temp10898_29)
             (bvslt temp10898_36 temp10898_33)
             (bvslt temp10898_40 temp10898_37)
             (bvslt temp10898_44 temp10898_41)
             (bvslt temp10898_48 temp10898_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10898_49 #x0000000000000000))
(assert (= var1191714 temp10898_49))
(assert (= temp10898_50 #x0000000000000000))
(assert (= temp10898_51 temp10898_50))
(assert (= temp10898_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10898_51)))
(assert (= temp10898_53 #x0000000000000001))
(assert (= temp10898_54 temp10898_53))
(assert (= temp10898_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10898_54)))
(assert (= temp10898_56 #x0000000000000002))
(assert (= temp10898_57 temp10898_56))
(assert (= temp10898_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10898_57)))
(assert (= temp10898_59 #x0000000000000003))
(assert (= temp10898_60 temp10898_59))
(assert (= temp10898_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10898_60)))
(assert (= temp10898_62 #x0000000000000004))
(assert (= temp10898_63 temp10898_62))
(assert (= temp10898_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10898_63)))
(assert (= temp10898_65 #x0000000000000005))
(assert (= temp10898_66 temp10898_65))
(assert (= temp10898_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10898_66)))
(assert (= temp10898_68 #x0000000000000000))
(assert (= temp10898_69 #x0000000000000000))
(assert (= temp10898_70 temp10898_69))
(assert (= temp10898_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10898_70)))
(assert (= temp10898_72 #x0000000000000000))
(assert (= temp10898_73 #x0000000000000001))
(assert (= temp10898_74 temp10898_73))
(assert (= temp10898_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10898_74)))
(assert (= temp10898_76 #x0000000000000000))
(assert (= temp10898_77 #x0000000000000002))
(assert (= temp10898_78 temp10898_77))
(assert (= temp10898_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10898_78)))
(assert (= temp10898_80 #x0000000000000000))
(assert (= temp10898_81 #x0000000000000003))
(assert (= temp10898_82 temp10898_81))
(assert (= temp10898_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10898_82)))
(assert (= temp10898_84 #x0000000000000000))
(assert (= temp10898_85 #x0000000000000004))
(assert (= temp10898_86 temp10898_85))
(assert (= temp10898_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10898_86)))
(assert (= temp10898_88 #x0000000000000000))
(assert (= temp10898_89 #x0000000000000005))
(assert (= temp10898_90 temp10898_89))
(assert (= temp10898_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10898_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10898_71 temp10898_68)
             (bvslt temp10898_75 temp10898_72)
             (bvslt temp10898_79 temp10898_76)
             (bvslt temp10898_83 temp10898_80)
             (bvslt temp10898_87 temp10898_84)
             (bvslt temp10898_91 temp10898_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10898_92 #x0000000000000000))
(assert (= var1191725 temp10898_92))
(assert (= temp10898_93 #x0000000000000000))
(assert (= temp10898_94 temp10898_93))
(assert (= temp10898_95 (select ARGNAME_stride_NAMEEND_VAL temp10898_94)))
(assert (= temp10898_96 #x0000000000000001))
(assert (= temp10898_97 temp10898_96))
(assert (= temp10898_98 (select ARGNAME_stride_NAMEEND_VAL temp10898_97)))
(assert (= temp10898_99 #x0000000000000002))
(assert (= temp10898_100 temp10898_99))
(assert (= temp10898_101 (select ARGNAME_stride_NAMEEND_VAL temp10898_100)))
(assert (= temp10898_102 #x0000000000000003))
(assert (= temp10898_103 temp10898_102))
(assert (= temp10898_104 (select ARGNAME_stride_NAMEEND_VAL temp10898_103)))
(assert (= temp10898_105 #x0000000000000004))
(assert (= temp10898_106 temp10898_105))
(assert (= temp10898_107 (select ARGNAME_stride_NAMEEND_VAL temp10898_106)))
(assert (= temp10898_108 #x0000000000000005))
(assert (= temp10898_109 temp10898_108))
(assert (= temp10898_110 (select ARGNAME_stride_NAMEEND_VAL temp10898_109)))
(assert (= temp10898_111 #x0000000000000000))
(assert (= temp10898_112 #x0000000000000000))
(assert (= temp10898_113 temp10898_112))
(assert (= temp10898_114 (select ARGNAME_stride_NAMEEND_VAL temp10898_113)))
(assert (= temp10898_115 #x0000000000000000))
(assert (= temp10898_116 #x0000000000000001))
(assert (= temp10898_117 temp10898_116))
(assert (= temp10898_118 (select ARGNAME_stride_NAMEEND_VAL temp10898_117)))
(assert (= temp10898_119 #x0000000000000000))
(assert (= temp10898_120 #x0000000000000002))
(assert (= temp10898_121 temp10898_120))
(assert (= temp10898_122 (select ARGNAME_stride_NAMEEND_VAL temp10898_121)))
(assert (= temp10898_123 #x0000000000000000))
(assert (= temp10898_124 #x0000000000000003))
(assert (= temp10898_125 temp10898_124))
(assert (= temp10898_126 (select ARGNAME_stride_NAMEEND_VAL temp10898_125)))
(assert (= temp10898_127 #x0000000000000000))
(assert (= temp10898_128 #x0000000000000004))
(assert (= temp10898_129 temp10898_128))
(assert (= temp10898_130 (select ARGNAME_stride_NAMEEND_VAL temp10898_129)))
(assert (= temp10898_131 #x0000000000000000))
(assert (= temp10898_132 #x0000000000000005))
(assert (= temp10898_133 temp10898_132))
(assert (= temp10898_134 (select ARGNAME_stride_NAMEEND_VAL temp10898_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10898_114 temp10898_111)
             (bvsle temp10898_118 temp10898_115)
             (bvsle temp10898_122 temp10898_119)
             (bvsle temp10898_126 temp10898_123)
             (bvsle temp10898_130 temp10898_127)
             (bvsle temp10898_134 temp10898_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10898_135 #x0000000000000000))
(assert (= var1191735 temp10898_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10898_136 #x0000000000000001))
(assert (= var1191747 temp10898_136))
(assert (= temp10898_137 #x0000000000000000))
(assert (= var1179826 temp10898_137))
(assert (= temp10898_138 #x0000000000000000))
(assert (= temp10898_139 temp10898_138))
(assert (= temp10898_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10898_139)))
(assert (= temp10898_141 #x0000000000000001))
(assert (= temp10898_142 temp10898_141))
(assert (= temp10898_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10898_142)))
(assert (= temp10898_144 #x0000000000000002))
(assert (= temp10898_145 temp10898_144))
(assert (= temp10898_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10898_145)))
(assert (= temp10898_147 #x0000000000000003))
(assert (= temp10898_148 temp10898_147))
(assert (= temp10898_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10898_148)))
(assert (= temp10898_150 #x0000000000000004))
(assert (= temp10898_151 temp10898_150))
(assert (= temp10898_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10898_151)))
(assert (= temp10898_153 #x0000000000000005))
(assert (= temp10898_154 temp10898_153))
(assert (= temp10898_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10898_154)))
(assert (= temp10898_157 var1179826))
(assert (= temp10898_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10898_157)))
(assert (= temp10898_156 temp10898_158))
(assert (= var1191780
   (ite (bvslt temp10898_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10898_159 #x0000000000000000))
(assert (= var1191780 temp10898_159))
(assert (= temp10898_160 #x0000000000000000))
(assert (= var1179826 temp10898_160))
(assert (= temp10898_162 var1179826))
(assert (= temp10898_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10898_162)))
(assert (= temp10898_161 temp10898_163))
(assert (= var1191802 (bvsmod temp10898_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10898_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10898_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10898_165 #x0000000000000001))
(assert (= var1191803 temp10898_165))
(assert (= temp10898_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10898_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10898_167 #x0000000000000001))
(assert (= var1191823 temp10898_167))
(assert (= temp10898_168 #x0000000000000001))
(assert (= var1180714 temp10898_168))
(assert (= temp10898_169 #x0000000000000000))
(assert (= temp10898_170 temp10898_169))
(assert (= temp10898_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10898_170)))
(assert (= temp10898_172 #x0000000000000001))
(assert (= temp10898_173 temp10898_172))
(assert (= temp10898_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10898_173)))
(assert (= temp10898_175 #x0000000000000002))
(assert (= temp10898_176 temp10898_175))
(assert (= temp10898_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10898_176)))
(assert (= temp10898_178 #x0000000000000003))
(assert (= temp10898_179 temp10898_178))
(assert (= temp10898_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10898_179)))
(assert (= temp10898_181 #x0000000000000004))
(assert (= temp10898_182 temp10898_181))
(assert (= temp10898_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10898_182)))
(assert (= temp10898_184 #x0000000000000005))
(assert (= temp10898_185 temp10898_184))
(assert (= temp10898_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10898_185)))
(assert (= temp10898_187 #x0000000000000000))
(assert (= temp10898_188
   (ite (bvslt var1180714 temp10898_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10898_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10898_188)))
(assert (= var1191831 temp10898_189))
(assert (bvslt (ite (bvslt var1180714 temp10898_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10898_190 #x0000000000000001))
(assert (= var1180714 temp10898_190))
(assert (= temp10898_192 var1180714))
(assert (= temp10898_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10898_192)))
(assert (= temp10898_191 temp10898_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10898_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10898_194 #x0000000000000001))
(assert (= var1191836 temp10898_194))
(assert (= temp10898_195 #x0000000000000000))
(assert (= var1179826 temp10898_195))
(assert (= temp10898_197 var1179826))
(assert (= temp10898_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10898_197)))
(assert (= temp10898_196 temp10898_198))
(assert (= temp10898_199 #x0000000000000002))
(assert (= var1586025 temp10898_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10898_200 #x0000000000000001))
(assert (= var1191993 temp10898_200))
(assert (= temp10898_201 #x0000000000000001))
(assert (= var2700303 temp10898_201))
(assert (= temp10898_202 #x0000000000000001))
(assert (= var2962447 temp10898_202))
(assert (= temp10898_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10898_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10898_204 #x0000000000000001))
(assert (= var211058 temp10898_204))
(assert (= temp10898_205 #x0000000000000001))
(assert (= var211188 temp10898_205))
(assert (= var3879401 var211188))
(assert (= temp10898_206 #x0000000000000000))
(assert (= var3866802 temp10898_206))
(assert (= temp10898_207 #x0000000000000000))
(assert (= temp10898_208
   (ite (bvslt var3866802 temp10898_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10898_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10898_208)))
(assert (= var3879420 temp10898_209))
(assert (bvslt (ite (bvslt var3866802 temp10898_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10898_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10898_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10898_211 #x0000000000000000))
(assert (= var3879421 temp10898_211))
(assert (= temp10898_212 #x0000000000000001))
(assert (= var3867690 temp10898_212))
(assert (= temp10898_213 #x0000000000000000))
(assert (= temp10898_214
   (ite (bvslt var3867690 temp10898_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10898_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10898_214)))
(assert (= var3879423 temp10898_215))
(assert (bvslt (ite (bvslt var3867690 temp10898_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10898_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10898_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10898_217 #x0000000000000001))
(assert (= var3879424 temp10898_217))
(assert (= temp10898_218 #x0000000000000000))
(assert (= var4133117 temp10898_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10898_219 #x0000000000000002))
(assert (= var4339331 temp10898_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10898_220 #x0000000000000000))
(assert (= var4404892 temp10898_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var5255568 var211201))
(assert (= var5517712 var211201))
(assert (= temp10898_221 #x0000000000000000))
(assert (= var5845392 temp10898_221))
(assert (= temp10898_222 #x0000000000000001))
(assert (= var211058 temp10898_222))
(model-add temp10898_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10898_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10898_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10898_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






