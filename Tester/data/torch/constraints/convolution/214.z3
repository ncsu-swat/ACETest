(declare-fun temp285_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp285_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp285_3 () (_ BitVec 64))
(declare-fun temp285_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp285_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp285_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp285_7 () (_ BitVec 64))
(declare-fun temp285_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp285_9 () (_ BitVec 64))
(declare-fun temp285_10 () (_ BitVec 64))
(declare-fun temp285_11 () (_ BitVec 64))
(declare-fun temp285_12 () (_ BitVec 64))
(declare-fun temp285_13 () (_ BitVec 64))
(declare-fun temp285_14 () (_ BitVec 64))
(declare-fun temp285_15 () (_ BitVec 64))
(declare-fun temp285_16 () (_ BitVec 64))
(declare-fun temp285_17 () (_ BitVec 64))
(declare-fun temp285_18 () (_ BitVec 64))
(declare-fun temp285_19 () (_ BitVec 64))
(declare-fun temp285_20 () (_ BitVec 64))
(declare-fun temp285_21 () (_ BitVec 64))
(declare-fun temp285_22 () (_ BitVec 64))
(declare-fun temp285_23 () (_ BitVec 64))
(declare-fun temp285_24 () (_ BitVec 64))
(declare-fun temp285_25 () (_ BitVec 64))
(declare-fun temp285_26 () (_ BitVec 64))
(declare-fun temp285_27 () (_ BitVec 64))
(declare-fun temp285_28 () (_ BitVec 64))
(declare-fun temp285_29 () (_ BitVec 64))
(declare-fun temp285_30 () (_ BitVec 64))
(declare-fun temp285_31 () (_ BitVec 64))
(declare-fun temp285_32 () (_ BitVec 64))
(declare-fun temp285_33 () (_ BitVec 64))
(declare-fun temp285_34 () (_ BitVec 64))
(declare-fun temp285_35 () (_ BitVec 64))
(declare-fun temp285_36 () (_ BitVec 64))
(declare-fun temp285_37 () (_ BitVec 64))
(declare-fun temp285_38 () (_ BitVec 64))
(declare-fun temp285_39 () (_ BitVec 64))
(declare-fun temp285_40 () (_ BitVec 64))
(declare-fun temp285_41 () (_ BitVec 64))
(declare-fun temp285_42 () (_ BitVec 64))
(declare-fun temp285_43 () (_ BitVec 64))
(declare-fun temp285_44 () (_ BitVec 64))
(declare-fun temp285_45 () (_ BitVec 64))
(declare-fun temp285_46 () (_ BitVec 64))
(declare-fun temp285_47 () (_ BitVec 64))
(declare-fun temp285_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp285_49 () (_ BitVec 64))
(declare-fun temp285_50 () (_ BitVec 64))
(declare-fun temp285_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp285_52 () (_ BitVec 64))
(declare-fun temp285_53 () (_ BitVec 64))
(declare-fun temp285_54 () (_ BitVec 64))
(declare-fun temp285_55 () (_ BitVec 64))
(declare-fun temp285_56 () (_ BitVec 64))
(declare-fun temp285_57 () (_ BitVec 64))
(declare-fun temp285_58 () (_ BitVec 64))
(declare-fun temp285_59 () (_ BitVec 64))
(declare-fun temp285_60 () (_ BitVec 64))
(declare-fun temp285_61 () (_ BitVec 64))
(declare-fun temp285_62 () (_ BitVec 64))
(declare-fun temp285_63 () (_ BitVec 64))
(declare-fun temp285_64 () (_ BitVec 64))
(declare-fun temp285_65 () (_ BitVec 64))
(declare-fun temp285_66 () (_ BitVec 64))
(declare-fun temp285_67 () (_ BitVec 64))
(declare-fun temp285_68 () (_ BitVec 64))
(declare-fun temp285_69 () (_ BitVec 64))
(declare-fun temp285_70 () (_ BitVec 64))
(declare-fun temp285_71 () (_ BitVec 64))
(declare-fun temp285_72 () (_ BitVec 64))
(declare-fun temp285_73 () (_ BitVec 64))
(declare-fun temp285_74 () (_ BitVec 64))
(declare-fun temp285_75 () (_ BitVec 64))
(declare-fun temp285_76 () (_ BitVec 64))
(declare-fun temp285_77 () (_ BitVec 64))
(declare-fun temp285_78 () (_ BitVec 64))
(declare-fun temp285_79 () (_ BitVec 64))
(declare-fun temp285_80 () (_ BitVec 64))
(declare-fun temp285_81 () (_ BitVec 64))
(declare-fun temp285_82 () (_ BitVec 64))
(declare-fun temp285_83 () (_ BitVec 64))
(declare-fun temp285_84 () (_ BitVec 64))
(declare-fun temp285_85 () (_ BitVec 64))
(declare-fun temp285_86 () (_ BitVec 64))
(declare-fun temp285_87 () (_ BitVec 64))
(declare-fun temp285_88 () (_ BitVec 64))
(declare-fun temp285_89 () (_ BitVec 64))
(declare-fun temp285_90 () (_ BitVec 64))
(declare-fun temp285_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp285_92 () (_ BitVec 64))
(declare-fun temp285_93 () (_ BitVec 64))
(declare-fun temp285_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp285_95 () (_ BitVec 64))
(declare-fun temp285_96 () (_ BitVec 64))
(declare-fun temp285_97 () (_ BitVec 64))
(declare-fun temp285_98 () (_ BitVec 64))
(declare-fun temp285_99 () (_ BitVec 64))
(declare-fun temp285_100 () (_ BitVec 64))
(declare-fun temp285_101 () (_ BitVec 64))
(declare-fun temp285_102 () (_ BitVec 64))
(declare-fun temp285_103 () (_ BitVec 64))
(declare-fun temp285_104 () (_ BitVec 64))
(declare-fun temp285_105 () (_ BitVec 64))
(declare-fun temp285_106 () (_ BitVec 64))
(declare-fun temp285_107 () (_ BitVec 64))
(declare-fun temp285_108 () (_ BitVec 64))
(declare-fun temp285_109 () (_ BitVec 64))
(declare-fun temp285_110 () (_ BitVec 64))
(declare-fun temp285_111 () (_ BitVec 64))
(declare-fun temp285_112 () (_ BitVec 64))
(declare-fun temp285_113 () (_ BitVec 64))
(declare-fun temp285_114 () (_ BitVec 64))
(declare-fun temp285_115 () (_ BitVec 64))
(declare-fun temp285_116 () (_ BitVec 64))
(declare-fun temp285_117 () (_ BitVec 64))
(declare-fun temp285_118 () (_ BitVec 64))
(declare-fun temp285_119 () (_ BitVec 64))
(declare-fun temp285_120 () (_ BitVec 64))
(declare-fun temp285_121 () (_ BitVec 64))
(declare-fun temp285_122 () (_ BitVec 64))
(declare-fun temp285_123 () (_ BitVec 64))
(declare-fun temp285_124 () (_ BitVec 64))
(declare-fun temp285_125 () (_ BitVec 64))
(declare-fun temp285_126 () (_ BitVec 64))
(declare-fun temp285_127 () (_ BitVec 64))
(declare-fun temp285_128 () (_ BitVec 64))
(declare-fun temp285_129 () (_ BitVec 64))
(declare-fun temp285_130 () (_ BitVec 64))
(declare-fun temp285_131 () (_ BitVec 64))
(declare-fun temp285_132 () (_ BitVec 64))
(declare-fun temp285_133 () (_ BitVec 64))
(declare-fun temp285_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp285_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp285_136 () (_ BitVec 64))
(declare-fun temp285_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp285_138 () (_ BitVec 64))
(declare-fun temp285_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp285_140 () (_ BitVec 64))
(declare-fun temp285_141 () (_ BitVec 64))
(declare-fun temp285_142 () (_ BitVec 64))
(declare-fun temp285_143 () (_ BitVec 64))
(declare-fun temp285_144 () (_ BitVec 64))
(declare-fun temp285_145 () (_ BitVec 64))
(declare-fun temp285_146 () (_ BitVec 64))
(declare-fun temp285_147 () (_ BitVec 64))
(declare-fun temp285_148 () (_ BitVec 64))
(declare-fun temp285_149 () (_ BitVec 64))
(declare-fun temp285_150 () (_ BitVec 64))
(declare-fun temp285_151 () (_ BitVec 64))
(declare-fun temp285_152 () (_ BitVec 64))
(declare-fun temp285_153 () (_ BitVec 64))
(declare-fun temp285_154 () (_ BitVec 64))
(declare-fun temp285_155 () (_ BitVec 64))
(declare-fun temp285_157 () (_ BitVec 64))
(declare-fun temp285_158 () (_ BitVec 64))
(declare-fun temp285_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp285_159 () (_ BitVec 64))
(declare-fun temp285_160 () (_ BitVec 64))
(declare-fun temp285_162 () (_ BitVec 64))
(declare-fun temp285_163 () (_ BitVec 64))
(declare-fun temp285_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp285_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp285_165 () (_ BitVec 64))
(declare-fun temp285_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp285_167 () (_ BitVec 64))
(declare-fun temp285_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp285_169 () (_ BitVec 64))
(declare-fun temp285_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp285_171 () (_ BitVec 64))
(declare-fun temp285_172 () (_ BitVec 64))
(declare-fun temp285_173 () (_ BitVec 64))
(declare-fun temp285_174 () (_ BitVec 64))
(declare-fun temp285_175 () (_ BitVec 64))
(declare-fun temp285_176 () (_ BitVec 64))
(declare-fun temp285_177 () (_ BitVec 64))
(declare-fun temp285_178 () (_ BitVec 64))
(declare-fun temp285_179 () (_ BitVec 64))
(declare-fun temp285_180 () (_ BitVec 64))
(declare-fun temp285_181 () (_ BitVec 64))
(declare-fun temp285_182 () (_ BitVec 64))
(declare-fun temp285_183 () (_ BitVec 64))
(declare-fun temp285_184 () (_ BitVec 64))
(declare-fun temp285_185 () (_ BitVec 64))
(declare-fun temp285_186 () (_ BitVec 64))
(declare-fun temp285_187 () (_ BitVec 64))
(declare-fun temp285_188 () (_ BitVec 64))
(declare-fun temp285_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp285_190 () (_ BitVec 64))
(declare-fun temp285_192 () (_ BitVec 64))
(declare-fun temp285_193 () (_ BitVec 64))
(declare-fun temp285_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp285_194 () (_ BitVec 64))
(declare-fun temp285_195 () (_ BitVec 64))
(declare-fun temp285_197 () (_ BitVec 64))
(declare-fun temp285_198 () (_ BitVec 64))
(declare-fun temp285_196 () (_ BitVec 64))
(declare-fun temp285_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp285_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp285_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp285_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp285_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp285_204 () (_ BitVec 64))
(declare-fun temp285_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp285_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp285_207 () (_ BitVec 64))
(declare-fun temp285_208 () (_ BitVec 64))
(declare-fun temp285_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp285_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp285_211 () (_ BitVec 64))
(declare-fun temp285_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp285_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp285_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp285_215 () (_ BitVec 64))
(assert (= temp285_1 #x0000000000000001))
(assert (= var77203 temp285_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp285_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp285_2)))
(assert (= temp285_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp285_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp285_4 #x0000000000000000))
(assert (= var210941 temp285_4))
(assert (= temp285_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp285_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp285_6 #x0000000000000000))
(assert (= var210986 temp285_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp285_7 #x0000000000000000))
(assert (= temp285_8 temp285_7))
(assert (= temp285_9 (select ARGNAME_padding_NAMEEND_VAL temp285_8)))
(assert (= temp285_10 #x0000000000000001))
(assert (= temp285_11 temp285_10))
(assert (= temp285_12 (select ARGNAME_padding_NAMEEND_VAL temp285_11)))
(assert (= temp285_13 #x0000000000000002))
(assert (= temp285_14 temp285_13))
(assert (= temp285_15 (select ARGNAME_padding_NAMEEND_VAL temp285_14)))
(assert (= temp285_16 #x0000000000000003))
(assert (= temp285_17 temp285_16))
(assert (= temp285_18 (select ARGNAME_padding_NAMEEND_VAL temp285_17)))
(assert (= temp285_19 #x0000000000000004))
(assert (= temp285_20 temp285_19))
(assert (= temp285_21 (select ARGNAME_padding_NAMEEND_VAL temp285_20)))
(assert (= temp285_22 #x0000000000000005))
(assert (= temp285_23 temp285_22))
(assert (= temp285_24 (select ARGNAME_padding_NAMEEND_VAL temp285_23)))
(assert (= temp285_25 #x0000000000000000))
(assert (= temp285_26 #x0000000000000000))
(assert (= temp285_27 temp285_26))
(assert (= temp285_28 (select ARGNAME_padding_NAMEEND_VAL temp285_27)))
(assert (= temp285_29 #x0000000000000000))
(assert (= temp285_30 #x0000000000000001))
(assert (= temp285_31 temp285_30))
(assert (= temp285_32 (select ARGNAME_padding_NAMEEND_VAL temp285_31)))
(assert (= temp285_33 #x0000000000000000))
(assert (= temp285_34 #x0000000000000002))
(assert (= temp285_35 temp285_34))
(assert (= temp285_36 (select ARGNAME_padding_NAMEEND_VAL temp285_35)))
(assert (= temp285_37 #x0000000000000000))
(assert (= temp285_38 #x0000000000000003))
(assert (= temp285_39 temp285_38))
(assert (= temp285_40 (select ARGNAME_padding_NAMEEND_VAL temp285_39)))
(assert (= temp285_41 #x0000000000000000))
(assert (= temp285_42 #x0000000000000004))
(assert (= temp285_43 temp285_42))
(assert (= temp285_44 (select ARGNAME_padding_NAMEEND_VAL temp285_43)))
(assert (= temp285_45 #x0000000000000000))
(assert (= temp285_46 #x0000000000000005))
(assert (= temp285_47 temp285_46))
(assert (= temp285_48 (select ARGNAME_padding_NAMEEND_VAL temp285_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp285_28 temp285_25)
             (bvslt temp285_32 temp285_29)
             (bvslt temp285_36 temp285_33)
             (bvslt temp285_40 temp285_37)
             (bvslt temp285_44 temp285_41)
             (bvslt temp285_48 temp285_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp285_49 #x0000000000000000))
(assert (= var1191714 temp285_49))
(assert (= temp285_50 #x0000000000000000))
(assert (= temp285_51 temp285_50))
(assert (= temp285_52 (select ARGNAME_output_padding_NAMEEND_VAL temp285_51)))
(assert (= temp285_53 #x0000000000000001))
(assert (= temp285_54 temp285_53))
(assert (= temp285_55 (select ARGNAME_output_padding_NAMEEND_VAL temp285_54)))
(assert (= temp285_56 #x0000000000000002))
(assert (= temp285_57 temp285_56))
(assert (= temp285_58 (select ARGNAME_output_padding_NAMEEND_VAL temp285_57)))
(assert (= temp285_59 #x0000000000000003))
(assert (= temp285_60 temp285_59))
(assert (= temp285_61 (select ARGNAME_output_padding_NAMEEND_VAL temp285_60)))
(assert (= temp285_62 #x0000000000000004))
(assert (= temp285_63 temp285_62))
(assert (= temp285_64 (select ARGNAME_output_padding_NAMEEND_VAL temp285_63)))
(assert (= temp285_65 #x0000000000000005))
(assert (= temp285_66 temp285_65))
(assert (= temp285_67 (select ARGNAME_output_padding_NAMEEND_VAL temp285_66)))
(assert (= temp285_68 #x0000000000000000))
(assert (= temp285_69 #x0000000000000000))
(assert (= temp285_70 temp285_69))
(assert (= temp285_71 (select ARGNAME_output_padding_NAMEEND_VAL temp285_70)))
(assert (= temp285_72 #x0000000000000000))
(assert (= temp285_73 #x0000000000000001))
(assert (= temp285_74 temp285_73))
(assert (= temp285_75 (select ARGNAME_output_padding_NAMEEND_VAL temp285_74)))
(assert (= temp285_76 #x0000000000000000))
(assert (= temp285_77 #x0000000000000002))
(assert (= temp285_78 temp285_77))
(assert (= temp285_79 (select ARGNAME_output_padding_NAMEEND_VAL temp285_78)))
(assert (= temp285_80 #x0000000000000000))
(assert (= temp285_81 #x0000000000000003))
(assert (= temp285_82 temp285_81))
(assert (= temp285_83 (select ARGNAME_output_padding_NAMEEND_VAL temp285_82)))
(assert (= temp285_84 #x0000000000000000))
(assert (= temp285_85 #x0000000000000004))
(assert (= temp285_86 temp285_85))
(assert (= temp285_87 (select ARGNAME_output_padding_NAMEEND_VAL temp285_86)))
(assert (= temp285_88 #x0000000000000000))
(assert (= temp285_89 #x0000000000000005))
(assert (= temp285_90 temp285_89))
(assert (= temp285_91 (select ARGNAME_output_padding_NAMEEND_VAL temp285_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp285_71 temp285_68)
             (bvslt temp285_75 temp285_72)
             (bvslt temp285_79 temp285_76)
             (bvslt temp285_83 temp285_80)
             (bvslt temp285_87 temp285_84)
             (bvslt temp285_91 temp285_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp285_92 #x0000000000000000))
(assert (= var1191725 temp285_92))
(assert (= temp285_93 #x0000000000000000))
(assert (= temp285_94 temp285_93))
(assert (= temp285_95 (select ARGNAME_stride_NAMEEND_VAL temp285_94)))
(assert (= temp285_96 #x0000000000000001))
(assert (= temp285_97 temp285_96))
(assert (= temp285_98 (select ARGNAME_stride_NAMEEND_VAL temp285_97)))
(assert (= temp285_99 #x0000000000000002))
(assert (= temp285_100 temp285_99))
(assert (= temp285_101 (select ARGNAME_stride_NAMEEND_VAL temp285_100)))
(assert (= temp285_102 #x0000000000000003))
(assert (= temp285_103 temp285_102))
(assert (= temp285_104 (select ARGNAME_stride_NAMEEND_VAL temp285_103)))
(assert (= temp285_105 #x0000000000000004))
(assert (= temp285_106 temp285_105))
(assert (= temp285_107 (select ARGNAME_stride_NAMEEND_VAL temp285_106)))
(assert (= temp285_108 #x0000000000000005))
(assert (= temp285_109 temp285_108))
(assert (= temp285_110 (select ARGNAME_stride_NAMEEND_VAL temp285_109)))
(assert (= temp285_111 #x0000000000000000))
(assert (= temp285_112 #x0000000000000000))
(assert (= temp285_113 temp285_112))
(assert (= temp285_114 (select ARGNAME_stride_NAMEEND_VAL temp285_113)))
(assert (= temp285_115 #x0000000000000000))
(assert (= temp285_116 #x0000000000000001))
(assert (= temp285_117 temp285_116))
(assert (= temp285_118 (select ARGNAME_stride_NAMEEND_VAL temp285_117)))
(assert (= temp285_119 #x0000000000000000))
(assert (= temp285_120 #x0000000000000002))
(assert (= temp285_121 temp285_120))
(assert (= temp285_122 (select ARGNAME_stride_NAMEEND_VAL temp285_121)))
(assert (= temp285_123 #x0000000000000000))
(assert (= temp285_124 #x0000000000000003))
(assert (= temp285_125 temp285_124))
(assert (= temp285_126 (select ARGNAME_stride_NAMEEND_VAL temp285_125)))
(assert (= temp285_127 #x0000000000000000))
(assert (= temp285_128 #x0000000000000004))
(assert (= temp285_129 temp285_128))
(assert (= temp285_130 (select ARGNAME_stride_NAMEEND_VAL temp285_129)))
(assert (= temp285_131 #x0000000000000000))
(assert (= temp285_132 #x0000000000000005))
(assert (= temp285_133 temp285_132))
(assert (= temp285_134 (select ARGNAME_stride_NAMEEND_VAL temp285_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp285_114 temp285_111)
             (bvsle temp285_118 temp285_115)
             (bvsle temp285_122 temp285_119)
             (bvsle temp285_126 temp285_123)
             (bvsle temp285_130 temp285_127)
             (bvsle temp285_134 temp285_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp285_135 #x0000000000000000))
(assert (= var1191735 temp285_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp285_136 #x0000000000000001))
(assert (= var1191747 temp285_136))
(assert (= temp285_137 #x0000000000000000))
(assert (= var1179826 temp285_137))
(assert (= temp285_138 #x0000000000000000))
(assert (= temp285_139 temp285_138))
(assert (= temp285_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp285_139)))
(assert (= temp285_141 #x0000000000000001))
(assert (= temp285_142 temp285_141))
(assert (= temp285_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp285_142)))
(assert (= temp285_144 #x0000000000000002))
(assert (= temp285_145 temp285_144))
(assert (= temp285_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp285_145)))
(assert (= temp285_147 #x0000000000000003))
(assert (= temp285_148 temp285_147))
(assert (= temp285_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp285_148)))
(assert (= temp285_150 #x0000000000000004))
(assert (= temp285_151 temp285_150))
(assert (= temp285_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp285_151)))
(assert (= temp285_153 #x0000000000000005))
(assert (= temp285_154 temp285_153))
(assert (= temp285_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp285_154)))
(assert (= temp285_157 var1179826))
(assert (= temp285_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp285_157)))
(assert (= temp285_156 temp285_158))
(assert (= var1191780
   (ite (bvslt temp285_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp285_159 #x0000000000000000))
(assert (= var1191780 temp285_159))
(assert (= temp285_160 #x0000000000000000))
(assert (= var1179826 temp285_160))
(assert (= temp285_162 var1179826))
(assert (= temp285_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp285_162)))
(assert (= temp285_161 temp285_163))
(assert (= var1191802 (bvsmod temp285_161 ARGNAME_groups_NAMEEND)))
(assert (= temp285_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp285_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp285_165 #x0000000000000001))
(assert (= var1191803 temp285_165))
(assert (= temp285_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp285_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp285_167 #x0000000000000001))
(assert (= var1191823 temp285_167))
(assert (= temp285_168 #x0000000000000001))
(assert (= var1180714 temp285_168))
(assert (= temp285_169 #x0000000000000000))
(assert (= temp285_170 temp285_169))
(assert (= temp285_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp285_170)))
(assert (= temp285_172 #x0000000000000001))
(assert (= temp285_173 temp285_172))
(assert (= temp285_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp285_173)))
(assert (= temp285_175 #x0000000000000002))
(assert (= temp285_176 temp285_175))
(assert (= temp285_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp285_176)))
(assert (= temp285_178 #x0000000000000003))
(assert (= temp285_179 temp285_178))
(assert (= temp285_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp285_179)))
(assert (= temp285_181 #x0000000000000004))
(assert (= temp285_182 temp285_181))
(assert (= temp285_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp285_182)))
(assert (= temp285_184 #x0000000000000005))
(assert (= temp285_185 temp285_184))
(assert (= temp285_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp285_185)))
(assert (= temp285_187 #x0000000000000000))
(assert (= temp285_188
   (ite (bvslt var1180714 temp285_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp285_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp285_188)))
(assert (= var1191831 temp285_189))
(assert (bvslt (ite (bvslt var1180714 temp285_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp285_190 #x0000000000000001))
(assert (= var1180714 temp285_190))
(assert (= temp285_192 var1180714))
(assert (= temp285_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp285_192)))
(assert (= temp285_191 temp285_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp285_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp285_194 #x0000000000000001))
(assert (= var1191836 temp285_194))
(assert (= temp285_195 #x0000000000000000))
(assert (= var1179826 temp285_195))
(assert (= temp285_197 var1179826))
(assert (= temp285_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp285_197)))
(assert (= temp285_196 temp285_198))
(assert (= temp285_199 #x0000000000000002))
(assert (= var1586025 temp285_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp285_200 #x0000000000000001))
(assert (= var1191993 temp285_200))
(assert (= temp285_201 #x0000000000000001))
(assert (= var2700303 temp285_201))
(assert (= temp285_202 #x0000000000000001))
(assert (= var2962447 temp285_202))
(assert (= temp285_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp285_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp285_204 #x0000000000000001))
(assert (= var211058 temp285_204))
(assert (= temp285_205 #x0000000000000001))
(assert (= var211188 temp285_205))
(assert (= var3879401 var211188))
(assert (= temp285_206 #x0000000000000000))
(assert (= var3866802 temp285_206))
(assert (= temp285_207 #x0000000000000000))
(assert (= temp285_208
   (ite (bvslt var3866802 temp285_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp285_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp285_208)))
(assert (= var3879420 temp285_209))
(assert (bvslt (ite (bvslt var3866802 temp285_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp285_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp285_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp285_211 #x0000000000000001))
(assert (= var3879421 temp285_211))
(assert (= temp285_212 #x0000000000000000))
(assert (= var4079423 temp285_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp285_213 #x0000000000000002))
(assert (= var4208259 temp285_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp285_214 #x0000000000000000))
(assert (= var4273820 temp285_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp285_215 #x0000000000000001))
(assert (= var211058 temp285_215))
(model-add temp285_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp285_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp285_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp285_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





