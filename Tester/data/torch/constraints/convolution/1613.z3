(declare-fun temp10945_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10945_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10945_3 () (_ BitVec 64))
(declare-fun temp10945_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10945_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10945_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10945_7 () (_ BitVec 64))
(declare-fun temp10945_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10945_9 () (_ BitVec 64))
(declare-fun temp10945_10 () (_ BitVec 64))
(declare-fun temp10945_11 () (_ BitVec 64))
(declare-fun temp10945_12 () (_ BitVec 64))
(declare-fun temp10945_13 () (_ BitVec 64))
(declare-fun temp10945_14 () (_ BitVec 64))
(declare-fun temp10945_15 () (_ BitVec 64))
(declare-fun temp10945_16 () (_ BitVec 64))
(declare-fun temp10945_17 () (_ BitVec 64))
(declare-fun temp10945_18 () (_ BitVec 64))
(declare-fun temp10945_19 () (_ BitVec 64))
(declare-fun temp10945_20 () (_ BitVec 64))
(declare-fun temp10945_21 () (_ BitVec 64))
(declare-fun temp10945_22 () (_ BitVec 64))
(declare-fun temp10945_23 () (_ BitVec 64))
(declare-fun temp10945_24 () (_ BitVec 64))
(declare-fun temp10945_25 () (_ BitVec 64))
(declare-fun temp10945_26 () (_ BitVec 64))
(declare-fun temp10945_27 () (_ BitVec 64))
(declare-fun temp10945_28 () (_ BitVec 64))
(declare-fun temp10945_29 () (_ BitVec 64))
(declare-fun temp10945_30 () (_ BitVec 64))
(declare-fun temp10945_31 () (_ BitVec 64))
(declare-fun temp10945_32 () (_ BitVec 64))
(declare-fun temp10945_33 () (_ BitVec 64))
(declare-fun temp10945_34 () (_ BitVec 64))
(declare-fun temp10945_35 () (_ BitVec 64))
(declare-fun temp10945_36 () (_ BitVec 64))
(declare-fun temp10945_37 () (_ BitVec 64))
(declare-fun temp10945_38 () (_ BitVec 64))
(declare-fun temp10945_39 () (_ BitVec 64))
(declare-fun temp10945_40 () (_ BitVec 64))
(declare-fun temp10945_41 () (_ BitVec 64))
(declare-fun temp10945_42 () (_ BitVec 64))
(declare-fun temp10945_43 () (_ BitVec 64))
(declare-fun temp10945_44 () (_ BitVec 64))
(declare-fun temp10945_45 () (_ BitVec 64))
(declare-fun temp10945_46 () (_ BitVec 64))
(declare-fun temp10945_47 () (_ BitVec 64))
(declare-fun temp10945_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10945_49 () (_ BitVec 64))
(declare-fun temp10945_50 () (_ BitVec 64))
(declare-fun temp10945_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10945_52 () (_ BitVec 64))
(declare-fun temp10945_53 () (_ BitVec 64))
(declare-fun temp10945_54 () (_ BitVec 64))
(declare-fun temp10945_55 () (_ BitVec 64))
(declare-fun temp10945_56 () (_ BitVec 64))
(declare-fun temp10945_57 () (_ BitVec 64))
(declare-fun temp10945_58 () (_ BitVec 64))
(declare-fun temp10945_59 () (_ BitVec 64))
(declare-fun temp10945_60 () (_ BitVec 64))
(declare-fun temp10945_61 () (_ BitVec 64))
(declare-fun temp10945_62 () (_ BitVec 64))
(declare-fun temp10945_63 () (_ BitVec 64))
(declare-fun temp10945_64 () (_ BitVec 64))
(declare-fun temp10945_65 () (_ BitVec 64))
(declare-fun temp10945_66 () (_ BitVec 64))
(declare-fun temp10945_67 () (_ BitVec 64))
(declare-fun temp10945_68 () (_ BitVec 64))
(declare-fun temp10945_69 () (_ BitVec 64))
(declare-fun temp10945_70 () (_ BitVec 64))
(declare-fun temp10945_71 () (_ BitVec 64))
(declare-fun temp10945_72 () (_ BitVec 64))
(declare-fun temp10945_73 () (_ BitVec 64))
(declare-fun temp10945_74 () (_ BitVec 64))
(declare-fun temp10945_75 () (_ BitVec 64))
(declare-fun temp10945_76 () (_ BitVec 64))
(declare-fun temp10945_77 () (_ BitVec 64))
(declare-fun temp10945_78 () (_ BitVec 64))
(declare-fun temp10945_79 () (_ BitVec 64))
(declare-fun temp10945_80 () (_ BitVec 64))
(declare-fun temp10945_81 () (_ BitVec 64))
(declare-fun temp10945_82 () (_ BitVec 64))
(declare-fun temp10945_83 () (_ BitVec 64))
(declare-fun temp10945_84 () (_ BitVec 64))
(declare-fun temp10945_85 () (_ BitVec 64))
(declare-fun temp10945_86 () (_ BitVec 64))
(declare-fun temp10945_87 () (_ BitVec 64))
(declare-fun temp10945_88 () (_ BitVec 64))
(declare-fun temp10945_89 () (_ BitVec 64))
(declare-fun temp10945_90 () (_ BitVec 64))
(declare-fun temp10945_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10945_92 () (_ BitVec 64))
(declare-fun temp10945_93 () (_ BitVec 64))
(declare-fun temp10945_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10945_95 () (_ BitVec 64))
(declare-fun temp10945_96 () (_ BitVec 64))
(declare-fun temp10945_97 () (_ BitVec 64))
(declare-fun temp10945_98 () (_ BitVec 64))
(declare-fun temp10945_99 () (_ BitVec 64))
(declare-fun temp10945_100 () (_ BitVec 64))
(declare-fun temp10945_101 () (_ BitVec 64))
(declare-fun temp10945_102 () (_ BitVec 64))
(declare-fun temp10945_103 () (_ BitVec 64))
(declare-fun temp10945_104 () (_ BitVec 64))
(declare-fun temp10945_105 () (_ BitVec 64))
(declare-fun temp10945_106 () (_ BitVec 64))
(declare-fun temp10945_107 () (_ BitVec 64))
(declare-fun temp10945_108 () (_ BitVec 64))
(declare-fun temp10945_109 () (_ BitVec 64))
(declare-fun temp10945_110 () (_ BitVec 64))
(declare-fun temp10945_111 () (_ BitVec 64))
(declare-fun temp10945_112 () (_ BitVec 64))
(declare-fun temp10945_113 () (_ BitVec 64))
(declare-fun temp10945_114 () (_ BitVec 64))
(declare-fun temp10945_115 () (_ BitVec 64))
(declare-fun temp10945_116 () (_ BitVec 64))
(declare-fun temp10945_117 () (_ BitVec 64))
(declare-fun temp10945_118 () (_ BitVec 64))
(declare-fun temp10945_119 () (_ BitVec 64))
(declare-fun temp10945_120 () (_ BitVec 64))
(declare-fun temp10945_121 () (_ BitVec 64))
(declare-fun temp10945_122 () (_ BitVec 64))
(declare-fun temp10945_123 () (_ BitVec 64))
(declare-fun temp10945_124 () (_ BitVec 64))
(declare-fun temp10945_125 () (_ BitVec 64))
(declare-fun temp10945_126 () (_ BitVec 64))
(declare-fun temp10945_127 () (_ BitVec 64))
(declare-fun temp10945_128 () (_ BitVec 64))
(declare-fun temp10945_129 () (_ BitVec 64))
(declare-fun temp10945_130 () (_ BitVec 64))
(declare-fun temp10945_131 () (_ BitVec 64))
(declare-fun temp10945_132 () (_ BitVec 64))
(declare-fun temp10945_133 () (_ BitVec 64))
(declare-fun temp10945_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10945_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10945_136 () (_ BitVec 64))
(declare-fun temp10945_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10945_138 () (_ BitVec 64))
(declare-fun temp10945_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10945_140 () (_ BitVec 64))
(declare-fun temp10945_141 () (_ BitVec 64))
(declare-fun temp10945_142 () (_ BitVec 64))
(declare-fun temp10945_143 () (_ BitVec 64))
(declare-fun temp10945_144 () (_ BitVec 64))
(declare-fun temp10945_145 () (_ BitVec 64))
(declare-fun temp10945_146 () (_ BitVec 64))
(declare-fun temp10945_147 () (_ BitVec 64))
(declare-fun temp10945_148 () (_ BitVec 64))
(declare-fun temp10945_149 () (_ BitVec 64))
(declare-fun temp10945_150 () (_ BitVec 64))
(declare-fun temp10945_151 () (_ BitVec 64))
(declare-fun temp10945_152 () (_ BitVec 64))
(declare-fun temp10945_153 () (_ BitVec 64))
(declare-fun temp10945_154 () (_ BitVec 64))
(declare-fun temp10945_155 () (_ BitVec 64))
(declare-fun temp10945_157 () (_ BitVec 64))
(declare-fun temp10945_158 () (_ BitVec 64))
(declare-fun temp10945_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10945_159 () (_ BitVec 64))
(declare-fun temp10945_160 () (_ BitVec 64))
(declare-fun temp10945_162 () (_ BitVec 64))
(declare-fun temp10945_163 () (_ BitVec 64))
(declare-fun temp10945_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10945_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10945_165 () (_ BitVec 64))
(declare-fun temp10945_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10945_167 () (_ BitVec 64))
(declare-fun temp10945_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10945_169 () (_ BitVec 64))
(declare-fun temp10945_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10945_171 () (_ BitVec 64))
(declare-fun temp10945_172 () (_ BitVec 64))
(declare-fun temp10945_173 () (_ BitVec 64))
(declare-fun temp10945_174 () (_ BitVec 64))
(declare-fun temp10945_175 () (_ BitVec 64))
(declare-fun temp10945_176 () (_ BitVec 64))
(declare-fun temp10945_177 () (_ BitVec 64))
(declare-fun temp10945_178 () (_ BitVec 64))
(declare-fun temp10945_179 () (_ BitVec 64))
(declare-fun temp10945_180 () (_ BitVec 64))
(declare-fun temp10945_181 () (_ BitVec 64))
(declare-fun temp10945_182 () (_ BitVec 64))
(declare-fun temp10945_183 () (_ BitVec 64))
(declare-fun temp10945_184 () (_ BitVec 64))
(declare-fun temp10945_185 () (_ BitVec 64))
(declare-fun temp10945_186 () (_ BitVec 64))
(declare-fun temp10945_187 () (_ BitVec 64))
(declare-fun temp10945_188 () (_ BitVec 64))
(declare-fun temp10945_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10945_190 () (_ BitVec 64))
(declare-fun temp10945_192 () (_ BitVec 64))
(declare-fun temp10945_193 () (_ BitVec 64))
(declare-fun temp10945_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10945_194 () (_ BitVec 64))
(declare-fun temp10945_195 () (_ BitVec 64))
(declare-fun temp10945_197 () (_ BitVec 64))
(declare-fun temp10945_198 () (_ BitVec 64))
(declare-fun temp10945_196 () (_ BitVec 64))
(declare-fun temp10945_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10945_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10945_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10945_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10945_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10945_204 () (_ BitVec 64))
(declare-fun temp10945_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10945_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10945_207 () (_ BitVec 64))
(declare-fun temp10945_208 () (_ BitVec 64))
(declare-fun temp10945_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10945_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10945_211 () (_ BitVec 64))
(declare-fun temp10945_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10945_213 () (_ BitVec 64))
(declare-fun temp10945_214 () (_ BitVec 64))
(declare-fun temp10945_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10945_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10945_217 () (_ BitVec 64))
(declare-fun temp10945_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10945_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10945_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var5058960 () (_ BitVec 64))
(declare-fun var5321104 () (_ BitVec 64))
(declare-fun temp10945_221 () (_ BitVec 64))
(declare-fun var5648784 () (_ BitVec 64))
(declare-fun temp10945_222 () (_ BitVec 64))
(assert (= temp10945_1 #x0000000000000001))
(assert (= var77203 temp10945_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10945_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10945_2)))
(assert (= temp10945_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10945_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10945_4 #x0000000000000000))
(assert (= var210941 temp10945_4))
(assert (= temp10945_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10945_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10945_6 #x0000000000000000))
(assert (= var210986 temp10945_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10945_7 #x0000000000000000))
(assert (= temp10945_8 temp10945_7))
(assert (= temp10945_9 (select ARGNAME_padding_NAMEEND_VAL temp10945_8)))
(assert (= temp10945_10 #x0000000000000001))
(assert (= temp10945_11 temp10945_10))
(assert (= temp10945_12 (select ARGNAME_padding_NAMEEND_VAL temp10945_11)))
(assert (= temp10945_13 #x0000000000000002))
(assert (= temp10945_14 temp10945_13))
(assert (= temp10945_15 (select ARGNAME_padding_NAMEEND_VAL temp10945_14)))
(assert (= temp10945_16 #x0000000000000003))
(assert (= temp10945_17 temp10945_16))
(assert (= temp10945_18 (select ARGNAME_padding_NAMEEND_VAL temp10945_17)))
(assert (= temp10945_19 #x0000000000000004))
(assert (= temp10945_20 temp10945_19))
(assert (= temp10945_21 (select ARGNAME_padding_NAMEEND_VAL temp10945_20)))
(assert (= temp10945_22 #x0000000000000005))
(assert (= temp10945_23 temp10945_22))
(assert (= temp10945_24 (select ARGNAME_padding_NAMEEND_VAL temp10945_23)))
(assert (= temp10945_25 #x0000000000000000))
(assert (= temp10945_26 #x0000000000000000))
(assert (= temp10945_27 temp10945_26))
(assert (= temp10945_28 (select ARGNAME_padding_NAMEEND_VAL temp10945_27)))
(assert (= temp10945_29 #x0000000000000000))
(assert (= temp10945_30 #x0000000000000001))
(assert (= temp10945_31 temp10945_30))
(assert (= temp10945_32 (select ARGNAME_padding_NAMEEND_VAL temp10945_31)))
(assert (= temp10945_33 #x0000000000000000))
(assert (= temp10945_34 #x0000000000000002))
(assert (= temp10945_35 temp10945_34))
(assert (= temp10945_36 (select ARGNAME_padding_NAMEEND_VAL temp10945_35)))
(assert (= temp10945_37 #x0000000000000000))
(assert (= temp10945_38 #x0000000000000003))
(assert (= temp10945_39 temp10945_38))
(assert (= temp10945_40 (select ARGNAME_padding_NAMEEND_VAL temp10945_39)))
(assert (= temp10945_41 #x0000000000000000))
(assert (= temp10945_42 #x0000000000000004))
(assert (= temp10945_43 temp10945_42))
(assert (= temp10945_44 (select ARGNAME_padding_NAMEEND_VAL temp10945_43)))
(assert (= temp10945_45 #x0000000000000000))
(assert (= temp10945_46 #x0000000000000005))
(assert (= temp10945_47 temp10945_46))
(assert (= temp10945_48 (select ARGNAME_padding_NAMEEND_VAL temp10945_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10945_28 temp10945_25)
             (bvslt temp10945_32 temp10945_29)
             (bvslt temp10945_36 temp10945_33)
             (bvslt temp10945_40 temp10945_37)
             (bvslt temp10945_44 temp10945_41)
             (bvslt temp10945_48 temp10945_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10945_49 #x0000000000000000))
(assert (= var1191714 temp10945_49))
(assert (= temp10945_50 #x0000000000000000))
(assert (= temp10945_51 temp10945_50))
(assert (= temp10945_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10945_51)))
(assert (= temp10945_53 #x0000000000000001))
(assert (= temp10945_54 temp10945_53))
(assert (= temp10945_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10945_54)))
(assert (= temp10945_56 #x0000000000000002))
(assert (= temp10945_57 temp10945_56))
(assert (= temp10945_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10945_57)))
(assert (= temp10945_59 #x0000000000000003))
(assert (= temp10945_60 temp10945_59))
(assert (= temp10945_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10945_60)))
(assert (= temp10945_62 #x0000000000000004))
(assert (= temp10945_63 temp10945_62))
(assert (= temp10945_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10945_63)))
(assert (= temp10945_65 #x0000000000000005))
(assert (= temp10945_66 temp10945_65))
(assert (= temp10945_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10945_66)))
(assert (= temp10945_68 #x0000000000000000))
(assert (= temp10945_69 #x0000000000000000))
(assert (= temp10945_70 temp10945_69))
(assert (= temp10945_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10945_70)))
(assert (= temp10945_72 #x0000000000000000))
(assert (= temp10945_73 #x0000000000000001))
(assert (= temp10945_74 temp10945_73))
(assert (= temp10945_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10945_74)))
(assert (= temp10945_76 #x0000000000000000))
(assert (= temp10945_77 #x0000000000000002))
(assert (= temp10945_78 temp10945_77))
(assert (= temp10945_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10945_78)))
(assert (= temp10945_80 #x0000000000000000))
(assert (= temp10945_81 #x0000000000000003))
(assert (= temp10945_82 temp10945_81))
(assert (= temp10945_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10945_82)))
(assert (= temp10945_84 #x0000000000000000))
(assert (= temp10945_85 #x0000000000000004))
(assert (= temp10945_86 temp10945_85))
(assert (= temp10945_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10945_86)))
(assert (= temp10945_88 #x0000000000000000))
(assert (= temp10945_89 #x0000000000000005))
(assert (= temp10945_90 temp10945_89))
(assert (= temp10945_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10945_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10945_71 temp10945_68)
             (bvslt temp10945_75 temp10945_72)
             (bvslt temp10945_79 temp10945_76)
             (bvslt temp10945_83 temp10945_80)
             (bvslt temp10945_87 temp10945_84)
             (bvslt temp10945_91 temp10945_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10945_92 #x0000000000000000))
(assert (= var1191725 temp10945_92))
(assert (= temp10945_93 #x0000000000000000))
(assert (= temp10945_94 temp10945_93))
(assert (= temp10945_95 (select ARGNAME_stride_NAMEEND_VAL temp10945_94)))
(assert (= temp10945_96 #x0000000000000001))
(assert (= temp10945_97 temp10945_96))
(assert (= temp10945_98 (select ARGNAME_stride_NAMEEND_VAL temp10945_97)))
(assert (= temp10945_99 #x0000000000000002))
(assert (= temp10945_100 temp10945_99))
(assert (= temp10945_101 (select ARGNAME_stride_NAMEEND_VAL temp10945_100)))
(assert (= temp10945_102 #x0000000000000003))
(assert (= temp10945_103 temp10945_102))
(assert (= temp10945_104 (select ARGNAME_stride_NAMEEND_VAL temp10945_103)))
(assert (= temp10945_105 #x0000000000000004))
(assert (= temp10945_106 temp10945_105))
(assert (= temp10945_107 (select ARGNAME_stride_NAMEEND_VAL temp10945_106)))
(assert (= temp10945_108 #x0000000000000005))
(assert (= temp10945_109 temp10945_108))
(assert (= temp10945_110 (select ARGNAME_stride_NAMEEND_VAL temp10945_109)))
(assert (= temp10945_111 #x0000000000000000))
(assert (= temp10945_112 #x0000000000000000))
(assert (= temp10945_113 temp10945_112))
(assert (= temp10945_114 (select ARGNAME_stride_NAMEEND_VAL temp10945_113)))
(assert (= temp10945_115 #x0000000000000000))
(assert (= temp10945_116 #x0000000000000001))
(assert (= temp10945_117 temp10945_116))
(assert (= temp10945_118 (select ARGNAME_stride_NAMEEND_VAL temp10945_117)))
(assert (= temp10945_119 #x0000000000000000))
(assert (= temp10945_120 #x0000000000000002))
(assert (= temp10945_121 temp10945_120))
(assert (= temp10945_122 (select ARGNAME_stride_NAMEEND_VAL temp10945_121)))
(assert (= temp10945_123 #x0000000000000000))
(assert (= temp10945_124 #x0000000000000003))
(assert (= temp10945_125 temp10945_124))
(assert (= temp10945_126 (select ARGNAME_stride_NAMEEND_VAL temp10945_125)))
(assert (= temp10945_127 #x0000000000000000))
(assert (= temp10945_128 #x0000000000000004))
(assert (= temp10945_129 temp10945_128))
(assert (= temp10945_130 (select ARGNAME_stride_NAMEEND_VAL temp10945_129)))
(assert (= temp10945_131 #x0000000000000000))
(assert (= temp10945_132 #x0000000000000005))
(assert (= temp10945_133 temp10945_132))
(assert (= temp10945_134 (select ARGNAME_stride_NAMEEND_VAL temp10945_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10945_114 temp10945_111)
             (bvsle temp10945_118 temp10945_115)
             (bvsle temp10945_122 temp10945_119)
             (bvsle temp10945_126 temp10945_123)
             (bvsle temp10945_130 temp10945_127)
             (bvsle temp10945_134 temp10945_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10945_135 #x0000000000000000))
(assert (= var1191735 temp10945_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10945_136 #x0000000000000001))
(assert (= var1191747 temp10945_136))
(assert (= temp10945_137 #x0000000000000000))
(assert (= var1179826 temp10945_137))
(assert (= temp10945_138 #x0000000000000000))
(assert (= temp10945_139 temp10945_138))
(assert (= temp10945_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10945_139)))
(assert (= temp10945_141 #x0000000000000001))
(assert (= temp10945_142 temp10945_141))
(assert (= temp10945_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10945_142)))
(assert (= temp10945_144 #x0000000000000002))
(assert (= temp10945_145 temp10945_144))
(assert (= temp10945_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10945_145)))
(assert (= temp10945_147 #x0000000000000003))
(assert (= temp10945_148 temp10945_147))
(assert (= temp10945_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10945_148)))
(assert (= temp10945_150 #x0000000000000004))
(assert (= temp10945_151 temp10945_150))
(assert (= temp10945_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10945_151)))
(assert (= temp10945_153 #x0000000000000005))
(assert (= temp10945_154 temp10945_153))
(assert (= temp10945_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10945_154)))
(assert (= temp10945_157 var1179826))
(assert (= temp10945_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10945_157)))
(assert (= temp10945_156 temp10945_158))
(assert (= var1191780
   (ite (bvslt temp10945_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10945_159 #x0000000000000000))
(assert (= var1191780 temp10945_159))
(assert (= temp10945_160 #x0000000000000000))
(assert (= var1179826 temp10945_160))
(assert (= temp10945_162 var1179826))
(assert (= temp10945_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10945_162)))
(assert (= temp10945_161 temp10945_163))
(assert (= var1191802 (bvsmod temp10945_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10945_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10945_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10945_165 #x0000000000000001))
(assert (= var1191803 temp10945_165))
(assert (= temp10945_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10945_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10945_167 #x0000000000000001))
(assert (= var1191823 temp10945_167))
(assert (= temp10945_168 #x0000000000000001))
(assert (= var1180714 temp10945_168))
(assert (= temp10945_169 #x0000000000000000))
(assert (= temp10945_170 temp10945_169))
(assert (= temp10945_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10945_170)))
(assert (= temp10945_172 #x0000000000000001))
(assert (= temp10945_173 temp10945_172))
(assert (= temp10945_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10945_173)))
(assert (= temp10945_175 #x0000000000000002))
(assert (= temp10945_176 temp10945_175))
(assert (= temp10945_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10945_176)))
(assert (= temp10945_178 #x0000000000000003))
(assert (= temp10945_179 temp10945_178))
(assert (= temp10945_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10945_179)))
(assert (= temp10945_181 #x0000000000000004))
(assert (= temp10945_182 temp10945_181))
(assert (= temp10945_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10945_182)))
(assert (= temp10945_184 #x0000000000000005))
(assert (= temp10945_185 temp10945_184))
(assert (= temp10945_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10945_185)))
(assert (= temp10945_187 #x0000000000000000))
(assert (= temp10945_188
   (ite (bvslt var1180714 temp10945_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10945_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10945_188)))
(assert (= var1191831 temp10945_189))
(assert (bvslt (ite (bvslt var1180714 temp10945_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10945_190 #x0000000000000001))
(assert (= var1180714 temp10945_190))
(assert (= temp10945_192 var1180714))
(assert (= temp10945_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10945_192)))
(assert (= temp10945_191 temp10945_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10945_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10945_194 #x0000000000000001))
(assert (= var1191836 temp10945_194))
(assert (= temp10945_195 #x0000000000000000))
(assert (= var1179826 temp10945_195))
(assert (= temp10945_197 var1179826))
(assert (= temp10945_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10945_197)))
(assert (= temp10945_196 temp10945_198))
(assert (= temp10945_199 #x0000000000000002))
(assert (= var1586025 temp10945_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10945_200 #x0000000000000001))
(assert (= var1191993 temp10945_200))
(assert (= temp10945_201 #x0000000000000001))
(assert (= var2700303 temp10945_201))
(assert (= temp10945_202 #x0000000000000001))
(assert (= var2962447 temp10945_202))
(assert (= temp10945_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10945_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10945_204 #x0000000000000001))
(assert (= var211058 temp10945_204))
(assert (= temp10945_205 #x0000000000000001))
(assert (= var211188 temp10945_205))
(assert (= var3879401 var211188))
(assert (= temp10945_206 #x0000000000000000))
(assert (= var3866802 temp10945_206))
(assert (= temp10945_207 #x0000000000000000))
(assert (= temp10945_208
   (ite (bvslt var3866802 temp10945_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10945_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10945_208)))
(assert (= var3879420 temp10945_209))
(assert (bvslt (ite (bvslt var3866802 temp10945_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10945_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10945_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10945_211 #x0000000000000000))
(assert (= var3879421 temp10945_211))
(assert (= temp10945_212 #x0000000000000001))
(assert (= var3867690 temp10945_212))
(assert (= temp10945_213 #x0000000000000000))
(assert (= temp10945_214
   (ite (bvslt var3867690 temp10945_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10945_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10945_214)))
(assert (= var3879423 temp10945_215))
(assert (bvslt (ite (bvslt var3867690 temp10945_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10945_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10945_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10945_217 #x0000000000000001))
(assert (= var3879424 temp10945_217))
(assert (= temp10945_218 #x0000000000000000))
(assert (= var4133117 temp10945_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10945_219 #x0000000000000002))
(assert (= var4339331 temp10945_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10945_220 #x0000000000000000))
(assert (= var4404892 temp10945_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var5058960 var211201))
(assert (= var5321104 var211201))
(assert (= temp10945_221 #x0000000000000000))
(assert (= var5648784 temp10945_221))
(assert (= temp10945_222 #x0000000000000001))
(assert (= var211058 temp10945_222))
(model-add temp10945_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10945_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10945_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10945_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))



