(declare-fun temp1_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp1_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1_3 () (_ BitVec 64))
(declare-fun temp1_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp1_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1_7 () (_ BitVec 64))
(declare-fun temp1_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1_9 () (_ BitVec 64))
(declare-fun temp1_10 () (_ BitVec 64))
(declare-fun temp1_11 () (_ BitVec 64))
(declare-fun temp1_12 () (_ BitVec 64))
(declare-fun temp1_13 () (_ BitVec 64))
(declare-fun temp1_14 () (_ BitVec 64))
(declare-fun temp1_15 () (_ BitVec 64))
(declare-fun temp1_16 () (_ BitVec 64))
(declare-fun temp1_17 () (_ BitVec 64))
(declare-fun temp1_18 () (_ BitVec 64))
(declare-fun temp1_19 () (_ BitVec 64))
(declare-fun temp1_20 () (_ BitVec 64))
(declare-fun temp1_21 () (_ BitVec 64))
(declare-fun temp1_22 () (_ BitVec 64))
(declare-fun temp1_23 () (_ BitVec 64))
(declare-fun temp1_24 () (_ BitVec 64))
(declare-fun temp1_25 () (_ BitVec 64))
(declare-fun temp1_26 () (_ BitVec 64))
(declare-fun temp1_27 () (_ BitVec 64))
(declare-fun temp1_28 () (_ BitVec 64))
(declare-fun temp1_29 () (_ BitVec 64))
(declare-fun temp1_30 () (_ BitVec 64))
(declare-fun temp1_31 () (_ BitVec 64))
(declare-fun temp1_32 () (_ BitVec 64))
(declare-fun temp1_33 () (_ BitVec 64))
(declare-fun temp1_34 () (_ BitVec 64))
(declare-fun temp1_35 () (_ BitVec 64))
(declare-fun temp1_36 () (_ BitVec 64))
(declare-fun temp1_37 () (_ BitVec 64))
(declare-fun temp1_38 () (_ BitVec 64))
(declare-fun temp1_39 () (_ BitVec 64))
(declare-fun temp1_40 () (_ BitVec 64))
(declare-fun temp1_41 () (_ BitVec 64))
(declare-fun temp1_42 () (_ BitVec 64))
(declare-fun temp1_43 () (_ BitVec 64))
(declare-fun temp1_44 () (_ BitVec 64))
(declare-fun temp1_45 () (_ BitVec 64))
(declare-fun temp1_46 () (_ BitVec 64))
(declare-fun temp1_47 () (_ BitVec 64))
(declare-fun temp1_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp1_49 () (_ BitVec 64))
(declare-fun temp1_50 () (_ BitVec 64))
(declare-fun temp1_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1_52 () (_ BitVec 64))
(declare-fun temp1_53 () (_ BitVec 64))
(declare-fun temp1_54 () (_ BitVec 64))
(declare-fun temp1_55 () (_ BitVec 64))
(declare-fun temp1_56 () (_ BitVec 64))
(declare-fun temp1_57 () (_ BitVec 64))
(declare-fun temp1_58 () (_ BitVec 64))
(declare-fun temp1_59 () (_ BitVec 64))
(declare-fun temp1_60 () (_ BitVec 64))
(declare-fun temp1_61 () (_ BitVec 64))
(declare-fun temp1_62 () (_ BitVec 64))
(declare-fun temp1_63 () (_ BitVec 64))
(declare-fun temp1_64 () (_ BitVec 64))
(declare-fun temp1_65 () (_ BitVec 64))
(declare-fun temp1_66 () (_ BitVec 64))
(declare-fun temp1_67 () (_ BitVec 64))
(declare-fun temp1_68 () (_ BitVec 64))
(declare-fun temp1_69 () (_ BitVec 64))
(declare-fun temp1_70 () (_ BitVec 64))
(declare-fun temp1_71 () (_ BitVec 64))
(declare-fun temp1_72 () (_ BitVec 64))
(declare-fun temp1_73 () (_ BitVec 64))
(declare-fun temp1_74 () (_ BitVec 64))
(declare-fun temp1_75 () (_ BitVec 64))
(declare-fun temp1_76 () (_ BitVec 64))
(declare-fun temp1_77 () (_ BitVec 64))
(declare-fun temp1_78 () (_ BitVec 64))
(declare-fun temp1_79 () (_ BitVec 64))
(declare-fun temp1_80 () (_ BitVec 64))
(declare-fun temp1_81 () (_ BitVec 64))
(declare-fun temp1_82 () (_ BitVec 64))
(declare-fun temp1_83 () (_ BitVec 64))
(declare-fun temp1_84 () (_ BitVec 64))
(declare-fun temp1_85 () (_ BitVec 64))
(declare-fun temp1_86 () (_ BitVec 64))
(declare-fun temp1_87 () (_ BitVec 64))
(declare-fun temp1_88 () (_ BitVec 64))
(declare-fun temp1_89 () (_ BitVec 64))
(declare-fun temp1_90 () (_ BitVec 64))
(declare-fun temp1_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp1_92 () (_ BitVec 64))
(declare-fun temp1_93 () (_ BitVec 64))
(declare-fun temp1_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1_95 () (_ BitVec 64))
(declare-fun temp1_96 () (_ BitVec 64))
(declare-fun temp1_97 () (_ BitVec 64))
(declare-fun temp1_98 () (_ BitVec 64))
(declare-fun temp1_99 () (_ BitVec 64))
(declare-fun temp1_100 () (_ BitVec 64))
(declare-fun temp1_101 () (_ BitVec 64))
(declare-fun temp1_102 () (_ BitVec 64))
(declare-fun temp1_103 () (_ BitVec 64))
(declare-fun temp1_104 () (_ BitVec 64))
(declare-fun temp1_105 () (_ BitVec 64))
(declare-fun temp1_106 () (_ BitVec 64))
(declare-fun temp1_107 () (_ BitVec 64))
(declare-fun temp1_108 () (_ BitVec 64))
(declare-fun temp1_109 () (_ BitVec 64))
(declare-fun temp1_110 () (_ BitVec 64))
(declare-fun temp1_111 () (_ BitVec 64))
(declare-fun temp1_112 () (_ BitVec 64))
(declare-fun temp1_113 () (_ BitVec 64))
(declare-fun temp1_114 () (_ BitVec 64))
(declare-fun temp1_115 () (_ BitVec 64))
(declare-fun temp1_116 () (_ BitVec 64))
(declare-fun temp1_117 () (_ BitVec 64))
(declare-fun temp1_118 () (_ BitVec 64))
(declare-fun temp1_119 () (_ BitVec 64))
(declare-fun temp1_120 () (_ BitVec 64))
(declare-fun temp1_121 () (_ BitVec 64))
(declare-fun temp1_122 () (_ BitVec 64))
(declare-fun temp1_123 () (_ BitVec 64))
(declare-fun temp1_124 () (_ BitVec 64))
(declare-fun temp1_125 () (_ BitVec 64))
(declare-fun temp1_126 () (_ BitVec 64))
(declare-fun temp1_127 () (_ BitVec 64))
(declare-fun temp1_128 () (_ BitVec 64))
(declare-fun temp1_129 () (_ BitVec 64))
(declare-fun temp1_130 () (_ BitVec 64))
(declare-fun temp1_131 () (_ BitVec 64))
(declare-fun temp1_132 () (_ BitVec 64))
(declare-fun temp1_133 () (_ BitVec 64))
(declare-fun temp1_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp1_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp1_136 () (_ BitVec 64))
(declare-fun temp1_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp1_138 () (_ BitVec 64))
(declare-fun temp1_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1_140 () (_ BitVec 64))
(declare-fun temp1_141 () (_ BitVec 64))
(declare-fun temp1_142 () (_ BitVec 64))
(declare-fun temp1_143 () (_ BitVec 64))
(declare-fun temp1_144 () (_ BitVec 64))
(declare-fun temp1_145 () (_ BitVec 64))
(declare-fun temp1_146 () (_ BitVec 64))
(declare-fun temp1_147 () (_ BitVec 64))
(declare-fun temp1_148 () (_ BitVec 64))
(declare-fun temp1_149 () (_ BitVec 64))
(declare-fun temp1_150 () (_ BitVec 64))
(declare-fun temp1_151 () (_ BitVec 64))
(declare-fun temp1_152 () (_ BitVec 64))
(declare-fun temp1_153 () (_ BitVec 64))
(declare-fun temp1_154 () (_ BitVec 64))
(declare-fun temp1_155 () (_ BitVec 64))
(declare-fun temp1_157 () (_ BitVec 64))
(declare-fun temp1_158 () (_ BitVec 64))
(declare-fun temp1_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp1_159 () (_ BitVec 64))
(declare-fun temp1_160 () (_ BitVec 64))
(declare-fun temp1_162 () (_ BitVec 64))
(declare-fun temp1_163 () (_ BitVec 64))
(declare-fun temp1_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp1_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp1_165 () (_ BitVec 64))
(declare-fun temp1_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp1_167 () (_ BitVec 64))
(declare-fun temp1_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp1_169 () (_ BitVec 64))
(declare-fun temp1_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1_171 () (_ BitVec 64))
(declare-fun temp1_172 () (_ BitVec 64))
(declare-fun temp1_173 () (_ BitVec 64))
(declare-fun temp1_174 () (_ BitVec 64))
(declare-fun temp1_175 () (_ BitVec 64))
(declare-fun temp1_176 () (_ BitVec 64))
(declare-fun temp1_177 () (_ BitVec 64))
(declare-fun temp1_178 () (_ BitVec 64))
(declare-fun temp1_179 () (_ BitVec 64))
(declare-fun temp1_180 () (_ BitVec 64))
(declare-fun temp1_181 () (_ BitVec 64))
(declare-fun temp1_182 () (_ BitVec 64))
(declare-fun temp1_183 () (_ BitVec 64))
(declare-fun temp1_184 () (_ BitVec 64))
(declare-fun temp1_185 () (_ BitVec 64))
(declare-fun temp1_186 () (_ BitVec 64))
(declare-fun temp1_187 () (_ BitVec 64))
(declare-fun temp1_188 () (_ BitVec 64))
(declare-fun temp1_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp1_190 () (_ BitVec 64))
(declare-fun temp1_192 () (_ BitVec 64))
(declare-fun temp1_193 () (_ BitVec 64))
(declare-fun temp1_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp1_194 () (_ BitVec 64))
(declare-fun temp1_195 () (_ BitVec 64))
(declare-fun temp1_197 () (_ BitVec 64))
(declare-fun temp1_198 () (_ BitVec 64))
(declare-fun temp1_196 () (_ BitVec 64))
(declare-fun temp1_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp1_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp1_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp1_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp1_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp1_204 () (_ BitVec 64))
(declare-fun temp1_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp1_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp1_207 () (_ BitVec 64))
(declare-fun temp1_208 () (_ BitVec 64))
(declare-fun temp1_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp1_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp1_211 () (_ BitVec 64))
(declare-fun temp1_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp1_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp1_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp1_215 () (_ BitVec 64))
(assert (= temp1_1 #x0000000000000001))
(assert (= var77203 temp1_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp1_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp1_2)))
(assert (= temp1_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1_4 #x0000000000000000))
(assert (= var210941 temp1_4))
(assert (= temp1_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp1_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1_6 #x0000000000000000))
(assert (= var210986 temp1_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp1_7 #x0000000000000000))
(assert (= temp1_8 temp1_7))
(assert (= temp1_9 (select ARGNAME_padding_NAMEEND_VAL temp1_8)))
(assert (= temp1_10 #x0000000000000001))
(assert (= temp1_11 temp1_10))
(assert (= temp1_12 (select ARGNAME_padding_NAMEEND_VAL temp1_11)))
(assert (= temp1_13 #x0000000000000002))
(assert (= temp1_14 temp1_13))
(assert (= temp1_15 (select ARGNAME_padding_NAMEEND_VAL temp1_14)))
(assert (= temp1_16 #x0000000000000003))
(assert (= temp1_17 temp1_16))
(assert (= temp1_18 (select ARGNAME_padding_NAMEEND_VAL temp1_17)))
(assert (= temp1_19 #x0000000000000004))
(assert (= temp1_20 temp1_19))
(assert (= temp1_21 (select ARGNAME_padding_NAMEEND_VAL temp1_20)))
(assert (= temp1_22 #x0000000000000005))
(assert (= temp1_23 temp1_22))
(assert (= temp1_24 (select ARGNAME_padding_NAMEEND_VAL temp1_23)))
(assert (= temp1_25 #x0000000000000000))
(assert (= temp1_26 #x0000000000000000))
(assert (= temp1_27 temp1_26))
(assert (= temp1_28 (select ARGNAME_padding_NAMEEND_VAL temp1_27)))
(assert (= temp1_29 #x0000000000000000))
(assert (= temp1_30 #x0000000000000001))
(assert (= temp1_31 temp1_30))
(assert (= temp1_32 (select ARGNAME_padding_NAMEEND_VAL temp1_31)))
(assert (= temp1_33 #x0000000000000000))
(assert (= temp1_34 #x0000000000000002))
(assert (= temp1_35 temp1_34))
(assert (= temp1_36 (select ARGNAME_padding_NAMEEND_VAL temp1_35)))
(assert (= temp1_37 #x0000000000000000))
(assert (= temp1_38 #x0000000000000003))
(assert (= temp1_39 temp1_38))
(assert (= temp1_40 (select ARGNAME_padding_NAMEEND_VAL temp1_39)))
(assert (= temp1_41 #x0000000000000000))
(assert (= temp1_42 #x0000000000000004))
(assert (= temp1_43 temp1_42))
(assert (= temp1_44 (select ARGNAME_padding_NAMEEND_VAL temp1_43)))
(assert (= temp1_45 #x0000000000000000))
(assert (= temp1_46 #x0000000000000005))
(assert (= temp1_47 temp1_46))
(assert (= temp1_48 (select ARGNAME_padding_NAMEEND_VAL temp1_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp1_28 temp1_25)
             (bvslt temp1_32 temp1_29)
             (bvslt temp1_36 temp1_33)
             (bvslt temp1_40 temp1_37)
             (bvslt temp1_44 temp1_41)
             (bvslt temp1_48 temp1_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1_49 #x0000000000000000))
(assert (= var1191714 temp1_49))
(assert (= temp1_50 #x0000000000000000))
(assert (= temp1_51 temp1_50))
(assert (= temp1_52 (select ARGNAME_output_padding_NAMEEND_VAL temp1_51)))
(assert (= temp1_53 #x0000000000000001))
(assert (= temp1_54 temp1_53))
(assert (= temp1_55 (select ARGNAME_output_padding_NAMEEND_VAL temp1_54)))
(assert (= temp1_56 #x0000000000000002))
(assert (= temp1_57 temp1_56))
(assert (= temp1_58 (select ARGNAME_output_padding_NAMEEND_VAL temp1_57)))
(assert (= temp1_59 #x0000000000000003))
(assert (= temp1_60 temp1_59))
(assert (= temp1_61 (select ARGNAME_output_padding_NAMEEND_VAL temp1_60)))
(assert (= temp1_62 #x0000000000000004))
(assert (= temp1_63 temp1_62))
(assert (= temp1_64 (select ARGNAME_output_padding_NAMEEND_VAL temp1_63)))
(assert (= temp1_65 #x0000000000000005))
(assert (= temp1_66 temp1_65))
(assert (= temp1_67 (select ARGNAME_output_padding_NAMEEND_VAL temp1_66)))
(assert (= temp1_68 #x0000000000000000))
(assert (= temp1_69 #x0000000000000000))
(assert (= temp1_70 temp1_69))
(assert (= temp1_71 (select ARGNAME_output_padding_NAMEEND_VAL temp1_70)))
(assert (= temp1_72 #x0000000000000000))
(assert (= temp1_73 #x0000000000000001))
(assert (= temp1_74 temp1_73))
(assert (= temp1_75 (select ARGNAME_output_padding_NAMEEND_VAL temp1_74)))
(assert (= temp1_76 #x0000000000000000))
(assert (= temp1_77 #x0000000000000002))
(assert (= temp1_78 temp1_77))
(assert (= temp1_79 (select ARGNAME_output_padding_NAMEEND_VAL temp1_78)))
(assert (= temp1_80 #x0000000000000000))
(assert (= temp1_81 #x0000000000000003))
(assert (= temp1_82 temp1_81))
(assert (= temp1_83 (select ARGNAME_output_padding_NAMEEND_VAL temp1_82)))
(assert (= temp1_84 #x0000000000000000))
(assert (= temp1_85 #x0000000000000004))
(assert (= temp1_86 temp1_85))
(assert (= temp1_87 (select ARGNAME_output_padding_NAMEEND_VAL temp1_86)))
(assert (= temp1_88 #x0000000000000000))
(assert (= temp1_89 #x0000000000000005))
(assert (= temp1_90 temp1_89))
(assert (= temp1_91 (select ARGNAME_output_padding_NAMEEND_VAL temp1_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp1_71 temp1_68)
             (bvslt temp1_75 temp1_72)
             (bvslt temp1_79 temp1_76)
             (bvslt temp1_83 temp1_80)
             (bvslt temp1_87 temp1_84)
             (bvslt temp1_91 temp1_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1_92 #x0000000000000000))
(assert (= var1191725 temp1_92))
(assert (= temp1_93 #x0000000000000000))
(assert (= temp1_94 temp1_93))
(assert (= temp1_95 (select ARGNAME_stride_NAMEEND_VAL temp1_94)))
(assert (= temp1_96 #x0000000000000001))
(assert (= temp1_97 temp1_96))
(assert (= temp1_98 (select ARGNAME_stride_NAMEEND_VAL temp1_97)))
(assert (= temp1_99 #x0000000000000002))
(assert (= temp1_100 temp1_99))
(assert (= temp1_101 (select ARGNAME_stride_NAMEEND_VAL temp1_100)))
(assert (= temp1_102 #x0000000000000003))
(assert (= temp1_103 temp1_102))
(assert (= temp1_104 (select ARGNAME_stride_NAMEEND_VAL temp1_103)))
(assert (= temp1_105 #x0000000000000004))
(assert (= temp1_106 temp1_105))
(assert (= temp1_107 (select ARGNAME_stride_NAMEEND_VAL temp1_106)))
(assert (= temp1_108 #x0000000000000005))
(assert (= temp1_109 temp1_108))
(assert (= temp1_110 (select ARGNAME_stride_NAMEEND_VAL temp1_109)))
(assert (= temp1_111 #x0000000000000000))
(assert (= temp1_112 #x0000000000000000))
(assert (= temp1_113 temp1_112))
(assert (= temp1_114 (select ARGNAME_stride_NAMEEND_VAL temp1_113)))
(assert (= temp1_115 #x0000000000000000))
(assert (= temp1_116 #x0000000000000001))
(assert (= temp1_117 temp1_116))
(assert (= temp1_118 (select ARGNAME_stride_NAMEEND_VAL temp1_117)))
(assert (= temp1_119 #x0000000000000000))
(assert (= temp1_120 #x0000000000000002))
(assert (= temp1_121 temp1_120))
(assert (= temp1_122 (select ARGNAME_stride_NAMEEND_VAL temp1_121)))
(assert (= temp1_123 #x0000000000000000))
(assert (= temp1_124 #x0000000000000003))
(assert (= temp1_125 temp1_124))
(assert (= temp1_126 (select ARGNAME_stride_NAMEEND_VAL temp1_125)))
(assert (= temp1_127 #x0000000000000000))
(assert (= temp1_128 #x0000000000000004))
(assert (= temp1_129 temp1_128))
(assert (= temp1_130 (select ARGNAME_stride_NAMEEND_VAL temp1_129)))
(assert (= temp1_131 #x0000000000000000))
(assert (= temp1_132 #x0000000000000005))
(assert (= temp1_133 temp1_132))
(assert (= temp1_134 (select ARGNAME_stride_NAMEEND_VAL temp1_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp1_114 temp1_111)
             (bvsle temp1_118 temp1_115)
             (bvsle temp1_122 temp1_119)
             (bvsle temp1_126 temp1_123)
             (bvsle temp1_130 temp1_127)
             (bvsle temp1_134 temp1_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1_135 #x0000000000000000))
(assert (= var1191735 temp1_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1_136 #x0000000000000001))
(assert (= var1191747 temp1_136))
(assert (= temp1_137 #x0000000000000000))
(assert (= var1179826 temp1_137))
(assert (= temp1_138 #x0000000000000000))
(assert (= temp1_139 temp1_138))
(assert (= temp1_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1_139)))
(assert (= temp1_141 #x0000000000000001))
(assert (= temp1_142 temp1_141))
(assert (= temp1_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1_142)))
(assert (= temp1_144 #x0000000000000002))
(assert (= temp1_145 temp1_144))
(assert (= temp1_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1_145)))
(assert (= temp1_147 #x0000000000000003))
(assert (= temp1_148 temp1_147))
(assert (= temp1_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1_148)))
(assert (= temp1_150 #x0000000000000004))
(assert (= temp1_151 temp1_150))
(assert (= temp1_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1_151)))
(assert (= temp1_153 #x0000000000000005))
(assert (= temp1_154 temp1_153))
(assert (= temp1_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1_154)))
(assert (= temp1_157 var1179826))
(assert (= temp1_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1_157)))
(assert (= temp1_156 temp1_158))
(assert (= var1191780
   (ite (bvslt temp1_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1_159 #x0000000000000000))
(assert (= var1191780 temp1_159))
(assert (= temp1_160 #x0000000000000000))
(assert (= var1179826 temp1_160))
(assert (= temp1_162 var1179826))
(assert (= temp1_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1_162)))
(assert (= temp1_161 temp1_163))
(assert (= var1191802 (bvsmod temp1_161 ARGNAME_groups_NAMEEND)))
(assert (= temp1_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp1_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp1_165 #x0000000000000001))
(assert (= var1191803 temp1_165))
(assert (= temp1_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp1_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1_167 #x0000000000000001))
(assert (= var1191823 temp1_167))
(assert (= temp1_168 #x0000000000000001))
(assert (= var1180714 temp1_168))
(assert (= temp1_169 #x0000000000000000))
(assert (= temp1_170 temp1_169))
(assert (= temp1_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp1_170)))
(assert (= temp1_172 #x0000000000000001))
(assert (= temp1_173 temp1_172))
(assert (= temp1_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp1_173)))
(assert (= temp1_175 #x0000000000000002))
(assert (= temp1_176 temp1_175))
(assert (= temp1_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp1_176)))
(assert (= temp1_178 #x0000000000000003))
(assert (= temp1_179 temp1_178))
(assert (= temp1_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp1_179)))
(assert (= temp1_181 #x0000000000000004))
(assert (= temp1_182 temp1_181))
(assert (= temp1_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp1_182)))
(assert (= temp1_184 #x0000000000000005))
(assert (= temp1_185 temp1_184))
(assert (= temp1_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp1_185)))
(assert (= temp1_187 #x0000000000000000))
(assert (= temp1_188
   (ite (bvslt var1180714 temp1_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp1_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp1_188)))
(assert (= var1191831 temp1_189))
(assert (bvslt (ite (bvslt var1180714 temp1_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1_190 #x0000000000000001))
(assert (= var1180714 temp1_190))
(assert (= temp1_192 var1180714))
(assert (= temp1_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1_192)))
(assert (= temp1_191 temp1_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp1_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp1_194 #x0000000000000001))
(assert (= var1191836 temp1_194))
(assert (= temp1_195 #x0000000000000000))
(assert (= var1179826 temp1_195))
(assert (= temp1_197 var1179826))
(assert (= temp1_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1_197)))
(assert (= temp1_196 temp1_198))
(assert (= temp1_199 #x0000000000000002))
(assert (= var1586025 temp1_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp1_200 #x0000000000000001))
(assert (= var1191993 temp1_200))
(assert (= temp1_201 #x0000000000000001))
(assert (= var2700303 temp1_201))
(assert (= temp1_202 #x0000000000000001))
(assert (= var2962447 temp1_202))
(assert (= temp1_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1_204 #x0000000000000001))
(assert (= var211058 temp1_204))
(assert (= temp1_205 #x0000000000000001))
(assert (= var211188 temp1_205))
(assert (= var3879401 var211188))
(assert (= temp1_206 #x0000000000000000))
(assert (= var3866802 temp1_206))
(assert (= temp1_207 #x0000000000000000))
(assert (= temp1_208
   (ite (bvslt var3866802 temp1_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp1_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp1_208)))
(assert (= var3879420 temp1_209))
(assert (bvslt (ite (bvslt var3866802 temp1_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp1_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp1_211 #x0000000000000001))
(assert (= var3879421 temp1_211))
(assert (= temp1_212 #x0000000000000000))
(assert (= var4079423 temp1_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp1_213 #x0000000000000002))
(assert (= var4208259 temp1_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1_214 #x0000000000000000))
(assert (= var4273820 temp1_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp1_215 #x0000000000000001))
(assert (= var211058 temp1_215))
(model-add temp1_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp1_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp1_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






