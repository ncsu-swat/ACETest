(declare-fun temp6_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp6_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp6_3 () (_ BitVec 64))
(declare-fun temp6_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp6_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp6_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp6_7 () (_ BitVec 64))
(declare-fun temp6_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp6_9 () (_ BitVec 64))
(declare-fun temp6_10 () (_ BitVec 64))
(declare-fun temp6_11 () (_ BitVec 64))
(declare-fun temp6_12 () (_ BitVec 64))
(declare-fun temp6_13 () (_ BitVec 64))
(declare-fun temp6_14 () (_ BitVec 64))
(declare-fun temp6_15 () (_ BitVec 64))
(declare-fun temp6_16 () (_ BitVec 64))
(declare-fun temp6_17 () (_ BitVec 64))
(declare-fun temp6_18 () (_ BitVec 64))
(declare-fun temp6_19 () (_ BitVec 64))
(declare-fun temp6_20 () (_ BitVec 64))
(declare-fun temp6_21 () (_ BitVec 64))
(declare-fun temp6_22 () (_ BitVec 64))
(declare-fun temp6_23 () (_ BitVec 64))
(declare-fun temp6_24 () (_ BitVec 64))
(declare-fun temp6_25 () (_ BitVec 64))
(declare-fun temp6_26 () (_ BitVec 64))
(declare-fun temp6_27 () (_ BitVec 64))
(declare-fun temp6_28 () (_ BitVec 64))
(declare-fun temp6_29 () (_ BitVec 64))
(declare-fun temp6_30 () (_ BitVec 64))
(declare-fun temp6_31 () (_ BitVec 64))
(declare-fun temp6_32 () (_ BitVec 64))
(declare-fun temp6_33 () (_ BitVec 64))
(declare-fun temp6_34 () (_ BitVec 64))
(declare-fun temp6_35 () (_ BitVec 64))
(declare-fun temp6_36 () (_ BitVec 64))
(declare-fun temp6_37 () (_ BitVec 64))
(declare-fun temp6_38 () (_ BitVec 64))
(declare-fun temp6_39 () (_ BitVec 64))
(declare-fun temp6_40 () (_ BitVec 64))
(declare-fun temp6_41 () (_ BitVec 64))
(declare-fun temp6_42 () (_ BitVec 64))
(declare-fun temp6_43 () (_ BitVec 64))
(declare-fun temp6_44 () (_ BitVec 64))
(declare-fun temp6_45 () (_ BitVec 64))
(declare-fun temp6_46 () (_ BitVec 64))
(declare-fun temp6_47 () (_ BitVec 64))
(declare-fun temp6_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp6_49 () (_ BitVec 64))
(declare-fun temp6_50 () (_ BitVec 64))
(declare-fun temp6_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp6_52 () (_ BitVec 64))
(declare-fun temp6_53 () (_ BitVec 64))
(declare-fun temp6_54 () (_ BitVec 64))
(declare-fun temp6_55 () (_ BitVec 64))
(declare-fun temp6_56 () (_ BitVec 64))
(declare-fun temp6_57 () (_ BitVec 64))
(declare-fun temp6_58 () (_ BitVec 64))
(declare-fun temp6_59 () (_ BitVec 64))
(declare-fun temp6_60 () (_ BitVec 64))
(declare-fun temp6_61 () (_ BitVec 64))
(declare-fun temp6_62 () (_ BitVec 64))
(declare-fun temp6_63 () (_ BitVec 64))
(declare-fun temp6_64 () (_ BitVec 64))
(declare-fun temp6_65 () (_ BitVec 64))
(declare-fun temp6_66 () (_ BitVec 64))
(declare-fun temp6_67 () (_ BitVec 64))
(declare-fun temp6_68 () (_ BitVec 64))
(declare-fun temp6_69 () (_ BitVec 64))
(declare-fun temp6_70 () (_ BitVec 64))
(declare-fun temp6_71 () (_ BitVec 64))
(declare-fun temp6_72 () (_ BitVec 64))
(declare-fun temp6_73 () (_ BitVec 64))
(declare-fun temp6_74 () (_ BitVec 64))
(declare-fun temp6_75 () (_ BitVec 64))
(declare-fun temp6_76 () (_ BitVec 64))
(declare-fun temp6_77 () (_ BitVec 64))
(declare-fun temp6_78 () (_ BitVec 64))
(declare-fun temp6_79 () (_ BitVec 64))
(declare-fun temp6_80 () (_ BitVec 64))
(declare-fun temp6_81 () (_ BitVec 64))
(declare-fun temp6_82 () (_ BitVec 64))
(declare-fun temp6_83 () (_ BitVec 64))
(declare-fun temp6_84 () (_ BitVec 64))
(declare-fun temp6_85 () (_ BitVec 64))
(declare-fun temp6_86 () (_ BitVec 64))
(declare-fun temp6_87 () (_ BitVec 64))
(declare-fun temp6_88 () (_ BitVec 64))
(declare-fun temp6_89 () (_ BitVec 64))
(declare-fun temp6_90 () (_ BitVec 64))
(declare-fun temp6_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp6_92 () (_ BitVec 64))
(declare-fun temp6_93 () (_ BitVec 64))
(declare-fun temp6_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp6_95 () (_ BitVec 64))
(declare-fun temp6_96 () (_ BitVec 64))
(declare-fun temp6_97 () (_ BitVec 64))
(declare-fun temp6_98 () (_ BitVec 64))
(declare-fun temp6_99 () (_ BitVec 64))
(declare-fun temp6_100 () (_ BitVec 64))
(declare-fun temp6_101 () (_ BitVec 64))
(declare-fun temp6_102 () (_ BitVec 64))
(declare-fun temp6_103 () (_ BitVec 64))
(declare-fun temp6_104 () (_ BitVec 64))
(declare-fun temp6_105 () (_ BitVec 64))
(declare-fun temp6_106 () (_ BitVec 64))
(declare-fun temp6_107 () (_ BitVec 64))
(declare-fun temp6_108 () (_ BitVec 64))
(declare-fun temp6_109 () (_ BitVec 64))
(declare-fun temp6_110 () (_ BitVec 64))
(declare-fun temp6_111 () (_ BitVec 64))
(declare-fun temp6_112 () (_ BitVec 64))
(declare-fun temp6_113 () (_ BitVec 64))
(declare-fun temp6_114 () (_ BitVec 64))
(declare-fun temp6_115 () (_ BitVec 64))
(declare-fun temp6_116 () (_ BitVec 64))
(declare-fun temp6_117 () (_ BitVec 64))
(declare-fun temp6_118 () (_ BitVec 64))
(declare-fun temp6_119 () (_ BitVec 64))
(declare-fun temp6_120 () (_ BitVec 64))
(declare-fun temp6_121 () (_ BitVec 64))
(declare-fun temp6_122 () (_ BitVec 64))
(declare-fun temp6_123 () (_ BitVec 64))
(declare-fun temp6_124 () (_ BitVec 64))
(declare-fun temp6_125 () (_ BitVec 64))
(declare-fun temp6_126 () (_ BitVec 64))
(declare-fun temp6_127 () (_ BitVec 64))
(declare-fun temp6_128 () (_ BitVec 64))
(declare-fun temp6_129 () (_ BitVec 64))
(declare-fun temp6_130 () (_ BitVec 64))
(declare-fun temp6_131 () (_ BitVec 64))
(declare-fun temp6_132 () (_ BitVec 64))
(declare-fun temp6_133 () (_ BitVec 64))
(declare-fun temp6_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp6_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp6_136 () (_ BitVec 64))
(declare-fun temp6_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp6_138 () (_ BitVec 64))
(declare-fun temp6_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp6_140 () (_ BitVec 64))
(declare-fun temp6_141 () (_ BitVec 64))
(declare-fun temp6_142 () (_ BitVec 64))
(declare-fun temp6_143 () (_ BitVec 64))
(declare-fun temp6_144 () (_ BitVec 64))
(declare-fun temp6_145 () (_ BitVec 64))
(declare-fun temp6_146 () (_ BitVec 64))
(declare-fun temp6_147 () (_ BitVec 64))
(declare-fun temp6_148 () (_ BitVec 64))
(declare-fun temp6_149 () (_ BitVec 64))
(declare-fun temp6_150 () (_ BitVec 64))
(declare-fun temp6_151 () (_ BitVec 64))
(declare-fun temp6_152 () (_ BitVec 64))
(declare-fun temp6_153 () (_ BitVec 64))
(declare-fun temp6_154 () (_ BitVec 64))
(declare-fun temp6_155 () (_ BitVec 64))
(declare-fun temp6_157 () (_ BitVec 64))
(declare-fun temp6_158 () (_ BitVec 64))
(declare-fun temp6_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp6_159 () (_ BitVec 64))
(declare-fun temp6_160 () (_ BitVec 64))
(declare-fun temp6_162 () (_ BitVec 64))
(declare-fun temp6_163 () (_ BitVec 64))
(declare-fun temp6_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp6_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp6_165 () (_ BitVec 64))
(declare-fun temp6_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp6_167 () (_ BitVec 64))
(declare-fun temp6_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp6_169 () (_ BitVec 64))
(declare-fun temp6_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp6_171 () (_ BitVec 64))
(declare-fun temp6_172 () (_ BitVec 64))
(declare-fun temp6_173 () (_ BitVec 64))
(declare-fun temp6_174 () (_ BitVec 64))
(declare-fun temp6_175 () (_ BitVec 64))
(declare-fun temp6_176 () (_ BitVec 64))
(declare-fun temp6_177 () (_ BitVec 64))
(declare-fun temp6_178 () (_ BitVec 64))
(declare-fun temp6_179 () (_ BitVec 64))
(declare-fun temp6_180 () (_ BitVec 64))
(declare-fun temp6_181 () (_ BitVec 64))
(declare-fun temp6_182 () (_ BitVec 64))
(declare-fun temp6_183 () (_ BitVec 64))
(declare-fun temp6_184 () (_ BitVec 64))
(declare-fun temp6_185 () (_ BitVec 64))
(declare-fun temp6_186 () (_ BitVec 64))
(declare-fun temp6_187 () (_ BitVec 64))
(declare-fun temp6_188 () (_ BitVec 64))
(declare-fun temp6_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp6_190 () (_ BitVec 64))
(declare-fun temp6_192 () (_ BitVec 64))
(declare-fun temp6_193 () (_ BitVec 64))
(declare-fun temp6_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp6_194 () (_ BitVec 64))
(declare-fun temp6_195 () (_ BitVec 64))
(declare-fun temp6_197 () (_ BitVec 64))
(declare-fun temp6_198 () (_ BitVec 64))
(declare-fun temp6_196 () (_ BitVec 64))
(declare-fun temp6_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp6_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp6_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp6_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp6_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp6_204 () (_ BitVec 64))
(declare-fun temp6_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp6_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp6_207 () (_ BitVec 64))
(declare-fun temp6_208 () (_ BitVec 64))
(declare-fun temp6_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp6_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp6_211 () (_ BitVec 64))
(declare-fun temp6_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp6_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp6_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp6_215 () (_ BitVec 64))
(assert (= temp6_1 #x0000000000000001))
(assert (= var77203 temp6_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp6_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp6_2)))
(assert (= temp6_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp6_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp6_4 #x0000000000000000))
(assert (= var210941 temp6_4))
(assert (= temp6_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp6_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp6_6 #x0000000000000000))
(assert (= var210986 temp6_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp6_7 #x0000000000000000))
(assert (= temp6_8 temp6_7))
(assert (= temp6_9 (select ARGNAME_padding_NAMEEND_VAL temp6_8)))
(assert (= temp6_10 #x0000000000000001))
(assert (= temp6_11 temp6_10))
(assert (= temp6_12 (select ARGNAME_padding_NAMEEND_VAL temp6_11)))
(assert (= temp6_13 #x0000000000000002))
(assert (= temp6_14 temp6_13))
(assert (= temp6_15 (select ARGNAME_padding_NAMEEND_VAL temp6_14)))
(assert (= temp6_16 #x0000000000000003))
(assert (= temp6_17 temp6_16))
(assert (= temp6_18 (select ARGNAME_padding_NAMEEND_VAL temp6_17)))
(assert (= temp6_19 #x0000000000000004))
(assert (= temp6_20 temp6_19))
(assert (= temp6_21 (select ARGNAME_padding_NAMEEND_VAL temp6_20)))
(assert (= temp6_22 #x0000000000000005))
(assert (= temp6_23 temp6_22))
(assert (= temp6_24 (select ARGNAME_padding_NAMEEND_VAL temp6_23)))
(assert (= temp6_25 #x0000000000000000))
(assert (= temp6_26 #x0000000000000000))
(assert (= temp6_27 temp6_26))
(assert (= temp6_28 (select ARGNAME_padding_NAMEEND_VAL temp6_27)))
(assert (= temp6_29 #x0000000000000000))
(assert (= temp6_30 #x0000000000000001))
(assert (= temp6_31 temp6_30))
(assert (= temp6_32 (select ARGNAME_padding_NAMEEND_VAL temp6_31)))
(assert (= temp6_33 #x0000000000000000))
(assert (= temp6_34 #x0000000000000002))
(assert (= temp6_35 temp6_34))
(assert (= temp6_36 (select ARGNAME_padding_NAMEEND_VAL temp6_35)))
(assert (= temp6_37 #x0000000000000000))
(assert (= temp6_38 #x0000000000000003))
(assert (= temp6_39 temp6_38))
(assert (= temp6_40 (select ARGNAME_padding_NAMEEND_VAL temp6_39)))
(assert (= temp6_41 #x0000000000000000))
(assert (= temp6_42 #x0000000000000004))
(assert (= temp6_43 temp6_42))
(assert (= temp6_44 (select ARGNAME_padding_NAMEEND_VAL temp6_43)))
(assert (= temp6_45 #x0000000000000000))
(assert (= temp6_46 #x0000000000000005))
(assert (= temp6_47 temp6_46))
(assert (= temp6_48 (select ARGNAME_padding_NAMEEND_VAL temp6_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp6_28 temp6_25)
             (bvslt temp6_32 temp6_29)
             (bvslt temp6_36 temp6_33)
             (bvslt temp6_40 temp6_37)
             (bvslt temp6_44 temp6_41)
             (bvslt temp6_48 temp6_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp6_49 #x0000000000000000))
(assert (= var1191714 temp6_49))
(assert (= temp6_50 #x0000000000000000))
(assert (= temp6_51 temp6_50))
(assert (= temp6_52 (select ARGNAME_output_padding_NAMEEND_VAL temp6_51)))
(assert (= temp6_53 #x0000000000000001))
(assert (= temp6_54 temp6_53))
(assert (= temp6_55 (select ARGNAME_output_padding_NAMEEND_VAL temp6_54)))
(assert (= temp6_56 #x0000000000000002))
(assert (= temp6_57 temp6_56))
(assert (= temp6_58 (select ARGNAME_output_padding_NAMEEND_VAL temp6_57)))
(assert (= temp6_59 #x0000000000000003))
(assert (= temp6_60 temp6_59))
(assert (= temp6_61 (select ARGNAME_output_padding_NAMEEND_VAL temp6_60)))
(assert (= temp6_62 #x0000000000000004))
(assert (= temp6_63 temp6_62))
(assert (= temp6_64 (select ARGNAME_output_padding_NAMEEND_VAL temp6_63)))
(assert (= temp6_65 #x0000000000000005))
(assert (= temp6_66 temp6_65))
(assert (= temp6_67 (select ARGNAME_output_padding_NAMEEND_VAL temp6_66)))
(assert (= temp6_68 #x0000000000000000))
(assert (= temp6_69 #x0000000000000000))
(assert (= temp6_70 temp6_69))
(assert (= temp6_71 (select ARGNAME_output_padding_NAMEEND_VAL temp6_70)))
(assert (= temp6_72 #x0000000000000000))
(assert (= temp6_73 #x0000000000000001))
(assert (= temp6_74 temp6_73))
(assert (= temp6_75 (select ARGNAME_output_padding_NAMEEND_VAL temp6_74)))
(assert (= temp6_76 #x0000000000000000))
(assert (= temp6_77 #x0000000000000002))
(assert (= temp6_78 temp6_77))
(assert (= temp6_79 (select ARGNAME_output_padding_NAMEEND_VAL temp6_78)))
(assert (= temp6_80 #x0000000000000000))
(assert (= temp6_81 #x0000000000000003))
(assert (= temp6_82 temp6_81))
(assert (= temp6_83 (select ARGNAME_output_padding_NAMEEND_VAL temp6_82)))
(assert (= temp6_84 #x0000000000000000))
(assert (= temp6_85 #x0000000000000004))
(assert (= temp6_86 temp6_85))
(assert (= temp6_87 (select ARGNAME_output_padding_NAMEEND_VAL temp6_86)))
(assert (= temp6_88 #x0000000000000000))
(assert (= temp6_89 #x0000000000000005))
(assert (= temp6_90 temp6_89))
(assert (= temp6_91 (select ARGNAME_output_padding_NAMEEND_VAL temp6_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp6_71 temp6_68)
             (bvslt temp6_75 temp6_72)
             (bvslt temp6_79 temp6_76)
             (bvslt temp6_83 temp6_80)
             (bvslt temp6_87 temp6_84)
             (bvslt temp6_91 temp6_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp6_92 #x0000000000000000))
(assert (= var1191725 temp6_92))
(assert (= temp6_93 #x0000000000000000))
(assert (= temp6_94 temp6_93))
(assert (= temp6_95 (select ARGNAME_stride_NAMEEND_VAL temp6_94)))
(assert (= temp6_96 #x0000000000000001))
(assert (= temp6_97 temp6_96))
(assert (= temp6_98 (select ARGNAME_stride_NAMEEND_VAL temp6_97)))
(assert (= temp6_99 #x0000000000000002))
(assert (= temp6_100 temp6_99))
(assert (= temp6_101 (select ARGNAME_stride_NAMEEND_VAL temp6_100)))
(assert (= temp6_102 #x0000000000000003))
(assert (= temp6_103 temp6_102))
(assert (= temp6_104 (select ARGNAME_stride_NAMEEND_VAL temp6_103)))
(assert (= temp6_105 #x0000000000000004))
(assert (= temp6_106 temp6_105))
(assert (= temp6_107 (select ARGNAME_stride_NAMEEND_VAL temp6_106)))
(assert (= temp6_108 #x0000000000000005))
(assert (= temp6_109 temp6_108))
(assert (= temp6_110 (select ARGNAME_stride_NAMEEND_VAL temp6_109)))
(assert (= temp6_111 #x0000000000000000))
(assert (= temp6_112 #x0000000000000000))
(assert (= temp6_113 temp6_112))
(assert (= temp6_114 (select ARGNAME_stride_NAMEEND_VAL temp6_113)))
(assert (= temp6_115 #x0000000000000000))
(assert (= temp6_116 #x0000000000000001))
(assert (= temp6_117 temp6_116))
(assert (= temp6_118 (select ARGNAME_stride_NAMEEND_VAL temp6_117)))
(assert (= temp6_119 #x0000000000000000))
(assert (= temp6_120 #x0000000000000002))
(assert (= temp6_121 temp6_120))
(assert (= temp6_122 (select ARGNAME_stride_NAMEEND_VAL temp6_121)))
(assert (= temp6_123 #x0000000000000000))
(assert (= temp6_124 #x0000000000000003))
(assert (= temp6_125 temp6_124))
(assert (= temp6_126 (select ARGNAME_stride_NAMEEND_VAL temp6_125)))
(assert (= temp6_127 #x0000000000000000))
(assert (= temp6_128 #x0000000000000004))
(assert (= temp6_129 temp6_128))
(assert (= temp6_130 (select ARGNAME_stride_NAMEEND_VAL temp6_129)))
(assert (= temp6_131 #x0000000000000000))
(assert (= temp6_132 #x0000000000000005))
(assert (= temp6_133 temp6_132))
(assert (= temp6_134 (select ARGNAME_stride_NAMEEND_VAL temp6_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp6_114 temp6_111)
             (bvsle temp6_118 temp6_115)
             (bvsle temp6_122 temp6_119)
             (bvsle temp6_126 temp6_123)
             (bvsle temp6_130 temp6_127)
             (bvsle temp6_134 temp6_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp6_135 #x0000000000000000))
(assert (= var1191735 temp6_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp6_136 #x0000000000000001))
(assert (= var1191747 temp6_136))
(assert (= temp6_137 #x0000000000000000))
(assert (= var1179826 temp6_137))
(assert (= temp6_138 #x0000000000000000))
(assert (= temp6_139 temp6_138))
(assert (= temp6_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp6_139)))
(assert (= temp6_141 #x0000000000000001))
(assert (= temp6_142 temp6_141))
(assert (= temp6_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp6_142)))
(assert (= temp6_144 #x0000000000000002))
(assert (= temp6_145 temp6_144))
(assert (= temp6_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp6_145)))
(assert (= temp6_147 #x0000000000000003))
(assert (= temp6_148 temp6_147))
(assert (= temp6_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp6_148)))
(assert (= temp6_150 #x0000000000000004))
(assert (= temp6_151 temp6_150))
(assert (= temp6_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp6_151)))
(assert (= temp6_153 #x0000000000000005))
(assert (= temp6_154 temp6_153))
(assert (= temp6_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp6_154)))
(assert (= temp6_157 var1179826))
(assert (= temp6_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp6_157)))
(assert (= temp6_156 temp6_158))
(assert (= var1191780
   (ite (bvslt temp6_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp6_159 #x0000000000000000))
(assert (= var1191780 temp6_159))
(assert (= temp6_160 #x0000000000000000))
(assert (= var1179826 temp6_160))
(assert (= temp6_162 var1179826))
(assert (= temp6_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp6_162)))
(assert (= temp6_161 temp6_163))
(assert (= var1191802 (bvsmod temp6_161 ARGNAME_groups_NAMEEND)))
(assert (= temp6_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp6_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp6_165 #x0000000000000001))
(assert (= var1191803 temp6_165))
(assert (= temp6_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp6_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp6_167 #x0000000000000001))
(assert (= var1191823 temp6_167))
(assert (= temp6_168 #x0000000000000001))
(assert (= var1180714 temp6_168))
(assert (= temp6_169 #x0000000000000000))
(assert (= temp6_170 temp6_169))
(assert (= temp6_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp6_170)))
(assert (= temp6_172 #x0000000000000001))
(assert (= temp6_173 temp6_172))
(assert (= temp6_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp6_173)))
(assert (= temp6_175 #x0000000000000002))
(assert (= temp6_176 temp6_175))
(assert (= temp6_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp6_176)))
(assert (= temp6_178 #x0000000000000003))
(assert (= temp6_179 temp6_178))
(assert (= temp6_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp6_179)))
(assert (= temp6_181 #x0000000000000004))
(assert (= temp6_182 temp6_181))
(assert (= temp6_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp6_182)))
(assert (= temp6_184 #x0000000000000005))
(assert (= temp6_185 temp6_184))
(assert (= temp6_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp6_185)))
(assert (= temp6_187 #x0000000000000000))
(assert (= temp6_188
   (ite (bvslt var1180714 temp6_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp6_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp6_188)))
(assert (= var1191831 temp6_189))
(assert (bvslt (ite (bvslt var1180714 temp6_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp6_190 #x0000000000000001))
(assert (= var1180714 temp6_190))
(assert (= temp6_192 var1180714))
(assert (= temp6_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp6_192)))
(assert (= temp6_191 temp6_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp6_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp6_194 #x0000000000000001))
(assert (= var1191836 temp6_194))
(assert (= temp6_195 #x0000000000000000))
(assert (= var1179826 temp6_195))
(assert (= temp6_197 var1179826))
(assert (= temp6_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp6_197)))
(assert (= temp6_196 temp6_198))
(assert (= temp6_199 #x0000000000000002))
(assert (= var1586025 temp6_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp6_200 #x0000000000000001))
(assert (= var1191993 temp6_200))
(assert (= temp6_201 #x0000000000000001))
(assert (= var2700303 temp6_201))
(assert (= temp6_202 #x0000000000000001))
(assert (= var2962447 temp6_202))
(assert (= temp6_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp6_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp6_204 #x0000000000000001))
(assert (= var211058 temp6_204))
(assert (= temp6_205 #x0000000000000001))
(assert (= var211188 temp6_205))
(assert (= var3879401 var211188))
(assert (= temp6_206 #x0000000000000000))
(assert (= var3866802 temp6_206))
(assert (= temp6_207 #x0000000000000000))
(assert (= temp6_208
   (ite (bvslt var3866802 temp6_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp6_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp6_208)))
(assert (= var3879420 temp6_209))
(assert (bvslt (ite (bvslt var3866802 temp6_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp6_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp6_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp6_211 #x0000000000000001))
(assert (= var3879421 temp6_211))
(assert (= temp6_212 #x0000000000000000))
(assert (= var4079423 temp6_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp6_213 #x0000000000000002))
(assert (= var4208259 temp6_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp6_214 #x0000000000000000))
(assert (= var4273820 temp6_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp6_215 #x0000000000000001))
(assert (= var211058 temp6_215))
(model-add temp6_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp6_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp6_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp6_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))



