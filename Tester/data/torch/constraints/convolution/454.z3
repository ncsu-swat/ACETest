(declare-fun temp605_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp605_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp605_3 () (_ BitVec 64))
(declare-fun temp605_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp605_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp605_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp605_7 () (_ BitVec 64))
(declare-fun temp605_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp605_9 () (_ BitVec 64))
(declare-fun temp605_10 () (_ BitVec 64))
(declare-fun temp605_11 () (_ BitVec 64))
(declare-fun temp605_12 () (_ BitVec 64))
(declare-fun temp605_13 () (_ BitVec 64))
(declare-fun temp605_14 () (_ BitVec 64))
(declare-fun temp605_15 () (_ BitVec 64))
(declare-fun temp605_16 () (_ BitVec 64))
(declare-fun temp605_17 () (_ BitVec 64))
(declare-fun temp605_18 () (_ BitVec 64))
(declare-fun temp605_19 () (_ BitVec 64))
(declare-fun temp605_20 () (_ BitVec 64))
(declare-fun temp605_21 () (_ BitVec 64))
(declare-fun temp605_22 () (_ BitVec 64))
(declare-fun temp605_23 () (_ BitVec 64))
(declare-fun temp605_24 () (_ BitVec 64))
(declare-fun temp605_25 () (_ BitVec 64))
(declare-fun temp605_26 () (_ BitVec 64))
(declare-fun temp605_27 () (_ BitVec 64))
(declare-fun temp605_28 () (_ BitVec 64))
(declare-fun temp605_29 () (_ BitVec 64))
(declare-fun temp605_30 () (_ BitVec 64))
(declare-fun temp605_31 () (_ BitVec 64))
(declare-fun temp605_32 () (_ BitVec 64))
(declare-fun temp605_33 () (_ BitVec 64))
(declare-fun temp605_34 () (_ BitVec 64))
(declare-fun temp605_35 () (_ BitVec 64))
(declare-fun temp605_36 () (_ BitVec 64))
(declare-fun temp605_37 () (_ BitVec 64))
(declare-fun temp605_38 () (_ BitVec 64))
(declare-fun temp605_39 () (_ BitVec 64))
(declare-fun temp605_40 () (_ BitVec 64))
(declare-fun temp605_41 () (_ BitVec 64))
(declare-fun temp605_42 () (_ BitVec 64))
(declare-fun temp605_43 () (_ BitVec 64))
(declare-fun temp605_44 () (_ BitVec 64))
(declare-fun temp605_45 () (_ BitVec 64))
(declare-fun temp605_46 () (_ BitVec 64))
(declare-fun temp605_47 () (_ BitVec 64))
(declare-fun temp605_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp605_49 () (_ BitVec 64))
(declare-fun temp605_50 () (_ BitVec 64))
(declare-fun temp605_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp605_52 () (_ BitVec 64))
(declare-fun temp605_53 () (_ BitVec 64))
(declare-fun temp605_54 () (_ BitVec 64))
(declare-fun temp605_55 () (_ BitVec 64))
(declare-fun temp605_56 () (_ BitVec 64))
(declare-fun temp605_57 () (_ BitVec 64))
(declare-fun temp605_58 () (_ BitVec 64))
(declare-fun temp605_59 () (_ BitVec 64))
(declare-fun temp605_60 () (_ BitVec 64))
(declare-fun temp605_61 () (_ BitVec 64))
(declare-fun temp605_62 () (_ BitVec 64))
(declare-fun temp605_63 () (_ BitVec 64))
(declare-fun temp605_64 () (_ BitVec 64))
(declare-fun temp605_65 () (_ BitVec 64))
(declare-fun temp605_66 () (_ BitVec 64))
(declare-fun temp605_67 () (_ BitVec 64))
(declare-fun temp605_68 () (_ BitVec 64))
(declare-fun temp605_69 () (_ BitVec 64))
(declare-fun temp605_70 () (_ BitVec 64))
(declare-fun temp605_71 () (_ BitVec 64))
(declare-fun temp605_72 () (_ BitVec 64))
(declare-fun temp605_73 () (_ BitVec 64))
(declare-fun temp605_74 () (_ BitVec 64))
(declare-fun temp605_75 () (_ BitVec 64))
(declare-fun temp605_76 () (_ BitVec 64))
(declare-fun temp605_77 () (_ BitVec 64))
(declare-fun temp605_78 () (_ BitVec 64))
(declare-fun temp605_79 () (_ BitVec 64))
(declare-fun temp605_80 () (_ BitVec 64))
(declare-fun temp605_81 () (_ BitVec 64))
(declare-fun temp605_82 () (_ BitVec 64))
(declare-fun temp605_83 () (_ BitVec 64))
(declare-fun temp605_84 () (_ BitVec 64))
(declare-fun temp605_85 () (_ BitVec 64))
(declare-fun temp605_86 () (_ BitVec 64))
(declare-fun temp605_87 () (_ BitVec 64))
(declare-fun temp605_88 () (_ BitVec 64))
(declare-fun temp605_89 () (_ BitVec 64))
(declare-fun temp605_90 () (_ BitVec 64))
(declare-fun temp605_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp605_92 () (_ BitVec 64))
(declare-fun temp605_93 () (_ BitVec 64))
(declare-fun temp605_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp605_95 () (_ BitVec 64))
(declare-fun temp605_96 () (_ BitVec 64))
(declare-fun temp605_97 () (_ BitVec 64))
(declare-fun temp605_98 () (_ BitVec 64))
(declare-fun temp605_99 () (_ BitVec 64))
(declare-fun temp605_100 () (_ BitVec 64))
(declare-fun temp605_101 () (_ BitVec 64))
(declare-fun temp605_102 () (_ BitVec 64))
(declare-fun temp605_103 () (_ BitVec 64))
(declare-fun temp605_104 () (_ BitVec 64))
(declare-fun temp605_105 () (_ BitVec 64))
(declare-fun temp605_106 () (_ BitVec 64))
(declare-fun temp605_107 () (_ BitVec 64))
(declare-fun temp605_108 () (_ BitVec 64))
(declare-fun temp605_109 () (_ BitVec 64))
(declare-fun temp605_110 () (_ BitVec 64))
(declare-fun temp605_111 () (_ BitVec 64))
(declare-fun temp605_112 () (_ BitVec 64))
(declare-fun temp605_113 () (_ BitVec 64))
(declare-fun temp605_114 () (_ BitVec 64))
(declare-fun temp605_115 () (_ BitVec 64))
(declare-fun temp605_116 () (_ BitVec 64))
(declare-fun temp605_117 () (_ BitVec 64))
(declare-fun temp605_118 () (_ BitVec 64))
(declare-fun temp605_119 () (_ BitVec 64))
(declare-fun temp605_120 () (_ BitVec 64))
(declare-fun temp605_121 () (_ BitVec 64))
(declare-fun temp605_122 () (_ BitVec 64))
(declare-fun temp605_123 () (_ BitVec 64))
(declare-fun temp605_124 () (_ BitVec 64))
(declare-fun temp605_125 () (_ BitVec 64))
(declare-fun temp605_126 () (_ BitVec 64))
(declare-fun temp605_127 () (_ BitVec 64))
(declare-fun temp605_128 () (_ BitVec 64))
(declare-fun temp605_129 () (_ BitVec 64))
(declare-fun temp605_130 () (_ BitVec 64))
(declare-fun temp605_131 () (_ BitVec 64))
(declare-fun temp605_132 () (_ BitVec 64))
(declare-fun temp605_133 () (_ BitVec 64))
(declare-fun temp605_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp605_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp605_136 () (_ BitVec 64))
(declare-fun temp605_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp605_138 () (_ BitVec 64))
(declare-fun temp605_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp605_140 () (_ BitVec 64))
(declare-fun temp605_141 () (_ BitVec 64))
(declare-fun temp605_142 () (_ BitVec 64))
(declare-fun temp605_143 () (_ BitVec 64))
(declare-fun temp605_144 () (_ BitVec 64))
(declare-fun temp605_145 () (_ BitVec 64))
(declare-fun temp605_146 () (_ BitVec 64))
(declare-fun temp605_147 () (_ BitVec 64))
(declare-fun temp605_148 () (_ BitVec 64))
(declare-fun temp605_149 () (_ BitVec 64))
(declare-fun temp605_150 () (_ BitVec 64))
(declare-fun temp605_151 () (_ BitVec 64))
(declare-fun temp605_152 () (_ BitVec 64))
(declare-fun temp605_153 () (_ BitVec 64))
(declare-fun temp605_154 () (_ BitVec 64))
(declare-fun temp605_155 () (_ BitVec 64))
(declare-fun temp605_157 () (_ BitVec 64))
(declare-fun temp605_158 () (_ BitVec 64))
(declare-fun temp605_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp605_159 () (_ BitVec 64))
(declare-fun temp605_160 () (_ BitVec 64))
(declare-fun temp605_162 () (_ BitVec 64))
(declare-fun temp605_163 () (_ BitVec 64))
(declare-fun temp605_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp605_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp605_165 () (_ BitVec 64))
(declare-fun temp605_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp605_167 () (_ BitVec 64))
(declare-fun temp605_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp605_169 () (_ BitVec 64))
(declare-fun temp605_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp605_171 () (_ BitVec 64))
(declare-fun temp605_172 () (_ BitVec 64))
(declare-fun temp605_173 () (_ BitVec 64))
(declare-fun temp605_174 () (_ BitVec 64))
(declare-fun temp605_175 () (_ BitVec 64))
(declare-fun temp605_176 () (_ BitVec 64))
(declare-fun temp605_177 () (_ BitVec 64))
(declare-fun temp605_178 () (_ BitVec 64))
(declare-fun temp605_179 () (_ BitVec 64))
(declare-fun temp605_180 () (_ BitVec 64))
(declare-fun temp605_181 () (_ BitVec 64))
(declare-fun temp605_182 () (_ BitVec 64))
(declare-fun temp605_183 () (_ BitVec 64))
(declare-fun temp605_184 () (_ BitVec 64))
(declare-fun temp605_185 () (_ BitVec 64))
(declare-fun temp605_186 () (_ BitVec 64))
(declare-fun temp605_187 () (_ BitVec 64))
(declare-fun temp605_188 () (_ BitVec 64))
(declare-fun temp605_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp605_190 () (_ BitVec 64))
(declare-fun temp605_192 () (_ BitVec 64))
(declare-fun temp605_193 () (_ BitVec 64))
(declare-fun temp605_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp605_194 () (_ BitVec 64))
(declare-fun temp605_195 () (_ BitVec 64))
(declare-fun temp605_197 () (_ BitVec 64))
(declare-fun temp605_198 () (_ BitVec 64))
(declare-fun temp605_196 () (_ BitVec 64))
(declare-fun temp605_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp605_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp605_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp605_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp605_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp605_204 () (_ BitVec 64))
(declare-fun temp605_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp605_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp605_207 () (_ BitVec 64))
(declare-fun temp605_208 () (_ BitVec 64))
(declare-fun temp605_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp605_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp605_211 () (_ BitVec 64))
(declare-fun temp605_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp605_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp605_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp605_215 () (_ BitVec 64))
(declare-fun var4469136 () (_ BitVec 64))
(declare-fun temp605_216 () (_ BitVec 64))
(assert (= temp605_1 #x0000000000000001))
(assert (= var77203 temp605_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp605_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp605_2)))
(assert (= temp605_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp605_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp605_4 #x0000000000000000))
(assert (= var210941 temp605_4))
(assert (= temp605_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp605_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp605_6 #x0000000000000000))
(assert (= var210986 temp605_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp605_7 #x0000000000000000))
(assert (= temp605_8 temp605_7))
(assert (= temp605_9 (select ARGNAME_padding_NAMEEND_VAL temp605_8)))
(assert (= temp605_10 #x0000000000000001))
(assert (= temp605_11 temp605_10))
(assert (= temp605_12 (select ARGNAME_padding_NAMEEND_VAL temp605_11)))
(assert (= temp605_13 #x0000000000000002))
(assert (= temp605_14 temp605_13))
(assert (= temp605_15 (select ARGNAME_padding_NAMEEND_VAL temp605_14)))
(assert (= temp605_16 #x0000000000000003))
(assert (= temp605_17 temp605_16))
(assert (= temp605_18 (select ARGNAME_padding_NAMEEND_VAL temp605_17)))
(assert (= temp605_19 #x0000000000000004))
(assert (= temp605_20 temp605_19))
(assert (= temp605_21 (select ARGNAME_padding_NAMEEND_VAL temp605_20)))
(assert (= temp605_22 #x0000000000000005))
(assert (= temp605_23 temp605_22))
(assert (= temp605_24 (select ARGNAME_padding_NAMEEND_VAL temp605_23)))
(assert (= temp605_25 #x0000000000000000))
(assert (= temp605_26 #x0000000000000000))
(assert (= temp605_27 temp605_26))
(assert (= temp605_28 (select ARGNAME_padding_NAMEEND_VAL temp605_27)))
(assert (= temp605_29 #x0000000000000000))
(assert (= temp605_30 #x0000000000000001))
(assert (= temp605_31 temp605_30))
(assert (= temp605_32 (select ARGNAME_padding_NAMEEND_VAL temp605_31)))
(assert (= temp605_33 #x0000000000000000))
(assert (= temp605_34 #x0000000000000002))
(assert (= temp605_35 temp605_34))
(assert (= temp605_36 (select ARGNAME_padding_NAMEEND_VAL temp605_35)))
(assert (= temp605_37 #x0000000000000000))
(assert (= temp605_38 #x0000000000000003))
(assert (= temp605_39 temp605_38))
(assert (= temp605_40 (select ARGNAME_padding_NAMEEND_VAL temp605_39)))
(assert (= temp605_41 #x0000000000000000))
(assert (= temp605_42 #x0000000000000004))
(assert (= temp605_43 temp605_42))
(assert (= temp605_44 (select ARGNAME_padding_NAMEEND_VAL temp605_43)))
(assert (= temp605_45 #x0000000000000000))
(assert (= temp605_46 #x0000000000000005))
(assert (= temp605_47 temp605_46))
(assert (= temp605_48 (select ARGNAME_padding_NAMEEND_VAL temp605_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp605_28 temp605_25)
             (bvslt temp605_32 temp605_29)
             (bvslt temp605_36 temp605_33)
             (bvslt temp605_40 temp605_37)
             (bvslt temp605_44 temp605_41)
             (bvslt temp605_48 temp605_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp605_49 #x0000000000000000))
(assert (= var1191714 temp605_49))
(assert (= temp605_50 #x0000000000000000))
(assert (= temp605_51 temp605_50))
(assert (= temp605_52 (select ARGNAME_output_padding_NAMEEND_VAL temp605_51)))
(assert (= temp605_53 #x0000000000000001))
(assert (= temp605_54 temp605_53))
(assert (= temp605_55 (select ARGNAME_output_padding_NAMEEND_VAL temp605_54)))
(assert (= temp605_56 #x0000000000000002))
(assert (= temp605_57 temp605_56))
(assert (= temp605_58 (select ARGNAME_output_padding_NAMEEND_VAL temp605_57)))
(assert (= temp605_59 #x0000000000000003))
(assert (= temp605_60 temp605_59))
(assert (= temp605_61 (select ARGNAME_output_padding_NAMEEND_VAL temp605_60)))
(assert (= temp605_62 #x0000000000000004))
(assert (= temp605_63 temp605_62))
(assert (= temp605_64 (select ARGNAME_output_padding_NAMEEND_VAL temp605_63)))
(assert (= temp605_65 #x0000000000000005))
(assert (= temp605_66 temp605_65))
(assert (= temp605_67 (select ARGNAME_output_padding_NAMEEND_VAL temp605_66)))
(assert (= temp605_68 #x0000000000000000))
(assert (= temp605_69 #x0000000000000000))
(assert (= temp605_70 temp605_69))
(assert (= temp605_71 (select ARGNAME_output_padding_NAMEEND_VAL temp605_70)))
(assert (= temp605_72 #x0000000000000000))
(assert (= temp605_73 #x0000000000000001))
(assert (= temp605_74 temp605_73))
(assert (= temp605_75 (select ARGNAME_output_padding_NAMEEND_VAL temp605_74)))
(assert (= temp605_76 #x0000000000000000))
(assert (= temp605_77 #x0000000000000002))
(assert (= temp605_78 temp605_77))
(assert (= temp605_79 (select ARGNAME_output_padding_NAMEEND_VAL temp605_78)))
(assert (= temp605_80 #x0000000000000000))
(assert (= temp605_81 #x0000000000000003))
(assert (= temp605_82 temp605_81))
(assert (= temp605_83 (select ARGNAME_output_padding_NAMEEND_VAL temp605_82)))
(assert (= temp605_84 #x0000000000000000))
(assert (= temp605_85 #x0000000000000004))
(assert (= temp605_86 temp605_85))
(assert (= temp605_87 (select ARGNAME_output_padding_NAMEEND_VAL temp605_86)))
(assert (= temp605_88 #x0000000000000000))
(assert (= temp605_89 #x0000000000000005))
(assert (= temp605_90 temp605_89))
(assert (= temp605_91 (select ARGNAME_output_padding_NAMEEND_VAL temp605_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp605_71 temp605_68)
             (bvslt temp605_75 temp605_72)
             (bvslt temp605_79 temp605_76)
             (bvslt temp605_83 temp605_80)
             (bvslt temp605_87 temp605_84)
             (bvslt temp605_91 temp605_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp605_92 #x0000000000000000))
(assert (= var1191725 temp605_92))
(assert (= temp605_93 #x0000000000000000))
(assert (= temp605_94 temp605_93))
(assert (= temp605_95 (select ARGNAME_stride_NAMEEND_VAL temp605_94)))
(assert (= temp605_96 #x0000000000000001))
(assert (= temp605_97 temp605_96))
(assert (= temp605_98 (select ARGNAME_stride_NAMEEND_VAL temp605_97)))
(assert (= temp605_99 #x0000000000000002))
(assert (= temp605_100 temp605_99))
(assert (= temp605_101 (select ARGNAME_stride_NAMEEND_VAL temp605_100)))
(assert (= temp605_102 #x0000000000000003))
(assert (= temp605_103 temp605_102))
(assert (= temp605_104 (select ARGNAME_stride_NAMEEND_VAL temp605_103)))
(assert (= temp605_105 #x0000000000000004))
(assert (= temp605_106 temp605_105))
(assert (= temp605_107 (select ARGNAME_stride_NAMEEND_VAL temp605_106)))
(assert (= temp605_108 #x0000000000000005))
(assert (= temp605_109 temp605_108))
(assert (= temp605_110 (select ARGNAME_stride_NAMEEND_VAL temp605_109)))
(assert (= temp605_111 #x0000000000000000))
(assert (= temp605_112 #x0000000000000000))
(assert (= temp605_113 temp605_112))
(assert (= temp605_114 (select ARGNAME_stride_NAMEEND_VAL temp605_113)))
(assert (= temp605_115 #x0000000000000000))
(assert (= temp605_116 #x0000000000000001))
(assert (= temp605_117 temp605_116))
(assert (= temp605_118 (select ARGNAME_stride_NAMEEND_VAL temp605_117)))
(assert (= temp605_119 #x0000000000000000))
(assert (= temp605_120 #x0000000000000002))
(assert (= temp605_121 temp605_120))
(assert (= temp605_122 (select ARGNAME_stride_NAMEEND_VAL temp605_121)))
(assert (= temp605_123 #x0000000000000000))
(assert (= temp605_124 #x0000000000000003))
(assert (= temp605_125 temp605_124))
(assert (= temp605_126 (select ARGNAME_stride_NAMEEND_VAL temp605_125)))
(assert (= temp605_127 #x0000000000000000))
(assert (= temp605_128 #x0000000000000004))
(assert (= temp605_129 temp605_128))
(assert (= temp605_130 (select ARGNAME_stride_NAMEEND_VAL temp605_129)))
(assert (= temp605_131 #x0000000000000000))
(assert (= temp605_132 #x0000000000000005))
(assert (= temp605_133 temp605_132))
(assert (= temp605_134 (select ARGNAME_stride_NAMEEND_VAL temp605_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp605_114 temp605_111)
             (bvsle temp605_118 temp605_115)
             (bvsle temp605_122 temp605_119)
             (bvsle temp605_126 temp605_123)
             (bvsle temp605_130 temp605_127)
             (bvsle temp605_134 temp605_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp605_135 #x0000000000000000))
(assert (= var1191735 temp605_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp605_136 #x0000000000000001))
(assert (= var1191747 temp605_136))
(assert (= temp605_137 #x0000000000000000))
(assert (= var1179826 temp605_137))
(assert (= temp605_138 #x0000000000000000))
(assert (= temp605_139 temp605_138))
(assert (= temp605_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp605_139)))
(assert (= temp605_141 #x0000000000000001))
(assert (= temp605_142 temp605_141))
(assert (= temp605_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp605_142)))
(assert (= temp605_144 #x0000000000000002))
(assert (= temp605_145 temp605_144))
(assert (= temp605_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp605_145)))
(assert (= temp605_147 #x0000000000000003))
(assert (= temp605_148 temp605_147))
(assert (= temp605_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp605_148)))
(assert (= temp605_150 #x0000000000000004))
(assert (= temp605_151 temp605_150))
(assert (= temp605_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp605_151)))
(assert (= temp605_153 #x0000000000000005))
(assert (= temp605_154 temp605_153))
(assert (= temp605_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp605_154)))
(assert (= temp605_157 var1179826))
(assert (= temp605_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp605_157)))
(assert (= temp605_156 temp605_158))
(assert (= var1191780
   (ite (bvslt temp605_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp605_159 #x0000000000000000))
(assert (= var1191780 temp605_159))
(assert (= temp605_160 #x0000000000000000))
(assert (= var1179826 temp605_160))
(assert (= temp605_162 var1179826))
(assert (= temp605_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp605_162)))
(assert (= temp605_161 temp605_163))
(assert (= var1191802 (bvsmod temp605_161 ARGNAME_groups_NAMEEND)))
(assert (= temp605_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp605_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp605_165 #x0000000000000001))
(assert (= var1191803 temp605_165))
(assert (= temp605_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp605_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp605_167 #x0000000000000001))
(assert (= var1191823 temp605_167))
(assert (= temp605_168 #x0000000000000001))
(assert (= var1180714 temp605_168))
(assert (= temp605_169 #x0000000000000000))
(assert (= temp605_170 temp605_169))
(assert (= temp605_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp605_170)))
(assert (= temp605_172 #x0000000000000001))
(assert (= temp605_173 temp605_172))
(assert (= temp605_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp605_173)))
(assert (= temp605_175 #x0000000000000002))
(assert (= temp605_176 temp605_175))
(assert (= temp605_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp605_176)))
(assert (= temp605_178 #x0000000000000003))
(assert (= temp605_179 temp605_178))
(assert (= temp605_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp605_179)))
(assert (= temp605_181 #x0000000000000004))
(assert (= temp605_182 temp605_181))
(assert (= temp605_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp605_182)))
(assert (= temp605_184 #x0000000000000005))
(assert (= temp605_185 temp605_184))
(assert (= temp605_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp605_185)))
(assert (= temp605_187 #x0000000000000000))
(assert (= temp605_188
   (ite (bvslt var1180714 temp605_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp605_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp605_188)))
(assert (= var1191831 temp605_189))
(assert (bvslt (ite (bvslt var1180714 temp605_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp605_190 #x0000000000000001))
(assert (= var1180714 temp605_190))
(assert (= temp605_192 var1180714))
(assert (= temp605_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp605_192)))
(assert (= temp605_191 temp605_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp605_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp605_194 #x0000000000000001))
(assert (= var1191836 temp605_194))
(assert (= temp605_195 #x0000000000000000))
(assert (= var1179826 temp605_195))
(assert (= temp605_197 var1179826))
(assert (= temp605_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp605_197)))
(assert (= temp605_196 temp605_198))
(assert (= temp605_199 #x0000000000000002))
(assert (= var1586025 temp605_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp605_200 #x0000000000000001))
(assert (= var1191993 temp605_200))
(assert (= temp605_201 #x0000000000000001))
(assert (= var2700303 temp605_201))
(assert (= temp605_202 #x0000000000000001))
(assert (= var2962447 temp605_202))
(assert (= temp605_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp605_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp605_204 #x0000000000000001))
(assert (= var211058 temp605_204))
(assert (= temp605_205 #x0000000000000001))
(assert (= var211188 temp605_205))
(assert (= var3879401 var211188))
(assert (= temp605_206 #x0000000000000000))
(assert (= var3866802 temp605_206))
(assert (= temp605_207 #x0000000000000000))
(assert (= temp605_208
   (ite (bvslt var3866802 temp605_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp605_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp605_208)))
(assert (= var3879420 temp605_209))
(assert (bvslt (ite (bvslt var3866802 temp605_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp605_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp605_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp605_211 #x0000000000000001))
(assert (= var3879421 temp605_211))
(assert (= temp605_212 #x0000000000000000))
(assert (= var4079423 temp605_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp605_213 #x0000000000000002))
(assert (= var4208259 temp605_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp605_214 #x0000000000000000))
(assert (= var4273820 temp605_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp605_215 #x0000000000000000))
(assert (= var4469136 temp605_215))
(assert (= temp605_216 #x0000000000000001))
(assert (= var211058 temp605_216))
(model-add temp605_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp605_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp605_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp605_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




