(declare-fun temp10350_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10350_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10350_3 () (_ BitVec 64))
(declare-fun temp10350_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10350_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10350_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10350_7 () (_ BitVec 64))
(declare-fun temp10350_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10350_9 () (_ BitVec 64))
(declare-fun temp10350_10 () (_ BitVec 64))
(declare-fun temp10350_11 () (_ BitVec 64))
(declare-fun temp10350_12 () (_ BitVec 64))
(declare-fun temp10350_13 () (_ BitVec 64))
(declare-fun temp10350_14 () (_ BitVec 64))
(declare-fun temp10350_15 () (_ BitVec 64))
(declare-fun temp10350_16 () (_ BitVec 64))
(declare-fun temp10350_17 () (_ BitVec 64))
(declare-fun temp10350_18 () (_ BitVec 64))
(declare-fun temp10350_19 () (_ BitVec 64))
(declare-fun temp10350_20 () (_ BitVec 64))
(declare-fun temp10350_21 () (_ BitVec 64))
(declare-fun temp10350_22 () (_ BitVec 64))
(declare-fun temp10350_23 () (_ BitVec 64))
(declare-fun temp10350_24 () (_ BitVec 64))
(declare-fun temp10350_25 () (_ BitVec 64))
(declare-fun temp10350_26 () (_ BitVec 64))
(declare-fun temp10350_27 () (_ BitVec 64))
(declare-fun temp10350_28 () (_ BitVec 64))
(declare-fun temp10350_29 () (_ BitVec 64))
(declare-fun temp10350_30 () (_ BitVec 64))
(declare-fun temp10350_31 () (_ BitVec 64))
(declare-fun temp10350_32 () (_ BitVec 64))
(declare-fun temp10350_33 () (_ BitVec 64))
(declare-fun temp10350_34 () (_ BitVec 64))
(declare-fun temp10350_35 () (_ BitVec 64))
(declare-fun temp10350_36 () (_ BitVec 64))
(declare-fun temp10350_37 () (_ BitVec 64))
(declare-fun temp10350_38 () (_ BitVec 64))
(declare-fun temp10350_39 () (_ BitVec 64))
(declare-fun temp10350_40 () (_ BitVec 64))
(declare-fun temp10350_41 () (_ BitVec 64))
(declare-fun temp10350_42 () (_ BitVec 64))
(declare-fun temp10350_43 () (_ BitVec 64))
(declare-fun temp10350_44 () (_ BitVec 64))
(declare-fun temp10350_45 () (_ BitVec 64))
(declare-fun temp10350_46 () (_ BitVec 64))
(declare-fun temp10350_47 () (_ BitVec 64))
(declare-fun temp10350_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10350_49 () (_ BitVec 64))
(declare-fun temp10350_50 () (_ BitVec 64))
(declare-fun temp10350_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10350_52 () (_ BitVec 64))
(declare-fun temp10350_53 () (_ BitVec 64))
(declare-fun temp10350_54 () (_ BitVec 64))
(declare-fun temp10350_55 () (_ BitVec 64))
(declare-fun temp10350_56 () (_ BitVec 64))
(declare-fun temp10350_57 () (_ BitVec 64))
(declare-fun temp10350_58 () (_ BitVec 64))
(declare-fun temp10350_59 () (_ BitVec 64))
(declare-fun temp10350_60 () (_ BitVec 64))
(declare-fun temp10350_61 () (_ BitVec 64))
(declare-fun temp10350_62 () (_ BitVec 64))
(declare-fun temp10350_63 () (_ BitVec 64))
(declare-fun temp10350_64 () (_ BitVec 64))
(declare-fun temp10350_65 () (_ BitVec 64))
(declare-fun temp10350_66 () (_ BitVec 64))
(declare-fun temp10350_67 () (_ BitVec 64))
(declare-fun temp10350_68 () (_ BitVec 64))
(declare-fun temp10350_69 () (_ BitVec 64))
(declare-fun temp10350_70 () (_ BitVec 64))
(declare-fun temp10350_71 () (_ BitVec 64))
(declare-fun temp10350_72 () (_ BitVec 64))
(declare-fun temp10350_73 () (_ BitVec 64))
(declare-fun temp10350_74 () (_ BitVec 64))
(declare-fun temp10350_75 () (_ BitVec 64))
(declare-fun temp10350_76 () (_ BitVec 64))
(declare-fun temp10350_77 () (_ BitVec 64))
(declare-fun temp10350_78 () (_ BitVec 64))
(declare-fun temp10350_79 () (_ BitVec 64))
(declare-fun temp10350_80 () (_ BitVec 64))
(declare-fun temp10350_81 () (_ BitVec 64))
(declare-fun temp10350_82 () (_ BitVec 64))
(declare-fun temp10350_83 () (_ BitVec 64))
(declare-fun temp10350_84 () (_ BitVec 64))
(declare-fun temp10350_85 () (_ BitVec 64))
(declare-fun temp10350_86 () (_ BitVec 64))
(declare-fun temp10350_87 () (_ BitVec 64))
(declare-fun temp10350_88 () (_ BitVec 64))
(declare-fun temp10350_89 () (_ BitVec 64))
(declare-fun temp10350_90 () (_ BitVec 64))
(declare-fun temp10350_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10350_92 () (_ BitVec 64))
(declare-fun temp10350_93 () (_ BitVec 64))
(declare-fun temp10350_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10350_95 () (_ BitVec 64))
(declare-fun temp10350_96 () (_ BitVec 64))
(declare-fun temp10350_97 () (_ BitVec 64))
(declare-fun temp10350_98 () (_ BitVec 64))
(declare-fun temp10350_99 () (_ BitVec 64))
(declare-fun temp10350_100 () (_ BitVec 64))
(declare-fun temp10350_101 () (_ BitVec 64))
(declare-fun temp10350_102 () (_ BitVec 64))
(declare-fun temp10350_103 () (_ BitVec 64))
(declare-fun temp10350_104 () (_ BitVec 64))
(declare-fun temp10350_105 () (_ BitVec 64))
(declare-fun temp10350_106 () (_ BitVec 64))
(declare-fun temp10350_107 () (_ BitVec 64))
(declare-fun temp10350_108 () (_ BitVec 64))
(declare-fun temp10350_109 () (_ BitVec 64))
(declare-fun temp10350_110 () (_ BitVec 64))
(declare-fun temp10350_111 () (_ BitVec 64))
(declare-fun temp10350_112 () (_ BitVec 64))
(declare-fun temp10350_113 () (_ BitVec 64))
(declare-fun temp10350_114 () (_ BitVec 64))
(declare-fun temp10350_115 () (_ BitVec 64))
(declare-fun temp10350_116 () (_ BitVec 64))
(declare-fun temp10350_117 () (_ BitVec 64))
(declare-fun temp10350_118 () (_ BitVec 64))
(declare-fun temp10350_119 () (_ BitVec 64))
(declare-fun temp10350_120 () (_ BitVec 64))
(declare-fun temp10350_121 () (_ BitVec 64))
(declare-fun temp10350_122 () (_ BitVec 64))
(declare-fun temp10350_123 () (_ BitVec 64))
(declare-fun temp10350_124 () (_ BitVec 64))
(declare-fun temp10350_125 () (_ BitVec 64))
(declare-fun temp10350_126 () (_ BitVec 64))
(declare-fun temp10350_127 () (_ BitVec 64))
(declare-fun temp10350_128 () (_ BitVec 64))
(declare-fun temp10350_129 () (_ BitVec 64))
(declare-fun temp10350_130 () (_ BitVec 64))
(declare-fun temp10350_131 () (_ BitVec 64))
(declare-fun temp10350_132 () (_ BitVec 64))
(declare-fun temp10350_133 () (_ BitVec 64))
(declare-fun temp10350_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10350_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10350_136 () (_ BitVec 64))
(declare-fun temp10350_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10350_138 () (_ BitVec 64))
(declare-fun temp10350_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10350_140 () (_ BitVec 64))
(declare-fun temp10350_141 () (_ BitVec 64))
(declare-fun temp10350_142 () (_ BitVec 64))
(declare-fun temp10350_143 () (_ BitVec 64))
(declare-fun temp10350_144 () (_ BitVec 64))
(declare-fun temp10350_145 () (_ BitVec 64))
(declare-fun temp10350_146 () (_ BitVec 64))
(declare-fun temp10350_147 () (_ BitVec 64))
(declare-fun temp10350_148 () (_ BitVec 64))
(declare-fun temp10350_149 () (_ BitVec 64))
(declare-fun temp10350_150 () (_ BitVec 64))
(declare-fun temp10350_151 () (_ BitVec 64))
(declare-fun temp10350_152 () (_ BitVec 64))
(declare-fun temp10350_153 () (_ BitVec 64))
(declare-fun temp10350_154 () (_ BitVec 64))
(declare-fun temp10350_155 () (_ BitVec 64))
(declare-fun temp10350_157 () (_ BitVec 64))
(declare-fun temp10350_158 () (_ BitVec 64))
(declare-fun temp10350_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10350_159 () (_ BitVec 64))
(declare-fun temp10350_160 () (_ BitVec 64))
(declare-fun temp10350_162 () (_ BitVec 64))
(declare-fun temp10350_163 () (_ BitVec 64))
(declare-fun temp10350_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10350_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10350_165 () (_ BitVec 64))
(declare-fun temp10350_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10350_167 () (_ BitVec 64))
(declare-fun temp10350_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10350_169 () (_ BitVec 64))
(declare-fun temp10350_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10350_171 () (_ BitVec 64))
(declare-fun temp10350_172 () (_ BitVec 64))
(declare-fun temp10350_173 () (_ BitVec 64))
(declare-fun temp10350_174 () (_ BitVec 64))
(declare-fun temp10350_175 () (_ BitVec 64))
(declare-fun temp10350_176 () (_ BitVec 64))
(declare-fun temp10350_177 () (_ BitVec 64))
(declare-fun temp10350_178 () (_ BitVec 64))
(declare-fun temp10350_179 () (_ BitVec 64))
(declare-fun temp10350_180 () (_ BitVec 64))
(declare-fun temp10350_181 () (_ BitVec 64))
(declare-fun temp10350_182 () (_ BitVec 64))
(declare-fun temp10350_183 () (_ BitVec 64))
(declare-fun temp10350_184 () (_ BitVec 64))
(declare-fun temp10350_185 () (_ BitVec 64))
(declare-fun temp10350_186 () (_ BitVec 64))
(declare-fun temp10350_187 () (_ BitVec 64))
(declare-fun temp10350_188 () (_ BitVec 64))
(declare-fun temp10350_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10350_190 () (_ BitVec 64))
(declare-fun temp10350_192 () (_ BitVec 64))
(declare-fun temp10350_193 () (_ BitVec 64))
(declare-fun temp10350_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10350_194 () (_ BitVec 64))
(declare-fun temp10350_195 () (_ BitVec 64))
(declare-fun temp10350_197 () (_ BitVec 64))
(declare-fun temp10350_198 () (_ BitVec 64))
(declare-fun temp10350_196 () (_ BitVec 64))
(declare-fun temp10350_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10350_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10350_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10350_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10350_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10350_204 () (_ BitVec 64))
(declare-fun temp10350_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10350_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10350_207 () (_ BitVec 64))
(declare-fun temp10350_208 () (_ BitVec 64))
(declare-fun temp10350_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10350_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10350_211 () (_ BitVec 64))
(declare-fun temp10350_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10350_213 () (_ BitVec 64))
(declare-fun temp10350_214 () (_ BitVec 64))
(declare-fun temp10350_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10350_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10350_217 () (_ BitVec 64))
(declare-fun temp10350_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10350_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10350_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var5124496 () (_ BitVec 64))
(declare-fun var5386640 () (_ BitVec 64))
(declare-fun temp10350_221 () (_ BitVec 64))
(assert (= temp10350_1 #x0000000000000001))
(assert (= var77203 temp10350_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10350_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10350_2)))
(assert (= temp10350_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10350_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10350_4 #x0000000000000000))
(assert (= var210941 temp10350_4))
(assert (= temp10350_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10350_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10350_6 #x0000000000000000))
(assert (= var210986 temp10350_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10350_7 #x0000000000000000))
(assert (= temp10350_8 temp10350_7))
(assert (= temp10350_9 (select ARGNAME_padding_NAMEEND_VAL temp10350_8)))
(assert (= temp10350_10 #x0000000000000001))
(assert (= temp10350_11 temp10350_10))
(assert (= temp10350_12 (select ARGNAME_padding_NAMEEND_VAL temp10350_11)))
(assert (= temp10350_13 #x0000000000000002))
(assert (= temp10350_14 temp10350_13))
(assert (= temp10350_15 (select ARGNAME_padding_NAMEEND_VAL temp10350_14)))
(assert (= temp10350_16 #x0000000000000003))
(assert (= temp10350_17 temp10350_16))
(assert (= temp10350_18 (select ARGNAME_padding_NAMEEND_VAL temp10350_17)))
(assert (= temp10350_19 #x0000000000000004))
(assert (= temp10350_20 temp10350_19))
(assert (= temp10350_21 (select ARGNAME_padding_NAMEEND_VAL temp10350_20)))
(assert (= temp10350_22 #x0000000000000005))
(assert (= temp10350_23 temp10350_22))
(assert (= temp10350_24 (select ARGNAME_padding_NAMEEND_VAL temp10350_23)))
(assert (= temp10350_25 #x0000000000000000))
(assert (= temp10350_26 #x0000000000000000))
(assert (= temp10350_27 temp10350_26))
(assert (= temp10350_28 (select ARGNAME_padding_NAMEEND_VAL temp10350_27)))
(assert (= temp10350_29 #x0000000000000000))
(assert (= temp10350_30 #x0000000000000001))
(assert (= temp10350_31 temp10350_30))
(assert (= temp10350_32 (select ARGNAME_padding_NAMEEND_VAL temp10350_31)))
(assert (= temp10350_33 #x0000000000000000))
(assert (= temp10350_34 #x0000000000000002))
(assert (= temp10350_35 temp10350_34))
(assert (= temp10350_36 (select ARGNAME_padding_NAMEEND_VAL temp10350_35)))
(assert (= temp10350_37 #x0000000000000000))
(assert (= temp10350_38 #x0000000000000003))
(assert (= temp10350_39 temp10350_38))
(assert (= temp10350_40 (select ARGNAME_padding_NAMEEND_VAL temp10350_39)))
(assert (= temp10350_41 #x0000000000000000))
(assert (= temp10350_42 #x0000000000000004))
(assert (= temp10350_43 temp10350_42))
(assert (= temp10350_44 (select ARGNAME_padding_NAMEEND_VAL temp10350_43)))
(assert (= temp10350_45 #x0000000000000000))
(assert (= temp10350_46 #x0000000000000005))
(assert (= temp10350_47 temp10350_46))
(assert (= temp10350_48 (select ARGNAME_padding_NAMEEND_VAL temp10350_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10350_28 temp10350_25)
             (bvslt temp10350_32 temp10350_29)
             (bvslt temp10350_36 temp10350_33)
             (bvslt temp10350_40 temp10350_37)
             (bvslt temp10350_44 temp10350_41)
             (bvslt temp10350_48 temp10350_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10350_49 #x0000000000000000))
(assert (= var1191714 temp10350_49))
(assert (= temp10350_50 #x0000000000000000))
(assert (= temp10350_51 temp10350_50))
(assert (= temp10350_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10350_51)))
(assert (= temp10350_53 #x0000000000000001))
(assert (= temp10350_54 temp10350_53))
(assert (= temp10350_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10350_54)))
(assert (= temp10350_56 #x0000000000000002))
(assert (= temp10350_57 temp10350_56))
(assert (= temp10350_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10350_57)))
(assert (= temp10350_59 #x0000000000000003))
(assert (= temp10350_60 temp10350_59))
(assert (= temp10350_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10350_60)))
(assert (= temp10350_62 #x0000000000000004))
(assert (= temp10350_63 temp10350_62))
(assert (= temp10350_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10350_63)))
(assert (= temp10350_65 #x0000000000000005))
(assert (= temp10350_66 temp10350_65))
(assert (= temp10350_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10350_66)))
(assert (= temp10350_68 #x0000000000000000))
(assert (= temp10350_69 #x0000000000000000))
(assert (= temp10350_70 temp10350_69))
(assert (= temp10350_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10350_70)))
(assert (= temp10350_72 #x0000000000000000))
(assert (= temp10350_73 #x0000000000000001))
(assert (= temp10350_74 temp10350_73))
(assert (= temp10350_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10350_74)))
(assert (= temp10350_76 #x0000000000000000))
(assert (= temp10350_77 #x0000000000000002))
(assert (= temp10350_78 temp10350_77))
(assert (= temp10350_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10350_78)))
(assert (= temp10350_80 #x0000000000000000))
(assert (= temp10350_81 #x0000000000000003))
(assert (= temp10350_82 temp10350_81))
(assert (= temp10350_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10350_82)))
(assert (= temp10350_84 #x0000000000000000))
(assert (= temp10350_85 #x0000000000000004))
(assert (= temp10350_86 temp10350_85))
(assert (= temp10350_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10350_86)))
(assert (= temp10350_88 #x0000000000000000))
(assert (= temp10350_89 #x0000000000000005))
(assert (= temp10350_90 temp10350_89))
(assert (= temp10350_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10350_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10350_71 temp10350_68)
             (bvslt temp10350_75 temp10350_72)
             (bvslt temp10350_79 temp10350_76)
             (bvslt temp10350_83 temp10350_80)
             (bvslt temp10350_87 temp10350_84)
             (bvslt temp10350_91 temp10350_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10350_92 #x0000000000000000))
(assert (= var1191725 temp10350_92))
(assert (= temp10350_93 #x0000000000000000))
(assert (= temp10350_94 temp10350_93))
(assert (= temp10350_95 (select ARGNAME_stride_NAMEEND_VAL temp10350_94)))
(assert (= temp10350_96 #x0000000000000001))
(assert (= temp10350_97 temp10350_96))
(assert (= temp10350_98 (select ARGNAME_stride_NAMEEND_VAL temp10350_97)))
(assert (= temp10350_99 #x0000000000000002))
(assert (= temp10350_100 temp10350_99))
(assert (= temp10350_101 (select ARGNAME_stride_NAMEEND_VAL temp10350_100)))
(assert (= temp10350_102 #x0000000000000003))
(assert (= temp10350_103 temp10350_102))
(assert (= temp10350_104 (select ARGNAME_stride_NAMEEND_VAL temp10350_103)))
(assert (= temp10350_105 #x0000000000000004))
(assert (= temp10350_106 temp10350_105))
(assert (= temp10350_107 (select ARGNAME_stride_NAMEEND_VAL temp10350_106)))
(assert (= temp10350_108 #x0000000000000005))
(assert (= temp10350_109 temp10350_108))
(assert (= temp10350_110 (select ARGNAME_stride_NAMEEND_VAL temp10350_109)))
(assert (= temp10350_111 #x0000000000000000))
(assert (= temp10350_112 #x0000000000000000))
(assert (= temp10350_113 temp10350_112))
(assert (= temp10350_114 (select ARGNAME_stride_NAMEEND_VAL temp10350_113)))
(assert (= temp10350_115 #x0000000000000000))
(assert (= temp10350_116 #x0000000000000001))
(assert (= temp10350_117 temp10350_116))
(assert (= temp10350_118 (select ARGNAME_stride_NAMEEND_VAL temp10350_117)))
(assert (= temp10350_119 #x0000000000000000))
(assert (= temp10350_120 #x0000000000000002))
(assert (= temp10350_121 temp10350_120))
(assert (= temp10350_122 (select ARGNAME_stride_NAMEEND_VAL temp10350_121)))
(assert (= temp10350_123 #x0000000000000000))
(assert (= temp10350_124 #x0000000000000003))
(assert (= temp10350_125 temp10350_124))
(assert (= temp10350_126 (select ARGNAME_stride_NAMEEND_VAL temp10350_125)))
(assert (= temp10350_127 #x0000000000000000))
(assert (= temp10350_128 #x0000000000000004))
(assert (= temp10350_129 temp10350_128))
(assert (= temp10350_130 (select ARGNAME_stride_NAMEEND_VAL temp10350_129)))
(assert (= temp10350_131 #x0000000000000000))
(assert (= temp10350_132 #x0000000000000005))
(assert (= temp10350_133 temp10350_132))
(assert (= temp10350_134 (select ARGNAME_stride_NAMEEND_VAL temp10350_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10350_114 temp10350_111)
             (bvsle temp10350_118 temp10350_115)
             (bvsle temp10350_122 temp10350_119)
             (bvsle temp10350_126 temp10350_123)
             (bvsle temp10350_130 temp10350_127)
             (bvsle temp10350_134 temp10350_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10350_135 #x0000000000000000))
(assert (= var1191735 temp10350_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10350_136 #x0000000000000001))
(assert (= var1191747 temp10350_136))
(assert (= temp10350_137 #x0000000000000000))
(assert (= var1179826 temp10350_137))
(assert (= temp10350_138 #x0000000000000000))
(assert (= temp10350_139 temp10350_138))
(assert (= temp10350_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10350_139)))
(assert (= temp10350_141 #x0000000000000001))
(assert (= temp10350_142 temp10350_141))
(assert (= temp10350_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10350_142)))
(assert (= temp10350_144 #x0000000000000002))
(assert (= temp10350_145 temp10350_144))
(assert (= temp10350_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10350_145)))
(assert (= temp10350_147 #x0000000000000003))
(assert (= temp10350_148 temp10350_147))
(assert (= temp10350_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10350_148)))
(assert (= temp10350_150 #x0000000000000004))
(assert (= temp10350_151 temp10350_150))
(assert (= temp10350_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10350_151)))
(assert (= temp10350_153 #x0000000000000005))
(assert (= temp10350_154 temp10350_153))
(assert (= temp10350_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10350_154)))
(assert (= temp10350_157 var1179826))
(assert (= temp10350_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10350_157)))
(assert (= temp10350_156 temp10350_158))
(assert (= var1191780
   (ite (bvslt temp10350_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10350_159 #x0000000000000000))
(assert (= var1191780 temp10350_159))
(assert (= temp10350_160 #x0000000000000000))
(assert (= var1179826 temp10350_160))
(assert (= temp10350_162 var1179826))
(assert (= temp10350_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10350_162)))
(assert (= temp10350_161 temp10350_163))
(assert (= var1191802 (bvsmod temp10350_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10350_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10350_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10350_165 #x0000000000000001))
(assert (= var1191803 temp10350_165))
(assert (= temp10350_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10350_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10350_167 #x0000000000000001))
(assert (= var1191823 temp10350_167))
(assert (= temp10350_168 #x0000000000000001))
(assert (= var1180714 temp10350_168))
(assert (= temp10350_169 #x0000000000000000))
(assert (= temp10350_170 temp10350_169))
(assert (= temp10350_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10350_170)))
(assert (= temp10350_172 #x0000000000000001))
(assert (= temp10350_173 temp10350_172))
(assert (= temp10350_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10350_173)))
(assert (= temp10350_175 #x0000000000000002))
(assert (= temp10350_176 temp10350_175))
(assert (= temp10350_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10350_176)))
(assert (= temp10350_178 #x0000000000000003))
(assert (= temp10350_179 temp10350_178))
(assert (= temp10350_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10350_179)))
(assert (= temp10350_181 #x0000000000000004))
(assert (= temp10350_182 temp10350_181))
(assert (= temp10350_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10350_182)))
(assert (= temp10350_184 #x0000000000000005))
(assert (= temp10350_185 temp10350_184))
(assert (= temp10350_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10350_185)))
(assert (= temp10350_187 #x0000000000000000))
(assert (= temp10350_188
   (ite (bvslt var1180714 temp10350_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10350_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10350_188)))
(assert (= var1191831 temp10350_189))
(assert (bvslt (ite (bvslt var1180714 temp10350_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10350_190 #x0000000000000001))
(assert (= var1180714 temp10350_190))
(assert (= temp10350_192 var1180714))
(assert (= temp10350_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10350_192)))
(assert (= temp10350_191 temp10350_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10350_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10350_194 #x0000000000000001))
(assert (= var1191836 temp10350_194))
(assert (= temp10350_195 #x0000000000000000))
(assert (= var1179826 temp10350_195))
(assert (= temp10350_197 var1179826))
(assert (= temp10350_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10350_197)))
(assert (= temp10350_196 temp10350_198))
(assert (= temp10350_199 #x0000000000000002))
(assert (= var1586025 temp10350_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10350_200 #x0000000000000001))
(assert (= var1191993 temp10350_200))
(assert (= temp10350_201 #x0000000000000001))
(assert (= var2700303 temp10350_201))
(assert (= temp10350_202 #x0000000000000001))
(assert (= var2962447 temp10350_202))
(assert (= temp10350_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10350_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10350_204 #x0000000000000001))
(assert (= var211058 temp10350_204))
(assert (= temp10350_205 #x0000000000000001))
(assert (= var211188 temp10350_205))
(assert (= var3879401 var211188))
(assert (= temp10350_206 #x0000000000000000))
(assert (= var3866802 temp10350_206))
(assert (= temp10350_207 #x0000000000000000))
(assert (= temp10350_208
   (ite (bvslt var3866802 temp10350_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10350_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10350_208)))
(assert (= var3879420 temp10350_209))
(assert (bvslt (ite (bvslt var3866802 temp10350_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10350_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10350_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10350_211 #x0000000000000000))
(assert (= var3879421 temp10350_211))
(assert (= temp10350_212 #x0000000000000001))
(assert (= var3867690 temp10350_212))
(assert (= temp10350_213 #x0000000000000000))
(assert (= temp10350_214
   (ite (bvslt var3867690 temp10350_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10350_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10350_214)))
(assert (= var3879423 temp10350_215))
(assert (bvslt (ite (bvslt var3867690 temp10350_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10350_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10350_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10350_217 #x0000000000000001))
(assert (= var3879424 temp10350_217))
(assert (= temp10350_218 #x0000000000000000))
(assert (= var4079423 temp10350_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10350_219 #x0000000000000002))
(assert (= var4208259 temp10350_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10350_220 #x0000000000000000))
(assert (= var4273820 temp10350_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var5124496 var211201))
(assert (= var5386640 var211201))
(assert (= temp10350_221 #x0000000000000001))
(assert (= var211058 temp10350_221))
(model-add temp10350_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10350_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10350_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10350_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




