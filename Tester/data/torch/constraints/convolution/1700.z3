(declare-fun temp11061_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp11061_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp11061_3 () (_ BitVec 64))
(declare-fun temp11061_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp11061_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp11061_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp11061_7 () (_ BitVec 64))
(declare-fun temp11061_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11061_9 () (_ BitVec 64))
(declare-fun temp11061_10 () (_ BitVec 64))
(declare-fun temp11061_11 () (_ BitVec 64))
(declare-fun temp11061_12 () (_ BitVec 64))
(declare-fun temp11061_13 () (_ BitVec 64))
(declare-fun temp11061_14 () (_ BitVec 64))
(declare-fun temp11061_15 () (_ BitVec 64))
(declare-fun temp11061_16 () (_ BitVec 64))
(declare-fun temp11061_17 () (_ BitVec 64))
(declare-fun temp11061_18 () (_ BitVec 64))
(declare-fun temp11061_19 () (_ BitVec 64))
(declare-fun temp11061_20 () (_ BitVec 64))
(declare-fun temp11061_21 () (_ BitVec 64))
(declare-fun temp11061_22 () (_ BitVec 64))
(declare-fun temp11061_23 () (_ BitVec 64))
(declare-fun temp11061_24 () (_ BitVec 64))
(declare-fun temp11061_25 () (_ BitVec 64))
(declare-fun temp11061_26 () (_ BitVec 64))
(declare-fun temp11061_27 () (_ BitVec 64))
(declare-fun temp11061_28 () (_ BitVec 64))
(declare-fun temp11061_29 () (_ BitVec 64))
(declare-fun temp11061_30 () (_ BitVec 64))
(declare-fun temp11061_31 () (_ BitVec 64))
(declare-fun temp11061_32 () (_ BitVec 64))
(declare-fun temp11061_33 () (_ BitVec 64))
(declare-fun temp11061_34 () (_ BitVec 64))
(declare-fun temp11061_35 () (_ BitVec 64))
(declare-fun temp11061_36 () (_ BitVec 64))
(declare-fun temp11061_37 () (_ BitVec 64))
(declare-fun temp11061_38 () (_ BitVec 64))
(declare-fun temp11061_39 () (_ BitVec 64))
(declare-fun temp11061_40 () (_ BitVec 64))
(declare-fun temp11061_41 () (_ BitVec 64))
(declare-fun temp11061_42 () (_ BitVec 64))
(declare-fun temp11061_43 () (_ BitVec 64))
(declare-fun temp11061_44 () (_ BitVec 64))
(declare-fun temp11061_45 () (_ BitVec 64))
(declare-fun temp11061_46 () (_ BitVec 64))
(declare-fun temp11061_47 () (_ BitVec 64))
(declare-fun temp11061_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp11061_49 () (_ BitVec 64))
(declare-fun temp11061_50 () (_ BitVec 64))
(declare-fun temp11061_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11061_52 () (_ BitVec 64))
(declare-fun temp11061_53 () (_ BitVec 64))
(declare-fun temp11061_54 () (_ BitVec 64))
(declare-fun temp11061_55 () (_ BitVec 64))
(declare-fun temp11061_56 () (_ BitVec 64))
(declare-fun temp11061_57 () (_ BitVec 64))
(declare-fun temp11061_58 () (_ BitVec 64))
(declare-fun temp11061_59 () (_ BitVec 64))
(declare-fun temp11061_60 () (_ BitVec 64))
(declare-fun temp11061_61 () (_ BitVec 64))
(declare-fun temp11061_62 () (_ BitVec 64))
(declare-fun temp11061_63 () (_ BitVec 64))
(declare-fun temp11061_64 () (_ BitVec 64))
(declare-fun temp11061_65 () (_ BitVec 64))
(declare-fun temp11061_66 () (_ BitVec 64))
(declare-fun temp11061_67 () (_ BitVec 64))
(declare-fun temp11061_68 () (_ BitVec 64))
(declare-fun temp11061_69 () (_ BitVec 64))
(declare-fun temp11061_70 () (_ BitVec 64))
(declare-fun temp11061_71 () (_ BitVec 64))
(declare-fun temp11061_72 () (_ BitVec 64))
(declare-fun temp11061_73 () (_ BitVec 64))
(declare-fun temp11061_74 () (_ BitVec 64))
(declare-fun temp11061_75 () (_ BitVec 64))
(declare-fun temp11061_76 () (_ BitVec 64))
(declare-fun temp11061_77 () (_ BitVec 64))
(declare-fun temp11061_78 () (_ BitVec 64))
(declare-fun temp11061_79 () (_ BitVec 64))
(declare-fun temp11061_80 () (_ BitVec 64))
(declare-fun temp11061_81 () (_ BitVec 64))
(declare-fun temp11061_82 () (_ BitVec 64))
(declare-fun temp11061_83 () (_ BitVec 64))
(declare-fun temp11061_84 () (_ BitVec 64))
(declare-fun temp11061_85 () (_ BitVec 64))
(declare-fun temp11061_86 () (_ BitVec 64))
(declare-fun temp11061_87 () (_ BitVec 64))
(declare-fun temp11061_88 () (_ BitVec 64))
(declare-fun temp11061_89 () (_ BitVec 64))
(declare-fun temp11061_90 () (_ BitVec 64))
(declare-fun temp11061_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp11061_92 () (_ BitVec 64))
(declare-fun temp11061_93 () (_ BitVec 64))
(declare-fun temp11061_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11061_95 () (_ BitVec 64))
(declare-fun temp11061_96 () (_ BitVec 64))
(declare-fun temp11061_97 () (_ BitVec 64))
(declare-fun temp11061_98 () (_ BitVec 64))
(declare-fun temp11061_99 () (_ BitVec 64))
(declare-fun temp11061_100 () (_ BitVec 64))
(declare-fun temp11061_101 () (_ BitVec 64))
(declare-fun temp11061_102 () (_ BitVec 64))
(declare-fun temp11061_103 () (_ BitVec 64))
(declare-fun temp11061_104 () (_ BitVec 64))
(declare-fun temp11061_105 () (_ BitVec 64))
(declare-fun temp11061_106 () (_ BitVec 64))
(declare-fun temp11061_107 () (_ BitVec 64))
(declare-fun temp11061_108 () (_ BitVec 64))
(declare-fun temp11061_109 () (_ BitVec 64))
(declare-fun temp11061_110 () (_ BitVec 64))
(declare-fun temp11061_111 () (_ BitVec 64))
(declare-fun temp11061_112 () (_ BitVec 64))
(declare-fun temp11061_113 () (_ BitVec 64))
(declare-fun temp11061_114 () (_ BitVec 64))
(declare-fun temp11061_115 () (_ BitVec 64))
(declare-fun temp11061_116 () (_ BitVec 64))
(declare-fun temp11061_117 () (_ BitVec 64))
(declare-fun temp11061_118 () (_ BitVec 64))
(declare-fun temp11061_119 () (_ BitVec 64))
(declare-fun temp11061_120 () (_ BitVec 64))
(declare-fun temp11061_121 () (_ BitVec 64))
(declare-fun temp11061_122 () (_ BitVec 64))
(declare-fun temp11061_123 () (_ BitVec 64))
(declare-fun temp11061_124 () (_ BitVec 64))
(declare-fun temp11061_125 () (_ BitVec 64))
(declare-fun temp11061_126 () (_ BitVec 64))
(declare-fun temp11061_127 () (_ BitVec 64))
(declare-fun temp11061_128 () (_ BitVec 64))
(declare-fun temp11061_129 () (_ BitVec 64))
(declare-fun temp11061_130 () (_ BitVec 64))
(declare-fun temp11061_131 () (_ BitVec 64))
(declare-fun temp11061_132 () (_ BitVec 64))
(declare-fun temp11061_133 () (_ BitVec 64))
(declare-fun temp11061_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp11061_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp11061_136 () (_ BitVec 64))
(declare-fun temp11061_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp11061_138 () (_ BitVec 64))
(declare-fun temp11061_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11061_140 () (_ BitVec 64))
(declare-fun temp11061_141 () (_ BitVec 64))
(declare-fun temp11061_142 () (_ BitVec 64))
(declare-fun temp11061_143 () (_ BitVec 64))
(declare-fun temp11061_144 () (_ BitVec 64))
(declare-fun temp11061_145 () (_ BitVec 64))
(declare-fun temp11061_146 () (_ BitVec 64))
(declare-fun temp11061_147 () (_ BitVec 64))
(declare-fun temp11061_148 () (_ BitVec 64))
(declare-fun temp11061_149 () (_ BitVec 64))
(declare-fun temp11061_150 () (_ BitVec 64))
(declare-fun temp11061_151 () (_ BitVec 64))
(declare-fun temp11061_152 () (_ BitVec 64))
(declare-fun temp11061_153 () (_ BitVec 64))
(declare-fun temp11061_154 () (_ BitVec 64))
(declare-fun temp11061_155 () (_ BitVec 64))
(declare-fun temp11061_157 () (_ BitVec 64))
(declare-fun temp11061_158 () (_ BitVec 64))
(declare-fun temp11061_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp11061_159 () (_ BitVec 64))
(declare-fun temp11061_160 () (_ BitVec 64))
(declare-fun temp11061_162 () (_ BitVec 64))
(declare-fun temp11061_163 () (_ BitVec 64))
(declare-fun temp11061_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp11061_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp11061_165 () (_ BitVec 64))
(declare-fun temp11061_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp11061_167 () (_ BitVec 64))
(declare-fun temp11061_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp11061_169 () (_ BitVec 64))
(declare-fun temp11061_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11061_171 () (_ BitVec 64))
(declare-fun temp11061_172 () (_ BitVec 64))
(declare-fun temp11061_173 () (_ BitVec 64))
(declare-fun temp11061_174 () (_ BitVec 64))
(declare-fun temp11061_175 () (_ BitVec 64))
(declare-fun temp11061_176 () (_ BitVec 64))
(declare-fun temp11061_177 () (_ BitVec 64))
(declare-fun temp11061_178 () (_ BitVec 64))
(declare-fun temp11061_179 () (_ BitVec 64))
(declare-fun temp11061_180 () (_ BitVec 64))
(declare-fun temp11061_181 () (_ BitVec 64))
(declare-fun temp11061_182 () (_ BitVec 64))
(declare-fun temp11061_183 () (_ BitVec 64))
(declare-fun temp11061_184 () (_ BitVec 64))
(declare-fun temp11061_185 () (_ BitVec 64))
(declare-fun temp11061_186 () (_ BitVec 64))
(declare-fun temp11061_187 () (_ BitVec 64))
(declare-fun temp11061_188 () (_ BitVec 64))
(declare-fun temp11061_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp11061_190 () (_ BitVec 64))
(declare-fun temp11061_192 () (_ BitVec 64))
(declare-fun temp11061_193 () (_ BitVec 64))
(declare-fun temp11061_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp11061_194 () (_ BitVec 64))
(declare-fun temp11061_195 () (_ BitVec 64))
(declare-fun temp11061_197 () (_ BitVec 64))
(declare-fun temp11061_198 () (_ BitVec 64))
(declare-fun temp11061_196 () (_ BitVec 64))
(declare-fun temp11061_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp11061_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp11061_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp11061_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp11061_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp11061_204 () (_ BitVec 64))
(declare-fun temp11061_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp11061_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp11061_207 () (_ BitVec 64))
(declare-fun temp11061_208 () (_ BitVec 64))
(declare-fun temp11061_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp11061_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp11061_211 () (_ BitVec 64))
(declare-fun temp11061_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp11061_213 () (_ BitVec 64))
(declare-fun temp11061_214 () (_ BitVec 64))
(declare-fun temp11061_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp11061_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp11061_217 () (_ BitVec 64))
(declare-fun temp11061_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp11061_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp11061_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var4600208 () (_ BitVec 64))
(declare-fun var4862352 () (_ BitVec 64))
(declare-fun temp11061_221 () (_ BitVec 64))
(declare-fun var212414 () (_ BitVec 64))
(declare-fun temp11061_222 () (_ BitVec 64))
(declare-fun temp11061_223 () (_ BitVec 64))
(declare-fun var5191299 () (_ BitVec 64))
(declare-fun var5256844 () (_ BitVec 64))
(declare-fun temp11061_224 () (_ BitVec 64))
(assert (= temp11061_1 #x0000000000000001))
(assert (= var77203 temp11061_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp11061_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp11061_2)))
(assert (= temp11061_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp11061_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11061_4 #x0000000000000000))
(assert (= var210941 temp11061_4))
(assert (= temp11061_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp11061_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11061_6 #x0000000000000000))
(assert (= var210986 temp11061_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp11061_7 #x0000000000000000))
(assert (= temp11061_8 temp11061_7))
(assert (= temp11061_9 (select ARGNAME_padding_NAMEEND_VAL temp11061_8)))
(assert (= temp11061_10 #x0000000000000001))
(assert (= temp11061_11 temp11061_10))
(assert (= temp11061_12 (select ARGNAME_padding_NAMEEND_VAL temp11061_11)))
(assert (= temp11061_13 #x0000000000000002))
(assert (= temp11061_14 temp11061_13))
(assert (= temp11061_15 (select ARGNAME_padding_NAMEEND_VAL temp11061_14)))
(assert (= temp11061_16 #x0000000000000003))
(assert (= temp11061_17 temp11061_16))
(assert (= temp11061_18 (select ARGNAME_padding_NAMEEND_VAL temp11061_17)))
(assert (= temp11061_19 #x0000000000000004))
(assert (= temp11061_20 temp11061_19))
(assert (= temp11061_21 (select ARGNAME_padding_NAMEEND_VAL temp11061_20)))
(assert (= temp11061_22 #x0000000000000005))
(assert (= temp11061_23 temp11061_22))
(assert (= temp11061_24 (select ARGNAME_padding_NAMEEND_VAL temp11061_23)))
(assert (= temp11061_25 #x0000000000000000))
(assert (= temp11061_26 #x0000000000000000))
(assert (= temp11061_27 temp11061_26))
(assert (= temp11061_28 (select ARGNAME_padding_NAMEEND_VAL temp11061_27)))
(assert (= temp11061_29 #x0000000000000000))
(assert (= temp11061_30 #x0000000000000001))
(assert (= temp11061_31 temp11061_30))
(assert (= temp11061_32 (select ARGNAME_padding_NAMEEND_VAL temp11061_31)))
(assert (= temp11061_33 #x0000000000000000))
(assert (= temp11061_34 #x0000000000000002))
(assert (= temp11061_35 temp11061_34))
(assert (= temp11061_36 (select ARGNAME_padding_NAMEEND_VAL temp11061_35)))
(assert (= temp11061_37 #x0000000000000000))
(assert (= temp11061_38 #x0000000000000003))
(assert (= temp11061_39 temp11061_38))
(assert (= temp11061_40 (select ARGNAME_padding_NAMEEND_VAL temp11061_39)))
(assert (= temp11061_41 #x0000000000000000))
(assert (= temp11061_42 #x0000000000000004))
(assert (= temp11061_43 temp11061_42))
(assert (= temp11061_44 (select ARGNAME_padding_NAMEEND_VAL temp11061_43)))
(assert (= temp11061_45 #x0000000000000000))
(assert (= temp11061_46 #x0000000000000005))
(assert (= temp11061_47 temp11061_46))
(assert (= temp11061_48 (select ARGNAME_padding_NAMEEND_VAL temp11061_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp11061_28 temp11061_25)
             (bvslt temp11061_32 temp11061_29)
             (bvslt temp11061_36 temp11061_33)
             (bvslt temp11061_40 temp11061_37)
             (bvslt temp11061_44 temp11061_41)
             (bvslt temp11061_48 temp11061_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11061_49 #x0000000000000000))
(assert (= var1191714 temp11061_49))
(assert (= temp11061_50 #x0000000000000000))
(assert (= temp11061_51 temp11061_50))
(assert (= temp11061_52 (select ARGNAME_output_padding_NAMEEND_VAL temp11061_51)))
(assert (= temp11061_53 #x0000000000000001))
(assert (= temp11061_54 temp11061_53))
(assert (= temp11061_55 (select ARGNAME_output_padding_NAMEEND_VAL temp11061_54)))
(assert (= temp11061_56 #x0000000000000002))
(assert (= temp11061_57 temp11061_56))
(assert (= temp11061_58 (select ARGNAME_output_padding_NAMEEND_VAL temp11061_57)))
(assert (= temp11061_59 #x0000000000000003))
(assert (= temp11061_60 temp11061_59))
(assert (= temp11061_61 (select ARGNAME_output_padding_NAMEEND_VAL temp11061_60)))
(assert (= temp11061_62 #x0000000000000004))
(assert (= temp11061_63 temp11061_62))
(assert (= temp11061_64 (select ARGNAME_output_padding_NAMEEND_VAL temp11061_63)))
(assert (= temp11061_65 #x0000000000000005))
(assert (= temp11061_66 temp11061_65))
(assert (= temp11061_67 (select ARGNAME_output_padding_NAMEEND_VAL temp11061_66)))
(assert (= temp11061_68 #x0000000000000000))
(assert (= temp11061_69 #x0000000000000000))
(assert (= temp11061_70 temp11061_69))
(assert (= temp11061_71 (select ARGNAME_output_padding_NAMEEND_VAL temp11061_70)))
(assert (= temp11061_72 #x0000000000000000))
(assert (= temp11061_73 #x0000000000000001))
(assert (= temp11061_74 temp11061_73))
(assert (= temp11061_75 (select ARGNAME_output_padding_NAMEEND_VAL temp11061_74)))
(assert (= temp11061_76 #x0000000000000000))
(assert (= temp11061_77 #x0000000000000002))
(assert (= temp11061_78 temp11061_77))
(assert (= temp11061_79 (select ARGNAME_output_padding_NAMEEND_VAL temp11061_78)))
(assert (= temp11061_80 #x0000000000000000))
(assert (= temp11061_81 #x0000000000000003))
(assert (= temp11061_82 temp11061_81))
(assert (= temp11061_83 (select ARGNAME_output_padding_NAMEEND_VAL temp11061_82)))
(assert (= temp11061_84 #x0000000000000000))
(assert (= temp11061_85 #x0000000000000004))
(assert (= temp11061_86 temp11061_85))
(assert (= temp11061_87 (select ARGNAME_output_padding_NAMEEND_VAL temp11061_86)))
(assert (= temp11061_88 #x0000000000000000))
(assert (= temp11061_89 #x0000000000000005))
(assert (= temp11061_90 temp11061_89))
(assert (= temp11061_91 (select ARGNAME_output_padding_NAMEEND_VAL temp11061_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp11061_71 temp11061_68)
             (bvslt temp11061_75 temp11061_72)
             (bvslt temp11061_79 temp11061_76)
             (bvslt temp11061_83 temp11061_80)
             (bvslt temp11061_87 temp11061_84)
             (bvslt temp11061_91 temp11061_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11061_92 #x0000000000000000))
(assert (= var1191725 temp11061_92))
(assert (= temp11061_93 #x0000000000000000))
(assert (= temp11061_94 temp11061_93))
(assert (= temp11061_95 (select ARGNAME_stride_NAMEEND_VAL temp11061_94)))
(assert (= temp11061_96 #x0000000000000001))
(assert (= temp11061_97 temp11061_96))
(assert (= temp11061_98 (select ARGNAME_stride_NAMEEND_VAL temp11061_97)))
(assert (= temp11061_99 #x0000000000000002))
(assert (= temp11061_100 temp11061_99))
(assert (= temp11061_101 (select ARGNAME_stride_NAMEEND_VAL temp11061_100)))
(assert (= temp11061_102 #x0000000000000003))
(assert (= temp11061_103 temp11061_102))
(assert (= temp11061_104 (select ARGNAME_stride_NAMEEND_VAL temp11061_103)))
(assert (= temp11061_105 #x0000000000000004))
(assert (= temp11061_106 temp11061_105))
(assert (= temp11061_107 (select ARGNAME_stride_NAMEEND_VAL temp11061_106)))
(assert (= temp11061_108 #x0000000000000005))
(assert (= temp11061_109 temp11061_108))
(assert (= temp11061_110 (select ARGNAME_stride_NAMEEND_VAL temp11061_109)))
(assert (= temp11061_111 #x0000000000000000))
(assert (= temp11061_112 #x0000000000000000))
(assert (= temp11061_113 temp11061_112))
(assert (= temp11061_114 (select ARGNAME_stride_NAMEEND_VAL temp11061_113)))
(assert (= temp11061_115 #x0000000000000000))
(assert (= temp11061_116 #x0000000000000001))
(assert (= temp11061_117 temp11061_116))
(assert (= temp11061_118 (select ARGNAME_stride_NAMEEND_VAL temp11061_117)))
(assert (= temp11061_119 #x0000000000000000))
(assert (= temp11061_120 #x0000000000000002))
(assert (= temp11061_121 temp11061_120))
(assert (= temp11061_122 (select ARGNAME_stride_NAMEEND_VAL temp11061_121)))
(assert (= temp11061_123 #x0000000000000000))
(assert (= temp11061_124 #x0000000000000003))
(assert (= temp11061_125 temp11061_124))
(assert (= temp11061_126 (select ARGNAME_stride_NAMEEND_VAL temp11061_125)))
(assert (= temp11061_127 #x0000000000000000))
(assert (= temp11061_128 #x0000000000000004))
(assert (= temp11061_129 temp11061_128))
(assert (= temp11061_130 (select ARGNAME_stride_NAMEEND_VAL temp11061_129)))
(assert (= temp11061_131 #x0000000000000000))
(assert (= temp11061_132 #x0000000000000005))
(assert (= temp11061_133 temp11061_132))
(assert (= temp11061_134 (select ARGNAME_stride_NAMEEND_VAL temp11061_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp11061_114 temp11061_111)
             (bvsle temp11061_118 temp11061_115)
             (bvsle temp11061_122 temp11061_119)
             (bvsle temp11061_126 temp11061_123)
             (bvsle temp11061_130 temp11061_127)
             (bvsle temp11061_134 temp11061_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11061_135 #x0000000000000000))
(assert (= var1191735 temp11061_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11061_136 #x0000000000000001))
(assert (= var1191747 temp11061_136))
(assert (= temp11061_137 #x0000000000000000))
(assert (= var1179826 temp11061_137))
(assert (= temp11061_138 #x0000000000000000))
(assert (= temp11061_139 temp11061_138))
(assert (= temp11061_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11061_139)))
(assert (= temp11061_141 #x0000000000000001))
(assert (= temp11061_142 temp11061_141))
(assert (= temp11061_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11061_142)))
(assert (= temp11061_144 #x0000000000000002))
(assert (= temp11061_145 temp11061_144))
(assert (= temp11061_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11061_145)))
(assert (= temp11061_147 #x0000000000000003))
(assert (= temp11061_148 temp11061_147))
(assert (= temp11061_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11061_148)))
(assert (= temp11061_150 #x0000000000000004))
(assert (= temp11061_151 temp11061_150))
(assert (= temp11061_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11061_151)))
(assert (= temp11061_153 #x0000000000000005))
(assert (= temp11061_154 temp11061_153))
(assert (= temp11061_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11061_154)))
(assert (= temp11061_157 var1179826))
(assert (= temp11061_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11061_157)))
(assert (= temp11061_156 temp11061_158))
(assert (= var1191780
   (ite (bvslt temp11061_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11061_159 #x0000000000000000))
(assert (= var1191780 temp11061_159))
(assert (= temp11061_160 #x0000000000000000))
(assert (= var1179826 temp11061_160))
(assert (= temp11061_162 var1179826))
(assert (= temp11061_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11061_162)))
(assert (= temp11061_161 temp11061_163))
(assert (= var1191802 (bvsmod temp11061_161 ARGNAME_groups_NAMEEND)))
(assert (= temp11061_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp11061_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp11061_165 #x0000000000000001))
(assert (= var1191803 temp11061_165))
(assert (= temp11061_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp11061_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11061_167 #x0000000000000001))
(assert (= var1191823 temp11061_167))
(assert (= temp11061_168 #x0000000000000001))
(assert (= var1180714 temp11061_168))
(assert (= temp11061_169 #x0000000000000000))
(assert (= temp11061_170 temp11061_169))
(assert (= temp11061_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp11061_170)))
(assert (= temp11061_172 #x0000000000000001))
(assert (= temp11061_173 temp11061_172))
(assert (= temp11061_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp11061_173)))
(assert (= temp11061_175 #x0000000000000002))
(assert (= temp11061_176 temp11061_175))
(assert (= temp11061_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp11061_176)))
(assert (= temp11061_178 #x0000000000000003))
(assert (= temp11061_179 temp11061_178))
(assert (= temp11061_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp11061_179)))
(assert (= temp11061_181 #x0000000000000004))
(assert (= temp11061_182 temp11061_181))
(assert (= temp11061_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp11061_182)))
(assert (= temp11061_184 #x0000000000000005))
(assert (= temp11061_185 temp11061_184))
(assert (= temp11061_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp11061_185)))
(assert (= temp11061_187 #x0000000000000000))
(assert (= temp11061_188
   (ite (bvslt var1180714 temp11061_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp11061_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp11061_188)))
(assert (= var1191831 temp11061_189))
(assert (bvslt (ite (bvslt var1180714 temp11061_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11061_190 #x0000000000000001))
(assert (= var1180714 temp11061_190))
(assert (= temp11061_192 var1180714))
(assert (= temp11061_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11061_192)))
(assert (= temp11061_191 temp11061_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp11061_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp11061_194 #x0000000000000001))
(assert (= var1191836 temp11061_194))
(assert (= temp11061_195 #x0000000000000000))
(assert (= var1179826 temp11061_195))
(assert (= temp11061_197 var1179826))
(assert (= temp11061_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11061_197)))
(assert (= temp11061_196 temp11061_198))
(assert (= temp11061_199 #x0000000000000002))
(assert (= var1586025 temp11061_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp11061_200 #x0000000000000001))
(assert (= var1191993 temp11061_200))
(assert (= temp11061_201 #x0000000000000001))
(assert (= var2700303 temp11061_201))
(assert (= temp11061_202 #x0000000000000001))
(assert (= var2962447 temp11061_202))
(assert (= temp11061_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp11061_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11061_204 #x0000000000000001))
(assert (= var211058 temp11061_204))
(assert (= temp11061_205 #x0000000000000001))
(assert (= var211188 temp11061_205))
(assert (= var3879401 var211188))
(assert (= temp11061_206 #x0000000000000000))
(assert (= var3866802 temp11061_206))
(assert (= temp11061_207 #x0000000000000000))
(assert (= temp11061_208
   (ite (bvslt var3866802 temp11061_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp11061_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp11061_208)))
(assert (= var3879420 temp11061_209))
(assert (bvslt (ite (bvslt var3866802 temp11061_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11061_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp11061_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp11061_211 #x0000000000000000))
(assert (= var3879421 temp11061_211))
(assert (= temp11061_212 #x0000000000000001))
(assert (= var3867690 temp11061_212))
(assert (= temp11061_213 #x0000000000000000))
(assert (= temp11061_214
   (ite (bvslt var3867690 temp11061_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp11061_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp11061_214)))
(assert (= var3879423 temp11061_215))
(assert (bvslt (ite (bvslt var3867690 temp11061_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11061_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp11061_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp11061_217 #x0000000000000001))
(assert (= var3879424 temp11061_217))
(assert (= temp11061_218 #x0000000000000000))
(assert (= var4133117 temp11061_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp11061_219 #x0000000000000002))
(assert (= var4339331 temp11061_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11061_220 #x0000000000000000))
(assert (= var4404892 temp11061_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var4600208 var211201))
(assert (= var4862352 var211201))
(assert (= temp11061_221 #x0000000000000001))
(assert (= var212414
   (ite (= ARGNAME_groups_NAMEEND temp11061_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11061_222 #x0000000000000000))
(assert (= var212414 temp11061_222))
(assert (= temp11061_223 #x0000000000000002))
(assert (= var5191299 temp11061_223))
(assert (= var5256844 var5191299))
(assert (= temp11061_224 #x0000000000000001))
(assert (= var211058 temp11061_224))
(model-add temp11061_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp11061_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp11061_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp11061_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






