(declare-fun temp10937_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10937_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10937_3 () (_ BitVec 64))
(declare-fun temp10937_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10937_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10937_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10937_7 () (_ BitVec 64))
(declare-fun temp10937_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10937_9 () (_ BitVec 64))
(declare-fun temp10937_10 () (_ BitVec 64))
(declare-fun temp10937_11 () (_ BitVec 64))
(declare-fun temp10937_12 () (_ BitVec 64))
(declare-fun temp10937_13 () (_ BitVec 64))
(declare-fun temp10937_14 () (_ BitVec 64))
(declare-fun temp10937_15 () (_ BitVec 64))
(declare-fun temp10937_16 () (_ BitVec 64))
(declare-fun temp10937_17 () (_ BitVec 64))
(declare-fun temp10937_18 () (_ BitVec 64))
(declare-fun temp10937_19 () (_ BitVec 64))
(declare-fun temp10937_20 () (_ BitVec 64))
(declare-fun temp10937_21 () (_ BitVec 64))
(declare-fun temp10937_22 () (_ BitVec 64))
(declare-fun temp10937_23 () (_ BitVec 64))
(declare-fun temp10937_24 () (_ BitVec 64))
(declare-fun temp10937_25 () (_ BitVec 64))
(declare-fun temp10937_26 () (_ BitVec 64))
(declare-fun temp10937_27 () (_ BitVec 64))
(declare-fun temp10937_28 () (_ BitVec 64))
(declare-fun temp10937_29 () (_ BitVec 64))
(declare-fun temp10937_30 () (_ BitVec 64))
(declare-fun temp10937_31 () (_ BitVec 64))
(declare-fun temp10937_32 () (_ BitVec 64))
(declare-fun temp10937_33 () (_ BitVec 64))
(declare-fun temp10937_34 () (_ BitVec 64))
(declare-fun temp10937_35 () (_ BitVec 64))
(declare-fun temp10937_36 () (_ BitVec 64))
(declare-fun temp10937_37 () (_ BitVec 64))
(declare-fun temp10937_38 () (_ BitVec 64))
(declare-fun temp10937_39 () (_ BitVec 64))
(declare-fun temp10937_40 () (_ BitVec 64))
(declare-fun temp10937_41 () (_ BitVec 64))
(declare-fun temp10937_42 () (_ BitVec 64))
(declare-fun temp10937_43 () (_ BitVec 64))
(declare-fun temp10937_44 () (_ BitVec 64))
(declare-fun temp10937_45 () (_ BitVec 64))
(declare-fun temp10937_46 () (_ BitVec 64))
(declare-fun temp10937_47 () (_ BitVec 64))
(declare-fun temp10937_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10937_49 () (_ BitVec 64))
(declare-fun temp10937_50 () (_ BitVec 64))
(declare-fun temp10937_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10937_52 () (_ BitVec 64))
(declare-fun temp10937_53 () (_ BitVec 64))
(declare-fun temp10937_54 () (_ BitVec 64))
(declare-fun temp10937_55 () (_ BitVec 64))
(declare-fun temp10937_56 () (_ BitVec 64))
(declare-fun temp10937_57 () (_ BitVec 64))
(declare-fun temp10937_58 () (_ BitVec 64))
(declare-fun temp10937_59 () (_ BitVec 64))
(declare-fun temp10937_60 () (_ BitVec 64))
(declare-fun temp10937_61 () (_ BitVec 64))
(declare-fun temp10937_62 () (_ BitVec 64))
(declare-fun temp10937_63 () (_ BitVec 64))
(declare-fun temp10937_64 () (_ BitVec 64))
(declare-fun temp10937_65 () (_ BitVec 64))
(declare-fun temp10937_66 () (_ BitVec 64))
(declare-fun temp10937_67 () (_ BitVec 64))
(declare-fun temp10937_68 () (_ BitVec 64))
(declare-fun temp10937_69 () (_ BitVec 64))
(declare-fun temp10937_70 () (_ BitVec 64))
(declare-fun temp10937_71 () (_ BitVec 64))
(declare-fun temp10937_72 () (_ BitVec 64))
(declare-fun temp10937_73 () (_ BitVec 64))
(declare-fun temp10937_74 () (_ BitVec 64))
(declare-fun temp10937_75 () (_ BitVec 64))
(declare-fun temp10937_76 () (_ BitVec 64))
(declare-fun temp10937_77 () (_ BitVec 64))
(declare-fun temp10937_78 () (_ BitVec 64))
(declare-fun temp10937_79 () (_ BitVec 64))
(declare-fun temp10937_80 () (_ BitVec 64))
(declare-fun temp10937_81 () (_ BitVec 64))
(declare-fun temp10937_82 () (_ BitVec 64))
(declare-fun temp10937_83 () (_ BitVec 64))
(declare-fun temp10937_84 () (_ BitVec 64))
(declare-fun temp10937_85 () (_ BitVec 64))
(declare-fun temp10937_86 () (_ BitVec 64))
(declare-fun temp10937_87 () (_ BitVec 64))
(declare-fun temp10937_88 () (_ BitVec 64))
(declare-fun temp10937_89 () (_ BitVec 64))
(declare-fun temp10937_90 () (_ BitVec 64))
(declare-fun temp10937_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10937_92 () (_ BitVec 64))
(declare-fun temp10937_93 () (_ BitVec 64))
(declare-fun temp10937_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10937_95 () (_ BitVec 64))
(declare-fun temp10937_96 () (_ BitVec 64))
(declare-fun temp10937_97 () (_ BitVec 64))
(declare-fun temp10937_98 () (_ BitVec 64))
(declare-fun temp10937_99 () (_ BitVec 64))
(declare-fun temp10937_100 () (_ BitVec 64))
(declare-fun temp10937_101 () (_ BitVec 64))
(declare-fun temp10937_102 () (_ BitVec 64))
(declare-fun temp10937_103 () (_ BitVec 64))
(declare-fun temp10937_104 () (_ BitVec 64))
(declare-fun temp10937_105 () (_ BitVec 64))
(declare-fun temp10937_106 () (_ BitVec 64))
(declare-fun temp10937_107 () (_ BitVec 64))
(declare-fun temp10937_108 () (_ BitVec 64))
(declare-fun temp10937_109 () (_ BitVec 64))
(declare-fun temp10937_110 () (_ BitVec 64))
(declare-fun temp10937_111 () (_ BitVec 64))
(declare-fun temp10937_112 () (_ BitVec 64))
(declare-fun temp10937_113 () (_ BitVec 64))
(declare-fun temp10937_114 () (_ BitVec 64))
(declare-fun temp10937_115 () (_ BitVec 64))
(declare-fun temp10937_116 () (_ BitVec 64))
(declare-fun temp10937_117 () (_ BitVec 64))
(declare-fun temp10937_118 () (_ BitVec 64))
(declare-fun temp10937_119 () (_ BitVec 64))
(declare-fun temp10937_120 () (_ BitVec 64))
(declare-fun temp10937_121 () (_ BitVec 64))
(declare-fun temp10937_122 () (_ BitVec 64))
(declare-fun temp10937_123 () (_ BitVec 64))
(declare-fun temp10937_124 () (_ BitVec 64))
(declare-fun temp10937_125 () (_ BitVec 64))
(declare-fun temp10937_126 () (_ BitVec 64))
(declare-fun temp10937_127 () (_ BitVec 64))
(declare-fun temp10937_128 () (_ BitVec 64))
(declare-fun temp10937_129 () (_ BitVec 64))
(declare-fun temp10937_130 () (_ BitVec 64))
(declare-fun temp10937_131 () (_ BitVec 64))
(declare-fun temp10937_132 () (_ BitVec 64))
(declare-fun temp10937_133 () (_ BitVec 64))
(declare-fun temp10937_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10937_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10937_136 () (_ BitVec 64))
(declare-fun temp10937_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10937_138 () (_ BitVec 64))
(declare-fun temp10937_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10937_140 () (_ BitVec 64))
(declare-fun temp10937_141 () (_ BitVec 64))
(declare-fun temp10937_142 () (_ BitVec 64))
(declare-fun temp10937_143 () (_ BitVec 64))
(declare-fun temp10937_144 () (_ BitVec 64))
(declare-fun temp10937_145 () (_ BitVec 64))
(declare-fun temp10937_146 () (_ BitVec 64))
(declare-fun temp10937_147 () (_ BitVec 64))
(declare-fun temp10937_148 () (_ BitVec 64))
(declare-fun temp10937_149 () (_ BitVec 64))
(declare-fun temp10937_150 () (_ BitVec 64))
(declare-fun temp10937_151 () (_ BitVec 64))
(declare-fun temp10937_152 () (_ BitVec 64))
(declare-fun temp10937_153 () (_ BitVec 64))
(declare-fun temp10937_154 () (_ BitVec 64))
(declare-fun temp10937_155 () (_ BitVec 64))
(declare-fun temp10937_157 () (_ BitVec 64))
(declare-fun temp10937_158 () (_ BitVec 64))
(declare-fun temp10937_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10937_159 () (_ BitVec 64))
(declare-fun temp10937_160 () (_ BitVec 64))
(declare-fun temp10937_162 () (_ BitVec 64))
(declare-fun temp10937_163 () (_ BitVec 64))
(declare-fun temp10937_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10937_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10937_165 () (_ BitVec 64))
(declare-fun temp10937_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10937_167 () (_ BitVec 64))
(declare-fun temp10937_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10937_169 () (_ BitVec 64))
(declare-fun temp10937_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10937_171 () (_ BitVec 64))
(declare-fun temp10937_172 () (_ BitVec 64))
(declare-fun temp10937_173 () (_ BitVec 64))
(declare-fun temp10937_174 () (_ BitVec 64))
(declare-fun temp10937_175 () (_ BitVec 64))
(declare-fun temp10937_176 () (_ BitVec 64))
(declare-fun temp10937_177 () (_ BitVec 64))
(declare-fun temp10937_178 () (_ BitVec 64))
(declare-fun temp10937_179 () (_ BitVec 64))
(declare-fun temp10937_180 () (_ BitVec 64))
(declare-fun temp10937_181 () (_ BitVec 64))
(declare-fun temp10937_182 () (_ BitVec 64))
(declare-fun temp10937_183 () (_ BitVec 64))
(declare-fun temp10937_184 () (_ BitVec 64))
(declare-fun temp10937_185 () (_ BitVec 64))
(declare-fun temp10937_186 () (_ BitVec 64))
(declare-fun temp10937_187 () (_ BitVec 64))
(declare-fun temp10937_188 () (_ BitVec 64))
(declare-fun temp10937_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10937_190 () (_ BitVec 64))
(declare-fun temp10937_192 () (_ BitVec 64))
(declare-fun temp10937_193 () (_ BitVec 64))
(declare-fun temp10937_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10937_194 () (_ BitVec 64))
(declare-fun temp10937_195 () (_ BitVec 64))
(declare-fun temp10937_197 () (_ BitVec 64))
(declare-fun temp10937_198 () (_ BitVec 64))
(declare-fun temp10937_196 () (_ BitVec 64))
(declare-fun temp10937_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10937_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10937_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10937_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10937_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10937_204 () (_ BitVec 64))
(declare-fun temp10937_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10937_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10937_207 () (_ BitVec 64))
(declare-fun temp10937_208 () (_ BitVec 64))
(declare-fun temp10937_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10937_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10937_211 () (_ BitVec 64))
(declare-fun temp10937_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10937_213 () (_ BitVec 64))
(declare-fun temp10937_214 () (_ BitVec 64))
(declare-fun temp10937_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10937_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10937_217 () (_ BitVec 64))
(declare-fun temp10937_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10937_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10937_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp10937_221 () (_ BitVec 64))
(assert (= temp10937_1 #x0000000000000001))
(assert (= var77203 temp10937_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10937_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10937_2)))
(assert (= temp10937_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10937_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10937_4 #x0000000000000000))
(assert (= var210941 temp10937_4))
(assert (= temp10937_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10937_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10937_6 #x0000000000000000))
(assert (= var210986 temp10937_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10937_7 #x0000000000000000))
(assert (= temp10937_8 temp10937_7))
(assert (= temp10937_9 (select ARGNAME_padding_NAMEEND_VAL temp10937_8)))
(assert (= temp10937_10 #x0000000000000001))
(assert (= temp10937_11 temp10937_10))
(assert (= temp10937_12 (select ARGNAME_padding_NAMEEND_VAL temp10937_11)))
(assert (= temp10937_13 #x0000000000000002))
(assert (= temp10937_14 temp10937_13))
(assert (= temp10937_15 (select ARGNAME_padding_NAMEEND_VAL temp10937_14)))
(assert (= temp10937_16 #x0000000000000003))
(assert (= temp10937_17 temp10937_16))
(assert (= temp10937_18 (select ARGNAME_padding_NAMEEND_VAL temp10937_17)))
(assert (= temp10937_19 #x0000000000000004))
(assert (= temp10937_20 temp10937_19))
(assert (= temp10937_21 (select ARGNAME_padding_NAMEEND_VAL temp10937_20)))
(assert (= temp10937_22 #x0000000000000005))
(assert (= temp10937_23 temp10937_22))
(assert (= temp10937_24 (select ARGNAME_padding_NAMEEND_VAL temp10937_23)))
(assert (= temp10937_25 #x0000000000000000))
(assert (= temp10937_26 #x0000000000000000))
(assert (= temp10937_27 temp10937_26))
(assert (= temp10937_28 (select ARGNAME_padding_NAMEEND_VAL temp10937_27)))
(assert (= temp10937_29 #x0000000000000000))
(assert (= temp10937_30 #x0000000000000001))
(assert (= temp10937_31 temp10937_30))
(assert (= temp10937_32 (select ARGNAME_padding_NAMEEND_VAL temp10937_31)))
(assert (= temp10937_33 #x0000000000000000))
(assert (= temp10937_34 #x0000000000000002))
(assert (= temp10937_35 temp10937_34))
(assert (= temp10937_36 (select ARGNAME_padding_NAMEEND_VAL temp10937_35)))
(assert (= temp10937_37 #x0000000000000000))
(assert (= temp10937_38 #x0000000000000003))
(assert (= temp10937_39 temp10937_38))
(assert (= temp10937_40 (select ARGNAME_padding_NAMEEND_VAL temp10937_39)))
(assert (= temp10937_41 #x0000000000000000))
(assert (= temp10937_42 #x0000000000000004))
(assert (= temp10937_43 temp10937_42))
(assert (= temp10937_44 (select ARGNAME_padding_NAMEEND_VAL temp10937_43)))
(assert (= temp10937_45 #x0000000000000000))
(assert (= temp10937_46 #x0000000000000005))
(assert (= temp10937_47 temp10937_46))
(assert (= temp10937_48 (select ARGNAME_padding_NAMEEND_VAL temp10937_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10937_28 temp10937_25)
             (bvslt temp10937_32 temp10937_29)
             (bvslt temp10937_36 temp10937_33)
             (bvslt temp10937_40 temp10937_37)
             (bvslt temp10937_44 temp10937_41)
             (bvslt temp10937_48 temp10937_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10937_49 #x0000000000000000))
(assert (= var1191714 temp10937_49))
(assert (= temp10937_50 #x0000000000000000))
(assert (= temp10937_51 temp10937_50))
(assert (= temp10937_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10937_51)))
(assert (= temp10937_53 #x0000000000000001))
(assert (= temp10937_54 temp10937_53))
(assert (= temp10937_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10937_54)))
(assert (= temp10937_56 #x0000000000000002))
(assert (= temp10937_57 temp10937_56))
(assert (= temp10937_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10937_57)))
(assert (= temp10937_59 #x0000000000000003))
(assert (= temp10937_60 temp10937_59))
(assert (= temp10937_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10937_60)))
(assert (= temp10937_62 #x0000000000000004))
(assert (= temp10937_63 temp10937_62))
(assert (= temp10937_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10937_63)))
(assert (= temp10937_65 #x0000000000000005))
(assert (= temp10937_66 temp10937_65))
(assert (= temp10937_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10937_66)))
(assert (= temp10937_68 #x0000000000000000))
(assert (= temp10937_69 #x0000000000000000))
(assert (= temp10937_70 temp10937_69))
(assert (= temp10937_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10937_70)))
(assert (= temp10937_72 #x0000000000000000))
(assert (= temp10937_73 #x0000000000000001))
(assert (= temp10937_74 temp10937_73))
(assert (= temp10937_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10937_74)))
(assert (= temp10937_76 #x0000000000000000))
(assert (= temp10937_77 #x0000000000000002))
(assert (= temp10937_78 temp10937_77))
(assert (= temp10937_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10937_78)))
(assert (= temp10937_80 #x0000000000000000))
(assert (= temp10937_81 #x0000000000000003))
(assert (= temp10937_82 temp10937_81))
(assert (= temp10937_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10937_82)))
(assert (= temp10937_84 #x0000000000000000))
(assert (= temp10937_85 #x0000000000000004))
(assert (= temp10937_86 temp10937_85))
(assert (= temp10937_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10937_86)))
(assert (= temp10937_88 #x0000000000000000))
(assert (= temp10937_89 #x0000000000000005))
(assert (= temp10937_90 temp10937_89))
(assert (= temp10937_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10937_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10937_71 temp10937_68)
             (bvslt temp10937_75 temp10937_72)
             (bvslt temp10937_79 temp10937_76)
             (bvslt temp10937_83 temp10937_80)
             (bvslt temp10937_87 temp10937_84)
             (bvslt temp10937_91 temp10937_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10937_92 #x0000000000000000))
(assert (= var1191725 temp10937_92))
(assert (= temp10937_93 #x0000000000000000))
(assert (= temp10937_94 temp10937_93))
(assert (= temp10937_95 (select ARGNAME_stride_NAMEEND_VAL temp10937_94)))
(assert (= temp10937_96 #x0000000000000001))
(assert (= temp10937_97 temp10937_96))
(assert (= temp10937_98 (select ARGNAME_stride_NAMEEND_VAL temp10937_97)))
(assert (= temp10937_99 #x0000000000000002))
(assert (= temp10937_100 temp10937_99))
(assert (= temp10937_101 (select ARGNAME_stride_NAMEEND_VAL temp10937_100)))
(assert (= temp10937_102 #x0000000000000003))
(assert (= temp10937_103 temp10937_102))
(assert (= temp10937_104 (select ARGNAME_stride_NAMEEND_VAL temp10937_103)))
(assert (= temp10937_105 #x0000000000000004))
(assert (= temp10937_106 temp10937_105))
(assert (= temp10937_107 (select ARGNAME_stride_NAMEEND_VAL temp10937_106)))
(assert (= temp10937_108 #x0000000000000005))
(assert (= temp10937_109 temp10937_108))
(assert (= temp10937_110 (select ARGNAME_stride_NAMEEND_VAL temp10937_109)))
(assert (= temp10937_111 #x0000000000000000))
(assert (= temp10937_112 #x0000000000000000))
(assert (= temp10937_113 temp10937_112))
(assert (= temp10937_114 (select ARGNAME_stride_NAMEEND_VAL temp10937_113)))
(assert (= temp10937_115 #x0000000000000000))
(assert (= temp10937_116 #x0000000000000001))
(assert (= temp10937_117 temp10937_116))
(assert (= temp10937_118 (select ARGNAME_stride_NAMEEND_VAL temp10937_117)))
(assert (= temp10937_119 #x0000000000000000))
(assert (= temp10937_120 #x0000000000000002))
(assert (= temp10937_121 temp10937_120))
(assert (= temp10937_122 (select ARGNAME_stride_NAMEEND_VAL temp10937_121)))
(assert (= temp10937_123 #x0000000000000000))
(assert (= temp10937_124 #x0000000000000003))
(assert (= temp10937_125 temp10937_124))
(assert (= temp10937_126 (select ARGNAME_stride_NAMEEND_VAL temp10937_125)))
(assert (= temp10937_127 #x0000000000000000))
(assert (= temp10937_128 #x0000000000000004))
(assert (= temp10937_129 temp10937_128))
(assert (= temp10937_130 (select ARGNAME_stride_NAMEEND_VAL temp10937_129)))
(assert (= temp10937_131 #x0000000000000000))
(assert (= temp10937_132 #x0000000000000005))
(assert (= temp10937_133 temp10937_132))
(assert (= temp10937_134 (select ARGNAME_stride_NAMEEND_VAL temp10937_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10937_114 temp10937_111)
             (bvsle temp10937_118 temp10937_115)
             (bvsle temp10937_122 temp10937_119)
             (bvsle temp10937_126 temp10937_123)
             (bvsle temp10937_130 temp10937_127)
             (bvsle temp10937_134 temp10937_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10937_135 #x0000000000000000))
(assert (= var1191735 temp10937_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10937_136 #x0000000000000001))
(assert (= var1191747 temp10937_136))
(assert (= temp10937_137 #x0000000000000000))
(assert (= var1179826 temp10937_137))
(assert (= temp10937_138 #x0000000000000000))
(assert (= temp10937_139 temp10937_138))
(assert (= temp10937_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10937_139)))
(assert (= temp10937_141 #x0000000000000001))
(assert (= temp10937_142 temp10937_141))
(assert (= temp10937_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10937_142)))
(assert (= temp10937_144 #x0000000000000002))
(assert (= temp10937_145 temp10937_144))
(assert (= temp10937_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10937_145)))
(assert (= temp10937_147 #x0000000000000003))
(assert (= temp10937_148 temp10937_147))
(assert (= temp10937_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10937_148)))
(assert (= temp10937_150 #x0000000000000004))
(assert (= temp10937_151 temp10937_150))
(assert (= temp10937_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10937_151)))
(assert (= temp10937_153 #x0000000000000005))
(assert (= temp10937_154 temp10937_153))
(assert (= temp10937_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10937_154)))
(assert (= temp10937_157 var1179826))
(assert (= temp10937_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10937_157)))
(assert (= temp10937_156 temp10937_158))
(assert (= var1191780
   (ite (bvslt temp10937_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10937_159 #x0000000000000000))
(assert (= var1191780 temp10937_159))
(assert (= temp10937_160 #x0000000000000000))
(assert (= var1179826 temp10937_160))
(assert (= temp10937_162 var1179826))
(assert (= temp10937_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10937_162)))
(assert (= temp10937_161 temp10937_163))
(assert (= var1191802 (bvsmod temp10937_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10937_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10937_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10937_165 #x0000000000000001))
(assert (= var1191803 temp10937_165))
(assert (= temp10937_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10937_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10937_167 #x0000000000000001))
(assert (= var1191823 temp10937_167))
(assert (= temp10937_168 #x0000000000000001))
(assert (= var1180714 temp10937_168))
(assert (= temp10937_169 #x0000000000000000))
(assert (= temp10937_170 temp10937_169))
(assert (= temp10937_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10937_170)))
(assert (= temp10937_172 #x0000000000000001))
(assert (= temp10937_173 temp10937_172))
(assert (= temp10937_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10937_173)))
(assert (= temp10937_175 #x0000000000000002))
(assert (= temp10937_176 temp10937_175))
(assert (= temp10937_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10937_176)))
(assert (= temp10937_178 #x0000000000000003))
(assert (= temp10937_179 temp10937_178))
(assert (= temp10937_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10937_179)))
(assert (= temp10937_181 #x0000000000000004))
(assert (= temp10937_182 temp10937_181))
(assert (= temp10937_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10937_182)))
(assert (= temp10937_184 #x0000000000000005))
(assert (= temp10937_185 temp10937_184))
(assert (= temp10937_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10937_185)))
(assert (= temp10937_187 #x0000000000000000))
(assert (= temp10937_188
   (ite (bvslt var1180714 temp10937_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10937_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10937_188)))
(assert (= var1191831 temp10937_189))
(assert (bvslt (ite (bvslt var1180714 temp10937_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10937_190 #x0000000000000001))
(assert (= var1180714 temp10937_190))
(assert (= temp10937_192 var1180714))
(assert (= temp10937_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10937_192)))
(assert (= temp10937_191 temp10937_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10937_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10937_194 #x0000000000000001))
(assert (= var1191836 temp10937_194))
(assert (= temp10937_195 #x0000000000000000))
(assert (= var1179826 temp10937_195))
(assert (= temp10937_197 var1179826))
(assert (= temp10937_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10937_197)))
(assert (= temp10937_196 temp10937_198))
(assert (= temp10937_199 #x0000000000000002))
(assert (= var1586025 temp10937_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10937_200 #x0000000000000001))
(assert (= var1191993 temp10937_200))
(assert (= temp10937_201 #x0000000000000001))
(assert (= var2700303 temp10937_201))
(assert (= temp10937_202 #x0000000000000001))
(assert (= var2962447 temp10937_202))
(assert (= temp10937_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10937_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10937_204 #x0000000000000001))
(assert (= var211058 temp10937_204))
(assert (= temp10937_205 #x0000000000000001))
(assert (= var211188 temp10937_205))
(assert (= var3879401 var211188))
(assert (= temp10937_206 #x0000000000000000))
(assert (= var3866802 temp10937_206))
(assert (= temp10937_207 #x0000000000000000))
(assert (= temp10937_208
   (ite (bvslt var3866802 temp10937_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10937_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10937_208)))
(assert (= var3879420 temp10937_209))
(assert (bvslt (ite (bvslt var3866802 temp10937_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10937_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10937_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10937_211 #x0000000000000000))
(assert (= var3879421 temp10937_211))
(assert (= temp10937_212 #x0000000000000001))
(assert (= var3867690 temp10937_212))
(assert (= temp10937_213 #x0000000000000000))
(assert (= temp10937_214
   (ite (bvslt var3867690 temp10937_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10937_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10937_214)))
(assert (= var3879423 temp10937_215))
(assert (bvslt (ite (bvslt var3867690 temp10937_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10937_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10937_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10937_217 #x0000000000000001))
(assert (= var3879424 temp10937_217))
(assert (= temp10937_218 #x0000000000000000))
(assert (= var4133117 temp10937_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10937_219 #x0000000000000002))
(assert (= var4339331 temp10937_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10937_220 #x0000000000000000))
(assert (= var4404892 temp10937_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp10937_221 #x0000000000000001))
(assert (= var211058 temp10937_221))
(model-add temp10937_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10937_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10937_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10937_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





