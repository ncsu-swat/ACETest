(declare-fun temp10874_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10874_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10874_3 () (_ BitVec 64))
(declare-fun temp10874_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10874_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10874_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10874_7 () (_ BitVec 64))
(declare-fun temp10874_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10874_9 () (_ BitVec 64))
(declare-fun temp10874_10 () (_ BitVec 64))
(declare-fun temp10874_11 () (_ BitVec 64))
(declare-fun temp10874_12 () (_ BitVec 64))
(declare-fun temp10874_13 () (_ BitVec 64))
(declare-fun temp10874_14 () (_ BitVec 64))
(declare-fun temp10874_15 () (_ BitVec 64))
(declare-fun temp10874_16 () (_ BitVec 64))
(declare-fun temp10874_17 () (_ BitVec 64))
(declare-fun temp10874_18 () (_ BitVec 64))
(declare-fun temp10874_19 () (_ BitVec 64))
(declare-fun temp10874_20 () (_ BitVec 64))
(declare-fun temp10874_21 () (_ BitVec 64))
(declare-fun temp10874_22 () (_ BitVec 64))
(declare-fun temp10874_23 () (_ BitVec 64))
(declare-fun temp10874_24 () (_ BitVec 64))
(declare-fun temp10874_25 () (_ BitVec 64))
(declare-fun temp10874_26 () (_ BitVec 64))
(declare-fun temp10874_27 () (_ BitVec 64))
(declare-fun temp10874_28 () (_ BitVec 64))
(declare-fun temp10874_29 () (_ BitVec 64))
(declare-fun temp10874_30 () (_ BitVec 64))
(declare-fun temp10874_31 () (_ BitVec 64))
(declare-fun temp10874_32 () (_ BitVec 64))
(declare-fun temp10874_33 () (_ BitVec 64))
(declare-fun temp10874_34 () (_ BitVec 64))
(declare-fun temp10874_35 () (_ BitVec 64))
(declare-fun temp10874_36 () (_ BitVec 64))
(declare-fun temp10874_37 () (_ BitVec 64))
(declare-fun temp10874_38 () (_ BitVec 64))
(declare-fun temp10874_39 () (_ BitVec 64))
(declare-fun temp10874_40 () (_ BitVec 64))
(declare-fun temp10874_41 () (_ BitVec 64))
(declare-fun temp10874_42 () (_ BitVec 64))
(declare-fun temp10874_43 () (_ BitVec 64))
(declare-fun temp10874_44 () (_ BitVec 64))
(declare-fun temp10874_45 () (_ BitVec 64))
(declare-fun temp10874_46 () (_ BitVec 64))
(declare-fun temp10874_47 () (_ BitVec 64))
(declare-fun temp10874_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10874_49 () (_ BitVec 64))
(declare-fun temp10874_50 () (_ BitVec 64))
(declare-fun temp10874_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10874_52 () (_ BitVec 64))
(declare-fun temp10874_53 () (_ BitVec 64))
(declare-fun temp10874_54 () (_ BitVec 64))
(declare-fun temp10874_55 () (_ BitVec 64))
(declare-fun temp10874_56 () (_ BitVec 64))
(declare-fun temp10874_57 () (_ BitVec 64))
(declare-fun temp10874_58 () (_ BitVec 64))
(declare-fun temp10874_59 () (_ BitVec 64))
(declare-fun temp10874_60 () (_ BitVec 64))
(declare-fun temp10874_61 () (_ BitVec 64))
(declare-fun temp10874_62 () (_ BitVec 64))
(declare-fun temp10874_63 () (_ BitVec 64))
(declare-fun temp10874_64 () (_ BitVec 64))
(declare-fun temp10874_65 () (_ BitVec 64))
(declare-fun temp10874_66 () (_ BitVec 64))
(declare-fun temp10874_67 () (_ BitVec 64))
(declare-fun temp10874_68 () (_ BitVec 64))
(declare-fun temp10874_69 () (_ BitVec 64))
(declare-fun temp10874_70 () (_ BitVec 64))
(declare-fun temp10874_71 () (_ BitVec 64))
(declare-fun temp10874_72 () (_ BitVec 64))
(declare-fun temp10874_73 () (_ BitVec 64))
(declare-fun temp10874_74 () (_ BitVec 64))
(declare-fun temp10874_75 () (_ BitVec 64))
(declare-fun temp10874_76 () (_ BitVec 64))
(declare-fun temp10874_77 () (_ BitVec 64))
(declare-fun temp10874_78 () (_ BitVec 64))
(declare-fun temp10874_79 () (_ BitVec 64))
(declare-fun temp10874_80 () (_ BitVec 64))
(declare-fun temp10874_81 () (_ BitVec 64))
(declare-fun temp10874_82 () (_ BitVec 64))
(declare-fun temp10874_83 () (_ BitVec 64))
(declare-fun temp10874_84 () (_ BitVec 64))
(declare-fun temp10874_85 () (_ BitVec 64))
(declare-fun temp10874_86 () (_ BitVec 64))
(declare-fun temp10874_87 () (_ BitVec 64))
(declare-fun temp10874_88 () (_ BitVec 64))
(declare-fun temp10874_89 () (_ BitVec 64))
(declare-fun temp10874_90 () (_ BitVec 64))
(declare-fun temp10874_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10874_92 () (_ BitVec 64))
(declare-fun temp10874_93 () (_ BitVec 64))
(declare-fun temp10874_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10874_95 () (_ BitVec 64))
(declare-fun temp10874_96 () (_ BitVec 64))
(declare-fun temp10874_97 () (_ BitVec 64))
(declare-fun temp10874_98 () (_ BitVec 64))
(declare-fun temp10874_99 () (_ BitVec 64))
(declare-fun temp10874_100 () (_ BitVec 64))
(declare-fun temp10874_101 () (_ BitVec 64))
(declare-fun temp10874_102 () (_ BitVec 64))
(declare-fun temp10874_103 () (_ BitVec 64))
(declare-fun temp10874_104 () (_ BitVec 64))
(declare-fun temp10874_105 () (_ BitVec 64))
(declare-fun temp10874_106 () (_ BitVec 64))
(declare-fun temp10874_107 () (_ BitVec 64))
(declare-fun temp10874_108 () (_ BitVec 64))
(declare-fun temp10874_109 () (_ BitVec 64))
(declare-fun temp10874_110 () (_ BitVec 64))
(declare-fun temp10874_111 () (_ BitVec 64))
(declare-fun temp10874_112 () (_ BitVec 64))
(declare-fun temp10874_113 () (_ BitVec 64))
(declare-fun temp10874_114 () (_ BitVec 64))
(declare-fun temp10874_115 () (_ BitVec 64))
(declare-fun temp10874_116 () (_ BitVec 64))
(declare-fun temp10874_117 () (_ BitVec 64))
(declare-fun temp10874_118 () (_ BitVec 64))
(declare-fun temp10874_119 () (_ BitVec 64))
(declare-fun temp10874_120 () (_ BitVec 64))
(declare-fun temp10874_121 () (_ BitVec 64))
(declare-fun temp10874_122 () (_ BitVec 64))
(declare-fun temp10874_123 () (_ BitVec 64))
(declare-fun temp10874_124 () (_ BitVec 64))
(declare-fun temp10874_125 () (_ BitVec 64))
(declare-fun temp10874_126 () (_ BitVec 64))
(declare-fun temp10874_127 () (_ BitVec 64))
(declare-fun temp10874_128 () (_ BitVec 64))
(declare-fun temp10874_129 () (_ BitVec 64))
(declare-fun temp10874_130 () (_ BitVec 64))
(declare-fun temp10874_131 () (_ BitVec 64))
(declare-fun temp10874_132 () (_ BitVec 64))
(declare-fun temp10874_133 () (_ BitVec 64))
(declare-fun temp10874_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10874_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10874_136 () (_ BitVec 64))
(declare-fun temp10874_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10874_138 () (_ BitVec 64))
(declare-fun temp10874_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10874_140 () (_ BitVec 64))
(declare-fun temp10874_141 () (_ BitVec 64))
(declare-fun temp10874_142 () (_ BitVec 64))
(declare-fun temp10874_143 () (_ BitVec 64))
(declare-fun temp10874_144 () (_ BitVec 64))
(declare-fun temp10874_145 () (_ BitVec 64))
(declare-fun temp10874_146 () (_ BitVec 64))
(declare-fun temp10874_147 () (_ BitVec 64))
(declare-fun temp10874_148 () (_ BitVec 64))
(declare-fun temp10874_149 () (_ BitVec 64))
(declare-fun temp10874_150 () (_ BitVec 64))
(declare-fun temp10874_151 () (_ BitVec 64))
(declare-fun temp10874_152 () (_ BitVec 64))
(declare-fun temp10874_153 () (_ BitVec 64))
(declare-fun temp10874_154 () (_ BitVec 64))
(declare-fun temp10874_155 () (_ BitVec 64))
(declare-fun temp10874_157 () (_ BitVec 64))
(declare-fun temp10874_158 () (_ BitVec 64))
(declare-fun temp10874_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10874_159 () (_ BitVec 64))
(declare-fun temp10874_160 () (_ BitVec 64))
(declare-fun temp10874_162 () (_ BitVec 64))
(declare-fun temp10874_163 () (_ BitVec 64))
(declare-fun temp10874_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10874_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10874_165 () (_ BitVec 64))
(declare-fun temp10874_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10874_167 () (_ BitVec 64))
(declare-fun temp10874_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10874_169 () (_ BitVec 64))
(declare-fun temp10874_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10874_171 () (_ BitVec 64))
(declare-fun temp10874_172 () (_ BitVec 64))
(declare-fun temp10874_173 () (_ BitVec 64))
(declare-fun temp10874_174 () (_ BitVec 64))
(declare-fun temp10874_175 () (_ BitVec 64))
(declare-fun temp10874_176 () (_ BitVec 64))
(declare-fun temp10874_177 () (_ BitVec 64))
(declare-fun temp10874_178 () (_ BitVec 64))
(declare-fun temp10874_179 () (_ BitVec 64))
(declare-fun temp10874_180 () (_ BitVec 64))
(declare-fun temp10874_181 () (_ BitVec 64))
(declare-fun temp10874_182 () (_ BitVec 64))
(declare-fun temp10874_183 () (_ BitVec 64))
(declare-fun temp10874_184 () (_ BitVec 64))
(declare-fun temp10874_185 () (_ BitVec 64))
(declare-fun temp10874_186 () (_ BitVec 64))
(declare-fun temp10874_187 () (_ BitVec 64))
(declare-fun temp10874_188 () (_ BitVec 64))
(declare-fun temp10874_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10874_190 () (_ BitVec 64))
(declare-fun temp10874_192 () (_ BitVec 64))
(declare-fun temp10874_193 () (_ BitVec 64))
(declare-fun temp10874_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10874_194 () (_ BitVec 64))
(declare-fun temp10874_195 () (_ BitVec 64))
(declare-fun temp10874_197 () (_ BitVec 64))
(declare-fun temp10874_198 () (_ BitVec 64))
(declare-fun temp10874_196 () (_ BitVec 64))
(declare-fun temp10874_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10874_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10874_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10874_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10874_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10874_204 () (_ BitVec 64))
(declare-fun temp10874_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10874_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10874_207 () (_ BitVec 64))
(declare-fun temp10874_208 () (_ BitVec 64))
(declare-fun temp10874_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10874_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10874_211 () (_ BitVec 64))
(declare-fun temp10874_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10874_213 () (_ BitVec 64))
(declare-fun temp10874_214 () (_ BitVec 64))
(declare-fun temp10874_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10874_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10874_217 () (_ BitVec 64))
(declare-fun temp10874_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10874_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10874_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var5714320 () (_ BitVec 64))
(declare-fun var5976464 () (_ BitVec 64))
(declare-fun temp10874_221 () (_ BitVec 64))
(declare-fun var6304144 () (_ BitVec 64))
(declare-fun temp10874_222 () (_ BitVec 64))
(assert (= temp10874_1 #x0000000000000001))
(assert (= var77203 temp10874_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10874_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10874_2)))
(assert (= temp10874_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10874_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10874_4 #x0000000000000000))
(assert (= var210941 temp10874_4))
(assert (= temp10874_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10874_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10874_6 #x0000000000000000))
(assert (= var210986 temp10874_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10874_7 #x0000000000000000))
(assert (= temp10874_8 temp10874_7))
(assert (= temp10874_9 (select ARGNAME_padding_NAMEEND_VAL temp10874_8)))
(assert (= temp10874_10 #x0000000000000001))
(assert (= temp10874_11 temp10874_10))
(assert (= temp10874_12 (select ARGNAME_padding_NAMEEND_VAL temp10874_11)))
(assert (= temp10874_13 #x0000000000000002))
(assert (= temp10874_14 temp10874_13))
(assert (= temp10874_15 (select ARGNAME_padding_NAMEEND_VAL temp10874_14)))
(assert (= temp10874_16 #x0000000000000003))
(assert (= temp10874_17 temp10874_16))
(assert (= temp10874_18 (select ARGNAME_padding_NAMEEND_VAL temp10874_17)))
(assert (= temp10874_19 #x0000000000000004))
(assert (= temp10874_20 temp10874_19))
(assert (= temp10874_21 (select ARGNAME_padding_NAMEEND_VAL temp10874_20)))
(assert (= temp10874_22 #x0000000000000005))
(assert (= temp10874_23 temp10874_22))
(assert (= temp10874_24 (select ARGNAME_padding_NAMEEND_VAL temp10874_23)))
(assert (= temp10874_25 #x0000000000000000))
(assert (= temp10874_26 #x0000000000000000))
(assert (= temp10874_27 temp10874_26))
(assert (= temp10874_28 (select ARGNAME_padding_NAMEEND_VAL temp10874_27)))
(assert (= temp10874_29 #x0000000000000000))
(assert (= temp10874_30 #x0000000000000001))
(assert (= temp10874_31 temp10874_30))
(assert (= temp10874_32 (select ARGNAME_padding_NAMEEND_VAL temp10874_31)))
(assert (= temp10874_33 #x0000000000000000))
(assert (= temp10874_34 #x0000000000000002))
(assert (= temp10874_35 temp10874_34))
(assert (= temp10874_36 (select ARGNAME_padding_NAMEEND_VAL temp10874_35)))
(assert (= temp10874_37 #x0000000000000000))
(assert (= temp10874_38 #x0000000000000003))
(assert (= temp10874_39 temp10874_38))
(assert (= temp10874_40 (select ARGNAME_padding_NAMEEND_VAL temp10874_39)))
(assert (= temp10874_41 #x0000000000000000))
(assert (= temp10874_42 #x0000000000000004))
(assert (= temp10874_43 temp10874_42))
(assert (= temp10874_44 (select ARGNAME_padding_NAMEEND_VAL temp10874_43)))
(assert (= temp10874_45 #x0000000000000000))
(assert (= temp10874_46 #x0000000000000005))
(assert (= temp10874_47 temp10874_46))
(assert (= temp10874_48 (select ARGNAME_padding_NAMEEND_VAL temp10874_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10874_28 temp10874_25)
             (bvslt temp10874_32 temp10874_29)
             (bvslt temp10874_36 temp10874_33)
             (bvslt temp10874_40 temp10874_37)
             (bvslt temp10874_44 temp10874_41)
             (bvslt temp10874_48 temp10874_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10874_49 #x0000000000000000))
(assert (= var1191714 temp10874_49))
(assert (= temp10874_50 #x0000000000000000))
(assert (= temp10874_51 temp10874_50))
(assert (= temp10874_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10874_51)))
(assert (= temp10874_53 #x0000000000000001))
(assert (= temp10874_54 temp10874_53))
(assert (= temp10874_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10874_54)))
(assert (= temp10874_56 #x0000000000000002))
(assert (= temp10874_57 temp10874_56))
(assert (= temp10874_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10874_57)))
(assert (= temp10874_59 #x0000000000000003))
(assert (= temp10874_60 temp10874_59))
(assert (= temp10874_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10874_60)))
(assert (= temp10874_62 #x0000000000000004))
(assert (= temp10874_63 temp10874_62))
(assert (= temp10874_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10874_63)))
(assert (= temp10874_65 #x0000000000000005))
(assert (= temp10874_66 temp10874_65))
(assert (= temp10874_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10874_66)))
(assert (= temp10874_68 #x0000000000000000))
(assert (= temp10874_69 #x0000000000000000))
(assert (= temp10874_70 temp10874_69))
(assert (= temp10874_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10874_70)))
(assert (= temp10874_72 #x0000000000000000))
(assert (= temp10874_73 #x0000000000000001))
(assert (= temp10874_74 temp10874_73))
(assert (= temp10874_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10874_74)))
(assert (= temp10874_76 #x0000000000000000))
(assert (= temp10874_77 #x0000000000000002))
(assert (= temp10874_78 temp10874_77))
(assert (= temp10874_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10874_78)))
(assert (= temp10874_80 #x0000000000000000))
(assert (= temp10874_81 #x0000000000000003))
(assert (= temp10874_82 temp10874_81))
(assert (= temp10874_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10874_82)))
(assert (= temp10874_84 #x0000000000000000))
(assert (= temp10874_85 #x0000000000000004))
(assert (= temp10874_86 temp10874_85))
(assert (= temp10874_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10874_86)))
(assert (= temp10874_88 #x0000000000000000))
(assert (= temp10874_89 #x0000000000000005))
(assert (= temp10874_90 temp10874_89))
(assert (= temp10874_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10874_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10874_71 temp10874_68)
             (bvslt temp10874_75 temp10874_72)
             (bvslt temp10874_79 temp10874_76)
             (bvslt temp10874_83 temp10874_80)
             (bvslt temp10874_87 temp10874_84)
             (bvslt temp10874_91 temp10874_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10874_92 #x0000000000000000))
(assert (= var1191725 temp10874_92))
(assert (= temp10874_93 #x0000000000000000))
(assert (= temp10874_94 temp10874_93))
(assert (= temp10874_95 (select ARGNAME_stride_NAMEEND_VAL temp10874_94)))
(assert (= temp10874_96 #x0000000000000001))
(assert (= temp10874_97 temp10874_96))
(assert (= temp10874_98 (select ARGNAME_stride_NAMEEND_VAL temp10874_97)))
(assert (= temp10874_99 #x0000000000000002))
(assert (= temp10874_100 temp10874_99))
(assert (= temp10874_101 (select ARGNAME_stride_NAMEEND_VAL temp10874_100)))
(assert (= temp10874_102 #x0000000000000003))
(assert (= temp10874_103 temp10874_102))
(assert (= temp10874_104 (select ARGNAME_stride_NAMEEND_VAL temp10874_103)))
(assert (= temp10874_105 #x0000000000000004))
(assert (= temp10874_106 temp10874_105))
(assert (= temp10874_107 (select ARGNAME_stride_NAMEEND_VAL temp10874_106)))
(assert (= temp10874_108 #x0000000000000005))
(assert (= temp10874_109 temp10874_108))
(assert (= temp10874_110 (select ARGNAME_stride_NAMEEND_VAL temp10874_109)))
(assert (= temp10874_111 #x0000000000000000))
(assert (= temp10874_112 #x0000000000000000))
(assert (= temp10874_113 temp10874_112))
(assert (= temp10874_114 (select ARGNAME_stride_NAMEEND_VAL temp10874_113)))
(assert (= temp10874_115 #x0000000000000000))
(assert (= temp10874_116 #x0000000000000001))
(assert (= temp10874_117 temp10874_116))
(assert (= temp10874_118 (select ARGNAME_stride_NAMEEND_VAL temp10874_117)))
(assert (= temp10874_119 #x0000000000000000))
(assert (= temp10874_120 #x0000000000000002))
(assert (= temp10874_121 temp10874_120))
(assert (= temp10874_122 (select ARGNAME_stride_NAMEEND_VAL temp10874_121)))
(assert (= temp10874_123 #x0000000000000000))
(assert (= temp10874_124 #x0000000000000003))
(assert (= temp10874_125 temp10874_124))
(assert (= temp10874_126 (select ARGNAME_stride_NAMEEND_VAL temp10874_125)))
(assert (= temp10874_127 #x0000000000000000))
(assert (= temp10874_128 #x0000000000000004))
(assert (= temp10874_129 temp10874_128))
(assert (= temp10874_130 (select ARGNAME_stride_NAMEEND_VAL temp10874_129)))
(assert (= temp10874_131 #x0000000000000000))
(assert (= temp10874_132 #x0000000000000005))
(assert (= temp10874_133 temp10874_132))
(assert (= temp10874_134 (select ARGNAME_stride_NAMEEND_VAL temp10874_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10874_114 temp10874_111)
             (bvsle temp10874_118 temp10874_115)
             (bvsle temp10874_122 temp10874_119)
             (bvsle temp10874_126 temp10874_123)
             (bvsle temp10874_130 temp10874_127)
             (bvsle temp10874_134 temp10874_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10874_135 #x0000000000000000))
(assert (= var1191735 temp10874_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10874_136 #x0000000000000001))
(assert (= var1191747 temp10874_136))
(assert (= temp10874_137 #x0000000000000000))
(assert (= var1179826 temp10874_137))
(assert (= temp10874_138 #x0000000000000000))
(assert (= temp10874_139 temp10874_138))
(assert (= temp10874_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10874_139)))
(assert (= temp10874_141 #x0000000000000001))
(assert (= temp10874_142 temp10874_141))
(assert (= temp10874_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10874_142)))
(assert (= temp10874_144 #x0000000000000002))
(assert (= temp10874_145 temp10874_144))
(assert (= temp10874_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10874_145)))
(assert (= temp10874_147 #x0000000000000003))
(assert (= temp10874_148 temp10874_147))
(assert (= temp10874_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10874_148)))
(assert (= temp10874_150 #x0000000000000004))
(assert (= temp10874_151 temp10874_150))
(assert (= temp10874_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10874_151)))
(assert (= temp10874_153 #x0000000000000005))
(assert (= temp10874_154 temp10874_153))
(assert (= temp10874_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10874_154)))
(assert (= temp10874_157 var1179826))
(assert (= temp10874_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10874_157)))
(assert (= temp10874_156 temp10874_158))
(assert (= var1191780
   (ite (bvslt temp10874_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10874_159 #x0000000000000000))
(assert (= var1191780 temp10874_159))
(assert (= temp10874_160 #x0000000000000000))
(assert (= var1179826 temp10874_160))
(assert (= temp10874_162 var1179826))
(assert (= temp10874_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10874_162)))
(assert (= temp10874_161 temp10874_163))
(assert (= var1191802 (bvsmod temp10874_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10874_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10874_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10874_165 #x0000000000000001))
(assert (= var1191803 temp10874_165))
(assert (= temp10874_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10874_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10874_167 #x0000000000000001))
(assert (= var1191823 temp10874_167))
(assert (= temp10874_168 #x0000000000000001))
(assert (= var1180714 temp10874_168))
(assert (= temp10874_169 #x0000000000000000))
(assert (= temp10874_170 temp10874_169))
(assert (= temp10874_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10874_170)))
(assert (= temp10874_172 #x0000000000000001))
(assert (= temp10874_173 temp10874_172))
(assert (= temp10874_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10874_173)))
(assert (= temp10874_175 #x0000000000000002))
(assert (= temp10874_176 temp10874_175))
(assert (= temp10874_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10874_176)))
(assert (= temp10874_178 #x0000000000000003))
(assert (= temp10874_179 temp10874_178))
(assert (= temp10874_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10874_179)))
(assert (= temp10874_181 #x0000000000000004))
(assert (= temp10874_182 temp10874_181))
(assert (= temp10874_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10874_182)))
(assert (= temp10874_184 #x0000000000000005))
(assert (= temp10874_185 temp10874_184))
(assert (= temp10874_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10874_185)))
(assert (= temp10874_187 #x0000000000000000))
(assert (= temp10874_188
   (ite (bvslt var1180714 temp10874_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10874_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10874_188)))
(assert (= var1191831 temp10874_189))
(assert (bvslt (ite (bvslt var1180714 temp10874_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10874_190 #x0000000000000001))
(assert (= var1180714 temp10874_190))
(assert (= temp10874_192 var1180714))
(assert (= temp10874_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10874_192)))
(assert (= temp10874_191 temp10874_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10874_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10874_194 #x0000000000000001))
(assert (= var1191836 temp10874_194))
(assert (= temp10874_195 #x0000000000000000))
(assert (= var1179826 temp10874_195))
(assert (= temp10874_197 var1179826))
(assert (= temp10874_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10874_197)))
(assert (= temp10874_196 temp10874_198))
(assert (= temp10874_199 #x0000000000000002))
(assert (= var1586025 temp10874_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10874_200 #x0000000000000001))
(assert (= var1191993 temp10874_200))
(assert (= temp10874_201 #x0000000000000001))
(assert (= var2700303 temp10874_201))
(assert (= temp10874_202 #x0000000000000001))
(assert (= var2962447 temp10874_202))
(assert (= temp10874_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10874_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10874_204 #x0000000000000001))
(assert (= var211058 temp10874_204))
(assert (= temp10874_205 #x0000000000000001))
(assert (= var211188 temp10874_205))
(assert (= var3879401 var211188))
(assert (= temp10874_206 #x0000000000000000))
(assert (= var3866802 temp10874_206))
(assert (= temp10874_207 #x0000000000000000))
(assert (= temp10874_208
   (ite (bvslt var3866802 temp10874_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10874_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10874_208)))
(assert (= var3879420 temp10874_209))
(assert (bvslt (ite (bvslt var3866802 temp10874_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10874_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10874_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10874_211 #x0000000000000000))
(assert (= var3879421 temp10874_211))
(assert (= temp10874_212 #x0000000000000001))
(assert (= var3867690 temp10874_212))
(assert (= temp10874_213 #x0000000000000000))
(assert (= temp10874_214
   (ite (bvslt var3867690 temp10874_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10874_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10874_214)))
(assert (= var3879423 temp10874_215))
(assert (bvslt (ite (bvslt var3867690 temp10874_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10874_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10874_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10874_217 #x0000000000000001))
(assert (= var3879424 temp10874_217))
(assert (= temp10874_218 #x0000000000000000))
(assert (= var4133117 temp10874_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10874_219 #x0000000000000002))
(assert (= var4339331 temp10874_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10874_220 #x0000000000000000))
(assert (= var4404892 temp10874_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var5714320 var211201))
(assert (= var5976464 var211201))
(assert (= temp10874_221 #x0000000000000000))
(assert (= var6304144 temp10874_221))
(assert (= temp10874_222 #x0000000000000001))
(assert (= var211058 temp10874_222))
(model-add temp10874_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10874_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10874_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10874_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





