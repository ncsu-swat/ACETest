(declare-fun temp10793_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10793_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10793_3 () (_ BitVec 64))
(declare-fun temp10793_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10793_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10793_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10793_7 () (_ BitVec 64))
(declare-fun temp10793_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10793_9 () (_ BitVec 64))
(declare-fun temp10793_10 () (_ BitVec 64))
(declare-fun temp10793_11 () (_ BitVec 64))
(declare-fun temp10793_12 () (_ BitVec 64))
(declare-fun temp10793_13 () (_ BitVec 64))
(declare-fun temp10793_14 () (_ BitVec 64))
(declare-fun temp10793_15 () (_ BitVec 64))
(declare-fun temp10793_16 () (_ BitVec 64))
(declare-fun temp10793_17 () (_ BitVec 64))
(declare-fun temp10793_18 () (_ BitVec 64))
(declare-fun temp10793_19 () (_ BitVec 64))
(declare-fun temp10793_20 () (_ BitVec 64))
(declare-fun temp10793_21 () (_ BitVec 64))
(declare-fun temp10793_22 () (_ BitVec 64))
(declare-fun temp10793_23 () (_ BitVec 64))
(declare-fun temp10793_24 () (_ BitVec 64))
(declare-fun temp10793_25 () (_ BitVec 64))
(declare-fun temp10793_26 () (_ BitVec 64))
(declare-fun temp10793_27 () (_ BitVec 64))
(declare-fun temp10793_28 () (_ BitVec 64))
(declare-fun temp10793_29 () (_ BitVec 64))
(declare-fun temp10793_30 () (_ BitVec 64))
(declare-fun temp10793_31 () (_ BitVec 64))
(declare-fun temp10793_32 () (_ BitVec 64))
(declare-fun temp10793_33 () (_ BitVec 64))
(declare-fun temp10793_34 () (_ BitVec 64))
(declare-fun temp10793_35 () (_ BitVec 64))
(declare-fun temp10793_36 () (_ BitVec 64))
(declare-fun temp10793_37 () (_ BitVec 64))
(declare-fun temp10793_38 () (_ BitVec 64))
(declare-fun temp10793_39 () (_ BitVec 64))
(declare-fun temp10793_40 () (_ BitVec 64))
(declare-fun temp10793_41 () (_ BitVec 64))
(declare-fun temp10793_42 () (_ BitVec 64))
(declare-fun temp10793_43 () (_ BitVec 64))
(declare-fun temp10793_44 () (_ BitVec 64))
(declare-fun temp10793_45 () (_ BitVec 64))
(declare-fun temp10793_46 () (_ BitVec 64))
(declare-fun temp10793_47 () (_ BitVec 64))
(declare-fun temp10793_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10793_49 () (_ BitVec 64))
(declare-fun temp10793_50 () (_ BitVec 64))
(declare-fun temp10793_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10793_52 () (_ BitVec 64))
(declare-fun temp10793_53 () (_ BitVec 64))
(declare-fun temp10793_54 () (_ BitVec 64))
(declare-fun temp10793_55 () (_ BitVec 64))
(declare-fun temp10793_56 () (_ BitVec 64))
(declare-fun temp10793_57 () (_ BitVec 64))
(declare-fun temp10793_58 () (_ BitVec 64))
(declare-fun temp10793_59 () (_ BitVec 64))
(declare-fun temp10793_60 () (_ BitVec 64))
(declare-fun temp10793_61 () (_ BitVec 64))
(declare-fun temp10793_62 () (_ BitVec 64))
(declare-fun temp10793_63 () (_ BitVec 64))
(declare-fun temp10793_64 () (_ BitVec 64))
(declare-fun temp10793_65 () (_ BitVec 64))
(declare-fun temp10793_66 () (_ BitVec 64))
(declare-fun temp10793_67 () (_ BitVec 64))
(declare-fun temp10793_68 () (_ BitVec 64))
(declare-fun temp10793_69 () (_ BitVec 64))
(declare-fun temp10793_70 () (_ BitVec 64))
(declare-fun temp10793_71 () (_ BitVec 64))
(declare-fun temp10793_72 () (_ BitVec 64))
(declare-fun temp10793_73 () (_ BitVec 64))
(declare-fun temp10793_74 () (_ BitVec 64))
(declare-fun temp10793_75 () (_ BitVec 64))
(declare-fun temp10793_76 () (_ BitVec 64))
(declare-fun temp10793_77 () (_ BitVec 64))
(declare-fun temp10793_78 () (_ BitVec 64))
(declare-fun temp10793_79 () (_ BitVec 64))
(declare-fun temp10793_80 () (_ BitVec 64))
(declare-fun temp10793_81 () (_ BitVec 64))
(declare-fun temp10793_82 () (_ BitVec 64))
(declare-fun temp10793_83 () (_ BitVec 64))
(declare-fun temp10793_84 () (_ BitVec 64))
(declare-fun temp10793_85 () (_ BitVec 64))
(declare-fun temp10793_86 () (_ BitVec 64))
(declare-fun temp10793_87 () (_ BitVec 64))
(declare-fun temp10793_88 () (_ BitVec 64))
(declare-fun temp10793_89 () (_ BitVec 64))
(declare-fun temp10793_90 () (_ BitVec 64))
(declare-fun temp10793_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10793_92 () (_ BitVec 64))
(declare-fun temp10793_93 () (_ BitVec 64))
(declare-fun temp10793_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10793_95 () (_ BitVec 64))
(declare-fun temp10793_96 () (_ BitVec 64))
(declare-fun temp10793_97 () (_ BitVec 64))
(declare-fun temp10793_98 () (_ BitVec 64))
(declare-fun temp10793_99 () (_ BitVec 64))
(declare-fun temp10793_100 () (_ BitVec 64))
(declare-fun temp10793_101 () (_ BitVec 64))
(declare-fun temp10793_102 () (_ BitVec 64))
(declare-fun temp10793_103 () (_ BitVec 64))
(declare-fun temp10793_104 () (_ BitVec 64))
(declare-fun temp10793_105 () (_ BitVec 64))
(declare-fun temp10793_106 () (_ BitVec 64))
(declare-fun temp10793_107 () (_ BitVec 64))
(declare-fun temp10793_108 () (_ BitVec 64))
(declare-fun temp10793_109 () (_ BitVec 64))
(declare-fun temp10793_110 () (_ BitVec 64))
(declare-fun temp10793_111 () (_ BitVec 64))
(declare-fun temp10793_112 () (_ BitVec 64))
(declare-fun temp10793_113 () (_ BitVec 64))
(declare-fun temp10793_114 () (_ BitVec 64))
(declare-fun temp10793_115 () (_ BitVec 64))
(declare-fun temp10793_116 () (_ BitVec 64))
(declare-fun temp10793_117 () (_ BitVec 64))
(declare-fun temp10793_118 () (_ BitVec 64))
(declare-fun temp10793_119 () (_ BitVec 64))
(declare-fun temp10793_120 () (_ BitVec 64))
(declare-fun temp10793_121 () (_ BitVec 64))
(declare-fun temp10793_122 () (_ BitVec 64))
(declare-fun temp10793_123 () (_ BitVec 64))
(declare-fun temp10793_124 () (_ BitVec 64))
(declare-fun temp10793_125 () (_ BitVec 64))
(declare-fun temp10793_126 () (_ BitVec 64))
(declare-fun temp10793_127 () (_ BitVec 64))
(declare-fun temp10793_128 () (_ BitVec 64))
(declare-fun temp10793_129 () (_ BitVec 64))
(declare-fun temp10793_130 () (_ BitVec 64))
(declare-fun temp10793_131 () (_ BitVec 64))
(declare-fun temp10793_132 () (_ BitVec 64))
(declare-fun temp10793_133 () (_ BitVec 64))
(declare-fun temp10793_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10793_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10793_136 () (_ BitVec 64))
(declare-fun temp10793_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10793_138 () (_ BitVec 64))
(declare-fun temp10793_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10793_140 () (_ BitVec 64))
(declare-fun temp10793_141 () (_ BitVec 64))
(declare-fun temp10793_142 () (_ BitVec 64))
(declare-fun temp10793_143 () (_ BitVec 64))
(declare-fun temp10793_144 () (_ BitVec 64))
(declare-fun temp10793_145 () (_ BitVec 64))
(declare-fun temp10793_146 () (_ BitVec 64))
(declare-fun temp10793_147 () (_ BitVec 64))
(declare-fun temp10793_148 () (_ BitVec 64))
(declare-fun temp10793_149 () (_ BitVec 64))
(declare-fun temp10793_150 () (_ BitVec 64))
(declare-fun temp10793_151 () (_ BitVec 64))
(declare-fun temp10793_152 () (_ BitVec 64))
(declare-fun temp10793_153 () (_ BitVec 64))
(declare-fun temp10793_154 () (_ BitVec 64))
(declare-fun temp10793_155 () (_ BitVec 64))
(declare-fun temp10793_157 () (_ BitVec 64))
(declare-fun temp10793_158 () (_ BitVec 64))
(declare-fun temp10793_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10793_159 () (_ BitVec 64))
(declare-fun temp10793_160 () (_ BitVec 64))
(declare-fun temp10793_162 () (_ BitVec 64))
(declare-fun temp10793_163 () (_ BitVec 64))
(declare-fun temp10793_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10793_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10793_165 () (_ BitVec 64))
(declare-fun temp10793_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10793_167 () (_ BitVec 64))
(declare-fun temp10793_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10793_169 () (_ BitVec 64))
(declare-fun temp10793_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10793_171 () (_ BitVec 64))
(declare-fun temp10793_172 () (_ BitVec 64))
(declare-fun temp10793_173 () (_ BitVec 64))
(declare-fun temp10793_174 () (_ BitVec 64))
(declare-fun temp10793_175 () (_ BitVec 64))
(declare-fun temp10793_176 () (_ BitVec 64))
(declare-fun temp10793_177 () (_ BitVec 64))
(declare-fun temp10793_178 () (_ BitVec 64))
(declare-fun temp10793_179 () (_ BitVec 64))
(declare-fun temp10793_180 () (_ BitVec 64))
(declare-fun temp10793_181 () (_ BitVec 64))
(declare-fun temp10793_182 () (_ BitVec 64))
(declare-fun temp10793_183 () (_ BitVec 64))
(declare-fun temp10793_184 () (_ BitVec 64))
(declare-fun temp10793_185 () (_ BitVec 64))
(declare-fun temp10793_186 () (_ BitVec 64))
(declare-fun temp10793_187 () (_ BitVec 64))
(declare-fun temp10793_188 () (_ BitVec 64))
(declare-fun temp10793_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10793_190 () (_ BitVec 64))
(declare-fun temp10793_192 () (_ BitVec 64))
(declare-fun temp10793_193 () (_ BitVec 64))
(declare-fun temp10793_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10793_194 () (_ BitVec 64))
(declare-fun temp10793_195 () (_ BitVec 64))
(declare-fun temp10793_197 () (_ BitVec 64))
(declare-fun temp10793_198 () (_ BitVec 64))
(declare-fun temp10793_196 () (_ BitVec 64))
(declare-fun temp10793_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10793_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10793_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10793_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10793_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10793_204 () (_ BitVec 64))
(declare-fun temp10793_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10793_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10793_207 () (_ BitVec 64))
(declare-fun temp10793_208 () (_ BitVec 64))
(declare-fun temp10793_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10793_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10793_211 () (_ BitVec 64))
(declare-fun temp10793_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10793_213 () (_ BitVec 64))
(declare-fun temp10793_214 () (_ BitVec 64))
(declare-fun temp10793_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10793_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10793_217 () (_ BitVec 64))
(declare-fun temp10793_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10793_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10793_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp10793_221 () (_ BitVec 64))
(assert (= temp10793_1 #x0000000000000001))
(assert (= var77203 temp10793_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10793_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10793_2)))
(assert (= temp10793_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10793_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10793_4 #x0000000000000000))
(assert (= var210941 temp10793_4))
(assert (= temp10793_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10793_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10793_6 #x0000000000000000))
(assert (= var210986 temp10793_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10793_7 #x0000000000000000))
(assert (= temp10793_8 temp10793_7))
(assert (= temp10793_9 (select ARGNAME_padding_NAMEEND_VAL temp10793_8)))
(assert (= temp10793_10 #x0000000000000001))
(assert (= temp10793_11 temp10793_10))
(assert (= temp10793_12 (select ARGNAME_padding_NAMEEND_VAL temp10793_11)))
(assert (= temp10793_13 #x0000000000000002))
(assert (= temp10793_14 temp10793_13))
(assert (= temp10793_15 (select ARGNAME_padding_NAMEEND_VAL temp10793_14)))
(assert (= temp10793_16 #x0000000000000003))
(assert (= temp10793_17 temp10793_16))
(assert (= temp10793_18 (select ARGNAME_padding_NAMEEND_VAL temp10793_17)))
(assert (= temp10793_19 #x0000000000000004))
(assert (= temp10793_20 temp10793_19))
(assert (= temp10793_21 (select ARGNAME_padding_NAMEEND_VAL temp10793_20)))
(assert (= temp10793_22 #x0000000000000005))
(assert (= temp10793_23 temp10793_22))
(assert (= temp10793_24 (select ARGNAME_padding_NAMEEND_VAL temp10793_23)))
(assert (= temp10793_25 #x0000000000000000))
(assert (= temp10793_26 #x0000000000000000))
(assert (= temp10793_27 temp10793_26))
(assert (= temp10793_28 (select ARGNAME_padding_NAMEEND_VAL temp10793_27)))
(assert (= temp10793_29 #x0000000000000000))
(assert (= temp10793_30 #x0000000000000001))
(assert (= temp10793_31 temp10793_30))
(assert (= temp10793_32 (select ARGNAME_padding_NAMEEND_VAL temp10793_31)))
(assert (= temp10793_33 #x0000000000000000))
(assert (= temp10793_34 #x0000000000000002))
(assert (= temp10793_35 temp10793_34))
(assert (= temp10793_36 (select ARGNAME_padding_NAMEEND_VAL temp10793_35)))
(assert (= temp10793_37 #x0000000000000000))
(assert (= temp10793_38 #x0000000000000003))
(assert (= temp10793_39 temp10793_38))
(assert (= temp10793_40 (select ARGNAME_padding_NAMEEND_VAL temp10793_39)))
(assert (= temp10793_41 #x0000000000000000))
(assert (= temp10793_42 #x0000000000000004))
(assert (= temp10793_43 temp10793_42))
(assert (= temp10793_44 (select ARGNAME_padding_NAMEEND_VAL temp10793_43)))
(assert (= temp10793_45 #x0000000000000000))
(assert (= temp10793_46 #x0000000000000005))
(assert (= temp10793_47 temp10793_46))
(assert (= temp10793_48 (select ARGNAME_padding_NAMEEND_VAL temp10793_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10793_28 temp10793_25)
             (bvslt temp10793_32 temp10793_29)
             (bvslt temp10793_36 temp10793_33)
             (bvslt temp10793_40 temp10793_37)
             (bvslt temp10793_44 temp10793_41)
             (bvslt temp10793_48 temp10793_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10793_49 #x0000000000000000))
(assert (= var1191714 temp10793_49))
(assert (= temp10793_50 #x0000000000000000))
(assert (= temp10793_51 temp10793_50))
(assert (= temp10793_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10793_51)))
(assert (= temp10793_53 #x0000000000000001))
(assert (= temp10793_54 temp10793_53))
(assert (= temp10793_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10793_54)))
(assert (= temp10793_56 #x0000000000000002))
(assert (= temp10793_57 temp10793_56))
(assert (= temp10793_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10793_57)))
(assert (= temp10793_59 #x0000000000000003))
(assert (= temp10793_60 temp10793_59))
(assert (= temp10793_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10793_60)))
(assert (= temp10793_62 #x0000000000000004))
(assert (= temp10793_63 temp10793_62))
(assert (= temp10793_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10793_63)))
(assert (= temp10793_65 #x0000000000000005))
(assert (= temp10793_66 temp10793_65))
(assert (= temp10793_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10793_66)))
(assert (= temp10793_68 #x0000000000000000))
(assert (= temp10793_69 #x0000000000000000))
(assert (= temp10793_70 temp10793_69))
(assert (= temp10793_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10793_70)))
(assert (= temp10793_72 #x0000000000000000))
(assert (= temp10793_73 #x0000000000000001))
(assert (= temp10793_74 temp10793_73))
(assert (= temp10793_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10793_74)))
(assert (= temp10793_76 #x0000000000000000))
(assert (= temp10793_77 #x0000000000000002))
(assert (= temp10793_78 temp10793_77))
(assert (= temp10793_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10793_78)))
(assert (= temp10793_80 #x0000000000000000))
(assert (= temp10793_81 #x0000000000000003))
(assert (= temp10793_82 temp10793_81))
(assert (= temp10793_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10793_82)))
(assert (= temp10793_84 #x0000000000000000))
(assert (= temp10793_85 #x0000000000000004))
(assert (= temp10793_86 temp10793_85))
(assert (= temp10793_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10793_86)))
(assert (= temp10793_88 #x0000000000000000))
(assert (= temp10793_89 #x0000000000000005))
(assert (= temp10793_90 temp10793_89))
(assert (= temp10793_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10793_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10793_71 temp10793_68)
             (bvslt temp10793_75 temp10793_72)
             (bvslt temp10793_79 temp10793_76)
             (bvslt temp10793_83 temp10793_80)
             (bvslt temp10793_87 temp10793_84)
             (bvslt temp10793_91 temp10793_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10793_92 #x0000000000000000))
(assert (= var1191725 temp10793_92))
(assert (= temp10793_93 #x0000000000000000))
(assert (= temp10793_94 temp10793_93))
(assert (= temp10793_95 (select ARGNAME_stride_NAMEEND_VAL temp10793_94)))
(assert (= temp10793_96 #x0000000000000001))
(assert (= temp10793_97 temp10793_96))
(assert (= temp10793_98 (select ARGNAME_stride_NAMEEND_VAL temp10793_97)))
(assert (= temp10793_99 #x0000000000000002))
(assert (= temp10793_100 temp10793_99))
(assert (= temp10793_101 (select ARGNAME_stride_NAMEEND_VAL temp10793_100)))
(assert (= temp10793_102 #x0000000000000003))
(assert (= temp10793_103 temp10793_102))
(assert (= temp10793_104 (select ARGNAME_stride_NAMEEND_VAL temp10793_103)))
(assert (= temp10793_105 #x0000000000000004))
(assert (= temp10793_106 temp10793_105))
(assert (= temp10793_107 (select ARGNAME_stride_NAMEEND_VAL temp10793_106)))
(assert (= temp10793_108 #x0000000000000005))
(assert (= temp10793_109 temp10793_108))
(assert (= temp10793_110 (select ARGNAME_stride_NAMEEND_VAL temp10793_109)))
(assert (= temp10793_111 #x0000000000000000))
(assert (= temp10793_112 #x0000000000000000))
(assert (= temp10793_113 temp10793_112))
(assert (= temp10793_114 (select ARGNAME_stride_NAMEEND_VAL temp10793_113)))
(assert (= temp10793_115 #x0000000000000000))
(assert (= temp10793_116 #x0000000000000001))
(assert (= temp10793_117 temp10793_116))
(assert (= temp10793_118 (select ARGNAME_stride_NAMEEND_VAL temp10793_117)))
(assert (= temp10793_119 #x0000000000000000))
(assert (= temp10793_120 #x0000000000000002))
(assert (= temp10793_121 temp10793_120))
(assert (= temp10793_122 (select ARGNAME_stride_NAMEEND_VAL temp10793_121)))
(assert (= temp10793_123 #x0000000000000000))
(assert (= temp10793_124 #x0000000000000003))
(assert (= temp10793_125 temp10793_124))
(assert (= temp10793_126 (select ARGNAME_stride_NAMEEND_VAL temp10793_125)))
(assert (= temp10793_127 #x0000000000000000))
(assert (= temp10793_128 #x0000000000000004))
(assert (= temp10793_129 temp10793_128))
(assert (= temp10793_130 (select ARGNAME_stride_NAMEEND_VAL temp10793_129)))
(assert (= temp10793_131 #x0000000000000000))
(assert (= temp10793_132 #x0000000000000005))
(assert (= temp10793_133 temp10793_132))
(assert (= temp10793_134 (select ARGNAME_stride_NAMEEND_VAL temp10793_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10793_114 temp10793_111)
             (bvsle temp10793_118 temp10793_115)
             (bvsle temp10793_122 temp10793_119)
             (bvsle temp10793_126 temp10793_123)
             (bvsle temp10793_130 temp10793_127)
             (bvsle temp10793_134 temp10793_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10793_135 #x0000000000000000))
(assert (= var1191735 temp10793_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10793_136 #x0000000000000001))
(assert (= var1191747 temp10793_136))
(assert (= temp10793_137 #x0000000000000000))
(assert (= var1179826 temp10793_137))
(assert (= temp10793_138 #x0000000000000000))
(assert (= temp10793_139 temp10793_138))
(assert (= temp10793_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10793_139)))
(assert (= temp10793_141 #x0000000000000001))
(assert (= temp10793_142 temp10793_141))
(assert (= temp10793_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10793_142)))
(assert (= temp10793_144 #x0000000000000002))
(assert (= temp10793_145 temp10793_144))
(assert (= temp10793_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10793_145)))
(assert (= temp10793_147 #x0000000000000003))
(assert (= temp10793_148 temp10793_147))
(assert (= temp10793_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10793_148)))
(assert (= temp10793_150 #x0000000000000004))
(assert (= temp10793_151 temp10793_150))
(assert (= temp10793_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10793_151)))
(assert (= temp10793_153 #x0000000000000005))
(assert (= temp10793_154 temp10793_153))
(assert (= temp10793_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10793_154)))
(assert (= temp10793_157 var1179826))
(assert (= temp10793_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10793_157)))
(assert (= temp10793_156 temp10793_158))
(assert (= var1191780
   (ite (bvslt temp10793_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10793_159 #x0000000000000000))
(assert (= var1191780 temp10793_159))
(assert (= temp10793_160 #x0000000000000000))
(assert (= var1179826 temp10793_160))
(assert (= temp10793_162 var1179826))
(assert (= temp10793_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10793_162)))
(assert (= temp10793_161 temp10793_163))
(assert (= var1191802 (bvsmod temp10793_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10793_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10793_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10793_165 #x0000000000000001))
(assert (= var1191803 temp10793_165))
(assert (= temp10793_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10793_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10793_167 #x0000000000000001))
(assert (= var1191823 temp10793_167))
(assert (= temp10793_168 #x0000000000000001))
(assert (= var1180714 temp10793_168))
(assert (= temp10793_169 #x0000000000000000))
(assert (= temp10793_170 temp10793_169))
(assert (= temp10793_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10793_170)))
(assert (= temp10793_172 #x0000000000000001))
(assert (= temp10793_173 temp10793_172))
(assert (= temp10793_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10793_173)))
(assert (= temp10793_175 #x0000000000000002))
(assert (= temp10793_176 temp10793_175))
(assert (= temp10793_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10793_176)))
(assert (= temp10793_178 #x0000000000000003))
(assert (= temp10793_179 temp10793_178))
(assert (= temp10793_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10793_179)))
(assert (= temp10793_181 #x0000000000000004))
(assert (= temp10793_182 temp10793_181))
(assert (= temp10793_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10793_182)))
(assert (= temp10793_184 #x0000000000000005))
(assert (= temp10793_185 temp10793_184))
(assert (= temp10793_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10793_185)))
(assert (= temp10793_187 #x0000000000000000))
(assert (= temp10793_188
   (ite (bvslt var1180714 temp10793_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10793_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10793_188)))
(assert (= var1191831 temp10793_189))
(assert (bvslt (ite (bvslt var1180714 temp10793_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10793_190 #x0000000000000001))
(assert (= var1180714 temp10793_190))
(assert (= temp10793_192 var1180714))
(assert (= temp10793_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10793_192)))
(assert (= temp10793_191 temp10793_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10793_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10793_194 #x0000000000000001))
(assert (= var1191836 temp10793_194))
(assert (= temp10793_195 #x0000000000000000))
(assert (= var1179826 temp10793_195))
(assert (= temp10793_197 var1179826))
(assert (= temp10793_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10793_197)))
(assert (= temp10793_196 temp10793_198))
(assert (= temp10793_199 #x0000000000000002))
(assert (= var1586025 temp10793_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10793_200 #x0000000000000001))
(assert (= var1191993 temp10793_200))
(assert (= temp10793_201 #x0000000000000001))
(assert (= var2700303 temp10793_201))
(assert (= temp10793_202 #x0000000000000001))
(assert (= var2962447 temp10793_202))
(assert (= temp10793_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10793_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10793_204 #x0000000000000001))
(assert (= var211058 temp10793_204))
(assert (= temp10793_205 #x0000000000000001))
(assert (= var211188 temp10793_205))
(assert (= var3879401 var211188))
(assert (= temp10793_206 #x0000000000000000))
(assert (= var3866802 temp10793_206))
(assert (= temp10793_207 #x0000000000000000))
(assert (= temp10793_208
   (ite (bvslt var3866802 temp10793_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10793_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10793_208)))
(assert (= var3879420 temp10793_209))
(assert (bvslt (ite (bvslt var3866802 temp10793_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10793_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10793_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10793_211 #x0000000000000000))
(assert (= var3879421 temp10793_211))
(assert (= temp10793_212 #x0000000000000001))
(assert (= var3867690 temp10793_212))
(assert (= temp10793_213 #x0000000000000000))
(assert (= temp10793_214
   (ite (bvslt var3867690 temp10793_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10793_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10793_214)))
(assert (= var3879423 temp10793_215))
(assert (bvslt (ite (bvslt var3867690 temp10793_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10793_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10793_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10793_217 #x0000000000000001))
(assert (= var3879424 temp10793_217))
(assert (= temp10793_218 #x0000000000000000))
(assert (= var4133117 temp10793_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10793_219 #x0000000000000002))
(assert (= var4339331 temp10793_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10793_220 #x0000000000000000))
(assert (= var4404892 temp10793_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp10793_221 #x0000000000000001))
(assert (= var211058 temp10793_221))
(model-add temp10793_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10793_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10793_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10793_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




