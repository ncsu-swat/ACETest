(declare-fun temp10054_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10054_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10054_3 () (_ BitVec 64))
(declare-fun temp10054_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10054_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10054_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10054_7 () (_ BitVec 64))
(declare-fun temp10054_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10054_9 () (_ BitVec 64))
(declare-fun temp10054_10 () (_ BitVec 64))
(declare-fun temp10054_11 () (_ BitVec 64))
(declare-fun temp10054_12 () (_ BitVec 64))
(declare-fun temp10054_13 () (_ BitVec 64))
(declare-fun temp10054_14 () (_ BitVec 64))
(declare-fun temp10054_15 () (_ BitVec 64))
(declare-fun temp10054_16 () (_ BitVec 64))
(declare-fun temp10054_17 () (_ BitVec 64))
(declare-fun temp10054_18 () (_ BitVec 64))
(declare-fun temp10054_19 () (_ BitVec 64))
(declare-fun temp10054_20 () (_ BitVec 64))
(declare-fun temp10054_21 () (_ BitVec 64))
(declare-fun temp10054_22 () (_ BitVec 64))
(declare-fun temp10054_23 () (_ BitVec 64))
(declare-fun temp10054_24 () (_ BitVec 64))
(declare-fun temp10054_25 () (_ BitVec 64))
(declare-fun temp10054_26 () (_ BitVec 64))
(declare-fun temp10054_27 () (_ BitVec 64))
(declare-fun temp10054_28 () (_ BitVec 64))
(declare-fun temp10054_29 () (_ BitVec 64))
(declare-fun temp10054_30 () (_ BitVec 64))
(declare-fun temp10054_31 () (_ BitVec 64))
(declare-fun temp10054_32 () (_ BitVec 64))
(declare-fun temp10054_33 () (_ BitVec 64))
(declare-fun temp10054_34 () (_ BitVec 64))
(declare-fun temp10054_35 () (_ BitVec 64))
(declare-fun temp10054_36 () (_ BitVec 64))
(declare-fun temp10054_37 () (_ BitVec 64))
(declare-fun temp10054_38 () (_ BitVec 64))
(declare-fun temp10054_39 () (_ BitVec 64))
(declare-fun temp10054_40 () (_ BitVec 64))
(declare-fun temp10054_41 () (_ BitVec 64))
(declare-fun temp10054_42 () (_ BitVec 64))
(declare-fun temp10054_43 () (_ BitVec 64))
(declare-fun temp10054_44 () (_ BitVec 64))
(declare-fun temp10054_45 () (_ BitVec 64))
(declare-fun temp10054_46 () (_ BitVec 64))
(declare-fun temp10054_47 () (_ BitVec 64))
(declare-fun temp10054_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10054_49 () (_ BitVec 64))
(declare-fun temp10054_50 () (_ BitVec 64))
(declare-fun temp10054_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10054_52 () (_ BitVec 64))
(declare-fun temp10054_53 () (_ BitVec 64))
(declare-fun temp10054_54 () (_ BitVec 64))
(declare-fun temp10054_55 () (_ BitVec 64))
(declare-fun temp10054_56 () (_ BitVec 64))
(declare-fun temp10054_57 () (_ BitVec 64))
(declare-fun temp10054_58 () (_ BitVec 64))
(declare-fun temp10054_59 () (_ BitVec 64))
(declare-fun temp10054_60 () (_ BitVec 64))
(declare-fun temp10054_61 () (_ BitVec 64))
(declare-fun temp10054_62 () (_ BitVec 64))
(declare-fun temp10054_63 () (_ BitVec 64))
(declare-fun temp10054_64 () (_ BitVec 64))
(declare-fun temp10054_65 () (_ BitVec 64))
(declare-fun temp10054_66 () (_ BitVec 64))
(declare-fun temp10054_67 () (_ BitVec 64))
(declare-fun temp10054_68 () (_ BitVec 64))
(declare-fun temp10054_69 () (_ BitVec 64))
(declare-fun temp10054_70 () (_ BitVec 64))
(declare-fun temp10054_71 () (_ BitVec 64))
(declare-fun temp10054_72 () (_ BitVec 64))
(declare-fun temp10054_73 () (_ BitVec 64))
(declare-fun temp10054_74 () (_ BitVec 64))
(declare-fun temp10054_75 () (_ BitVec 64))
(declare-fun temp10054_76 () (_ BitVec 64))
(declare-fun temp10054_77 () (_ BitVec 64))
(declare-fun temp10054_78 () (_ BitVec 64))
(declare-fun temp10054_79 () (_ BitVec 64))
(declare-fun temp10054_80 () (_ BitVec 64))
(declare-fun temp10054_81 () (_ BitVec 64))
(declare-fun temp10054_82 () (_ BitVec 64))
(declare-fun temp10054_83 () (_ BitVec 64))
(declare-fun temp10054_84 () (_ BitVec 64))
(declare-fun temp10054_85 () (_ BitVec 64))
(declare-fun temp10054_86 () (_ BitVec 64))
(declare-fun temp10054_87 () (_ BitVec 64))
(declare-fun temp10054_88 () (_ BitVec 64))
(declare-fun temp10054_89 () (_ BitVec 64))
(declare-fun temp10054_90 () (_ BitVec 64))
(declare-fun temp10054_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10054_92 () (_ BitVec 64))
(declare-fun temp10054_93 () (_ BitVec 64))
(declare-fun temp10054_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10054_95 () (_ BitVec 64))
(declare-fun temp10054_96 () (_ BitVec 64))
(declare-fun temp10054_97 () (_ BitVec 64))
(declare-fun temp10054_98 () (_ BitVec 64))
(declare-fun temp10054_99 () (_ BitVec 64))
(declare-fun temp10054_100 () (_ BitVec 64))
(declare-fun temp10054_101 () (_ BitVec 64))
(declare-fun temp10054_102 () (_ BitVec 64))
(declare-fun temp10054_103 () (_ BitVec 64))
(declare-fun temp10054_104 () (_ BitVec 64))
(declare-fun temp10054_105 () (_ BitVec 64))
(declare-fun temp10054_106 () (_ BitVec 64))
(declare-fun temp10054_107 () (_ BitVec 64))
(declare-fun temp10054_108 () (_ BitVec 64))
(declare-fun temp10054_109 () (_ BitVec 64))
(declare-fun temp10054_110 () (_ BitVec 64))
(declare-fun temp10054_111 () (_ BitVec 64))
(declare-fun temp10054_112 () (_ BitVec 64))
(declare-fun temp10054_113 () (_ BitVec 64))
(declare-fun temp10054_114 () (_ BitVec 64))
(declare-fun temp10054_115 () (_ BitVec 64))
(declare-fun temp10054_116 () (_ BitVec 64))
(declare-fun temp10054_117 () (_ BitVec 64))
(declare-fun temp10054_118 () (_ BitVec 64))
(declare-fun temp10054_119 () (_ BitVec 64))
(declare-fun temp10054_120 () (_ BitVec 64))
(declare-fun temp10054_121 () (_ BitVec 64))
(declare-fun temp10054_122 () (_ BitVec 64))
(declare-fun temp10054_123 () (_ BitVec 64))
(declare-fun temp10054_124 () (_ BitVec 64))
(declare-fun temp10054_125 () (_ BitVec 64))
(declare-fun temp10054_126 () (_ BitVec 64))
(declare-fun temp10054_127 () (_ BitVec 64))
(declare-fun temp10054_128 () (_ BitVec 64))
(declare-fun temp10054_129 () (_ BitVec 64))
(declare-fun temp10054_130 () (_ BitVec 64))
(declare-fun temp10054_131 () (_ BitVec 64))
(declare-fun temp10054_132 () (_ BitVec 64))
(declare-fun temp10054_133 () (_ BitVec 64))
(declare-fun temp10054_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10054_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10054_136 () (_ BitVec 64))
(declare-fun temp10054_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10054_138 () (_ BitVec 64))
(declare-fun temp10054_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10054_140 () (_ BitVec 64))
(declare-fun temp10054_141 () (_ BitVec 64))
(declare-fun temp10054_142 () (_ BitVec 64))
(declare-fun temp10054_143 () (_ BitVec 64))
(declare-fun temp10054_144 () (_ BitVec 64))
(declare-fun temp10054_145 () (_ BitVec 64))
(declare-fun temp10054_146 () (_ BitVec 64))
(declare-fun temp10054_147 () (_ BitVec 64))
(declare-fun temp10054_148 () (_ BitVec 64))
(declare-fun temp10054_149 () (_ BitVec 64))
(declare-fun temp10054_150 () (_ BitVec 64))
(declare-fun temp10054_151 () (_ BitVec 64))
(declare-fun temp10054_152 () (_ BitVec 64))
(declare-fun temp10054_153 () (_ BitVec 64))
(declare-fun temp10054_154 () (_ BitVec 64))
(declare-fun temp10054_155 () (_ BitVec 64))
(declare-fun temp10054_157 () (_ BitVec 64))
(declare-fun temp10054_158 () (_ BitVec 64))
(declare-fun temp10054_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10054_159 () (_ BitVec 64))
(declare-fun temp10054_160 () (_ BitVec 64))
(declare-fun temp10054_162 () (_ BitVec 64))
(declare-fun temp10054_163 () (_ BitVec 64))
(declare-fun temp10054_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10054_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10054_165 () (_ BitVec 64))
(declare-fun temp10054_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10054_167 () (_ BitVec 64))
(declare-fun temp10054_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10054_169 () (_ BitVec 64))
(declare-fun temp10054_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10054_171 () (_ BitVec 64))
(declare-fun temp10054_172 () (_ BitVec 64))
(declare-fun temp10054_173 () (_ BitVec 64))
(declare-fun temp10054_174 () (_ BitVec 64))
(declare-fun temp10054_175 () (_ BitVec 64))
(declare-fun temp10054_176 () (_ BitVec 64))
(declare-fun temp10054_177 () (_ BitVec 64))
(declare-fun temp10054_178 () (_ BitVec 64))
(declare-fun temp10054_179 () (_ BitVec 64))
(declare-fun temp10054_180 () (_ BitVec 64))
(declare-fun temp10054_181 () (_ BitVec 64))
(declare-fun temp10054_182 () (_ BitVec 64))
(declare-fun temp10054_183 () (_ BitVec 64))
(declare-fun temp10054_184 () (_ BitVec 64))
(declare-fun temp10054_185 () (_ BitVec 64))
(declare-fun temp10054_186 () (_ BitVec 64))
(declare-fun temp10054_187 () (_ BitVec 64))
(declare-fun temp10054_188 () (_ BitVec 64))
(declare-fun temp10054_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10054_190 () (_ BitVec 64))
(declare-fun temp10054_192 () (_ BitVec 64))
(declare-fun temp10054_193 () (_ BitVec 64))
(declare-fun temp10054_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10054_194 () (_ BitVec 64))
(declare-fun temp10054_195 () (_ BitVec 64))
(declare-fun temp10054_197 () (_ BitVec 64))
(declare-fun temp10054_198 () (_ BitVec 64))
(declare-fun temp10054_196 () (_ BitVec 64))
(declare-fun temp10054_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10054_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10054_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10054_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10054_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10054_204 () (_ BitVec 64))
(declare-fun temp10054_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10054_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10054_207 () (_ BitVec 64))
(declare-fun temp10054_208 () (_ BitVec 64))
(declare-fun temp10054_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10054_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10054_211 () (_ BitVec 64))
(declare-fun temp10054_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10054_213 () (_ BitVec 64))
(declare-fun temp10054_214 () (_ BitVec 64))
(declare-fun temp10054_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10054_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10054_217 () (_ BitVec 64))
(declare-fun temp10054_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10054_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10054_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp10054_222 () (_ BitVec 64))
(declare-fun temp10054_221 () (_ BitVec 64))
(declare-fun temp10054_223 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp10054_224 () (_ BitVec 64))
(declare-fun temp10054_225 () (_ BitVec 64))
(declare-fun temp10054_226 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp10054_227 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp10054_228 () (_ BitVec 64))
(declare-fun temp10054_230 () (_ BitVec 64))
(declare-fun temp10054_229 () (_ BitVec 64))
(declare-fun temp10054_231 () (_ BitVec 64))
(assert (= temp10054_1 #x0000000000000001))
(assert (= var77203 temp10054_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10054_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10054_2)))
(assert (= temp10054_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10054_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10054_4 #x0000000000000000))
(assert (= var210941 temp10054_4))
(assert (= temp10054_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10054_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10054_6 #x0000000000000000))
(assert (= var210986 temp10054_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10054_7 #x0000000000000000))
(assert (= temp10054_8 temp10054_7))
(assert (= temp10054_9 (select ARGNAME_padding_NAMEEND_VAL temp10054_8)))
(assert (= temp10054_10 #x0000000000000001))
(assert (= temp10054_11 temp10054_10))
(assert (= temp10054_12 (select ARGNAME_padding_NAMEEND_VAL temp10054_11)))
(assert (= temp10054_13 #x0000000000000002))
(assert (= temp10054_14 temp10054_13))
(assert (= temp10054_15 (select ARGNAME_padding_NAMEEND_VAL temp10054_14)))
(assert (= temp10054_16 #x0000000000000003))
(assert (= temp10054_17 temp10054_16))
(assert (= temp10054_18 (select ARGNAME_padding_NAMEEND_VAL temp10054_17)))
(assert (= temp10054_19 #x0000000000000004))
(assert (= temp10054_20 temp10054_19))
(assert (= temp10054_21 (select ARGNAME_padding_NAMEEND_VAL temp10054_20)))
(assert (= temp10054_22 #x0000000000000005))
(assert (= temp10054_23 temp10054_22))
(assert (= temp10054_24 (select ARGNAME_padding_NAMEEND_VAL temp10054_23)))
(assert (= temp10054_25 #x0000000000000000))
(assert (= temp10054_26 #x0000000000000000))
(assert (= temp10054_27 temp10054_26))
(assert (= temp10054_28 (select ARGNAME_padding_NAMEEND_VAL temp10054_27)))
(assert (= temp10054_29 #x0000000000000000))
(assert (= temp10054_30 #x0000000000000001))
(assert (= temp10054_31 temp10054_30))
(assert (= temp10054_32 (select ARGNAME_padding_NAMEEND_VAL temp10054_31)))
(assert (= temp10054_33 #x0000000000000000))
(assert (= temp10054_34 #x0000000000000002))
(assert (= temp10054_35 temp10054_34))
(assert (= temp10054_36 (select ARGNAME_padding_NAMEEND_VAL temp10054_35)))
(assert (= temp10054_37 #x0000000000000000))
(assert (= temp10054_38 #x0000000000000003))
(assert (= temp10054_39 temp10054_38))
(assert (= temp10054_40 (select ARGNAME_padding_NAMEEND_VAL temp10054_39)))
(assert (= temp10054_41 #x0000000000000000))
(assert (= temp10054_42 #x0000000000000004))
(assert (= temp10054_43 temp10054_42))
(assert (= temp10054_44 (select ARGNAME_padding_NAMEEND_VAL temp10054_43)))
(assert (= temp10054_45 #x0000000000000000))
(assert (= temp10054_46 #x0000000000000005))
(assert (= temp10054_47 temp10054_46))
(assert (= temp10054_48 (select ARGNAME_padding_NAMEEND_VAL temp10054_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10054_28 temp10054_25)
             (bvslt temp10054_32 temp10054_29)
             (bvslt temp10054_36 temp10054_33)
             (bvslt temp10054_40 temp10054_37)
             (bvslt temp10054_44 temp10054_41)
             (bvslt temp10054_48 temp10054_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10054_49 #x0000000000000000))
(assert (= var1191714 temp10054_49))
(assert (= temp10054_50 #x0000000000000000))
(assert (= temp10054_51 temp10054_50))
(assert (= temp10054_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10054_51)))
(assert (= temp10054_53 #x0000000000000001))
(assert (= temp10054_54 temp10054_53))
(assert (= temp10054_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10054_54)))
(assert (= temp10054_56 #x0000000000000002))
(assert (= temp10054_57 temp10054_56))
(assert (= temp10054_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10054_57)))
(assert (= temp10054_59 #x0000000000000003))
(assert (= temp10054_60 temp10054_59))
(assert (= temp10054_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10054_60)))
(assert (= temp10054_62 #x0000000000000004))
(assert (= temp10054_63 temp10054_62))
(assert (= temp10054_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10054_63)))
(assert (= temp10054_65 #x0000000000000005))
(assert (= temp10054_66 temp10054_65))
(assert (= temp10054_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10054_66)))
(assert (= temp10054_68 #x0000000000000000))
(assert (= temp10054_69 #x0000000000000000))
(assert (= temp10054_70 temp10054_69))
(assert (= temp10054_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10054_70)))
(assert (= temp10054_72 #x0000000000000000))
(assert (= temp10054_73 #x0000000000000001))
(assert (= temp10054_74 temp10054_73))
(assert (= temp10054_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10054_74)))
(assert (= temp10054_76 #x0000000000000000))
(assert (= temp10054_77 #x0000000000000002))
(assert (= temp10054_78 temp10054_77))
(assert (= temp10054_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10054_78)))
(assert (= temp10054_80 #x0000000000000000))
(assert (= temp10054_81 #x0000000000000003))
(assert (= temp10054_82 temp10054_81))
(assert (= temp10054_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10054_82)))
(assert (= temp10054_84 #x0000000000000000))
(assert (= temp10054_85 #x0000000000000004))
(assert (= temp10054_86 temp10054_85))
(assert (= temp10054_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10054_86)))
(assert (= temp10054_88 #x0000000000000000))
(assert (= temp10054_89 #x0000000000000005))
(assert (= temp10054_90 temp10054_89))
(assert (= temp10054_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10054_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10054_71 temp10054_68)
             (bvslt temp10054_75 temp10054_72)
             (bvslt temp10054_79 temp10054_76)
             (bvslt temp10054_83 temp10054_80)
             (bvslt temp10054_87 temp10054_84)
             (bvslt temp10054_91 temp10054_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10054_92 #x0000000000000000))
(assert (= var1191725 temp10054_92))
(assert (= temp10054_93 #x0000000000000000))
(assert (= temp10054_94 temp10054_93))
(assert (= temp10054_95 (select ARGNAME_stride_NAMEEND_VAL temp10054_94)))
(assert (= temp10054_96 #x0000000000000001))
(assert (= temp10054_97 temp10054_96))
(assert (= temp10054_98 (select ARGNAME_stride_NAMEEND_VAL temp10054_97)))
(assert (= temp10054_99 #x0000000000000002))
(assert (= temp10054_100 temp10054_99))
(assert (= temp10054_101 (select ARGNAME_stride_NAMEEND_VAL temp10054_100)))
(assert (= temp10054_102 #x0000000000000003))
(assert (= temp10054_103 temp10054_102))
(assert (= temp10054_104 (select ARGNAME_stride_NAMEEND_VAL temp10054_103)))
(assert (= temp10054_105 #x0000000000000004))
(assert (= temp10054_106 temp10054_105))
(assert (= temp10054_107 (select ARGNAME_stride_NAMEEND_VAL temp10054_106)))
(assert (= temp10054_108 #x0000000000000005))
(assert (= temp10054_109 temp10054_108))
(assert (= temp10054_110 (select ARGNAME_stride_NAMEEND_VAL temp10054_109)))
(assert (= temp10054_111 #x0000000000000000))
(assert (= temp10054_112 #x0000000000000000))
(assert (= temp10054_113 temp10054_112))
(assert (= temp10054_114 (select ARGNAME_stride_NAMEEND_VAL temp10054_113)))
(assert (= temp10054_115 #x0000000000000000))
(assert (= temp10054_116 #x0000000000000001))
(assert (= temp10054_117 temp10054_116))
(assert (= temp10054_118 (select ARGNAME_stride_NAMEEND_VAL temp10054_117)))
(assert (= temp10054_119 #x0000000000000000))
(assert (= temp10054_120 #x0000000000000002))
(assert (= temp10054_121 temp10054_120))
(assert (= temp10054_122 (select ARGNAME_stride_NAMEEND_VAL temp10054_121)))
(assert (= temp10054_123 #x0000000000000000))
(assert (= temp10054_124 #x0000000000000003))
(assert (= temp10054_125 temp10054_124))
(assert (= temp10054_126 (select ARGNAME_stride_NAMEEND_VAL temp10054_125)))
(assert (= temp10054_127 #x0000000000000000))
(assert (= temp10054_128 #x0000000000000004))
(assert (= temp10054_129 temp10054_128))
(assert (= temp10054_130 (select ARGNAME_stride_NAMEEND_VAL temp10054_129)))
(assert (= temp10054_131 #x0000000000000000))
(assert (= temp10054_132 #x0000000000000005))
(assert (= temp10054_133 temp10054_132))
(assert (= temp10054_134 (select ARGNAME_stride_NAMEEND_VAL temp10054_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10054_114 temp10054_111)
             (bvsle temp10054_118 temp10054_115)
             (bvsle temp10054_122 temp10054_119)
             (bvsle temp10054_126 temp10054_123)
             (bvsle temp10054_130 temp10054_127)
             (bvsle temp10054_134 temp10054_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10054_135 #x0000000000000000))
(assert (= var1191735 temp10054_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10054_136 #x0000000000000001))
(assert (= var1191747 temp10054_136))
(assert (= temp10054_137 #x0000000000000000))
(assert (= var1179826 temp10054_137))
(assert (= temp10054_138 #x0000000000000000))
(assert (= temp10054_139 temp10054_138))
(assert (= temp10054_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10054_139)))
(assert (= temp10054_141 #x0000000000000001))
(assert (= temp10054_142 temp10054_141))
(assert (= temp10054_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10054_142)))
(assert (= temp10054_144 #x0000000000000002))
(assert (= temp10054_145 temp10054_144))
(assert (= temp10054_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10054_145)))
(assert (= temp10054_147 #x0000000000000003))
(assert (= temp10054_148 temp10054_147))
(assert (= temp10054_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10054_148)))
(assert (= temp10054_150 #x0000000000000004))
(assert (= temp10054_151 temp10054_150))
(assert (= temp10054_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10054_151)))
(assert (= temp10054_153 #x0000000000000005))
(assert (= temp10054_154 temp10054_153))
(assert (= temp10054_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10054_154)))
(assert (= temp10054_157 var1179826))
(assert (= temp10054_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10054_157)))
(assert (= temp10054_156 temp10054_158))
(assert (= var1191780
   (ite (bvslt temp10054_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10054_159 #x0000000000000000))
(assert (= var1191780 temp10054_159))
(assert (= temp10054_160 #x0000000000000000))
(assert (= var1179826 temp10054_160))
(assert (= temp10054_162 var1179826))
(assert (= temp10054_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10054_162)))
(assert (= temp10054_161 temp10054_163))
(assert (= var1191802 (bvsmod temp10054_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10054_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10054_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10054_165 #x0000000000000001))
(assert (= var1191803 temp10054_165))
(assert (= temp10054_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10054_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10054_167 #x0000000000000001))
(assert (= var1191823 temp10054_167))
(assert (= temp10054_168 #x0000000000000001))
(assert (= var1180714 temp10054_168))
(assert (= temp10054_169 #x0000000000000000))
(assert (= temp10054_170 temp10054_169))
(assert (= temp10054_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10054_170)))
(assert (= temp10054_172 #x0000000000000001))
(assert (= temp10054_173 temp10054_172))
(assert (= temp10054_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10054_173)))
(assert (= temp10054_175 #x0000000000000002))
(assert (= temp10054_176 temp10054_175))
(assert (= temp10054_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10054_176)))
(assert (= temp10054_178 #x0000000000000003))
(assert (= temp10054_179 temp10054_178))
(assert (= temp10054_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10054_179)))
(assert (= temp10054_181 #x0000000000000004))
(assert (= temp10054_182 temp10054_181))
(assert (= temp10054_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10054_182)))
(assert (= temp10054_184 #x0000000000000005))
(assert (= temp10054_185 temp10054_184))
(assert (= temp10054_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10054_185)))
(assert (= temp10054_187 #x0000000000000000))
(assert (= temp10054_188
   (ite (bvslt var1180714 temp10054_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10054_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10054_188)))
(assert (= var1191831 temp10054_189))
(assert (bvslt (ite (bvslt var1180714 temp10054_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10054_190 #x0000000000000001))
(assert (= var1180714 temp10054_190))
(assert (= temp10054_192 var1180714))
(assert (= temp10054_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10054_192)))
(assert (= temp10054_191 temp10054_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10054_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10054_194 #x0000000000000001))
(assert (= var1191836 temp10054_194))
(assert (= temp10054_195 #x0000000000000000))
(assert (= var1179826 temp10054_195))
(assert (= temp10054_197 var1179826))
(assert (= temp10054_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10054_197)))
(assert (= temp10054_196 temp10054_198))
(assert (= temp10054_199 #x0000000000000002))
(assert (= var1586025 temp10054_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10054_200 #x0000000000000001))
(assert (= var1191993 temp10054_200))
(assert (= temp10054_201 #x0000000000000001))
(assert (= var2700303 temp10054_201))
(assert (= temp10054_202 #x0000000000000001))
(assert (= var2962447 temp10054_202))
(assert (= temp10054_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10054_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10054_204 #x0000000000000001))
(assert (= var211058 temp10054_204))
(assert (= temp10054_205 #x0000000000000001))
(assert (= var211188 temp10054_205))
(assert (= var3879401 var211188))
(assert (= temp10054_206 #x0000000000000000))
(assert (= var3866802 temp10054_206))
(assert (= temp10054_207 #x0000000000000000))
(assert (= temp10054_208
   (ite (bvslt var3866802 temp10054_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10054_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10054_208)))
(assert (= var3879420 temp10054_209))
(assert (bvslt (ite (bvslt var3866802 temp10054_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10054_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10054_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10054_211 #x0000000000000000))
(assert (= var3879421 temp10054_211))
(assert (= temp10054_212 #x0000000000000001))
(assert (= var3867690 temp10054_212))
(assert (= temp10054_213 #x0000000000000000))
(assert (= temp10054_214
   (ite (bvslt var3867690 temp10054_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10054_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10054_214)))
(assert (= var3879423 temp10054_215))
(assert (bvslt (ite (bvslt var3867690 temp10054_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10054_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10054_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10054_217 #x0000000000000001))
(assert (= var3879424 temp10054_217))
(assert (= temp10054_218 #x0000000000000000))
(assert (= var4079423 temp10054_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10054_219 #x0000000000000002))
(assert (= var4208259 temp10054_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10054_220 #x0000000000000000))
(assert (= var4273820 temp10054_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp10054_222 #xffffffffffffffff))
(assert (= temp10054_221 temp10054_222))
(assert (= temp10054_223 #x0000000000000001))
(assert (= var197674 temp10054_223))
(assert (= temp10054_224 #x0000000000000000))
(assert (= temp10054_225
   (ite (bvslt var197674 temp10054_224)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp10054_226 (select ARGNAME_input_NAMEEND_DIMSIZE temp10054_225)))
(assert (= var211595 temp10054_226))
(assert (bvslt (ite (bvslt var197674 temp10054_224)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10054_227 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp10054_227) #x0000000000000001 #x0000000000000000)))
(assert (= temp10054_228 #x0000000000000001))
(assert (= var211596 temp10054_228))
(assert (= temp10054_230 #xffffffffffffffff))
(assert (= temp10054_229 temp10054_230))
(assert (= temp10054_231 #x0000000000000001))
(assert (= var211058 temp10054_231))
(model-add temp10054_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10054_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10054_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10054_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





