(declare-fun temp126_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp126_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp126_3 () (_ BitVec 64))
(declare-fun temp126_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp126_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp126_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp126_7 () (_ BitVec 64))
(declare-fun temp126_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp126_9 () (_ BitVec 64))
(declare-fun temp126_10 () (_ BitVec 64))
(declare-fun temp126_11 () (_ BitVec 64))
(declare-fun temp126_12 () (_ BitVec 64))
(declare-fun temp126_13 () (_ BitVec 64))
(declare-fun temp126_14 () (_ BitVec 64))
(declare-fun temp126_15 () (_ BitVec 64))
(declare-fun temp126_16 () (_ BitVec 64))
(declare-fun temp126_17 () (_ BitVec 64))
(declare-fun temp126_18 () (_ BitVec 64))
(declare-fun temp126_19 () (_ BitVec 64))
(declare-fun temp126_20 () (_ BitVec 64))
(declare-fun temp126_21 () (_ BitVec 64))
(declare-fun temp126_22 () (_ BitVec 64))
(declare-fun temp126_23 () (_ BitVec 64))
(declare-fun temp126_24 () (_ BitVec 64))
(declare-fun temp126_25 () (_ BitVec 64))
(declare-fun temp126_26 () (_ BitVec 64))
(declare-fun temp126_27 () (_ BitVec 64))
(declare-fun temp126_28 () (_ BitVec 64))
(declare-fun temp126_29 () (_ BitVec 64))
(declare-fun temp126_30 () (_ BitVec 64))
(declare-fun temp126_31 () (_ BitVec 64))
(declare-fun temp126_32 () (_ BitVec 64))
(declare-fun temp126_33 () (_ BitVec 64))
(declare-fun temp126_34 () (_ BitVec 64))
(declare-fun temp126_35 () (_ BitVec 64))
(declare-fun temp126_36 () (_ BitVec 64))
(declare-fun temp126_37 () (_ BitVec 64))
(declare-fun temp126_38 () (_ BitVec 64))
(declare-fun temp126_39 () (_ BitVec 64))
(declare-fun temp126_40 () (_ BitVec 64))
(declare-fun temp126_41 () (_ BitVec 64))
(declare-fun temp126_42 () (_ BitVec 64))
(declare-fun temp126_43 () (_ BitVec 64))
(declare-fun temp126_44 () (_ BitVec 64))
(declare-fun temp126_45 () (_ BitVec 64))
(declare-fun temp126_46 () (_ BitVec 64))
(declare-fun temp126_47 () (_ BitVec 64))
(declare-fun temp126_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp126_49 () (_ BitVec 64))
(declare-fun temp126_50 () (_ BitVec 64))
(declare-fun temp126_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp126_52 () (_ BitVec 64))
(declare-fun temp126_53 () (_ BitVec 64))
(declare-fun temp126_54 () (_ BitVec 64))
(declare-fun temp126_55 () (_ BitVec 64))
(declare-fun temp126_56 () (_ BitVec 64))
(declare-fun temp126_57 () (_ BitVec 64))
(declare-fun temp126_58 () (_ BitVec 64))
(declare-fun temp126_59 () (_ BitVec 64))
(declare-fun temp126_60 () (_ BitVec 64))
(declare-fun temp126_61 () (_ BitVec 64))
(declare-fun temp126_62 () (_ BitVec 64))
(declare-fun temp126_63 () (_ BitVec 64))
(declare-fun temp126_64 () (_ BitVec 64))
(declare-fun temp126_65 () (_ BitVec 64))
(declare-fun temp126_66 () (_ BitVec 64))
(declare-fun temp126_67 () (_ BitVec 64))
(declare-fun temp126_68 () (_ BitVec 64))
(declare-fun temp126_69 () (_ BitVec 64))
(declare-fun temp126_70 () (_ BitVec 64))
(declare-fun temp126_71 () (_ BitVec 64))
(declare-fun temp126_72 () (_ BitVec 64))
(declare-fun temp126_73 () (_ BitVec 64))
(declare-fun temp126_74 () (_ BitVec 64))
(declare-fun temp126_75 () (_ BitVec 64))
(declare-fun temp126_76 () (_ BitVec 64))
(declare-fun temp126_77 () (_ BitVec 64))
(declare-fun temp126_78 () (_ BitVec 64))
(declare-fun temp126_79 () (_ BitVec 64))
(declare-fun temp126_80 () (_ BitVec 64))
(declare-fun temp126_81 () (_ BitVec 64))
(declare-fun temp126_82 () (_ BitVec 64))
(declare-fun temp126_83 () (_ BitVec 64))
(declare-fun temp126_84 () (_ BitVec 64))
(declare-fun temp126_85 () (_ BitVec 64))
(declare-fun temp126_86 () (_ BitVec 64))
(declare-fun temp126_87 () (_ BitVec 64))
(declare-fun temp126_88 () (_ BitVec 64))
(declare-fun temp126_89 () (_ BitVec 64))
(declare-fun temp126_90 () (_ BitVec 64))
(declare-fun temp126_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp126_92 () (_ BitVec 64))
(declare-fun temp126_93 () (_ BitVec 64))
(declare-fun temp126_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp126_95 () (_ BitVec 64))
(declare-fun temp126_96 () (_ BitVec 64))
(declare-fun temp126_97 () (_ BitVec 64))
(declare-fun temp126_98 () (_ BitVec 64))
(declare-fun temp126_99 () (_ BitVec 64))
(declare-fun temp126_100 () (_ BitVec 64))
(declare-fun temp126_101 () (_ BitVec 64))
(declare-fun temp126_102 () (_ BitVec 64))
(declare-fun temp126_103 () (_ BitVec 64))
(declare-fun temp126_104 () (_ BitVec 64))
(declare-fun temp126_105 () (_ BitVec 64))
(declare-fun temp126_106 () (_ BitVec 64))
(declare-fun temp126_107 () (_ BitVec 64))
(declare-fun temp126_108 () (_ BitVec 64))
(declare-fun temp126_109 () (_ BitVec 64))
(declare-fun temp126_110 () (_ BitVec 64))
(declare-fun temp126_111 () (_ BitVec 64))
(declare-fun temp126_112 () (_ BitVec 64))
(declare-fun temp126_113 () (_ BitVec 64))
(declare-fun temp126_114 () (_ BitVec 64))
(declare-fun temp126_115 () (_ BitVec 64))
(declare-fun temp126_116 () (_ BitVec 64))
(declare-fun temp126_117 () (_ BitVec 64))
(declare-fun temp126_118 () (_ BitVec 64))
(declare-fun temp126_119 () (_ BitVec 64))
(declare-fun temp126_120 () (_ BitVec 64))
(declare-fun temp126_121 () (_ BitVec 64))
(declare-fun temp126_122 () (_ BitVec 64))
(declare-fun temp126_123 () (_ BitVec 64))
(declare-fun temp126_124 () (_ BitVec 64))
(declare-fun temp126_125 () (_ BitVec 64))
(declare-fun temp126_126 () (_ BitVec 64))
(declare-fun temp126_127 () (_ BitVec 64))
(declare-fun temp126_128 () (_ BitVec 64))
(declare-fun temp126_129 () (_ BitVec 64))
(declare-fun temp126_130 () (_ BitVec 64))
(declare-fun temp126_131 () (_ BitVec 64))
(declare-fun temp126_132 () (_ BitVec 64))
(declare-fun temp126_133 () (_ BitVec 64))
(declare-fun temp126_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp126_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp126_136 () (_ BitVec 64))
(declare-fun temp126_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp126_138 () (_ BitVec 64))
(declare-fun temp126_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp126_140 () (_ BitVec 64))
(declare-fun temp126_141 () (_ BitVec 64))
(declare-fun temp126_142 () (_ BitVec 64))
(declare-fun temp126_143 () (_ BitVec 64))
(declare-fun temp126_144 () (_ BitVec 64))
(declare-fun temp126_145 () (_ BitVec 64))
(declare-fun temp126_146 () (_ BitVec 64))
(declare-fun temp126_147 () (_ BitVec 64))
(declare-fun temp126_148 () (_ BitVec 64))
(declare-fun temp126_149 () (_ BitVec 64))
(declare-fun temp126_150 () (_ BitVec 64))
(declare-fun temp126_151 () (_ BitVec 64))
(declare-fun temp126_152 () (_ BitVec 64))
(declare-fun temp126_153 () (_ BitVec 64))
(declare-fun temp126_154 () (_ BitVec 64))
(declare-fun temp126_155 () (_ BitVec 64))
(declare-fun temp126_157 () (_ BitVec 64))
(declare-fun temp126_158 () (_ BitVec 64))
(declare-fun temp126_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp126_159 () (_ BitVec 64))
(declare-fun temp126_160 () (_ BitVec 64))
(declare-fun temp126_162 () (_ BitVec 64))
(declare-fun temp126_163 () (_ BitVec 64))
(declare-fun temp126_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp126_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp126_165 () (_ BitVec 64))
(declare-fun temp126_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp126_167 () (_ BitVec 64))
(declare-fun temp126_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp126_169 () (_ BitVec 64))
(declare-fun temp126_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp126_171 () (_ BitVec 64))
(declare-fun temp126_172 () (_ BitVec 64))
(declare-fun temp126_173 () (_ BitVec 64))
(declare-fun temp126_174 () (_ BitVec 64))
(declare-fun temp126_175 () (_ BitVec 64))
(declare-fun temp126_176 () (_ BitVec 64))
(declare-fun temp126_177 () (_ BitVec 64))
(declare-fun temp126_178 () (_ BitVec 64))
(declare-fun temp126_179 () (_ BitVec 64))
(declare-fun temp126_180 () (_ BitVec 64))
(declare-fun temp126_181 () (_ BitVec 64))
(declare-fun temp126_182 () (_ BitVec 64))
(declare-fun temp126_183 () (_ BitVec 64))
(declare-fun temp126_184 () (_ BitVec 64))
(declare-fun temp126_185 () (_ BitVec 64))
(declare-fun temp126_186 () (_ BitVec 64))
(declare-fun temp126_187 () (_ BitVec 64))
(declare-fun temp126_188 () (_ BitVec 64))
(declare-fun temp126_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp126_190 () (_ BitVec 64))
(declare-fun temp126_192 () (_ BitVec 64))
(declare-fun temp126_193 () (_ BitVec 64))
(declare-fun temp126_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp126_194 () (_ BitVec 64))
(declare-fun temp126_195 () (_ BitVec 64))
(declare-fun temp126_197 () (_ BitVec 64))
(declare-fun temp126_198 () (_ BitVec 64))
(declare-fun temp126_196 () (_ BitVec 64))
(declare-fun temp126_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp126_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp126_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp126_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp126_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp126_204 () (_ BitVec 64))
(declare-fun temp126_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp126_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp126_207 () (_ BitVec 64))
(declare-fun temp126_208 () (_ BitVec 64))
(declare-fun temp126_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp126_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp126_211 () (_ BitVec 64))
(declare-fun temp126_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp126_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp126_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp126_216 () (_ BitVec 64))
(declare-fun temp126_215 () (_ BitVec 64))
(declare-fun temp126_217 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp126_218 () (_ BitVec 64))
(declare-fun temp126_219 () (_ BitVec 64))
(declare-fun temp126_220 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp126_221 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp126_222 () (_ BitVec 64))
(declare-fun temp126_224 () (_ BitVec 64))
(declare-fun temp126_223 () (_ BitVec 64))
(declare-fun temp126_225 () (_ BitVec 64))
(assert (= temp126_1 #x0000000000000001))
(assert (= var77203 temp126_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp126_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp126_2)))
(assert (= temp126_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp126_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp126_4 #x0000000000000000))
(assert (= var210941 temp126_4))
(assert (= temp126_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp126_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp126_6 #x0000000000000000))
(assert (= var210986 temp126_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp126_7 #x0000000000000000))
(assert (= temp126_8 temp126_7))
(assert (= temp126_9 (select ARGNAME_padding_NAMEEND_VAL temp126_8)))
(assert (= temp126_10 #x0000000000000001))
(assert (= temp126_11 temp126_10))
(assert (= temp126_12 (select ARGNAME_padding_NAMEEND_VAL temp126_11)))
(assert (= temp126_13 #x0000000000000002))
(assert (= temp126_14 temp126_13))
(assert (= temp126_15 (select ARGNAME_padding_NAMEEND_VAL temp126_14)))
(assert (= temp126_16 #x0000000000000003))
(assert (= temp126_17 temp126_16))
(assert (= temp126_18 (select ARGNAME_padding_NAMEEND_VAL temp126_17)))
(assert (= temp126_19 #x0000000000000004))
(assert (= temp126_20 temp126_19))
(assert (= temp126_21 (select ARGNAME_padding_NAMEEND_VAL temp126_20)))
(assert (= temp126_22 #x0000000000000005))
(assert (= temp126_23 temp126_22))
(assert (= temp126_24 (select ARGNAME_padding_NAMEEND_VAL temp126_23)))
(assert (= temp126_25 #x0000000000000000))
(assert (= temp126_26 #x0000000000000000))
(assert (= temp126_27 temp126_26))
(assert (= temp126_28 (select ARGNAME_padding_NAMEEND_VAL temp126_27)))
(assert (= temp126_29 #x0000000000000000))
(assert (= temp126_30 #x0000000000000001))
(assert (= temp126_31 temp126_30))
(assert (= temp126_32 (select ARGNAME_padding_NAMEEND_VAL temp126_31)))
(assert (= temp126_33 #x0000000000000000))
(assert (= temp126_34 #x0000000000000002))
(assert (= temp126_35 temp126_34))
(assert (= temp126_36 (select ARGNAME_padding_NAMEEND_VAL temp126_35)))
(assert (= temp126_37 #x0000000000000000))
(assert (= temp126_38 #x0000000000000003))
(assert (= temp126_39 temp126_38))
(assert (= temp126_40 (select ARGNAME_padding_NAMEEND_VAL temp126_39)))
(assert (= temp126_41 #x0000000000000000))
(assert (= temp126_42 #x0000000000000004))
(assert (= temp126_43 temp126_42))
(assert (= temp126_44 (select ARGNAME_padding_NAMEEND_VAL temp126_43)))
(assert (= temp126_45 #x0000000000000000))
(assert (= temp126_46 #x0000000000000005))
(assert (= temp126_47 temp126_46))
(assert (= temp126_48 (select ARGNAME_padding_NAMEEND_VAL temp126_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp126_28 temp126_25)
             (bvslt temp126_32 temp126_29)
             (bvslt temp126_36 temp126_33)
             (bvslt temp126_40 temp126_37)
             (bvslt temp126_44 temp126_41)
             (bvslt temp126_48 temp126_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp126_49 #x0000000000000000))
(assert (= var1191714 temp126_49))
(assert (= temp126_50 #x0000000000000000))
(assert (= temp126_51 temp126_50))
(assert (= temp126_52 (select ARGNAME_output_padding_NAMEEND_VAL temp126_51)))
(assert (= temp126_53 #x0000000000000001))
(assert (= temp126_54 temp126_53))
(assert (= temp126_55 (select ARGNAME_output_padding_NAMEEND_VAL temp126_54)))
(assert (= temp126_56 #x0000000000000002))
(assert (= temp126_57 temp126_56))
(assert (= temp126_58 (select ARGNAME_output_padding_NAMEEND_VAL temp126_57)))
(assert (= temp126_59 #x0000000000000003))
(assert (= temp126_60 temp126_59))
(assert (= temp126_61 (select ARGNAME_output_padding_NAMEEND_VAL temp126_60)))
(assert (= temp126_62 #x0000000000000004))
(assert (= temp126_63 temp126_62))
(assert (= temp126_64 (select ARGNAME_output_padding_NAMEEND_VAL temp126_63)))
(assert (= temp126_65 #x0000000000000005))
(assert (= temp126_66 temp126_65))
(assert (= temp126_67 (select ARGNAME_output_padding_NAMEEND_VAL temp126_66)))
(assert (= temp126_68 #x0000000000000000))
(assert (= temp126_69 #x0000000000000000))
(assert (= temp126_70 temp126_69))
(assert (= temp126_71 (select ARGNAME_output_padding_NAMEEND_VAL temp126_70)))
(assert (= temp126_72 #x0000000000000000))
(assert (= temp126_73 #x0000000000000001))
(assert (= temp126_74 temp126_73))
(assert (= temp126_75 (select ARGNAME_output_padding_NAMEEND_VAL temp126_74)))
(assert (= temp126_76 #x0000000000000000))
(assert (= temp126_77 #x0000000000000002))
(assert (= temp126_78 temp126_77))
(assert (= temp126_79 (select ARGNAME_output_padding_NAMEEND_VAL temp126_78)))
(assert (= temp126_80 #x0000000000000000))
(assert (= temp126_81 #x0000000000000003))
(assert (= temp126_82 temp126_81))
(assert (= temp126_83 (select ARGNAME_output_padding_NAMEEND_VAL temp126_82)))
(assert (= temp126_84 #x0000000000000000))
(assert (= temp126_85 #x0000000000000004))
(assert (= temp126_86 temp126_85))
(assert (= temp126_87 (select ARGNAME_output_padding_NAMEEND_VAL temp126_86)))
(assert (= temp126_88 #x0000000000000000))
(assert (= temp126_89 #x0000000000000005))
(assert (= temp126_90 temp126_89))
(assert (= temp126_91 (select ARGNAME_output_padding_NAMEEND_VAL temp126_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp126_71 temp126_68)
             (bvslt temp126_75 temp126_72)
             (bvslt temp126_79 temp126_76)
             (bvslt temp126_83 temp126_80)
             (bvslt temp126_87 temp126_84)
             (bvslt temp126_91 temp126_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp126_92 #x0000000000000000))
(assert (= var1191725 temp126_92))
(assert (= temp126_93 #x0000000000000000))
(assert (= temp126_94 temp126_93))
(assert (= temp126_95 (select ARGNAME_stride_NAMEEND_VAL temp126_94)))
(assert (= temp126_96 #x0000000000000001))
(assert (= temp126_97 temp126_96))
(assert (= temp126_98 (select ARGNAME_stride_NAMEEND_VAL temp126_97)))
(assert (= temp126_99 #x0000000000000002))
(assert (= temp126_100 temp126_99))
(assert (= temp126_101 (select ARGNAME_stride_NAMEEND_VAL temp126_100)))
(assert (= temp126_102 #x0000000000000003))
(assert (= temp126_103 temp126_102))
(assert (= temp126_104 (select ARGNAME_stride_NAMEEND_VAL temp126_103)))
(assert (= temp126_105 #x0000000000000004))
(assert (= temp126_106 temp126_105))
(assert (= temp126_107 (select ARGNAME_stride_NAMEEND_VAL temp126_106)))
(assert (= temp126_108 #x0000000000000005))
(assert (= temp126_109 temp126_108))
(assert (= temp126_110 (select ARGNAME_stride_NAMEEND_VAL temp126_109)))
(assert (= temp126_111 #x0000000000000000))
(assert (= temp126_112 #x0000000000000000))
(assert (= temp126_113 temp126_112))
(assert (= temp126_114 (select ARGNAME_stride_NAMEEND_VAL temp126_113)))
(assert (= temp126_115 #x0000000000000000))
(assert (= temp126_116 #x0000000000000001))
(assert (= temp126_117 temp126_116))
(assert (= temp126_118 (select ARGNAME_stride_NAMEEND_VAL temp126_117)))
(assert (= temp126_119 #x0000000000000000))
(assert (= temp126_120 #x0000000000000002))
(assert (= temp126_121 temp126_120))
(assert (= temp126_122 (select ARGNAME_stride_NAMEEND_VAL temp126_121)))
(assert (= temp126_123 #x0000000000000000))
(assert (= temp126_124 #x0000000000000003))
(assert (= temp126_125 temp126_124))
(assert (= temp126_126 (select ARGNAME_stride_NAMEEND_VAL temp126_125)))
(assert (= temp126_127 #x0000000000000000))
(assert (= temp126_128 #x0000000000000004))
(assert (= temp126_129 temp126_128))
(assert (= temp126_130 (select ARGNAME_stride_NAMEEND_VAL temp126_129)))
(assert (= temp126_131 #x0000000000000000))
(assert (= temp126_132 #x0000000000000005))
(assert (= temp126_133 temp126_132))
(assert (= temp126_134 (select ARGNAME_stride_NAMEEND_VAL temp126_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp126_114 temp126_111)
             (bvsle temp126_118 temp126_115)
             (bvsle temp126_122 temp126_119)
             (bvsle temp126_126 temp126_123)
             (bvsle temp126_130 temp126_127)
             (bvsle temp126_134 temp126_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp126_135 #x0000000000000000))
(assert (= var1191735 temp126_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp126_136 #x0000000000000001))
(assert (= var1191747 temp126_136))
(assert (= temp126_137 #x0000000000000000))
(assert (= var1179826 temp126_137))
(assert (= temp126_138 #x0000000000000000))
(assert (= temp126_139 temp126_138))
(assert (= temp126_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp126_139)))
(assert (= temp126_141 #x0000000000000001))
(assert (= temp126_142 temp126_141))
(assert (= temp126_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp126_142)))
(assert (= temp126_144 #x0000000000000002))
(assert (= temp126_145 temp126_144))
(assert (= temp126_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp126_145)))
(assert (= temp126_147 #x0000000000000003))
(assert (= temp126_148 temp126_147))
(assert (= temp126_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp126_148)))
(assert (= temp126_150 #x0000000000000004))
(assert (= temp126_151 temp126_150))
(assert (= temp126_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp126_151)))
(assert (= temp126_153 #x0000000000000005))
(assert (= temp126_154 temp126_153))
(assert (= temp126_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp126_154)))
(assert (= temp126_157 var1179826))
(assert (= temp126_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp126_157)))
(assert (= temp126_156 temp126_158))
(assert (= var1191780
   (ite (bvslt temp126_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp126_159 #x0000000000000000))
(assert (= var1191780 temp126_159))
(assert (= temp126_160 #x0000000000000000))
(assert (= var1179826 temp126_160))
(assert (= temp126_162 var1179826))
(assert (= temp126_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp126_162)))
(assert (= temp126_161 temp126_163))
(assert (= var1191802 (bvsmod temp126_161 ARGNAME_groups_NAMEEND)))
(assert (= temp126_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp126_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp126_165 #x0000000000000001))
(assert (= var1191803 temp126_165))
(assert (= temp126_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp126_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp126_167 #x0000000000000001))
(assert (= var1191823 temp126_167))
(assert (= temp126_168 #x0000000000000001))
(assert (= var1180714 temp126_168))
(assert (= temp126_169 #x0000000000000000))
(assert (= temp126_170 temp126_169))
(assert (= temp126_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp126_170)))
(assert (= temp126_172 #x0000000000000001))
(assert (= temp126_173 temp126_172))
(assert (= temp126_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp126_173)))
(assert (= temp126_175 #x0000000000000002))
(assert (= temp126_176 temp126_175))
(assert (= temp126_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp126_176)))
(assert (= temp126_178 #x0000000000000003))
(assert (= temp126_179 temp126_178))
(assert (= temp126_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp126_179)))
(assert (= temp126_181 #x0000000000000004))
(assert (= temp126_182 temp126_181))
(assert (= temp126_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp126_182)))
(assert (= temp126_184 #x0000000000000005))
(assert (= temp126_185 temp126_184))
(assert (= temp126_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp126_185)))
(assert (= temp126_187 #x0000000000000000))
(assert (= temp126_188
   (ite (bvslt var1180714 temp126_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp126_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp126_188)))
(assert (= var1191831 temp126_189))
(assert (bvslt (ite (bvslt var1180714 temp126_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp126_190 #x0000000000000001))
(assert (= var1180714 temp126_190))
(assert (= temp126_192 var1180714))
(assert (= temp126_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp126_192)))
(assert (= temp126_191 temp126_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp126_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp126_194 #x0000000000000001))
(assert (= var1191836 temp126_194))
(assert (= temp126_195 #x0000000000000000))
(assert (= var1179826 temp126_195))
(assert (= temp126_197 var1179826))
(assert (= temp126_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp126_197)))
(assert (= temp126_196 temp126_198))
(assert (= temp126_199 #x0000000000000002))
(assert (= var1586025 temp126_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp126_200 #x0000000000000001))
(assert (= var1191993 temp126_200))
(assert (= temp126_201 #x0000000000000001))
(assert (= var2700303 temp126_201))
(assert (= temp126_202 #x0000000000000001))
(assert (= var2962447 temp126_202))
(assert (= temp126_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp126_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp126_204 #x0000000000000001))
(assert (= var211058 temp126_204))
(assert (= temp126_205 #x0000000000000001))
(assert (= var211188 temp126_205))
(assert (= var3879401 var211188))
(assert (= temp126_206 #x0000000000000000))
(assert (= var3866802 temp126_206))
(assert (= temp126_207 #x0000000000000000))
(assert (= temp126_208
   (ite (bvslt var3866802 temp126_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp126_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp126_208)))
(assert (= var3879420 temp126_209))
(assert (bvslt (ite (bvslt var3866802 temp126_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp126_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp126_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp126_211 #x0000000000000001))
(assert (= var3879421 temp126_211))
(assert (= temp126_212 #x0000000000000000))
(assert (= var4079423 temp126_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp126_213 #x0000000000000002))
(assert (= var4208259 temp126_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp126_214 #x0000000000000000))
(assert (= var4273820 temp126_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp126_216 #xffffffffffffffff))
(assert (= temp126_215 temp126_216))
(assert (= temp126_217 #x0000000000000001))
(assert (= var197674 temp126_217))
(assert (= temp126_218 #x0000000000000000))
(assert (= temp126_219
   (ite (bvslt var197674 temp126_218)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp126_220 (select ARGNAME_input_NAMEEND_DIMSIZE temp126_219)))
(assert (= var211595 temp126_220))
(assert (bvslt (ite (bvslt var197674 temp126_218)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp126_221 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp126_221) #x0000000000000001 #x0000000000000000)))
(assert (= temp126_222 #x0000000000000001))
(assert (= var211596 temp126_222))
(assert (= temp126_224 #xffffffffffffffff))
(assert (= temp126_223 temp126_224))
(assert (= temp126_225 #x0000000000000001))
(assert (= var211058 temp126_225))
(model-add temp126_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp126_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp126_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp126_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





