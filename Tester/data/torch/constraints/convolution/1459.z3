(declare-fun temp10740_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10740_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10740_3 () (_ BitVec 64))
(declare-fun temp10740_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10740_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10740_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10740_7 () (_ BitVec 64))
(declare-fun temp10740_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10740_9 () (_ BitVec 64))
(declare-fun temp10740_10 () (_ BitVec 64))
(declare-fun temp10740_11 () (_ BitVec 64))
(declare-fun temp10740_12 () (_ BitVec 64))
(declare-fun temp10740_13 () (_ BitVec 64))
(declare-fun temp10740_14 () (_ BitVec 64))
(declare-fun temp10740_15 () (_ BitVec 64))
(declare-fun temp10740_16 () (_ BitVec 64))
(declare-fun temp10740_17 () (_ BitVec 64))
(declare-fun temp10740_18 () (_ BitVec 64))
(declare-fun temp10740_19 () (_ BitVec 64))
(declare-fun temp10740_20 () (_ BitVec 64))
(declare-fun temp10740_21 () (_ BitVec 64))
(declare-fun temp10740_22 () (_ BitVec 64))
(declare-fun temp10740_23 () (_ BitVec 64))
(declare-fun temp10740_24 () (_ BitVec 64))
(declare-fun temp10740_25 () (_ BitVec 64))
(declare-fun temp10740_26 () (_ BitVec 64))
(declare-fun temp10740_27 () (_ BitVec 64))
(declare-fun temp10740_28 () (_ BitVec 64))
(declare-fun temp10740_29 () (_ BitVec 64))
(declare-fun temp10740_30 () (_ BitVec 64))
(declare-fun temp10740_31 () (_ BitVec 64))
(declare-fun temp10740_32 () (_ BitVec 64))
(declare-fun temp10740_33 () (_ BitVec 64))
(declare-fun temp10740_34 () (_ BitVec 64))
(declare-fun temp10740_35 () (_ BitVec 64))
(declare-fun temp10740_36 () (_ BitVec 64))
(declare-fun temp10740_37 () (_ BitVec 64))
(declare-fun temp10740_38 () (_ BitVec 64))
(declare-fun temp10740_39 () (_ BitVec 64))
(declare-fun temp10740_40 () (_ BitVec 64))
(declare-fun temp10740_41 () (_ BitVec 64))
(declare-fun temp10740_42 () (_ BitVec 64))
(declare-fun temp10740_43 () (_ BitVec 64))
(declare-fun temp10740_44 () (_ BitVec 64))
(declare-fun temp10740_45 () (_ BitVec 64))
(declare-fun temp10740_46 () (_ BitVec 64))
(declare-fun temp10740_47 () (_ BitVec 64))
(declare-fun temp10740_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10740_49 () (_ BitVec 64))
(declare-fun temp10740_50 () (_ BitVec 64))
(declare-fun temp10740_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10740_52 () (_ BitVec 64))
(declare-fun temp10740_53 () (_ BitVec 64))
(declare-fun temp10740_54 () (_ BitVec 64))
(declare-fun temp10740_55 () (_ BitVec 64))
(declare-fun temp10740_56 () (_ BitVec 64))
(declare-fun temp10740_57 () (_ BitVec 64))
(declare-fun temp10740_58 () (_ BitVec 64))
(declare-fun temp10740_59 () (_ BitVec 64))
(declare-fun temp10740_60 () (_ BitVec 64))
(declare-fun temp10740_61 () (_ BitVec 64))
(declare-fun temp10740_62 () (_ BitVec 64))
(declare-fun temp10740_63 () (_ BitVec 64))
(declare-fun temp10740_64 () (_ BitVec 64))
(declare-fun temp10740_65 () (_ BitVec 64))
(declare-fun temp10740_66 () (_ BitVec 64))
(declare-fun temp10740_67 () (_ BitVec 64))
(declare-fun temp10740_68 () (_ BitVec 64))
(declare-fun temp10740_69 () (_ BitVec 64))
(declare-fun temp10740_70 () (_ BitVec 64))
(declare-fun temp10740_71 () (_ BitVec 64))
(declare-fun temp10740_72 () (_ BitVec 64))
(declare-fun temp10740_73 () (_ BitVec 64))
(declare-fun temp10740_74 () (_ BitVec 64))
(declare-fun temp10740_75 () (_ BitVec 64))
(declare-fun temp10740_76 () (_ BitVec 64))
(declare-fun temp10740_77 () (_ BitVec 64))
(declare-fun temp10740_78 () (_ BitVec 64))
(declare-fun temp10740_79 () (_ BitVec 64))
(declare-fun temp10740_80 () (_ BitVec 64))
(declare-fun temp10740_81 () (_ BitVec 64))
(declare-fun temp10740_82 () (_ BitVec 64))
(declare-fun temp10740_83 () (_ BitVec 64))
(declare-fun temp10740_84 () (_ BitVec 64))
(declare-fun temp10740_85 () (_ BitVec 64))
(declare-fun temp10740_86 () (_ BitVec 64))
(declare-fun temp10740_87 () (_ BitVec 64))
(declare-fun temp10740_88 () (_ BitVec 64))
(declare-fun temp10740_89 () (_ BitVec 64))
(declare-fun temp10740_90 () (_ BitVec 64))
(declare-fun temp10740_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10740_92 () (_ BitVec 64))
(declare-fun temp10740_93 () (_ BitVec 64))
(declare-fun temp10740_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10740_95 () (_ BitVec 64))
(declare-fun temp10740_96 () (_ BitVec 64))
(declare-fun temp10740_97 () (_ BitVec 64))
(declare-fun temp10740_98 () (_ BitVec 64))
(declare-fun temp10740_99 () (_ BitVec 64))
(declare-fun temp10740_100 () (_ BitVec 64))
(declare-fun temp10740_101 () (_ BitVec 64))
(declare-fun temp10740_102 () (_ BitVec 64))
(declare-fun temp10740_103 () (_ BitVec 64))
(declare-fun temp10740_104 () (_ BitVec 64))
(declare-fun temp10740_105 () (_ BitVec 64))
(declare-fun temp10740_106 () (_ BitVec 64))
(declare-fun temp10740_107 () (_ BitVec 64))
(declare-fun temp10740_108 () (_ BitVec 64))
(declare-fun temp10740_109 () (_ BitVec 64))
(declare-fun temp10740_110 () (_ BitVec 64))
(declare-fun temp10740_111 () (_ BitVec 64))
(declare-fun temp10740_112 () (_ BitVec 64))
(declare-fun temp10740_113 () (_ BitVec 64))
(declare-fun temp10740_114 () (_ BitVec 64))
(declare-fun temp10740_115 () (_ BitVec 64))
(declare-fun temp10740_116 () (_ BitVec 64))
(declare-fun temp10740_117 () (_ BitVec 64))
(declare-fun temp10740_118 () (_ BitVec 64))
(declare-fun temp10740_119 () (_ BitVec 64))
(declare-fun temp10740_120 () (_ BitVec 64))
(declare-fun temp10740_121 () (_ BitVec 64))
(declare-fun temp10740_122 () (_ BitVec 64))
(declare-fun temp10740_123 () (_ BitVec 64))
(declare-fun temp10740_124 () (_ BitVec 64))
(declare-fun temp10740_125 () (_ BitVec 64))
(declare-fun temp10740_126 () (_ BitVec 64))
(declare-fun temp10740_127 () (_ BitVec 64))
(declare-fun temp10740_128 () (_ BitVec 64))
(declare-fun temp10740_129 () (_ BitVec 64))
(declare-fun temp10740_130 () (_ BitVec 64))
(declare-fun temp10740_131 () (_ BitVec 64))
(declare-fun temp10740_132 () (_ BitVec 64))
(declare-fun temp10740_133 () (_ BitVec 64))
(declare-fun temp10740_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10740_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10740_136 () (_ BitVec 64))
(declare-fun temp10740_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10740_138 () (_ BitVec 64))
(declare-fun temp10740_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10740_140 () (_ BitVec 64))
(declare-fun temp10740_141 () (_ BitVec 64))
(declare-fun temp10740_142 () (_ BitVec 64))
(declare-fun temp10740_143 () (_ BitVec 64))
(declare-fun temp10740_144 () (_ BitVec 64))
(declare-fun temp10740_145 () (_ BitVec 64))
(declare-fun temp10740_146 () (_ BitVec 64))
(declare-fun temp10740_147 () (_ BitVec 64))
(declare-fun temp10740_148 () (_ BitVec 64))
(declare-fun temp10740_149 () (_ BitVec 64))
(declare-fun temp10740_150 () (_ BitVec 64))
(declare-fun temp10740_151 () (_ BitVec 64))
(declare-fun temp10740_152 () (_ BitVec 64))
(declare-fun temp10740_153 () (_ BitVec 64))
(declare-fun temp10740_154 () (_ BitVec 64))
(declare-fun temp10740_155 () (_ BitVec 64))
(declare-fun temp10740_157 () (_ BitVec 64))
(declare-fun temp10740_158 () (_ BitVec 64))
(declare-fun temp10740_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10740_159 () (_ BitVec 64))
(declare-fun temp10740_160 () (_ BitVec 64))
(declare-fun temp10740_162 () (_ BitVec 64))
(declare-fun temp10740_163 () (_ BitVec 64))
(declare-fun temp10740_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10740_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10740_165 () (_ BitVec 64))
(declare-fun temp10740_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10740_167 () (_ BitVec 64))
(declare-fun temp10740_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10740_169 () (_ BitVec 64))
(declare-fun temp10740_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10740_171 () (_ BitVec 64))
(declare-fun temp10740_172 () (_ BitVec 64))
(declare-fun temp10740_173 () (_ BitVec 64))
(declare-fun temp10740_174 () (_ BitVec 64))
(declare-fun temp10740_175 () (_ BitVec 64))
(declare-fun temp10740_176 () (_ BitVec 64))
(declare-fun temp10740_177 () (_ BitVec 64))
(declare-fun temp10740_178 () (_ BitVec 64))
(declare-fun temp10740_179 () (_ BitVec 64))
(declare-fun temp10740_180 () (_ BitVec 64))
(declare-fun temp10740_181 () (_ BitVec 64))
(declare-fun temp10740_182 () (_ BitVec 64))
(declare-fun temp10740_183 () (_ BitVec 64))
(declare-fun temp10740_184 () (_ BitVec 64))
(declare-fun temp10740_185 () (_ BitVec 64))
(declare-fun temp10740_186 () (_ BitVec 64))
(declare-fun temp10740_187 () (_ BitVec 64))
(declare-fun temp10740_188 () (_ BitVec 64))
(declare-fun temp10740_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10740_190 () (_ BitVec 64))
(declare-fun temp10740_192 () (_ BitVec 64))
(declare-fun temp10740_193 () (_ BitVec 64))
(declare-fun temp10740_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10740_194 () (_ BitVec 64))
(declare-fun temp10740_195 () (_ BitVec 64))
(declare-fun temp10740_197 () (_ BitVec 64))
(declare-fun temp10740_198 () (_ BitVec 64))
(declare-fun temp10740_196 () (_ BitVec 64))
(declare-fun temp10740_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10740_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10740_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10740_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10740_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10740_204 () (_ BitVec 64))
(declare-fun temp10740_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10740_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10740_207 () (_ BitVec 64))
(declare-fun temp10740_208 () (_ BitVec 64))
(declare-fun temp10740_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10740_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10740_211 () (_ BitVec 64))
(declare-fun temp10740_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10740_213 () (_ BitVec 64))
(declare-fun temp10740_214 () (_ BitVec 64))
(declare-fun temp10740_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10740_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10740_217 () (_ BitVec 64))
(declare-fun temp10740_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10740_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10740_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var4927888 () (_ BitVec 64))
(declare-fun var211820 () (_ BitVec 64))
(declare-fun temp10740_221 () (_ BitVec 64))
(declare-fun var211821 () (_ BitVec 64))
(declare-fun temp10740_222 () (_ BitVec 64))
(declare-fun temp10740_223 () (_ BitVec 64))
(declare-fun var6304532 () (_ BitVec 64))
(declare-fun var6304499 () (_ BitVec 64))
(declare-fun var6173063 () (_ BitVec 64))
(declare-fun var6173059 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp10740_224 () (_ BitVec 64))
(assert (= temp10740_1 #x0000000000000001))
(assert (= var77203 temp10740_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10740_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10740_2)))
(assert (= temp10740_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10740_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10740_4 #x0000000000000000))
(assert (= var210941 temp10740_4))
(assert (= temp10740_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10740_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10740_6 #x0000000000000000))
(assert (= var210986 temp10740_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10740_7 #x0000000000000000))
(assert (= temp10740_8 temp10740_7))
(assert (= temp10740_9 (select ARGNAME_padding_NAMEEND_VAL temp10740_8)))
(assert (= temp10740_10 #x0000000000000001))
(assert (= temp10740_11 temp10740_10))
(assert (= temp10740_12 (select ARGNAME_padding_NAMEEND_VAL temp10740_11)))
(assert (= temp10740_13 #x0000000000000002))
(assert (= temp10740_14 temp10740_13))
(assert (= temp10740_15 (select ARGNAME_padding_NAMEEND_VAL temp10740_14)))
(assert (= temp10740_16 #x0000000000000003))
(assert (= temp10740_17 temp10740_16))
(assert (= temp10740_18 (select ARGNAME_padding_NAMEEND_VAL temp10740_17)))
(assert (= temp10740_19 #x0000000000000004))
(assert (= temp10740_20 temp10740_19))
(assert (= temp10740_21 (select ARGNAME_padding_NAMEEND_VAL temp10740_20)))
(assert (= temp10740_22 #x0000000000000005))
(assert (= temp10740_23 temp10740_22))
(assert (= temp10740_24 (select ARGNAME_padding_NAMEEND_VAL temp10740_23)))
(assert (= temp10740_25 #x0000000000000000))
(assert (= temp10740_26 #x0000000000000000))
(assert (= temp10740_27 temp10740_26))
(assert (= temp10740_28 (select ARGNAME_padding_NAMEEND_VAL temp10740_27)))
(assert (= temp10740_29 #x0000000000000000))
(assert (= temp10740_30 #x0000000000000001))
(assert (= temp10740_31 temp10740_30))
(assert (= temp10740_32 (select ARGNAME_padding_NAMEEND_VAL temp10740_31)))
(assert (= temp10740_33 #x0000000000000000))
(assert (= temp10740_34 #x0000000000000002))
(assert (= temp10740_35 temp10740_34))
(assert (= temp10740_36 (select ARGNAME_padding_NAMEEND_VAL temp10740_35)))
(assert (= temp10740_37 #x0000000000000000))
(assert (= temp10740_38 #x0000000000000003))
(assert (= temp10740_39 temp10740_38))
(assert (= temp10740_40 (select ARGNAME_padding_NAMEEND_VAL temp10740_39)))
(assert (= temp10740_41 #x0000000000000000))
(assert (= temp10740_42 #x0000000000000004))
(assert (= temp10740_43 temp10740_42))
(assert (= temp10740_44 (select ARGNAME_padding_NAMEEND_VAL temp10740_43)))
(assert (= temp10740_45 #x0000000000000000))
(assert (= temp10740_46 #x0000000000000005))
(assert (= temp10740_47 temp10740_46))
(assert (= temp10740_48 (select ARGNAME_padding_NAMEEND_VAL temp10740_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10740_28 temp10740_25)
             (bvslt temp10740_32 temp10740_29)
             (bvslt temp10740_36 temp10740_33)
             (bvslt temp10740_40 temp10740_37)
             (bvslt temp10740_44 temp10740_41)
             (bvslt temp10740_48 temp10740_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10740_49 #x0000000000000000))
(assert (= var1191714 temp10740_49))
(assert (= temp10740_50 #x0000000000000000))
(assert (= temp10740_51 temp10740_50))
(assert (= temp10740_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10740_51)))
(assert (= temp10740_53 #x0000000000000001))
(assert (= temp10740_54 temp10740_53))
(assert (= temp10740_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10740_54)))
(assert (= temp10740_56 #x0000000000000002))
(assert (= temp10740_57 temp10740_56))
(assert (= temp10740_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10740_57)))
(assert (= temp10740_59 #x0000000000000003))
(assert (= temp10740_60 temp10740_59))
(assert (= temp10740_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10740_60)))
(assert (= temp10740_62 #x0000000000000004))
(assert (= temp10740_63 temp10740_62))
(assert (= temp10740_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10740_63)))
(assert (= temp10740_65 #x0000000000000005))
(assert (= temp10740_66 temp10740_65))
(assert (= temp10740_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10740_66)))
(assert (= temp10740_68 #x0000000000000000))
(assert (= temp10740_69 #x0000000000000000))
(assert (= temp10740_70 temp10740_69))
(assert (= temp10740_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10740_70)))
(assert (= temp10740_72 #x0000000000000000))
(assert (= temp10740_73 #x0000000000000001))
(assert (= temp10740_74 temp10740_73))
(assert (= temp10740_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10740_74)))
(assert (= temp10740_76 #x0000000000000000))
(assert (= temp10740_77 #x0000000000000002))
(assert (= temp10740_78 temp10740_77))
(assert (= temp10740_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10740_78)))
(assert (= temp10740_80 #x0000000000000000))
(assert (= temp10740_81 #x0000000000000003))
(assert (= temp10740_82 temp10740_81))
(assert (= temp10740_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10740_82)))
(assert (= temp10740_84 #x0000000000000000))
(assert (= temp10740_85 #x0000000000000004))
(assert (= temp10740_86 temp10740_85))
(assert (= temp10740_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10740_86)))
(assert (= temp10740_88 #x0000000000000000))
(assert (= temp10740_89 #x0000000000000005))
(assert (= temp10740_90 temp10740_89))
(assert (= temp10740_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10740_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10740_71 temp10740_68)
             (bvslt temp10740_75 temp10740_72)
             (bvslt temp10740_79 temp10740_76)
             (bvslt temp10740_83 temp10740_80)
             (bvslt temp10740_87 temp10740_84)
             (bvslt temp10740_91 temp10740_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10740_92 #x0000000000000000))
(assert (= var1191725 temp10740_92))
(assert (= temp10740_93 #x0000000000000000))
(assert (= temp10740_94 temp10740_93))
(assert (= temp10740_95 (select ARGNAME_stride_NAMEEND_VAL temp10740_94)))
(assert (= temp10740_96 #x0000000000000001))
(assert (= temp10740_97 temp10740_96))
(assert (= temp10740_98 (select ARGNAME_stride_NAMEEND_VAL temp10740_97)))
(assert (= temp10740_99 #x0000000000000002))
(assert (= temp10740_100 temp10740_99))
(assert (= temp10740_101 (select ARGNAME_stride_NAMEEND_VAL temp10740_100)))
(assert (= temp10740_102 #x0000000000000003))
(assert (= temp10740_103 temp10740_102))
(assert (= temp10740_104 (select ARGNAME_stride_NAMEEND_VAL temp10740_103)))
(assert (= temp10740_105 #x0000000000000004))
(assert (= temp10740_106 temp10740_105))
(assert (= temp10740_107 (select ARGNAME_stride_NAMEEND_VAL temp10740_106)))
(assert (= temp10740_108 #x0000000000000005))
(assert (= temp10740_109 temp10740_108))
(assert (= temp10740_110 (select ARGNAME_stride_NAMEEND_VAL temp10740_109)))
(assert (= temp10740_111 #x0000000000000000))
(assert (= temp10740_112 #x0000000000000000))
(assert (= temp10740_113 temp10740_112))
(assert (= temp10740_114 (select ARGNAME_stride_NAMEEND_VAL temp10740_113)))
(assert (= temp10740_115 #x0000000000000000))
(assert (= temp10740_116 #x0000000000000001))
(assert (= temp10740_117 temp10740_116))
(assert (= temp10740_118 (select ARGNAME_stride_NAMEEND_VAL temp10740_117)))
(assert (= temp10740_119 #x0000000000000000))
(assert (= temp10740_120 #x0000000000000002))
(assert (= temp10740_121 temp10740_120))
(assert (= temp10740_122 (select ARGNAME_stride_NAMEEND_VAL temp10740_121)))
(assert (= temp10740_123 #x0000000000000000))
(assert (= temp10740_124 #x0000000000000003))
(assert (= temp10740_125 temp10740_124))
(assert (= temp10740_126 (select ARGNAME_stride_NAMEEND_VAL temp10740_125)))
(assert (= temp10740_127 #x0000000000000000))
(assert (= temp10740_128 #x0000000000000004))
(assert (= temp10740_129 temp10740_128))
(assert (= temp10740_130 (select ARGNAME_stride_NAMEEND_VAL temp10740_129)))
(assert (= temp10740_131 #x0000000000000000))
(assert (= temp10740_132 #x0000000000000005))
(assert (= temp10740_133 temp10740_132))
(assert (= temp10740_134 (select ARGNAME_stride_NAMEEND_VAL temp10740_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10740_114 temp10740_111)
             (bvsle temp10740_118 temp10740_115)
             (bvsle temp10740_122 temp10740_119)
             (bvsle temp10740_126 temp10740_123)
             (bvsle temp10740_130 temp10740_127)
             (bvsle temp10740_134 temp10740_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10740_135 #x0000000000000000))
(assert (= var1191735 temp10740_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10740_136 #x0000000000000001))
(assert (= var1191747 temp10740_136))
(assert (= temp10740_137 #x0000000000000000))
(assert (= var1179826 temp10740_137))
(assert (= temp10740_138 #x0000000000000000))
(assert (= temp10740_139 temp10740_138))
(assert (= temp10740_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10740_139)))
(assert (= temp10740_141 #x0000000000000001))
(assert (= temp10740_142 temp10740_141))
(assert (= temp10740_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10740_142)))
(assert (= temp10740_144 #x0000000000000002))
(assert (= temp10740_145 temp10740_144))
(assert (= temp10740_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10740_145)))
(assert (= temp10740_147 #x0000000000000003))
(assert (= temp10740_148 temp10740_147))
(assert (= temp10740_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10740_148)))
(assert (= temp10740_150 #x0000000000000004))
(assert (= temp10740_151 temp10740_150))
(assert (= temp10740_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10740_151)))
(assert (= temp10740_153 #x0000000000000005))
(assert (= temp10740_154 temp10740_153))
(assert (= temp10740_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10740_154)))
(assert (= temp10740_157 var1179826))
(assert (= temp10740_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10740_157)))
(assert (= temp10740_156 temp10740_158))
(assert (= var1191780
   (ite (bvslt temp10740_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10740_159 #x0000000000000000))
(assert (= var1191780 temp10740_159))
(assert (= temp10740_160 #x0000000000000000))
(assert (= var1179826 temp10740_160))
(assert (= temp10740_162 var1179826))
(assert (= temp10740_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10740_162)))
(assert (= temp10740_161 temp10740_163))
(assert (= var1191802 (bvsmod temp10740_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10740_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10740_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10740_165 #x0000000000000001))
(assert (= var1191803 temp10740_165))
(assert (= temp10740_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10740_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10740_167 #x0000000000000001))
(assert (= var1191823 temp10740_167))
(assert (= temp10740_168 #x0000000000000001))
(assert (= var1180714 temp10740_168))
(assert (= temp10740_169 #x0000000000000000))
(assert (= temp10740_170 temp10740_169))
(assert (= temp10740_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10740_170)))
(assert (= temp10740_172 #x0000000000000001))
(assert (= temp10740_173 temp10740_172))
(assert (= temp10740_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10740_173)))
(assert (= temp10740_175 #x0000000000000002))
(assert (= temp10740_176 temp10740_175))
(assert (= temp10740_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10740_176)))
(assert (= temp10740_178 #x0000000000000003))
(assert (= temp10740_179 temp10740_178))
(assert (= temp10740_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10740_179)))
(assert (= temp10740_181 #x0000000000000004))
(assert (= temp10740_182 temp10740_181))
(assert (= temp10740_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10740_182)))
(assert (= temp10740_184 #x0000000000000005))
(assert (= temp10740_185 temp10740_184))
(assert (= temp10740_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10740_185)))
(assert (= temp10740_187 #x0000000000000000))
(assert (= temp10740_188
   (ite (bvslt var1180714 temp10740_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10740_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10740_188)))
(assert (= var1191831 temp10740_189))
(assert (bvslt (ite (bvslt var1180714 temp10740_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10740_190 #x0000000000000001))
(assert (= var1180714 temp10740_190))
(assert (= temp10740_192 var1180714))
(assert (= temp10740_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10740_192)))
(assert (= temp10740_191 temp10740_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10740_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10740_194 #x0000000000000001))
(assert (= var1191836 temp10740_194))
(assert (= temp10740_195 #x0000000000000000))
(assert (= var1179826 temp10740_195))
(assert (= temp10740_197 var1179826))
(assert (= temp10740_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10740_197)))
(assert (= temp10740_196 temp10740_198))
(assert (= temp10740_199 #x0000000000000002))
(assert (= var1586025 temp10740_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10740_200 #x0000000000000001))
(assert (= var1191993 temp10740_200))
(assert (= temp10740_201 #x0000000000000001))
(assert (= var2700303 temp10740_201))
(assert (= temp10740_202 #x0000000000000001))
(assert (= var2962447 temp10740_202))
(assert (= temp10740_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10740_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10740_204 #x0000000000000001))
(assert (= var211058 temp10740_204))
(assert (= temp10740_205 #x0000000000000001))
(assert (= var211188 temp10740_205))
(assert (= var3879401 var211188))
(assert (= temp10740_206 #x0000000000000000))
(assert (= var3866802 temp10740_206))
(assert (= temp10740_207 #x0000000000000000))
(assert (= temp10740_208
   (ite (bvslt var3866802 temp10740_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10740_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10740_208)))
(assert (= var3879420 temp10740_209))
(assert (bvslt (ite (bvslt var3866802 temp10740_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10740_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10740_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10740_211 #x0000000000000000))
(assert (= var3879421 temp10740_211))
(assert (= temp10740_212 #x0000000000000001))
(assert (= var3867690 temp10740_212))
(assert (= temp10740_213 #x0000000000000000))
(assert (= temp10740_214
   (ite (bvslt var3867690 temp10740_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10740_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10740_214)))
(assert (= var3879423 temp10740_215))
(assert (bvslt (ite (bvslt var3867690 temp10740_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10740_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10740_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10740_217 #x0000000000000001))
(assert (= var3879424 temp10740_217))
(assert (= temp10740_218 #x0000000000000000))
(assert (= var4133117 temp10740_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10740_219 #x0000000000000002))
(assert (= var4339331 temp10740_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10740_220 #x0000000000000000))
(assert (= var4404892 temp10740_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var4927888 var211201))
(assert (= var211820 var210913))
(assert (= temp10740_221 #x0000000000000000))
(assert (= var211821
   (ite (distinct var211820 temp10740_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10740_222 #x0000000000000001))
(assert (= var211058 temp10740_222))
(assert (= temp10740_223 #x0000000000000000))
(assert (= var6304532 temp10740_223))
(assert (= var6304499 var6304532))
(assert (= var6173063 var6304499))
(assert (= var6173059 var6173063))
(assert (= var212669 var6173059))
(assert (= temp10740_224 #x0000000000000000))
(assert (= var212669 temp10740_224))
(model-add temp10740_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10740_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10740_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10740_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




