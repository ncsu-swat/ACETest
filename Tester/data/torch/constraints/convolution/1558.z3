(declare-fun temp10872_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10872_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10872_3 () (_ BitVec 64))
(declare-fun temp10872_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10872_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10872_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10872_7 () (_ BitVec 64))
(declare-fun temp10872_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10872_9 () (_ BitVec 64))
(declare-fun temp10872_10 () (_ BitVec 64))
(declare-fun temp10872_11 () (_ BitVec 64))
(declare-fun temp10872_12 () (_ BitVec 64))
(declare-fun temp10872_13 () (_ BitVec 64))
(declare-fun temp10872_14 () (_ BitVec 64))
(declare-fun temp10872_15 () (_ BitVec 64))
(declare-fun temp10872_16 () (_ BitVec 64))
(declare-fun temp10872_17 () (_ BitVec 64))
(declare-fun temp10872_18 () (_ BitVec 64))
(declare-fun temp10872_19 () (_ BitVec 64))
(declare-fun temp10872_20 () (_ BitVec 64))
(declare-fun temp10872_21 () (_ BitVec 64))
(declare-fun temp10872_22 () (_ BitVec 64))
(declare-fun temp10872_23 () (_ BitVec 64))
(declare-fun temp10872_24 () (_ BitVec 64))
(declare-fun temp10872_25 () (_ BitVec 64))
(declare-fun temp10872_26 () (_ BitVec 64))
(declare-fun temp10872_27 () (_ BitVec 64))
(declare-fun temp10872_28 () (_ BitVec 64))
(declare-fun temp10872_29 () (_ BitVec 64))
(declare-fun temp10872_30 () (_ BitVec 64))
(declare-fun temp10872_31 () (_ BitVec 64))
(declare-fun temp10872_32 () (_ BitVec 64))
(declare-fun temp10872_33 () (_ BitVec 64))
(declare-fun temp10872_34 () (_ BitVec 64))
(declare-fun temp10872_35 () (_ BitVec 64))
(declare-fun temp10872_36 () (_ BitVec 64))
(declare-fun temp10872_37 () (_ BitVec 64))
(declare-fun temp10872_38 () (_ BitVec 64))
(declare-fun temp10872_39 () (_ BitVec 64))
(declare-fun temp10872_40 () (_ BitVec 64))
(declare-fun temp10872_41 () (_ BitVec 64))
(declare-fun temp10872_42 () (_ BitVec 64))
(declare-fun temp10872_43 () (_ BitVec 64))
(declare-fun temp10872_44 () (_ BitVec 64))
(declare-fun temp10872_45 () (_ BitVec 64))
(declare-fun temp10872_46 () (_ BitVec 64))
(declare-fun temp10872_47 () (_ BitVec 64))
(declare-fun temp10872_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10872_49 () (_ BitVec 64))
(declare-fun temp10872_50 () (_ BitVec 64))
(declare-fun temp10872_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10872_52 () (_ BitVec 64))
(declare-fun temp10872_53 () (_ BitVec 64))
(declare-fun temp10872_54 () (_ BitVec 64))
(declare-fun temp10872_55 () (_ BitVec 64))
(declare-fun temp10872_56 () (_ BitVec 64))
(declare-fun temp10872_57 () (_ BitVec 64))
(declare-fun temp10872_58 () (_ BitVec 64))
(declare-fun temp10872_59 () (_ BitVec 64))
(declare-fun temp10872_60 () (_ BitVec 64))
(declare-fun temp10872_61 () (_ BitVec 64))
(declare-fun temp10872_62 () (_ BitVec 64))
(declare-fun temp10872_63 () (_ BitVec 64))
(declare-fun temp10872_64 () (_ BitVec 64))
(declare-fun temp10872_65 () (_ BitVec 64))
(declare-fun temp10872_66 () (_ BitVec 64))
(declare-fun temp10872_67 () (_ BitVec 64))
(declare-fun temp10872_68 () (_ BitVec 64))
(declare-fun temp10872_69 () (_ BitVec 64))
(declare-fun temp10872_70 () (_ BitVec 64))
(declare-fun temp10872_71 () (_ BitVec 64))
(declare-fun temp10872_72 () (_ BitVec 64))
(declare-fun temp10872_73 () (_ BitVec 64))
(declare-fun temp10872_74 () (_ BitVec 64))
(declare-fun temp10872_75 () (_ BitVec 64))
(declare-fun temp10872_76 () (_ BitVec 64))
(declare-fun temp10872_77 () (_ BitVec 64))
(declare-fun temp10872_78 () (_ BitVec 64))
(declare-fun temp10872_79 () (_ BitVec 64))
(declare-fun temp10872_80 () (_ BitVec 64))
(declare-fun temp10872_81 () (_ BitVec 64))
(declare-fun temp10872_82 () (_ BitVec 64))
(declare-fun temp10872_83 () (_ BitVec 64))
(declare-fun temp10872_84 () (_ BitVec 64))
(declare-fun temp10872_85 () (_ BitVec 64))
(declare-fun temp10872_86 () (_ BitVec 64))
(declare-fun temp10872_87 () (_ BitVec 64))
(declare-fun temp10872_88 () (_ BitVec 64))
(declare-fun temp10872_89 () (_ BitVec 64))
(declare-fun temp10872_90 () (_ BitVec 64))
(declare-fun temp10872_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10872_92 () (_ BitVec 64))
(declare-fun temp10872_93 () (_ BitVec 64))
(declare-fun temp10872_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10872_95 () (_ BitVec 64))
(declare-fun temp10872_96 () (_ BitVec 64))
(declare-fun temp10872_97 () (_ BitVec 64))
(declare-fun temp10872_98 () (_ BitVec 64))
(declare-fun temp10872_99 () (_ BitVec 64))
(declare-fun temp10872_100 () (_ BitVec 64))
(declare-fun temp10872_101 () (_ BitVec 64))
(declare-fun temp10872_102 () (_ BitVec 64))
(declare-fun temp10872_103 () (_ BitVec 64))
(declare-fun temp10872_104 () (_ BitVec 64))
(declare-fun temp10872_105 () (_ BitVec 64))
(declare-fun temp10872_106 () (_ BitVec 64))
(declare-fun temp10872_107 () (_ BitVec 64))
(declare-fun temp10872_108 () (_ BitVec 64))
(declare-fun temp10872_109 () (_ BitVec 64))
(declare-fun temp10872_110 () (_ BitVec 64))
(declare-fun temp10872_111 () (_ BitVec 64))
(declare-fun temp10872_112 () (_ BitVec 64))
(declare-fun temp10872_113 () (_ BitVec 64))
(declare-fun temp10872_114 () (_ BitVec 64))
(declare-fun temp10872_115 () (_ BitVec 64))
(declare-fun temp10872_116 () (_ BitVec 64))
(declare-fun temp10872_117 () (_ BitVec 64))
(declare-fun temp10872_118 () (_ BitVec 64))
(declare-fun temp10872_119 () (_ BitVec 64))
(declare-fun temp10872_120 () (_ BitVec 64))
(declare-fun temp10872_121 () (_ BitVec 64))
(declare-fun temp10872_122 () (_ BitVec 64))
(declare-fun temp10872_123 () (_ BitVec 64))
(declare-fun temp10872_124 () (_ BitVec 64))
(declare-fun temp10872_125 () (_ BitVec 64))
(declare-fun temp10872_126 () (_ BitVec 64))
(declare-fun temp10872_127 () (_ BitVec 64))
(declare-fun temp10872_128 () (_ BitVec 64))
(declare-fun temp10872_129 () (_ BitVec 64))
(declare-fun temp10872_130 () (_ BitVec 64))
(declare-fun temp10872_131 () (_ BitVec 64))
(declare-fun temp10872_132 () (_ BitVec 64))
(declare-fun temp10872_133 () (_ BitVec 64))
(declare-fun temp10872_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10872_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10872_136 () (_ BitVec 64))
(declare-fun temp10872_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10872_138 () (_ BitVec 64))
(declare-fun temp10872_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10872_140 () (_ BitVec 64))
(declare-fun temp10872_141 () (_ BitVec 64))
(declare-fun temp10872_142 () (_ BitVec 64))
(declare-fun temp10872_143 () (_ BitVec 64))
(declare-fun temp10872_144 () (_ BitVec 64))
(declare-fun temp10872_145 () (_ BitVec 64))
(declare-fun temp10872_146 () (_ BitVec 64))
(declare-fun temp10872_147 () (_ BitVec 64))
(declare-fun temp10872_148 () (_ BitVec 64))
(declare-fun temp10872_149 () (_ BitVec 64))
(declare-fun temp10872_150 () (_ BitVec 64))
(declare-fun temp10872_151 () (_ BitVec 64))
(declare-fun temp10872_152 () (_ BitVec 64))
(declare-fun temp10872_153 () (_ BitVec 64))
(declare-fun temp10872_154 () (_ BitVec 64))
(declare-fun temp10872_155 () (_ BitVec 64))
(declare-fun temp10872_157 () (_ BitVec 64))
(declare-fun temp10872_158 () (_ BitVec 64))
(declare-fun temp10872_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10872_159 () (_ BitVec 64))
(declare-fun temp10872_160 () (_ BitVec 64))
(declare-fun temp10872_162 () (_ BitVec 64))
(declare-fun temp10872_163 () (_ BitVec 64))
(declare-fun temp10872_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10872_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10872_165 () (_ BitVec 64))
(declare-fun temp10872_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10872_167 () (_ BitVec 64))
(declare-fun temp10872_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10872_169 () (_ BitVec 64))
(declare-fun temp10872_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10872_171 () (_ BitVec 64))
(declare-fun temp10872_172 () (_ BitVec 64))
(declare-fun temp10872_173 () (_ BitVec 64))
(declare-fun temp10872_174 () (_ BitVec 64))
(declare-fun temp10872_175 () (_ BitVec 64))
(declare-fun temp10872_176 () (_ BitVec 64))
(declare-fun temp10872_177 () (_ BitVec 64))
(declare-fun temp10872_178 () (_ BitVec 64))
(declare-fun temp10872_179 () (_ BitVec 64))
(declare-fun temp10872_180 () (_ BitVec 64))
(declare-fun temp10872_181 () (_ BitVec 64))
(declare-fun temp10872_182 () (_ BitVec 64))
(declare-fun temp10872_183 () (_ BitVec 64))
(declare-fun temp10872_184 () (_ BitVec 64))
(declare-fun temp10872_185 () (_ BitVec 64))
(declare-fun temp10872_186 () (_ BitVec 64))
(declare-fun temp10872_187 () (_ BitVec 64))
(declare-fun temp10872_188 () (_ BitVec 64))
(declare-fun temp10872_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10872_190 () (_ BitVec 64))
(declare-fun temp10872_192 () (_ BitVec 64))
(declare-fun temp10872_193 () (_ BitVec 64))
(declare-fun temp10872_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10872_194 () (_ BitVec 64))
(declare-fun temp10872_195 () (_ BitVec 64))
(declare-fun temp10872_197 () (_ BitVec 64))
(declare-fun temp10872_198 () (_ BitVec 64))
(declare-fun temp10872_196 () (_ BitVec 64))
(declare-fun temp10872_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10872_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10872_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10872_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10872_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10872_204 () (_ BitVec 64))
(declare-fun temp10872_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10872_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10872_207 () (_ BitVec 64))
(declare-fun temp10872_208 () (_ BitVec 64))
(declare-fun temp10872_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10872_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10872_211 () (_ BitVec 64))
(declare-fun temp10872_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10872_213 () (_ BitVec 64))
(declare-fun temp10872_214 () (_ BitVec 64))
(declare-fun temp10872_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10872_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10872_217 () (_ BitVec 64))
(declare-fun temp10872_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10872_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10872_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var5714320 () (_ BitVec 64))
(declare-fun var5976464 () (_ BitVec 64))
(declare-fun temp10872_221 () (_ BitVec 64))
(declare-fun var6304144 () (_ BitVec 64))
(declare-fun temp10872_222 () (_ BitVec 64))
(assert (= temp10872_1 #x0000000000000001))
(assert (= var77203 temp10872_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10872_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10872_2)))
(assert (= temp10872_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10872_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10872_4 #x0000000000000000))
(assert (= var210941 temp10872_4))
(assert (= temp10872_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10872_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10872_6 #x0000000000000000))
(assert (= var210986 temp10872_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10872_7 #x0000000000000000))
(assert (= temp10872_8 temp10872_7))
(assert (= temp10872_9 (select ARGNAME_padding_NAMEEND_VAL temp10872_8)))
(assert (= temp10872_10 #x0000000000000001))
(assert (= temp10872_11 temp10872_10))
(assert (= temp10872_12 (select ARGNAME_padding_NAMEEND_VAL temp10872_11)))
(assert (= temp10872_13 #x0000000000000002))
(assert (= temp10872_14 temp10872_13))
(assert (= temp10872_15 (select ARGNAME_padding_NAMEEND_VAL temp10872_14)))
(assert (= temp10872_16 #x0000000000000003))
(assert (= temp10872_17 temp10872_16))
(assert (= temp10872_18 (select ARGNAME_padding_NAMEEND_VAL temp10872_17)))
(assert (= temp10872_19 #x0000000000000004))
(assert (= temp10872_20 temp10872_19))
(assert (= temp10872_21 (select ARGNAME_padding_NAMEEND_VAL temp10872_20)))
(assert (= temp10872_22 #x0000000000000005))
(assert (= temp10872_23 temp10872_22))
(assert (= temp10872_24 (select ARGNAME_padding_NAMEEND_VAL temp10872_23)))
(assert (= temp10872_25 #x0000000000000000))
(assert (= temp10872_26 #x0000000000000000))
(assert (= temp10872_27 temp10872_26))
(assert (= temp10872_28 (select ARGNAME_padding_NAMEEND_VAL temp10872_27)))
(assert (= temp10872_29 #x0000000000000000))
(assert (= temp10872_30 #x0000000000000001))
(assert (= temp10872_31 temp10872_30))
(assert (= temp10872_32 (select ARGNAME_padding_NAMEEND_VAL temp10872_31)))
(assert (= temp10872_33 #x0000000000000000))
(assert (= temp10872_34 #x0000000000000002))
(assert (= temp10872_35 temp10872_34))
(assert (= temp10872_36 (select ARGNAME_padding_NAMEEND_VAL temp10872_35)))
(assert (= temp10872_37 #x0000000000000000))
(assert (= temp10872_38 #x0000000000000003))
(assert (= temp10872_39 temp10872_38))
(assert (= temp10872_40 (select ARGNAME_padding_NAMEEND_VAL temp10872_39)))
(assert (= temp10872_41 #x0000000000000000))
(assert (= temp10872_42 #x0000000000000004))
(assert (= temp10872_43 temp10872_42))
(assert (= temp10872_44 (select ARGNAME_padding_NAMEEND_VAL temp10872_43)))
(assert (= temp10872_45 #x0000000000000000))
(assert (= temp10872_46 #x0000000000000005))
(assert (= temp10872_47 temp10872_46))
(assert (= temp10872_48 (select ARGNAME_padding_NAMEEND_VAL temp10872_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10872_28 temp10872_25)
             (bvslt temp10872_32 temp10872_29)
             (bvslt temp10872_36 temp10872_33)
             (bvslt temp10872_40 temp10872_37)
             (bvslt temp10872_44 temp10872_41)
             (bvslt temp10872_48 temp10872_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10872_49 #x0000000000000000))
(assert (= var1191714 temp10872_49))
(assert (= temp10872_50 #x0000000000000000))
(assert (= temp10872_51 temp10872_50))
(assert (= temp10872_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10872_51)))
(assert (= temp10872_53 #x0000000000000001))
(assert (= temp10872_54 temp10872_53))
(assert (= temp10872_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10872_54)))
(assert (= temp10872_56 #x0000000000000002))
(assert (= temp10872_57 temp10872_56))
(assert (= temp10872_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10872_57)))
(assert (= temp10872_59 #x0000000000000003))
(assert (= temp10872_60 temp10872_59))
(assert (= temp10872_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10872_60)))
(assert (= temp10872_62 #x0000000000000004))
(assert (= temp10872_63 temp10872_62))
(assert (= temp10872_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10872_63)))
(assert (= temp10872_65 #x0000000000000005))
(assert (= temp10872_66 temp10872_65))
(assert (= temp10872_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10872_66)))
(assert (= temp10872_68 #x0000000000000000))
(assert (= temp10872_69 #x0000000000000000))
(assert (= temp10872_70 temp10872_69))
(assert (= temp10872_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10872_70)))
(assert (= temp10872_72 #x0000000000000000))
(assert (= temp10872_73 #x0000000000000001))
(assert (= temp10872_74 temp10872_73))
(assert (= temp10872_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10872_74)))
(assert (= temp10872_76 #x0000000000000000))
(assert (= temp10872_77 #x0000000000000002))
(assert (= temp10872_78 temp10872_77))
(assert (= temp10872_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10872_78)))
(assert (= temp10872_80 #x0000000000000000))
(assert (= temp10872_81 #x0000000000000003))
(assert (= temp10872_82 temp10872_81))
(assert (= temp10872_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10872_82)))
(assert (= temp10872_84 #x0000000000000000))
(assert (= temp10872_85 #x0000000000000004))
(assert (= temp10872_86 temp10872_85))
(assert (= temp10872_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10872_86)))
(assert (= temp10872_88 #x0000000000000000))
(assert (= temp10872_89 #x0000000000000005))
(assert (= temp10872_90 temp10872_89))
(assert (= temp10872_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10872_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10872_71 temp10872_68)
             (bvslt temp10872_75 temp10872_72)
             (bvslt temp10872_79 temp10872_76)
             (bvslt temp10872_83 temp10872_80)
             (bvslt temp10872_87 temp10872_84)
             (bvslt temp10872_91 temp10872_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10872_92 #x0000000000000000))
(assert (= var1191725 temp10872_92))
(assert (= temp10872_93 #x0000000000000000))
(assert (= temp10872_94 temp10872_93))
(assert (= temp10872_95 (select ARGNAME_stride_NAMEEND_VAL temp10872_94)))
(assert (= temp10872_96 #x0000000000000001))
(assert (= temp10872_97 temp10872_96))
(assert (= temp10872_98 (select ARGNAME_stride_NAMEEND_VAL temp10872_97)))
(assert (= temp10872_99 #x0000000000000002))
(assert (= temp10872_100 temp10872_99))
(assert (= temp10872_101 (select ARGNAME_stride_NAMEEND_VAL temp10872_100)))
(assert (= temp10872_102 #x0000000000000003))
(assert (= temp10872_103 temp10872_102))
(assert (= temp10872_104 (select ARGNAME_stride_NAMEEND_VAL temp10872_103)))
(assert (= temp10872_105 #x0000000000000004))
(assert (= temp10872_106 temp10872_105))
(assert (= temp10872_107 (select ARGNAME_stride_NAMEEND_VAL temp10872_106)))
(assert (= temp10872_108 #x0000000000000005))
(assert (= temp10872_109 temp10872_108))
(assert (= temp10872_110 (select ARGNAME_stride_NAMEEND_VAL temp10872_109)))
(assert (= temp10872_111 #x0000000000000000))
(assert (= temp10872_112 #x0000000000000000))
(assert (= temp10872_113 temp10872_112))
(assert (= temp10872_114 (select ARGNAME_stride_NAMEEND_VAL temp10872_113)))
(assert (= temp10872_115 #x0000000000000000))
(assert (= temp10872_116 #x0000000000000001))
(assert (= temp10872_117 temp10872_116))
(assert (= temp10872_118 (select ARGNAME_stride_NAMEEND_VAL temp10872_117)))
(assert (= temp10872_119 #x0000000000000000))
(assert (= temp10872_120 #x0000000000000002))
(assert (= temp10872_121 temp10872_120))
(assert (= temp10872_122 (select ARGNAME_stride_NAMEEND_VAL temp10872_121)))
(assert (= temp10872_123 #x0000000000000000))
(assert (= temp10872_124 #x0000000000000003))
(assert (= temp10872_125 temp10872_124))
(assert (= temp10872_126 (select ARGNAME_stride_NAMEEND_VAL temp10872_125)))
(assert (= temp10872_127 #x0000000000000000))
(assert (= temp10872_128 #x0000000000000004))
(assert (= temp10872_129 temp10872_128))
(assert (= temp10872_130 (select ARGNAME_stride_NAMEEND_VAL temp10872_129)))
(assert (= temp10872_131 #x0000000000000000))
(assert (= temp10872_132 #x0000000000000005))
(assert (= temp10872_133 temp10872_132))
(assert (= temp10872_134 (select ARGNAME_stride_NAMEEND_VAL temp10872_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10872_114 temp10872_111)
             (bvsle temp10872_118 temp10872_115)
             (bvsle temp10872_122 temp10872_119)
             (bvsle temp10872_126 temp10872_123)
             (bvsle temp10872_130 temp10872_127)
             (bvsle temp10872_134 temp10872_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10872_135 #x0000000000000000))
(assert (= var1191735 temp10872_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10872_136 #x0000000000000001))
(assert (= var1191747 temp10872_136))
(assert (= temp10872_137 #x0000000000000000))
(assert (= var1179826 temp10872_137))
(assert (= temp10872_138 #x0000000000000000))
(assert (= temp10872_139 temp10872_138))
(assert (= temp10872_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10872_139)))
(assert (= temp10872_141 #x0000000000000001))
(assert (= temp10872_142 temp10872_141))
(assert (= temp10872_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10872_142)))
(assert (= temp10872_144 #x0000000000000002))
(assert (= temp10872_145 temp10872_144))
(assert (= temp10872_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10872_145)))
(assert (= temp10872_147 #x0000000000000003))
(assert (= temp10872_148 temp10872_147))
(assert (= temp10872_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10872_148)))
(assert (= temp10872_150 #x0000000000000004))
(assert (= temp10872_151 temp10872_150))
(assert (= temp10872_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10872_151)))
(assert (= temp10872_153 #x0000000000000005))
(assert (= temp10872_154 temp10872_153))
(assert (= temp10872_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10872_154)))
(assert (= temp10872_157 var1179826))
(assert (= temp10872_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10872_157)))
(assert (= temp10872_156 temp10872_158))
(assert (= var1191780
   (ite (bvslt temp10872_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10872_159 #x0000000000000000))
(assert (= var1191780 temp10872_159))
(assert (= temp10872_160 #x0000000000000000))
(assert (= var1179826 temp10872_160))
(assert (= temp10872_162 var1179826))
(assert (= temp10872_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10872_162)))
(assert (= temp10872_161 temp10872_163))
(assert (= var1191802 (bvsmod temp10872_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10872_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10872_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10872_165 #x0000000000000001))
(assert (= var1191803 temp10872_165))
(assert (= temp10872_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10872_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10872_167 #x0000000000000001))
(assert (= var1191823 temp10872_167))
(assert (= temp10872_168 #x0000000000000001))
(assert (= var1180714 temp10872_168))
(assert (= temp10872_169 #x0000000000000000))
(assert (= temp10872_170 temp10872_169))
(assert (= temp10872_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10872_170)))
(assert (= temp10872_172 #x0000000000000001))
(assert (= temp10872_173 temp10872_172))
(assert (= temp10872_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10872_173)))
(assert (= temp10872_175 #x0000000000000002))
(assert (= temp10872_176 temp10872_175))
(assert (= temp10872_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10872_176)))
(assert (= temp10872_178 #x0000000000000003))
(assert (= temp10872_179 temp10872_178))
(assert (= temp10872_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10872_179)))
(assert (= temp10872_181 #x0000000000000004))
(assert (= temp10872_182 temp10872_181))
(assert (= temp10872_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10872_182)))
(assert (= temp10872_184 #x0000000000000005))
(assert (= temp10872_185 temp10872_184))
(assert (= temp10872_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10872_185)))
(assert (= temp10872_187 #x0000000000000000))
(assert (= temp10872_188
   (ite (bvslt var1180714 temp10872_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10872_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10872_188)))
(assert (= var1191831 temp10872_189))
(assert (bvslt (ite (bvslt var1180714 temp10872_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10872_190 #x0000000000000001))
(assert (= var1180714 temp10872_190))
(assert (= temp10872_192 var1180714))
(assert (= temp10872_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10872_192)))
(assert (= temp10872_191 temp10872_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10872_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10872_194 #x0000000000000001))
(assert (= var1191836 temp10872_194))
(assert (= temp10872_195 #x0000000000000000))
(assert (= var1179826 temp10872_195))
(assert (= temp10872_197 var1179826))
(assert (= temp10872_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10872_197)))
(assert (= temp10872_196 temp10872_198))
(assert (= temp10872_199 #x0000000000000002))
(assert (= var1586025 temp10872_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10872_200 #x0000000000000001))
(assert (= var1191993 temp10872_200))
(assert (= temp10872_201 #x0000000000000001))
(assert (= var2700303 temp10872_201))
(assert (= temp10872_202 #x0000000000000001))
(assert (= var2962447 temp10872_202))
(assert (= temp10872_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10872_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10872_204 #x0000000000000001))
(assert (= var211058 temp10872_204))
(assert (= temp10872_205 #x0000000000000001))
(assert (= var211188 temp10872_205))
(assert (= var3879401 var211188))
(assert (= temp10872_206 #x0000000000000000))
(assert (= var3866802 temp10872_206))
(assert (= temp10872_207 #x0000000000000000))
(assert (= temp10872_208
   (ite (bvslt var3866802 temp10872_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10872_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10872_208)))
(assert (= var3879420 temp10872_209))
(assert (bvslt (ite (bvslt var3866802 temp10872_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10872_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10872_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10872_211 #x0000000000000000))
(assert (= var3879421 temp10872_211))
(assert (= temp10872_212 #x0000000000000001))
(assert (= var3867690 temp10872_212))
(assert (= temp10872_213 #x0000000000000000))
(assert (= temp10872_214
   (ite (bvslt var3867690 temp10872_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10872_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10872_214)))
(assert (= var3879423 temp10872_215))
(assert (bvslt (ite (bvslt var3867690 temp10872_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10872_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10872_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10872_217 #x0000000000000001))
(assert (= var3879424 temp10872_217))
(assert (= temp10872_218 #x0000000000000000))
(assert (= var4133117 temp10872_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10872_219 #x0000000000000002))
(assert (= var4339331 temp10872_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10872_220 #x0000000000000000))
(assert (= var4404892 temp10872_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var5714320 var211201))
(assert (= var5976464 var211201))
(assert (= temp10872_221 #x0000000000000000))
(assert (= var6304144 temp10872_221))
(assert (= temp10872_222 #x0000000000000001))
(assert (= var211058 temp10872_222))
(model-add temp10872_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10872_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10872_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10872_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




