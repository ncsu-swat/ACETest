(declare-fun temp10784_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10784_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10784_3 () (_ BitVec 64))
(declare-fun temp10784_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10784_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10784_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10784_7 () (_ BitVec 64))
(declare-fun temp10784_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10784_9 () (_ BitVec 64))
(declare-fun temp10784_10 () (_ BitVec 64))
(declare-fun temp10784_11 () (_ BitVec 64))
(declare-fun temp10784_12 () (_ BitVec 64))
(declare-fun temp10784_13 () (_ BitVec 64))
(declare-fun temp10784_14 () (_ BitVec 64))
(declare-fun temp10784_15 () (_ BitVec 64))
(declare-fun temp10784_16 () (_ BitVec 64))
(declare-fun temp10784_17 () (_ BitVec 64))
(declare-fun temp10784_18 () (_ BitVec 64))
(declare-fun temp10784_19 () (_ BitVec 64))
(declare-fun temp10784_20 () (_ BitVec 64))
(declare-fun temp10784_21 () (_ BitVec 64))
(declare-fun temp10784_22 () (_ BitVec 64))
(declare-fun temp10784_23 () (_ BitVec 64))
(declare-fun temp10784_24 () (_ BitVec 64))
(declare-fun temp10784_25 () (_ BitVec 64))
(declare-fun temp10784_26 () (_ BitVec 64))
(declare-fun temp10784_27 () (_ BitVec 64))
(declare-fun temp10784_28 () (_ BitVec 64))
(declare-fun temp10784_29 () (_ BitVec 64))
(declare-fun temp10784_30 () (_ BitVec 64))
(declare-fun temp10784_31 () (_ BitVec 64))
(declare-fun temp10784_32 () (_ BitVec 64))
(declare-fun temp10784_33 () (_ BitVec 64))
(declare-fun temp10784_34 () (_ BitVec 64))
(declare-fun temp10784_35 () (_ BitVec 64))
(declare-fun temp10784_36 () (_ BitVec 64))
(declare-fun temp10784_37 () (_ BitVec 64))
(declare-fun temp10784_38 () (_ BitVec 64))
(declare-fun temp10784_39 () (_ BitVec 64))
(declare-fun temp10784_40 () (_ BitVec 64))
(declare-fun temp10784_41 () (_ BitVec 64))
(declare-fun temp10784_42 () (_ BitVec 64))
(declare-fun temp10784_43 () (_ BitVec 64))
(declare-fun temp10784_44 () (_ BitVec 64))
(declare-fun temp10784_45 () (_ BitVec 64))
(declare-fun temp10784_46 () (_ BitVec 64))
(declare-fun temp10784_47 () (_ BitVec 64))
(declare-fun temp10784_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10784_49 () (_ BitVec 64))
(declare-fun temp10784_50 () (_ BitVec 64))
(declare-fun temp10784_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10784_52 () (_ BitVec 64))
(declare-fun temp10784_53 () (_ BitVec 64))
(declare-fun temp10784_54 () (_ BitVec 64))
(declare-fun temp10784_55 () (_ BitVec 64))
(declare-fun temp10784_56 () (_ BitVec 64))
(declare-fun temp10784_57 () (_ BitVec 64))
(declare-fun temp10784_58 () (_ BitVec 64))
(declare-fun temp10784_59 () (_ BitVec 64))
(declare-fun temp10784_60 () (_ BitVec 64))
(declare-fun temp10784_61 () (_ BitVec 64))
(declare-fun temp10784_62 () (_ BitVec 64))
(declare-fun temp10784_63 () (_ BitVec 64))
(declare-fun temp10784_64 () (_ BitVec 64))
(declare-fun temp10784_65 () (_ BitVec 64))
(declare-fun temp10784_66 () (_ BitVec 64))
(declare-fun temp10784_67 () (_ BitVec 64))
(declare-fun temp10784_68 () (_ BitVec 64))
(declare-fun temp10784_69 () (_ BitVec 64))
(declare-fun temp10784_70 () (_ BitVec 64))
(declare-fun temp10784_71 () (_ BitVec 64))
(declare-fun temp10784_72 () (_ BitVec 64))
(declare-fun temp10784_73 () (_ BitVec 64))
(declare-fun temp10784_74 () (_ BitVec 64))
(declare-fun temp10784_75 () (_ BitVec 64))
(declare-fun temp10784_76 () (_ BitVec 64))
(declare-fun temp10784_77 () (_ BitVec 64))
(declare-fun temp10784_78 () (_ BitVec 64))
(declare-fun temp10784_79 () (_ BitVec 64))
(declare-fun temp10784_80 () (_ BitVec 64))
(declare-fun temp10784_81 () (_ BitVec 64))
(declare-fun temp10784_82 () (_ BitVec 64))
(declare-fun temp10784_83 () (_ BitVec 64))
(declare-fun temp10784_84 () (_ BitVec 64))
(declare-fun temp10784_85 () (_ BitVec 64))
(declare-fun temp10784_86 () (_ BitVec 64))
(declare-fun temp10784_87 () (_ BitVec 64))
(declare-fun temp10784_88 () (_ BitVec 64))
(declare-fun temp10784_89 () (_ BitVec 64))
(declare-fun temp10784_90 () (_ BitVec 64))
(declare-fun temp10784_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10784_92 () (_ BitVec 64))
(declare-fun temp10784_93 () (_ BitVec 64))
(declare-fun temp10784_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10784_95 () (_ BitVec 64))
(declare-fun temp10784_96 () (_ BitVec 64))
(declare-fun temp10784_97 () (_ BitVec 64))
(declare-fun temp10784_98 () (_ BitVec 64))
(declare-fun temp10784_99 () (_ BitVec 64))
(declare-fun temp10784_100 () (_ BitVec 64))
(declare-fun temp10784_101 () (_ BitVec 64))
(declare-fun temp10784_102 () (_ BitVec 64))
(declare-fun temp10784_103 () (_ BitVec 64))
(declare-fun temp10784_104 () (_ BitVec 64))
(declare-fun temp10784_105 () (_ BitVec 64))
(declare-fun temp10784_106 () (_ BitVec 64))
(declare-fun temp10784_107 () (_ BitVec 64))
(declare-fun temp10784_108 () (_ BitVec 64))
(declare-fun temp10784_109 () (_ BitVec 64))
(declare-fun temp10784_110 () (_ BitVec 64))
(declare-fun temp10784_111 () (_ BitVec 64))
(declare-fun temp10784_112 () (_ BitVec 64))
(declare-fun temp10784_113 () (_ BitVec 64))
(declare-fun temp10784_114 () (_ BitVec 64))
(declare-fun temp10784_115 () (_ BitVec 64))
(declare-fun temp10784_116 () (_ BitVec 64))
(declare-fun temp10784_117 () (_ BitVec 64))
(declare-fun temp10784_118 () (_ BitVec 64))
(declare-fun temp10784_119 () (_ BitVec 64))
(declare-fun temp10784_120 () (_ BitVec 64))
(declare-fun temp10784_121 () (_ BitVec 64))
(declare-fun temp10784_122 () (_ BitVec 64))
(declare-fun temp10784_123 () (_ BitVec 64))
(declare-fun temp10784_124 () (_ BitVec 64))
(declare-fun temp10784_125 () (_ BitVec 64))
(declare-fun temp10784_126 () (_ BitVec 64))
(declare-fun temp10784_127 () (_ BitVec 64))
(declare-fun temp10784_128 () (_ BitVec 64))
(declare-fun temp10784_129 () (_ BitVec 64))
(declare-fun temp10784_130 () (_ BitVec 64))
(declare-fun temp10784_131 () (_ BitVec 64))
(declare-fun temp10784_132 () (_ BitVec 64))
(declare-fun temp10784_133 () (_ BitVec 64))
(declare-fun temp10784_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10784_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10784_136 () (_ BitVec 64))
(declare-fun temp10784_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10784_138 () (_ BitVec 64))
(declare-fun temp10784_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10784_140 () (_ BitVec 64))
(declare-fun temp10784_141 () (_ BitVec 64))
(declare-fun temp10784_142 () (_ BitVec 64))
(declare-fun temp10784_143 () (_ BitVec 64))
(declare-fun temp10784_144 () (_ BitVec 64))
(declare-fun temp10784_145 () (_ BitVec 64))
(declare-fun temp10784_146 () (_ BitVec 64))
(declare-fun temp10784_147 () (_ BitVec 64))
(declare-fun temp10784_148 () (_ BitVec 64))
(declare-fun temp10784_149 () (_ BitVec 64))
(declare-fun temp10784_150 () (_ BitVec 64))
(declare-fun temp10784_151 () (_ BitVec 64))
(declare-fun temp10784_152 () (_ BitVec 64))
(declare-fun temp10784_153 () (_ BitVec 64))
(declare-fun temp10784_154 () (_ BitVec 64))
(declare-fun temp10784_155 () (_ BitVec 64))
(declare-fun temp10784_157 () (_ BitVec 64))
(declare-fun temp10784_158 () (_ BitVec 64))
(declare-fun temp10784_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10784_159 () (_ BitVec 64))
(declare-fun temp10784_160 () (_ BitVec 64))
(declare-fun temp10784_162 () (_ BitVec 64))
(declare-fun temp10784_163 () (_ BitVec 64))
(declare-fun temp10784_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10784_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10784_165 () (_ BitVec 64))
(declare-fun temp10784_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10784_167 () (_ BitVec 64))
(declare-fun temp10784_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10784_169 () (_ BitVec 64))
(declare-fun temp10784_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10784_171 () (_ BitVec 64))
(declare-fun temp10784_172 () (_ BitVec 64))
(declare-fun temp10784_173 () (_ BitVec 64))
(declare-fun temp10784_174 () (_ BitVec 64))
(declare-fun temp10784_175 () (_ BitVec 64))
(declare-fun temp10784_176 () (_ BitVec 64))
(declare-fun temp10784_177 () (_ BitVec 64))
(declare-fun temp10784_178 () (_ BitVec 64))
(declare-fun temp10784_179 () (_ BitVec 64))
(declare-fun temp10784_180 () (_ BitVec 64))
(declare-fun temp10784_181 () (_ BitVec 64))
(declare-fun temp10784_182 () (_ BitVec 64))
(declare-fun temp10784_183 () (_ BitVec 64))
(declare-fun temp10784_184 () (_ BitVec 64))
(declare-fun temp10784_185 () (_ BitVec 64))
(declare-fun temp10784_186 () (_ BitVec 64))
(declare-fun temp10784_187 () (_ BitVec 64))
(declare-fun temp10784_188 () (_ BitVec 64))
(declare-fun temp10784_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10784_190 () (_ BitVec 64))
(declare-fun temp10784_192 () (_ BitVec 64))
(declare-fun temp10784_193 () (_ BitVec 64))
(declare-fun temp10784_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10784_194 () (_ BitVec 64))
(declare-fun temp10784_195 () (_ BitVec 64))
(declare-fun temp10784_197 () (_ BitVec 64))
(declare-fun temp10784_198 () (_ BitVec 64))
(declare-fun temp10784_196 () (_ BitVec 64))
(declare-fun temp10784_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10784_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10784_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10784_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10784_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10784_204 () (_ BitVec 64))
(declare-fun temp10784_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10784_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10784_207 () (_ BitVec 64))
(declare-fun temp10784_208 () (_ BitVec 64))
(declare-fun temp10784_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10784_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10784_211 () (_ BitVec 64))
(declare-fun temp10784_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10784_213 () (_ BitVec 64))
(declare-fun temp10784_214 () (_ BitVec 64))
(declare-fun temp10784_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10784_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10784_217 () (_ BitVec 64))
(declare-fun temp10784_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10784_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10784_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var5190032 () (_ BitVec 64))
(declare-fun var5452176 () (_ BitVec 64))
(declare-fun temp10784_221 () (_ BitVec 64))
(assert (= temp10784_1 #x0000000000000001))
(assert (= var77203 temp10784_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10784_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10784_2)))
(assert (= temp10784_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10784_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10784_4 #x0000000000000000))
(assert (= var210941 temp10784_4))
(assert (= temp10784_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10784_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10784_6 #x0000000000000000))
(assert (= var210986 temp10784_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10784_7 #x0000000000000000))
(assert (= temp10784_8 temp10784_7))
(assert (= temp10784_9 (select ARGNAME_padding_NAMEEND_VAL temp10784_8)))
(assert (= temp10784_10 #x0000000000000001))
(assert (= temp10784_11 temp10784_10))
(assert (= temp10784_12 (select ARGNAME_padding_NAMEEND_VAL temp10784_11)))
(assert (= temp10784_13 #x0000000000000002))
(assert (= temp10784_14 temp10784_13))
(assert (= temp10784_15 (select ARGNAME_padding_NAMEEND_VAL temp10784_14)))
(assert (= temp10784_16 #x0000000000000003))
(assert (= temp10784_17 temp10784_16))
(assert (= temp10784_18 (select ARGNAME_padding_NAMEEND_VAL temp10784_17)))
(assert (= temp10784_19 #x0000000000000004))
(assert (= temp10784_20 temp10784_19))
(assert (= temp10784_21 (select ARGNAME_padding_NAMEEND_VAL temp10784_20)))
(assert (= temp10784_22 #x0000000000000005))
(assert (= temp10784_23 temp10784_22))
(assert (= temp10784_24 (select ARGNAME_padding_NAMEEND_VAL temp10784_23)))
(assert (= temp10784_25 #x0000000000000000))
(assert (= temp10784_26 #x0000000000000000))
(assert (= temp10784_27 temp10784_26))
(assert (= temp10784_28 (select ARGNAME_padding_NAMEEND_VAL temp10784_27)))
(assert (= temp10784_29 #x0000000000000000))
(assert (= temp10784_30 #x0000000000000001))
(assert (= temp10784_31 temp10784_30))
(assert (= temp10784_32 (select ARGNAME_padding_NAMEEND_VAL temp10784_31)))
(assert (= temp10784_33 #x0000000000000000))
(assert (= temp10784_34 #x0000000000000002))
(assert (= temp10784_35 temp10784_34))
(assert (= temp10784_36 (select ARGNAME_padding_NAMEEND_VAL temp10784_35)))
(assert (= temp10784_37 #x0000000000000000))
(assert (= temp10784_38 #x0000000000000003))
(assert (= temp10784_39 temp10784_38))
(assert (= temp10784_40 (select ARGNAME_padding_NAMEEND_VAL temp10784_39)))
(assert (= temp10784_41 #x0000000000000000))
(assert (= temp10784_42 #x0000000000000004))
(assert (= temp10784_43 temp10784_42))
(assert (= temp10784_44 (select ARGNAME_padding_NAMEEND_VAL temp10784_43)))
(assert (= temp10784_45 #x0000000000000000))
(assert (= temp10784_46 #x0000000000000005))
(assert (= temp10784_47 temp10784_46))
(assert (= temp10784_48 (select ARGNAME_padding_NAMEEND_VAL temp10784_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10784_28 temp10784_25)
             (bvslt temp10784_32 temp10784_29)
             (bvslt temp10784_36 temp10784_33)
             (bvslt temp10784_40 temp10784_37)
             (bvslt temp10784_44 temp10784_41)
             (bvslt temp10784_48 temp10784_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10784_49 #x0000000000000000))
(assert (= var1191714 temp10784_49))
(assert (= temp10784_50 #x0000000000000000))
(assert (= temp10784_51 temp10784_50))
(assert (= temp10784_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10784_51)))
(assert (= temp10784_53 #x0000000000000001))
(assert (= temp10784_54 temp10784_53))
(assert (= temp10784_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10784_54)))
(assert (= temp10784_56 #x0000000000000002))
(assert (= temp10784_57 temp10784_56))
(assert (= temp10784_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10784_57)))
(assert (= temp10784_59 #x0000000000000003))
(assert (= temp10784_60 temp10784_59))
(assert (= temp10784_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10784_60)))
(assert (= temp10784_62 #x0000000000000004))
(assert (= temp10784_63 temp10784_62))
(assert (= temp10784_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10784_63)))
(assert (= temp10784_65 #x0000000000000005))
(assert (= temp10784_66 temp10784_65))
(assert (= temp10784_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10784_66)))
(assert (= temp10784_68 #x0000000000000000))
(assert (= temp10784_69 #x0000000000000000))
(assert (= temp10784_70 temp10784_69))
(assert (= temp10784_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10784_70)))
(assert (= temp10784_72 #x0000000000000000))
(assert (= temp10784_73 #x0000000000000001))
(assert (= temp10784_74 temp10784_73))
(assert (= temp10784_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10784_74)))
(assert (= temp10784_76 #x0000000000000000))
(assert (= temp10784_77 #x0000000000000002))
(assert (= temp10784_78 temp10784_77))
(assert (= temp10784_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10784_78)))
(assert (= temp10784_80 #x0000000000000000))
(assert (= temp10784_81 #x0000000000000003))
(assert (= temp10784_82 temp10784_81))
(assert (= temp10784_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10784_82)))
(assert (= temp10784_84 #x0000000000000000))
(assert (= temp10784_85 #x0000000000000004))
(assert (= temp10784_86 temp10784_85))
(assert (= temp10784_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10784_86)))
(assert (= temp10784_88 #x0000000000000000))
(assert (= temp10784_89 #x0000000000000005))
(assert (= temp10784_90 temp10784_89))
(assert (= temp10784_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10784_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10784_71 temp10784_68)
             (bvslt temp10784_75 temp10784_72)
             (bvslt temp10784_79 temp10784_76)
             (bvslt temp10784_83 temp10784_80)
             (bvslt temp10784_87 temp10784_84)
             (bvslt temp10784_91 temp10784_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10784_92 #x0000000000000000))
(assert (= var1191725 temp10784_92))
(assert (= temp10784_93 #x0000000000000000))
(assert (= temp10784_94 temp10784_93))
(assert (= temp10784_95 (select ARGNAME_stride_NAMEEND_VAL temp10784_94)))
(assert (= temp10784_96 #x0000000000000001))
(assert (= temp10784_97 temp10784_96))
(assert (= temp10784_98 (select ARGNAME_stride_NAMEEND_VAL temp10784_97)))
(assert (= temp10784_99 #x0000000000000002))
(assert (= temp10784_100 temp10784_99))
(assert (= temp10784_101 (select ARGNAME_stride_NAMEEND_VAL temp10784_100)))
(assert (= temp10784_102 #x0000000000000003))
(assert (= temp10784_103 temp10784_102))
(assert (= temp10784_104 (select ARGNAME_stride_NAMEEND_VAL temp10784_103)))
(assert (= temp10784_105 #x0000000000000004))
(assert (= temp10784_106 temp10784_105))
(assert (= temp10784_107 (select ARGNAME_stride_NAMEEND_VAL temp10784_106)))
(assert (= temp10784_108 #x0000000000000005))
(assert (= temp10784_109 temp10784_108))
(assert (= temp10784_110 (select ARGNAME_stride_NAMEEND_VAL temp10784_109)))
(assert (= temp10784_111 #x0000000000000000))
(assert (= temp10784_112 #x0000000000000000))
(assert (= temp10784_113 temp10784_112))
(assert (= temp10784_114 (select ARGNAME_stride_NAMEEND_VAL temp10784_113)))
(assert (= temp10784_115 #x0000000000000000))
(assert (= temp10784_116 #x0000000000000001))
(assert (= temp10784_117 temp10784_116))
(assert (= temp10784_118 (select ARGNAME_stride_NAMEEND_VAL temp10784_117)))
(assert (= temp10784_119 #x0000000000000000))
(assert (= temp10784_120 #x0000000000000002))
(assert (= temp10784_121 temp10784_120))
(assert (= temp10784_122 (select ARGNAME_stride_NAMEEND_VAL temp10784_121)))
(assert (= temp10784_123 #x0000000000000000))
(assert (= temp10784_124 #x0000000000000003))
(assert (= temp10784_125 temp10784_124))
(assert (= temp10784_126 (select ARGNAME_stride_NAMEEND_VAL temp10784_125)))
(assert (= temp10784_127 #x0000000000000000))
(assert (= temp10784_128 #x0000000000000004))
(assert (= temp10784_129 temp10784_128))
(assert (= temp10784_130 (select ARGNAME_stride_NAMEEND_VAL temp10784_129)))
(assert (= temp10784_131 #x0000000000000000))
(assert (= temp10784_132 #x0000000000000005))
(assert (= temp10784_133 temp10784_132))
(assert (= temp10784_134 (select ARGNAME_stride_NAMEEND_VAL temp10784_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10784_114 temp10784_111)
             (bvsle temp10784_118 temp10784_115)
             (bvsle temp10784_122 temp10784_119)
             (bvsle temp10784_126 temp10784_123)
             (bvsle temp10784_130 temp10784_127)
             (bvsle temp10784_134 temp10784_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10784_135 #x0000000000000000))
(assert (= var1191735 temp10784_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10784_136 #x0000000000000001))
(assert (= var1191747 temp10784_136))
(assert (= temp10784_137 #x0000000000000000))
(assert (= var1179826 temp10784_137))
(assert (= temp10784_138 #x0000000000000000))
(assert (= temp10784_139 temp10784_138))
(assert (= temp10784_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10784_139)))
(assert (= temp10784_141 #x0000000000000001))
(assert (= temp10784_142 temp10784_141))
(assert (= temp10784_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10784_142)))
(assert (= temp10784_144 #x0000000000000002))
(assert (= temp10784_145 temp10784_144))
(assert (= temp10784_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10784_145)))
(assert (= temp10784_147 #x0000000000000003))
(assert (= temp10784_148 temp10784_147))
(assert (= temp10784_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10784_148)))
(assert (= temp10784_150 #x0000000000000004))
(assert (= temp10784_151 temp10784_150))
(assert (= temp10784_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10784_151)))
(assert (= temp10784_153 #x0000000000000005))
(assert (= temp10784_154 temp10784_153))
(assert (= temp10784_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10784_154)))
(assert (= temp10784_157 var1179826))
(assert (= temp10784_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10784_157)))
(assert (= temp10784_156 temp10784_158))
(assert (= var1191780
   (ite (bvslt temp10784_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10784_159 #x0000000000000000))
(assert (= var1191780 temp10784_159))
(assert (= temp10784_160 #x0000000000000000))
(assert (= var1179826 temp10784_160))
(assert (= temp10784_162 var1179826))
(assert (= temp10784_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10784_162)))
(assert (= temp10784_161 temp10784_163))
(assert (= var1191802 (bvsmod temp10784_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10784_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10784_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10784_165 #x0000000000000001))
(assert (= var1191803 temp10784_165))
(assert (= temp10784_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10784_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10784_167 #x0000000000000001))
(assert (= var1191823 temp10784_167))
(assert (= temp10784_168 #x0000000000000001))
(assert (= var1180714 temp10784_168))
(assert (= temp10784_169 #x0000000000000000))
(assert (= temp10784_170 temp10784_169))
(assert (= temp10784_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10784_170)))
(assert (= temp10784_172 #x0000000000000001))
(assert (= temp10784_173 temp10784_172))
(assert (= temp10784_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10784_173)))
(assert (= temp10784_175 #x0000000000000002))
(assert (= temp10784_176 temp10784_175))
(assert (= temp10784_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10784_176)))
(assert (= temp10784_178 #x0000000000000003))
(assert (= temp10784_179 temp10784_178))
(assert (= temp10784_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10784_179)))
(assert (= temp10784_181 #x0000000000000004))
(assert (= temp10784_182 temp10784_181))
(assert (= temp10784_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10784_182)))
(assert (= temp10784_184 #x0000000000000005))
(assert (= temp10784_185 temp10784_184))
(assert (= temp10784_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10784_185)))
(assert (= temp10784_187 #x0000000000000000))
(assert (= temp10784_188
   (ite (bvslt var1180714 temp10784_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10784_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10784_188)))
(assert (= var1191831 temp10784_189))
(assert (bvslt (ite (bvslt var1180714 temp10784_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10784_190 #x0000000000000001))
(assert (= var1180714 temp10784_190))
(assert (= temp10784_192 var1180714))
(assert (= temp10784_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10784_192)))
(assert (= temp10784_191 temp10784_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10784_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10784_194 #x0000000000000001))
(assert (= var1191836 temp10784_194))
(assert (= temp10784_195 #x0000000000000000))
(assert (= var1179826 temp10784_195))
(assert (= temp10784_197 var1179826))
(assert (= temp10784_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10784_197)))
(assert (= temp10784_196 temp10784_198))
(assert (= temp10784_199 #x0000000000000002))
(assert (= var1586025 temp10784_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10784_200 #x0000000000000001))
(assert (= var1191993 temp10784_200))
(assert (= temp10784_201 #x0000000000000001))
(assert (= var2700303 temp10784_201))
(assert (= temp10784_202 #x0000000000000001))
(assert (= var2962447 temp10784_202))
(assert (= temp10784_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10784_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10784_204 #x0000000000000001))
(assert (= var211058 temp10784_204))
(assert (= temp10784_205 #x0000000000000001))
(assert (= var211188 temp10784_205))
(assert (= var3879401 var211188))
(assert (= temp10784_206 #x0000000000000000))
(assert (= var3866802 temp10784_206))
(assert (= temp10784_207 #x0000000000000000))
(assert (= temp10784_208
   (ite (bvslt var3866802 temp10784_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10784_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10784_208)))
(assert (= var3879420 temp10784_209))
(assert (bvslt (ite (bvslt var3866802 temp10784_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10784_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10784_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10784_211 #x0000000000000000))
(assert (= var3879421 temp10784_211))
(assert (= temp10784_212 #x0000000000000001))
(assert (= var3867690 temp10784_212))
(assert (= temp10784_213 #x0000000000000000))
(assert (= temp10784_214
   (ite (bvslt var3867690 temp10784_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10784_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10784_214)))
(assert (= var3879423 temp10784_215))
(assert (bvslt (ite (bvslt var3867690 temp10784_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10784_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10784_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10784_217 #x0000000000000001))
(assert (= var3879424 temp10784_217))
(assert (= temp10784_218 #x0000000000000000))
(assert (= var4133117 temp10784_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10784_219 #x0000000000000002))
(assert (= var4339331 temp10784_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10784_220 #x0000000000000000))
(assert (= var4404892 temp10784_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var5190032 var211201))
(assert (= var5452176 var211201))
(assert (= temp10784_221 #x0000000000000001))
(assert (= var211058 temp10784_221))
(model-add temp10784_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10784_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10784_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10784_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





