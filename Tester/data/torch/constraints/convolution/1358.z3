(declare-fun temp10541_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10541_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10541_3 () (_ BitVec 64))
(declare-fun temp10541_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10541_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10541_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10541_7 () (_ BitVec 64))
(declare-fun temp10541_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10541_9 () (_ BitVec 64))
(declare-fun temp10541_10 () (_ BitVec 64))
(declare-fun temp10541_11 () (_ BitVec 64))
(declare-fun temp10541_12 () (_ BitVec 64))
(declare-fun temp10541_13 () (_ BitVec 64))
(declare-fun temp10541_14 () (_ BitVec 64))
(declare-fun temp10541_15 () (_ BitVec 64))
(declare-fun temp10541_16 () (_ BitVec 64))
(declare-fun temp10541_17 () (_ BitVec 64))
(declare-fun temp10541_18 () (_ BitVec 64))
(declare-fun temp10541_19 () (_ BitVec 64))
(declare-fun temp10541_20 () (_ BitVec 64))
(declare-fun temp10541_21 () (_ BitVec 64))
(declare-fun temp10541_22 () (_ BitVec 64))
(declare-fun temp10541_23 () (_ BitVec 64))
(declare-fun temp10541_24 () (_ BitVec 64))
(declare-fun temp10541_25 () (_ BitVec 64))
(declare-fun temp10541_26 () (_ BitVec 64))
(declare-fun temp10541_27 () (_ BitVec 64))
(declare-fun temp10541_28 () (_ BitVec 64))
(declare-fun temp10541_29 () (_ BitVec 64))
(declare-fun temp10541_30 () (_ BitVec 64))
(declare-fun temp10541_31 () (_ BitVec 64))
(declare-fun temp10541_32 () (_ BitVec 64))
(declare-fun temp10541_33 () (_ BitVec 64))
(declare-fun temp10541_34 () (_ BitVec 64))
(declare-fun temp10541_35 () (_ BitVec 64))
(declare-fun temp10541_36 () (_ BitVec 64))
(declare-fun temp10541_37 () (_ BitVec 64))
(declare-fun temp10541_38 () (_ BitVec 64))
(declare-fun temp10541_39 () (_ BitVec 64))
(declare-fun temp10541_40 () (_ BitVec 64))
(declare-fun temp10541_41 () (_ BitVec 64))
(declare-fun temp10541_42 () (_ BitVec 64))
(declare-fun temp10541_43 () (_ BitVec 64))
(declare-fun temp10541_44 () (_ BitVec 64))
(declare-fun temp10541_45 () (_ BitVec 64))
(declare-fun temp10541_46 () (_ BitVec 64))
(declare-fun temp10541_47 () (_ BitVec 64))
(declare-fun temp10541_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10541_49 () (_ BitVec 64))
(declare-fun temp10541_50 () (_ BitVec 64))
(declare-fun temp10541_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10541_52 () (_ BitVec 64))
(declare-fun temp10541_53 () (_ BitVec 64))
(declare-fun temp10541_54 () (_ BitVec 64))
(declare-fun temp10541_55 () (_ BitVec 64))
(declare-fun temp10541_56 () (_ BitVec 64))
(declare-fun temp10541_57 () (_ BitVec 64))
(declare-fun temp10541_58 () (_ BitVec 64))
(declare-fun temp10541_59 () (_ BitVec 64))
(declare-fun temp10541_60 () (_ BitVec 64))
(declare-fun temp10541_61 () (_ BitVec 64))
(declare-fun temp10541_62 () (_ BitVec 64))
(declare-fun temp10541_63 () (_ BitVec 64))
(declare-fun temp10541_64 () (_ BitVec 64))
(declare-fun temp10541_65 () (_ BitVec 64))
(declare-fun temp10541_66 () (_ BitVec 64))
(declare-fun temp10541_67 () (_ BitVec 64))
(declare-fun temp10541_68 () (_ BitVec 64))
(declare-fun temp10541_69 () (_ BitVec 64))
(declare-fun temp10541_70 () (_ BitVec 64))
(declare-fun temp10541_71 () (_ BitVec 64))
(declare-fun temp10541_72 () (_ BitVec 64))
(declare-fun temp10541_73 () (_ BitVec 64))
(declare-fun temp10541_74 () (_ BitVec 64))
(declare-fun temp10541_75 () (_ BitVec 64))
(declare-fun temp10541_76 () (_ BitVec 64))
(declare-fun temp10541_77 () (_ BitVec 64))
(declare-fun temp10541_78 () (_ BitVec 64))
(declare-fun temp10541_79 () (_ BitVec 64))
(declare-fun temp10541_80 () (_ BitVec 64))
(declare-fun temp10541_81 () (_ BitVec 64))
(declare-fun temp10541_82 () (_ BitVec 64))
(declare-fun temp10541_83 () (_ BitVec 64))
(declare-fun temp10541_84 () (_ BitVec 64))
(declare-fun temp10541_85 () (_ BitVec 64))
(declare-fun temp10541_86 () (_ BitVec 64))
(declare-fun temp10541_87 () (_ BitVec 64))
(declare-fun temp10541_88 () (_ BitVec 64))
(declare-fun temp10541_89 () (_ BitVec 64))
(declare-fun temp10541_90 () (_ BitVec 64))
(declare-fun temp10541_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10541_92 () (_ BitVec 64))
(declare-fun temp10541_93 () (_ BitVec 64))
(declare-fun temp10541_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10541_95 () (_ BitVec 64))
(declare-fun temp10541_96 () (_ BitVec 64))
(declare-fun temp10541_97 () (_ BitVec 64))
(declare-fun temp10541_98 () (_ BitVec 64))
(declare-fun temp10541_99 () (_ BitVec 64))
(declare-fun temp10541_100 () (_ BitVec 64))
(declare-fun temp10541_101 () (_ BitVec 64))
(declare-fun temp10541_102 () (_ BitVec 64))
(declare-fun temp10541_103 () (_ BitVec 64))
(declare-fun temp10541_104 () (_ BitVec 64))
(declare-fun temp10541_105 () (_ BitVec 64))
(declare-fun temp10541_106 () (_ BitVec 64))
(declare-fun temp10541_107 () (_ BitVec 64))
(declare-fun temp10541_108 () (_ BitVec 64))
(declare-fun temp10541_109 () (_ BitVec 64))
(declare-fun temp10541_110 () (_ BitVec 64))
(declare-fun temp10541_111 () (_ BitVec 64))
(declare-fun temp10541_112 () (_ BitVec 64))
(declare-fun temp10541_113 () (_ BitVec 64))
(declare-fun temp10541_114 () (_ BitVec 64))
(declare-fun temp10541_115 () (_ BitVec 64))
(declare-fun temp10541_116 () (_ BitVec 64))
(declare-fun temp10541_117 () (_ BitVec 64))
(declare-fun temp10541_118 () (_ BitVec 64))
(declare-fun temp10541_119 () (_ BitVec 64))
(declare-fun temp10541_120 () (_ BitVec 64))
(declare-fun temp10541_121 () (_ BitVec 64))
(declare-fun temp10541_122 () (_ BitVec 64))
(declare-fun temp10541_123 () (_ BitVec 64))
(declare-fun temp10541_124 () (_ BitVec 64))
(declare-fun temp10541_125 () (_ BitVec 64))
(declare-fun temp10541_126 () (_ BitVec 64))
(declare-fun temp10541_127 () (_ BitVec 64))
(declare-fun temp10541_128 () (_ BitVec 64))
(declare-fun temp10541_129 () (_ BitVec 64))
(declare-fun temp10541_130 () (_ BitVec 64))
(declare-fun temp10541_131 () (_ BitVec 64))
(declare-fun temp10541_132 () (_ BitVec 64))
(declare-fun temp10541_133 () (_ BitVec 64))
(declare-fun temp10541_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10541_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10541_136 () (_ BitVec 64))
(declare-fun temp10541_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10541_138 () (_ BitVec 64))
(declare-fun temp10541_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10541_140 () (_ BitVec 64))
(declare-fun temp10541_141 () (_ BitVec 64))
(declare-fun temp10541_142 () (_ BitVec 64))
(declare-fun temp10541_143 () (_ BitVec 64))
(declare-fun temp10541_144 () (_ BitVec 64))
(declare-fun temp10541_145 () (_ BitVec 64))
(declare-fun temp10541_146 () (_ BitVec 64))
(declare-fun temp10541_147 () (_ BitVec 64))
(declare-fun temp10541_148 () (_ BitVec 64))
(declare-fun temp10541_149 () (_ BitVec 64))
(declare-fun temp10541_150 () (_ BitVec 64))
(declare-fun temp10541_151 () (_ BitVec 64))
(declare-fun temp10541_152 () (_ BitVec 64))
(declare-fun temp10541_153 () (_ BitVec 64))
(declare-fun temp10541_154 () (_ BitVec 64))
(declare-fun temp10541_155 () (_ BitVec 64))
(declare-fun temp10541_157 () (_ BitVec 64))
(declare-fun temp10541_158 () (_ BitVec 64))
(declare-fun temp10541_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10541_159 () (_ BitVec 64))
(declare-fun temp10541_160 () (_ BitVec 64))
(declare-fun temp10541_162 () (_ BitVec 64))
(declare-fun temp10541_163 () (_ BitVec 64))
(declare-fun temp10541_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10541_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10541_165 () (_ BitVec 64))
(declare-fun temp10541_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10541_167 () (_ BitVec 64))
(declare-fun temp10541_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10541_169 () (_ BitVec 64))
(declare-fun temp10541_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10541_171 () (_ BitVec 64))
(declare-fun temp10541_172 () (_ BitVec 64))
(declare-fun temp10541_173 () (_ BitVec 64))
(declare-fun temp10541_174 () (_ BitVec 64))
(declare-fun temp10541_175 () (_ BitVec 64))
(declare-fun temp10541_176 () (_ BitVec 64))
(declare-fun temp10541_177 () (_ BitVec 64))
(declare-fun temp10541_178 () (_ BitVec 64))
(declare-fun temp10541_179 () (_ BitVec 64))
(declare-fun temp10541_180 () (_ BitVec 64))
(declare-fun temp10541_181 () (_ BitVec 64))
(declare-fun temp10541_182 () (_ BitVec 64))
(declare-fun temp10541_183 () (_ BitVec 64))
(declare-fun temp10541_184 () (_ BitVec 64))
(declare-fun temp10541_185 () (_ BitVec 64))
(declare-fun temp10541_186 () (_ BitVec 64))
(declare-fun temp10541_187 () (_ BitVec 64))
(declare-fun temp10541_188 () (_ BitVec 64))
(declare-fun temp10541_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10541_190 () (_ BitVec 64))
(declare-fun temp10541_192 () (_ BitVec 64))
(declare-fun temp10541_193 () (_ BitVec 64))
(declare-fun temp10541_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10541_194 () (_ BitVec 64))
(declare-fun temp10541_195 () (_ BitVec 64))
(declare-fun temp10541_197 () (_ BitVec 64))
(declare-fun temp10541_198 () (_ BitVec 64))
(declare-fun temp10541_196 () (_ BitVec 64))
(declare-fun temp10541_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10541_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10541_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10541_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10541_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10541_204 () (_ BitVec 64))
(declare-fun temp10541_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10541_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10541_207 () (_ BitVec 64))
(declare-fun temp10541_208 () (_ BitVec 64))
(declare-fun temp10541_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10541_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10541_211 () (_ BitVec 64))
(declare-fun temp10541_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10541_213 () (_ BitVec 64))
(declare-fun temp10541_214 () (_ BitVec 64))
(declare-fun temp10541_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10541_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10541_217 () (_ BitVec 64))
(declare-fun temp10541_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10541_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10541_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var5124496 () (_ BitVec 64))
(declare-fun var211388 () (_ BitVec 64))
(declare-fun temp10541_221 () (_ BitVec 64))
(declare-fun var211389 () (_ BitVec 64))
(declare-fun var6045517 () (_ BitVec 64))
(declare-fun temp10541_222 () (_ BitVec 64))
(assert (= temp10541_1 #x0000000000000001))
(assert (= var77203 temp10541_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10541_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10541_2)))
(assert (= temp10541_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10541_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10541_4 #x0000000000000000))
(assert (= var210941 temp10541_4))
(assert (= temp10541_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10541_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10541_6 #x0000000000000000))
(assert (= var210986 temp10541_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10541_7 #x0000000000000000))
(assert (= temp10541_8 temp10541_7))
(assert (= temp10541_9 (select ARGNAME_padding_NAMEEND_VAL temp10541_8)))
(assert (= temp10541_10 #x0000000000000001))
(assert (= temp10541_11 temp10541_10))
(assert (= temp10541_12 (select ARGNAME_padding_NAMEEND_VAL temp10541_11)))
(assert (= temp10541_13 #x0000000000000002))
(assert (= temp10541_14 temp10541_13))
(assert (= temp10541_15 (select ARGNAME_padding_NAMEEND_VAL temp10541_14)))
(assert (= temp10541_16 #x0000000000000003))
(assert (= temp10541_17 temp10541_16))
(assert (= temp10541_18 (select ARGNAME_padding_NAMEEND_VAL temp10541_17)))
(assert (= temp10541_19 #x0000000000000004))
(assert (= temp10541_20 temp10541_19))
(assert (= temp10541_21 (select ARGNAME_padding_NAMEEND_VAL temp10541_20)))
(assert (= temp10541_22 #x0000000000000005))
(assert (= temp10541_23 temp10541_22))
(assert (= temp10541_24 (select ARGNAME_padding_NAMEEND_VAL temp10541_23)))
(assert (= temp10541_25 #x0000000000000000))
(assert (= temp10541_26 #x0000000000000000))
(assert (= temp10541_27 temp10541_26))
(assert (= temp10541_28 (select ARGNAME_padding_NAMEEND_VAL temp10541_27)))
(assert (= temp10541_29 #x0000000000000000))
(assert (= temp10541_30 #x0000000000000001))
(assert (= temp10541_31 temp10541_30))
(assert (= temp10541_32 (select ARGNAME_padding_NAMEEND_VAL temp10541_31)))
(assert (= temp10541_33 #x0000000000000000))
(assert (= temp10541_34 #x0000000000000002))
(assert (= temp10541_35 temp10541_34))
(assert (= temp10541_36 (select ARGNAME_padding_NAMEEND_VAL temp10541_35)))
(assert (= temp10541_37 #x0000000000000000))
(assert (= temp10541_38 #x0000000000000003))
(assert (= temp10541_39 temp10541_38))
(assert (= temp10541_40 (select ARGNAME_padding_NAMEEND_VAL temp10541_39)))
(assert (= temp10541_41 #x0000000000000000))
(assert (= temp10541_42 #x0000000000000004))
(assert (= temp10541_43 temp10541_42))
(assert (= temp10541_44 (select ARGNAME_padding_NAMEEND_VAL temp10541_43)))
(assert (= temp10541_45 #x0000000000000000))
(assert (= temp10541_46 #x0000000000000005))
(assert (= temp10541_47 temp10541_46))
(assert (= temp10541_48 (select ARGNAME_padding_NAMEEND_VAL temp10541_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10541_28 temp10541_25)
             (bvslt temp10541_32 temp10541_29)
             (bvslt temp10541_36 temp10541_33)
             (bvslt temp10541_40 temp10541_37)
             (bvslt temp10541_44 temp10541_41)
             (bvslt temp10541_48 temp10541_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10541_49 #x0000000000000000))
(assert (= var1191714 temp10541_49))
(assert (= temp10541_50 #x0000000000000000))
(assert (= temp10541_51 temp10541_50))
(assert (= temp10541_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10541_51)))
(assert (= temp10541_53 #x0000000000000001))
(assert (= temp10541_54 temp10541_53))
(assert (= temp10541_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10541_54)))
(assert (= temp10541_56 #x0000000000000002))
(assert (= temp10541_57 temp10541_56))
(assert (= temp10541_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10541_57)))
(assert (= temp10541_59 #x0000000000000003))
(assert (= temp10541_60 temp10541_59))
(assert (= temp10541_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10541_60)))
(assert (= temp10541_62 #x0000000000000004))
(assert (= temp10541_63 temp10541_62))
(assert (= temp10541_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10541_63)))
(assert (= temp10541_65 #x0000000000000005))
(assert (= temp10541_66 temp10541_65))
(assert (= temp10541_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10541_66)))
(assert (= temp10541_68 #x0000000000000000))
(assert (= temp10541_69 #x0000000000000000))
(assert (= temp10541_70 temp10541_69))
(assert (= temp10541_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10541_70)))
(assert (= temp10541_72 #x0000000000000000))
(assert (= temp10541_73 #x0000000000000001))
(assert (= temp10541_74 temp10541_73))
(assert (= temp10541_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10541_74)))
(assert (= temp10541_76 #x0000000000000000))
(assert (= temp10541_77 #x0000000000000002))
(assert (= temp10541_78 temp10541_77))
(assert (= temp10541_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10541_78)))
(assert (= temp10541_80 #x0000000000000000))
(assert (= temp10541_81 #x0000000000000003))
(assert (= temp10541_82 temp10541_81))
(assert (= temp10541_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10541_82)))
(assert (= temp10541_84 #x0000000000000000))
(assert (= temp10541_85 #x0000000000000004))
(assert (= temp10541_86 temp10541_85))
(assert (= temp10541_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10541_86)))
(assert (= temp10541_88 #x0000000000000000))
(assert (= temp10541_89 #x0000000000000005))
(assert (= temp10541_90 temp10541_89))
(assert (= temp10541_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10541_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10541_71 temp10541_68)
             (bvslt temp10541_75 temp10541_72)
             (bvslt temp10541_79 temp10541_76)
             (bvslt temp10541_83 temp10541_80)
             (bvslt temp10541_87 temp10541_84)
             (bvslt temp10541_91 temp10541_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10541_92 #x0000000000000000))
(assert (= var1191725 temp10541_92))
(assert (= temp10541_93 #x0000000000000000))
(assert (= temp10541_94 temp10541_93))
(assert (= temp10541_95 (select ARGNAME_stride_NAMEEND_VAL temp10541_94)))
(assert (= temp10541_96 #x0000000000000001))
(assert (= temp10541_97 temp10541_96))
(assert (= temp10541_98 (select ARGNAME_stride_NAMEEND_VAL temp10541_97)))
(assert (= temp10541_99 #x0000000000000002))
(assert (= temp10541_100 temp10541_99))
(assert (= temp10541_101 (select ARGNAME_stride_NAMEEND_VAL temp10541_100)))
(assert (= temp10541_102 #x0000000000000003))
(assert (= temp10541_103 temp10541_102))
(assert (= temp10541_104 (select ARGNAME_stride_NAMEEND_VAL temp10541_103)))
(assert (= temp10541_105 #x0000000000000004))
(assert (= temp10541_106 temp10541_105))
(assert (= temp10541_107 (select ARGNAME_stride_NAMEEND_VAL temp10541_106)))
(assert (= temp10541_108 #x0000000000000005))
(assert (= temp10541_109 temp10541_108))
(assert (= temp10541_110 (select ARGNAME_stride_NAMEEND_VAL temp10541_109)))
(assert (= temp10541_111 #x0000000000000000))
(assert (= temp10541_112 #x0000000000000000))
(assert (= temp10541_113 temp10541_112))
(assert (= temp10541_114 (select ARGNAME_stride_NAMEEND_VAL temp10541_113)))
(assert (= temp10541_115 #x0000000000000000))
(assert (= temp10541_116 #x0000000000000001))
(assert (= temp10541_117 temp10541_116))
(assert (= temp10541_118 (select ARGNAME_stride_NAMEEND_VAL temp10541_117)))
(assert (= temp10541_119 #x0000000000000000))
(assert (= temp10541_120 #x0000000000000002))
(assert (= temp10541_121 temp10541_120))
(assert (= temp10541_122 (select ARGNAME_stride_NAMEEND_VAL temp10541_121)))
(assert (= temp10541_123 #x0000000000000000))
(assert (= temp10541_124 #x0000000000000003))
(assert (= temp10541_125 temp10541_124))
(assert (= temp10541_126 (select ARGNAME_stride_NAMEEND_VAL temp10541_125)))
(assert (= temp10541_127 #x0000000000000000))
(assert (= temp10541_128 #x0000000000000004))
(assert (= temp10541_129 temp10541_128))
(assert (= temp10541_130 (select ARGNAME_stride_NAMEEND_VAL temp10541_129)))
(assert (= temp10541_131 #x0000000000000000))
(assert (= temp10541_132 #x0000000000000005))
(assert (= temp10541_133 temp10541_132))
(assert (= temp10541_134 (select ARGNAME_stride_NAMEEND_VAL temp10541_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10541_114 temp10541_111)
             (bvsle temp10541_118 temp10541_115)
             (bvsle temp10541_122 temp10541_119)
             (bvsle temp10541_126 temp10541_123)
             (bvsle temp10541_130 temp10541_127)
             (bvsle temp10541_134 temp10541_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10541_135 #x0000000000000000))
(assert (= var1191735 temp10541_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10541_136 #x0000000000000001))
(assert (= var1191747 temp10541_136))
(assert (= temp10541_137 #x0000000000000000))
(assert (= var1179826 temp10541_137))
(assert (= temp10541_138 #x0000000000000000))
(assert (= temp10541_139 temp10541_138))
(assert (= temp10541_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10541_139)))
(assert (= temp10541_141 #x0000000000000001))
(assert (= temp10541_142 temp10541_141))
(assert (= temp10541_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10541_142)))
(assert (= temp10541_144 #x0000000000000002))
(assert (= temp10541_145 temp10541_144))
(assert (= temp10541_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10541_145)))
(assert (= temp10541_147 #x0000000000000003))
(assert (= temp10541_148 temp10541_147))
(assert (= temp10541_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10541_148)))
(assert (= temp10541_150 #x0000000000000004))
(assert (= temp10541_151 temp10541_150))
(assert (= temp10541_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10541_151)))
(assert (= temp10541_153 #x0000000000000005))
(assert (= temp10541_154 temp10541_153))
(assert (= temp10541_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10541_154)))
(assert (= temp10541_157 var1179826))
(assert (= temp10541_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10541_157)))
(assert (= temp10541_156 temp10541_158))
(assert (= var1191780
   (ite (bvslt temp10541_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10541_159 #x0000000000000000))
(assert (= var1191780 temp10541_159))
(assert (= temp10541_160 #x0000000000000000))
(assert (= var1179826 temp10541_160))
(assert (= temp10541_162 var1179826))
(assert (= temp10541_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10541_162)))
(assert (= temp10541_161 temp10541_163))
(assert (= var1191802 (bvsmod temp10541_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10541_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10541_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10541_165 #x0000000000000001))
(assert (= var1191803 temp10541_165))
(assert (= temp10541_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10541_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10541_167 #x0000000000000001))
(assert (= var1191823 temp10541_167))
(assert (= temp10541_168 #x0000000000000001))
(assert (= var1180714 temp10541_168))
(assert (= temp10541_169 #x0000000000000000))
(assert (= temp10541_170 temp10541_169))
(assert (= temp10541_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10541_170)))
(assert (= temp10541_172 #x0000000000000001))
(assert (= temp10541_173 temp10541_172))
(assert (= temp10541_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10541_173)))
(assert (= temp10541_175 #x0000000000000002))
(assert (= temp10541_176 temp10541_175))
(assert (= temp10541_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10541_176)))
(assert (= temp10541_178 #x0000000000000003))
(assert (= temp10541_179 temp10541_178))
(assert (= temp10541_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10541_179)))
(assert (= temp10541_181 #x0000000000000004))
(assert (= temp10541_182 temp10541_181))
(assert (= temp10541_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10541_182)))
(assert (= temp10541_184 #x0000000000000005))
(assert (= temp10541_185 temp10541_184))
(assert (= temp10541_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10541_185)))
(assert (= temp10541_187 #x0000000000000000))
(assert (= temp10541_188
   (ite (bvslt var1180714 temp10541_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10541_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10541_188)))
(assert (= var1191831 temp10541_189))
(assert (bvslt (ite (bvslt var1180714 temp10541_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10541_190 #x0000000000000001))
(assert (= var1180714 temp10541_190))
(assert (= temp10541_192 var1180714))
(assert (= temp10541_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10541_192)))
(assert (= temp10541_191 temp10541_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10541_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10541_194 #x0000000000000001))
(assert (= var1191836 temp10541_194))
(assert (= temp10541_195 #x0000000000000000))
(assert (= var1179826 temp10541_195))
(assert (= temp10541_197 var1179826))
(assert (= temp10541_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10541_197)))
(assert (= temp10541_196 temp10541_198))
(assert (= temp10541_199 #x0000000000000002))
(assert (= var1586025 temp10541_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10541_200 #x0000000000000001))
(assert (= var1191993 temp10541_200))
(assert (= temp10541_201 #x0000000000000001))
(assert (= var2700303 temp10541_201))
(assert (= temp10541_202 #x0000000000000001))
(assert (= var2962447 temp10541_202))
(assert (= temp10541_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10541_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10541_204 #x0000000000000001))
(assert (= var211058 temp10541_204))
(assert (= temp10541_205 #x0000000000000001))
(assert (= var211188 temp10541_205))
(assert (= var3879401 var211188))
(assert (= temp10541_206 #x0000000000000000))
(assert (= var3866802 temp10541_206))
(assert (= temp10541_207 #x0000000000000000))
(assert (= temp10541_208
   (ite (bvslt var3866802 temp10541_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10541_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10541_208)))
(assert (= var3879420 temp10541_209))
(assert (bvslt (ite (bvslt var3866802 temp10541_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10541_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10541_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10541_211 #x0000000000000000))
(assert (= var3879421 temp10541_211))
(assert (= temp10541_212 #x0000000000000001))
(assert (= var3867690 temp10541_212))
(assert (= temp10541_213 #x0000000000000000))
(assert (= temp10541_214
   (ite (bvslt var3867690 temp10541_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10541_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10541_214)))
(assert (= var3879423 temp10541_215))
(assert (bvslt (ite (bvslt var3867690 temp10541_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10541_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10541_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10541_217 #x0000000000000001))
(assert (= var3879424 temp10541_217))
(assert (= temp10541_218 #x0000000000000000))
(assert (= var4133117 temp10541_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10541_219 #x0000000000000002))
(assert (= var4339331 temp10541_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10541_220 #x0000000000000000))
(assert (= var4404892 temp10541_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var5124496 var211201))
(assert (= var211388 var210913))
(assert (= temp10541_221 #x0000000000000000))
(assert (= var211389
   (ite (distinct var211388 temp10541_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var6045517 var211389))
(assert (= temp10541_222 #x0000000000000001))
(assert (= var211058 temp10541_222))
(model-add temp10541_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10541_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10541_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10541_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))



