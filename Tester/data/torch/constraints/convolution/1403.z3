(declare-fun temp10601_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10601_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10601_3 () (_ BitVec 64))
(declare-fun temp10601_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10601_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10601_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10601_7 () (_ BitVec 64))
(declare-fun temp10601_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10601_9 () (_ BitVec 64))
(declare-fun temp10601_10 () (_ BitVec 64))
(declare-fun temp10601_11 () (_ BitVec 64))
(declare-fun temp10601_12 () (_ BitVec 64))
(declare-fun temp10601_13 () (_ BitVec 64))
(declare-fun temp10601_14 () (_ BitVec 64))
(declare-fun temp10601_15 () (_ BitVec 64))
(declare-fun temp10601_16 () (_ BitVec 64))
(declare-fun temp10601_17 () (_ BitVec 64))
(declare-fun temp10601_18 () (_ BitVec 64))
(declare-fun temp10601_19 () (_ BitVec 64))
(declare-fun temp10601_20 () (_ BitVec 64))
(declare-fun temp10601_21 () (_ BitVec 64))
(declare-fun temp10601_22 () (_ BitVec 64))
(declare-fun temp10601_23 () (_ BitVec 64))
(declare-fun temp10601_24 () (_ BitVec 64))
(declare-fun temp10601_25 () (_ BitVec 64))
(declare-fun temp10601_26 () (_ BitVec 64))
(declare-fun temp10601_27 () (_ BitVec 64))
(declare-fun temp10601_28 () (_ BitVec 64))
(declare-fun temp10601_29 () (_ BitVec 64))
(declare-fun temp10601_30 () (_ BitVec 64))
(declare-fun temp10601_31 () (_ BitVec 64))
(declare-fun temp10601_32 () (_ BitVec 64))
(declare-fun temp10601_33 () (_ BitVec 64))
(declare-fun temp10601_34 () (_ BitVec 64))
(declare-fun temp10601_35 () (_ BitVec 64))
(declare-fun temp10601_36 () (_ BitVec 64))
(declare-fun temp10601_37 () (_ BitVec 64))
(declare-fun temp10601_38 () (_ BitVec 64))
(declare-fun temp10601_39 () (_ BitVec 64))
(declare-fun temp10601_40 () (_ BitVec 64))
(declare-fun temp10601_41 () (_ BitVec 64))
(declare-fun temp10601_42 () (_ BitVec 64))
(declare-fun temp10601_43 () (_ BitVec 64))
(declare-fun temp10601_44 () (_ BitVec 64))
(declare-fun temp10601_45 () (_ BitVec 64))
(declare-fun temp10601_46 () (_ BitVec 64))
(declare-fun temp10601_47 () (_ BitVec 64))
(declare-fun temp10601_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10601_49 () (_ BitVec 64))
(declare-fun temp10601_50 () (_ BitVec 64))
(declare-fun temp10601_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10601_52 () (_ BitVec 64))
(declare-fun temp10601_53 () (_ BitVec 64))
(declare-fun temp10601_54 () (_ BitVec 64))
(declare-fun temp10601_55 () (_ BitVec 64))
(declare-fun temp10601_56 () (_ BitVec 64))
(declare-fun temp10601_57 () (_ BitVec 64))
(declare-fun temp10601_58 () (_ BitVec 64))
(declare-fun temp10601_59 () (_ BitVec 64))
(declare-fun temp10601_60 () (_ BitVec 64))
(declare-fun temp10601_61 () (_ BitVec 64))
(declare-fun temp10601_62 () (_ BitVec 64))
(declare-fun temp10601_63 () (_ BitVec 64))
(declare-fun temp10601_64 () (_ BitVec 64))
(declare-fun temp10601_65 () (_ BitVec 64))
(declare-fun temp10601_66 () (_ BitVec 64))
(declare-fun temp10601_67 () (_ BitVec 64))
(declare-fun temp10601_68 () (_ BitVec 64))
(declare-fun temp10601_69 () (_ BitVec 64))
(declare-fun temp10601_70 () (_ BitVec 64))
(declare-fun temp10601_71 () (_ BitVec 64))
(declare-fun temp10601_72 () (_ BitVec 64))
(declare-fun temp10601_73 () (_ BitVec 64))
(declare-fun temp10601_74 () (_ BitVec 64))
(declare-fun temp10601_75 () (_ BitVec 64))
(declare-fun temp10601_76 () (_ BitVec 64))
(declare-fun temp10601_77 () (_ BitVec 64))
(declare-fun temp10601_78 () (_ BitVec 64))
(declare-fun temp10601_79 () (_ BitVec 64))
(declare-fun temp10601_80 () (_ BitVec 64))
(declare-fun temp10601_81 () (_ BitVec 64))
(declare-fun temp10601_82 () (_ BitVec 64))
(declare-fun temp10601_83 () (_ BitVec 64))
(declare-fun temp10601_84 () (_ BitVec 64))
(declare-fun temp10601_85 () (_ BitVec 64))
(declare-fun temp10601_86 () (_ BitVec 64))
(declare-fun temp10601_87 () (_ BitVec 64))
(declare-fun temp10601_88 () (_ BitVec 64))
(declare-fun temp10601_89 () (_ BitVec 64))
(declare-fun temp10601_90 () (_ BitVec 64))
(declare-fun temp10601_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10601_92 () (_ BitVec 64))
(declare-fun temp10601_93 () (_ BitVec 64))
(declare-fun temp10601_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10601_95 () (_ BitVec 64))
(declare-fun temp10601_96 () (_ BitVec 64))
(declare-fun temp10601_97 () (_ BitVec 64))
(declare-fun temp10601_98 () (_ BitVec 64))
(declare-fun temp10601_99 () (_ BitVec 64))
(declare-fun temp10601_100 () (_ BitVec 64))
(declare-fun temp10601_101 () (_ BitVec 64))
(declare-fun temp10601_102 () (_ BitVec 64))
(declare-fun temp10601_103 () (_ BitVec 64))
(declare-fun temp10601_104 () (_ BitVec 64))
(declare-fun temp10601_105 () (_ BitVec 64))
(declare-fun temp10601_106 () (_ BitVec 64))
(declare-fun temp10601_107 () (_ BitVec 64))
(declare-fun temp10601_108 () (_ BitVec 64))
(declare-fun temp10601_109 () (_ BitVec 64))
(declare-fun temp10601_110 () (_ BitVec 64))
(declare-fun temp10601_111 () (_ BitVec 64))
(declare-fun temp10601_112 () (_ BitVec 64))
(declare-fun temp10601_113 () (_ BitVec 64))
(declare-fun temp10601_114 () (_ BitVec 64))
(declare-fun temp10601_115 () (_ BitVec 64))
(declare-fun temp10601_116 () (_ BitVec 64))
(declare-fun temp10601_117 () (_ BitVec 64))
(declare-fun temp10601_118 () (_ BitVec 64))
(declare-fun temp10601_119 () (_ BitVec 64))
(declare-fun temp10601_120 () (_ BitVec 64))
(declare-fun temp10601_121 () (_ BitVec 64))
(declare-fun temp10601_122 () (_ BitVec 64))
(declare-fun temp10601_123 () (_ BitVec 64))
(declare-fun temp10601_124 () (_ BitVec 64))
(declare-fun temp10601_125 () (_ BitVec 64))
(declare-fun temp10601_126 () (_ BitVec 64))
(declare-fun temp10601_127 () (_ BitVec 64))
(declare-fun temp10601_128 () (_ BitVec 64))
(declare-fun temp10601_129 () (_ BitVec 64))
(declare-fun temp10601_130 () (_ BitVec 64))
(declare-fun temp10601_131 () (_ BitVec 64))
(declare-fun temp10601_132 () (_ BitVec 64))
(declare-fun temp10601_133 () (_ BitVec 64))
(declare-fun temp10601_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10601_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10601_136 () (_ BitVec 64))
(declare-fun temp10601_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10601_138 () (_ BitVec 64))
(declare-fun temp10601_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10601_140 () (_ BitVec 64))
(declare-fun temp10601_141 () (_ BitVec 64))
(declare-fun temp10601_142 () (_ BitVec 64))
(declare-fun temp10601_143 () (_ BitVec 64))
(declare-fun temp10601_144 () (_ BitVec 64))
(declare-fun temp10601_145 () (_ BitVec 64))
(declare-fun temp10601_146 () (_ BitVec 64))
(declare-fun temp10601_147 () (_ BitVec 64))
(declare-fun temp10601_148 () (_ BitVec 64))
(declare-fun temp10601_149 () (_ BitVec 64))
(declare-fun temp10601_150 () (_ BitVec 64))
(declare-fun temp10601_151 () (_ BitVec 64))
(declare-fun temp10601_152 () (_ BitVec 64))
(declare-fun temp10601_153 () (_ BitVec 64))
(declare-fun temp10601_154 () (_ BitVec 64))
(declare-fun temp10601_155 () (_ BitVec 64))
(declare-fun temp10601_157 () (_ BitVec 64))
(declare-fun temp10601_158 () (_ BitVec 64))
(declare-fun temp10601_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10601_159 () (_ BitVec 64))
(declare-fun temp10601_160 () (_ BitVec 64))
(declare-fun temp10601_162 () (_ BitVec 64))
(declare-fun temp10601_163 () (_ BitVec 64))
(declare-fun temp10601_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10601_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10601_165 () (_ BitVec 64))
(declare-fun temp10601_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10601_167 () (_ BitVec 64))
(declare-fun temp10601_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10601_169 () (_ BitVec 64))
(declare-fun temp10601_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10601_171 () (_ BitVec 64))
(declare-fun temp10601_172 () (_ BitVec 64))
(declare-fun temp10601_173 () (_ BitVec 64))
(declare-fun temp10601_174 () (_ BitVec 64))
(declare-fun temp10601_175 () (_ BitVec 64))
(declare-fun temp10601_176 () (_ BitVec 64))
(declare-fun temp10601_177 () (_ BitVec 64))
(declare-fun temp10601_178 () (_ BitVec 64))
(declare-fun temp10601_179 () (_ BitVec 64))
(declare-fun temp10601_180 () (_ BitVec 64))
(declare-fun temp10601_181 () (_ BitVec 64))
(declare-fun temp10601_182 () (_ BitVec 64))
(declare-fun temp10601_183 () (_ BitVec 64))
(declare-fun temp10601_184 () (_ BitVec 64))
(declare-fun temp10601_185 () (_ BitVec 64))
(declare-fun temp10601_186 () (_ BitVec 64))
(declare-fun temp10601_187 () (_ BitVec 64))
(declare-fun temp10601_188 () (_ BitVec 64))
(declare-fun temp10601_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10601_190 () (_ BitVec 64))
(declare-fun temp10601_192 () (_ BitVec 64))
(declare-fun temp10601_193 () (_ BitVec 64))
(declare-fun temp10601_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10601_194 () (_ BitVec 64))
(declare-fun temp10601_195 () (_ BitVec 64))
(declare-fun temp10601_197 () (_ BitVec 64))
(declare-fun temp10601_198 () (_ BitVec 64))
(declare-fun temp10601_196 () (_ BitVec 64))
(declare-fun temp10601_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10601_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10601_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10601_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10601_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10601_204 () (_ BitVec 64))
(declare-fun temp10601_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10601_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10601_207 () (_ BitVec 64))
(declare-fun temp10601_208 () (_ BitVec 64))
(declare-fun temp10601_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10601_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10601_211 () (_ BitVec 64))
(declare-fun temp10601_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10601_213 () (_ BitVec 64))
(declare-fun temp10601_214 () (_ BitVec 64))
(declare-fun temp10601_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10601_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10601_217 () (_ BitVec 64))
(declare-fun temp10601_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10601_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10601_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp10601_222 () (_ BitVec 64))
(declare-fun temp10601_221 () (_ BitVec 64))
(declare-fun temp10601_223 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp10601_224 () (_ BitVec 64))
(declare-fun temp10601_225 () (_ BitVec 64))
(declare-fun temp10601_226 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp10601_227 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp10601_228 () (_ BitVec 64))
(declare-fun temp10601_230 () (_ BitVec 64))
(declare-fun temp10601_229 () (_ BitVec 64))
(declare-fun temp10601_231 () (_ BitVec 64))
(assert (= temp10601_1 #x0000000000000001))
(assert (= var77203 temp10601_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10601_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10601_2)))
(assert (= temp10601_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10601_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10601_4 #x0000000000000000))
(assert (= var210941 temp10601_4))
(assert (= temp10601_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10601_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10601_6 #x0000000000000000))
(assert (= var210986 temp10601_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10601_7 #x0000000000000000))
(assert (= temp10601_8 temp10601_7))
(assert (= temp10601_9 (select ARGNAME_padding_NAMEEND_VAL temp10601_8)))
(assert (= temp10601_10 #x0000000000000001))
(assert (= temp10601_11 temp10601_10))
(assert (= temp10601_12 (select ARGNAME_padding_NAMEEND_VAL temp10601_11)))
(assert (= temp10601_13 #x0000000000000002))
(assert (= temp10601_14 temp10601_13))
(assert (= temp10601_15 (select ARGNAME_padding_NAMEEND_VAL temp10601_14)))
(assert (= temp10601_16 #x0000000000000003))
(assert (= temp10601_17 temp10601_16))
(assert (= temp10601_18 (select ARGNAME_padding_NAMEEND_VAL temp10601_17)))
(assert (= temp10601_19 #x0000000000000004))
(assert (= temp10601_20 temp10601_19))
(assert (= temp10601_21 (select ARGNAME_padding_NAMEEND_VAL temp10601_20)))
(assert (= temp10601_22 #x0000000000000005))
(assert (= temp10601_23 temp10601_22))
(assert (= temp10601_24 (select ARGNAME_padding_NAMEEND_VAL temp10601_23)))
(assert (= temp10601_25 #x0000000000000000))
(assert (= temp10601_26 #x0000000000000000))
(assert (= temp10601_27 temp10601_26))
(assert (= temp10601_28 (select ARGNAME_padding_NAMEEND_VAL temp10601_27)))
(assert (= temp10601_29 #x0000000000000000))
(assert (= temp10601_30 #x0000000000000001))
(assert (= temp10601_31 temp10601_30))
(assert (= temp10601_32 (select ARGNAME_padding_NAMEEND_VAL temp10601_31)))
(assert (= temp10601_33 #x0000000000000000))
(assert (= temp10601_34 #x0000000000000002))
(assert (= temp10601_35 temp10601_34))
(assert (= temp10601_36 (select ARGNAME_padding_NAMEEND_VAL temp10601_35)))
(assert (= temp10601_37 #x0000000000000000))
(assert (= temp10601_38 #x0000000000000003))
(assert (= temp10601_39 temp10601_38))
(assert (= temp10601_40 (select ARGNAME_padding_NAMEEND_VAL temp10601_39)))
(assert (= temp10601_41 #x0000000000000000))
(assert (= temp10601_42 #x0000000000000004))
(assert (= temp10601_43 temp10601_42))
(assert (= temp10601_44 (select ARGNAME_padding_NAMEEND_VAL temp10601_43)))
(assert (= temp10601_45 #x0000000000000000))
(assert (= temp10601_46 #x0000000000000005))
(assert (= temp10601_47 temp10601_46))
(assert (= temp10601_48 (select ARGNAME_padding_NAMEEND_VAL temp10601_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10601_28 temp10601_25)
             (bvslt temp10601_32 temp10601_29)
             (bvslt temp10601_36 temp10601_33)
             (bvslt temp10601_40 temp10601_37)
             (bvslt temp10601_44 temp10601_41)
             (bvslt temp10601_48 temp10601_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10601_49 #x0000000000000000))
(assert (= var1191714 temp10601_49))
(assert (= temp10601_50 #x0000000000000000))
(assert (= temp10601_51 temp10601_50))
(assert (= temp10601_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10601_51)))
(assert (= temp10601_53 #x0000000000000001))
(assert (= temp10601_54 temp10601_53))
(assert (= temp10601_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10601_54)))
(assert (= temp10601_56 #x0000000000000002))
(assert (= temp10601_57 temp10601_56))
(assert (= temp10601_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10601_57)))
(assert (= temp10601_59 #x0000000000000003))
(assert (= temp10601_60 temp10601_59))
(assert (= temp10601_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10601_60)))
(assert (= temp10601_62 #x0000000000000004))
(assert (= temp10601_63 temp10601_62))
(assert (= temp10601_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10601_63)))
(assert (= temp10601_65 #x0000000000000005))
(assert (= temp10601_66 temp10601_65))
(assert (= temp10601_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10601_66)))
(assert (= temp10601_68 #x0000000000000000))
(assert (= temp10601_69 #x0000000000000000))
(assert (= temp10601_70 temp10601_69))
(assert (= temp10601_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10601_70)))
(assert (= temp10601_72 #x0000000000000000))
(assert (= temp10601_73 #x0000000000000001))
(assert (= temp10601_74 temp10601_73))
(assert (= temp10601_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10601_74)))
(assert (= temp10601_76 #x0000000000000000))
(assert (= temp10601_77 #x0000000000000002))
(assert (= temp10601_78 temp10601_77))
(assert (= temp10601_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10601_78)))
(assert (= temp10601_80 #x0000000000000000))
(assert (= temp10601_81 #x0000000000000003))
(assert (= temp10601_82 temp10601_81))
(assert (= temp10601_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10601_82)))
(assert (= temp10601_84 #x0000000000000000))
(assert (= temp10601_85 #x0000000000000004))
(assert (= temp10601_86 temp10601_85))
(assert (= temp10601_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10601_86)))
(assert (= temp10601_88 #x0000000000000000))
(assert (= temp10601_89 #x0000000000000005))
(assert (= temp10601_90 temp10601_89))
(assert (= temp10601_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10601_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10601_71 temp10601_68)
             (bvslt temp10601_75 temp10601_72)
             (bvslt temp10601_79 temp10601_76)
             (bvslt temp10601_83 temp10601_80)
             (bvslt temp10601_87 temp10601_84)
             (bvslt temp10601_91 temp10601_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10601_92 #x0000000000000000))
(assert (= var1191725 temp10601_92))
(assert (= temp10601_93 #x0000000000000000))
(assert (= temp10601_94 temp10601_93))
(assert (= temp10601_95 (select ARGNAME_stride_NAMEEND_VAL temp10601_94)))
(assert (= temp10601_96 #x0000000000000001))
(assert (= temp10601_97 temp10601_96))
(assert (= temp10601_98 (select ARGNAME_stride_NAMEEND_VAL temp10601_97)))
(assert (= temp10601_99 #x0000000000000002))
(assert (= temp10601_100 temp10601_99))
(assert (= temp10601_101 (select ARGNAME_stride_NAMEEND_VAL temp10601_100)))
(assert (= temp10601_102 #x0000000000000003))
(assert (= temp10601_103 temp10601_102))
(assert (= temp10601_104 (select ARGNAME_stride_NAMEEND_VAL temp10601_103)))
(assert (= temp10601_105 #x0000000000000004))
(assert (= temp10601_106 temp10601_105))
(assert (= temp10601_107 (select ARGNAME_stride_NAMEEND_VAL temp10601_106)))
(assert (= temp10601_108 #x0000000000000005))
(assert (= temp10601_109 temp10601_108))
(assert (= temp10601_110 (select ARGNAME_stride_NAMEEND_VAL temp10601_109)))
(assert (= temp10601_111 #x0000000000000000))
(assert (= temp10601_112 #x0000000000000000))
(assert (= temp10601_113 temp10601_112))
(assert (= temp10601_114 (select ARGNAME_stride_NAMEEND_VAL temp10601_113)))
(assert (= temp10601_115 #x0000000000000000))
(assert (= temp10601_116 #x0000000000000001))
(assert (= temp10601_117 temp10601_116))
(assert (= temp10601_118 (select ARGNAME_stride_NAMEEND_VAL temp10601_117)))
(assert (= temp10601_119 #x0000000000000000))
(assert (= temp10601_120 #x0000000000000002))
(assert (= temp10601_121 temp10601_120))
(assert (= temp10601_122 (select ARGNAME_stride_NAMEEND_VAL temp10601_121)))
(assert (= temp10601_123 #x0000000000000000))
(assert (= temp10601_124 #x0000000000000003))
(assert (= temp10601_125 temp10601_124))
(assert (= temp10601_126 (select ARGNAME_stride_NAMEEND_VAL temp10601_125)))
(assert (= temp10601_127 #x0000000000000000))
(assert (= temp10601_128 #x0000000000000004))
(assert (= temp10601_129 temp10601_128))
(assert (= temp10601_130 (select ARGNAME_stride_NAMEEND_VAL temp10601_129)))
(assert (= temp10601_131 #x0000000000000000))
(assert (= temp10601_132 #x0000000000000005))
(assert (= temp10601_133 temp10601_132))
(assert (= temp10601_134 (select ARGNAME_stride_NAMEEND_VAL temp10601_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10601_114 temp10601_111)
             (bvsle temp10601_118 temp10601_115)
             (bvsle temp10601_122 temp10601_119)
             (bvsle temp10601_126 temp10601_123)
             (bvsle temp10601_130 temp10601_127)
             (bvsle temp10601_134 temp10601_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10601_135 #x0000000000000000))
(assert (= var1191735 temp10601_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10601_136 #x0000000000000001))
(assert (= var1191747 temp10601_136))
(assert (= temp10601_137 #x0000000000000000))
(assert (= var1179826 temp10601_137))
(assert (= temp10601_138 #x0000000000000000))
(assert (= temp10601_139 temp10601_138))
(assert (= temp10601_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10601_139)))
(assert (= temp10601_141 #x0000000000000001))
(assert (= temp10601_142 temp10601_141))
(assert (= temp10601_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10601_142)))
(assert (= temp10601_144 #x0000000000000002))
(assert (= temp10601_145 temp10601_144))
(assert (= temp10601_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10601_145)))
(assert (= temp10601_147 #x0000000000000003))
(assert (= temp10601_148 temp10601_147))
(assert (= temp10601_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10601_148)))
(assert (= temp10601_150 #x0000000000000004))
(assert (= temp10601_151 temp10601_150))
(assert (= temp10601_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10601_151)))
(assert (= temp10601_153 #x0000000000000005))
(assert (= temp10601_154 temp10601_153))
(assert (= temp10601_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10601_154)))
(assert (= temp10601_157 var1179826))
(assert (= temp10601_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10601_157)))
(assert (= temp10601_156 temp10601_158))
(assert (= var1191780
   (ite (bvslt temp10601_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10601_159 #x0000000000000000))
(assert (= var1191780 temp10601_159))
(assert (= temp10601_160 #x0000000000000000))
(assert (= var1179826 temp10601_160))
(assert (= temp10601_162 var1179826))
(assert (= temp10601_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10601_162)))
(assert (= temp10601_161 temp10601_163))
(assert (= var1191802 (bvsmod temp10601_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10601_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10601_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10601_165 #x0000000000000001))
(assert (= var1191803 temp10601_165))
(assert (= temp10601_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10601_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10601_167 #x0000000000000001))
(assert (= var1191823 temp10601_167))
(assert (= temp10601_168 #x0000000000000001))
(assert (= var1180714 temp10601_168))
(assert (= temp10601_169 #x0000000000000000))
(assert (= temp10601_170 temp10601_169))
(assert (= temp10601_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10601_170)))
(assert (= temp10601_172 #x0000000000000001))
(assert (= temp10601_173 temp10601_172))
(assert (= temp10601_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10601_173)))
(assert (= temp10601_175 #x0000000000000002))
(assert (= temp10601_176 temp10601_175))
(assert (= temp10601_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10601_176)))
(assert (= temp10601_178 #x0000000000000003))
(assert (= temp10601_179 temp10601_178))
(assert (= temp10601_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10601_179)))
(assert (= temp10601_181 #x0000000000000004))
(assert (= temp10601_182 temp10601_181))
(assert (= temp10601_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10601_182)))
(assert (= temp10601_184 #x0000000000000005))
(assert (= temp10601_185 temp10601_184))
(assert (= temp10601_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10601_185)))
(assert (= temp10601_187 #x0000000000000000))
(assert (= temp10601_188
   (ite (bvslt var1180714 temp10601_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10601_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10601_188)))
(assert (= var1191831 temp10601_189))
(assert (bvslt (ite (bvslt var1180714 temp10601_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10601_190 #x0000000000000001))
(assert (= var1180714 temp10601_190))
(assert (= temp10601_192 var1180714))
(assert (= temp10601_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10601_192)))
(assert (= temp10601_191 temp10601_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10601_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10601_194 #x0000000000000001))
(assert (= var1191836 temp10601_194))
(assert (= temp10601_195 #x0000000000000000))
(assert (= var1179826 temp10601_195))
(assert (= temp10601_197 var1179826))
(assert (= temp10601_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10601_197)))
(assert (= temp10601_196 temp10601_198))
(assert (= temp10601_199 #x0000000000000002))
(assert (= var1586025 temp10601_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10601_200 #x0000000000000001))
(assert (= var1191993 temp10601_200))
(assert (= temp10601_201 #x0000000000000001))
(assert (= var2700303 temp10601_201))
(assert (= temp10601_202 #x0000000000000001))
(assert (= var2962447 temp10601_202))
(assert (= temp10601_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10601_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10601_204 #x0000000000000001))
(assert (= var211058 temp10601_204))
(assert (= temp10601_205 #x0000000000000001))
(assert (= var211188 temp10601_205))
(assert (= var3879401 var211188))
(assert (= temp10601_206 #x0000000000000000))
(assert (= var3866802 temp10601_206))
(assert (= temp10601_207 #x0000000000000000))
(assert (= temp10601_208
   (ite (bvslt var3866802 temp10601_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10601_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10601_208)))
(assert (= var3879420 temp10601_209))
(assert (bvslt (ite (bvslt var3866802 temp10601_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10601_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10601_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10601_211 #x0000000000000000))
(assert (= var3879421 temp10601_211))
(assert (= temp10601_212 #x0000000000000001))
(assert (= var3867690 temp10601_212))
(assert (= temp10601_213 #x0000000000000000))
(assert (= temp10601_214
   (ite (bvslt var3867690 temp10601_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10601_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10601_214)))
(assert (= var3879423 temp10601_215))
(assert (bvslt (ite (bvslt var3867690 temp10601_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10601_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10601_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10601_217 #x0000000000000001))
(assert (= var3879424 temp10601_217))
(assert (= temp10601_218 #x0000000000000000))
(assert (= var4133117 temp10601_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10601_219 #x0000000000000002))
(assert (= var4339331 temp10601_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10601_220 #x0000000000000000))
(assert (= var4404892 temp10601_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp10601_222 #xffffffffffffffff))
(assert (= temp10601_221 temp10601_222))
(assert (= temp10601_223 #x0000000000000001))
(assert (= var197674 temp10601_223))
(assert (= temp10601_224 #x0000000000000000))
(assert (= temp10601_225
   (ite (bvslt var197674 temp10601_224)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp10601_226 (select ARGNAME_input_NAMEEND_DIMSIZE temp10601_225)))
(assert (= var211595 temp10601_226))
(assert (bvslt (ite (bvslt var197674 temp10601_224)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10601_227 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp10601_227) #x0000000000000001 #x0000000000000000)))
(assert (= temp10601_228 #x0000000000000001))
(assert (= var211596 temp10601_228))
(assert (= temp10601_230 #xffffffffffffffff))
(assert (= temp10601_229 temp10601_230))
(assert (= temp10601_231 #x0000000000000001))
(assert (= var211058 temp10601_231))
(model-add temp10601_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10601_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10601_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10601_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





