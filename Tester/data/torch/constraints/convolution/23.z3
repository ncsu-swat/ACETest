(declare-fun temp30_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp30_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp30_3 () (_ BitVec 64))
(declare-fun temp30_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp30_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp30_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp30_7 () (_ BitVec 64))
(declare-fun temp30_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp30_9 () (_ BitVec 64))
(declare-fun temp30_10 () (_ BitVec 64))
(declare-fun temp30_11 () (_ BitVec 64))
(declare-fun temp30_12 () (_ BitVec 64))
(declare-fun temp30_13 () (_ BitVec 64))
(declare-fun temp30_14 () (_ BitVec 64))
(declare-fun temp30_15 () (_ BitVec 64))
(declare-fun temp30_16 () (_ BitVec 64))
(declare-fun temp30_17 () (_ BitVec 64))
(declare-fun temp30_18 () (_ BitVec 64))
(declare-fun temp30_19 () (_ BitVec 64))
(declare-fun temp30_20 () (_ BitVec 64))
(declare-fun temp30_21 () (_ BitVec 64))
(declare-fun temp30_22 () (_ BitVec 64))
(declare-fun temp30_23 () (_ BitVec 64))
(declare-fun temp30_24 () (_ BitVec 64))
(declare-fun temp30_25 () (_ BitVec 64))
(declare-fun temp30_26 () (_ BitVec 64))
(declare-fun temp30_27 () (_ BitVec 64))
(declare-fun temp30_28 () (_ BitVec 64))
(declare-fun temp30_29 () (_ BitVec 64))
(declare-fun temp30_30 () (_ BitVec 64))
(declare-fun temp30_31 () (_ BitVec 64))
(declare-fun temp30_32 () (_ BitVec 64))
(declare-fun temp30_33 () (_ BitVec 64))
(declare-fun temp30_34 () (_ BitVec 64))
(declare-fun temp30_35 () (_ BitVec 64))
(declare-fun temp30_36 () (_ BitVec 64))
(declare-fun temp30_37 () (_ BitVec 64))
(declare-fun temp30_38 () (_ BitVec 64))
(declare-fun temp30_39 () (_ BitVec 64))
(declare-fun temp30_40 () (_ BitVec 64))
(declare-fun temp30_41 () (_ BitVec 64))
(declare-fun temp30_42 () (_ BitVec 64))
(declare-fun temp30_43 () (_ BitVec 64))
(declare-fun temp30_44 () (_ BitVec 64))
(declare-fun temp30_45 () (_ BitVec 64))
(declare-fun temp30_46 () (_ BitVec 64))
(declare-fun temp30_47 () (_ BitVec 64))
(declare-fun temp30_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp30_49 () (_ BitVec 64))
(declare-fun temp30_50 () (_ BitVec 64))
(declare-fun temp30_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp30_52 () (_ BitVec 64))
(declare-fun temp30_53 () (_ BitVec 64))
(declare-fun temp30_54 () (_ BitVec 64))
(declare-fun temp30_55 () (_ BitVec 64))
(declare-fun temp30_56 () (_ BitVec 64))
(declare-fun temp30_57 () (_ BitVec 64))
(declare-fun temp30_58 () (_ BitVec 64))
(declare-fun temp30_59 () (_ BitVec 64))
(declare-fun temp30_60 () (_ BitVec 64))
(declare-fun temp30_61 () (_ BitVec 64))
(declare-fun temp30_62 () (_ BitVec 64))
(declare-fun temp30_63 () (_ BitVec 64))
(declare-fun temp30_64 () (_ BitVec 64))
(declare-fun temp30_65 () (_ BitVec 64))
(declare-fun temp30_66 () (_ BitVec 64))
(declare-fun temp30_67 () (_ BitVec 64))
(declare-fun temp30_68 () (_ BitVec 64))
(declare-fun temp30_69 () (_ BitVec 64))
(declare-fun temp30_70 () (_ BitVec 64))
(declare-fun temp30_71 () (_ BitVec 64))
(declare-fun temp30_72 () (_ BitVec 64))
(declare-fun temp30_73 () (_ BitVec 64))
(declare-fun temp30_74 () (_ BitVec 64))
(declare-fun temp30_75 () (_ BitVec 64))
(declare-fun temp30_76 () (_ BitVec 64))
(declare-fun temp30_77 () (_ BitVec 64))
(declare-fun temp30_78 () (_ BitVec 64))
(declare-fun temp30_79 () (_ BitVec 64))
(declare-fun temp30_80 () (_ BitVec 64))
(declare-fun temp30_81 () (_ BitVec 64))
(declare-fun temp30_82 () (_ BitVec 64))
(declare-fun temp30_83 () (_ BitVec 64))
(declare-fun temp30_84 () (_ BitVec 64))
(declare-fun temp30_85 () (_ BitVec 64))
(declare-fun temp30_86 () (_ BitVec 64))
(declare-fun temp30_87 () (_ BitVec 64))
(declare-fun temp30_88 () (_ BitVec 64))
(declare-fun temp30_89 () (_ BitVec 64))
(declare-fun temp30_90 () (_ BitVec 64))
(declare-fun temp30_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp30_92 () (_ BitVec 64))
(declare-fun temp30_93 () (_ BitVec 64))
(declare-fun temp30_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp30_95 () (_ BitVec 64))
(declare-fun temp30_96 () (_ BitVec 64))
(declare-fun temp30_97 () (_ BitVec 64))
(declare-fun temp30_98 () (_ BitVec 64))
(declare-fun temp30_99 () (_ BitVec 64))
(declare-fun temp30_100 () (_ BitVec 64))
(declare-fun temp30_101 () (_ BitVec 64))
(declare-fun temp30_102 () (_ BitVec 64))
(declare-fun temp30_103 () (_ BitVec 64))
(declare-fun temp30_104 () (_ BitVec 64))
(declare-fun temp30_105 () (_ BitVec 64))
(declare-fun temp30_106 () (_ BitVec 64))
(declare-fun temp30_107 () (_ BitVec 64))
(declare-fun temp30_108 () (_ BitVec 64))
(declare-fun temp30_109 () (_ BitVec 64))
(declare-fun temp30_110 () (_ BitVec 64))
(declare-fun temp30_111 () (_ BitVec 64))
(declare-fun temp30_112 () (_ BitVec 64))
(declare-fun temp30_113 () (_ BitVec 64))
(declare-fun temp30_114 () (_ BitVec 64))
(declare-fun temp30_115 () (_ BitVec 64))
(declare-fun temp30_116 () (_ BitVec 64))
(declare-fun temp30_117 () (_ BitVec 64))
(declare-fun temp30_118 () (_ BitVec 64))
(declare-fun temp30_119 () (_ BitVec 64))
(declare-fun temp30_120 () (_ BitVec 64))
(declare-fun temp30_121 () (_ BitVec 64))
(declare-fun temp30_122 () (_ BitVec 64))
(declare-fun temp30_123 () (_ BitVec 64))
(declare-fun temp30_124 () (_ BitVec 64))
(declare-fun temp30_125 () (_ BitVec 64))
(declare-fun temp30_126 () (_ BitVec 64))
(declare-fun temp30_127 () (_ BitVec 64))
(declare-fun temp30_128 () (_ BitVec 64))
(declare-fun temp30_129 () (_ BitVec 64))
(declare-fun temp30_130 () (_ BitVec 64))
(declare-fun temp30_131 () (_ BitVec 64))
(declare-fun temp30_132 () (_ BitVec 64))
(declare-fun temp30_133 () (_ BitVec 64))
(declare-fun temp30_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp30_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp30_136 () (_ BitVec 64))
(declare-fun temp30_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp30_138 () (_ BitVec 64))
(declare-fun temp30_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp30_140 () (_ BitVec 64))
(declare-fun temp30_141 () (_ BitVec 64))
(declare-fun temp30_142 () (_ BitVec 64))
(declare-fun temp30_143 () (_ BitVec 64))
(declare-fun temp30_144 () (_ BitVec 64))
(declare-fun temp30_145 () (_ BitVec 64))
(declare-fun temp30_146 () (_ BitVec 64))
(declare-fun temp30_147 () (_ BitVec 64))
(declare-fun temp30_148 () (_ BitVec 64))
(declare-fun temp30_149 () (_ BitVec 64))
(declare-fun temp30_150 () (_ BitVec 64))
(declare-fun temp30_151 () (_ BitVec 64))
(declare-fun temp30_152 () (_ BitVec 64))
(declare-fun temp30_153 () (_ BitVec 64))
(declare-fun temp30_154 () (_ BitVec 64))
(declare-fun temp30_155 () (_ BitVec 64))
(declare-fun temp30_157 () (_ BitVec 64))
(declare-fun temp30_158 () (_ BitVec 64))
(declare-fun temp30_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp30_159 () (_ BitVec 64))
(declare-fun temp30_160 () (_ BitVec 64))
(declare-fun temp30_162 () (_ BitVec 64))
(declare-fun temp30_163 () (_ BitVec 64))
(declare-fun temp30_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp30_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp30_165 () (_ BitVec 64))
(declare-fun temp30_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp30_167 () (_ BitVec 64))
(declare-fun temp30_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp30_169 () (_ BitVec 64))
(declare-fun temp30_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp30_171 () (_ BitVec 64))
(declare-fun temp30_172 () (_ BitVec 64))
(declare-fun temp30_173 () (_ BitVec 64))
(declare-fun temp30_174 () (_ BitVec 64))
(declare-fun temp30_175 () (_ BitVec 64))
(declare-fun temp30_176 () (_ BitVec 64))
(declare-fun temp30_177 () (_ BitVec 64))
(declare-fun temp30_178 () (_ BitVec 64))
(declare-fun temp30_179 () (_ BitVec 64))
(declare-fun temp30_180 () (_ BitVec 64))
(declare-fun temp30_181 () (_ BitVec 64))
(declare-fun temp30_182 () (_ BitVec 64))
(declare-fun temp30_183 () (_ BitVec 64))
(declare-fun temp30_184 () (_ BitVec 64))
(declare-fun temp30_185 () (_ BitVec 64))
(declare-fun temp30_186 () (_ BitVec 64))
(declare-fun temp30_187 () (_ BitVec 64))
(declare-fun temp30_188 () (_ BitVec 64))
(declare-fun temp30_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp30_190 () (_ BitVec 64))
(declare-fun temp30_192 () (_ BitVec 64))
(declare-fun temp30_193 () (_ BitVec 64))
(declare-fun temp30_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp30_194 () (_ BitVec 64))
(declare-fun temp30_195 () (_ BitVec 64))
(declare-fun temp30_197 () (_ BitVec 64))
(declare-fun temp30_198 () (_ BitVec 64))
(declare-fun temp30_196 () (_ BitVec 64))
(declare-fun temp30_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp30_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp30_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp30_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp30_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp30_204 () (_ BitVec 64))
(declare-fun temp30_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp30_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp30_207 () (_ BitVec 64))
(declare-fun temp30_208 () (_ BitVec 64))
(declare-fun temp30_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp30_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp30_211 () (_ BitVec 64))
(declare-fun temp30_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp30_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp30_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4993424 () (_ BitVec 64))
(declare-fun var211388 () (_ BitVec 64))
(declare-fun temp30_215 () (_ BitVec 64))
(declare-fun var211389 () (_ BitVec 64))
(declare-fun var5914445 () (_ BitVec 64))
(declare-fun temp30_216 () (_ BitVec 64))
(assert (= temp30_1 #x0000000000000001))
(assert (= var77203 temp30_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp30_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp30_2)))
(assert (= temp30_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp30_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp30_4 #x0000000000000000))
(assert (= var210941 temp30_4))
(assert (= temp30_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp30_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp30_6 #x0000000000000000))
(assert (= var210986 temp30_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp30_7 #x0000000000000000))
(assert (= temp30_8 temp30_7))
(assert (= temp30_9 (select ARGNAME_padding_NAMEEND_VAL temp30_8)))
(assert (= temp30_10 #x0000000000000001))
(assert (= temp30_11 temp30_10))
(assert (= temp30_12 (select ARGNAME_padding_NAMEEND_VAL temp30_11)))
(assert (= temp30_13 #x0000000000000002))
(assert (= temp30_14 temp30_13))
(assert (= temp30_15 (select ARGNAME_padding_NAMEEND_VAL temp30_14)))
(assert (= temp30_16 #x0000000000000003))
(assert (= temp30_17 temp30_16))
(assert (= temp30_18 (select ARGNAME_padding_NAMEEND_VAL temp30_17)))
(assert (= temp30_19 #x0000000000000004))
(assert (= temp30_20 temp30_19))
(assert (= temp30_21 (select ARGNAME_padding_NAMEEND_VAL temp30_20)))
(assert (= temp30_22 #x0000000000000005))
(assert (= temp30_23 temp30_22))
(assert (= temp30_24 (select ARGNAME_padding_NAMEEND_VAL temp30_23)))
(assert (= temp30_25 #x0000000000000000))
(assert (= temp30_26 #x0000000000000000))
(assert (= temp30_27 temp30_26))
(assert (= temp30_28 (select ARGNAME_padding_NAMEEND_VAL temp30_27)))
(assert (= temp30_29 #x0000000000000000))
(assert (= temp30_30 #x0000000000000001))
(assert (= temp30_31 temp30_30))
(assert (= temp30_32 (select ARGNAME_padding_NAMEEND_VAL temp30_31)))
(assert (= temp30_33 #x0000000000000000))
(assert (= temp30_34 #x0000000000000002))
(assert (= temp30_35 temp30_34))
(assert (= temp30_36 (select ARGNAME_padding_NAMEEND_VAL temp30_35)))
(assert (= temp30_37 #x0000000000000000))
(assert (= temp30_38 #x0000000000000003))
(assert (= temp30_39 temp30_38))
(assert (= temp30_40 (select ARGNAME_padding_NAMEEND_VAL temp30_39)))
(assert (= temp30_41 #x0000000000000000))
(assert (= temp30_42 #x0000000000000004))
(assert (= temp30_43 temp30_42))
(assert (= temp30_44 (select ARGNAME_padding_NAMEEND_VAL temp30_43)))
(assert (= temp30_45 #x0000000000000000))
(assert (= temp30_46 #x0000000000000005))
(assert (= temp30_47 temp30_46))
(assert (= temp30_48 (select ARGNAME_padding_NAMEEND_VAL temp30_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp30_28 temp30_25)
             (bvslt temp30_32 temp30_29)
             (bvslt temp30_36 temp30_33)
             (bvslt temp30_40 temp30_37)
             (bvslt temp30_44 temp30_41)
             (bvslt temp30_48 temp30_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp30_49 #x0000000000000000))
(assert (= var1191714 temp30_49))
(assert (= temp30_50 #x0000000000000000))
(assert (= temp30_51 temp30_50))
(assert (= temp30_52 (select ARGNAME_output_padding_NAMEEND_VAL temp30_51)))
(assert (= temp30_53 #x0000000000000001))
(assert (= temp30_54 temp30_53))
(assert (= temp30_55 (select ARGNAME_output_padding_NAMEEND_VAL temp30_54)))
(assert (= temp30_56 #x0000000000000002))
(assert (= temp30_57 temp30_56))
(assert (= temp30_58 (select ARGNAME_output_padding_NAMEEND_VAL temp30_57)))
(assert (= temp30_59 #x0000000000000003))
(assert (= temp30_60 temp30_59))
(assert (= temp30_61 (select ARGNAME_output_padding_NAMEEND_VAL temp30_60)))
(assert (= temp30_62 #x0000000000000004))
(assert (= temp30_63 temp30_62))
(assert (= temp30_64 (select ARGNAME_output_padding_NAMEEND_VAL temp30_63)))
(assert (= temp30_65 #x0000000000000005))
(assert (= temp30_66 temp30_65))
(assert (= temp30_67 (select ARGNAME_output_padding_NAMEEND_VAL temp30_66)))
(assert (= temp30_68 #x0000000000000000))
(assert (= temp30_69 #x0000000000000000))
(assert (= temp30_70 temp30_69))
(assert (= temp30_71 (select ARGNAME_output_padding_NAMEEND_VAL temp30_70)))
(assert (= temp30_72 #x0000000000000000))
(assert (= temp30_73 #x0000000000000001))
(assert (= temp30_74 temp30_73))
(assert (= temp30_75 (select ARGNAME_output_padding_NAMEEND_VAL temp30_74)))
(assert (= temp30_76 #x0000000000000000))
(assert (= temp30_77 #x0000000000000002))
(assert (= temp30_78 temp30_77))
(assert (= temp30_79 (select ARGNAME_output_padding_NAMEEND_VAL temp30_78)))
(assert (= temp30_80 #x0000000000000000))
(assert (= temp30_81 #x0000000000000003))
(assert (= temp30_82 temp30_81))
(assert (= temp30_83 (select ARGNAME_output_padding_NAMEEND_VAL temp30_82)))
(assert (= temp30_84 #x0000000000000000))
(assert (= temp30_85 #x0000000000000004))
(assert (= temp30_86 temp30_85))
(assert (= temp30_87 (select ARGNAME_output_padding_NAMEEND_VAL temp30_86)))
(assert (= temp30_88 #x0000000000000000))
(assert (= temp30_89 #x0000000000000005))
(assert (= temp30_90 temp30_89))
(assert (= temp30_91 (select ARGNAME_output_padding_NAMEEND_VAL temp30_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp30_71 temp30_68)
             (bvslt temp30_75 temp30_72)
             (bvslt temp30_79 temp30_76)
             (bvslt temp30_83 temp30_80)
             (bvslt temp30_87 temp30_84)
             (bvslt temp30_91 temp30_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp30_92 #x0000000000000000))
(assert (= var1191725 temp30_92))
(assert (= temp30_93 #x0000000000000000))
(assert (= temp30_94 temp30_93))
(assert (= temp30_95 (select ARGNAME_stride_NAMEEND_VAL temp30_94)))
(assert (= temp30_96 #x0000000000000001))
(assert (= temp30_97 temp30_96))
(assert (= temp30_98 (select ARGNAME_stride_NAMEEND_VAL temp30_97)))
(assert (= temp30_99 #x0000000000000002))
(assert (= temp30_100 temp30_99))
(assert (= temp30_101 (select ARGNAME_stride_NAMEEND_VAL temp30_100)))
(assert (= temp30_102 #x0000000000000003))
(assert (= temp30_103 temp30_102))
(assert (= temp30_104 (select ARGNAME_stride_NAMEEND_VAL temp30_103)))
(assert (= temp30_105 #x0000000000000004))
(assert (= temp30_106 temp30_105))
(assert (= temp30_107 (select ARGNAME_stride_NAMEEND_VAL temp30_106)))
(assert (= temp30_108 #x0000000000000005))
(assert (= temp30_109 temp30_108))
(assert (= temp30_110 (select ARGNAME_stride_NAMEEND_VAL temp30_109)))
(assert (= temp30_111 #x0000000000000000))
(assert (= temp30_112 #x0000000000000000))
(assert (= temp30_113 temp30_112))
(assert (= temp30_114 (select ARGNAME_stride_NAMEEND_VAL temp30_113)))
(assert (= temp30_115 #x0000000000000000))
(assert (= temp30_116 #x0000000000000001))
(assert (= temp30_117 temp30_116))
(assert (= temp30_118 (select ARGNAME_stride_NAMEEND_VAL temp30_117)))
(assert (= temp30_119 #x0000000000000000))
(assert (= temp30_120 #x0000000000000002))
(assert (= temp30_121 temp30_120))
(assert (= temp30_122 (select ARGNAME_stride_NAMEEND_VAL temp30_121)))
(assert (= temp30_123 #x0000000000000000))
(assert (= temp30_124 #x0000000000000003))
(assert (= temp30_125 temp30_124))
(assert (= temp30_126 (select ARGNAME_stride_NAMEEND_VAL temp30_125)))
(assert (= temp30_127 #x0000000000000000))
(assert (= temp30_128 #x0000000000000004))
(assert (= temp30_129 temp30_128))
(assert (= temp30_130 (select ARGNAME_stride_NAMEEND_VAL temp30_129)))
(assert (= temp30_131 #x0000000000000000))
(assert (= temp30_132 #x0000000000000005))
(assert (= temp30_133 temp30_132))
(assert (= temp30_134 (select ARGNAME_stride_NAMEEND_VAL temp30_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp30_114 temp30_111)
             (bvsle temp30_118 temp30_115)
             (bvsle temp30_122 temp30_119)
             (bvsle temp30_126 temp30_123)
             (bvsle temp30_130 temp30_127)
             (bvsle temp30_134 temp30_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp30_135 #x0000000000000000))
(assert (= var1191735 temp30_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp30_136 #x0000000000000001))
(assert (= var1191747 temp30_136))
(assert (= temp30_137 #x0000000000000000))
(assert (= var1179826 temp30_137))
(assert (= temp30_138 #x0000000000000000))
(assert (= temp30_139 temp30_138))
(assert (= temp30_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp30_139)))
(assert (= temp30_141 #x0000000000000001))
(assert (= temp30_142 temp30_141))
(assert (= temp30_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp30_142)))
(assert (= temp30_144 #x0000000000000002))
(assert (= temp30_145 temp30_144))
(assert (= temp30_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp30_145)))
(assert (= temp30_147 #x0000000000000003))
(assert (= temp30_148 temp30_147))
(assert (= temp30_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp30_148)))
(assert (= temp30_150 #x0000000000000004))
(assert (= temp30_151 temp30_150))
(assert (= temp30_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp30_151)))
(assert (= temp30_153 #x0000000000000005))
(assert (= temp30_154 temp30_153))
(assert (= temp30_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp30_154)))
(assert (= temp30_157 var1179826))
(assert (= temp30_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp30_157)))
(assert (= temp30_156 temp30_158))
(assert (= var1191780
   (ite (bvslt temp30_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp30_159 #x0000000000000000))
(assert (= var1191780 temp30_159))
(assert (= temp30_160 #x0000000000000000))
(assert (= var1179826 temp30_160))
(assert (= temp30_162 var1179826))
(assert (= temp30_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp30_162)))
(assert (= temp30_161 temp30_163))
(assert (= var1191802 (bvsmod temp30_161 ARGNAME_groups_NAMEEND)))
(assert (= temp30_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp30_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp30_165 #x0000000000000001))
(assert (= var1191803 temp30_165))
(assert (= temp30_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp30_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp30_167 #x0000000000000001))
(assert (= var1191823 temp30_167))
(assert (= temp30_168 #x0000000000000001))
(assert (= var1180714 temp30_168))
(assert (= temp30_169 #x0000000000000000))
(assert (= temp30_170 temp30_169))
(assert (= temp30_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp30_170)))
(assert (= temp30_172 #x0000000000000001))
(assert (= temp30_173 temp30_172))
(assert (= temp30_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp30_173)))
(assert (= temp30_175 #x0000000000000002))
(assert (= temp30_176 temp30_175))
(assert (= temp30_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp30_176)))
(assert (= temp30_178 #x0000000000000003))
(assert (= temp30_179 temp30_178))
(assert (= temp30_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp30_179)))
(assert (= temp30_181 #x0000000000000004))
(assert (= temp30_182 temp30_181))
(assert (= temp30_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp30_182)))
(assert (= temp30_184 #x0000000000000005))
(assert (= temp30_185 temp30_184))
(assert (= temp30_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp30_185)))
(assert (= temp30_187 #x0000000000000000))
(assert (= temp30_188
   (ite (bvslt var1180714 temp30_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp30_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp30_188)))
(assert (= var1191831 temp30_189))
(assert (bvslt (ite (bvslt var1180714 temp30_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp30_190 #x0000000000000001))
(assert (= var1180714 temp30_190))
(assert (= temp30_192 var1180714))
(assert (= temp30_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp30_192)))
(assert (= temp30_191 temp30_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp30_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp30_194 #x0000000000000001))
(assert (= var1191836 temp30_194))
(assert (= temp30_195 #x0000000000000000))
(assert (= var1179826 temp30_195))
(assert (= temp30_197 var1179826))
(assert (= temp30_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp30_197)))
(assert (= temp30_196 temp30_198))
(assert (= temp30_199 #x0000000000000002))
(assert (= var1586025 temp30_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp30_200 #x0000000000000001))
(assert (= var1191993 temp30_200))
(assert (= temp30_201 #x0000000000000001))
(assert (= var2700303 temp30_201))
(assert (= temp30_202 #x0000000000000001))
(assert (= var2962447 temp30_202))
(assert (= temp30_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp30_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp30_204 #x0000000000000001))
(assert (= var211058 temp30_204))
(assert (= temp30_205 #x0000000000000001))
(assert (= var211188 temp30_205))
(assert (= var3879401 var211188))
(assert (= temp30_206 #x0000000000000000))
(assert (= var3866802 temp30_206))
(assert (= temp30_207 #x0000000000000000))
(assert (= temp30_208
   (ite (bvslt var3866802 temp30_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp30_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp30_208)))
(assert (= var3879420 temp30_209))
(assert (bvslt (ite (bvslt var3866802 temp30_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp30_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp30_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp30_211 #x0000000000000001))
(assert (= var3879421 temp30_211))
(assert (= temp30_212 #x0000000000000000))
(assert (= var4079423 temp30_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp30_213 #x0000000000000002))
(assert (= var4208259 temp30_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp30_214 #x0000000000000000))
(assert (= var4273820 temp30_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4993424 var211201))
(assert (= var211388 var210913))
(assert (= temp30_215 #x0000000000000000))
(assert (= var211389
   (ite (distinct var211388 temp30_215) #x0000000000000001 #x0000000000000000)))
(assert (= var5914445 var211389))
(assert (= temp30_216 #x0000000000000001))
(assert (= var211058 temp30_216))
(model-add temp30_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp30_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp30_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp30_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




