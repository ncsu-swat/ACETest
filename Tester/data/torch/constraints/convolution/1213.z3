(declare-fun temp10348_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10348_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10348_3 () (_ BitVec 64))
(declare-fun temp10348_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10348_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10348_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10348_7 () (_ BitVec 64))
(declare-fun temp10348_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10348_9 () (_ BitVec 64))
(declare-fun temp10348_10 () (_ BitVec 64))
(declare-fun temp10348_11 () (_ BitVec 64))
(declare-fun temp10348_12 () (_ BitVec 64))
(declare-fun temp10348_13 () (_ BitVec 64))
(declare-fun temp10348_14 () (_ BitVec 64))
(declare-fun temp10348_15 () (_ BitVec 64))
(declare-fun temp10348_16 () (_ BitVec 64))
(declare-fun temp10348_17 () (_ BitVec 64))
(declare-fun temp10348_18 () (_ BitVec 64))
(declare-fun temp10348_19 () (_ BitVec 64))
(declare-fun temp10348_20 () (_ BitVec 64))
(declare-fun temp10348_21 () (_ BitVec 64))
(declare-fun temp10348_22 () (_ BitVec 64))
(declare-fun temp10348_23 () (_ BitVec 64))
(declare-fun temp10348_24 () (_ BitVec 64))
(declare-fun temp10348_25 () (_ BitVec 64))
(declare-fun temp10348_26 () (_ BitVec 64))
(declare-fun temp10348_27 () (_ BitVec 64))
(declare-fun temp10348_28 () (_ BitVec 64))
(declare-fun temp10348_29 () (_ BitVec 64))
(declare-fun temp10348_30 () (_ BitVec 64))
(declare-fun temp10348_31 () (_ BitVec 64))
(declare-fun temp10348_32 () (_ BitVec 64))
(declare-fun temp10348_33 () (_ BitVec 64))
(declare-fun temp10348_34 () (_ BitVec 64))
(declare-fun temp10348_35 () (_ BitVec 64))
(declare-fun temp10348_36 () (_ BitVec 64))
(declare-fun temp10348_37 () (_ BitVec 64))
(declare-fun temp10348_38 () (_ BitVec 64))
(declare-fun temp10348_39 () (_ BitVec 64))
(declare-fun temp10348_40 () (_ BitVec 64))
(declare-fun temp10348_41 () (_ BitVec 64))
(declare-fun temp10348_42 () (_ BitVec 64))
(declare-fun temp10348_43 () (_ BitVec 64))
(declare-fun temp10348_44 () (_ BitVec 64))
(declare-fun temp10348_45 () (_ BitVec 64))
(declare-fun temp10348_46 () (_ BitVec 64))
(declare-fun temp10348_47 () (_ BitVec 64))
(declare-fun temp10348_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10348_49 () (_ BitVec 64))
(declare-fun temp10348_50 () (_ BitVec 64))
(declare-fun temp10348_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10348_52 () (_ BitVec 64))
(declare-fun temp10348_53 () (_ BitVec 64))
(declare-fun temp10348_54 () (_ BitVec 64))
(declare-fun temp10348_55 () (_ BitVec 64))
(declare-fun temp10348_56 () (_ BitVec 64))
(declare-fun temp10348_57 () (_ BitVec 64))
(declare-fun temp10348_58 () (_ BitVec 64))
(declare-fun temp10348_59 () (_ BitVec 64))
(declare-fun temp10348_60 () (_ BitVec 64))
(declare-fun temp10348_61 () (_ BitVec 64))
(declare-fun temp10348_62 () (_ BitVec 64))
(declare-fun temp10348_63 () (_ BitVec 64))
(declare-fun temp10348_64 () (_ BitVec 64))
(declare-fun temp10348_65 () (_ BitVec 64))
(declare-fun temp10348_66 () (_ BitVec 64))
(declare-fun temp10348_67 () (_ BitVec 64))
(declare-fun temp10348_68 () (_ BitVec 64))
(declare-fun temp10348_69 () (_ BitVec 64))
(declare-fun temp10348_70 () (_ BitVec 64))
(declare-fun temp10348_71 () (_ BitVec 64))
(declare-fun temp10348_72 () (_ BitVec 64))
(declare-fun temp10348_73 () (_ BitVec 64))
(declare-fun temp10348_74 () (_ BitVec 64))
(declare-fun temp10348_75 () (_ BitVec 64))
(declare-fun temp10348_76 () (_ BitVec 64))
(declare-fun temp10348_77 () (_ BitVec 64))
(declare-fun temp10348_78 () (_ BitVec 64))
(declare-fun temp10348_79 () (_ BitVec 64))
(declare-fun temp10348_80 () (_ BitVec 64))
(declare-fun temp10348_81 () (_ BitVec 64))
(declare-fun temp10348_82 () (_ BitVec 64))
(declare-fun temp10348_83 () (_ BitVec 64))
(declare-fun temp10348_84 () (_ BitVec 64))
(declare-fun temp10348_85 () (_ BitVec 64))
(declare-fun temp10348_86 () (_ BitVec 64))
(declare-fun temp10348_87 () (_ BitVec 64))
(declare-fun temp10348_88 () (_ BitVec 64))
(declare-fun temp10348_89 () (_ BitVec 64))
(declare-fun temp10348_90 () (_ BitVec 64))
(declare-fun temp10348_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10348_92 () (_ BitVec 64))
(declare-fun temp10348_93 () (_ BitVec 64))
(declare-fun temp10348_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10348_95 () (_ BitVec 64))
(declare-fun temp10348_96 () (_ BitVec 64))
(declare-fun temp10348_97 () (_ BitVec 64))
(declare-fun temp10348_98 () (_ BitVec 64))
(declare-fun temp10348_99 () (_ BitVec 64))
(declare-fun temp10348_100 () (_ BitVec 64))
(declare-fun temp10348_101 () (_ BitVec 64))
(declare-fun temp10348_102 () (_ BitVec 64))
(declare-fun temp10348_103 () (_ BitVec 64))
(declare-fun temp10348_104 () (_ BitVec 64))
(declare-fun temp10348_105 () (_ BitVec 64))
(declare-fun temp10348_106 () (_ BitVec 64))
(declare-fun temp10348_107 () (_ BitVec 64))
(declare-fun temp10348_108 () (_ BitVec 64))
(declare-fun temp10348_109 () (_ BitVec 64))
(declare-fun temp10348_110 () (_ BitVec 64))
(declare-fun temp10348_111 () (_ BitVec 64))
(declare-fun temp10348_112 () (_ BitVec 64))
(declare-fun temp10348_113 () (_ BitVec 64))
(declare-fun temp10348_114 () (_ BitVec 64))
(declare-fun temp10348_115 () (_ BitVec 64))
(declare-fun temp10348_116 () (_ BitVec 64))
(declare-fun temp10348_117 () (_ BitVec 64))
(declare-fun temp10348_118 () (_ BitVec 64))
(declare-fun temp10348_119 () (_ BitVec 64))
(declare-fun temp10348_120 () (_ BitVec 64))
(declare-fun temp10348_121 () (_ BitVec 64))
(declare-fun temp10348_122 () (_ BitVec 64))
(declare-fun temp10348_123 () (_ BitVec 64))
(declare-fun temp10348_124 () (_ BitVec 64))
(declare-fun temp10348_125 () (_ BitVec 64))
(declare-fun temp10348_126 () (_ BitVec 64))
(declare-fun temp10348_127 () (_ BitVec 64))
(declare-fun temp10348_128 () (_ BitVec 64))
(declare-fun temp10348_129 () (_ BitVec 64))
(declare-fun temp10348_130 () (_ BitVec 64))
(declare-fun temp10348_131 () (_ BitVec 64))
(declare-fun temp10348_132 () (_ BitVec 64))
(declare-fun temp10348_133 () (_ BitVec 64))
(declare-fun temp10348_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10348_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10348_136 () (_ BitVec 64))
(declare-fun temp10348_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10348_138 () (_ BitVec 64))
(declare-fun temp10348_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10348_140 () (_ BitVec 64))
(declare-fun temp10348_141 () (_ BitVec 64))
(declare-fun temp10348_142 () (_ BitVec 64))
(declare-fun temp10348_143 () (_ BitVec 64))
(declare-fun temp10348_144 () (_ BitVec 64))
(declare-fun temp10348_145 () (_ BitVec 64))
(declare-fun temp10348_146 () (_ BitVec 64))
(declare-fun temp10348_147 () (_ BitVec 64))
(declare-fun temp10348_148 () (_ BitVec 64))
(declare-fun temp10348_149 () (_ BitVec 64))
(declare-fun temp10348_150 () (_ BitVec 64))
(declare-fun temp10348_151 () (_ BitVec 64))
(declare-fun temp10348_152 () (_ BitVec 64))
(declare-fun temp10348_153 () (_ BitVec 64))
(declare-fun temp10348_154 () (_ BitVec 64))
(declare-fun temp10348_155 () (_ BitVec 64))
(declare-fun temp10348_157 () (_ BitVec 64))
(declare-fun temp10348_158 () (_ BitVec 64))
(declare-fun temp10348_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10348_159 () (_ BitVec 64))
(declare-fun temp10348_160 () (_ BitVec 64))
(declare-fun temp10348_162 () (_ BitVec 64))
(declare-fun temp10348_163 () (_ BitVec 64))
(declare-fun temp10348_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10348_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10348_165 () (_ BitVec 64))
(declare-fun temp10348_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10348_167 () (_ BitVec 64))
(declare-fun temp10348_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10348_169 () (_ BitVec 64))
(declare-fun temp10348_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10348_171 () (_ BitVec 64))
(declare-fun temp10348_172 () (_ BitVec 64))
(declare-fun temp10348_173 () (_ BitVec 64))
(declare-fun temp10348_174 () (_ BitVec 64))
(declare-fun temp10348_175 () (_ BitVec 64))
(declare-fun temp10348_176 () (_ BitVec 64))
(declare-fun temp10348_177 () (_ BitVec 64))
(declare-fun temp10348_178 () (_ BitVec 64))
(declare-fun temp10348_179 () (_ BitVec 64))
(declare-fun temp10348_180 () (_ BitVec 64))
(declare-fun temp10348_181 () (_ BitVec 64))
(declare-fun temp10348_182 () (_ BitVec 64))
(declare-fun temp10348_183 () (_ BitVec 64))
(declare-fun temp10348_184 () (_ BitVec 64))
(declare-fun temp10348_185 () (_ BitVec 64))
(declare-fun temp10348_186 () (_ BitVec 64))
(declare-fun temp10348_187 () (_ BitVec 64))
(declare-fun temp10348_188 () (_ BitVec 64))
(declare-fun temp10348_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10348_190 () (_ BitVec 64))
(declare-fun temp10348_192 () (_ BitVec 64))
(declare-fun temp10348_193 () (_ BitVec 64))
(declare-fun temp10348_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10348_194 () (_ BitVec 64))
(declare-fun temp10348_195 () (_ BitVec 64))
(declare-fun temp10348_197 () (_ BitVec 64))
(declare-fun temp10348_198 () (_ BitVec 64))
(declare-fun temp10348_196 () (_ BitVec 64))
(declare-fun temp10348_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10348_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10348_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10348_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10348_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10348_204 () (_ BitVec 64))
(declare-fun temp10348_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10348_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10348_207 () (_ BitVec 64))
(declare-fun temp10348_208 () (_ BitVec 64))
(declare-fun temp10348_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10348_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10348_211 () (_ BitVec 64))
(declare-fun temp10348_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10348_213 () (_ BitVec 64))
(declare-fun temp10348_214 () (_ BitVec 64))
(declare-fun temp10348_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10348_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10348_217 () (_ BitVec 64))
(declare-fun temp10348_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10348_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10348_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var5124496 () (_ BitVec 64))
(declare-fun var5386640 () (_ BitVec 64))
(declare-fun temp10348_221 () (_ BitVec 64))
(declare-fun temp10348_222 () (_ BitVec 64))
(declare-fun var7025428 () (_ BitVec 64))
(declare-fun var7025395 () (_ BitVec 64))
(declare-fun var6893959 () (_ BitVec 64))
(declare-fun var6893955 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp10348_223 () (_ BitVec 64))
(assert (= temp10348_1 #x0000000000000001))
(assert (= var77203 temp10348_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10348_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10348_2)))
(assert (= temp10348_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10348_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10348_4 #x0000000000000000))
(assert (= var210941 temp10348_4))
(assert (= temp10348_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10348_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10348_6 #x0000000000000000))
(assert (= var210986 temp10348_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10348_7 #x0000000000000000))
(assert (= temp10348_8 temp10348_7))
(assert (= temp10348_9 (select ARGNAME_padding_NAMEEND_VAL temp10348_8)))
(assert (= temp10348_10 #x0000000000000001))
(assert (= temp10348_11 temp10348_10))
(assert (= temp10348_12 (select ARGNAME_padding_NAMEEND_VAL temp10348_11)))
(assert (= temp10348_13 #x0000000000000002))
(assert (= temp10348_14 temp10348_13))
(assert (= temp10348_15 (select ARGNAME_padding_NAMEEND_VAL temp10348_14)))
(assert (= temp10348_16 #x0000000000000003))
(assert (= temp10348_17 temp10348_16))
(assert (= temp10348_18 (select ARGNAME_padding_NAMEEND_VAL temp10348_17)))
(assert (= temp10348_19 #x0000000000000004))
(assert (= temp10348_20 temp10348_19))
(assert (= temp10348_21 (select ARGNAME_padding_NAMEEND_VAL temp10348_20)))
(assert (= temp10348_22 #x0000000000000005))
(assert (= temp10348_23 temp10348_22))
(assert (= temp10348_24 (select ARGNAME_padding_NAMEEND_VAL temp10348_23)))
(assert (= temp10348_25 #x0000000000000000))
(assert (= temp10348_26 #x0000000000000000))
(assert (= temp10348_27 temp10348_26))
(assert (= temp10348_28 (select ARGNAME_padding_NAMEEND_VAL temp10348_27)))
(assert (= temp10348_29 #x0000000000000000))
(assert (= temp10348_30 #x0000000000000001))
(assert (= temp10348_31 temp10348_30))
(assert (= temp10348_32 (select ARGNAME_padding_NAMEEND_VAL temp10348_31)))
(assert (= temp10348_33 #x0000000000000000))
(assert (= temp10348_34 #x0000000000000002))
(assert (= temp10348_35 temp10348_34))
(assert (= temp10348_36 (select ARGNAME_padding_NAMEEND_VAL temp10348_35)))
(assert (= temp10348_37 #x0000000000000000))
(assert (= temp10348_38 #x0000000000000003))
(assert (= temp10348_39 temp10348_38))
(assert (= temp10348_40 (select ARGNAME_padding_NAMEEND_VAL temp10348_39)))
(assert (= temp10348_41 #x0000000000000000))
(assert (= temp10348_42 #x0000000000000004))
(assert (= temp10348_43 temp10348_42))
(assert (= temp10348_44 (select ARGNAME_padding_NAMEEND_VAL temp10348_43)))
(assert (= temp10348_45 #x0000000000000000))
(assert (= temp10348_46 #x0000000000000005))
(assert (= temp10348_47 temp10348_46))
(assert (= temp10348_48 (select ARGNAME_padding_NAMEEND_VAL temp10348_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10348_28 temp10348_25)
             (bvslt temp10348_32 temp10348_29)
             (bvslt temp10348_36 temp10348_33)
             (bvslt temp10348_40 temp10348_37)
             (bvslt temp10348_44 temp10348_41)
             (bvslt temp10348_48 temp10348_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10348_49 #x0000000000000000))
(assert (= var1191714 temp10348_49))
(assert (= temp10348_50 #x0000000000000000))
(assert (= temp10348_51 temp10348_50))
(assert (= temp10348_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10348_51)))
(assert (= temp10348_53 #x0000000000000001))
(assert (= temp10348_54 temp10348_53))
(assert (= temp10348_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10348_54)))
(assert (= temp10348_56 #x0000000000000002))
(assert (= temp10348_57 temp10348_56))
(assert (= temp10348_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10348_57)))
(assert (= temp10348_59 #x0000000000000003))
(assert (= temp10348_60 temp10348_59))
(assert (= temp10348_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10348_60)))
(assert (= temp10348_62 #x0000000000000004))
(assert (= temp10348_63 temp10348_62))
(assert (= temp10348_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10348_63)))
(assert (= temp10348_65 #x0000000000000005))
(assert (= temp10348_66 temp10348_65))
(assert (= temp10348_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10348_66)))
(assert (= temp10348_68 #x0000000000000000))
(assert (= temp10348_69 #x0000000000000000))
(assert (= temp10348_70 temp10348_69))
(assert (= temp10348_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10348_70)))
(assert (= temp10348_72 #x0000000000000000))
(assert (= temp10348_73 #x0000000000000001))
(assert (= temp10348_74 temp10348_73))
(assert (= temp10348_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10348_74)))
(assert (= temp10348_76 #x0000000000000000))
(assert (= temp10348_77 #x0000000000000002))
(assert (= temp10348_78 temp10348_77))
(assert (= temp10348_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10348_78)))
(assert (= temp10348_80 #x0000000000000000))
(assert (= temp10348_81 #x0000000000000003))
(assert (= temp10348_82 temp10348_81))
(assert (= temp10348_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10348_82)))
(assert (= temp10348_84 #x0000000000000000))
(assert (= temp10348_85 #x0000000000000004))
(assert (= temp10348_86 temp10348_85))
(assert (= temp10348_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10348_86)))
(assert (= temp10348_88 #x0000000000000000))
(assert (= temp10348_89 #x0000000000000005))
(assert (= temp10348_90 temp10348_89))
(assert (= temp10348_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10348_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10348_71 temp10348_68)
             (bvslt temp10348_75 temp10348_72)
             (bvslt temp10348_79 temp10348_76)
             (bvslt temp10348_83 temp10348_80)
             (bvslt temp10348_87 temp10348_84)
             (bvslt temp10348_91 temp10348_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10348_92 #x0000000000000000))
(assert (= var1191725 temp10348_92))
(assert (= temp10348_93 #x0000000000000000))
(assert (= temp10348_94 temp10348_93))
(assert (= temp10348_95 (select ARGNAME_stride_NAMEEND_VAL temp10348_94)))
(assert (= temp10348_96 #x0000000000000001))
(assert (= temp10348_97 temp10348_96))
(assert (= temp10348_98 (select ARGNAME_stride_NAMEEND_VAL temp10348_97)))
(assert (= temp10348_99 #x0000000000000002))
(assert (= temp10348_100 temp10348_99))
(assert (= temp10348_101 (select ARGNAME_stride_NAMEEND_VAL temp10348_100)))
(assert (= temp10348_102 #x0000000000000003))
(assert (= temp10348_103 temp10348_102))
(assert (= temp10348_104 (select ARGNAME_stride_NAMEEND_VAL temp10348_103)))
(assert (= temp10348_105 #x0000000000000004))
(assert (= temp10348_106 temp10348_105))
(assert (= temp10348_107 (select ARGNAME_stride_NAMEEND_VAL temp10348_106)))
(assert (= temp10348_108 #x0000000000000005))
(assert (= temp10348_109 temp10348_108))
(assert (= temp10348_110 (select ARGNAME_stride_NAMEEND_VAL temp10348_109)))
(assert (= temp10348_111 #x0000000000000000))
(assert (= temp10348_112 #x0000000000000000))
(assert (= temp10348_113 temp10348_112))
(assert (= temp10348_114 (select ARGNAME_stride_NAMEEND_VAL temp10348_113)))
(assert (= temp10348_115 #x0000000000000000))
(assert (= temp10348_116 #x0000000000000001))
(assert (= temp10348_117 temp10348_116))
(assert (= temp10348_118 (select ARGNAME_stride_NAMEEND_VAL temp10348_117)))
(assert (= temp10348_119 #x0000000000000000))
(assert (= temp10348_120 #x0000000000000002))
(assert (= temp10348_121 temp10348_120))
(assert (= temp10348_122 (select ARGNAME_stride_NAMEEND_VAL temp10348_121)))
(assert (= temp10348_123 #x0000000000000000))
(assert (= temp10348_124 #x0000000000000003))
(assert (= temp10348_125 temp10348_124))
(assert (= temp10348_126 (select ARGNAME_stride_NAMEEND_VAL temp10348_125)))
(assert (= temp10348_127 #x0000000000000000))
(assert (= temp10348_128 #x0000000000000004))
(assert (= temp10348_129 temp10348_128))
(assert (= temp10348_130 (select ARGNAME_stride_NAMEEND_VAL temp10348_129)))
(assert (= temp10348_131 #x0000000000000000))
(assert (= temp10348_132 #x0000000000000005))
(assert (= temp10348_133 temp10348_132))
(assert (= temp10348_134 (select ARGNAME_stride_NAMEEND_VAL temp10348_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10348_114 temp10348_111)
             (bvsle temp10348_118 temp10348_115)
             (bvsle temp10348_122 temp10348_119)
             (bvsle temp10348_126 temp10348_123)
             (bvsle temp10348_130 temp10348_127)
             (bvsle temp10348_134 temp10348_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10348_135 #x0000000000000000))
(assert (= var1191735 temp10348_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10348_136 #x0000000000000001))
(assert (= var1191747 temp10348_136))
(assert (= temp10348_137 #x0000000000000000))
(assert (= var1179826 temp10348_137))
(assert (= temp10348_138 #x0000000000000000))
(assert (= temp10348_139 temp10348_138))
(assert (= temp10348_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10348_139)))
(assert (= temp10348_141 #x0000000000000001))
(assert (= temp10348_142 temp10348_141))
(assert (= temp10348_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10348_142)))
(assert (= temp10348_144 #x0000000000000002))
(assert (= temp10348_145 temp10348_144))
(assert (= temp10348_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10348_145)))
(assert (= temp10348_147 #x0000000000000003))
(assert (= temp10348_148 temp10348_147))
(assert (= temp10348_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10348_148)))
(assert (= temp10348_150 #x0000000000000004))
(assert (= temp10348_151 temp10348_150))
(assert (= temp10348_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10348_151)))
(assert (= temp10348_153 #x0000000000000005))
(assert (= temp10348_154 temp10348_153))
(assert (= temp10348_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10348_154)))
(assert (= temp10348_157 var1179826))
(assert (= temp10348_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10348_157)))
(assert (= temp10348_156 temp10348_158))
(assert (= var1191780
   (ite (bvslt temp10348_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10348_159 #x0000000000000000))
(assert (= var1191780 temp10348_159))
(assert (= temp10348_160 #x0000000000000000))
(assert (= var1179826 temp10348_160))
(assert (= temp10348_162 var1179826))
(assert (= temp10348_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10348_162)))
(assert (= temp10348_161 temp10348_163))
(assert (= var1191802 (bvsmod temp10348_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10348_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10348_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10348_165 #x0000000000000001))
(assert (= var1191803 temp10348_165))
(assert (= temp10348_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10348_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10348_167 #x0000000000000001))
(assert (= var1191823 temp10348_167))
(assert (= temp10348_168 #x0000000000000001))
(assert (= var1180714 temp10348_168))
(assert (= temp10348_169 #x0000000000000000))
(assert (= temp10348_170 temp10348_169))
(assert (= temp10348_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10348_170)))
(assert (= temp10348_172 #x0000000000000001))
(assert (= temp10348_173 temp10348_172))
(assert (= temp10348_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10348_173)))
(assert (= temp10348_175 #x0000000000000002))
(assert (= temp10348_176 temp10348_175))
(assert (= temp10348_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10348_176)))
(assert (= temp10348_178 #x0000000000000003))
(assert (= temp10348_179 temp10348_178))
(assert (= temp10348_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10348_179)))
(assert (= temp10348_181 #x0000000000000004))
(assert (= temp10348_182 temp10348_181))
(assert (= temp10348_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10348_182)))
(assert (= temp10348_184 #x0000000000000005))
(assert (= temp10348_185 temp10348_184))
(assert (= temp10348_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10348_185)))
(assert (= temp10348_187 #x0000000000000000))
(assert (= temp10348_188
   (ite (bvslt var1180714 temp10348_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10348_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10348_188)))
(assert (= var1191831 temp10348_189))
(assert (bvslt (ite (bvslt var1180714 temp10348_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10348_190 #x0000000000000001))
(assert (= var1180714 temp10348_190))
(assert (= temp10348_192 var1180714))
(assert (= temp10348_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10348_192)))
(assert (= temp10348_191 temp10348_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10348_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10348_194 #x0000000000000001))
(assert (= var1191836 temp10348_194))
(assert (= temp10348_195 #x0000000000000000))
(assert (= var1179826 temp10348_195))
(assert (= temp10348_197 var1179826))
(assert (= temp10348_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10348_197)))
(assert (= temp10348_196 temp10348_198))
(assert (= temp10348_199 #x0000000000000002))
(assert (= var1586025 temp10348_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10348_200 #x0000000000000001))
(assert (= var1191993 temp10348_200))
(assert (= temp10348_201 #x0000000000000001))
(assert (= var2700303 temp10348_201))
(assert (= temp10348_202 #x0000000000000001))
(assert (= var2962447 temp10348_202))
(assert (= temp10348_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10348_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10348_204 #x0000000000000001))
(assert (= var211058 temp10348_204))
(assert (= temp10348_205 #x0000000000000001))
(assert (= var211188 temp10348_205))
(assert (= var3879401 var211188))
(assert (= temp10348_206 #x0000000000000000))
(assert (= var3866802 temp10348_206))
(assert (= temp10348_207 #x0000000000000000))
(assert (= temp10348_208
   (ite (bvslt var3866802 temp10348_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10348_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10348_208)))
(assert (= var3879420 temp10348_209))
(assert (bvslt (ite (bvslt var3866802 temp10348_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10348_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10348_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10348_211 #x0000000000000000))
(assert (= var3879421 temp10348_211))
(assert (= temp10348_212 #x0000000000000001))
(assert (= var3867690 temp10348_212))
(assert (= temp10348_213 #x0000000000000000))
(assert (= temp10348_214
   (ite (bvslt var3867690 temp10348_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10348_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10348_214)))
(assert (= var3879423 temp10348_215))
(assert (bvslt (ite (bvslt var3867690 temp10348_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10348_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10348_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10348_217 #x0000000000000001))
(assert (= var3879424 temp10348_217))
(assert (= temp10348_218 #x0000000000000000))
(assert (= var4079423 temp10348_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10348_219 #x0000000000000002))
(assert (= var4208259 temp10348_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10348_220 #x0000000000000000))
(assert (= var4273820 temp10348_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var5124496 var211201))
(assert (= var5386640 var211201))
(assert (= temp10348_221 #x0000000000000001))
(assert (= var211058 temp10348_221))
(assert (= temp10348_222 #x0000000000000000))
(assert (= var7025428 temp10348_222))
(assert (= var7025395 var7025428))
(assert (= var6893959 var7025395))
(assert (= var6893955 var6893959))
(assert (= var212669 var6893955))
(assert (= temp10348_223 #x0000000000000000))
(assert (= var212669 temp10348_223))
(model-add temp10348_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10348_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10348_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10348_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




