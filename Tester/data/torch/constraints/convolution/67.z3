(declare-fun temp89_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp89_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp89_3 () (_ BitVec 64))
(declare-fun temp89_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp89_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp89_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp89_7 () (_ BitVec 64))
(declare-fun temp89_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp89_9 () (_ BitVec 64))
(declare-fun temp89_10 () (_ BitVec 64))
(declare-fun temp89_11 () (_ BitVec 64))
(declare-fun temp89_12 () (_ BitVec 64))
(declare-fun temp89_13 () (_ BitVec 64))
(declare-fun temp89_14 () (_ BitVec 64))
(declare-fun temp89_15 () (_ BitVec 64))
(declare-fun temp89_16 () (_ BitVec 64))
(declare-fun temp89_17 () (_ BitVec 64))
(declare-fun temp89_18 () (_ BitVec 64))
(declare-fun temp89_19 () (_ BitVec 64))
(declare-fun temp89_20 () (_ BitVec 64))
(declare-fun temp89_21 () (_ BitVec 64))
(declare-fun temp89_22 () (_ BitVec 64))
(declare-fun temp89_23 () (_ BitVec 64))
(declare-fun temp89_24 () (_ BitVec 64))
(declare-fun temp89_25 () (_ BitVec 64))
(declare-fun temp89_26 () (_ BitVec 64))
(declare-fun temp89_27 () (_ BitVec 64))
(declare-fun temp89_28 () (_ BitVec 64))
(declare-fun temp89_29 () (_ BitVec 64))
(declare-fun temp89_30 () (_ BitVec 64))
(declare-fun temp89_31 () (_ BitVec 64))
(declare-fun temp89_32 () (_ BitVec 64))
(declare-fun temp89_33 () (_ BitVec 64))
(declare-fun temp89_34 () (_ BitVec 64))
(declare-fun temp89_35 () (_ BitVec 64))
(declare-fun temp89_36 () (_ BitVec 64))
(declare-fun temp89_37 () (_ BitVec 64))
(declare-fun temp89_38 () (_ BitVec 64))
(declare-fun temp89_39 () (_ BitVec 64))
(declare-fun temp89_40 () (_ BitVec 64))
(declare-fun temp89_41 () (_ BitVec 64))
(declare-fun temp89_42 () (_ BitVec 64))
(declare-fun temp89_43 () (_ BitVec 64))
(declare-fun temp89_44 () (_ BitVec 64))
(declare-fun temp89_45 () (_ BitVec 64))
(declare-fun temp89_46 () (_ BitVec 64))
(declare-fun temp89_47 () (_ BitVec 64))
(declare-fun temp89_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp89_49 () (_ BitVec 64))
(declare-fun temp89_50 () (_ BitVec 64))
(declare-fun temp89_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp89_52 () (_ BitVec 64))
(declare-fun temp89_53 () (_ BitVec 64))
(declare-fun temp89_54 () (_ BitVec 64))
(declare-fun temp89_55 () (_ BitVec 64))
(declare-fun temp89_56 () (_ BitVec 64))
(declare-fun temp89_57 () (_ BitVec 64))
(declare-fun temp89_58 () (_ BitVec 64))
(declare-fun temp89_59 () (_ BitVec 64))
(declare-fun temp89_60 () (_ BitVec 64))
(declare-fun temp89_61 () (_ BitVec 64))
(declare-fun temp89_62 () (_ BitVec 64))
(declare-fun temp89_63 () (_ BitVec 64))
(declare-fun temp89_64 () (_ BitVec 64))
(declare-fun temp89_65 () (_ BitVec 64))
(declare-fun temp89_66 () (_ BitVec 64))
(declare-fun temp89_67 () (_ BitVec 64))
(declare-fun temp89_68 () (_ BitVec 64))
(declare-fun temp89_69 () (_ BitVec 64))
(declare-fun temp89_70 () (_ BitVec 64))
(declare-fun temp89_71 () (_ BitVec 64))
(declare-fun temp89_72 () (_ BitVec 64))
(declare-fun temp89_73 () (_ BitVec 64))
(declare-fun temp89_74 () (_ BitVec 64))
(declare-fun temp89_75 () (_ BitVec 64))
(declare-fun temp89_76 () (_ BitVec 64))
(declare-fun temp89_77 () (_ BitVec 64))
(declare-fun temp89_78 () (_ BitVec 64))
(declare-fun temp89_79 () (_ BitVec 64))
(declare-fun temp89_80 () (_ BitVec 64))
(declare-fun temp89_81 () (_ BitVec 64))
(declare-fun temp89_82 () (_ BitVec 64))
(declare-fun temp89_83 () (_ BitVec 64))
(declare-fun temp89_84 () (_ BitVec 64))
(declare-fun temp89_85 () (_ BitVec 64))
(declare-fun temp89_86 () (_ BitVec 64))
(declare-fun temp89_87 () (_ BitVec 64))
(declare-fun temp89_88 () (_ BitVec 64))
(declare-fun temp89_89 () (_ BitVec 64))
(declare-fun temp89_90 () (_ BitVec 64))
(declare-fun temp89_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp89_92 () (_ BitVec 64))
(declare-fun temp89_93 () (_ BitVec 64))
(declare-fun temp89_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp89_95 () (_ BitVec 64))
(declare-fun temp89_96 () (_ BitVec 64))
(declare-fun temp89_97 () (_ BitVec 64))
(declare-fun temp89_98 () (_ BitVec 64))
(declare-fun temp89_99 () (_ BitVec 64))
(declare-fun temp89_100 () (_ BitVec 64))
(declare-fun temp89_101 () (_ BitVec 64))
(declare-fun temp89_102 () (_ BitVec 64))
(declare-fun temp89_103 () (_ BitVec 64))
(declare-fun temp89_104 () (_ BitVec 64))
(declare-fun temp89_105 () (_ BitVec 64))
(declare-fun temp89_106 () (_ BitVec 64))
(declare-fun temp89_107 () (_ BitVec 64))
(declare-fun temp89_108 () (_ BitVec 64))
(declare-fun temp89_109 () (_ BitVec 64))
(declare-fun temp89_110 () (_ BitVec 64))
(declare-fun temp89_111 () (_ BitVec 64))
(declare-fun temp89_112 () (_ BitVec 64))
(declare-fun temp89_113 () (_ BitVec 64))
(declare-fun temp89_114 () (_ BitVec 64))
(declare-fun temp89_115 () (_ BitVec 64))
(declare-fun temp89_116 () (_ BitVec 64))
(declare-fun temp89_117 () (_ BitVec 64))
(declare-fun temp89_118 () (_ BitVec 64))
(declare-fun temp89_119 () (_ BitVec 64))
(declare-fun temp89_120 () (_ BitVec 64))
(declare-fun temp89_121 () (_ BitVec 64))
(declare-fun temp89_122 () (_ BitVec 64))
(declare-fun temp89_123 () (_ BitVec 64))
(declare-fun temp89_124 () (_ BitVec 64))
(declare-fun temp89_125 () (_ BitVec 64))
(declare-fun temp89_126 () (_ BitVec 64))
(declare-fun temp89_127 () (_ BitVec 64))
(declare-fun temp89_128 () (_ BitVec 64))
(declare-fun temp89_129 () (_ BitVec 64))
(declare-fun temp89_130 () (_ BitVec 64))
(declare-fun temp89_131 () (_ BitVec 64))
(declare-fun temp89_132 () (_ BitVec 64))
(declare-fun temp89_133 () (_ BitVec 64))
(declare-fun temp89_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp89_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp89_136 () (_ BitVec 64))
(declare-fun temp89_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp89_138 () (_ BitVec 64))
(declare-fun temp89_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp89_140 () (_ BitVec 64))
(declare-fun temp89_141 () (_ BitVec 64))
(declare-fun temp89_142 () (_ BitVec 64))
(declare-fun temp89_143 () (_ BitVec 64))
(declare-fun temp89_144 () (_ BitVec 64))
(declare-fun temp89_145 () (_ BitVec 64))
(declare-fun temp89_146 () (_ BitVec 64))
(declare-fun temp89_147 () (_ BitVec 64))
(declare-fun temp89_148 () (_ BitVec 64))
(declare-fun temp89_149 () (_ BitVec 64))
(declare-fun temp89_150 () (_ BitVec 64))
(declare-fun temp89_151 () (_ BitVec 64))
(declare-fun temp89_152 () (_ BitVec 64))
(declare-fun temp89_153 () (_ BitVec 64))
(declare-fun temp89_154 () (_ BitVec 64))
(declare-fun temp89_155 () (_ BitVec 64))
(declare-fun temp89_157 () (_ BitVec 64))
(declare-fun temp89_158 () (_ BitVec 64))
(declare-fun temp89_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp89_159 () (_ BitVec 64))
(declare-fun temp89_160 () (_ BitVec 64))
(declare-fun temp89_162 () (_ BitVec 64))
(declare-fun temp89_163 () (_ BitVec 64))
(declare-fun temp89_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp89_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp89_165 () (_ BitVec 64))
(declare-fun temp89_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp89_167 () (_ BitVec 64))
(declare-fun temp89_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp89_169 () (_ BitVec 64))
(declare-fun temp89_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp89_171 () (_ BitVec 64))
(declare-fun temp89_172 () (_ BitVec 64))
(declare-fun temp89_173 () (_ BitVec 64))
(declare-fun temp89_174 () (_ BitVec 64))
(declare-fun temp89_175 () (_ BitVec 64))
(declare-fun temp89_176 () (_ BitVec 64))
(declare-fun temp89_177 () (_ BitVec 64))
(declare-fun temp89_178 () (_ BitVec 64))
(declare-fun temp89_179 () (_ BitVec 64))
(declare-fun temp89_180 () (_ BitVec 64))
(declare-fun temp89_181 () (_ BitVec 64))
(declare-fun temp89_182 () (_ BitVec 64))
(declare-fun temp89_183 () (_ BitVec 64))
(declare-fun temp89_184 () (_ BitVec 64))
(declare-fun temp89_185 () (_ BitVec 64))
(declare-fun temp89_186 () (_ BitVec 64))
(declare-fun temp89_187 () (_ BitVec 64))
(declare-fun temp89_188 () (_ BitVec 64))
(declare-fun temp89_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp89_190 () (_ BitVec 64))
(declare-fun temp89_192 () (_ BitVec 64))
(declare-fun temp89_193 () (_ BitVec 64))
(declare-fun temp89_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp89_194 () (_ BitVec 64))
(declare-fun temp89_195 () (_ BitVec 64))
(declare-fun temp89_197 () (_ BitVec 64))
(declare-fun temp89_198 () (_ BitVec 64))
(declare-fun temp89_196 () (_ BitVec 64))
(declare-fun temp89_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp89_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp89_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp89_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp89_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp89_204 () (_ BitVec 64))
(declare-fun temp89_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp89_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp89_207 () (_ BitVec 64))
(declare-fun temp89_208 () (_ BitVec 64))
(declare-fun temp89_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp89_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp89_211 () (_ BitVec 64))
(declare-fun temp89_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp89_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp89_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp89_216 () (_ BitVec 64))
(declare-fun temp89_215 () (_ BitVec 64))
(declare-fun temp89_217 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp89_218 () (_ BitVec 64))
(declare-fun temp89_219 () (_ BitVec 64))
(declare-fun temp89_220 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp89_221 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp89_222 () (_ BitVec 64))
(declare-fun temp89_224 () (_ BitVec 64))
(declare-fun temp89_223 () (_ BitVec 64))
(declare-fun temp89_225 () (_ BitVec 64))
(assert (= temp89_1 #x0000000000000001))
(assert (= var77203 temp89_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp89_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp89_2)))
(assert (= temp89_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp89_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp89_4 #x0000000000000000))
(assert (= var210941 temp89_4))
(assert (= temp89_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp89_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp89_6 #x0000000000000000))
(assert (= var210986 temp89_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp89_7 #x0000000000000000))
(assert (= temp89_8 temp89_7))
(assert (= temp89_9 (select ARGNAME_padding_NAMEEND_VAL temp89_8)))
(assert (= temp89_10 #x0000000000000001))
(assert (= temp89_11 temp89_10))
(assert (= temp89_12 (select ARGNAME_padding_NAMEEND_VAL temp89_11)))
(assert (= temp89_13 #x0000000000000002))
(assert (= temp89_14 temp89_13))
(assert (= temp89_15 (select ARGNAME_padding_NAMEEND_VAL temp89_14)))
(assert (= temp89_16 #x0000000000000003))
(assert (= temp89_17 temp89_16))
(assert (= temp89_18 (select ARGNAME_padding_NAMEEND_VAL temp89_17)))
(assert (= temp89_19 #x0000000000000004))
(assert (= temp89_20 temp89_19))
(assert (= temp89_21 (select ARGNAME_padding_NAMEEND_VAL temp89_20)))
(assert (= temp89_22 #x0000000000000005))
(assert (= temp89_23 temp89_22))
(assert (= temp89_24 (select ARGNAME_padding_NAMEEND_VAL temp89_23)))
(assert (= temp89_25 #x0000000000000000))
(assert (= temp89_26 #x0000000000000000))
(assert (= temp89_27 temp89_26))
(assert (= temp89_28 (select ARGNAME_padding_NAMEEND_VAL temp89_27)))
(assert (= temp89_29 #x0000000000000000))
(assert (= temp89_30 #x0000000000000001))
(assert (= temp89_31 temp89_30))
(assert (= temp89_32 (select ARGNAME_padding_NAMEEND_VAL temp89_31)))
(assert (= temp89_33 #x0000000000000000))
(assert (= temp89_34 #x0000000000000002))
(assert (= temp89_35 temp89_34))
(assert (= temp89_36 (select ARGNAME_padding_NAMEEND_VAL temp89_35)))
(assert (= temp89_37 #x0000000000000000))
(assert (= temp89_38 #x0000000000000003))
(assert (= temp89_39 temp89_38))
(assert (= temp89_40 (select ARGNAME_padding_NAMEEND_VAL temp89_39)))
(assert (= temp89_41 #x0000000000000000))
(assert (= temp89_42 #x0000000000000004))
(assert (= temp89_43 temp89_42))
(assert (= temp89_44 (select ARGNAME_padding_NAMEEND_VAL temp89_43)))
(assert (= temp89_45 #x0000000000000000))
(assert (= temp89_46 #x0000000000000005))
(assert (= temp89_47 temp89_46))
(assert (= temp89_48 (select ARGNAME_padding_NAMEEND_VAL temp89_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp89_28 temp89_25)
             (bvslt temp89_32 temp89_29)
             (bvslt temp89_36 temp89_33)
             (bvslt temp89_40 temp89_37)
             (bvslt temp89_44 temp89_41)
             (bvslt temp89_48 temp89_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp89_49 #x0000000000000000))
(assert (= var1191714 temp89_49))
(assert (= temp89_50 #x0000000000000000))
(assert (= temp89_51 temp89_50))
(assert (= temp89_52 (select ARGNAME_output_padding_NAMEEND_VAL temp89_51)))
(assert (= temp89_53 #x0000000000000001))
(assert (= temp89_54 temp89_53))
(assert (= temp89_55 (select ARGNAME_output_padding_NAMEEND_VAL temp89_54)))
(assert (= temp89_56 #x0000000000000002))
(assert (= temp89_57 temp89_56))
(assert (= temp89_58 (select ARGNAME_output_padding_NAMEEND_VAL temp89_57)))
(assert (= temp89_59 #x0000000000000003))
(assert (= temp89_60 temp89_59))
(assert (= temp89_61 (select ARGNAME_output_padding_NAMEEND_VAL temp89_60)))
(assert (= temp89_62 #x0000000000000004))
(assert (= temp89_63 temp89_62))
(assert (= temp89_64 (select ARGNAME_output_padding_NAMEEND_VAL temp89_63)))
(assert (= temp89_65 #x0000000000000005))
(assert (= temp89_66 temp89_65))
(assert (= temp89_67 (select ARGNAME_output_padding_NAMEEND_VAL temp89_66)))
(assert (= temp89_68 #x0000000000000000))
(assert (= temp89_69 #x0000000000000000))
(assert (= temp89_70 temp89_69))
(assert (= temp89_71 (select ARGNAME_output_padding_NAMEEND_VAL temp89_70)))
(assert (= temp89_72 #x0000000000000000))
(assert (= temp89_73 #x0000000000000001))
(assert (= temp89_74 temp89_73))
(assert (= temp89_75 (select ARGNAME_output_padding_NAMEEND_VAL temp89_74)))
(assert (= temp89_76 #x0000000000000000))
(assert (= temp89_77 #x0000000000000002))
(assert (= temp89_78 temp89_77))
(assert (= temp89_79 (select ARGNAME_output_padding_NAMEEND_VAL temp89_78)))
(assert (= temp89_80 #x0000000000000000))
(assert (= temp89_81 #x0000000000000003))
(assert (= temp89_82 temp89_81))
(assert (= temp89_83 (select ARGNAME_output_padding_NAMEEND_VAL temp89_82)))
(assert (= temp89_84 #x0000000000000000))
(assert (= temp89_85 #x0000000000000004))
(assert (= temp89_86 temp89_85))
(assert (= temp89_87 (select ARGNAME_output_padding_NAMEEND_VAL temp89_86)))
(assert (= temp89_88 #x0000000000000000))
(assert (= temp89_89 #x0000000000000005))
(assert (= temp89_90 temp89_89))
(assert (= temp89_91 (select ARGNAME_output_padding_NAMEEND_VAL temp89_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp89_71 temp89_68)
             (bvslt temp89_75 temp89_72)
             (bvslt temp89_79 temp89_76)
             (bvslt temp89_83 temp89_80)
             (bvslt temp89_87 temp89_84)
             (bvslt temp89_91 temp89_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp89_92 #x0000000000000000))
(assert (= var1191725 temp89_92))
(assert (= temp89_93 #x0000000000000000))
(assert (= temp89_94 temp89_93))
(assert (= temp89_95 (select ARGNAME_stride_NAMEEND_VAL temp89_94)))
(assert (= temp89_96 #x0000000000000001))
(assert (= temp89_97 temp89_96))
(assert (= temp89_98 (select ARGNAME_stride_NAMEEND_VAL temp89_97)))
(assert (= temp89_99 #x0000000000000002))
(assert (= temp89_100 temp89_99))
(assert (= temp89_101 (select ARGNAME_stride_NAMEEND_VAL temp89_100)))
(assert (= temp89_102 #x0000000000000003))
(assert (= temp89_103 temp89_102))
(assert (= temp89_104 (select ARGNAME_stride_NAMEEND_VAL temp89_103)))
(assert (= temp89_105 #x0000000000000004))
(assert (= temp89_106 temp89_105))
(assert (= temp89_107 (select ARGNAME_stride_NAMEEND_VAL temp89_106)))
(assert (= temp89_108 #x0000000000000005))
(assert (= temp89_109 temp89_108))
(assert (= temp89_110 (select ARGNAME_stride_NAMEEND_VAL temp89_109)))
(assert (= temp89_111 #x0000000000000000))
(assert (= temp89_112 #x0000000000000000))
(assert (= temp89_113 temp89_112))
(assert (= temp89_114 (select ARGNAME_stride_NAMEEND_VAL temp89_113)))
(assert (= temp89_115 #x0000000000000000))
(assert (= temp89_116 #x0000000000000001))
(assert (= temp89_117 temp89_116))
(assert (= temp89_118 (select ARGNAME_stride_NAMEEND_VAL temp89_117)))
(assert (= temp89_119 #x0000000000000000))
(assert (= temp89_120 #x0000000000000002))
(assert (= temp89_121 temp89_120))
(assert (= temp89_122 (select ARGNAME_stride_NAMEEND_VAL temp89_121)))
(assert (= temp89_123 #x0000000000000000))
(assert (= temp89_124 #x0000000000000003))
(assert (= temp89_125 temp89_124))
(assert (= temp89_126 (select ARGNAME_stride_NAMEEND_VAL temp89_125)))
(assert (= temp89_127 #x0000000000000000))
(assert (= temp89_128 #x0000000000000004))
(assert (= temp89_129 temp89_128))
(assert (= temp89_130 (select ARGNAME_stride_NAMEEND_VAL temp89_129)))
(assert (= temp89_131 #x0000000000000000))
(assert (= temp89_132 #x0000000000000005))
(assert (= temp89_133 temp89_132))
(assert (= temp89_134 (select ARGNAME_stride_NAMEEND_VAL temp89_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp89_114 temp89_111)
             (bvsle temp89_118 temp89_115)
             (bvsle temp89_122 temp89_119)
             (bvsle temp89_126 temp89_123)
             (bvsle temp89_130 temp89_127)
             (bvsle temp89_134 temp89_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp89_135 #x0000000000000000))
(assert (= var1191735 temp89_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp89_136 #x0000000000000001))
(assert (= var1191747 temp89_136))
(assert (= temp89_137 #x0000000000000000))
(assert (= var1179826 temp89_137))
(assert (= temp89_138 #x0000000000000000))
(assert (= temp89_139 temp89_138))
(assert (= temp89_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp89_139)))
(assert (= temp89_141 #x0000000000000001))
(assert (= temp89_142 temp89_141))
(assert (= temp89_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp89_142)))
(assert (= temp89_144 #x0000000000000002))
(assert (= temp89_145 temp89_144))
(assert (= temp89_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp89_145)))
(assert (= temp89_147 #x0000000000000003))
(assert (= temp89_148 temp89_147))
(assert (= temp89_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp89_148)))
(assert (= temp89_150 #x0000000000000004))
(assert (= temp89_151 temp89_150))
(assert (= temp89_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp89_151)))
(assert (= temp89_153 #x0000000000000005))
(assert (= temp89_154 temp89_153))
(assert (= temp89_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp89_154)))
(assert (= temp89_157 var1179826))
(assert (= temp89_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp89_157)))
(assert (= temp89_156 temp89_158))
(assert (= var1191780
   (ite (bvslt temp89_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp89_159 #x0000000000000000))
(assert (= var1191780 temp89_159))
(assert (= temp89_160 #x0000000000000000))
(assert (= var1179826 temp89_160))
(assert (= temp89_162 var1179826))
(assert (= temp89_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp89_162)))
(assert (= temp89_161 temp89_163))
(assert (= var1191802 (bvsmod temp89_161 ARGNAME_groups_NAMEEND)))
(assert (= temp89_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp89_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp89_165 #x0000000000000001))
(assert (= var1191803 temp89_165))
(assert (= temp89_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp89_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp89_167 #x0000000000000001))
(assert (= var1191823 temp89_167))
(assert (= temp89_168 #x0000000000000001))
(assert (= var1180714 temp89_168))
(assert (= temp89_169 #x0000000000000000))
(assert (= temp89_170 temp89_169))
(assert (= temp89_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp89_170)))
(assert (= temp89_172 #x0000000000000001))
(assert (= temp89_173 temp89_172))
(assert (= temp89_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp89_173)))
(assert (= temp89_175 #x0000000000000002))
(assert (= temp89_176 temp89_175))
(assert (= temp89_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp89_176)))
(assert (= temp89_178 #x0000000000000003))
(assert (= temp89_179 temp89_178))
(assert (= temp89_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp89_179)))
(assert (= temp89_181 #x0000000000000004))
(assert (= temp89_182 temp89_181))
(assert (= temp89_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp89_182)))
(assert (= temp89_184 #x0000000000000005))
(assert (= temp89_185 temp89_184))
(assert (= temp89_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp89_185)))
(assert (= temp89_187 #x0000000000000000))
(assert (= temp89_188
   (ite (bvslt var1180714 temp89_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp89_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp89_188)))
(assert (= var1191831 temp89_189))
(assert (bvslt (ite (bvslt var1180714 temp89_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp89_190 #x0000000000000001))
(assert (= var1180714 temp89_190))
(assert (= temp89_192 var1180714))
(assert (= temp89_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp89_192)))
(assert (= temp89_191 temp89_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp89_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp89_194 #x0000000000000001))
(assert (= var1191836 temp89_194))
(assert (= temp89_195 #x0000000000000000))
(assert (= var1179826 temp89_195))
(assert (= temp89_197 var1179826))
(assert (= temp89_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp89_197)))
(assert (= temp89_196 temp89_198))
(assert (= temp89_199 #x0000000000000002))
(assert (= var1586025 temp89_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp89_200 #x0000000000000001))
(assert (= var1191993 temp89_200))
(assert (= temp89_201 #x0000000000000001))
(assert (= var2700303 temp89_201))
(assert (= temp89_202 #x0000000000000001))
(assert (= var2962447 temp89_202))
(assert (= temp89_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp89_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp89_204 #x0000000000000001))
(assert (= var211058 temp89_204))
(assert (= temp89_205 #x0000000000000001))
(assert (= var211188 temp89_205))
(assert (= var3879401 var211188))
(assert (= temp89_206 #x0000000000000000))
(assert (= var3866802 temp89_206))
(assert (= temp89_207 #x0000000000000000))
(assert (= temp89_208
   (ite (bvslt var3866802 temp89_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp89_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp89_208)))
(assert (= var3879420 temp89_209))
(assert (bvslt (ite (bvslt var3866802 temp89_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp89_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp89_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp89_211 #x0000000000000001))
(assert (= var3879421 temp89_211))
(assert (= temp89_212 #x0000000000000000))
(assert (= var4079423 temp89_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp89_213 #x0000000000000002))
(assert (= var4208259 temp89_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp89_214 #x0000000000000000))
(assert (= var4273820 temp89_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp89_216 #xffffffffffffffff))
(assert (= temp89_215 temp89_216))
(assert (= temp89_217 #x0000000000000001))
(assert (= var197674 temp89_217))
(assert (= temp89_218 #x0000000000000000))
(assert (= temp89_219
   (ite (bvslt var197674 temp89_218)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp89_220 (select ARGNAME_input_NAMEEND_DIMSIZE temp89_219)))
(assert (= var211595 temp89_220))
(assert (bvslt (ite (bvslt var197674 temp89_218)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp89_221 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp89_221) #x0000000000000001 #x0000000000000000)))
(assert (= temp89_222 #x0000000000000001))
(assert (= var211596 temp89_222))
(assert (= temp89_224 #xffffffffffffffff))
(assert (= temp89_223 temp89_224))
(assert (= temp89_225 #x0000000000000001))
(assert (= var211058 temp89_225))
(model-add temp89_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp89_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp89_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp89_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





