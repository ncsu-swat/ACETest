(declare-fun temp600_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp600_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp600_3 () (_ BitVec 64))
(declare-fun temp600_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp600_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp600_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp600_7 () (_ BitVec 64))
(declare-fun temp600_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp600_9 () (_ BitVec 64))
(declare-fun temp600_10 () (_ BitVec 64))
(declare-fun temp600_11 () (_ BitVec 64))
(declare-fun temp600_12 () (_ BitVec 64))
(declare-fun temp600_13 () (_ BitVec 64))
(declare-fun temp600_14 () (_ BitVec 64))
(declare-fun temp600_15 () (_ BitVec 64))
(declare-fun temp600_16 () (_ BitVec 64))
(declare-fun temp600_17 () (_ BitVec 64))
(declare-fun temp600_18 () (_ BitVec 64))
(declare-fun temp600_19 () (_ BitVec 64))
(declare-fun temp600_20 () (_ BitVec 64))
(declare-fun temp600_21 () (_ BitVec 64))
(declare-fun temp600_22 () (_ BitVec 64))
(declare-fun temp600_23 () (_ BitVec 64))
(declare-fun temp600_24 () (_ BitVec 64))
(declare-fun temp600_25 () (_ BitVec 64))
(declare-fun temp600_26 () (_ BitVec 64))
(declare-fun temp600_27 () (_ BitVec 64))
(declare-fun temp600_28 () (_ BitVec 64))
(declare-fun temp600_29 () (_ BitVec 64))
(declare-fun temp600_30 () (_ BitVec 64))
(declare-fun temp600_31 () (_ BitVec 64))
(declare-fun temp600_32 () (_ BitVec 64))
(declare-fun temp600_33 () (_ BitVec 64))
(declare-fun temp600_34 () (_ BitVec 64))
(declare-fun temp600_35 () (_ BitVec 64))
(declare-fun temp600_36 () (_ BitVec 64))
(declare-fun temp600_37 () (_ BitVec 64))
(declare-fun temp600_38 () (_ BitVec 64))
(declare-fun temp600_39 () (_ BitVec 64))
(declare-fun temp600_40 () (_ BitVec 64))
(declare-fun temp600_41 () (_ BitVec 64))
(declare-fun temp600_42 () (_ BitVec 64))
(declare-fun temp600_43 () (_ BitVec 64))
(declare-fun temp600_44 () (_ BitVec 64))
(declare-fun temp600_45 () (_ BitVec 64))
(declare-fun temp600_46 () (_ BitVec 64))
(declare-fun temp600_47 () (_ BitVec 64))
(declare-fun temp600_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp600_49 () (_ BitVec 64))
(declare-fun temp600_50 () (_ BitVec 64))
(declare-fun temp600_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp600_52 () (_ BitVec 64))
(declare-fun temp600_53 () (_ BitVec 64))
(declare-fun temp600_54 () (_ BitVec 64))
(declare-fun temp600_55 () (_ BitVec 64))
(declare-fun temp600_56 () (_ BitVec 64))
(declare-fun temp600_57 () (_ BitVec 64))
(declare-fun temp600_58 () (_ BitVec 64))
(declare-fun temp600_59 () (_ BitVec 64))
(declare-fun temp600_60 () (_ BitVec 64))
(declare-fun temp600_61 () (_ BitVec 64))
(declare-fun temp600_62 () (_ BitVec 64))
(declare-fun temp600_63 () (_ BitVec 64))
(declare-fun temp600_64 () (_ BitVec 64))
(declare-fun temp600_65 () (_ BitVec 64))
(declare-fun temp600_66 () (_ BitVec 64))
(declare-fun temp600_67 () (_ BitVec 64))
(declare-fun temp600_68 () (_ BitVec 64))
(declare-fun temp600_69 () (_ BitVec 64))
(declare-fun temp600_70 () (_ BitVec 64))
(declare-fun temp600_71 () (_ BitVec 64))
(declare-fun temp600_72 () (_ BitVec 64))
(declare-fun temp600_73 () (_ BitVec 64))
(declare-fun temp600_74 () (_ BitVec 64))
(declare-fun temp600_75 () (_ BitVec 64))
(declare-fun temp600_76 () (_ BitVec 64))
(declare-fun temp600_77 () (_ BitVec 64))
(declare-fun temp600_78 () (_ BitVec 64))
(declare-fun temp600_79 () (_ BitVec 64))
(declare-fun temp600_80 () (_ BitVec 64))
(declare-fun temp600_81 () (_ BitVec 64))
(declare-fun temp600_82 () (_ BitVec 64))
(declare-fun temp600_83 () (_ BitVec 64))
(declare-fun temp600_84 () (_ BitVec 64))
(declare-fun temp600_85 () (_ BitVec 64))
(declare-fun temp600_86 () (_ BitVec 64))
(declare-fun temp600_87 () (_ BitVec 64))
(declare-fun temp600_88 () (_ BitVec 64))
(declare-fun temp600_89 () (_ BitVec 64))
(declare-fun temp600_90 () (_ BitVec 64))
(declare-fun temp600_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp600_92 () (_ BitVec 64))
(declare-fun temp600_93 () (_ BitVec 64))
(declare-fun temp600_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp600_95 () (_ BitVec 64))
(declare-fun temp600_96 () (_ BitVec 64))
(declare-fun temp600_97 () (_ BitVec 64))
(declare-fun temp600_98 () (_ BitVec 64))
(declare-fun temp600_99 () (_ BitVec 64))
(declare-fun temp600_100 () (_ BitVec 64))
(declare-fun temp600_101 () (_ BitVec 64))
(declare-fun temp600_102 () (_ BitVec 64))
(declare-fun temp600_103 () (_ BitVec 64))
(declare-fun temp600_104 () (_ BitVec 64))
(declare-fun temp600_105 () (_ BitVec 64))
(declare-fun temp600_106 () (_ BitVec 64))
(declare-fun temp600_107 () (_ BitVec 64))
(declare-fun temp600_108 () (_ BitVec 64))
(declare-fun temp600_109 () (_ BitVec 64))
(declare-fun temp600_110 () (_ BitVec 64))
(declare-fun temp600_111 () (_ BitVec 64))
(declare-fun temp600_112 () (_ BitVec 64))
(declare-fun temp600_113 () (_ BitVec 64))
(declare-fun temp600_114 () (_ BitVec 64))
(declare-fun temp600_115 () (_ BitVec 64))
(declare-fun temp600_116 () (_ BitVec 64))
(declare-fun temp600_117 () (_ BitVec 64))
(declare-fun temp600_118 () (_ BitVec 64))
(declare-fun temp600_119 () (_ BitVec 64))
(declare-fun temp600_120 () (_ BitVec 64))
(declare-fun temp600_121 () (_ BitVec 64))
(declare-fun temp600_122 () (_ BitVec 64))
(declare-fun temp600_123 () (_ BitVec 64))
(declare-fun temp600_124 () (_ BitVec 64))
(declare-fun temp600_125 () (_ BitVec 64))
(declare-fun temp600_126 () (_ BitVec 64))
(declare-fun temp600_127 () (_ BitVec 64))
(declare-fun temp600_128 () (_ BitVec 64))
(declare-fun temp600_129 () (_ BitVec 64))
(declare-fun temp600_130 () (_ BitVec 64))
(declare-fun temp600_131 () (_ BitVec 64))
(declare-fun temp600_132 () (_ BitVec 64))
(declare-fun temp600_133 () (_ BitVec 64))
(declare-fun temp600_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp600_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp600_136 () (_ BitVec 64))
(declare-fun temp600_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp600_138 () (_ BitVec 64))
(declare-fun temp600_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp600_140 () (_ BitVec 64))
(declare-fun temp600_141 () (_ BitVec 64))
(declare-fun temp600_142 () (_ BitVec 64))
(declare-fun temp600_143 () (_ BitVec 64))
(declare-fun temp600_144 () (_ BitVec 64))
(declare-fun temp600_145 () (_ BitVec 64))
(declare-fun temp600_146 () (_ BitVec 64))
(declare-fun temp600_147 () (_ BitVec 64))
(declare-fun temp600_148 () (_ BitVec 64))
(declare-fun temp600_149 () (_ BitVec 64))
(declare-fun temp600_150 () (_ BitVec 64))
(declare-fun temp600_151 () (_ BitVec 64))
(declare-fun temp600_152 () (_ BitVec 64))
(declare-fun temp600_153 () (_ BitVec 64))
(declare-fun temp600_154 () (_ BitVec 64))
(declare-fun temp600_155 () (_ BitVec 64))
(declare-fun temp600_157 () (_ BitVec 64))
(declare-fun temp600_158 () (_ BitVec 64))
(declare-fun temp600_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp600_159 () (_ BitVec 64))
(declare-fun temp600_160 () (_ BitVec 64))
(declare-fun temp600_162 () (_ BitVec 64))
(declare-fun temp600_163 () (_ BitVec 64))
(declare-fun temp600_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp600_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp600_165 () (_ BitVec 64))
(declare-fun temp600_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp600_167 () (_ BitVec 64))
(declare-fun temp600_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp600_169 () (_ BitVec 64))
(declare-fun temp600_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp600_171 () (_ BitVec 64))
(declare-fun temp600_172 () (_ BitVec 64))
(declare-fun temp600_173 () (_ BitVec 64))
(declare-fun temp600_174 () (_ BitVec 64))
(declare-fun temp600_175 () (_ BitVec 64))
(declare-fun temp600_176 () (_ BitVec 64))
(declare-fun temp600_177 () (_ BitVec 64))
(declare-fun temp600_178 () (_ BitVec 64))
(declare-fun temp600_179 () (_ BitVec 64))
(declare-fun temp600_180 () (_ BitVec 64))
(declare-fun temp600_181 () (_ BitVec 64))
(declare-fun temp600_182 () (_ BitVec 64))
(declare-fun temp600_183 () (_ BitVec 64))
(declare-fun temp600_184 () (_ BitVec 64))
(declare-fun temp600_185 () (_ BitVec 64))
(declare-fun temp600_186 () (_ BitVec 64))
(declare-fun temp600_187 () (_ BitVec 64))
(declare-fun temp600_188 () (_ BitVec 64))
(declare-fun temp600_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp600_190 () (_ BitVec 64))
(declare-fun temp600_192 () (_ BitVec 64))
(declare-fun temp600_193 () (_ BitVec 64))
(declare-fun temp600_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp600_194 () (_ BitVec 64))
(declare-fun temp600_195 () (_ BitVec 64))
(declare-fun temp600_197 () (_ BitVec 64))
(declare-fun temp600_198 () (_ BitVec 64))
(declare-fun temp600_196 () (_ BitVec 64))
(declare-fun temp600_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp600_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp600_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp600_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp600_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp600_204 () (_ BitVec 64))
(declare-fun temp600_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp600_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp600_207 () (_ BitVec 64))
(declare-fun temp600_208 () (_ BitVec 64))
(declare-fun temp600_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp600_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp600_211 () (_ BitVec 64))
(declare-fun temp600_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp600_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp600_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp600_215 () (_ BitVec 64))
(declare-fun var4469136 () (_ BitVec 64))
(declare-fun temp600_216 () (_ BitVec 64))
(assert (= temp600_1 #x0000000000000001))
(assert (= var77203 temp600_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp600_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp600_2)))
(assert (= temp600_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp600_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp600_4 #x0000000000000000))
(assert (= var210941 temp600_4))
(assert (= temp600_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp600_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp600_6 #x0000000000000000))
(assert (= var210986 temp600_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp600_7 #x0000000000000000))
(assert (= temp600_8 temp600_7))
(assert (= temp600_9 (select ARGNAME_padding_NAMEEND_VAL temp600_8)))
(assert (= temp600_10 #x0000000000000001))
(assert (= temp600_11 temp600_10))
(assert (= temp600_12 (select ARGNAME_padding_NAMEEND_VAL temp600_11)))
(assert (= temp600_13 #x0000000000000002))
(assert (= temp600_14 temp600_13))
(assert (= temp600_15 (select ARGNAME_padding_NAMEEND_VAL temp600_14)))
(assert (= temp600_16 #x0000000000000003))
(assert (= temp600_17 temp600_16))
(assert (= temp600_18 (select ARGNAME_padding_NAMEEND_VAL temp600_17)))
(assert (= temp600_19 #x0000000000000004))
(assert (= temp600_20 temp600_19))
(assert (= temp600_21 (select ARGNAME_padding_NAMEEND_VAL temp600_20)))
(assert (= temp600_22 #x0000000000000005))
(assert (= temp600_23 temp600_22))
(assert (= temp600_24 (select ARGNAME_padding_NAMEEND_VAL temp600_23)))
(assert (= temp600_25 #x0000000000000000))
(assert (= temp600_26 #x0000000000000000))
(assert (= temp600_27 temp600_26))
(assert (= temp600_28 (select ARGNAME_padding_NAMEEND_VAL temp600_27)))
(assert (= temp600_29 #x0000000000000000))
(assert (= temp600_30 #x0000000000000001))
(assert (= temp600_31 temp600_30))
(assert (= temp600_32 (select ARGNAME_padding_NAMEEND_VAL temp600_31)))
(assert (= temp600_33 #x0000000000000000))
(assert (= temp600_34 #x0000000000000002))
(assert (= temp600_35 temp600_34))
(assert (= temp600_36 (select ARGNAME_padding_NAMEEND_VAL temp600_35)))
(assert (= temp600_37 #x0000000000000000))
(assert (= temp600_38 #x0000000000000003))
(assert (= temp600_39 temp600_38))
(assert (= temp600_40 (select ARGNAME_padding_NAMEEND_VAL temp600_39)))
(assert (= temp600_41 #x0000000000000000))
(assert (= temp600_42 #x0000000000000004))
(assert (= temp600_43 temp600_42))
(assert (= temp600_44 (select ARGNAME_padding_NAMEEND_VAL temp600_43)))
(assert (= temp600_45 #x0000000000000000))
(assert (= temp600_46 #x0000000000000005))
(assert (= temp600_47 temp600_46))
(assert (= temp600_48 (select ARGNAME_padding_NAMEEND_VAL temp600_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp600_28 temp600_25)
             (bvslt temp600_32 temp600_29)
             (bvslt temp600_36 temp600_33)
             (bvslt temp600_40 temp600_37)
             (bvslt temp600_44 temp600_41)
             (bvslt temp600_48 temp600_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp600_49 #x0000000000000000))
(assert (= var1191714 temp600_49))
(assert (= temp600_50 #x0000000000000000))
(assert (= temp600_51 temp600_50))
(assert (= temp600_52 (select ARGNAME_output_padding_NAMEEND_VAL temp600_51)))
(assert (= temp600_53 #x0000000000000001))
(assert (= temp600_54 temp600_53))
(assert (= temp600_55 (select ARGNAME_output_padding_NAMEEND_VAL temp600_54)))
(assert (= temp600_56 #x0000000000000002))
(assert (= temp600_57 temp600_56))
(assert (= temp600_58 (select ARGNAME_output_padding_NAMEEND_VAL temp600_57)))
(assert (= temp600_59 #x0000000000000003))
(assert (= temp600_60 temp600_59))
(assert (= temp600_61 (select ARGNAME_output_padding_NAMEEND_VAL temp600_60)))
(assert (= temp600_62 #x0000000000000004))
(assert (= temp600_63 temp600_62))
(assert (= temp600_64 (select ARGNAME_output_padding_NAMEEND_VAL temp600_63)))
(assert (= temp600_65 #x0000000000000005))
(assert (= temp600_66 temp600_65))
(assert (= temp600_67 (select ARGNAME_output_padding_NAMEEND_VAL temp600_66)))
(assert (= temp600_68 #x0000000000000000))
(assert (= temp600_69 #x0000000000000000))
(assert (= temp600_70 temp600_69))
(assert (= temp600_71 (select ARGNAME_output_padding_NAMEEND_VAL temp600_70)))
(assert (= temp600_72 #x0000000000000000))
(assert (= temp600_73 #x0000000000000001))
(assert (= temp600_74 temp600_73))
(assert (= temp600_75 (select ARGNAME_output_padding_NAMEEND_VAL temp600_74)))
(assert (= temp600_76 #x0000000000000000))
(assert (= temp600_77 #x0000000000000002))
(assert (= temp600_78 temp600_77))
(assert (= temp600_79 (select ARGNAME_output_padding_NAMEEND_VAL temp600_78)))
(assert (= temp600_80 #x0000000000000000))
(assert (= temp600_81 #x0000000000000003))
(assert (= temp600_82 temp600_81))
(assert (= temp600_83 (select ARGNAME_output_padding_NAMEEND_VAL temp600_82)))
(assert (= temp600_84 #x0000000000000000))
(assert (= temp600_85 #x0000000000000004))
(assert (= temp600_86 temp600_85))
(assert (= temp600_87 (select ARGNAME_output_padding_NAMEEND_VAL temp600_86)))
(assert (= temp600_88 #x0000000000000000))
(assert (= temp600_89 #x0000000000000005))
(assert (= temp600_90 temp600_89))
(assert (= temp600_91 (select ARGNAME_output_padding_NAMEEND_VAL temp600_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp600_71 temp600_68)
             (bvslt temp600_75 temp600_72)
             (bvslt temp600_79 temp600_76)
             (bvslt temp600_83 temp600_80)
             (bvslt temp600_87 temp600_84)
             (bvslt temp600_91 temp600_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp600_92 #x0000000000000000))
(assert (= var1191725 temp600_92))
(assert (= temp600_93 #x0000000000000000))
(assert (= temp600_94 temp600_93))
(assert (= temp600_95 (select ARGNAME_stride_NAMEEND_VAL temp600_94)))
(assert (= temp600_96 #x0000000000000001))
(assert (= temp600_97 temp600_96))
(assert (= temp600_98 (select ARGNAME_stride_NAMEEND_VAL temp600_97)))
(assert (= temp600_99 #x0000000000000002))
(assert (= temp600_100 temp600_99))
(assert (= temp600_101 (select ARGNAME_stride_NAMEEND_VAL temp600_100)))
(assert (= temp600_102 #x0000000000000003))
(assert (= temp600_103 temp600_102))
(assert (= temp600_104 (select ARGNAME_stride_NAMEEND_VAL temp600_103)))
(assert (= temp600_105 #x0000000000000004))
(assert (= temp600_106 temp600_105))
(assert (= temp600_107 (select ARGNAME_stride_NAMEEND_VAL temp600_106)))
(assert (= temp600_108 #x0000000000000005))
(assert (= temp600_109 temp600_108))
(assert (= temp600_110 (select ARGNAME_stride_NAMEEND_VAL temp600_109)))
(assert (= temp600_111 #x0000000000000000))
(assert (= temp600_112 #x0000000000000000))
(assert (= temp600_113 temp600_112))
(assert (= temp600_114 (select ARGNAME_stride_NAMEEND_VAL temp600_113)))
(assert (= temp600_115 #x0000000000000000))
(assert (= temp600_116 #x0000000000000001))
(assert (= temp600_117 temp600_116))
(assert (= temp600_118 (select ARGNAME_stride_NAMEEND_VAL temp600_117)))
(assert (= temp600_119 #x0000000000000000))
(assert (= temp600_120 #x0000000000000002))
(assert (= temp600_121 temp600_120))
(assert (= temp600_122 (select ARGNAME_stride_NAMEEND_VAL temp600_121)))
(assert (= temp600_123 #x0000000000000000))
(assert (= temp600_124 #x0000000000000003))
(assert (= temp600_125 temp600_124))
(assert (= temp600_126 (select ARGNAME_stride_NAMEEND_VAL temp600_125)))
(assert (= temp600_127 #x0000000000000000))
(assert (= temp600_128 #x0000000000000004))
(assert (= temp600_129 temp600_128))
(assert (= temp600_130 (select ARGNAME_stride_NAMEEND_VAL temp600_129)))
(assert (= temp600_131 #x0000000000000000))
(assert (= temp600_132 #x0000000000000005))
(assert (= temp600_133 temp600_132))
(assert (= temp600_134 (select ARGNAME_stride_NAMEEND_VAL temp600_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp600_114 temp600_111)
             (bvsle temp600_118 temp600_115)
             (bvsle temp600_122 temp600_119)
             (bvsle temp600_126 temp600_123)
             (bvsle temp600_130 temp600_127)
             (bvsle temp600_134 temp600_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp600_135 #x0000000000000000))
(assert (= var1191735 temp600_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp600_136 #x0000000000000001))
(assert (= var1191747 temp600_136))
(assert (= temp600_137 #x0000000000000000))
(assert (= var1179826 temp600_137))
(assert (= temp600_138 #x0000000000000000))
(assert (= temp600_139 temp600_138))
(assert (= temp600_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp600_139)))
(assert (= temp600_141 #x0000000000000001))
(assert (= temp600_142 temp600_141))
(assert (= temp600_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp600_142)))
(assert (= temp600_144 #x0000000000000002))
(assert (= temp600_145 temp600_144))
(assert (= temp600_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp600_145)))
(assert (= temp600_147 #x0000000000000003))
(assert (= temp600_148 temp600_147))
(assert (= temp600_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp600_148)))
(assert (= temp600_150 #x0000000000000004))
(assert (= temp600_151 temp600_150))
(assert (= temp600_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp600_151)))
(assert (= temp600_153 #x0000000000000005))
(assert (= temp600_154 temp600_153))
(assert (= temp600_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp600_154)))
(assert (= temp600_157 var1179826))
(assert (= temp600_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp600_157)))
(assert (= temp600_156 temp600_158))
(assert (= var1191780
   (ite (bvslt temp600_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp600_159 #x0000000000000000))
(assert (= var1191780 temp600_159))
(assert (= temp600_160 #x0000000000000000))
(assert (= var1179826 temp600_160))
(assert (= temp600_162 var1179826))
(assert (= temp600_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp600_162)))
(assert (= temp600_161 temp600_163))
(assert (= var1191802 (bvsmod temp600_161 ARGNAME_groups_NAMEEND)))
(assert (= temp600_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp600_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp600_165 #x0000000000000001))
(assert (= var1191803 temp600_165))
(assert (= temp600_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp600_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp600_167 #x0000000000000001))
(assert (= var1191823 temp600_167))
(assert (= temp600_168 #x0000000000000001))
(assert (= var1180714 temp600_168))
(assert (= temp600_169 #x0000000000000000))
(assert (= temp600_170 temp600_169))
(assert (= temp600_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp600_170)))
(assert (= temp600_172 #x0000000000000001))
(assert (= temp600_173 temp600_172))
(assert (= temp600_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp600_173)))
(assert (= temp600_175 #x0000000000000002))
(assert (= temp600_176 temp600_175))
(assert (= temp600_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp600_176)))
(assert (= temp600_178 #x0000000000000003))
(assert (= temp600_179 temp600_178))
(assert (= temp600_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp600_179)))
(assert (= temp600_181 #x0000000000000004))
(assert (= temp600_182 temp600_181))
(assert (= temp600_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp600_182)))
(assert (= temp600_184 #x0000000000000005))
(assert (= temp600_185 temp600_184))
(assert (= temp600_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp600_185)))
(assert (= temp600_187 #x0000000000000000))
(assert (= temp600_188
   (ite (bvslt var1180714 temp600_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp600_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp600_188)))
(assert (= var1191831 temp600_189))
(assert (bvslt (ite (bvslt var1180714 temp600_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp600_190 #x0000000000000001))
(assert (= var1180714 temp600_190))
(assert (= temp600_192 var1180714))
(assert (= temp600_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp600_192)))
(assert (= temp600_191 temp600_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp600_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp600_194 #x0000000000000001))
(assert (= var1191836 temp600_194))
(assert (= temp600_195 #x0000000000000000))
(assert (= var1179826 temp600_195))
(assert (= temp600_197 var1179826))
(assert (= temp600_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp600_197)))
(assert (= temp600_196 temp600_198))
(assert (= temp600_199 #x0000000000000002))
(assert (= var1586025 temp600_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp600_200 #x0000000000000001))
(assert (= var1191993 temp600_200))
(assert (= temp600_201 #x0000000000000001))
(assert (= var2700303 temp600_201))
(assert (= temp600_202 #x0000000000000001))
(assert (= var2962447 temp600_202))
(assert (= temp600_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp600_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp600_204 #x0000000000000001))
(assert (= var211058 temp600_204))
(assert (= temp600_205 #x0000000000000001))
(assert (= var211188 temp600_205))
(assert (= var3879401 var211188))
(assert (= temp600_206 #x0000000000000000))
(assert (= var3866802 temp600_206))
(assert (= temp600_207 #x0000000000000000))
(assert (= temp600_208
   (ite (bvslt var3866802 temp600_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp600_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp600_208)))
(assert (= var3879420 temp600_209))
(assert (bvslt (ite (bvslt var3866802 temp600_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp600_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp600_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp600_211 #x0000000000000001))
(assert (= var3879421 temp600_211))
(assert (= temp600_212 #x0000000000000000))
(assert (= var4079423 temp600_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp600_213 #x0000000000000002))
(assert (= var4208259 temp600_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp600_214 #x0000000000000000))
(assert (= var4273820 temp600_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp600_215 #x0000000000000000))
(assert (= var4469136 temp600_215))
(assert (= temp600_216 #x0000000000000001))
(assert (= var211058 temp600_216))
(model-add temp600_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp600_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp600_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp600_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))



