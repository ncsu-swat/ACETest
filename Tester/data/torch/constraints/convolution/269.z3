(declare-fun temp358_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp358_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp358_3 () (_ BitVec 64))
(declare-fun temp358_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp358_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp358_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp358_7 () (_ BitVec 64))
(declare-fun temp358_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp358_9 () (_ BitVec 64))
(declare-fun temp358_10 () (_ BitVec 64))
(declare-fun temp358_11 () (_ BitVec 64))
(declare-fun temp358_12 () (_ BitVec 64))
(declare-fun temp358_13 () (_ BitVec 64))
(declare-fun temp358_14 () (_ BitVec 64))
(declare-fun temp358_15 () (_ BitVec 64))
(declare-fun temp358_16 () (_ BitVec 64))
(declare-fun temp358_17 () (_ BitVec 64))
(declare-fun temp358_18 () (_ BitVec 64))
(declare-fun temp358_19 () (_ BitVec 64))
(declare-fun temp358_20 () (_ BitVec 64))
(declare-fun temp358_21 () (_ BitVec 64))
(declare-fun temp358_22 () (_ BitVec 64))
(declare-fun temp358_23 () (_ BitVec 64))
(declare-fun temp358_24 () (_ BitVec 64))
(declare-fun temp358_25 () (_ BitVec 64))
(declare-fun temp358_26 () (_ BitVec 64))
(declare-fun temp358_27 () (_ BitVec 64))
(declare-fun temp358_28 () (_ BitVec 64))
(declare-fun temp358_29 () (_ BitVec 64))
(declare-fun temp358_30 () (_ BitVec 64))
(declare-fun temp358_31 () (_ BitVec 64))
(declare-fun temp358_32 () (_ BitVec 64))
(declare-fun temp358_33 () (_ BitVec 64))
(declare-fun temp358_34 () (_ BitVec 64))
(declare-fun temp358_35 () (_ BitVec 64))
(declare-fun temp358_36 () (_ BitVec 64))
(declare-fun temp358_37 () (_ BitVec 64))
(declare-fun temp358_38 () (_ BitVec 64))
(declare-fun temp358_39 () (_ BitVec 64))
(declare-fun temp358_40 () (_ BitVec 64))
(declare-fun temp358_41 () (_ BitVec 64))
(declare-fun temp358_42 () (_ BitVec 64))
(declare-fun temp358_43 () (_ BitVec 64))
(declare-fun temp358_44 () (_ BitVec 64))
(declare-fun temp358_45 () (_ BitVec 64))
(declare-fun temp358_46 () (_ BitVec 64))
(declare-fun temp358_47 () (_ BitVec 64))
(declare-fun temp358_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp358_49 () (_ BitVec 64))
(declare-fun temp358_50 () (_ BitVec 64))
(declare-fun temp358_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp358_52 () (_ BitVec 64))
(declare-fun temp358_53 () (_ BitVec 64))
(declare-fun temp358_54 () (_ BitVec 64))
(declare-fun temp358_55 () (_ BitVec 64))
(declare-fun temp358_56 () (_ BitVec 64))
(declare-fun temp358_57 () (_ BitVec 64))
(declare-fun temp358_58 () (_ BitVec 64))
(declare-fun temp358_59 () (_ BitVec 64))
(declare-fun temp358_60 () (_ BitVec 64))
(declare-fun temp358_61 () (_ BitVec 64))
(declare-fun temp358_62 () (_ BitVec 64))
(declare-fun temp358_63 () (_ BitVec 64))
(declare-fun temp358_64 () (_ BitVec 64))
(declare-fun temp358_65 () (_ BitVec 64))
(declare-fun temp358_66 () (_ BitVec 64))
(declare-fun temp358_67 () (_ BitVec 64))
(declare-fun temp358_68 () (_ BitVec 64))
(declare-fun temp358_69 () (_ BitVec 64))
(declare-fun temp358_70 () (_ BitVec 64))
(declare-fun temp358_71 () (_ BitVec 64))
(declare-fun temp358_72 () (_ BitVec 64))
(declare-fun temp358_73 () (_ BitVec 64))
(declare-fun temp358_74 () (_ BitVec 64))
(declare-fun temp358_75 () (_ BitVec 64))
(declare-fun temp358_76 () (_ BitVec 64))
(declare-fun temp358_77 () (_ BitVec 64))
(declare-fun temp358_78 () (_ BitVec 64))
(declare-fun temp358_79 () (_ BitVec 64))
(declare-fun temp358_80 () (_ BitVec 64))
(declare-fun temp358_81 () (_ BitVec 64))
(declare-fun temp358_82 () (_ BitVec 64))
(declare-fun temp358_83 () (_ BitVec 64))
(declare-fun temp358_84 () (_ BitVec 64))
(declare-fun temp358_85 () (_ BitVec 64))
(declare-fun temp358_86 () (_ BitVec 64))
(declare-fun temp358_87 () (_ BitVec 64))
(declare-fun temp358_88 () (_ BitVec 64))
(declare-fun temp358_89 () (_ BitVec 64))
(declare-fun temp358_90 () (_ BitVec 64))
(declare-fun temp358_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp358_92 () (_ BitVec 64))
(declare-fun temp358_93 () (_ BitVec 64))
(declare-fun temp358_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp358_95 () (_ BitVec 64))
(declare-fun temp358_96 () (_ BitVec 64))
(declare-fun temp358_97 () (_ BitVec 64))
(declare-fun temp358_98 () (_ BitVec 64))
(declare-fun temp358_99 () (_ BitVec 64))
(declare-fun temp358_100 () (_ BitVec 64))
(declare-fun temp358_101 () (_ BitVec 64))
(declare-fun temp358_102 () (_ BitVec 64))
(declare-fun temp358_103 () (_ BitVec 64))
(declare-fun temp358_104 () (_ BitVec 64))
(declare-fun temp358_105 () (_ BitVec 64))
(declare-fun temp358_106 () (_ BitVec 64))
(declare-fun temp358_107 () (_ BitVec 64))
(declare-fun temp358_108 () (_ BitVec 64))
(declare-fun temp358_109 () (_ BitVec 64))
(declare-fun temp358_110 () (_ BitVec 64))
(declare-fun temp358_111 () (_ BitVec 64))
(declare-fun temp358_112 () (_ BitVec 64))
(declare-fun temp358_113 () (_ BitVec 64))
(declare-fun temp358_114 () (_ BitVec 64))
(declare-fun temp358_115 () (_ BitVec 64))
(declare-fun temp358_116 () (_ BitVec 64))
(declare-fun temp358_117 () (_ BitVec 64))
(declare-fun temp358_118 () (_ BitVec 64))
(declare-fun temp358_119 () (_ BitVec 64))
(declare-fun temp358_120 () (_ BitVec 64))
(declare-fun temp358_121 () (_ BitVec 64))
(declare-fun temp358_122 () (_ BitVec 64))
(declare-fun temp358_123 () (_ BitVec 64))
(declare-fun temp358_124 () (_ BitVec 64))
(declare-fun temp358_125 () (_ BitVec 64))
(declare-fun temp358_126 () (_ BitVec 64))
(declare-fun temp358_127 () (_ BitVec 64))
(declare-fun temp358_128 () (_ BitVec 64))
(declare-fun temp358_129 () (_ BitVec 64))
(declare-fun temp358_130 () (_ BitVec 64))
(declare-fun temp358_131 () (_ BitVec 64))
(declare-fun temp358_132 () (_ BitVec 64))
(declare-fun temp358_133 () (_ BitVec 64))
(declare-fun temp358_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp358_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp358_136 () (_ BitVec 64))
(declare-fun temp358_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp358_138 () (_ BitVec 64))
(declare-fun temp358_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp358_140 () (_ BitVec 64))
(declare-fun temp358_141 () (_ BitVec 64))
(declare-fun temp358_142 () (_ BitVec 64))
(declare-fun temp358_143 () (_ BitVec 64))
(declare-fun temp358_144 () (_ BitVec 64))
(declare-fun temp358_145 () (_ BitVec 64))
(declare-fun temp358_146 () (_ BitVec 64))
(declare-fun temp358_147 () (_ BitVec 64))
(declare-fun temp358_148 () (_ BitVec 64))
(declare-fun temp358_149 () (_ BitVec 64))
(declare-fun temp358_150 () (_ BitVec 64))
(declare-fun temp358_151 () (_ BitVec 64))
(declare-fun temp358_152 () (_ BitVec 64))
(declare-fun temp358_153 () (_ BitVec 64))
(declare-fun temp358_154 () (_ BitVec 64))
(declare-fun temp358_155 () (_ BitVec 64))
(declare-fun temp358_157 () (_ BitVec 64))
(declare-fun temp358_158 () (_ BitVec 64))
(declare-fun temp358_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp358_159 () (_ BitVec 64))
(declare-fun temp358_160 () (_ BitVec 64))
(declare-fun temp358_162 () (_ BitVec 64))
(declare-fun temp358_163 () (_ BitVec 64))
(declare-fun temp358_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp358_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp358_165 () (_ BitVec 64))
(declare-fun temp358_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp358_167 () (_ BitVec 64))
(declare-fun temp358_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp358_169 () (_ BitVec 64))
(declare-fun temp358_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp358_171 () (_ BitVec 64))
(declare-fun temp358_172 () (_ BitVec 64))
(declare-fun temp358_173 () (_ BitVec 64))
(declare-fun temp358_174 () (_ BitVec 64))
(declare-fun temp358_175 () (_ BitVec 64))
(declare-fun temp358_176 () (_ BitVec 64))
(declare-fun temp358_177 () (_ BitVec 64))
(declare-fun temp358_178 () (_ BitVec 64))
(declare-fun temp358_179 () (_ BitVec 64))
(declare-fun temp358_180 () (_ BitVec 64))
(declare-fun temp358_181 () (_ BitVec 64))
(declare-fun temp358_182 () (_ BitVec 64))
(declare-fun temp358_183 () (_ BitVec 64))
(declare-fun temp358_184 () (_ BitVec 64))
(declare-fun temp358_185 () (_ BitVec 64))
(declare-fun temp358_186 () (_ BitVec 64))
(declare-fun temp358_187 () (_ BitVec 64))
(declare-fun temp358_188 () (_ BitVec 64))
(declare-fun temp358_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp358_190 () (_ BitVec 64))
(declare-fun temp358_192 () (_ BitVec 64))
(declare-fun temp358_193 () (_ BitVec 64))
(declare-fun temp358_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp358_194 () (_ BitVec 64))
(declare-fun temp358_195 () (_ BitVec 64))
(declare-fun temp358_197 () (_ BitVec 64))
(declare-fun temp358_198 () (_ BitVec 64))
(declare-fun temp358_196 () (_ BitVec 64))
(declare-fun temp358_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp358_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp358_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp358_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp358_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp358_204 () (_ BitVec 64))
(declare-fun temp358_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp358_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp358_207 () (_ BitVec 64))
(declare-fun temp358_208 () (_ BitVec 64))
(declare-fun temp358_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp358_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp358_211 () (_ BitVec 64))
(declare-fun temp358_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp358_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp358_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp358_215 () (_ BitVec 64))
(assert (= temp358_1 #x0000000000000001))
(assert (= var77203 temp358_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp358_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp358_2)))
(assert (= temp358_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp358_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp358_4 #x0000000000000000))
(assert (= var210941 temp358_4))
(assert (= temp358_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp358_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp358_6 #x0000000000000000))
(assert (= var210986 temp358_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp358_7 #x0000000000000000))
(assert (= temp358_8 temp358_7))
(assert (= temp358_9 (select ARGNAME_padding_NAMEEND_VAL temp358_8)))
(assert (= temp358_10 #x0000000000000001))
(assert (= temp358_11 temp358_10))
(assert (= temp358_12 (select ARGNAME_padding_NAMEEND_VAL temp358_11)))
(assert (= temp358_13 #x0000000000000002))
(assert (= temp358_14 temp358_13))
(assert (= temp358_15 (select ARGNAME_padding_NAMEEND_VAL temp358_14)))
(assert (= temp358_16 #x0000000000000003))
(assert (= temp358_17 temp358_16))
(assert (= temp358_18 (select ARGNAME_padding_NAMEEND_VAL temp358_17)))
(assert (= temp358_19 #x0000000000000004))
(assert (= temp358_20 temp358_19))
(assert (= temp358_21 (select ARGNAME_padding_NAMEEND_VAL temp358_20)))
(assert (= temp358_22 #x0000000000000005))
(assert (= temp358_23 temp358_22))
(assert (= temp358_24 (select ARGNAME_padding_NAMEEND_VAL temp358_23)))
(assert (= temp358_25 #x0000000000000000))
(assert (= temp358_26 #x0000000000000000))
(assert (= temp358_27 temp358_26))
(assert (= temp358_28 (select ARGNAME_padding_NAMEEND_VAL temp358_27)))
(assert (= temp358_29 #x0000000000000000))
(assert (= temp358_30 #x0000000000000001))
(assert (= temp358_31 temp358_30))
(assert (= temp358_32 (select ARGNAME_padding_NAMEEND_VAL temp358_31)))
(assert (= temp358_33 #x0000000000000000))
(assert (= temp358_34 #x0000000000000002))
(assert (= temp358_35 temp358_34))
(assert (= temp358_36 (select ARGNAME_padding_NAMEEND_VAL temp358_35)))
(assert (= temp358_37 #x0000000000000000))
(assert (= temp358_38 #x0000000000000003))
(assert (= temp358_39 temp358_38))
(assert (= temp358_40 (select ARGNAME_padding_NAMEEND_VAL temp358_39)))
(assert (= temp358_41 #x0000000000000000))
(assert (= temp358_42 #x0000000000000004))
(assert (= temp358_43 temp358_42))
(assert (= temp358_44 (select ARGNAME_padding_NAMEEND_VAL temp358_43)))
(assert (= temp358_45 #x0000000000000000))
(assert (= temp358_46 #x0000000000000005))
(assert (= temp358_47 temp358_46))
(assert (= temp358_48 (select ARGNAME_padding_NAMEEND_VAL temp358_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp358_28 temp358_25)
             (bvslt temp358_32 temp358_29)
             (bvslt temp358_36 temp358_33)
             (bvslt temp358_40 temp358_37)
             (bvslt temp358_44 temp358_41)
             (bvslt temp358_48 temp358_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp358_49 #x0000000000000000))
(assert (= var1191714 temp358_49))
(assert (= temp358_50 #x0000000000000000))
(assert (= temp358_51 temp358_50))
(assert (= temp358_52 (select ARGNAME_output_padding_NAMEEND_VAL temp358_51)))
(assert (= temp358_53 #x0000000000000001))
(assert (= temp358_54 temp358_53))
(assert (= temp358_55 (select ARGNAME_output_padding_NAMEEND_VAL temp358_54)))
(assert (= temp358_56 #x0000000000000002))
(assert (= temp358_57 temp358_56))
(assert (= temp358_58 (select ARGNAME_output_padding_NAMEEND_VAL temp358_57)))
(assert (= temp358_59 #x0000000000000003))
(assert (= temp358_60 temp358_59))
(assert (= temp358_61 (select ARGNAME_output_padding_NAMEEND_VAL temp358_60)))
(assert (= temp358_62 #x0000000000000004))
(assert (= temp358_63 temp358_62))
(assert (= temp358_64 (select ARGNAME_output_padding_NAMEEND_VAL temp358_63)))
(assert (= temp358_65 #x0000000000000005))
(assert (= temp358_66 temp358_65))
(assert (= temp358_67 (select ARGNAME_output_padding_NAMEEND_VAL temp358_66)))
(assert (= temp358_68 #x0000000000000000))
(assert (= temp358_69 #x0000000000000000))
(assert (= temp358_70 temp358_69))
(assert (= temp358_71 (select ARGNAME_output_padding_NAMEEND_VAL temp358_70)))
(assert (= temp358_72 #x0000000000000000))
(assert (= temp358_73 #x0000000000000001))
(assert (= temp358_74 temp358_73))
(assert (= temp358_75 (select ARGNAME_output_padding_NAMEEND_VAL temp358_74)))
(assert (= temp358_76 #x0000000000000000))
(assert (= temp358_77 #x0000000000000002))
(assert (= temp358_78 temp358_77))
(assert (= temp358_79 (select ARGNAME_output_padding_NAMEEND_VAL temp358_78)))
(assert (= temp358_80 #x0000000000000000))
(assert (= temp358_81 #x0000000000000003))
(assert (= temp358_82 temp358_81))
(assert (= temp358_83 (select ARGNAME_output_padding_NAMEEND_VAL temp358_82)))
(assert (= temp358_84 #x0000000000000000))
(assert (= temp358_85 #x0000000000000004))
(assert (= temp358_86 temp358_85))
(assert (= temp358_87 (select ARGNAME_output_padding_NAMEEND_VAL temp358_86)))
(assert (= temp358_88 #x0000000000000000))
(assert (= temp358_89 #x0000000000000005))
(assert (= temp358_90 temp358_89))
(assert (= temp358_91 (select ARGNAME_output_padding_NAMEEND_VAL temp358_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp358_71 temp358_68)
             (bvslt temp358_75 temp358_72)
             (bvslt temp358_79 temp358_76)
             (bvslt temp358_83 temp358_80)
             (bvslt temp358_87 temp358_84)
             (bvslt temp358_91 temp358_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp358_92 #x0000000000000000))
(assert (= var1191725 temp358_92))
(assert (= temp358_93 #x0000000000000000))
(assert (= temp358_94 temp358_93))
(assert (= temp358_95 (select ARGNAME_stride_NAMEEND_VAL temp358_94)))
(assert (= temp358_96 #x0000000000000001))
(assert (= temp358_97 temp358_96))
(assert (= temp358_98 (select ARGNAME_stride_NAMEEND_VAL temp358_97)))
(assert (= temp358_99 #x0000000000000002))
(assert (= temp358_100 temp358_99))
(assert (= temp358_101 (select ARGNAME_stride_NAMEEND_VAL temp358_100)))
(assert (= temp358_102 #x0000000000000003))
(assert (= temp358_103 temp358_102))
(assert (= temp358_104 (select ARGNAME_stride_NAMEEND_VAL temp358_103)))
(assert (= temp358_105 #x0000000000000004))
(assert (= temp358_106 temp358_105))
(assert (= temp358_107 (select ARGNAME_stride_NAMEEND_VAL temp358_106)))
(assert (= temp358_108 #x0000000000000005))
(assert (= temp358_109 temp358_108))
(assert (= temp358_110 (select ARGNAME_stride_NAMEEND_VAL temp358_109)))
(assert (= temp358_111 #x0000000000000000))
(assert (= temp358_112 #x0000000000000000))
(assert (= temp358_113 temp358_112))
(assert (= temp358_114 (select ARGNAME_stride_NAMEEND_VAL temp358_113)))
(assert (= temp358_115 #x0000000000000000))
(assert (= temp358_116 #x0000000000000001))
(assert (= temp358_117 temp358_116))
(assert (= temp358_118 (select ARGNAME_stride_NAMEEND_VAL temp358_117)))
(assert (= temp358_119 #x0000000000000000))
(assert (= temp358_120 #x0000000000000002))
(assert (= temp358_121 temp358_120))
(assert (= temp358_122 (select ARGNAME_stride_NAMEEND_VAL temp358_121)))
(assert (= temp358_123 #x0000000000000000))
(assert (= temp358_124 #x0000000000000003))
(assert (= temp358_125 temp358_124))
(assert (= temp358_126 (select ARGNAME_stride_NAMEEND_VAL temp358_125)))
(assert (= temp358_127 #x0000000000000000))
(assert (= temp358_128 #x0000000000000004))
(assert (= temp358_129 temp358_128))
(assert (= temp358_130 (select ARGNAME_stride_NAMEEND_VAL temp358_129)))
(assert (= temp358_131 #x0000000000000000))
(assert (= temp358_132 #x0000000000000005))
(assert (= temp358_133 temp358_132))
(assert (= temp358_134 (select ARGNAME_stride_NAMEEND_VAL temp358_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp358_114 temp358_111)
             (bvsle temp358_118 temp358_115)
             (bvsle temp358_122 temp358_119)
             (bvsle temp358_126 temp358_123)
             (bvsle temp358_130 temp358_127)
             (bvsle temp358_134 temp358_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp358_135 #x0000000000000000))
(assert (= var1191735 temp358_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp358_136 #x0000000000000001))
(assert (= var1191747 temp358_136))
(assert (= temp358_137 #x0000000000000000))
(assert (= var1179826 temp358_137))
(assert (= temp358_138 #x0000000000000000))
(assert (= temp358_139 temp358_138))
(assert (= temp358_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp358_139)))
(assert (= temp358_141 #x0000000000000001))
(assert (= temp358_142 temp358_141))
(assert (= temp358_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp358_142)))
(assert (= temp358_144 #x0000000000000002))
(assert (= temp358_145 temp358_144))
(assert (= temp358_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp358_145)))
(assert (= temp358_147 #x0000000000000003))
(assert (= temp358_148 temp358_147))
(assert (= temp358_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp358_148)))
(assert (= temp358_150 #x0000000000000004))
(assert (= temp358_151 temp358_150))
(assert (= temp358_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp358_151)))
(assert (= temp358_153 #x0000000000000005))
(assert (= temp358_154 temp358_153))
(assert (= temp358_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp358_154)))
(assert (= temp358_157 var1179826))
(assert (= temp358_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp358_157)))
(assert (= temp358_156 temp358_158))
(assert (= var1191780
   (ite (bvslt temp358_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp358_159 #x0000000000000000))
(assert (= var1191780 temp358_159))
(assert (= temp358_160 #x0000000000000000))
(assert (= var1179826 temp358_160))
(assert (= temp358_162 var1179826))
(assert (= temp358_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp358_162)))
(assert (= temp358_161 temp358_163))
(assert (= var1191802 (bvsmod temp358_161 ARGNAME_groups_NAMEEND)))
(assert (= temp358_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp358_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp358_165 #x0000000000000001))
(assert (= var1191803 temp358_165))
(assert (= temp358_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp358_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp358_167 #x0000000000000001))
(assert (= var1191823 temp358_167))
(assert (= temp358_168 #x0000000000000001))
(assert (= var1180714 temp358_168))
(assert (= temp358_169 #x0000000000000000))
(assert (= temp358_170 temp358_169))
(assert (= temp358_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp358_170)))
(assert (= temp358_172 #x0000000000000001))
(assert (= temp358_173 temp358_172))
(assert (= temp358_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp358_173)))
(assert (= temp358_175 #x0000000000000002))
(assert (= temp358_176 temp358_175))
(assert (= temp358_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp358_176)))
(assert (= temp358_178 #x0000000000000003))
(assert (= temp358_179 temp358_178))
(assert (= temp358_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp358_179)))
(assert (= temp358_181 #x0000000000000004))
(assert (= temp358_182 temp358_181))
(assert (= temp358_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp358_182)))
(assert (= temp358_184 #x0000000000000005))
(assert (= temp358_185 temp358_184))
(assert (= temp358_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp358_185)))
(assert (= temp358_187 #x0000000000000000))
(assert (= temp358_188
   (ite (bvslt var1180714 temp358_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp358_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp358_188)))
(assert (= var1191831 temp358_189))
(assert (bvslt (ite (bvslt var1180714 temp358_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp358_190 #x0000000000000001))
(assert (= var1180714 temp358_190))
(assert (= temp358_192 var1180714))
(assert (= temp358_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp358_192)))
(assert (= temp358_191 temp358_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp358_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp358_194 #x0000000000000001))
(assert (= var1191836 temp358_194))
(assert (= temp358_195 #x0000000000000000))
(assert (= var1179826 temp358_195))
(assert (= temp358_197 var1179826))
(assert (= temp358_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp358_197)))
(assert (= temp358_196 temp358_198))
(assert (= temp358_199 #x0000000000000002))
(assert (= var1586025 temp358_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp358_200 #x0000000000000001))
(assert (= var1191993 temp358_200))
(assert (= temp358_201 #x0000000000000001))
(assert (= var2700303 temp358_201))
(assert (= temp358_202 #x0000000000000001))
(assert (= var2962447 temp358_202))
(assert (= temp358_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp358_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp358_204 #x0000000000000001))
(assert (= var211058 temp358_204))
(assert (= temp358_205 #x0000000000000001))
(assert (= var211188 temp358_205))
(assert (= var3879401 var211188))
(assert (= temp358_206 #x0000000000000000))
(assert (= var3866802 temp358_206))
(assert (= temp358_207 #x0000000000000000))
(assert (= temp358_208
   (ite (bvslt var3866802 temp358_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp358_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp358_208)))
(assert (= var3879420 temp358_209))
(assert (bvslt (ite (bvslt var3866802 temp358_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp358_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp358_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp358_211 #x0000000000000001))
(assert (= var3879421 temp358_211))
(assert (= temp358_212 #x0000000000000000))
(assert (= var4079423 temp358_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp358_213 #x0000000000000002))
(assert (= var4208259 temp358_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp358_214 #x0000000000000000))
(assert (= var4273820 temp358_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp358_215 #x0000000000000001))
(assert (= var211058 temp358_215))
(model-add temp358_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp358_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp358_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp358_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





