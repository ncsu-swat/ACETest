(declare-fun temp665_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp665_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp665_3 () (_ BitVec 64))
(declare-fun temp665_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp665_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp665_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp665_7 () (_ BitVec 64))
(declare-fun temp665_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp665_9 () (_ BitVec 64))
(declare-fun temp665_10 () (_ BitVec 64))
(declare-fun temp665_11 () (_ BitVec 64))
(declare-fun temp665_12 () (_ BitVec 64))
(declare-fun temp665_13 () (_ BitVec 64))
(declare-fun temp665_14 () (_ BitVec 64))
(declare-fun temp665_15 () (_ BitVec 64))
(declare-fun temp665_16 () (_ BitVec 64))
(declare-fun temp665_17 () (_ BitVec 64))
(declare-fun temp665_18 () (_ BitVec 64))
(declare-fun temp665_19 () (_ BitVec 64))
(declare-fun temp665_20 () (_ BitVec 64))
(declare-fun temp665_21 () (_ BitVec 64))
(declare-fun temp665_22 () (_ BitVec 64))
(declare-fun temp665_23 () (_ BitVec 64))
(declare-fun temp665_24 () (_ BitVec 64))
(declare-fun temp665_25 () (_ BitVec 64))
(declare-fun temp665_26 () (_ BitVec 64))
(declare-fun temp665_27 () (_ BitVec 64))
(declare-fun temp665_28 () (_ BitVec 64))
(declare-fun temp665_29 () (_ BitVec 64))
(declare-fun temp665_30 () (_ BitVec 64))
(declare-fun temp665_31 () (_ BitVec 64))
(declare-fun temp665_32 () (_ BitVec 64))
(declare-fun temp665_33 () (_ BitVec 64))
(declare-fun temp665_34 () (_ BitVec 64))
(declare-fun temp665_35 () (_ BitVec 64))
(declare-fun temp665_36 () (_ BitVec 64))
(declare-fun temp665_37 () (_ BitVec 64))
(declare-fun temp665_38 () (_ BitVec 64))
(declare-fun temp665_39 () (_ BitVec 64))
(declare-fun temp665_40 () (_ BitVec 64))
(declare-fun temp665_41 () (_ BitVec 64))
(declare-fun temp665_42 () (_ BitVec 64))
(declare-fun temp665_43 () (_ BitVec 64))
(declare-fun temp665_44 () (_ BitVec 64))
(declare-fun temp665_45 () (_ BitVec 64))
(declare-fun temp665_46 () (_ BitVec 64))
(declare-fun temp665_47 () (_ BitVec 64))
(declare-fun temp665_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp665_49 () (_ BitVec 64))
(declare-fun temp665_50 () (_ BitVec 64))
(declare-fun temp665_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp665_52 () (_ BitVec 64))
(declare-fun temp665_53 () (_ BitVec 64))
(declare-fun temp665_54 () (_ BitVec 64))
(declare-fun temp665_55 () (_ BitVec 64))
(declare-fun temp665_56 () (_ BitVec 64))
(declare-fun temp665_57 () (_ BitVec 64))
(declare-fun temp665_58 () (_ BitVec 64))
(declare-fun temp665_59 () (_ BitVec 64))
(declare-fun temp665_60 () (_ BitVec 64))
(declare-fun temp665_61 () (_ BitVec 64))
(declare-fun temp665_62 () (_ BitVec 64))
(declare-fun temp665_63 () (_ BitVec 64))
(declare-fun temp665_64 () (_ BitVec 64))
(declare-fun temp665_65 () (_ BitVec 64))
(declare-fun temp665_66 () (_ BitVec 64))
(declare-fun temp665_67 () (_ BitVec 64))
(declare-fun temp665_68 () (_ BitVec 64))
(declare-fun temp665_69 () (_ BitVec 64))
(declare-fun temp665_70 () (_ BitVec 64))
(declare-fun temp665_71 () (_ BitVec 64))
(declare-fun temp665_72 () (_ BitVec 64))
(declare-fun temp665_73 () (_ BitVec 64))
(declare-fun temp665_74 () (_ BitVec 64))
(declare-fun temp665_75 () (_ BitVec 64))
(declare-fun temp665_76 () (_ BitVec 64))
(declare-fun temp665_77 () (_ BitVec 64))
(declare-fun temp665_78 () (_ BitVec 64))
(declare-fun temp665_79 () (_ BitVec 64))
(declare-fun temp665_80 () (_ BitVec 64))
(declare-fun temp665_81 () (_ BitVec 64))
(declare-fun temp665_82 () (_ BitVec 64))
(declare-fun temp665_83 () (_ BitVec 64))
(declare-fun temp665_84 () (_ BitVec 64))
(declare-fun temp665_85 () (_ BitVec 64))
(declare-fun temp665_86 () (_ BitVec 64))
(declare-fun temp665_87 () (_ BitVec 64))
(declare-fun temp665_88 () (_ BitVec 64))
(declare-fun temp665_89 () (_ BitVec 64))
(declare-fun temp665_90 () (_ BitVec 64))
(declare-fun temp665_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp665_92 () (_ BitVec 64))
(declare-fun temp665_93 () (_ BitVec 64))
(declare-fun temp665_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp665_95 () (_ BitVec 64))
(declare-fun temp665_96 () (_ BitVec 64))
(declare-fun temp665_97 () (_ BitVec 64))
(declare-fun temp665_98 () (_ BitVec 64))
(declare-fun temp665_99 () (_ BitVec 64))
(declare-fun temp665_100 () (_ BitVec 64))
(declare-fun temp665_101 () (_ BitVec 64))
(declare-fun temp665_102 () (_ BitVec 64))
(declare-fun temp665_103 () (_ BitVec 64))
(declare-fun temp665_104 () (_ BitVec 64))
(declare-fun temp665_105 () (_ BitVec 64))
(declare-fun temp665_106 () (_ BitVec 64))
(declare-fun temp665_107 () (_ BitVec 64))
(declare-fun temp665_108 () (_ BitVec 64))
(declare-fun temp665_109 () (_ BitVec 64))
(declare-fun temp665_110 () (_ BitVec 64))
(declare-fun temp665_111 () (_ BitVec 64))
(declare-fun temp665_112 () (_ BitVec 64))
(declare-fun temp665_113 () (_ BitVec 64))
(declare-fun temp665_114 () (_ BitVec 64))
(declare-fun temp665_115 () (_ BitVec 64))
(declare-fun temp665_116 () (_ BitVec 64))
(declare-fun temp665_117 () (_ BitVec 64))
(declare-fun temp665_118 () (_ BitVec 64))
(declare-fun temp665_119 () (_ BitVec 64))
(declare-fun temp665_120 () (_ BitVec 64))
(declare-fun temp665_121 () (_ BitVec 64))
(declare-fun temp665_122 () (_ BitVec 64))
(declare-fun temp665_123 () (_ BitVec 64))
(declare-fun temp665_124 () (_ BitVec 64))
(declare-fun temp665_125 () (_ BitVec 64))
(declare-fun temp665_126 () (_ BitVec 64))
(declare-fun temp665_127 () (_ BitVec 64))
(declare-fun temp665_128 () (_ BitVec 64))
(declare-fun temp665_129 () (_ BitVec 64))
(declare-fun temp665_130 () (_ BitVec 64))
(declare-fun temp665_131 () (_ BitVec 64))
(declare-fun temp665_132 () (_ BitVec 64))
(declare-fun temp665_133 () (_ BitVec 64))
(declare-fun temp665_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp665_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp665_136 () (_ BitVec 64))
(declare-fun temp665_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp665_138 () (_ BitVec 64))
(declare-fun temp665_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp665_140 () (_ BitVec 64))
(declare-fun temp665_141 () (_ BitVec 64))
(declare-fun temp665_142 () (_ BitVec 64))
(declare-fun temp665_143 () (_ BitVec 64))
(declare-fun temp665_144 () (_ BitVec 64))
(declare-fun temp665_145 () (_ BitVec 64))
(declare-fun temp665_146 () (_ BitVec 64))
(declare-fun temp665_147 () (_ BitVec 64))
(declare-fun temp665_148 () (_ BitVec 64))
(declare-fun temp665_149 () (_ BitVec 64))
(declare-fun temp665_150 () (_ BitVec 64))
(declare-fun temp665_151 () (_ BitVec 64))
(declare-fun temp665_152 () (_ BitVec 64))
(declare-fun temp665_153 () (_ BitVec 64))
(declare-fun temp665_154 () (_ BitVec 64))
(declare-fun temp665_155 () (_ BitVec 64))
(declare-fun temp665_157 () (_ BitVec 64))
(declare-fun temp665_158 () (_ BitVec 64))
(declare-fun temp665_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp665_159 () (_ BitVec 64))
(declare-fun temp665_160 () (_ BitVec 64))
(declare-fun temp665_162 () (_ BitVec 64))
(declare-fun temp665_163 () (_ BitVec 64))
(declare-fun temp665_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp665_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp665_165 () (_ BitVec 64))
(declare-fun temp665_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp665_167 () (_ BitVec 64))
(declare-fun temp665_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp665_169 () (_ BitVec 64))
(declare-fun temp665_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp665_171 () (_ BitVec 64))
(declare-fun temp665_172 () (_ BitVec 64))
(declare-fun temp665_173 () (_ BitVec 64))
(declare-fun temp665_174 () (_ BitVec 64))
(declare-fun temp665_175 () (_ BitVec 64))
(declare-fun temp665_176 () (_ BitVec 64))
(declare-fun temp665_177 () (_ BitVec 64))
(declare-fun temp665_178 () (_ BitVec 64))
(declare-fun temp665_179 () (_ BitVec 64))
(declare-fun temp665_180 () (_ BitVec 64))
(declare-fun temp665_181 () (_ BitVec 64))
(declare-fun temp665_182 () (_ BitVec 64))
(declare-fun temp665_183 () (_ BitVec 64))
(declare-fun temp665_184 () (_ BitVec 64))
(declare-fun temp665_185 () (_ BitVec 64))
(declare-fun temp665_186 () (_ BitVec 64))
(declare-fun temp665_187 () (_ BitVec 64))
(declare-fun temp665_188 () (_ BitVec 64))
(declare-fun temp665_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp665_190 () (_ BitVec 64))
(declare-fun temp665_192 () (_ BitVec 64))
(declare-fun temp665_193 () (_ BitVec 64))
(declare-fun temp665_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp665_194 () (_ BitVec 64))
(declare-fun temp665_195 () (_ BitVec 64))
(declare-fun temp665_197 () (_ BitVec 64))
(declare-fun temp665_198 () (_ BitVec 64))
(declare-fun temp665_196 () (_ BitVec 64))
(declare-fun temp665_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp665_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp665_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp665_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp665_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp665_204 () (_ BitVec 64))
(declare-fun temp665_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp665_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp665_207 () (_ BitVec 64))
(declare-fun temp665_208 () (_ BitVec 64))
(declare-fun temp665_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp665_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp665_211 () (_ BitVec 64))
(declare-fun temp665_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp665_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp665_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4796816 () (_ BitVec 64))
(declare-fun var211494 () (_ BitVec 64))
(declare-fun temp665_215 () (_ BitVec 64))
(declare-fun var211495 () (_ BitVec 64))
(declare-fun temp665_217 () (_ BitVec 64))
(declare-fun temp665_216 () (_ BitVec 64))
(declare-fun temp665_218 () (_ BitVec 64))
(declare-fun var6753770 () (_ BitVec 64))
(declare-fun temp665_220 () (_ BitVec 64))
(declare-fun temp665_219 () (_ BitVec 64))
(declare-fun temp665_221 () (_ BitVec 64))
(assert (= temp665_1 #x0000000000000001))
(assert (= var77203 temp665_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp665_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp665_2)))
(assert (= temp665_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp665_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp665_4 #x0000000000000000))
(assert (= var210941 temp665_4))
(assert (= temp665_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp665_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp665_6 #x0000000000000000))
(assert (= var210986 temp665_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp665_7 #x0000000000000000))
(assert (= temp665_8 temp665_7))
(assert (= temp665_9 (select ARGNAME_padding_NAMEEND_VAL temp665_8)))
(assert (= temp665_10 #x0000000000000001))
(assert (= temp665_11 temp665_10))
(assert (= temp665_12 (select ARGNAME_padding_NAMEEND_VAL temp665_11)))
(assert (= temp665_13 #x0000000000000002))
(assert (= temp665_14 temp665_13))
(assert (= temp665_15 (select ARGNAME_padding_NAMEEND_VAL temp665_14)))
(assert (= temp665_16 #x0000000000000003))
(assert (= temp665_17 temp665_16))
(assert (= temp665_18 (select ARGNAME_padding_NAMEEND_VAL temp665_17)))
(assert (= temp665_19 #x0000000000000004))
(assert (= temp665_20 temp665_19))
(assert (= temp665_21 (select ARGNAME_padding_NAMEEND_VAL temp665_20)))
(assert (= temp665_22 #x0000000000000005))
(assert (= temp665_23 temp665_22))
(assert (= temp665_24 (select ARGNAME_padding_NAMEEND_VAL temp665_23)))
(assert (= temp665_25 #x0000000000000000))
(assert (= temp665_26 #x0000000000000000))
(assert (= temp665_27 temp665_26))
(assert (= temp665_28 (select ARGNAME_padding_NAMEEND_VAL temp665_27)))
(assert (= temp665_29 #x0000000000000000))
(assert (= temp665_30 #x0000000000000001))
(assert (= temp665_31 temp665_30))
(assert (= temp665_32 (select ARGNAME_padding_NAMEEND_VAL temp665_31)))
(assert (= temp665_33 #x0000000000000000))
(assert (= temp665_34 #x0000000000000002))
(assert (= temp665_35 temp665_34))
(assert (= temp665_36 (select ARGNAME_padding_NAMEEND_VAL temp665_35)))
(assert (= temp665_37 #x0000000000000000))
(assert (= temp665_38 #x0000000000000003))
(assert (= temp665_39 temp665_38))
(assert (= temp665_40 (select ARGNAME_padding_NAMEEND_VAL temp665_39)))
(assert (= temp665_41 #x0000000000000000))
(assert (= temp665_42 #x0000000000000004))
(assert (= temp665_43 temp665_42))
(assert (= temp665_44 (select ARGNAME_padding_NAMEEND_VAL temp665_43)))
(assert (= temp665_45 #x0000000000000000))
(assert (= temp665_46 #x0000000000000005))
(assert (= temp665_47 temp665_46))
(assert (= temp665_48 (select ARGNAME_padding_NAMEEND_VAL temp665_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp665_28 temp665_25)
             (bvslt temp665_32 temp665_29)
             (bvslt temp665_36 temp665_33)
             (bvslt temp665_40 temp665_37)
             (bvslt temp665_44 temp665_41)
             (bvslt temp665_48 temp665_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp665_49 #x0000000000000000))
(assert (= var1191714 temp665_49))
(assert (= temp665_50 #x0000000000000000))
(assert (= temp665_51 temp665_50))
(assert (= temp665_52 (select ARGNAME_output_padding_NAMEEND_VAL temp665_51)))
(assert (= temp665_53 #x0000000000000001))
(assert (= temp665_54 temp665_53))
(assert (= temp665_55 (select ARGNAME_output_padding_NAMEEND_VAL temp665_54)))
(assert (= temp665_56 #x0000000000000002))
(assert (= temp665_57 temp665_56))
(assert (= temp665_58 (select ARGNAME_output_padding_NAMEEND_VAL temp665_57)))
(assert (= temp665_59 #x0000000000000003))
(assert (= temp665_60 temp665_59))
(assert (= temp665_61 (select ARGNAME_output_padding_NAMEEND_VAL temp665_60)))
(assert (= temp665_62 #x0000000000000004))
(assert (= temp665_63 temp665_62))
(assert (= temp665_64 (select ARGNAME_output_padding_NAMEEND_VAL temp665_63)))
(assert (= temp665_65 #x0000000000000005))
(assert (= temp665_66 temp665_65))
(assert (= temp665_67 (select ARGNAME_output_padding_NAMEEND_VAL temp665_66)))
(assert (= temp665_68 #x0000000000000000))
(assert (= temp665_69 #x0000000000000000))
(assert (= temp665_70 temp665_69))
(assert (= temp665_71 (select ARGNAME_output_padding_NAMEEND_VAL temp665_70)))
(assert (= temp665_72 #x0000000000000000))
(assert (= temp665_73 #x0000000000000001))
(assert (= temp665_74 temp665_73))
(assert (= temp665_75 (select ARGNAME_output_padding_NAMEEND_VAL temp665_74)))
(assert (= temp665_76 #x0000000000000000))
(assert (= temp665_77 #x0000000000000002))
(assert (= temp665_78 temp665_77))
(assert (= temp665_79 (select ARGNAME_output_padding_NAMEEND_VAL temp665_78)))
(assert (= temp665_80 #x0000000000000000))
(assert (= temp665_81 #x0000000000000003))
(assert (= temp665_82 temp665_81))
(assert (= temp665_83 (select ARGNAME_output_padding_NAMEEND_VAL temp665_82)))
(assert (= temp665_84 #x0000000000000000))
(assert (= temp665_85 #x0000000000000004))
(assert (= temp665_86 temp665_85))
(assert (= temp665_87 (select ARGNAME_output_padding_NAMEEND_VAL temp665_86)))
(assert (= temp665_88 #x0000000000000000))
(assert (= temp665_89 #x0000000000000005))
(assert (= temp665_90 temp665_89))
(assert (= temp665_91 (select ARGNAME_output_padding_NAMEEND_VAL temp665_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp665_71 temp665_68)
             (bvslt temp665_75 temp665_72)
             (bvslt temp665_79 temp665_76)
             (bvslt temp665_83 temp665_80)
             (bvslt temp665_87 temp665_84)
             (bvslt temp665_91 temp665_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp665_92 #x0000000000000000))
(assert (= var1191725 temp665_92))
(assert (= temp665_93 #x0000000000000000))
(assert (= temp665_94 temp665_93))
(assert (= temp665_95 (select ARGNAME_stride_NAMEEND_VAL temp665_94)))
(assert (= temp665_96 #x0000000000000001))
(assert (= temp665_97 temp665_96))
(assert (= temp665_98 (select ARGNAME_stride_NAMEEND_VAL temp665_97)))
(assert (= temp665_99 #x0000000000000002))
(assert (= temp665_100 temp665_99))
(assert (= temp665_101 (select ARGNAME_stride_NAMEEND_VAL temp665_100)))
(assert (= temp665_102 #x0000000000000003))
(assert (= temp665_103 temp665_102))
(assert (= temp665_104 (select ARGNAME_stride_NAMEEND_VAL temp665_103)))
(assert (= temp665_105 #x0000000000000004))
(assert (= temp665_106 temp665_105))
(assert (= temp665_107 (select ARGNAME_stride_NAMEEND_VAL temp665_106)))
(assert (= temp665_108 #x0000000000000005))
(assert (= temp665_109 temp665_108))
(assert (= temp665_110 (select ARGNAME_stride_NAMEEND_VAL temp665_109)))
(assert (= temp665_111 #x0000000000000000))
(assert (= temp665_112 #x0000000000000000))
(assert (= temp665_113 temp665_112))
(assert (= temp665_114 (select ARGNAME_stride_NAMEEND_VAL temp665_113)))
(assert (= temp665_115 #x0000000000000000))
(assert (= temp665_116 #x0000000000000001))
(assert (= temp665_117 temp665_116))
(assert (= temp665_118 (select ARGNAME_stride_NAMEEND_VAL temp665_117)))
(assert (= temp665_119 #x0000000000000000))
(assert (= temp665_120 #x0000000000000002))
(assert (= temp665_121 temp665_120))
(assert (= temp665_122 (select ARGNAME_stride_NAMEEND_VAL temp665_121)))
(assert (= temp665_123 #x0000000000000000))
(assert (= temp665_124 #x0000000000000003))
(assert (= temp665_125 temp665_124))
(assert (= temp665_126 (select ARGNAME_stride_NAMEEND_VAL temp665_125)))
(assert (= temp665_127 #x0000000000000000))
(assert (= temp665_128 #x0000000000000004))
(assert (= temp665_129 temp665_128))
(assert (= temp665_130 (select ARGNAME_stride_NAMEEND_VAL temp665_129)))
(assert (= temp665_131 #x0000000000000000))
(assert (= temp665_132 #x0000000000000005))
(assert (= temp665_133 temp665_132))
(assert (= temp665_134 (select ARGNAME_stride_NAMEEND_VAL temp665_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp665_114 temp665_111)
             (bvsle temp665_118 temp665_115)
             (bvsle temp665_122 temp665_119)
             (bvsle temp665_126 temp665_123)
             (bvsle temp665_130 temp665_127)
             (bvsle temp665_134 temp665_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp665_135 #x0000000000000000))
(assert (= var1191735 temp665_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp665_136 #x0000000000000001))
(assert (= var1191747 temp665_136))
(assert (= temp665_137 #x0000000000000000))
(assert (= var1179826 temp665_137))
(assert (= temp665_138 #x0000000000000000))
(assert (= temp665_139 temp665_138))
(assert (= temp665_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp665_139)))
(assert (= temp665_141 #x0000000000000001))
(assert (= temp665_142 temp665_141))
(assert (= temp665_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp665_142)))
(assert (= temp665_144 #x0000000000000002))
(assert (= temp665_145 temp665_144))
(assert (= temp665_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp665_145)))
(assert (= temp665_147 #x0000000000000003))
(assert (= temp665_148 temp665_147))
(assert (= temp665_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp665_148)))
(assert (= temp665_150 #x0000000000000004))
(assert (= temp665_151 temp665_150))
(assert (= temp665_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp665_151)))
(assert (= temp665_153 #x0000000000000005))
(assert (= temp665_154 temp665_153))
(assert (= temp665_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp665_154)))
(assert (= temp665_157 var1179826))
(assert (= temp665_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp665_157)))
(assert (= temp665_156 temp665_158))
(assert (= var1191780
   (ite (bvslt temp665_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp665_159 #x0000000000000000))
(assert (= var1191780 temp665_159))
(assert (= temp665_160 #x0000000000000000))
(assert (= var1179826 temp665_160))
(assert (= temp665_162 var1179826))
(assert (= temp665_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp665_162)))
(assert (= temp665_161 temp665_163))
(assert (= var1191802 (bvsmod temp665_161 ARGNAME_groups_NAMEEND)))
(assert (= temp665_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp665_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp665_165 #x0000000000000001))
(assert (= var1191803 temp665_165))
(assert (= temp665_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp665_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp665_167 #x0000000000000001))
(assert (= var1191823 temp665_167))
(assert (= temp665_168 #x0000000000000001))
(assert (= var1180714 temp665_168))
(assert (= temp665_169 #x0000000000000000))
(assert (= temp665_170 temp665_169))
(assert (= temp665_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp665_170)))
(assert (= temp665_172 #x0000000000000001))
(assert (= temp665_173 temp665_172))
(assert (= temp665_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp665_173)))
(assert (= temp665_175 #x0000000000000002))
(assert (= temp665_176 temp665_175))
(assert (= temp665_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp665_176)))
(assert (= temp665_178 #x0000000000000003))
(assert (= temp665_179 temp665_178))
(assert (= temp665_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp665_179)))
(assert (= temp665_181 #x0000000000000004))
(assert (= temp665_182 temp665_181))
(assert (= temp665_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp665_182)))
(assert (= temp665_184 #x0000000000000005))
(assert (= temp665_185 temp665_184))
(assert (= temp665_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp665_185)))
(assert (= temp665_187 #x0000000000000000))
(assert (= temp665_188
   (ite (bvslt var1180714 temp665_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp665_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp665_188)))
(assert (= var1191831 temp665_189))
(assert (bvslt (ite (bvslt var1180714 temp665_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp665_190 #x0000000000000001))
(assert (= var1180714 temp665_190))
(assert (= temp665_192 var1180714))
(assert (= temp665_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp665_192)))
(assert (= temp665_191 temp665_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp665_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp665_194 #x0000000000000001))
(assert (= var1191836 temp665_194))
(assert (= temp665_195 #x0000000000000000))
(assert (= var1179826 temp665_195))
(assert (= temp665_197 var1179826))
(assert (= temp665_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp665_197)))
(assert (= temp665_196 temp665_198))
(assert (= temp665_199 #x0000000000000002))
(assert (= var1586025 temp665_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp665_200 #x0000000000000001))
(assert (= var1191993 temp665_200))
(assert (= temp665_201 #x0000000000000001))
(assert (= var2700303 temp665_201))
(assert (= temp665_202 #x0000000000000001))
(assert (= var2962447 temp665_202))
(assert (= temp665_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp665_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp665_204 #x0000000000000001))
(assert (= var211058 temp665_204))
(assert (= temp665_205 #x0000000000000001))
(assert (= var211188 temp665_205))
(assert (= var3879401 var211188))
(assert (= temp665_206 #x0000000000000000))
(assert (= var3866802 temp665_206))
(assert (= temp665_207 #x0000000000000000))
(assert (= temp665_208
   (ite (bvslt var3866802 temp665_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp665_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp665_208)))
(assert (= var3879420 temp665_209))
(assert (bvslt (ite (bvslt var3866802 temp665_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp665_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp665_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp665_211 #x0000000000000001))
(assert (= var3879421 temp665_211))
(assert (= temp665_212 #x0000000000000000))
(assert (= var4079423 temp665_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp665_213 #x0000000000000002))
(assert (= var4208259 temp665_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp665_214 #x0000000000000000))
(assert (= var4273820 temp665_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4796816 var211201))
(assert (= var211494 var210913))
(assert (= temp665_215 #x0000000000000000))
(assert (= var211495
   (ite (distinct var211494 temp665_215) #x0000000000000001 #x0000000000000000)))
(assert (= temp665_217 #x0000000000000001))
(assert (= temp665_216 temp665_217))
(assert (= temp665_218 #x0000000000000001))
(assert (= var6753770 temp665_218))
(assert (= temp665_220 #xffffffffffffffff))
(assert (= temp665_219 temp665_220))
(assert (= temp665_221 #x0000000000000001))
(assert (= var211058 temp665_221))
(model-add temp665_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp665_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp665_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp665_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




