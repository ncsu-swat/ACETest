(declare-fun temp69_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp69_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp69_3 () (_ BitVec 64))
(declare-fun temp69_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp69_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp69_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp69_7 () (_ BitVec 64))
(declare-fun temp69_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp69_9 () (_ BitVec 64))
(declare-fun temp69_10 () (_ BitVec 64))
(declare-fun temp69_11 () (_ BitVec 64))
(declare-fun temp69_12 () (_ BitVec 64))
(declare-fun temp69_13 () (_ BitVec 64))
(declare-fun temp69_14 () (_ BitVec 64))
(declare-fun temp69_15 () (_ BitVec 64))
(declare-fun temp69_16 () (_ BitVec 64))
(declare-fun temp69_17 () (_ BitVec 64))
(declare-fun temp69_18 () (_ BitVec 64))
(declare-fun temp69_19 () (_ BitVec 64))
(declare-fun temp69_20 () (_ BitVec 64))
(declare-fun temp69_21 () (_ BitVec 64))
(declare-fun temp69_22 () (_ BitVec 64))
(declare-fun temp69_23 () (_ BitVec 64))
(declare-fun temp69_24 () (_ BitVec 64))
(declare-fun temp69_25 () (_ BitVec 64))
(declare-fun temp69_26 () (_ BitVec 64))
(declare-fun temp69_27 () (_ BitVec 64))
(declare-fun temp69_28 () (_ BitVec 64))
(declare-fun temp69_29 () (_ BitVec 64))
(declare-fun temp69_30 () (_ BitVec 64))
(declare-fun temp69_31 () (_ BitVec 64))
(declare-fun temp69_32 () (_ BitVec 64))
(declare-fun temp69_33 () (_ BitVec 64))
(declare-fun temp69_34 () (_ BitVec 64))
(declare-fun temp69_35 () (_ BitVec 64))
(declare-fun temp69_36 () (_ BitVec 64))
(declare-fun temp69_37 () (_ BitVec 64))
(declare-fun temp69_38 () (_ BitVec 64))
(declare-fun temp69_39 () (_ BitVec 64))
(declare-fun temp69_40 () (_ BitVec 64))
(declare-fun temp69_41 () (_ BitVec 64))
(declare-fun temp69_42 () (_ BitVec 64))
(declare-fun temp69_43 () (_ BitVec 64))
(declare-fun temp69_44 () (_ BitVec 64))
(declare-fun temp69_45 () (_ BitVec 64))
(declare-fun temp69_46 () (_ BitVec 64))
(declare-fun temp69_47 () (_ BitVec 64))
(declare-fun temp69_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp69_49 () (_ BitVec 64))
(declare-fun temp69_50 () (_ BitVec 64))
(declare-fun temp69_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp69_52 () (_ BitVec 64))
(declare-fun temp69_53 () (_ BitVec 64))
(declare-fun temp69_54 () (_ BitVec 64))
(declare-fun temp69_55 () (_ BitVec 64))
(declare-fun temp69_56 () (_ BitVec 64))
(declare-fun temp69_57 () (_ BitVec 64))
(declare-fun temp69_58 () (_ BitVec 64))
(declare-fun temp69_59 () (_ BitVec 64))
(declare-fun temp69_60 () (_ BitVec 64))
(declare-fun temp69_61 () (_ BitVec 64))
(declare-fun temp69_62 () (_ BitVec 64))
(declare-fun temp69_63 () (_ BitVec 64))
(declare-fun temp69_64 () (_ BitVec 64))
(declare-fun temp69_65 () (_ BitVec 64))
(declare-fun temp69_66 () (_ BitVec 64))
(declare-fun temp69_67 () (_ BitVec 64))
(declare-fun temp69_68 () (_ BitVec 64))
(declare-fun temp69_69 () (_ BitVec 64))
(declare-fun temp69_70 () (_ BitVec 64))
(declare-fun temp69_71 () (_ BitVec 64))
(declare-fun temp69_72 () (_ BitVec 64))
(declare-fun temp69_73 () (_ BitVec 64))
(declare-fun temp69_74 () (_ BitVec 64))
(declare-fun temp69_75 () (_ BitVec 64))
(declare-fun temp69_76 () (_ BitVec 64))
(declare-fun temp69_77 () (_ BitVec 64))
(declare-fun temp69_78 () (_ BitVec 64))
(declare-fun temp69_79 () (_ BitVec 64))
(declare-fun temp69_80 () (_ BitVec 64))
(declare-fun temp69_81 () (_ BitVec 64))
(declare-fun temp69_82 () (_ BitVec 64))
(declare-fun temp69_83 () (_ BitVec 64))
(declare-fun temp69_84 () (_ BitVec 64))
(declare-fun temp69_85 () (_ BitVec 64))
(declare-fun temp69_86 () (_ BitVec 64))
(declare-fun temp69_87 () (_ BitVec 64))
(declare-fun temp69_88 () (_ BitVec 64))
(declare-fun temp69_89 () (_ BitVec 64))
(declare-fun temp69_90 () (_ BitVec 64))
(declare-fun temp69_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp69_92 () (_ BitVec 64))
(declare-fun temp69_93 () (_ BitVec 64))
(declare-fun temp69_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp69_95 () (_ BitVec 64))
(declare-fun temp69_96 () (_ BitVec 64))
(declare-fun temp69_97 () (_ BitVec 64))
(declare-fun temp69_98 () (_ BitVec 64))
(declare-fun temp69_99 () (_ BitVec 64))
(declare-fun temp69_100 () (_ BitVec 64))
(declare-fun temp69_101 () (_ BitVec 64))
(declare-fun temp69_102 () (_ BitVec 64))
(declare-fun temp69_103 () (_ BitVec 64))
(declare-fun temp69_104 () (_ BitVec 64))
(declare-fun temp69_105 () (_ BitVec 64))
(declare-fun temp69_106 () (_ BitVec 64))
(declare-fun temp69_107 () (_ BitVec 64))
(declare-fun temp69_108 () (_ BitVec 64))
(declare-fun temp69_109 () (_ BitVec 64))
(declare-fun temp69_110 () (_ BitVec 64))
(declare-fun temp69_111 () (_ BitVec 64))
(declare-fun temp69_112 () (_ BitVec 64))
(declare-fun temp69_113 () (_ BitVec 64))
(declare-fun temp69_114 () (_ BitVec 64))
(declare-fun temp69_115 () (_ BitVec 64))
(declare-fun temp69_116 () (_ BitVec 64))
(declare-fun temp69_117 () (_ BitVec 64))
(declare-fun temp69_118 () (_ BitVec 64))
(declare-fun temp69_119 () (_ BitVec 64))
(declare-fun temp69_120 () (_ BitVec 64))
(declare-fun temp69_121 () (_ BitVec 64))
(declare-fun temp69_122 () (_ BitVec 64))
(declare-fun temp69_123 () (_ BitVec 64))
(declare-fun temp69_124 () (_ BitVec 64))
(declare-fun temp69_125 () (_ BitVec 64))
(declare-fun temp69_126 () (_ BitVec 64))
(declare-fun temp69_127 () (_ BitVec 64))
(declare-fun temp69_128 () (_ BitVec 64))
(declare-fun temp69_129 () (_ BitVec 64))
(declare-fun temp69_130 () (_ BitVec 64))
(declare-fun temp69_131 () (_ BitVec 64))
(declare-fun temp69_132 () (_ BitVec 64))
(declare-fun temp69_133 () (_ BitVec 64))
(declare-fun temp69_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp69_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp69_136 () (_ BitVec 64))
(declare-fun temp69_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp69_138 () (_ BitVec 64))
(declare-fun temp69_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp69_140 () (_ BitVec 64))
(declare-fun temp69_141 () (_ BitVec 64))
(declare-fun temp69_142 () (_ BitVec 64))
(declare-fun temp69_143 () (_ BitVec 64))
(declare-fun temp69_144 () (_ BitVec 64))
(declare-fun temp69_145 () (_ BitVec 64))
(declare-fun temp69_146 () (_ BitVec 64))
(declare-fun temp69_147 () (_ BitVec 64))
(declare-fun temp69_148 () (_ BitVec 64))
(declare-fun temp69_149 () (_ BitVec 64))
(declare-fun temp69_150 () (_ BitVec 64))
(declare-fun temp69_151 () (_ BitVec 64))
(declare-fun temp69_152 () (_ BitVec 64))
(declare-fun temp69_153 () (_ BitVec 64))
(declare-fun temp69_154 () (_ BitVec 64))
(declare-fun temp69_155 () (_ BitVec 64))
(declare-fun temp69_157 () (_ BitVec 64))
(declare-fun temp69_158 () (_ BitVec 64))
(declare-fun temp69_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp69_159 () (_ BitVec 64))
(declare-fun temp69_160 () (_ BitVec 64))
(declare-fun temp69_162 () (_ BitVec 64))
(declare-fun temp69_163 () (_ BitVec 64))
(declare-fun temp69_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp69_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp69_165 () (_ BitVec 64))
(declare-fun temp69_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp69_167 () (_ BitVec 64))
(declare-fun temp69_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp69_169 () (_ BitVec 64))
(declare-fun temp69_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp69_171 () (_ BitVec 64))
(declare-fun temp69_172 () (_ BitVec 64))
(declare-fun temp69_173 () (_ BitVec 64))
(declare-fun temp69_174 () (_ BitVec 64))
(declare-fun temp69_175 () (_ BitVec 64))
(declare-fun temp69_176 () (_ BitVec 64))
(declare-fun temp69_177 () (_ BitVec 64))
(declare-fun temp69_178 () (_ BitVec 64))
(declare-fun temp69_179 () (_ BitVec 64))
(declare-fun temp69_180 () (_ BitVec 64))
(declare-fun temp69_181 () (_ BitVec 64))
(declare-fun temp69_182 () (_ BitVec 64))
(declare-fun temp69_183 () (_ BitVec 64))
(declare-fun temp69_184 () (_ BitVec 64))
(declare-fun temp69_185 () (_ BitVec 64))
(declare-fun temp69_186 () (_ BitVec 64))
(declare-fun temp69_187 () (_ BitVec 64))
(declare-fun temp69_188 () (_ BitVec 64))
(declare-fun temp69_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp69_190 () (_ BitVec 64))
(declare-fun temp69_192 () (_ BitVec 64))
(declare-fun temp69_193 () (_ BitVec 64))
(declare-fun temp69_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp69_194 () (_ BitVec 64))
(declare-fun temp69_195 () (_ BitVec 64))
(declare-fun temp69_197 () (_ BitVec 64))
(declare-fun temp69_198 () (_ BitVec 64))
(declare-fun temp69_196 () (_ BitVec 64))
(declare-fun temp69_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp69_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp69_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp69_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp69_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp69_204 () (_ BitVec 64))
(declare-fun temp69_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp69_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp69_207 () (_ BitVec 64))
(declare-fun temp69_208 () (_ BitVec 64))
(declare-fun temp69_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp69_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp69_211 () (_ BitVec 64))
(declare-fun temp69_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp69_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp69_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4993424 () (_ BitVec 64))
(declare-fun var211494 () (_ BitVec 64))
(declare-fun temp69_215 () (_ BitVec 64))
(declare-fun var211495 () (_ BitVec 64))
(declare-fun temp69_217 () (_ BitVec 64))
(declare-fun temp69_216 () (_ BitVec 64))
(declare-fun temp69_218 () (_ BitVec 64))
(declare-fun var6950378 () (_ BitVec 64))
(declare-fun temp69_220 () (_ BitVec 64))
(declare-fun temp69_219 () (_ BitVec 64))
(declare-fun temp69_221 () (_ BitVec 64))
(assert (= temp69_1 #x0000000000000001))
(assert (= var77203 temp69_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp69_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp69_2)))
(assert (= temp69_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp69_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp69_4 #x0000000000000000))
(assert (= var210941 temp69_4))
(assert (= temp69_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp69_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp69_6 #x0000000000000000))
(assert (= var210986 temp69_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp69_7 #x0000000000000000))
(assert (= temp69_8 temp69_7))
(assert (= temp69_9 (select ARGNAME_padding_NAMEEND_VAL temp69_8)))
(assert (= temp69_10 #x0000000000000001))
(assert (= temp69_11 temp69_10))
(assert (= temp69_12 (select ARGNAME_padding_NAMEEND_VAL temp69_11)))
(assert (= temp69_13 #x0000000000000002))
(assert (= temp69_14 temp69_13))
(assert (= temp69_15 (select ARGNAME_padding_NAMEEND_VAL temp69_14)))
(assert (= temp69_16 #x0000000000000003))
(assert (= temp69_17 temp69_16))
(assert (= temp69_18 (select ARGNAME_padding_NAMEEND_VAL temp69_17)))
(assert (= temp69_19 #x0000000000000004))
(assert (= temp69_20 temp69_19))
(assert (= temp69_21 (select ARGNAME_padding_NAMEEND_VAL temp69_20)))
(assert (= temp69_22 #x0000000000000005))
(assert (= temp69_23 temp69_22))
(assert (= temp69_24 (select ARGNAME_padding_NAMEEND_VAL temp69_23)))
(assert (= temp69_25 #x0000000000000000))
(assert (= temp69_26 #x0000000000000000))
(assert (= temp69_27 temp69_26))
(assert (= temp69_28 (select ARGNAME_padding_NAMEEND_VAL temp69_27)))
(assert (= temp69_29 #x0000000000000000))
(assert (= temp69_30 #x0000000000000001))
(assert (= temp69_31 temp69_30))
(assert (= temp69_32 (select ARGNAME_padding_NAMEEND_VAL temp69_31)))
(assert (= temp69_33 #x0000000000000000))
(assert (= temp69_34 #x0000000000000002))
(assert (= temp69_35 temp69_34))
(assert (= temp69_36 (select ARGNAME_padding_NAMEEND_VAL temp69_35)))
(assert (= temp69_37 #x0000000000000000))
(assert (= temp69_38 #x0000000000000003))
(assert (= temp69_39 temp69_38))
(assert (= temp69_40 (select ARGNAME_padding_NAMEEND_VAL temp69_39)))
(assert (= temp69_41 #x0000000000000000))
(assert (= temp69_42 #x0000000000000004))
(assert (= temp69_43 temp69_42))
(assert (= temp69_44 (select ARGNAME_padding_NAMEEND_VAL temp69_43)))
(assert (= temp69_45 #x0000000000000000))
(assert (= temp69_46 #x0000000000000005))
(assert (= temp69_47 temp69_46))
(assert (= temp69_48 (select ARGNAME_padding_NAMEEND_VAL temp69_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp69_28 temp69_25)
             (bvslt temp69_32 temp69_29)
             (bvslt temp69_36 temp69_33)
             (bvslt temp69_40 temp69_37)
             (bvslt temp69_44 temp69_41)
             (bvslt temp69_48 temp69_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp69_49 #x0000000000000000))
(assert (= var1191714 temp69_49))
(assert (= temp69_50 #x0000000000000000))
(assert (= temp69_51 temp69_50))
(assert (= temp69_52 (select ARGNAME_output_padding_NAMEEND_VAL temp69_51)))
(assert (= temp69_53 #x0000000000000001))
(assert (= temp69_54 temp69_53))
(assert (= temp69_55 (select ARGNAME_output_padding_NAMEEND_VAL temp69_54)))
(assert (= temp69_56 #x0000000000000002))
(assert (= temp69_57 temp69_56))
(assert (= temp69_58 (select ARGNAME_output_padding_NAMEEND_VAL temp69_57)))
(assert (= temp69_59 #x0000000000000003))
(assert (= temp69_60 temp69_59))
(assert (= temp69_61 (select ARGNAME_output_padding_NAMEEND_VAL temp69_60)))
(assert (= temp69_62 #x0000000000000004))
(assert (= temp69_63 temp69_62))
(assert (= temp69_64 (select ARGNAME_output_padding_NAMEEND_VAL temp69_63)))
(assert (= temp69_65 #x0000000000000005))
(assert (= temp69_66 temp69_65))
(assert (= temp69_67 (select ARGNAME_output_padding_NAMEEND_VAL temp69_66)))
(assert (= temp69_68 #x0000000000000000))
(assert (= temp69_69 #x0000000000000000))
(assert (= temp69_70 temp69_69))
(assert (= temp69_71 (select ARGNAME_output_padding_NAMEEND_VAL temp69_70)))
(assert (= temp69_72 #x0000000000000000))
(assert (= temp69_73 #x0000000000000001))
(assert (= temp69_74 temp69_73))
(assert (= temp69_75 (select ARGNAME_output_padding_NAMEEND_VAL temp69_74)))
(assert (= temp69_76 #x0000000000000000))
(assert (= temp69_77 #x0000000000000002))
(assert (= temp69_78 temp69_77))
(assert (= temp69_79 (select ARGNAME_output_padding_NAMEEND_VAL temp69_78)))
(assert (= temp69_80 #x0000000000000000))
(assert (= temp69_81 #x0000000000000003))
(assert (= temp69_82 temp69_81))
(assert (= temp69_83 (select ARGNAME_output_padding_NAMEEND_VAL temp69_82)))
(assert (= temp69_84 #x0000000000000000))
(assert (= temp69_85 #x0000000000000004))
(assert (= temp69_86 temp69_85))
(assert (= temp69_87 (select ARGNAME_output_padding_NAMEEND_VAL temp69_86)))
(assert (= temp69_88 #x0000000000000000))
(assert (= temp69_89 #x0000000000000005))
(assert (= temp69_90 temp69_89))
(assert (= temp69_91 (select ARGNAME_output_padding_NAMEEND_VAL temp69_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp69_71 temp69_68)
             (bvslt temp69_75 temp69_72)
             (bvslt temp69_79 temp69_76)
             (bvslt temp69_83 temp69_80)
             (bvslt temp69_87 temp69_84)
             (bvslt temp69_91 temp69_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp69_92 #x0000000000000000))
(assert (= var1191725 temp69_92))
(assert (= temp69_93 #x0000000000000000))
(assert (= temp69_94 temp69_93))
(assert (= temp69_95 (select ARGNAME_stride_NAMEEND_VAL temp69_94)))
(assert (= temp69_96 #x0000000000000001))
(assert (= temp69_97 temp69_96))
(assert (= temp69_98 (select ARGNAME_stride_NAMEEND_VAL temp69_97)))
(assert (= temp69_99 #x0000000000000002))
(assert (= temp69_100 temp69_99))
(assert (= temp69_101 (select ARGNAME_stride_NAMEEND_VAL temp69_100)))
(assert (= temp69_102 #x0000000000000003))
(assert (= temp69_103 temp69_102))
(assert (= temp69_104 (select ARGNAME_stride_NAMEEND_VAL temp69_103)))
(assert (= temp69_105 #x0000000000000004))
(assert (= temp69_106 temp69_105))
(assert (= temp69_107 (select ARGNAME_stride_NAMEEND_VAL temp69_106)))
(assert (= temp69_108 #x0000000000000005))
(assert (= temp69_109 temp69_108))
(assert (= temp69_110 (select ARGNAME_stride_NAMEEND_VAL temp69_109)))
(assert (= temp69_111 #x0000000000000000))
(assert (= temp69_112 #x0000000000000000))
(assert (= temp69_113 temp69_112))
(assert (= temp69_114 (select ARGNAME_stride_NAMEEND_VAL temp69_113)))
(assert (= temp69_115 #x0000000000000000))
(assert (= temp69_116 #x0000000000000001))
(assert (= temp69_117 temp69_116))
(assert (= temp69_118 (select ARGNAME_stride_NAMEEND_VAL temp69_117)))
(assert (= temp69_119 #x0000000000000000))
(assert (= temp69_120 #x0000000000000002))
(assert (= temp69_121 temp69_120))
(assert (= temp69_122 (select ARGNAME_stride_NAMEEND_VAL temp69_121)))
(assert (= temp69_123 #x0000000000000000))
(assert (= temp69_124 #x0000000000000003))
(assert (= temp69_125 temp69_124))
(assert (= temp69_126 (select ARGNAME_stride_NAMEEND_VAL temp69_125)))
(assert (= temp69_127 #x0000000000000000))
(assert (= temp69_128 #x0000000000000004))
(assert (= temp69_129 temp69_128))
(assert (= temp69_130 (select ARGNAME_stride_NAMEEND_VAL temp69_129)))
(assert (= temp69_131 #x0000000000000000))
(assert (= temp69_132 #x0000000000000005))
(assert (= temp69_133 temp69_132))
(assert (= temp69_134 (select ARGNAME_stride_NAMEEND_VAL temp69_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp69_114 temp69_111)
             (bvsle temp69_118 temp69_115)
             (bvsle temp69_122 temp69_119)
             (bvsle temp69_126 temp69_123)
             (bvsle temp69_130 temp69_127)
             (bvsle temp69_134 temp69_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp69_135 #x0000000000000000))
(assert (= var1191735 temp69_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp69_136 #x0000000000000001))
(assert (= var1191747 temp69_136))
(assert (= temp69_137 #x0000000000000000))
(assert (= var1179826 temp69_137))
(assert (= temp69_138 #x0000000000000000))
(assert (= temp69_139 temp69_138))
(assert (= temp69_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp69_139)))
(assert (= temp69_141 #x0000000000000001))
(assert (= temp69_142 temp69_141))
(assert (= temp69_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp69_142)))
(assert (= temp69_144 #x0000000000000002))
(assert (= temp69_145 temp69_144))
(assert (= temp69_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp69_145)))
(assert (= temp69_147 #x0000000000000003))
(assert (= temp69_148 temp69_147))
(assert (= temp69_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp69_148)))
(assert (= temp69_150 #x0000000000000004))
(assert (= temp69_151 temp69_150))
(assert (= temp69_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp69_151)))
(assert (= temp69_153 #x0000000000000005))
(assert (= temp69_154 temp69_153))
(assert (= temp69_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp69_154)))
(assert (= temp69_157 var1179826))
(assert (= temp69_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp69_157)))
(assert (= temp69_156 temp69_158))
(assert (= var1191780
   (ite (bvslt temp69_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp69_159 #x0000000000000000))
(assert (= var1191780 temp69_159))
(assert (= temp69_160 #x0000000000000000))
(assert (= var1179826 temp69_160))
(assert (= temp69_162 var1179826))
(assert (= temp69_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp69_162)))
(assert (= temp69_161 temp69_163))
(assert (= var1191802 (bvsmod temp69_161 ARGNAME_groups_NAMEEND)))
(assert (= temp69_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp69_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp69_165 #x0000000000000001))
(assert (= var1191803 temp69_165))
(assert (= temp69_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp69_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp69_167 #x0000000000000001))
(assert (= var1191823 temp69_167))
(assert (= temp69_168 #x0000000000000001))
(assert (= var1180714 temp69_168))
(assert (= temp69_169 #x0000000000000000))
(assert (= temp69_170 temp69_169))
(assert (= temp69_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp69_170)))
(assert (= temp69_172 #x0000000000000001))
(assert (= temp69_173 temp69_172))
(assert (= temp69_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp69_173)))
(assert (= temp69_175 #x0000000000000002))
(assert (= temp69_176 temp69_175))
(assert (= temp69_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp69_176)))
(assert (= temp69_178 #x0000000000000003))
(assert (= temp69_179 temp69_178))
(assert (= temp69_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp69_179)))
(assert (= temp69_181 #x0000000000000004))
(assert (= temp69_182 temp69_181))
(assert (= temp69_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp69_182)))
(assert (= temp69_184 #x0000000000000005))
(assert (= temp69_185 temp69_184))
(assert (= temp69_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp69_185)))
(assert (= temp69_187 #x0000000000000000))
(assert (= temp69_188
   (ite (bvslt var1180714 temp69_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp69_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp69_188)))
(assert (= var1191831 temp69_189))
(assert (bvslt (ite (bvslt var1180714 temp69_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp69_190 #x0000000000000001))
(assert (= var1180714 temp69_190))
(assert (= temp69_192 var1180714))
(assert (= temp69_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp69_192)))
(assert (= temp69_191 temp69_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp69_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp69_194 #x0000000000000001))
(assert (= var1191836 temp69_194))
(assert (= temp69_195 #x0000000000000000))
(assert (= var1179826 temp69_195))
(assert (= temp69_197 var1179826))
(assert (= temp69_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp69_197)))
(assert (= temp69_196 temp69_198))
(assert (= temp69_199 #x0000000000000002))
(assert (= var1586025 temp69_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp69_200 #x0000000000000001))
(assert (= var1191993 temp69_200))
(assert (= temp69_201 #x0000000000000001))
(assert (= var2700303 temp69_201))
(assert (= temp69_202 #x0000000000000001))
(assert (= var2962447 temp69_202))
(assert (= temp69_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp69_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp69_204 #x0000000000000001))
(assert (= var211058 temp69_204))
(assert (= temp69_205 #x0000000000000001))
(assert (= var211188 temp69_205))
(assert (= var3879401 var211188))
(assert (= temp69_206 #x0000000000000000))
(assert (= var3866802 temp69_206))
(assert (= temp69_207 #x0000000000000000))
(assert (= temp69_208
   (ite (bvslt var3866802 temp69_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp69_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp69_208)))
(assert (= var3879420 temp69_209))
(assert (bvslt (ite (bvslt var3866802 temp69_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp69_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp69_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp69_211 #x0000000000000001))
(assert (= var3879421 temp69_211))
(assert (= temp69_212 #x0000000000000000))
(assert (= var4079423 temp69_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp69_213 #x0000000000000002))
(assert (= var4208259 temp69_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp69_214 #x0000000000000000))
(assert (= var4273820 temp69_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4993424 var211201))
(assert (= var211494 var210913))
(assert (= temp69_215 #x0000000000000000))
(assert (= var211495
   (ite (distinct var211494 temp69_215) #x0000000000000001 #x0000000000000000)))
(assert (= temp69_217 #x0000000000000001))
(assert (= temp69_216 temp69_217))
(assert (= temp69_218 #x0000000000000001))
(assert (= var6950378 temp69_218))
(assert (= temp69_220 #xffffffffffffffff))
(assert (= temp69_219 temp69_220))
(assert (= temp69_221 #x0000000000000001))
(assert (= var211058 temp69_221))
(model-add temp69_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp69_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp69_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp69_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






