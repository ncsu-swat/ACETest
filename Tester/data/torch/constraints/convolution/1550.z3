(declare-fun temp10861_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10861_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10861_3 () (_ BitVec 64))
(declare-fun temp10861_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10861_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10861_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10861_7 () (_ BitVec 64))
(declare-fun temp10861_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10861_9 () (_ BitVec 64))
(declare-fun temp10861_10 () (_ BitVec 64))
(declare-fun temp10861_11 () (_ BitVec 64))
(declare-fun temp10861_12 () (_ BitVec 64))
(declare-fun temp10861_13 () (_ BitVec 64))
(declare-fun temp10861_14 () (_ BitVec 64))
(declare-fun temp10861_15 () (_ BitVec 64))
(declare-fun temp10861_16 () (_ BitVec 64))
(declare-fun temp10861_17 () (_ BitVec 64))
(declare-fun temp10861_18 () (_ BitVec 64))
(declare-fun temp10861_19 () (_ BitVec 64))
(declare-fun temp10861_20 () (_ BitVec 64))
(declare-fun temp10861_21 () (_ BitVec 64))
(declare-fun temp10861_22 () (_ BitVec 64))
(declare-fun temp10861_23 () (_ BitVec 64))
(declare-fun temp10861_24 () (_ BitVec 64))
(declare-fun temp10861_25 () (_ BitVec 64))
(declare-fun temp10861_26 () (_ BitVec 64))
(declare-fun temp10861_27 () (_ BitVec 64))
(declare-fun temp10861_28 () (_ BitVec 64))
(declare-fun temp10861_29 () (_ BitVec 64))
(declare-fun temp10861_30 () (_ BitVec 64))
(declare-fun temp10861_31 () (_ BitVec 64))
(declare-fun temp10861_32 () (_ BitVec 64))
(declare-fun temp10861_33 () (_ BitVec 64))
(declare-fun temp10861_34 () (_ BitVec 64))
(declare-fun temp10861_35 () (_ BitVec 64))
(declare-fun temp10861_36 () (_ BitVec 64))
(declare-fun temp10861_37 () (_ BitVec 64))
(declare-fun temp10861_38 () (_ BitVec 64))
(declare-fun temp10861_39 () (_ BitVec 64))
(declare-fun temp10861_40 () (_ BitVec 64))
(declare-fun temp10861_41 () (_ BitVec 64))
(declare-fun temp10861_42 () (_ BitVec 64))
(declare-fun temp10861_43 () (_ BitVec 64))
(declare-fun temp10861_44 () (_ BitVec 64))
(declare-fun temp10861_45 () (_ BitVec 64))
(declare-fun temp10861_46 () (_ BitVec 64))
(declare-fun temp10861_47 () (_ BitVec 64))
(declare-fun temp10861_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10861_49 () (_ BitVec 64))
(declare-fun temp10861_50 () (_ BitVec 64))
(declare-fun temp10861_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10861_52 () (_ BitVec 64))
(declare-fun temp10861_53 () (_ BitVec 64))
(declare-fun temp10861_54 () (_ BitVec 64))
(declare-fun temp10861_55 () (_ BitVec 64))
(declare-fun temp10861_56 () (_ BitVec 64))
(declare-fun temp10861_57 () (_ BitVec 64))
(declare-fun temp10861_58 () (_ BitVec 64))
(declare-fun temp10861_59 () (_ BitVec 64))
(declare-fun temp10861_60 () (_ BitVec 64))
(declare-fun temp10861_61 () (_ BitVec 64))
(declare-fun temp10861_62 () (_ BitVec 64))
(declare-fun temp10861_63 () (_ BitVec 64))
(declare-fun temp10861_64 () (_ BitVec 64))
(declare-fun temp10861_65 () (_ BitVec 64))
(declare-fun temp10861_66 () (_ BitVec 64))
(declare-fun temp10861_67 () (_ BitVec 64))
(declare-fun temp10861_68 () (_ BitVec 64))
(declare-fun temp10861_69 () (_ BitVec 64))
(declare-fun temp10861_70 () (_ BitVec 64))
(declare-fun temp10861_71 () (_ BitVec 64))
(declare-fun temp10861_72 () (_ BitVec 64))
(declare-fun temp10861_73 () (_ BitVec 64))
(declare-fun temp10861_74 () (_ BitVec 64))
(declare-fun temp10861_75 () (_ BitVec 64))
(declare-fun temp10861_76 () (_ BitVec 64))
(declare-fun temp10861_77 () (_ BitVec 64))
(declare-fun temp10861_78 () (_ BitVec 64))
(declare-fun temp10861_79 () (_ BitVec 64))
(declare-fun temp10861_80 () (_ BitVec 64))
(declare-fun temp10861_81 () (_ BitVec 64))
(declare-fun temp10861_82 () (_ BitVec 64))
(declare-fun temp10861_83 () (_ BitVec 64))
(declare-fun temp10861_84 () (_ BitVec 64))
(declare-fun temp10861_85 () (_ BitVec 64))
(declare-fun temp10861_86 () (_ BitVec 64))
(declare-fun temp10861_87 () (_ BitVec 64))
(declare-fun temp10861_88 () (_ BitVec 64))
(declare-fun temp10861_89 () (_ BitVec 64))
(declare-fun temp10861_90 () (_ BitVec 64))
(declare-fun temp10861_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10861_92 () (_ BitVec 64))
(declare-fun temp10861_93 () (_ BitVec 64))
(declare-fun temp10861_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10861_95 () (_ BitVec 64))
(declare-fun temp10861_96 () (_ BitVec 64))
(declare-fun temp10861_97 () (_ BitVec 64))
(declare-fun temp10861_98 () (_ BitVec 64))
(declare-fun temp10861_99 () (_ BitVec 64))
(declare-fun temp10861_100 () (_ BitVec 64))
(declare-fun temp10861_101 () (_ BitVec 64))
(declare-fun temp10861_102 () (_ BitVec 64))
(declare-fun temp10861_103 () (_ BitVec 64))
(declare-fun temp10861_104 () (_ BitVec 64))
(declare-fun temp10861_105 () (_ BitVec 64))
(declare-fun temp10861_106 () (_ BitVec 64))
(declare-fun temp10861_107 () (_ BitVec 64))
(declare-fun temp10861_108 () (_ BitVec 64))
(declare-fun temp10861_109 () (_ BitVec 64))
(declare-fun temp10861_110 () (_ BitVec 64))
(declare-fun temp10861_111 () (_ BitVec 64))
(declare-fun temp10861_112 () (_ BitVec 64))
(declare-fun temp10861_113 () (_ BitVec 64))
(declare-fun temp10861_114 () (_ BitVec 64))
(declare-fun temp10861_115 () (_ BitVec 64))
(declare-fun temp10861_116 () (_ BitVec 64))
(declare-fun temp10861_117 () (_ BitVec 64))
(declare-fun temp10861_118 () (_ BitVec 64))
(declare-fun temp10861_119 () (_ BitVec 64))
(declare-fun temp10861_120 () (_ BitVec 64))
(declare-fun temp10861_121 () (_ BitVec 64))
(declare-fun temp10861_122 () (_ BitVec 64))
(declare-fun temp10861_123 () (_ BitVec 64))
(declare-fun temp10861_124 () (_ BitVec 64))
(declare-fun temp10861_125 () (_ BitVec 64))
(declare-fun temp10861_126 () (_ BitVec 64))
(declare-fun temp10861_127 () (_ BitVec 64))
(declare-fun temp10861_128 () (_ BitVec 64))
(declare-fun temp10861_129 () (_ BitVec 64))
(declare-fun temp10861_130 () (_ BitVec 64))
(declare-fun temp10861_131 () (_ BitVec 64))
(declare-fun temp10861_132 () (_ BitVec 64))
(declare-fun temp10861_133 () (_ BitVec 64))
(declare-fun temp10861_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10861_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10861_136 () (_ BitVec 64))
(declare-fun temp10861_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10861_138 () (_ BitVec 64))
(declare-fun temp10861_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10861_140 () (_ BitVec 64))
(declare-fun temp10861_141 () (_ BitVec 64))
(declare-fun temp10861_142 () (_ BitVec 64))
(declare-fun temp10861_143 () (_ BitVec 64))
(declare-fun temp10861_144 () (_ BitVec 64))
(declare-fun temp10861_145 () (_ BitVec 64))
(declare-fun temp10861_146 () (_ BitVec 64))
(declare-fun temp10861_147 () (_ BitVec 64))
(declare-fun temp10861_148 () (_ BitVec 64))
(declare-fun temp10861_149 () (_ BitVec 64))
(declare-fun temp10861_150 () (_ BitVec 64))
(declare-fun temp10861_151 () (_ BitVec 64))
(declare-fun temp10861_152 () (_ BitVec 64))
(declare-fun temp10861_153 () (_ BitVec 64))
(declare-fun temp10861_154 () (_ BitVec 64))
(declare-fun temp10861_155 () (_ BitVec 64))
(declare-fun temp10861_157 () (_ BitVec 64))
(declare-fun temp10861_158 () (_ BitVec 64))
(declare-fun temp10861_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10861_159 () (_ BitVec 64))
(declare-fun temp10861_160 () (_ BitVec 64))
(declare-fun temp10861_162 () (_ BitVec 64))
(declare-fun temp10861_163 () (_ BitVec 64))
(declare-fun temp10861_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10861_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10861_165 () (_ BitVec 64))
(declare-fun temp10861_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10861_167 () (_ BitVec 64))
(declare-fun temp10861_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10861_169 () (_ BitVec 64))
(declare-fun temp10861_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10861_171 () (_ BitVec 64))
(declare-fun temp10861_172 () (_ BitVec 64))
(declare-fun temp10861_173 () (_ BitVec 64))
(declare-fun temp10861_174 () (_ BitVec 64))
(declare-fun temp10861_175 () (_ BitVec 64))
(declare-fun temp10861_176 () (_ BitVec 64))
(declare-fun temp10861_177 () (_ BitVec 64))
(declare-fun temp10861_178 () (_ BitVec 64))
(declare-fun temp10861_179 () (_ BitVec 64))
(declare-fun temp10861_180 () (_ BitVec 64))
(declare-fun temp10861_181 () (_ BitVec 64))
(declare-fun temp10861_182 () (_ BitVec 64))
(declare-fun temp10861_183 () (_ BitVec 64))
(declare-fun temp10861_184 () (_ BitVec 64))
(declare-fun temp10861_185 () (_ BitVec 64))
(declare-fun temp10861_186 () (_ BitVec 64))
(declare-fun temp10861_187 () (_ BitVec 64))
(declare-fun temp10861_188 () (_ BitVec 64))
(declare-fun temp10861_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10861_190 () (_ BitVec 64))
(declare-fun temp10861_192 () (_ BitVec 64))
(declare-fun temp10861_193 () (_ BitVec 64))
(declare-fun temp10861_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10861_194 () (_ BitVec 64))
(declare-fun temp10861_195 () (_ BitVec 64))
(declare-fun temp10861_197 () (_ BitVec 64))
(declare-fun temp10861_198 () (_ BitVec 64))
(declare-fun temp10861_196 () (_ BitVec 64))
(declare-fun temp10861_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10861_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10861_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10861_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10861_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10861_204 () (_ BitVec 64))
(declare-fun temp10861_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10861_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10861_207 () (_ BitVec 64))
(declare-fun temp10861_208 () (_ BitVec 64))
(declare-fun temp10861_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10861_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10861_211 () (_ BitVec 64))
(declare-fun temp10861_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10861_213 () (_ BitVec 64))
(declare-fun temp10861_214 () (_ BitVec 64))
(declare-fun temp10861_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10861_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10861_217 () (_ BitVec 64))
(declare-fun temp10861_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10861_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10861_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var5452176 () (_ BitVec 64))
(declare-fun var5714320 () (_ BitVec 64))
(declare-fun temp10861_221 () (_ BitVec 64))
(assert (= temp10861_1 #x0000000000000001))
(assert (= var77203 temp10861_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10861_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10861_2)))
(assert (= temp10861_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10861_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10861_4 #x0000000000000000))
(assert (= var210941 temp10861_4))
(assert (= temp10861_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10861_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10861_6 #x0000000000000000))
(assert (= var210986 temp10861_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10861_7 #x0000000000000000))
(assert (= temp10861_8 temp10861_7))
(assert (= temp10861_9 (select ARGNAME_padding_NAMEEND_VAL temp10861_8)))
(assert (= temp10861_10 #x0000000000000001))
(assert (= temp10861_11 temp10861_10))
(assert (= temp10861_12 (select ARGNAME_padding_NAMEEND_VAL temp10861_11)))
(assert (= temp10861_13 #x0000000000000002))
(assert (= temp10861_14 temp10861_13))
(assert (= temp10861_15 (select ARGNAME_padding_NAMEEND_VAL temp10861_14)))
(assert (= temp10861_16 #x0000000000000003))
(assert (= temp10861_17 temp10861_16))
(assert (= temp10861_18 (select ARGNAME_padding_NAMEEND_VAL temp10861_17)))
(assert (= temp10861_19 #x0000000000000004))
(assert (= temp10861_20 temp10861_19))
(assert (= temp10861_21 (select ARGNAME_padding_NAMEEND_VAL temp10861_20)))
(assert (= temp10861_22 #x0000000000000005))
(assert (= temp10861_23 temp10861_22))
(assert (= temp10861_24 (select ARGNAME_padding_NAMEEND_VAL temp10861_23)))
(assert (= temp10861_25 #x0000000000000000))
(assert (= temp10861_26 #x0000000000000000))
(assert (= temp10861_27 temp10861_26))
(assert (= temp10861_28 (select ARGNAME_padding_NAMEEND_VAL temp10861_27)))
(assert (= temp10861_29 #x0000000000000000))
(assert (= temp10861_30 #x0000000000000001))
(assert (= temp10861_31 temp10861_30))
(assert (= temp10861_32 (select ARGNAME_padding_NAMEEND_VAL temp10861_31)))
(assert (= temp10861_33 #x0000000000000000))
(assert (= temp10861_34 #x0000000000000002))
(assert (= temp10861_35 temp10861_34))
(assert (= temp10861_36 (select ARGNAME_padding_NAMEEND_VAL temp10861_35)))
(assert (= temp10861_37 #x0000000000000000))
(assert (= temp10861_38 #x0000000000000003))
(assert (= temp10861_39 temp10861_38))
(assert (= temp10861_40 (select ARGNAME_padding_NAMEEND_VAL temp10861_39)))
(assert (= temp10861_41 #x0000000000000000))
(assert (= temp10861_42 #x0000000000000004))
(assert (= temp10861_43 temp10861_42))
(assert (= temp10861_44 (select ARGNAME_padding_NAMEEND_VAL temp10861_43)))
(assert (= temp10861_45 #x0000000000000000))
(assert (= temp10861_46 #x0000000000000005))
(assert (= temp10861_47 temp10861_46))
(assert (= temp10861_48 (select ARGNAME_padding_NAMEEND_VAL temp10861_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10861_28 temp10861_25)
             (bvslt temp10861_32 temp10861_29)
             (bvslt temp10861_36 temp10861_33)
             (bvslt temp10861_40 temp10861_37)
             (bvslt temp10861_44 temp10861_41)
             (bvslt temp10861_48 temp10861_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10861_49 #x0000000000000000))
(assert (= var1191714 temp10861_49))
(assert (= temp10861_50 #x0000000000000000))
(assert (= temp10861_51 temp10861_50))
(assert (= temp10861_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10861_51)))
(assert (= temp10861_53 #x0000000000000001))
(assert (= temp10861_54 temp10861_53))
(assert (= temp10861_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10861_54)))
(assert (= temp10861_56 #x0000000000000002))
(assert (= temp10861_57 temp10861_56))
(assert (= temp10861_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10861_57)))
(assert (= temp10861_59 #x0000000000000003))
(assert (= temp10861_60 temp10861_59))
(assert (= temp10861_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10861_60)))
(assert (= temp10861_62 #x0000000000000004))
(assert (= temp10861_63 temp10861_62))
(assert (= temp10861_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10861_63)))
(assert (= temp10861_65 #x0000000000000005))
(assert (= temp10861_66 temp10861_65))
(assert (= temp10861_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10861_66)))
(assert (= temp10861_68 #x0000000000000000))
(assert (= temp10861_69 #x0000000000000000))
(assert (= temp10861_70 temp10861_69))
(assert (= temp10861_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10861_70)))
(assert (= temp10861_72 #x0000000000000000))
(assert (= temp10861_73 #x0000000000000001))
(assert (= temp10861_74 temp10861_73))
(assert (= temp10861_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10861_74)))
(assert (= temp10861_76 #x0000000000000000))
(assert (= temp10861_77 #x0000000000000002))
(assert (= temp10861_78 temp10861_77))
(assert (= temp10861_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10861_78)))
(assert (= temp10861_80 #x0000000000000000))
(assert (= temp10861_81 #x0000000000000003))
(assert (= temp10861_82 temp10861_81))
(assert (= temp10861_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10861_82)))
(assert (= temp10861_84 #x0000000000000000))
(assert (= temp10861_85 #x0000000000000004))
(assert (= temp10861_86 temp10861_85))
(assert (= temp10861_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10861_86)))
(assert (= temp10861_88 #x0000000000000000))
(assert (= temp10861_89 #x0000000000000005))
(assert (= temp10861_90 temp10861_89))
(assert (= temp10861_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10861_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10861_71 temp10861_68)
             (bvslt temp10861_75 temp10861_72)
             (bvslt temp10861_79 temp10861_76)
             (bvslt temp10861_83 temp10861_80)
             (bvslt temp10861_87 temp10861_84)
             (bvslt temp10861_91 temp10861_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10861_92 #x0000000000000000))
(assert (= var1191725 temp10861_92))
(assert (= temp10861_93 #x0000000000000000))
(assert (= temp10861_94 temp10861_93))
(assert (= temp10861_95 (select ARGNAME_stride_NAMEEND_VAL temp10861_94)))
(assert (= temp10861_96 #x0000000000000001))
(assert (= temp10861_97 temp10861_96))
(assert (= temp10861_98 (select ARGNAME_stride_NAMEEND_VAL temp10861_97)))
(assert (= temp10861_99 #x0000000000000002))
(assert (= temp10861_100 temp10861_99))
(assert (= temp10861_101 (select ARGNAME_stride_NAMEEND_VAL temp10861_100)))
(assert (= temp10861_102 #x0000000000000003))
(assert (= temp10861_103 temp10861_102))
(assert (= temp10861_104 (select ARGNAME_stride_NAMEEND_VAL temp10861_103)))
(assert (= temp10861_105 #x0000000000000004))
(assert (= temp10861_106 temp10861_105))
(assert (= temp10861_107 (select ARGNAME_stride_NAMEEND_VAL temp10861_106)))
(assert (= temp10861_108 #x0000000000000005))
(assert (= temp10861_109 temp10861_108))
(assert (= temp10861_110 (select ARGNAME_stride_NAMEEND_VAL temp10861_109)))
(assert (= temp10861_111 #x0000000000000000))
(assert (= temp10861_112 #x0000000000000000))
(assert (= temp10861_113 temp10861_112))
(assert (= temp10861_114 (select ARGNAME_stride_NAMEEND_VAL temp10861_113)))
(assert (= temp10861_115 #x0000000000000000))
(assert (= temp10861_116 #x0000000000000001))
(assert (= temp10861_117 temp10861_116))
(assert (= temp10861_118 (select ARGNAME_stride_NAMEEND_VAL temp10861_117)))
(assert (= temp10861_119 #x0000000000000000))
(assert (= temp10861_120 #x0000000000000002))
(assert (= temp10861_121 temp10861_120))
(assert (= temp10861_122 (select ARGNAME_stride_NAMEEND_VAL temp10861_121)))
(assert (= temp10861_123 #x0000000000000000))
(assert (= temp10861_124 #x0000000000000003))
(assert (= temp10861_125 temp10861_124))
(assert (= temp10861_126 (select ARGNAME_stride_NAMEEND_VAL temp10861_125)))
(assert (= temp10861_127 #x0000000000000000))
(assert (= temp10861_128 #x0000000000000004))
(assert (= temp10861_129 temp10861_128))
(assert (= temp10861_130 (select ARGNAME_stride_NAMEEND_VAL temp10861_129)))
(assert (= temp10861_131 #x0000000000000000))
(assert (= temp10861_132 #x0000000000000005))
(assert (= temp10861_133 temp10861_132))
(assert (= temp10861_134 (select ARGNAME_stride_NAMEEND_VAL temp10861_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10861_114 temp10861_111)
             (bvsle temp10861_118 temp10861_115)
             (bvsle temp10861_122 temp10861_119)
             (bvsle temp10861_126 temp10861_123)
             (bvsle temp10861_130 temp10861_127)
             (bvsle temp10861_134 temp10861_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10861_135 #x0000000000000000))
(assert (= var1191735 temp10861_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10861_136 #x0000000000000001))
(assert (= var1191747 temp10861_136))
(assert (= temp10861_137 #x0000000000000000))
(assert (= var1179826 temp10861_137))
(assert (= temp10861_138 #x0000000000000000))
(assert (= temp10861_139 temp10861_138))
(assert (= temp10861_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10861_139)))
(assert (= temp10861_141 #x0000000000000001))
(assert (= temp10861_142 temp10861_141))
(assert (= temp10861_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10861_142)))
(assert (= temp10861_144 #x0000000000000002))
(assert (= temp10861_145 temp10861_144))
(assert (= temp10861_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10861_145)))
(assert (= temp10861_147 #x0000000000000003))
(assert (= temp10861_148 temp10861_147))
(assert (= temp10861_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10861_148)))
(assert (= temp10861_150 #x0000000000000004))
(assert (= temp10861_151 temp10861_150))
(assert (= temp10861_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10861_151)))
(assert (= temp10861_153 #x0000000000000005))
(assert (= temp10861_154 temp10861_153))
(assert (= temp10861_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10861_154)))
(assert (= temp10861_157 var1179826))
(assert (= temp10861_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10861_157)))
(assert (= temp10861_156 temp10861_158))
(assert (= var1191780
   (ite (bvslt temp10861_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10861_159 #x0000000000000000))
(assert (= var1191780 temp10861_159))
(assert (= temp10861_160 #x0000000000000000))
(assert (= var1179826 temp10861_160))
(assert (= temp10861_162 var1179826))
(assert (= temp10861_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10861_162)))
(assert (= temp10861_161 temp10861_163))
(assert (= var1191802 (bvsmod temp10861_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10861_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10861_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10861_165 #x0000000000000001))
(assert (= var1191803 temp10861_165))
(assert (= temp10861_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10861_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10861_167 #x0000000000000001))
(assert (= var1191823 temp10861_167))
(assert (= temp10861_168 #x0000000000000001))
(assert (= var1180714 temp10861_168))
(assert (= temp10861_169 #x0000000000000000))
(assert (= temp10861_170 temp10861_169))
(assert (= temp10861_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10861_170)))
(assert (= temp10861_172 #x0000000000000001))
(assert (= temp10861_173 temp10861_172))
(assert (= temp10861_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10861_173)))
(assert (= temp10861_175 #x0000000000000002))
(assert (= temp10861_176 temp10861_175))
(assert (= temp10861_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10861_176)))
(assert (= temp10861_178 #x0000000000000003))
(assert (= temp10861_179 temp10861_178))
(assert (= temp10861_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10861_179)))
(assert (= temp10861_181 #x0000000000000004))
(assert (= temp10861_182 temp10861_181))
(assert (= temp10861_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10861_182)))
(assert (= temp10861_184 #x0000000000000005))
(assert (= temp10861_185 temp10861_184))
(assert (= temp10861_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10861_185)))
(assert (= temp10861_187 #x0000000000000000))
(assert (= temp10861_188
   (ite (bvslt var1180714 temp10861_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10861_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10861_188)))
(assert (= var1191831 temp10861_189))
(assert (bvslt (ite (bvslt var1180714 temp10861_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10861_190 #x0000000000000001))
(assert (= var1180714 temp10861_190))
(assert (= temp10861_192 var1180714))
(assert (= temp10861_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10861_192)))
(assert (= temp10861_191 temp10861_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10861_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10861_194 #x0000000000000001))
(assert (= var1191836 temp10861_194))
(assert (= temp10861_195 #x0000000000000000))
(assert (= var1179826 temp10861_195))
(assert (= temp10861_197 var1179826))
(assert (= temp10861_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10861_197)))
(assert (= temp10861_196 temp10861_198))
(assert (= temp10861_199 #x0000000000000002))
(assert (= var1586025 temp10861_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10861_200 #x0000000000000001))
(assert (= var1191993 temp10861_200))
(assert (= temp10861_201 #x0000000000000001))
(assert (= var2700303 temp10861_201))
(assert (= temp10861_202 #x0000000000000001))
(assert (= var2962447 temp10861_202))
(assert (= temp10861_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10861_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10861_204 #x0000000000000001))
(assert (= var211058 temp10861_204))
(assert (= temp10861_205 #x0000000000000001))
(assert (= var211188 temp10861_205))
(assert (= var3879401 var211188))
(assert (= temp10861_206 #x0000000000000000))
(assert (= var3866802 temp10861_206))
(assert (= temp10861_207 #x0000000000000000))
(assert (= temp10861_208
   (ite (bvslt var3866802 temp10861_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10861_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10861_208)))
(assert (= var3879420 temp10861_209))
(assert (bvslt (ite (bvslt var3866802 temp10861_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10861_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10861_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10861_211 #x0000000000000000))
(assert (= var3879421 temp10861_211))
(assert (= temp10861_212 #x0000000000000001))
(assert (= var3867690 temp10861_212))
(assert (= temp10861_213 #x0000000000000000))
(assert (= temp10861_214
   (ite (bvslt var3867690 temp10861_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10861_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10861_214)))
(assert (= var3879423 temp10861_215))
(assert (bvslt (ite (bvslt var3867690 temp10861_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10861_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10861_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10861_217 #x0000000000000001))
(assert (= var3879424 temp10861_217))
(assert (= temp10861_218 #x0000000000000000))
(assert (= var4133117 temp10861_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10861_219 #x0000000000000002))
(assert (= var4339331 temp10861_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10861_220 #x0000000000000000))
(assert (= var4404892 temp10861_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var5452176 var211201))
(assert (= var5714320 var211201))
(assert (= temp10861_221 #x0000000000000001))
(assert (= var211058 temp10861_221))
(model-add temp10861_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10861_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10861_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10861_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





