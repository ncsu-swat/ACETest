(declare-fun temp10480_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10480_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10480_3 () (_ BitVec 64))
(declare-fun temp10480_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10480_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10480_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10480_7 () (_ BitVec 64))
(declare-fun temp10480_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10480_9 () (_ BitVec 64))
(declare-fun temp10480_10 () (_ BitVec 64))
(declare-fun temp10480_11 () (_ BitVec 64))
(declare-fun temp10480_12 () (_ BitVec 64))
(declare-fun temp10480_13 () (_ BitVec 64))
(declare-fun temp10480_14 () (_ BitVec 64))
(declare-fun temp10480_15 () (_ BitVec 64))
(declare-fun temp10480_16 () (_ BitVec 64))
(declare-fun temp10480_17 () (_ BitVec 64))
(declare-fun temp10480_18 () (_ BitVec 64))
(declare-fun temp10480_19 () (_ BitVec 64))
(declare-fun temp10480_20 () (_ BitVec 64))
(declare-fun temp10480_21 () (_ BitVec 64))
(declare-fun temp10480_22 () (_ BitVec 64))
(declare-fun temp10480_23 () (_ BitVec 64))
(declare-fun temp10480_24 () (_ BitVec 64))
(declare-fun temp10480_25 () (_ BitVec 64))
(declare-fun temp10480_26 () (_ BitVec 64))
(declare-fun temp10480_27 () (_ BitVec 64))
(declare-fun temp10480_28 () (_ BitVec 64))
(declare-fun temp10480_29 () (_ BitVec 64))
(declare-fun temp10480_30 () (_ BitVec 64))
(declare-fun temp10480_31 () (_ BitVec 64))
(declare-fun temp10480_32 () (_ BitVec 64))
(declare-fun temp10480_33 () (_ BitVec 64))
(declare-fun temp10480_34 () (_ BitVec 64))
(declare-fun temp10480_35 () (_ BitVec 64))
(declare-fun temp10480_36 () (_ BitVec 64))
(declare-fun temp10480_37 () (_ BitVec 64))
(declare-fun temp10480_38 () (_ BitVec 64))
(declare-fun temp10480_39 () (_ BitVec 64))
(declare-fun temp10480_40 () (_ BitVec 64))
(declare-fun temp10480_41 () (_ BitVec 64))
(declare-fun temp10480_42 () (_ BitVec 64))
(declare-fun temp10480_43 () (_ BitVec 64))
(declare-fun temp10480_44 () (_ BitVec 64))
(declare-fun temp10480_45 () (_ BitVec 64))
(declare-fun temp10480_46 () (_ BitVec 64))
(declare-fun temp10480_47 () (_ BitVec 64))
(declare-fun temp10480_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10480_49 () (_ BitVec 64))
(declare-fun temp10480_50 () (_ BitVec 64))
(declare-fun temp10480_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10480_52 () (_ BitVec 64))
(declare-fun temp10480_53 () (_ BitVec 64))
(declare-fun temp10480_54 () (_ BitVec 64))
(declare-fun temp10480_55 () (_ BitVec 64))
(declare-fun temp10480_56 () (_ BitVec 64))
(declare-fun temp10480_57 () (_ BitVec 64))
(declare-fun temp10480_58 () (_ BitVec 64))
(declare-fun temp10480_59 () (_ BitVec 64))
(declare-fun temp10480_60 () (_ BitVec 64))
(declare-fun temp10480_61 () (_ BitVec 64))
(declare-fun temp10480_62 () (_ BitVec 64))
(declare-fun temp10480_63 () (_ BitVec 64))
(declare-fun temp10480_64 () (_ BitVec 64))
(declare-fun temp10480_65 () (_ BitVec 64))
(declare-fun temp10480_66 () (_ BitVec 64))
(declare-fun temp10480_67 () (_ BitVec 64))
(declare-fun temp10480_68 () (_ BitVec 64))
(declare-fun temp10480_69 () (_ BitVec 64))
(declare-fun temp10480_70 () (_ BitVec 64))
(declare-fun temp10480_71 () (_ BitVec 64))
(declare-fun temp10480_72 () (_ BitVec 64))
(declare-fun temp10480_73 () (_ BitVec 64))
(declare-fun temp10480_74 () (_ BitVec 64))
(declare-fun temp10480_75 () (_ BitVec 64))
(declare-fun temp10480_76 () (_ BitVec 64))
(declare-fun temp10480_77 () (_ BitVec 64))
(declare-fun temp10480_78 () (_ BitVec 64))
(declare-fun temp10480_79 () (_ BitVec 64))
(declare-fun temp10480_80 () (_ BitVec 64))
(declare-fun temp10480_81 () (_ BitVec 64))
(declare-fun temp10480_82 () (_ BitVec 64))
(declare-fun temp10480_83 () (_ BitVec 64))
(declare-fun temp10480_84 () (_ BitVec 64))
(declare-fun temp10480_85 () (_ BitVec 64))
(declare-fun temp10480_86 () (_ BitVec 64))
(declare-fun temp10480_87 () (_ BitVec 64))
(declare-fun temp10480_88 () (_ BitVec 64))
(declare-fun temp10480_89 () (_ BitVec 64))
(declare-fun temp10480_90 () (_ BitVec 64))
(declare-fun temp10480_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10480_92 () (_ BitVec 64))
(declare-fun temp10480_93 () (_ BitVec 64))
(declare-fun temp10480_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10480_95 () (_ BitVec 64))
(declare-fun temp10480_96 () (_ BitVec 64))
(declare-fun temp10480_97 () (_ BitVec 64))
(declare-fun temp10480_98 () (_ BitVec 64))
(declare-fun temp10480_99 () (_ BitVec 64))
(declare-fun temp10480_100 () (_ BitVec 64))
(declare-fun temp10480_101 () (_ BitVec 64))
(declare-fun temp10480_102 () (_ BitVec 64))
(declare-fun temp10480_103 () (_ BitVec 64))
(declare-fun temp10480_104 () (_ BitVec 64))
(declare-fun temp10480_105 () (_ BitVec 64))
(declare-fun temp10480_106 () (_ BitVec 64))
(declare-fun temp10480_107 () (_ BitVec 64))
(declare-fun temp10480_108 () (_ BitVec 64))
(declare-fun temp10480_109 () (_ BitVec 64))
(declare-fun temp10480_110 () (_ BitVec 64))
(declare-fun temp10480_111 () (_ BitVec 64))
(declare-fun temp10480_112 () (_ BitVec 64))
(declare-fun temp10480_113 () (_ BitVec 64))
(declare-fun temp10480_114 () (_ BitVec 64))
(declare-fun temp10480_115 () (_ BitVec 64))
(declare-fun temp10480_116 () (_ BitVec 64))
(declare-fun temp10480_117 () (_ BitVec 64))
(declare-fun temp10480_118 () (_ BitVec 64))
(declare-fun temp10480_119 () (_ BitVec 64))
(declare-fun temp10480_120 () (_ BitVec 64))
(declare-fun temp10480_121 () (_ BitVec 64))
(declare-fun temp10480_122 () (_ BitVec 64))
(declare-fun temp10480_123 () (_ BitVec 64))
(declare-fun temp10480_124 () (_ BitVec 64))
(declare-fun temp10480_125 () (_ BitVec 64))
(declare-fun temp10480_126 () (_ BitVec 64))
(declare-fun temp10480_127 () (_ BitVec 64))
(declare-fun temp10480_128 () (_ BitVec 64))
(declare-fun temp10480_129 () (_ BitVec 64))
(declare-fun temp10480_130 () (_ BitVec 64))
(declare-fun temp10480_131 () (_ BitVec 64))
(declare-fun temp10480_132 () (_ BitVec 64))
(declare-fun temp10480_133 () (_ BitVec 64))
(declare-fun temp10480_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10480_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10480_136 () (_ BitVec 64))
(declare-fun temp10480_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10480_138 () (_ BitVec 64))
(declare-fun temp10480_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10480_140 () (_ BitVec 64))
(declare-fun temp10480_141 () (_ BitVec 64))
(declare-fun temp10480_142 () (_ BitVec 64))
(declare-fun temp10480_143 () (_ BitVec 64))
(declare-fun temp10480_144 () (_ BitVec 64))
(declare-fun temp10480_145 () (_ BitVec 64))
(declare-fun temp10480_146 () (_ BitVec 64))
(declare-fun temp10480_147 () (_ BitVec 64))
(declare-fun temp10480_148 () (_ BitVec 64))
(declare-fun temp10480_149 () (_ BitVec 64))
(declare-fun temp10480_150 () (_ BitVec 64))
(declare-fun temp10480_151 () (_ BitVec 64))
(declare-fun temp10480_152 () (_ BitVec 64))
(declare-fun temp10480_153 () (_ BitVec 64))
(declare-fun temp10480_154 () (_ BitVec 64))
(declare-fun temp10480_155 () (_ BitVec 64))
(declare-fun temp10480_157 () (_ BitVec 64))
(declare-fun temp10480_158 () (_ BitVec 64))
(declare-fun temp10480_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10480_159 () (_ BitVec 64))
(declare-fun temp10480_160 () (_ BitVec 64))
(declare-fun temp10480_162 () (_ BitVec 64))
(declare-fun temp10480_163 () (_ BitVec 64))
(declare-fun temp10480_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10480_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10480_165 () (_ BitVec 64))
(declare-fun temp10480_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10480_167 () (_ BitVec 64))
(declare-fun temp10480_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10480_169 () (_ BitVec 64))
(declare-fun temp10480_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10480_171 () (_ BitVec 64))
(declare-fun temp10480_172 () (_ BitVec 64))
(declare-fun temp10480_173 () (_ BitVec 64))
(declare-fun temp10480_174 () (_ BitVec 64))
(declare-fun temp10480_175 () (_ BitVec 64))
(declare-fun temp10480_176 () (_ BitVec 64))
(declare-fun temp10480_177 () (_ BitVec 64))
(declare-fun temp10480_178 () (_ BitVec 64))
(declare-fun temp10480_179 () (_ BitVec 64))
(declare-fun temp10480_180 () (_ BitVec 64))
(declare-fun temp10480_181 () (_ BitVec 64))
(declare-fun temp10480_182 () (_ BitVec 64))
(declare-fun temp10480_183 () (_ BitVec 64))
(declare-fun temp10480_184 () (_ BitVec 64))
(declare-fun temp10480_185 () (_ BitVec 64))
(declare-fun temp10480_186 () (_ BitVec 64))
(declare-fun temp10480_187 () (_ BitVec 64))
(declare-fun temp10480_188 () (_ BitVec 64))
(declare-fun temp10480_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10480_190 () (_ BitVec 64))
(declare-fun temp10480_192 () (_ BitVec 64))
(declare-fun temp10480_193 () (_ BitVec 64))
(declare-fun temp10480_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10480_194 () (_ BitVec 64))
(declare-fun temp10480_195 () (_ BitVec 64))
(declare-fun temp10480_197 () (_ BitVec 64))
(declare-fun temp10480_198 () (_ BitVec 64))
(declare-fun temp10480_196 () (_ BitVec 64))
(declare-fun temp10480_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10480_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10480_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10480_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10480_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10480_204 () (_ BitVec 64))
(declare-fun temp10480_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10480_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10480_207 () (_ BitVec 64))
(declare-fun temp10480_208 () (_ BitVec 64))
(declare-fun temp10480_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10480_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10480_211 () (_ BitVec 64))
(declare-fun temp10480_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10480_213 () (_ BitVec 64))
(declare-fun temp10480_214 () (_ BitVec 64))
(declare-fun temp10480_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10480_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10480_217 () (_ BitVec 64))
(declare-fun temp10480_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10480_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10480_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4469136 () (_ BitVec 64))
(declare-fun var4731280 () (_ BitVec 64))
(declare-fun temp10480_221 () (_ BitVec 64))
(declare-fun var212414 () (_ BitVec 64))
(declare-fun temp10480_222 () (_ BitVec 64))
(declare-fun temp10480_223 () (_ BitVec 64))
(declare-fun var5060227 () (_ BitVec 64))
(declare-fun var5125772 () (_ BitVec 64))
(declare-fun temp10480_224 () (_ BitVec 64))
(assert (= temp10480_1 #x0000000000000001))
(assert (= var77203 temp10480_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10480_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10480_2)))
(assert (= temp10480_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10480_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10480_4 #x0000000000000000))
(assert (= var210941 temp10480_4))
(assert (= temp10480_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10480_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10480_6 #x0000000000000000))
(assert (= var210986 temp10480_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10480_7 #x0000000000000000))
(assert (= temp10480_8 temp10480_7))
(assert (= temp10480_9 (select ARGNAME_padding_NAMEEND_VAL temp10480_8)))
(assert (= temp10480_10 #x0000000000000001))
(assert (= temp10480_11 temp10480_10))
(assert (= temp10480_12 (select ARGNAME_padding_NAMEEND_VAL temp10480_11)))
(assert (= temp10480_13 #x0000000000000002))
(assert (= temp10480_14 temp10480_13))
(assert (= temp10480_15 (select ARGNAME_padding_NAMEEND_VAL temp10480_14)))
(assert (= temp10480_16 #x0000000000000003))
(assert (= temp10480_17 temp10480_16))
(assert (= temp10480_18 (select ARGNAME_padding_NAMEEND_VAL temp10480_17)))
(assert (= temp10480_19 #x0000000000000004))
(assert (= temp10480_20 temp10480_19))
(assert (= temp10480_21 (select ARGNAME_padding_NAMEEND_VAL temp10480_20)))
(assert (= temp10480_22 #x0000000000000005))
(assert (= temp10480_23 temp10480_22))
(assert (= temp10480_24 (select ARGNAME_padding_NAMEEND_VAL temp10480_23)))
(assert (= temp10480_25 #x0000000000000000))
(assert (= temp10480_26 #x0000000000000000))
(assert (= temp10480_27 temp10480_26))
(assert (= temp10480_28 (select ARGNAME_padding_NAMEEND_VAL temp10480_27)))
(assert (= temp10480_29 #x0000000000000000))
(assert (= temp10480_30 #x0000000000000001))
(assert (= temp10480_31 temp10480_30))
(assert (= temp10480_32 (select ARGNAME_padding_NAMEEND_VAL temp10480_31)))
(assert (= temp10480_33 #x0000000000000000))
(assert (= temp10480_34 #x0000000000000002))
(assert (= temp10480_35 temp10480_34))
(assert (= temp10480_36 (select ARGNAME_padding_NAMEEND_VAL temp10480_35)))
(assert (= temp10480_37 #x0000000000000000))
(assert (= temp10480_38 #x0000000000000003))
(assert (= temp10480_39 temp10480_38))
(assert (= temp10480_40 (select ARGNAME_padding_NAMEEND_VAL temp10480_39)))
(assert (= temp10480_41 #x0000000000000000))
(assert (= temp10480_42 #x0000000000000004))
(assert (= temp10480_43 temp10480_42))
(assert (= temp10480_44 (select ARGNAME_padding_NAMEEND_VAL temp10480_43)))
(assert (= temp10480_45 #x0000000000000000))
(assert (= temp10480_46 #x0000000000000005))
(assert (= temp10480_47 temp10480_46))
(assert (= temp10480_48 (select ARGNAME_padding_NAMEEND_VAL temp10480_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10480_28 temp10480_25)
             (bvslt temp10480_32 temp10480_29)
             (bvslt temp10480_36 temp10480_33)
             (bvslt temp10480_40 temp10480_37)
             (bvslt temp10480_44 temp10480_41)
             (bvslt temp10480_48 temp10480_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10480_49 #x0000000000000000))
(assert (= var1191714 temp10480_49))
(assert (= temp10480_50 #x0000000000000000))
(assert (= temp10480_51 temp10480_50))
(assert (= temp10480_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10480_51)))
(assert (= temp10480_53 #x0000000000000001))
(assert (= temp10480_54 temp10480_53))
(assert (= temp10480_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10480_54)))
(assert (= temp10480_56 #x0000000000000002))
(assert (= temp10480_57 temp10480_56))
(assert (= temp10480_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10480_57)))
(assert (= temp10480_59 #x0000000000000003))
(assert (= temp10480_60 temp10480_59))
(assert (= temp10480_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10480_60)))
(assert (= temp10480_62 #x0000000000000004))
(assert (= temp10480_63 temp10480_62))
(assert (= temp10480_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10480_63)))
(assert (= temp10480_65 #x0000000000000005))
(assert (= temp10480_66 temp10480_65))
(assert (= temp10480_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10480_66)))
(assert (= temp10480_68 #x0000000000000000))
(assert (= temp10480_69 #x0000000000000000))
(assert (= temp10480_70 temp10480_69))
(assert (= temp10480_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10480_70)))
(assert (= temp10480_72 #x0000000000000000))
(assert (= temp10480_73 #x0000000000000001))
(assert (= temp10480_74 temp10480_73))
(assert (= temp10480_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10480_74)))
(assert (= temp10480_76 #x0000000000000000))
(assert (= temp10480_77 #x0000000000000002))
(assert (= temp10480_78 temp10480_77))
(assert (= temp10480_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10480_78)))
(assert (= temp10480_80 #x0000000000000000))
(assert (= temp10480_81 #x0000000000000003))
(assert (= temp10480_82 temp10480_81))
(assert (= temp10480_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10480_82)))
(assert (= temp10480_84 #x0000000000000000))
(assert (= temp10480_85 #x0000000000000004))
(assert (= temp10480_86 temp10480_85))
(assert (= temp10480_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10480_86)))
(assert (= temp10480_88 #x0000000000000000))
(assert (= temp10480_89 #x0000000000000005))
(assert (= temp10480_90 temp10480_89))
(assert (= temp10480_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10480_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10480_71 temp10480_68)
             (bvslt temp10480_75 temp10480_72)
             (bvslt temp10480_79 temp10480_76)
             (bvslt temp10480_83 temp10480_80)
             (bvslt temp10480_87 temp10480_84)
             (bvslt temp10480_91 temp10480_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10480_92 #x0000000000000000))
(assert (= var1191725 temp10480_92))
(assert (= temp10480_93 #x0000000000000000))
(assert (= temp10480_94 temp10480_93))
(assert (= temp10480_95 (select ARGNAME_stride_NAMEEND_VAL temp10480_94)))
(assert (= temp10480_96 #x0000000000000001))
(assert (= temp10480_97 temp10480_96))
(assert (= temp10480_98 (select ARGNAME_stride_NAMEEND_VAL temp10480_97)))
(assert (= temp10480_99 #x0000000000000002))
(assert (= temp10480_100 temp10480_99))
(assert (= temp10480_101 (select ARGNAME_stride_NAMEEND_VAL temp10480_100)))
(assert (= temp10480_102 #x0000000000000003))
(assert (= temp10480_103 temp10480_102))
(assert (= temp10480_104 (select ARGNAME_stride_NAMEEND_VAL temp10480_103)))
(assert (= temp10480_105 #x0000000000000004))
(assert (= temp10480_106 temp10480_105))
(assert (= temp10480_107 (select ARGNAME_stride_NAMEEND_VAL temp10480_106)))
(assert (= temp10480_108 #x0000000000000005))
(assert (= temp10480_109 temp10480_108))
(assert (= temp10480_110 (select ARGNAME_stride_NAMEEND_VAL temp10480_109)))
(assert (= temp10480_111 #x0000000000000000))
(assert (= temp10480_112 #x0000000000000000))
(assert (= temp10480_113 temp10480_112))
(assert (= temp10480_114 (select ARGNAME_stride_NAMEEND_VAL temp10480_113)))
(assert (= temp10480_115 #x0000000000000000))
(assert (= temp10480_116 #x0000000000000001))
(assert (= temp10480_117 temp10480_116))
(assert (= temp10480_118 (select ARGNAME_stride_NAMEEND_VAL temp10480_117)))
(assert (= temp10480_119 #x0000000000000000))
(assert (= temp10480_120 #x0000000000000002))
(assert (= temp10480_121 temp10480_120))
(assert (= temp10480_122 (select ARGNAME_stride_NAMEEND_VAL temp10480_121)))
(assert (= temp10480_123 #x0000000000000000))
(assert (= temp10480_124 #x0000000000000003))
(assert (= temp10480_125 temp10480_124))
(assert (= temp10480_126 (select ARGNAME_stride_NAMEEND_VAL temp10480_125)))
(assert (= temp10480_127 #x0000000000000000))
(assert (= temp10480_128 #x0000000000000004))
(assert (= temp10480_129 temp10480_128))
(assert (= temp10480_130 (select ARGNAME_stride_NAMEEND_VAL temp10480_129)))
(assert (= temp10480_131 #x0000000000000000))
(assert (= temp10480_132 #x0000000000000005))
(assert (= temp10480_133 temp10480_132))
(assert (= temp10480_134 (select ARGNAME_stride_NAMEEND_VAL temp10480_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10480_114 temp10480_111)
             (bvsle temp10480_118 temp10480_115)
             (bvsle temp10480_122 temp10480_119)
             (bvsle temp10480_126 temp10480_123)
             (bvsle temp10480_130 temp10480_127)
             (bvsle temp10480_134 temp10480_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10480_135 #x0000000000000000))
(assert (= var1191735 temp10480_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10480_136 #x0000000000000001))
(assert (= var1191747 temp10480_136))
(assert (= temp10480_137 #x0000000000000000))
(assert (= var1179826 temp10480_137))
(assert (= temp10480_138 #x0000000000000000))
(assert (= temp10480_139 temp10480_138))
(assert (= temp10480_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10480_139)))
(assert (= temp10480_141 #x0000000000000001))
(assert (= temp10480_142 temp10480_141))
(assert (= temp10480_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10480_142)))
(assert (= temp10480_144 #x0000000000000002))
(assert (= temp10480_145 temp10480_144))
(assert (= temp10480_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10480_145)))
(assert (= temp10480_147 #x0000000000000003))
(assert (= temp10480_148 temp10480_147))
(assert (= temp10480_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10480_148)))
(assert (= temp10480_150 #x0000000000000004))
(assert (= temp10480_151 temp10480_150))
(assert (= temp10480_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10480_151)))
(assert (= temp10480_153 #x0000000000000005))
(assert (= temp10480_154 temp10480_153))
(assert (= temp10480_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10480_154)))
(assert (= temp10480_157 var1179826))
(assert (= temp10480_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10480_157)))
(assert (= temp10480_156 temp10480_158))
(assert (= var1191780
   (ite (bvslt temp10480_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10480_159 #x0000000000000000))
(assert (= var1191780 temp10480_159))
(assert (= temp10480_160 #x0000000000000000))
(assert (= var1179826 temp10480_160))
(assert (= temp10480_162 var1179826))
(assert (= temp10480_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10480_162)))
(assert (= temp10480_161 temp10480_163))
(assert (= var1191802 (bvsmod temp10480_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10480_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10480_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10480_165 #x0000000000000001))
(assert (= var1191803 temp10480_165))
(assert (= temp10480_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10480_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10480_167 #x0000000000000001))
(assert (= var1191823 temp10480_167))
(assert (= temp10480_168 #x0000000000000001))
(assert (= var1180714 temp10480_168))
(assert (= temp10480_169 #x0000000000000000))
(assert (= temp10480_170 temp10480_169))
(assert (= temp10480_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10480_170)))
(assert (= temp10480_172 #x0000000000000001))
(assert (= temp10480_173 temp10480_172))
(assert (= temp10480_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10480_173)))
(assert (= temp10480_175 #x0000000000000002))
(assert (= temp10480_176 temp10480_175))
(assert (= temp10480_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10480_176)))
(assert (= temp10480_178 #x0000000000000003))
(assert (= temp10480_179 temp10480_178))
(assert (= temp10480_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10480_179)))
(assert (= temp10480_181 #x0000000000000004))
(assert (= temp10480_182 temp10480_181))
(assert (= temp10480_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10480_182)))
(assert (= temp10480_184 #x0000000000000005))
(assert (= temp10480_185 temp10480_184))
(assert (= temp10480_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10480_185)))
(assert (= temp10480_187 #x0000000000000000))
(assert (= temp10480_188
   (ite (bvslt var1180714 temp10480_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10480_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10480_188)))
(assert (= var1191831 temp10480_189))
(assert (bvslt (ite (bvslt var1180714 temp10480_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10480_190 #x0000000000000001))
(assert (= var1180714 temp10480_190))
(assert (= temp10480_192 var1180714))
(assert (= temp10480_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10480_192)))
(assert (= temp10480_191 temp10480_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10480_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10480_194 #x0000000000000001))
(assert (= var1191836 temp10480_194))
(assert (= temp10480_195 #x0000000000000000))
(assert (= var1179826 temp10480_195))
(assert (= temp10480_197 var1179826))
(assert (= temp10480_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10480_197)))
(assert (= temp10480_196 temp10480_198))
(assert (= temp10480_199 #x0000000000000002))
(assert (= var1586025 temp10480_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10480_200 #x0000000000000001))
(assert (= var1191993 temp10480_200))
(assert (= temp10480_201 #x0000000000000001))
(assert (= var2700303 temp10480_201))
(assert (= temp10480_202 #x0000000000000001))
(assert (= var2962447 temp10480_202))
(assert (= temp10480_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10480_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10480_204 #x0000000000000001))
(assert (= var211058 temp10480_204))
(assert (= temp10480_205 #x0000000000000001))
(assert (= var211188 temp10480_205))
(assert (= var3879401 var211188))
(assert (= temp10480_206 #x0000000000000000))
(assert (= var3866802 temp10480_206))
(assert (= temp10480_207 #x0000000000000000))
(assert (= temp10480_208
   (ite (bvslt var3866802 temp10480_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10480_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10480_208)))
(assert (= var3879420 temp10480_209))
(assert (bvslt (ite (bvslt var3866802 temp10480_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10480_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10480_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10480_211 #x0000000000000000))
(assert (= var3879421 temp10480_211))
(assert (= temp10480_212 #x0000000000000001))
(assert (= var3867690 temp10480_212))
(assert (= temp10480_213 #x0000000000000000))
(assert (= temp10480_214
   (ite (bvslt var3867690 temp10480_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10480_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10480_214)))
(assert (= var3879423 temp10480_215))
(assert (bvslt (ite (bvslt var3867690 temp10480_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10480_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10480_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10480_217 #x0000000000000001))
(assert (= var3879424 temp10480_217))
(assert (= temp10480_218 #x0000000000000000))
(assert (= var4079423 temp10480_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10480_219 #x0000000000000002))
(assert (= var4208259 temp10480_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10480_220 #x0000000000000000))
(assert (= var4273820 temp10480_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4469136 var211201))
(assert (= var4731280 var211201))
(assert (= temp10480_221 #x0000000000000001))
(assert (= var212414
   (ite (= ARGNAME_groups_NAMEEND temp10480_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10480_222 #x0000000000000000))
(assert (= var212414 temp10480_222))
(assert (= temp10480_223 #x0000000000000002))
(assert (= var5060227 temp10480_223))
(assert (= var5125772 var5060227))
(assert (= temp10480_224 #x0000000000000001))
(assert (= var211058 temp10480_224))
(model-add temp10480_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10480_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10480_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10480_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





