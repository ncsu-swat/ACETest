(declare-fun temp812_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp812_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp812_3 () (_ BitVec 64))
(declare-fun temp812_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp812_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp812_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp812_7 () (_ BitVec 64))
(declare-fun temp812_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp812_9 () (_ BitVec 64))
(declare-fun temp812_10 () (_ BitVec 64))
(declare-fun temp812_11 () (_ BitVec 64))
(declare-fun temp812_12 () (_ BitVec 64))
(declare-fun temp812_13 () (_ BitVec 64))
(declare-fun temp812_14 () (_ BitVec 64))
(declare-fun temp812_15 () (_ BitVec 64))
(declare-fun temp812_16 () (_ BitVec 64))
(declare-fun temp812_17 () (_ BitVec 64))
(declare-fun temp812_18 () (_ BitVec 64))
(declare-fun temp812_19 () (_ BitVec 64))
(declare-fun temp812_20 () (_ BitVec 64))
(declare-fun temp812_21 () (_ BitVec 64))
(declare-fun temp812_22 () (_ BitVec 64))
(declare-fun temp812_23 () (_ BitVec 64))
(declare-fun temp812_24 () (_ BitVec 64))
(declare-fun temp812_25 () (_ BitVec 64))
(declare-fun temp812_26 () (_ BitVec 64))
(declare-fun temp812_27 () (_ BitVec 64))
(declare-fun temp812_28 () (_ BitVec 64))
(declare-fun temp812_29 () (_ BitVec 64))
(declare-fun temp812_30 () (_ BitVec 64))
(declare-fun temp812_31 () (_ BitVec 64))
(declare-fun temp812_32 () (_ BitVec 64))
(declare-fun temp812_33 () (_ BitVec 64))
(declare-fun temp812_34 () (_ BitVec 64))
(declare-fun temp812_35 () (_ BitVec 64))
(declare-fun temp812_36 () (_ BitVec 64))
(declare-fun temp812_37 () (_ BitVec 64))
(declare-fun temp812_38 () (_ BitVec 64))
(declare-fun temp812_39 () (_ BitVec 64))
(declare-fun temp812_40 () (_ BitVec 64))
(declare-fun temp812_41 () (_ BitVec 64))
(declare-fun temp812_42 () (_ BitVec 64))
(declare-fun temp812_43 () (_ BitVec 64))
(declare-fun temp812_44 () (_ BitVec 64))
(declare-fun temp812_45 () (_ BitVec 64))
(declare-fun temp812_46 () (_ BitVec 64))
(declare-fun temp812_47 () (_ BitVec 64))
(declare-fun temp812_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp812_49 () (_ BitVec 64))
(declare-fun temp812_50 () (_ BitVec 64))
(declare-fun temp812_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp812_52 () (_ BitVec 64))
(declare-fun temp812_53 () (_ BitVec 64))
(declare-fun temp812_54 () (_ BitVec 64))
(declare-fun temp812_55 () (_ BitVec 64))
(declare-fun temp812_56 () (_ BitVec 64))
(declare-fun temp812_57 () (_ BitVec 64))
(declare-fun temp812_58 () (_ BitVec 64))
(declare-fun temp812_59 () (_ BitVec 64))
(declare-fun temp812_60 () (_ BitVec 64))
(declare-fun temp812_61 () (_ BitVec 64))
(declare-fun temp812_62 () (_ BitVec 64))
(declare-fun temp812_63 () (_ BitVec 64))
(declare-fun temp812_64 () (_ BitVec 64))
(declare-fun temp812_65 () (_ BitVec 64))
(declare-fun temp812_66 () (_ BitVec 64))
(declare-fun temp812_67 () (_ BitVec 64))
(declare-fun temp812_68 () (_ BitVec 64))
(declare-fun temp812_69 () (_ BitVec 64))
(declare-fun temp812_70 () (_ BitVec 64))
(declare-fun temp812_71 () (_ BitVec 64))
(declare-fun temp812_72 () (_ BitVec 64))
(declare-fun temp812_73 () (_ BitVec 64))
(declare-fun temp812_74 () (_ BitVec 64))
(declare-fun temp812_75 () (_ BitVec 64))
(declare-fun temp812_76 () (_ BitVec 64))
(declare-fun temp812_77 () (_ BitVec 64))
(declare-fun temp812_78 () (_ BitVec 64))
(declare-fun temp812_79 () (_ BitVec 64))
(declare-fun temp812_80 () (_ BitVec 64))
(declare-fun temp812_81 () (_ BitVec 64))
(declare-fun temp812_82 () (_ BitVec 64))
(declare-fun temp812_83 () (_ BitVec 64))
(declare-fun temp812_84 () (_ BitVec 64))
(declare-fun temp812_85 () (_ BitVec 64))
(declare-fun temp812_86 () (_ BitVec 64))
(declare-fun temp812_87 () (_ BitVec 64))
(declare-fun temp812_88 () (_ BitVec 64))
(declare-fun temp812_89 () (_ BitVec 64))
(declare-fun temp812_90 () (_ BitVec 64))
(declare-fun temp812_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp812_92 () (_ BitVec 64))
(declare-fun temp812_93 () (_ BitVec 64))
(declare-fun temp812_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp812_95 () (_ BitVec 64))
(declare-fun temp812_96 () (_ BitVec 64))
(declare-fun temp812_97 () (_ BitVec 64))
(declare-fun temp812_98 () (_ BitVec 64))
(declare-fun temp812_99 () (_ BitVec 64))
(declare-fun temp812_100 () (_ BitVec 64))
(declare-fun temp812_101 () (_ BitVec 64))
(declare-fun temp812_102 () (_ BitVec 64))
(declare-fun temp812_103 () (_ BitVec 64))
(declare-fun temp812_104 () (_ BitVec 64))
(declare-fun temp812_105 () (_ BitVec 64))
(declare-fun temp812_106 () (_ BitVec 64))
(declare-fun temp812_107 () (_ BitVec 64))
(declare-fun temp812_108 () (_ BitVec 64))
(declare-fun temp812_109 () (_ BitVec 64))
(declare-fun temp812_110 () (_ BitVec 64))
(declare-fun temp812_111 () (_ BitVec 64))
(declare-fun temp812_112 () (_ BitVec 64))
(declare-fun temp812_113 () (_ BitVec 64))
(declare-fun temp812_114 () (_ BitVec 64))
(declare-fun temp812_115 () (_ BitVec 64))
(declare-fun temp812_116 () (_ BitVec 64))
(declare-fun temp812_117 () (_ BitVec 64))
(declare-fun temp812_118 () (_ BitVec 64))
(declare-fun temp812_119 () (_ BitVec 64))
(declare-fun temp812_120 () (_ BitVec 64))
(declare-fun temp812_121 () (_ BitVec 64))
(declare-fun temp812_122 () (_ BitVec 64))
(declare-fun temp812_123 () (_ BitVec 64))
(declare-fun temp812_124 () (_ BitVec 64))
(declare-fun temp812_125 () (_ BitVec 64))
(declare-fun temp812_126 () (_ BitVec 64))
(declare-fun temp812_127 () (_ BitVec 64))
(declare-fun temp812_128 () (_ BitVec 64))
(declare-fun temp812_129 () (_ BitVec 64))
(declare-fun temp812_130 () (_ BitVec 64))
(declare-fun temp812_131 () (_ BitVec 64))
(declare-fun temp812_132 () (_ BitVec 64))
(declare-fun temp812_133 () (_ BitVec 64))
(declare-fun temp812_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp812_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp812_136 () (_ BitVec 64))
(declare-fun temp812_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp812_138 () (_ BitVec 64))
(declare-fun temp812_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp812_140 () (_ BitVec 64))
(declare-fun temp812_141 () (_ BitVec 64))
(declare-fun temp812_142 () (_ BitVec 64))
(declare-fun temp812_143 () (_ BitVec 64))
(declare-fun temp812_144 () (_ BitVec 64))
(declare-fun temp812_145 () (_ BitVec 64))
(declare-fun temp812_146 () (_ BitVec 64))
(declare-fun temp812_147 () (_ BitVec 64))
(declare-fun temp812_148 () (_ BitVec 64))
(declare-fun temp812_149 () (_ BitVec 64))
(declare-fun temp812_150 () (_ BitVec 64))
(declare-fun temp812_151 () (_ BitVec 64))
(declare-fun temp812_152 () (_ BitVec 64))
(declare-fun temp812_153 () (_ BitVec 64))
(declare-fun temp812_154 () (_ BitVec 64))
(declare-fun temp812_155 () (_ BitVec 64))
(declare-fun temp812_157 () (_ BitVec 64))
(declare-fun temp812_158 () (_ BitVec 64))
(declare-fun temp812_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp812_159 () (_ BitVec 64))
(declare-fun temp812_160 () (_ BitVec 64))
(declare-fun temp812_162 () (_ BitVec 64))
(declare-fun temp812_163 () (_ BitVec 64))
(declare-fun temp812_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp812_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp812_165 () (_ BitVec 64))
(declare-fun temp812_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp812_167 () (_ BitVec 64))
(declare-fun temp812_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp812_169 () (_ BitVec 64))
(declare-fun temp812_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp812_171 () (_ BitVec 64))
(declare-fun temp812_172 () (_ BitVec 64))
(declare-fun temp812_173 () (_ BitVec 64))
(declare-fun temp812_174 () (_ BitVec 64))
(declare-fun temp812_175 () (_ BitVec 64))
(declare-fun temp812_176 () (_ BitVec 64))
(declare-fun temp812_177 () (_ BitVec 64))
(declare-fun temp812_178 () (_ BitVec 64))
(declare-fun temp812_179 () (_ BitVec 64))
(declare-fun temp812_180 () (_ BitVec 64))
(declare-fun temp812_181 () (_ BitVec 64))
(declare-fun temp812_182 () (_ BitVec 64))
(declare-fun temp812_183 () (_ BitVec 64))
(declare-fun temp812_184 () (_ BitVec 64))
(declare-fun temp812_185 () (_ BitVec 64))
(declare-fun temp812_186 () (_ BitVec 64))
(declare-fun temp812_187 () (_ BitVec 64))
(declare-fun temp812_188 () (_ BitVec 64))
(declare-fun temp812_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp812_190 () (_ BitVec 64))
(declare-fun temp812_192 () (_ BitVec 64))
(declare-fun temp812_193 () (_ BitVec 64))
(declare-fun temp812_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp812_194 () (_ BitVec 64))
(declare-fun temp812_195 () (_ BitVec 64))
(declare-fun temp812_197 () (_ BitVec 64))
(declare-fun temp812_198 () (_ BitVec 64))
(declare-fun temp812_196 () (_ BitVec 64))
(declare-fun temp812_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp812_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp812_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp812_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp812_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp812_204 () (_ BitVec 64))
(declare-fun temp812_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp812_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp812_207 () (_ BitVec 64))
(declare-fun temp812_208 () (_ BitVec 64))
(declare-fun temp812_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp812_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp812_211 () (_ BitVec 64))
(declare-fun temp812_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp812_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp812_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4796816 () (_ BitVec 64))
(declare-fun var211820 () (_ BitVec 64))
(declare-fun temp812_215 () (_ BitVec 64))
(declare-fun var211821 () (_ BitVec 64))
(declare-fun temp812_216 () (_ BitVec 64))
(declare-fun temp812_217 () (_ BitVec 64))
(declare-fun var6173460 () (_ BitVec 64))
(declare-fun var6173427 () (_ BitVec 64))
(declare-fun var6041991 () (_ BitVec 64))
(declare-fun var6041987 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp812_218 () (_ BitVec 64))
(assert (= temp812_1 #x0000000000000001))
(assert (= var77203 temp812_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp812_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp812_2)))
(assert (= temp812_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp812_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp812_4 #x0000000000000000))
(assert (= var210941 temp812_4))
(assert (= temp812_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp812_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp812_6 #x0000000000000000))
(assert (= var210986 temp812_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp812_7 #x0000000000000000))
(assert (= temp812_8 temp812_7))
(assert (= temp812_9 (select ARGNAME_padding_NAMEEND_VAL temp812_8)))
(assert (= temp812_10 #x0000000000000001))
(assert (= temp812_11 temp812_10))
(assert (= temp812_12 (select ARGNAME_padding_NAMEEND_VAL temp812_11)))
(assert (= temp812_13 #x0000000000000002))
(assert (= temp812_14 temp812_13))
(assert (= temp812_15 (select ARGNAME_padding_NAMEEND_VAL temp812_14)))
(assert (= temp812_16 #x0000000000000003))
(assert (= temp812_17 temp812_16))
(assert (= temp812_18 (select ARGNAME_padding_NAMEEND_VAL temp812_17)))
(assert (= temp812_19 #x0000000000000004))
(assert (= temp812_20 temp812_19))
(assert (= temp812_21 (select ARGNAME_padding_NAMEEND_VAL temp812_20)))
(assert (= temp812_22 #x0000000000000005))
(assert (= temp812_23 temp812_22))
(assert (= temp812_24 (select ARGNAME_padding_NAMEEND_VAL temp812_23)))
(assert (= temp812_25 #x0000000000000000))
(assert (= temp812_26 #x0000000000000000))
(assert (= temp812_27 temp812_26))
(assert (= temp812_28 (select ARGNAME_padding_NAMEEND_VAL temp812_27)))
(assert (= temp812_29 #x0000000000000000))
(assert (= temp812_30 #x0000000000000001))
(assert (= temp812_31 temp812_30))
(assert (= temp812_32 (select ARGNAME_padding_NAMEEND_VAL temp812_31)))
(assert (= temp812_33 #x0000000000000000))
(assert (= temp812_34 #x0000000000000002))
(assert (= temp812_35 temp812_34))
(assert (= temp812_36 (select ARGNAME_padding_NAMEEND_VAL temp812_35)))
(assert (= temp812_37 #x0000000000000000))
(assert (= temp812_38 #x0000000000000003))
(assert (= temp812_39 temp812_38))
(assert (= temp812_40 (select ARGNAME_padding_NAMEEND_VAL temp812_39)))
(assert (= temp812_41 #x0000000000000000))
(assert (= temp812_42 #x0000000000000004))
(assert (= temp812_43 temp812_42))
(assert (= temp812_44 (select ARGNAME_padding_NAMEEND_VAL temp812_43)))
(assert (= temp812_45 #x0000000000000000))
(assert (= temp812_46 #x0000000000000005))
(assert (= temp812_47 temp812_46))
(assert (= temp812_48 (select ARGNAME_padding_NAMEEND_VAL temp812_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp812_28 temp812_25)
             (bvslt temp812_32 temp812_29)
             (bvslt temp812_36 temp812_33)
             (bvslt temp812_40 temp812_37)
             (bvslt temp812_44 temp812_41)
             (bvslt temp812_48 temp812_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp812_49 #x0000000000000000))
(assert (= var1191714 temp812_49))
(assert (= temp812_50 #x0000000000000000))
(assert (= temp812_51 temp812_50))
(assert (= temp812_52 (select ARGNAME_output_padding_NAMEEND_VAL temp812_51)))
(assert (= temp812_53 #x0000000000000001))
(assert (= temp812_54 temp812_53))
(assert (= temp812_55 (select ARGNAME_output_padding_NAMEEND_VAL temp812_54)))
(assert (= temp812_56 #x0000000000000002))
(assert (= temp812_57 temp812_56))
(assert (= temp812_58 (select ARGNAME_output_padding_NAMEEND_VAL temp812_57)))
(assert (= temp812_59 #x0000000000000003))
(assert (= temp812_60 temp812_59))
(assert (= temp812_61 (select ARGNAME_output_padding_NAMEEND_VAL temp812_60)))
(assert (= temp812_62 #x0000000000000004))
(assert (= temp812_63 temp812_62))
(assert (= temp812_64 (select ARGNAME_output_padding_NAMEEND_VAL temp812_63)))
(assert (= temp812_65 #x0000000000000005))
(assert (= temp812_66 temp812_65))
(assert (= temp812_67 (select ARGNAME_output_padding_NAMEEND_VAL temp812_66)))
(assert (= temp812_68 #x0000000000000000))
(assert (= temp812_69 #x0000000000000000))
(assert (= temp812_70 temp812_69))
(assert (= temp812_71 (select ARGNAME_output_padding_NAMEEND_VAL temp812_70)))
(assert (= temp812_72 #x0000000000000000))
(assert (= temp812_73 #x0000000000000001))
(assert (= temp812_74 temp812_73))
(assert (= temp812_75 (select ARGNAME_output_padding_NAMEEND_VAL temp812_74)))
(assert (= temp812_76 #x0000000000000000))
(assert (= temp812_77 #x0000000000000002))
(assert (= temp812_78 temp812_77))
(assert (= temp812_79 (select ARGNAME_output_padding_NAMEEND_VAL temp812_78)))
(assert (= temp812_80 #x0000000000000000))
(assert (= temp812_81 #x0000000000000003))
(assert (= temp812_82 temp812_81))
(assert (= temp812_83 (select ARGNAME_output_padding_NAMEEND_VAL temp812_82)))
(assert (= temp812_84 #x0000000000000000))
(assert (= temp812_85 #x0000000000000004))
(assert (= temp812_86 temp812_85))
(assert (= temp812_87 (select ARGNAME_output_padding_NAMEEND_VAL temp812_86)))
(assert (= temp812_88 #x0000000000000000))
(assert (= temp812_89 #x0000000000000005))
(assert (= temp812_90 temp812_89))
(assert (= temp812_91 (select ARGNAME_output_padding_NAMEEND_VAL temp812_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp812_71 temp812_68)
             (bvslt temp812_75 temp812_72)
             (bvslt temp812_79 temp812_76)
             (bvslt temp812_83 temp812_80)
             (bvslt temp812_87 temp812_84)
             (bvslt temp812_91 temp812_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp812_92 #x0000000000000000))
(assert (= var1191725 temp812_92))
(assert (= temp812_93 #x0000000000000000))
(assert (= temp812_94 temp812_93))
(assert (= temp812_95 (select ARGNAME_stride_NAMEEND_VAL temp812_94)))
(assert (= temp812_96 #x0000000000000001))
(assert (= temp812_97 temp812_96))
(assert (= temp812_98 (select ARGNAME_stride_NAMEEND_VAL temp812_97)))
(assert (= temp812_99 #x0000000000000002))
(assert (= temp812_100 temp812_99))
(assert (= temp812_101 (select ARGNAME_stride_NAMEEND_VAL temp812_100)))
(assert (= temp812_102 #x0000000000000003))
(assert (= temp812_103 temp812_102))
(assert (= temp812_104 (select ARGNAME_stride_NAMEEND_VAL temp812_103)))
(assert (= temp812_105 #x0000000000000004))
(assert (= temp812_106 temp812_105))
(assert (= temp812_107 (select ARGNAME_stride_NAMEEND_VAL temp812_106)))
(assert (= temp812_108 #x0000000000000005))
(assert (= temp812_109 temp812_108))
(assert (= temp812_110 (select ARGNAME_stride_NAMEEND_VAL temp812_109)))
(assert (= temp812_111 #x0000000000000000))
(assert (= temp812_112 #x0000000000000000))
(assert (= temp812_113 temp812_112))
(assert (= temp812_114 (select ARGNAME_stride_NAMEEND_VAL temp812_113)))
(assert (= temp812_115 #x0000000000000000))
(assert (= temp812_116 #x0000000000000001))
(assert (= temp812_117 temp812_116))
(assert (= temp812_118 (select ARGNAME_stride_NAMEEND_VAL temp812_117)))
(assert (= temp812_119 #x0000000000000000))
(assert (= temp812_120 #x0000000000000002))
(assert (= temp812_121 temp812_120))
(assert (= temp812_122 (select ARGNAME_stride_NAMEEND_VAL temp812_121)))
(assert (= temp812_123 #x0000000000000000))
(assert (= temp812_124 #x0000000000000003))
(assert (= temp812_125 temp812_124))
(assert (= temp812_126 (select ARGNAME_stride_NAMEEND_VAL temp812_125)))
(assert (= temp812_127 #x0000000000000000))
(assert (= temp812_128 #x0000000000000004))
(assert (= temp812_129 temp812_128))
(assert (= temp812_130 (select ARGNAME_stride_NAMEEND_VAL temp812_129)))
(assert (= temp812_131 #x0000000000000000))
(assert (= temp812_132 #x0000000000000005))
(assert (= temp812_133 temp812_132))
(assert (= temp812_134 (select ARGNAME_stride_NAMEEND_VAL temp812_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp812_114 temp812_111)
             (bvsle temp812_118 temp812_115)
             (bvsle temp812_122 temp812_119)
             (bvsle temp812_126 temp812_123)
             (bvsle temp812_130 temp812_127)
             (bvsle temp812_134 temp812_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp812_135 #x0000000000000000))
(assert (= var1191735 temp812_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp812_136 #x0000000000000001))
(assert (= var1191747 temp812_136))
(assert (= temp812_137 #x0000000000000000))
(assert (= var1179826 temp812_137))
(assert (= temp812_138 #x0000000000000000))
(assert (= temp812_139 temp812_138))
(assert (= temp812_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp812_139)))
(assert (= temp812_141 #x0000000000000001))
(assert (= temp812_142 temp812_141))
(assert (= temp812_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp812_142)))
(assert (= temp812_144 #x0000000000000002))
(assert (= temp812_145 temp812_144))
(assert (= temp812_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp812_145)))
(assert (= temp812_147 #x0000000000000003))
(assert (= temp812_148 temp812_147))
(assert (= temp812_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp812_148)))
(assert (= temp812_150 #x0000000000000004))
(assert (= temp812_151 temp812_150))
(assert (= temp812_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp812_151)))
(assert (= temp812_153 #x0000000000000005))
(assert (= temp812_154 temp812_153))
(assert (= temp812_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp812_154)))
(assert (= temp812_157 var1179826))
(assert (= temp812_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp812_157)))
(assert (= temp812_156 temp812_158))
(assert (= var1191780
   (ite (bvslt temp812_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp812_159 #x0000000000000000))
(assert (= var1191780 temp812_159))
(assert (= temp812_160 #x0000000000000000))
(assert (= var1179826 temp812_160))
(assert (= temp812_162 var1179826))
(assert (= temp812_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp812_162)))
(assert (= temp812_161 temp812_163))
(assert (= var1191802 (bvsmod temp812_161 ARGNAME_groups_NAMEEND)))
(assert (= temp812_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp812_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp812_165 #x0000000000000001))
(assert (= var1191803 temp812_165))
(assert (= temp812_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp812_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp812_167 #x0000000000000001))
(assert (= var1191823 temp812_167))
(assert (= temp812_168 #x0000000000000001))
(assert (= var1180714 temp812_168))
(assert (= temp812_169 #x0000000000000000))
(assert (= temp812_170 temp812_169))
(assert (= temp812_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp812_170)))
(assert (= temp812_172 #x0000000000000001))
(assert (= temp812_173 temp812_172))
(assert (= temp812_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp812_173)))
(assert (= temp812_175 #x0000000000000002))
(assert (= temp812_176 temp812_175))
(assert (= temp812_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp812_176)))
(assert (= temp812_178 #x0000000000000003))
(assert (= temp812_179 temp812_178))
(assert (= temp812_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp812_179)))
(assert (= temp812_181 #x0000000000000004))
(assert (= temp812_182 temp812_181))
(assert (= temp812_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp812_182)))
(assert (= temp812_184 #x0000000000000005))
(assert (= temp812_185 temp812_184))
(assert (= temp812_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp812_185)))
(assert (= temp812_187 #x0000000000000000))
(assert (= temp812_188
   (ite (bvslt var1180714 temp812_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp812_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp812_188)))
(assert (= var1191831 temp812_189))
(assert (bvslt (ite (bvslt var1180714 temp812_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp812_190 #x0000000000000001))
(assert (= var1180714 temp812_190))
(assert (= temp812_192 var1180714))
(assert (= temp812_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp812_192)))
(assert (= temp812_191 temp812_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp812_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp812_194 #x0000000000000001))
(assert (= var1191836 temp812_194))
(assert (= temp812_195 #x0000000000000000))
(assert (= var1179826 temp812_195))
(assert (= temp812_197 var1179826))
(assert (= temp812_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp812_197)))
(assert (= temp812_196 temp812_198))
(assert (= temp812_199 #x0000000000000002))
(assert (= var1586025 temp812_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp812_200 #x0000000000000001))
(assert (= var1191993 temp812_200))
(assert (= temp812_201 #x0000000000000001))
(assert (= var2700303 temp812_201))
(assert (= temp812_202 #x0000000000000001))
(assert (= var2962447 temp812_202))
(assert (= temp812_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp812_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp812_204 #x0000000000000001))
(assert (= var211058 temp812_204))
(assert (= temp812_205 #x0000000000000001))
(assert (= var211188 temp812_205))
(assert (= var3879401 var211188))
(assert (= temp812_206 #x0000000000000000))
(assert (= var3866802 temp812_206))
(assert (= temp812_207 #x0000000000000000))
(assert (= temp812_208
   (ite (bvslt var3866802 temp812_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp812_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp812_208)))
(assert (= var3879420 temp812_209))
(assert (bvslt (ite (bvslt var3866802 temp812_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp812_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp812_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp812_211 #x0000000000000001))
(assert (= var3879421 temp812_211))
(assert (= temp812_212 #x0000000000000000))
(assert (= var4079423 temp812_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp812_213 #x0000000000000002))
(assert (= var4208259 temp812_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp812_214 #x0000000000000000))
(assert (= var4273820 temp812_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4796816 var211201))
(assert (= var211820 var210913))
(assert (= temp812_215 #x0000000000000000))
(assert (= var211821
   (ite (distinct var211820 temp812_215) #x0000000000000001 #x0000000000000000)))
(assert (= temp812_216 #x0000000000000001))
(assert (= var211058 temp812_216))
(assert (= temp812_217 #x0000000000000000))
(assert (= var6173460 temp812_217))
(assert (= var6173427 var6173460))
(assert (= var6041991 var6173427))
(assert (= var6041987 var6041991))
(assert (= var212669 var6041987))
(assert (= temp812_218 #x0000000000000000))
(assert (= var212669 temp812_218))
(model-add temp812_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp812_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp812_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp812_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




