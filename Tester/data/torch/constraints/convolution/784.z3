(declare-fun temp1045_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp1045_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1045_3 () (_ BitVec 64))
(declare-fun temp1045_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1045_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp1045_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1045_7 () (_ BitVec 64))
(declare-fun temp1045_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1045_9 () (_ BitVec 64))
(declare-fun temp1045_10 () (_ BitVec 64))
(declare-fun temp1045_11 () (_ BitVec 64))
(declare-fun temp1045_12 () (_ BitVec 64))
(declare-fun temp1045_13 () (_ BitVec 64))
(declare-fun temp1045_14 () (_ BitVec 64))
(declare-fun temp1045_15 () (_ BitVec 64))
(declare-fun temp1045_16 () (_ BitVec 64))
(declare-fun temp1045_17 () (_ BitVec 64))
(declare-fun temp1045_18 () (_ BitVec 64))
(declare-fun temp1045_19 () (_ BitVec 64))
(declare-fun temp1045_20 () (_ BitVec 64))
(declare-fun temp1045_21 () (_ BitVec 64))
(declare-fun temp1045_22 () (_ BitVec 64))
(declare-fun temp1045_23 () (_ BitVec 64))
(declare-fun temp1045_24 () (_ BitVec 64))
(declare-fun temp1045_25 () (_ BitVec 64))
(declare-fun temp1045_26 () (_ BitVec 64))
(declare-fun temp1045_27 () (_ BitVec 64))
(declare-fun temp1045_28 () (_ BitVec 64))
(declare-fun temp1045_29 () (_ BitVec 64))
(declare-fun temp1045_30 () (_ BitVec 64))
(declare-fun temp1045_31 () (_ BitVec 64))
(declare-fun temp1045_32 () (_ BitVec 64))
(declare-fun temp1045_33 () (_ BitVec 64))
(declare-fun temp1045_34 () (_ BitVec 64))
(declare-fun temp1045_35 () (_ BitVec 64))
(declare-fun temp1045_36 () (_ BitVec 64))
(declare-fun temp1045_37 () (_ BitVec 64))
(declare-fun temp1045_38 () (_ BitVec 64))
(declare-fun temp1045_39 () (_ BitVec 64))
(declare-fun temp1045_40 () (_ BitVec 64))
(declare-fun temp1045_41 () (_ BitVec 64))
(declare-fun temp1045_42 () (_ BitVec 64))
(declare-fun temp1045_43 () (_ BitVec 64))
(declare-fun temp1045_44 () (_ BitVec 64))
(declare-fun temp1045_45 () (_ BitVec 64))
(declare-fun temp1045_46 () (_ BitVec 64))
(declare-fun temp1045_47 () (_ BitVec 64))
(declare-fun temp1045_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp1045_49 () (_ BitVec 64))
(declare-fun temp1045_50 () (_ BitVec 64))
(declare-fun temp1045_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1045_52 () (_ BitVec 64))
(declare-fun temp1045_53 () (_ BitVec 64))
(declare-fun temp1045_54 () (_ BitVec 64))
(declare-fun temp1045_55 () (_ BitVec 64))
(declare-fun temp1045_56 () (_ BitVec 64))
(declare-fun temp1045_57 () (_ BitVec 64))
(declare-fun temp1045_58 () (_ BitVec 64))
(declare-fun temp1045_59 () (_ BitVec 64))
(declare-fun temp1045_60 () (_ BitVec 64))
(declare-fun temp1045_61 () (_ BitVec 64))
(declare-fun temp1045_62 () (_ BitVec 64))
(declare-fun temp1045_63 () (_ BitVec 64))
(declare-fun temp1045_64 () (_ BitVec 64))
(declare-fun temp1045_65 () (_ BitVec 64))
(declare-fun temp1045_66 () (_ BitVec 64))
(declare-fun temp1045_67 () (_ BitVec 64))
(declare-fun temp1045_68 () (_ BitVec 64))
(declare-fun temp1045_69 () (_ BitVec 64))
(declare-fun temp1045_70 () (_ BitVec 64))
(declare-fun temp1045_71 () (_ BitVec 64))
(declare-fun temp1045_72 () (_ BitVec 64))
(declare-fun temp1045_73 () (_ BitVec 64))
(declare-fun temp1045_74 () (_ BitVec 64))
(declare-fun temp1045_75 () (_ BitVec 64))
(declare-fun temp1045_76 () (_ BitVec 64))
(declare-fun temp1045_77 () (_ BitVec 64))
(declare-fun temp1045_78 () (_ BitVec 64))
(declare-fun temp1045_79 () (_ BitVec 64))
(declare-fun temp1045_80 () (_ BitVec 64))
(declare-fun temp1045_81 () (_ BitVec 64))
(declare-fun temp1045_82 () (_ BitVec 64))
(declare-fun temp1045_83 () (_ BitVec 64))
(declare-fun temp1045_84 () (_ BitVec 64))
(declare-fun temp1045_85 () (_ BitVec 64))
(declare-fun temp1045_86 () (_ BitVec 64))
(declare-fun temp1045_87 () (_ BitVec 64))
(declare-fun temp1045_88 () (_ BitVec 64))
(declare-fun temp1045_89 () (_ BitVec 64))
(declare-fun temp1045_90 () (_ BitVec 64))
(declare-fun temp1045_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp1045_92 () (_ BitVec 64))
(declare-fun temp1045_93 () (_ BitVec 64))
(declare-fun temp1045_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1045_95 () (_ BitVec 64))
(declare-fun temp1045_96 () (_ BitVec 64))
(declare-fun temp1045_97 () (_ BitVec 64))
(declare-fun temp1045_98 () (_ BitVec 64))
(declare-fun temp1045_99 () (_ BitVec 64))
(declare-fun temp1045_100 () (_ BitVec 64))
(declare-fun temp1045_101 () (_ BitVec 64))
(declare-fun temp1045_102 () (_ BitVec 64))
(declare-fun temp1045_103 () (_ BitVec 64))
(declare-fun temp1045_104 () (_ BitVec 64))
(declare-fun temp1045_105 () (_ BitVec 64))
(declare-fun temp1045_106 () (_ BitVec 64))
(declare-fun temp1045_107 () (_ BitVec 64))
(declare-fun temp1045_108 () (_ BitVec 64))
(declare-fun temp1045_109 () (_ BitVec 64))
(declare-fun temp1045_110 () (_ BitVec 64))
(declare-fun temp1045_111 () (_ BitVec 64))
(declare-fun temp1045_112 () (_ BitVec 64))
(declare-fun temp1045_113 () (_ BitVec 64))
(declare-fun temp1045_114 () (_ BitVec 64))
(declare-fun temp1045_115 () (_ BitVec 64))
(declare-fun temp1045_116 () (_ BitVec 64))
(declare-fun temp1045_117 () (_ BitVec 64))
(declare-fun temp1045_118 () (_ BitVec 64))
(declare-fun temp1045_119 () (_ BitVec 64))
(declare-fun temp1045_120 () (_ BitVec 64))
(declare-fun temp1045_121 () (_ BitVec 64))
(declare-fun temp1045_122 () (_ BitVec 64))
(declare-fun temp1045_123 () (_ BitVec 64))
(declare-fun temp1045_124 () (_ BitVec 64))
(declare-fun temp1045_125 () (_ BitVec 64))
(declare-fun temp1045_126 () (_ BitVec 64))
(declare-fun temp1045_127 () (_ BitVec 64))
(declare-fun temp1045_128 () (_ BitVec 64))
(declare-fun temp1045_129 () (_ BitVec 64))
(declare-fun temp1045_130 () (_ BitVec 64))
(declare-fun temp1045_131 () (_ BitVec 64))
(declare-fun temp1045_132 () (_ BitVec 64))
(declare-fun temp1045_133 () (_ BitVec 64))
(declare-fun temp1045_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp1045_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp1045_136 () (_ BitVec 64))
(declare-fun temp1045_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp1045_138 () (_ BitVec 64))
(declare-fun temp1045_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1045_140 () (_ BitVec 64))
(declare-fun temp1045_141 () (_ BitVec 64))
(declare-fun temp1045_142 () (_ BitVec 64))
(declare-fun temp1045_143 () (_ BitVec 64))
(declare-fun temp1045_144 () (_ BitVec 64))
(declare-fun temp1045_145 () (_ BitVec 64))
(declare-fun temp1045_146 () (_ BitVec 64))
(declare-fun temp1045_147 () (_ BitVec 64))
(declare-fun temp1045_148 () (_ BitVec 64))
(declare-fun temp1045_149 () (_ BitVec 64))
(declare-fun temp1045_150 () (_ BitVec 64))
(declare-fun temp1045_151 () (_ BitVec 64))
(declare-fun temp1045_152 () (_ BitVec 64))
(declare-fun temp1045_153 () (_ BitVec 64))
(declare-fun temp1045_154 () (_ BitVec 64))
(declare-fun temp1045_155 () (_ BitVec 64))
(declare-fun temp1045_157 () (_ BitVec 64))
(declare-fun temp1045_158 () (_ BitVec 64))
(declare-fun temp1045_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp1045_159 () (_ BitVec 64))
(declare-fun temp1045_160 () (_ BitVec 64))
(declare-fun temp1045_162 () (_ BitVec 64))
(declare-fun temp1045_163 () (_ BitVec 64))
(declare-fun temp1045_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp1045_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp1045_165 () (_ BitVec 64))
(declare-fun temp1045_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp1045_167 () (_ BitVec 64))
(declare-fun temp1045_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp1045_169 () (_ BitVec 64))
(declare-fun temp1045_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1045_171 () (_ BitVec 64))
(declare-fun temp1045_172 () (_ BitVec 64))
(declare-fun temp1045_173 () (_ BitVec 64))
(declare-fun temp1045_174 () (_ BitVec 64))
(declare-fun temp1045_175 () (_ BitVec 64))
(declare-fun temp1045_176 () (_ BitVec 64))
(declare-fun temp1045_177 () (_ BitVec 64))
(declare-fun temp1045_178 () (_ BitVec 64))
(declare-fun temp1045_179 () (_ BitVec 64))
(declare-fun temp1045_180 () (_ BitVec 64))
(declare-fun temp1045_181 () (_ BitVec 64))
(declare-fun temp1045_182 () (_ BitVec 64))
(declare-fun temp1045_183 () (_ BitVec 64))
(declare-fun temp1045_184 () (_ BitVec 64))
(declare-fun temp1045_185 () (_ BitVec 64))
(declare-fun temp1045_186 () (_ BitVec 64))
(declare-fun temp1045_187 () (_ BitVec 64))
(declare-fun temp1045_188 () (_ BitVec 64))
(declare-fun temp1045_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp1045_190 () (_ BitVec 64))
(declare-fun temp1045_192 () (_ BitVec 64))
(declare-fun temp1045_193 () (_ BitVec 64))
(declare-fun temp1045_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp1045_194 () (_ BitVec 64))
(declare-fun temp1045_195 () (_ BitVec 64))
(declare-fun temp1045_197 () (_ BitVec 64))
(declare-fun temp1045_198 () (_ BitVec 64))
(declare-fun temp1045_196 () (_ BitVec 64))
(declare-fun temp1045_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp1045_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp1045_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp1045_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp1045_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp1045_204 () (_ BitVec 64))
(declare-fun temp1045_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp1045_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp1045_207 () (_ BitVec 64))
(declare-fun temp1045_208 () (_ BitVec 64))
(declare-fun temp1045_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp1045_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp1045_211 () (_ BitVec 64))
(declare-fun temp1045_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp1045_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp1045_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp1045_215 () (_ BitVec 64))
(assert (= temp1045_1 #x0000000000000001))
(assert (= var77203 temp1045_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp1045_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp1045_2)))
(assert (= temp1045_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1045_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1045_4 #x0000000000000000))
(assert (= var210941 temp1045_4))
(assert (= temp1045_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp1045_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1045_6 #x0000000000000000))
(assert (= var210986 temp1045_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp1045_7 #x0000000000000000))
(assert (= temp1045_8 temp1045_7))
(assert (= temp1045_9 (select ARGNAME_padding_NAMEEND_VAL temp1045_8)))
(assert (= temp1045_10 #x0000000000000001))
(assert (= temp1045_11 temp1045_10))
(assert (= temp1045_12 (select ARGNAME_padding_NAMEEND_VAL temp1045_11)))
(assert (= temp1045_13 #x0000000000000002))
(assert (= temp1045_14 temp1045_13))
(assert (= temp1045_15 (select ARGNAME_padding_NAMEEND_VAL temp1045_14)))
(assert (= temp1045_16 #x0000000000000003))
(assert (= temp1045_17 temp1045_16))
(assert (= temp1045_18 (select ARGNAME_padding_NAMEEND_VAL temp1045_17)))
(assert (= temp1045_19 #x0000000000000004))
(assert (= temp1045_20 temp1045_19))
(assert (= temp1045_21 (select ARGNAME_padding_NAMEEND_VAL temp1045_20)))
(assert (= temp1045_22 #x0000000000000005))
(assert (= temp1045_23 temp1045_22))
(assert (= temp1045_24 (select ARGNAME_padding_NAMEEND_VAL temp1045_23)))
(assert (= temp1045_25 #x0000000000000000))
(assert (= temp1045_26 #x0000000000000000))
(assert (= temp1045_27 temp1045_26))
(assert (= temp1045_28 (select ARGNAME_padding_NAMEEND_VAL temp1045_27)))
(assert (= temp1045_29 #x0000000000000000))
(assert (= temp1045_30 #x0000000000000001))
(assert (= temp1045_31 temp1045_30))
(assert (= temp1045_32 (select ARGNAME_padding_NAMEEND_VAL temp1045_31)))
(assert (= temp1045_33 #x0000000000000000))
(assert (= temp1045_34 #x0000000000000002))
(assert (= temp1045_35 temp1045_34))
(assert (= temp1045_36 (select ARGNAME_padding_NAMEEND_VAL temp1045_35)))
(assert (= temp1045_37 #x0000000000000000))
(assert (= temp1045_38 #x0000000000000003))
(assert (= temp1045_39 temp1045_38))
(assert (= temp1045_40 (select ARGNAME_padding_NAMEEND_VAL temp1045_39)))
(assert (= temp1045_41 #x0000000000000000))
(assert (= temp1045_42 #x0000000000000004))
(assert (= temp1045_43 temp1045_42))
(assert (= temp1045_44 (select ARGNAME_padding_NAMEEND_VAL temp1045_43)))
(assert (= temp1045_45 #x0000000000000000))
(assert (= temp1045_46 #x0000000000000005))
(assert (= temp1045_47 temp1045_46))
(assert (= temp1045_48 (select ARGNAME_padding_NAMEEND_VAL temp1045_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp1045_28 temp1045_25)
             (bvslt temp1045_32 temp1045_29)
             (bvslt temp1045_36 temp1045_33)
             (bvslt temp1045_40 temp1045_37)
             (bvslt temp1045_44 temp1045_41)
             (bvslt temp1045_48 temp1045_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1045_49 #x0000000000000000))
(assert (= var1191714 temp1045_49))
(assert (= temp1045_50 #x0000000000000000))
(assert (= temp1045_51 temp1045_50))
(assert (= temp1045_52 (select ARGNAME_output_padding_NAMEEND_VAL temp1045_51)))
(assert (= temp1045_53 #x0000000000000001))
(assert (= temp1045_54 temp1045_53))
(assert (= temp1045_55 (select ARGNAME_output_padding_NAMEEND_VAL temp1045_54)))
(assert (= temp1045_56 #x0000000000000002))
(assert (= temp1045_57 temp1045_56))
(assert (= temp1045_58 (select ARGNAME_output_padding_NAMEEND_VAL temp1045_57)))
(assert (= temp1045_59 #x0000000000000003))
(assert (= temp1045_60 temp1045_59))
(assert (= temp1045_61 (select ARGNAME_output_padding_NAMEEND_VAL temp1045_60)))
(assert (= temp1045_62 #x0000000000000004))
(assert (= temp1045_63 temp1045_62))
(assert (= temp1045_64 (select ARGNAME_output_padding_NAMEEND_VAL temp1045_63)))
(assert (= temp1045_65 #x0000000000000005))
(assert (= temp1045_66 temp1045_65))
(assert (= temp1045_67 (select ARGNAME_output_padding_NAMEEND_VAL temp1045_66)))
(assert (= temp1045_68 #x0000000000000000))
(assert (= temp1045_69 #x0000000000000000))
(assert (= temp1045_70 temp1045_69))
(assert (= temp1045_71 (select ARGNAME_output_padding_NAMEEND_VAL temp1045_70)))
(assert (= temp1045_72 #x0000000000000000))
(assert (= temp1045_73 #x0000000000000001))
(assert (= temp1045_74 temp1045_73))
(assert (= temp1045_75 (select ARGNAME_output_padding_NAMEEND_VAL temp1045_74)))
(assert (= temp1045_76 #x0000000000000000))
(assert (= temp1045_77 #x0000000000000002))
(assert (= temp1045_78 temp1045_77))
(assert (= temp1045_79 (select ARGNAME_output_padding_NAMEEND_VAL temp1045_78)))
(assert (= temp1045_80 #x0000000000000000))
(assert (= temp1045_81 #x0000000000000003))
(assert (= temp1045_82 temp1045_81))
(assert (= temp1045_83 (select ARGNAME_output_padding_NAMEEND_VAL temp1045_82)))
(assert (= temp1045_84 #x0000000000000000))
(assert (= temp1045_85 #x0000000000000004))
(assert (= temp1045_86 temp1045_85))
(assert (= temp1045_87 (select ARGNAME_output_padding_NAMEEND_VAL temp1045_86)))
(assert (= temp1045_88 #x0000000000000000))
(assert (= temp1045_89 #x0000000000000005))
(assert (= temp1045_90 temp1045_89))
(assert (= temp1045_91 (select ARGNAME_output_padding_NAMEEND_VAL temp1045_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp1045_71 temp1045_68)
             (bvslt temp1045_75 temp1045_72)
             (bvslt temp1045_79 temp1045_76)
             (bvslt temp1045_83 temp1045_80)
             (bvslt temp1045_87 temp1045_84)
             (bvslt temp1045_91 temp1045_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1045_92 #x0000000000000000))
(assert (= var1191725 temp1045_92))
(assert (= temp1045_93 #x0000000000000000))
(assert (= temp1045_94 temp1045_93))
(assert (= temp1045_95 (select ARGNAME_stride_NAMEEND_VAL temp1045_94)))
(assert (= temp1045_96 #x0000000000000001))
(assert (= temp1045_97 temp1045_96))
(assert (= temp1045_98 (select ARGNAME_stride_NAMEEND_VAL temp1045_97)))
(assert (= temp1045_99 #x0000000000000002))
(assert (= temp1045_100 temp1045_99))
(assert (= temp1045_101 (select ARGNAME_stride_NAMEEND_VAL temp1045_100)))
(assert (= temp1045_102 #x0000000000000003))
(assert (= temp1045_103 temp1045_102))
(assert (= temp1045_104 (select ARGNAME_stride_NAMEEND_VAL temp1045_103)))
(assert (= temp1045_105 #x0000000000000004))
(assert (= temp1045_106 temp1045_105))
(assert (= temp1045_107 (select ARGNAME_stride_NAMEEND_VAL temp1045_106)))
(assert (= temp1045_108 #x0000000000000005))
(assert (= temp1045_109 temp1045_108))
(assert (= temp1045_110 (select ARGNAME_stride_NAMEEND_VAL temp1045_109)))
(assert (= temp1045_111 #x0000000000000000))
(assert (= temp1045_112 #x0000000000000000))
(assert (= temp1045_113 temp1045_112))
(assert (= temp1045_114 (select ARGNAME_stride_NAMEEND_VAL temp1045_113)))
(assert (= temp1045_115 #x0000000000000000))
(assert (= temp1045_116 #x0000000000000001))
(assert (= temp1045_117 temp1045_116))
(assert (= temp1045_118 (select ARGNAME_stride_NAMEEND_VAL temp1045_117)))
(assert (= temp1045_119 #x0000000000000000))
(assert (= temp1045_120 #x0000000000000002))
(assert (= temp1045_121 temp1045_120))
(assert (= temp1045_122 (select ARGNAME_stride_NAMEEND_VAL temp1045_121)))
(assert (= temp1045_123 #x0000000000000000))
(assert (= temp1045_124 #x0000000000000003))
(assert (= temp1045_125 temp1045_124))
(assert (= temp1045_126 (select ARGNAME_stride_NAMEEND_VAL temp1045_125)))
(assert (= temp1045_127 #x0000000000000000))
(assert (= temp1045_128 #x0000000000000004))
(assert (= temp1045_129 temp1045_128))
(assert (= temp1045_130 (select ARGNAME_stride_NAMEEND_VAL temp1045_129)))
(assert (= temp1045_131 #x0000000000000000))
(assert (= temp1045_132 #x0000000000000005))
(assert (= temp1045_133 temp1045_132))
(assert (= temp1045_134 (select ARGNAME_stride_NAMEEND_VAL temp1045_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp1045_114 temp1045_111)
             (bvsle temp1045_118 temp1045_115)
             (bvsle temp1045_122 temp1045_119)
             (bvsle temp1045_126 temp1045_123)
             (bvsle temp1045_130 temp1045_127)
             (bvsle temp1045_134 temp1045_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1045_135 #x0000000000000000))
(assert (= var1191735 temp1045_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1045_136 #x0000000000000001))
(assert (= var1191747 temp1045_136))
(assert (= temp1045_137 #x0000000000000000))
(assert (= var1179826 temp1045_137))
(assert (= temp1045_138 #x0000000000000000))
(assert (= temp1045_139 temp1045_138))
(assert (= temp1045_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1045_139)))
(assert (= temp1045_141 #x0000000000000001))
(assert (= temp1045_142 temp1045_141))
(assert (= temp1045_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1045_142)))
(assert (= temp1045_144 #x0000000000000002))
(assert (= temp1045_145 temp1045_144))
(assert (= temp1045_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1045_145)))
(assert (= temp1045_147 #x0000000000000003))
(assert (= temp1045_148 temp1045_147))
(assert (= temp1045_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1045_148)))
(assert (= temp1045_150 #x0000000000000004))
(assert (= temp1045_151 temp1045_150))
(assert (= temp1045_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1045_151)))
(assert (= temp1045_153 #x0000000000000005))
(assert (= temp1045_154 temp1045_153))
(assert (= temp1045_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1045_154)))
(assert (= temp1045_157 var1179826))
(assert (= temp1045_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1045_157)))
(assert (= temp1045_156 temp1045_158))
(assert (= var1191780
   (ite (bvslt temp1045_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1045_159 #x0000000000000000))
(assert (= var1191780 temp1045_159))
(assert (= temp1045_160 #x0000000000000000))
(assert (= var1179826 temp1045_160))
(assert (= temp1045_162 var1179826))
(assert (= temp1045_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1045_162)))
(assert (= temp1045_161 temp1045_163))
(assert (= var1191802 (bvsmod temp1045_161 ARGNAME_groups_NAMEEND)))
(assert (= temp1045_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp1045_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp1045_165 #x0000000000000001))
(assert (= var1191803 temp1045_165))
(assert (= temp1045_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp1045_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1045_167 #x0000000000000001))
(assert (= var1191823 temp1045_167))
(assert (= temp1045_168 #x0000000000000001))
(assert (= var1180714 temp1045_168))
(assert (= temp1045_169 #x0000000000000000))
(assert (= temp1045_170 temp1045_169))
(assert (= temp1045_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp1045_170)))
(assert (= temp1045_172 #x0000000000000001))
(assert (= temp1045_173 temp1045_172))
(assert (= temp1045_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp1045_173)))
(assert (= temp1045_175 #x0000000000000002))
(assert (= temp1045_176 temp1045_175))
(assert (= temp1045_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp1045_176)))
(assert (= temp1045_178 #x0000000000000003))
(assert (= temp1045_179 temp1045_178))
(assert (= temp1045_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp1045_179)))
(assert (= temp1045_181 #x0000000000000004))
(assert (= temp1045_182 temp1045_181))
(assert (= temp1045_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp1045_182)))
(assert (= temp1045_184 #x0000000000000005))
(assert (= temp1045_185 temp1045_184))
(assert (= temp1045_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp1045_185)))
(assert (= temp1045_187 #x0000000000000000))
(assert (= temp1045_188
   (ite (bvslt var1180714 temp1045_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp1045_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp1045_188)))
(assert (= var1191831 temp1045_189))
(assert (bvslt (ite (bvslt var1180714 temp1045_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1045_190 #x0000000000000001))
(assert (= var1180714 temp1045_190))
(assert (= temp1045_192 var1180714))
(assert (= temp1045_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1045_192)))
(assert (= temp1045_191 temp1045_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp1045_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp1045_194 #x0000000000000001))
(assert (= var1191836 temp1045_194))
(assert (= temp1045_195 #x0000000000000000))
(assert (= var1179826 temp1045_195))
(assert (= temp1045_197 var1179826))
(assert (= temp1045_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1045_197)))
(assert (= temp1045_196 temp1045_198))
(assert (= temp1045_199 #x0000000000000002))
(assert (= var1586025 temp1045_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp1045_200 #x0000000000000001))
(assert (= var1191993 temp1045_200))
(assert (= temp1045_201 #x0000000000000001))
(assert (= var2700303 temp1045_201))
(assert (= temp1045_202 #x0000000000000001))
(assert (= var2962447 temp1045_202))
(assert (= temp1045_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1045_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1045_204 #x0000000000000001))
(assert (= var211058 temp1045_204))
(assert (= temp1045_205 #x0000000000000001))
(assert (= var211188 temp1045_205))
(assert (= var3879401 var211188))
(assert (= temp1045_206 #x0000000000000000))
(assert (= var3866802 temp1045_206))
(assert (= temp1045_207 #x0000000000000000))
(assert (= temp1045_208
   (ite (bvslt var3866802 temp1045_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp1045_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp1045_208)))
(assert (= var3879420 temp1045_209))
(assert (bvslt (ite (bvslt var3866802 temp1045_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1045_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp1045_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp1045_211 #x0000000000000001))
(assert (= var3879421 temp1045_211))
(assert (= temp1045_212 #x0000000000000000))
(assert (= var4079423 temp1045_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp1045_213 #x0000000000000002))
(assert (= var4208259 temp1045_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1045_214 #x0000000000000000))
(assert (= var4273820 temp1045_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp1045_215 #x0000000000000001))
(assert (= var211058 temp1045_215))
(model-add temp1045_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp1045_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1045_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp1045_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




