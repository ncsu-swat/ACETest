(declare-fun temp10642_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10642_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10642_3 () (_ BitVec 64))
(declare-fun temp10642_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10642_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10642_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10642_7 () (_ BitVec 64))
(declare-fun temp10642_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10642_9 () (_ BitVec 64))
(declare-fun temp10642_10 () (_ BitVec 64))
(declare-fun temp10642_11 () (_ BitVec 64))
(declare-fun temp10642_12 () (_ BitVec 64))
(declare-fun temp10642_13 () (_ BitVec 64))
(declare-fun temp10642_14 () (_ BitVec 64))
(declare-fun temp10642_15 () (_ BitVec 64))
(declare-fun temp10642_16 () (_ BitVec 64))
(declare-fun temp10642_17 () (_ BitVec 64))
(declare-fun temp10642_18 () (_ BitVec 64))
(declare-fun temp10642_19 () (_ BitVec 64))
(declare-fun temp10642_20 () (_ BitVec 64))
(declare-fun temp10642_21 () (_ BitVec 64))
(declare-fun temp10642_22 () (_ BitVec 64))
(declare-fun temp10642_23 () (_ BitVec 64))
(declare-fun temp10642_24 () (_ BitVec 64))
(declare-fun temp10642_25 () (_ BitVec 64))
(declare-fun temp10642_26 () (_ BitVec 64))
(declare-fun temp10642_27 () (_ BitVec 64))
(declare-fun temp10642_28 () (_ BitVec 64))
(declare-fun temp10642_29 () (_ BitVec 64))
(declare-fun temp10642_30 () (_ BitVec 64))
(declare-fun temp10642_31 () (_ BitVec 64))
(declare-fun temp10642_32 () (_ BitVec 64))
(declare-fun temp10642_33 () (_ BitVec 64))
(declare-fun temp10642_34 () (_ BitVec 64))
(declare-fun temp10642_35 () (_ BitVec 64))
(declare-fun temp10642_36 () (_ BitVec 64))
(declare-fun temp10642_37 () (_ BitVec 64))
(declare-fun temp10642_38 () (_ BitVec 64))
(declare-fun temp10642_39 () (_ BitVec 64))
(declare-fun temp10642_40 () (_ BitVec 64))
(declare-fun temp10642_41 () (_ BitVec 64))
(declare-fun temp10642_42 () (_ BitVec 64))
(declare-fun temp10642_43 () (_ BitVec 64))
(declare-fun temp10642_44 () (_ BitVec 64))
(declare-fun temp10642_45 () (_ BitVec 64))
(declare-fun temp10642_46 () (_ BitVec 64))
(declare-fun temp10642_47 () (_ BitVec 64))
(declare-fun temp10642_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10642_49 () (_ BitVec 64))
(declare-fun temp10642_50 () (_ BitVec 64))
(declare-fun temp10642_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10642_52 () (_ BitVec 64))
(declare-fun temp10642_53 () (_ BitVec 64))
(declare-fun temp10642_54 () (_ BitVec 64))
(declare-fun temp10642_55 () (_ BitVec 64))
(declare-fun temp10642_56 () (_ BitVec 64))
(declare-fun temp10642_57 () (_ BitVec 64))
(declare-fun temp10642_58 () (_ BitVec 64))
(declare-fun temp10642_59 () (_ BitVec 64))
(declare-fun temp10642_60 () (_ BitVec 64))
(declare-fun temp10642_61 () (_ BitVec 64))
(declare-fun temp10642_62 () (_ BitVec 64))
(declare-fun temp10642_63 () (_ BitVec 64))
(declare-fun temp10642_64 () (_ BitVec 64))
(declare-fun temp10642_65 () (_ BitVec 64))
(declare-fun temp10642_66 () (_ BitVec 64))
(declare-fun temp10642_67 () (_ BitVec 64))
(declare-fun temp10642_68 () (_ BitVec 64))
(declare-fun temp10642_69 () (_ BitVec 64))
(declare-fun temp10642_70 () (_ BitVec 64))
(declare-fun temp10642_71 () (_ BitVec 64))
(declare-fun temp10642_72 () (_ BitVec 64))
(declare-fun temp10642_73 () (_ BitVec 64))
(declare-fun temp10642_74 () (_ BitVec 64))
(declare-fun temp10642_75 () (_ BitVec 64))
(declare-fun temp10642_76 () (_ BitVec 64))
(declare-fun temp10642_77 () (_ BitVec 64))
(declare-fun temp10642_78 () (_ BitVec 64))
(declare-fun temp10642_79 () (_ BitVec 64))
(declare-fun temp10642_80 () (_ BitVec 64))
(declare-fun temp10642_81 () (_ BitVec 64))
(declare-fun temp10642_82 () (_ BitVec 64))
(declare-fun temp10642_83 () (_ BitVec 64))
(declare-fun temp10642_84 () (_ BitVec 64))
(declare-fun temp10642_85 () (_ BitVec 64))
(declare-fun temp10642_86 () (_ BitVec 64))
(declare-fun temp10642_87 () (_ BitVec 64))
(declare-fun temp10642_88 () (_ BitVec 64))
(declare-fun temp10642_89 () (_ BitVec 64))
(declare-fun temp10642_90 () (_ BitVec 64))
(declare-fun temp10642_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10642_92 () (_ BitVec 64))
(declare-fun temp10642_93 () (_ BitVec 64))
(declare-fun temp10642_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10642_95 () (_ BitVec 64))
(declare-fun temp10642_96 () (_ BitVec 64))
(declare-fun temp10642_97 () (_ BitVec 64))
(declare-fun temp10642_98 () (_ BitVec 64))
(declare-fun temp10642_99 () (_ BitVec 64))
(declare-fun temp10642_100 () (_ BitVec 64))
(declare-fun temp10642_101 () (_ BitVec 64))
(declare-fun temp10642_102 () (_ BitVec 64))
(declare-fun temp10642_103 () (_ BitVec 64))
(declare-fun temp10642_104 () (_ BitVec 64))
(declare-fun temp10642_105 () (_ BitVec 64))
(declare-fun temp10642_106 () (_ BitVec 64))
(declare-fun temp10642_107 () (_ BitVec 64))
(declare-fun temp10642_108 () (_ BitVec 64))
(declare-fun temp10642_109 () (_ BitVec 64))
(declare-fun temp10642_110 () (_ BitVec 64))
(declare-fun temp10642_111 () (_ BitVec 64))
(declare-fun temp10642_112 () (_ BitVec 64))
(declare-fun temp10642_113 () (_ BitVec 64))
(declare-fun temp10642_114 () (_ BitVec 64))
(declare-fun temp10642_115 () (_ BitVec 64))
(declare-fun temp10642_116 () (_ BitVec 64))
(declare-fun temp10642_117 () (_ BitVec 64))
(declare-fun temp10642_118 () (_ BitVec 64))
(declare-fun temp10642_119 () (_ BitVec 64))
(declare-fun temp10642_120 () (_ BitVec 64))
(declare-fun temp10642_121 () (_ BitVec 64))
(declare-fun temp10642_122 () (_ BitVec 64))
(declare-fun temp10642_123 () (_ BitVec 64))
(declare-fun temp10642_124 () (_ BitVec 64))
(declare-fun temp10642_125 () (_ BitVec 64))
(declare-fun temp10642_126 () (_ BitVec 64))
(declare-fun temp10642_127 () (_ BitVec 64))
(declare-fun temp10642_128 () (_ BitVec 64))
(declare-fun temp10642_129 () (_ BitVec 64))
(declare-fun temp10642_130 () (_ BitVec 64))
(declare-fun temp10642_131 () (_ BitVec 64))
(declare-fun temp10642_132 () (_ BitVec 64))
(declare-fun temp10642_133 () (_ BitVec 64))
(declare-fun temp10642_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10642_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10642_136 () (_ BitVec 64))
(declare-fun temp10642_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10642_138 () (_ BitVec 64))
(declare-fun temp10642_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10642_140 () (_ BitVec 64))
(declare-fun temp10642_141 () (_ BitVec 64))
(declare-fun temp10642_142 () (_ BitVec 64))
(declare-fun temp10642_143 () (_ BitVec 64))
(declare-fun temp10642_144 () (_ BitVec 64))
(declare-fun temp10642_145 () (_ BitVec 64))
(declare-fun temp10642_146 () (_ BitVec 64))
(declare-fun temp10642_147 () (_ BitVec 64))
(declare-fun temp10642_148 () (_ BitVec 64))
(declare-fun temp10642_149 () (_ BitVec 64))
(declare-fun temp10642_150 () (_ BitVec 64))
(declare-fun temp10642_151 () (_ BitVec 64))
(declare-fun temp10642_152 () (_ BitVec 64))
(declare-fun temp10642_153 () (_ BitVec 64))
(declare-fun temp10642_154 () (_ BitVec 64))
(declare-fun temp10642_155 () (_ BitVec 64))
(declare-fun temp10642_157 () (_ BitVec 64))
(declare-fun temp10642_158 () (_ BitVec 64))
(declare-fun temp10642_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10642_159 () (_ BitVec 64))
(declare-fun temp10642_160 () (_ BitVec 64))
(declare-fun temp10642_162 () (_ BitVec 64))
(declare-fun temp10642_163 () (_ BitVec 64))
(declare-fun temp10642_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10642_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10642_165 () (_ BitVec 64))
(declare-fun temp10642_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10642_167 () (_ BitVec 64))
(declare-fun temp10642_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10642_169 () (_ BitVec 64))
(declare-fun temp10642_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10642_171 () (_ BitVec 64))
(declare-fun temp10642_172 () (_ BitVec 64))
(declare-fun temp10642_173 () (_ BitVec 64))
(declare-fun temp10642_174 () (_ BitVec 64))
(declare-fun temp10642_175 () (_ BitVec 64))
(declare-fun temp10642_176 () (_ BitVec 64))
(declare-fun temp10642_177 () (_ BitVec 64))
(declare-fun temp10642_178 () (_ BitVec 64))
(declare-fun temp10642_179 () (_ BitVec 64))
(declare-fun temp10642_180 () (_ BitVec 64))
(declare-fun temp10642_181 () (_ BitVec 64))
(declare-fun temp10642_182 () (_ BitVec 64))
(declare-fun temp10642_183 () (_ BitVec 64))
(declare-fun temp10642_184 () (_ BitVec 64))
(declare-fun temp10642_185 () (_ BitVec 64))
(declare-fun temp10642_186 () (_ BitVec 64))
(declare-fun temp10642_187 () (_ BitVec 64))
(declare-fun temp10642_188 () (_ BitVec 64))
(declare-fun temp10642_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10642_190 () (_ BitVec 64))
(declare-fun temp10642_192 () (_ BitVec 64))
(declare-fun temp10642_193 () (_ BitVec 64))
(declare-fun temp10642_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10642_194 () (_ BitVec 64))
(declare-fun temp10642_195 () (_ BitVec 64))
(declare-fun temp10642_197 () (_ BitVec 64))
(declare-fun temp10642_198 () (_ BitVec 64))
(declare-fun temp10642_196 () (_ BitVec 64))
(declare-fun temp10642_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10642_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10642_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10642_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10642_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10642_204 () (_ BitVec 64))
(declare-fun temp10642_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10642_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10642_207 () (_ BitVec 64))
(declare-fun temp10642_208 () (_ BitVec 64))
(declare-fun temp10642_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10642_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10642_211 () (_ BitVec 64))
(declare-fun temp10642_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10642_213 () (_ BitVec 64))
(declare-fun temp10642_214 () (_ BitVec 64))
(declare-fun temp10642_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10642_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10642_217 () (_ BitVec 64))
(declare-fun temp10642_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10642_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10642_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp10642_222 () (_ BitVec 64))
(declare-fun temp10642_221 () (_ BitVec 64))
(declare-fun temp10642_223 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp10642_224 () (_ BitVec 64))
(declare-fun temp10642_225 () (_ BitVec 64))
(declare-fun temp10642_226 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp10642_227 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp10642_228 () (_ BitVec 64))
(declare-fun temp10642_230 () (_ BitVec 64))
(declare-fun temp10642_229 () (_ BitVec 64))
(declare-fun temp10642_231 () (_ BitVec 64))
(assert (= temp10642_1 #x0000000000000001))
(assert (= var77203 temp10642_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10642_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10642_2)))
(assert (= temp10642_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10642_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10642_4 #x0000000000000000))
(assert (= var210941 temp10642_4))
(assert (= temp10642_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10642_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10642_6 #x0000000000000000))
(assert (= var210986 temp10642_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10642_7 #x0000000000000000))
(assert (= temp10642_8 temp10642_7))
(assert (= temp10642_9 (select ARGNAME_padding_NAMEEND_VAL temp10642_8)))
(assert (= temp10642_10 #x0000000000000001))
(assert (= temp10642_11 temp10642_10))
(assert (= temp10642_12 (select ARGNAME_padding_NAMEEND_VAL temp10642_11)))
(assert (= temp10642_13 #x0000000000000002))
(assert (= temp10642_14 temp10642_13))
(assert (= temp10642_15 (select ARGNAME_padding_NAMEEND_VAL temp10642_14)))
(assert (= temp10642_16 #x0000000000000003))
(assert (= temp10642_17 temp10642_16))
(assert (= temp10642_18 (select ARGNAME_padding_NAMEEND_VAL temp10642_17)))
(assert (= temp10642_19 #x0000000000000004))
(assert (= temp10642_20 temp10642_19))
(assert (= temp10642_21 (select ARGNAME_padding_NAMEEND_VAL temp10642_20)))
(assert (= temp10642_22 #x0000000000000005))
(assert (= temp10642_23 temp10642_22))
(assert (= temp10642_24 (select ARGNAME_padding_NAMEEND_VAL temp10642_23)))
(assert (= temp10642_25 #x0000000000000000))
(assert (= temp10642_26 #x0000000000000000))
(assert (= temp10642_27 temp10642_26))
(assert (= temp10642_28 (select ARGNAME_padding_NAMEEND_VAL temp10642_27)))
(assert (= temp10642_29 #x0000000000000000))
(assert (= temp10642_30 #x0000000000000001))
(assert (= temp10642_31 temp10642_30))
(assert (= temp10642_32 (select ARGNAME_padding_NAMEEND_VAL temp10642_31)))
(assert (= temp10642_33 #x0000000000000000))
(assert (= temp10642_34 #x0000000000000002))
(assert (= temp10642_35 temp10642_34))
(assert (= temp10642_36 (select ARGNAME_padding_NAMEEND_VAL temp10642_35)))
(assert (= temp10642_37 #x0000000000000000))
(assert (= temp10642_38 #x0000000000000003))
(assert (= temp10642_39 temp10642_38))
(assert (= temp10642_40 (select ARGNAME_padding_NAMEEND_VAL temp10642_39)))
(assert (= temp10642_41 #x0000000000000000))
(assert (= temp10642_42 #x0000000000000004))
(assert (= temp10642_43 temp10642_42))
(assert (= temp10642_44 (select ARGNAME_padding_NAMEEND_VAL temp10642_43)))
(assert (= temp10642_45 #x0000000000000000))
(assert (= temp10642_46 #x0000000000000005))
(assert (= temp10642_47 temp10642_46))
(assert (= temp10642_48 (select ARGNAME_padding_NAMEEND_VAL temp10642_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10642_28 temp10642_25)
             (bvslt temp10642_32 temp10642_29)
             (bvslt temp10642_36 temp10642_33)
             (bvslt temp10642_40 temp10642_37)
             (bvslt temp10642_44 temp10642_41)
             (bvslt temp10642_48 temp10642_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10642_49 #x0000000000000000))
(assert (= var1191714 temp10642_49))
(assert (= temp10642_50 #x0000000000000000))
(assert (= temp10642_51 temp10642_50))
(assert (= temp10642_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10642_51)))
(assert (= temp10642_53 #x0000000000000001))
(assert (= temp10642_54 temp10642_53))
(assert (= temp10642_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10642_54)))
(assert (= temp10642_56 #x0000000000000002))
(assert (= temp10642_57 temp10642_56))
(assert (= temp10642_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10642_57)))
(assert (= temp10642_59 #x0000000000000003))
(assert (= temp10642_60 temp10642_59))
(assert (= temp10642_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10642_60)))
(assert (= temp10642_62 #x0000000000000004))
(assert (= temp10642_63 temp10642_62))
(assert (= temp10642_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10642_63)))
(assert (= temp10642_65 #x0000000000000005))
(assert (= temp10642_66 temp10642_65))
(assert (= temp10642_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10642_66)))
(assert (= temp10642_68 #x0000000000000000))
(assert (= temp10642_69 #x0000000000000000))
(assert (= temp10642_70 temp10642_69))
(assert (= temp10642_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10642_70)))
(assert (= temp10642_72 #x0000000000000000))
(assert (= temp10642_73 #x0000000000000001))
(assert (= temp10642_74 temp10642_73))
(assert (= temp10642_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10642_74)))
(assert (= temp10642_76 #x0000000000000000))
(assert (= temp10642_77 #x0000000000000002))
(assert (= temp10642_78 temp10642_77))
(assert (= temp10642_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10642_78)))
(assert (= temp10642_80 #x0000000000000000))
(assert (= temp10642_81 #x0000000000000003))
(assert (= temp10642_82 temp10642_81))
(assert (= temp10642_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10642_82)))
(assert (= temp10642_84 #x0000000000000000))
(assert (= temp10642_85 #x0000000000000004))
(assert (= temp10642_86 temp10642_85))
(assert (= temp10642_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10642_86)))
(assert (= temp10642_88 #x0000000000000000))
(assert (= temp10642_89 #x0000000000000005))
(assert (= temp10642_90 temp10642_89))
(assert (= temp10642_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10642_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10642_71 temp10642_68)
             (bvslt temp10642_75 temp10642_72)
             (bvslt temp10642_79 temp10642_76)
             (bvslt temp10642_83 temp10642_80)
             (bvslt temp10642_87 temp10642_84)
             (bvslt temp10642_91 temp10642_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10642_92 #x0000000000000000))
(assert (= var1191725 temp10642_92))
(assert (= temp10642_93 #x0000000000000000))
(assert (= temp10642_94 temp10642_93))
(assert (= temp10642_95 (select ARGNAME_stride_NAMEEND_VAL temp10642_94)))
(assert (= temp10642_96 #x0000000000000001))
(assert (= temp10642_97 temp10642_96))
(assert (= temp10642_98 (select ARGNAME_stride_NAMEEND_VAL temp10642_97)))
(assert (= temp10642_99 #x0000000000000002))
(assert (= temp10642_100 temp10642_99))
(assert (= temp10642_101 (select ARGNAME_stride_NAMEEND_VAL temp10642_100)))
(assert (= temp10642_102 #x0000000000000003))
(assert (= temp10642_103 temp10642_102))
(assert (= temp10642_104 (select ARGNAME_stride_NAMEEND_VAL temp10642_103)))
(assert (= temp10642_105 #x0000000000000004))
(assert (= temp10642_106 temp10642_105))
(assert (= temp10642_107 (select ARGNAME_stride_NAMEEND_VAL temp10642_106)))
(assert (= temp10642_108 #x0000000000000005))
(assert (= temp10642_109 temp10642_108))
(assert (= temp10642_110 (select ARGNAME_stride_NAMEEND_VAL temp10642_109)))
(assert (= temp10642_111 #x0000000000000000))
(assert (= temp10642_112 #x0000000000000000))
(assert (= temp10642_113 temp10642_112))
(assert (= temp10642_114 (select ARGNAME_stride_NAMEEND_VAL temp10642_113)))
(assert (= temp10642_115 #x0000000000000000))
(assert (= temp10642_116 #x0000000000000001))
(assert (= temp10642_117 temp10642_116))
(assert (= temp10642_118 (select ARGNAME_stride_NAMEEND_VAL temp10642_117)))
(assert (= temp10642_119 #x0000000000000000))
(assert (= temp10642_120 #x0000000000000002))
(assert (= temp10642_121 temp10642_120))
(assert (= temp10642_122 (select ARGNAME_stride_NAMEEND_VAL temp10642_121)))
(assert (= temp10642_123 #x0000000000000000))
(assert (= temp10642_124 #x0000000000000003))
(assert (= temp10642_125 temp10642_124))
(assert (= temp10642_126 (select ARGNAME_stride_NAMEEND_VAL temp10642_125)))
(assert (= temp10642_127 #x0000000000000000))
(assert (= temp10642_128 #x0000000000000004))
(assert (= temp10642_129 temp10642_128))
(assert (= temp10642_130 (select ARGNAME_stride_NAMEEND_VAL temp10642_129)))
(assert (= temp10642_131 #x0000000000000000))
(assert (= temp10642_132 #x0000000000000005))
(assert (= temp10642_133 temp10642_132))
(assert (= temp10642_134 (select ARGNAME_stride_NAMEEND_VAL temp10642_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10642_114 temp10642_111)
             (bvsle temp10642_118 temp10642_115)
             (bvsle temp10642_122 temp10642_119)
             (bvsle temp10642_126 temp10642_123)
             (bvsle temp10642_130 temp10642_127)
             (bvsle temp10642_134 temp10642_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10642_135 #x0000000000000000))
(assert (= var1191735 temp10642_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10642_136 #x0000000000000001))
(assert (= var1191747 temp10642_136))
(assert (= temp10642_137 #x0000000000000000))
(assert (= var1179826 temp10642_137))
(assert (= temp10642_138 #x0000000000000000))
(assert (= temp10642_139 temp10642_138))
(assert (= temp10642_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10642_139)))
(assert (= temp10642_141 #x0000000000000001))
(assert (= temp10642_142 temp10642_141))
(assert (= temp10642_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10642_142)))
(assert (= temp10642_144 #x0000000000000002))
(assert (= temp10642_145 temp10642_144))
(assert (= temp10642_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10642_145)))
(assert (= temp10642_147 #x0000000000000003))
(assert (= temp10642_148 temp10642_147))
(assert (= temp10642_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10642_148)))
(assert (= temp10642_150 #x0000000000000004))
(assert (= temp10642_151 temp10642_150))
(assert (= temp10642_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10642_151)))
(assert (= temp10642_153 #x0000000000000005))
(assert (= temp10642_154 temp10642_153))
(assert (= temp10642_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10642_154)))
(assert (= temp10642_157 var1179826))
(assert (= temp10642_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10642_157)))
(assert (= temp10642_156 temp10642_158))
(assert (= var1191780
   (ite (bvslt temp10642_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10642_159 #x0000000000000000))
(assert (= var1191780 temp10642_159))
(assert (= temp10642_160 #x0000000000000000))
(assert (= var1179826 temp10642_160))
(assert (= temp10642_162 var1179826))
(assert (= temp10642_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10642_162)))
(assert (= temp10642_161 temp10642_163))
(assert (= var1191802 (bvsmod temp10642_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10642_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10642_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10642_165 #x0000000000000001))
(assert (= var1191803 temp10642_165))
(assert (= temp10642_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10642_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10642_167 #x0000000000000001))
(assert (= var1191823 temp10642_167))
(assert (= temp10642_168 #x0000000000000001))
(assert (= var1180714 temp10642_168))
(assert (= temp10642_169 #x0000000000000000))
(assert (= temp10642_170 temp10642_169))
(assert (= temp10642_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10642_170)))
(assert (= temp10642_172 #x0000000000000001))
(assert (= temp10642_173 temp10642_172))
(assert (= temp10642_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10642_173)))
(assert (= temp10642_175 #x0000000000000002))
(assert (= temp10642_176 temp10642_175))
(assert (= temp10642_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10642_176)))
(assert (= temp10642_178 #x0000000000000003))
(assert (= temp10642_179 temp10642_178))
(assert (= temp10642_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10642_179)))
(assert (= temp10642_181 #x0000000000000004))
(assert (= temp10642_182 temp10642_181))
(assert (= temp10642_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10642_182)))
(assert (= temp10642_184 #x0000000000000005))
(assert (= temp10642_185 temp10642_184))
(assert (= temp10642_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10642_185)))
(assert (= temp10642_187 #x0000000000000000))
(assert (= temp10642_188
   (ite (bvslt var1180714 temp10642_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10642_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10642_188)))
(assert (= var1191831 temp10642_189))
(assert (bvslt (ite (bvslt var1180714 temp10642_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10642_190 #x0000000000000001))
(assert (= var1180714 temp10642_190))
(assert (= temp10642_192 var1180714))
(assert (= temp10642_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10642_192)))
(assert (= temp10642_191 temp10642_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10642_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10642_194 #x0000000000000001))
(assert (= var1191836 temp10642_194))
(assert (= temp10642_195 #x0000000000000000))
(assert (= var1179826 temp10642_195))
(assert (= temp10642_197 var1179826))
(assert (= temp10642_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10642_197)))
(assert (= temp10642_196 temp10642_198))
(assert (= temp10642_199 #x0000000000000002))
(assert (= var1586025 temp10642_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10642_200 #x0000000000000001))
(assert (= var1191993 temp10642_200))
(assert (= temp10642_201 #x0000000000000001))
(assert (= var2700303 temp10642_201))
(assert (= temp10642_202 #x0000000000000001))
(assert (= var2962447 temp10642_202))
(assert (= temp10642_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10642_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10642_204 #x0000000000000001))
(assert (= var211058 temp10642_204))
(assert (= temp10642_205 #x0000000000000001))
(assert (= var211188 temp10642_205))
(assert (= var3879401 var211188))
(assert (= temp10642_206 #x0000000000000000))
(assert (= var3866802 temp10642_206))
(assert (= temp10642_207 #x0000000000000000))
(assert (= temp10642_208
   (ite (bvslt var3866802 temp10642_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10642_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10642_208)))
(assert (= var3879420 temp10642_209))
(assert (bvslt (ite (bvslt var3866802 temp10642_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10642_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10642_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10642_211 #x0000000000000000))
(assert (= var3879421 temp10642_211))
(assert (= temp10642_212 #x0000000000000001))
(assert (= var3867690 temp10642_212))
(assert (= temp10642_213 #x0000000000000000))
(assert (= temp10642_214
   (ite (bvslt var3867690 temp10642_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10642_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10642_214)))
(assert (= var3879423 temp10642_215))
(assert (bvslt (ite (bvslt var3867690 temp10642_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10642_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10642_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10642_217 #x0000000000000001))
(assert (= var3879424 temp10642_217))
(assert (= temp10642_218 #x0000000000000000))
(assert (= var4133117 temp10642_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10642_219 #x0000000000000002))
(assert (= var4339331 temp10642_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10642_220 #x0000000000000000))
(assert (= var4404892 temp10642_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp10642_222 #xffffffffffffffff))
(assert (= temp10642_221 temp10642_222))
(assert (= temp10642_223 #x0000000000000001))
(assert (= var197674 temp10642_223))
(assert (= temp10642_224 #x0000000000000000))
(assert (= temp10642_225
   (ite (bvslt var197674 temp10642_224)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp10642_226 (select ARGNAME_input_NAMEEND_DIMSIZE temp10642_225)))
(assert (= var211595 temp10642_226))
(assert (bvslt (ite (bvslt var197674 temp10642_224)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10642_227 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp10642_227) #x0000000000000001 #x0000000000000000)))
(assert (= temp10642_228 #x0000000000000001))
(assert (= var211596 temp10642_228))
(assert (= temp10642_230 #xffffffffffffffff))
(assert (= temp10642_229 temp10642_230))
(assert (= temp10642_231 #x0000000000000001))
(assert (= var211058 temp10642_231))
(model-add temp10642_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10642_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10642_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10642_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






