(declare-fun temp10241_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10241_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10241_3 () (_ BitVec 64))
(declare-fun temp10241_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10241_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10241_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10241_7 () (_ BitVec 64))
(declare-fun temp10241_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10241_9 () (_ BitVec 64))
(declare-fun temp10241_10 () (_ BitVec 64))
(declare-fun temp10241_11 () (_ BitVec 64))
(declare-fun temp10241_12 () (_ BitVec 64))
(declare-fun temp10241_13 () (_ BitVec 64))
(declare-fun temp10241_14 () (_ BitVec 64))
(declare-fun temp10241_15 () (_ BitVec 64))
(declare-fun temp10241_16 () (_ BitVec 64))
(declare-fun temp10241_17 () (_ BitVec 64))
(declare-fun temp10241_18 () (_ BitVec 64))
(declare-fun temp10241_19 () (_ BitVec 64))
(declare-fun temp10241_20 () (_ BitVec 64))
(declare-fun temp10241_21 () (_ BitVec 64))
(declare-fun temp10241_22 () (_ BitVec 64))
(declare-fun temp10241_23 () (_ BitVec 64))
(declare-fun temp10241_24 () (_ BitVec 64))
(declare-fun temp10241_25 () (_ BitVec 64))
(declare-fun temp10241_26 () (_ BitVec 64))
(declare-fun temp10241_27 () (_ BitVec 64))
(declare-fun temp10241_28 () (_ BitVec 64))
(declare-fun temp10241_29 () (_ BitVec 64))
(declare-fun temp10241_30 () (_ BitVec 64))
(declare-fun temp10241_31 () (_ BitVec 64))
(declare-fun temp10241_32 () (_ BitVec 64))
(declare-fun temp10241_33 () (_ BitVec 64))
(declare-fun temp10241_34 () (_ BitVec 64))
(declare-fun temp10241_35 () (_ BitVec 64))
(declare-fun temp10241_36 () (_ BitVec 64))
(declare-fun temp10241_37 () (_ BitVec 64))
(declare-fun temp10241_38 () (_ BitVec 64))
(declare-fun temp10241_39 () (_ BitVec 64))
(declare-fun temp10241_40 () (_ BitVec 64))
(declare-fun temp10241_41 () (_ BitVec 64))
(declare-fun temp10241_42 () (_ BitVec 64))
(declare-fun temp10241_43 () (_ BitVec 64))
(declare-fun temp10241_44 () (_ BitVec 64))
(declare-fun temp10241_45 () (_ BitVec 64))
(declare-fun temp10241_46 () (_ BitVec 64))
(declare-fun temp10241_47 () (_ BitVec 64))
(declare-fun temp10241_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10241_49 () (_ BitVec 64))
(declare-fun temp10241_50 () (_ BitVec 64))
(declare-fun temp10241_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10241_52 () (_ BitVec 64))
(declare-fun temp10241_53 () (_ BitVec 64))
(declare-fun temp10241_54 () (_ BitVec 64))
(declare-fun temp10241_55 () (_ BitVec 64))
(declare-fun temp10241_56 () (_ BitVec 64))
(declare-fun temp10241_57 () (_ BitVec 64))
(declare-fun temp10241_58 () (_ BitVec 64))
(declare-fun temp10241_59 () (_ BitVec 64))
(declare-fun temp10241_60 () (_ BitVec 64))
(declare-fun temp10241_61 () (_ BitVec 64))
(declare-fun temp10241_62 () (_ BitVec 64))
(declare-fun temp10241_63 () (_ BitVec 64))
(declare-fun temp10241_64 () (_ BitVec 64))
(declare-fun temp10241_65 () (_ BitVec 64))
(declare-fun temp10241_66 () (_ BitVec 64))
(declare-fun temp10241_67 () (_ BitVec 64))
(declare-fun temp10241_68 () (_ BitVec 64))
(declare-fun temp10241_69 () (_ BitVec 64))
(declare-fun temp10241_70 () (_ BitVec 64))
(declare-fun temp10241_71 () (_ BitVec 64))
(declare-fun temp10241_72 () (_ BitVec 64))
(declare-fun temp10241_73 () (_ BitVec 64))
(declare-fun temp10241_74 () (_ BitVec 64))
(declare-fun temp10241_75 () (_ BitVec 64))
(declare-fun temp10241_76 () (_ BitVec 64))
(declare-fun temp10241_77 () (_ BitVec 64))
(declare-fun temp10241_78 () (_ BitVec 64))
(declare-fun temp10241_79 () (_ BitVec 64))
(declare-fun temp10241_80 () (_ BitVec 64))
(declare-fun temp10241_81 () (_ BitVec 64))
(declare-fun temp10241_82 () (_ BitVec 64))
(declare-fun temp10241_83 () (_ BitVec 64))
(declare-fun temp10241_84 () (_ BitVec 64))
(declare-fun temp10241_85 () (_ BitVec 64))
(declare-fun temp10241_86 () (_ BitVec 64))
(declare-fun temp10241_87 () (_ BitVec 64))
(declare-fun temp10241_88 () (_ BitVec 64))
(declare-fun temp10241_89 () (_ BitVec 64))
(declare-fun temp10241_90 () (_ BitVec 64))
(declare-fun temp10241_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10241_92 () (_ BitVec 64))
(declare-fun temp10241_93 () (_ BitVec 64))
(declare-fun temp10241_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10241_95 () (_ BitVec 64))
(declare-fun temp10241_96 () (_ BitVec 64))
(declare-fun temp10241_97 () (_ BitVec 64))
(declare-fun temp10241_98 () (_ BitVec 64))
(declare-fun temp10241_99 () (_ BitVec 64))
(declare-fun temp10241_100 () (_ BitVec 64))
(declare-fun temp10241_101 () (_ BitVec 64))
(declare-fun temp10241_102 () (_ BitVec 64))
(declare-fun temp10241_103 () (_ BitVec 64))
(declare-fun temp10241_104 () (_ BitVec 64))
(declare-fun temp10241_105 () (_ BitVec 64))
(declare-fun temp10241_106 () (_ BitVec 64))
(declare-fun temp10241_107 () (_ BitVec 64))
(declare-fun temp10241_108 () (_ BitVec 64))
(declare-fun temp10241_109 () (_ BitVec 64))
(declare-fun temp10241_110 () (_ BitVec 64))
(declare-fun temp10241_111 () (_ BitVec 64))
(declare-fun temp10241_112 () (_ BitVec 64))
(declare-fun temp10241_113 () (_ BitVec 64))
(declare-fun temp10241_114 () (_ BitVec 64))
(declare-fun temp10241_115 () (_ BitVec 64))
(declare-fun temp10241_116 () (_ BitVec 64))
(declare-fun temp10241_117 () (_ BitVec 64))
(declare-fun temp10241_118 () (_ BitVec 64))
(declare-fun temp10241_119 () (_ BitVec 64))
(declare-fun temp10241_120 () (_ BitVec 64))
(declare-fun temp10241_121 () (_ BitVec 64))
(declare-fun temp10241_122 () (_ BitVec 64))
(declare-fun temp10241_123 () (_ BitVec 64))
(declare-fun temp10241_124 () (_ BitVec 64))
(declare-fun temp10241_125 () (_ BitVec 64))
(declare-fun temp10241_126 () (_ BitVec 64))
(declare-fun temp10241_127 () (_ BitVec 64))
(declare-fun temp10241_128 () (_ BitVec 64))
(declare-fun temp10241_129 () (_ BitVec 64))
(declare-fun temp10241_130 () (_ BitVec 64))
(declare-fun temp10241_131 () (_ BitVec 64))
(declare-fun temp10241_132 () (_ BitVec 64))
(declare-fun temp10241_133 () (_ BitVec 64))
(declare-fun temp10241_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10241_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10241_136 () (_ BitVec 64))
(declare-fun temp10241_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10241_138 () (_ BitVec 64))
(declare-fun temp10241_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10241_140 () (_ BitVec 64))
(declare-fun temp10241_141 () (_ BitVec 64))
(declare-fun temp10241_142 () (_ BitVec 64))
(declare-fun temp10241_143 () (_ BitVec 64))
(declare-fun temp10241_144 () (_ BitVec 64))
(declare-fun temp10241_145 () (_ BitVec 64))
(declare-fun temp10241_146 () (_ BitVec 64))
(declare-fun temp10241_147 () (_ BitVec 64))
(declare-fun temp10241_148 () (_ BitVec 64))
(declare-fun temp10241_149 () (_ BitVec 64))
(declare-fun temp10241_150 () (_ BitVec 64))
(declare-fun temp10241_151 () (_ BitVec 64))
(declare-fun temp10241_152 () (_ BitVec 64))
(declare-fun temp10241_153 () (_ BitVec 64))
(declare-fun temp10241_154 () (_ BitVec 64))
(declare-fun temp10241_155 () (_ BitVec 64))
(declare-fun temp10241_157 () (_ BitVec 64))
(declare-fun temp10241_158 () (_ BitVec 64))
(declare-fun temp10241_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10241_159 () (_ BitVec 64))
(declare-fun temp10241_160 () (_ BitVec 64))
(declare-fun temp10241_162 () (_ BitVec 64))
(declare-fun temp10241_163 () (_ BitVec 64))
(declare-fun temp10241_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10241_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10241_165 () (_ BitVec 64))
(declare-fun temp10241_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10241_167 () (_ BitVec 64))
(declare-fun temp10241_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10241_169 () (_ BitVec 64))
(declare-fun temp10241_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10241_171 () (_ BitVec 64))
(declare-fun temp10241_172 () (_ BitVec 64))
(declare-fun temp10241_173 () (_ BitVec 64))
(declare-fun temp10241_174 () (_ BitVec 64))
(declare-fun temp10241_175 () (_ BitVec 64))
(declare-fun temp10241_176 () (_ BitVec 64))
(declare-fun temp10241_177 () (_ BitVec 64))
(declare-fun temp10241_178 () (_ BitVec 64))
(declare-fun temp10241_179 () (_ BitVec 64))
(declare-fun temp10241_180 () (_ BitVec 64))
(declare-fun temp10241_181 () (_ BitVec 64))
(declare-fun temp10241_182 () (_ BitVec 64))
(declare-fun temp10241_183 () (_ BitVec 64))
(declare-fun temp10241_184 () (_ BitVec 64))
(declare-fun temp10241_185 () (_ BitVec 64))
(declare-fun temp10241_186 () (_ BitVec 64))
(declare-fun temp10241_187 () (_ BitVec 64))
(declare-fun temp10241_188 () (_ BitVec 64))
(declare-fun temp10241_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10241_190 () (_ BitVec 64))
(declare-fun temp10241_192 () (_ BitVec 64))
(declare-fun temp10241_193 () (_ BitVec 64))
(declare-fun temp10241_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10241_194 () (_ BitVec 64))
(declare-fun temp10241_195 () (_ BitVec 64))
(declare-fun temp10241_197 () (_ BitVec 64))
(declare-fun temp10241_198 () (_ BitVec 64))
(declare-fun temp10241_196 () (_ BitVec 64))
(declare-fun temp10241_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10241_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10241_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10241_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10241_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10241_204 () (_ BitVec 64))
(declare-fun temp10241_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10241_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10241_207 () (_ BitVec 64))
(declare-fun temp10241_208 () (_ BitVec 64))
(declare-fun temp10241_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10241_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10241_211 () (_ BitVec 64))
(declare-fun temp10241_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10241_213 () (_ BitVec 64))
(declare-fun temp10241_214 () (_ BitVec 64))
(declare-fun temp10241_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10241_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10241_217 () (_ BitVec 64))
(declare-fun temp10241_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10241_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10241_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4862352 () (_ BitVec 64))
(declare-fun var5124496 () (_ BitVec 64))
(declare-fun temp10241_221 () (_ BitVec 64))
(declare-fun var5452176 () (_ BitVec 64))
(declare-fun temp10241_222 () (_ BitVec 64))
(assert (= temp10241_1 #x0000000000000001))
(assert (= var77203 temp10241_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10241_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10241_2)))
(assert (= temp10241_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10241_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10241_4 #x0000000000000000))
(assert (= var210941 temp10241_4))
(assert (= temp10241_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10241_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10241_6 #x0000000000000000))
(assert (= var210986 temp10241_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10241_7 #x0000000000000000))
(assert (= temp10241_8 temp10241_7))
(assert (= temp10241_9 (select ARGNAME_padding_NAMEEND_VAL temp10241_8)))
(assert (= temp10241_10 #x0000000000000001))
(assert (= temp10241_11 temp10241_10))
(assert (= temp10241_12 (select ARGNAME_padding_NAMEEND_VAL temp10241_11)))
(assert (= temp10241_13 #x0000000000000002))
(assert (= temp10241_14 temp10241_13))
(assert (= temp10241_15 (select ARGNAME_padding_NAMEEND_VAL temp10241_14)))
(assert (= temp10241_16 #x0000000000000003))
(assert (= temp10241_17 temp10241_16))
(assert (= temp10241_18 (select ARGNAME_padding_NAMEEND_VAL temp10241_17)))
(assert (= temp10241_19 #x0000000000000004))
(assert (= temp10241_20 temp10241_19))
(assert (= temp10241_21 (select ARGNAME_padding_NAMEEND_VAL temp10241_20)))
(assert (= temp10241_22 #x0000000000000005))
(assert (= temp10241_23 temp10241_22))
(assert (= temp10241_24 (select ARGNAME_padding_NAMEEND_VAL temp10241_23)))
(assert (= temp10241_25 #x0000000000000000))
(assert (= temp10241_26 #x0000000000000000))
(assert (= temp10241_27 temp10241_26))
(assert (= temp10241_28 (select ARGNAME_padding_NAMEEND_VAL temp10241_27)))
(assert (= temp10241_29 #x0000000000000000))
(assert (= temp10241_30 #x0000000000000001))
(assert (= temp10241_31 temp10241_30))
(assert (= temp10241_32 (select ARGNAME_padding_NAMEEND_VAL temp10241_31)))
(assert (= temp10241_33 #x0000000000000000))
(assert (= temp10241_34 #x0000000000000002))
(assert (= temp10241_35 temp10241_34))
(assert (= temp10241_36 (select ARGNAME_padding_NAMEEND_VAL temp10241_35)))
(assert (= temp10241_37 #x0000000000000000))
(assert (= temp10241_38 #x0000000000000003))
(assert (= temp10241_39 temp10241_38))
(assert (= temp10241_40 (select ARGNAME_padding_NAMEEND_VAL temp10241_39)))
(assert (= temp10241_41 #x0000000000000000))
(assert (= temp10241_42 #x0000000000000004))
(assert (= temp10241_43 temp10241_42))
(assert (= temp10241_44 (select ARGNAME_padding_NAMEEND_VAL temp10241_43)))
(assert (= temp10241_45 #x0000000000000000))
(assert (= temp10241_46 #x0000000000000005))
(assert (= temp10241_47 temp10241_46))
(assert (= temp10241_48 (select ARGNAME_padding_NAMEEND_VAL temp10241_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10241_28 temp10241_25)
             (bvslt temp10241_32 temp10241_29)
             (bvslt temp10241_36 temp10241_33)
             (bvslt temp10241_40 temp10241_37)
             (bvslt temp10241_44 temp10241_41)
             (bvslt temp10241_48 temp10241_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10241_49 #x0000000000000000))
(assert (= var1191714 temp10241_49))
(assert (= temp10241_50 #x0000000000000000))
(assert (= temp10241_51 temp10241_50))
(assert (= temp10241_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10241_51)))
(assert (= temp10241_53 #x0000000000000001))
(assert (= temp10241_54 temp10241_53))
(assert (= temp10241_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10241_54)))
(assert (= temp10241_56 #x0000000000000002))
(assert (= temp10241_57 temp10241_56))
(assert (= temp10241_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10241_57)))
(assert (= temp10241_59 #x0000000000000003))
(assert (= temp10241_60 temp10241_59))
(assert (= temp10241_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10241_60)))
(assert (= temp10241_62 #x0000000000000004))
(assert (= temp10241_63 temp10241_62))
(assert (= temp10241_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10241_63)))
(assert (= temp10241_65 #x0000000000000005))
(assert (= temp10241_66 temp10241_65))
(assert (= temp10241_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10241_66)))
(assert (= temp10241_68 #x0000000000000000))
(assert (= temp10241_69 #x0000000000000000))
(assert (= temp10241_70 temp10241_69))
(assert (= temp10241_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10241_70)))
(assert (= temp10241_72 #x0000000000000000))
(assert (= temp10241_73 #x0000000000000001))
(assert (= temp10241_74 temp10241_73))
(assert (= temp10241_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10241_74)))
(assert (= temp10241_76 #x0000000000000000))
(assert (= temp10241_77 #x0000000000000002))
(assert (= temp10241_78 temp10241_77))
(assert (= temp10241_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10241_78)))
(assert (= temp10241_80 #x0000000000000000))
(assert (= temp10241_81 #x0000000000000003))
(assert (= temp10241_82 temp10241_81))
(assert (= temp10241_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10241_82)))
(assert (= temp10241_84 #x0000000000000000))
(assert (= temp10241_85 #x0000000000000004))
(assert (= temp10241_86 temp10241_85))
(assert (= temp10241_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10241_86)))
(assert (= temp10241_88 #x0000000000000000))
(assert (= temp10241_89 #x0000000000000005))
(assert (= temp10241_90 temp10241_89))
(assert (= temp10241_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10241_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10241_71 temp10241_68)
             (bvslt temp10241_75 temp10241_72)
             (bvslt temp10241_79 temp10241_76)
             (bvslt temp10241_83 temp10241_80)
             (bvslt temp10241_87 temp10241_84)
             (bvslt temp10241_91 temp10241_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10241_92 #x0000000000000000))
(assert (= var1191725 temp10241_92))
(assert (= temp10241_93 #x0000000000000000))
(assert (= temp10241_94 temp10241_93))
(assert (= temp10241_95 (select ARGNAME_stride_NAMEEND_VAL temp10241_94)))
(assert (= temp10241_96 #x0000000000000001))
(assert (= temp10241_97 temp10241_96))
(assert (= temp10241_98 (select ARGNAME_stride_NAMEEND_VAL temp10241_97)))
(assert (= temp10241_99 #x0000000000000002))
(assert (= temp10241_100 temp10241_99))
(assert (= temp10241_101 (select ARGNAME_stride_NAMEEND_VAL temp10241_100)))
(assert (= temp10241_102 #x0000000000000003))
(assert (= temp10241_103 temp10241_102))
(assert (= temp10241_104 (select ARGNAME_stride_NAMEEND_VAL temp10241_103)))
(assert (= temp10241_105 #x0000000000000004))
(assert (= temp10241_106 temp10241_105))
(assert (= temp10241_107 (select ARGNAME_stride_NAMEEND_VAL temp10241_106)))
(assert (= temp10241_108 #x0000000000000005))
(assert (= temp10241_109 temp10241_108))
(assert (= temp10241_110 (select ARGNAME_stride_NAMEEND_VAL temp10241_109)))
(assert (= temp10241_111 #x0000000000000000))
(assert (= temp10241_112 #x0000000000000000))
(assert (= temp10241_113 temp10241_112))
(assert (= temp10241_114 (select ARGNAME_stride_NAMEEND_VAL temp10241_113)))
(assert (= temp10241_115 #x0000000000000000))
(assert (= temp10241_116 #x0000000000000001))
(assert (= temp10241_117 temp10241_116))
(assert (= temp10241_118 (select ARGNAME_stride_NAMEEND_VAL temp10241_117)))
(assert (= temp10241_119 #x0000000000000000))
(assert (= temp10241_120 #x0000000000000002))
(assert (= temp10241_121 temp10241_120))
(assert (= temp10241_122 (select ARGNAME_stride_NAMEEND_VAL temp10241_121)))
(assert (= temp10241_123 #x0000000000000000))
(assert (= temp10241_124 #x0000000000000003))
(assert (= temp10241_125 temp10241_124))
(assert (= temp10241_126 (select ARGNAME_stride_NAMEEND_VAL temp10241_125)))
(assert (= temp10241_127 #x0000000000000000))
(assert (= temp10241_128 #x0000000000000004))
(assert (= temp10241_129 temp10241_128))
(assert (= temp10241_130 (select ARGNAME_stride_NAMEEND_VAL temp10241_129)))
(assert (= temp10241_131 #x0000000000000000))
(assert (= temp10241_132 #x0000000000000005))
(assert (= temp10241_133 temp10241_132))
(assert (= temp10241_134 (select ARGNAME_stride_NAMEEND_VAL temp10241_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10241_114 temp10241_111)
             (bvsle temp10241_118 temp10241_115)
             (bvsle temp10241_122 temp10241_119)
             (bvsle temp10241_126 temp10241_123)
             (bvsle temp10241_130 temp10241_127)
             (bvsle temp10241_134 temp10241_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10241_135 #x0000000000000000))
(assert (= var1191735 temp10241_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10241_136 #x0000000000000001))
(assert (= var1191747 temp10241_136))
(assert (= temp10241_137 #x0000000000000000))
(assert (= var1179826 temp10241_137))
(assert (= temp10241_138 #x0000000000000000))
(assert (= temp10241_139 temp10241_138))
(assert (= temp10241_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10241_139)))
(assert (= temp10241_141 #x0000000000000001))
(assert (= temp10241_142 temp10241_141))
(assert (= temp10241_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10241_142)))
(assert (= temp10241_144 #x0000000000000002))
(assert (= temp10241_145 temp10241_144))
(assert (= temp10241_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10241_145)))
(assert (= temp10241_147 #x0000000000000003))
(assert (= temp10241_148 temp10241_147))
(assert (= temp10241_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10241_148)))
(assert (= temp10241_150 #x0000000000000004))
(assert (= temp10241_151 temp10241_150))
(assert (= temp10241_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10241_151)))
(assert (= temp10241_153 #x0000000000000005))
(assert (= temp10241_154 temp10241_153))
(assert (= temp10241_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10241_154)))
(assert (= temp10241_157 var1179826))
(assert (= temp10241_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10241_157)))
(assert (= temp10241_156 temp10241_158))
(assert (= var1191780
   (ite (bvslt temp10241_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10241_159 #x0000000000000000))
(assert (= var1191780 temp10241_159))
(assert (= temp10241_160 #x0000000000000000))
(assert (= var1179826 temp10241_160))
(assert (= temp10241_162 var1179826))
(assert (= temp10241_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10241_162)))
(assert (= temp10241_161 temp10241_163))
(assert (= var1191802 (bvsmod temp10241_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10241_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10241_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10241_165 #x0000000000000001))
(assert (= var1191803 temp10241_165))
(assert (= temp10241_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10241_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10241_167 #x0000000000000001))
(assert (= var1191823 temp10241_167))
(assert (= temp10241_168 #x0000000000000001))
(assert (= var1180714 temp10241_168))
(assert (= temp10241_169 #x0000000000000000))
(assert (= temp10241_170 temp10241_169))
(assert (= temp10241_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10241_170)))
(assert (= temp10241_172 #x0000000000000001))
(assert (= temp10241_173 temp10241_172))
(assert (= temp10241_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10241_173)))
(assert (= temp10241_175 #x0000000000000002))
(assert (= temp10241_176 temp10241_175))
(assert (= temp10241_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10241_176)))
(assert (= temp10241_178 #x0000000000000003))
(assert (= temp10241_179 temp10241_178))
(assert (= temp10241_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10241_179)))
(assert (= temp10241_181 #x0000000000000004))
(assert (= temp10241_182 temp10241_181))
(assert (= temp10241_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10241_182)))
(assert (= temp10241_184 #x0000000000000005))
(assert (= temp10241_185 temp10241_184))
(assert (= temp10241_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10241_185)))
(assert (= temp10241_187 #x0000000000000000))
(assert (= temp10241_188
   (ite (bvslt var1180714 temp10241_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10241_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10241_188)))
(assert (= var1191831 temp10241_189))
(assert (bvslt (ite (bvslt var1180714 temp10241_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10241_190 #x0000000000000001))
(assert (= var1180714 temp10241_190))
(assert (= temp10241_192 var1180714))
(assert (= temp10241_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10241_192)))
(assert (= temp10241_191 temp10241_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10241_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10241_194 #x0000000000000001))
(assert (= var1191836 temp10241_194))
(assert (= temp10241_195 #x0000000000000000))
(assert (= var1179826 temp10241_195))
(assert (= temp10241_197 var1179826))
(assert (= temp10241_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10241_197)))
(assert (= temp10241_196 temp10241_198))
(assert (= temp10241_199 #x0000000000000002))
(assert (= var1586025 temp10241_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10241_200 #x0000000000000001))
(assert (= var1191993 temp10241_200))
(assert (= temp10241_201 #x0000000000000001))
(assert (= var2700303 temp10241_201))
(assert (= temp10241_202 #x0000000000000001))
(assert (= var2962447 temp10241_202))
(assert (= temp10241_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10241_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10241_204 #x0000000000000001))
(assert (= var211058 temp10241_204))
(assert (= temp10241_205 #x0000000000000001))
(assert (= var211188 temp10241_205))
(assert (= var3879401 var211188))
(assert (= temp10241_206 #x0000000000000000))
(assert (= var3866802 temp10241_206))
(assert (= temp10241_207 #x0000000000000000))
(assert (= temp10241_208
   (ite (bvslt var3866802 temp10241_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10241_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10241_208)))
(assert (= var3879420 temp10241_209))
(assert (bvslt (ite (bvslt var3866802 temp10241_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10241_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10241_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10241_211 #x0000000000000000))
(assert (= var3879421 temp10241_211))
(assert (= temp10241_212 #x0000000000000001))
(assert (= var3867690 temp10241_212))
(assert (= temp10241_213 #x0000000000000000))
(assert (= temp10241_214
   (ite (bvslt var3867690 temp10241_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10241_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10241_214)))
(assert (= var3879423 temp10241_215))
(assert (bvslt (ite (bvslt var3867690 temp10241_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10241_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10241_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10241_217 #x0000000000000001))
(assert (= var3879424 temp10241_217))
(assert (= temp10241_218 #x0000000000000000))
(assert (= var4079423 temp10241_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10241_219 #x0000000000000002))
(assert (= var4208259 temp10241_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10241_220 #x0000000000000000))
(assert (= var4273820 temp10241_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4862352 var211201))
(assert (= var5124496 var211201))
(assert (= temp10241_221 #x0000000000000000))
(assert (= var5452176 temp10241_221))
(assert (= temp10241_222 #x0000000000000001))
(assert (= var211058 temp10241_222))
(model-add temp10241_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10241_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10241_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10241_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




