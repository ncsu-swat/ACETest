(declare-fun temp10958_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10958_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10958_3 () (_ BitVec 64))
(declare-fun temp10958_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10958_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10958_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10958_7 () (_ BitVec 64))
(declare-fun temp10958_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10958_9 () (_ BitVec 64))
(declare-fun temp10958_10 () (_ BitVec 64))
(declare-fun temp10958_11 () (_ BitVec 64))
(declare-fun temp10958_12 () (_ BitVec 64))
(declare-fun temp10958_13 () (_ BitVec 64))
(declare-fun temp10958_14 () (_ BitVec 64))
(declare-fun temp10958_15 () (_ BitVec 64))
(declare-fun temp10958_16 () (_ BitVec 64))
(declare-fun temp10958_17 () (_ BitVec 64))
(declare-fun temp10958_18 () (_ BitVec 64))
(declare-fun temp10958_19 () (_ BitVec 64))
(declare-fun temp10958_20 () (_ BitVec 64))
(declare-fun temp10958_21 () (_ BitVec 64))
(declare-fun temp10958_22 () (_ BitVec 64))
(declare-fun temp10958_23 () (_ BitVec 64))
(declare-fun temp10958_24 () (_ BitVec 64))
(declare-fun temp10958_25 () (_ BitVec 64))
(declare-fun temp10958_26 () (_ BitVec 64))
(declare-fun temp10958_27 () (_ BitVec 64))
(declare-fun temp10958_28 () (_ BitVec 64))
(declare-fun temp10958_29 () (_ BitVec 64))
(declare-fun temp10958_30 () (_ BitVec 64))
(declare-fun temp10958_31 () (_ BitVec 64))
(declare-fun temp10958_32 () (_ BitVec 64))
(declare-fun temp10958_33 () (_ BitVec 64))
(declare-fun temp10958_34 () (_ BitVec 64))
(declare-fun temp10958_35 () (_ BitVec 64))
(declare-fun temp10958_36 () (_ BitVec 64))
(declare-fun temp10958_37 () (_ BitVec 64))
(declare-fun temp10958_38 () (_ BitVec 64))
(declare-fun temp10958_39 () (_ BitVec 64))
(declare-fun temp10958_40 () (_ BitVec 64))
(declare-fun temp10958_41 () (_ BitVec 64))
(declare-fun temp10958_42 () (_ BitVec 64))
(declare-fun temp10958_43 () (_ BitVec 64))
(declare-fun temp10958_44 () (_ BitVec 64))
(declare-fun temp10958_45 () (_ BitVec 64))
(declare-fun temp10958_46 () (_ BitVec 64))
(declare-fun temp10958_47 () (_ BitVec 64))
(declare-fun temp10958_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10958_49 () (_ BitVec 64))
(declare-fun temp10958_50 () (_ BitVec 64))
(declare-fun temp10958_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10958_52 () (_ BitVec 64))
(declare-fun temp10958_53 () (_ BitVec 64))
(declare-fun temp10958_54 () (_ BitVec 64))
(declare-fun temp10958_55 () (_ BitVec 64))
(declare-fun temp10958_56 () (_ BitVec 64))
(declare-fun temp10958_57 () (_ BitVec 64))
(declare-fun temp10958_58 () (_ BitVec 64))
(declare-fun temp10958_59 () (_ BitVec 64))
(declare-fun temp10958_60 () (_ BitVec 64))
(declare-fun temp10958_61 () (_ BitVec 64))
(declare-fun temp10958_62 () (_ BitVec 64))
(declare-fun temp10958_63 () (_ BitVec 64))
(declare-fun temp10958_64 () (_ BitVec 64))
(declare-fun temp10958_65 () (_ BitVec 64))
(declare-fun temp10958_66 () (_ BitVec 64))
(declare-fun temp10958_67 () (_ BitVec 64))
(declare-fun temp10958_68 () (_ BitVec 64))
(declare-fun temp10958_69 () (_ BitVec 64))
(declare-fun temp10958_70 () (_ BitVec 64))
(declare-fun temp10958_71 () (_ BitVec 64))
(declare-fun temp10958_72 () (_ BitVec 64))
(declare-fun temp10958_73 () (_ BitVec 64))
(declare-fun temp10958_74 () (_ BitVec 64))
(declare-fun temp10958_75 () (_ BitVec 64))
(declare-fun temp10958_76 () (_ BitVec 64))
(declare-fun temp10958_77 () (_ BitVec 64))
(declare-fun temp10958_78 () (_ BitVec 64))
(declare-fun temp10958_79 () (_ BitVec 64))
(declare-fun temp10958_80 () (_ BitVec 64))
(declare-fun temp10958_81 () (_ BitVec 64))
(declare-fun temp10958_82 () (_ BitVec 64))
(declare-fun temp10958_83 () (_ BitVec 64))
(declare-fun temp10958_84 () (_ BitVec 64))
(declare-fun temp10958_85 () (_ BitVec 64))
(declare-fun temp10958_86 () (_ BitVec 64))
(declare-fun temp10958_87 () (_ BitVec 64))
(declare-fun temp10958_88 () (_ BitVec 64))
(declare-fun temp10958_89 () (_ BitVec 64))
(declare-fun temp10958_90 () (_ BitVec 64))
(declare-fun temp10958_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10958_92 () (_ BitVec 64))
(declare-fun temp10958_93 () (_ BitVec 64))
(declare-fun temp10958_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10958_95 () (_ BitVec 64))
(declare-fun temp10958_96 () (_ BitVec 64))
(declare-fun temp10958_97 () (_ BitVec 64))
(declare-fun temp10958_98 () (_ BitVec 64))
(declare-fun temp10958_99 () (_ BitVec 64))
(declare-fun temp10958_100 () (_ BitVec 64))
(declare-fun temp10958_101 () (_ BitVec 64))
(declare-fun temp10958_102 () (_ BitVec 64))
(declare-fun temp10958_103 () (_ BitVec 64))
(declare-fun temp10958_104 () (_ BitVec 64))
(declare-fun temp10958_105 () (_ BitVec 64))
(declare-fun temp10958_106 () (_ BitVec 64))
(declare-fun temp10958_107 () (_ BitVec 64))
(declare-fun temp10958_108 () (_ BitVec 64))
(declare-fun temp10958_109 () (_ BitVec 64))
(declare-fun temp10958_110 () (_ BitVec 64))
(declare-fun temp10958_111 () (_ BitVec 64))
(declare-fun temp10958_112 () (_ BitVec 64))
(declare-fun temp10958_113 () (_ BitVec 64))
(declare-fun temp10958_114 () (_ BitVec 64))
(declare-fun temp10958_115 () (_ BitVec 64))
(declare-fun temp10958_116 () (_ BitVec 64))
(declare-fun temp10958_117 () (_ BitVec 64))
(declare-fun temp10958_118 () (_ BitVec 64))
(declare-fun temp10958_119 () (_ BitVec 64))
(declare-fun temp10958_120 () (_ BitVec 64))
(declare-fun temp10958_121 () (_ BitVec 64))
(declare-fun temp10958_122 () (_ BitVec 64))
(declare-fun temp10958_123 () (_ BitVec 64))
(declare-fun temp10958_124 () (_ BitVec 64))
(declare-fun temp10958_125 () (_ BitVec 64))
(declare-fun temp10958_126 () (_ BitVec 64))
(declare-fun temp10958_127 () (_ BitVec 64))
(declare-fun temp10958_128 () (_ BitVec 64))
(declare-fun temp10958_129 () (_ BitVec 64))
(declare-fun temp10958_130 () (_ BitVec 64))
(declare-fun temp10958_131 () (_ BitVec 64))
(declare-fun temp10958_132 () (_ BitVec 64))
(declare-fun temp10958_133 () (_ BitVec 64))
(declare-fun temp10958_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10958_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10958_136 () (_ BitVec 64))
(declare-fun temp10958_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10958_138 () (_ BitVec 64))
(declare-fun temp10958_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10958_140 () (_ BitVec 64))
(declare-fun temp10958_141 () (_ BitVec 64))
(declare-fun temp10958_142 () (_ BitVec 64))
(declare-fun temp10958_143 () (_ BitVec 64))
(declare-fun temp10958_144 () (_ BitVec 64))
(declare-fun temp10958_145 () (_ BitVec 64))
(declare-fun temp10958_146 () (_ BitVec 64))
(declare-fun temp10958_147 () (_ BitVec 64))
(declare-fun temp10958_148 () (_ BitVec 64))
(declare-fun temp10958_149 () (_ BitVec 64))
(declare-fun temp10958_150 () (_ BitVec 64))
(declare-fun temp10958_151 () (_ BitVec 64))
(declare-fun temp10958_152 () (_ BitVec 64))
(declare-fun temp10958_153 () (_ BitVec 64))
(declare-fun temp10958_154 () (_ BitVec 64))
(declare-fun temp10958_155 () (_ BitVec 64))
(declare-fun temp10958_157 () (_ BitVec 64))
(declare-fun temp10958_158 () (_ BitVec 64))
(declare-fun temp10958_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10958_159 () (_ BitVec 64))
(declare-fun temp10958_160 () (_ BitVec 64))
(declare-fun temp10958_162 () (_ BitVec 64))
(declare-fun temp10958_163 () (_ BitVec 64))
(declare-fun temp10958_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10958_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10958_165 () (_ BitVec 64))
(declare-fun temp10958_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10958_167 () (_ BitVec 64))
(declare-fun temp10958_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10958_169 () (_ BitVec 64))
(declare-fun temp10958_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10958_171 () (_ BitVec 64))
(declare-fun temp10958_172 () (_ BitVec 64))
(declare-fun temp10958_173 () (_ BitVec 64))
(declare-fun temp10958_174 () (_ BitVec 64))
(declare-fun temp10958_175 () (_ BitVec 64))
(declare-fun temp10958_176 () (_ BitVec 64))
(declare-fun temp10958_177 () (_ BitVec 64))
(declare-fun temp10958_178 () (_ BitVec 64))
(declare-fun temp10958_179 () (_ BitVec 64))
(declare-fun temp10958_180 () (_ BitVec 64))
(declare-fun temp10958_181 () (_ BitVec 64))
(declare-fun temp10958_182 () (_ BitVec 64))
(declare-fun temp10958_183 () (_ BitVec 64))
(declare-fun temp10958_184 () (_ BitVec 64))
(declare-fun temp10958_185 () (_ BitVec 64))
(declare-fun temp10958_186 () (_ BitVec 64))
(declare-fun temp10958_187 () (_ BitVec 64))
(declare-fun temp10958_188 () (_ BitVec 64))
(declare-fun temp10958_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10958_190 () (_ BitVec 64))
(declare-fun temp10958_192 () (_ BitVec 64))
(declare-fun temp10958_193 () (_ BitVec 64))
(declare-fun temp10958_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10958_194 () (_ BitVec 64))
(declare-fun temp10958_195 () (_ BitVec 64))
(declare-fun temp10958_197 () (_ BitVec 64))
(declare-fun temp10958_198 () (_ BitVec 64))
(declare-fun temp10958_196 () (_ BitVec 64))
(declare-fun temp10958_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10958_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10958_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10958_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10958_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10958_204 () (_ BitVec 64))
(declare-fun temp10958_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10958_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10958_207 () (_ BitVec 64))
(declare-fun temp10958_208 () (_ BitVec 64))
(declare-fun temp10958_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10958_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10958_211 () (_ BitVec 64))
(declare-fun temp10958_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10958_213 () (_ BitVec 64))
(declare-fun temp10958_214 () (_ BitVec 64))
(declare-fun temp10958_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10958_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10958_217 () (_ BitVec 64))
(declare-fun temp10958_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10958_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10958_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var5058960 () (_ BitVec 64))
(declare-fun var5321104 () (_ BitVec 64))
(declare-fun temp10958_221 () (_ BitVec 64))
(assert (= temp10958_1 #x0000000000000001))
(assert (= var77203 temp10958_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10958_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10958_2)))
(assert (= temp10958_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10958_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10958_4 #x0000000000000000))
(assert (= var210941 temp10958_4))
(assert (= temp10958_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10958_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10958_6 #x0000000000000000))
(assert (= var210986 temp10958_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10958_7 #x0000000000000000))
(assert (= temp10958_8 temp10958_7))
(assert (= temp10958_9 (select ARGNAME_padding_NAMEEND_VAL temp10958_8)))
(assert (= temp10958_10 #x0000000000000001))
(assert (= temp10958_11 temp10958_10))
(assert (= temp10958_12 (select ARGNAME_padding_NAMEEND_VAL temp10958_11)))
(assert (= temp10958_13 #x0000000000000002))
(assert (= temp10958_14 temp10958_13))
(assert (= temp10958_15 (select ARGNAME_padding_NAMEEND_VAL temp10958_14)))
(assert (= temp10958_16 #x0000000000000003))
(assert (= temp10958_17 temp10958_16))
(assert (= temp10958_18 (select ARGNAME_padding_NAMEEND_VAL temp10958_17)))
(assert (= temp10958_19 #x0000000000000004))
(assert (= temp10958_20 temp10958_19))
(assert (= temp10958_21 (select ARGNAME_padding_NAMEEND_VAL temp10958_20)))
(assert (= temp10958_22 #x0000000000000005))
(assert (= temp10958_23 temp10958_22))
(assert (= temp10958_24 (select ARGNAME_padding_NAMEEND_VAL temp10958_23)))
(assert (= temp10958_25 #x0000000000000000))
(assert (= temp10958_26 #x0000000000000000))
(assert (= temp10958_27 temp10958_26))
(assert (= temp10958_28 (select ARGNAME_padding_NAMEEND_VAL temp10958_27)))
(assert (= temp10958_29 #x0000000000000000))
(assert (= temp10958_30 #x0000000000000001))
(assert (= temp10958_31 temp10958_30))
(assert (= temp10958_32 (select ARGNAME_padding_NAMEEND_VAL temp10958_31)))
(assert (= temp10958_33 #x0000000000000000))
(assert (= temp10958_34 #x0000000000000002))
(assert (= temp10958_35 temp10958_34))
(assert (= temp10958_36 (select ARGNAME_padding_NAMEEND_VAL temp10958_35)))
(assert (= temp10958_37 #x0000000000000000))
(assert (= temp10958_38 #x0000000000000003))
(assert (= temp10958_39 temp10958_38))
(assert (= temp10958_40 (select ARGNAME_padding_NAMEEND_VAL temp10958_39)))
(assert (= temp10958_41 #x0000000000000000))
(assert (= temp10958_42 #x0000000000000004))
(assert (= temp10958_43 temp10958_42))
(assert (= temp10958_44 (select ARGNAME_padding_NAMEEND_VAL temp10958_43)))
(assert (= temp10958_45 #x0000000000000000))
(assert (= temp10958_46 #x0000000000000005))
(assert (= temp10958_47 temp10958_46))
(assert (= temp10958_48 (select ARGNAME_padding_NAMEEND_VAL temp10958_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10958_28 temp10958_25)
             (bvslt temp10958_32 temp10958_29)
             (bvslt temp10958_36 temp10958_33)
             (bvslt temp10958_40 temp10958_37)
             (bvslt temp10958_44 temp10958_41)
             (bvslt temp10958_48 temp10958_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10958_49 #x0000000000000000))
(assert (= var1191714 temp10958_49))
(assert (= temp10958_50 #x0000000000000000))
(assert (= temp10958_51 temp10958_50))
(assert (= temp10958_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10958_51)))
(assert (= temp10958_53 #x0000000000000001))
(assert (= temp10958_54 temp10958_53))
(assert (= temp10958_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10958_54)))
(assert (= temp10958_56 #x0000000000000002))
(assert (= temp10958_57 temp10958_56))
(assert (= temp10958_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10958_57)))
(assert (= temp10958_59 #x0000000000000003))
(assert (= temp10958_60 temp10958_59))
(assert (= temp10958_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10958_60)))
(assert (= temp10958_62 #x0000000000000004))
(assert (= temp10958_63 temp10958_62))
(assert (= temp10958_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10958_63)))
(assert (= temp10958_65 #x0000000000000005))
(assert (= temp10958_66 temp10958_65))
(assert (= temp10958_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10958_66)))
(assert (= temp10958_68 #x0000000000000000))
(assert (= temp10958_69 #x0000000000000000))
(assert (= temp10958_70 temp10958_69))
(assert (= temp10958_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10958_70)))
(assert (= temp10958_72 #x0000000000000000))
(assert (= temp10958_73 #x0000000000000001))
(assert (= temp10958_74 temp10958_73))
(assert (= temp10958_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10958_74)))
(assert (= temp10958_76 #x0000000000000000))
(assert (= temp10958_77 #x0000000000000002))
(assert (= temp10958_78 temp10958_77))
(assert (= temp10958_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10958_78)))
(assert (= temp10958_80 #x0000000000000000))
(assert (= temp10958_81 #x0000000000000003))
(assert (= temp10958_82 temp10958_81))
(assert (= temp10958_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10958_82)))
(assert (= temp10958_84 #x0000000000000000))
(assert (= temp10958_85 #x0000000000000004))
(assert (= temp10958_86 temp10958_85))
(assert (= temp10958_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10958_86)))
(assert (= temp10958_88 #x0000000000000000))
(assert (= temp10958_89 #x0000000000000005))
(assert (= temp10958_90 temp10958_89))
(assert (= temp10958_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10958_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10958_71 temp10958_68)
             (bvslt temp10958_75 temp10958_72)
             (bvslt temp10958_79 temp10958_76)
             (bvslt temp10958_83 temp10958_80)
             (bvslt temp10958_87 temp10958_84)
             (bvslt temp10958_91 temp10958_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10958_92 #x0000000000000000))
(assert (= var1191725 temp10958_92))
(assert (= temp10958_93 #x0000000000000000))
(assert (= temp10958_94 temp10958_93))
(assert (= temp10958_95 (select ARGNAME_stride_NAMEEND_VAL temp10958_94)))
(assert (= temp10958_96 #x0000000000000001))
(assert (= temp10958_97 temp10958_96))
(assert (= temp10958_98 (select ARGNAME_stride_NAMEEND_VAL temp10958_97)))
(assert (= temp10958_99 #x0000000000000002))
(assert (= temp10958_100 temp10958_99))
(assert (= temp10958_101 (select ARGNAME_stride_NAMEEND_VAL temp10958_100)))
(assert (= temp10958_102 #x0000000000000003))
(assert (= temp10958_103 temp10958_102))
(assert (= temp10958_104 (select ARGNAME_stride_NAMEEND_VAL temp10958_103)))
(assert (= temp10958_105 #x0000000000000004))
(assert (= temp10958_106 temp10958_105))
(assert (= temp10958_107 (select ARGNAME_stride_NAMEEND_VAL temp10958_106)))
(assert (= temp10958_108 #x0000000000000005))
(assert (= temp10958_109 temp10958_108))
(assert (= temp10958_110 (select ARGNAME_stride_NAMEEND_VAL temp10958_109)))
(assert (= temp10958_111 #x0000000000000000))
(assert (= temp10958_112 #x0000000000000000))
(assert (= temp10958_113 temp10958_112))
(assert (= temp10958_114 (select ARGNAME_stride_NAMEEND_VAL temp10958_113)))
(assert (= temp10958_115 #x0000000000000000))
(assert (= temp10958_116 #x0000000000000001))
(assert (= temp10958_117 temp10958_116))
(assert (= temp10958_118 (select ARGNAME_stride_NAMEEND_VAL temp10958_117)))
(assert (= temp10958_119 #x0000000000000000))
(assert (= temp10958_120 #x0000000000000002))
(assert (= temp10958_121 temp10958_120))
(assert (= temp10958_122 (select ARGNAME_stride_NAMEEND_VAL temp10958_121)))
(assert (= temp10958_123 #x0000000000000000))
(assert (= temp10958_124 #x0000000000000003))
(assert (= temp10958_125 temp10958_124))
(assert (= temp10958_126 (select ARGNAME_stride_NAMEEND_VAL temp10958_125)))
(assert (= temp10958_127 #x0000000000000000))
(assert (= temp10958_128 #x0000000000000004))
(assert (= temp10958_129 temp10958_128))
(assert (= temp10958_130 (select ARGNAME_stride_NAMEEND_VAL temp10958_129)))
(assert (= temp10958_131 #x0000000000000000))
(assert (= temp10958_132 #x0000000000000005))
(assert (= temp10958_133 temp10958_132))
(assert (= temp10958_134 (select ARGNAME_stride_NAMEEND_VAL temp10958_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10958_114 temp10958_111)
             (bvsle temp10958_118 temp10958_115)
             (bvsle temp10958_122 temp10958_119)
             (bvsle temp10958_126 temp10958_123)
             (bvsle temp10958_130 temp10958_127)
             (bvsle temp10958_134 temp10958_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10958_135 #x0000000000000000))
(assert (= var1191735 temp10958_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10958_136 #x0000000000000001))
(assert (= var1191747 temp10958_136))
(assert (= temp10958_137 #x0000000000000000))
(assert (= var1179826 temp10958_137))
(assert (= temp10958_138 #x0000000000000000))
(assert (= temp10958_139 temp10958_138))
(assert (= temp10958_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10958_139)))
(assert (= temp10958_141 #x0000000000000001))
(assert (= temp10958_142 temp10958_141))
(assert (= temp10958_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10958_142)))
(assert (= temp10958_144 #x0000000000000002))
(assert (= temp10958_145 temp10958_144))
(assert (= temp10958_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10958_145)))
(assert (= temp10958_147 #x0000000000000003))
(assert (= temp10958_148 temp10958_147))
(assert (= temp10958_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10958_148)))
(assert (= temp10958_150 #x0000000000000004))
(assert (= temp10958_151 temp10958_150))
(assert (= temp10958_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10958_151)))
(assert (= temp10958_153 #x0000000000000005))
(assert (= temp10958_154 temp10958_153))
(assert (= temp10958_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10958_154)))
(assert (= temp10958_157 var1179826))
(assert (= temp10958_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10958_157)))
(assert (= temp10958_156 temp10958_158))
(assert (= var1191780
   (ite (bvslt temp10958_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10958_159 #x0000000000000000))
(assert (= var1191780 temp10958_159))
(assert (= temp10958_160 #x0000000000000000))
(assert (= var1179826 temp10958_160))
(assert (= temp10958_162 var1179826))
(assert (= temp10958_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10958_162)))
(assert (= temp10958_161 temp10958_163))
(assert (= var1191802 (bvsmod temp10958_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10958_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10958_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10958_165 #x0000000000000001))
(assert (= var1191803 temp10958_165))
(assert (= temp10958_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10958_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10958_167 #x0000000000000001))
(assert (= var1191823 temp10958_167))
(assert (= temp10958_168 #x0000000000000001))
(assert (= var1180714 temp10958_168))
(assert (= temp10958_169 #x0000000000000000))
(assert (= temp10958_170 temp10958_169))
(assert (= temp10958_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10958_170)))
(assert (= temp10958_172 #x0000000000000001))
(assert (= temp10958_173 temp10958_172))
(assert (= temp10958_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10958_173)))
(assert (= temp10958_175 #x0000000000000002))
(assert (= temp10958_176 temp10958_175))
(assert (= temp10958_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10958_176)))
(assert (= temp10958_178 #x0000000000000003))
(assert (= temp10958_179 temp10958_178))
(assert (= temp10958_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10958_179)))
(assert (= temp10958_181 #x0000000000000004))
(assert (= temp10958_182 temp10958_181))
(assert (= temp10958_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10958_182)))
(assert (= temp10958_184 #x0000000000000005))
(assert (= temp10958_185 temp10958_184))
(assert (= temp10958_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10958_185)))
(assert (= temp10958_187 #x0000000000000000))
(assert (= temp10958_188
   (ite (bvslt var1180714 temp10958_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10958_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10958_188)))
(assert (= var1191831 temp10958_189))
(assert (bvslt (ite (bvslt var1180714 temp10958_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10958_190 #x0000000000000001))
(assert (= var1180714 temp10958_190))
(assert (= temp10958_192 var1180714))
(assert (= temp10958_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10958_192)))
(assert (= temp10958_191 temp10958_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10958_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10958_194 #x0000000000000001))
(assert (= var1191836 temp10958_194))
(assert (= temp10958_195 #x0000000000000000))
(assert (= var1179826 temp10958_195))
(assert (= temp10958_197 var1179826))
(assert (= temp10958_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10958_197)))
(assert (= temp10958_196 temp10958_198))
(assert (= temp10958_199 #x0000000000000002))
(assert (= var1586025 temp10958_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10958_200 #x0000000000000001))
(assert (= var1191993 temp10958_200))
(assert (= temp10958_201 #x0000000000000001))
(assert (= var2700303 temp10958_201))
(assert (= temp10958_202 #x0000000000000001))
(assert (= var2962447 temp10958_202))
(assert (= temp10958_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10958_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10958_204 #x0000000000000001))
(assert (= var211058 temp10958_204))
(assert (= temp10958_205 #x0000000000000001))
(assert (= var211188 temp10958_205))
(assert (= var3879401 var211188))
(assert (= temp10958_206 #x0000000000000000))
(assert (= var3866802 temp10958_206))
(assert (= temp10958_207 #x0000000000000000))
(assert (= temp10958_208
   (ite (bvslt var3866802 temp10958_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10958_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10958_208)))
(assert (= var3879420 temp10958_209))
(assert (bvslt (ite (bvslt var3866802 temp10958_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10958_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10958_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10958_211 #x0000000000000000))
(assert (= var3879421 temp10958_211))
(assert (= temp10958_212 #x0000000000000001))
(assert (= var3867690 temp10958_212))
(assert (= temp10958_213 #x0000000000000000))
(assert (= temp10958_214
   (ite (bvslt var3867690 temp10958_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10958_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10958_214)))
(assert (= var3879423 temp10958_215))
(assert (bvslt (ite (bvslt var3867690 temp10958_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10958_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10958_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10958_217 #x0000000000000001))
(assert (= var3879424 temp10958_217))
(assert (= temp10958_218 #x0000000000000000))
(assert (= var4133117 temp10958_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10958_219 #x0000000000000002))
(assert (= var4339331 temp10958_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10958_220 #x0000000000000000))
(assert (= var4404892 temp10958_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var5058960 var211201))
(assert (= var5321104 var211201))
(assert (= temp10958_221 #x0000000000000001))
(assert (= var211058 temp10958_221))
(model-add temp10958_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10958_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10958_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10958_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




