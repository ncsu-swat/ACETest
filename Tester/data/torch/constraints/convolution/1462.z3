(declare-fun temp10744_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10744_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10744_3 () (_ BitVec 64))
(declare-fun temp10744_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10744_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10744_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10744_7 () (_ BitVec 64))
(declare-fun temp10744_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10744_9 () (_ BitVec 64))
(declare-fun temp10744_10 () (_ BitVec 64))
(declare-fun temp10744_11 () (_ BitVec 64))
(declare-fun temp10744_12 () (_ BitVec 64))
(declare-fun temp10744_13 () (_ BitVec 64))
(declare-fun temp10744_14 () (_ BitVec 64))
(declare-fun temp10744_15 () (_ BitVec 64))
(declare-fun temp10744_16 () (_ BitVec 64))
(declare-fun temp10744_17 () (_ BitVec 64))
(declare-fun temp10744_18 () (_ BitVec 64))
(declare-fun temp10744_19 () (_ BitVec 64))
(declare-fun temp10744_20 () (_ BitVec 64))
(declare-fun temp10744_21 () (_ BitVec 64))
(declare-fun temp10744_22 () (_ BitVec 64))
(declare-fun temp10744_23 () (_ BitVec 64))
(declare-fun temp10744_24 () (_ BitVec 64))
(declare-fun temp10744_25 () (_ BitVec 64))
(declare-fun temp10744_26 () (_ BitVec 64))
(declare-fun temp10744_27 () (_ BitVec 64))
(declare-fun temp10744_28 () (_ BitVec 64))
(declare-fun temp10744_29 () (_ BitVec 64))
(declare-fun temp10744_30 () (_ BitVec 64))
(declare-fun temp10744_31 () (_ BitVec 64))
(declare-fun temp10744_32 () (_ BitVec 64))
(declare-fun temp10744_33 () (_ BitVec 64))
(declare-fun temp10744_34 () (_ BitVec 64))
(declare-fun temp10744_35 () (_ BitVec 64))
(declare-fun temp10744_36 () (_ BitVec 64))
(declare-fun temp10744_37 () (_ BitVec 64))
(declare-fun temp10744_38 () (_ BitVec 64))
(declare-fun temp10744_39 () (_ BitVec 64))
(declare-fun temp10744_40 () (_ BitVec 64))
(declare-fun temp10744_41 () (_ BitVec 64))
(declare-fun temp10744_42 () (_ BitVec 64))
(declare-fun temp10744_43 () (_ BitVec 64))
(declare-fun temp10744_44 () (_ BitVec 64))
(declare-fun temp10744_45 () (_ BitVec 64))
(declare-fun temp10744_46 () (_ BitVec 64))
(declare-fun temp10744_47 () (_ BitVec 64))
(declare-fun temp10744_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10744_49 () (_ BitVec 64))
(declare-fun temp10744_50 () (_ BitVec 64))
(declare-fun temp10744_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10744_52 () (_ BitVec 64))
(declare-fun temp10744_53 () (_ BitVec 64))
(declare-fun temp10744_54 () (_ BitVec 64))
(declare-fun temp10744_55 () (_ BitVec 64))
(declare-fun temp10744_56 () (_ BitVec 64))
(declare-fun temp10744_57 () (_ BitVec 64))
(declare-fun temp10744_58 () (_ BitVec 64))
(declare-fun temp10744_59 () (_ BitVec 64))
(declare-fun temp10744_60 () (_ BitVec 64))
(declare-fun temp10744_61 () (_ BitVec 64))
(declare-fun temp10744_62 () (_ BitVec 64))
(declare-fun temp10744_63 () (_ BitVec 64))
(declare-fun temp10744_64 () (_ BitVec 64))
(declare-fun temp10744_65 () (_ BitVec 64))
(declare-fun temp10744_66 () (_ BitVec 64))
(declare-fun temp10744_67 () (_ BitVec 64))
(declare-fun temp10744_68 () (_ BitVec 64))
(declare-fun temp10744_69 () (_ BitVec 64))
(declare-fun temp10744_70 () (_ BitVec 64))
(declare-fun temp10744_71 () (_ BitVec 64))
(declare-fun temp10744_72 () (_ BitVec 64))
(declare-fun temp10744_73 () (_ BitVec 64))
(declare-fun temp10744_74 () (_ BitVec 64))
(declare-fun temp10744_75 () (_ BitVec 64))
(declare-fun temp10744_76 () (_ BitVec 64))
(declare-fun temp10744_77 () (_ BitVec 64))
(declare-fun temp10744_78 () (_ BitVec 64))
(declare-fun temp10744_79 () (_ BitVec 64))
(declare-fun temp10744_80 () (_ BitVec 64))
(declare-fun temp10744_81 () (_ BitVec 64))
(declare-fun temp10744_82 () (_ BitVec 64))
(declare-fun temp10744_83 () (_ BitVec 64))
(declare-fun temp10744_84 () (_ BitVec 64))
(declare-fun temp10744_85 () (_ BitVec 64))
(declare-fun temp10744_86 () (_ BitVec 64))
(declare-fun temp10744_87 () (_ BitVec 64))
(declare-fun temp10744_88 () (_ BitVec 64))
(declare-fun temp10744_89 () (_ BitVec 64))
(declare-fun temp10744_90 () (_ BitVec 64))
(declare-fun temp10744_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10744_92 () (_ BitVec 64))
(declare-fun temp10744_93 () (_ BitVec 64))
(declare-fun temp10744_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10744_95 () (_ BitVec 64))
(declare-fun temp10744_96 () (_ BitVec 64))
(declare-fun temp10744_97 () (_ BitVec 64))
(declare-fun temp10744_98 () (_ BitVec 64))
(declare-fun temp10744_99 () (_ BitVec 64))
(declare-fun temp10744_100 () (_ BitVec 64))
(declare-fun temp10744_101 () (_ BitVec 64))
(declare-fun temp10744_102 () (_ BitVec 64))
(declare-fun temp10744_103 () (_ BitVec 64))
(declare-fun temp10744_104 () (_ BitVec 64))
(declare-fun temp10744_105 () (_ BitVec 64))
(declare-fun temp10744_106 () (_ BitVec 64))
(declare-fun temp10744_107 () (_ BitVec 64))
(declare-fun temp10744_108 () (_ BitVec 64))
(declare-fun temp10744_109 () (_ BitVec 64))
(declare-fun temp10744_110 () (_ BitVec 64))
(declare-fun temp10744_111 () (_ BitVec 64))
(declare-fun temp10744_112 () (_ BitVec 64))
(declare-fun temp10744_113 () (_ BitVec 64))
(declare-fun temp10744_114 () (_ BitVec 64))
(declare-fun temp10744_115 () (_ BitVec 64))
(declare-fun temp10744_116 () (_ BitVec 64))
(declare-fun temp10744_117 () (_ BitVec 64))
(declare-fun temp10744_118 () (_ BitVec 64))
(declare-fun temp10744_119 () (_ BitVec 64))
(declare-fun temp10744_120 () (_ BitVec 64))
(declare-fun temp10744_121 () (_ BitVec 64))
(declare-fun temp10744_122 () (_ BitVec 64))
(declare-fun temp10744_123 () (_ BitVec 64))
(declare-fun temp10744_124 () (_ BitVec 64))
(declare-fun temp10744_125 () (_ BitVec 64))
(declare-fun temp10744_126 () (_ BitVec 64))
(declare-fun temp10744_127 () (_ BitVec 64))
(declare-fun temp10744_128 () (_ BitVec 64))
(declare-fun temp10744_129 () (_ BitVec 64))
(declare-fun temp10744_130 () (_ BitVec 64))
(declare-fun temp10744_131 () (_ BitVec 64))
(declare-fun temp10744_132 () (_ BitVec 64))
(declare-fun temp10744_133 () (_ BitVec 64))
(declare-fun temp10744_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10744_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10744_136 () (_ BitVec 64))
(declare-fun temp10744_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10744_138 () (_ BitVec 64))
(declare-fun temp10744_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10744_140 () (_ BitVec 64))
(declare-fun temp10744_141 () (_ BitVec 64))
(declare-fun temp10744_142 () (_ BitVec 64))
(declare-fun temp10744_143 () (_ BitVec 64))
(declare-fun temp10744_144 () (_ BitVec 64))
(declare-fun temp10744_145 () (_ BitVec 64))
(declare-fun temp10744_146 () (_ BitVec 64))
(declare-fun temp10744_147 () (_ BitVec 64))
(declare-fun temp10744_148 () (_ BitVec 64))
(declare-fun temp10744_149 () (_ BitVec 64))
(declare-fun temp10744_150 () (_ BitVec 64))
(declare-fun temp10744_151 () (_ BitVec 64))
(declare-fun temp10744_152 () (_ BitVec 64))
(declare-fun temp10744_153 () (_ BitVec 64))
(declare-fun temp10744_154 () (_ BitVec 64))
(declare-fun temp10744_155 () (_ BitVec 64))
(declare-fun temp10744_157 () (_ BitVec 64))
(declare-fun temp10744_158 () (_ BitVec 64))
(declare-fun temp10744_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10744_159 () (_ BitVec 64))
(declare-fun temp10744_160 () (_ BitVec 64))
(declare-fun temp10744_162 () (_ BitVec 64))
(declare-fun temp10744_163 () (_ BitVec 64))
(declare-fun temp10744_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10744_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10744_165 () (_ BitVec 64))
(declare-fun temp10744_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10744_167 () (_ BitVec 64))
(declare-fun temp10744_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10744_169 () (_ BitVec 64))
(declare-fun temp10744_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10744_171 () (_ BitVec 64))
(declare-fun temp10744_172 () (_ BitVec 64))
(declare-fun temp10744_173 () (_ BitVec 64))
(declare-fun temp10744_174 () (_ BitVec 64))
(declare-fun temp10744_175 () (_ BitVec 64))
(declare-fun temp10744_176 () (_ BitVec 64))
(declare-fun temp10744_177 () (_ BitVec 64))
(declare-fun temp10744_178 () (_ BitVec 64))
(declare-fun temp10744_179 () (_ BitVec 64))
(declare-fun temp10744_180 () (_ BitVec 64))
(declare-fun temp10744_181 () (_ BitVec 64))
(declare-fun temp10744_182 () (_ BitVec 64))
(declare-fun temp10744_183 () (_ BitVec 64))
(declare-fun temp10744_184 () (_ BitVec 64))
(declare-fun temp10744_185 () (_ BitVec 64))
(declare-fun temp10744_186 () (_ BitVec 64))
(declare-fun temp10744_187 () (_ BitVec 64))
(declare-fun temp10744_188 () (_ BitVec 64))
(declare-fun temp10744_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10744_190 () (_ BitVec 64))
(declare-fun temp10744_192 () (_ BitVec 64))
(declare-fun temp10744_193 () (_ BitVec 64))
(declare-fun temp10744_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10744_194 () (_ BitVec 64))
(declare-fun temp10744_195 () (_ BitVec 64))
(declare-fun temp10744_197 () (_ BitVec 64))
(declare-fun temp10744_198 () (_ BitVec 64))
(declare-fun temp10744_196 () (_ BitVec 64))
(declare-fun temp10744_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10744_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10744_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10744_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10744_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10744_204 () (_ BitVec 64))
(declare-fun temp10744_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10744_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10744_207 () (_ BitVec 64))
(declare-fun temp10744_208 () (_ BitVec 64))
(declare-fun temp10744_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10744_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10744_211 () (_ BitVec 64))
(declare-fun temp10744_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10744_213 () (_ BitVec 64))
(declare-fun temp10744_214 () (_ BitVec 64))
(declare-fun temp10744_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10744_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10744_217 () (_ BitVec 64))
(declare-fun temp10744_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10744_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10744_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var4600208 () (_ BitVec 64))
(declare-fun var211890 () (_ BitVec 64))
(declare-fun temp10744_221 () (_ BitVec 64))
(declare-fun var211891 () (_ BitVec 64))
(declare-fun temp10744_222 () (_ BitVec 64))
(assert (= temp10744_1 #x0000000000000001))
(assert (= var77203 temp10744_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10744_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10744_2)))
(assert (= temp10744_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10744_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10744_4 #x0000000000000000))
(assert (= var210941 temp10744_4))
(assert (= temp10744_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10744_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10744_6 #x0000000000000000))
(assert (= var210986 temp10744_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10744_7 #x0000000000000000))
(assert (= temp10744_8 temp10744_7))
(assert (= temp10744_9 (select ARGNAME_padding_NAMEEND_VAL temp10744_8)))
(assert (= temp10744_10 #x0000000000000001))
(assert (= temp10744_11 temp10744_10))
(assert (= temp10744_12 (select ARGNAME_padding_NAMEEND_VAL temp10744_11)))
(assert (= temp10744_13 #x0000000000000002))
(assert (= temp10744_14 temp10744_13))
(assert (= temp10744_15 (select ARGNAME_padding_NAMEEND_VAL temp10744_14)))
(assert (= temp10744_16 #x0000000000000003))
(assert (= temp10744_17 temp10744_16))
(assert (= temp10744_18 (select ARGNAME_padding_NAMEEND_VAL temp10744_17)))
(assert (= temp10744_19 #x0000000000000004))
(assert (= temp10744_20 temp10744_19))
(assert (= temp10744_21 (select ARGNAME_padding_NAMEEND_VAL temp10744_20)))
(assert (= temp10744_22 #x0000000000000005))
(assert (= temp10744_23 temp10744_22))
(assert (= temp10744_24 (select ARGNAME_padding_NAMEEND_VAL temp10744_23)))
(assert (= temp10744_25 #x0000000000000000))
(assert (= temp10744_26 #x0000000000000000))
(assert (= temp10744_27 temp10744_26))
(assert (= temp10744_28 (select ARGNAME_padding_NAMEEND_VAL temp10744_27)))
(assert (= temp10744_29 #x0000000000000000))
(assert (= temp10744_30 #x0000000000000001))
(assert (= temp10744_31 temp10744_30))
(assert (= temp10744_32 (select ARGNAME_padding_NAMEEND_VAL temp10744_31)))
(assert (= temp10744_33 #x0000000000000000))
(assert (= temp10744_34 #x0000000000000002))
(assert (= temp10744_35 temp10744_34))
(assert (= temp10744_36 (select ARGNAME_padding_NAMEEND_VAL temp10744_35)))
(assert (= temp10744_37 #x0000000000000000))
(assert (= temp10744_38 #x0000000000000003))
(assert (= temp10744_39 temp10744_38))
(assert (= temp10744_40 (select ARGNAME_padding_NAMEEND_VAL temp10744_39)))
(assert (= temp10744_41 #x0000000000000000))
(assert (= temp10744_42 #x0000000000000004))
(assert (= temp10744_43 temp10744_42))
(assert (= temp10744_44 (select ARGNAME_padding_NAMEEND_VAL temp10744_43)))
(assert (= temp10744_45 #x0000000000000000))
(assert (= temp10744_46 #x0000000000000005))
(assert (= temp10744_47 temp10744_46))
(assert (= temp10744_48 (select ARGNAME_padding_NAMEEND_VAL temp10744_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10744_28 temp10744_25)
             (bvslt temp10744_32 temp10744_29)
             (bvslt temp10744_36 temp10744_33)
             (bvslt temp10744_40 temp10744_37)
             (bvslt temp10744_44 temp10744_41)
             (bvslt temp10744_48 temp10744_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10744_49 #x0000000000000000))
(assert (= var1191714 temp10744_49))
(assert (= temp10744_50 #x0000000000000000))
(assert (= temp10744_51 temp10744_50))
(assert (= temp10744_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10744_51)))
(assert (= temp10744_53 #x0000000000000001))
(assert (= temp10744_54 temp10744_53))
(assert (= temp10744_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10744_54)))
(assert (= temp10744_56 #x0000000000000002))
(assert (= temp10744_57 temp10744_56))
(assert (= temp10744_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10744_57)))
(assert (= temp10744_59 #x0000000000000003))
(assert (= temp10744_60 temp10744_59))
(assert (= temp10744_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10744_60)))
(assert (= temp10744_62 #x0000000000000004))
(assert (= temp10744_63 temp10744_62))
(assert (= temp10744_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10744_63)))
(assert (= temp10744_65 #x0000000000000005))
(assert (= temp10744_66 temp10744_65))
(assert (= temp10744_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10744_66)))
(assert (= temp10744_68 #x0000000000000000))
(assert (= temp10744_69 #x0000000000000000))
(assert (= temp10744_70 temp10744_69))
(assert (= temp10744_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10744_70)))
(assert (= temp10744_72 #x0000000000000000))
(assert (= temp10744_73 #x0000000000000001))
(assert (= temp10744_74 temp10744_73))
(assert (= temp10744_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10744_74)))
(assert (= temp10744_76 #x0000000000000000))
(assert (= temp10744_77 #x0000000000000002))
(assert (= temp10744_78 temp10744_77))
(assert (= temp10744_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10744_78)))
(assert (= temp10744_80 #x0000000000000000))
(assert (= temp10744_81 #x0000000000000003))
(assert (= temp10744_82 temp10744_81))
(assert (= temp10744_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10744_82)))
(assert (= temp10744_84 #x0000000000000000))
(assert (= temp10744_85 #x0000000000000004))
(assert (= temp10744_86 temp10744_85))
(assert (= temp10744_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10744_86)))
(assert (= temp10744_88 #x0000000000000000))
(assert (= temp10744_89 #x0000000000000005))
(assert (= temp10744_90 temp10744_89))
(assert (= temp10744_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10744_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10744_71 temp10744_68)
             (bvslt temp10744_75 temp10744_72)
             (bvslt temp10744_79 temp10744_76)
             (bvslt temp10744_83 temp10744_80)
             (bvslt temp10744_87 temp10744_84)
             (bvslt temp10744_91 temp10744_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10744_92 #x0000000000000000))
(assert (= var1191725 temp10744_92))
(assert (= temp10744_93 #x0000000000000000))
(assert (= temp10744_94 temp10744_93))
(assert (= temp10744_95 (select ARGNAME_stride_NAMEEND_VAL temp10744_94)))
(assert (= temp10744_96 #x0000000000000001))
(assert (= temp10744_97 temp10744_96))
(assert (= temp10744_98 (select ARGNAME_stride_NAMEEND_VAL temp10744_97)))
(assert (= temp10744_99 #x0000000000000002))
(assert (= temp10744_100 temp10744_99))
(assert (= temp10744_101 (select ARGNAME_stride_NAMEEND_VAL temp10744_100)))
(assert (= temp10744_102 #x0000000000000003))
(assert (= temp10744_103 temp10744_102))
(assert (= temp10744_104 (select ARGNAME_stride_NAMEEND_VAL temp10744_103)))
(assert (= temp10744_105 #x0000000000000004))
(assert (= temp10744_106 temp10744_105))
(assert (= temp10744_107 (select ARGNAME_stride_NAMEEND_VAL temp10744_106)))
(assert (= temp10744_108 #x0000000000000005))
(assert (= temp10744_109 temp10744_108))
(assert (= temp10744_110 (select ARGNAME_stride_NAMEEND_VAL temp10744_109)))
(assert (= temp10744_111 #x0000000000000000))
(assert (= temp10744_112 #x0000000000000000))
(assert (= temp10744_113 temp10744_112))
(assert (= temp10744_114 (select ARGNAME_stride_NAMEEND_VAL temp10744_113)))
(assert (= temp10744_115 #x0000000000000000))
(assert (= temp10744_116 #x0000000000000001))
(assert (= temp10744_117 temp10744_116))
(assert (= temp10744_118 (select ARGNAME_stride_NAMEEND_VAL temp10744_117)))
(assert (= temp10744_119 #x0000000000000000))
(assert (= temp10744_120 #x0000000000000002))
(assert (= temp10744_121 temp10744_120))
(assert (= temp10744_122 (select ARGNAME_stride_NAMEEND_VAL temp10744_121)))
(assert (= temp10744_123 #x0000000000000000))
(assert (= temp10744_124 #x0000000000000003))
(assert (= temp10744_125 temp10744_124))
(assert (= temp10744_126 (select ARGNAME_stride_NAMEEND_VAL temp10744_125)))
(assert (= temp10744_127 #x0000000000000000))
(assert (= temp10744_128 #x0000000000000004))
(assert (= temp10744_129 temp10744_128))
(assert (= temp10744_130 (select ARGNAME_stride_NAMEEND_VAL temp10744_129)))
(assert (= temp10744_131 #x0000000000000000))
(assert (= temp10744_132 #x0000000000000005))
(assert (= temp10744_133 temp10744_132))
(assert (= temp10744_134 (select ARGNAME_stride_NAMEEND_VAL temp10744_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10744_114 temp10744_111)
             (bvsle temp10744_118 temp10744_115)
             (bvsle temp10744_122 temp10744_119)
             (bvsle temp10744_126 temp10744_123)
             (bvsle temp10744_130 temp10744_127)
             (bvsle temp10744_134 temp10744_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10744_135 #x0000000000000000))
(assert (= var1191735 temp10744_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10744_136 #x0000000000000001))
(assert (= var1191747 temp10744_136))
(assert (= temp10744_137 #x0000000000000000))
(assert (= var1179826 temp10744_137))
(assert (= temp10744_138 #x0000000000000000))
(assert (= temp10744_139 temp10744_138))
(assert (= temp10744_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10744_139)))
(assert (= temp10744_141 #x0000000000000001))
(assert (= temp10744_142 temp10744_141))
(assert (= temp10744_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10744_142)))
(assert (= temp10744_144 #x0000000000000002))
(assert (= temp10744_145 temp10744_144))
(assert (= temp10744_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10744_145)))
(assert (= temp10744_147 #x0000000000000003))
(assert (= temp10744_148 temp10744_147))
(assert (= temp10744_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10744_148)))
(assert (= temp10744_150 #x0000000000000004))
(assert (= temp10744_151 temp10744_150))
(assert (= temp10744_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10744_151)))
(assert (= temp10744_153 #x0000000000000005))
(assert (= temp10744_154 temp10744_153))
(assert (= temp10744_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10744_154)))
(assert (= temp10744_157 var1179826))
(assert (= temp10744_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10744_157)))
(assert (= temp10744_156 temp10744_158))
(assert (= var1191780
   (ite (bvslt temp10744_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10744_159 #x0000000000000000))
(assert (= var1191780 temp10744_159))
(assert (= temp10744_160 #x0000000000000000))
(assert (= var1179826 temp10744_160))
(assert (= temp10744_162 var1179826))
(assert (= temp10744_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10744_162)))
(assert (= temp10744_161 temp10744_163))
(assert (= var1191802 (bvsmod temp10744_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10744_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10744_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10744_165 #x0000000000000001))
(assert (= var1191803 temp10744_165))
(assert (= temp10744_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10744_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10744_167 #x0000000000000001))
(assert (= var1191823 temp10744_167))
(assert (= temp10744_168 #x0000000000000001))
(assert (= var1180714 temp10744_168))
(assert (= temp10744_169 #x0000000000000000))
(assert (= temp10744_170 temp10744_169))
(assert (= temp10744_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10744_170)))
(assert (= temp10744_172 #x0000000000000001))
(assert (= temp10744_173 temp10744_172))
(assert (= temp10744_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10744_173)))
(assert (= temp10744_175 #x0000000000000002))
(assert (= temp10744_176 temp10744_175))
(assert (= temp10744_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10744_176)))
(assert (= temp10744_178 #x0000000000000003))
(assert (= temp10744_179 temp10744_178))
(assert (= temp10744_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10744_179)))
(assert (= temp10744_181 #x0000000000000004))
(assert (= temp10744_182 temp10744_181))
(assert (= temp10744_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10744_182)))
(assert (= temp10744_184 #x0000000000000005))
(assert (= temp10744_185 temp10744_184))
(assert (= temp10744_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10744_185)))
(assert (= temp10744_187 #x0000000000000000))
(assert (= temp10744_188
   (ite (bvslt var1180714 temp10744_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10744_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10744_188)))
(assert (= var1191831 temp10744_189))
(assert (bvslt (ite (bvslt var1180714 temp10744_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10744_190 #x0000000000000001))
(assert (= var1180714 temp10744_190))
(assert (= temp10744_192 var1180714))
(assert (= temp10744_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10744_192)))
(assert (= temp10744_191 temp10744_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10744_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10744_194 #x0000000000000001))
(assert (= var1191836 temp10744_194))
(assert (= temp10744_195 #x0000000000000000))
(assert (= var1179826 temp10744_195))
(assert (= temp10744_197 var1179826))
(assert (= temp10744_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10744_197)))
(assert (= temp10744_196 temp10744_198))
(assert (= temp10744_199 #x0000000000000002))
(assert (= var1586025 temp10744_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10744_200 #x0000000000000001))
(assert (= var1191993 temp10744_200))
(assert (= temp10744_201 #x0000000000000001))
(assert (= var2700303 temp10744_201))
(assert (= temp10744_202 #x0000000000000001))
(assert (= var2962447 temp10744_202))
(assert (= temp10744_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10744_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10744_204 #x0000000000000001))
(assert (= var211058 temp10744_204))
(assert (= temp10744_205 #x0000000000000001))
(assert (= var211188 temp10744_205))
(assert (= var3879401 var211188))
(assert (= temp10744_206 #x0000000000000000))
(assert (= var3866802 temp10744_206))
(assert (= temp10744_207 #x0000000000000000))
(assert (= temp10744_208
   (ite (bvslt var3866802 temp10744_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10744_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10744_208)))
(assert (= var3879420 temp10744_209))
(assert (bvslt (ite (bvslt var3866802 temp10744_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10744_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10744_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10744_211 #x0000000000000000))
(assert (= var3879421 temp10744_211))
(assert (= temp10744_212 #x0000000000000001))
(assert (= var3867690 temp10744_212))
(assert (= temp10744_213 #x0000000000000000))
(assert (= temp10744_214
   (ite (bvslt var3867690 temp10744_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10744_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10744_214)))
(assert (= var3879423 temp10744_215))
(assert (bvslt (ite (bvslt var3867690 temp10744_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10744_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10744_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10744_217 #x0000000000000001))
(assert (= var3879424 temp10744_217))
(assert (= temp10744_218 #x0000000000000000))
(assert (= var4133117 temp10744_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10744_219 #x0000000000000002))
(assert (= var4339331 temp10744_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10744_220 #x0000000000000000))
(assert (= var4404892 temp10744_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var4600208 var211201))
(assert (= var211890 var210913))
(assert (= temp10744_221 #x0000000000000000))
(assert (= var211891
   (ite (distinct var211890 temp10744_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10744_222 #x0000000000000001))
(assert (= var211058 temp10744_222))
(model-add temp10744_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10744_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10744_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10744_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





