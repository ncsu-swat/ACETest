(declare-fun temp673_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp673_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp673_3 () (_ BitVec 64))
(declare-fun temp673_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp673_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp673_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp673_7 () (_ BitVec 64))
(declare-fun temp673_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp673_9 () (_ BitVec 64))
(declare-fun temp673_10 () (_ BitVec 64))
(declare-fun temp673_11 () (_ BitVec 64))
(declare-fun temp673_12 () (_ BitVec 64))
(declare-fun temp673_13 () (_ BitVec 64))
(declare-fun temp673_14 () (_ BitVec 64))
(declare-fun temp673_15 () (_ BitVec 64))
(declare-fun temp673_16 () (_ BitVec 64))
(declare-fun temp673_17 () (_ BitVec 64))
(declare-fun temp673_18 () (_ BitVec 64))
(declare-fun temp673_19 () (_ BitVec 64))
(declare-fun temp673_20 () (_ BitVec 64))
(declare-fun temp673_21 () (_ BitVec 64))
(declare-fun temp673_22 () (_ BitVec 64))
(declare-fun temp673_23 () (_ BitVec 64))
(declare-fun temp673_24 () (_ BitVec 64))
(declare-fun temp673_25 () (_ BitVec 64))
(declare-fun temp673_26 () (_ BitVec 64))
(declare-fun temp673_27 () (_ BitVec 64))
(declare-fun temp673_28 () (_ BitVec 64))
(declare-fun temp673_29 () (_ BitVec 64))
(declare-fun temp673_30 () (_ BitVec 64))
(declare-fun temp673_31 () (_ BitVec 64))
(declare-fun temp673_32 () (_ BitVec 64))
(declare-fun temp673_33 () (_ BitVec 64))
(declare-fun temp673_34 () (_ BitVec 64))
(declare-fun temp673_35 () (_ BitVec 64))
(declare-fun temp673_36 () (_ BitVec 64))
(declare-fun temp673_37 () (_ BitVec 64))
(declare-fun temp673_38 () (_ BitVec 64))
(declare-fun temp673_39 () (_ BitVec 64))
(declare-fun temp673_40 () (_ BitVec 64))
(declare-fun temp673_41 () (_ BitVec 64))
(declare-fun temp673_42 () (_ BitVec 64))
(declare-fun temp673_43 () (_ BitVec 64))
(declare-fun temp673_44 () (_ BitVec 64))
(declare-fun temp673_45 () (_ BitVec 64))
(declare-fun temp673_46 () (_ BitVec 64))
(declare-fun temp673_47 () (_ BitVec 64))
(declare-fun temp673_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp673_49 () (_ BitVec 64))
(declare-fun temp673_50 () (_ BitVec 64))
(declare-fun temp673_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp673_52 () (_ BitVec 64))
(declare-fun temp673_53 () (_ BitVec 64))
(declare-fun temp673_54 () (_ BitVec 64))
(declare-fun temp673_55 () (_ BitVec 64))
(declare-fun temp673_56 () (_ BitVec 64))
(declare-fun temp673_57 () (_ BitVec 64))
(declare-fun temp673_58 () (_ BitVec 64))
(declare-fun temp673_59 () (_ BitVec 64))
(declare-fun temp673_60 () (_ BitVec 64))
(declare-fun temp673_61 () (_ BitVec 64))
(declare-fun temp673_62 () (_ BitVec 64))
(declare-fun temp673_63 () (_ BitVec 64))
(declare-fun temp673_64 () (_ BitVec 64))
(declare-fun temp673_65 () (_ BitVec 64))
(declare-fun temp673_66 () (_ BitVec 64))
(declare-fun temp673_67 () (_ BitVec 64))
(declare-fun temp673_68 () (_ BitVec 64))
(declare-fun temp673_69 () (_ BitVec 64))
(declare-fun temp673_70 () (_ BitVec 64))
(declare-fun temp673_71 () (_ BitVec 64))
(declare-fun temp673_72 () (_ BitVec 64))
(declare-fun temp673_73 () (_ BitVec 64))
(declare-fun temp673_74 () (_ BitVec 64))
(declare-fun temp673_75 () (_ BitVec 64))
(declare-fun temp673_76 () (_ BitVec 64))
(declare-fun temp673_77 () (_ BitVec 64))
(declare-fun temp673_78 () (_ BitVec 64))
(declare-fun temp673_79 () (_ BitVec 64))
(declare-fun temp673_80 () (_ BitVec 64))
(declare-fun temp673_81 () (_ BitVec 64))
(declare-fun temp673_82 () (_ BitVec 64))
(declare-fun temp673_83 () (_ BitVec 64))
(declare-fun temp673_84 () (_ BitVec 64))
(declare-fun temp673_85 () (_ BitVec 64))
(declare-fun temp673_86 () (_ BitVec 64))
(declare-fun temp673_87 () (_ BitVec 64))
(declare-fun temp673_88 () (_ BitVec 64))
(declare-fun temp673_89 () (_ BitVec 64))
(declare-fun temp673_90 () (_ BitVec 64))
(declare-fun temp673_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp673_92 () (_ BitVec 64))
(declare-fun temp673_93 () (_ BitVec 64))
(declare-fun temp673_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp673_95 () (_ BitVec 64))
(declare-fun temp673_96 () (_ BitVec 64))
(declare-fun temp673_97 () (_ BitVec 64))
(declare-fun temp673_98 () (_ BitVec 64))
(declare-fun temp673_99 () (_ BitVec 64))
(declare-fun temp673_100 () (_ BitVec 64))
(declare-fun temp673_101 () (_ BitVec 64))
(declare-fun temp673_102 () (_ BitVec 64))
(declare-fun temp673_103 () (_ BitVec 64))
(declare-fun temp673_104 () (_ BitVec 64))
(declare-fun temp673_105 () (_ BitVec 64))
(declare-fun temp673_106 () (_ BitVec 64))
(declare-fun temp673_107 () (_ BitVec 64))
(declare-fun temp673_108 () (_ BitVec 64))
(declare-fun temp673_109 () (_ BitVec 64))
(declare-fun temp673_110 () (_ BitVec 64))
(declare-fun temp673_111 () (_ BitVec 64))
(declare-fun temp673_112 () (_ BitVec 64))
(declare-fun temp673_113 () (_ BitVec 64))
(declare-fun temp673_114 () (_ BitVec 64))
(declare-fun temp673_115 () (_ BitVec 64))
(declare-fun temp673_116 () (_ BitVec 64))
(declare-fun temp673_117 () (_ BitVec 64))
(declare-fun temp673_118 () (_ BitVec 64))
(declare-fun temp673_119 () (_ BitVec 64))
(declare-fun temp673_120 () (_ BitVec 64))
(declare-fun temp673_121 () (_ BitVec 64))
(declare-fun temp673_122 () (_ BitVec 64))
(declare-fun temp673_123 () (_ BitVec 64))
(declare-fun temp673_124 () (_ BitVec 64))
(declare-fun temp673_125 () (_ BitVec 64))
(declare-fun temp673_126 () (_ BitVec 64))
(declare-fun temp673_127 () (_ BitVec 64))
(declare-fun temp673_128 () (_ BitVec 64))
(declare-fun temp673_129 () (_ BitVec 64))
(declare-fun temp673_130 () (_ BitVec 64))
(declare-fun temp673_131 () (_ BitVec 64))
(declare-fun temp673_132 () (_ BitVec 64))
(declare-fun temp673_133 () (_ BitVec 64))
(declare-fun temp673_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp673_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp673_136 () (_ BitVec 64))
(declare-fun temp673_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp673_138 () (_ BitVec 64))
(declare-fun temp673_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp673_140 () (_ BitVec 64))
(declare-fun temp673_141 () (_ BitVec 64))
(declare-fun temp673_142 () (_ BitVec 64))
(declare-fun temp673_143 () (_ BitVec 64))
(declare-fun temp673_144 () (_ BitVec 64))
(declare-fun temp673_145 () (_ BitVec 64))
(declare-fun temp673_146 () (_ BitVec 64))
(declare-fun temp673_147 () (_ BitVec 64))
(declare-fun temp673_148 () (_ BitVec 64))
(declare-fun temp673_149 () (_ BitVec 64))
(declare-fun temp673_150 () (_ BitVec 64))
(declare-fun temp673_151 () (_ BitVec 64))
(declare-fun temp673_152 () (_ BitVec 64))
(declare-fun temp673_153 () (_ BitVec 64))
(declare-fun temp673_154 () (_ BitVec 64))
(declare-fun temp673_155 () (_ BitVec 64))
(declare-fun temp673_157 () (_ BitVec 64))
(declare-fun temp673_158 () (_ BitVec 64))
(declare-fun temp673_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp673_159 () (_ BitVec 64))
(declare-fun temp673_160 () (_ BitVec 64))
(declare-fun temp673_162 () (_ BitVec 64))
(declare-fun temp673_163 () (_ BitVec 64))
(declare-fun temp673_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp673_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp673_165 () (_ BitVec 64))
(declare-fun temp673_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp673_167 () (_ BitVec 64))
(declare-fun temp673_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp673_169 () (_ BitVec 64))
(declare-fun temp673_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp673_171 () (_ BitVec 64))
(declare-fun temp673_172 () (_ BitVec 64))
(declare-fun temp673_173 () (_ BitVec 64))
(declare-fun temp673_174 () (_ BitVec 64))
(declare-fun temp673_175 () (_ BitVec 64))
(declare-fun temp673_176 () (_ BitVec 64))
(declare-fun temp673_177 () (_ BitVec 64))
(declare-fun temp673_178 () (_ BitVec 64))
(declare-fun temp673_179 () (_ BitVec 64))
(declare-fun temp673_180 () (_ BitVec 64))
(declare-fun temp673_181 () (_ BitVec 64))
(declare-fun temp673_182 () (_ BitVec 64))
(declare-fun temp673_183 () (_ BitVec 64))
(declare-fun temp673_184 () (_ BitVec 64))
(declare-fun temp673_185 () (_ BitVec 64))
(declare-fun temp673_186 () (_ BitVec 64))
(declare-fun temp673_187 () (_ BitVec 64))
(declare-fun temp673_188 () (_ BitVec 64))
(declare-fun temp673_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp673_190 () (_ BitVec 64))
(declare-fun temp673_192 () (_ BitVec 64))
(declare-fun temp673_193 () (_ BitVec 64))
(declare-fun temp673_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp673_194 () (_ BitVec 64))
(declare-fun temp673_195 () (_ BitVec 64))
(declare-fun temp673_197 () (_ BitVec 64))
(declare-fun temp673_198 () (_ BitVec 64))
(declare-fun temp673_196 () (_ BitVec 64))
(declare-fun temp673_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp673_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp673_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp673_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp673_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp673_204 () (_ BitVec 64))
(declare-fun temp673_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp673_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp673_207 () (_ BitVec 64))
(declare-fun temp673_208 () (_ BitVec 64))
(declare-fun temp673_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp673_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp673_211 () (_ BitVec 64))
(declare-fun temp673_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp673_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp673_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp673_216 () (_ BitVec 64))
(declare-fun temp673_215 () (_ BitVec 64))
(declare-fun temp673_217 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp673_218 () (_ BitVec 64))
(declare-fun temp673_219 () (_ BitVec 64))
(declare-fun temp673_220 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp673_221 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp673_222 () (_ BitVec 64))
(declare-fun temp673_224 () (_ BitVec 64))
(declare-fun temp673_223 () (_ BitVec 64))
(declare-fun temp673_225 () (_ BitVec 64))
(assert (= temp673_1 #x0000000000000001))
(assert (= var77203 temp673_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp673_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp673_2)))
(assert (= temp673_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp673_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp673_4 #x0000000000000000))
(assert (= var210941 temp673_4))
(assert (= temp673_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp673_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp673_6 #x0000000000000000))
(assert (= var210986 temp673_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp673_7 #x0000000000000000))
(assert (= temp673_8 temp673_7))
(assert (= temp673_9 (select ARGNAME_padding_NAMEEND_VAL temp673_8)))
(assert (= temp673_10 #x0000000000000001))
(assert (= temp673_11 temp673_10))
(assert (= temp673_12 (select ARGNAME_padding_NAMEEND_VAL temp673_11)))
(assert (= temp673_13 #x0000000000000002))
(assert (= temp673_14 temp673_13))
(assert (= temp673_15 (select ARGNAME_padding_NAMEEND_VAL temp673_14)))
(assert (= temp673_16 #x0000000000000003))
(assert (= temp673_17 temp673_16))
(assert (= temp673_18 (select ARGNAME_padding_NAMEEND_VAL temp673_17)))
(assert (= temp673_19 #x0000000000000004))
(assert (= temp673_20 temp673_19))
(assert (= temp673_21 (select ARGNAME_padding_NAMEEND_VAL temp673_20)))
(assert (= temp673_22 #x0000000000000005))
(assert (= temp673_23 temp673_22))
(assert (= temp673_24 (select ARGNAME_padding_NAMEEND_VAL temp673_23)))
(assert (= temp673_25 #x0000000000000000))
(assert (= temp673_26 #x0000000000000000))
(assert (= temp673_27 temp673_26))
(assert (= temp673_28 (select ARGNAME_padding_NAMEEND_VAL temp673_27)))
(assert (= temp673_29 #x0000000000000000))
(assert (= temp673_30 #x0000000000000001))
(assert (= temp673_31 temp673_30))
(assert (= temp673_32 (select ARGNAME_padding_NAMEEND_VAL temp673_31)))
(assert (= temp673_33 #x0000000000000000))
(assert (= temp673_34 #x0000000000000002))
(assert (= temp673_35 temp673_34))
(assert (= temp673_36 (select ARGNAME_padding_NAMEEND_VAL temp673_35)))
(assert (= temp673_37 #x0000000000000000))
(assert (= temp673_38 #x0000000000000003))
(assert (= temp673_39 temp673_38))
(assert (= temp673_40 (select ARGNAME_padding_NAMEEND_VAL temp673_39)))
(assert (= temp673_41 #x0000000000000000))
(assert (= temp673_42 #x0000000000000004))
(assert (= temp673_43 temp673_42))
(assert (= temp673_44 (select ARGNAME_padding_NAMEEND_VAL temp673_43)))
(assert (= temp673_45 #x0000000000000000))
(assert (= temp673_46 #x0000000000000005))
(assert (= temp673_47 temp673_46))
(assert (= temp673_48 (select ARGNAME_padding_NAMEEND_VAL temp673_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp673_28 temp673_25)
             (bvslt temp673_32 temp673_29)
             (bvslt temp673_36 temp673_33)
             (bvslt temp673_40 temp673_37)
             (bvslt temp673_44 temp673_41)
             (bvslt temp673_48 temp673_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp673_49 #x0000000000000000))
(assert (= var1191714 temp673_49))
(assert (= temp673_50 #x0000000000000000))
(assert (= temp673_51 temp673_50))
(assert (= temp673_52 (select ARGNAME_output_padding_NAMEEND_VAL temp673_51)))
(assert (= temp673_53 #x0000000000000001))
(assert (= temp673_54 temp673_53))
(assert (= temp673_55 (select ARGNAME_output_padding_NAMEEND_VAL temp673_54)))
(assert (= temp673_56 #x0000000000000002))
(assert (= temp673_57 temp673_56))
(assert (= temp673_58 (select ARGNAME_output_padding_NAMEEND_VAL temp673_57)))
(assert (= temp673_59 #x0000000000000003))
(assert (= temp673_60 temp673_59))
(assert (= temp673_61 (select ARGNAME_output_padding_NAMEEND_VAL temp673_60)))
(assert (= temp673_62 #x0000000000000004))
(assert (= temp673_63 temp673_62))
(assert (= temp673_64 (select ARGNAME_output_padding_NAMEEND_VAL temp673_63)))
(assert (= temp673_65 #x0000000000000005))
(assert (= temp673_66 temp673_65))
(assert (= temp673_67 (select ARGNAME_output_padding_NAMEEND_VAL temp673_66)))
(assert (= temp673_68 #x0000000000000000))
(assert (= temp673_69 #x0000000000000000))
(assert (= temp673_70 temp673_69))
(assert (= temp673_71 (select ARGNAME_output_padding_NAMEEND_VAL temp673_70)))
(assert (= temp673_72 #x0000000000000000))
(assert (= temp673_73 #x0000000000000001))
(assert (= temp673_74 temp673_73))
(assert (= temp673_75 (select ARGNAME_output_padding_NAMEEND_VAL temp673_74)))
(assert (= temp673_76 #x0000000000000000))
(assert (= temp673_77 #x0000000000000002))
(assert (= temp673_78 temp673_77))
(assert (= temp673_79 (select ARGNAME_output_padding_NAMEEND_VAL temp673_78)))
(assert (= temp673_80 #x0000000000000000))
(assert (= temp673_81 #x0000000000000003))
(assert (= temp673_82 temp673_81))
(assert (= temp673_83 (select ARGNAME_output_padding_NAMEEND_VAL temp673_82)))
(assert (= temp673_84 #x0000000000000000))
(assert (= temp673_85 #x0000000000000004))
(assert (= temp673_86 temp673_85))
(assert (= temp673_87 (select ARGNAME_output_padding_NAMEEND_VAL temp673_86)))
(assert (= temp673_88 #x0000000000000000))
(assert (= temp673_89 #x0000000000000005))
(assert (= temp673_90 temp673_89))
(assert (= temp673_91 (select ARGNAME_output_padding_NAMEEND_VAL temp673_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp673_71 temp673_68)
             (bvslt temp673_75 temp673_72)
             (bvslt temp673_79 temp673_76)
             (bvslt temp673_83 temp673_80)
             (bvslt temp673_87 temp673_84)
             (bvslt temp673_91 temp673_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp673_92 #x0000000000000000))
(assert (= var1191725 temp673_92))
(assert (= temp673_93 #x0000000000000000))
(assert (= temp673_94 temp673_93))
(assert (= temp673_95 (select ARGNAME_stride_NAMEEND_VAL temp673_94)))
(assert (= temp673_96 #x0000000000000001))
(assert (= temp673_97 temp673_96))
(assert (= temp673_98 (select ARGNAME_stride_NAMEEND_VAL temp673_97)))
(assert (= temp673_99 #x0000000000000002))
(assert (= temp673_100 temp673_99))
(assert (= temp673_101 (select ARGNAME_stride_NAMEEND_VAL temp673_100)))
(assert (= temp673_102 #x0000000000000003))
(assert (= temp673_103 temp673_102))
(assert (= temp673_104 (select ARGNAME_stride_NAMEEND_VAL temp673_103)))
(assert (= temp673_105 #x0000000000000004))
(assert (= temp673_106 temp673_105))
(assert (= temp673_107 (select ARGNAME_stride_NAMEEND_VAL temp673_106)))
(assert (= temp673_108 #x0000000000000005))
(assert (= temp673_109 temp673_108))
(assert (= temp673_110 (select ARGNAME_stride_NAMEEND_VAL temp673_109)))
(assert (= temp673_111 #x0000000000000000))
(assert (= temp673_112 #x0000000000000000))
(assert (= temp673_113 temp673_112))
(assert (= temp673_114 (select ARGNAME_stride_NAMEEND_VAL temp673_113)))
(assert (= temp673_115 #x0000000000000000))
(assert (= temp673_116 #x0000000000000001))
(assert (= temp673_117 temp673_116))
(assert (= temp673_118 (select ARGNAME_stride_NAMEEND_VAL temp673_117)))
(assert (= temp673_119 #x0000000000000000))
(assert (= temp673_120 #x0000000000000002))
(assert (= temp673_121 temp673_120))
(assert (= temp673_122 (select ARGNAME_stride_NAMEEND_VAL temp673_121)))
(assert (= temp673_123 #x0000000000000000))
(assert (= temp673_124 #x0000000000000003))
(assert (= temp673_125 temp673_124))
(assert (= temp673_126 (select ARGNAME_stride_NAMEEND_VAL temp673_125)))
(assert (= temp673_127 #x0000000000000000))
(assert (= temp673_128 #x0000000000000004))
(assert (= temp673_129 temp673_128))
(assert (= temp673_130 (select ARGNAME_stride_NAMEEND_VAL temp673_129)))
(assert (= temp673_131 #x0000000000000000))
(assert (= temp673_132 #x0000000000000005))
(assert (= temp673_133 temp673_132))
(assert (= temp673_134 (select ARGNAME_stride_NAMEEND_VAL temp673_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp673_114 temp673_111)
             (bvsle temp673_118 temp673_115)
             (bvsle temp673_122 temp673_119)
             (bvsle temp673_126 temp673_123)
             (bvsle temp673_130 temp673_127)
             (bvsle temp673_134 temp673_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp673_135 #x0000000000000000))
(assert (= var1191735 temp673_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp673_136 #x0000000000000001))
(assert (= var1191747 temp673_136))
(assert (= temp673_137 #x0000000000000000))
(assert (= var1179826 temp673_137))
(assert (= temp673_138 #x0000000000000000))
(assert (= temp673_139 temp673_138))
(assert (= temp673_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp673_139)))
(assert (= temp673_141 #x0000000000000001))
(assert (= temp673_142 temp673_141))
(assert (= temp673_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp673_142)))
(assert (= temp673_144 #x0000000000000002))
(assert (= temp673_145 temp673_144))
(assert (= temp673_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp673_145)))
(assert (= temp673_147 #x0000000000000003))
(assert (= temp673_148 temp673_147))
(assert (= temp673_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp673_148)))
(assert (= temp673_150 #x0000000000000004))
(assert (= temp673_151 temp673_150))
(assert (= temp673_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp673_151)))
(assert (= temp673_153 #x0000000000000005))
(assert (= temp673_154 temp673_153))
(assert (= temp673_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp673_154)))
(assert (= temp673_157 var1179826))
(assert (= temp673_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp673_157)))
(assert (= temp673_156 temp673_158))
(assert (= var1191780
   (ite (bvslt temp673_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp673_159 #x0000000000000000))
(assert (= var1191780 temp673_159))
(assert (= temp673_160 #x0000000000000000))
(assert (= var1179826 temp673_160))
(assert (= temp673_162 var1179826))
(assert (= temp673_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp673_162)))
(assert (= temp673_161 temp673_163))
(assert (= var1191802 (bvsmod temp673_161 ARGNAME_groups_NAMEEND)))
(assert (= temp673_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp673_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp673_165 #x0000000000000001))
(assert (= var1191803 temp673_165))
(assert (= temp673_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp673_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp673_167 #x0000000000000001))
(assert (= var1191823 temp673_167))
(assert (= temp673_168 #x0000000000000001))
(assert (= var1180714 temp673_168))
(assert (= temp673_169 #x0000000000000000))
(assert (= temp673_170 temp673_169))
(assert (= temp673_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp673_170)))
(assert (= temp673_172 #x0000000000000001))
(assert (= temp673_173 temp673_172))
(assert (= temp673_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp673_173)))
(assert (= temp673_175 #x0000000000000002))
(assert (= temp673_176 temp673_175))
(assert (= temp673_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp673_176)))
(assert (= temp673_178 #x0000000000000003))
(assert (= temp673_179 temp673_178))
(assert (= temp673_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp673_179)))
(assert (= temp673_181 #x0000000000000004))
(assert (= temp673_182 temp673_181))
(assert (= temp673_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp673_182)))
(assert (= temp673_184 #x0000000000000005))
(assert (= temp673_185 temp673_184))
(assert (= temp673_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp673_185)))
(assert (= temp673_187 #x0000000000000000))
(assert (= temp673_188
   (ite (bvslt var1180714 temp673_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp673_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp673_188)))
(assert (= var1191831 temp673_189))
(assert (bvslt (ite (bvslt var1180714 temp673_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp673_190 #x0000000000000001))
(assert (= var1180714 temp673_190))
(assert (= temp673_192 var1180714))
(assert (= temp673_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp673_192)))
(assert (= temp673_191 temp673_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp673_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp673_194 #x0000000000000001))
(assert (= var1191836 temp673_194))
(assert (= temp673_195 #x0000000000000000))
(assert (= var1179826 temp673_195))
(assert (= temp673_197 var1179826))
(assert (= temp673_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp673_197)))
(assert (= temp673_196 temp673_198))
(assert (= temp673_199 #x0000000000000002))
(assert (= var1586025 temp673_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp673_200 #x0000000000000001))
(assert (= var1191993 temp673_200))
(assert (= temp673_201 #x0000000000000001))
(assert (= var2700303 temp673_201))
(assert (= temp673_202 #x0000000000000001))
(assert (= var2962447 temp673_202))
(assert (= temp673_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp673_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp673_204 #x0000000000000001))
(assert (= var211058 temp673_204))
(assert (= temp673_205 #x0000000000000001))
(assert (= var211188 temp673_205))
(assert (= var3879401 var211188))
(assert (= temp673_206 #x0000000000000000))
(assert (= var3866802 temp673_206))
(assert (= temp673_207 #x0000000000000000))
(assert (= temp673_208
   (ite (bvslt var3866802 temp673_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp673_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp673_208)))
(assert (= var3879420 temp673_209))
(assert (bvslt (ite (bvslt var3866802 temp673_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp673_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp673_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp673_211 #x0000000000000001))
(assert (= var3879421 temp673_211))
(assert (= temp673_212 #x0000000000000000))
(assert (= var4079423 temp673_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp673_213 #x0000000000000002))
(assert (= var4208259 temp673_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp673_214 #x0000000000000000))
(assert (= var4273820 temp673_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp673_216 #xffffffffffffffff))
(assert (= temp673_215 temp673_216))
(assert (= temp673_217 #x0000000000000001))
(assert (= var197674 temp673_217))
(assert (= temp673_218 #x0000000000000000))
(assert (= temp673_219
   (ite (bvslt var197674 temp673_218)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp673_220 (select ARGNAME_input_NAMEEND_DIMSIZE temp673_219)))
(assert (= var211595 temp673_220))
(assert (bvslt (ite (bvslt var197674 temp673_218)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp673_221 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp673_221) #x0000000000000001 #x0000000000000000)))
(assert (= temp673_222 #x0000000000000001))
(assert (= var211596 temp673_222))
(assert (= temp673_224 #xffffffffffffffff))
(assert (= temp673_223 temp673_224))
(assert (= temp673_225 #x0000000000000001))
(assert (= var211058 temp673_225))
(model-add temp673_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp673_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp673_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp673_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




