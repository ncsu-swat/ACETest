(declare-fun temp10004_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10004_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10004_3 () (_ BitVec 64))
(declare-fun temp10004_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10004_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10004_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10004_7 () (_ BitVec 64))
(declare-fun temp10004_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10004_9 () (_ BitVec 64))
(declare-fun temp10004_10 () (_ BitVec 64))
(declare-fun temp10004_11 () (_ BitVec 64))
(declare-fun temp10004_12 () (_ BitVec 64))
(declare-fun temp10004_13 () (_ BitVec 64))
(declare-fun temp10004_14 () (_ BitVec 64))
(declare-fun temp10004_15 () (_ BitVec 64))
(declare-fun temp10004_16 () (_ BitVec 64))
(declare-fun temp10004_17 () (_ BitVec 64))
(declare-fun temp10004_18 () (_ BitVec 64))
(declare-fun temp10004_19 () (_ BitVec 64))
(declare-fun temp10004_20 () (_ BitVec 64))
(declare-fun temp10004_21 () (_ BitVec 64))
(declare-fun temp10004_22 () (_ BitVec 64))
(declare-fun temp10004_23 () (_ BitVec 64))
(declare-fun temp10004_24 () (_ BitVec 64))
(declare-fun temp10004_25 () (_ BitVec 64))
(declare-fun temp10004_26 () (_ BitVec 64))
(declare-fun temp10004_27 () (_ BitVec 64))
(declare-fun temp10004_28 () (_ BitVec 64))
(declare-fun temp10004_29 () (_ BitVec 64))
(declare-fun temp10004_30 () (_ BitVec 64))
(declare-fun temp10004_31 () (_ BitVec 64))
(declare-fun temp10004_32 () (_ BitVec 64))
(declare-fun temp10004_33 () (_ BitVec 64))
(declare-fun temp10004_34 () (_ BitVec 64))
(declare-fun temp10004_35 () (_ BitVec 64))
(declare-fun temp10004_36 () (_ BitVec 64))
(declare-fun temp10004_37 () (_ BitVec 64))
(declare-fun temp10004_38 () (_ BitVec 64))
(declare-fun temp10004_39 () (_ BitVec 64))
(declare-fun temp10004_40 () (_ BitVec 64))
(declare-fun temp10004_41 () (_ BitVec 64))
(declare-fun temp10004_42 () (_ BitVec 64))
(declare-fun temp10004_43 () (_ BitVec 64))
(declare-fun temp10004_44 () (_ BitVec 64))
(declare-fun temp10004_45 () (_ BitVec 64))
(declare-fun temp10004_46 () (_ BitVec 64))
(declare-fun temp10004_47 () (_ BitVec 64))
(declare-fun temp10004_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10004_49 () (_ BitVec 64))
(declare-fun temp10004_50 () (_ BitVec 64))
(declare-fun temp10004_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10004_52 () (_ BitVec 64))
(declare-fun temp10004_53 () (_ BitVec 64))
(declare-fun temp10004_54 () (_ BitVec 64))
(declare-fun temp10004_55 () (_ BitVec 64))
(declare-fun temp10004_56 () (_ BitVec 64))
(declare-fun temp10004_57 () (_ BitVec 64))
(declare-fun temp10004_58 () (_ BitVec 64))
(declare-fun temp10004_59 () (_ BitVec 64))
(declare-fun temp10004_60 () (_ BitVec 64))
(declare-fun temp10004_61 () (_ BitVec 64))
(declare-fun temp10004_62 () (_ BitVec 64))
(declare-fun temp10004_63 () (_ BitVec 64))
(declare-fun temp10004_64 () (_ BitVec 64))
(declare-fun temp10004_65 () (_ BitVec 64))
(declare-fun temp10004_66 () (_ BitVec 64))
(declare-fun temp10004_67 () (_ BitVec 64))
(declare-fun temp10004_68 () (_ BitVec 64))
(declare-fun temp10004_69 () (_ BitVec 64))
(declare-fun temp10004_70 () (_ BitVec 64))
(declare-fun temp10004_71 () (_ BitVec 64))
(declare-fun temp10004_72 () (_ BitVec 64))
(declare-fun temp10004_73 () (_ BitVec 64))
(declare-fun temp10004_74 () (_ BitVec 64))
(declare-fun temp10004_75 () (_ BitVec 64))
(declare-fun temp10004_76 () (_ BitVec 64))
(declare-fun temp10004_77 () (_ BitVec 64))
(declare-fun temp10004_78 () (_ BitVec 64))
(declare-fun temp10004_79 () (_ BitVec 64))
(declare-fun temp10004_80 () (_ BitVec 64))
(declare-fun temp10004_81 () (_ BitVec 64))
(declare-fun temp10004_82 () (_ BitVec 64))
(declare-fun temp10004_83 () (_ BitVec 64))
(declare-fun temp10004_84 () (_ BitVec 64))
(declare-fun temp10004_85 () (_ BitVec 64))
(declare-fun temp10004_86 () (_ BitVec 64))
(declare-fun temp10004_87 () (_ BitVec 64))
(declare-fun temp10004_88 () (_ BitVec 64))
(declare-fun temp10004_89 () (_ BitVec 64))
(declare-fun temp10004_90 () (_ BitVec 64))
(declare-fun temp10004_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10004_92 () (_ BitVec 64))
(declare-fun temp10004_93 () (_ BitVec 64))
(declare-fun temp10004_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10004_95 () (_ BitVec 64))
(declare-fun temp10004_96 () (_ BitVec 64))
(declare-fun temp10004_97 () (_ BitVec 64))
(declare-fun temp10004_98 () (_ BitVec 64))
(declare-fun temp10004_99 () (_ BitVec 64))
(declare-fun temp10004_100 () (_ BitVec 64))
(declare-fun temp10004_101 () (_ BitVec 64))
(declare-fun temp10004_102 () (_ BitVec 64))
(declare-fun temp10004_103 () (_ BitVec 64))
(declare-fun temp10004_104 () (_ BitVec 64))
(declare-fun temp10004_105 () (_ BitVec 64))
(declare-fun temp10004_106 () (_ BitVec 64))
(declare-fun temp10004_107 () (_ BitVec 64))
(declare-fun temp10004_108 () (_ BitVec 64))
(declare-fun temp10004_109 () (_ BitVec 64))
(declare-fun temp10004_110 () (_ BitVec 64))
(declare-fun temp10004_111 () (_ BitVec 64))
(declare-fun temp10004_112 () (_ BitVec 64))
(declare-fun temp10004_113 () (_ BitVec 64))
(declare-fun temp10004_114 () (_ BitVec 64))
(declare-fun temp10004_115 () (_ BitVec 64))
(declare-fun temp10004_116 () (_ BitVec 64))
(declare-fun temp10004_117 () (_ BitVec 64))
(declare-fun temp10004_118 () (_ BitVec 64))
(declare-fun temp10004_119 () (_ BitVec 64))
(declare-fun temp10004_120 () (_ BitVec 64))
(declare-fun temp10004_121 () (_ BitVec 64))
(declare-fun temp10004_122 () (_ BitVec 64))
(declare-fun temp10004_123 () (_ BitVec 64))
(declare-fun temp10004_124 () (_ BitVec 64))
(declare-fun temp10004_125 () (_ BitVec 64))
(declare-fun temp10004_126 () (_ BitVec 64))
(declare-fun temp10004_127 () (_ BitVec 64))
(declare-fun temp10004_128 () (_ BitVec 64))
(declare-fun temp10004_129 () (_ BitVec 64))
(declare-fun temp10004_130 () (_ BitVec 64))
(declare-fun temp10004_131 () (_ BitVec 64))
(declare-fun temp10004_132 () (_ BitVec 64))
(declare-fun temp10004_133 () (_ BitVec 64))
(declare-fun temp10004_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10004_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10004_136 () (_ BitVec 64))
(declare-fun temp10004_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10004_138 () (_ BitVec 64))
(declare-fun temp10004_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10004_140 () (_ BitVec 64))
(declare-fun temp10004_141 () (_ BitVec 64))
(declare-fun temp10004_142 () (_ BitVec 64))
(declare-fun temp10004_143 () (_ BitVec 64))
(declare-fun temp10004_144 () (_ BitVec 64))
(declare-fun temp10004_145 () (_ BitVec 64))
(declare-fun temp10004_146 () (_ BitVec 64))
(declare-fun temp10004_147 () (_ BitVec 64))
(declare-fun temp10004_148 () (_ BitVec 64))
(declare-fun temp10004_149 () (_ BitVec 64))
(declare-fun temp10004_150 () (_ BitVec 64))
(declare-fun temp10004_151 () (_ BitVec 64))
(declare-fun temp10004_152 () (_ BitVec 64))
(declare-fun temp10004_153 () (_ BitVec 64))
(declare-fun temp10004_154 () (_ BitVec 64))
(declare-fun temp10004_155 () (_ BitVec 64))
(declare-fun temp10004_157 () (_ BitVec 64))
(declare-fun temp10004_158 () (_ BitVec 64))
(declare-fun temp10004_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10004_159 () (_ BitVec 64))
(declare-fun temp10004_160 () (_ BitVec 64))
(declare-fun temp10004_162 () (_ BitVec 64))
(declare-fun temp10004_163 () (_ BitVec 64))
(declare-fun temp10004_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10004_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10004_165 () (_ BitVec 64))
(declare-fun temp10004_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10004_167 () (_ BitVec 64))
(declare-fun temp10004_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10004_169 () (_ BitVec 64))
(declare-fun temp10004_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10004_171 () (_ BitVec 64))
(declare-fun temp10004_172 () (_ BitVec 64))
(declare-fun temp10004_173 () (_ BitVec 64))
(declare-fun temp10004_174 () (_ BitVec 64))
(declare-fun temp10004_175 () (_ BitVec 64))
(declare-fun temp10004_176 () (_ BitVec 64))
(declare-fun temp10004_177 () (_ BitVec 64))
(declare-fun temp10004_178 () (_ BitVec 64))
(declare-fun temp10004_179 () (_ BitVec 64))
(declare-fun temp10004_180 () (_ BitVec 64))
(declare-fun temp10004_181 () (_ BitVec 64))
(declare-fun temp10004_182 () (_ BitVec 64))
(declare-fun temp10004_183 () (_ BitVec 64))
(declare-fun temp10004_184 () (_ BitVec 64))
(declare-fun temp10004_185 () (_ BitVec 64))
(declare-fun temp10004_186 () (_ BitVec 64))
(declare-fun temp10004_187 () (_ BitVec 64))
(declare-fun temp10004_188 () (_ BitVec 64))
(declare-fun temp10004_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10004_190 () (_ BitVec 64))
(declare-fun temp10004_192 () (_ BitVec 64))
(declare-fun temp10004_193 () (_ BitVec 64))
(declare-fun temp10004_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10004_194 () (_ BitVec 64))
(declare-fun temp10004_195 () (_ BitVec 64))
(declare-fun temp10004_197 () (_ BitVec 64))
(declare-fun temp10004_198 () (_ BitVec 64))
(declare-fun temp10004_196 () (_ BitVec 64))
(declare-fun temp10004_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10004_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10004_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10004_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10004_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10004_204 () (_ BitVec 64))
(declare-fun temp10004_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10004_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10004_207 () (_ BitVec 64))
(declare-fun temp10004_208 () (_ BitVec 64))
(declare-fun temp10004_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10004_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10004_211 () (_ BitVec 64))
(declare-fun temp10004_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10004_213 () (_ BitVec 64))
(declare-fun temp10004_214 () (_ BitVec 64))
(declare-fun temp10004_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10004_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10004_217 () (_ BitVec 64))
(declare-fun temp10004_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10004_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10004_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4796816 () (_ BitVec 64))
(declare-fun var211494 () (_ BitVec 64))
(declare-fun temp10004_221 () (_ BitVec 64))
(declare-fun var211495 () (_ BitVec 64))
(declare-fun temp10004_222 () (_ BitVec 64))
(declare-fun temp10004_223 () (_ BitVec 64))
(declare-fun var6435604 () (_ BitVec 64))
(declare-fun var6435571 () (_ BitVec 64))
(declare-fun var6304135 () (_ BitVec 64))
(declare-fun var6304131 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp10004_224 () (_ BitVec 64))
(assert (= temp10004_1 #x0000000000000001))
(assert (= var77203 temp10004_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10004_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10004_2)))
(assert (= temp10004_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10004_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10004_4 #x0000000000000000))
(assert (= var210941 temp10004_4))
(assert (= temp10004_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10004_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10004_6 #x0000000000000000))
(assert (= var210986 temp10004_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10004_7 #x0000000000000000))
(assert (= temp10004_8 temp10004_7))
(assert (= temp10004_9 (select ARGNAME_padding_NAMEEND_VAL temp10004_8)))
(assert (= temp10004_10 #x0000000000000001))
(assert (= temp10004_11 temp10004_10))
(assert (= temp10004_12 (select ARGNAME_padding_NAMEEND_VAL temp10004_11)))
(assert (= temp10004_13 #x0000000000000002))
(assert (= temp10004_14 temp10004_13))
(assert (= temp10004_15 (select ARGNAME_padding_NAMEEND_VAL temp10004_14)))
(assert (= temp10004_16 #x0000000000000003))
(assert (= temp10004_17 temp10004_16))
(assert (= temp10004_18 (select ARGNAME_padding_NAMEEND_VAL temp10004_17)))
(assert (= temp10004_19 #x0000000000000004))
(assert (= temp10004_20 temp10004_19))
(assert (= temp10004_21 (select ARGNAME_padding_NAMEEND_VAL temp10004_20)))
(assert (= temp10004_22 #x0000000000000005))
(assert (= temp10004_23 temp10004_22))
(assert (= temp10004_24 (select ARGNAME_padding_NAMEEND_VAL temp10004_23)))
(assert (= temp10004_25 #x0000000000000000))
(assert (= temp10004_26 #x0000000000000000))
(assert (= temp10004_27 temp10004_26))
(assert (= temp10004_28 (select ARGNAME_padding_NAMEEND_VAL temp10004_27)))
(assert (= temp10004_29 #x0000000000000000))
(assert (= temp10004_30 #x0000000000000001))
(assert (= temp10004_31 temp10004_30))
(assert (= temp10004_32 (select ARGNAME_padding_NAMEEND_VAL temp10004_31)))
(assert (= temp10004_33 #x0000000000000000))
(assert (= temp10004_34 #x0000000000000002))
(assert (= temp10004_35 temp10004_34))
(assert (= temp10004_36 (select ARGNAME_padding_NAMEEND_VAL temp10004_35)))
(assert (= temp10004_37 #x0000000000000000))
(assert (= temp10004_38 #x0000000000000003))
(assert (= temp10004_39 temp10004_38))
(assert (= temp10004_40 (select ARGNAME_padding_NAMEEND_VAL temp10004_39)))
(assert (= temp10004_41 #x0000000000000000))
(assert (= temp10004_42 #x0000000000000004))
(assert (= temp10004_43 temp10004_42))
(assert (= temp10004_44 (select ARGNAME_padding_NAMEEND_VAL temp10004_43)))
(assert (= temp10004_45 #x0000000000000000))
(assert (= temp10004_46 #x0000000000000005))
(assert (= temp10004_47 temp10004_46))
(assert (= temp10004_48 (select ARGNAME_padding_NAMEEND_VAL temp10004_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10004_28 temp10004_25)
             (bvslt temp10004_32 temp10004_29)
             (bvslt temp10004_36 temp10004_33)
             (bvslt temp10004_40 temp10004_37)
             (bvslt temp10004_44 temp10004_41)
             (bvslt temp10004_48 temp10004_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10004_49 #x0000000000000000))
(assert (= var1191714 temp10004_49))
(assert (= temp10004_50 #x0000000000000000))
(assert (= temp10004_51 temp10004_50))
(assert (= temp10004_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10004_51)))
(assert (= temp10004_53 #x0000000000000001))
(assert (= temp10004_54 temp10004_53))
(assert (= temp10004_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10004_54)))
(assert (= temp10004_56 #x0000000000000002))
(assert (= temp10004_57 temp10004_56))
(assert (= temp10004_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10004_57)))
(assert (= temp10004_59 #x0000000000000003))
(assert (= temp10004_60 temp10004_59))
(assert (= temp10004_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10004_60)))
(assert (= temp10004_62 #x0000000000000004))
(assert (= temp10004_63 temp10004_62))
(assert (= temp10004_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10004_63)))
(assert (= temp10004_65 #x0000000000000005))
(assert (= temp10004_66 temp10004_65))
(assert (= temp10004_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10004_66)))
(assert (= temp10004_68 #x0000000000000000))
(assert (= temp10004_69 #x0000000000000000))
(assert (= temp10004_70 temp10004_69))
(assert (= temp10004_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10004_70)))
(assert (= temp10004_72 #x0000000000000000))
(assert (= temp10004_73 #x0000000000000001))
(assert (= temp10004_74 temp10004_73))
(assert (= temp10004_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10004_74)))
(assert (= temp10004_76 #x0000000000000000))
(assert (= temp10004_77 #x0000000000000002))
(assert (= temp10004_78 temp10004_77))
(assert (= temp10004_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10004_78)))
(assert (= temp10004_80 #x0000000000000000))
(assert (= temp10004_81 #x0000000000000003))
(assert (= temp10004_82 temp10004_81))
(assert (= temp10004_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10004_82)))
(assert (= temp10004_84 #x0000000000000000))
(assert (= temp10004_85 #x0000000000000004))
(assert (= temp10004_86 temp10004_85))
(assert (= temp10004_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10004_86)))
(assert (= temp10004_88 #x0000000000000000))
(assert (= temp10004_89 #x0000000000000005))
(assert (= temp10004_90 temp10004_89))
(assert (= temp10004_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10004_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10004_71 temp10004_68)
             (bvslt temp10004_75 temp10004_72)
             (bvslt temp10004_79 temp10004_76)
             (bvslt temp10004_83 temp10004_80)
             (bvslt temp10004_87 temp10004_84)
             (bvslt temp10004_91 temp10004_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10004_92 #x0000000000000000))
(assert (= var1191725 temp10004_92))
(assert (= temp10004_93 #x0000000000000000))
(assert (= temp10004_94 temp10004_93))
(assert (= temp10004_95 (select ARGNAME_stride_NAMEEND_VAL temp10004_94)))
(assert (= temp10004_96 #x0000000000000001))
(assert (= temp10004_97 temp10004_96))
(assert (= temp10004_98 (select ARGNAME_stride_NAMEEND_VAL temp10004_97)))
(assert (= temp10004_99 #x0000000000000002))
(assert (= temp10004_100 temp10004_99))
(assert (= temp10004_101 (select ARGNAME_stride_NAMEEND_VAL temp10004_100)))
(assert (= temp10004_102 #x0000000000000003))
(assert (= temp10004_103 temp10004_102))
(assert (= temp10004_104 (select ARGNAME_stride_NAMEEND_VAL temp10004_103)))
(assert (= temp10004_105 #x0000000000000004))
(assert (= temp10004_106 temp10004_105))
(assert (= temp10004_107 (select ARGNAME_stride_NAMEEND_VAL temp10004_106)))
(assert (= temp10004_108 #x0000000000000005))
(assert (= temp10004_109 temp10004_108))
(assert (= temp10004_110 (select ARGNAME_stride_NAMEEND_VAL temp10004_109)))
(assert (= temp10004_111 #x0000000000000000))
(assert (= temp10004_112 #x0000000000000000))
(assert (= temp10004_113 temp10004_112))
(assert (= temp10004_114 (select ARGNAME_stride_NAMEEND_VAL temp10004_113)))
(assert (= temp10004_115 #x0000000000000000))
(assert (= temp10004_116 #x0000000000000001))
(assert (= temp10004_117 temp10004_116))
(assert (= temp10004_118 (select ARGNAME_stride_NAMEEND_VAL temp10004_117)))
(assert (= temp10004_119 #x0000000000000000))
(assert (= temp10004_120 #x0000000000000002))
(assert (= temp10004_121 temp10004_120))
(assert (= temp10004_122 (select ARGNAME_stride_NAMEEND_VAL temp10004_121)))
(assert (= temp10004_123 #x0000000000000000))
(assert (= temp10004_124 #x0000000000000003))
(assert (= temp10004_125 temp10004_124))
(assert (= temp10004_126 (select ARGNAME_stride_NAMEEND_VAL temp10004_125)))
(assert (= temp10004_127 #x0000000000000000))
(assert (= temp10004_128 #x0000000000000004))
(assert (= temp10004_129 temp10004_128))
(assert (= temp10004_130 (select ARGNAME_stride_NAMEEND_VAL temp10004_129)))
(assert (= temp10004_131 #x0000000000000000))
(assert (= temp10004_132 #x0000000000000005))
(assert (= temp10004_133 temp10004_132))
(assert (= temp10004_134 (select ARGNAME_stride_NAMEEND_VAL temp10004_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10004_114 temp10004_111)
             (bvsle temp10004_118 temp10004_115)
             (bvsle temp10004_122 temp10004_119)
             (bvsle temp10004_126 temp10004_123)
             (bvsle temp10004_130 temp10004_127)
             (bvsle temp10004_134 temp10004_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10004_135 #x0000000000000000))
(assert (= var1191735 temp10004_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10004_136 #x0000000000000001))
(assert (= var1191747 temp10004_136))
(assert (= temp10004_137 #x0000000000000000))
(assert (= var1179826 temp10004_137))
(assert (= temp10004_138 #x0000000000000000))
(assert (= temp10004_139 temp10004_138))
(assert (= temp10004_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10004_139)))
(assert (= temp10004_141 #x0000000000000001))
(assert (= temp10004_142 temp10004_141))
(assert (= temp10004_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10004_142)))
(assert (= temp10004_144 #x0000000000000002))
(assert (= temp10004_145 temp10004_144))
(assert (= temp10004_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10004_145)))
(assert (= temp10004_147 #x0000000000000003))
(assert (= temp10004_148 temp10004_147))
(assert (= temp10004_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10004_148)))
(assert (= temp10004_150 #x0000000000000004))
(assert (= temp10004_151 temp10004_150))
(assert (= temp10004_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10004_151)))
(assert (= temp10004_153 #x0000000000000005))
(assert (= temp10004_154 temp10004_153))
(assert (= temp10004_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10004_154)))
(assert (= temp10004_157 var1179826))
(assert (= temp10004_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10004_157)))
(assert (= temp10004_156 temp10004_158))
(assert (= var1191780
   (ite (bvslt temp10004_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10004_159 #x0000000000000000))
(assert (= var1191780 temp10004_159))
(assert (= temp10004_160 #x0000000000000000))
(assert (= var1179826 temp10004_160))
(assert (= temp10004_162 var1179826))
(assert (= temp10004_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10004_162)))
(assert (= temp10004_161 temp10004_163))
(assert (= var1191802 (bvsmod temp10004_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10004_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10004_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10004_165 #x0000000000000001))
(assert (= var1191803 temp10004_165))
(assert (= temp10004_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10004_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10004_167 #x0000000000000001))
(assert (= var1191823 temp10004_167))
(assert (= temp10004_168 #x0000000000000001))
(assert (= var1180714 temp10004_168))
(assert (= temp10004_169 #x0000000000000000))
(assert (= temp10004_170 temp10004_169))
(assert (= temp10004_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10004_170)))
(assert (= temp10004_172 #x0000000000000001))
(assert (= temp10004_173 temp10004_172))
(assert (= temp10004_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10004_173)))
(assert (= temp10004_175 #x0000000000000002))
(assert (= temp10004_176 temp10004_175))
(assert (= temp10004_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10004_176)))
(assert (= temp10004_178 #x0000000000000003))
(assert (= temp10004_179 temp10004_178))
(assert (= temp10004_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10004_179)))
(assert (= temp10004_181 #x0000000000000004))
(assert (= temp10004_182 temp10004_181))
(assert (= temp10004_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10004_182)))
(assert (= temp10004_184 #x0000000000000005))
(assert (= temp10004_185 temp10004_184))
(assert (= temp10004_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10004_185)))
(assert (= temp10004_187 #x0000000000000000))
(assert (= temp10004_188
   (ite (bvslt var1180714 temp10004_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10004_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10004_188)))
(assert (= var1191831 temp10004_189))
(assert (bvslt (ite (bvslt var1180714 temp10004_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10004_190 #x0000000000000001))
(assert (= var1180714 temp10004_190))
(assert (= temp10004_192 var1180714))
(assert (= temp10004_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10004_192)))
(assert (= temp10004_191 temp10004_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10004_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10004_194 #x0000000000000001))
(assert (= var1191836 temp10004_194))
(assert (= temp10004_195 #x0000000000000000))
(assert (= var1179826 temp10004_195))
(assert (= temp10004_197 var1179826))
(assert (= temp10004_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10004_197)))
(assert (= temp10004_196 temp10004_198))
(assert (= temp10004_199 #x0000000000000002))
(assert (= var1586025 temp10004_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10004_200 #x0000000000000001))
(assert (= var1191993 temp10004_200))
(assert (= temp10004_201 #x0000000000000001))
(assert (= var2700303 temp10004_201))
(assert (= temp10004_202 #x0000000000000001))
(assert (= var2962447 temp10004_202))
(assert (= temp10004_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10004_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10004_204 #x0000000000000001))
(assert (= var211058 temp10004_204))
(assert (= temp10004_205 #x0000000000000001))
(assert (= var211188 temp10004_205))
(assert (= var3879401 var211188))
(assert (= temp10004_206 #x0000000000000000))
(assert (= var3866802 temp10004_206))
(assert (= temp10004_207 #x0000000000000000))
(assert (= temp10004_208
   (ite (bvslt var3866802 temp10004_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10004_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10004_208)))
(assert (= var3879420 temp10004_209))
(assert (bvslt (ite (bvslt var3866802 temp10004_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10004_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10004_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10004_211 #x0000000000000000))
(assert (= var3879421 temp10004_211))
(assert (= temp10004_212 #x0000000000000001))
(assert (= var3867690 temp10004_212))
(assert (= temp10004_213 #x0000000000000000))
(assert (= temp10004_214
   (ite (bvslt var3867690 temp10004_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10004_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10004_214)))
(assert (= var3879423 temp10004_215))
(assert (bvslt (ite (bvslt var3867690 temp10004_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10004_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10004_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10004_217 #x0000000000000001))
(assert (= var3879424 temp10004_217))
(assert (= temp10004_218 #x0000000000000000))
(assert (= var4079423 temp10004_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10004_219 #x0000000000000002))
(assert (= var4208259 temp10004_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10004_220 #x0000000000000000))
(assert (= var4273820 temp10004_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4796816 var211201))
(assert (= var211494 var210913))
(assert (= temp10004_221 #x0000000000000000))
(assert (= var211495
   (ite (distinct var211494 temp10004_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10004_222 #x0000000000000001))
(assert (= var211058 temp10004_222))
(assert (= temp10004_223 #x0000000000000000))
(assert (= var6435604 temp10004_223))
(assert (= var6435571 var6435604))
(assert (= var6304135 var6435571))
(assert (= var6304131 var6304135))
(assert (= var212669 var6304131))
(assert (= temp10004_224 #x0000000000000000))
(assert (= var212669 temp10004_224))
(model-add temp10004_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10004_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10004_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10004_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




