(declare-fun temp10865_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10865_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10865_3 () (_ BitVec 64))
(declare-fun temp10865_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10865_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10865_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10865_7 () (_ BitVec 64))
(declare-fun temp10865_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10865_9 () (_ BitVec 64))
(declare-fun temp10865_10 () (_ BitVec 64))
(declare-fun temp10865_11 () (_ BitVec 64))
(declare-fun temp10865_12 () (_ BitVec 64))
(declare-fun temp10865_13 () (_ BitVec 64))
(declare-fun temp10865_14 () (_ BitVec 64))
(declare-fun temp10865_15 () (_ BitVec 64))
(declare-fun temp10865_16 () (_ BitVec 64))
(declare-fun temp10865_17 () (_ BitVec 64))
(declare-fun temp10865_18 () (_ BitVec 64))
(declare-fun temp10865_19 () (_ BitVec 64))
(declare-fun temp10865_20 () (_ BitVec 64))
(declare-fun temp10865_21 () (_ BitVec 64))
(declare-fun temp10865_22 () (_ BitVec 64))
(declare-fun temp10865_23 () (_ BitVec 64))
(declare-fun temp10865_24 () (_ BitVec 64))
(declare-fun temp10865_25 () (_ BitVec 64))
(declare-fun temp10865_26 () (_ BitVec 64))
(declare-fun temp10865_27 () (_ BitVec 64))
(declare-fun temp10865_28 () (_ BitVec 64))
(declare-fun temp10865_29 () (_ BitVec 64))
(declare-fun temp10865_30 () (_ BitVec 64))
(declare-fun temp10865_31 () (_ BitVec 64))
(declare-fun temp10865_32 () (_ BitVec 64))
(declare-fun temp10865_33 () (_ BitVec 64))
(declare-fun temp10865_34 () (_ BitVec 64))
(declare-fun temp10865_35 () (_ BitVec 64))
(declare-fun temp10865_36 () (_ BitVec 64))
(declare-fun temp10865_37 () (_ BitVec 64))
(declare-fun temp10865_38 () (_ BitVec 64))
(declare-fun temp10865_39 () (_ BitVec 64))
(declare-fun temp10865_40 () (_ BitVec 64))
(declare-fun temp10865_41 () (_ BitVec 64))
(declare-fun temp10865_42 () (_ BitVec 64))
(declare-fun temp10865_43 () (_ BitVec 64))
(declare-fun temp10865_44 () (_ BitVec 64))
(declare-fun temp10865_45 () (_ BitVec 64))
(declare-fun temp10865_46 () (_ BitVec 64))
(declare-fun temp10865_47 () (_ BitVec 64))
(declare-fun temp10865_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10865_49 () (_ BitVec 64))
(declare-fun temp10865_50 () (_ BitVec 64))
(declare-fun temp10865_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10865_52 () (_ BitVec 64))
(declare-fun temp10865_53 () (_ BitVec 64))
(declare-fun temp10865_54 () (_ BitVec 64))
(declare-fun temp10865_55 () (_ BitVec 64))
(declare-fun temp10865_56 () (_ BitVec 64))
(declare-fun temp10865_57 () (_ BitVec 64))
(declare-fun temp10865_58 () (_ BitVec 64))
(declare-fun temp10865_59 () (_ BitVec 64))
(declare-fun temp10865_60 () (_ BitVec 64))
(declare-fun temp10865_61 () (_ BitVec 64))
(declare-fun temp10865_62 () (_ BitVec 64))
(declare-fun temp10865_63 () (_ BitVec 64))
(declare-fun temp10865_64 () (_ BitVec 64))
(declare-fun temp10865_65 () (_ BitVec 64))
(declare-fun temp10865_66 () (_ BitVec 64))
(declare-fun temp10865_67 () (_ BitVec 64))
(declare-fun temp10865_68 () (_ BitVec 64))
(declare-fun temp10865_69 () (_ BitVec 64))
(declare-fun temp10865_70 () (_ BitVec 64))
(declare-fun temp10865_71 () (_ BitVec 64))
(declare-fun temp10865_72 () (_ BitVec 64))
(declare-fun temp10865_73 () (_ BitVec 64))
(declare-fun temp10865_74 () (_ BitVec 64))
(declare-fun temp10865_75 () (_ BitVec 64))
(declare-fun temp10865_76 () (_ BitVec 64))
(declare-fun temp10865_77 () (_ BitVec 64))
(declare-fun temp10865_78 () (_ BitVec 64))
(declare-fun temp10865_79 () (_ BitVec 64))
(declare-fun temp10865_80 () (_ BitVec 64))
(declare-fun temp10865_81 () (_ BitVec 64))
(declare-fun temp10865_82 () (_ BitVec 64))
(declare-fun temp10865_83 () (_ BitVec 64))
(declare-fun temp10865_84 () (_ BitVec 64))
(declare-fun temp10865_85 () (_ BitVec 64))
(declare-fun temp10865_86 () (_ BitVec 64))
(declare-fun temp10865_87 () (_ BitVec 64))
(declare-fun temp10865_88 () (_ BitVec 64))
(declare-fun temp10865_89 () (_ BitVec 64))
(declare-fun temp10865_90 () (_ BitVec 64))
(declare-fun temp10865_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10865_92 () (_ BitVec 64))
(declare-fun temp10865_93 () (_ BitVec 64))
(declare-fun temp10865_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10865_95 () (_ BitVec 64))
(declare-fun temp10865_96 () (_ BitVec 64))
(declare-fun temp10865_97 () (_ BitVec 64))
(declare-fun temp10865_98 () (_ BitVec 64))
(declare-fun temp10865_99 () (_ BitVec 64))
(declare-fun temp10865_100 () (_ BitVec 64))
(declare-fun temp10865_101 () (_ BitVec 64))
(declare-fun temp10865_102 () (_ BitVec 64))
(declare-fun temp10865_103 () (_ BitVec 64))
(declare-fun temp10865_104 () (_ BitVec 64))
(declare-fun temp10865_105 () (_ BitVec 64))
(declare-fun temp10865_106 () (_ BitVec 64))
(declare-fun temp10865_107 () (_ BitVec 64))
(declare-fun temp10865_108 () (_ BitVec 64))
(declare-fun temp10865_109 () (_ BitVec 64))
(declare-fun temp10865_110 () (_ BitVec 64))
(declare-fun temp10865_111 () (_ BitVec 64))
(declare-fun temp10865_112 () (_ BitVec 64))
(declare-fun temp10865_113 () (_ BitVec 64))
(declare-fun temp10865_114 () (_ BitVec 64))
(declare-fun temp10865_115 () (_ BitVec 64))
(declare-fun temp10865_116 () (_ BitVec 64))
(declare-fun temp10865_117 () (_ BitVec 64))
(declare-fun temp10865_118 () (_ BitVec 64))
(declare-fun temp10865_119 () (_ BitVec 64))
(declare-fun temp10865_120 () (_ BitVec 64))
(declare-fun temp10865_121 () (_ BitVec 64))
(declare-fun temp10865_122 () (_ BitVec 64))
(declare-fun temp10865_123 () (_ BitVec 64))
(declare-fun temp10865_124 () (_ BitVec 64))
(declare-fun temp10865_125 () (_ BitVec 64))
(declare-fun temp10865_126 () (_ BitVec 64))
(declare-fun temp10865_127 () (_ BitVec 64))
(declare-fun temp10865_128 () (_ BitVec 64))
(declare-fun temp10865_129 () (_ BitVec 64))
(declare-fun temp10865_130 () (_ BitVec 64))
(declare-fun temp10865_131 () (_ BitVec 64))
(declare-fun temp10865_132 () (_ BitVec 64))
(declare-fun temp10865_133 () (_ BitVec 64))
(declare-fun temp10865_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10865_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10865_136 () (_ BitVec 64))
(declare-fun temp10865_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10865_138 () (_ BitVec 64))
(declare-fun temp10865_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10865_140 () (_ BitVec 64))
(declare-fun temp10865_141 () (_ BitVec 64))
(declare-fun temp10865_142 () (_ BitVec 64))
(declare-fun temp10865_143 () (_ BitVec 64))
(declare-fun temp10865_144 () (_ BitVec 64))
(declare-fun temp10865_145 () (_ BitVec 64))
(declare-fun temp10865_146 () (_ BitVec 64))
(declare-fun temp10865_147 () (_ BitVec 64))
(declare-fun temp10865_148 () (_ BitVec 64))
(declare-fun temp10865_149 () (_ BitVec 64))
(declare-fun temp10865_150 () (_ BitVec 64))
(declare-fun temp10865_151 () (_ BitVec 64))
(declare-fun temp10865_152 () (_ BitVec 64))
(declare-fun temp10865_153 () (_ BitVec 64))
(declare-fun temp10865_154 () (_ BitVec 64))
(declare-fun temp10865_155 () (_ BitVec 64))
(declare-fun temp10865_157 () (_ BitVec 64))
(declare-fun temp10865_158 () (_ BitVec 64))
(declare-fun temp10865_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10865_159 () (_ BitVec 64))
(declare-fun temp10865_160 () (_ BitVec 64))
(declare-fun temp10865_162 () (_ BitVec 64))
(declare-fun temp10865_163 () (_ BitVec 64))
(declare-fun temp10865_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10865_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10865_165 () (_ BitVec 64))
(declare-fun temp10865_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10865_167 () (_ BitVec 64))
(declare-fun temp10865_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10865_169 () (_ BitVec 64))
(declare-fun temp10865_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10865_171 () (_ BitVec 64))
(declare-fun temp10865_172 () (_ BitVec 64))
(declare-fun temp10865_173 () (_ BitVec 64))
(declare-fun temp10865_174 () (_ BitVec 64))
(declare-fun temp10865_175 () (_ BitVec 64))
(declare-fun temp10865_176 () (_ BitVec 64))
(declare-fun temp10865_177 () (_ BitVec 64))
(declare-fun temp10865_178 () (_ BitVec 64))
(declare-fun temp10865_179 () (_ BitVec 64))
(declare-fun temp10865_180 () (_ BitVec 64))
(declare-fun temp10865_181 () (_ BitVec 64))
(declare-fun temp10865_182 () (_ BitVec 64))
(declare-fun temp10865_183 () (_ BitVec 64))
(declare-fun temp10865_184 () (_ BitVec 64))
(declare-fun temp10865_185 () (_ BitVec 64))
(declare-fun temp10865_186 () (_ BitVec 64))
(declare-fun temp10865_187 () (_ BitVec 64))
(declare-fun temp10865_188 () (_ BitVec 64))
(declare-fun temp10865_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10865_190 () (_ BitVec 64))
(declare-fun temp10865_192 () (_ BitVec 64))
(declare-fun temp10865_193 () (_ BitVec 64))
(declare-fun temp10865_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10865_194 () (_ BitVec 64))
(declare-fun temp10865_195 () (_ BitVec 64))
(declare-fun temp10865_197 () (_ BitVec 64))
(declare-fun temp10865_198 () (_ BitVec 64))
(declare-fun temp10865_196 () (_ BitVec 64))
(declare-fun temp10865_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10865_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10865_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10865_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10865_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10865_204 () (_ BitVec 64))
(declare-fun temp10865_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10865_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10865_207 () (_ BitVec 64))
(declare-fun temp10865_208 () (_ BitVec 64))
(declare-fun temp10865_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10865_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10865_211 () (_ BitVec 64))
(declare-fun temp10865_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10865_213 () (_ BitVec 64))
(declare-fun temp10865_214 () (_ BitVec 64))
(declare-fun temp10865_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10865_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10865_217 () (_ BitVec 64))
(declare-fun temp10865_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10865_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10865_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp10865_221 () (_ BitVec 64))
(assert (= temp10865_1 #x0000000000000001))
(assert (= var77203 temp10865_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10865_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10865_2)))
(assert (= temp10865_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10865_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10865_4 #x0000000000000000))
(assert (= var210941 temp10865_4))
(assert (= temp10865_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10865_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10865_6 #x0000000000000000))
(assert (= var210986 temp10865_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10865_7 #x0000000000000000))
(assert (= temp10865_8 temp10865_7))
(assert (= temp10865_9 (select ARGNAME_padding_NAMEEND_VAL temp10865_8)))
(assert (= temp10865_10 #x0000000000000001))
(assert (= temp10865_11 temp10865_10))
(assert (= temp10865_12 (select ARGNAME_padding_NAMEEND_VAL temp10865_11)))
(assert (= temp10865_13 #x0000000000000002))
(assert (= temp10865_14 temp10865_13))
(assert (= temp10865_15 (select ARGNAME_padding_NAMEEND_VAL temp10865_14)))
(assert (= temp10865_16 #x0000000000000003))
(assert (= temp10865_17 temp10865_16))
(assert (= temp10865_18 (select ARGNAME_padding_NAMEEND_VAL temp10865_17)))
(assert (= temp10865_19 #x0000000000000004))
(assert (= temp10865_20 temp10865_19))
(assert (= temp10865_21 (select ARGNAME_padding_NAMEEND_VAL temp10865_20)))
(assert (= temp10865_22 #x0000000000000005))
(assert (= temp10865_23 temp10865_22))
(assert (= temp10865_24 (select ARGNAME_padding_NAMEEND_VAL temp10865_23)))
(assert (= temp10865_25 #x0000000000000000))
(assert (= temp10865_26 #x0000000000000000))
(assert (= temp10865_27 temp10865_26))
(assert (= temp10865_28 (select ARGNAME_padding_NAMEEND_VAL temp10865_27)))
(assert (= temp10865_29 #x0000000000000000))
(assert (= temp10865_30 #x0000000000000001))
(assert (= temp10865_31 temp10865_30))
(assert (= temp10865_32 (select ARGNAME_padding_NAMEEND_VAL temp10865_31)))
(assert (= temp10865_33 #x0000000000000000))
(assert (= temp10865_34 #x0000000000000002))
(assert (= temp10865_35 temp10865_34))
(assert (= temp10865_36 (select ARGNAME_padding_NAMEEND_VAL temp10865_35)))
(assert (= temp10865_37 #x0000000000000000))
(assert (= temp10865_38 #x0000000000000003))
(assert (= temp10865_39 temp10865_38))
(assert (= temp10865_40 (select ARGNAME_padding_NAMEEND_VAL temp10865_39)))
(assert (= temp10865_41 #x0000000000000000))
(assert (= temp10865_42 #x0000000000000004))
(assert (= temp10865_43 temp10865_42))
(assert (= temp10865_44 (select ARGNAME_padding_NAMEEND_VAL temp10865_43)))
(assert (= temp10865_45 #x0000000000000000))
(assert (= temp10865_46 #x0000000000000005))
(assert (= temp10865_47 temp10865_46))
(assert (= temp10865_48 (select ARGNAME_padding_NAMEEND_VAL temp10865_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10865_28 temp10865_25)
             (bvslt temp10865_32 temp10865_29)
             (bvslt temp10865_36 temp10865_33)
             (bvslt temp10865_40 temp10865_37)
             (bvslt temp10865_44 temp10865_41)
             (bvslt temp10865_48 temp10865_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10865_49 #x0000000000000000))
(assert (= var1191714 temp10865_49))
(assert (= temp10865_50 #x0000000000000000))
(assert (= temp10865_51 temp10865_50))
(assert (= temp10865_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10865_51)))
(assert (= temp10865_53 #x0000000000000001))
(assert (= temp10865_54 temp10865_53))
(assert (= temp10865_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10865_54)))
(assert (= temp10865_56 #x0000000000000002))
(assert (= temp10865_57 temp10865_56))
(assert (= temp10865_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10865_57)))
(assert (= temp10865_59 #x0000000000000003))
(assert (= temp10865_60 temp10865_59))
(assert (= temp10865_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10865_60)))
(assert (= temp10865_62 #x0000000000000004))
(assert (= temp10865_63 temp10865_62))
(assert (= temp10865_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10865_63)))
(assert (= temp10865_65 #x0000000000000005))
(assert (= temp10865_66 temp10865_65))
(assert (= temp10865_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10865_66)))
(assert (= temp10865_68 #x0000000000000000))
(assert (= temp10865_69 #x0000000000000000))
(assert (= temp10865_70 temp10865_69))
(assert (= temp10865_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10865_70)))
(assert (= temp10865_72 #x0000000000000000))
(assert (= temp10865_73 #x0000000000000001))
(assert (= temp10865_74 temp10865_73))
(assert (= temp10865_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10865_74)))
(assert (= temp10865_76 #x0000000000000000))
(assert (= temp10865_77 #x0000000000000002))
(assert (= temp10865_78 temp10865_77))
(assert (= temp10865_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10865_78)))
(assert (= temp10865_80 #x0000000000000000))
(assert (= temp10865_81 #x0000000000000003))
(assert (= temp10865_82 temp10865_81))
(assert (= temp10865_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10865_82)))
(assert (= temp10865_84 #x0000000000000000))
(assert (= temp10865_85 #x0000000000000004))
(assert (= temp10865_86 temp10865_85))
(assert (= temp10865_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10865_86)))
(assert (= temp10865_88 #x0000000000000000))
(assert (= temp10865_89 #x0000000000000005))
(assert (= temp10865_90 temp10865_89))
(assert (= temp10865_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10865_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10865_71 temp10865_68)
             (bvslt temp10865_75 temp10865_72)
             (bvslt temp10865_79 temp10865_76)
             (bvslt temp10865_83 temp10865_80)
             (bvslt temp10865_87 temp10865_84)
             (bvslt temp10865_91 temp10865_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10865_92 #x0000000000000000))
(assert (= var1191725 temp10865_92))
(assert (= temp10865_93 #x0000000000000000))
(assert (= temp10865_94 temp10865_93))
(assert (= temp10865_95 (select ARGNAME_stride_NAMEEND_VAL temp10865_94)))
(assert (= temp10865_96 #x0000000000000001))
(assert (= temp10865_97 temp10865_96))
(assert (= temp10865_98 (select ARGNAME_stride_NAMEEND_VAL temp10865_97)))
(assert (= temp10865_99 #x0000000000000002))
(assert (= temp10865_100 temp10865_99))
(assert (= temp10865_101 (select ARGNAME_stride_NAMEEND_VAL temp10865_100)))
(assert (= temp10865_102 #x0000000000000003))
(assert (= temp10865_103 temp10865_102))
(assert (= temp10865_104 (select ARGNAME_stride_NAMEEND_VAL temp10865_103)))
(assert (= temp10865_105 #x0000000000000004))
(assert (= temp10865_106 temp10865_105))
(assert (= temp10865_107 (select ARGNAME_stride_NAMEEND_VAL temp10865_106)))
(assert (= temp10865_108 #x0000000000000005))
(assert (= temp10865_109 temp10865_108))
(assert (= temp10865_110 (select ARGNAME_stride_NAMEEND_VAL temp10865_109)))
(assert (= temp10865_111 #x0000000000000000))
(assert (= temp10865_112 #x0000000000000000))
(assert (= temp10865_113 temp10865_112))
(assert (= temp10865_114 (select ARGNAME_stride_NAMEEND_VAL temp10865_113)))
(assert (= temp10865_115 #x0000000000000000))
(assert (= temp10865_116 #x0000000000000001))
(assert (= temp10865_117 temp10865_116))
(assert (= temp10865_118 (select ARGNAME_stride_NAMEEND_VAL temp10865_117)))
(assert (= temp10865_119 #x0000000000000000))
(assert (= temp10865_120 #x0000000000000002))
(assert (= temp10865_121 temp10865_120))
(assert (= temp10865_122 (select ARGNAME_stride_NAMEEND_VAL temp10865_121)))
(assert (= temp10865_123 #x0000000000000000))
(assert (= temp10865_124 #x0000000000000003))
(assert (= temp10865_125 temp10865_124))
(assert (= temp10865_126 (select ARGNAME_stride_NAMEEND_VAL temp10865_125)))
(assert (= temp10865_127 #x0000000000000000))
(assert (= temp10865_128 #x0000000000000004))
(assert (= temp10865_129 temp10865_128))
(assert (= temp10865_130 (select ARGNAME_stride_NAMEEND_VAL temp10865_129)))
(assert (= temp10865_131 #x0000000000000000))
(assert (= temp10865_132 #x0000000000000005))
(assert (= temp10865_133 temp10865_132))
(assert (= temp10865_134 (select ARGNAME_stride_NAMEEND_VAL temp10865_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10865_114 temp10865_111)
             (bvsle temp10865_118 temp10865_115)
             (bvsle temp10865_122 temp10865_119)
             (bvsle temp10865_126 temp10865_123)
             (bvsle temp10865_130 temp10865_127)
             (bvsle temp10865_134 temp10865_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10865_135 #x0000000000000000))
(assert (= var1191735 temp10865_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10865_136 #x0000000000000001))
(assert (= var1191747 temp10865_136))
(assert (= temp10865_137 #x0000000000000000))
(assert (= var1179826 temp10865_137))
(assert (= temp10865_138 #x0000000000000000))
(assert (= temp10865_139 temp10865_138))
(assert (= temp10865_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10865_139)))
(assert (= temp10865_141 #x0000000000000001))
(assert (= temp10865_142 temp10865_141))
(assert (= temp10865_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10865_142)))
(assert (= temp10865_144 #x0000000000000002))
(assert (= temp10865_145 temp10865_144))
(assert (= temp10865_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10865_145)))
(assert (= temp10865_147 #x0000000000000003))
(assert (= temp10865_148 temp10865_147))
(assert (= temp10865_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10865_148)))
(assert (= temp10865_150 #x0000000000000004))
(assert (= temp10865_151 temp10865_150))
(assert (= temp10865_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10865_151)))
(assert (= temp10865_153 #x0000000000000005))
(assert (= temp10865_154 temp10865_153))
(assert (= temp10865_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10865_154)))
(assert (= temp10865_157 var1179826))
(assert (= temp10865_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10865_157)))
(assert (= temp10865_156 temp10865_158))
(assert (= var1191780
   (ite (bvslt temp10865_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10865_159 #x0000000000000000))
(assert (= var1191780 temp10865_159))
(assert (= temp10865_160 #x0000000000000000))
(assert (= var1179826 temp10865_160))
(assert (= temp10865_162 var1179826))
(assert (= temp10865_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10865_162)))
(assert (= temp10865_161 temp10865_163))
(assert (= var1191802 (bvsmod temp10865_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10865_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10865_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10865_165 #x0000000000000001))
(assert (= var1191803 temp10865_165))
(assert (= temp10865_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10865_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10865_167 #x0000000000000001))
(assert (= var1191823 temp10865_167))
(assert (= temp10865_168 #x0000000000000001))
(assert (= var1180714 temp10865_168))
(assert (= temp10865_169 #x0000000000000000))
(assert (= temp10865_170 temp10865_169))
(assert (= temp10865_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10865_170)))
(assert (= temp10865_172 #x0000000000000001))
(assert (= temp10865_173 temp10865_172))
(assert (= temp10865_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10865_173)))
(assert (= temp10865_175 #x0000000000000002))
(assert (= temp10865_176 temp10865_175))
(assert (= temp10865_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10865_176)))
(assert (= temp10865_178 #x0000000000000003))
(assert (= temp10865_179 temp10865_178))
(assert (= temp10865_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10865_179)))
(assert (= temp10865_181 #x0000000000000004))
(assert (= temp10865_182 temp10865_181))
(assert (= temp10865_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10865_182)))
(assert (= temp10865_184 #x0000000000000005))
(assert (= temp10865_185 temp10865_184))
(assert (= temp10865_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10865_185)))
(assert (= temp10865_187 #x0000000000000000))
(assert (= temp10865_188
   (ite (bvslt var1180714 temp10865_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10865_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10865_188)))
(assert (= var1191831 temp10865_189))
(assert (bvslt (ite (bvslt var1180714 temp10865_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10865_190 #x0000000000000001))
(assert (= var1180714 temp10865_190))
(assert (= temp10865_192 var1180714))
(assert (= temp10865_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10865_192)))
(assert (= temp10865_191 temp10865_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10865_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10865_194 #x0000000000000001))
(assert (= var1191836 temp10865_194))
(assert (= temp10865_195 #x0000000000000000))
(assert (= var1179826 temp10865_195))
(assert (= temp10865_197 var1179826))
(assert (= temp10865_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10865_197)))
(assert (= temp10865_196 temp10865_198))
(assert (= temp10865_199 #x0000000000000002))
(assert (= var1586025 temp10865_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10865_200 #x0000000000000001))
(assert (= var1191993 temp10865_200))
(assert (= temp10865_201 #x0000000000000001))
(assert (= var2700303 temp10865_201))
(assert (= temp10865_202 #x0000000000000001))
(assert (= var2962447 temp10865_202))
(assert (= temp10865_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10865_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10865_204 #x0000000000000001))
(assert (= var211058 temp10865_204))
(assert (= temp10865_205 #x0000000000000001))
(assert (= var211188 temp10865_205))
(assert (= var3879401 var211188))
(assert (= temp10865_206 #x0000000000000000))
(assert (= var3866802 temp10865_206))
(assert (= temp10865_207 #x0000000000000000))
(assert (= temp10865_208
   (ite (bvslt var3866802 temp10865_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10865_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10865_208)))
(assert (= var3879420 temp10865_209))
(assert (bvslt (ite (bvslt var3866802 temp10865_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10865_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10865_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10865_211 #x0000000000000000))
(assert (= var3879421 temp10865_211))
(assert (= temp10865_212 #x0000000000000001))
(assert (= var3867690 temp10865_212))
(assert (= temp10865_213 #x0000000000000000))
(assert (= temp10865_214
   (ite (bvslt var3867690 temp10865_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10865_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10865_214)))
(assert (= var3879423 temp10865_215))
(assert (bvslt (ite (bvslt var3867690 temp10865_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10865_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10865_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10865_217 #x0000000000000001))
(assert (= var3879424 temp10865_217))
(assert (= temp10865_218 #x0000000000000000))
(assert (= var4133117 temp10865_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10865_219 #x0000000000000002))
(assert (= var4339331 temp10865_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10865_220 #x0000000000000000))
(assert (= var4404892 temp10865_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp10865_221 #x0000000000000001))
(assert (= var211058 temp10865_221))
(model-add temp10865_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10865_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10865_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10865_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




