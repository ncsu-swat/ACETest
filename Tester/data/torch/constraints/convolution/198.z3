(declare-fun temp264_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp264_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp264_3 () (_ BitVec 64))
(declare-fun temp264_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp264_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp264_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp264_7 () (_ BitVec 64))
(declare-fun temp264_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp264_9 () (_ BitVec 64))
(declare-fun temp264_10 () (_ BitVec 64))
(declare-fun temp264_11 () (_ BitVec 64))
(declare-fun temp264_12 () (_ BitVec 64))
(declare-fun temp264_13 () (_ BitVec 64))
(declare-fun temp264_14 () (_ BitVec 64))
(declare-fun temp264_15 () (_ BitVec 64))
(declare-fun temp264_16 () (_ BitVec 64))
(declare-fun temp264_17 () (_ BitVec 64))
(declare-fun temp264_18 () (_ BitVec 64))
(declare-fun temp264_19 () (_ BitVec 64))
(declare-fun temp264_20 () (_ BitVec 64))
(declare-fun temp264_21 () (_ BitVec 64))
(declare-fun temp264_22 () (_ BitVec 64))
(declare-fun temp264_23 () (_ BitVec 64))
(declare-fun temp264_24 () (_ BitVec 64))
(declare-fun temp264_25 () (_ BitVec 64))
(declare-fun temp264_26 () (_ BitVec 64))
(declare-fun temp264_27 () (_ BitVec 64))
(declare-fun temp264_28 () (_ BitVec 64))
(declare-fun temp264_29 () (_ BitVec 64))
(declare-fun temp264_30 () (_ BitVec 64))
(declare-fun temp264_31 () (_ BitVec 64))
(declare-fun temp264_32 () (_ BitVec 64))
(declare-fun temp264_33 () (_ BitVec 64))
(declare-fun temp264_34 () (_ BitVec 64))
(declare-fun temp264_35 () (_ BitVec 64))
(declare-fun temp264_36 () (_ BitVec 64))
(declare-fun temp264_37 () (_ BitVec 64))
(declare-fun temp264_38 () (_ BitVec 64))
(declare-fun temp264_39 () (_ BitVec 64))
(declare-fun temp264_40 () (_ BitVec 64))
(declare-fun temp264_41 () (_ BitVec 64))
(declare-fun temp264_42 () (_ BitVec 64))
(declare-fun temp264_43 () (_ BitVec 64))
(declare-fun temp264_44 () (_ BitVec 64))
(declare-fun temp264_45 () (_ BitVec 64))
(declare-fun temp264_46 () (_ BitVec 64))
(declare-fun temp264_47 () (_ BitVec 64))
(declare-fun temp264_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp264_49 () (_ BitVec 64))
(declare-fun temp264_50 () (_ BitVec 64))
(declare-fun temp264_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp264_52 () (_ BitVec 64))
(declare-fun temp264_53 () (_ BitVec 64))
(declare-fun temp264_54 () (_ BitVec 64))
(declare-fun temp264_55 () (_ BitVec 64))
(declare-fun temp264_56 () (_ BitVec 64))
(declare-fun temp264_57 () (_ BitVec 64))
(declare-fun temp264_58 () (_ BitVec 64))
(declare-fun temp264_59 () (_ BitVec 64))
(declare-fun temp264_60 () (_ BitVec 64))
(declare-fun temp264_61 () (_ BitVec 64))
(declare-fun temp264_62 () (_ BitVec 64))
(declare-fun temp264_63 () (_ BitVec 64))
(declare-fun temp264_64 () (_ BitVec 64))
(declare-fun temp264_65 () (_ BitVec 64))
(declare-fun temp264_66 () (_ BitVec 64))
(declare-fun temp264_67 () (_ BitVec 64))
(declare-fun temp264_68 () (_ BitVec 64))
(declare-fun temp264_69 () (_ BitVec 64))
(declare-fun temp264_70 () (_ BitVec 64))
(declare-fun temp264_71 () (_ BitVec 64))
(declare-fun temp264_72 () (_ BitVec 64))
(declare-fun temp264_73 () (_ BitVec 64))
(declare-fun temp264_74 () (_ BitVec 64))
(declare-fun temp264_75 () (_ BitVec 64))
(declare-fun temp264_76 () (_ BitVec 64))
(declare-fun temp264_77 () (_ BitVec 64))
(declare-fun temp264_78 () (_ BitVec 64))
(declare-fun temp264_79 () (_ BitVec 64))
(declare-fun temp264_80 () (_ BitVec 64))
(declare-fun temp264_81 () (_ BitVec 64))
(declare-fun temp264_82 () (_ BitVec 64))
(declare-fun temp264_83 () (_ BitVec 64))
(declare-fun temp264_84 () (_ BitVec 64))
(declare-fun temp264_85 () (_ BitVec 64))
(declare-fun temp264_86 () (_ BitVec 64))
(declare-fun temp264_87 () (_ BitVec 64))
(declare-fun temp264_88 () (_ BitVec 64))
(declare-fun temp264_89 () (_ BitVec 64))
(declare-fun temp264_90 () (_ BitVec 64))
(declare-fun temp264_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp264_92 () (_ BitVec 64))
(declare-fun temp264_93 () (_ BitVec 64))
(declare-fun temp264_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp264_95 () (_ BitVec 64))
(declare-fun temp264_96 () (_ BitVec 64))
(declare-fun temp264_97 () (_ BitVec 64))
(declare-fun temp264_98 () (_ BitVec 64))
(declare-fun temp264_99 () (_ BitVec 64))
(declare-fun temp264_100 () (_ BitVec 64))
(declare-fun temp264_101 () (_ BitVec 64))
(declare-fun temp264_102 () (_ BitVec 64))
(declare-fun temp264_103 () (_ BitVec 64))
(declare-fun temp264_104 () (_ BitVec 64))
(declare-fun temp264_105 () (_ BitVec 64))
(declare-fun temp264_106 () (_ BitVec 64))
(declare-fun temp264_107 () (_ BitVec 64))
(declare-fun temp264_108 () (_ BitVec 64))
(declare-fun temp264_109 () (_ BitVec 64))
(declare-fun temp264_110 () (_ BitVec 64))
(declare-fun temp264_111 () (_ BitVec 64))
(declare-fun temp264_112 () (_ BitVec 64))
(declare-fun temp264_113 () (_ BitVec 64))
(declare-fun temp264_114 () (_ BitVec 64))
(declare-fun temp264_115 () (_ BitVec 64))
(declare-fun temp264_116 () (_ BitVec 64))
(declare-fun temp264_117 () (_ BitVec 64))
(declare-fun temp264_118 () (_ BitVec 64))
(declare-fun temp264_119 () (_ BitVec 64))
(declare-fun temp264_120 () (_ BitVec 64))
(declare-fun temp264_121 () (_ BitVec 64))
(declare-fun temp264_122 () (_ BitVec 64))
(declare-fun temp264_123 () (_ BitVec 64))
(declare-fun temp264_124 () (_ BitVec 64))
(declare-fun temp264_125 () (_ BitVec 64))
(declare-fun temp264_126 () (_ BitVec 64))
(declare-fun temp264_127 () (_ BitVec 64))
(declare-fun temp264_128 () (_ BitVec 64))
(declare-fun temp264_129 () (_ BitVec 64))
(declare-fun temp264_130 () (_ BitVec 64))
(declare-fun temp264_131 () (_ BitVec 64))
(declare-fun temp264_132 () (_ BitVec 64))
(declare-fun temp264_133 () (_ BitVec 64))
(declare-fun temp264_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp264_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp264_136 () (_ BitVec 64))
(declare-fun temp264_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp264_138 () (_ BitVec 64))
(declare-fun temp264_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp264_140 () (_ BitVec 64))
(declare-fun temp264_141 () (_ BitVec 64))
(declare-fun temp264_142 () (_ BitVec 64))
(declare-fun temp264_143 () (_ BitVec 64))
(declare-fun temp264_144 () (_ BitVec 64))
(declare-fun temp264_145 () (_ BitVec 64))
(declare-fun temp264_146 () (_ BitVec 64))
(declare-fun temp264_147 () (_ BitVec 64))
(declare-fun temp264_148 () (_ BitVec 64))
(declare-fun temp264_149 () (_ BitVec 64))
(declare-fun temp264_150 () (_ BitVec 64))
(declare-fun temp264_151 () (_ BitVec 64))
(declare-fun temp264_152 () (_ BitVec 64))
(declare-fun temp264_153 () (_ BitVec 64))
(declare-fun temp264_154 () (_ BitVec 64))
(declare-fun temp264_155 () (_ BitVec 64))
(declare-fun temp264_157 () (_ BitVec 64))
(declare-fun temp264_158 () (_ BitVec 64))
(declare-fun temp264_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp264_159 () (_ BitVec 64))
(declare-fun temp264_160 () (_ BitVec 64))
(declare-fun temp264_162 () (_ BitVec 64))
(declare-fun temp264_163 () (_ BitVec 64))
(declare-fun temp264_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp264_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp264_165 () (_ BitVec 64))
(declare-fun temp264_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp264_167 () (_ BitVec 64))
(declare-fun temp264_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp264_169 () (_ BitVec 64))
(declare-fun temp264_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp264_171 () (_ BitVec 64))
(declare-fun temp264_172 () (_ BitVec 64))
(declare-fun temp264_173 () (_ BitVec 64))
(declare-fun temp264_174 () (_ BitVec 64))
(declare-fun temp264_175 () (_ BitVec 64))
(declare-fun temp264_176 () (_ BitVec 64))
(declare-fun temp264_177 () (_ BitVec 64))
(declare-fun temp264_178 () (_ BitVec 64))
(declare-fun temp264_179 () (_ BitVec 64))
(declare-fun temp264_180 () (_ BitVec 64))
(declare-fun temp264_181 () (_ BitVec 64))
(declare-fun temp264_182 () (_ BitVec 64))
(declare-fun temp264_183 () (_ BitVec 64))
(declare-fun temp264_184 () (_ BitVec 64))
(declare-fun temp264_185 () (_ BitVec 64))
(declare-fun temp264_186 () (_ BitVec 64))
(declare-fun temp264_187 () (_ BitVec 64))
(declare-fun temp264_188 () (_ BitVec 64))
(declare-fun temp264_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp264_190 () (_ BitVec 64))
(declare-fun temp264_192 () (_ BitVec 64))
(declare-fun temp264_193 () (_ BitVec 64))
(declare-fun temp264_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp264_194 () (_ BitVec 64))
(declare-fun temp264_195 () (_ BitVec 64))
(declare-fun temp264_197 () (_ BitVec 64))
(declare-fun temp264_198 () (_ BitVec 64))
(declare-fun temp264_196 () (_ BitVec 64))
(declare-fun temp264_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp264_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp264_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp264_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp264_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp264_204 () (_ BitVec 64))
(declare-fun temp264_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp264_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp264_207 () (_ BitVec 64))
(declare-fun temp264_208 () (_ BitVec 64))
(declare-fun temp264_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp264_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp264_211 () (_ BitVec 64))
(declare-fun temp264_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp264_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp264_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var5058960 () (_ BitVec 64))
(declare-fun var5321104 () (_ BitVec 64))
(declare-fun temp264_215 () (_ BitVec 64))
(declare-fun var5648784 () (_ BitVec 64))
(declare-fun temp264_216 () (_ BitVec 64))
(assert (= temp264_1 #x0000000000000001))
(assert (= var77203 temp264_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp264_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp264_2)))
(assert (= temp264_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp264_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp264_4 #x0000000000000000))
(assert (= var210941 temp264_4))
(assert (= temp264_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp264_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp264_6 #x0000000000000000))
(assert (= var210986 temp264_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp264_7 #x0000000000000000))
(assert (= temp264_8 temp264_7))
(assert (= temp264_9 (select ARGNAME_padding_NAMEEND_VAL temp264_8)))
(assert (= temp264_10 #x0000000000000001))
(assert (= temp264_11 temp264_10))
(assert (= temp264_12 (select ARGNAME_padding_NAMEEND_VAL temp264_11)))
(assert (= temp264_13 #x0000000000000002))
(assert (= temp264_14 temp264_13))
(assert (= temp264_15 (select ARGNAME_padding_NAMEEND_VAL temp264_14)))
(assert (= temp264_16 #x0000000000000003))
(assert (= temp264_17 temp264_16))
(assert (= temp264_18 (select ARGNAME_padding_NAMEEND_VAL temp264_17)))
(assert (= temp264_19 #x0000000000000004))
(assert (= temp264_20 temp264_19))
(assert (= temp264_21 (select ARGNAME_padding_NAMEEND_VAL temp264_20)))
(assert (= temp264_22 #x0000000000000005))
(assert (= temp264_23 temp264_22))
(assert (= temp264_24 (select ARGNAME_padding_NAMEEND_VAL temp264_23)))
(assert (= temp264_25 #x0000000000000000))
(assert (= temp264_26 #x0000000000000000))
(assert (= temp264_27 temp264_26))
(assert (= temp264_28 (select ARGNAME_padding_NAMEEND_VAL temp264_27)))
(assert (= temp264_29 #x0000000000000000))
(assert (= temp264_30 #x0000000000000001))
(assert (= temp264_31 temp264_30))
(assert (= temp264_32 (select ARGNAME_padding_NAMEEND_VAL temp264_31)))
(assert (= temp264_33 #x0000000000000000))
(assert (= temp264_34 #x0000000000000002))
(assert (= temp264_35 temp264_34))
(assert (= temp264_36 (select ARGNAME_padding_NAMEEND_VAL temp264_35)))
(assert (= temp264_37 #x0000000000000000))
(assert (= temp264_38 #x0000000000000003))
(assert (= temp264_39 temp264_38))
(assert (= temp264_40 (select ARGNAME_padding_NAMEEND_VAL temp264_39)))
(assert (= temp264_41 #x0000000000000000))
(assert (= temp264_42 #x0000000000000004))
(assert (= temp264_43 temp264_42))
(assert (= temp264_44 (select ARGNAME_padding_NAMEEND_VAL temp264_43)))
(assert (= temp264_45 #x0000000000000000))
(assert (= temp264_46 #x0000000000000005))
(assert (= temp264_47 temp264_46))
(assert (= temp264_48 (select ARGNAME_padding_NAMEEND_VAL temp264_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp264_28 temp264_25)
             (bvslt temp264_32 temp264_29)
             (bvslt temp264_36 temp264_33)
             (bvslt temp264_40 temp264_37)
             (bvslt temp264_44 temp264_41)
             (bvslt temp264_48 temp264_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp264_49 #x0000000000000000))
(assert (= var1191714 temp264_49))
(assert (= temp264_50 #x0000000000000000))
(assert (= temp264_51 temp264_50))
(assert (= temp264_52 (select ARGNAME_output_padding_NAMEEND_VAL temp264_51)))
(assert (= temp264_53 #x0000000000000001))
(assert (= temp264_54 temp264_53))
(assert (= temp264_55 (select ARGNAME_output_padding_NAMEEND_VAL temp264_54)))
(assert (= temp264_56 #x0000000000000002))
(assert (= temp264_57 temp264_56))
(assert (= temp264_58 (select ARGNAME_output_padding_NAMEEND_VAL temp264_57)))
(assert (= temp264_59 #x0000000000000003))
(assert (= temp264_60 temp264_59))
(assert (= temp264_61 (select ARGNAME_output_padding_NAMEEND_VAL temp264_60)))
(assert (= temp264_62 #x0000000000000004))
(assert (= temp264_63 temp264_62))
(assert (= temp264_64 (select ARGNAME_output_padding_NAMEEND_VAL temp264_63)))
(assert (= temp264_65 #x0000000000000005))
(assert (= temp264_66 temp264_65))
(assert (= temp264_67 (select ARGNAME_output_padding_NAMEEND_VAL temp264_66)))
(assert (= temp264_68 #x0000000000000000))
(assert (= temp264_69 #x0000000000000000))
(assert (= temp264_70 temp264_69))
(assert (= temp264_71 (select ARGNAME_output_padding_NAMEEND_VAL temp264_70)))
(assert (= temp264_72 #x0000000000000000))
(assert (= temp264_73 #x0000000000000001))
(assert (= temp264_74 temp264_73))
(assert (= temp264_75 (select ARGNAME_output_padding_NAMEEND_VAL temp264_74)))
(assert (= temp264_76 #x0000000000000000))
(assert (= temp264_77 #x0000000000000002))
(assert (= temp264_78 temp264_77))
(assert (= temp264_79 (select ARGNAME_output_padding_NAMEEND_VAL temp264_78)))
(assert (= temp264_80 #x0000000000000000))
(assert (= temp264_81 #x0000000000000003))
(assert (= temp264_82 temp264_81))
(assert (= temp264_83 (select ARGNAME_output_padding_NAMEEND_VAL temp264_82)))
(assert (= temp264_84 #x0000000000000000))
(assert (= temp264_85 #x0000000000000004))
(assert (= temp264_86 temp264_85))
(assert (= temp264_87 (select ARGNAME_output_padding_NAMEEND_VAL temp264_86)))
(assert (= temp264_88 #x0000000000000000))
(assert (= temp264_89 #x0000000000000005))
(assert (= temp264_90 temp264_89))
(assert (= temp264_91 (select ARGNAME_output_padding_NAMEEND_VAL temp264_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp264_71 temp264_68)
             (bvslt temp264_75 temp264_72)
             (bvslt temp264_79 temp264_76)
             (bvslt temp264_83 temp264_80)
             (bvslt temp264_87 temp264_84)
             (bvslt temp264_91 temp264_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp264_92 #x0000000000000000))
(assert (= var1191725 temp264_92))
(assert (= temp264_93 #x0000000000000000))
(assert (= temp264_94 temp264_93))
(assert (= temp264_95 (select ARGNAME_stride_NAMEEND_VAL temp264_94)))
(assert (= temp264_96 #x0000000000000001))
(assert (= temp264_97 temp264_96))
(assert (= temp264_98 (select ARGNAME_stride_NAMEEND_VAL temp264_97)))
(assert (= temp264_99 #x0000000000000002))
(assert (= temp264_100 temp264_99))
(assert (= temp264_101 (select ARGNAME_stride_NAMEEND_VAL temp264_100)))
(assert (= temp264_102 #x0000000000000003))
(assert (= temp264_103 temp264_102))
(assert (= temp264_104 (select ARGNAME_stride_NAMEEND_VAL temp264_103)))
(assert (= temp264_105 #x0000000000000004))
(assert (= temp264_106 temp264_105))
(assert (= temp264_107 (select ARGNAME_stride_NAMEEND_VAL temp264_106)))
(assert (= temp264_108 #x0000000000000005))
(assert (= temp264_109 temp264_108))
(assert (= temp264_110 (select ARGNAME_stride_NAMEEND_VAL temp264_109)))
(assert (= temp264_111 #x0000000000000000))
(assert (= temp264_112 #x0000000000000000))
(assert (= temp264_113 temp264_112))
(assert (= temp264_114 (select ARGNAME_stride_NAMEEND_VAL temp264_113)))
(assert (= temp264_115 #x0000000000000000))
(assert (= temp264_116 #x0000000000000001))
(assert (= temp264_117 temp264_116))
(assert (= temp264_118 (select ARGNAME_stride_NAMEEND_VAL temp264_117)))
(assert (= temp264_119 #x0000000000000000))
(assert (= temp264_120 #x0000000000000002))
(assert (= temp264_121 temp264_120))
(assert (= temp264_122 (select ARGNAME_stride_NAMEEND_VAL temp264_121)))
(assert (= temp264_123 #x0000000000000000))
(assert (= temp264_124 #x0000000000000003))
(assert (= temp264_125 temp264_124))
(assert (= temp264_126 (select ARGNAME_stride_NAMEEND_VAL temp264_125)))
(assert (= temp264_127 #x0000000000000000))
(assert (= temp264_128 #x0000000000000004))
(assert (= temp264_129 temp264_128))
(assert (= temp264_130 (select ARGNAME_stride_NAMEEND_VAL temp264_129)))
(assert (= temp264_131 #x0000000000000000))
(assert (= temp264_132 #x0000000000000005))
(assert (= temp264_133 temp264_132))
(assert (= temp264_134 (select ARGNAME_stride_NAMEEND_VAL temp264_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp264_114 temp264_111)
             (bvsle temp264_118 temp264_115)
             (bvsle temp264_122 temp264_119)
             (bvsle temp264_126 temp264_123)
             (bvsle temp264_130 temp264_127)
             (bvsle temp264_134 temp264_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp264_135 #x0000000000000000))
(assert (= var1191735 temp264_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp264_136 #x0000000000000001))
(assert (= var1191747 temp264_136))
(assert (= temp264_137 #x0000000000000000))
(assert (= var1179826 temp264_137))
(assert (= temp264_138 #x0000000000000000))
(assert (= temp264_139 temp264_138))
(assert (= temp264_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp264_139)))
(assert (= temp264_141 #x0000000000000001))
(assert (= temp264_142 temp264_141))
(assert (= temp264_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp264_142)))
(assert (= temp264_144 #x0000000000000002))
(assert (= temp264_145 temp264_144))
(assert (= temp264_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp264_145)))
(assert (= temp264_147 #x0000000000000003))
(assert (= temp264_148 temp264_147))
(assert (= temp264_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp264_148)))
(assert (= temp264_150 #x0000000000000004))
(assert (= temp264_151 temp264_150))
(assert (= temp264_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp264_151)))
(assert (= temp264_153 #x0000000000000005))
(assert (= temp264_154 temp264_153))
(assert (= temp264_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp264_154)))
(assert (= temp264_157 var1179826))
(assert (= temp264_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp264_157)))
(assert (= temp264_156 temp264_158))
(assert (= var1191780
   (ite (bvslt temp264_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp264_159 #x0000000000000000))
(assert (= var1191780 temp264_159))
(assert (= temp264_160 #x0000000000000000))
(assert (= var1179826 temp264_160))
(assert (= temp264_162 var1179826))
(assert (= temp264_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp264_162)))
(assert (= temp264_161 temp264_163))
(assert (= var1191802 (bvsmod temp264_161 ARGNAME_groups_NAMEEND)))
(assert (= temp264_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp264_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp264_165 #x0000000000000001))
(assert (= var1191803 temp264_165))
(assert (= temp264_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp264_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp264_167 #x0000000000000001))
(assert (= var1191823 temp264_167))
(assert (= temp264_168 #x0000000000000001))
(assert (= var1180714 temp264_168))
(assert (= temp264_169 #x0000000000000000))
(assert (= temp264_170 temp264_169))
(assert (= temp264_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp264_170)))
(assert (= temp264_172 #x0000000000000001))
(assert (= temp264_173 temp264_172))
(assert (= temp264_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp264_173)))
(assert (= temp264_175 #x0000000000000002))
(assert (= temp264_176 temp264_175))
(assert (= temp264_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp264_176)))
(assert (= temp264_178 #x0000000000000003))
(assert (= temp264_179 temp264_178))
(assert (= temp264_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp264_179)))
(assert (= temp264_181 #x0000000000000004))
(assert (= temp264_182 temp264_181))
(assert (= temp264_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp264_182)))
(assert (= temp264_184 #x0000000000000005))
(assert (= temp264_185 temp264_184))
(assert (= temp264_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp264_185)))
(assert (= temp264_187 #x0000000000000000))
(assert (= temp264_188
   (ite (bvslt var1180714 temp264_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp264_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp264_188)))
(assert (= var1191831 temp264_189))
(assert (bvslt (ite (bvslt var1180714 temp264_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp264_190 #x0000000000000001))
(assert (= var1180714 temp264_190))
(assert (= temp264_192 var1180714))
(assert (= temp264_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp264_192)))
(assert (= temp264_191 temp264_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp264_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp264_194 #x0000000000000001))
(assert (= var1191836 temp264_194))
(assert (= temp264_195 #x0000000000000000))
(assert (= var1179826 temp264_195))
(assert (= temp264_197 var1179826))
(assert (= temp264_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp264_197)))
(assert (= temp264_196 temp264_198))
(assert (= temp264_199 #x0000000000000002))
(assert (= var1586025 temp264_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp264_200 #x0000000000000001))
(assert (= var1191993 temp264_200))
(assert (= temp264_201 #x0000000000000001))
(assert (= var2700303 temp264_201))
(assert (= temp264_202 #x0000000000000001))
(assert (= var2962447 temp264_202))
(assert (= temp264_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp264_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp264_204 #x0000000000000001))
(assert (= var211058 temp264_204))
(assert (= temp264_205 #x0000000000000001))
(assert (= var211188 temp264_205))
(assert (= var3879401 var211188))
(assert (= temp264_206 #x0000000000000000))
(assert (= var3866802 temp264_206))
(assert (= temp264_207 #x0000000000000000))
(assert (= temp264_208
   (ite (bvslt var3866802 temp264_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp264_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp264_208)))
(assert (= var3879420 temp264_209))
(assert (bvslt (ite (bvslt var3866802 temp264_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp264_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp264_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp264_211 #x0000000000000001))
(assert (= var3879421 temp264_211))
(assert (= temp264_212 #x0000000000000000))
(assert (= var4079423 temp264_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp264_213 #x0000000000000002))
(assert (= var4208259 temp264_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp264_214 #x0000000000000000))
(assert (= var4273820 temp264_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var5058960 var211201))
(assert (= var5321104 var211201))
(assert (= temp264_215 #x0000000000000000))
(assert (= var5648784 temp264_215))
(assert (= temp264_216 #x0000000000000001))
(assert (= var211058 temp264_216))
(model-add temp264_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp264_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp264_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp264_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))



