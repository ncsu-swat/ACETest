(declare-fun temp288_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp288_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp288_3 () (_ BitVec 64))
(declare-fun temp288_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp288_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp288_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp288_7 () (_ BitVec 64))
(declare-fun temp288_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp288_9 () (_ BitVec 64))
(declare-fun temp288_10 () (_ BitVec 64))
(declare-fun temp288_11 () (_ BitVec 64))
(declare-fun temp288_12 () (_ BitVec 64))
(declare-fun temp288_13 () (_ BitVec 64))
(declare-fun temp288_14 () (_ BitVec 64))
(declare-fun temp288_15 () (_ BitVec 64))
(declare-fun temp288_16 () (_ BitVec 64))
(declare-fun temp288_17 () (_ BitVec 64))
(declare-fun temp288_18 () (_ BitVec 64))
(declare-fun temp288_19 () (_ BitVec 64))
(declare-fun temp288_20 () (_ BitVec 64))
(declare-fun temp288_21 () (_ BitVec 64))
(declare-fun temp288_22 () (_ BitVec 64))
(declare-fun temp288_23 () (_ BitVec 64))
(declare-fun temp288_24 () (_ BitVec 64))
(declare-fun temp288_25 () (_ BitVec 64))
(declare-fun temp288_26 () (_ BitVec 64))
(declare-fun temp288_27 () (_ BitVec 64))
(declare-fun temp288_28 () (_ BitVec 64))
(declare-fun temp288_29 () (_ BitVec 64))
(declare-fun temp288_30 () (_ BitVec 64))
(declare-fun temp288_31 () (_ BitVec 64))
(declare-fun temp288_32 () (_ BitVec 64))
(declare-fun temp288_33 () (_ BitVec 64))
(declare-fun temp288_34 () (_ BitVec 64))
(declare-fun temp288_35 () (_ BitVec 64))
(declare-fun temp288_36 () (_ BitVec 64))
(declare-fun temp288_37 () (_ BitVec 64))
(declare-fun temp288_38 () (_ BitVec 64))
(declare-fun temp288_39 () (_ BitVec 64))
(declare-fun temp288_40 () (_ BitVec 64))
(declare-fun temp288_41 () (_ BitVec 64))
(declare-fun temp288_42 () (_ BitVec 64))
(declare-fun temp288_43 () (_ BitVec 64))
(declare-fun temp288_44 () (_ BitVec 64))
(declare-fun temp288_45 () (_ BitVec 64))
(declare-fun temp288_46 () (_ BitVec 64))
(declare-fun temp288_47 () (_ BitVec 64))
(declare-fun temp288_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp288_49 () (_ BitVec 64))
(declare-fun temp288_50 () (_ BitVec 64))
(declare-fun temp288_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp288_52 () (_ BitVec 64))
(declare-fun temp288_53 () (_ BitVec 64))
(declare-fun temp288_54 () (_ BitVec 64))
(declare-fun temp288_55 () (_ BitVec 64))
(declare-fun temp288_56 () (_ BitVec 64))
(declare-fun temp288_57 () (_ BitVec 64))
(declare-fun temp288_58 () (_ BitVec 64))
(declare-fun temp288_59 () (_ BitVec 64))
(declare-fun temp288_60 () (_ BitVec 64))
(declare-fun temp288_61 () (_ BitVec 64))
(declare-fun temp288_62 () (_ BitVec 64))
(declare-fun temp288_63 () (_ BitVec 64))
(declare-fun temp288_64 () (_ BitVec 64))
(declare-fun temp288_65 () (_ BitVec 64))
(declare-fun temp288_66 () (_ BitVec 64))
(declare-fun temp288_67 () (_ BitVec 64))
(declare-fun temp288_68 () (_ BitVec 64))
(declare-fun temp288_69 () (_ BitVec 64))
(declare-fun temp288_70 () (_ BitVec 64))
(declare-fun temp288_71 () (_ BitVec 64))
(declare-fun temp288_72 () (_ BitVec 64))
(declare-fun temp288_73 () (_ BitVec 64))
(declare-fun temp288_74 () (_ BitVec 64))
(declare-fun temp288_75 () (_ BitVec 64))
(declare-fun temp288_76 () (_ BitVec 64))
(declare-fun temp288_77 () (_ BitVec 64))
(declare-fun temp288_78 () (_ BitVec 64))
(declare-fun temp288_79 () (_ BitVec 64))
(declare-fun temp288_80 () (_ BitVec 64))
(declare-fun temp288_81 () (_ BitVec 64))
(declare-fun temp288_82 () (_ BitVec 64))
(declare-fun temp288_83 () (_ BitVec 64))
(declare-fun temp288_84 () (_ BitVec 64))
(declare-fun temp288_85 () (_ BitVec 64))
(declare-fun temp288_86 () (_ BitVec 64))
(declare-fun temp288_87 () (_ BitVec 64))
(declare-fun temp288_88 () (_ BitVec 64))
(declare-fun temp288_89 () (_ BitVec 64))
(declare-fun temp288_90 () (_ BitVec 64))
(declare-fun temp288_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp288_92 () (_ BitVec 64))
(declare-fun temp288_93 () (_ BitVec 64))
(declare-fun temp288_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp288_95 () (_ BitVec 64))
(declare-fun temp288_96 () (_ BitVec 64))
(declare-fun temp288_97 () (_ BitVec 64))
(declare-fun temp288_98 () (_ BitVec 64))
(declare-fun temp288_99 () (_ BitVec 64))
(declare-fun temp288_100 () (_ BitVec 64))
(declare-fun temp288_101 () (_ BitVec 64))
(declare-fun temp288_102 () (_ BitVec 64))
(declare-fun temp288_103 () (_ BitVec 64))
(declare-fun temp288_104 () (_ BitVec 64))
(declare-fun temp288_105 () (_ BitVec 64))
(declare-fun temp288_106 () (_ BitVec 64))
(declare-fun temp288_107 () (_ BitVec 64))
(declare-fun temp288_108 () (_ BitVec 64))
(declare-fun temp288_109 () (_ BitVec 64))
(declare-fun temp288_110 () (_ BitVec 64))
(declare-fun temp288_111 () (_ BitVec 64))
(declare-fun temp288_112 () (_ BitVec 64))
(declare-fun temp288_113 () (_ BitVec 64))
(declare-fun temp288_114 () (_ BitVec 64))
(declare-fun temp288_115 () (_ BitVec 64))
(declare-fun temp288_116 () (_ BitVec 64))
(declare-fun temp288_117 () (_ BitVec 64))
(declare-fun temp288_118 () (_ BitVec 64))
(declare-fun temp288_119 () (_ BitVec 64))
(declare-fun temp288_120 () (_ BitVec 64))
(declare-fun temp288_121 () (_ BitVec 64))
(declare-fun temp288_122 () (_ BitVec 64))
(declare-fun temp288_123 () (_ BitVec 64))
(declare-fun temp288_124 () (_ BitVec 64))
(declare-fun temp288_125 () (_ BitVec 64))
(declare-fun temp288_126 () (_ BitVec 64))
(declare-fun temp288_127 () (_ BitVec 64))
(declare-fun temp288_128 () (_ BitVec 64))
(declare-fun temp288_129 () (_ BitVec 64))
(declare-fun temp288_130 () (_ BitVec 64))
(declare-fun temp288_131 () (_ BitVec 64))
(declare-fun temp288_132 () (_ BitVec 64))
(declare-fun temp288_133 () (_ BitVec 64))
(declare-fun temp288_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp288_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp288_136 () (_ BitVec 64))
(declare-fun temp288_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp288_138 () (_ BitVec 64))
(declare-fun temp288_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp288_140 () (_ BitVec 64))
(declare-fun temp288_141 () (_ BitVec 64))
(declare-fun temp288_142 () (_ BitVec 64))
(declare-fun temp288_143 () (_ BitVec 64))
(declare-fun temp288_144 () (_ BitVec 64))
(declare-fun temp288_145 () (_ BitVec 64))
(declare-fun temp288_146 () (_ BitVec 64))
(declare-fun temp288_147 () (_ BitVec 64))
(declare-fun temp288_148 () (_ BitVec 64))
(declare-fun temp288_149 () (_ BitVec 64))
(declare-fun temp288_150 () (_ BitVec 64))
(declare-fun temp288_151 () (_ BitVec 64))
(declare-fun temp288_152 () (_ BitVec 64))
(declare-fun temp288_153 () (_ BitVec 64))
(declare-fun temp288_154 () (_ BitVec 64))
(declare-fun temp288_155 () (_ BitVec 64))
(declare-fun temp288_157 () (_ BitVec 64))
(declare-fun temp288_158 () (_ BitVec 64))
(declare-fun temp288_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp288_159 () (_ BitVec 64))
(declare-fun temp288_160 () (_ BitVec 64))
(declare-fun temp288_162 () (_ BitVec 64))
(declare-fun temp288_163 () (_ BitVec 64))
(declare-fun temp288_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp288_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp288_165 () (_ BitVec 64))
(declare-fun temp288_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp288_167 () (_ BitVec 64))
(declare-fun temp288_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp288_169 () (_ BitVec 64))
(declare-fun temp288_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp288_171 () (_ BitVec 64))
(declare-fun temp288_172 () (_ BitVec 64))
(declare-fun temp288_173 () (_ BitVec 64))
(declare-fun temp288_174 () (_ BitVec 64))
(declare-fun temp288_175 () (_ BitVec 64))
(declare-fun temp288_176 () (_ BitVec 64))
(declare-fun temp288_177 () (_ BitVec 64))
(declare-fun temp288_178 () (_ BitVec 64))
(declare-fun temp288_179 () (_ BitVec 64))
(declare-fun temp288_180 () (_ BitVec 64))
(declare-fun temp288_181 () (_ BitVec 64))
(declare-fun temp288_182 () (_ BitVec 64))
(declare-fun temp288_183 () (_ BitVec 64))
(declare-fun temp288_184 () (_ BitVec 64))
(declare-fun temp288_185 () (_ BitVec 64))
(declare-fun temp288_186 () (_ BitVec 64))
(declare-fun temp288_187 () (_ BitVec 64))
(declare-fun temp288_188 () (_ BitVec 64))
(declare-fun temp288_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp288_190 () (_ BitVec 64))
(declare-fun temp288_192 () (_ BitVec 64))
(declare-fun temp288_193 () (_ BitVec 64))
(declare-fun temp288_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp288_194 () (_ BitVec 64))
(declare-fun temp288_195 () (_ BitVec 64))
(declare-fun temp288_197 () (_ BitVec 64))
(declare-fun temp288_198 () (_ BitVec 64))
(declare-fun temp288_196 () (_ BitVec 64))
(declare-fun temp288_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp288_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp288_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp288_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp288_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp288_204 () (_ BitVec 64))
(declare-fun temp288_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp288_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp288_207 () (_ BitVec 64))
(declare-fun temp288_208 () (_ BitVec 64))
(declare-fun temp288_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp288_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp288_211 () (_ BitVec 64))
(declare-fun temp288_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp288_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp288_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var5321104 () (_ BitVec 64))
(declare-fun var5583248 () (_ BitVec 64))
(declare-fun temp288_215 () (_ BitVec 64))
(declare-fun var5910928 () (_ BitVec 64))
(declare-fun temp288_216 () (_ BitVec 64))
(assert (= temp288_1 #x0000000000000001))
(assert (= var77203 temp288_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp288_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp288_2)))
(assert (= temp288_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp288_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp288_4 #x0000000000000000))
(assert (= var210941 temp288_4))
(assert (= temp288_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp288_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp288_6 #x0000000000000000))
(assert (= var210986 temp288_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp288_7 #x0000000000000000))
(assert (= temp288_8 temp288_7))
(assert (= temp288_9 (select ARGNAME_padding_NAMEEND_VAL temp288_8)))
(assert (= temp288_10 #x0000000000000001))
(assert (= temp288_11 temp288_10))
(assert (= temp288_12 (select ARGNAME_padding_NAMEEND_VAL temp288_11)))
(assert (= temp288_13 #x0000000000000002))
(assert (= temp288_14 temp288_13))
(assert (= temp288_15 (select ARGNAME_padding_NAMEEND_VAL temp288_14)))
(assert (= temp288_16 #x0000000000000003))
(assert (= temp288_17 temp288_16))
(assert (= temp288_18 (select ARGNAME_padding_NAMEEND_VAL temp288_17)))
(assert (= temp288_19 #x0000000000000004))
(assert (= temp288_20 temp288_19))
(assert (= temp288_21 (select ARGNAME_padding_NAMEEND_VAL temp288_20)))
(assert (= temp288_22 #x0000000000000005))
(assert (= temp288_23 temp288_22))
(assert (= temp288_24 (select ARGNAME_padding_NAMEEND_VAL temp288_23)))
(assert (= temp288_25 #x0000000000000000))
(assert (= temp288_26 #x0000000000000000))
(assert (= temp288_27 temp288_26))
(assert (= temp288_28 (select ARGNAME_padding_NAMEEND_VAL temp288_27)))
(assert (= temp288_29 #x0000000000000000))
(assert (= temp288_30 #x0000000000000001))
(assert (= temp288_31 temp288_30))
(assert (= temp288_32 (select ARGNAME_padding_NAMEEND_VAL temp288_31)))
(assert (= temp288_33 #x0000000000000000))
(assert (= temp288_34 #x0000000000000002))
(assert (= temp288_35 temp288_34))
(assert (= temp288_36 (select ARGNAME_padding_NAMEEND_VAL temp288_35)))
(assert (= temp288_37 #x0000000000000000))
(assert (= temp288_38 #x0000000000000003))
(assert (= temp288_39 temp288_38))
(assert (= temp288_40 (select ARGNAME_padding_NAMEEND_VAL temp288_39)))
(assert (= temp288_41 #x0000000000000000))
(assert (= temp288_42 #x0000000000000004))
(assert (= temp288_43 temp288_42))
(assert (= temp288_44 (select ARGNAME_padding_NAMEEND_VAL temp288_43)))
(assert (= temp288_45 #x0000000000000000))
(assert (= temp288_46 #x0000000000000005))
(assert (= temp288_47 temp288_46))
(assert (= temp288_48 (select ARGNAME_padding_NAMEEND_VAL temp288_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp288_28 temp288_25)
             (bvslt temp288_32 temp288_29)
             (bvslt temp288_36 temp288_33)
             (bvslt temp288_40 temp288_37)
             (bvslt temp288_44 temp288_41)
             (bvslt temp288_48 temp288_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp288_49 #x0000000000000000))
(assert (= var1191714 temp288_49))
(assert (= temp288_50 #x0000000000000000))
(assert (= temp288_51 temp288_50))
(assert (= temp288_52 (select ARGNAME_output_padding_NAMEEND_VAL temp288_51)))
(assert (= temp288_53 #x0000000000000001))
(assert (= temp288_54 temp288_53))
(assert (= temp288_55 (select ARGNAME_output_padding_NAMEEND_VAL temp288_54)))
(assert (= temp288_56 #x0000000000000002))
(assert (= temp288_57 temp288_56))
(assert (= temp288_58 (select ARGNAME_output_padding_NAMEEND_VAL temp288_57)))
(assert (= temp288_59 #x0000000000000003))
(assert (= temp288_60 temp288_59))
(assert (= temp288_61 (select ARGNAME_output_padding_NAMEEND_VAL temp288_60)))
(assert (= temp288_62 #x0000000000000004))
(assert (= temp288_63 temp288_62))
(assert (= temp288_64 (select ARGNAME_output_padding_NAMEEND_VAL temp288_63)))
(assert (= temp288_65 #x0000000000000005))
(assert (= temp288_66 temp288_65))
(assert (= temp288_67 (select ARGNAME_output_padding_NAMEEND_VAL temp288_66)))
(assert (= temp288_68 #x0000000000000000))
(assert (= temp288_69 #x0000000000000000))
(assert (= temp288_70 temp288_69))
(assert (= temp288_71 (select ARGNAME_output_padding_NAMEEND_VAL temp288_70)))
(assert (= temp288_72 #x0000000000000000))
(assert (= temp288_73 #x0000000000000001))
(assert (= temp288_74 temp288_73))
(assert (= temp288_75 (select ARGNAME_output_padding_NAMEEND_VAL temp288_74)))
(assert (= temp288_76 #x0000000000000000))
(assert (= temp288_77 #x0000000000000002))
(assert (= temp288_78 temp288_77))
(assert (= temp288_79 (select ARGNAME_output_padding_NAMEEND_VAL temp288_78)))
(assert (= temp288_80 #x0000000000000000))
(assert (= temp288_81 #x0000000000000003))
(assert (= temp288_82 temp288_81))
(assert (= temp288_83 (select ARGNAME_output_padding_NAMEEND_VAL temp288_82)))
(assert (= temp288_84 #x0000000000000000))
(assert (= temp288_85 #x0000000000000004))
(assert (= temp288_86 temp288_85))
(assert (= temp288_87 (select ARGNAME_output_padding_NAMEEND_VAL temp288_86)))
(assert (= temp288_88 #x0000000000000000))
(assert (= temp288_89 #x0000000000000005))
(assert (= temp288_90 temp288_89))
(assert (= temp288_91 (select ARGNAME_output_padding_NAMEEND_VAL temp288_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp288_71 temp288_68)
             (bvslt temp288_75 temp288_72)
             (bvslt temp288_79 temp288_76)
             (bvslt temp288_83 temp288_80)
             (bvslt temp288_87 temp288_84)
             (bvslt temp288_91 temp288_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp288_92 #x0000000000000000))
(assert (= var1191725 temp288_92))
(assert (= temp288_93 #x0000000000000000))
(assert (= temp288_94 temp288_93))
(assert (= temp288_95 (select ARGNAME_stride_NAMEEND_VAL temp288_94)))
(assert (= temp288_96 #x0000000000000001))
(assert (= temp288_97 temp288_96))
(assert (= temp288_98 (select ARGNAME_stride_NAMEEND_VAL temp288_97)))
(assert (= temp288_99 #x0000000000000002))
(assert (= temp288_100 temp288_99))
(assert (= temp288_101 (select ARGNAME_stride_NAMEEND_VAL temp288_100)))
(assert (= temp288_102 #x0000000000000003))
(assert (= temp288_103 temp288_102))
(assert (= temp288_104 (select ARGNAME_stride_NAMEEND_VAL temp288_103)))
(assert (= temp288_105 #x0000000000000004))
(assert (= temp288_106 temp288_105))
(assert (= temp288_107 (select ARGNAME_stride_NAMEEND_VAL temp288_106)))
(assert (= temp288_108 #x0000000000000005))
(assert (= temp288_109 temp288_108))
(assert (= temp288_110 (select ARGNAME_stride_NAMEEND_VAL temp288_109)))
(assert (= temp288_111 #x0000000000000000))
(assert (= temp288_112 #x0000000000000000))
(assert (= temp288_113 temp288_112))
(assert (= temp288_114 (select ARGNAME_stride_NAMEEND_VAL temp288_113)))
(assert (= temp288_115 #x0000000000000000))
(assert (= temp288_116 #x0000000000000001))
(assert (= temp288_117 temp288_116))
(assert (= temp288_118 (select ARGNAME_stride_NAMEEND_VAL temp288_117)))
(assert (= temp288_119 #x0000000000000000))
(assert (= temp288_120 #x0000000000000002))
(assert (= temp288_121 temp288_120))
(assert (= temp288_122 (select ARGNAME_stride_NAMEEND_VAL temp288_121)))
(assert (= temp288_123 #x0000000000000000))
(assert (= temp288_124 #x0000000000000003))
(assert (= temp288_125 temp288_124))
(assert (= temp288_126 (select ARGNAME_stride_NAMEEND_VAL temp288_125)))
(assert (= temp288_127 #x0000000000000000))
(assert (= temp288_128 #x0000000000000004))
(assert (= temp288_129 temp288_128))
(assert (= temp288_130 (select ARGNAME_stride_NAMEEND_VAL temp288_129)))
(assert (= temp288_131 #x0000000000000000))
(assert (= temp288_132 #x0000000000000005))
(assert (= temp288_133 temp288_132))
(assert (= temp288_134 (select ARGNAME_stride_NAMEEND_VAL temp288_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp288_114 temp288_111)
             (bvsle temp288_118 temp288_115)
             (bvsle temp288_122 temp288_119)
             (bvsle temp288_126 temp288_123)
             (bvsle temp288_130 temp288_127)
             (bvsle temp288_134 temp288_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp288_135 #x0000000000000000))
(assert (= var1191735 temp288_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp288_136 #x0000000000000001))
(assert (= var1191747 temp288_136))
(assert (= temp288_137 #x0000000000000000))
(assert (= var1179826 temp288_137))
(assert (= temp288_138 #x0000000000000000))
(assert (= temp288_139 temp288_138))
(assert (= temp288_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp288_139)))
(assert (= temp288_141 #x0000000000000001))
(assert (= temp288_142 temp288_141))
(assert (= temp288_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp288_142)))
(assert (= temp288_144 #x0000000000000002))
(assert (= temp288_145 temp288_144))
(assert (= temp288_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp288_145)))
(assert (= temp288_147 #x0000000000000003))
(assert (= temp288_148 temp288_147))
(assert (= temp288_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp288_148)))
(assert (= temp288_150 #x0000000000000004))
(assert (= temp288_151 temp288_150))
(assert (= temp288_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp288_151)))
(assert (= temp288_153 #x0000000000000005))
(assert (= temp288_154 temp288_153))
(assert (= temp288_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp288_154)))
(assert (= temp288_157 var1179826))
(assert (= temp288_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp288_157)))
(assert (= temp288_156 temp288_158))
(assert (= var1191780
   (ite (bvslt temp288_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp288_159 #x0000000000000000))
(assert (= var1191780 temp288_159))
(assert (= temp288_160 #x0000000000000000))
(assert (= var1179826 temp288_160))
(assert (= temp288_162 var1179826))
(assert (= temp288_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp288_162)))
(assert (= temp288_161 temp288_163))
(assert (= var1191802 (bvsmod temp288_161 ARGNAME_groups_NAMEEND)))
(assert (= temp288_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp288_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp288_165 #x0000000000000001))
(assert (= var1191803 temp288_165))
(assert (= temp288_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp288_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp288_167 #x0000000000000001))
(assert (= var1191823 temp288_167))
(assert (= temp288_168 #x0000000000000001))
(assert (= var1180714 temp288_168))
(assert (= temp288_169 #x0000000000000000))
(assert (= temp288_170 temp288_169))
(assert (= temp288_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp288_170)))
(assert (= temp288_172 #x0000000000000001))
(assert (= temp288_173 temp288_172))
(assert (= temp288_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp288_173)))
(assert (= temp288_175 #x0000000000000002))
(assert (= temp288_176 temp288_175))
(assert (= temp288_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp288_176)))
(assert (= temp288_178 #x0000000000000003))
(assert (= temp288_179 temp288_178))
(assert (= temp288_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp288_179)))
(assert (= temp288_181 #x0000000000000004))
(assert (= temp288_182 temp288_181))
(assert (= temp288_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp288_182)))
(assert (= temp288_184 #x0000000000000005))
(assert (= temp288_185 temp288_184))
(assert (= temp288_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp288_185)))
(assert (= temp288_187 #x0000000000000000))
(assert (= temp288_188
   (ite (bvslt var1180714 temp288_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp288_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp288_188)))
(assert (= var1191831 temp288_189))
(assert (bvslt (ite (bvslt var1180714 temp288_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp288_190 #x0000000000000001))
(assert (= var1180714 temp288_190))
(assert (= temp288_192 var1180714))
(assert (= temp288_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp288_192)))
(assert (= temp288_191 temp288_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp288_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp288_194 #x0000000000000001))
(assert (= var1191836 temp288_194))
(assert (= temp288_195 #x0000000000000000))
(assert (= var1179826 temp288_195))
(assert (= temp288_197 var1179826))
(assert (= temp288_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp288_197)))
(assert (= temp288_196 temp288_198))
(assert (= temp288_199 #x0000000000000002))
(assert (= var1586025 temp288_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp288_200 #x0000000000000001))
(assert (= var1191993 temp288_200))
(assert (= temp288_201 #x0000000000000001))
(assert (= var2700303 temp288_201))
(assert (= temp288_202 #x0000000000000001))
(assert (= var2962447 temp288_202))
(assert (= temp288_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp288_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp288_204 #x0000000000000001))
(assert (= var211058 temp288_204))
(assert (= temp288_205 #x0000000000000001))
(assert (= var211188 temp288_205))
(assert (= var3879401 var211188))
(assert (= temp288_206 #x0000000000000000))
(assert (= var3866802 temp288_206))
(assert (= temp288_207 #x0000000000000000))
(assert (= temp288_208
   (ite (bvslt var3866802 temp288_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp288_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp288_208)))
(assert (= var3879420 temp288_209))
(assert (bvslt (ite (bvslt var3866802 temp288_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp288_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp288_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp288_211 #x0000000000000001))
(assert (= var3879421 temp288_211))
(assert (= temp288_212 #x0000000000000000))
(assert (= var4079423 temp288_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp288_213 #x0000000000000002))
(assert (= var4208259 temp288_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp288_214 #x0000000000000000))
(assert (= var4273820 temp288_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var5321104 var211201))
(assert (= var5583248 var211201))
(assert (= temp288_215 #x0000000000000000))
(assert (= var5910928 temp288_215))
(assert (= temp288_216 #x0000000000000001))
(assert (= var211058 temp288_216))
(model-add temp288_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp288_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp288_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp288_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




