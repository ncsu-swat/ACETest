(declare-fun temp1278_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp1278_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1278_3 () (_ BitVec 64))
(declare-fun temp1278_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1278_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp1278_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1278_7 () (_ BitVec 64))
(declare-fun temp1278_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1278_9 () (_ BitVec 64))
(declare-fun temp1278_10 () (_ BitVec 64))
(declare-fun temp1278_11 () (_ BitVec 64))
(declare-fun temp1278_12 () (_ BitVec 64))
(declare-fun temp1278_13 () (_ BitVec 64))
(declare-fun temp1278_14 () (_ BitVec 64))
(declare-fun temp1278_15 () (_ BitVec 64))
(declare-fun temp1278_16 () (_ BitVec 64))
(declare-fun temp1278_17 () (_ BitVec 64))
(declare-fun temp1278_18 () (_ BitVec 64))
(declare-fun temp1278_19 () (_ BitVec 64))
(declare-fun temp1278_20 () (_ BitVec 64))
(declare-fun temp1278_21 () (_ BitVec 64))
(declare-fun temp1278_22 () (_ BitVec 64))
(declare-fun temp1278_23 () (_ BitVec 64))
(declare-fun temp1278_24 () (_ BitVec 64))
(declare-fun temp1278_25 () (_ BitVec 64))
(declare-fun temp1278_26 () (_ BitVec 64))
(declare-fun temp1278_27 () (_ BitVec 64))
(declare-fun temp1278_28 () (_ BitVec 64))
(declare-fun temp1278_29 () (_ BitVec 64))
(declare-fun temp1278_30 () (_ BitVec 64))
(declare-fun temp1278_31 () (_ BitVec 64))
(declare-fun temp1278_32 () (_ BitVec 64))
(declare-fun temp1278_33 () (_ BitVec 64))
(declare-fun temp1278_34 () (_ BitVec 64))
(declare-fun temp1278_35 () (_ BitVec 64))
(declare-fun temp1278_36 () (_ BitVec 64))
(declare-fun temp1278_37 () (_ BitVec 64))
(declare-fun temp1278_38 () (_ BitVec 64))
(declare-fun temp1278_39 () (_ BitVec 64))
(declare-fun temp1278_40 () (_ BitVec 64))
(declare-fun temp1278_41 () (_ BitVec 64))
(declare-fun temp1278_42 () (_ BitVec 64))
(declare-fun temp1278_43 () (_ BitVec 64))
(declare-fun temp1278_44 () (_ BitVec 64))
(declare-fun temp1278_45 () (_ BitVec 64))
(declare-fun temp1278_46 () (_ BitVec 64))
(declare-fun temp1278_47 () (_ BitVec 64))
(declare-fun temp1278_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp1278_49 () (_ BitVec 64))
(declare-fun temp1278_50 () (_ BitVec 64))
(declare-fun temp1278_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1278_52 () (_ BitVec 64))
(declare-fun temp1278_53 () (_ BitVec 64))
(declare-fun temp1278_54 () (_ BitVec 64))
(declare-fun temp1278_55 () (_ BitVec 64))
(declare-fun temp1278_56 () (_ BitVec 64))
(declare-fun temp1278_57 () (_ BitVec 64))
(declare-fun temp1278_58 () (_ BitVec 64))
(declare-fun temp1278_59 () (_ BitVec 64))
(declare-fun temp1278_60 () (_ BitVec 64))
(declare-fun temp1278_61 () (_ BitVec 64))
(declare-fun temp1278_62 () (_ BitVec 64))
(declare-fun temp1278_63 () (_ BitVec 64))
(declare-fun temp1278_64 () (_ BitVec 64))
(declare-fun temp1278_65 () (_ BitVec 64))
(declare-fun temp1278_66 () (_ BitVec 64))
(declare-fun temp1278_67 () (_ BitVec 64))
(declare-fun temp1278_68 () (_ BitVec 64))
(declare-fun temp1278_69 () (_ BitVec 64))
(declare-fun temp1278_70 () (_ BitVec 64))
(declare-fun temp1278_71 () (_ BitVec 64))
(declare-fun temp1278_72 () (_ BitVec 64))
(declare-fun temp1278_73 () (_ BitVec 64))
(declare-fun temp1278_74 () (_ BitVec 64))
(declare-fun temp1278_75 () (_ BitVec 64))
(declare-fun temp1278_76 () (_ BitVec 64))
(declare-fun temp1278_77 () (_ BitVec 64))
(declare-fun temp1278_78 () (_ BitVec 64))
(declare-fun temp1278_79 () (_ BitVec 64))
(declare-fun temp1278_80 () (_ BitVec 64))
(declare-fun temp1278_81 () (_ BitVec 64))
(declare-fun temp1278_82 () (_ BitVec 64))
(declare-fun temp1278_83 () (_ BitVec 64))
(declare-fun temp1278_84 () (_ BitVec 64))
(declare-fun temp1278_85 () (_ BitVec 64))
(declare-fun temp1278_86 () (_ BitVec 64))
(declare-fun temp1278_87 () (_ BitVec 64))
(declare-fun temp1278_88 () (_ BitVec 64))
(declare-fun temp1278_89 () (_ BitVec 64))
(declare-fun temp1278_90 () (_ BitVec 64))
(declare-fun temp1278_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp1278_92 () (_ BitVec 64))
(declare-fun temp1278_93 () (_ BitVec 64))
(declare-fun temp1278_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1278_95 () (_ BitVec 64))
(declare-fun temp1278_96 () (_ BitVec 64))
(declare-fun temp1278_97 () (_ BitVec 64))
(declare-fun temp1278_98 () (_ BitVec 64))
(declare-fun temp1278_99 () (_ BitVec 64))
(declare-fun temp1278_100 () (_ BitVec 64))
(declare-fun temp1278_101 () (_ BitVec 64))
(declare-fun temp1278_102 () (_ BitVec 64))
(declare-fun temp1278_103 () (_ BitVec 64))
(declare-fun temp1278_104 () (_ BitVec 64))
(declare-fun temp1278_105 () (_ BitVec 64))
(declare-fun temp1278_106 () (_ BitVec 64))
(declare-fun temp1278_107 () (_ BitVec 64))
(declare-fun temp1278_108 () (_ BitVec 64))
(declare-fun temp1278_109 () (_ BitVec 64))
(declare-fun temp1278_110 () (_ BitVec 64))
(declare-fun temp1278_111 () (_ BitVec 64))
(declare-fun temp1278_112 () (_ BitVec 64))
(declare-fun temp1278_113 () (_ BitVec 64))
(declare-fun temp1278_114 () (_ BitVec 64))
(declare-fun temp1278_115 () (_ BitVec 64))
(declare-fun temp1278_116 () (_ BitVec 64))
(declare-fun temp1278_117 () (_ BitVec 64))
(declare-fun temp1278_118 () (_ BitVec 64))
(declare-fun temp1278_119 () (_ BitVec 64))
(declare-fun temp1278_120 () (_ BitVec 64))
(declare-fun temp1278_121 () (_ BitVec 64))
(declare-fun temp1278_122 () (_ BitVec 64))
(declare-fun temp1278_123 () (_ BitVec 64))
(declare-fun temp1278_124 () (_ BitVec 64))
(declare-fun temp1278_125 () (_ BitVec 64))
(declare-fun temp1278_126 () (_ BitVec 64))
(declare-fun temp1278_127 () (_ BitVec 64))
(declare-fun temp1278_128 () (_ BitVec 64))
(declare-fun temp1278_129 () (_ BitVec 64))
(declare-fun temp1278_130 () (_ BitVec 64))
(declare-fun temp1278_131 () (_ BitVec 64))
(declare-fun temp1278_132 () (_ BitVec 64))
(declare-fun temp1278_133 () (_ BitVec 64))
(declare-fun temp1278_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp1278_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp1278_136 () (_ BitVec 64))
(declare-fun temp1278_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp1278_138 () (_ BitVec 64))
(declare-fun temp1278_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1278_140 () (_ BitVec 64))
(declare-fun temp1278_141 () (_ BitVec 64))
(declare-fun temp1278_142 () (_ BitVec 64))
(declare-fun temp1278_143 () (_ BitVec 64))
(declare-fun temp1278_144 () (_ BitVec 64))
(declare-fun temp1278_145 () (_ BitVec 64))
(declare-fun temp1278_146 () (_ BitVec 64))
(declare-fun temp1278_147 () (_ BitVec 64))
(declare-fun temp1278_148 () (_ BitVec 64))
(declare-fun temp1278_149 () (_ BitVec 64))
(declare-fun temp1278_150 () (_ BitVec 64))
(declare-fun temp1278_151 () (_ BitVec 64))
(declare-fun temp1278_152 () (_ BitVec 64))
(declare-fun temp1278_153 () (_ BitVec 64))
(declare-fun temp1278_154 () (_ BitVec 64))
(declare-fun temp1278_155 () (_ BitVec 64))
(declare-fun temp1278_157 () (_ BitVec 64))
(declare-fun temp1278_158 () (_ BitVec 64))
(declare-fun temp1278_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp1278_159 () (_ BitVec 64))
(declare-fun temp1278_160 () (_ BitVec 64))
(declare-fun temp1278_162 () (_ BitVec 64))
(declare-fun temp1278_163 () (_ BitVec 64))
(declare-fun temp1278_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp1278_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp1278_165 () (_ BitVec 64))
(declare-fun temp1278_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp1278_167 () (_ BitVec 64))
(declare-fun temp1278_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp1278_169 () (_ BitVec 64))
(declare-fun temp1278_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1278_171 () (_ BitVec 64))
(declare-fun temp1278_172 () (_ BitVec 64))
(declare-fun temp1278_173 () (_ BitVec 64))
(declare-fun temp1278_174 () (_ BitVec 64))
(declare-fun temp1278_175 () (_ BitVec 64))
(declare-fun temp1278_176 () (_ BitVec 64))
(declare-fun temp1278_177 () (_ BitVec 64))
(declare-fun temp1278_178 () (_ BitVec 64))
(declare-fun temp1278_179 () (_ BitVec 64))
(declare-fun temp1278_180 () (_ BitVec 64))
(declare-fun temp1278_181 () (_ BitVec 64))
(declare-fun temp1278_182 () (_ BitVec 64))
(declare-fun temp1278_183 () (_ BitVec 64))
(declare-fun temp1278_184 () (_ BitVec 64))
(declare-fun temp1278_185 () (_ BitVec 64))
(declare-fun temp1278_186 () (_ BitVec 64))
(declare-fun temp1278_187 () (_ BitVec 64))
(declare-fun temp1278_188 () (_ BitVec 64))
(declare-fun temp1278_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp1278_190 () (_ BitVec 64))
(declare-fun temp1278_192 () (_ BitVec 64))
(declare-fun temp1278_193 () (_ BitVec 64))
(declare-fun temp1278_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp1278_194 () (_ BitVec 64))
(declare-fun temp1278_195 () (_ BitVec 64))
(declare-fun temp1278_197 () (_ BitVec 64))
(declare-fun temp1278_198 () (_ BitVec 64))
(declare-fun temp1278_196 () (_ BitVec 64))
(declare-fun temp1278_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp1278_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp1278_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp1278_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp1278_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp1278_204 () (_ BitVec 64))
(declare-fun temp1278_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp1278_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp1278_207 () (_ BitVec 64))
(declare-fun temp1278_208 () (_ BitVec 64))
(declare-fun temp1278_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp1278_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp1278_211 () (_ BitVec 64))
(declare-fun temp1278_212 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp1278_213 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp1278_214 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp1278_216 () (_ BitVec 64))
(declare-fun temp1278_215 () (_ BitVec 64))
(declare-fun temp1278_217 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp1278_218 () (_ BitVec 64))
(declare-fun temp1278_219 () (_ BitVec 64))
(declare-fun temp1278_220 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp1278_221 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp1278_222 () (_ BitVec 64))
(declare-fun temp1278_224 () (_ BitVec 64))
(declare-fun temp1278_223 () (_ BitVec 64))
(declare-fun temp1278_225 () (_ BitVec 64))
(assert (= temp1278_1 #x0000000000000001))
(assert (= var77203 temp1278_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp1278_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp1278_2)))
(assert (= temp1278_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1278_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1278_4 #x0000000000000000))
(assert (= var210941 temp1278_4))
(assert (= temp1278_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp1278_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1278_6 #x0000000000000000))
(assert (= var210986 temp1278_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp1278_7 #x0000000000000000))
(assert (= temp1278_8 temp1278_7))
(assert (= temp1278_9 (select ARGNAME_padding_NAMEEND_VAL temp1278_8)))
(assert (= temp1278_10 #x0000000000000001))
(assert (= temp1278_11 temp1278_10))
(assert (= temp1278_12 (select ARGNAME_padding_NAMEEND_VAL temp1278_11)))
(assert (= temp1278_13 #x0000000000000002))
(assert (= temp1278_14 temp1278_13))
(assert (= temp1278_15 (select ARGNAME_padding_NAMEEND_VAL temp1278_14)))
(assert (= temp1278_16 #x0000000000000003))
(assert (= temp1278_17 temp1278_16))
(assert (= temp1278_18 (select ARGNAME_padding_NAMEEND_VAL temp1278_17)))
(assert (= temp1278_19 #x0000000000000004))
(assert (= temp1278_20 temp1278_19))
(assert (= temp1278_21 (select ARGNAME_padding_NAMEEND_VAL temp1278_20)))
(assert (= temp1278_22 #x0000000000000005))
(assert (= temp1278_23 temp1278_22))
(assert (= temp1278_24 (select ARGNAME_padding_NAMEEND_VAL temp1278_23)))
(assert (= temp1278_25 #x0000000000000000))
(assert (= temp1278_26 #x0000000000000000))
(assert (= temp1278_27 temp1278_26))
(assert (= temp1278_28 (select ARGNAME_padding_NAMEEND_VAL temp1278_27)))
(assert (= temp1278_29 #x0000000000000000))
(assert (= temp1278_30 #x0000000000000001))
(assert (= temp1278_31 temp1278_30))
(assert (= temp1278_32 (select ARGNAME_padding_NAMEEND_VAL temp1278_31)))
(assert (= temp1278_33 #x0000000000000000))
(assert (= temp1278_34 #x0000000000000002))
(assert (= temp1278_35 temp1278_34))
(assert (= temp1278_36 (select ARGNAME_padding_NAMEEND_VAL temp1278_35)))
(assert (= temp1278_37 #x0000000000000000))
(assert (= temp1278_38 #x0000000000000003))
(assert (= temp1278_39 temp1278_38))
(assert (= temp1278_40 (select ARGNAME_padding_NAMEEND_VAL temp1278_39)))
(assert (= temp1278_41 #x0000000000000000))
(assert (= temp1278_42 #x0000000000000004))
(assert (= temp1278_43 temp1278_42))
(assert (= temp1278_44 (select ARGNAME_padding_NAMEEND_VAL temp1278_43)))
(assert (= temp1278_45 #x0000000000000000))
(assert (= temp1278_46 #x0000000000000005))
(assert (= temp1278_47 temp1278_46))
(assert (= temp1278_48 (select ARGNAME_padding_NAMEEND_VAL temp1278_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp1278_28 temp1278_25)
             (bvslt temp1278_32 temp1278_29)
             (bvslt temp1278_36 temp1278_33)
             (bvslt temp1278_40 temp1278_37)
             (bvslt temp1278_44 temp1278_41)
             (bvslt temp1278_48 temp1278_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1278_49 #x0000000000000000))
(assert (= var1191714 temp1278_49))
(assert (= temp1278_50 #x0000000000000000))
(assert (= temp1278_51 temp1278_50))
(assert (= temp1278_52 (select ARGNAME_output_padding_NAMEEND_VAL temp1278_51)))
(assert (= temp1278_53 #x0000000000000001))
(assert (= temp1278_54 temp1278_53))
(assert (= temp1278_55 (select ARGNAME_output_padding_NAMEEND_VAL temp1278_54)))
(assert (= temp1278_56 #x0000000000000002))
(assert (= temp1278_57 temp1278_56))
(assert (= temp1278_58 (select ARGNAME_output_padding_NAMEEND_VAL temp1278_57)))
(assert (= temp1278_59 #x0000000000000003))
(assert (= temp1278_60 temp1278_59))
(assert (= temp1278_61 (select ARGNAME_output_padding_NAMEEND_VAL temp1278_60)))
(assert (= temp1278_62 #x0000000000000004))
(assert (= temp1278_63 temp1278_62))
(assert (= temp1278_64 (select ARGNAME_output_padding_NAMEEND_VAL temp1278_63)))
(assert (= temp1278_65 #x0000000000000005))
(assert (= temp1278_66 temp1278_65))
(assert (= temp1278_67 (select ARGNAME_output_padding_NAMEEND_VAL temp1278_66)))
(assert (= temp1278_68 #x0000000000000000))
(assert (= temp1278_69 #x0000000000000000))
(assert (= temp1278_70 temp1278_69))
(assert (= temp1278_71 (select ARGNAME_output_padding_NAMEEND_VAL temp1278_70)))
(assert (= temp1278_72 #x0000000000000000))
(assert (= temp1278_73 #x0000000000000001))
(assert (= temp1278_74 temp1278_73))
(assert (= temp1278_75 (select ARGNAME_output_padding_NAMEEND_VAL temp1278_74)))
(assert (= temp1278_76 #x0000000000000000))
(assert (= temp1278_77 #x0000000000000002))
(assert (= temp1278_78 temp1278_77))
(assert (= temp1278_79 (select ARGNAME_output_padding_NAMEEND_VAL temp1278_78)))
(assert (= temp1278_80 #x0000000000000000))
(assert (= temp1278_81 #x0000000000000003))
(assert (= temp1278_82 temp1278_81))
(assert (= temp1278_83 (select ARGNAME_output_padding_NAMEEND_VAL temp1278_82)))
(assert (= temp1278_84 #x0000000000000000))
(assert (= temp1278_85 #x0000000000000004))
(assert (= temp1278_86 temp1278_85))
(assert (= temp1278_87 (select ARGNAME_output_padding_NAMEEND_VAL temp1278_86)))
(assert (= temp1278_88 #x0000000000000000))
(assert (= temp1278_89 #x0000000000000005))
(assert (= temp1278_90 temp1278_89))
(assert (= temp1278_91 (select ARGNAME_output_padding_NAMEEND_VAL temp1278_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp1278_71 temp1278_68)
             (bvslt temp1278_75 temp1278_72)
             (bvslt temp1278_79 temp1278_76)
             (bvslt temp1278_83 temp1278_80)
             (bvslt temp1278_87 temp1278_84)
             (bvslt temp1278_91 temp1278_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1278_92 #x0000000000000000))
(assert (= var1191725 temp1278_92))
(assert (= temp1278_93 #x0000000000000000))
(assert (= temp1278_94 temp1278_93))
(assert (= temp1278_95 (select ARGNAME_stride_NAMEEND_VAL temp1278_94)))
(assert (= temp1278_96 #x0000000000000001))
(assert (= temp1278_97 temp1278_96))
(assert (= temp1278_98 (select ARGNAME_stride_NAMEEND_VAL temp1278_97)))
(assert (= temp1278_99 #x0000000000000002))
(assert (= temp1278_100 temp1278_99))
(assert (= temp1278_101 (select ARGNAME_stride_NAMEEND_VAL temp1278_100)))
(assert (= temp1278_102 #x0000000000000003))
(assert (= temp1278_103 temp1278_102))
(assert (= temp1278_104 (select ARGNAME_stride_NAMEEND_VAL temp1278_103)))
(assert (= temp1278_105 #x0000000000000004))
(assert (= temp1278_106 temp1278_105))
(assert (= temp1278_107 (select ARGNAME_stride_NAMEEND_VAL temp1278_106)))
(assert (= temp1278_108 #x0000000000000005))
(assert (= temp1278_109 temp1278_108))
(assert (= temp1278_110 (select ARGNAME_stride_NAMEEND_VAL temp1278_109)))
(assert (= temp1278_111 #x0000000000000000))
(assert (= temp1278_112 #x0000000000000000))
(assert (= temp1278_113 temp1278_112))
(assert (= temp1278_114 (select ARGNAME_stride_NAMEEND_VAL temp1278_113)))
(assert (= temp1278_115 #x0000000000000000))
(assert (= temp1278_116 #x0000000000000001))
(assert (= temp1278_117 temp1278_116))
(assert (= temp1278_118 (select ARGNAME_stride_NAMEEND_VAL temp1278_117)))
(assert (= temp1278_119 #x0000000000000000))
(assert (= temp1278_120 #x0000000000000002))
(assert (= temp1278_121 temp1278_120))
(assert (= temp1278_122 (select ARGNAME_stride_NAMEEND_VAL temp1278_121)))
(assert (= temp1278_123 #x0000000000000000))
(assert (= temp1278_124 #x0000000000000003))
(assert (= temp1278_125 temp1278_124))
(assert (= temp1278_126 (select ARGNAME_stride_NAMEEND_VAL temp1278_125)))
(assert (= temp1278_127 #x0000000000000000))
(assert (= temp1278_128 #x0000000000000004))
(assert (= temp1278_129 temp1278_128))
(assert (= temp1278_130 (select ARGNAME_stride_NAMEEND_VAL temp1278_129)))
(assert (= temp1278_131 #x0000000000000000))
(assert (= temp1278_132 #x0000000000000005))
(assert (= temp1278_133 temp1278_132))
(assert (= temp1278_134 (select ARGNAME_stride_NAMEEND_VAL temp1278_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp1278_114 temp1278_111)
             (bvsle temp1278_118 temp1278_115)
             (bvsle temp1278_122 temp1278_119)
             (bvsle temp1278_126 temp1278_123)
             (bvsle temp1278_130 temp1278_127)
             (bvsle temp1278_134 temp1278_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1278_135 #x0000000000000000))
(assert (= var1191735 temp1278_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1278_136 #x0000000000000001))
(assert (= var1191747 temp1278_136))
(assert (= temp1278_137 #x0000000000000000))
(assert (= var1179826 temp1278_137))
(assert (= temp1278_138 #x0000000000000000))
(assert (= temp1278_139 temp1278_138))
(assert (= temp1278_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1278_139)))
(assert (= temp1278_141 #x0000000000000001))
(assert (= temp1278_142 temp1278_141))
(assert (= temp1278_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1278_142)))
(assert (= temp1278_144 #x0000000000000002))
(assert (= temp1278_145 temp1278_144))
(assert (= temp1278_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1278_145)))
(assert (= temp1278_147 #x0000000000000003))
(assert (= temp1278_148 temp1278_147))
(assert (= temp1278_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1278_148)))
(assert (= temp1278_150 #x0000000000000004))
(assert (= temp1278_151 temp1278_150))
(assert (= temp1278_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1278_151)))
(assert (= temp1278_153 #x0000000000000005))
(assert (= temp1278_154 temp1278_153))
(assert (= temp1278_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1278_154)))
(assert (= temp1278_157 var1179826))
(assert (= temp1278_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1278_157)))
(assert (= temp1278_156 temp1278_158))
(assert (= var1191780
   (ite (bvslt temp1278_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1278_159 #x0000000000000000))
(assert (= var1191780 temp1278_159))
(assert (= temp1278_160 #x0000000000000000))
(assert (= var1179826 temp1278_160))
(assert (= temp1278_162 var1179826))
(assert (= temp1278_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1278_162)))
(assert (= temp1278_161 temp1278_163))
(assert (= var1191802 (bvsmod temp1278_161 ARGNAME_groups_NAMEEND)))
(assert (= temp1278_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp1278_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp1278_165 #x0000000000000001))
(assert (= var1191803 temp1278_165))
(assert (= temp1278_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp1278_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1278_167 #x0000000000000001))
(assert (= var1191823 temp1278_167))
(assert (= temp1278_168 #x0000000000000001))
(assert (= var1180714 temp1278_168))
(assert (= temp1278_169 #x0000000000000000))
(assert (= temp1278_170 temp1278_169))
(assert (= temp1278_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp1278_170)))
(assert (= temp1278_172 #x0000000000000001))
(assert (= temp1278_173 temp1278_172))
(assert (= temp1278_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp1278_173)))
(assert (= temp1278_175 #x0000000000000002))
(assert (= temp1278_176 temp1278_175))
(assert (= temp1278_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp1278_176)))
(assert (= temp1278_178 #x0000000000000003))
(assert (= temp1278_179 temp1278_178))
(assert (= temp1278_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp1278_179)))
(assert (= temp1278_181 #x0000000000000004))
(assert (= temp1278_182 temp1278_181))
(assert (= temp1278_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp1278_182)))
(assert (= temp1278_184 #x0000000000000005))
(assert (= temp1278_185 temp1278_184))
(assert (= temp1278_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp1278_185)))
(assert (= temp1278_187 #x0000000000000000))
(assert (= temp1278_188
   (ite (bvslt var1180714 temp1278_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp1278_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp1278_188)))
(assert (= var1191831 temp1278_189))
(assert (bvslt (ite (bvslt var1180714 temp1278_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1278_190 #x0000000000000001))
(assert (= var1180714 temp1278_190))
(assert (= temp1278_192 var1180714))
(assert (= temp1278_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1278_192)))
(assert (= temp1278_191 temp1278_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp1278_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp1278_194 #x0000000000000001))
(assert (= var1191836 temp1278_194))
(assert (= temp1278_195 #x0000000000000000))
(assert (= var1179826 temp1278_195))
(assert (= temp1278_197 var1179826))
(assert (= temp1278_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1278_197)))
(assert (= temp1278_196 temp1278_198))
(assert (= temp1278_199 #x0000000000000002))
(assert (= var1586025 temp1278_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp1278_200 #x0000000000000001))
(assert (= var1191993 temp1278_200))
(assert (= temp1278_201 #x0000000000000001))
(assert (= var2700303 temp1278_201))
(assert (= temp1278_202 #x0000000000000001))
(assert (= var2962447 temp1278_202))
(assert (= temp1278_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1278_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1278_204 #x0000000000000001))
(assert (= var211058 temp1278_204))
(assert (= temp1278_205 #x0000000000000001))
(assert (= var211188 temp1278_205))
(assert (= var3879401 var211188))
(assert (= temp1278_206 #x0000000000000000))
(assert (= var3866802 temp1278_206))
(assert (= temp1278_207 #x0000000000000000))
(assert (= temp1278_208
   (ite (bvslt var3866802 temp1278_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp1278_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp1278_208)))
(assert (= var3879420 temp1278_209))
(assert (bvslt (ite (bvslt var3866802 temp1278_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1278_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp1278_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp1278_211 #x0000000000000001))
(assert (= var3879421 temp1278_211))
(assert (= temp1278_212 #x0000000000000000))
(assert (= var4133117 temp1278_212))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp1278_213 #x0000000000000002))
(assert (= var4339331 temp1278_213))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1278_214 #x0000000000000000))
(assert (= var4404892 temp1278_214))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp1278_216 #xffffffffffffffff))
(assert (= temp1278_215 temp1278_216))
(assert (= temp1278_217 #x0000000000000001))
(assert (= var197674 temp1278_217))
(assert (= temp1278_218 #x0000000000000000))
(assert (= temp1278_219
   (ite (bvslt var197674 temp1278_218)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp1278_220 (select ARGNAME_input_NAMEEND_DIMSIZE temp1278_219)))
(assert (= var211595 temp1278_220))
(assert (bvslt (ite (bvslt var197674 temp1278_218)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1278_221 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp1278_221) #x0000000000000001 #x0000000000000000)))
(assert (= temp1278_222 #x0000000000000001))
(assert (= var211596 temp1278_222))
(assert (= temp1278_224 #xffffffffffffffff))
(assert (= temp1278_223 temp1278_224))
(assert (= temp1278_225 #x0000000000000001))
(assert (= var211058 temp1278_225))
(model-add temp1278_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp1278_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1278_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp1278_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






