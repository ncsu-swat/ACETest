(declare-fun temp628_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp628_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp628_3 () (_ BitVec 64))
(declare-fun temp628_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp628_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp628_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp628_7 () (_ BitVec 64))
(declare-fun temp628_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp628_9 () (_ BitVec 64))
(declare-fun temp628_10 () (_ BitVec 64))
(declare-fun temp628_11 () (_ BitVec 64))
(declare-fun temp628_12 () (_ BitVec 64))
(declare-fun temp628_13 () (_ BitVec 64))
(declare-fun temp628_14 () (_ BitVec 64))
(declare-fun temp628_15 () (_ BitVec 64))
(declare-fun temp628_16 () (_ BitVec 64))
(declare-fun temp628_17 () (_ BitVec 64))
(declare-fun temp628_18 () (_ BitVec 64))
(declare-fun temp628_19 () (_ BitVec 64))
(declare-fun temp628_20 () (_ BitVec 64))
(declare-fun temp628_21 () (_ BitVec 64))
(declare-fun temp628_22 () (_ BitVec 64))
(declare-fun temp628_23 () (_ BitVec 64))
(declare-fun temp628_24 () (_ BitVec 64))
(declare-fun temp628_25 () (_ BitVec 64))
(declare-fun temp628_26 () (_ BitVec 64))
(declare-fun temp628_27 () (_ BitVec 64))
(declare-fun temp628_28 () (_ BitVec 64))
(declare-fun temp628_29 () (_ BitVec 64))
(declare-fun temp628_30 () (_ BitVec 64))
(declare-fun temp628_31 () (_ BitVec 64))
(declare-fun temp628_32 () (_ BitVec 64))
(declare-fun temp628_33 () (_ BitVec 64))
(declare-fun temp628_34 () (_ BitVec 64))
(declare-fun temp628_35 () (_ BitVec 64))
(declare-fun temp628_36 () (_ BitVec 64))
(declare-fun temp628_37 () (_ BitVec 64))
(declare-fun temp628_38 () (_ BitVec 64))
(declare-fun temp628_39 () (_ BitVec 64))
(declare-fun temp628_40 () (_ BitVec 64))
(declare-fun temp628_41 () (_ BitVec 64))
(declare-fun temp628_42 () (_ BitVec 64))
(declare-fun temp628_43 () (_ BitVec 64))
(declare-fun temp628_44 () (_ BitVec 64))
(declare-fun temp628_45 () (_ BitVec 64))
(declare-fun temp628_46 () (_ BitVec 64))
(declare-fun temp628_47 () (_ BitVec 64))
(declare-fun temp628_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp628_49 () (_ BitVec 64))
(declare-fun temp628_50 () (_ BitVec 64))
(declare-fun temp628_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp628_52 () (_ BitVec 64))
(declare-fun temp628_53 () (_ BitVec 64))
(declare-fun temp628_54 () (_ BitVec 64))
(declare-fun temp628_55 () (_ BitVec 64))
(declare-fun temp628_56 () (_ BitVec 64))
(declare-fun temp628_57 () (_ BitVec 64))
(declare-fun temp628_58 () (_ BitVec 64))
(declare-fun temp628_59 () (_ BitVec 64))
(declare-fun temp628_60 () (_ BitVec 64))
(declare-fun temp628_61 () (_ BitVec 64))
(declare-fun temp628_62 () (_ BitVec 64))
(declare-fun temp628_63 () (_ BitVec 64))
(declare-fun temp628_64 () (_ BitVec 64))
(declare-fun temp628_65 () (_ BitVec 64))
(declare-fun temp628_66 () (_ BitVec 64))
(declare-fun temp628_67 () (_ BitVec 64))
(declare-fun temp628_68 () (_ BitVec 64))
(declare-fun temp628_69 () (_ BitVec 64))
(declare-fun temp628_70 () (_ BitVec 64))
(declare-fun temp628_71 () (_ BitVec 64))
(declare-fun temp628_72 () (_ BitVec 64))
(declare-fun temp628_73 () (_ BitVec 64))
(declare-fun temp628_74 () (_ BitVec 64))
(declare-fun temp628_75 () (_ BitVec 64))
(declare-fun temp628_76 () (_ BitVec 64))
(declare-fun temp628_77 () (_ BitVec 64))
(declare-fun temp628_78 () (_ BitVec 64))
(declare-fun temp628_79 () (_ BitVec 64))
(declare-fun temp628_80 () (_ BitVec 64))
(declare-fun temp628_81 () (_ BitVec 64))
(declare-fun temp628_82 () (_ BitVec 64))
(declare-fun temp628_83 () (_ BitVec 64))
(declare-fun temp628_84 () (_ BitVec 64))
(declare-fun temp628_85 () (_ BitVec 64))
(declare-fun temp628_86 () (_ BitVec 64))
(declare-fun temp628_87 () (_ BitVec 64))
(declare-fun temp628_88 () (_ BitVec 64))
(declare-fun temp628_89 () (_ BitVec 64))
(declare-fun temp628_90 () (_ BitVec 64))
(declare-fun temp628_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp628_92 () (_ BitVec 64))
(declare-fun temp628_93 () (_ BitVec 64))
(declare-fun temp628_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp628_95 () (_ BitVec 64))
(declare-fun temp628_96 () (_ BitVec 64))
(declare-fun temp628_97 () (_ BitVec 64))
(declare-fun temp628_98 () (_ BitVec 64))
(declare-fun temp628_99 () (_ BitVec 64))
(declare-fun temp628_100 () (_ BitVec 64))
(declare-fun temp628_101 () (_ BitVec 64))
(declare-fun temp628_102 () (_ BitVec 64))
(declare-fun temp628_103 () (_ BitVec 64))
(declare-fun temp628_104 () (_ BitVec 64))
(declare-fun temp628_105 () (_ BitVec 64))
(declare-fun temp628_106 () (_ BitVec 64))
(declare-fun temp628_107 () (_ BitVec 64))
(declare-fun temp628_108 () (_ BitVec 64))
(declare-fun temp628_109 () (_ BitVec 64))
(declare-fun temp628_110 () (_ BitVec 64))
(declare-fun temp628_111 () (_ BitVec 64))
(declare-fun temp628_112 () (_ BitVec 64))
(declare-fun temp628_113 () (_ BitVec 64))
(declare-fun temp628_114 () (_ BitVec 64))
(declare-fun temp628_115 () (_ BitVec 64))
(declare-fun temp628_116 () (_ BitVec 64))
(declare-fun temp628_117 () (_ BitVec 64))
(declare-fun temp628_118 () (_ BitVec 64))
(declare-fun temp628_119 () (_ BitVec 64))
(declare-fun temp628_120 () (_ BitVec 64))
(declare-fun temp628_121 () (_ BitVec 64))
(declare-fun temp628_122 () (_ BitVec 64))
(declare-fun temp628_123 () (_ BitVec 64))
(declare-fun temp628_124 () (_ BitVec 64))
(declare-fun temp628_125 () (_ BitVec 64))
(declare-fun temp628_126 () (_ BitVec 64))
(declare-fun temp628_127 () (_ BitVec 64))
(declare-fun temp628_128 () (_ BitVec 64))
(declare-fun temp628_129 () (_ BitVec 64))
(declare-fun temp628_130 () (_ BitVec 64))
(declare-fun temp628_131 () (_ BitVec 64))
(declare-fun temp628_132 () (_ BitVec 64))
(declare-fun temp628_133 () (_ BitVec 64))
(declare-fun temp628_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp628_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp628_136 () (_ BitVec 64))
(declare-fun temp628_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp628_138 () (_ BitVec 64))
(declare-fun temp628_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp628_140 () (_ BitVec 64))
(declare-fun temp628_141 () (_ BitVec 64))
(declare-fun temp628_142 () (_ BitVec 64))
(declare-fun temp628_143 () (_ BitVec 64))
(declare-fun temp628_144 () (_ BitVec 64))
(declare-fun temp628_145 () (_ BitVec 64))
(declare-fun temp628_146 () (_ BitVec 64))
(declare-fun temp628_147 () (_ BitVec 64))
(declare-fun temp628_148 () (_ BitVec 64))
(declare-fun temp628_149 () (_ BitVec 64))
(declare-fun temp628_150 () (_ BitVec 64))
(declare-fun temp628_151 () (_ BitVec 64))
(declare-fun temp628_152 () (_ BitVec 64))
(declare-fun temp628_153 () (_ BitVec 64))
(declare-fun temp628_154 () (_ BitVec 64))
(declare-fun temp628_155 () (_ BitVec 64))
(declare-fun temp628_157 () (_ BitVec 64))
(declare-fun temp628_158 () (_ BitVec 64))
(declare-fun temp628_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp628_159 () (_ BitVec 64))
(declare-fun temp628_160 () (_ BitVec 64))
(declare-fun temp628_162 () (_ BitVec 64))
(declare-fun temp628_163 () (_ BitVec 64))
(declare-fun temp628_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp628_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp628_165 () (_ BitVec 64))
(declare-fun temp628_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp628_167 () (_ BitVec 64))
(declare-fun temp628_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp628_169 () (_ BitVec 64))
(declare-fun temp628_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp628_171 () (_ BitVec 64))
(declare-fun temp628_172 () (_ BitVec 64))
(declare-fun temp628_173 () (_ BitVec 64))
(declare-fun temp628_174 () (_ BitVec 64))
(declare-fun temp628_175 () (_ BitVec 64))
(declare-fun temp628_176 () (_ BitVec 64))
(declare-fun temp628_177 () (_ BitVec 64))
(declare-fun temp628_178 () (_ BitVec 64))
(declare-fun temp628_179 () (_ BitVec 64))
(declare-fun temp628_180 () (_ BitVec 64))
(declare-fun temp628_181 () (_ BitVec 64))
(declare-fun temp628_182 () (_ BitVec 64))
(declare-fun temp628_183 () (_ BitVec 64))
(declare-fun temp628_184 () (_ BitVec 64))
(declare-fun temp628_185 () (_ BitVec 64))
(declare-fun temp628_186 () (_ BitVec 64))
(declare-fun temp628_187 () (_ BitVec 64))
(declare-fun temp628_188 () (_ BitVec 64))
(declare-fun temp628_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp628_190 () (_ BitVec 64))
(declare-fun temp628_192 () (_ BitVec 64))
(declare-fun temp628_193 () (_ BitVec 64))
(declare-fun temp628_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp628_194 () (_ BitVec 64))
(declare-fun temp628_195 () (_ BitVec 64))
(declare-fun temp628_197 () (_ BitVec 64))
(declare-fun temp628_198 () (_ BitVec 64))
(declare-fun temp628_196 () (_ BitVec 64))
(declare-fun temp628_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp628_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp628_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp628_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp628_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp628_204 () (_ BitVec 64))
(declare-fun temp628_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp628_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp628_207 () (_ BitVec 64))
(declare-fun temp628_208 () (_ BitVec 64))
(declare-fun temp628_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp628_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp628_211 () (_ BitVec 64))
(declare-fun temp628_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp628_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp628_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4796816 () (_ BitVec 64))
(declare-fun var211388 () (_ BitVec 64))
(declare-fun temp628_215 () (_ BitVec 64))
(declare-fun var211389 () (_ BitVec 64))
(declare-fun var5717837 () (_ BitVec 64))
(declare-fun temp628_216 () (_ BitVec 64))
(declare-fun temp628_217 () (_ BitVec 64))
(declare-fun var6238996 () (_ BitVec 64))
(declare-fun var6238963 () (_ BitVec 64))
(declare-fun var6107527 () (_ BitVec 64))
(declare-fun var6107523 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp628_218 () (_ BitVec 64))
(assert (= temp628_1 #x0000000000000001))
(assert (= var77203 temp628_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp628_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp628_2)))
(assert (= temp628_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp628_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp628_4 #x0000000000000000))
(assert (= var210941 temp628_4))
(assert (= temp628_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp628_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp628_6 #x0000000000000000))
(assert (= var210986 temp628_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp628_7 #x0000000000000000))
(assert (= temp628_8 temp628_7))
(assert (= temp628_9 (select ARGNAME_padding_NAMEEND_VAL temp628_8)))
(assert (= temp628_10 #x0000000000000001))
(assert (= temp628_11 temp628_10))
(assert (= temp628_12 (select ARGNAME_padding_NAMEEND_VAL temp628_11)))
(assert (= temp628_13 #x0000000000000002))
(assert (= temp628_14 temp628_13))
(assert (= temp628_15 (select ARGNAME_padding_NAMEEND_VAL temp628_14)))
(assert (= temp628_16 #x0000000000000003))
(assert (= temp628_17 temp628_16))
(assert (= temp628_18 (select ARGNAME_padding_NAMEEND_VAL temp628_17)))
(assert (= temp628_19 #x0000000000000004))
(assert (= temp628_20 temp628_19))
(assert (= temp628_21 (select ARGNAME_padding_NAMEEND_VAL temp628_20)))
(assert (= temp628_22 #x0000000000000005))
(assert (= temp628_23 temp628_22))
(assert (= temp628_24 (select ARGNAME_padding_NAMEEND_VAL temp628_23)))
(assert (= temp628_25 #x0000000000000000))
(assert (= temp628_26 #x0000000000000000))
(assert (= temp628_27 temp628_26))
(assert (= temp628_28 (select ARGNAME_padding_NAMEEND_VAL temp628_27)))
(assert (= temp628_29 #x0000000000000000))
(assert (= temp628_30 #x0000000000000001))
(assert (= temp628_31 temp628_30))
(assert (= temp628_32 (select ARGNAME_padding_NAMEEND_VAL temp628_31)))
(assert (= temp628_33 #x0000000000000000))
(assert (= temp628_34 #x0000000000000002))
(assert (= temp628_35 temp628_34))
(assert (= temp628_36 (select ARGNAME_padding_NAMEEND_VAL temp628_35)))
(assert (= temp628_37 #x0000000000000000))
(assert (= temp628_38 #x0000000000000003))
(assert (= temp628_39 temp628_38))
(assert (= temp628_40 (select ARGNAME_padding_NAMEEND_VAL temp628_39)))
(assert (= temp628_41 #x0000000000000000))
(assert (= temp628_42 #x0000000000000004))
(assert (= temp628_43 temp628_42))
(assert (= temp628_44 (select ARGNAME_padding_NAMEEND_VAL temp628_43)))
(assert (= temp628_45 #x0000000000000000))
(assert (= temp628_46 #x0000000000000005))
(assert (= temp628_47 temp628_46))
(assert (= temp628_48 (select ARGNAME_padding_NAMEEND_VAL temp628_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp628_28 temp628_25)
             (bvslt temp628_32 temp628_29)
             (bvslt temp628_36 temp628_33)
             (bvslt temp628_40 temp628_37)
             (bvslt temp628_44 temp628_41)
             (bvslt temp628_48 temp628_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp628_49 #x0000000000000000))
(assert (= var1191714 temp628_49))
(assert (= temp628_50 #x0000000000000000))
(assert (= temp628_51 temp628_50))
(assert (= temp628_52 (select ARGNAME_output_padding_NAMEEND_VAL temp628_51)))
(assert (= temp628_53 #x0000000000000001))
(assert (= temp628_54 temp628_53))
(assert (= temp628_55 (select ARGNAME_output_padding_NAMEEND_VAL temp628_54)))
(assert (= temp628_56 #x0000000000000002))
(assert (= temp628_57 temp628_56))
(assert (= temp628_58 (select ARGNAME_output_padding_NAMEEND_VAL temp628_57)))
(assert (= temp628_59 #x0000000000000003))
(assert (= temp628_60 temp628_59))
(assert (= temp628_61 (select ARGNAME_output_padding_NAMEEND_VAL temp628_60)))
(assert (= temp628_62 #x0000000000000004))
(assert (= temp628_63 temp628_62))
(assert (= temp628_64 (select ARGNAME_output_padding_NAMEEND_VAL temp628_63)))
(assert (= temp628_65 #x0000000000000005))
(assert (= temp628_66 temp628_65))
(assert (= temp628_67 (select ARGNAME_output_padding_NAMEEND_VAL temp628_66)))
(assert (= temp628_68 #x0000000000000000))
(assert (= temp628_69 #x0000000000000000))
(assert (= temp628_70 temp628_69))
(assert (= temp628_71 (select ARGNAME_output_padding_NAMEEND_VAL temp628_70)))
(assert (= temp628_72 #x0000000000000000))
(assert (= temp628_73 #x0000000000000001))
(assert (= temp628_74 temp628_73))
(assert (= temp628_75 (select ARGNAME_output_padding_NAMEEND_VAL temp628_74)))
(assert (= temp628_76 #x0000000000000000))
(assert (= temp628_77 #x0000000000000002))
(assert (= temp628_78 temp628_77))
(assert (= temp628_79 (select ARGNAME_output_padding_NAMEEND_VAL temp628_78)))
(assert (= temp628_80 #x0000000000000000))
(assert (= temp628_81 #x0000000000000003))
(assert (= temp628_82 temp628_81))
(assert (= temp628_83 (select ARGNAME_output_padding_NAMEEND_VAL temp628_82)))
(assert (= temp628_84 #x0000000000000000))
(assert (= temp628_85 #x0000000000000004))
(assert (= temp628_86 temp628_85))
(assert (= temp628_87 (select ARGNAME_output_padding_NAMEEND_VAL temp628_86)))
(assert (= temp628_88 #x0000000000000000))
(assert (= temp628_89 #x0000000000000005))
(assert (= temp628_90 temp628_89))
(assert (= temp628_91 (select ARGNAME_output_padding_NAMEEND_VAL temp628_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp628_71 temp628_68)
             (bvslt temp628_75 temp628_72)
             (bvslt temp628_79 temp628_76)
             (bvslt temp628_83 temp628_80)
             (bvslt temp628_87 temp628_84)
             (bvslt temp628_91 temp628_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp628_92 #x0000000000000000))
(assert (= var1191725 temp628_92))
(assert (= temp628_93 #x0000000000000000))
(assert (= temp628_94 temp628_93))
(assert (= temp628_95 (select ARGNAME_stride_NAMEEND_VAL temp628_94)))
(assert (= temp628_96 #x0000000000000001))
(assert (= temp628_97 temp628_96))
(assert (= temp628_98 (select ARGNAME_stride_NAMEEND_VAL temp628_97)))
(assert (= temp628_99 #x0000000000000002))
(assert (= temp628_100 temp628_99))
(assert (= temp628_101 (select ARGNAME_stride_NAMEEND_VAL temp628_100)))
(assert (= temp628_102 #x0000000000000003))
(assert (= temp628_103 temp628_102))
(assert (= temp628_104 (select ARGNAME_stride_NAMEEND_VAL temp628_103)))
(assert (= temp628_105 #x0000000000000004))
(assert (= temp628_106 temp628_105))
(assert (= temp628_107 (select ARGNAME_stride_NAMEEND_VAL temp628_106)))
(assert (= temp628_108 #x0000000000000005))
(assert (= temp628_109 temp628_108))
(assert (= temp628_110 (select ARGNAME_stride_NAMEEND_VAL temp628_109)))
(assert (= temp628_111 #x0000000000000000))
(assert (= temp628_112 #x0000000000000000))
(assert (= temp628_113 temp628_112))
(assert (= temp628_114 (select ARGNAME_stride_NAMEEND_VAL temp628_113)))
(assert (= temp628_115 #x0000000000000000))
(assert (= temp628_116 #x0000000000000001))
(assert (= temp628_117 temp628_116))
(assert (= temp628_118 (select ARGNAME_stride_NAMEEND_VAL temp628_117)))
(assert (= temp628_119 #x0000000000000000))
(assert (= temp628_120 #x0000000000000002))
(assert (= temp628_121 temp628_120))
(assert (= temp628_122 (select ARGNAME_stride_NAMEEND_VAL temp628_121)))
(assert (= temp628_123 #x0000000000000000))
(assert (= temp628_124 #x0000000000000003))
(assert (= temp628_125 temp628_124))
(assert (= temp628_126 (select ARGNAME_stride_NAMEEND_VAL temp628_125)))
(assert (= temp628_127 #x0000000000000000))
(assert (= temp628_128 #x0000000000000004))
(assert (= temp628_129 temp628_128))
(assert (= temp628_130 (select ARGNAME_stride_NAMEEND_VAL temp628_129)))
(assert (= temp628_131 #x0000000000000000))
(assert (= temp628_132 #x0000000000000005))
(assert (= temp628_133 temp628_132))
(assert (= temp628_134 (select ARGNAME_stride_NAMEEND_VAL temp628_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp628_114 temp628_111)
             (bvsle temp628_118 temp628_115)
             (bvsle temp628_122 temp628_119)
             (bvsle temp628_126 temp628_123)
             (bvsle temp628_130 temp628_127)
             (bvsle temp628_134 temp628_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp628_135 #x0000000000000000))
(assert (= var1191735 temp628_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp628_136 #x0000000000000001))
(assert (= var1191747 temp628_136))
(assert (= temp628_137 #x0000000000000000))
(assert (= var1179826 temp628_137))
(assert (= temp628_138 #x0000000000000000))
(assert (= temp628_139 temp628_138))
(assert (= temp628_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp628_139)))
(assert (= temp628_141 #x0000000000000001))
(assert (= temp628_142 temp628_141))
(assert (= temp628_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp628_142)))
(assert (= temp628_144 #x0000000000000002))
(assert (= temp628_145 temp628_144))
(assert (= temp628_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp628_145)))
(assert (= temp628_147 #x0000000000000003))
(assert (= temp628_148 temp628_147))
(assert (= temp628_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp628_148)))
(assert (= temp628_150 #x0000000000000004))
(assert (= temp628_151 temp628_150))
(assert (= temp628_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp628_151)))
(assert (= temp628_153 #x0000000000000005))
(assert (= temp628_154 temp628_153))
(assert (= temp628_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp628_154)))
(assert (= temp628_157 var1179826))
(assert (= temp628_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp628_157)))
(assert (= temp628_156 temp628_158))
(assert (= var1191780
   (ite (bvslt temp628_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp628_159 #x0000000000000000))
(assert (= var1191780 temp628_159))
(assert (= temp628_160 #x0000000000000000))
(assert (= var1179826 temp628_160))
(assert (= temp628_162 var1179826))
(assert (= temp628_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp628_162)))
(assert (= temp628_161 temp628_163))
(assert (= var1191802 (bvsmod temp628_161 ARGNAME_groups_NAMEEND)))
(assert (= temp628_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp628_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp628_165 #x0000000000000001))
(assert (= var1191803 temp628_165))
(assert (= temp628_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp628_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp628_167 #x0000000000000001))
(assert (= var1191823 temp628_167))
(assert (= temp628_168 #x0000000000000001))
(assert (= var1180714 temp628_168))
(assert (= temp628_169 #x0000000000000000))
(assert (= temp628_170 temp628_169))
(assert (= temp628_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp628_170)))
(assert (= temp628_172 #x0000000000000001))
(assert (= temp628_173 temp628_172))
(assert (= temp628_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp628_173)))
(assert (= temp628_175 #x0000000000000002))
(assert (= temp628_176 temp628_175))
(assert (= temp628_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp628_176)))
(assert (= temp628_178 #x0000000000000003))
(assert (= temp628_179 temp628_178))
(assert (= temp628_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp628_179)))
(assert (= temp628_181 #x0000000000000004))
(assert (= temp628_182 temp628_181))
(assert (= temp628_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp628_182)))
(assert (= temp628_184 #x0000000000000005))
(assert (= temp628_185 temp628_184))
(assert (= temp628_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp628_185)))
(assert (= temp628_187 #x0000000000000000))
(assert (= temp628_188
   (ite (bvslt var1180714 temp628_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp628_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp628_188)))
(assert (= var1191831 temp628_189))
(assert (bvslt (ite (bvslt var1180714 temp628_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp628_190 #x0000000000000001))
(assert (= var1180714 temp628_190))
(assert (= temp628_192 var1180714))
(assert (= temp628_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp628_192)))
(assert (= temp628_191 temp628_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp628_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp628_194 #x0000000000000001))
(assert (= var1191836 temp628_194))
(assert (= temp628_195 #x0000000000000000))
(assert (= var1179826 temp628_195))
(assert (= temp628_197 var1179826))
(assert (= temp628_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp628_197)))
(assert (= temp628_196 temp628_198))
(assert (= temp628_199 #x0000000000000002))
(assert (= var1586025 temp628_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp628_200 #x0000000000000001))
(assert (= var1191993 temp628_200))
(assert (= temp628_201 #x0000000000000001))
(assert (= var2700303 temp628_201))
(assert (= temp628_202 #x0000000000000001))
(assert (= var2962447 temp628_202))
(assert (= temp628_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp628_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp628_204 #x0000000000000001))
(assert (= var211058 temp628_204))
(assert (= temp628_205 #x0000000000000001))
(assert (= var211188 temp628_205))
(assert (= var3879401 var211188))
(assert (= temp628_206 #x0000000000000000))
(assert (= var3866802 temp628_206))
(assert (= temp628_207 #x0000000000000000))
(assert (= temp628_208
   (ite (bvslt var3866802 temp628_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp628_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp628_208)))
(assert (= var3879420 temp628_209))
(assert (bvslt (ite (bvslt var3866802 temp628_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp628_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp628_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp628_211 #x0000000000000001))
(assert (= var3879421 temp628_211))
(assert (= temp628_212 #x0000000000000000))
(assert (= var4079423 temp628_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp628_213 #x0000000000000002))
(assert (= var4208259 temp628_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp628_214 #x0000000000000000))
(assert (= var4273820 temp628_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4796816 var211201))
(assert (= var211388 var210913))
(assert (= temp628_215 #x0000000000000000))
(assert (= var211389
   (ite (distinct var211388 temp628_215) #x0000000000000001 #x0000000000000000)))
(assert (= var5717837 var211389))
(assert (= temp628_216 #x0000000000000001))
(assert (= var211058 temp628_216))
(assert (= temp628_217 #x0000000000000000))
(assert (= var6238996 temp628_217))
(assert (= var6238963 var6238996))
(assert (= var6107527 var6238963))
(assert (= var6107523 var6107527))
(assert (= var212669 var6107523))
(assert (= temp628_218 #x0000000000000000))
(assert (= var212669 temp628_218))
(model-add temp628_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp628_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp628_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp628_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




