(declare-fun temp11112_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp11112_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp11112_3 () (_ BitVec 64))
(declare-fun temp11112_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp11112_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp11112_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp11112_7 () (_ BitVec 64))
(declare-fun temp11112_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11112_9 () (_ BitVec 64))
(declare-fun temp11112_10 () (_ BitVec 64))
(declare-fun temp11112_11 () (_ BitVec 64))
(declare-fun temp11112_12 () (_ BitVec 64))
(declare-fun temp11112_13 () (_ BitVec 64))
(declare-fun temp11112_14 () (_ BitVec 64))
(declare-fun temp11112_15 () (_ BitVec 64))
(declare-fun temp11112_16 () (_ BitVec 64))
(declare-fun temp11112_17 () (_ BitVec 64))
(declare-fun temp11112_18 () (_ BitVec 64))
(declare-fun temp11112_19 () (_ BitVec 64))
(declare-fun temp11112_20 () (_ BitVec 64))
(declare-fun temp11112_21 () (_ BitVec 64))
(declare-fun temp11112_22 () (_ BitVec 64))
(declare-fun temp11112_23 () (_ BitVec 64))
(declare-fun temp11112_24 () (_ BitVec 64))
(declare-fun temp11112_25 () (_ BitVec 64))
(declare-fun temp11112_26 () (_ BitVec 64))
(declare-fun temp11112_27 () (_ BitVec 64))
(declare-fun temp11112_28 () (_ BitVec 64))
(declare-fun temp11112_29 () (_ BitVec 64))
(declare-fun temp11112_30 () (_ BitVec 64))
(declare-fun temp11112_31 () (_ BitVec 64))
(declare-fun temp11112_32 () (_ BitVec 64))
(declare-fun temp11112_33 () (_ BitVec 64))
(declare-fun temp11112_34 () (_ BitVec 64))
(declare-fun temp11112_35 () (_ BitVec 64))
(declare-fun temp11112_36 () (_ BitVec 64))
(declare-fun temp11112_37 () (_ BitVec 64))
(declare-fun temp11112_38 () (_ BitVec 64))
(declare-fun temp11112_39 () (_ BitVec 64))
(declare-fun temp11112_40 () (_ BitVec 64))
(declare-fun temp11112_41 () (_ BitVec 64))
(declare-fun temp11112_42 () (_ BitVec 64))
(declare-fun temp11112_43 () (_ BitVec 64))
(declare-fun temp11112_44 () (_ BitVec 64))
(declare-fun temp11112_45 () (_ BitVec 64))
(declare-fun temp11112_46 () (_ BitVec 64))
(declare-fun temp11112_47 () (_ BitVec 64))
(declare-fun temp11112_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp11112_49 () (_ BitVec 64))
(declare-fun temp11112_50 () (_ BitVec 64))
(declare-fun temp11112_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11112_52 () (_ BitVec 64))
(declare-fun temp11112_53 () (_ BitVec 64))
(declare-fun temp11112_54 () (_ BitVec 64))
(declare-fun temp11112_55 () (_ BitVec 64))
(declare-fun temp11112_56 () (_ BitVec 64))
(declare-fun temp11112_57 () (_ BitVec 64))
(declare-fun temp11112_58 () (_ BitVec 64))
(declare-fun temp11112_59 () (_ BitVec 64))
(declare-fun temp11112_60 () (_ BitVec 64))
(declare-fun temp11112_61 () (_ BitVec 64))
(declare-fun temp11112_62 () (_ BitVec 64))
(declare-fun temp11112_63 () (_ BitVec 64))
(declare-fun temp11112_64 () (_ BitVec 64))
(declare-fun temp11112_65 () (_ BitVec 64))
(declare-fun temp11112_66 () (_ BitVec 64))
(declare-fun temp11112_67 () (_ BitVec 64))
(declare-fun temp11112_68 () (_ BitVec 64))
(declare-fun temp11112_69 () (_ BitVec 64))
(declare-fun temp11112_70 () (_ BitVec 64))
(declare-fun temp11112_71 () (_ BitVec 64))
(declare-fun temp11112_72 () (_ BitVec 64))
(declare-fun temp11112_73 () (_ BitVec 64))
(declare-fun temp11112_74 () (_ BitVec 64))
(declare-fun temp11112_75 () (_ BitVec 64))
(declare-fun temp11112_76 () (_ BitVec 64))
(declare-fun temp11112_77 () (_ BitVec 64))
(declare-fun temp11112_78 () (_ BitVec 64))
(declare-fun temp11112_79 () (_ BitVec 64))
(declare-fun temp11112_80 () (_ BitVec 64))
(declare-fun temp11112_81 () (_ BitVec 64))
(declare-fun temp11112_82 () (_ BitVec 64))
(declare-fun temp11112_83 () (_ BitVec 64))
(declare-fun temp11112_84 () (_ BitVec 64))
(declare-fun temp11112_85 () (_ BitVec 64))
(declare-fun temp11112_86 () (_ BitVec 64))
(declare-fun temp11112_87 () (_ BitVec 64))
(declare-fun temp11112_88 () (_ BitVec 64))
(declare-fun temp11112_89 () (_ BitVec 64))
(declare-fun temp11112_90 () (_ BitVec 64))
(declare-fun temp11112_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp11112_92 () (_ BitVec 64))
(declare-fun temp11112_93 () (_ BitVec 64))
(declare-fun temp11112_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11112_95 () (_ BitVec 64))
(declare-fun temp11112_96 () (_ BitVec 64))
(declare-fun temp11112_97 () (_ BitVec 64))
(declare-fun temp11112_98 () (_ BitVec 64))
(declare-fun temp11112_99 () (_ BitVec 64))
(declare-fun temp11112_100 () (_ BitVec 64))
(declare-fun temp11112_101 () (_ BitVec 64))
(declare-fun temp11112_102 () (_ BitVec 64))
(declare-fun temp11112_103 () (_ BitVec 64))
(declare-fun temp11112_104 () (_ BitVec 64))
(declare-fun temp11112_105 () (_ BitVec 64))
(declare-fun temp11112_106 () (_ BitVec 64))
(declare-fun temp11112_107 () (_ BitVec 64))
(declare-fun temp11112_108 () (_ BitVec 64))
(declare-fun temp11112_109 () (_ BitVec 64))
(declare-fun temp11112_110 () (_ BitVec 64))
(declare-fun temp11112_111 () (_ BitVec 64))
(declare-fun temp11112_112 () (_ BitVec 64))
(declare-fun temp11112_113 () (_ BitVec 64))
(declare-fun temp11112_114 () (_ BitVec 64))
(declare-fun temp11112_115 () (_ BitVec 64))
(declare-fun temp11112_116 () (_ BitVec 64))
(declare-fun temp11112_117 () (_ BitVec 64))
(declare-fun temp11112_118 () (_ BitVec 64))
(declare-fun temp11112_119 () (_ BitVec 64))
(declare-fun temp11112_120 () (_ BitVec 64))
(declare-fun temp11112_121 () (_ BitVec 64))
(declare-fun temp11112_122 () (_ BitVec 64))
(declare-fun temp11112_123 () (_ BitVec 64))
(declare-fun temp11112_124 () (_ BitVec 64))
(declare-fun temp11112_125 () (_ BitVec 64))
(declare-fun temp11112_126 () (_ BitVec 64))
(declare-fun temp11112_127 () (_ BitVec 64))
(declare-fun temp11112_128 () (_ BitVec 64))
(declare-fun temp11112_129 () (_ BitVec 64))
(declare-fun temp11112_130 () (_ BitVec 64))
(declare-fun temp11112_131 () (_ BitVec 64))
(declare-fun temp11112_132 () (_ BitVec 64))
(declare-fun temp11112_133 () (_ BitVec 64))
(declare-fun temp11112_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp11112_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp11112_136 () (_ BitVec 64))
(declare-fun temp11112_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp11112_138 () (_ BitVec 64))
(declare-fun temp11112_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11112_140 () (_ BitVec 64))
(declare-fun temp11112_141 () (_ BitVec 64))
(declare-fun temp11112_142 () (_ BitVec 64))
(declare-fun temp11112_143 () (_ BitVec 64))
(declare-fun temp11112_144 () (_ BitVec 64))
(declare-fun temp11112_145 () (_ BitVec 64))
(declare-fun temp11112_146 () (_ BitVec 64))
(declare-fun temp11112_147 () (_ BitVec 64))
(declare-fun temp11112_148 () (_ BitVec 64))
(declare-fun temp11112_149 () (_ BitVec 64))
(declare-fun temp11112_150 () (_ BitVec 64))
(declare-fun temp11112_151 () (_ BitVec 64))
(declare-fun temp11112_152 () (_ BitVec 64))
(declare-fun temp11112_153 () (_ BitVec 64))
(declare-fun temp11112_154 () (_ BitVec 64))
(declare-fun temp11112_155 () (_ BitVec 64))
(declare-fun temp11112_157 () (_ BitVec 64))
(declare-fun temp11112_158 () (_ BitVec 64))
(declare-fun temp11112_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp11112_159 () (_ BitVec 64))
(declare-fun temp11112_160 () (_ BitVec 64))
(declare-fun temp11112_162 () (_ BitVec 64))
(declare-fun temp11112_163 () (_ BitVec 64))
(declare-fun temp11112_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp11112_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp11112_165 () (_ BitVec 64))
(declare-fun temp11112_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp11112_167 () (_ BitVec 64))
(declare-fun temp11112_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp11112_169 () (_ BitVec 64))
(declare-fun temp11112_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11112_171 () (_ BitVec 64))
(declare-fun temp11112_172 () (_ BitVec 64))
(declare-fun temp11112_173 () (_ BitVec 64))
(declare-fun temp11112_174 () (_ BitVec 64))
(declare-fun temp11112_175 () (_ BitVec 64))
(declare-fun temp11112_176 () (_ BitVec 64))
(declare-fun temp11112_177 () (_ BitVec 64))
(declare-fun temp11112_178 () (_ BitVec 64))
(declare-fun temp11112_179 () (_ BitVec 64))
(declare-fun temp11112_180 () (_ BitVec 64))
(declare-fun temp11112_181 () (_ BitVec 64))
(declare-fun temp11112_182 () (_ BitVec 64))
(declare-fun temp11112_183 () (_ BitVec 64))
(declare-fun temp11112_184 () (_ BitVec 64))
(declare-fun temp11112_185 () (_ BitVec 64))
(declare-fun temp11112_186 () (_ BitVec 64))
(declare-fun temp11112_187 () (_ BitVec 64))
(declare-fun temp11112_188 () (_ BitVec 64))
(declare-fun temp11112_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp11112_190 () (_ BitVec 64))
(declare-fun temp11112_192 () (_ BitVec 64))
(declare-fun temp11112_193 () (_ BitVec 64))
(declare-fun temp11112_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp11112_194 () (_ BitVec 64))
(declare-fun temp11112_195 () (_ BitVec 64))
(declare-fun temp11112_197 () (_ BitVec 64))
(declare-fun temp11112_198 () (_ BitVec 64))
(declare-fun temp11112_196 () (_ BitVec 64))
(declare-fun temp11112_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp11112_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp11112_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp11112_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp11112_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp11112_204 () (_ BitVec 64))
(declare-fun temp11112_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp11112_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp11112_207 () (_ BitVec 64))
(declare-fun temp11112_208 () (_ BitVec 64))
(declare-fun temp11112_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp11112_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp11112_211 () (_ BitVec 64))
(declare-fun temp11112_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp11112_213 () (_ BitVec 64))
(declare-fun temp11112_214 () (_ BitVec 64))
(declare-fun temp11112_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp11112_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp11112_217 () (_ BitVec 64))
(declare-fun temp11112_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp11112_219 () (_ BitVec 64))
(declare-fun var4404867 () (_ BitVec 64))
(declare-fun var4404869 () (_ BitVec 64))
(declare-fun var4470412 () (_ BitVec 64))
(declare-fun var4470413 () (_ BitVec 64))
(declare-fun var4470426 () (_ BitVec 64))
(declare-fun var4470428 () (_ BitVec 64))
(declare-fun temp11112_220 () (_ BitVec 64))
(declare-fun var4470453 () (_ BitVec 64))
(declare-fun var4470455 () (_ BitVec 64))
(declare-fun var4591443 () (_ BitVec 64))
(declare-fun temp11112_221 () (_ BitVec 64))
(declare-fun var4665744 () (_ BitVec 64))
(declare-fun temp11112_222 () (_ BitVec 64))
(assert (= temp11112_1 #x0000000000000001))
(assert (= var77203 temp11112_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp11112_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp11112_2)))
(assert (= temp11112_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp11112_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11112_4 #x0000000000000000))
(assert (= var210941 temp11112_4))
(assert (= temp11112_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp11112_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11112_6 #x0000000000000000))
(assert (= var210986 temp11112_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp11112_7 #x0000000000000000))
(assert (= temp11112_8 temp11112_7))
(assert (= temp11112_9 (select ARGNAME_padding_NAMEEND_VAL temp11112_8)))
(assert (= temp11112_10 #x0000000000000001))
(assert (= temp11112_11 temp11112_10))
(assert (= temp11112_12 (select ARGNAME_padding_NAMEEND_VAL temp11112_11)))
(assert (= temp11112_13 #x0000000000000002))
(assert (= temp11112_14 temp11112_13))
(assert (= temp11112_15 (select ARGNAME_padding_NAMEEND_VAL temp11112_14)))
(assert (= temp11112_16 #x0000000000000003))
(assert (= temp11112_17 temp11112_16))
(assert (= temp11112_18 (select ARGNAME_padding_NAMEEND_VAL temp11112_17)))
(assert (= temp11112_19 #x0000000000000004))
(assert (= temp11112_20 temp11112_19))
(assert (= temp11112_21 (select ARGNAME_padding_NAMEEND_VAL temp11112_20)))
(assert (= temp11112_22 #x0000000000000005))
(assert (= temp11112_23 temp11112_22))
(assert (= temp11112_24 (select ARGNAME_padding_NAMEEND_VAL temp11112_23)))
(assert (= temp11112_25 #x0000000000000000))
(assert (= temp11112_26 #x0000000000000000))
(assert (= temp11112_27 temp11112_26))
(assert (= temp11112_28 (select ARGNAME_padding_NAMEEND_VAL temp11112_27)))
(assert (= temp11112_29 #x0000000000000000))
(assert (= temp11112_30 #x0000000000000001))
(assert (= temp11112_31 temp11112_30))
(assert (= temp11112_32 (select ARGNAME_padding_NAMEEND_VAL temp11112_31)))
(assert (= temp11112_33 #x0000000000000000))
(assert (= temp11112_34 #x0000000000000002))
(assert (= temp11112_35 temp11112_34))
(assert (= temp11112_36 (select ARGNAME_padding_NAMEEND_VAL temp11112_35)))
(assert (= temp11112_37 #x0000000000000000))
(assert (= temp11112_38 #x0000000000000003))
(assert (= temp11112_39 temp11112_38))
(assert (= temp11112_40 (select ARGNAME_padding_NAMEEND_VAL temp11112_39)))
(assert (= temp11112_41 #x0000000000000000))
(assert (= temp11112_42 #x0000000000000004))
(assert (= temp11112_43 temp11112_42))
(assert (= temp11112_44 (select ARGNAME_padding_NAMEEND_VAL temp11112_43)))
(assert (= temp11112_45 #x0000000000000000))
(assert (= temp11112_46 #x0000000000000005))
(assert (= temp11112_47 temp11112_46))
(assert (= temp11112_48 (select ARGNAME_padding_NAMEEND_VAL temp11112_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp11112_28 temp11112_25)
             (bvslt temp11112_32 temp11112_29)
             (bvslt temp11112_36 temp11112_33)
             (bvslt temp11112_40 temp11112_37)
             (bvslt temp11112_44 temp11112_41)
             (bvslt temp11112_48 temp11112_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11112_49 #x0000000000000000))
(assert (= var1191714 temp11112_49))
(assert (= temp11112_50 #x0000000000000000))
(assert (= temp11112_51 temp11112_50))
(assert (= temp11112_52 (select ARGNAME_output_padding_NAMEEND_VAL temp11112_51)))
(assert (= temp11112_53 #x0000000000000001))
(assert (= temp11112_54 temp11112_53))
(assert (= temp11112_55 (select ARGNAME_output_padding_NAMEEND_VAL temp11112_54)))
(assert (= temp11112_56 #x0000000000000002))
(assert (= temp11112_57 temp11112_56))
(assert (= temp11112_58 (select ARGNAME_output_padding_NAMEEND_VAL temp11112_57)))
(assert (= temp11112_59 #x0000000000000003))
(assert (= temp11112_60 temp11112_59))
(assert (= temp11112_61 (select ARGNAME_output_padding_NAMEEND_VAL temp11112_60)))
(assert (= temp11112_62 #x0000000000000004))
(assert (= temp11112_63 temp11112_62))
(assert (= temp11112_64 (select ARGNAME_output_padding_NAMEEND_VAL temp11112_63)))
(assert (= temp11112_65 #x0000000000000005))
(assert (= temp11112_66 temp11112_65))
(assert (= temp11112_67 (select ARGNAME_output_padding_NAMEEND_VAL temp11112_66)))
(assert (= temp11112_68 #x0000000000000000))
(assert (= temp11112_69 #x0000000000000000))
(assert (= temp11112_70 temp11112_69))
(assert (= temp11112_71 (select ARGNAME_output_padding_NAMEEND_VAL temp11112_70)))
(assert (= temp11112_72 #x0000000000000000))
(assert (= temp11112_73 #x0000000000000001))
(assert (= temp11112_74 temp11112_73))
(assert (= temp11112_75 (select ARGNAME_output_padding_NAMEEND_VAL temp11112_74)))
(assert (= temp11112_76 #x0000000000000000))
(assert (= temp11112_77 #x0000000000000002))
(assert (= temp11112_78 temp11112_77))
(assert (= temp11112_79 (select ARGNAME_output_padding_NAMEEND_VAL temp11112_78)))
(assert (= temp11112_80 #x0000000000000000))
(assert (= temp11112_81 #x0000000000000003))
(assert (= temp11112_82 temp11112_81))
(assert (= temp11112_83 (select ARGNAME_output_padding_NAMEEND_VAL temp11112_82)))
(assert (= temp11112_84 #x0000000000000000))
(assert (= temp11112_85 #x0000000000000004))
(assert (= temp11112_86 temp11112_85))
(assert (= temp11112_87 (select ARGNAME_output_padding_NAMEEND_VAL temp11112_86)))
(assert (= temp11112_88 #x0000000000000000))
(assert (= temp11112_89 #x0000000000000005))
(assert (= temp11112_90 temp11112_89))
(assert (= temp11112_91 (select ARGNAME_output_padding_NAMEEND_VAL temp11112_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp11112_71 temp11112_68)
             (bvslt temp11112_75 temp11112_72)
             (bvslt temp11112_79 temp11112_76)
             (bvslt temp11112_83 temp11112_80)
             (bvslt temp11112_87 temp11112_84)
             (bvslt temp11112_91 temp11112_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11112_92 #x0000000000000000))
(assert (= var1191725 temp11112_92))
(assert (= temp11112_93 #x0000000000000000))
(assert (= temp11112_94 temp11112_93))
(assert (= temp11112_95 (select ARGNAME_stride_NAMEEND_VAL temp11112_94)))
(assert (= temp11112_96 #x0000000000000001))
(assert (= temp11112_97 temp11112_96))
(assert (= temp11112_98 (select ARGNAME_stride_NAMEEND_VAL temp11112_97)))
(assert (= temp11112_99 #x0000000000000002))
(assert (= temp11112_100 temp11112_99))
(assert (= temp11112_101 (select ARGNAME_stride_NAMEEND_VAL temp11112_100)))
(assert (= temp11112_102 #x0000000000000003))
(assert (= temp11112_103 temp11112_102))
(assert (= temp11112_104 (select ARGNAME_stride_NAMEEND_VAL temp11112_103)))
(assert (= temp11112_105 #x0000000000000004))
(assert (= temp11112_106 temp11112_105))
(assert (= temp11112_107 (select ARGNAME_stride_NAMEEND_VAL temp11112_106)))
(assert (= temp11112_108 #x0000000000000005))
(assert (= temp11112_109 temp11112_108))
(assert (= temp11112_110 (select ARGNAME_stride_NAMEEND_VAL temp11112_109)))
(assert (= temp11112_111 #x0000000000000000))
(assert (= temp11112_112 #x0000000000000000))
(assert (= temp11112_113 temp11112_112))
(assert (= temp11112_114 (select ARGNAME_stride_NAMEEND_VAL temp11112_113)))
(assert (= temp11112_115 #x0000000000000000))
(assert (= temp11112_116 #x0000000000000001))
(assert (= temp11112_117 temp11112_116))
(assert (= temp11112_118 (select ARGNAME_stride_NAMEEND_VAL temp11112_117)))
(assert (= temp11112_119 #x0000000000000000))
(assert (= temp11112_120 #x0000000000000002))
(assert (= temp11112_121 temp11112_120))
(assert (= temp11112_122 (select ARGNAME_stride_NAMEEND_VAL temp11112_121)))
(assert (= temp11112_123 #x0000000000000000))
(assert (= temp11112_124 #x0000000000000003))
(assert (= temp11112_125 temp11112_124))
(assert (= temp11112_126 (select ARGNAME_stride_NAMEEND_VAL temp11112_125)))
(assert (= temp11112_127 #x0000000000000000))
(assert (= temp11112_128 #x0000000000000004))
(assert (= temp11112_129 temp11112_128))
(assert (= temp11112_130 (select ARGNAME_stride_NAMEEND_VAL temp11112_129)))
(assert (= temp11112_131 #x0000000000000000))
(assert (= temp11112_132 #x0000000000000005))
(assert (= temp11112_133 temp11112_132))
(assert (= temp11112_134 (select ARGNAME_stride_NAMEEND_VAL temp11112_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp11112_114 temp11112_111)
             (bvsle temp11112_118 temp11112_115)
             (bvsle temp11112_122 temp11112_119)
             (bvsle temp11112_126 temp11112_123)
             (bvsle temp11112_130 temp11112_127)
             (bvsle temp11112_134 temp11112_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11112_135 #x0000000000000000))
(assert (= var1191735 temp11112_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11112_136 #x0000000000000001))
(assert (= var1191747 temp11112_136))
(assert (= temp11112_137 #x0000000000000000))
(assert (= var1179826 temp11112_137))
(assert (= temp11112_138 #x0000000000000000))
(assert (= temp11112_139 temp11112_138))
(assert (= temp11112_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11112_139)))
(assert (= temp11112_141 #x0000000000000001))
(assert (= temp11112_142 temp11112_141))
(assert (= temp11112_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11112_142)))
(assert (= temp11112_144 #x0000000000000002))
(assert (= temp11112_145 temp11112_144))
(assert (= temp11112_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11112_145)))
(assert (= temp11112_147 #x0000000000000003))
(assert (= temp11112_148 temp11112_147))
(assert (= temp11112_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11112_148)))
(assert (= temp11112_150 #x0000000000000004))
(assert (= temp11112_151 temp11112_150))
(assert (= temp11112_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11112_151)))
(assert (= temp11112_153 #x0000000000000005))
(assert (= temp11112_154 temp11112_153))
(assert (= temp11112_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11112_154)))
(assert (= temp11112_157 var1179826))
(assert (= temp11112_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11112_157)))
(assert (= temp11112_156 temp11112_158))
(assert (= var1191780
   (ite (bvslt temp11112_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11112_159 #x0000000000000000))
(assert (= var1191780 temp11112_159))
(assert (= temp11112_160 #x0000000000000000))
(assert (= var1179826 temp11112_160))
(assert (= temp11112_162 var1179826))
(assert (= temp11112_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11112_162)))
(assert (= temp11112_161 temp11112_163))
(assert (= var1191802 (bvsmod temp11112_161 ARGNAME_groups_NAMEEND)))
(assert (= temp11112_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp11112_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp11112_165 #x0000000000000001))
(assert (= var1191803 temp11112_165))
(assert (= temp11112_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp11112_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11112_167 #x0000000000000001))
(assert (= var1191823 temp11112_167))
(assert (= temp11112_168 #x0000000000000001))
(assert (= var1180714 temp11112_168))
(assert (= temp11112_169 #x0000000000000000))
(assert (= temp11112_170 temp11112_169))
(assert (= temp11112_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp11112_170)))
(assert (= temp11112_172 #x0000000000000001))
(assert (= temp11112_173 temp11112_172))
(assert (= temp11112_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp11112_173)))
(assert (= temp11112_175 #x0000000000000002))
(assert (= temp11112_176 temp11112_175))
(assert (= temp11112_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp11112_176)))
(assert (= temp11112_178 #x0000000000000003))
(assert (= temp11112_179 temp11112_178))
(assert (= temp11112_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp11112_179)))
(assert (= temp11112_181 #x0000000000000004))
(assert (= temp11112_182 temp11112_181))
(assert (= temp11112_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp11112_182)))
(assert (= temp11112_184 #x0000000000000005))
(assert (= temp11112_185 temp11112_184))
(assert (= temp11112_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp11112_185)))
(assert (= temp11112_187 #x0000000000000000))
(assert (= temp11112_188
   (ite (bvslt var1180714 temp11112_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp11112_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp11112_188)))
(assert (= var1191831 temp11112_189))
(assert (bvslt (ite (bvslt var1180714 temp11112_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11112_190 #x0000000000000001))
(assert (= var1180714 temp11112_190))
(assert (= temp11112_192 var1180714))
(assert (= temp11112_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11112_192)))
(assert (= temp11112_191 temp11112_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp11112_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp11112_194 #x0000000000000001))
(assert (= var1191836 temp11112_194))
(assert (= temp11112_195 #x0000000000000000))
(assert (= var1179826 temp11112_195))
(assert (= temp11112_197 var1179826))
(assert (= temp11112_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11112_197)))
(assert (= temp11112_196 temp11112_198))
(assert (= temp11112_199 #x0000000000000002))
(assert (= var1586025 temp11112_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp11112_200 #x0000000000000001))
(assert (= var1191993 temp11112_200))
(assert (= temp11112_201 #x0000000000000001))
(assert (= var2700303 temp11112_201))
(assert (= temp11112_202 #x0000000000000001))
(assert (= var2962447 temp11112_202))
(assert (= temp11112_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp11112_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11112_204 #x0000000000000001))
(assert (= var211058 temp11112_204))
(assert (= temp11112_205 #x0000000000000001))
(assert (= var211188 temp11112_205))
(assert (= var3879401 var211188))
(assert (= temp11112_206 #x0000000000000000))
(assert (= var3866802 temp11112_206))
(assert (= temp11112_207 #x0000000000000000))
(assert (= temp11112_208
   (ite (bvslt var3866802 temp11112_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp11112_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp11112_208)))
(assert (= var3879420 temp11112_209))
(assert (bvslt (ite (bvslt var3866802 temp11112_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11112_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp11112_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp11112_211 #x0000000000000000))
(assert (= var3879421 temp11112_211))
(assert (= temp11112_212 #x0000000000000001))
(assert (= var3867690 temp11112_212))
(assert (= temp11112_213 #x0000000000000000))
(assert (= temp11112_214
   (ite (bvslt var3867690 temp11112_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp11112_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp11112_214)))
(assert (= var3879423 temp11112_215))
(assert (bvslt (ite (bvslt var3867690 temp11112_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11112_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp11112_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp11112_217 #x0000000000000001))
(assert (= var3879424 temp11112_217))
(assert (= temp11112_218 #x0000000000000000))
(assert (= var4133117 temp11112_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp11112_219 #x0000000000000002))
(assert (= var4404867 temp11112_219))
(assert (= var4404869 (bvsub ARGNAME_weight_NAMEEND_DIM var4404867)))
(assert (= var4470412 var4404867))
(assert (= var4470413 var4404869))
(assert (= var4470426 (bvadd var4470413 var4470412)))
(assert (= var4470428
   (ite (bvsgt var4470426 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11112_220 #x0000000000000000))
(assert (= var4470428 temp11112_220))
(assert (= var4470453 var4470412))
(assert (= var4470455 var4470413))
(assert (= var4591443 var4470455))
(assert (= temp11112_221 #x0000000000000000))
(assert (= var4665744 temp11112_221))
(assert (= temp11112_222 #x0000000000000001))
(assert (= var211058 temp11112_222))
(model-add temp11112_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp11112_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp11112_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp11112_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






