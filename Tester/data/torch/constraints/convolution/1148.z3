(declare-fun temp10261_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10261_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10261_3 () (_ BitVec 64))
(declare-fun temp10261_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10261_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10261_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10261_7 () (_ BitVec 64))
(declare-fun temp10261_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10261_9 () (_ BitVec 64))
(declare-fun temp10261_10 () (_ BitVec 64))
(declare-fun temp10261_11 () (_ BitVec 64))
(declare-fun temp10261_12 () (_ BitVec 64))
(declare-fun temp10261_13 () (_ BitVec 64))
(declare-fun temp10261_14 () (_ BitVec 64))
(declare-fun temp10261_15 () (_ BitVec 64))
(declare-fun temp10261_16 () (_ BitVec 64))
(declare-fun temp10261_17 () (_ BitVec 64))
(declare-fun temp10261_18 () (_ BitVec 64))
(declare-fun temp10261_19 () (_ BitVec 64))
(declare-fun temp10261_20 () (_ BitVec 64))
(declare-fun temp10261_21 () (_ BitVec 64))
(declare-fun temp10261_22 () (_ BitVec 64))
(declare-fun temp10261_23 () (_ BitVec 64))
(declare-fun temp10261_24 () (_ BitVec 64))
(declare-fun temp10261_25 () (_ BitVec 64))
(declare-fun temp10261_26 () (_ BitVec 64))
(declare-fun temp10261_27 () (_ BitVec 64))
(declare-fun temp10261_28 () (_ BitVec 64))
(declare-fun temp10261_29 () (_ BitVec 64))
(declare-fun temp10261_30 () (_ BitVec 64))
(declare-fun temp10261_31 () (_ BitVec 64))
(declare-fun temp10261_32 () (_ BitVec 64))
(declare-fun temp10261_33 () (_ BitVec 64))
(declare-fun temp10261_34 () (_ BitVec 64))
(declare-fun temp10261_35 () (_ BitVec 64))
(declare-fun temp10261_36 () (_ BitVec 64))
(declare-fun temp10261_37 () (_ BitVec 64))
(declare-fun temp10261_38 () (_ BitVec 64))
(declare-fun temp10261_39 () (_ BitVec 64))
(declare-fun temp10261_40 () (_ BitVec 64))
(declare-fun temp10261_41 () (_ BitVec 64))
(declare-fun temp10261_42 () (_ BitVec 64))
(declare-fun temp10261_43 () (_ BitVec 64))
(declare-fun temp10261_44 () (_ BitVec 64))
(declare-fun temp10261_45 () (_ BitVec 64))
(declare-fun temp10261_46 () (_ BitVec 64))
(declare-fun temp10261_47 () (_ BitVec 64))
(declare-fun temp10261_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10261_49 () (_ BitVec 64))
(declare-fun temp10261_50 () (_ BitVec 64))
(declare-fun temp10261_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10261_52 () (_ BitVec 64))
(declare-fun temp10261_53 () (_ BitVec 64))
(declare-fun temp10261_54 () (_ BitVec 64))
(declare-fun temp10261_55 () (_ BitVec 64))
(declare-fun temp10261_56 () (_ BitVec 64))
(declare-fun temp10261_57 () (_ BitVec 64))
(declare-fun temp10261_58 () (_ BitVec 64))
(declare-fun temp10261_59 () (_ BitVec 64))
(declare-fun temp10261_60 () (_ BitVec 64))
(declare-fun temp10261_61 () (_ BitVec 64))
(declare-fun temp10261_62 () (_ BitVec 64))
(declare-fun temp10261_63 () (_ BitVec 64))
(declare-fun temp10261_64 () (_ BitVec 64))
(declare-fun temp10261_65 () (_ BitVec 64))
(declare-fun temp10261_66 () (_ BitVec 64))
(declare-fun temp10261_67 () (_ BitVec 64))
(declare-fun temp10261_68 () (_ BitVec 64))
(declare-fun temp10261_69 () (_ BitVec 64))
(declare-fun temp10261_70 () (_ BitVec 64))
(declare-fun temp10261_71 () (_ BitVec 64))
(declare-fun temp10261_72 () (_ BitVec 64))
(declare-fun temp10261_73 () (_ BitVec 64))
(declare-fun temp10261_74 () (_ BitVec 64))
(declare-fun temp10261_75 () (_ BitVec 64))
(declare-fun temp10261_76 () (_ BitVec 64))
(declare-fun temp10261_77 () (_ BitVec 64))
(declare-fun temp10261_78 () (_ BitVec 64))
(declare-fun temp10261_79 () (_ BitVec 64))
(declare-fun temp10261_80 () (_ BitVec 64))
(declare-fun temp10261_81 () (_ BitVec 64))
(declare-fun temp10261_82 () (_ BitVec 64))
(declare-fun temp10261_83 () (_ BitVec 64))
(declare-fun temp10261_84 () (_ BitVec 64))
(declare-fun temp10261_85 () (_ BitVec 64))
(declare-fun temp10261_86 () (_ BitVec 64))
(declare-fun temp10261_87 () (_ BitVec 64))
(declare-fun temp10261_88 () (_ BitVec 64))
(declare-fun temp10261_89 () (_ BitVec 64))
(declare-fun temp10261_90 () (_ BitVec 64))
(declare-fun temp10261_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10261_92 () (_ BitVec 64))
(declare-fun temp10261_93 () (_ BitVec 64))
(declare-fun temp10261_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10261_95 () (_ BitVec 64))
(declare-fun temp10261_96 () (_ BitVec 64))
(declare-fun temp10261_97 () (_ BitVec 64))
(declare-fun temp10261_98 () (_ BitVec 64))
(declare-fun temp10261_99 () (_ BitVec 64))
(declare-fun temp10261_100 () (_ BitVec 64))
(declare-fun temp10261_101 () (_ BitVec 64))
(declare-fun temp10261_102 () (_ BitVec 64))
(declare-fun temp10261_103 () (_ BitVec 64))
(declare-fun temp10261_104 () (_ BitVec 64))
(declare-fun temp10261_105 () (_ BitVec 64))
(declare-fun temp10261_106 () (_ BitVec 64))
(declare-fun temp10261_107 () (_ BitVec 64))
(declare-fun temp10261_108 () (_ BitVec 64))
(declare-fun temp10261_109 () (_ BitVec 64))
(declare-fun temp10261_110 () (_ BitVec 64))
(declare-fun temp10261_111 () (_ BitVec 64))
(declare-fun temp10261_112 () (_ BitVec 64))
(declare-fun temp10261_113 () (_ BitVec 64))
(declare-fun temp10261_114 () (_ BitVec 64))
(declare-fun temp10261_115 () (_ BitVec 64))
(declare-fun temp10261_116 () (_ BitVec 64))
(declare-fun temp10261_117 () (_ BitVec 64))
(declare-fun temp10261_118 () (_ BitVec 64))
(declare-fun temp10261_119 () (_ BitVec 64))
(declare-fun temp10261_120 () (_ BitVec 64))
(declare-fun temp10261_121 () (_ BitVec 64))
(declare-fun temp10261_122 () (_ BitVec 64))
(declare-fun temp10261_123 () (_ BitVec 64))
(declare-fun temp10261_124 () (_ BitVec 64))
(declare-fun temp10261_125 () (_ BitVec 64))
(declare-fun temp10261_126 () (_ BitVec 64))
(declare-fun temp10261_127 () (_ BitVec 64))
(declare-fun temp10261_128 () (_ BitVec 64))
(declare-fun temp10261_129 () (_ BitVec 64))
(declare-fun temp10261_130 () (_ BitVec 64))
(declare-fun temp10261_131 () (_ BitVec 64))
(declare-fun temp10261_132 () (_ BitVec 64))
(declare-fun temp10261_133 () (_ BitVec 64))
(declare-fun temp10261_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10261_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10261_136 () (_ BitVec 64))
(declare-fun temp10261_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10261_138 () (_ BitVec 64))
(declare-fun temp10261_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10261_140 () (_ BitVec 64))
(declare-fun temp10261_141 () (_ BitVec 64))
(declare-fun temp10261_142 () (_ BitVec 64))
(declare-fun temp10261_143 () (_ BitVec 64))
(declare-fun temp10261_144 () (_ BitVec 64))
(declare-fun temp10261_145 () (_ BitVec 64))
(declare-fun temp10261_146 () (_ BitVec 64))
(declare-fun temp10261_147 () (_ BitVec 64))
(declare-fun temp10261_148 () (_ BitVec 64))
(declare-fun temp10261_149 () (_ BitVec 64))
(declare-fun temp10261_150 () (_ BitVec 64))
(declare-fun temp10261_151 () (_ BitVec 64))
(declare-fun temp10261_152 () (_ BitVec 64))
(declare-fun temp10261_153 () (_ BitVec 64))
(declare-fun temp10261_154 () (_ BitVec 64))
(declare-fun temp10261_155 () (_ BitVec 64))
(declare-fun temp10261_157 () (_ BitVec 64))
(declare-fun temp10261_158 () (_ BitVec 64))
(declare-fun temp10261_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10261_159 () (_ BitVec 64))
(declare-fun temp10261_160 () (_ BitVec 64))
(declare-fun temp10261_162 () (_ BitVec 64))
(declare-fun temp10261_163 () (_ BitVec 64))
(declare-fun temp10261_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10261_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10261_165 () (_ BitVec 64))
(declare-fun temp10261_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10261_167 () (_ BitVec 64))
(declare-fun temp10261_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10261_169 () (_ BitVec 64))
(declare-fun temp10261_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10261_171 () (_ BitVec 64))
(declare-fun temp10261_172 () (_ BitVec 64))
(declare-fun temp10261_173 () (_ BitVec 64))
(declare-fun temp10261_174 () (_ BitVec 64))
(declare-fun temp10261_175 () (_ BitVec 64))
(declare-fun temp10261_176 () (_ BitVec 64))
(declare-fun temp10261_177 () (_ BitVec 64))
(declare-fun temp10261_178 () (_ BitVec 64))
(declare-fun temp10261_179 () (_ BitVec 64))
(declare-fun temp10261_180 () (_ BitVec 64))
(declare-fun temp10261_181 () (_ BitVec 64))
(declare-fun temp10261_182 () (_ BitVec 64))
(declare-fun temp10261_183 () (_ BitVec 64))
(declare-fun temp10261_184 () (_ BitVec 64))
(declare-fun temp10261_185 () (_ BitVec 64))
(declare-fun temp10261_186 () (_ BitVec 64))
(declare-fun temp10261_187 () (_ BitVec 64))
(declare-fun temp10261_188 () (_ BitVec 64))
(declare-fun temp10261_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10261_190 () (_ BitVec 64))
(declare-fun temp10261_192 () (_ BitVec 64))
(declare-fun temp10261_193 () (_ BitVec 64))
(declare-fun temp10261_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10261_194 () (_ BitVec 64))
(declare-fun temp10261_195 () (_ BitVec 64))
(declare-fun temp10261_197 () (_ BitVec 64))
(declare-fun temp10261_198 () (_ BitVec 64))
(declare-fun temp10261_196 () (_ BitVec 64))
(declare-fun temp10261_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10261_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10261_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10261_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10261_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10261_204 () (_ BitVec 64))
(declare-fun temp10261_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10261_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10261_207 () (_ BitVec 64))
(declare-fun temp10261_208 () (_ BitVec 64))
(declare-fun temp10261_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10261_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10261_211 () (_ BitVec 64))
(declare-fun temp10261_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10261_213 () (_ BitVec 64))
(declare-fun temp10261_214 () (_ BitVec 64))
(declare-fun temp10261_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10261_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10261_217 () (_ BitVec 64))
(declare-fun temp10261_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10261_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10261_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp10261_221 () (_ BitVec 64))
(assert (= temp10261_1 #x0000000000000001))
(assert (= var77203 temp10261_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10261_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10261_2)))
(assert (= temp10261_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10261_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10261_4 #x0000000000000000))
(assert (= var210941 temp10261_4))
(assert (= temp10261_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10261_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10261_6 #x0000000000000000))
(assert (= var210986 temp10261_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10261_7 #x0000000000000000))
(assert (= temp10261_8 temp10261_7))
(assert (= temp10261_9 (select ARGNAME_padding_NAMEEND_VAL temp10261_8)))
(assert (= temp10261_10 #x0000000000000001))
(assert (= temp10261_11 temp10261_10))
(assert (= temp10261_12 (select ARGNAME_padding_NAMEEND_VAL temp10261_11)))
(assert (= temp10261_13 #x0000000000000002))
(assert (= temp10261_14 temp10261_13))
(assert (= temp10261_15 (select ARGNAME_padding_NAMEEND_VAL temp10261_14)))
(assert (= temp10261_16 #x0000000000000003))
(assert (= temp10261_17 temp10261_16))
(assert (= temp10261_18 (select ARGNAME_padding_NAMEEND_VAL temp10261_17)))
(assert (= temp10261_19 #x0000000000000004))
(assert (= temp10261_20 temp10261_19))
(assert (= temp10261_21 (select ARGNAME_padding_NAMEEND_VAL temp10261_20)))
(assert (= temp10261_22 #x0000000000000005))
(assert (= temp10261_23 temp10261_22))
(assert (= temp10261_24 (select ARGNAME_padding_NAMEEND_VAL temp10261_23)))
(assert (= temp10261_25 #x0000000000000000))
(assert (= temp10261_26 #x0000000000000000))
(assert (= temp10261_27 temp10261_26))
(assert (= temp10261_28 (select ARGNAME_padding_NAMEEND_VAL temp10261_27)))
(assert (= temp10261_29 #x0000000000000000))
(assert (= temp10261_30 #x0000000000000001))
(assert (= temp10261_31 temp10261_30))
(assert (= temp10261_32 (select ARGNAME_padding_NAMEEND_VAL temp10261_31)))
(assert (= temp10261_33 #x0000000000000000))
(assert (= temp10261_34 #x0000000000000002))
(assert (= temp10261_35 temp10261_34))
(assert (= temp10261_36 (select ARGNAME_padding_NAMEEND_VAL temp10261_35)))
(assert (= temp10261_37 #x0000000000000000))
(assert (= temp10261_38 #x0000000000000003))
(assert (= temp10261_39 temp10261_38))
(assert (= temp10261_40 (select ARGNAME_padding_NAMEEND_VAL temp10261_39)))
(assert (= temp10261_41 #x0000000000000000))
(assert (= temp10261_42 #x0000000000000004))
(assert (= temp10261_43 temp10261_42))
(assert (= temp10261_44 (select ARGNAME_padding_NAMEEND_VAL temp10261_43)))
(assert (= temp10261_45 #x0000000000000000))
(assert (= temp10261_46 #x0000000000000005))
(assert (= temp10261_47 temp10261_46))
(assert (= temp10261_48 (select ARGNAME_padding_NAMEEND_VAL temp10261_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10261_28 temp10261_25)
             (bvslt temp10261_32 temp10261_29)
             (bvslt temp10261_36 temp10261_33)
             (bvslt temp10261_40 temp10261_37)
             (bvslt temp10261_44 temp10261_41)
             (bvslt temp10261_48 temp10261_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10261_49 #x0000000000000000))
(assert (= var1191714 temp10261_49))
(assert (= temp10261_50 #x0000000000000000))
(assert (= temp10261_51 temp10261_50))
(assert (= temp10261_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10261_51)))
(assert (= temp10261_53 #x0000000000000001))
(assert (= temp10261_54 temp10261_53))
(assert (= temp10261_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10261_54)))
(assert (= temp10261_56 #x0000000000000002))
(assert (= temp10261_57 temp10261_56))
(assert (= temp10261_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10261_57)))
(assert (= temp10261_59 #x0000000000000003))
(assert (= temp10261_60 temp10261_59))
(assert (= temp10261_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10261_60)))
(assert (= temp10261_62 #x0000000000000004))
(assert (= temp10261_63 temp10261_62))
(assert (= temp10261_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10261_63)))
(assert (= temp10261_65 #x0000000000000005))
(assert (= temp10261_66 temp10261_65))
(assert (= temp10261_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10261_66)))
(assert (= temp10261_68 #x0000000000000000))
(assert (= temp10261_69 #x0000000000000000))
(assert (= temp10261_70 temp10261_69))
(assert (= temp10261_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10261_70)))
(assert (= temp10261_72 #x0000000000000000))
(assert (= temp10261_73 #x0000000000000001))
(assert (= temp10261_74 temp10261_73))
(assert (= temp10261_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10261_74)))
(assert (= temp10261_76 #x0000000000000000))
(assert (= temp10261_77 #x0000000000000002))
(assert (= temp10261_78 temp10261_77))
(assert (= temp10261_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10261_78)))
(assert (= temp10261_80 #x0000000000000000))
(assert (= temp10261_81 #x0000000000000003))
(assert (= temp10261_82 temp10261_81))
(assert (= temp10261_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10261_82)))
(assert (= temp10261_84 #x0000000000000000))
(assert (= temp10261_85 #x0000000000000004))
(assert (= temp10261_86 temp10261_85))
(assert (= temp10261_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10261_86)))
(assert (= temp10261_88 #x0000000000000000))
(assert (= temp10261_89 #x0000000000000005))
(assert (= temp10261_90 temp10261_89))
(assert (= temp10261_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10261_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10261_71 temp10261_68)
             (bvslt temp10261_75 temp10261_72)
             (bvslt temp10261_79 temp10261_76)
             (bvslt temp10261_83 temp10261_80)
             (bvslt temp10261_87 temp10261_84)
             (bvslt temp10261_91 temp10261_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10261_92 #x0000000000000000))
(assert (= var1191725 temp10261_92))
(assert (= temp10261_93 #x0000000000000000))
(assert (= temp10261_94 temp10261_93))
(assert (= temp10261_95 (select ARGNAME_stride_NAMEEND_VAL temp10261_94)))
(assert (= temp10261_96 #x0000000000000001))
(assert (= temp10261_97 temp10261_96))
(assert (= temp10261_98 (select ARGNAME_stride_NAMEEND_VAL temp10261_97)))
(assert (= temp10261_99 #x0000000000000002))
(assert (= temp10261_100 temp10261_99))
(assert (= temp10261_101 (select ARGNAME_stride_NAMEEND_VAL temp10261_100)))
(assert (= temp10261_102 #x0000000000000003))
(assert (= temp10261_103 temp10261_102))
(assert (= temp10261_104 (select ARGNAME_stride_NAMEEND_VAL temp10261_103)))
(assert (= temp10261_105 #x0000000000000004))
(assert (= temp10261_106 temp10261_105))
(assert (= temp10261_107 (select ARGNAME_stride_NAMEEND_VAL temp10261_106)))
(assert (= temp10261_108 #x0000000000000005))
(assert (= temp10261_109 temp10261_108))
(assert (= temp10261_110 (select ARGNAME_stride_NAMEEND_VAL temp10261_109)))
(assert (= temp10261_111 #x0000000000000000))
(assert (= temp10261_112 #x0000000000000000))
(assert (= temp10261_113 temp10261_112))
(assert (= temp10261_114 (select ARGNAME_stride_NAMEEND_VAL temp10261_113)))
(assert (= temp10261_115 #x0000000000000000))
(assert (= temp10261_116 #x0000000000000001))
(assert (= temp10261_117 temp10261_116))
(assert (= temp10261_118 (select ARGNAME_stride_NAMEEND_VAL temp10261_117)))
(assert (= temp10261_119 #x0000000000000000))
(assert (= temp10261_120 #x0000000000000002))
(assert (= temp10261_121 temp10261_120))
(assert (= temp10261_122 (select ARGNAME_stride_NAMEEND_VAL temp10261_121)))
(assert (= temp10261_123 #x0000000000000000))
(assert (= temp10261_124 #x0000000000000003))
(assert (= temp10261_125 temp10261_124))
(assert (= temp10261_126 (select ARGNAME_stride_NAMEEND_VAL temp10261_125)))
(assert (= temp10261_127 #x0000000000000000))
(assert (= temp10261_128 #x0000000000000004))
(assert (= temp10261_129 temp10261_128))
(assert (= temp10261_130 (select ARGNAME_stride_NAMEEND_VAL temp10261_129)))
(assert (= temp10261_131 #x0000000000000000))
(assert (= temp10261_132 #x0000000000000005))
(assert (= temp10261_133 temp10261_132))
(assert (= temp10261_134 (select ARGNAME_stride_NAMEEND_VAL temp10261_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10261_114 temp10261_111)
             (bvsle temp10261_118 temp10261_115)
             (bvsle temp10261_122 temp10261_119)
             (bvsle temp10261_126 temp10261_123)
             (bvsle temp10261_130 temp10261_127)
             (bvsle temp10261_134 temp10261_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10261_135 #x0000000000000000))
(assert (= var1191735 temp10261_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10261_136 #x0000000000000001))
(assert (= var1191747 temp10261_136))
(assert (= temp10261_137 #x0000000000000000))
(assert (= var1179826 temp10261_137))
(assert (= temp10261_138 #x0000000000000000))
(assert (= temp10261_139 temp10261_138))
(assert (= temp10261_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10261_139)))
(assert (= temp10261_141 #x0000000000000001))
(assert (= temp10261_142 temp10261_141))
(assert (= temp10261_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10261_142)))
(assert (= temp10261_144 #x0000000000000002))
(assert (= temp10261_145 temp10261_144))
(assert (= temp10261_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10261_145)))
(assert (= temp10261_147 #x0000000000000003))
(assert (= temp10261_148 temp10261_147))
(assert (= temp10261_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10261_148)))
(assert (= temp10261_150 #x0000000000000004))
(assert (= temp10261_151 temp10261_150))
(assert (= temp10261_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10261_151)))
(assert (= temp10261_153 #x0000000000000005))
(assert (= temp10261_154 temp10261_153))
(assert (= temp10261_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10261_154)))
(assert (= temp10261_157 var1179826))
(assert (= temp10261_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10261_157)))
(assert (= temp10261_156 temp10261_158))
(assert (= var1191780
   (ite (bvslt temp10261_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10261_159 #x0000000000000000))
(assert (= var1191780 temp10261_159))
(assert (= temp10261_160 #x0000000000000000))
(assert (= var1179826 temp10261_160))
(assert (= temp10261_162 var1179826))
(assert (= temp10261_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10261_162)))
(assert (= temp10261_161 temp10261_163))
(assert (= var1191802 (bvsmod temp10261_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10261_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10261_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10261_165 #x0000000000000001))
(assert (= var1191803 temp10261_165))
(assert (= temp10261_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10261_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10261_167 #x0000000000000001))
(assert (= var1191823 temp10261_167))
(assert (= temp10261_168 #x0000000000000001))
(assert (= var1180714 temp10261_168))
(assert (= temp10261_169 #x0000000000000000))
(assert (= temp10261_170 temp10261_169))
(assert (= temp10261_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10261_170)))
(assert (= temp10261_172 #x0000000000000001))
(assert (= temp10261_173 temp10261_172))
(assert (= temp10261_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10261_173)))
(assert (= temp10261_175 #x0000000000000002))
(assert (= temp10261_176 temp10261_175))
(assert (= temp10261_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10261_176)))
(assert (= temp10261_178 #x0000000000000003))
(assert (= temp10261_179 temp10261_178))
(assert (= temp10261_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10261_179)))
(assert (= temp10261_181 #x0000000000000004))
(assert (= temp10261_182 temp10261_181))
(assert (= temp10261_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10261_182)))
(assert (= temp10261_184 #x0000000000000005))
(assert (= temp10261_185 temp10261_184))
(assert (= temp10261_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10261_185)))
(assert (= temp10261_187 #x0000000000000000))
(assert (= temp10261_188
   (ite (bvslt var1180714 temp10261_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10261_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10261_188)))
(assert (= var1191831 temp10261_189))
(assert (bvslt (ite (bvslt var1180714 temp10261_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10261_190 #x0000000000000001))
(assert (= var1180714 temp10261_190))
(assert (= temp10261_192 var1180714))
(assert (= temp10261_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10261_192)))
(assert (= temp10261_191 temp10261_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10261_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10261_194 #x0000000000000001))
(assert (= var1191836 temp10261_194))
(assert (= temp10261_195 #x0000000000000000))
(assert (= var1179826 temp10261_195))
(assert (= temp10261_197 var1179826))
(assert (= temp10261_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10261_197)))
(assert (= temp10261_196 temp10261_198))
(assert (= temp10261_199 #x0000000000000002))
(assert (= var1586025 temp10261_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10261_200 #x0000000000000001))
(assert (= var1191993 temp10261_200))
(assert (= temp10261_201 #x0000000000000001))
(assert (= var2700303 temp10261_201))
(assert (= temp10261_202 #x0000000000000001))
(assert (= var2962447 temp10261_202))
(assert (= temp10261_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10261_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10261_204 #x0000000000000001))
(assert (= var211058 temp10261_204))
(assert (= temp10261_205 #x0000000000000001))
(assert (= var211188 temp10261_205))
(assert (= var3879401 var211188))
(assert (= temp10261_206 #x0000000000000000))
(assert (= var3866802 temp10261_206))
(assert (= temp10261_207 #x0000000000000000))
(assert (= temp10261_208
   (ite (bvslt var3866802 temp10261_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10261_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10261_208)))
(assert (= var3879420 temp10261_209))
(assert (bvslt (ite (bvslt var3866802 temp10261_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10261_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10261_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10261_211 #x0000000000000000))
(assert (= var3879421 temp10261_211))
(assert (= temp10261_212 #x0000000000000001))
(assert (= var3867690 temp10261_212))
(assert (= temp10261_213 #x0000000000000000))
(assert (= temp10261_214
   (ite (bvslt var3867690 temp10261_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10261_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10261_214)))
(assert (= var3879423 temp10261_215))
(assert (bvslt (ite (bvslt var3867690 temp10261_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10261_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10261_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10261_217 #x0000000000000001))
(assert (= var3879424 temp10261_217))
(assert (= temp10261_218 #x0000000000000000))
(assert (= var4079423 temp10261_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10261_219 #x0000000000000002))
(assert (= var4208259 temp10261_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10261_220 #x0000000000000000))
(assert (= var4273820 temp10261_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp10261_221 #x0000000000000001))
(assert (= var211058 temp10261_221))
(model-add temp10261_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10261_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10261_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10261_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))



