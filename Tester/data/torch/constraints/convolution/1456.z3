(declare-fun temp10736_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10736_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10736_3 () (_ BitVec 64))
(declare-fun temp10736_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10736_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10736_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10736_7 () (_ BitVec 64))
(declare-fun temp10736_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10736_9 () (_ BitVec 64))
(declare-fun temp10736_10 () (_ BitVec 64))
(declare-fun temp10736_11 () (_ BitVec 64))
(declare-fun temp10736_12 () (_ BitVec 64))
(declare-fun temp10736_13 () (_ BitVec 64))
(declare-fun temp10736_14 () (_ BitVec 64))
(declare-fun temp10736_15 () (_ BitVec 64))
(declare-fun temp10736_16 () (_ BitVec 64))
(declare-fun temp10736_17 () (_ BitVec 64))
(declare-fun temp10736_18 () (_ BitVec 64))
(declare-fun temp10736_19 () (_ BitVec 64))
(declare-fun temp10736_20 () (_ BitVec 64))
(declare-fun temp10736_21 () (_ BitVec 64))
(declare-fun temp10736_22 () (_ BitVec 64))
(declare-fun temp10736_23 () (_ BitVec 64))
(declare-fun temp10736_24 () (_ BitVec 64))
(declare-fun temp10736_25 () (_ BitVec 64))
(declare-fun temp10736_26 () (_ BitVec 64))
(declare-fun temp10736_27 () (_ BitVec 64))
(declare-fun temp10736_28 () (_ BitVec 64))
(declare-fun temp10736_29 () (_ BitVec 64))
(declare-fun temp10736_30 () (_ BitVec 64))
(declare-fun temp10736_31 () (_ BitVec 64))
(declare-fun temp10736_32 () (_ BitVec 64))
(declare-fun temp10736_33 () (_ BitVec 64))
(declare-fun temp10736_34 () (_ BitVec 64))
(declare-fun temp10736_35 () (_ BitVec 64))
(declare-fun temp10736_36 () (_ BitVec 64))
(declare-fun temp10736_37 () (_ BitVec 64))
(declare-fun temp10736_38 () (_ BitVec 64))
(declare-fun temp10736_39 () (_ BitVec 64))
(declare-fun temp10736_40 () (_ BitVec 64))
(declare-fun temp10736_41 () (_ BitVec 64))
(declare-fun temp10736_42 () (_ BitVec 64))
(declare-fun temp10736_43 () (_ BitVec 64))
(declare-fun temp10736_44 () (_ BitVec 64))
(declare-fun temp10736_45 () (_ BitVec 64))
(declare-fun temp10736_46 () (_ BitVec 64))
(declare-fun temp10736_47 () (_ BitVec 64))
(declare-fun temp10736_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10736_49 () (_ BitVec 64))
(declare-fun temp10736_50 () (_ BitVec 64))
(declare-fun temp10736_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10736_52 () (_ BitVec 64))
(declare-fun temp10736_53 () (_ BitVec 64))
(declare-fun temp10736_54 () (_ BitVec 64))
(declare-fun temp10736_55 () (_ BitVec 64))
(declare-fun temp10736_56 () (_ BitVec 64))
(declare-fun temp10736_57 () (_ BitVec 64))
(declare-fun temp10736_58 () (_ BitVec 64))
(declare-fun temp10736_59 () (_ BitVec 64))
(declare-fun temp10736_60 () (_ BitVec 64))
(declare-fun temp10736_61 () (_ BitVec 64))
(declare-fun temp10736_62 () (_ BitVec 64))
(declare-fun temp10736_63 () (_ BitVec 64))
(declare-fun temp10736_64 () (_ BitVec 64))
(declare-fun temp10736_65 () (_ BitVec 64))
(declare-fun temp10736_66 () (_ BitVec 64))
(declare-fun temp10736_67 () (_ BitVec 64))
(declare-fun temp10736_68 () (_ BitVec 64))
(declare-fun temp10736_69 () (_ BitVec 64))
(declare-fun temp10736_70 () (_ BitVec 64))
(declare-fun temp10736_71 () (_ BitVec 64))
(declare-fun temp10736_72 () (_ BitVec 64))
(declare-fun temp10736_73 () (_ BitVec 64))
(declare-fun temp10736_74 () (_ BitVec 64))
(declare-fun temp10736_75 () (_ BitVec 64))
(declare-fun temp10736_76 () (_ BitVec 64))
(declare-fun temp10736_77 () (_ BitVec 64))
(declare-fun temp10736_78 () (_ BitVec 64))
(declare-fun temp10736_79 () (_ BitVec 64))
(declare-fun temp10736_80 () (_ BitVec 64))
(declare-fun temp10736_81 () (_ BitVec 64))
(declare-fun temp10736_82 () (_ BitVec 64))
(declare-fun temp10736_83 () (_ BitVec 64))
(declare-fun temp10736_84 () (_ BitVec 64))
(declare-fun temp10736_85 () (_ BitVec 64))
(declare-fun temp10736_86 () (_ BitVec 64))
(declare-fun temp10736_87 () (_ BitVec 64))
(declare-fun temp10736_88 () (_ BitVec 64))
(declare-fun temp10736_89 () (_ BitVec 64))
(declare-fun temp10736_90 () (_ BitVec 64))
(declare-fun temp10736_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10736_92 () (_ BitVec 64))
(declare-fun temp10736_93 () (_ BitVec 64))
(declare-fun temp10736_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10736_95 () (_ BitVec 64))
(declare-fun temp10736_96 () (_ BitVec 64))
(declare-fun temp10736_97 () (_ BitVec 64))
(declare-fun temp10736_98 () (_ BitVec 64))
(declare-fun temp10736_99 () (_ BitVec 64))
(declare-fun temp10736_100 () (_ BitVec 64))
(declare-fun temp10736_101 () (_ BitVec 64))
(declare-fun temp10736_102 () (_ BitVec 64))
(declare-fun temp10736_103 () (_ BitVec 64))
(declare-fun temp10736_104 () (_ BitVec 64))
(declare-fun temp10736_105 () (_ BitVec 64))
(declare-fun temp10736_106 () (_ BitVec 64))
(declare-fun temp10736_107 () (_ BitVec 64))
(declare-fun temp10736_108 () (_ BitVec 64))
(declare-fun temp10736_109 () (_ BitVec 64))
(declare-fun temp10736_110 () (_ BitVec 64))
(declare-fun temp10736_111 () (_ BitVec 64))
(declare-fun temp10736_112 () (_ BitVec 64))
(declare-fun temp10736_113 () (_ BitVec 64))
(declare-fun temp10736_114 () (_ BitVec 64))
(declare-fun temp10736_115 () (_ BitVec 64))
(declare-fun temp10736_116 () (_ BitVec 64))
(declare-fun temp10736_117 () (_ BitVec 64))
(declare-fun temp10736_118 () (_ BitVec 64))
(declare-fun temp10736_119 () (_ BitVec 64))
(declare-fun temp10736_120 () (_ BitVec 64))
(declare-fun temp10736_121 () (_ BitVec 64))
(declare-fun temp10736_122 () (_ BitVec 64))
(declare-fun temp10736_123 () (_ BitVec 64))
(declare-fun temp10736_124 () (_ BitVec 64))
(declare-fun temp10736_125 () (_ BitVec 64))
(declare-fun temp10736_126 () (_ BitVec 64))
(declare-fun temp10736_127 () (_ BitVec 64))
(declare-fun temp10736_128 () (_ BitVec 64))
(declare-fun temp10736_129 () (_ BitVec 64))
(declare-fun temp10736_130 () (_ BitVec 64))
(declare-fun temp10736_131 () (_ BitVec 64))
(declare-fun temp10736_132 () (_ BitVec 64))
(declare-fun temp10736_133 () (_ BitVec 64))
(declare-fun temp10736_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10736_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10736_136 () (_ BitVec 64))
(declare-fun temp10736_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10736_138 () (_ BitVec 64))
(declare-fun temp10736_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10736_140 () (_ BitVec 64))
(declare-fun temp10736_141 () (_ BitVec 64))
(declare-fun temp10736_142 () (_ BitVec 64))
(declare-fun temp10736_143 () (_ BitVec 64))
(declare-fun temp10736_144 () (_ BitVec 64))
(declare-fun temp10736_145 () (_ BitVec 64))
(declare-fun temp10736_146 () (_ BitVec 64))
(declare-fun temp10736_147 () (_ BitVec 64))
(declare-fun temp10736_148 () (_ BitVec 64))
(declare-fun temp10736_149 () (_ BitVec 64))
(declare-fun temp10736_150 () (_ BitVec 64))
(declare-fun temp10736_151 () (_ BitVec 64))
(declare-fun temp10736_152 () (_ BitVec 64))
(declare-fun temp10736_153 () (_ BitVec 64))
(declare-fun temp10736_154 () (_ BitVec 64))
(declare-fun temp10736_155 () (_ BitVec 64))
(declare-fun temp10736_157 () (_ BitVec 64))
(declare-fun temp10736_158 () (_ BitVec 64))
(declare-fun temp10736_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10736_159 () (_ BitVec 64))
(declare-fun temp10736_160 () (_ BitVec 64))
(declare-fun temp10736_162 () (_ BitVec 64))
(declare-fun temp10736_163 () (_ BitVec 64))
(declare-fun temp10736_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10736_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10736_165 () (_ BitVec 64))
(declare-fun temp10736_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10736_167 () (_ BitVec 64))
(declare-fun temp10736_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10736_169 () (_ BitVec 64))
(declare-fun temp10736_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10736_171 () (_ BitVec 64))
(declare-fun temp10736_172 () (_ BitVec 64))
(declare-fun temp10736_173 () (_ BitVec 64))
(declare-fun temp10736_174 () (_ BitVec 64))
(declare-fun temp10736_175 () (_ BitVec 64))
(declare-fun temp10736_176 () (_ BitVec 64))
(declare-fun temp10736_177 () (_ BitVec 64))
(declare-fun temp10736_178 () (_ BitVec 64))
(declare-fun temp10736_179 () (_ BitVec 64))
(declare-fun temp10736_180 () (_ BitVec 64))
(declare-fun temp10736_181 () (_ BitVec 64))
(declare-fun temp10736_182 () (_ BitVec 64))
(declare-fun temp10736_183 () (_ BitVec 64))
(declare-fun temp10736_184 () (_ BitVec 64))
(declare-fun temp10736_185 () (_ BitVec 64))
(declare-fun temp10736_186 () (_ BitVec 64))
(declare-fun temp10736_187 () (_ BitVec 64))
(declare-fun temp10736_188 () (_ BitVec 64))
(declare-fun temp10736_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10736_190 () (_ BitVec 64))
(declare-fun temp10736_192 () (_ BitVec 64))
(declare-fun temp10736_193 () (_ BitVec 64))
(declare-fun temp10736_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10736_194 () (_ BitVec 64))
(declare-fun temp10736_195 () (_ BitVec 64))
(declare-fun temp10736_197 () (_ BitVec 64))
(declare-fun temp10736_198 () (_ BitVec 64))
(declare-fun temp10736_196 () (_ BitVec 64))
(declare-fun temp10736_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10736_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10736_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10736_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10736_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10736_204 () (_ BitVec 64))
(declare-fun temp10736_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10736_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10736_207 () (_ BitVec 64))
(declare-fun temp10736_208 () (_ BitVec 64))
(declare-fun temp10736_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10736_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10736_211 () (_ BitVec 64))
(declare-fun temp10736_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10736_213 () (_ BitVec 64))
(declare-fun temp10736_214 () (_ BitVec 64))
(declare-fun temp10736_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10736_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10736_217 () (_ BitVec 64))
(declare-fun temp10736_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10736_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10736_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var4927888 () (_ BitVec 64))
(declare-fun var211820 () (_ BitVec 64))
(declare-fun temp10736_221 () (_ BitVec 64))
(declare-fun var211821 () (_ BitVec 64))
(declare-fun temp10736_222 () (_ BitVec 64))
(assert (= temp10736_1 #x0000000000000001))
(assert (= var77203 temp10736_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10736_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10736_2)))
(assert (= temp10736_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10736_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10736_4 #x0000000000000000))
(assert (= var210941 temp10736_4))
(assert (= temp10736_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10736_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10736_6 #x0000000000000000))
(assert (= var210986 temp10736_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10736_7 #x0000000000000000))
(assert (= temp10736_8 temp10736_7))
(assert (= temp10736_9 (select ARGNAME_padding_NAMEEND_VAL temp10736_8)))
(assert (= temp10736_10 #x0000000000000001))
(assert (= temp10736_11 temp10736_10))
(assert (= temp10736_12 (select ARGNAME_padding_NAMEEND_VAL temp10736_11)))
(assert (= temp10736_13 #x0000000000000002))
(assert (= temp10736_14 temp10736_13))
(assert (= temp10736_15 (select ARGNAME_padding_NAMEEND_VAL temp10736_14)))
(assert (= temp10736_16 #x0000000000000003))
(assert (= temp10736_17 temp10736_16))
(assert (= temp10736_18 (select ARGNAME_padding_NAMEEND_VAL temp10736_17)))
(assert (= temp10736_19 #x0000000000000004))
(assert (= temp10736_20 temp10736_19))
(assert (= temp10736_21 (select ARGNAME_padding_NAMEEND_VAL temp10736_20)))
(assert (= temp10736_22 #x0000000000000005))
(assert (= temp10736_23 temp10736_22))
(assert (= temp10736_24 (select ARGNAME_padding_NAMEEND_VAL temp10736_23)))
(assert (= temp10736_25 #x0000000000000000))
(assert (= temp10736_26 #x0000000000000000))
(assert (= temp10736_27 temp10736_26))
(assert (= temp10736_28 (select ARGNAME_padding_NAMEEND_VAL temp10736_27)))
(assert (= temp10736_29 #x0000000000000000))
(assert (= temp10736_30 #x0000000000000001))
(assert (= temp10736_31 temp10736_30))
(assert (= temp10736_32 (select ARGNAME_padding_NAMEEND_VAL temp10736_31)))
(assert (= temp10736_33 #x0000000000000000))
(assert (= temp10736_34 #x0000000000000002))
(assert (= temp10736_35 temp10736_34))
(assert (= temp10736_36 (select ARGNAME_padding_NAMEEND_VAL temp10736_35)))
(assert (= temp10736_37 #x0000000000000000))
(assert (= temp10736_38 #x0000000000000003))
(assert (= temp10736_39 temp10736_38))
(assert (= temp10736_40 (select ARGNAME_padding_NAMEEND_VAL temp10736_39)))
(assert (= temp10736_41 #x0000000000000000))
(assert (= temp10736_42 #x0000000000000004))
(assert (= temp10736_43 temp10736_42))
(assert (= temp10736_44 (select ARGNAME_padding_NAMEEND_VAL temp10736_43)))
(assert (= temp10736_45 #x0000000000000000))
(assert (= temp10736_46 #x0000000000000005))
(assert (= temp10736_47 temp10736_46))
(assert (= temp10736_48 (select ARGNAME_padding_NAMEEND_VAL temp10736_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10736_28 temp10736_25)
             (bvslt temp10736_32 temp10736_29)
             (bvslt temp10736_36 temp10736_33)
             (bvslt temp10736_40 temp10736_37)
             (bvslt temp10736_44 temp10736_41)
             (bvslt temp10736_48 temp10736_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10736_49 #x0000000000000000))
(assert (= var1191714 temp10736_49))
(assert (= temp10736_50 #x0000000000000000))
(assert (= temp10736_51 temp10736_50))
(assert (= temp10736_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10736_51)))
(assert (= temp10736_53 #x0000000000000001))
(assert (= temp10736_54 temp10736_53))
(assert (= temp10736_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10736_54)))
(assert (= temp10736_56 #x0000000000000002))
(assert (= temp10736_57 temp10736_56))
(assert (= temp10736_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10736_57)))
(assert (= temp10736_59 #x0000000000000003))
(assert (= temp10736_60 temp10736_59))
(assert (= temp10736_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10736_60)))
(assert (= temp10736_62 #x0000000000000004))
(assert (= temp10736_63 temp10736_62))
(assert (= temp10736_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10736_63)))
(assert (= temp10736_65 #x0000000000000005))
(assert (= temp10736_66 temp10736_65))
(assert (= temp10736_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10736_66)))
(assert (= temp10736_68 #x0000000000000000))
(assert (= temp10736_69 #x0000000000000000))
(assert (= temp10736_70 temp10736_69))
(assert (= temp10736_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10736_70)))
(assert (= temp10736_72 #x0000000000000000))
(assert (= temp10736_73 #x0000000000000001))
(assert (= temp10736_74 temp10736_73))
(assert (= temp10736_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10736_74)))
(assert (= temp10736_76 #x0000000000000000))
(assert (= temp10736_77 #x0000000000000002))
(assert (= temp10736_78 temp10736_77))
(assert (= temp10736_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10736_78)))
(assert (= temp10736_80 #x0000000000000000))
(assert (= temp10736_81 #x0000000000000003))
(assert (= temp10736_82 temp10736_81))
(assert (= temp10736_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10736_82)))
(assert (= temp10736_84 #x0000000000000000))
(assert (= temp10736_85 #x0000000000000004))
(assert (= temp10736_86 temp10736_85))
(assert (= temp10736_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10736_86)))
(assert (= temp10736_88 #x0000000000000000))
(assert (= temp10736_89 #x0000000000000005))
(assert (= temp10736_90 temp10736_89))
(assert (= temp10736_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10736_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10736_71 temp10736_68)
             (bvslt temp10736_75 temp10736_72)
             (bvslt temp10736_79 temp10736_76)
             (bvslt temp10736_83 temp10736_80)
             (bvslt temp10736_87 temp10736_84)
             (bvslt temp10736_91 temp10736_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10736_92 #x0000000000000000))
(assert (= var1191725 temp10736_92))
(assert (= temp10736_93 #x0000000000000000))
(assert (= temp10736_94 temp10736_93))
(assert (= temp10736_95 (select ARGNAME_stride_NAMEEND_VAL temp10736_94)))
(assert (= temp10736_96 #x0000000000000001))
(assert (= temp10736_97 temp10736_96))
(assert (= temp10736_98 (select ARGNAME_stride_NAMEEND_VAL temp10736_97)))
(assert (= temp10736_99 #x0000000000000002))
(assert (= temp10736_100 temp10736_99))
(assert (= temp10736_101 (select ARGNAME_stride_NAMEEND_VAL temp10736_100)))
(assert (= temp10736_102 #x0000000000000003))
(assert (= temp10736_103 temp10736_102))
(assert (= temp10736_104 (select ARGNAME_stride_NAMEEND_VAL temp10736_103)))
(assert (= temp10736_105 #x0000000000000004))
(assert (= temp10736_106 temp10736_105))
(assert (= temp10736_107 (select ARGNAME_stride_NAMEEND_VAL temp10736_106)))
(assert (= temp10736_108 #x0000000000000005))
(assert (= temp10736_109 temp10736_108))
(assert (= temp10736_110 (select ARGNAME_stride_NAMEEND_VAL temp10736_109)))
(assert (= temp10736_111 #x0000000000000000))
(assert (= temp10736_112 #x0000000000000000))
(assert (= temp10736_113 temp10736_112))
(assert (= temp10736_114 (select ARGNAME_stride_NAMEEND_VAL temp10736_113)))
(assert (= temp10736_115 #x0000000000000000))
(assert (= temp10736_116 #x0000000000000001))
(assert (= temp10736_117 temp10736_116))
(assert (= temp10736_118 (select ARGNAME_stride_NAMEEND_VAL temp10736_117)))
(assert (= temp10736_119 #x0000000000000000))
(assert (= temp10736_120 #x0000000000000002))
(assert (= temp10736_121 temp10736_120))
(assert (= temp10736_122 (select ARGNAME_stride_NAMEEND_VAL temp10736_121)))
(assert (= temp10736_123 #x0000000000000000))
(assert (= temp10736_124 #x0000000000000003))
(assert (= temp10736_125 temp10736_124))
(assert (= temp10736_126 (select ARGNAME_stride_NAMEEND_VAL temp10736_125)))
(assert (= temp10736_127 #x0000000000000000))
(assert (= temp10736_128 #x0000000000000004))
(assert (= temp10736_129 temp10736_128))
(assert (= temp10736_130 (select ARGNAME_stride_NAMEEND_VAL temp10736_129)))
(assert (= temp10736_131 #x0000000000000000))
(assert (= temp10736_132 #x0000000000000005))
(assert (= temp10736_133 temp10736_132))
(assert (= temp10736_134 (select ARGNAME_stride_NAMEEND_VAL temp10736_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10736_114 temp10736_111)
             (bvsle temp10736_118 temp10736_115)
             (bvsle temp10736_122 temp10736_119)
             (bvsle temp10736_126 temp10736_123)
             (bvsle temp10736_130 temp10736_127)
             (bvsle temp10736_134 temp10736_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10736_135 #x0000000000000000))
(assert (= var1191735 temp10736_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10736_136 #x0000000000000001))
(assert (= var1191747 temp10736_136))
(assert (= temp10736_137 #x0000000000000000))
(assert (= var1179826 temp10736_137))
(assert (= temp10736_138 #x0000000000000000))
(assert (= temp10736_139 temp10736_138))
(assert (= temp10736_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10736_139)))
(assert (= temp10736_141 #x0000000000000001))
(assert (= temp10736_142 temp10736_141))
(assert (= temp10736_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10736_142)))
(assert (= temp10736_144 #x0000000000000002))
(assert (= temp10736_145 temp10736_144))
(assert (= temp10736_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10736_145)))
(assert (= temp10736_147 #x0000000000000003))
(assert (= temp10736_148 temp10736_147))
(assert (= temp10736_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10736_148)))
(assert (= temp10736_150 #x0000000000000004))
(assert (= temp10736_151 temp10736_150))
(assert (= temp10736_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10736_151)))
(assert (= temp10736_153 #x0000000000000005))
(assert (= temp10736_154 temp10736_153))
(assert (= temp10736_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10736_154)))
(assert (= temp10736_157 var1179826))
(assert (= temp10736_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10736_157)))
(assert (= temp10736_156 temp10736_158))
(assert (= var1191780
   (ite (bvslt temp10736_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10736_159 #x0000000000000000))
(assert (= var1191780 temp10736_159))
(assert (= temp10736_160 #x0000000000000000))
(assert (= var1179826 temp10736_160))
(assert (= temp10736_162 var1179826))
(assert (= temp10736_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10736_162)))
(assert (= temp10736_161 temp10736_163))
(assert (= var1191802 (bvsmod temp10736_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10736_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10736_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10736_165 #x0000000000000001))
(assert (= var1191803 temp10736_165))
(assert (= temp10736_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10736_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10736_167 #x0000000000000001))
(assert (= var1191823 temp10736_167))
(assert (= temp10736_168 #x0000000000000001))
(assert (= var1180714 temp10736_168))
(assert (= temp10736_169 #x0000000000000000))
(assert (= temp10736_170 temp10736_169))
(assert (= temp10736_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10736_170)))
(assert (= temp10736_172 #x0000000000000001))
(assert (= temp10736_173 temp10736_172))
(assert (= temp10736_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10736_173)))
(assert (= temp10736_175 #x0000000000000002))
(assert (= temp10736_176 temp10736_175))
(assert (= temp10736_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10736_176)))
(assert (= temp10736_178 #x0000000000000003))
(assert (= temp10736_179 temp10736_178))
(assert (= temp10736_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10736_179)))
(assert (= temp10736_181 #x0000000000000004))
(assert (= temp10736_182 temp10736_181))
(assert (= temp10736_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10736_182)))
(assert (= temp10736_184 #x0000000000000005))
(assert (= temp10736_185 temp10736_184))
(assert (= temp10736_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10736_185)))
(assert (= temp10736_187 #x0000000000000000))
(assert (= temp10736_188
   (ite (bvslt var1180714 temp10736_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10736_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10736_188)))
(assert (= var1191831 temp10736_189))
(assert (bvslt (ite (bvslt var1180714 temp10736_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10736_190 #x0000000000000001))
(assert (= var1180714 temp10736_190))
(assert (= temp10736_192 var1180714))
(assert (= temp10736_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10736_192)))
(assert (= temp10736_191 temp10736_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10736_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10736_194 #x0000000000000001))
(assert (= var1191836 temp10736_194))
(assert (= temp10736_195 #x0000000000000000))
(assert (= var1179826 temp10736_195))
(assert (= temp10736_197 var1179826))
(assert (= temp10736_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10736_197)))
(assert (= temp10736_196 temp10736_198))
(assert (= temp10736_199 #x0000000000000002))
(assert (= var1586025 temp10736_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10736_200 #x0000000000000001))
(assert (= var1191993 temp10736_200))
(assert (= temp10736_201 #x0000000000000001))
(assert (= var2700303 temp10736_201))
(assert (= temp10736_202 #x0000000000000001))
(assert (= var2962447 temp10736_202))
(assert (= temp10736_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10736_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10736_204 #x0000000000000001))
(assert (= var211058 temp10736_204))
(assert (= temp10736_205 #x0000000000000001))
(assert (= var211188 temp10736_205))
(assert (= var3879401 var211188))
(assert (= temp10736_206 #x0000000000000000))
(assert (= var3866802 temp10736_206))
(assert (= temp10736_207 #x0000000000000000))
(assert (= temp10736_208
   (ite (bvslt var3866802 temp10736_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10736_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10736_208)))
(assert (= var3879420 temp10736_209))
(assert (bvslt (ite (bvslt var3866802 temp10736_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10736_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10736_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10736_211 #x0000000000000000))
(assert (= var3879421 temp10736_211))
(assert (= temp10736_212 #x0000000000000001))
(assert (= var3867690 temp10736_212))
(assert (= temp10736_213 #x0000000000000000))
(assert (= temp10736_214
   (ite (bvslt var3867690 temp10736_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10736_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10736_214)))
(assert (= var3879423 temp10736_215))
(assert (bvslt (ite (bvslt var3867690 temp10736_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10736_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10736_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10736_217 #x0000000000000001))
(assert (= var3879424 temp10736_217))
(assert (= temp10736_218 #x0000000000000000))
(assert (= var4133117 temp10736_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10736_219 #x0000000000000002))
(assert (= var4339331 temp10736_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10736_220 #x0000000000000000))
(assert (= var4404892 temp10736_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var4927888 var211201))
(assert (= var211820 var210913))
(assert (= temp10736_221 #x0000000000000000))
(assert (= var211821
   (ite (distinct var211820 temp10736_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10736_222 #x0000000000000001))
(assert (= var211058 temp10736_222))
(model-add temp10736_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10736_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10736_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10736_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




