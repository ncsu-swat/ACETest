(declare-fun temp10269_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10269_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10269_3 () (_ BitVec 64))
(declare-fun temp10269_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10269_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10269_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10269_7 () (_ BitVec 64))
(declare-fun temp10269_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10269_9 () (_ BitVec 64))
(declare-fun temp10269_10 () (_ BitVec 64))
(declare-fun temp10269_11 () (_ BitVec 64))
(declare-fun temp10269_12 () (_ BitVec 64))
(declare-fun temp10269_13 () (_ BitVec 64))
(declare-fun temp10269_14 () (_ BitVec 64))
(declare-fun temp10269_15 () (_ BitVec 64))
(declare-fun temp10269_16 () (_ BitVec 64))
(declare-fun temp10269_17 () (_ BitVec 64))
(declare-fun temp10269_18 () (_ BitVec 64))
(declare-fun temp10269_19 () (_ BitVec 64))
(declare-fun temp10269_20 () (_ BitVec 64))
(declare-fun temp10269_21 () (_ BitVec 64))
(declare-fun temp10269_22 () (_ BitVec 64))
(declare-fun temp10269_23 () (_ BitVec 64))
(declare-fun temp10269_24 () (_ BitVec 64))
(declare-fun temp10269_25 () (_ BitVec 64))
(declare-fun temp10269_26 () (_ BitVec 64))
(declare-fun temp10269_27 () (_ BitVec 64))
(declare-fun temp10269_28 () (_ BitVec 64))
(declare-fun temp10269_29 () (_ BitVec 64))
(declare-fun temp10269_30 () (_ BitVec 64))
(declare-fun temp10269_31 () (_ BitVec 64))
(declare-fun temp10269_32 () (_ BitVec 64))
(declare-fun temp10269_33 () (_ BitVec 64))
(declare-fun temp10269_34 () (_ BitVec 64))
(declare-fun temp10269_35 () (_ BitVec 64))
(declare-fun temp10269_36 () (_ BitVec 64))
(declare-fun temp10269_37 () (_ BitVec 64))
(declare-fun temp10269_38 () (_ BitVec 64))
(declare-fun temp10269_39 () (_ BitVec 64))
(declare-fun temp10269_40 () (_ BitVec 64))
(declare-fun temp10269_41 () (_ BitVec 64))
(declare-fun temp10269_42 () (_ BitVec 64))
(declare-fun temp10269_43 () (_ BitVec 64))
(declare-fun temp10269_44 () (_ BitVec 64))
(declare-fun temp10269_45 () (_ BitVec 64))
(declare-fun temp10269_46 () (_ BitVec 64))
(declare-fun temp10269_47 () (_ BitVec 64))
(declare-fun temp10269_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10269_49 () (_ BitVec 64))
(declare-fun temp10269_50 () (_ BitVec 64))
(declare-fun temp10269_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10269_52 () (_ BitVec 64))
(declare-fun temp10269_53 () (_ BitVec 64))
(declare-fun temp10269_54 () (_ BitVec 64))
(declare-fun temp10269_55 () (_ BitVec 64))
(declare-fun temp10269_56 () (_ BitVec 64))
(declare-fun temp10269_57 () (_ BitVec 64))
(declare-fun temp10269_58 () (_ BitVec 64))
(declare-fun temp10269_59 () (_ BitVec 64))
(declare-fun temp10269_60 () (_ BitVec 64))
(declare-fun temp10269_61 () (_ BitVec 64))
(declare-fun temp10269_62 () (_ BitVec 64))
(declare-fun temp10269_63 () (_ BitVec 64))
(declare-fun temp10269_64 () (_ BitVec 64))
(declare-fun temp10269_65 () (_ BitVec 64))
(declare-fun temp10269_66 () (_ BitVec 64))
(declare-fun temp10269_67 () (_ BitVec 64))
(declare-fun temp10269_68 () (_ BitVec 64))
(declare-fun temp10269_69 () (_ BitVec 64))
(declare-fun temp10269_70 () (_ BitVec 64))
(declare-fun temp10269_71 () (_ BitVec 64))
(declare-fun temp10269_72 () (_ BitVec 64))
(declare-fun temp10269_73 () (_ BitVec 64))
(declare-fun temp10269_74 () (_ BitVec 64))
(declare-fun temp10269_75 () (_ BitVec 64))
(declare-fun temp10269_76 () (_ BitVec 64))
(declare-fun temp10269_77 () (_ BitVec 64))
(declare-fun temp10269_78 () (_ BitVec 64))
(declare-fun temp10269_79 () (_ BitVec 64))
(declare-fun temp10269_80 () (_ BitVec 64))
(declare-fun temp10269_81 () (_ BitVec 64))
(declare-fun temp10269_82 () (_ BitVec 64))
(declare-fun temp10269_83 () (_ BitVec 64))
(declare-fun temp10269_84 () (_ BitVec 64))
(declare-fun temp10269_85 () (_ BitVec 64))
(declare-fun temp10269_86 () (_ BitVec 64))
(declare-fun temp10269_87 () (_ BitVec 64))
(declare-fun temp10269_88 () (_ BitVec 64))
(declare-fun temp10269_89 () (_ BitVec 64))
(declare-fun temp10269_90 () (_ BitVec 64))
(declare-fun temp10269_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10269_92 () (_ BitVec 64))
(declare-fun temp10269_93 () (_ BitVec 64))
(declare-fun temp10269_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10269_95 () (_ BitVec 64))
(declare-fun temp10269_96 () (_ BitVec 64))
(declare-fun temp10269_97 () (_ BitVec 64))
(declare-fun temp10269_98 () (_ BitVec 64))
(declare-fun temp10269_99 () (_ BitVec 64))
(declare-fun temp10269_100 () (_ BitVec 64))
(declare-fun temp10269_101 () (_ BitVec 64))
(declare-fun temp10269_102 () (_ BitVec 64))
(declare-fun temp10269_103 () (_ BitVec 64))
(declare-fun temp10269_104 () (_ BitVec 64))
(declare-fun temp10269_105 () (_ BitVec 64))
(declare-fun temp10269_106 () (_ BitVec 64))
(declare-fun temp10269_107 () (_ BitVec 64))
(declare-fun temp10269_108 () (_ BitVec 64))
(declare-fun temp10269_109 () (_ BitVec 64))
(declare-fun temp10269_110 () (_ BitVec 64))
(declare-fun temp10269_111 () (_ BitVec 64))
(declare-fun temp10269_112 () (_ BitVec 64))
(declare-fun temp10269_113 () (_ BitVec 64))
(declare-fun temp10269_114 () (_ BitVec 64))
(declare-fun temp10269_115 () (_ BitVec 64))
(declare-fun temp10269_116 () (_ BitVec 64))
(declare-fun temp10269_117 () (_ BitVec 64))
(declare-fun temp10269_118 () (_ BitVec 64))
(declare-fun temp10269_119 () (_ BitVec 64))
(declare-fun temp10269_120 () (_ BitVec 64))
(declare-fun temp10269_121 () (_ BitVec 64))
(declare-fun temp10269_122 () (_ BitVec 64))
(declare-fun temp10269_123 () (_ BitVec 64))
(declare-fun temp10269_124 () (_ BitVec 64))
(declare-fun temp10269_125 () (_ BitVec 64))
(declare-fun temp10269_126 () (_ BitVec 64))
(declare-fun temp10269_127 () (_ BitVec 64))
(declare-fun temp10269_128 () (_ BitVec 64))
(declare-fun temp10269_129 () (_ BitVec 64))
(declare-fun temp10269_130 () (_ BitVec 64))
(declare-fun temp10269_131 () (_ BitVec 64))
(declare-fun temp10269_132 () (_ BitVec 64))
(declare-fun temp10269_133 () (_ BitVec 64))
(declare-fun temp10269_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10269_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10269_136 () (_ BitVec 64))
(declare-fun temp10269_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10269_138 () (_ BitVec 64))
(declare-fun temp10269_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10269_140 () (_ BitVec 64))
(declare-fun temp10269_141 () (_ BitVec 64))
(declare-fun temp10269_142 () (_ BitVec 64))
(declare-fun temp10269_143 () (_ BitVec 64))
(declare-fun temp10269_144 () (_ BitVec 64))
(declare-fun temp10269_145 () (_ BitVec 64))
(declare-fun temp10269_146 () (_ BitVec 64))
(declare-fun temp10269_147 () (_ BitVec 64))
(declare-fun temp10269_148 () (_ BitVec 64))
(declare-fun temp10269_149 () (_ BitVec 64))
(declare-fun temp10269_150 () (_ BitVec 64))
(declare-fun temp10269_151 () (_ BitVec 64))
(declare-fun temp10269_152 () (_ BitVec 64))
(declare-fun temp10269_153 () (_ BitVec 64))
(declare-fun temp10269_154 () (_ BitVec 64))
(declare-fun temp10269_155 () (_ BitVec 64))
(declare-fun temp10269_157 () (_ BitVec 64))
(declare-fun temp10269_158 () (_ BitVec 64))
(declare-fun temp10269_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10269_159 () (_ BitVec 64))
(declare-fun temp10269_160 () (_ BitVec 64))
(declare-fun temp10269_162 () (_ BitVec 64))
(declare-fun temp10269_163 () (_ BitVec 64))
(declare-fun temp10269_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10269_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10269_165 () (_ BitVec 64))
(declare-fun temp10269_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10269_167 () (_ BitVec 64))
(declare-fun temp10269_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10269_169 () (_ BitVec 64))
(declare-fun temp10269_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10269_171 () (_ BitVec 64))
(declare-fun temp10269_172 () (_ BitVec 64))
(declare-fun temp10269_173 () (_ BitVec 64))
(declare-fun temp10269_174 () (_ BitVec 64))
(declare-fun temp10269_175 () (_ BitVec 64))
(declare-fun temp10269_176 () (_ BitVec 64))
(declare-fun temp10269_177 () (_ BitVec 64))
(declare-fun temp10269_178 () (_ BitVec 64))
(declare-fun temp10269_179 () (_ BitVec 64))
(declare-fun temp10269_180 () (_ BitVec 64))
(declare-fun temp10269_181 () (_ BitVec 64))
(declare-fun temp10269_182 () (_ BitVec 64))
(declare-fun temp10269_183 () (_ BitVec 64))
(declare-fun temp10269_184 () (_ BitVec 64))
(declare-fun temp10269_185 () (_ BitVec 64))
(declare-fun temp10269_186 () (_ BitVec 64))
(declare-fun temp10269_187 () (_ BitVec 64))
(declare-fun temp10269_188 () (_ BitVec 64))
(declare-fun temp10269_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10269_190 () (_ BitVec 64))
(declare-fun temp10269_192 () (_ BitVec 64))
(declare-fun temp10269_193 () (_ BitVec 64))
(declare-fun temp10269_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10269_194 () (_ BitVec 64))
(declare-fun temp10269_195 () (_ BitVec 64))
(declare-fun temp10269_197 () (_ BitVec 64))
(declare-fun temp10269_198 () (_ BitVec 64))
(declare-fun temp10269_196 () (_ BitVec 64))
(declare-fun temp10269_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10269_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10269_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10269_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10269_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10269_204 () (_ BitVec 64))
(declare-fun temp10269_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10269_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10269_207 () (_ BitVec 64))
(declare-fun temp10269_208 () (_ BitVec 64))
(declare-fun temp10269_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10269_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10269_211 () (_ BitVec 64))
(declare-fun temp10269_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10269_213 () (_ BitVec 64))
(declare-fun temp10269_214 () (_ BitVec 64))
(declare-fun temp10269_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10269_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10269_217 () (_ BitVec 64))
(declare-fun temp10269_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10269_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10269_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var5321104 () (_ BitVec 64))
(declare-fun var5583248 () (_ BitVec 64))
(declare-fun temp10269_221 () (_ BitVec 64))
(declare-fun var5910928 () (_ BitVec 64))
(declare-fun temp10269_222 () (_ BitVec 64))
(assert (= temp10269_1 #x0000000000000001))
(assert (= var77203 temp10269_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10269_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10269_2)))
(assert (= temp10269_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10269_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10269_4 #x0000000000000000))
(assert (= var210941 temp10269_4))
(assert (= temp10269_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10269_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10269_6 #x0000000000000000))
(assert (= var210986 temp10269_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10269_7 #x0000000000000000))
(assert (= temp10269_8 temp10269_7))
(assert (= temp10269_9 (select ARGNAME_padding_NAMEEND_VAL temp10269_8)))
(assert (= temp10269_10 #x0000000000000001))
(assert (= temp10269_11 temp10269_10))
(assert (= temp10269_12 (select ARGNAME_padding_NAMEEND_VAL temp10269_11)))
(assert (= temp10269_13 #x0000000000000002))
(assert (= temp10269_14 temp10269_13))
(assert (= temp10269_15 (select ARGNAME_padding_NAMEEND_VAL temp10269_14)))
(assert (= temp10269_16 #x0000000000000003))
(assert (= temp10269_17 temp10269_16))
(assert (= temp10269_18 (select ARGNAME_padding_NAMEEND_VAL temp10269_17)))
(assert (= temp10269_19 #x0000000000000004))
(assert (= temp10269_20 temp10269_19))
(assert (= temp10269_21 (select ARGNAME_padding_NAMEEND_VAL temp10269_20)))
(assert (= temp10269_22 #x0000000000000005))
(assert (= temp10269_23 temp10269_22))
(assert (= temp10269_24 (select ARGNAME_padding_NAMEEND_VAL temp10269_23)))
(assert (= temp10269_25 #x0000000000000000))
(assert (= temp10269_26 #x0000000000000000))
(assert (= temp10269_27 temp10269_26))
(assert (= temp10269_28 (select ARGNAME_padding_NAMEEND_VAL temp10269_27)))
(assert (= temp10269_29 #x0000000000000000))
(assert (= temp10269_30 #x0000000000000001))
(assert (= temp10269_31 temp10269_30))
(assert (= temp10269_32 (select ARGNAME_padding_NAMEEND_VAL temp10269_31)))
(assert (= temp10269_33 #x0000000000000000))
(assert (= temp10269_34 #x0000000000000002))
(assert (= temp10269_35 temp10269_34))
(assert (= temp10269_36 (select ARGNAME_padding_NAMEEND_VAL temp10269_35)))
(assert (= temp10269_37 #x0000000000000000))
(assert (= temp10269_38 #x0000000000000003))
(assert (= temp10269_39 temp10269_38))
(assert (= temp10269_40 (select ARGNAME_padding_NAMEEND_VAL temp10269_39)))
(assert (= temp10269_41 #x0000000000000000))
(assert (= temp10269_42 #x0000000000000004))
(assert (= temp10269_43 temp10269_42))
(assert (= temp10269_44 (select ARGNAME_padding_NAMEEND_VAL temp10269_43)))
(assert (= temp10269_45 #x0000000000000000))
(assert (= temp10269_46 #x0000000000000005))
(assert (= temp10269_47 temp10269_46))
(assert (= temp10269_48 (select ARGNAME_padding_NAMEEND_VAL temp10269_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10269_28 temp10269_25)
             (bvslt temp10269_32 temp10269_29)
             (bvslt temp10269_36 temp10269_33)
             (bvslt temp10269_40 temp10269_37)
             (bvslt temp10269_44 temp10269_41)
             (bvslt temp10269_48 temp10269_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10269_49 #x0000000000000000))
(assert (= var1191714 temp10269_49))
(assert (= temp10269_50 #x0000000000000000))
(assert (= temp10269_51 temp10269_50))
(assert (= temp10269_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10269_51)))
(assert (= temp10269_53 #x0000000000000001))
(assert (= temp10269_54 temp10269_53))
(assert (= temp10269_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10269_54)))
(assert (= temp10269_56 #x0000000000000002))
(assert (= temp10269_57 temp10269_56))
(assert (= temp10269_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10269_57)))
(assert (= temp10269_59 #x0000000000000003))
(assert (= temp10269_60 temp10269_59))
(assert (= temp10269_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10269_60)))
(assert (= temp10269_62 #x0000000000000004))
(assert (= temp10269_63 temp10269_62))
(assert (= temp10269_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10269_63)))
(assert (= temp10269_65 #x0000000000000005))
(assert (= temp10269_66 temp10269_65))
(assert (= temp10269_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10269_66)))
(assert (= temp10269_68 #x0000000000000000))
(assert (= temp10269_69 #x0000000000000000))
(assert (= temp10269_70 temp10269_69))
(assert (= temp10269_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10269_70)))
(assert (= temp10269_72 #x0000000000000000))
(assert (= temp10269_73 #x0000000000000001))
(assert (= temp10269_74 temp10269_73))
(assert (= temp10269_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10269_74)))
(assert (= temp10269_76 #x0000000000000000))
(assert (= temp10269_77 #x0000000000000002))
(assert (= temp10269_78 temp10269_77))
(assert (= temp10269_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10269_78)))
(assert (= temp10269_80 #x0000000000000000))
(assert (= temp10269_81 #x0000000000000003))
(assert (= temp10269_82 temp10269_81))
(assert (= temp10269_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10269_82)))
(assert (= temp10269_84 #x0000000000000000))
(assert (= temp10269_85 #x0000000000000004))
(assert (= temp10269_86 temp10269_85))
(assert (= temp10269_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10269_86)))
(assert (= temp10269_88 #x0000000000000000))
(assert (= temp10269_89 #x0000000000000005))
(assert (= temp10269_90 temp10269_89))
(assert (= temp10269_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10269_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10269_71 temp10269_68)
             (bvslt temp10269_75 temp10269_72)
             (bvslt temp10269_79 temp10269_76)
             (bvslt temp10269_83 temp10269_80)
             (bvslt temp10269_87 temp10269_84)
             (bvslt temp10269_91 temp10269_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10269_92 #x0000000000000000))
(assert (= var1191725 temp10269_92))
(assert (= temp10269_93 #x0000000000000000))
(assert (= temp10269_94 temp10269_93))
(assert (= temp10269_95 (select ARGNAME_stride_NAMEEND_VAL temp10269_94)))
(assert (= temp10269_96 #x0000000000000001))
(assert (= temp10269_97 temp10269_96))
(assert (= temp10269_98 (select ARGNAME_stride_NAMEEND_VAL temp10269_97)))
(assert (= temp10269_99 #x0000000000000002))
(assert (= temp10269_100 temp10269_99))
(assert (= temp10269_101 (select ARGNAME_stride_NAMEEND_VAL temp10269_100)))
(assert (= temp10269_102 #x0000000000000003))
(assert (= temp10269_103 temp10269_102))
(assert (= temp10269_104 (select ARGNAME_stride_NAMEEND_VAL temp10269_103)))
(assert (= temp10269_105 #x0000000000000004))
(assert (= temp10269_106 temp10269_105))
(assert (= temp10269_107 (select ARGNAME_stride_NAMEEND_VAL temp10269_106)))
(assert (= temp10269_108 #x0000000000000005))
(assert (= temp10269_109 temp10269_108))
(assert (= temp10269_110 (select ARGNAME_stride_NAMEEND_VAL temp10269_109)))
(assert (= temp10269_111 #x0000000000000000))
(assert (= temp10269_112 #x0000000000000000))
(assert (= temp10269_113 temp10269_112))
(assert (= temp10269_114 (select ARGNAME_stride_NAMEEND_VAL temp10269_113)))
(assert (= temp10269_115 #x0000000000000000))
(assert (= temp10269_116 #x0000000000000001))
(assert (= temp10269_117 temp10269_116))
(assert (= temp10269_118 (select ARGNAME_stride_NAMEEND_VAL temp10269_117)))
(assert (= temp10269_119 #x0000000000000000))
(assert (= temp10269_120 #x0000000000000002))
(assert (= temp10269_121 temp10269_120))
(assert (= temp10269_122 (select ARGNAME_stride_NAMEEND_VAL temp10269_121)))
(assert (= temp10269_123 #x0000000000000000))
(assert (= temp10269_124 #x0000000000000003))
(assert (= temp10269_125 temp10269_124))
(assert (= temp10269_126 (select ARGNAME_stride_NAMEEND_VAL temp10269_125)))
(assert (= temp10269_127 #x0000000000000000))
(assert (= temp10269_128 #x0000000000000004))
(assert (= temp10269_129 temp10269_128))
(assert (= temp10269_130 (select ARGNAME_stride_NAMEEND_VAL temp10269_129)))
(assert (= temp10269_131 #x0000000000000000))
(assert (= temp10269_132 #x0000000000000005))
(assert (= temp10269_133 temp10269_132))
(assert (= temp10269_134 (select ARGNAME_stride_NAMEEND_VAL temp10269_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10269_114 temp10269_111)
             (bvsle temp10269_118 temp10269_115)
             (bvsle temp10269_122 temp10269_119)
             (bvsle temp10269_126 temp10269_123)
             (bvsle temp10269_130 temp10269_127)
             (bvsle temp10269_134 temp10269_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10269_135 #x0000000000000000))
(assert (= var1191735 temp10269_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10269_136 #x0000000000000001))
(assert (= var1191747 temp10269_136))
(assert (= temp10269_137 #x0000000000000000))
(assert (= var1179826 temp10269_137))
(assert (= temp10269_138 #x0000000000000000))
(assert (= temp10269_139 temp10269_138))
(assert (= temp10269_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10269_139)))
(assert (= temp10269_141 #x0000000000000001))
(assert (= temp10269_142 temp10269_141))
(assert (= temp10269_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10269_142)))
(assert (= temp10269_144 #x0000000000000002))
(assert (= temp10269_145 temp10269_144))
(assert (= temp10269_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10269_145)))
(assert (= temp10269_147 #x0000000000000003))
(assert (= temp10269_148 temp10269_147))
(assert (= temp10269_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10269_148)))
(assert (= temp10269_150 #x0000000000000004))
(assert (= temp10269_151 temp10269_150))
(assert (= temp10269_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10269_151)))
(assert (= temp10269_153 #x0000000000000005))
(assert (= temp10269_154 temp10269_153))
(assert (= temp10269_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10269_154)))
(assert (= temp10269_157 var1179826))
(assert (= temp10269_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10269_157)))
(assert (= temp10269_156 temp10269_158))
(assert (= var1191780
   (ite (bvslt temp10269_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10269_159 #x0000000000000000))
(assert (= var1191780 temp10269_159))
(assert (= temp10269_160 #x0000000000000000))
(assert (= var1179826 temp10269_160))
(assert (= temp10269_162 var1179826))
(assert (= temp10269_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10269_162)))
(assert (= temp10269_161 temp10269_163))
(assert (= var1191802 (bvsmod temp10269_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10269_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10269_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10269_165 #x0000000000000001))
(assert (= var1191803 temp10269_165))
(assert (= temp10269_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10269_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10269_167 #x0000000000000001))
(assert (= var1191823 temp10269_167))
(assert (= temp10269_168 #x0000000000000001))
(assert (= var1180714 temp10269_168))
(assert (= temp10269_169 #x0000000000000000))
(assert (= temp10269_170 temp10269_169))
(assert (= temp10269_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10269_170)))
(assert (= temp10269_172 #x0000000000000001))
(assert (= temp10269_173 temp10269_172))
(assert (= temp10269_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10269_173)))
(assert (= temp10269_175 #x0000000000000002))
(assert (= temp10269_176 temp10269_175))
(assert (= temp10269_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10269_176)))
(assert (= temp10269_178 #x0000000000000003))
(assert (= temp10269_179 temp10269_178))
(assert (= temp10269_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10269_179)))
(assert (= temp10269_181 #x0000000000000004))
(assert (= temp10269_182 temp10269_181))
(assert (= temp10269_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10269_182)))
(assert (= temp10269_184 #x0000000000000005))
(assert (= temp10269_185 temp10269_184))
(assert (= temp10269_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10269_185)))
(assert (= temp10269_187 #x0000000000000000))
(assert (= temp10269_188
   (ite (bvslt var1180714 temp10269_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10269_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10269_188)))
(assert (= var1191831 temp10269_189))
(assert (bvslt (ite (bvslt var1180714 temp10269_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10269_190 #x0000000000000001))
(assert (= var1180714 temp10269_190))
(assert (= temp10269_192 var1180714))
(assert (= temp10269_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10269_192)))
(assert (= temp10269_191 temp10269_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10269_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10269_194 #x0000000000000001))
(assert (= var1191836 temp10269_194))
(assert (= temp10269_195 #x0000000000000000))
(assert (= var1179826 temp10269_195))
(assert (= temp10269_197 var1179826))
(assert (= temp10269_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10269_197)))
(assert (= temp10269_196 temp10269_198))
(assert (= temp10269_199 #x0000000000000002))
(assert (= var1586025 temp10269_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10269_200 #x0000000000000001))
(assert (= var1191993 temp10269_200))
(assert (= temp10269_201 #x0000000000000001))
(assert (= var2700303 temp10269_201))
(assert (= temp10269_202 #x0000000000000001))
(assert (= var2962447 temp10269_202))
(assert (= temp10269_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10269_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10269_204 #x0000000000000001))
(assert (= var211058 temp10269_204))
(assert (= temp10269_205 #x0000000000000001))
(assert (= var211188 temp10269_205))
(assert (= var3879401 var211188))
(assert (= temp10269_206 #x0000000000000000))
(assert (= var3866802 temp10269_206))
(assert (= temp10269_207 #x0000000000000000))
(assert (= temp10269_208
   (ite (bvslt var3866802 temp10269_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10269_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10269_208)))
(assert (= var3879420 temp10269_209))
(assert (bvslt (ite (bvslt var3866802 temp10269_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10269_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10269_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10269_211 #x0000000000000000))
(assert (= var3879421 temp10269_211))
(assert (= temp10269_212 #x0000000000000001))
(assert (= var3867690 temp10269_212))
(assert (= temp10269_213 #x0000000000000000))
(assert (= temp10269_214
   (ite (bvslt var3867690 temp10269_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10269_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10269_214)))
(assert (= var3879423 temp10269_215))
(assert (bvslt (ite (bvslt var3867690 temp10269_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10269_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10269_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10269_217 #x0000000000000001))
(assert (= var3879424 temp10269_217))
(assert (= temp10269_218 #x0000000000000000))
(assert (= var4079423 temp10269_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10269_219 #x0000000000000002))
(assert (= var4208259 temp10269_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10269_220 #x0000000000000000))
(assert (= var4273820 temp10269_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var5321104 var211201))
(assert (= var5583248 var211201))
(assert (= temp10269_221 #x0000000000000000))
(assert (= var5910928 temp10269_221))
(assert (= temp10269_222 #x0000000000000001))
(assert (= var211058 temp10269_222))
(model-add temp10269_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10269_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10269_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10269_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





