(declare-fun temp10948_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10948_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10948_3 () (_ BitVec 64))
(declare-fun temp10948_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10948_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10948_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10948_7 () (_ BitVec 64))
(declare-fun temp10948_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10948_9 () (_ BitVec 64))
(declare-fun temp10948_10 () (_ BitVec 64))
(declare-fun temp10948_11 () (_ BitVec 64))
(declare-fun temp10948_12 () (_ BitVec 64))
(declare-fun temp10948_13 () (_ BitVec 64))
(declare-fun temp10948_14 () (_ BitVec 64))
(declare-fun temp10948_15 () (_ BitVec 64))
(declare-fun temp10948_16 () (_ BitVec 64))
(declare-fun temp10948_17 () (_ BitVec 64))
(declare-fun temp10948_18 () (_ BitVec 64))
(declare-fun temp10948_19 () (_ BitVec 64))
(declare-fun temp10948_20 () (_ BitVec 64))
(declare-fun temp10948_21 () (_ BitVec 64))
(declare-fun temp10948_22 () (_ BitVec 64))
(declare-fun temp10948_23 () (_ BitVec 64))
(declare-fun temp10948_24 () (_ BitVec 64))
(declare-fun temp10948_25 () (_ BitVec 64))
(declare-fun temp10948_26 () (_ BitVec 64))
(declare-fun temp10948_27 () (_ BitVec 64))
(declare-fun temp10948_28 () (_ BitVec 64))
(declare-fun temp10948_29 () (_ BitVec 64))
(declare-fun temp10948_30 () (_ BitVec 64))
(declare-fun temp10948_31 () (_ BitVec 64))
(declare-fun temp10948_32 () (_ BitVec 64))
(declare-fun temp10948_33 () (_ BitVec 64))
(declare-fun temp10948_34 () (_ BitVec 64))
(declare-fun temp10948_35 () (_ BitVec 64))
(declare-fun temp10948_36 () (_ BitVec 64))
(declare-fun temp10948_37 () (_ BitVec 64))
(declare-fun temp10948_38 () (_ BitVec 64))
(declare-fun temp10948_39 () (_ BitVec 64))
(declare-fun temp10948_40 () (_ BitVec 64))
(declare-fun temp10948_41 () (_ BitVec 64))
(declare-fun temp10948_42 () (_ BitVec 64))
(declare-fun temp10948_43 () (_ BitVec 64))
(declare-fun temp10948_44 () (_ BitVec 64))
(declare-fun temp10948_45 () (_ BitVec 64))
(declare-fun temp10948_46 () (_ BitVec 64))
(declare-fun temp10948_47 () (_ BitVec 64))
(declare-fun temp10948_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10948_49 () (_ BitVec 64))
(declare-fun temp10948_50 () (_ BitVec 64))
(declare-fun temp10948_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10948_52 () (_ BitVec 64))
(declare-fun temp10948_53 () (_ BitVec 64))
(declare-fun temp10948_54 () (_ BitVec 64))
(declare-fun temp10948_55 () (_ BitVec 64))
(declare-fun temp10948_56 () (_ BitVec 64))
(declare-fun temp10948_57 () (_ BitVec 64))
(declare-fun temp10948_58 () (_ BitVec 64))
(declare-fun temp10948_59 () (_ BitVec 64))
(declare-fun temp10948_60 () (_ BitVec 64))
(declare-fun temp10948_61 () (_ BitVec 64))
(declare-fun temp10948_62 () (_ BitVec 64))
(declare-fun temp10948_63 () (_ BitVec 64))
(declare-fun temp10948_64 () (_ BitVec 64))
(declare-fun temp10948_65 () (_ BitVec 64))
(declare-fun temp10948_66 () (_ BitVec 64))
(declare-fun temp10948_67 () (_ BitVec 64))
(declare-fun temp10948_68 () (_ BitVec 64))
(declare-fun temp10948_69 () (_ BitVec 64))
(declare-fun temp10948_70 () (_ BitVec 64))
(declare-fun temp10948_71 () (_ BitVec 64))
(declare-fun temp10948_72 () (_ BitVec 64))
(declare-fun temp10948_73 () (_ BitVec 64))
(declare-fun temp10948_74 () (_ BitVec 64))
(declare-fun temp10948_75 () (_ BitVec 64))
(declare-fun temp10948_76 () (_ BitVec 64))
(declare-fun temp10948_77 () (_ BitVec 64))
(declare-fun temp10948_78 () (_ BitVec 64))
(declare-fun temp10948_79 () (_ BitVec 64))
(declare-fun temp10948_80 () (_ BitVec 64))
(declare-fun temp10948_81 () (_ BitVec 64))
(declare-fun temp10948_82 () (_ BitVec 64))
(declare-fun temp10948_83 () (_ BitVec 64))
(declare-fun temp10948_84 () (_ BitVec 64))
(declare-fun temp10948_85 () (_ BitVec 64))
(declare-fun temp10948_86 () (_ BitVec 64))
(declare-fun temp10948_87 () (_ BitVec 64))
(declare-fun temp10948_88 () (_ BitVec 64))
(declare-fun temp10948_89 () (_ BitVec 64))
(declare-fun temp10948_90 () (_ BitVec 64))
(declare-fun temp10948_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10948_92 () (_ BitVec 64))
(declare-fun temp10948_93 () (_ BitVec 64))
(declare-fun temp10948_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10948_95 () (_ BitVec 64))
(declare-fun temp10948_96 () (_ BitVec 64))
(declare-fun temp10948_97 () (_ BitVec 64))
(declare-fun temp10948_98 () (_ BitVec 64))
(declare-fun temp10948_99 () (_ BitVec 64))
(declare-fun temp10948_100 () (_ BitVec 64))
(declare-fun temp10948_101 () (_ BitVec 64))
(declare-fun temp10948_102 () (_ BitVec 64))
(declare-fun temp10948_103 () (_ BitVec 64))
(declare-fun temp10948_104 () (_ BitVec 64))
(declare-fun temp10948_105 () (_ BitVec 64))
(declare-fun temp10948_106 () (_ BitVec 64))
(declare-fun temp10948_107 () (_ BitVec 64))
(declare-fun temp10948_108 () (_ BitVec 64))
(declare-fun temp10948_109 () (_ BitVec 64))
(declare-fun temp10948_110 () (_ BitVec 64))
(declare-fun temp10948_111 () (_ BitVec 64))
(declare-fun temp10948_112 () (_ BitVec 64))
(declare-fun temp10948_113 () (_ BitVec 64))
(declare-fun temp10948_114 () (_ BitVec 64))
(declare-fun temp10948_115 () (_ BitVec 64))
(declare-fun temp10948_116 () (_ BitVec 64))
(declare-fun temp10948_117 () (_ BitVec 64))
(declare-fun temp10948_118 () (_ BitVec 64))
(declare-fun temp10948_119 () (_ BitVec 64))
(declare-fun temp10948_120 () (_ BitVec 64))
(declare-fun temp10948_121 () (_ BitVec 64))
(declare-fun temp10948_122 () (_ BitVec 64))
(declare-fun temp10948_123 () (_ BitVec 64))
(declare-fun temp10948_124 () (_ BitVec 64))
(declare-fun temp10948_125 () (_ BitVec 64))
(declare-fun temp10948_126 () (_ BitVec 64))
(declare-fun temp10948_127 () (_ BitVec 64))
(declare-fun temp10948_128 () (_ BitVec 64))
(declare-fun temp10948_129 () (_ BitVec 64))
(declare-fun temp10948_130 () (_ BitVec 64))
(declare-fun temp10948_131 () (_ BitVec 64))
(declare-fun temp10948_132 () (_ BitVec 64))
(declare-fun temp10948_133 () (_ BitVec 64))
(declare-fun temp10948_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10948_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10948_136 () (_ BitVec 64))
(declare-fun temp10948_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10948_138 () (_ BitVec 64))
(declare-fun temp10948_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10948_140 () (_ BitVec 64))
(declare-fun temp10948_141 () (_ BitVec 64))
(declare-fun temp10948_142 () (_ BitVec 64))
(declare-fun temp10948_143 () (_ BitVec 64))
(declare-fun temp10948_144 () (_ BitVec 64))
(declare-fun temp10948_145 () (_ BitVec 64))
(declare-fun temp10948_146 () (_ BitVec 64))
(declare-fun temp10948_147 () (_ BitVec 64))
(declare-fun temp10948_148 () (_ BitVec 64))
(declare-fun temp10948_149 () (_ BitVec 64))
(declare-fun temp10948_150 () (_ BitVec 64))
(declare-fun temp10948_151 () (_ BitVec 64))
(declare-fun temp10948_152 () (_ BitVec 64))
(declare-fun temp10948_153 () (_ BitVec 64))
(declare-fun temp10948_154 () (_ BitVec 64))
(declare-fun temp10948_155 () (_ BitVec 64))
(declare-fun temp10948_157 () (_ BitVec 64))
(declare-fun temp10948_158 () (_ BitVec 64))
(declare-fun temp10948_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10948_159 () (_ BitVec 64))
(declare-fun temp10948_160 () (_ BitVec 64))
(declare-fun temp10948_162 () (_ BitVec 64))
(declare-fun temp10948_163 () (_ BitVec 64))
(declare-fun temp10948_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10948_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10948_165 () (_ BitVec 64))
(declare-fun temp10948_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10948_167 () (_ BitVec 64))
(declare-fun temp10948_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10948_169 () (_ BitVec 64))
(declare-fun temp10948_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10948_171 () (_ BitVec 64))
(declare-fun temp10948_172 () (_ BitVec 64))
(declare-fun temp10948_173 () (_ BitVec 64))
(declare-fun temp10948_174 () (_ BitVec 64))
(declare-fun temp10948_175 () (_ BitVec 64))
(declare-fun temp10948_176 () (_ BitVec 64))
(declare-fun temp10948_177 () (_ BitVec 64))
(declare-fun temp10948_178 () (_ BitVec 64))
(declare-fun temp10948_179 () (_ BitVec 64))
(declare-fun temp10948_180 () (_ BitVec 64))
(declare-fun temp10948_181 () (_ BitVec 64))
(declare-fun temp10948_182 () (_ BitVec 64))
(declare-fun temp10948_183 () (_ BitVec 64))
(declare-fun temp10948_184 () (_ BitVec 64))
(declare-fun temp10948_185 () (_ BitVec 64))
(declare-fun temp10948_186 () (_ BitVec 64))
(declare-fun temp10948_187 () (_ BitVec 64))
(declare-fun temp10948_188 () (_ BitVec 64))
(declare-fun temp10948_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10948_190 () (_ BitVec 64))
(declare-fun temp10948_192 () (_ BitVec 64))
(declare-fun temp10948_193 () (_ BitVec 64))
(declare-fun temp10948_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10948_194 () (_ BitVec 64))
(declare-fun temp10948_195 () (_ BitVec 64))
(declare-fun temp10948_197 () (_ BitVec 64))
(declare-fun temp10948_198 () (_ BitVec 64))
(declare-fun temp10948_196 () (_ BitVec 64))
(declare-fun temp10948_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10948_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10948_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10948_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10948_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10948_204 () (_ BitVec 64))
(declare-fun temp10948_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10948_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10948_207 () (_ BitVec 64))
(declare-fun temp10948_208 () (_ BitVec 64))
(declare-fun temp10948_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10948_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10948_211 () (_ BitVec 64))
(declare-fun temp10948_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10948_213 () (_ BitVec 64))
(declare-fun temp10948_214 () (_ BitVec 64))
(declare-fun temp10948_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10948_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10948_217 () (_ BitVec 64))
(declare-fun temp10948_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10948_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10948_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var5058960 () (_ BitVec 64))
(declare-fun var5321104 () (_ BitVec 64))
(declare-fun temp10948_221 () (_ BitVec 64))
(declare-fun var5648784 () (_ BitVec 64))
(declare-fun temp10948_222 () (_ BitVec 64))
(declare-fun temp10948_223 () (_ BitVec 64))
(declare-fun var7090964 () (_ BitVec 64))
(declare-fun var7090931 () (_ BitVec 64))
(declare-fun var6959495 () (_ BitVec 64))
(declare-fun var6959491 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp10948_224 () (_ BitVec 64))
(assert (= temp10948_1 #x0000000000000001))
(assert (= var77203 temp10948_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10948_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10948_2)))
(assert (= temp10948_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10948_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10948_4 #x0000000000000000))
(assert (= var210941 temp10948_4))
(assert (= temp10948_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10948_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10948_6 #x0000000000000000))
(assert (= var210986 temp10948_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10948_7 #x0000000000000000))
(assert (= temp10948_8 temp10948_7))
(assert (= temp10948_9 (select ARGNAME_padding_NAMEEND_VAL temp10948_8)))
(assert (= temp10948_10 #x0000000000000001))
(assert (= temp10948_11 temp10948_10))
(assert (= temp10948_12 (select ARGNAME_padding_NAMEEND_VAL temp10948_11)))
(assert (= temp10948_13 #x0000000000000002))
(assert (= temp10948_14 temp10948_13))
(assert (= temp10948_15 (select ARGNAME_padding_NAMEEND_VAL temp10948_14)))
(assert (= temp10948_16 #x0000000000000003))
(assert (= temp10948_17 temp10948_16))
(assert (= temp10948_18 (select ARGNAME_padding_NAMEEND_VAL temp10948_17)))
(assert (= temp10948_19 #x0000000000000004))
(assert (= temp10948_20 temp10948_19))
(assert (= temp10948_21 (select ARGNAME_padding_NAMEEND_VAL temp10948_20)))
(assert (= temp10948_22 #x0000000000000005))
(assert (= temp10948_23 temp10948_22))
(assert (= temp10948_24 (select ARGNAME_padding_NAMEEND_VAL temp10948_23)))
(assert (= temp10948_25 #x0000000000000000))
(assert (= temp10948_26 #x0000000000000000))
(assert (= temp10948_27 temp10948_26))
(assert (= temp10948_28 (select ARGNAME_padding_NAMEEND_VAL temp10948_27)))
(assert (= temp10948_29 #x0000000000000000))
(assert (= temp10948_30 #x0000000000000001))
(assert (= temp10948_31 temp10948_30))
(assert (= temp10948_32 (select ARGNAME_padding_NAMEEND_VAL temp10948_31)))
(assert (= temp10948_33 #x0000000000000000))
(assert (= temp10948_34 #x0000000000000002))
(assert (= temp10948_35 temp10948_34))
(assert (= temp10948_36 (select ARGNAME_padding_NAMEEND_VAL temp10948_35)))
(assert (= temp10948_37 #x0000000000000000))
(assert (= temp10948_38 #x0000000000000003))
(assert (= temp10948_39 temp10948_38))
(assert (= temp10948_40 (select ARGNAME_padding_NAMEEND_VAL temp10948_39)))
(assert (= temp10948_41 #x0000000000000000))
(assert (= temp10948_42 #x0000000000000004))
(assert (= temp10948_43 temp10948_42))
(assert (= temp10948_44 (select ARGNAME_padding_NAMEEND_VAL temp10948_43)))
(assert (= temp10948_45 #x0000000000000000))
(assert (= temp10948_46 #x0000000000000005))
(assert (= temp10948_47 temp10948_46))
(assert (= temp10948_48 (select ARGNAME_padding_NAMEEND_VAL temp10948_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10948_28 temp10948_25)
             (bvslt temp10948_32 temp10948_29)
             (bvslt temp10948_36 temp10948_33)
             (bvslt temp10948_40 temp10948_37)
             (bvslt temp10948_44 temp10948_41)
             (bvslt temp10948_48 temp10948_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10948_49 #x0000000000000000))
(assert (= var1191714 temp10948_49))
(assert (= temp10948_50 #x0000000000000000))
(assert (= temp10948_51 temp10948_50))
(assert (= temp10948_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10948_51)))
(assert (= temp10948_53 #x0000000000000001))
(assert (= temp10948_54 temp10948_53))
(assert (= temp10948_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10948_54)))
(assert (= temp10948_56 #x0000000000000002))
(assert (= temp10948_57 temp10948_56))
(assert (= temp10948_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10948_57)))
(assert (= temp10948_59 #x0000000000000003))
(assert (= temp10948_60 temp10948_59))
(assert (= temp10948_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10948_60)))
(assert (= temp10948_62 #x0000000000000004))
(assert (= temp10948_63 temp10948_62))
(assert (= temp10948_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10948_63)))
(assert (= temp10948_65 #x0000000000000005))
(assert (= temp10948_66 temp10948_65))
(assert (= temp10948_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10948_66)))
(assert (= temp10948_68 #x0000000000000000))
(assert (= temp10948_69 #x0000000000000000))
(assert (= temp10948_70 temp10948_69))
(assert (= temp10948_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10948_70)))
(assert (= temp10948_72 #x0000000000000000))
(assert (= temp10948_73 #x0000000000000001))
(assert (= temp10948_74 temp10948_73))
(assert (= temp10948_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10948_74)))
(assert (= temp10948_76 #x0000000000000000))
(assert (= temp10948_77 #x0000000000000002))
(assert (= temp10948_78 temp10948_77))
(assert (= temp10948_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10948_78)))
(assert (= temp10948_80 #x0000000000000000))
(assert (= temp10948_81 #x0000000000000003))
(assert (= temp10948_82 temp10948_81))
(assert (= temp10948_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10948_82)))
(assert (= temp10948_84 #x0000000000000000))
(assert (= temp10948_85 #x0000000000000004))
(assert (= temp10948_86 temp10948_85))
(assert (= temp10948_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10948_86)))
(assert (= temp10948_88 #x0000000000000000))
(assert (= temp10948_89 #x0000000000000005))
(assert (= temp10948_90 temp10948_89))
(assert (= temp10948_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10948_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10948_71 temp10948_68)
             (bvslt temp10948_75 temp10948_72)
             (bvslt temp10948_79 temp10948_76)
             (bvslt temp10948_83 temp10948_80)
             (bvslt temp10948_87 temp10948_84)
             (bvslt temp10948_91 temp10948_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10948_92 #x0000000000000000))
(assert (= var1191725 temp10948_92))
(assert (= temp10948_93 #x0000000000000000))
(assert (= temp10948_94 temp10948_93))
(assert (= temp10948_95 (select ARGNAME_stride_NAMEEND_VAL temp10948_94)))
(assert (= temp10948_96 #x0000000000000001))
(assert (= temp10948_97 temp10948_96))
(assert (= temp10948_98 (select ARGNAME_stride_NAMEEND_VAL temp10948_97)))
(assert (= temp10948_99 #x0000000000000002))
(assert (= temp10948_100 temp10948_99))
(assert (= temp10948_101 (select ARGNAME_stride_NAMEEND_VAL temp10948_100)))
(assert (= temp10948_102 #x0000000000000003))
(assert (= temp10948_103 temp10948_102))
(assert (= temp10948_104 (select ARGNAME_stride_NAMEEND_VAL temp10948_103)))
(assert (= temp10948_105 #x0000000000000004))
(assert (= temp10948_106 temp10948_105))
(assert (= temp10948_107 (select ARGNAME_stride_NAMEEND_VAL temp10948_106)))
(assert (= temp10948_108 #x0000000000000005))
(assert (= temp10948_109 temp10948_108))
(assert (= temp10948_110 (select ARGNAME_stride_NAMEEND_VAL temp10948_109)))
(assert (= temp10948_111 #x0000000000000000))
(assert (= temp10948_112 #x0000000000000000))
(assert (= temp10948_113 temp10948_112))
(assert (= temp10948_114 (select ARGNAME_stride_NAMEEND_VAL temp10948_113)))
(assert (= temp10948_115 #x0000000000000000))
(assert (= temp10948_116 #x0000000000000001))
(assert (= temp10948_117 temp10948_116))
(assert (= temp10948_118 (select ARGNAME_stride_NAMEEND_VAL temp10948_117)))
(assert (= temp10948_119 #x0000000000000000))
(assert (= temp10948_120 #x0000000000000002))
(assert (= temp10948_121 temp10948_120))
(assert (= temp10948_122 (select ARGNAME_stride_NAMEEND_VAL temp10948_121)))
(assert (= temp10948_123 #x0000000000000000))
(assert (= temp10948_124 #x0000000000000003))
(assert (= temp10948_125 temp10948_124))
(assert (= temp10948_126 (select ARGNAME_stride_NAMEEND_VAL temp10948_125)))
(assert (= temp10948_127 #x0000000000000000))
(assert (= temp10948_128 #x0000000000000004))
(assert (= temp10948_129 temp10948_128))
(assert (= temp10948_130 (select ARGNAME_stride_NAMEEND_VAL temp10948_129)))
(assert (= temp10948_131 #x0000000000000000))
(assert (= temp10948_132 #x0000000000000005))
(assert (= temp10948_133 temp10948_132))
(assert (= temp10948_134 (select ARGNAME_stride_NAMEEND_VAL temp10948_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10948_114 temp10948_111)
             (bvsle temp10948_118 temp10948_115)
             (bvsle temp10948_122 temp10948_119)
             (bvsle temp10948_126 temp10948_123)
             (bvsle temp10948_130 temp10948_127)
             (bvsle temp10948_134 temp10948_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10948_135 #x0000000000000000))
(assert (= var1191735 temp10948_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10948_136 #x0000000000000001))
(assert (= var1191747 temp10948_136))
(assert (= temp10948_137 #x0000000000000000))
(assert (= var1179826 temp10948_137))
(assert (= temp10948_138 #x0000000000000000))
(assert (= temp10948_139 temp10948_138))
(assert (= temp10948_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10948_139)))
(assert (= temp10948_141 #x0000000000000001))
(assert (= temp10948_142 temp10948_141))
(assert (= temp10948_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10948_142)))
(assert (= temp10948_144 #x0000000000000002))
(assert (= temp10948_145 temp10948_144))
(assert (= temp10948_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10948_145)))
(assert (= temp10948_147 #x0000000000000003))
(assert (= temp10948_148 temp10948_147))
(assert (= temp10948_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10948_148)))
(assert (= temp10948_150 #x0000000000000004))
(assert (= temp10948_151 temp10948_150))
(assert (= temp10948_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10948_151)))
(assert (= temp10948_153 #x0000000000000005))
(assert (= temp10948_154 temp10948_153))
(assert (= temp10948_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10948_154)))
(assert (= temp10948_157 var1179826))
(assert (= temp10948_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10948_157)))
(assert (= temp10948_156 temp10948_158))
(assert (= var1191780
   (ite (bvslt temp10948_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10948_159 #x0000000000000000))
(assert (= var1191780 temp10948_159))
(assert (= temp10948_160 #x0000000000000000))
(assert (= var1179826 temp10948_160))
(assert (= temp10948_162 var1179826))
(assert (= temp10948_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10948_162)))
(assert (= temp10948_161 temp10948_163))
(assert (= var1191802 (bvsmod temp10948_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10948_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10948_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10948_165 #x0000000000000001))
(assert (= var1191803 temp10948_165))
(assert (= temp10948_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10948_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10948_167 #x0000000000000001))
(assert (= var1191823 temp10948_167))
(assert (= temp10948_168 #x0000000000000001))
(assert (= var1180714 temp10948_168))
(assert (= temp10948_169 #x0000000000000000))
(assert (= temp10948_170 temp10948_169))
(assert (= temp10948_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10948_170)))
(assert (= temp10948_172 #x0000000000000001))
(assert (= temp10948_173 temp10948_172))
(assert (= temp10948_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10948_173)))
(assert (= temp10948_175 #x0000000000000002))
(assert (= temp10948_176 temp10948_175))
(assert (= temp10948_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10948_176)))
(assert (= temp10948_178 #x0000000000000003))
(assert (= temp10948_179 temp10948_178))
(assert (= temp10948_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10948_179)))
(assert (= temp10948_181 #x0000000000000004))
(assert (= temp10948_182 temp10948_181))
(assert (= temp10948_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10948_182)))
(assert (= temp10948_184 #x0000000000000005))
(assert (= temp10948_185 temp10948_184))
(assert (= temp10948_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10948_185)))
(assert (= temp10948_187 #x0000000000000000))
(assert (= temp10948_188
   (ite (bvslt var1180714 temp10948_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10948_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10948_188)))
(assert (= var1191831 temp10948_189))
(assert (bvslt (ite (bvslt var1180714 temp10948_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10948_190 #x0000000000000001))
(assert (= var1180714 temp10948_190))
(assert (= temp10948_192 var1180714))
(assert (= temp10948_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10948_192)))
(assert (= temp10948_191 temp10948_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10948_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10948_194 #x0000000000000001))
(assert (= var1191836 temp10948_194))
(assert (= temp10948_195 #x0000000000000000))
(assert (= var1179826 temp10948_195))
(assert (= temp10948_197 var1179826))
(assert (= temp10948_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10948_197)))
(assert (= temp10948_196 temp10948_198))
(assert (= temp10948_199 #x0000000000000002))
(assert (= var1586025 temp10948_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10948_200 #x0000000000000001))
(assert (= var1191993 temp10948_200))
(assert (= temp10948_201 #x0000000000000001))
(assert (= var2700303 temp10948_201))
(assert (= temp10948_202 #x0000000000000001))
(assert (= var2962447 temp10948_202))
(assert (= temp10948_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10948_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10948_204 #x0000000000000001))
(assert (= var211058 temp10948_204))
(assert (= temp10948_205 #x0000000000000001))
(assert (= var211188 temp10948_205))
(assert (= var3879401 var211188))
(assert (= temp10948_206 #x0000000000000000))
(assert (= var3866802 temp10948_206))
(assert (= temp10948_207 #x0000000000000000))
(assert (= temp10948_208
   (ite (bvslt var3866802 temp10948_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10948_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10948_208)))
(assert (= var3879420 temp10948_209))
(assert (bvslt (ite (bvslt var3866802 temp10948_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10948_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10948_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10948_211 #x0000000000000000))
(assert (= var3879421 temp10948_211))
(assert (= temp10948_212 #x0000000000000001))
(assert (= var3867690 temp10948_212))
(assert (= temp10948_213 #x0000000000000000))
(assert (= temp10948_214
   (ite (bvslt var3867690 temp10948_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10948_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10948_214)))
(assert (= var3879423 temp10948_215))
(assert (bvslt (ite (bvslt var3867690 temp10948_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10948_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10948_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10948_217 #x0000000000000001))
(assert (= var3879424 temp10948_217))
(assert (= temp10948_218 #x0000000000000000))
(assert (= var4133117 temp10948_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10948_219 #x0000000000000002))
(assert (= var4339331 temp10948_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10948_220 #x0000000000000000))
(assert (= var4404892 temp10948_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var5058960 var211201))
(assert (= var5321104 var211201))
(assert (= temp10948_221 #x0000000000000000))
(assert (= var5648784 temp10948_221))
(assert (= temp10948_222 #x0000000000000001))
(assert (= var211058 temp10948_222))
(assert (= temp10948_223 #x0000000000000000))
(assert (= var7090964 temp10948_223))
(assert (= var7090931 var7090964))
(assert (= var6959495 var7090931))
(assert (= var6959491 var6959495))
(assert (= var212669 var6959491))
(assert (= temp10948_224 #x0000000000000000))
(assert (= var212669 temp10948_224))
(model-add temp10948_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10948_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10948_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10948_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





