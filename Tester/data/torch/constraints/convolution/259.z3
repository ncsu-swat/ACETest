(declare-fun temp345_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp345_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp345_3 () (_ BitVec 64))
(declare-fun temp345_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp345_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp345_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp345_7 () (_ BitVec 64))
(declare-fun temp345_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp345_9 () (_ BitVec 64))
(declare-fun temp345_10 () (_ BitVec 64))
(declare-fun temp345_11 () (_ BitVec 64))
(declare-fun temp345_12 () (_ BitVec 64))
(declare-fun temp345_13 () (_ BitVec 64))
(declare-fun temp345_14 () (_ BitVec 64))
(declare-fun temp345_15 () (_ BitVec 64))
(declare-fun temp345_16 () (_ BitVec 64))
(declare-fun temp345_17 () (_ BitVec 64))
(declare-fun temp345_18 () (_ BitVec 64))
(declare-fun temp345_19 () (_ BitVec 64))
(declare-fun temp345_20 () (_ BitVec 64))
(declare-fun temp345_21 () (_ BitVec 64))
(declare-fun temp345_22 () (_ BitVec 64))
(declare-fun temp345_23 () (_ BitVec 64))
(declare-fun temp345_24 () (_ BitVec 64))
(declare-fun temp345_25 () (_ BitVec 64))
(declare-fun temp345_26 () (_ BitVec 64))
(declare-fun temp345_27 () (_ BitVec 64))
(declare-fun temp345_28 () (_ BitVec 64))
(declare-fun temp345_29 () (_ BitVec 64))
(declare-fun temp345_30 () (_ BitVec 64))
(declare-fun temp345_31 () (_ BitVec 64))
(declare-fun temp345_32 () (_ BitVec 64))
(declare-fun temp345_33 () (_ BitVec 64))
(declare-fun temp345_34 () (_ BitVec 64))
(declare-fun temp345_35 () (_ BitVec 64))
(declare-fun temp345_36 () (_ BitVec 64))
(declare-fun temp345_37 () (_ BitVec 64))
(declare-fun temp345_38 () (_ BitVec 64))
(declare-fun temp345_39 () (_ BitVec 64))
(declare-fun temp345_40 () (_ BitVec 64))
(declare-fun temp345_41 () (_ BitVec 64))
(declare-fun temp345_42 () (_ BitVec 64))
(declare-fun temp345_43 () (_ BitVec 64))
(declare-fun temp345_44 () (_ BitVec 64))
(declare-fun temp345_45 () (_ BitVec 64))
(declare-fun temp345_46 () (_ BitVec 64))
(declare-fun temp345_47 () (_ BitVec 64))
(declare-fun temp345_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp345_49 () (_ BitVec 64))
(declare-fun temp345_50 () (_ BitVec 64))
(declare-fun temp345_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp345_52 () (_ BitVec 64))
(declare-fun temp345_53 () (_ BitVec 64))
(declare-fun temp345_54 () (_ BitVec 64))
(declare-fun temp345_55 () (_ BitVec 64))
(declare-fun temp345_56 () (_ BitVec 64))
(declare-fun temp345_57 () (_ BitVec 64))
(declare-fun temp345_58 () (_ BitVec 64))
(declare-fun temp345_59 () (_ BitVec 64))
(declare-fun temp345_60 () (_ BitVec 64))
(declare-fun temp345_61 () (_ BitVec 64))
(declare-fun temp345_62 () (_ BitVec 64))
(declare-fun temp345_63 () (_ BitVec 64))
(declare-fun temp345_64 () (_ BitVec 64))
(declare-fun temp345_65 () (_ BitVec 64))
(declare-fun temp345_66 () (_ BitVec 64))
(declare-fun temp345_67 () (_ BitVec 64))
(declare-fun temp345_68 () (_ BitVec 64))
(declare-fun temp345_69 () (_ BitVec 64))
(declare-fun temp345_70 () (_ BitVec 64))
(declare-fun temp345_71 () (_ BitVec 64))
(declare-fun temp345_72 () (_ BitVec 64))
(declare-fun temp345_73 () (_ BitVec 64))
(declare-fun temp345_74 () (_ BitVec 64))
(declare-fun temp345_75 () (_ BitVec 64))
(declare-fun temp345_76 () (_ BitVec 64))
(declare-fun temp345_77 () (_ BitVec 64))
(declare-fun temp345_78 () (_ BitVec 64))
(declare-fun temp345_79 () (_ BitVec 64))
(declare-fun temp345_80 () (_ BitVec 64))
(declare-fun temp345_81 () (_ BitVec 64))
(declare-fun temp345_82 () (_ BitVec 64))
(declare-fun temp345_83 () (_ BitVec 64))
(declare-fun temp345_84 () (_ BitVec 64))
(declare-fun temp345_85 () (_ BitVec 64))
(declare-fun temp345_86 () (_ BitVec 64))
(declare-fun temp345_87 () (_ BitVec 64))
(declare-fun temp345_88 () (_ BitVec 64))
(declare-fun temp345_89 () (_ BitVec 64))
(declare-fun temp345_90 () (_ BitVec 64))
(declare-fun temp345_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp345_92 () (_ BitVec 64))
(declare-fun temp345_93 () (_ BitVec 64))
(declare-fun temp345_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp345_95 () (_ BitVec 64))
(declare-fun temp345_96 () (_ BitVec 64))
(declare-fun temp345_97 () (_ BitVec 64))
(declare-fun temp345_98 () (_ BitVec 64))
(declare-fun temp345_99 () (_ BitVec 64))
(declare-fun temp345_100 () (_ BitVec 64))
(declare-fun temp345_101 () (_ BitVec 64))
(declare-fun temp345_102 () (_ BitVec 64))
(declare-fun temp345_103 () (_ BitVec 64))
(declare-fun temp345_104 () (_ BitVec 64))
(declare-fun temp345_105 () (_ BitVec 64))
(declare-fun temp345_106 () (_ BitVec 64))
(declare-fun temp345_107 () (_ BitVec 64))
(declare-fun temp345_108 () (_ BitVec 64))
(declare-fun temp345_109 () (_ BitVec 64))
(declare-fun temp345_110 () (_ BitVec 64))
(declare-fun temp345_111 () (_ BitVec 64))
(declare-fun temp345_112 () (_ BitVec 64))
(declare-fun temp345_113 () (_ BitVec 64))
(declare-fun temp345_114 () (_ BitVec 64))
(declare-fun temp345_115 () (_ BitVec 64))
(declare-fun temp345_116 () (_ BitVec 64))
(declare-fun temp345_117 () (_ BitVec 64))
(declare-fun temp345_118 () (_ BitVec 64))
(declare-fun temp345_119 () (_ BitVec 64))
(declare-fun temp345_120 () (_ BitVec 64))
(declare-fun temp345_121 () (_ BitVec 64))
(declare-fun temp345_122 () (_ BitVec 64))
(declare-fun temp345_123 () (_ BitVec 64))
(declare-fun temp345_124 () (_ BitVec 64))
(declare-fun temp345_125 () (_ BitVec 64))
(declare-fun temp345_126 () (_ BitVec 64))
(declare-fun temp345_127 () (_ BitVec 64))
(declare-fun temp345_128 () (_ BitVec 64))
(declare-fun temp345_129 () (_ BitVec 64))
(declare-fun temp345_130 () (_ BitVec 64))
(declare-fun temp345_131 () (_ BitVec 64))
(declare-fun temp345_132 () (_ BitVec 64))
(declare-fun temp345_133 () (_ BitVec 64))
(declare-fun temp345_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp345_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp345_136 () (_ BitVec 64))
(declare-fun temp345_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp345_138 () (_ BitVec 64))
(declare-fun temp345_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp345_140 () (_ BitVec 64))
(declare-fun temp345_141 () (_ BitVec 64))
(declare-fun temp345_142 () (_ BitVec 64))
(declare-fun temp345_143 () (_ BitVec 64))
(declare-fun temp345_144 () (_ BitVec 64))
(declare-fun temp345_145 () (_ BitVec 64))
(declare-fun temp345_146 () (_ BitVec 64))
(declare-fun temp345_147 () (_ BitVec 64))
(declare-fun temp345_148 () (_ BitVec 64))
(declare-fun temp345_149 () (_ BitVec 64))
(declare-fun temp345_150 () (_ BitVec 64))
(declare-fun temp345_151 () (_ BitVec 64))
(declare-fun temp345_152 () (_ BitVec 64))
(declare-fun temp345_153 () (_ BitVec 64))
(declare-fun temp345_154 () (_ BitVec 64))
(declare-fun temp345_155 () (_ BitVec 64))
(declare-fun temp345_157 () (_ BitVec 64))
(declare-fun temp345_158 () (_ BitVec 64))
(declare-fun temp345_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp345_159 () (_ BitVec 64))
(declare-fun temp345_160 () (_ BitVec 64))
(declare-fun temp345_162 () (_ BitVec 64))
(declare-fun temp345_163 () (_ BitVec 64))
(declare-fun temp345_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp345_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp345_165 () (_ BitVec 64))
(declare-fun temp345_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp345_167 () (_ BitVec 64))
(declare-fun temp345_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp345_169 () (_ BitVec 64))
(declare-fun temp345_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp345_171 () (_ BitVec 64))
(declare-fun temp345_172 () (_ BitVec 64))
(declare-fun temp345_173 () (_ BitVec 64))
(declare-fun temp345_174 () (_ BitVec 64))
(declare-fun temp345_175 () (_ BitVec 64))
(declare-fun temp345_176 () (_ BitVec 64))
(declare-fun temp345_177 () (_ BitVec 64))
(declare-fun temp345_178 () (_ BitVec 64))
(declare-fun temp345_179 () (_ BitVec 64))
(declare-fun temp345_180 () (_ BitVec 64))
(declare-fun temp345_181 () (_ BitVec 64))
(declare-fun temp345_182 () (_ BitVec 64))
(declare-fun temp345_183 () (_ BitVec 64))
(declare-fun temp345_184 () (_ BitVec 64))
(declare-fun temp345_185 () (_ BitVec 64))
(declare-fun temp345_186 () (_ BitVec 64))
(declare-fun temp345_187 () (_ BitVec 64))
(declare-fun temp345_188 () (_ BitVec 64))
(declare-fun temp345_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp345_190 () (_ BitVec 64))
(declare-fun temp345_192 () (_ BitVec 64))
(declare-fun temp345_193 () (_ BitVec 64))
(declare-fun temp345_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp345_194 () (_ BitVec 64))
(declare-fun temp345_195 () (_ BitVec 64))
(declare-fun temp345_197 () (_ BitVec 64))
(declare-fun temp345_198 () (_ BitVec 64))
(declare-fun temp345_196 () (_ BitVec 64))
(declare-fun temp345_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp345_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp345_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp345_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp345_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp345_204 () (_ BitVec 64))
(declare-fun temp345_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp345_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp345_207 () (_ BitVec 64))
(declare-fun temp345_208 () (_ BitVec 64))
(declare-fun temp345_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp345_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp345_211 () (_ BitVec 64))
(declare-fun temp345_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp345_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp345_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var5321104 () (_ BitVec 64))
(declare-fun var5583248 () (_ BitVec 64))
(declare-fun temp345_215 () (_ BitVec 64))
(assert (= temp345_1 #x0000000000000001))
(assert (= var77203 temp345_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp345_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp345_2)))
(assert (= temp345_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp345_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp345_4 #x0000000000000000))
(assert (= var210941 temp345_4))
(assert (= temp345_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp345_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp345_6 #x0000000000000000))
(assert (= var210986 temp345_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp345_7 #x0000000000000000))
(assert (= temp345_8 temp345_7))
(assert (= temp345_9 (select ARGNAME_padding_NAMEEND_VAL temp345_8)))
(assert (= temp345_10 #x0000000000000001))
(assert (= temp345_11 temp345_10))
(assert (= temp345_12 (select ARGNAME_padding_NAMEEND_VAL temp345_11)))
(assert (= temp345_13 #x0000000000000002))
(assert (= temp345_14 temp345_13))
(assert (= temp345_15 (select ARGNAME_padding_NAMEEND_VAL temp345_14)))
(assert (= temp345_16 #x0000000000000003))
(assert (= temp345_17 temp345_16))
(assert (= temp345_18 (select ARGNAME_padding_NAMEEND_VAL temp345_17)))
(assert (= temp345_19 #x0000000000000004))
(assert (= temp345_20 temp345_19))
(assert (= temp345_21 (select ARGNAME_padding_NAMEEND_VAL temp345_20)))
(assert (= temp345_22 #x0000000000000005))
(assert (= temp345_23 temp345_22))
(assert (= temp345_24 (select ARGNAME_padding_NAMEEND_VAL temp345_23)))
(assert (= temp345_25 #x0000000000000000))
(assert (= temp345_26 #x0000000000000000))
(assert (= temp345_27 temp345_26))
(assert (= temp345_28 (select ARGNAME_padding_NAMEEND_VAL temp345_27)))
(assert (= temp345_29 #x0000000000000000))
(assert (= temp345_30 #x0000000000000001))
(assert (= temp345_31 temp345_30))
(assert (= temp345_32 (select ARGNAME_padding_NAMEEND_VAL temp345_31)))
(assert (= temp345_33 #x0000000000000000))
(assert (= temp345_34 #x0000000000000002))
(assert (= temp345_35 temp345_34))
(assert (= temp345_36 (select ARGNAME_padding_NAMEEND_VAL temp345_35)))
(assert (= temp345_37 #x0000000000000000))
(assert (= temp345_38 #x0000000000000003))
(assert (= temp345_39 temp345_38))
(assert (= temp345_40 (select ARGNAME_padding_NAMEEND_VAL temp345_39)))
(assert (= temp345_41 #x0000000000000000))
(assert (= temp345_42 #x0000000000000004))
(assert (= temp345_43 temp345_42))
(assert (= temp345_44 (select ARGNAME_padding_NAMEEND_VAL temp345_43)))
(assert (= temp345_45 #x0000000000000000))
(assert (= temp345_46 #x0000000000000005))
(assert (= temp345_47 temp345_46))
(assert (= temp345_48 (select ARGNAME_padding_NAMEEND_VAL temp345_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp345_28 temp345_25)
             (bvslt temp345_32 temp345_29)
             (bvslt temp345_36 temp345_33)
             (bvslt temp345_40 temp345_37)
             (bvslt temp345_44 temp345_41)
             (bvslt temp345_48 temp345_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp345_49 #x0000000000000000))
(assert (= var1191714 temp345_49))
(assert (= temp345_50 #x0000000000000000))
(assert (= temp345_51 temp345_50))
(assert (= temp345_52 (select ARGNAME_output_padding_NAMEEND_VAL temp345_51)))
(assert (= temp345_53 #x0000000000000001))
(assert (= temp345_54 temp345_53))
(assert (= temp345_55 (select ARGNAME_output_padding_NAMEEND_VAL temp345_54)))
(assert (= temp345_56 #x0000000000000002))
(assert (= temp345_57 temp345_56))
(assert (= temp345_58 (select ARGNAME_output_padding_NAMEEND_VAL temp345_57)))
(assert (= temp345_59 #x0000000000000003))
(assert (= temp345_60 temp345_59))
(assert (= temp345_61 (select ARGNAME_output_padding_NAMEEND_VAL temp345_60)))
(assert (= temp345_62 #x0000000000000004))
(assert (= temp345_63 temp345_62))
(assert (= temp345_64 (select ARGNAME_output_padding_NAMEEND_VAL temp345_63)))
(assert (= temp345_65 #x0000000000000005))
(assert (= temp345_66 temp345_65))
(assert (= temp345_67 (select ARGNAME_output_padding_NAMEEND_VAL temp345_66)))
(assert (= temp345_68 #x0000000000000000))
(assert (= temp345_69 #x0000000000000000))
(assert (= temp345_70 temp345_69))
(assert (= temp345_71 (select ARGNAME_output_padding_NAMEEND_VAL temp345_70)))
(assert (= temp345_72 #x0000000000000000))
(assert (= temp345_73 #x0000000000000001))
(assert (= temp345_74 temp345_73))
(assert (= temp345_75 (select ARGNAME_output_padding_NAMEEND_VAL temp345_74)))
(assert (= temp345_76 #x0000000000000000))
(assert (= temp345_77 #x0000000000000002))
(assert (= temp345_78 temp345_77))
(assert (= temp345_79 (select ARGNAME_output_padding_NAMEEND_VAL temp345_78)))
(assert (= temp345_80 #x0000000000000000))
(assert (= temp345_81 #x0000000000000003))
(assert (= temp345_82 temp345_81))
(assert (= temp345_83 (select ARGNAME_output_padding_NAMEEND_VAL temp345_82)))
(assert (= temp345_84 #x0000000000000000))
(assert (= temp345_85 #x0000000000000004))
(assert (= temp345_86 temp345_85))
(assert (= temp345_87 (select ARGNAME_output_padding_NAMEEND_VAL temp345_86)))
(assert (= temp345_88 #x0000000000000000))
(assert (= temp345_89 #x0000000000000005))
(assert (= temp345_90 temp345_89))
(assert (= temp345_91 (select ARGNAME_output_padding_NAMEEND_VAL temp345_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp345_71 temp345_68)
             (bvslt temp345_75 temp345_72)
             (bvslt temp345_79 temp345_76)
             (bvslt temp345_83 temp345_80)
             (bvslt temp345_87 temp345_84)
             (bvslt temp345_91 temp345_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp345_92 #x0000000000000000))
(assert (= var1191725 temp345_92))
(assert (= temp345_93 #x0000000000000000))
(assert (= temp345_94 temp345_93))
(assert (= temp345_95 (select ARGNAME_stride_NAMEEND_VAL temp345_94)))
(assert (= temp345_96 #x0000000000000001))
(assert (= temp345_97 temp345_96))
(assert (= temp345_98 (select ARGNAME_stride_NAMEEND_VAL temp345_97)))
(assert (= temp345_99 #x0000000000000002))
(assert (= temp345_100 temp345_99))
(assert (= temp345_101 (select ARGNAME_stride_NAMEEND_VAL temp345_100)))
(assert (= temp345_102 #x0000000000000003))
(assert (= temp345_103 temp345_102))
(assert (= temp345_104 (select ARGNAME_stride_NAMEEND_VAL temp345_103)))
(assert (= temp345_105 #x0000000000000004))
(assert (= temp345_106 temp345_105))
(assert (= temp345_107 (select ARGNAME_stride_NAMEEND_VAL temp345_106)))
(assert (= temp345_108 #x0000000000000005))
(assert (= temp345_109 temp345_108))
(assert (= temp345_110 (select ARGNAME_stride_NAMEEND_VAL temp345_109)))
(assert (= temp345_111 #x0000000000000000))
(assert (= temp345_112 #x0000000000000000))
(assert (= temp345_113 temp345_112))
(assert (= temp345_114 (select ARGNAME_stride_NAMEEND_VAL temp345_113)))
(assert (= temp345_115 #x0000000000000000))
(assert (= temp345_116 #x0000000000000001))
(assert (= temp345_117 temp345_116))
(assert (= temp345_118 (select ARGNAME_stride_NAMEEND_VAL temp345_117)))
(assert (= temp345_119 #x0000000000000000))
(assert (= temp345_120 #x0000000000000002))
(assert (= temp345_121 temp345_120))
(assert (= temp345_122 (select ARGNAME_stride_NAMEEND_VAL temp345_121)))
(assert (= temp345_123 #x0000000000000000))
(assert (= temp345_124 #x0000000000000003))
(assert (= temp345_125 temp345_124))
(assert (= temp345_126 (select ARGNAME_stride_NAMEEND_VAL temp345_125)))
(assert (= temp345_127 #x0000000000000000))
(assert (= temp345_128 #x0000000000000004))
(assert (= temp345_129 temp345_128))
(assert (= temp345_130 (select ARGNAME_stride_NAMEEND_VAL temp345_129)))
(assert (= temp345_131 #x0000000000000000))
(assert (= temp345_132 #x0000000000000005))
(assert (= temp345_133 temp345_132))
(assert (= temp345_134 (select ARGNAME_stride_NAMEEND_VAL temp345_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp345_114 temp345_111)
             (bvsle temp345_118 temp345_115)
             (bvsle temp345_122 temp345_119)
             (bvsle temp345_126 temp345_123)
             (bvsle temp345_130 temp345_127)
             (bvsle temp345_134 temp345_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp345_135 #x0000000000000000))
(assert (= var1191735 temp345_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp345_136 #x0000000000000001))
(assert (= var1191747 temp345_136))
(assert (= temp345_137 #x0000000000000000))
(assert (= var1179826 temp345_137))
(assert (= temp345_138 #x0000000000000000))
(assert (= temp345_139 temp345_138))
(assert (= temp345_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp345_139)))
(assert (= temp345_141 #x0000000000000001))
(assert (= temp345_142 temp345_141))
(assert (= temp345_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp345_142)))
(assert (= temp345_144 #x0000000000000002))
(assert (= temp345_145 temp345_144))
(assert (= temp345_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp345_145)))
(assert (= temp345_147 #x0000000000000003))
(assert (= temp345_148 temp345_147))
(assert (= temp345_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp345_148)))
(assert (= temp345_150 #x0000000000000004))
(assert (= temp345_151 temp345_150))
(assert (= temp345_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp345_151)))
(assert (= temp345_153 #x0000000000000005))
(assert (= temp345_154 temp345_153))
(assert (= temp345_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp345_154)))
(assert (= temp345_157 var1179826))
(assert (= temp345_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp345_157)))
(assert (= temp345_156 temp345_158))
(assert (= var1191780
   (ite (bvslt temp345_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp345_159 #x0000000000000000))
(assert (= var1191780 temp345_159))
(assert (= temp345_160 #x0000000000000000))
(assert (= var1179826 temp345_160))
(assert (= temp345_162 var1179826))
(assert (= temp345_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp345_162)))
(assert (= temp345_161 temp345_163))
(assert (= var1191802 (bvsmod temp345_161 ARGNAME_groups_NAMEEND)))
(assert (= temp345_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp345_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp345_165 #x0000000000000001))
(assert (= var1191803 temp345_165))
(assert (= temp345_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp345_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp345_167 #x0000000000000001))
(assert (= var1191823 temp345_167))
(assert (= temp345_168 #x0000000000000001))
(assert (= var1180714 temp345_168))
(assert (= temp345_169 #x0000000000000000))
(assert (= temp345_170 temp345_169))
(assert (= temp345_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp345_170)))
(assert (= temp345_172 #x0000000000000001))
(assert (= temp345_173 temp345_172))
(assert (= temp345_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp345_173)))
(assert (= temp345_175 #x0000000000000002))
(assert (= temp345_176 temp345_175))
(assert (= temp345_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp345_176)))
(assert (= temp345_178 #x0000000000000003))
(assert (= temp345_179 temp345_178))
(assert (= temp345_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp345_179)))
(assert (= temp345_181 #x0000000000000004))
(assert (= temp345_182 temp345_181))
(assert (= temp345_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp345_182)))
(assert (= temp345_184 #x0000000000000005))
(assert (= temp345_185 temp345_184))
(assert (= temp345_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp345_185)))
(assert (= temp345_187 #x0000000000000000))
(assert (= temp345_188
   (ite (bvslt var1180714 temp345_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp345_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp345_188)))
(assert (= var1191831 temp345_189))
(assert (bvslt (ite (bvslt var1180714 temp345_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp345_190 #x0000000000000001))
(assert (= var1180714 temp345_190))
(assert (= temp345_192 var1180714))
(assert (= temp345_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp345_192)))
(assert (= temp345_191 temp345_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp345_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp345_194 #x0000000000000001))
(assert (= var1191836 temp345_194))
(assert (= temp345_195 #x0000000000000000))
(assert (= var1179826 temp345_195))
(assert (= temp345_197 var1179826))
(assert (= temp345_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp345_197)))
(assert (= temp345_196 temp345_198))
(assert (= temp345_199 #x0000000000000002))
(assert (= var1586025 temp345_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp345_200 #x0000000000000001))
(assert (= var1191993 temp345_200))
(assert (= temp345_201 #x0000000000000001))
(assert (= var2700303 temp345_201))
(assert (= temp345_202 #x0000000000000001))
(assert (= var2962447 temp345_202))
(assert (= temp345_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp345_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp345_204 #x0000000000000001))
(assert (= var211058 temp345_204))
(assert (= temp345_205 #x0000000000000001))
(assert (= var211188 temp345_205))
(assert (= var3879401 var211188))
(assert (= temp345_206 #x0000000000000000))
(assert (= var3866802 temp345_206))
(assert (= temp345_207 #x0000000000000000))
(assert (= temp345_208
   (ite (bvslt var3866802 temp345_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp345_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp345_208)))
(assert (= var3879420 temp345_209))
(assert (bvslt (ite (bvslt var3866802 temp345_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp345_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp345_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp345_211 #x0000000000000001))
(assert (= var3879421 temp345_211))
(assert (= temp345_212 #x0000000000000000))
(assert (= var4079423 temp345_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp345_213 #x0000000000000002))
(assert (= var4208259 temp345_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp345_214 #x0000000000000000))
(assert (= var4273820 temp345_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var5321104 var211201))
(assert (= var5583248 var211201))
(assert (= temp345_215 #x0000000000000001))
(assert (= var211058 temp345_215))
(model-add temp345_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp345_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp345_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp345_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




