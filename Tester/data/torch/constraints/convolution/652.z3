(declare-fun temp869_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp869_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp869_3 () (_ BitVec 64))
(declare-fun temp869_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp869_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp869_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp869_7 () (_ BitVec 64))
(declare-fun temp869_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp869_9 () (_ BitVec 64))
(declare-fun temp869_10 () (_ BitVec 64))
(declare-fun temp869_11 () (_ BitVec 64))
(declare-fun temp869_12 () (_ BitVec 64))
(declare-fun temp869_13 () (_ BitVec 64))
(declare-fun temp869_14 () (_ BitVec 64))
(declare-fun temp869_15 () (_ BitVec 64))
(declare-fun temp869_16 () (_ BitVec 64))
(declare-fun temp869_17 () (_ BitVec 64))
(declare-fun temp869_18 () (_ BitVec 64))
(declare-fun temp869_19 () (_ BitVec 64))
(declare-fun temp869_20 () (_ BitVec 64))
(declare-fun temp869_21 () (_ BitVec 64))
(declare-fun temp869_22 () (_ BitVec 64))
(declare-fun temp869_23 () (_ BitVec 64))
(declare-fun temp869_24 () (_ BitVec 64))
(declare-fun temp869_25 () (_ BitVec 64))
(declare-fun temp869_26 () (_ BitVec 64))
(declare-fun temp869_27 () (_ BitVec 64))
(declare-fun temp869_28 () (_ BitVec 64))
(declare-fun temp869_29 () (_ BitVec 64))
(declare-fun temp869_30 () (_ BitVec 64))
(declare-fun temp869_31 () (_ BitVec 64))
(declare-fun temp869_32 () (_ BitVec 64))
(declare-fun temp869_33 () (_ BitVec 64))
(declare-fun temp869_34 () (_ BitVec 64))
(declare-fun temp869_35 () (_ BitVec 64))
(declare-fun temp869_36 () (_ BitVec 64))
(declare-fun temp869_37 () (_ BitVec 64))
(declare-fun temp869_38 () (_ BitVec 64))
(declare-fun temp869_39 () (_ BitVec 64))
(declare-fun temp869_40 () (_ BitVec 64))
(declare-fun temp869_41 () (_ BitVec 64))
(declare-fun temp869_42 () (_ BitVec 64))
(declare-fun temp869_43 () (_ BitVec 64))
(declare-fun temp869_44 () (_ BitVec 64))
(declare-fun temp869_45 () (_ BitVec 64))
(declare-fun temp869_46 () (_ BitVec 64))
(declare-fun temp869_47 () (_ BitVec 64))
(declare-fun temp869_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp869_49 () (_ BitVec 64))
(declare-fun temp869_50 () (_ BitVec 64))
(declare-fun temp869_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp869_52 () (_ BitVec 64))
(declare-fun temp869_53 () (_ BitVec 64))
(declare-fun temp869_54 () (_ BitVec 64))
(declare-fun temp869_55 () (_ BitVec 64))
(declare-fun temp869_56 () (_ BitVec 64))
(declare-fun temp869_57 () (_ BitVec 64))
(declare-fun temp869_58 () (_ BitVec 64))
(declare-fun temp869_59 () (_ BitVec 64))
(declare-fun temp869_60 () (_ BitVec 64))
(declare-fun temp869_61 () (_ BitVec 64))
(declare-fun temp869_62 () (_ BitVec 64))
(declare-fun temp869_63 () (_ BitVec 64))
(declare-fun temp869_64 () (_ BitVec 64))
(declare-fun temp869_65 () (_ BitVec 64))
(declare-fun temp869_66 () (_ BitVec 64))
(declare-fun temp869_67 () (_ BitVec 64))
(declare-fun temp869_68 () (_ BitVec 64))
(declare-fun temp869_69 () (_ BitVec 64))
(declare-fun temp869_70 () (_ BitVec 64))
(declare-fun temp869_71 () (_ BitVec 64))
(declare-fun temp869_72 () (_ BitVec 64))
(declare-fun temp869_73 () (_ BitVec 64))
(declare-fun temp869_74 () (_ BitVec 64))
(declare-fun temp869_75 () (_ BitVec 64))
(declare-fun temp869_76 () (_ BitVec 64))
(declare-fun temp869_77 () (_ BitVec 64))
(declare-fun temp869_78 () (_ BitVec 64))
(declare-fun temp869_79 () (_ BitVec 64))
(declare-fun temp869_80 () (_ BitVec 64))
(declare-fun temp869_81 () (_ BitVec 64))
(declare-fun temp869_82 () (_ BitVec 64))
(declare-fun temp869_83 () (_ BitVec 64))
(declare-fun temp869_84 () (_ BitVec 64))
(declare-fun temp869_85 () (_ BitVec 64))
(declare-fun temp869_86 () (_ BitVec 64))
(declare-fun temp869_87 () (_ BitVec 64))
(declare-fun temp869_88 () (_ BitVec 64))
(declare-fun temp869_89 () (_ BitVec 64))
(declare-fun temp869_90 () (_ BitVec 64))
(declare-fun temp869_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp869_92 () (_ BitVec 64))
(declare-fun temp869_93 () (_ BitVec 64))
(declare-fun temp869_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp869_95 () (_ BitVec 64))
(declare-fun temp869_96 () (_ BitVec 64))
(declare-fun temp869_97 () (_ BitVec 64))
(declare-fun temp869_98 () (_ BitVec 64))
(declare-fun temp869_99 () (_ BitVec 64))
(declare-fun temp869_100 () (_ BitVec 64))
(declare-fun temp869_101 () (_ BitVec 64))
(declare-fun temp869_102 () (_ BitVec 64))
(declare-fun temp869_103 () (_ BitVec 64))
(declare-fun temp869_104 () (_ BitVec 64))
(declare-fun temp869_105 () (_ BitVec 64))
(declare-fun temp869_106 () (_ BitVec 64))
(declare-fun temp869_107 () (_ BitVec 64))
(declare-fun temp869_108 () (_ BitVec 64))
(declare-fun temp869_109 () (_ BitVec 64))
(declare-fun temp869_110 () (_ BitVec 64))
(declare-fun temp869_111 () (_ BitVec 64))
(declare-fun temp869_112 () (_ BitVec 64))
(declare-fun temp869_113 () (_ BitVec 64))
(declare-fun temp869_114 () (_ BitVec 64))
(declare-fun temp869_115 () (_ BitVec 64))
(declare-fun temp869_116 () (_ BitVec 64))
(declare-fun temp869_117 () (_ BitVec 64))
(declare-fun temp869_118 () (_ BitVec 64))
(declare-fun temp869_119 () (_ BitVec 64))
(declare-fun temp869_120 () (_ BitVec 64))
(declare-fun temp869_121 () (_ BitVec 64))
(declare-fun temp869_122 () (_ BitVec 64))
(declare-fun temp869_123 () (_ BitVec 64))
(declare-fun temp869_124 () (_ BitVec 64))
(declare-fun temp869_125 () (_ BitVec 64))
(declare-fun temp869_126 () (_ BitVec 64))
(declare-fun temp869_127 () (_ BitVec 64))
(declare-fun temp869_128 () (_ BitVec 64))
(declare-fun temp869_129 () (_ BitVec 64))
(declare-fun temp869_130 () (_ BitVec 64))
(declare-fun temp869_131 () (_ BitVec 64))
(declare-fun temp869_132 () (_ BitVec 64))
(declare-fun temp869_133 () (_ BitVec 64))
(declare-fun temp869_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp869_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp869_136 () (_ BitVec 64))
(declare-fun temp869_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp869_138 () (_ BitVec 64))
(declare-fun temp869_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp869_140 () (_ BitVec 64))
(declare-fun temp869_141 () (_ BitVec 64))
(declare-fun temp869_142 () (_ BitVec 64))
(declare-fun temp869_143 () (_ BitVec 64))
(declare-fun temp869_144 () (_ BitVec 64))
(declare-fun temp869_145 () (_ BitVec 64))
(declare-fun temp869_146 () (_ BitVec 64))
(declare-fun temp869_147 () (_ BitVec 64))
(declare-fun temp869_148 () (_ BitVec 64))
(declare-fun temp869_149 () (_ BitVec 64))
(declare-fun temp869_150 () (_ BitVec 64))
(declare-fun temp869_151 () (_ BitVec 64))
(declare-fun temp869_152 () (_ BitVec 64))
(declare-fun temp869_153 () (_ BitVec 64))
(declare-fun temp869_154 () (_ BitVec 64))
(declare-fun temp869_155 () (_ BitVec 64))
(declare-fun temp869_157 () (_ BitVec 64))
(declare-fun temp869_158 () (_ BitVec 64))
(declare-fun temp869_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp869_159 () (_ BitVec 64))
(declare-fun temp869_160 () (_ BitVec 64))
(declare-fun temp869_162 () (_ BitVec 64))
(declare-fun temp869_163 () (_ BitVec 64))
(declare-fun temp869_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp869_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp869_165 () (_ BitVec 64))
(declare-fun temp869_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp869_167 () (_ BitVec 64))
(declare-fun temp869_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp869_169 () (_ BitVec 64))
(declare-fun temp869_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp869_171 () (_ BitVec 64))
(declare-fun temp869_172 () (_ BitVec 64))
(declare-fun temp869_173 () (_ BitVec 64))
(declare-fun temp869_174 () (_ BitVec 64))
(declare-fun temp869_175 () (_ BitVec 64))
(declare-fun temp869_176 () (_ BitVec 64))
(declare-fun temp869_177 () (_ BitVec 64))
(declare-fun temp869_178 () (_ BitVec 64))
(declare-fun temp869_179 () (_ BitVec 64))
(declare-fun temp869_180 () (_ BitVec 64))
(declare-fun temp869_181 () (_ BitVec 64))
(declare-fun temp869_182 () (_ BitVec 64))
(declare-fun temp869_183 () (_ BitVec 64))
(declare-fun temp869_184 () (_ BitVec 64))
(declare-fun temp869_185 () (_ BitVec 64))
(declare-fun temp869_186 () (_ BitVec 64))
(declare-fun temp869_187 () (_ BitVec 64))
(declare-fun temp869_188 () (_ BitVec 64))
(declare-fun temp869_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp869_190 () (_ BitVec 64))
(declare-fun temp869_192 () (_ BitVec 64))
(declare-fun temp869_193 () (_ BitVec 64))
(declare-fun temp869_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp869_194 () (_ BitVec 64))
(declare-fun temp869_195 () (_ BitVec 64))
(declare-fun temp869_197 () (_ BitVec 64))
(declare-fun temp869_198 () (_ BitVec 64))
(declare-fun temp869_196 () (_ BitVec 64))
(declare-fun temp869_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp869_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp869_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp869_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp869_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp869_204 () (_ BitVec 64))
(declare-fun temp869_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp869_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp869_207 () (_ BitVec 64))
(declare-fun temp869_208 () (_ BitVec 64))
(declare-fun temp869_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp869_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp869_211 () (_ BitVec 64))
(declare-fun temp869_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp869_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp869_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp869_215 () (_ BitVec 64))
(assert (= temp869_1 #x0000000000000001))
(assert (= var77203 temp869_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp869_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp869_2)))
(assert (= temp869_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp869_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp869_4 #x0000000000000000))
(assert (= var210941 temp869_4))
(assert (= temp869_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp869_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp869_6 #x0000000000000000))
(assert (= var210986 temp869_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp869_7 #x0000000000000000))
(assert (= temp869_8 temp869_7))
(assert (= temp869_9 (select ARGNAME_padding_NAMEEND_VAL temp869_8)))
(assert (= temp869_10 #x0000000000000001))
(assert (= temp869_11 temp869_10))
(assert (= temp869_12 (select ARGNAME_padding_NAMEEND_VAL temp869_11)))
(assert (= temp869_13 #x0000000000000002))
(assert (= temp869_14 temp869_13))
(assert (= temp869_15 (select ARGNAME_padding_NAMEEND_VAL temp869_14)))
(assert (= temp869_16 #x0000000000000003))
(assert (= temp869_17 temp869_16))
(assert (= temp869_18 (select ARGNAME_padding_NAMEEND_VAL temp869_17)))
(assert (= temp869_19 #x0000000000000004))
(assert (= temp869_20 temp869_19))
(assert (= temp869_21 (select ARGNAME_padding_NAMEEND_VAL temp869_20)))
(assert (= temp869_22 #x0000000000000005))
(assert (= temp869_23 temp869_22))
(assert (= temp869_24 (select ARGNAME_padding_NAMEEND_VAL temp869_23)))
(assert (= temp869_25 #x0000000000000000))
(assert (= temp869_26 #x0000000000000000))
(assert (= temp869_27 temp869_26))
(assert (= temp869_28 (select ARGNAME_padding_NAMEEND_VAL temp869_27)))
(assert (= temp869_29 #x0000000000000000))
(assert (= temp869_30 #x0000000000000001))
(assert (= temp869_31 temp869_30))
(assert (= temp869_32 (select ARGNAME_padding_NAMEEND_VAL temp869_31)))
(assert (= temp869_33 #x0000000000000000))
(assert (= temp869_34 #x0000000000000002))
(assert (= temp869_35 temp869_34))
(assert (= temp869_36 (select ARGNAME_padding_NAMEEND_VAL temp869_35)))
(assert (= temp869_37 #x0000000000000000))
(assert (= temp869_38 #x0000000000000003))
(assert (= temp869_39 temp869_38))
(assert (= temp869_40 (select ARGNAME_padding_NAMEEND_VAL temp869_39)))
(assert (= temp869_41 #x0000000000000000))
(assert (= temp869_42 #x0000000000000004))
(assert (= temp869_43 temp869_42))
(assert (= temp869_44 (select ARGNAME_padding_NAMEEND_VAL temp869_43)))
(assert (= temp869_45 #x0000000000000000))
(assert (= temp869_46 #x0000000000000005))
(assert (= temp869_47 temp869_46))
(assert (= temp869_48 (select ARGNAME_padding_NAMEEND_VAL temp869_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp869_28 temp869_25)
             (bvslt temp869_32 temp869_29)
             (bvslt temp869_36 temp869_33)
             (bvslt temp869_40 temp869_37)
             (bvslt temp869_44 temp869_41)
             (bvslt temp869_48 temp869_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp869_49 #x0000000000000000))
(assert (= var1191714 temp869_49))
(assert (= temp869_50 #x0000000000000000))
(assert (= temp869_51 temp869_50))
(assert (= temp869_52 (select ARGNAME_output_padding_NAMEEND_VAL temp869_51)))
(assert (= temp869_53 #x0000000000000001))
(assert (= temp869_54 temp869_53))
(assert (= temp869_55 (select ARGNAME_output_padding_NAMEEND_VAL temp869_54)))
(assert (= temp869_56 #x0000000000000002))
(assert (= temp869_57 temp869_56))
(assert (= temp869_58 (select ARGNAME_output_padding_NAMEEND_VAL temp869_57)))
(assert (= temp869_59 #x0000000000000003))
(assert (= temp869_60 temp869_59))
(assert (= temp869_61 (select ARGNAME_output_padding_NAMEEND_VAL temp869_60)))
(assert (= temp869_62 #x0000000000000004))
(assert (= temp869_63 temp869_62))
(assert (= temp869_64 (select ARGNAME_output_padding_NAMEEND_VAL temp869_63)))
(assert (= temp869_65 #x0000000000000005))
(assert (= temp869_66 temp869_65))
(assert (= temp869_67 (select ARGNAME_output_padding_NAMEEND_VAL temp869_66)))
(assert (= temp869_68 #x0000000000000000))
(assert (= temp869_69 #x0000000000000000))
(assert (= temp869_70 temp869_69))
(assert (= temp869_71 (select ARGNAME_output_padding_NAMEEND_VAL temp869_70)))
(assert (= temp869_72 #x0000000000000000))
(assert (= temp869_73 #x0000000000000001))
(assert (= temp869_74 temp869_73))
(assert (= temp869_75 (select ARGNAME_output_padding_NAMEEND_VAL temp869_74)))
(assert (= temp869_76 #x0000000000000000))
(assert (= temp869_77 #x0000000000000002))
(assert (= temp869_78 temp869_77))
(assert (= temp869_79 (select ARGNAME_output_padding_NAMEEND_VAL temp869_78)))
(assert (= temp869_80 #x0000000000000000))
(assert (= temp869_81 #x0000000000000003))
(assert (= temp869_82 temp869_81))
(assert (= temp869_83 (select ARGNAME_output_padding_NAMEEND_VAL temp869_82)))
(assert (= temp869_84 #x0000000000000000))
(assert (= temp869_85 #x0000000000000004))
(assert (= temp869_86 temp869_85))
(assert (= temp869_87 (select ARGNAME_output_padding_NAMEEND_VAL temp869_86)))
(assert (= temp869_88 #x0000000000000000))
(assert (= temp869_89 #x0000000000000005))
(assert (= temp869_90 temp869_89))
(assert (= temp869_91 (select ARGNAME_output_padding_NAMEEND_VAL temp869_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp869_71 temp869_68)
             (bvslt temp869_75 temp869_72)
             (bvslt temp869_79 temp869_76)
             (bvslt temp869_83 temp869_80)
             (bvslt temp869_87 temp869_84)
             (bvslt temp869_91 temp869_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp869_92 #x0000000000000000))
(assert (= var1191725 temp869_92))
(assert (= temp869_93 #x0000000000000000))
(assert (= temp869_94 temp869_93))
(assert (= temp869_95 (select ARGNAME_stride_NAMEEND_VAL temp869_94)))
(assert (= temp869_96 #x0000000000000001))
(assert (= temp869_97 temp869_96))
(assert (= temp869_98 (select ARGNAME_stride_NAMEEND_VAL temp869_97)))
(assert (= temp869_99 #x0000000000000002))
(assert (= temp869_100 temp869_99))
(assert (= temp869_101 (select ARGNAME_stride_NAMEEND_VAL temp869_100)))
(assert (= temp869_102 #x0000000000000003))
(assert (= temp869_103 temp869_102))
(assert (= temp869_104 (select ARGNAME_stride_NAMEEND_VAL temp869_103)))
(assert (= temp869_105 #x0000000000000004))
(assert (= temp869_106 temp869_105))
(assert (= temp869_107 (select ARGNAME_stride_NAMEEND_VAL temp869_106)))
(assert (= temp869_108 #x0000000000000005))
(assert (= temp869_109 temp869_108))
(assert (= temp869_110 (select ARGNAME_stride_NAMEEND_VAL temp869_109)))
(assert (= temp869_111 #x0000000000000000))
(assert (= temp869_112 #x0000000000000000))
(assert (= temp869_113 temp869_112))
(assert (= temp869_114 (select ARGNAME_stride_NAMEEND_VAL temp869_113)))
(assert (= temp869_115 #x0000000000000000))
(assert (= temp869_116 #x0000000000000001))
(assert (= temp869_117 temp869_116))
(assert (= temp869_118 (select ARGNAME_stride_NAMEEND_VAL temp869_117)))
(assert (= temp869_119 #x0000000000000000))
(assert (= temp869_120 #x0000000000000002))
(assert (= temp869_121 temp869_120))
(assert (= temp869_122 (select ARGNAME_stride_NAMEEND_VAL temp869_121)))
(assert (= temp869_123 #x0000000000000000))
(assert (= temp869_124 #x0000000000000003))
(assert (= temp869_125 temp869_124))
(assert (= temp869_126 (select ARGNAME_stride_NAMEEND_VAL temp869_125)))
(assert (= temp869_127 #x0000000000000000))
(assert (= temp869_128 #x0000000000000004))
(assert (= temp869_129 temp869_128))
(assert (= temp869_130 (select ARGNAME_stride_NAMEEND_VAL temp869_129)))
(assert (= temp869_131 #x0000000000000000))
(assert (= temp869_132 #x0000000000000005))
(assert (= temp869_133 temp869_132))
(assert (= temp869_134 (select ARGNAME_stride_NAMEEND_VAL temp869_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp869_114 temp869_111)
             (bvsle temp869_118 temp869_115)
             (bvsle temp869_122 temp869_119)
             (bvsle temp869_126 temp869_123)
             (bvsle temp869_130 temp869_127)
             (bvsle temp869_134 temp869_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp869_135 #x0000000000000000))
(assert (= var1191735 temp869_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp869_136 #x0000000000000001))
(assert (= var1191747 temp869_136))
(assert (= temp869_137 #x0000000000000000))
(assert (= var1179826 temp869_137))
(assert (= temp869_138 #x0000000000000000))
(assert (= temp869_139 temp869_138))
(assert (= temp869_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp869_139)))
(assert (= temp869_141 #x0000000000000001))
(assert (= temp869_142 temp869_141))
(assert (= temp869_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp869_142)))
(assert (= temp869_144 #x0000000000000002))
(assert (= temp869_145 temp869_144))
(assert (= temp869_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp869_145)))
(assert (= temp869_147 #x0000000000000003))
(assert (= temp869_148 temp869_147))
(assert (= temp869_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp869_148)))
(assert (= temp869_150 #x0000000000000004))
(assert (= temp869_151 temp869_150))
(assert (= temp869_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp869_151)))
(assert (= temp869_153 #x0000000000000005))
(assert (= temp869_154 temp869_153))
(assert (= temp869_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp869_154)))
(assert (= temp869_157 var1179826))
(assert (= temp869_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp869_157)))
(assert (= temp869_156 temp869_158))
(assert (= var1191780
   (ite (bvslt temp869_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp869_159 #x0000000000000000))
(assert (= var1191780 temp869_159))
(assert (= temp869_160 #x0000000000000000))
(assert (= var1179826 temp869_160))
(assert (= temp869_162 var1179826))
(assert (= temp869_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp869_162)))
(assert (= temp869_161 temp869_163))
(assert (= var1191802 (bvsmod temp869_161 ARGNAME_groups_NAMEEND)))
(assert (= temp869_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp869_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp869_165 #x0000000000000001))
(assert (= var1191803 temp869_165))
(assert (= temp869_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp869_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp869_167 #x0000000000000001))
(assert (= var1191823 temp869_167))
(assert (= temp869_168 #x0000000000000001))
(assert (= var1180714 temp869_168))
(assert (= temp869_169 #x0000000000000000))
(assert (= temp869_170 temp869_169))
(assert (= temp869_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp869_170)))
(assert (= temp869_172 #x0000000000000001))
(assert (= temp869_173 temp869_172))
(assert (= temp869_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp869_173)))
(assert (= temp869_175 #x0000000000000002))
(assert (= temp869_176 temp869_175))
(assert (= temp869_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp869_176)))
(assert (= temp869_178 #x0000000000000003))
(assert (= temp869_179 temp869_178))
(assert (= temp869_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp869_179)))
(assert (= temp869_181 #x0000000000000004))
(assert (= temp869_182 temp869_181))
(assert (= temp869_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp869_182)))
(assert (= temp869_184 #x0000000000000005))
(assert (= temp869_185 temp869_184))
(assert (= temp869_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp869_185)))
(assert (= temp869_187 #x0000000000000000))
(assert (= temp869_188
   (ite (bvslt var1180714 temp869_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp869_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp869_188)))
(assert (= var1191831 temp869_189))
(assert (bvslt (ite (bvslt var1180714 temp869_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp869_190 #x0000000000000001))
(assert (= var1180714 temp869_190))
(assert (= temp869_192 var1180714))
(assert (= temp869_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp869_192)))
(assert (= temp869_191 temp869_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp869_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp869_194 #x0000000000000001))
(assert (= var1191836 temp869_194))
(assert (= temp869_195 #x0000000000000000))
(assert (= var1179826 temp869_195))
(assert (= temp869_197 var1179826))
(assert (= temp869_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp869_197)))
(assert (= temp869_196 temp869_198))
(assert (= temp869_199 #x0000000000000002))
(assert (= var1586025 temp869_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp869_200 #x0000000000000001))
(assert (= var1191993 temp869_200))
(assert (= temp869_201 #x0000000000000001))
(assert (= var2700303 temp869_201))
(assert (= temp869_202 #x0000000000000001))
(assert (= var2962447 temp869_202))
(assert (= temp869_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp869_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp869_204 #x0000000000000001))
(assert (= var211058 temp869_204))
(assert (= temp869_205 #x0000000000000001))
(assert (= var211188 temp869_205))
(assert (= var3879401 var211188))
(assert (= temp869_206 #x0000000000000000))
(assert (= var3866802 temp869_206))
(assert (= temp869_207 #x0000000000000000))
(assert (= temp869_208
   (ite (bvslt var3866802 temp869_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp869_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp869_208)))
(assert (= var3879420 temp869_209))
(assert (bvslt (ite (bvslt var3866802 temp869_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp869_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp869_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp869_211 #x0000000000000001))
(assert (= var3879421 temp869_211))
(assert (= temp869_212 #x0000000000000000))
(assert (= var4079423 temp869_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp869_213 #x0000000000000002))
(assert (= var4208259 temp869_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp869_214 #x0000000000000000))
(assert (= var4273820 temp869_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp869_215 #x0000000000000001))
(assert (= var211058 temp869_215))
(model-add temp869_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp869_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp869_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp869_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




