(declare-fun temp10842_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10842_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10842_3 () (_ BitVec 64))
(declare-fun temp10842_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10842_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10842_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10842_7 () (_ BitVec 64))
(declare-fun temp10842_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10842_9 () (_ BitVec 64))
(declare-fun temp10842_10 () (_ BitVec 64))
(declare-fun temp10842_11 () (_ BitVec 64))
(declare-fun temp10842_12 () (_ BitVec 64))
(declare-fun temp10842_13 () (_ BitVec 64))
(declare-fun temp10842_14 () (_ BitVec 64))
(declare-fun temp10842_15 () (_ BitVec 64))
(declare-fun temp10842_16 () (_ BitVec 64))
(declare-fun temp10842_17 () (_ BitVec 64))
(declare-fun temp10842_18 () (_ BitVec 64))
(declare-fun temp10842_19 () (_ BitVec 64))
(declare-fun temp10842_20 () (_ BitVec 64))
(declare-fun temp10842_21 () (_ BitVec 64))
(declare-fun temp10842_22 () (_ BitVec 64))
(declare-fun temp10842_23 () (_ BitVec 64))
(declare-fun temp10842_24 () (_ BitVec 64))
(declare-fun temp10842_25 () (_ BitVec 64))
(declare-fun temp10842_26 () (_ BitVec 64))
(declare-fun temp10842_27 () (_ BitVec 64))
(declare-fun temp10842_28 () (_ BitVec 64))
(declare-fun temp10842_29 () (_ BitVec 64))
(declare-fun temp10842_30 () (_ BitVec 64))
(declare-fun temp10842_31 () (_ BitVec 64))
(declare-fun temp10842_32 () (_ BitVec 64))
(declare-fun temp10842_33 () (_ BitVec 64))
(declare-fun temp10842_34 () (_ BitVec 64))
(declare-fun temp10842_35 () (_ BitVec 64))
(declare-fun temp10842_36 () (_ BitVec 64))
(declare-fun temp10842_37 () (_ BitVec 64))
(declare-fun temp10842_38 () (_ BitVec 64))
(declare-fun temp10842_39 () (_ BitVec 64))
(declare-fun temp10842_40 () (_ BitVec 64))
(declare-fun temp10842_41 () (_ BitVec 64))
(declare-fun temp10842_42 () (_ BitVec 64))
(declare-fun temp10842_43 () (_ BitVec 64))
(declare-fun temp10842_44 () (_ BitVec 64))
(declare-fun temp10842_45 () (_ BitVec 64))
(declare-fun temp10842_46 () (_ BitVec 64))
(declare-fun temp10842_47 () (_ BitVec 64))
(declare-fun temp10842_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10842_49 () (_ BitVec 64))
(declare-fun temp10842_50 () (_ BitVec 64))
(declare-fun temp10842_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10842_52 () (_ BitVec 64))
(declare-fun temp10842_53 () (_ BitVec 64))
(declare-fun temp10842_54 () (_ BitVec 64))
(declare-fun temp10842_55 () (_ BitVec 64))
(declare-fun temp10842_56 () (_ BitVec 64))
(declare-fun temp10842_57 () (_ BitVec 64))
(declare-fun temp10842_58 () (_ BitVec 64))
(declare-fun temp10842_59 () (_ BitVec 64))
(declare-fun temp10842_60 () (_ BitVec 64))
(declare-fun temp10842_61 () (_ BitVec 64))
(declare-fun temp10842_62 () (_ BitVec 64))
(declare-fun temp10842_63 () (_ BitVec 64))
(declare-fun temp10842_64 () (_ BitVec 64))
(declare-fun temp10842_65 () (_ BitVec 64))
(declare-fun temp10842_66 () (_ BitVec 64))
(declare-fun temp10842_67 () (_ BitVec 64))
(declare-fun temp10842_68 () (_ BitVec 64))
(declare-fun temp10842_69 () (_ BitVec 64))
(declare-fun temp10842_70 () (_ BitVec 64))
(declare-fun temp10842_71 () (_ BitVec 64))
(declare-fun temp10842_72 () (_ BitVec 64))
(declare-fun temp10842_73 () (_ BitVec 64))
(declare-fun temp10842_74 () (_ BitVec 64))
(declare-fun temp10842_75 () (_ BitVec 64))
(declare-fun temp10842_76 () (_ BitVec 64))
(declare-fun temp10842_77 () (_ BitVec 64))
(declare-fun temp10842_78 () (_ BitVec 64))
(declare-fun temp10842_79 () (_ BitVec 64))
(declare-fun temp10842_80 () (_ BitVec 64))
(declare-fun temp10842_81 () (_ BitVec 64))
(declare-fun temp10842_82 () (_ BitVec 64))
(declare-fun temp10842_83 () (_ BitVec 64))
(declare-fun temp10842_84 () (_ BitVec 64))
(declare-fun temp10842_85 () (_ BitVec 64))
(declare-fun temp10842_86 () (_ BitVec 64))
(declare-fun temp10842_87 () (_ BitVec 64))
(declare-fun temp10842_88 () (_ BitVec 64))
(declare-fun temp10842_89 () (_ BitVec 64))
(declare-fun temp10842_90 () (_ BitVec 64))
(declare-fun temp10842_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10842_92 () (_ BitVec 64))
(declare-fun temp10842_93 () (_ BitVec 64))
(declare-fun temp10842_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10842_95 () (_ BitVec 64))
(declare-fun temp10842_96 () (_ BitVec 64))
(declare-fun temp10842_97 () (_ BitVec 64))
(declare-fun temp10842_98 () (_ BitVec 64))
(declare-fun temp10842_99 () (_ BitVec 64))
(declare-fun temp10842_100 () (_ BitVec 64))
(declare-fun temp10842_101 () (_ BitVec 64))
(declare-fun temp10842_102 () (_ BitVec 64))
(declare-fun temp10842_103 () (_ BitVec 64))
(declare-fun temp10842_104 () (_ BitVec 64))
(declare-fun temp10842_105 () (_ BitVec 64))
(declare-fun temp10842_106 () (_ BitVec 64))
(declare-fun temp10842_107 () (_ BitVec 64))
(declare-fun temp10842_108 () (_ BitVec 64))
(declare-fun temp10842_109 () (_ BitVec 64))
(declare-fun temp10842_110 () (_ BitVec 64))
(declare-fun temp10842_111 () (_ BitVec 64))
(declare-fun temp10842_112 () (_ BitVec 64))
(declare-fun temp10842_113 () (_ BitVec 64))
(declare-fun temp10842_114 () (_ BitVec 64))
(declare-fun temp10842_115 () (_ BitVec 64))
(declare-fun temp10842_116 () (_ BitVec 64))
(declare-fun temp10842_117 () (_ BitVec 64))
(declare-fun temp10842_118 () (_ BitVec 64))
(declare-fun temp10842_119 () (_ BitVec 64))
(declare-fun temp10842_120 () (_ BitVec 64))
(declare-fun temp10842_121 () (_ BitVec 64))
(declare-fun temp10842_122 () (_ BitVec 64))
(declare-fun temp10842_123 () (_ BitVec 64))
(declare-fun temp10842_124 () (_ BitVec 64))
(declare-fun temp10842_125 () (_ BitVec 64))
(declare-fun temp10842_126 () (_ BitVec 64))
(declare-fun temp10842_127 () (_ BitVec 64))
(declare-fun temp10842_128 () (_ BitVec 64))
(declare-fun temp10842_129 () (_ BitVec 64))
(declare-fun temp10842_130 () (_ BitVec 64))
(declare-fun temp10842_131 () (_ BitVec 64))
(declare-fun temp10842_132 () (_ BitVec 64))
(declare-fun temp10842_133 () (_ BitVec 64))
(declare-fun temp10842_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10842_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10842_136 () (_ BitVec 64))
(declare-fun temp10842_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10842_138 () (_ BitVec 64))
(declare-fun temp10842_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10842_140 () (_ BitVec 64))
(declare-fun temp10842_141 () (_ BitVec 64))
(declare-fun temp10842_142 () (_ BitVec 64))
(declare-fun temp10842_143 () (_ BitVec 64))
(declare-fun temp10842_144 () (_ BitVec 64))
(declare-fun temp10842_145 () (_ BitVec 64))
(declare-fun temp10842_146 () (_ BitVec 64))
(declare-fun temp10842_147 () (_ BitVec 64))
(declare-fun temp10842_148 () (_ BitVec 64))
(declare-fun temp10842_149 () (_ BitVec 64))
(declare-fun temp10842_150 () (_ BitVec 64))
(declare-fun temp10842_151 () (_ BitVec 64))
(declare-fun temp10842_152 () (_ BitVec 64))
(declare-fun temp10842_153 () (_ BitVec 64))
(declare-fun temp10842_154 () (_ BitVec 64))
(declare-fun temp10842_155 () (_ BitVec 64))
(declare-fun temp10842_157 () (_ BitVec 64))
(declare-fun temp10842_158 () (_ BitVec 64))
(declare-fun temp10842_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10842_159 () (_ BitVec 64))
(declare-fun temp10842_160 () (_ BitVec 64))
(declare-fun temp10842_162 () (_ BitVec 64))
(declare-fun temp10842_163 () (_ BitVec 64))
(declare-fun temp10842_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10842_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10842_165 () (_ BitVec 64))
(declare-fun temp10842_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10842_167 () (_ BitVec 64))
(declare-fun temp10842_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10842_169 () (_ BitVec 64))
(declare-fun temp10842_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10842_171 () (_ BitVec 64))
(declare-fun temp10842_172 () (_ BitVec 64))
(declare-fun temp10842_173 () (_ BitVec 64))
(declare-fun temp10842_174 () (_ BitVec 64))
(declare-fun temp10842_175 () (_ BitVec 64))
(declare-fun temp10842_176 () (_ BitVec 64))
(declare-fun temp10842_177 () (_ BitVec 64))
(declare-fun temp10842_178 () (_ BitVec 64))
(declare-fun temp10842_179 () (_ BitVec 64))
(declare-fun temp10842_180 () (_ BitVec 64))
(declare-fun temp10842_181 () (_ BitVec 64))
(declare-fun temp10842_182 () (_ BitVec 64))
(declare-fun temp10842_183 () (_ BitVec 64))
(declare-fun temp10842_184 () (_ BitVec 64))
(declare-fun temp10842_185 () (_ BitVec 64))
(declare-fun temp10842_186 () (_ BitVec 64))
(declare-fun temp10842_187 () (_ BitVec 64))
(declare-fun temp10842_188 () (_ BitVec 64))
(declare-fun temp10842_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10842_190 () (_ BitVec 64))
(declare-fun temp10842_192 () (_ BitVec 64))
(declare-fun temp10842_193 () (_ BitVec 64))
(declare-fun temp10842_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10842_194 () (_ BitVec 64))
(declare-fun temp10842_195 () (_ BitVec 64))
(declare-fun temp10842_197 () (_ BitVec 64))
(declare-fun temp10842_198 () (_ BitVec 64))
(declare-fun temp10842_196 () (_ BitVec 64))
(declare-fun temp10842_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10842_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10842_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10842_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10842_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10842_204 () (_ BitVec 64))
(declare-fun temp10842_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10842_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10842_207 () (_ BitVec 64))
(declare-fun temp10842_208 () (_ BitVec 64))
(declare-fun temp10842_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10842_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10842_211 () (_ BitVec 64))
(declare-fun temp10842_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10842_213 () (_ BitVec 64))
(declare-fun temp10842_214 () (_ BitVec 64))
(declare-fun temp10842_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10842_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10842_217 () (_ BitVec 64))
(declare-fun temp10842_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10842_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10842_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp10842_221 () (_ BitVec 64))
(assert (= temp10842_1 #x0000000000000001))
(assert (= var77203 temp10842_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10842_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10842_2)))
(assert (= temp10842_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10842_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10842_4 #x0000000000000000))
(assert (= var210941 temp10842_4))
(assert (= temp10842_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10842_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10842_6 #x0000000000000000))
(assert (= var210986 temp10842_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10842_7 #x0000000000000000))
(assert (= temp10842_8 temp10842_7))
(assert (= temp10842_9 (select ARGNAME_padding_NAMEEND_VAL temp10842_8)))
(assert (= temp10842_10 #x0000000000000001))
(assert (= temp10842_11 temp10842_10))
(assert (= temp10842_12 (select ARGNAME_padding_NAMEEND_VAL temp10842_11)))
(assert (= temp10842_13 #x0000000000000002))
(assert (= temp10842_14 temp10842_13))
(assert (= temp10842_15 (select ARGNAME_padding_NAMEEND_VAL temp10842_14)))
(assert (= temp10842_16 #x0000000000000003))
(assert (= temp10842_17 temp10842_16))
(assert (= temp10842_18 (select ARGNAME_padding_NAMEEND_VAL temp10842_17)))
(assert (= temp10842_19 #x0000000000000004))
(assert (= temp10842_20 temp10842_19))
(assert (= temp10842_21 (select ARGNAME_padding_NAMEEND_VAL temp10842_20)))
(assert (= temp10842_22 #x0000000000000005))
(assert (= temp10842_23 temp10842_22))
(assert (= temp10842_24 (select ARGNAME_padding_NAMEEND_VAL temp10842_23)))
(assert (= temp10842_25 #x0000000000000000))
(assert (= temp10842_26 #x0000000000000000))
(assert (= temp10842_27 temp10842_26))
(assert (= temp10842_28 (select ARGNAME_padding_NAMEEND_VAL temp10842_27)))
(assert (= temp10842_29 #x0000000000000000))
(assert (= temp10842_30 #x0000000000000001))
(assert (= temp10842_31 temp10842_30))
(assert (= temp10842_32 (select ARGNAME_padding_NAMEEND_VAL temp10842_31)))
(assert (= temp10842_33 #x0000000000000000))
(assert (= temp10842_34 #x0000000000000002))
(assert (= temp10842_35 temp10842_34))
(assert (= temp10842_36 (select ARGNAME_padding_NAMEEND_VAL temp10842_35)))
(assert (= temp10842_37 #x0000000000000000))
(assert (= temp10842_38 #x0000000000000003))
(assert (= temp10842_39 temp10842_38))
(assert (= temp10842_40 (select ARGNAME_padding_NAMEEND_VAL temp10842_39)))
(assert (= temp10842_41 #x0000000000000000))
(assert (= temp10842_42 #x0000000000000004))
(assert (= temp10842_43 temp10842_42))
(assert (= temp10842_44 (select ARGNAME_padding_NAMEEND_VAL temp10842_43)))
(assert (= temp10842_45 #x0000000000000000))
(assert (= temp10842_46 #x0000000000000005))
(assert (= temp10842_47 temp10842_46))
(assert (= temp10842_48 (select ARGNAME_padding_NAMEEND_VAL temp10842_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10842_28 temp10842_25)
             (bvslt temp10842_32 temp10842_29)
             (bvslt temp10842_36 temp10842_33)
             (bvslt temp10842_40 temp10842_37)
             (bvslt temp10842_44 temp10842_41)
             (bvslt temp10842_48 temp10842_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10842_49 #x0000000000000000))
(assert (= var1191714 temp10842_49))
(assert (= temp10842_50 #x0000000000000000))
(assert (= temp10842_51 temp10842_50))
(assert (= temp10842_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10842_51)))
(assert (= temp10842_53 #x0000000000000001))
(assert (= temp10842_54 temp10842_53))
(assert (= temp10842_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10842_54)))
(assert (= temp10842_56 #x0000000000000002))
(assert (= temp10842_57 temp10842_56))
(assert (= temp10842_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10842_57)))
(assert (= temp10842_59 #x0000000000000003))
(assert (= temp10842_60 temp10842_59))
(assert (= temp10842_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10842_60)))
(assert (= temp10842_62 #x0000000000000004))
(assert (= temp10842_63 temp10842_62))
(assert (= temp10842_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10842_63)))
(assert (= temp10842_65 #x0000000000000005))
(assert (= temp10842_66 temp10842_65))
(assert (= temp10842_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10842_66)))
(assert (= temp10842_68 #x0000000000000000))
(assert (= temp10842_69 #x0000000000000000))
(assert (= temp10842_70 temp10842_69))
(assert (= temp10842_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10842_70)))
(assert (= temp10842_72 #x0000000000000000))
(assert (= temp10842_73 #x0000000000000001))
(assert (= temp10842_74 temp10842_73))
(assert (= temp10842_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10842_74)))
(assert (= temp10842_76 #x0000000000000000))
(assert (= temp10842_77 #x0000000000000002))
(assert (= temp10842_78 temp10842_77))
(assert (= temp10842_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10842_78)))
(assert (= temp10842_80 #x0000000000000000))
(assert (= temp10842_81 #x0000000000000003))
(assert (= temp10842_82 temp10842_81))
(assert (= temp10842_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10842_82)))
(assert (= temp10842_84 #x0000000000000000))
(assert (= temp10842_85 #x0000000000000004))
(assert (= temp10842_86 temp10842_85))
(assert (= temp10842_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10842_86)))
(assert (= temp10842_88 #x0000000000000000))
(assert (= temp10842_89 #x0000000000000005))
(assert (= temp10842_90 temp10842_89))
(assert (= temp10842_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10842_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10842_71 temp10842_68)
             (bvslt temp10842_75 temp10842_72)
             (bvslt temp10842_79 temp10842_76)
             (bvslt temp10842_83 temp10842_80)
             (bvslt temp10842_87 temp10842_84)
             (bvslt temp10842_91 temp10842_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10842_92 #x0000000000000000))
(assert (= var1191725 temp10842_92))
(assert (= temp10842_93 #x0000000000000000))
(assert (= temp10842_94 temp10842_93))
(assert (= temp10842_95 (select ARGNAME_stride_NAMEEND_VAL temp10842_94)))
(assert (= temp10842_96 #x0000000000000001))
(assert (= temp10842_97 temp10842_96))
(assert (= temp10842_98 (select ARGNAME_stride_NAMEEND_VAL temp10842_97)))
(assert (= temp10842_99 #x0000000000000002))
(assert (= temp10842_100 temp10842_99))
(assert (= temp10842_101 (select ARGNAME_stride_NAMEEND_VAL temp10842_100)))
(assert (= temp10842_102 #x0000000000000003))
(assert (= temp10842_103 temp10842_102))
(assert (= temp10842_104 (select ARGNAME_stride_NAMEEND_VAL temp10842_103)))
(assert (= temp10842_105 #x0000000000000004))
(assert (= temp10842_106 temp10842_105))
(assert (= temp10842_107 (select ARGNAME_stride_NAMEEND_VAL temp10842_106)))
(assert (= temp10842_108 #x0000000000000005))
(assert (= temp10842_109 temp10842_108))
(assert (= temp10842_110 (select ARGNAME_stride_NAMEEND_VAL temp10842_109)))
(assert (= temp10842_111 #x0000000000000000))
(assert (= temp10842_112 #x0000000000000000))
(assert (= temp10842_113 temp10842_112))
(assert (= temp10842_114 (select ARGNAME_stride_NAMEEND_VAL temp10842_113)))
(assert (= temp10842_115 #x0000000000000000))
(assert (= temp10842_116 #x0000000000000001))
(assert (= temp10842_117 temp10842_116))
(assert (= temp10842_118 (select ARGNAME_stride_NAMEEND_VAL temp10842_117)))
(assert (= temp10842_119 #x0000000000000000))
(assert (= temp10842_120 #x0000000000000002))
(assert (= temp10842_121 temp10842_120))
(assert (= temp10842_122 (select ARGNAME_stride_NAMEEND_VAL temp10842_121)))
(assert (= temp10842_123 #x0000000000000000))
(assert (= temp10842_124 #x0000000000000003))
(assert (= temp10842_125 temp10842_124))
(assert (= temp10842_126 (select ARGNAME_stride_NAMEEND_VAL temp10842_125)))
(assert (= temp10842_127 #x0000000000000000))
(assert (= temp10842_128 #x0000000000000004))
(assert (= temp10842_129 temp10842_128))
(assert (= temp10842_130 (select ARGNAME_stride_NAMEEND_VAL temp10842_129)))
(assert (= temp10842_131 #x0000000000000000))
(assert (= temp10842_132 #x0000000000000005))
(assert (= temp10842_133 temp10842_132))
(assert (= temp10842_134 (select ARGNAME_stride_NAMEEND_VAL temp10842_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10842_114 temp10842_111)
             (bvsle temp10842_118 temp10842_115)
             (bvsle temp10842_122 temp10842_119)
             (bvsle temp10842_126 temp10842_123)
             (bvsle temp10842_130 temp10842_127)
             (bvsle temp10842_134 temp10842_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10842_135 #x0000000000000000))
(assert (= var1191735 temp10842_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10842_136 #x0000000000000001))
(assert (= var1191747 temp10842_136))
(assert (= temp10842_137 #x0000000000000000))
(assert (= var1179826 temp10842_137))
(assert (= temp10842_138 #x0000000000000000))
(assert (= temp10842_139 temp10842_138))
(assert (= temp10842_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10842_139)))
(assert (= temp10842_141 #x0000000000000001))
(assert (= temp10842_142 temp10842_141))
(assert (= temp10842_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10842_142)))
(assert (= temp10842_144 #x0000000000000002))
(assert (= temp10842_145 temp10842_144))
(assert (= temp10842_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10842_145)))
(assert (= temp10842_147 #x0000000000000003))
(assert (= temp10842_148 temp10842_147))
(assert (= temp10842_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10842_148)))
(assert (= temp10842_150 #x0000000000000004))
(assert (= temp10842_151 temp10842_150))
(assert (= temp10842_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10842_151)))
(assert (= temp10842_153 #x0000000000000005))
(assert (= temp10842_154 temp10842_153))
(assert (= temp10842_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10842_154)))
(assert (= temp10842_157 var1179826))
(assert (= temp10842_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10842_157)))
(assert (= temp10842_156 temp10842_158))
(assert (= var1191780
   (ite (bvslt temp10842_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10842_159 #x0000000000000000))
(assert (= var1191780 temp10842_159))
(assert (= temp10842_160 #x0000000000000000))
(assert (= var1179826 temp10842_160))
(assert (= temp10842_162 var1179826))
(assert (= temp10842_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10842_162)))
(assert (= temp10842_161 temp10842_163))
(assert (= var1191802 (bvsmod temp10842_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10842_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10842_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10842_165 #x0000000000000001))
(assert (= var1191803 temp10842_165))
(assert (= temp10842_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10842_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10842_167 #x0000000000000001))
(assert (= var1191823 temp10842_167))
(assert (= temp10842_168 #x0000000000000001))
(assert (= var1180714 temp10842_168))
(assert (= temp10842_169 #x0000000000000000))
(assert (= temp10842_170 temp10842_169))
(assert (= temp10842_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10842_170)))
(assert (= temp10842_172 #x0000000000000001))
(assert (= temp10842_173 temp10842_172))
(assert (= temp10842_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10842_173)))
(assert (= temp10842_175 #x0000000000000002))
(assert (= temp10842_176 temp10842_175))
(assert (= temp10842_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10842_176)))
(assert (= temp10842_178 #x0000000000000003))
(assert (= temp10842_179 temp10842_178))
(assert (= temp10842_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10842_179)))
(assert (= temp10842_181 #x0000000000000004))
(assert (= temp10842_182 temp10842_181))
(assert (= temp10842_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10842_182)))
(assert (= temp10842_184 #x0000000000000005))
(assert (= temp10842_185 temp10842_184))
(assert (= temp10842_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10842_185)))
(assert (= temp10842_187 #x0000000000000000))
(assert (= temp10842_188
   (ite (bvslt var1180714 temp10842_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10842_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10842_188)))
(assert (= var1191831 temp10842_189))
(assert (bvslt (ite (bvslt var1180714 temp10842_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10842_190 #x0000000000000001))
(assert (= var1180714 temp10842_190))
(assert (= temp10842_192 var1180714))
(assert (= temp10842_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10842_192)))
(assert (= temp10842_191 temp10842_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10842_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10842_194 #x0000000000000001))
(assert (= var1191836 temp10842_194))
(assert (= temp10842_195 #x0000000000000000))
(assert (= var1179826 temp10842_195))
(assert (= temp10842_197 var1179826))
(assert (= temp10842_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10842_197)))
(assert (= temp10842_196 temp10842_198))
(assert (= temp10842_199 #x0000000000000002))
(assert (= var1586025 temp10842_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10842_200 #x0000000000000001))
(assert (= var1191993 temp10842_200))
(assert (= temp10842_201 #x0000000000000001))
(assert (= var2700303 temp10842_201))
(assert (= temp10842_202 #x0000000000000001))
(assert (= var2962447 temp10842_202))
(assert (= temp10842_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10842_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10842_204 #x0000000000000001))
(assert (= var211058 temp10842_204))
(assert (= temp10842_205 #x0000000000000001))
(assert (= var211188 temp10842_205))
(assert (= var3879401 var211188))
(assert (= temp10842_206 #x0000000000000000))
(assert (= var3866802 temp10842_206))
(assert (= temp10842_207 #x0000000000000000))
(assert (= temp10842_208
   (ite (bvslt var3866802 temp10842_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10842_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10842_208)))
(assert (= var3879420 temp10842_209))
(assert (bvslt (ite (bvslt var3866802 temp10842_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10842_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10842_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10842_211 #x0000000000000000))
(assert (= var3879421 temp10842_211))
(assert (= temp10842_212 #x0000000000000001))
(assert (= var3867690 temp10842_212))
(assert (= temp10842_213 #x0000000000000000))
(assert (= temp10842_214
   (ite (bvslt var3867690 temp10842_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10842_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10842_214)))
(assert (= var3879423 temp10842_215))
(assert (bvslt (ite (bvslt var3867690 temp10842_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10842_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10842_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10842_217 #x0000000000000001))
(assert (= var3879424 temp10842_217))
(assert (= temp10842_218 #x0000000000000000))
(assert (= var4133117 temp10842_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10842_219 #x0000000000000002))
(assert (= var4339331 temp10842_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10842_220 #x0000000000000000))
(assert (= var4404892 temp10842_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp10842_221 #x0000000000000001))
(assert (= var211058 temp10842_221))
(model-add temp10842_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10842_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10842_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10842_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




