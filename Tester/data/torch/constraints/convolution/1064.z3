(declare-fun temp10149_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10149_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10149_3 () (_ BitVec 64))
(declare-fun temp10149_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10149_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10149_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10149_7 () (_ BitVec 64))
(declare-fun temp10149_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10149_9 () (_ BitVec 64))
(declare-fun temp10149_10 () (_ BitVec 64))
(declare-fun temp10149_11 () (_ BitVec 64))
(declare-fun temp10149_12 () (_ BitVec 64))
(declare-fun temp10149_13 () (_ BitVec 64))
(declare-fun temp10149_14 () (_ BitVec 64))
(declare-fun temp10149_15 () (_ BitVec 64))
(declare-fun temp10149_16 () (_ BitVec 64))
(declare-fun temp10149_17 () (_ BitVec 64))
(declare-fun temp10149_18 () (_ BitVec 64))
(declare-fun temp10149_19 () (_ BitVec 64))
(declare-fun temp10149_20 () (_ BitVec 64))
(declare-fun temp10149_21 () (_ BitVec 64))
(declare-fun temp10149_22 () (_ BitVec 64))
(declare-fun temp10149_23 () (_ BitVec 64))
(declare-fun temp10149_24 () (_ BitVec 64))
(declare-fun temp10149_25 () (_ BitVec 64))
(declare-fun temp10149_26 () (_ BitVec 64))
(declare-fun temp10149_27 () (_ BitVec 64))
(declare-fun temp10149_28 () (_ BitVec 64))
(declare-fun temp10149_29 () (_ BitVec 64))
(declare-fun temp10149_30 () (_ BitVec 64))
(declare-fun temp10149_31 () (_ BitVec 64))
(declare-fun temp10149_32 () (_ BitVec 64))
(declare-fun temp10149_33 () (_ BitVec 64))
(declare-fun temp10149_34 () (_ BitVec 64))
(declare-fun temp10149_35 () (_ BitVec 64))
(declare-fun temp10149_36 () (_ BitVec 64))
(declare-fun temp10149_37 () (_ BitVec 64))
(declare-fun temp10149_38 () (_ BitVec 64))
(declare-fun temp10149_39 () (_ BitVec 64))
(declare-fun temp10149_40 () (_ BitVec 64))
(declare-fun temp10149_41 () (_ BitVec 64))
(declare-fun temp10149_42 () (_ BitVec 64))
(declare-fun temp10149_43 () (_ BitVec 64))
(declare-fun temp10149_44 () (_ BitVec 64))
(declare-fun temp10149_45 () (_ BitVec 64))
(declare-fun temp10149_46 () (_ BitVec 64))
(declare-fun temp10149_47 () (_ BitVec 64))
(declare-fun temp10149_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10149_49 () (_ BitVec 64))
(declare-fun temp10149_50 () (_ BitVec 64))
(declare-fun temp10149_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10149_52 () (_ BitVec 64))
(declare-fun temp10149_53 () (_ BitVec 64))
(declare-fun temp10149_54 () (_ BitVec 64))
(declare-fun temp10149_55 () (_ BitVec 64))
(declare-fun temp10149_56 () (_ BitVec 64))
(declare-fun temp10149_57 () (_ BitVec 64))
(declare-fun temp10149_58 () (_ BitVec 64))
(declare-fun temp10149_59 () (_ BitVec 64))
(declare-fun temp10149_60 () (_ BitVec 64))
(declare-fun temp10149_61 () (_ BitVec 64))
(declare-fun temp10149_62 () (_ BitVec 64))
(declare-fun temp10149_63 () (_ BitVec 64))
(declare-fun temp10149_64 () (_ BitVec 64))
(declare-fun temp10149_65 () (_ BitVec 64))
(declare-fun temp10149_66 () (_ BitVec 64))
(declare-fun temp10149_67 () (_ BitVec 64))
(declare-fun temp10149_68 () (_ BitVec 64))
(declare-fun temp10149_69 () (_ BitVec 64))
(declare-fun temp10149_70 () (_ BitVec 64))
(declare-fun temp10149_71 () (_ BitVec 64))
(declare-fun temp10149_72 () (_ BitVec 64))
(declare-fun temp10149_73 () (_ BitVec 64))
(declare-fun temp10149_74 () (_ BitVec 64))
(declare-fun temp10149_75 () (_ BitVec 64))
(declare-fun temp10149_76 () (_ BitVec 64))
(declare-fun temp10149_77 () (_ BitVec 64))
(declare-fun temp10149_78 () (_ BitVec 64))
(declare-fun temp10149_79 () (_ BitVec 64))
(declare-fun temp10149_80 () (_ BitVec 64))
(declare-fun temp10149_81 () (_ BitVec 64))
(declare-fun temp10149_82 () (_ BitVec 64))
(declare-fun temp10149_83 () (_ BitVec 64))
(declare-fun temp10149_84 () (_ BitVec 64))
(declare-fun temp10149_85 () (_ BitVec 64))
(declare-fun temp10149_86 () (_ BitVec 64))
(declare-fun temp10149_87 () (_ BitVec 64))
(declare-fun temp10149_88 () (_ BitVec 64))
(declare-fun temp10149_89 () (_ BitVec 64))
(declare-fun temp10149_90 () (_ BitVec 64))
(declare-fun temp10149_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10149_92 () (_ BitVec 64))
(declare-fun temp10149_93 () (_ BitVec 64))
(declare-fun temp10149_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10149_95 () (_ BitVec 64))
(declare-fun temp10149_96 () (_ BitVec 64))
(declare-fun temp10149_97 () (_ BitVec 64))
(declare-fun temp10149_98 () (_ BitVec 64))
(declare-fun temp10149_99 () (_ BitVec 64))
(declare-fun temp10149_100 () (_ BitVec 64))
(declare-fun temp10149_101 () (_ BitVec 64))
(declare-fun temp10149_102 () (_ BitVec 64))
(declare-fun temp10149_103 () (_ BitVec 64))
(declare-fun temp10149_104 () (_ BitVec 64))
(declare-fun temp10149_105 () (_ BitVec 64))
(declare-fun temp10149_106 () (_ BitVec 64))
(declare-fun temp10149_107 () (_ BitVec 64))
(declare-fun temp10149_108 () (_ BitVec 64))
(declare-fun temp10149_109 () (_ BitVec 64))
(declare-fun temp10149_110 () (_ BitVec 64))
(declare-fun temp10149_111 () (_ BitVec 64))
(declare-fun temp10149_112 () (_ BitVec 64))
(declare-fun temp10149_113 () (_ BitVec 64))
(declare-fun temp10149_114 () (_ BitVec 64))
(declare-fun temp10149_115 () (_ BitVec 64))
(declare-fun temp10149_116 () (_ BitVec 64))
(declare-fun temp10149_117 () (_ BitVec 64))
(declare-fun temp10149_118 () (_ BitVec 64))
(declare-fun temp10149_119 () (_ BitVec 64))
(declare-fun temp10149_120 () (_ BitVec 64))
(declare-fun temp10149_121 () (_ BitVec 64))
(declare-fun temp10149_122 () (_ BitVec 64))
(declare-fun temp10149_123 () (_ BitVec 64))
(declare-fun temp10149_124 () (_ BitVec 64))
(declare-fun temp10149_125 () (_ BitVec 64))
(declare-fun temp10149_126 () (_ BitVec 64))
(declare-fun temp10149_127 () (_ BitVec 64))
(declare-fun temp10149_128 () (_ BitVec 64))
(declare-fun temp10149_129 () (_ BitVec 64))
(declare-fun temp10149_130 () (_ BitVec 64))
(declare-fun temp10149_131 () (_ BitVec 64))
(declare-fun temp10149_132 () (_ BitVec 64))
(declare-fun temp10149_133 () (_ BitVec 64))
(declare-fun temp10149_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10149_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10149_136 () (_ BitVec 64))
(declare-fun temp10149_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10149_138 () (_ BitVec 64))
(declare-fun temp10149_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10149_140 () (_ BitVec 64))
(declare-fun temp10149_141 () (_ BitVec 64))
(declare-fun temp10149_142 () (_ BitVec 64))
(declare-fun temp10149_143 () (_ BitVec 64))
(declare-fun temp10149_144 () (_ BitVec 64))
(declare-fun temp10149_145 () (_ BitVec 64))
(declare-fun temp10149_146 () (_ BitVec 64))
(declare-fun temp10149_147 () (_ BitVec 64))
(declare-fun temp10149_148 () (_ BitVec 64))
(declare-fun temp10149_149 () (_ BitVec 64))
(declare-fun temp10149_150 () (_ BitVec 64))
(declare-fun temp10149_151 () (_ BitVec 64))
(declare-fun temp10149_152 () (_ BitVec 64))
(declare-fun temp10149_153 () (_ BitVec 64))
(declare-fun temp10149_154 () (_ BitVec 64))
(declare-fun temp10149_155 () (_ BitVec 64))
(declare-fun temp10149_157 () (_ BitVec 64))
(declare-fun temp10149_158 () (_ BitVec 64))
(declare-fun temp10149_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10149_159 () (_ BitVec 64))
(declare-fun temp10149_160 () (_ BitVec 64))
(declare-fun temp10149_162 () (_ BitVec 64))
(declare-fun temp10149_163 () (_ BitVec 64))
(declare-fun temp10149_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10149_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10149_165 () (_ BitVec 64))
(declare-fun temp10149_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10149_167 () (_ BitVec 64))
(declare-fun temp10149_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10149_169 () (_ BitVec 64))
(declare-fun temp10149_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10149_171 () (_ BitVec 64))
(declare-fun temp10149_172 () (_ BitVec 64))
(declare-fun temp10149_173 () (_ BitVec 64))
(declare-fun temp10149_174 () (_ BitVec 64))
(declare-fun temp10149_175 () (_ BitVec 64))
(declare-fun temp10149_176 () (_ BitVec 64))
(declare-fun temp10149_177 () (_ BitVec 64))
(declare-fun temp10149_178 () (_ BitVec 64))
(declare-fun temp10149_179 () (_ BitVec 64))
(declare-fun temp10149_180 () (_ BitVec 64))
(declare-fun temp10149_181 () (_ BitVec 64))
(declare-fun temp10149_182 () (_ BitVec 64))
(declare-fun temp10149_183 () (_ BitVec 64))
(declare-fun temp10149_184 () (_ BitVec 64))
(declare-fun temp10149_185 () (_ BitVec 64))
(declare-fun temp10149_186 () (_ BitVec 64))
(declare-fun temp10149_187 () (_ BitVec 64))
(declare-fun temp10149_188 () (_ BitVec 64))
(declare-fun temp10149_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10149_190 () (_ BitVec 64))
(declare-fun temp10149_192 () (_ BitVec 64))
(declare-fun temp10149_193 () (_ BitVec 64))
(declare-fun temp10149_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10149_194 () (_ BitVec 64))
(declare-fun temp10149_195 () (_ BitVec 64))
(declare-fun temp10149_197 () (_ BitVec 64))
(declare-fun temp10149_198 () (_ BitVec 64))
(declare-fun temp10149_196 () (_ BitVec 64))
(declare-fun temp10149_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10149_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10149_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10149_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10149_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10149_204 () (_ BitVec 64))
(declare-fun temp10149_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10149_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10149_207 () (_ BitVec 64))
(declare-fun temp10149_208 () (_ BitVec 64))
(declare-fun temp10149_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10149_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10149_211 () (_ BitVec 64))
(declare-fun temp10149_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10149_213 () (_ BitVec 64))
(declare-fun temp10149_214 () (_ BitVec 64))
(declare-fun temp10149_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10149_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10149_217 () (_ BitVec 64))
(declare-fun temp10149_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10149_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10149_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4993424 () (_ BitVec 64))
(declare-fun var211820 () (_ BitVec 64))
(declare-fun temp10149_221 () (_ BitVec 64))
(declare-fun var211821 () (_ BitVec 64))
(declare-fun temp10149_222 () (_ BitVec 64))
(assert (= temp10149_1 #x0000000000000001))
(assert (= var77203 temp10149_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10149_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10149_2)))
(assert (= temp10149_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10149_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10149_4 #x0000000000000000))
(assert (= var210941 temp10149_4))
(assert (= temp10149_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10149_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10149_6 #x0000000000000000))
(assert (= var210986 temp10149_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10149_7 #x0000000000000000))
(assert (= temp10149_8 temp10149_7))
(assert (= temp10149_9 (select ARGNAME_padding_NAMEEND_VAL temp10149_8)))
(assert (= temp10149_10 #x0000000000000001))
(assert (= temp10149_11 temp10149_10))
(assert (= temp10149_12 (select ARGNAME_padding_NAMEEND_VAL temp10149_11)))
(assert (= temp10149_13 #x0000000000000002))
(assert (= temp10149_14 temp10149_13))
(assert (= temp10149_15 (select ARGNAME_padding_NAMEEND_VAL temp10149_14)))
(assert (= temp10149_16 #x0000000000000003))
(assert (= temp10149_17 temp10149_16))
(assert (= temp10149_18 (select ARGNAME_padding_NAMEEND_VAL temp10149_17)))
(assert (= temp10149_19 #x0000000000000004))
(assert (= temp10149_20 temp10149_19))
(assert (= temp10149_21 (select ARGNAME_padding_NAMEEND_VAL temp10149_20)))
(assert (= temp10149_22 #x0000000000000005))
(assert (= temp10149_23 temp10149_22))
(assert (= temp10149_24 (select ARGNAME_padding_NAMEEND_VAL temp10149_23)))
(assert (= temp10149_25 #x0000000000000000))
(assert (= temp10149_26 #x0000000000000000))
(assert (= temp10149_27 temp10149_26))
(assert (= temp10149_28 (select ARGNAME_padding_NAMEEND_VAL temp10149_27)))
(assert (= temp10149_29 #x0000000000000000))
(assert (= temp10149_30 #x0000000000000001))
(assert (= temp10149_31 temp10149_30))
(assert (= temp10149_32 (select ARGNAME_padding_NAMEEND_VAL temp10149_31)))
(assert (= temp10149_33 #x0000000000000000))
(assert (= temp10149_34 #x0000000000000002))
(assert (= temp10149_35 temp10149_34))
(assert (= temp10149_36 (select ARGNAME_padding_NAMEEND_VAL temp10149_35)))
(assert (= temp10149_37 #x0000000000000000))
(assert (= temp10149_38 #x0000000000000003))
(assert (= temp10149_39 temp10149_38))
(assert (= temp10149_40 (select ARGNAME_padding_NAMEEND_VAL temp10149_39)))
(assert (= temp10149_41 #x0000000000000000))
(assert (= temp10149_42 #x0000000000000004))
(assert (= temp10149_43 temp10149_42))
(assert (= temp10149_44 (select ARGNAME_padding_NAMEEND_VAL temp10149_43)))
(assert (= temp10149_45 #x0000000000000000))
(assert (= temp10149_46 #x0000000000000005))
(assert (= temp10149_47 temp10149_46))
(assert (= temp10149_48 (select ARGNAME_padding_NAMEEND_VAL temp10149_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10149_28 temp10149_25)
             (bvslt temp10149_32 temp10149_29)
             (bvslt temp10149_36 temp10149_33)
             (bvslt temp10149_40 temp10149_37)
             (bvslt temp10149_44 temp10149_41)
             (bvslt temp10149_48 temp10149_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10149_49 #x0000000000000000))
(assert (= var1191714 temp10149_49))
(assert (= temp10149_50 #x0000000000000000))
(assert (= temp10149_51 temp10149_50))
(assert (= temp10149_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10149_51)))
(assert (= temp10149_53 #x0000000000000001))
(assert (= temp10149_54 temp10149_53))
(assert (= temp10149_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10149_54)))
(assert (= temp10149_56 #x0000000000000002))
(assert (= temp10149_57 temp10149_56))
(assert (= temp10149_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10149_57)))
(assert (= temp10149_59 #x0000000000000003))
(assert (= temp10149_60 temp10149_59))
(assert (= temp10149_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10149_60)))
(assert (= temp10149_62 #x0000000000000004))
(assert (= temp10149_63 temp10149_62))
(assert (= temp10149_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10149_63)))
(assert (= temp10149_65 #x0000000000000005))
(assert (= temp10149_66 temp10149_65))
(assert (= temp10149_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10149_66)))
(assert (= temp10149_68 #x0000000000000000))
(assert (= temp10149_69 #x0000000000000000))
(assert (= temp10149_70 temp10149_69))
(assert (= temp10149_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10149_70)))
(assert (= temp10149_72 #x0000000000000000))
(assert (= temp10149_73 #x0000000000000001))
(assert (= temp10149_74 temp10149_73))
(assert (= temp10149_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10149_74)))
(assert (= temp10149_76 #x0000000000000000))
(assert (= temp10149_77 #x0000000000000002))
(assert (= temp10149_78 temp10149_77))
(assert (= temp10149_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10149_78)))
(assert (= temp10149_80 #x0000000000000000))
(assert (= temp10149_81 #x0000000000000003))
(assert (= temp10149_82 temp10149_81))
(assert (= temp10149_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10149_82)))
(assert (= temp10149_84 #x0000000000000000))
(assert (= temp10149_85 #x0000000000000004))
(assert (= temp10149_86 temp10149_85))
(assert (= temp10149_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10149_86)))
(assert (= temp10149_88 #x0000000000000000))
(assert (= temp10149_89 #x0000000000000005))
(assert (= temp10149_90 temp10149_89))
(assert (= temp10149_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10149_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10149_71 temp10149_68)
             (bvslt temp10149_75 temp10149_72)
             (bvslt temp10149_79 temp10149_76)
             (bvslt temp10149_83 temp10149_80)
             (bvslt temp10149_87 temp10149_84)
             (bvslt temp10149_91 temp10149_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10149_92 #x0000000000000000))
(assert (= var1191725 temp10149_92))
(assert (= temp10149_93 #x0000000000000000))
(assert (= temp10149_94 temp10149_93))
(assert (= temp10149_95 (select ARGNAME_stride_NAMEEND_VAL temp10149_94)))
(assert (= temp10149_96 #x0000000000000001))
(assert (= temp10149_97 temp10149_96))
(assert (= temp10149_98 (select ARGNAME_stride_NAMEEND_VAL temp10149_97)))
(assert (= temp10149_99 #x0000000000000002))
(assert (= temp10149_100 temp10149_99))
(assert (= temp10149_101 (select ARGNAME_stride_NAMEEND_VAL temp10149_100)))
(assert (= temp10149_102 #x0000000000000003))
(assert (= temp10149_103 temp10149_102))
(assert (= temp10149_104 (select ARGNAME_stride_NAMEEND_VAL temp10149_103)))
(assert (= temp10149_105 #x0000000000000004))
(assert (= temp10149_106 temp10149_105))
(assert (= temp10149_107 (select ARGNAME_stride_NAMEEND_VAL temp10149_106)))
(assert (= temp10149_108 #x0000000000000005))
(assert (= temp10149_109 temp10149_108))
(assert (= temp10149_110 (select ARGNAME_stride_NAMEEND_VAL temp10149_109)))
(assert (= temp10149_111 #x0000000000000000))
(assert (= temp10149_112 #x0000000000000000))
(assert (= temp10149_113 temp10149_112))
(assert (= temp10149_114 (select ARGNAME_stride_NAMEEND_VAL temp10149_113)))
(assert (= temp10149_115 #x0000000000000000))
(assert (= temp10149_116 #x0000000000000001))
(assert (= temp10149_117 temp10149_116))
(assert (= temp10149_118 (select ARGNAME_stride_NAMEEND_VAL temp10149_117)))
(assert (= temp10149_119 #x0000000000000000))
(assert (= temp10149_120 #x0000000000000002))
(assert (= temp10149_121 temp10149_120))
(assert (= temp10149_122 (select ARGNAME_stride_NAMEEND_VAL temp10149_121)))
(assert (= temp10149_123 #x0000000000000000))
(assert (= temp10149_124 #x0000000000000003))
(assert (= temp10149_125 temp10149_124))
(assert (= temp10149_126 (select ARGNAME_stride_NAMEEND_VAL temp10149_125)))
(assert (= temp10149_127 #x0000000000000000))
(assert (= temp10149_128 #x0000000000000004))
(assert (= temp10149_129 temp10149_128))
(assert (= temp10149_130 (select ARGNAME_stride_NAMEEND_VAL temp10149_129)))
(assert (= temp10149_131 #x0000000000000000))
(assert (= temp10149_132 #x0000000000000005))
(assert (= temp10149_133 temp10149_132))
(assert (= temp10149_134 (select ARGNAME_stride_NAMEEND_VAL temp10149_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10149_114 temp10149_111)
             (bvsle temp10149_118 temp10149_115)
             (bvsle temp10149_122 temp10149_119)
             (bvsle temp10149_126 temp10149_123)
             (bvsle temp10149_130 temp10149_127)
             (bvsle temp10149_134 temp10149_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10149_135 #x0000000000000000))
(assert (= var1191735 temp10149_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10149_136 #x0000000000000001))
(assert (= var1191747 temp10149_136))
(assert (= temp10149_137 #x0000000000000000))
(assert (= var1179826 temp10149_137))
(assert (= temp10149_138 #x0000000000000000))
(assert (= temp10149_139 temp10149_138))
(assert (= temp10149_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10149_139)))
(assert (= temp10149_141 #x0000000000000001))
(assert (= temp10149_142 temp10149_141))
(assert (= temp10149_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10149_142)))
(assert (= temp10149_144 #x0000000000000002))
(assert (= temp10149_145 temp10149_144))
(assert (= temp10149_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10149_145)))
(assert (= temp10149_147 #x0000000000000003))
(assert (= temp10149_148 temp10149_147))
(assert (= temp10149_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10149_148)))
(assert (= temp10149_150 #x0000000000000004))
(assert (= temp10149_151 temp10149_150))
(assert (= temp10149_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10149_151)))
(assert (= temp10149_153 #x0000000000000005))
(assert (= temp10149_154 temp10149_153))
(assert (= temp10149_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10149_154)))
(assert (= temp10149_157 var1179826))
(assert (= temp10149_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10149_157)))
(assert (= temp10149_156 temp10149_158))
(assert (= var1191780
   (ite (bvslt temp10149_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10149_159 #x0000000000000000))
(assert (= var1191780 temp10149_159))
(assert (= temp10149_160 #x0000000000000000))
(assert (= var1179826 temp10149_160))
(assert (= temp10149_162 var1179826))
(assert (= temp10149_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10149_162)))
(assert (= temp10149_161 temp10149_163))
(assert (= var1191802 (bvsmod temp10149_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10149_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10149_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10149_165 #x0000000000000001))
(assert (= var1191803 temp10149_165))
(assert (= temp10149_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10149_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10149_167 #x0000000000000001))
(assert (= var1191823 temp10149_167))
(assert (= temp10149_168 #x0000000000000001))
(assert (= var1180714 temp10149_168))
(assert (= temp10149_169 #x0000000000000000))
(assert (= temp10149_170 temp10149_169))
(assert (= temp10149_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10149_170)))
(assert (= temp10149_172 #x0000000000000001))
(assert (= temp10149_173 temp10149_172))
(assert (= temp10149_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10149_173)))
(assert (= temp10149_175 #x0000000000000002))
(assert (= temp10149_176 temp10149_175))
(assert (= temp10149_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10149_176)))
(assert (= temp10149_178 #x0000000000000003))
(assert (= temp10149_179 temp10149_178))
(assert (= temp10149_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10149_179)))
(assert (= temp10149_181 #x0000000000000004))
(assert (= temp10149_182 temp10149_181))
(assert (= temp10149_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10149_182)))
(assert (= temp10149_184 #x0000000000000005))
(assert (= temp10149_185 temp10149_184))
(assert (= temp10149_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10149_185)))
(assert (= temp10149_187 #x0000000000000000))
(assert (= temp10149_188
   (ite (bvslt var1180714 temp10149_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10149_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10149_188)))
(assert (= var1191831 temp10149_189))
(assert (bvslt (ite (bvslt var1180714 temp10149_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10149_190 #x0000000000000001))
(assert (= var1180714 temp10149_190))
(assert (= temp10149_192 var1180714))
(assert (= temp10149_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10149_192)))
(assert (= temp10149_191 temp10149_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10149_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10149_194 #x0000000000000001))
(assert (= var1191836 temp10149_194))
(assert (= temp10149_195 #x0000000000000000))
(assert (= var1179826 temp10149_195))
(assert (= temp10149_197 var1179826))
(assert (= temp10149_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10149_197)))
(assert (= temp10149_196 temp10149_198))
(assert (= temp10149_199 #x0000000000000002))
(assert (= var1586025 temp10149_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10149_200 #x0000000000000001))
(assert (= var1191993 temp10149_200))
(assert (= temp10149_201 #x0000000000000001))
(assert (= var2700303 temp10149_201))
(assert (= temp10149_202 #x0000000000000001))
(assert (= var2962447 temp10149_202))
(assert (= temp10149_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10149_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10149_204 #x0000000000000001))
(assert (= var211058 temp10149_204))
(assert (= temp10149_205 #x0000000000000001))
(assert (= var211188 temp10149_205))
(assert (= var3879401 var211188))
(assert (= temp10149_206 #x0000000000000000))
(assert (= var3866802 temp10149_206))
(assert (= temp10149_207 #x0000000000000000))
(assert (= temp10149_208
   (ite (bvslt var3866802 temp10149_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10149_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10149_208)))
(assert (= var3879420 temp10149_209))
(assert (bvslt (ite (bvslt var3866802 temp10149_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10149_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10149_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10149_211 #x0000000000000000))
(assert (= var3879421 temp10149_211))
(assert (= temp10149_212 #x0000000000000001))
(assert (= var3867690 temp10149_212))
(assert (= temp10149_213 #x0000000000000000))
(assert (= temp10149_214
   (ite (bvslt var3867690 temp10149_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10149_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10149_214)))
(assert (= var3879423 temp10149_215))
(assert (bvslt (ite (bvslt var3867690 temp10149_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10149_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10149_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10149_217 #x0000000000000001))
(assert (= var3879424 temp10149_217))
(assert (= temp10149_218 #x0000000000000000))
(assert (= var4079423 temp10149_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10149_219 #x0000000000000002))
(assert (= var4208259 temp10149_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10149_220 #x0000000000000000))
(assert (= var4273820 temp10149_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4993424 var211201))
(assert (= var211820 var210913))
(assert (= temp10149_221 #x0000000000000000))
(assert (= var211821
   (ite (distinct var211820 temp10149_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10149_222 #x0000000000000001))
(assert (= var211058 temp10149_222))
(model-add temp10149_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10149_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10149_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10149_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






