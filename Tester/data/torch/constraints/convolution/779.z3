(declare-fun temp1038_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp1038_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1038_3 () (_ BitVec 64))
(declare-fun temp1038_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1038_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp1038_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1038_7 () (_ BitVec 64))
(declare-fun temp1038_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1038_9 () (_ BitVec 64))
(declare-fun temp1038_10 () (_ BitVec 64))
(declare-fun temp1038_11 () (_ BitVec 64))
(declare-fun temp1038_12 () (_ BitVec 64))
(declare-fun temp1038_13 () (_ BitVec 64))
(declare-fun temp1038_14 () (_ BitVec 64))
(declare-fun temp1038_15 () (_ BitVec 64))
(declare-fun temp1038_16 () (_ BitVec 64))
(declare-fun temp1038_17 () (_ BitVec 64))
(declare-fun temp1038_18 () (_ BitVec 64))
(declare-fun temp1038_19 () (_ BitVec 64))
(declare-fun temp1038_20 () (_ BitVec 64))
(declare-fun temp1038_21 () (_ BitVec 64))
(declare-fun temp1038_22 () (_ BitVec 64))
(declare-fun temp1038_23 () (_ BitVec 64))
(declare-fun temp1038_24 () (_ BitVec 64))
(declare-fun temp1038_25 () (_ BitVec 64))
(declare-fun temp1038_26 () (_ BitVec 64))
(declare-fun temp1038_27 () (_ BitVec 64))
(declare-fun temp1038_28 () (_ BitVec 64))
(declare-fun temp1038_29 () (_ BitVec 64))
(declare-fun temp1038_30 () (_ BitVec 64))
(declare-fun temp1038_31 () (_ BitVec 64))
(declare-fun temp1038_32 () (_ BitVec 64))
(declare-fun temp1038_33 () (_ BitVec 64))
(declare-fun temp1038_34 () (_ BitVec 64))
(declare-fun temp1038_35 () (_ BitVec 64))
(declare-fun temp1038_36 () (_ BitVec 64))
(declare-fun temp1038_37 () (_ BitVec 64))
(declare-fun temp1038_38 () (_ BitVec 64))
(declare-fun temp1038_39 () (_ BitVec 64))
(declare-fun temp1038_40 () (_ BitVec 64))
(declare-fun temp1038_41 () (_ BitVec 64))
(declare-fun temp1038_42 () (_ BitVec 64))
(declare-fun temp1038_43 () (_ BitVec 64))
(declare-fun temp1038_44 () (_ BitVec 64))
(declare-fun temp1038_45 () (_ BitVec 64))
(declare-fun temp1038_46 () (_ BitVec 64))
(declare-fun temp1038_47 () (_ BitVec 64))
(declare-fun temp1038_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp1038_49 () (_ BitVec 64))
(declare-fun temp1038_50 () (_ BitVec 64))
(declare-fun temp1038_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1038_52 () (_ BitVec 64))
(declare-fun temp1038_53 () (_ BitVec 64))
(declare-fun temp1038_54 () (_ BitVec 64))
(declare-fun temp1038_55 () (_ BitVec 64))
(declare-fun temp1038_56 () (_ BitVec 64))
(declare-fun temp1038_57 () (_ BitVec 64))
(declare-fun temp1038_58 () (_ BitVec 64))
(declare-fun temp1038_59 () (_ BitVec 64))
(declare-fun temp1038_60 () (_ BitVec 64))
(declare-fun temp1038_61 () (_ BitVec 64))
(declare-fun temp1038_62 () (_ BitVec 64))
(declare-fun temp1038_63 () (_ BitVec 64))
(declare-fun temp1038_64 () (_ BitVec 64))
(declare-fun temp1038_65 () (_ BitVec 64))
(declare-fun temp1038_66 () (_ BitVec 64))
(declare-fun temp1038_67 () (_ BitVec 64))
(declare-fun temp1038_68 () (_ BitVec 64))
(declare-fun temp1038_69 () (_ BitVec 64))
(declare-fun temp1038_70 () (_ BitVec 64))
(declare-fun temp1038_71 () (_ BitVec 64))
(declare-fun temp1038_72 () (_ BitVec 64))
(declare-fun temp1038_73 () (_ BitVec 64))
(declare-fun temp1038_74 () (_ BitVec 64))
(declare-fun temp1038_75 () (_ BitVec 64))
(declare-fun temp1038_76 () (_ BitVec 64))
(declare-fun temp1038_77 () (_ BitVec 64))
(declare-fun temp1038_78 () (_ BitVec 64))
(declare-fun temp1038_79 () (_ BitVec 64))
(declare-fun temp1038_80 () (_ BitVec 64))
(declare-fun temp1038_81 () (_ BitVec 64))
(declare-fun temp1038_82 () (_ BitVec 64))
(declare-fun temp1038_83 () (_ BitVec 64))
(declare-fun temp1038_84 () (_ BitVec 64))
(declare-fun temp1038_85 () (_ BitVec 64))
(declare-fun temp1038_86 () (_ BitVec 64))
(declare-fun temp1038_87 () (_ BitVec 64))
(declare-fun temp1038_88 () (_ BitVec 64))
(declare-fun temp1038_89 () (_ BitVec 64))
(declare-fun temp1038_90 () (_ BitVec 64))
(declare-fun temp1038_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp1038_92 () (_ BitVec 64))
(declare-fun temp1038_93 () (_ BitVec 64))
(declare-fun temp1038_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1038_95 () (_ BitVec 64))
(declare-fun temp1038_96 () (_ BitVec 64))
(declare-fun temp1038_97 () (_ BitVec 64))
(declare-fun temp1038_98 () (_ BitVec 64))
(declare-fun temp1038_99 () (_ BitVec 64))
(declare-fun temp1038_100 () (_ BitVec 64))
(declare-fun temp1038_101 () (_ BitVec 64))
(declare-fun temp1038_102 () (_ BitVec 64))
(declare-fun temp1038_103 () (_ BitVec 64))
(declare-fun temp1038_104 () (_ BitVec 64))
(declare-fun temp1038_105 () (_ BitVec 64))
(declare-fun temp1038_106 () (_ BitVec 64))
(declare-fun temp1038_107 () (_ BitVec 64))
(declare-fun temp1038_108 () (_ BitVec 64))
(declare-fun temp1038_109 () (_ BitVec 64))
(declare-fun temp1038_110 () (_ BitVec 64))
(declare-fun temp1038_111 () (_ BitVec 64))
(declare-fun temp1038_112 () (_ BitVec 64))
(declare-fun temp1038_113 () (_ BitVec 64))
(declare-fun temp1038_114 () (_ BitVec 64))
(declare-fun temp1038_115 () (_ BitVec 64))
(declare-fun temp1038_116 () (_ BitVec 64))
(declare-fun temp1038_117 () (_ BitVec 64))
(declare-fun temp1038_118 () (_ BitVec 64))
(declare-fun temp1038_119 () (_ BitVec 64))
(declare-fun temp1038_120 () (_ BitVec 64))
(declare-fun temp1038_121 () (_ BitVec 64))
(declare-fun temp1038_122 () (_ BitVec 64))
(declare-fun temp1038_123 () (_ BitVec 64))
(declare-fun temp1038_124 () (_ BitVec 64))
(declare-fun temp1038_125 () (_ BitVec 64))
(declare-fun temp1038_126 () (_ BitVec 64))
(declare-fun temp1038_127 () (_ BitVec 64))
(declare-fun temp1038_128 () (_ BitVec 64))
(declare-fun temp1038_129 () (_ BitVec 64))
(declare-fun temp1038_130 () (_ BitVec 64))
(declare-fun temp1038_131 () (_ BitVec 64))
(declare-fun temp1038_132 () (_ BitVec 64))
(declare-fun temp1038_133 () (_ BitVec 64))
(declare-fun temp1038_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp1038_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp1038_136 () (_ BitVec 64))
(declare-fun temp1038_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp1038_138 () (_ BitVec 64))
(declare-fun temp1038_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1038_140 () (_ BitVec 64))
(declare-fun temp1038_141 () (_ BitVec 64))
(declare-fun temp1038_142 () (_ BitVec 64))
(declare-fun temp1038_143 () (_ BitVec 64))
(declare-fun temp1038_144 () (_ BitVec 64))
(declare-fun temp1038_145 () (_ BitVec 64))
(declare-fun temp1038_146 () (_ BitVec 64))
(declare-fun temp1038_147 () (_ BitVec 64))
(declare-fun temp1038_148 () (_ BitVec 64))
(declare-fun temp1038_149 () (_ BitVec 64))
(declare-fun temp1038_150 () (_ BitVec 64))
(declare-fun temp1038_151 () (_ BitVec 64))
(declare-fun temp1038_152 () (_ BitVec 64))
(declare-fun temp1038_153 () (_ BitVec 64))
(declare-fun temp1038_154 () (_ BitVec 64))
(declare-fun temp1038_155 () (_ BitVec 64))
(declare-fun temp1038_157 () (_ BitVec 64))
(declare-fun temp1038_158 () (_ BitVec 64))
(declare-fun temp1038_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp1038_159 () (_ BitVec 64))
(declare-fun temp1038_160 () (_ BitVec 64))
(declare-fun temp1038_162 () (_ BitVec 64))
(declare-fun temp1038_163 () (_ BitVec 64))
(declare-fun temp1038_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp1038_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp1038_165 () (_ BitVec 64))
(declare-fun temp1038_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp1038_167 () (_ BitVec 64))
(declare-fun temp1038_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp1038_169 () (_ BitVec 64))
(declare-fun temp1038_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1038_171 () (_ BitVec 64))
(declare-fun temp1038_172 () (_ BitVec 64))
(declare-fun temp1038_173 () (_ BitVec 64))
(declare-fun temp1038_174 () (_ BitVec 64))
(declare-fun temp1038_175 () (_ BitVec 64))
(declare-fun temp1038_176 () (_ BitVec 64))
(declare-fun temp1038_177 () (_ BitVec 64))
(declare-fun temp1038_178 () (_ BitVec 64))
(declare-fun temp1038_179 () (_ BitVec 64))
(declare-fun temp1038_180 () (_ BitVec 64))
(declare-fun temp1038_181 () (_ BitVec 64))
(declare-fun temp1038_182 () (_ BitVec 64))
(declare-fun temp1038_183 () (_ BitVec 64))
(declare-fun temp1038_184 () (_ BitVec 64))
(declare-fun temp1038_185 () (_ BitVec 64))
(declare-fun temp1038_186 () (_ BitVec 64))
(declare-fun temp1038_187 () (_ BitVec 64))
(declare-fun temp1038_188 () (_ BitVec 64))
(declare-fun temp1038_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp1038_190 () (_ BitVec 64))
(declare-fun temp1038_192 () (_ BitVec 64))
(declare-fun temp1038_193 () (_ BitVec 64))
(declare-fun temp1038_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp1038_194 () (_ BitVec 64))
(declare-fun temp1038_195 () (_ BitVec 64))
(declare-fun temp1038_197 () (_ BitVec 64))
(declare-fun temp1038_198 () (_ BitVec 64))
(declare-fun temp1038_196 () (_ BitVec 64))
(declare-fun temp1038_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp1038_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp1038_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp1038_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp1038_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp1038_204 () (_ BitVec 64))
(declare-fun temp1038_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp1038_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp1038_207 () (_ BitVec 64))
(declare-fun temp1038_208 () (_ BitVec 64))
(declare-fun temp1038_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp1038_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp1038_211 () (_ BitVec 64))
(declare-fun temp1038_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp1038_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp1038_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp1038_215 () (_ BitVec 64))
(assert (= temp1038_1 #x0000000000000001))
(assert (= var77203 temp1038_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp1038_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp1038_2)))
(assert (= temp1038_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1038_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1038_4 #x0000000000000000))
(assert (= var210941 temp1038_4))
(assert (= temp1038_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp1038_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1038_6 #x0000000000000000))
(assert (= var210986 temp1038_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp1038_7 #x0000000000000000))
(assert (= temp1038_8 temp1038_7))
(assert (= temp1038_9 (select ARGNAME_padding_NAMEEND_VAL temp1038_8)))
(assert (= temp1038_10 #x0000000000000001))
(assert (= temp1038_11 temp1038_10))
(assert (= temp1038_12 (select ARGNAME_padding_NAMEEND_VAL temp1038_11)))
(assert (= temp1038_13 #x0000000000000002))
(assert (= temp1038_14 temp1038_13))
(assert (= temp1038_15 (select ARGNAME_padding_NAMEEND_VAL temp1038_14)))
(assert (= temp1038_16 #x0000000000000003))
(assert (= temp1038_17 temp1038_16))
(assert (= temp1038_18 (select ARGNAME_padding_NAMEEND_VAL temp1038_17)))
(assert (= temp1038_19 #x0000000000000004))
(assert (= temp1038_20 temp1038_19))
(assert (= temp1038_21 (select ARGNAME_padding_NAMEEND_VAL temp1038_20)))
(assert (= temp1038_22 #x0000000000000005))
(assert (= temp1038_23 temp1038_22))
(assert (= temp1038_24 (select ARGNAME_padding_NAMEEND_VAL temp1038_23)))
(assert (= temp1038_25 #x0000000000000000))
(assert (= temp1038_26 #x0000000000000000))
(assert (= temp1038_27 temp1038_26))
(assert (= temp1038_28 (select ARGNAME_padding_NAMEEND_VAL temp1038_27)))
(assert (= temp1038_29 #x0000000000000000))
(assert (= temp1038_30 #x0000000000000001))
(assert (= temp1038_31 temp1038_30))
(assert (= temp1038_32 (select ARGNAME_padding_NAMEEND_VAL temp1038_31)))
(assert (= temp1038_33 #x0000000000000000))
(assert (= temp1038_34 #x0000000000000002))
(assert (= temp1038_35 temp1038_34))
(assert (= temp1038_36 (select ARGNAME_padding_NAMEEND_VAL temp1038_35)))
(assert (= temp1038_37 #x0000000000000000))
(assert (= temp1038_38 #x0000000000000003))
(assert (= temp1038_39 temp1038_38))
(assert (= temp1038_40 (select ARGNAME_padding_NAMEEND_VAL temp1038_39)))
(assert (= temp1038_41 #x0000000000000000))
(assert (= temp1038_42 #x0000000000000004))
(assert (= temp1038_43 temp1038_42))
(assert (= temp1038_44 (select ARGNAME_padding_NAMEEND_VAL temp1038_43)))
(assert (= temp1038_45 #x0000000000000000))
(assert (= temp1038_46 #x0000000000000005))
(assert (= temp1038_47 temp1038_46))
(assert (= temp1038_48 (select ARGNAME_padding_NAMEEND_VAL temp1038_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp1038_28 temp1038_25)
             (bvslt temp1038_32 temp1038_29)
             (bvslt temp1038_36 temp1038_33)
             (bvslt temp1038_40 temp1038_37)
             (bvslt temp1038_44 temp1038_41)
             (bvslt temp1038_48 temp1038_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1038_49 #x0000000000000000))
(assert (= var1191714 temp1038_49))
(assert (= temp1038_50 #x0000000000000000))
(assert (= temp1038_51 temp1038_50))
(assert (= temp1038_52 (select ARGNAME_output_padding_NAMEEND_VAL temp1038_51)))
(assert (= temp1038_53 #x0000000000000001))
(assert (= temp1038_54 temp1038_53))
(assert (= temp1038_55 (select ARGNAME_output_padding_NAMEEND_VAL temp1038_54)))
(assert (= temp1038_56 #x0000000000000002))
(assert (= temp1038_57 temp1038_56))
(assert (= temp1038_58 (select ARGNAME_output_padding_NAMEEND_VAL temp1038_57)))
(assert (= temp1038_59 #x0000000000000003))
(assert (= temp1038_60 temp1038_59))
(assert (= temp1038_61 (select ARGNAME_output_padding_NAMEEND_VAL temp1038_60)))
(assert (= temp1038_62 #x0000000000000004))
(assert (= temp1038_63 temp1038_62))
(assert (= temp1038_64 (select ARGNAME_output_padding_NAMEEND_VAL temp1038_63)))
(assert (= temp1038_65 #x0000000000000005))
(assert (= temp1038_66 temp1038_65))
(assert (= temp1038_67 (select ARGNAME_output_padding_NAMEEND_VAL temp1038_66)))
(assert (= temp1038_68 #x0000000000000000))
(assert (= temp1038_69 #x0000000000000000))
(assert (= temp1038_70 temp1038_69))
(assert (= temp1038_71 (select ARGNAME_output_padding_NAMEEND_VAL temp1038_70)))
(assert (= temp1038_72 #x0000000000000000))
(assert (= temp1038_73 #x0000000000000001))
(assert (= temp1038_74 temp1038_73))
(assert (= temp1038_75 (select ARGNAME_output_padding_NAMEEND_VAL temp1038_74)))
(assert (= temp1038_76 #x0000000000000000))
(assert (= temp1038_77 #x0000000000000002))
(assert (= temp1038_78 temp1038_77))
(assert (= temp1038_79 (select ARGNAME_output_padding_NAMEEND_VAL temp1038_78)))
(assert (= temp1038_80 #x0000000000000000))
(assert (= temp1038_81 #x0000000000000003))
(assert (= temp1038_82 temp1038_81))
(assert (= temp1038_83 (select ARGNAME_output_padding_NAMEEND_VAL temp1038_82)))
(assert (= temp1038_84 #x0000000000000000))
(assert (= temp1038_85 #x0000000000000004))
(assert (= temp1038_86 temp1038_85))
(assert (= temp1038_87 (select ARGNAME_output_padding_NAMEEND_VAL temp1038_86)))
(assert (= temp1038_88 #x0000000000000000))
(assert (= temp1038_89 #x0000000000000005))
(assert (= temp1038_90 temp1038_89))
(assert (= temp1038_91 (select ARGNAME_output_padding_NAMEEND_VAL temp1038_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp1038_71 temp1038_68)
             (bvslt temp1038_75 temp1038_72)
             (bvslt temp1038_79 temp1038_76)
             (bvslt temp1038_83 temp1038_80)
             (bvslt temp1038_87 temp1038_84)
             (bvslt temp1038_91 temp1038_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1038_92 #x0000000000000000))
(assert (= var1191725 temp1038_92))
(assert (= temp1038_93 #x0000000000000000))
(assert (= temp1038_94 temp1038_93))
(assert (= temp1038_95 (select ARGNAME_stride_NAMEEND_VAL temp1038_94)))
(assert (= temp1038_96 #x0000000000000001))
(assert (= temp1038_97 temp1038_96))
(assert (= temp1038_98 (select ARGNAME_stride_NAMEEND_VAL temp1038_97)))
(assert (= temp1038_99 #x0000000000000002))
(assert (= temp1038_100 temp1038_99))
(assert (= temp1038_101 (select ARGNAME_stride_NAMEEND_VAL temp1038_100)))
(assert (= temp1038_102 #x0000000000000003))
(assert (= temp1038_103 temp1038_102))
(assert (= temp1038_104 (select ARGNAME_stride_NAMEEND_VAL temp1038_103)))
(assert (= temp1038_105 #x0000000000000004))
(assert (= temp1038_106 temp1038_105))
(assert (= temp1038_107 (select ARGNAME_stride_NAMEEND_VAL temp1038_106)))
(assert (= temp1038_108 #x0000000000000005))
(assert (= temp1038_109 temp1038_108))
(assert (= temp1038_110 (select ARGNAME_stride_NAMEEND_VAL temp1038_109)))
(assert (= temp1038_111 #x0000000000000000))
(assert (= temp1038_112 #x0000000000000000))
(assert (= temp1038_113 temp1038_112))
(assert (= temp1038_114 (select ARGNAME_stride_NAMEEND_VAL temp1038_113)))
(assert (= temp1038_115 #x0000000000000000))
(assert (= temp1038_116 #x0000000000000001))
(assert (= temp1038_117 temp1038_116))
(assert (= temp1038_118 (select ARGNAME_stride_NAMEEND_VAL temp1038_117)))
(assert (= temp1038_119 #x0000000000000000))
(assert (= temp1038_120 #x0000000000000002))
(assert (= temp1038_121 temp1038_120))
(assert (= temp1038_122 (select ARGNAME_stride_NAMEEND_VAL temp1038_121)))
(assert (= temp1038_123 #x0000000000000000))
(assert (= temp1038_124 #x0000000000000003))
(assert (= temp1038_125 temp1038_124))
(assert (= temp1038_126 (select ARGNAME_stride_NAMEEND_VAL temp1038_125)))
(assert (= temp1038_127 #x0000000000000000))
(assert (= temp1038_128 #x0000000000000004))
(assert (= temp1038_129 temp1038_128))
(assert (= temp1038_130 (select ARGNAME_stride_NAMEEND_VAL temp1038_129)))
(assert (= temp1038_131 #x0000000000000000))
(assert (= temp1038_132 #x0000000000000005))
(assert (= temp1038_133 temp1038_132))
(assert (= temp1038_134 (select ARGNAME_stride_NAMEEND_VAL temp1038_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp1038_114 temp1038_111)
             (bvsle temp1038_118 temp1038_115)
             (bvsle temp1038_122 temp1038_119)
             (bvsle temp1038_126 temp1038_123)
             (bvsle temp1038_130 temp1038_127)
             (bvsle temp1038_134 temp1038_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1038_135 #x0000000000000000))
(assert (= var1191735 temp1038_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1038_136 #x0000000000000001))
(assert (= var1191747 temp1038_136))
(assert (= temp1038_137 #x0000000000000000))
(assert (= var1179826 temp1038_137))
(assert (= temp1038_138 #x0000000000000000))
(assert (= temp1038_139 temp1038_138))
(assert (= temp1038_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1038_139)))
(assert (= temp1038_141 #x0000000000000001))
(assert (= temp1038_142 temp1038_141))
(assert (= temp1038_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1038_142)))
(assert (= temp1038_144 #x0000000000000002))
(assert (= temp1038_145 temp1038_144))
(assert (= temp1038_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1038_145)))
(assert (= temp1038_147 #x0000000000000003))
(assert (= temp1038_148 temp1038_147))
(assert (= temp1038_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1038_148)))
(assert (= temp1038_150 #x0000000000000004))
(assert (= temp1038_151 temp1038_150))
(assert (= temp1038_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1038_151)))
(assert (= temp1038_153 #x0000000000000005))
(assert (= temp1038_154 temp1038_153))
(assert (= temp1038_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1038_154)))
(assert (= temp1038_157 var1179826))
(assert (= temp1038_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1038_157)))
(assert (= temp1038_156 temp1038_158))
(assert (= var1191780
   (ite (bvslt temp1038_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1038_159 #x0000000000000000))
(assert (= var1191780 temp1038_159))
(assert (= temp1038_160 #x0000000000000000))
(assert (= var1179826 temp1038_160))
(assert (= temp1038_162 var1179826))
(assert (= temp1038_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1038_162)))
(assert (= temp1038_161 temp1038_163))
(assert (= var1191802 (bvsmod temp1038_161 ARGNAME_groups_NAMEEND)))
(assert (= temp1038_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp1038_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp1038_165 #x0000000000000001))
(assert (= var1191803 temp1038_165))
(assert (= temp1038_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp1038_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1038_167 #x0000000000000001))
(assert (= var1191823 temp1038_167))
(assert (= temp1038_168 #x0000000000000001))
(assert (= var1180714 temp1038_168))
(assert (= temp1038_169 #x0000000000000000))
(assert (= temp1038_170 temp1038_169))
(assert (= temp1038_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp1038_170)))
(assert (= temp1038_172 #x0000000000000001))
(assert (= temp1038_173 temp1038_172))
(assert (= temp1038_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp1038_173)))
(assert (= temp1038_175 #x0000000000000002))
(assert (= temp1038_176 temp1038_175))
(assert (= temp1038_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp1038_176)))
(assert (= temp1038_178 #x0000000000000003))
(assert (= temp1038_179 temp1038_178))
(assert (= temp1038_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp1038_179)))
(assert (= temp1038_181 #x0000000000000004))
(assert (= temp1038_182 temp1038_181))
(assert (= temp1038_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp1038_182)))
(assert (= temp1038_184 #x0000000000000005))
(assert (= temp1038_185 temp1038_184))
(assert (= temp1038_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp1038_185)))
(assert (= temp1038_187 #x0000000000000000))
(assert (= temp1038_188
   (ite (bvslt var1180714 temp1038_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp1038_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp1038_188)))
(assert (= var1191831 temp1038_189))
(assert (bvslt (ite (bvslt var1180714 temp1038_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1038_190 #x0000000000000001))
(assert (= var1180714 temp1038_190))
(assert (= temp1038_192 var1180714))
(assert (= temp1038_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1038_192)))
(assert (= temp1038_191 temp1038_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp1038_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp1038_194 #x0000000000000001))
(assert (= var1191836 temp1038_194))
(assert (= temp1038_195 #x0000000000000000))
(assert (= var1179826 temp1038_195))
(assert (= temp1038_197 var1179826))
(assert (= temp1038_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1038_197)))
(assert (= temp1038_196 temp1038_198))
(assert (= temp1038_199 #x0000000000000002))
(assert (= var1586025 temp1038_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp1038_200 #x0000000000000001))
(assert (= var1191993 temp1038_200))
(assert (= temp1038_201 #x0000000000000001))
(assert (= var2700303 temp1038_201))
(assert (= temp1038_202 #x0000000000000001))
(assert (= var2962447 temp1038_202))
(assert (= temp1038_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1038_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1038_204 #x0000000000000001))
(assert (= var211058 temp1038_204))
(assert (= temp1038_205 #x0000000000000001))
(assert (= var211188 temp1038_205))
(assert (= var3879401 var211188))
(assert (= temp1038_206 #x0000000000000000))
(assert (= var3866802 temp1038_206))
(assert (= temp1038_207 #x0000000000000000))
(assert (= temp1038_208
   (ite (bvslt var3866802 temp1038_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp1038_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp1038_208)))
(assert (= var3879420 temp1038_209))
(assert (bvslt (ite (bvslt var3866802 temp1038_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1038_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp1038_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp1038_211 #x0000000000000001))
(assert (= var3879421 temp1038_211))
(assert (= temp1038_212 #x0000000000000000))
(assert (= var4079423 temp1038_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp1038_213 #x0000000000000002))
(assert (= var4208259 temp1038_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1038_214 #x0000000000000000))
(assert (= var4273820 temp1038_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp1038_215 #x0000000000000001))
(assert (= var211058 temp1038_215))
(model-add temp1038_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp1038_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1038_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp1038_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))



