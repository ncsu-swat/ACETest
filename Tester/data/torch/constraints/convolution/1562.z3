(declare-fun temp10877_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10877_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10877_3 () (_ BitVec 64))
(declare-fun temp10877_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10877_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10877_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10877_7 () (_ BitVec 64))
(declare-fun temp10877_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10877_9 () (_ BitVec 64))
(declare-fun temp10877_10 () (_ BitVec 64))
(declare-fun temp10877_11 () (_ BitVec 64))
(declare-fun temp10877_12 () (_ BitVec 64))
(declare-fun temp10877_13 () (_ BitVec 64))
(declare-fun temp10877_14 () (_ BitVec 64))
(declare-fun temp10877_15 () (_ BitVec 64))
(declare-fun temp10877_16 () (_ BitVec 64))
(declare-fun temp10877_17 () (_ BitVec 64))
(declare-fun temp10877_18 () (_ BitVec 64))
(declare-fun temp10877_19 () (_ BitVec 64))
(declare-fun temp10877_20 () (_ BitVec 64))
(declare-fun temp10877_21 () (_ BitVec 64))
(declare-fun temp10877_22 () (_ BitVec 64))
(declare-fun temp10877_23 () (_ BitVec 64))
(declare-fun temp10877_24 () (_ BitVec 64))
(declare-fun temp10877_25 () (_ BitVec 64))
(declare-fun temp10877_26 () (_ BitVec 64))
(declare-fun temp10877_27 () (_ BitVec 64))
(declare-fun temp10877_28 () (_ BitVec 64))
(declare-fun temp10877_29 () (_ BitVec 64))
(declare-fun temp10877_30 () (_ BitVec 64))
(declare-fun temp10877_31 () (_ BitVec 64))
(declare-fun temp10877_32 () (_ BitVec 64))
(declare-fun temp10877_33 () (_ BitVec 64))
(declare-fun temp10877_34 () (_ BitVec 64))
(declare-fun temp10877_35 () (_ BitVec 64))
(declare-fun temp10877_36 () (_ BitVec 64))
(declare-fun temp10877_37 () (_ BitVec 64))
(declare-fun temp10877_38 () (_ BitVec 64))
(declare-fun temp10877_39 () (_ BitVec 64))
(declare-fun temp10877_40 () (_ BitVec 64))
(declare-fun temp10877_41 () (_ BitVec 64))
(declare-fun temp10877_42 () (_ BitVec 64))
(declare-fun temp10877_43 () (_ BitVec 64))
(declare-fun temp10877_44 () (_ BitVec 64))
(declare-fun temp10877_45 () (_ BitVec 64))
(declare-fun temp10877_46 () (_ BitVec 64))
(declare-fun temp10877_47 () (_ BitVec 64))
(declare-fun temp10877_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10877_49 () (_ BitVec 64))
(declare-fun temp10877_50 () (_ BitVec 64))
(declare-fun temp10877_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10877_52 () (_ BitVec 64))
(declare-fun temp10877_53 () (_ BitVec 64))
(declare-fun temp10877_54 () (_ BitVec 64))
(declare-fun temp10877_55 () (_ BitVec 64))
(declare-fun temp10877_56 () (_ BitVec 64))
(declare-fun temp10877_57 () (_ BitVec 64))
(declare-fun temp10877_58 () (_ BitVec 64))
(declare-fun temp10877_59 () (_ BitVec 64))
(declare-fun temp10877_60 () (_ BitVec 64))
(declare-fun temp10877_61 () (_ BitVec 64))
(declare-fun temp10877_62 () (_ BitVec 64))
(declare-fun temp10877_63 () (_ BitVec 64))
(declare-fun temp10877_64 () (_ BitVec 64))
(declare-fun temp10877_65 () (_ BitVec 64))
(declare-fun temp10877_66 () (_ BitVec 64))
(declare-fun temp10877_67 () (_ BitVec 64))
(declare-fun temp10877_68 () (_ BitVec 64))
(declare-fun temp10877_69 () (_ BitVec 64))
(declare-fun temp10877_70 () (_ BitVec 64))
(declare-fun temp10877_71 () (_ BitVec 64))
(declare-fun temp10877_72 () (_ BitVec 64))
(declare-fun temp10877_73 () (_ BitVec 64))
(declare-fun temp10877_74 () (_ BitVec 64))
(declare-fun temp10877_75 () (_ BitVec 64))
(declare-fun temp10877_76 () (_ BitVec 64))
(declare-fun temp10877_77 () (_ BitVec 64))
(declare-fun temp10877_78 () (_ BitVec 64))
(declare-fun temp10877_79 () (_ BitVec 64))
(declare-fun temp10877_80 () (_ BitVec 64))
(declare-fun temp10877_81 () (_ BitVec 64))
(declare-fun temp10877_82 () (_ BitVec 64))
(declare-fun temp10877_83 () (_ BitVec 64))
(declare-fun temp10877_84 () (_ BitVec 64))
(declare-fun temp10877_85 () (_ BitVec 64))
(declare-fun temp10877_86 () (_ BitVec 64))
(declare-fun temp10877_87 () (_ BitVec 64))
(declare-fun temp10877_88 () (_ BitVec 64))
(declare-fun temp10877_89 () (_ BitVec 64))
(declare-fun temp10877_90 () (_ BitVec 64))
(declare-fun temp10877_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10877_92 () (_ BitVec 64))
(declare-fun temp10877_93 () (_ BitVec 64))
(declare-fun temp10877_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10877_95 () (_ BitVec 64))
(declare-fun temp10877_96 () (_ BitVec 64))
(declare-fun temp10877_97 () (_ BitVec 64))
(declare-fun temp10877_98 () (_ BitVec 64))
(declare-fun temp10877_99 () (_ BitVec 64))
(declare-fun temp10877_100 () (_ BitVec 64))
(declare-fun temp10877_101 () (_ BitVec 64))
(declare-fun temp10877_102 () (_ BitVec 64))
(declare-fun temp10877_103 () (_ BitVec 64))
(declare-fun temp10877_104 () (_ BitVec 64))
(declare-fun temp10877_105 () (_ BitVec 64))
(declare-fun temp10877_106 () (_ BitVec 64))
(declare-fun temp10877_107 () (_ BitVec 64))
(declare-fun temp10877_108 () (_ BitVec 64))
(declare-fun temp10877_109 () (_ BitVec 64))
(declare-fun temp10877_110 () (_ BitVec 64))
(declare-fun temp10877_111 () (_ BitVec 64))
(declare-fun temp10877_112 () (_ BitVec 64))
(declare-fun temp10877_113 () (_ BitVec 64))
(declare-fun temp10877_114 () (_ BitVec 64))
(declare-fun temp10877_115 () (_ BitVec 64))
(declare-fun temp10877_116 () (_ BitVec 64))
(declare-fun temp10877_117 () (_ BitVec 64))
(declare-fun temp10877_118 () (_ BitVec 64))
(declare-fun temp10877_119 () (_ BitVec 64))
(declare-fun temp10877_120 () (_ BitVec 64))
(declare-fun temp10877_121 () (_ BitVec 64))
(declare-fun temp10877_122 () (_ BitVec 64))
(declare-fun temp10877_123 () (_ BitVec 64))
(declare-fun temp10877_124 () (_ BitVec 64))
(declare-fun temp10877_125 () (_ BitVec 64))
(declare-fun temp10877_126 () (_ BitVec 64))
(declare-fun temp10877_127 () (_ BitVec 64))
(declare-fun temp10877_128 () (_ BitVec 64))
(declare-fun temp10877_129 () (_ BitVec 64))
(declare-fun temp10877_130 () (_ BitVec 64))
(declare-fun temp10877_131 () (_ BitVec 64))
(declare-fun temp10877_132 () (_ BitVec 64))
(declare-fun temp10877_133 () (_ BitVec 64))
(declare-fun temp10877_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10877_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10877_136 () (_ BitVec 64))
(declare-fun temp10877_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10877_138 () (_ BitVec 64))
(declare-fun temp10877_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10877_140 () (_ BitVec 64))
(declare-fun temp10877_141 () (_ BitVec 64))
(declare-fun temp10877_142 () (_ BitVec 64))
(declare-fun temp10877_143 () (_ BitVec 64))
(declare-fun temp10877_144 () (_ BitVec 64))
(declare-fun temp10877_145 () (_ BitVec 64))
(declare-fun temp10877_146 () (_ BitVec 64))
(declare-fun temp10877_147 () (_ BitVec 64))
(declare-fun temp10877_148 () (_ BitVec 64))
(declare-fun temp10877_149 () (_ BitVec 64))
(declare-fun temp10877_150 () (_ BitVec 64))
(declare-fun temp10877_151 () (_ BitVec 64))
(declare-fun temp10877_152 () (_ BitVec 64))
(declare-fun temp10877_153 () (_ BitVec 64))
(declare-fun temp10877_154 () (_ BitVec 64))
(declare-fun temp10877_155 () (_ BitVec 64))
(declare-fun temp10877_157 () (_ BitVec 64))
(declare-fun temp10877_158 () (_ BitVec 64))
(declare-fun temp10877_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10877_159 () (_ BitVec 64))
(declare-fun temp10877_160 () (_ BitVec 64))
(declare-fun temp10877_162 () (_ BitVec 64))
(declare-fun temp10877_163 () (_ BitVec 64))
(declare-fun temp10877_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10877_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10877_165 () (_ BitVec 64))
(declare-fun temp10877_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10877_167 () (_ BitVec 64))
(declare-fun temp10877_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10877_169 () (_ BitVec 64))
(declare-fun temp10877_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10877_171 () (_ BitVec 64))
(declare-fun temp10877_172 () (_ BitVec 64))
(declare-fun temp10877_173 () (_ BitVec 64))
(declare-fun temp10877_174 () (_ BitVec 64))
(declare-fun temp10877_175 () (_ BitVec 64))
(declare-fun temp10877_176 () (_ BitVec 64))
(declare-fun temp10877_177 () (_ BitVec 64))
(declare-fun temp10877_178 () (_ BitVec 64))
(declare-fun temp10877_179 () (_ BitVec 64))
(declare-fun temp10877_180 () (_ BitVec 64))
(declare-fun temp10877_181 () (_ BitVec 64))
(declare-fun temp10877_182 () (_ BitVec 64))
(declare-fun temp10877_183 () (_ BitVec 64))
(declare-fun temp10877_184 () (_ BitVec 64))
(declare-fun temp10877_185 () (_ BitVec 64))
(declare-fun temp10877_186 () (_ BitVec 64))
(declare-fun temp10877_187 () (_ BitVec 64))
(declare-fun temp10877_188 () (_ BitVec 64))
(declare-fun temp10877_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10877_190 () (_ BitVec 64))
(declare-fun temp10877_192 () (_ BitVec 64))
(declare-fun temp10877_193 () (_ BitVec 64))
(declare-fun temp10877_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10877_194 () (_ BitVec 64))
(declare-fun temp10877_195 () (_ BitVec 64))
(declare-fun temp10877_197 () (_ BitVec 64))
(declare-fun temp10877_198 () (_ BitVec 64))
(declare-fun temp10877_196 () (_ BitVec 64))
(declare-fun temp10877_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10877_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10877_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10877_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10877_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10877_204 () (_ BitVec 64))
(declare-fun temp10877_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10877_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10877_207 () (_ BitVec 64))
(declare-fun temp10877_208 () (_ BitVec 64))
(declare-fun temp10877_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10877_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10877_211 () (_ BitVec 64))
(declare-fun temp10877_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10877_213 () (_ BitVec 64))
(declare-fun temp10877_214 () (_ BitVec 64))
(declare-fun temp10877_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10877_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10877_217 () (_ BitVec 64))
(declare-fun temp10877_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10877_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10877_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var5714320 () (_ BitVec 64))
(declare-fun var5976464 () (_ BitVec 64))
(declare-fun temp10877_221 () (_ BitVec 64))
(declare-fun var6304144 () (_ BitVec 64))
(declare-fun temp10877_222 () (_ BitVec 64))
(assert (= temp10877_1 #x0000000000000001))
(assert (= var77203 temp10877_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10877_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10877_2)))
(assert (= temp10877_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10877_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10877_4 #x0000000000000000))
(assert (= var210941 temp10877_4))
(assert (= temp10877_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10877_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10877_6 #x0000000000000000))
(assert (= var210986 temp10877_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10877_7 #x0000000000000000))
(assert (= temp10877_8 temp10877_7))
(assert (= temp10877_9 (select ARGNAME_padding_NAMEEND_VAL temp10877_8)))
(assert (= temp10877_10 #x0000000000000001))
(assert (= temp10877_11 temp10877_10))
(assert (= temp10877_12 (select ARGNAME_padding_NAMEEND_VAL temp10877_11)))
(assert (= temp10877_13 #x0000000000000002))
(assert (= temp10877_14 temp10877_13))
(assert (= temp10877_15 (select ARGNAME_padding_NAMEEND_VAL temp10877_14)))
(assert (= temp10877_16 #x0000000000000003))
(assert (= temp10877_17 temp10877_16))
(assert (= temp10877_18 (select ARGNAME_padding_NAMEEND_VAL temp10877_17)))
(assert (= temp10877_19 #x0000000000000004))
(assert (= temp10877_20 temp10877_19))
(assert (= temp10877_21 (select ARGNAME_padding_NAMEEND_VAL temp10877_20)))
(assert (= temp10877_22 #x0000000000000005))
(assert (= temp10877_23 temp10877_22))
(assert (= temp10877_24 (select ARGNAME_padding_NAMEEND_VAL temp10877_23)))
(assert (= temp10877_25 #x0000000000000000))
(assert (= temp10877_26 #x0000000000000000))
(assert (= temp10877_27 temp10877_26))
(assert (= temp10877_28 (select ARGNAME_padding_NAMEEND_VAL temp10877_27)))
(assert (= temp10877_29 #x0000000000000000))
(assert (= temp10877_30 #x0000000000000001))
(assert (= temp10877_31 temp10877_30))
(assert (= temp10877_32 (select ARGNAME_padding_NAMEEND_VAL temp10877_31)))
(assert (= temp10877_33 #x0000000000000000))
(assert (= temp10877_34 #x0000000000000002))
(assert (= temp10877_35 temp10877_34))
(assert (= temp10877_36 (select ARGNAME_padding_NAMEEND_VAL temp10877_35)))
(assert (= temp10877_37 #x0000000000000000))
(assert (= temp10877_38 #x0000000000000003))
(assert (= temp10877_39 temp10877_38))
(assert (= temp10877_40 (select ARGNAME_padding_NAMEEND_VAL temp10877_39)))
(assert (= temp10877_41 #x0000000000000000))
(assert (= temp10877_42 #x0000000000000004))
(assert (= temp10877_43 temp10877_42))
(assert (= temp10877_44 (select ARGNAME_padding_NAMEEND_VAL temp10877_43)))
(assert (= temp10877_45 #x0000000000000000))
(assert (= temp10877_46 #x0000000000000005))
(assert (= temp10877_47 temp10877_46))
(assert (= temp10877_48 (select ARGNAME_padding_NAMEEND_VAL temp10877_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10877_28 temp10877_25)
             (bvslt temp10877_32 temp10877_29)
             (bvslt temp10877_36 temp10877_33)
             (bvslt temp10877_40 temp10877_37)
             (bvslt temp10877_44 temp10877_41)
             (bvslt temp10877_48 temp10877_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10877_49 #x0000000000000000))
(assert (= var1191714 temp10877_49))
(assert (= temp10877_50 #x0000000000000000))
(assert (= temp10877_51 temp10877_50))
(assert (= temp10877_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10877_51)))
(assert (= temp10877_53 #x0000000000000001))
(assert (= temp10877_54 temp10877_53))
(assert (= temp10877_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10877_54)))
(assert (= temp10877_56 #x0000000000000002))
(assert (= temp10877_57 temp10877_56))
(assert (= temp10877_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10877_57)))
(assert (= temp10877_59 #x0000000000000003))
(assert (= temp10877_60 temp10877_59))
(assert (= temp10877_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10877_60)))
(assert (= temp10877_62 #x0000000000000004))
(assert (= temp10877_63 temp10877_62))
(assert (= temp10877_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10877_63)))
(assert (= temp10877_65 #x0000000000000005))
(assert (= temp10877_66 temp10877_65))
(assert (= temp10877_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10877_66)))
(assert (= temp10877_68 #x0000000000000000))
(assert (= temp10877_69 #x0000000000000000))
(assert (= temp10877_70 temp10877_69))
(assert (= temp10877_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10877_70)))
(assert (= temp10877_72 #x0000000000000000))
(assert (= temp10877_73 #x0000000000000001))
(assert (= temp10877_74 temp10877_73))
(assert (= temp10877_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10877_74)))
(assert (= temp10877_76 #x0000000000000000))
(assert (= temp10877_77 #x0000000000000002))
(assert (= temp10877_78 temp10877_77))
(assert (= temp10877_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10877_78)))
(assert (= temp10877_80 #x0000000000000000))
(assert (= temp10877_81 #x0000000000000003))
(assert (= temp10877_82 temp10877_81))
(assert (= temp10877_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10877_82)))
(assert (= temp10877_84 #x0000000000000000))
(assert (= temp10877_85 #x0000000000000004))
(assert (= temp10877_86 temp10877_85))
(assert (= temp10877_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10877_86)))
(assert (= temp10877_88 #x0000000000000000))
(assert (= temp10877_89 #x0000000000000005))
(assert (= temp10877_90 temp10877_89))
(assert (= temp10877_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10877_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10877_71 temp10877_68)
             (bvslt temp10877_75 temp10877_72)
             (bvslt temp10877_79 temp10877_76)
             (bvslt temp10877_83 temp10877_80)
             (bvslt temp10877_87 temp10877_84)
             (bvslt temp10877_91 temp10877_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10877_92 #x0000000000000000))
(assert (= var1191725 temp10877_92))
(assert (= temp10877_93 #x0000000000000000))
(assert (= temp10877_94 temp10877_93))
(assert (= temp10877_95 (select ARGNAME_stride_NAMEEND_VAL temp10877_94)))
(assert (= temp10877_96 #x0000000000000001))
(assert (= temp10877_97 temp10877_96))
(assert (= temp10877_98 (select ARGNAME_stride_NAMEEND_VAL temp10877_97)))
(assert (= temp10877_99 #x0000000000000002))
(assert (= temp10877_100 temp10877_99))
(assert (= temp10877_101 (select ARGNAME_stride_NAMEEND_VAL temp10877_100)))
(assert (= temp10877_102 #x0000000000000003))
(assert (= temp10877_103 temp10877_102))
(assert (= temp10877_104 (select ARGNAME_stride_NAMEEND_VAL temp10877_103)))
(assert (= temp10877_105 #x0000000000000004))
(assert (= temp10877_106 temp10877_105))
(assert (= temp10877_107 (select ARGNAME_stride_NAMEEND_VAL temp10877_106)))
(assert (= temp10877_108 #x0000000000000005))
(assert (= temp10877_109 temp10877_108))
(assert (= temp10877_110 (select ARGNAME_stride_NAMEEND_VAL temp10877_109)))
(assert (= temp10877_111 #x0000000000000000))
(assert (= temp10877_112 #x0000000000000000))
(assert (= temp10877_113 temp10877_112))
(assert (= temp10877_114 (select ARGNAME_stride_NAMEEND_VAL temp10877_113)))
(assert (= temp10877_115 #x0000000000000000))
(assert (= temp10877_116 #x0000000000000001))
(assert (= temp10877_117 temp10877_116))
(assert (= temp10877_118 (select ARGNAME_stride_NAMEEND_VAL temp10877_117)))
(assert (= temp10877_119 #x0000000000000000))
(assert (= temp10877_120 #x0000000000000002))
(assert (= temp10877_121 temp10877_120))
(assert (= temp10877_122 (select ARGNAME_stride_NAMEEND_VAL temp10877_121)))
(assert (= temp10877_123 #x0000000000000000))
(assert (= temp10877_124 #x0000000000000003))
(assert (= temp10877_125 temp10877_124))
(assert (= temp10877_126 (select ARGNAME_stride_NAMEEND_VAL temp10877_125)))
(assert (= temp10877_127 #x0000000000000000))
(assert (= temp10877_128 #x0000000000000004))
(assert (= temp10877_129 temp10877_128))
(assert (= temp10877_130 (select ARGNAME_stride_NAMEEND_VAL temp10877_129)))
(assert (= temp10877_131 #x0000000000000000))
(assert (= temp10877_132 #x0000000000000005))
(assert (= temp10877_133 temp10877_132))
(assert (= temp10877_134 (select ARGNAME_stride_NAMEEND_VAL temp10877_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10877_114 temp10877_111)
             (bvsle temp10877_118 temp10877_115)
             (bvsle temp10877_122 temp10877_119)
             (bvsle temp10877_126 temp10877_123)
             (bvsle temp10877_130 temp10877_127)
             (bvsle temp10877_134 temp10877_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10877_135 #x0000000000000000))
(assert (= var1191735 temp10877_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10877_136 #x0000000000000001))
(assert (= var1191747 temp10877_136))
(assert (= temp10877_137 #x0000000000000000))
(assert (= var1179826 temp10877_137))
(assert (= temp10877_138 #x0000000000000000))
(assert (= temp10877_139 temp10877_138))
(assert (= temp10877_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10877_139)))
(assert (= temp10877_141 #x0000000000000001))
(assert (= temp10877_142 temp10877_141))
(assert (= temp10877_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10877_142)))
(assert (= temp10877_144 #x0000000000000002))
(assert (= temp10877_145 temp10877_144))
(assert (= temp10877_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10877_145)))
(assert (= temp10877_147 #x0000000000000003))
(assert (= temp10877_148 temp10877_147))
(assert (= temp10877_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10877_148)))
(assert (= temp10877_150 #x0000000000000004))
(assert (= temp10877_151 temp10877_150))
(assert (= temp10877_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10877_151)))
(assert (= temp10877_153 #x0000000000000005))
(assert (= temp10877_154 temp10877_153))
(assert (= temp10877_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10877_154)))
(assert (= temp10877_157 var1179826))
(assert (= temp10877_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10877_157)))
(assert (= temp10877_156 temp10877_158))
(assert (= var1191780
   (ite (bvslt temp10877_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10877_159 #x0000000000000000))
(assert (= var1191780 temp10877_159))
(assert (= temp10877_160 #x0000000000000000))
(assert (= var1179826 temp10877_160))
(assert (= temp10877_162 var1179826))
(assert (= temp10877_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10877_162)))
(assert (= temp10877_161 temp10877_163))
(assert (= var1191802 (bvsmod temp10877_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10877_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10877_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10877_165 #x0000000000000001))
(assert (= var1191803 temp10877_165))
(assert (= temp10877_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10877_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10877_167 #x0000000000000001))
(assert (= var1191823 temp10877_167))
(assert (= temp10877_168 #x0000000000000001))
(assert (= var1180714 temp10877_168))
(assert (= temp10877_169 #x0000000000000000))
(assert (= temp10877_170 temp10877_169))
(assert (= temp10877_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10877_170)))
(assert (= temp10877_172 #x0000000000000001))
(assert (= temp10877_173 temp10877_172))
(assert (= temp10877_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10877_173)))
(assert (= temp10877_175 #x0000000000000002))
(assert (= temp10877_176 temp10877_175))
(assert (= temp10877_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10877_176)))
(assert (= temp10877_178 #x0000000000000003))
(assert (= temp10877_179 temp10877_178))
(assert (= temp10877_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10877_179)))
(assert (= temp10877_181 #x0000000000000004))
(assert (= temp10877_182 temp10877_181))
(assert (= temp10877_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10877_182)))
(assert (= temp10877_184 #x0000000000000005))
(assert (= temp10877_185 temp10877_184))
(assert (= temp10877_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10877_185)))
(assert (= temp10877_187 #x0000000000000000))
(assert (= temp10877_188
   (ite (bvslt var1180714 temp10877_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10877_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10877_188)))
(assert (= var1191831 temp10877_189))
(assert (bvslt (ite (bvslt var1180714 temp10877_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10877_190 #x0000000000000001))
(assert (= var1180714 temp10877_190))
(assert (= temp10877_192 var1180714))
(assert (= temp10877_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10877_192)))
(assert (= temp10877_191 temp10877_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10877_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10877_194 #x0000000000000001))
(assert (= var1191836 temp10877_194))
(assert (= temp10877_195 #x0000000000000000))
(assert (= var1179826 temp10877_195))
(assert (= temp10877_197 var1179826))
(assert (= temp10877_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10877_197)))
(assert (= temp10877_196 temp10877_198))
(assert (= temp10877_199 #x0000000000000002))
(assert (= var1586025 temp10877_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10877_200 #x0000000000000001))
(assert (= var1191993 temp10877_200))
(assert (= temp10877_201 #x0000000000000001))
(assert (= var2700303 temp10877_201))
(assert (= temp10877_202 #x0000000000000001))
(assert (= var2962447 temp10877_202))
(assert (= temp10877_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10877_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10877_204 #x0000000000000001))
(assert (= var211058 temp10877_204))
(assert (= temp10877_205 #x0000000000000001))
(assert (= var211188 temp10877_205))
(assert (= var3879401 var211188))
(assert (= temp10877_206 #x0000000000000000))
(assert (= var3866802 temp10877_206))
(assert (= temp10877_207 #x0000000000000000))
(assert (= temp10877_208
   (ite (bvslt var3866802 temp10877_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10877_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10877_208)))
(assert (= var3879420 temp10877_209))
(assert (bvslt (ite (bvslt var3866802 temp10877_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10877_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10877_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10877_211 #x0000000000000000))
(assert (= var3879421 temp10877_211))
(assert (= temp10877_212 #x0000000000000001))
(assert (= var3867690 temp10877_212))
(assert (= temp10877_213 #x0000000000000000))
(assert (= temp10877_214
   (ite (bvslt var3867690 temp10877_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10877_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10877_214)))
(assert (= var3879423 temp10877_215))
(assert (bvslt (ite (bvslt var3867690 temp10877_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10877_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10877_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10877_217 #x0000000000000001))
(assert (= var3879424 temp10877_217))
(assert (= temp10877_218 #x0000000000000000))
(assert (= var4133117 temp10877_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10877_219 #x0000000000000002))
(assert (= var4339331 temp10877_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10877_220 #x0000000000000000))
(assert (= var4404892 temp10877_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var5714320 var211201))
(assert (= var5976464 var211201))
(assert (= temp10877_221 #x0000000000000000))
(assert (= var6304144 temp10877_221))
(assert (= temp10877_222 #x0000000000000001))
(assert (= var211058 temp10877_222))
(model-add temp10877_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10877_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10877_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10877_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





