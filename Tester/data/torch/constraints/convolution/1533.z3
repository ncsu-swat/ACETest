(declare-fun temp10838_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10838_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10838_3 () (_ BitVec 64))
(declare-fun temp10838_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10838_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10838_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10838_7 () (_ BitVec 64))
(declare-fun temp10838_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10838_9 () (_ BitVec 64))
(declare-fun temp10838_10 () (_ BitVec 64))
(declare-fun temp10838_11 () (_ BitVec 64))
(declare-fun temp10838_12 () (_ BitVec 64))
(declare-fun temp10838_13 () (_ BitVec 64))
(declare-fun temp10838_14 () (_ BitVec 64))
(declare-fun temp10838_15 () (_ BitVec 64))
(declare-fun temp10838_16 () (_ BitVec 64))
(declare-fun temp10838_17 () (_ BitVec 64))
(declare-fun temp10838_18 () (_ BitVec 64))
(declare-fun temp10838_19 () (_ BitVec 64))
(declare-fun temp10838_20 () (_ BitVec 64))
(declare-fun temp10838_21 () (_ BitVec 64))
(declare-fun temp10838_22 () (_ BitVec 64))
(declare-fun temp10838_23 () (_ BitVec 64))
(declare-fun temp10838_24 () (_ BitVec 64))
(declare-fun temp10838_25 () (_ BitVec 64))
(declare-fun temp10838_26 () (_ BitVec 64))
(declare-fun temp10838_27 () (_ BitVec 64))
(declare-fun temp10838_28 () (_ BitVec 64))
(declare-fun temp10838_29 () (_ BitVec 64))
(declare-fun temp10838_30 () (_ BitVec 64))
(declare-fun temp10838_31 () (_ BitVec 64))
(declare-fun temp10838_32 () (_ BitVec 64))
(declare-fun temp10838_33 () (_ BitVec 64))
(declare-fun temp10838_34 () (_ BitVec 64))
(declare-fun temp10838_35 () (_ BitVec 64))
(declare-fun temp10838_36 () (_ BitVec 64))
(declare-fun temp10838_37 () (_ BitVec 64))
(declare-fun temp10838_38 () (_ BitVec 64))
(declare-fun temp10838_39 () (_ BitVec 64))
(declare-fun temp10838_40 () (_ BitVec 64))
(declare-fun temp10838_41 () (_ BitVec 64))
(declare-fun temp10838_42 () (_ BitVec 64))
(declare-fun temp10838_43 () (_ BitVec 64))
(declare-fun temp10838_44 () (_ BitVec 64))
(declare-fun temp10838_45 () (_ BitVec 64))
(declare-fun temp10838_46 () (_ BitVec 64))
(declare-fun temp10838_47 () (_ BitVec 64))
(declare-fun temp10838_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10838_49 () (_ BitVec 64))
(declare-fun temp10838_50 () (_ BitVec 64))
(declare-fun temp10838_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10838_52 () (_ BitVec 64))
(declare-fun temp10838_53 () (_ BitVec 64))
(declare-fun temp10838_54 () (_ BitVec 64))
(declare-fun temp10838_55 () (_ BitVec 64))
(declare-fun temp10838_56 () (_ BitVec 64))
(declare-fun temp10838_57 () (_ BitVec 64))
(declare-fun temp10838_58 () (_ BitVec 64))
(declare-fun temp10838_59 () (_ BitVec 64))
(declare-fun temp10838_60 () (_ BitVec 64))
(declare-fun temp10838_61 () (_ BitVec 64))
(declare-fun temp10838_62 () (_ BitVec 64))
(declare-fun temp10838_63 () (_ BitVec 64))
(declare-fun temp10838_64 () (_ BitVec 64))
(declare-fun temp10838_65 () (_ BitVec 64))
(declare-fun temp10838_66 () (_ BitVec 64))
(declare-fun temp10838_67 () (_ BitVec 64))
(declare-fun temp10838_68 () (_ BitVec 64))
(declare-fun temp10838_69 () (_ BitVec 64))
(declare-fun temp10838_70 () (_ BitVec 64))
(declare-fun temp10838_71 () (_ BitVec 64))
(declare-fun temp10838_72 () (_ BitVec 64))
(declare-fun temp10838_73 () (_ BitVec 64))
(declare-fun temp10838_74 () (_ BitVec 64))
(declare-fun temp10838_75 () (_ BitVec 64))
(declare-fun temp10838_76 () (_ BitVec 64))
(declare-fun temp10838_77 () (_ BitVec 64))
(declare-fun temp10838_78 () (_ BitVec 64))
(declare-fun temp10838_79 () (_ BitVec 64))
(declare-fun temp10838_80 () (_ BitVec 64))
(declare-fun temp10838_81 () (_ BitVec 64))
(declare-fun temp10838_82 () (_ BitVec 64))
(declare-fun temp10838_83 () (_ BitVec 64))
(declare-fun temp10838_84 () (_ BitVec 64))
(declare-fun temp10838_85 () (_ BitVec 64))
(declare-fun temp10838_86 () (_ BitVec 64))
(declare-fun temp10838_87 () (_ BitVec 64))
(declare-fun temp10838_88 () (_ BitVec 64))
(declare-fun temp10838_89 () (_ BitVec 64))
(declare-fun temp10838_90 () (_ BitVec 64))
(declare-fun temp10838_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10838_92 () (_ BitVec 64))
(declare-fun temp10838_93 () (_ BitVec 64))
(declare-fun temp10838_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10838_95 () (_ BitVec 64))
(declare-fun temp10838_96 () (_ BitVec 64))
(declare-fun temp10838_97 () (_ BitVec 64))
(declare-fun temp10838_98 () (_ BitVec 64))
(declare-fun temp10838_99 () (_ BitVec 64))
(declare-fun temp10838_100 () (_ BitVec 64))
(declare-fun temp10838_101 () (_ BitVec 64))
(declare-fun temp10838_102 () (_ BitVec 64))
(declare-fun temp10838_103 () (_ BitVec 64))
(declare-fun temp10838_104 () (_ BitVec 64))
(declare-fun temp10838_105 () (_ BitVec 64))
(declare-fun temp10838_106 () (_ BitVec 64))
(declare-fun temp10838_107 () (_ BitVec 64))
(declare-fun temp10838_108 () (_ BitVec 64))
(declare-fun temp10838_109 () (_ BitVec 64))
(declare-fun temp10838_110 () (_ BitVec 64))
(declare-fun temp10838_111 () (_ BitVec 64))
(declare-fun temp10838_112 () (_ BitVec 64))
(declare-fun temp10838_113 () (_ BitVec 64))
(declare-fun temp10838_114 () (_ BitVec 64))
(declare-fun temp10838_115 () (_ BitVec 64))
(declare-fun temp10838_116 () (_ BitVec 64))
(declare-fun temp10838_117 () (_ BitVec 64))
(declare-fun temp10838_118 () (_ BitVec 64))
(declare-fun temp10838_119 () (_ BitVec 64))
(declare-fun temp10838_120 () (_ BitVec 64))
(declare-fun temp10838_121 () (_ BitVec 64))
(declare-fun temp10838_122 () (_ BitVec 64))
(declare-fun temp10838_123 () (_ BitVec 64))
(declare-fun temp10838_124 () (_ BitVec 64))
(declare-fun temp10838_125 () (_ BitVec 64))
(declare-fun temp10838_126 () (_ BitVec 64))
(declare-fun temp10838_127 () (_ BitVec 64))
(declare-fun temp10838_128 () (_ BitVec 64))
(declare-fun temp10838_129 () (_ BitVec 64))
(declare-fun temp10838_130 () (_ BitVec 64))
(declare-fun temp10838_131 () (_ BitVec 64))
(declare-fun temp10838_132 () (_ BitVec 64))
(declare-fun temp10838_133 () (_ BitVec 64))
(declare-fun temp10838_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10838_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10838_136 () (_ BitVec 64))
(declare-fun temp10838_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10838_138 () (_ BitVec 64))
(declare-fun temp10838_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10838_140 () (_ BitVec 64))
(declare-fun temp10838_141 () (_ BitVec 64))
(declare-fun temp10838_142 () (_ BitVec 64))
(declare-fun temp10838_143 () (_ BitVec 64))
(declare-fun temp10838_144 () (_ BitVec 64))
(declare-fun temp10838_145 () (_ BitVec 64))
(declare-fun temp10838_146 () (_ BitVec 64))
(declare-fun temp10838_147 () (_ BitVec 64))
(declare-fun temp10838_148 () (_ BitVec 64))
(declare-fun temp10838_149 () (_ BitVec 64))
(declare-fun temp10838_150 () (_ BitVec 64))
(declare-fun temp10838_151 () (_ BitVec 64))
(declare-fun temp10838_152 () (_ BitVec 64))
(declare-fun temp10838_153 () (_ BitVec 64))
(declare-fun temp10838_154 () (_ BitVec 64))
(declare-fun temp10838_155 () (_ BitVec 64))
(declare-fun temp10838_157 () (_ BitVec 64))
(declare-fun temp10838_158 () (_ BitVec 64))
(declare-fun temp10838_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10838_159 () (_ BitVec 64))
(declare-fun temp10838_160 () (_ BitVec 64))
(declare-fun temp10838_162 () (_ BitVec 64))
(declare-fun temp10838_163 () (_ BitVec 64))
(declare-fun temp10838_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10838_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10838_165 () (_ BitVec 64))
(declare-fun temp10838_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10838_167 () (_ BitVec 64))
(declare-fun temp10838_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10838_169 () (_ BitVec 64))
(declare-fun temp10838_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10838_171 () (_ BitVec 64))
(declare-fun temp10838_172 () (_ BitVec 64))
(declare-fun temp10838_173 () (_ BitVec 64))
(declare-fun temp10838_174 () (_ BitVec 64))
(declare-fun temp10838_175 () (_ BitVec 64))
(declare-fun temp10838_176 () (_ BitVec 64))
(declare-fun temp10838_177 () (_ BitVec 64))
(declare-fun temp10838_178 () (_ BitVec 64))
(declare-fun temp10838_179 () (_ BitVec 64))
(declare-fun temp10838_180 () (_ BitVec 64))
(declare-fun temp10838_181 () (_ BitVec 64))
(declare-fun temp10838_182 () (_ BitVec 64))
(declare-fun temp10838_183 () (_ BitVec 64))
(declare-fun temp10838_184 () (_ BitVec 64))
(declare-fun temp10838_185 () (_ BitVec 64))
(declare-fun temp10838_186 () (_ BitVec 64))
(declare-fun temp10838_187 () (_ BitVec 64))
(declare-fun temp10838_188 () (_ BitVec 64))
(declare-fun temp10838_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10838_190 () (_ BitVec 64))
(declare-fun temp10838_192 () (_ BitVec 64))
(declare-fun temp10838_193 () (_ BitVec 64))
(declare-fun temp10838_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10838_194 () (_ BitVec 64))
(declare-fun temp10838_195 () (_ BitVec 64))
(declare-fun temp10838_197 () (_ BitVec 64))
(declare-fun temp10838_198 () (_ BitVec 64))
(declare-fun temp10838_196 () (_ BitVec 64))
(declare-fun temp10838_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10838_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10838_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10838_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10838_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10838_204 () (_ BitVec 64))
(declare-fun temp10838_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10838_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10838_207 () (_ BitVec 64))
(declare-fun temp10838_208 () (_ BitVec 64))
(declare-fun temp10838_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10838_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10838_211 () (_ BitVec 64))
(declare-fun temp10838_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10838_213 () (_ BitVec 64))
(declare-fun temp10838_214 () (_ BitVec 64))
(declare-fun temp10838_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10838_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10838_217 () (_ BitVec 64))
(declare-fun temp10838_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10838_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10838_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var4993424 () (_ BitVec 64))
(declare-fun var5255568 () (_ BitVec 64))
(declare-fun temp10838_221 () (_ BitVec 64))
(assert (= temp10838_1 #x0000000000000001))
(assert (= var77203 temp10838_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10838_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10838_2)))
(assert (= temp10838_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10838_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10838_4 #x0000000000000000))
(assert (= var210941 temp10838_4))
(assert (= temp10838_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10838_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10838_6 #x0000000000000000))
(assert (= var210986 temp10838_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10838_7 #x0000000000000000))
(assert (= temp10838_8 temp10838_7))
(assert (= temp10838_9 (select ARGNAME_padding_NAMEEND_VAL temp10838_8)))
(assert (= temp10838_10 #x0000000000000001))
(assert (= temp10838_11 temp10838_10))
(assert (= temp10838_12 (select ARGNAME_padding_NAMEEND_VAL temp10838_11)))
(assert (= temp10838_13 #x0000000000000002))
(assert (= temp10838_14 temp10838_13))
(assert (= temp10838_15 (select ARGNAME_padding_NAMEEND_VAL temp10838_14)))
(assert (= temp10838_16 #x0000000000000003))
(assert (= temp10838_17 temp10838_16))
(assert (= temp10838_18 (select ARGNAME_padding_NAMEEND_VAL temp10838_17)))
(assert (= temp10838_19 #x0000000000000004))
(assert (= temp10838_20 temp10838_19))
(assert (= temp10838_21 (select ARGNAME_padding_NAMEEND_VAL temp10838_20)))
(assert (= temp10838_22 #x0000000000000005))
(assert (= temp10838_23 temp10838_22))
(assert (= temp10838_24 (select ARGNAME_padding_NAMEEND_VAL temp10838_23)))
(assert (= temp10838_25 #x0000000000000000))
(assert (= temp10838_26 #x0000000000000000))
(assert (= temp10838_27 temp10838_26))
(assert (= temp10838_28 (select ARGNAME_padding_NAMEEND_VAL temp10838_27)))
(assert (= temp10838_29 #x0000000000000000))
(assert (= temp10838_30 #x0000000000000001))
(assert (= temp10838_31 temp10838_30))
(assert (= temp10838_32 (select ARGNAME_padding_NAMEEND_VAL temp10838_31)))
(assert (= temp10838_33 #x0000000000000000))
(assert (= temp10838_34 #x0000000000000002))
(assert (= temp10838_35 temp10838_34))
(assert (= temp10838_36 (select ARGNAME_padding_NAMEEND_VAL temp10838_35)))
(assert (= temp10838_37 #x0000000000000000))
(assert (= temp10838_38 #x0000000000000003))
(assert (= temp10838_39 temp10838_38))
(assert (= temp10838_40 (select ARGNAME_padding_NAMEEND_VAL temp10838_39)))
(assert (= temp10838_41 #x0000000000000000))
(assert (= temp10838_42 #x0000000000000004))
(assert (= temp10838_43 temp10838_42))
(assert (= temp10838_44 (select ARGNAME_padding_NAMEEND_VAL temp10838_43)))
(assert (= temp10838_45 #x0000000000000000))
(assert (= temp10838_46 #x0000000000000005))
(assert (= temp10838_47 temp10838_46))
(assert (= temp10838_48 (select ARGNAME_padding_NAMEEND_VAL temp10838_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10838_28 temp10838_25)
             (bvslt temp10838_32 temp10838_29)
             (bvslt temp10838_36 temp10838_33)
             (bvslt temp10838_40 temp10838_37)
             (bvslt temp10838_44 temp10838_41)
             (bvslt temp10838_48 temp10838_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10838_49 #x0000000000000000))
(assert (= var1191714 temp10838_49))
(assert (= temp10838_50 #x0000000000000000))
(assert (= temp10838_51 temp10838_50))
(assert (= temp10838_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10838_51)))
(assert (= temp10838_53 #x0000000000000001))
(assert (= temp10838_54 temp10838_53))
(assert (= temp10838_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10838_54)))
(assert (= temp10838_56 #x0000000000000002))
(assert (= temp10838_57 temp10838_56))
(assert (= temp10838_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10838_57)))
(assert (= temp10838_59 #x0000000000000003))
(assert (= temp10838_60 temp10838_59))
(assert (= temp10838_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10838_60)))
(assert (= temp10838_62 #x0000000000000004))
(assert (= temp10838_63 temp10838_62))
(assert (= temp10838_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10838_63)))
(assert (= temp10838_65 #x0000000000000005))
(assert (= temp10838_66 temp10838_65))
(assert (= temp10838_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10838_66)))
(assert (= temp10838_68 #x0000000000000000))
(assert (= temp10838_69 #x0000000000000000))
(assert (= temp10838_70 temp10838_69))
(assert (= temp10838_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10838_70)))
(assert (= temp10838_72 #x0000000000000000))
(assert (= temp10838_73 #x0000000000000001))
(assert (= temp10838_74 temp10838_73))
(assert (= temp10838_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10838_74)))
(assert (= temp10838_76 #x0000000000000000))
(assert (= temp10838_77 #x0000000000000002))
(assert (= temp10838_78 temp10838_77))
(assert (= temp10838_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10838_78)))
(assert (= temp10838_80 #x0000000000000000))
(assert (= temp10838_81 #x0000000000000003))
(assert (= temp10838_82 temp10838_81))
(assert (= temp10838_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10838_82)))
(assert (= temp10838_84 #x0000000000000000))
(assert (= temp10838_85 #x0000000000000004))
(assert (= temp10838_86 temp10838_85))
(assert (= temp10838_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10838_86)))
(assert (= temp10838_88 #x0000000000000000))
(assert (= temp10838_89 #x0000000000000005))
(assert (= temp10838_90 temp10838_89))
(assert (= temp10838_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10838_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10838_71 temp10838_68)
             (bvslt temp10838_75 temp10838_72)
             (bvslt temp10838_79 temp10838_76)
             (bvslt temp10838_83 temp10838_80)
             (bvslt temp10838_87 temp10838_84)
             (bvslt temp10838_91 temp10838_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10838_92 #x0000000000000000))
(assert (= var1191725 temp10838_92))
(assert (= temp10838_93 #x0000000000000000))
(assert (= temp10838_94 temp10838_93))
(assert (= temp10838_95 (select ARGNAME_stride_NAMEEND_VAL temp10838_94)))
(assert (= temp10838_96 #x0000000000000001))
(assert (= temp10838_97 temp10838_96))
(assert (= temp10838_98 (select ARGNAME_stride_NAMEEND_VAL temp10838_97)))
(assert (= temp10838_99 #x0000000000000002))
(assert (= temp10838_100 temp10838_99))
(assert (= temp10838_101 (select ARGNAME_stride_NAMEEND_VAL temp10838_100)))
(assert (= temp10838_102 #x0000000000000003))
(assert (= temp10838_103 temp10838_102))
(assert (= temp10838_104 (select ARGNAME_stride_NAMEEND_VAL temp10838_103)))
(assert (= temp10838_105 #x0000000000000004))
(assert (= temp10838_106 temp10838_105))
(assert (= temp10838_107 (select ARGNAME_stride_NAMEEND_VAL temp10838_106)))
(assert (= temp10838_108 #x0000000000000005))
(assert (= temp10838_109 temp10838_108))
(assert (= temp10838_110 (select ARGNAME_stride_NAMEEND_VAL temp10838_109)))
(assert (= temp10838_111 #x0000000000000000))
(assert (= temp10838_112 #x0000000000000000))
(assert (= temp10838_113 temp10838_112))
(assert (= temp10838_114 (select ARGNAME_stride_NAMEEND_VAL temp10838_113)))
(assert (= temp10838_115 #x0000000000000000))
(assert (= temp10838_116 #x0000000000000001))
(assert (= temp10838_117 temp10838_116))
(assert (= temp10838_118 (select ARGNAME_stride_NAMEEND_VAL temp10838_117)))
(assert (= temp10838_119 #x0000000000000000))
(assert (= temp10838_120 #x0000000000000002))
(assert (= temp10838_121 temp10838_120))
(assert (= temp10838_122 (select ARGNAME_stride_NAMEEND_VAL temp10838_121)))
(assert (= temp10838_123 #x0000000000000000))
(assert (= temp10838_124 #x0000000000000003))
(assert (= temp10838_125 temp10838_124))
(assert (= temp10838_126 (select ARGNAME_stride_NAMEEND_VAL temp10838_125)))
(assert (= temp10838_127 #x0000000000000000))
(assert (= temp10838_128 #x0000000000000004))
(assert (= temp10838_129 temp10838_128))
(assert (= temp10838_130 (select ARGNAME_stride_NAMEEND_VAL temp10838_129)))
(assert (= temp10838_131 #x0000000000000000))
(assert (= temp10838_132 #x0000000000000005))
(assert (= temp10838_133 temp10838_132))
(assert (= temp10838_134 (select ARGNAME_stride_NAMEEND_VAL temp10838_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10838_114 temp10838_111)
             (bvsle temp10838_118 temp10838_115)
             (bvsle temp10838_122 temp10838_119)
             (bvsle temp10838_126 temp10838_123)
             (bvsle temp10838_130 temp10838_127)
             (bvsle temp10838_134 temp10838_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10838_135 #x0000000000000000))
(assert (= var1191735 temp10838_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10838_136 #x0000000000000001))
(assert (= var1191747 temp10838_136))
(assert (= temp10838_137 #x0000000000000000))
(assert (= var1179826 temp10838_137))
(assert (= temp10838_138 #x0000000000000000))
(assert (= temp10838_139 temp10838_138))
(assert (= temp10838_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10838_139)))
(assert (= temp10838_141 #x0000000000000001))
(assert (= temp10838_142 temp10838_141))
(assert (= temp10838_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10838_142)))
(assert (= temp10838_144 #x0000000000000002))
(assert (= temp10838_145 temp10838_144))
(assert (= temp10838_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10838_145)))
(assert (= temp10838_147 #x0000000000000003))
(assert (= temp10838_148 temp10838_147))
(assert (= temp10838_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10838_148)))
(assert (= temp10838_150 #x0000000000000004))
(assert (= temp10838_151 temp10838_150))
(assert (= temp10838_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10838_151)))
(assert (= temp10838_153 #x0000000000000005))
(assert (= temp10838_154 temp10838_153))
(assert (= temp10838_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10838_154)))
(assert (= temp10838_157 var1179826))
(assert (= temp10838_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10838_157)))
(assert (= temp10838_156 temp10838_158))
(assert (= var1191780
   (ite (bvslt temp10838_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10838_159 #x0000000000000000))
(assert (= var1191780 temp10838_159))
(assert (= temp10838_160 #x0000000000000000))
(assert (= var1179826 temp10838_160))
(assert (= temp10838_162 var1179826))
(assert (= temp10838_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10838_162)))
(assert (= temp10838_161 temp10838_163))
(assert (= var1191802 (bvsmod temp10838_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10838_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10838_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10838_165 #x0000000000000001))
(assert (= var1191803 temp10838_165))
(assert (= temp10838_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10838_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10838_167 #x0000000000000001))
(assert (= var1191823 temp10838_167))
(assert (= temp10838_168 #x0000000000000001))
(assert (= var1180714 temp10838_168))
(assert (= temp10838_169 #x0000000000000000))
(assert (= temp10838_170 temp10838_169))
(assert (= temp10838_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10838_170)))
(assert (= temp10838_172 #x0000000000000001))
(assert (= temp10838_173 temp10838_172))
(assert (= temp10838_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10838_173)))
(assert (= temp10838_175 #x0000000000000002))
(assert (= temp10838_176 temp10838_175))
(assert (= temp10838_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10838_176)))
(assert (= temp10838_178 #x0000000000000003))
(assert (= temp10838_179 temp10838_178))
(assert (= temp10838_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10838_179)))
(assert (= temp10838_181 #x0000000000000004))
(assert (= temp10838_182 temp10838_181))
(assert (= temp10838_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10838_182)))
(assert (= temp10838_184 #x0000000000000005))
(assert (= temp10838_185 temp10838_184))
(assert (= temp10838_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10838_185)))
(assert (= temp10838_187 #x0000000000000000))
(assert (= temp10838_188
   (ite (bvslt var1180714 temp10838_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10838_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10838_188)))
(assert (= var1191831 temp10838_189))
(assert (bvslt (ite (bvslt var1180714 temp10838_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10838_190 #x0000000000000001))
(assert (= var1180714 temp10838_190))
(assert (= temp10838_192 var1180714))
(assert (= temp10838_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10838_192)))
(assert (= temp10838_191 temp10838_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10838_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10838_194 #x0000000000000001))
(assert (= var1191836 temp10838_194))
(assert (= temp10838_195 #x0000000000000000))
(assert (= var1179826 temp10838_195))
(assert (= temp10838_197 var1179826))
(assert (= temp10838_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10838_197)))
(assert (= temp10838_196 temp10838_198))
(assert (= temp10838_199 #x0000000000000002))
(assert (= var1586025 temp10838_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10838_200 #x0000000000000001))
(assert (= var1191993 temp10838_200))
(assert (= temp10838_201 #x0000000000000001))
(assert (= var2700303 temp10838_201))
(assert (= temp10838_202 #x0000000000000001))
(assert (= var2962447 temp10838_202))
(assert (= temp10838_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10838_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10838_204 #x0000000000000001))
(assert (= var211058 temp10838_204))
(assert (= temp10838_205 #x0000000000000001))
(assert (= var211188 temp10838_205))
(assert (= var3879401 var211188))
(assert (= temp10838_206 #x0000000000000000))
(assert (= var3866802 temp10838_206))
(assert (= temp10838_207 #x0000000000000000))
(assert (= temp10838_208
   (ite (bvslt var3866802 temp10838_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10838_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10838_208)))
(assert (= var3879420 temp10838_209))
(assert (bvslt (ite (bvslt var3866802 temp10838_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10838_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10838_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10838_211 #x0000000000000000))
(assert (= var3879421 temp10838_211))
(assert (= temp10838_212 #x0000000000000001))
(assert (= var3867690 temp10838_212))
(assert (= temp10838_213 #x0000000000000000))
(assert (= temp10838_214
   (ite (bvslt var3867690 temp10838_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10838_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10838_214)))
(assert (= var3879423 temp10838_215))
(assert (bvslt (ite (bvslt var3867690 temp10838_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10838_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10838_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10838_217 #x0000000000000001))
(assert (= var3879424 temp10838_217))
(assert (= temp10838_218 #x0000000000000000))
(assert (= var4133117 temp10838_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10838_219 #x0000000000000002))
(assert (= var4339331 temp10838_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10838_220 #x0000000000000000))
(assert (= var4404892 temp10838_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var4993424 var211201))
(assert (= var5255568 var211201))
(assert (= temp10838_221 #x0000000000000001))
(assert (= var211058 temp10838_221))
(model-add temp10838_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10838_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10838_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10838_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





