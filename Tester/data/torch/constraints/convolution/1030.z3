(declare-fun temp10040_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10040_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10040_3 () (_ BitVec 64))
(declare-fun temp10040_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10040_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10040_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10040_7 () (_ BitVec 64))
(declare-fun temp10040_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10040_9 () (_ BitVec 64))
(declare-fun temp10040_10 () (_ BitVec 64))
(declare-fun temp10040_11 () (_ BitVec 64))
(declare-fun temp10040_12 () (_ BitVec 64))
(declare-fun temp10040_13 () (_ BitVec 64))
(declare-fun temp10040_14 () (_ BitVec 64))
(declare-fun temp10040_15 () (_ BitVec 64))
(declare-fun temp10040_16 () (_ BitVec 64))
(declare-fun temp10040_17 () (_ BitVec 64))
(declare-fun temp10040_18 () (_ BitVec 64))
(declare-fun temp10040_19 () (_ BitVec 64))
(declare-fun temp10040_20 () (_ BitVec 64))
(declare-fun temp10040_21 () (_ BitVec 64))
(declare-fun temp10040_22 () (_ BitVec 64))
(declare-fun temp10040_23 () (_ BitVec 64))
(declare-fun temp10040_24 () (_ BitVec 64))
(declare-fun temp10040_25 () (_ BitVec 64))
(declare-fun temp10040_26 () (_ BitVec 64))
(declare-fun temp10040_27 () (_ BitVec 64))
(declare-fun temp10040_28 () (_ BitVec 64))
(declare-fun temp10040_29 () (_ BitVec 64))
(declare-fun temp10040_30 () (_ BitVec 64))
(declare-fun temp10040_31 () (_ BitVec 64))
(declare-fun temp10040_32 () (_ BitVec 64))
(declare-fun temp10040_33 () (_ BitVec 64))
(declare-fun temp10040_34 () (_ BitVec 64))
(declare-fun temp10040_35 () (_ BitVec 64))
(declare-fun temp10040_36 () (_ BitVec 64))
(declare-fun temp10040_37 () (_ BitVec 64))
(declare-fun temp10040_38 () (_ BitVec 64))
(declare-fun temp10040_39 () (_ BitVec 64))
(declare-fun temp10040_40 () (_ BitVec 64))
(declare-fun temp10040_41 () (_ BitVec 64))
(declare-fun temp10040_42 () (_ BitVec 64))
(declare-fun temp10040_43 () (_ BitVec 64))
(declare-fun temp10040_44 () (_ BitVec 64))
(declare-fun temp10040_45 () (_ BitVec 64))
(declare-fun temp10040_46 () (_ BitVec 64))
(declare-fun temp10040_47 () (_ BitVec 64))
(declare-fun temp10040_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10040_49 () (_ BitVec 64))
(declare-fun temp10040_50 () (_ BitVec 64))
(declare-fun temp10040_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10040_52 () (_ BitVec 64))
(declare-fun temp10040_53 () (_ BitVec 64))
(declare-fun temp10040_54 () (_ BitVec 64))
(declare-fun temp10040_55 () (_ BitVec 64))
(declare-fun temp10040_56 () (_ BitVec 64))
(declare-fun temp10040_57 () (_ BitVec 64))
(declare-fun temp10040_58 () (_ BitVec 64))
(declare-fun temp10040_59 () (_ BitVec 64))
(declare-fun temp10040_60 () (_ BitVec 64))
(declare-fun temp10040_61 () (_ BitVec 64))
(declare-fun temp10040_62 () (_ BitVec 64))
(declare-fun temp10040_63 () (_ BitVec 64))
(declare-fun temp10040_64 () (_ BitVec 64))
(declare-fun temp10040_65 () (_ BitVec 64))
(declare-fun temp10040_66 () (_ BitVec 64))
(declare-fun temp10040_67 () (_ BitVec 64))
(declare-fun temp10040_68 () (_ BitVec 64))
(declare-fun temp10040_69 () (_ BitVec 64))
(declare-fun temp10040_70 () (_ BitVec 64))
(declare-fun temp10040_71 () (_ BitVec 64))
(declare-fun temp10040_72 () (_ BitVec 64))
(declare-fun temp10040_73 () (_ BitVec 64))
(declare-fun temp10040_74 () (_ BitVec 64))
(declare-fun temp10040_75 () (_ BitVec 64))
(declare-fun temp10040_76 () (_ BitVec 64))
(declare-fun temp10040_77 () (_ BitVec 64))
(declare-fun temp10040_78 () (_ BitVec 64))
(declare-fun temp10040_79 () (_ BitVec 64))
(declare-fun temp10040_80 () (_ BitVec 64))
(declare-fun temp10040_81 () (_ BitVec 64))
(declare-fun temp10040_82 () (_ BitVec 64))
(declare-fun temp10040_83 () (_ BitVec 64))
(declare-fun temp10040_84 () (_ BitVec 64))
(declare-fun temp10040_85 () (_ BitVec 64))
(declare-fun temp10040_86 () (_ BitVec 64))
(declare-fun temp10040_87 () (_ BitVec 64))
(declare-fun temp10040_88 () (_ BitVec 64))
(declare-fun temp10040_89 () (_ BitVec 64))
(declare-fun temp10040_90 () (_ BitVec 64))
(declare-fun temp10040_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10040_92 () (_ BitVec 64))
(declare-fun temp10040_93 () (_ BitVec 64))
(declare-fun temp10040_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10040_95 () (_ BitVec 64))
(declare-fun temp10040_96 () (_ BitVec 64))
(declare-fun temp10040_97 () (_ BitVec 64))
(declare-fun temp10040_98 () (_ BitVec 64))
(declare-fun temp10040_99 () (_ BitVec 64))
(declare-fun temp10040_100 () (_ BitVec 64))
(declare-fun temp10040_101 () (_ BitVec 64))
(declare-fun temp10040_102 () (_ BitVec 64))
(declare-fun temp10040_103 () (_ BitVec 64))
(declare-fun temp10040_104 () (_ BitVec 64))
(declare-fun temp10040_105 () (_ BitVec 64))
(declare-fun temp10040_106 () (_ BitVec 64))
(declare-fun temp10040_107 () (_ BitVec 64))
(declare-fun temp10040_108 () (_ BitVec 64))
(declare-fun temp10040_109 () (_ BitVec 64))
(declare-fun temp10040_110 () (_ BitVec 64))
(declare-fun temp10040_111 () (_ BitVec 64))
(declare-fun temp10040_112 () (_ BitVec 64))
(declare-fun temp10040_113 () (_ BitVec 64))
(declare-fun temp10040_114 () (_ BitVec 64))
(declare-fun temp10040_115 () (_ BitVec 64))
(declare-fun temp10040_116 () (_ BitVec 64))
(declare-fun temp10040_117 () (_ BitVec 64))
(declare-fun temp10040_118 () (_ BitVec 64))
(declare-fun temp10040_119 () (_ BitVec 64))
(declare-fun temp10040_120 () (_ BitVec 64))
(declare-fun temp10040_121 () (_ BitVec 64))
(declare-fun temp10040_122 () (_ BitVec 64))
(declare-fun temp10040_123 () (_ BitVec 64))
(declare-fun temp10040_124 () (_ BitVec 64))
(declare-fun temp10040_125 () (_ BitVec 64))
(declare-fun temp10040_126 () (_ BitVec 64))
(declare-fun temp10040_127 () (_ BitVec 64))
(declare-fun temp10040_128 () (_ BitVec 64))
(declare-fun temp10040_129 () (_ BitVec 64))
(declare-fun temp10040_130 () (_ BitVec 64))
(declare-fun temp10040_131 () (_ BitVec 64))
(declare-fun temp10040_132 () (_ BitVec 64))
(declare-fun temp10040_133 () (_ BitVec 64))
(declare-fun temp10040_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10040_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10040_136 () (_ BitVec 64))
(declare-fun temp10040_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10040_138 () (_ BitVec 64))
(declare-fun temp10040_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10040_140 () (_ BitVec 64))
(declare-fun temp10040_141 () (_ BitVec 64))
(declare-fun temp10040_142 () (_ BitVec 64))
(declare-fun temp10040_143 () (_ BitVec 64))
(declare-fun temp10040_144 () (_ BitVec 64))
(declare-fun temp10040_145 () (_ BitVec 64))
(declare-fun temp10040_146 () (_ BitVec 64))
(declare-fun temp10040_147 () (_ BitVec 64))
(declare-fun temp10040_148 () (_ BitVec 64))
(declare-fun temp10040_149 () (_ BitVec 64))
(declare-fun temp10040_150 () (_ BitVec 64))
(declare-fun temp10040_151 () (_ BitVec 64))
(declare-fun temp10040_152 () (_ BitVec 64))
(declare-fun temp10040_153 () (_ BitVec 64))
(declare-fun temp10040_154 () (_ BitVec 64))
(declare-fun temp10040_155 () (_ BitVec 64))
(declare-fun temp10040_157 () (_ BitVec 64))
(declare-fun temp10040_158 () (_ BitVec 64))
(declare-fun temp10040_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10040_159 () (_ BitVec 64))
(declare-fun temp10040_160 () (_ BitVec 64))
(declare-fun temp10040_162 () (_ BitVec 64))
(declare-fun temp10040_163 () (_ BitVec 64))
(declare-fun temp10040_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10040_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10040_165 () (_ BitVec 64))
(declare-fun temp10040_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10040_167 () (_ BitVec 64))
(declare-fun temp10040_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10040_169 () (_ BitVec 64))
(declare-fun temp10040_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10040_171 () (_ BitVec 64))
(declare-fun temp10040_172 () (_ BitVec 64))
(declare-fun temp10040_173 () (_ BitVec 64))
(declare-fun temp10040_174 () (_ BitVec 64))
(declare-fun temp10040_175 () (_ BitVec 64))
(declare-fun temp10040_176 () (_ BitVec 64))
(declare-fun temp10040_177 () (_ BitVec 64))
(declare-fun temp10040_178 () (_ BitVec 64))
(declare-fun temp10040_179 () (_ BitVec 64))
(declare-fun temp10040_180 () (_ BitVec 64))
(declare-fun temp10040_181 () (_ BitVec 64))
(declare-fun temp10040_182 () (_ BitVec 64))
(declare-fun temp10040_183 () (_ BitVec 64))
(declare-fun temp10040_184 () (_ BitVec 64))
(declare-fun temp10040_185 () (_ BitVec 64))
(declare-fun temp10040_186 () (_ BitVec 64))
(declare-fun temp10040_187 () (_ BitVec 64))
(declare-fun temp10040_188 () (_ BitVec 64))
(declare-fun temp10040_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10040_190 () (_ BitVec 64))
(declare-fun temp10040_192 () (_ BitVec 64))
(declare-fun temp10040_193 () (_ BitVec 64))
(declare-fun temp10040_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10040_194 () (_ BitVec 64))
(declare-fun temp10040_195 () (_ BitVec 64))
(declare-fun temp10040_197 () (_ BitVec 64))
(declare-fun temp10040_198 () (_ BitVec 64))
(declare-fun temp10040_196 () (_ BitVec 64))
(declare-fun temp10040_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10040_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10040_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10040_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10040_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10040_204 () (_ BitVec 64))
(declare-fun temp10040_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10040_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10040_207 () (_ BitVec 64))
(declare-fun temp10040_208 () (_ BitVec 64))
(declare-fun temp10040_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10040_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10040_211 () (_ BitVec 64))
(declare-fun temp10040_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10040_213 () (_ BitVec 64))
(declare-fun temp10040_214 () (_ BitVec 64))
(declare-fun temp10040_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10040_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10040_217 () (_ BitVec 64))
(declare-fun temp10040_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10040_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10040_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp10040_222 () (_ BitVec 64))
(declare-fun temp10040_221 () (_ BitVec 64))
(declare-fun temp10040_223 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp10040_224 () (_ BitVec 64))
(declare-fun temp10040_225 () (_ BitVec 64))
(declare-fun temp10040_226 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp10040_227 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp10040_228 () (_ BitVec 64))
(declare-fun temp10040_230 () (_ BitVec 64))
(declare-fun temp10040_229 () (_ BitVec 64))
(declare-fun temp10040_231 () (_ BitVec 64))
(assert (= temp10040_1 #x0000000000000001))
(assert (= var77203 temp10040_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10040_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10040_2)))
(assert (= temp10040_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10040_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10040_4 #x0000000000000000))
(assert (= var210941 temp10040_4))
(assert (= temp10040_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10040_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10040_6 #x0000000000000000))
(assert (= var210986 temp10040_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10040_7 #x0000000000000000))
(assert (= temp10040_8 temp10040_7))
(assert (= temp10040_9 (select ARGNAME_padding_NAMEEND_VAL temp10040_8)))
(assert (= temp10040_10 #x0000000000000001))
(assert (= temp10040_11 temp10040_10))
(assert (= temp10040_12 (select ARGNAME_padding_NAMEEND_VAL temp10040_11)))
(assert (= temp10040_13 #x0000000000000002))
(assert (= temp10040_14 temp10040_13))
(assert (= temp10040_15 (select ARGNAME_padding_NAMEEND_VAL temp10040_14)))
(assert (= temp10040_16 #x0000000000000003))
(assert (= temp10040_17 temp10040_16))
(assert (= temp10040_18 (select ARGNAME_padding_NAMEEND_VAL temp10040_17)))
(assert (= temp10040_19 #x0000000000000004))
(assert (= temp10040_20 temp10040_19))
(assert (= temp10040_21 (select ARGNAME_padding_NAMEEND_VAL temp10040_20)))
(assert (= temp10040_22 #x0000000000000005))
(assert (= temp10040_23 temp10040_22))
(assert (= temp10040_24 (select ARGNAME_padding_NAMEEND_VAL temp10040_23)))
(assert (= temp10040_25 #x0000000000000000))
(assert (= temp10040_26 #x0000000000000000))
(assert (= temp10040_27 temp10040_26))
(assert (= temp10040_28 (select ARGNAME_padding_NAMEEND_VAL temp10040_27)))
(assert (= temp10040_29 #x0000000000000000))
(assert (= temp10040_30 #x0000000000000001))
(assert (= temp10040_31 temp10040_30))
(assert (= temp10040_32 (select ARGNAME_padding_NAMEEND_VAL temp10040_31)))
(assert (= temp10040_33 #x0000000000000000))
(assert (= temp10040_34 #x0000000000000002))
(assert (= temp10040_35 temp10040_34))
(assert (= temp10040_36 (select ARGNAME_padding_NAMEEND_VAL temp10040_35)))
(assert (= temp10040_37 #x0000000000000000))
(assert (= temp10040_38 #x0000000000000003))
(assert (= temp10040_39 temp10040_38))
(assert (= temp10040_40 (select ARGNAME_padding_NAMEEND_VAL temp10040_39)))
(assert (= temp10040_41 #x0000000000000000))
(assert (= temp10040_42 #x0000000000000004))
(assert (= temp10040_43 temp10040_42))
(assert (= temp10040_44 (select ARGNAME_padding_NAMEEND_VAL temp10040_43)))
(assert (= temp10040_45 #x0000000000000000))
(assert (= temp10040_46 #x0000000000000005))
(assert (= temp10040_47 temp10040_46))
(assert (= temp10040_48 (select ARGNAME_padding_NAMEEND_VAL temp10040_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10040_28 temp10040_25)
             (bvslt temp10040_32 temp10040_29)
             (bvslt temp10040_36 temp10040_33)
             (bvslt temp10040_40 temp10040_37)
             (bvslt temp10040_44 temp10040_41)
             (bvslt temp10040_48 temp10040_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10040_49 #x0000000000000000))
(assert (= var1191714 temp10040_49))
(assert (= temp10040_50 #x0000000000000000))
(assert (= temp10040_51 temp10040_50))
(assert (= temp10040_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10040_51)))
(assert (= temp10040_53 #x0000000000000001))
(assert (= temp10040_54 temp10040_53))
(assert (= temp10040_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10040_54)))
(assert (= temp10040_56 #x0000000000000002))
(assert (= temp10040_57 temp10040_56))
(assert (= temp10040_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10040_57)))
(assert (= temp10040_59 #x0000000000000003))
(assert (= temp10040_60 temp10040_59))
(assert (= temp10040_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10040_60)))
(assert (= temp10040_62 #x0000000000000004))
(assert (= temp10040_63 temp10040_62))
(assert (= temp10040_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10040_63)))
(assert (= temp10040_65 #x0000000000000005))
(assert (= temp10040_66 temp10040_65))
(assert (= temp10040_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10040_66)))
(assert (= temp10040_68 #x0000000000000000))
(assert (= temp10040_69 #x0000000000000000))
(assert (= temp10040_70 temp10040_69))
(assert (= temp10040_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10040_70)))
(assert (= temp10040_72 #x0000000000000000))
(assert (= temp10040_73 #x0000000000000001))
(assert (= temp10040_74 temp10040_73))
(assert (= temp10040_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10040_74)))
(assert (= temp10040_76 #x0000000000000000))
(assert (= temp10040_77 #x0000000000000002))
(assert (= temp10040_78 temp10040_77))
(assert (= temp10040_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10040_78)))
(assert (= temp10040_80 #x0000000000000000))
(assert (= temp10040_81 #x0000000000000003))
(assert (= temp10040_82 temp10040_81))
(assert (= temp10040_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10040_82)))
(assert (= temp10040_84 #x0000000000000000))
(assert (= temp10040_85 #x0000000000000004))
(assert (= temp10040_86 temp10040_85))
(assert (= temp10040_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10040_86)))
(assert (= temp10040_88 #x0000000000000000))
(assert (= temp10040_89 #x0000000000000005))
(assert (= temp10040_90 temp10040_89))
(assert (= temp10040_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10040_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10040_71 temp10040_68)
             (bvslt temp10040_75 temp10040_72)
             (bvslt temp10040_79 temp10040_76)
             (bvslt temp10040_83 temp10040_80)
             (bvslt temp10040_87 temp10040_84)
             (bvslt temp10040_91 temp10040_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10040_92 #x0000000000000000))
(assert (= var1191725 temp10040_92))
(assert (= temp10040_93 #x0000000000000000))
(assert (= temp10040_94 temp10040_93))
(assert (= temp10040_95 (select ARGNAME_stride_NAMEEND_VAL temp10040_94)))
(assert (= temp10040_96 #x0000000000000001))
(assert (= temp10040_97 temp10040_96))
(assert (= temp10040_98 (select ARGNAME_stride_NAMEEND_VAL temp10040_97)))
(assert (= temp10040_99 #x0000000000000002))
(assert (= temp10040_100 temp10040_99))
(assert (= temp10040_101 (select ARGNAME_stride_NAMEEND_VAL temp10040_100)))
(assert (= temp10040_102 #x0000000000000003))
(assert (= temp10040_103 temp10040_102))
(assert (= temp10040_104 (select ARGNAME_stride_NAMEEND_VAL temp10040_103)))
(assert (= temp10040_105 #x0000000000000004))
(assert (= temp10040_106 temp10040_105))
(assert (= temp10040_107 (select ARGNAME_stride_NAMEEND_VAL temp10040_106)))
(assert (= temp10040_108 #x0000000000000005))
(assert (= temp10040_109 temp10040_108))
(assert (= temp10040_110 (select ARGNAME_stride_NAMEEND_VAL temp10040_109)))
(assert (= temp10040_111 #x0000000000000000))
(assert (= temp10040_112 #x0000000000000000))
(assert (= temp10040_113 temp10040_112))
(assert (= temp10040_114 (select ARGNAME_stride_NAMEEND_VAL temp10040_113)))
(assert (= temp10040_115 #x0000000000000000))
(assert (= temp10040_116 #x0000000000000001))
(assert (= temp10040_117 temp10040_116))
(assert (= temp10040_118 (select ARGNAME_stride_NAMEEND_VAL temp10040_117)))
(assert (= temp10040_119 #x0000000000000000))
(assert (= temp10040_120 #x0000000000000002))
(assert (= temp10040_121 temp10040_120))
(assert (= temp10040_122 (select ARGNAME_stride_NAMEEND_VAL temp10040_121)))
(assert (= temp10040_123 #x0000000000000000))
(assert (= temp10040_124 #x0000000000000003))
(assert (= temp10040_125 temp10040_124))
(assert (= temp10040_126 (select ARGNAME_stride_NAMEEND_VAL temp10040_125)))
(assert (= temp10040_127 #x0000000000000000))
(assert (= temp10040_128 #x0000000000000004))
(assert (= temp10040_129 temp10040_128))
(assert (= temp10040_130 (select ARGNAME_stride_NAMEEND_VAL temp10040_129)))
(assert (= temp10040_131 #x0000000000000000))
(assert (= temp10040_132 #x0000000000000005))
(assert (= temp10040_133 temp10040_132))
(assert (= temp10040_134 (select ARGNAME_stride_NAMEEND_VAL temp10040_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10040_114 temp10040_111)
             (bvsle temp10040_118 temp10040_115)
             (bvsle temp10040_122 temp10040_119)
             (bvsle temp10040_126 temp10040_123)
             (bvsle temp10040_130 temp10040_127)
             (bvsle temp10040_134 temp10040_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10040_135 #x0000000000000000))
(assert (= var1191735 temp10040_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10040_136 #x0000000000000001))
(assert (= var1191747 temp10040_136))
(assert (= temp10040_137 #x0000000000000000))
(assert (= var1179826 temp10040_137))
(assert (= temp10040_138 #x0000000000000000))
(assert (= temp10040_139 temp10040_138))
(assert (= temp10040_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10040_139)))
(assert (= temp10040_141 #x0000000000000001))
(assert (= temp10040_142 temp10040_141))
(assert (= temp10040_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10040_142)))
(assert (= temp10040_144 #x0000000000000002))
(assert (= temp10040_145 temp10040_144))
(assert (= temp10040_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10040_145)))
(assert (= temp10040_147 #x0000000000000003))
(assert (= temp10040_148 temp10040_147))
(assert (= temp10040_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10040_148)))
(assert (= temp10040_150 #x0000000000000004))
(assert (= temp10040_151 temp10040_150))
(assert (= temp10040_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10040_151)))
(assert (= temp10040_153 #x0000000000000005))
(assert (= temp10040_154 temp10040_153))
(assert (= temp10040_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10040_154)))
(assert (= temp10040_157 var1179826))
(assert (= temp10040_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10040_157)))
(assert (= temp10040_156 temp10040_158))
(assert (= var1191780
   (ite (bvslt temp10040_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10040_159 #x0000000000000000))
(assert (= var1191780 temp10040_159))
(assert (= temp10040_160 #x0000000000000000))
(assert (= var1179826 temp10040_160))
(assert (= temp10040_162 var1179826))
(assert (= temp10040_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10040_162)))
(assert (= temp10040_161 temp10040_163))
(assert (= var1191802 (bvsmod temp10040_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10040_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10040_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10040_165 #x0000000000000001))
(assert (= var1191803 temp10040_165))
(assert (= temp10040_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10040_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10040_167 #x0000000000000001))
(assert (= var1191823 temp10040_167))
(assert (= temp10040_168 #x0000000000000001))
(assert (= var1180714 temp10040_168))
(assert (= temp10040_169 #x0000000000000000))
(assert (= temp10040_170 temp10040_169))
(assert (= temp10040_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10040_170)))
(assert (= temp10040_172 #x0000000000000001))
(assert (= temp10040_173 temp10040_172))
(assert (= temp10040_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10040_173)))
(assert (= temp10040_175 #x0000000000000002))
(assert (= temp10040_176 temp10040_175))
(assert (= temp10040_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10040_176)))
(assert (= temp10040_178 #x0000000000000003))
(assert (= temp10040_179 temp10040_178))
(assert (= temp10040_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10040_179)))
(assert (= temp10040_181 #x0000000000000004))
(assert (= temp10040_182 temp10040_181))
(assert (= temp10040_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10040_182)))
(assert (= temp10040_184 #x0000000000000005))
(assert (= temp10040_185 temp10040_184))
(assert (= temp10040_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10040_185)))
(assert (= temp10040_187 #x0000000000000000))
(assert (= temp10040_188
   (ite (bvslt var1180714 temp10040_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10040_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10040_188)))
(assert (= var1191831 temp10040_189))
(assert (bvslt (ite (bvslt var1180714 temp10040_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10040_190 #x0000000000000001))
(assert (= var1180714 temp10040_190))
(assert (= temp10040_192 var1180714))
(assert (= temp10040_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10040_192)))
(assert (= temp10040_191 temp10040_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10040_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10040_194 #x0000000000000001))
(assert (= var1191836 temp10040_194))
(assert (= temp10040_195 #x0000000000000000))
(assert (= var1179826 temp10040_195))
(assert (= temp10040_197 var1179826))
(assert (= temp10040_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10040_197)))
(assert (= temp10040_196 temp10040_198))
(assert (= temp10040_199 #x0000000000000002))
(assert (= var1586025 temp10040_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10040_200 #x0000000000000001))
(assert (= var1191993 temp10040_200))
(assert (= temp10040_201 #x0000000000000001))
(assert (= var2700303 temp10040_201))
(assert (= temp10040_202 #x0000000000000001))
(assert (= var2962447 temp10040_202))
(assert (= temp10040_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10040_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10040_204 #x0000000000000001))
(assert (= var211058 temp10040_204))
(assert (= temp10040_205 #x0000000000000001))
(assert (= var211188 temp10040_205))
(assert (= var3879401 var211188))
(assert (= temp10040_206 #x0000000000000000))
(assert (= var3866802 temp10040_206))
(assert (= temp10040_207 #x0000000000000000))
(assert (= temp10040_208
   (ite (bvslt var3866802 temp10040_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10040_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10040_208)))
(assert (= var3879420 temp10040_209))
(assert (bvslt (ite (bvslt var3866802 temp10040_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10040_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10040_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10040_211 #x0000000000000000))
(assert (= var3879421 temp10040_211))
(assert (= temp10040_212 #x0000000000000001))
(assert (= var3867690 temp10040_212))
(assert (= temp10040_213 #x0000000000000000))
(assert (= temp10040_214
   (ite (bvslt var3867690 temp10040_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10040_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10040_214)))
(assert (= var3879423 temp10040_215))
(assert (bvslt (ite (bvslt var3867690 temp10040_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10040_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10040_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10040_217 #x0000000000000001))
(assert (= var3879424 temp10040_217))
(assert (= temp10040_218 #x0000000000000000))
(assert (= var4079423 temp10040_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10040_219 #x0000000000000002))
(assert (= var4208259 temp10040_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10040_220 #x0000000000000000))
(assert (= var4273820 temp10040_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp10040_222 #xffffffffffffffff))
(assert (= temp10040_221 temp10040_222))
(assert (= temp10040_223 #x0000000000000001))
(assert (= var197674 temp10040_223))
(assert (= temp10040_224 #x0000000000000000))
(assert (= temp10040_225
   (ite (bvslt var197674 temp10040_224)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp10040_226 (select ARGNAME_input_NAMEEND_DIMSIZE temp10040_225)))
(assert (= var211595 temp10040_226))
(assert (bvslt (ite (bvslt var197674 temp10040_224)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10040_227 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp10040_227) #x0000000000000001 #x0000000000000000)))
(assert (= temp10040_228 #x0000000000000001))
(assert (= var211596 temp10040_228))
(assert (= temp10040_230 #xffffffffffffffff))
(assert (= temp10040_229 temp10040_230))
(assert (= temp10040_231 #x0000000000000001))
(assert (= var211058 temp10040_231))
(model-add temp10040_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10040_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10040_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10040_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




