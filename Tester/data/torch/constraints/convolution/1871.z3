(declare-fun temp11353_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp11353_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp11353_3 () (_ BitVec 64))
(declare-fun temp11353_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp11353_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp11353_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp11353_7 () (_ BitVec 64))
(declare-fun temp11353_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11353_9 () (_ BitVec 64))
(declare-fun temp11353_10 () (_ BitVec 64))
(declare-fun temp11353_11 () (_ BitVec 64))
(declare-fun temp11353_12 () (_ BitVec 64))
(declare-fun temp11353_13 () (_ BitVec 64))
(declare-fun temp11353_14 () (_ BitVec 64))
(declare-fun temp11353_15 () (_ BitVec 64))
(declare-fun temp11353_16 () (_ BitVec 64))
(declare-fun temp11353_17 () (_ BitVec 64))
(declare-fun temp11353_18 () (_ BitVec 64))
(declare-fun temp11353_19 () (_ BitVec 64))
(declare-fun temp11353_20 () (_ BitVec 64))
(declare-fun temp11353_21 () (_ BitVec 64))
(declare-fun temp11353_22 () (_ BitVec 64))
(declare-fun temp11353_23 () (_ BitVec 64))
(declare-fun temp11353_24 () (_ BitVec 64))
(declare-fun temp11353_25 () (_ BitVec 64))
(declare-fun temp11353_26 () (_ BitVec 64))
(declare-fun temp11353_27 () (_ BitVec 64))
(declare-fun temp11353_28 () (_ BitVec 64))
(declare-fun temp11353_29 () (_ BitVec 64))
(declare-fun temp11353_30 () (_ BitVec 64))
(declare-fun temp11353_31 () (_ BitVec 64))
(declare-fun temp11353_32 () (_ BitVec 64))
(declare-fun temp11353_33 () (_ BitVec 64))
(declare-fun temp11353_34 () (_ BitVec 64))
(declare-fun temp11353_35 () (_ BitVec 64))
(declare-fun temp11353_36 () (_ BitVec 64))
(declare-fun temp11353_37 () (_ BitVec 64))
(declare-fun temp11353_38 () (_ BitVec 64))
(declare-fun temp11353_39 () (_ BitVec 64))
(declare-fun temp11353_40 () (_ BitVec 64))
(declare-fun temp11353_41 () (_ BitVec 64))
(declare-fun temp11353_42 () (_ BitVec 64))
(declare-fun temp11353_43 () (_ BitVec 64))
(declare-fun temp11353_44 () (_ BitVec 64))
(declare-fun temp11353_45 () (_ BitVec 64))
(declare-fun temp11353_46 () (_ BitVec 64))
(declare-fun temp11353_47 () (_ BitVec 64))
(declare-fun temp11353_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp11353_49 () (_ BitVec 64))
(declare-fun temp11353_50 () (_ BitVec 64))
(declare-fun temp11353_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11353_52 () (_ BitVec 64))
(declare-fun temp11353_53 () (_ BitVec 64))
(declare-fun temp11353_54 () (_ BitVec 64))
(declare-fun temp11353_55 () (_ BitVec 64))
(declare-fun temp11353_56 () (_ BitVec 64))
(declare-fun temp11353_57 () (_ BitVec 64))
(declare-fun temp11353_58 () (_ BitVec 64))
(declare-fun temp11353_59 () (_ BitVec 64))
(declare-fun temp11353_60 () (_ BitVec 64))
(declare-fun temp11353_61 () (_ BitVec 64))
(declare-fun temp11353_62 () (_ BitVec 64))
(declare-fun temp11353_63 () (_ BitVec 64))
(declare-fun temp11353_64 () (_ BitVec 64))
(declare-fun temp11353_65 () (_ BitVec 64))
(declare-fun temp11353_66 () (_ BitVec 64))
(declare-fun temp11353_67 () (_ BitVec 64))
(declare-fun temp11353_68 () (_ BitVec 64))
(declare-fun temp11353_69 () (_ BitVec 64))
(declare-fun temp11353_70 () (_ BitVec 64))
(declare-fun temp11353_71 () (_ BitVec 64))
(declare-fun temp11353_72 () (_ BitVec 64))
(declare-fun temp11353_73 () (_ BitVec 64))
(declare-fun temp11353_74 () (_ BitVec 64))
(declare-fun temp11353_75 () (_ BitVec 64))
(declare-fun temp11353_76 () (_ BitVec 64))
(declare-fun temp11353_77 () (_ BitVec 64))
(declare-fun temp11353_78 () (_ BitVec 64))
(declare-fun temp11353_79 () (_ BitVec 64))
(declare-fun temp11353_80 () (_ BitVec 64))
(declare-fun temp11353_81 () (_ BitVec 64))
(declare-fun temp11353_82 () (_ BitVec 64))
(declare-fun temp11353_83 () (_ BitVec 64))
(declare-fun temp11353_84 () (_ BitVec 64))
(declare-fun temp11353_85 () (_ BitVec 64))
(declare-fun temp11353_86 () (_ BitVec 64))
(declare-fun temp11353_87 () (_ BitVec 64))
(declare-fun temp11353_88 () (_ BitVec 64))
(declare-fun temp11353_89 () (_ BitVec 64))
(declare-fun temp11353_90 () (_ BitVec 64))
(declare-fun temp11353_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp11353_92 () (_ BitVec 64))
(declare-fun temp11353_93 () (_ BitVec 64))
(declare-fun temp11353_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11353_95 () (_ BitVec 64))
(declare-fun temp11353_96 () (_ BitVec 64))
(declare-fun temp11353_97 () (_ BitVec 64))
(declare-fun temp11353_98 () (_ BitVec 64))
(declare-fun temp11353_99 () (_ BitVec 64))
(declare-fun temp11353_100 () (_ BitVec 64))
(declare-fun temp11353_101 () (_ BitVec 64))
(declare-fun temp11353_102 () (_ BitVec 64))
(declare-fun temp11353_103 () (_ BitVec 64))
(declare-fun temp11353_104 () (_ BitVec 64))
(declare-fun temp11353_105 () (_ BitVec 64))
(declare-fun temp11353_106 () (_ BitVec 64))
(declare-fun temp11353_107 () (_ BitVec 64))
(declare-fun temp11353_108 () (_ BitVec 64))
(declare-fun temp11353_109 () (_ BitVec 64))
(declare-fun temp11353_110 () (_ BitVec 64))
(declare-fun temp11353_111 () (_ BitVec 64))
(declare-fun temp11353_112 () (_ BitVec 64))
(declare-fun temp11353_113 () (_ BitVec 64))
(declare-fun temp11353_114 () (_ BitVec 64))
(declare-fun temp11353_115 () (_ BitVec 64))
(declare-fun temp11353_116 () (_ BitVec 64))
(declare-fun temp11353_117 () (_ BitVec 64))
(declare-fun temp11353_118 () (_ BitVec 64))
(declare-fun temp11353_119 () (_ BitVec 64))
(declare-fun temp11353_120 () (_ BitVec 64))
(declare-fun temp11353_121 () (_ BitVec 64))
(declare-fun temp11353_122 () (_ BitVec 64))
(declare-fun temp11353_123 () (_ BitVec 64))
(declare-fun temp11353_124 () (_ BitVec 64))
(declare-fun temp11353_125 () (_ BitVec 64))
(declare-fun temp11353_126 () (_ BitVec 64))
(declare-fun temp11353_127 () (_ BitVec 64))
(declare-fun temp11353_128 () (_ BitVec 64))
(declare-fun temp11353_129 () (_ BitVec 64))
(declare-fun temp11353_130 () (_ BitVec 64))
(declare-fun temp11353_131 () (_ BitVec 64))
(declare-fun temp11353_132 () (_ BitVec 64))
(declare-fun temp11353_133 () (_ BitVec 64))
(declare-fun temp11353_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp11353_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp11353_136 () (_ BitVec 64))
(declare-fun temp11353_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp11353_138 () (_ BitVec 64))
(declare-fun temp11353_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11353_140 () (_ BitVec 64))
(declare-fun temp11353_141 () (_ BitVec 64))
(declare-fun temp11353_142 () (_ BitVec 64))
(declare-fun temp11353_143 () (_ BitVec 64))
(declare-fun temp11353_144 () (_ BitVec 64))
(declare-fun temp11353_145 () (_ BitVec 64))
(declare-fun temp11353_146 () (_ BitVec 64))
(declare-fun temp11353_147 () (_ BitVec 64))
(declare-fun temp11353_148 () (_ BitVec 64))
(declare-fun temp11353_149 () (_ BitVec 64))
(declare-fun temp11353_150 () (_ BitVec 64))
(declare-fun temp11353_151 () (_ BitVec 64))
(declare-fun temp11353_152 () (_ BitVec 64))
(declare-fun temp11353_153 () (_ BitVec 64))
(declare-fun temp11353_154 () (_ BitVec 64))
(declare-fun temp11353_155 () (_ BitVec 64))
(declare-fun temp11353_157 () (_ BitVec 64))
(declare-fun temp11353_158 () (_ BitVec 64))
(declare-fun temp11353_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp11353_159 () (_ BitVec 64))
(declare-fun temp11353_160 () (_ BitVec 64))
(declare-fun temp11353_162 () (_ BitVec 64))
(declare-fun temp11353_163 () (_ BitVec 64))
(declare-fun temp11353_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp11353_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp11353_165 () (_ BitVec 64))
(declare-fun temp11353_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp11353_167 () (_ BitVec 64))
(declare-fun temp11353_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp11353_169 () (_ BitVec 64))
(declare-fun temp11353_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11353_171 () (_ BitVec 64))
(declare-fun temp11353_172 () (_ BitVec 64))
(declare-fun temp11353_173 () (_ BitVec 64))
(declare-fun temp11353_174 () (_ BitVec 64))
(declare-fun temp11353_175 () (_ BitVec 64))
(declare-fun temp11353_176 () (_ BitVec 64))
(declare-fun temp11353_177 () (_ BitVec 64))
(declare-fun temp11353_178 () (_ BitVec 64))
(declare-fun temp11353_179 () (_ BitVec 64))
(declare-fun temp11353_180 () (_ BitVec 64))
(declare-fun temp11353_181 () (_ BitVec 64))
(declare-fun temp11353_182 () (_ BitVec 64))
(declare-fun temp11353_183 () (_ BitVec 64))
(declare-fun temp11353_184 () (_ BitVec 64))
(declare-fun temp11353_185 () (_ BitVec 64))
(declare-fun temp11353_186 () (_ BitVec 64))
(declare-fun temp11353_187 () (_ BitVec 64))
(declare-fun temp11353_188 () (_ BitVec 64))
(declare-fun temp11353_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp11353_190 () (_ BitVec 64))
(declare-fun temp11353_192 () (_ BitVec 64))
(declare-fun temp11353_193 () (_ BitVec 64))
(declare-fun temp11353_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp11353_194 () (_ BitVec 64))
(declare-fun temp11353_195 () (_ BitVec 64))
(declare-fun temp11353_197 () (_ BitVec 64))
(declare-fun temp11353_198 () (_ BitVec 64))
(declare-fun temp11353_196 () (_ BitVec 64))
(declare-fun temp11353_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp11353_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp11353_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp11353_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp11353_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp11353_204 () (_ BitVec 64))
(declare-fun temp11353_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp11353_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp11353_207 () (_ BitVec 64))
(declare-fun temp11353_208 () (_ BitVec 64))
(declare-fun temp11353_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp11353_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp11353_211 () (_ BitVec 64))
(declare-fun temp11353_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp11353_213 () (_ BitVec 64))
(declare-fun temp11353_214 () (_ BitVec 64))
(declare-fun temp11353_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp11353_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp11353_217 () (_ BitVec 64))
(declare-fun temp11353_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp11353_219 () (_ BitVec 64))
(declare-fun var4404867 () (_ BitVec 64))
(declare-fun var4404869 () (_ BitVec 64))
(declare-fun var4470412 () (_ BitVec 64))
(declare-fun var4470413 () (_ BitVec 64))
(declare-fun var4470426 () (_ BitVec 64))
(declare-fun var4470428 () (_ BitVec 64))
(declare-fun temp11353_220 () (_ BitVec 64))
(declare-fun var4470453 () (_ BitVec 64))
(declare-fun var4470455 () (_ BitVec 64))
(declare-fun var4591443 () (_ BitVec 64))
(declare-fun temp11353_221 () (_ BitVec 64))
(assert (= temp11353_1 #x0000000000000001))
(assert (= var77203 temp11353_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp11353_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp11353_2)))
(assert (= temp11353_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp11353_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11353_4 #x0000000000000000))
(assert (= var210941 temp11353_4))
(assert (= temp11353_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp11353_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11353_6 #x0000000000000000))
(assert (= var210986 temp11353_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp11353_7 #x0000000000000000))
(assert (= temp11353_8 temp11353_7))
(assert (= temp11353_9 (select ARGNAME_padding_NAMEEND_VAL temp11353_8)))
(assert (= temp11353_10 #x0000000000000001))
(assert (= temp11353_11 temp11353_10))
(assert (= temp11353_12 (select ARGNAME_padding_NAMEEND_VAL temp11353_11)))
(assert (= temp11353_13 #x0000000000000002))
(assert (= temp11353_14 temp11353_13))
(assert (= temp11353_15 (select ARGNAME_padding_NAMEEND_VAL temp11353_14)))
(assert (= temp11353_16 #x0000000000000003))
(assert (= temp11353_17 temp11353_16))
(assert (= temp11353_18 (select ARGNAME_padding_NAMEEND_VAL temp11353_17)))
(assert (= temp11353_19 #x0000000000000004))
(assert (= temp11353_20 temp11353_19))
(assert (= temp11353_21 (select ARGNAME_padding_NAMEEND_VAL temp11353_20)))
(assert (= temp11353_22 #x0000000000000005))
(assert (= temp11353_23 temp11353_22))
(assert (= temp11353_24 (select ARGNAME_padding_NAMEEND_VAL temp11353_23)))
(assert (= temp11353_25 #x0000000000000000))
(assert (= temp11353_26 #x0000000000000000))
(assert (= temp11353_27 temp11353_26))
(assert (= temp11353_28 (select ARGNAME_padding_NAMEEND_VAL temp11353_27)))
(assert (= temp11353_29 #x0000000000000000))
(assert (= temp11353_30 #x0000000000000001))
(assert (= temp11353_31 temp11353_30))
(assert (= temp11353_32 (select ARGNAME_padding_NAMEEND_VAL temp11353_31)))
(assert (= temp11353_33 #x0000000000000000))
(assert (= temp11353_34 #x0000000000000002))
(assert (= temp11353_35 temp11353_34))
(assert (= temp11353_36 (select ARGNAME_padding_NAMEEND_VAL temp11353_35)))
(assert (= temp11353_37 #x0000000000000000))
(assert (= temp11353_38 #x0000000000000003))
(assert (= temp11353_39 temp11353_38))
(assert (= temp11353_40 (select ARGNAME_padding_NAMEEND_VAL temp11353_39)))
(assert (= temp11353_41 #x0000000000000000))
(assert (= temp11353_42 #x0000000000000004))
(assert (= temp11353_43 temp11353_42))
(assert (= temp11353_44 (select ARGNAME_padding_NAMEEND_VAL temp11353_43)))
(assert (= temp11353_45 #x0000000000000000))
(assert (= temp11353_46 #x0000000000000005))
(assert (= temp11353_47 temp11353_46))
(assert (= temp11353_48 (select ARGNAME_padding_NAMEEND_VAL temp11353_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp11353_28 temp11353_25)
             (bvslt temp11353_32 temp11353_29)
             (bvslt temp11353_36 temp11353_33)
             (bvslt temp11353_40 temp11353_37)
             (bvslt temp11353_44 temp11353_41)
             (bvslt temp11353_48 temp11353_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11353_49 #x0000000000000000))
(assert (= var1191714 temp11353_49))
(assert (= temp11353_50 #x0000000000000000))
(assert (= temp11353_51 temp11353_50))
(assert (= temp11353_52 (select ARGNAME_output_padding_NAMEEND_VAL temp11353_51)))
(assert (= temp11353_53 #x0000000000000001))
(assert (= temp11353_54 temp11353_53))
(assert (= temp11353_55 (select ARGNAME_output_padding_NAMEEND_VAL temp11353_54)))
(assert (= temp11353_56 #x0000000000000002))
(assert (= temp11353_57 temp11353_56))
(assert (= temp11353_58 (select ARGNAME_output_padding_NAMEEND_VAL temp11353_57)))
(assert (= temp11353_59 #x0000000000000003))
(assert (= temp11353_60 temp11353_59))
(assert (= temp11353_61 (select ARGNAME_output_padding_NAMEEND_VAL temp11353_60)))
(assert (= temp11353_62 #x0000000000000004))
(assert (= temp11353_63 temp11353_62))
(assert (= temp11353_64 (select ARGNAME_output_padding_NAMEEND_VAL temp11353_63)))
(assert (= temp11353_65 #x0000000000000005))
(assert (= temp11353_66 temp11353_65))
(assert (= temp11353_67 (select ARGNAME_output_padding_NAMEEND_VAL temp11353_66)))
(assert (= temp11353_68 #x0000000000000000))
(assert (= temp11353_69 #x0000000000000000))
(assert (= temp11353_70 temp11353_69))
(assert (= temp11353_71 (select ARGNAME_output_padding_NAMEEND_VAL temp11353_70)))
(assert (= temp11353_72 #x0000000000000000))
(assert (= temp11353_73 #x0000000000000001))
(assert (= temp11353_74 temp11353_73))
(assert (= temp11353_75 (select ARGNAME_output_padding_NAMEEND_VAL temp11353_74)))
(assert (= temp11353_76 #x0000000000000000))
(assert (= temp11353_77 #x0000000000000002))
(assert (= temp11353_78 temp11353_77))
(assert (= temp11353_79 (select ARGNAME_output_padding_NAMEEND_VAL temp11353_78)))
(assert (= temp11353_80 #x0000000000000000))
(assert (= temp11353_81 #x0000000000000003))
(assert (= temp11353_82 temp11353_81))
(assert (= temp11353_83 (select ARGNAME_output_padding_NAMEEND_VAL temp11353_82)))
(assert (= temp11353_84 #x0000000000000000))
(assert (= temp11353_85 #x0000000000000004))
(assert (= temp11353_86 temp11353_85))
(assert (= temp11353_87 (select ARGNAME_output_padding_NAMEEND_VAL temp11353_86)))
(assert (= temp11353_88 #x0000000000000000))
(assert (= temp11353_89 #x0000000000000005))
(assert (= temp11353_90 temp11353_89))
(assert (= temp11353_91 (select ARGNAME_output_padding_NAMEEND_VAL temp11353_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp11353_71 temp11353_68)
             (bvslt temp11353_75 temp11353_72)
             (bvslt temp11353_79 temp11353_76)
             (bvslt temp11353_83 temp11353_80)
             (bvslt temp11353_87 temp11353_84)
             (bvslt temp11353_91 temp11353_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11353_92 #x0000000000000000))
(assert (= var1191725 temp11353_92))
(assert (= temp11353_93 #x0000000000000000))
(assert (= temp11353_94 temp11353_93))
(assert (= temp11353_95 (select ARGNAME_stride_NAMEEND_VAL temp11353_94)))
(assert (= temp11353_96 #x0000000000000001))
(assert (= temp11353_97 temp11353_96))
(assert (= temp11353_98 (select ARGNAME_stride_NAMEEND_VAL temp11353_97)))
(assert (= temp11353_99 #x0000000000000002))
(assert (= temp11353_100 temp11353_99))
(assert (= temp11353_101 (select ARGNAME_stride_NAMEEND_VAL temp11353_100)))
(assert (= temp11353_102 #x0000000000000003))
(assert (= temp11353_103 temp11353_102))
(assert (= temp11353_104 (select ARGNAME_stride_NAMEEND_VAL temp11353_103)))
(assert (= temp11353_105 #x0000000000000004))
(assert (= temp11353_106 temp11353_105))
(assert (= temp11353_107 (select ARGNAME_stride_NAMEEND_VAL temp11353_106)))
(assert (= temp11353_108 #x0000000000000005))
(assert (= temp11353_109 temp11353_108))
(assert (= temp11353_110 (select ARGNAME_stride_NAMEEND_VAL temp11353_109)))
(assert (= temp11353_111 #x0000000000000000))
(assert (= temp11353_112 #x0000000000000000))
(assert (= temp11353_113 temp11353_112))
(assert (= temp11353_114 (select ARGNAME_stride_NAMEEND_VAL temp11353_113)))
(assert (= temp11353_115 #x0000000000000000))
(assert (= temp11353_116 #x0000000000000001))
(assert (= temp11353_117 temp11353_116))
(assert (= temp11353_118 (select ARGNAME_stride_NAMEEND_VAL temp11353_117)))
(assert (= temp11353_119 #x0000000000000000))
(assert (= temp11353_120 #x0000000000000002))
(assert (= temp11353_121 temp11353_120))
(assert (= temp11353_122 (select ARGNAME_stride_NAMEEND_VAL temp11353_121)))
(assert (= temp11353_123 #x0000000000000000))
(assert (= temp11353_124 #x0000000000000003))
(assert (= temp11353_125 temp11353_124))
(assert (= temp11353_126 (select ARGNAME_stride_NAMEEND_VAL temp11353_125)))
(assert (= temp11353_127 #x0000000000000000))
(assert (= temp11353_128 #x0000000000000004))
(assert (= temp11353_129 temp11353_128))
(assert (= temp11353_130 (select ARGNAME_stride_NAMEEND_VAL temp11353_129)))
(assert (= temp11353_131 #x0000000000000000))
(assert (= temp11353_132 #x0000000000000005))
(assert (= temp11353_133 temp11353_132))
(assert (= temp11353_134 (select ARGNAME_stride_NAMEEND_VAL temp11353_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp11353_114 temp11353_111)
             (bvsle temp11353_118 temp11353_115)
             (bvsle temp11353_122 temp11353_119)
             (bvsle temp11353_126 temp11353_123)
             (bvsle temp11353_130 temp11353_127)
             (bvsle temp11353_134 temp11353_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11353_135 #x0000000000000000))
(assert (= var1191735 temp11353_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11353_136 #x0000000000000001))
(assert (= var1191747 temp11353_136))
(assert (= temp11353_137 #x0000000000000000))
(assert (= var1179826 temp11353_137))
(assert (= temp11353_138 #x0000000000000000))
(assert (= temp11353_139 temp11353_138))
(assert (= temp11353_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11353_139)))
(assert (= temp11353_141 #x0000000000000001))
(assert (= temp11353_142 temp11353_141))
(assert (= temp11353_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11353_142)))
(assert (= temp11353_144 #x0000000000000002))
(assert (= temp11353_145 temp11353_144))
(assert (= temp11353_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11353_145)))
(assert (= temp11353_147 #x0000000000000003))
(assert (= temp11353_148 temp11353_147))
(assert (= temp11353_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11353_148)))
(assert (= temp11353_150 #x0000000000000004))
(assert (= temp11353_151 temp11353_150))
(assert (= temp11353_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11353_151)))
(assert (= temp11353_153 #x0000000000000005))
(assert (= temp11353_154 temp11353_153))
(assert (= temp11353_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11353_154)))
(assert (= temp11353_157 var1179826))
(assert (= temp11353_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11353_157)))
(assert (= temp11353_156 temp11353_158))
(assert (= var1191780
   (ite (bvslt temp11353_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11353_159 #x0000000000000000))
(assert (= var1191780 temp11353_159))
(assert (= temp11353_160 #x0000000000000000))
(assert (= var1179826 temp11353_160))
(assert (= temp11353_162 var1179826))
(assert (= temp11353_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11353_162)))
(assert (= temp11353_161 temp11353_163))
(assert (= var1191802 (bvsmod temp11353_161 ARGNAME_groups_NAMEEND)))
(assert (= temp11353_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp11353_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp11353_165 #x0000000000000001))
(assert (= var1191803 temp11353_165))
(assert (= temp11353_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp11353_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11353_167 #x0000000000000001))
(assert (= var1191823 temp11353_167))
(assert (= temp11353_168 #x0000000000000001))
(assert (= var1180714 temp11353_168))
(assert (= temp11353_169 #x0000000000000000))
(assert (= temp11353_170 temp11353_169))
(assert (= temp11353_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp11353_170)))
(assert (= temp11353_172 #x0000000000000001))
(assert (= temp11353_173 temp11353_172))
(assert (= temp11353_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp11353_173)))
(assert (= temp11353_175 #x0000000000000002))
(assert (= temp11353_176 temp11353_175))
(assert (= temp11353_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp11353_176)))
(assert (= temp11353_178 #x0000000000000003))
(assert (= temp11353_179 temp11353_178))
(assert (= temp11353_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp11353_179)))
(assert (= temp11353_181 #x0000000000000004))
(assert (= temp11353_182 temp11353_181))
(assert (= temp11353_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp11353_182)))
(assert (= temp11353_184 #x0000000000000005))
(assert (= temp11353_185 temp11353_184))
(assert (= temp11353_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp11353_185)))
(assert (= temp11353_187 #x0000000000000000))
(assert (= temp11353_188
   (ite (bvslt var1180714 temp11353_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp11353_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp11353_188)))
(assert (= var1191831 temp11353_189))
(assert (bvslt (ite (bvslt var1180714 temp11353_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11353_190 #x0000000000000001))
(assert (= var1180714 temp11353_190))
(assert (= temp11353_192 var1180714))
(assert (= temp11353_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11353_192)))
(assert (= temp11353_191 temp11353_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp11353_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp11353_194 #x0000000000000001))
(assert (= var1191836 temp11353_194))
(assert (= temp11353_195 #x0000000000000000))
(assert (= var1179826 temp11353_195))
(assert (= temp11353_197 var1179826))
(assert (= temp11353_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11353_197)))
(assert (= temp11353_196 temp11353_198))
(assert (= temp11353_199 #x0000000000000002))
(assert (= var1586025 temp11353_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp11353_200 #x0000000000000001))
(assert (= var1191993 temp11353_200))
(assert (= temp11353_201 #x0000000000000001))
(assert (= var2700303 temp11353_201))
(assert (= temp11353_202 #x0000000000000001))
(assert (= var2962447 temp11353_202))
(assert (= temp11353_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp11353_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11353_204 #x0000000000000001))
(assert (= var211058 temp11353_204))
(assert (= temp11353_205 #x0000000000000001))
(assert (= var211188 temp11353_205))
(assert (= var3879401 var211188))
(assert (= temp11353_206 #x0000000000000000))
(assert (= var3866802 temp11353_206))
(assert (= temp11353_207 #x0000000000000000))
(assert (= temp11353_208
   (ite (bvslt var3866802 temp11353_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp11353_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp11353_208)))
(assert (= var3879420 temp11353_209))
(assert (bvslt (ite (bvslt var3866802 temp11353_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11353_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp11353_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp11353_211 #x0000000000000000))
(assert (= var3879421 temp11353_211))
(assert (= temp11353_212 #x0000000000000001))
(assert (= var3867690 temp11353_212))
(assert (= temp11353_213 #x0000000000000000))
(assert (= temp11353_214
   (ite (bvslt var3867690 temp11353_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp11353_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp11353_214)))
(assert (= var3879423 temp11353_215))
(assert (bvslt (ite (bvslt var3867690 temp11353_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11353_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp11353_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp11353_217 #x0000000000000001))
(assert (= var3879424 temp11353_217))
(assert (= temp11353_218 #x0000000000000000))
(assert (= var4133117 temp11353_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp11353_219 #x0000000000000002))
(assert (= var4404867 temp11353_219))
(assert (= var4404869 (bvsub ARGNAME_weight_NAMEEND_DIM var4404867)))
(assert (= var4470412 var4404867))
(assert (= var4470413 var4404869))
(assert (= var4470426 (bvadd var4470413 var4470412)))
(assert (= var4470428
   (ite (bvsgt var4470426 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11353_220 #x0000000000000000))
(assert (= var4470428 temp11353_220))
(assert (= var4470453 var4470412))
(assert (= var4470455 var4470413))
(assert (= var4591443 var4470455))
(assert (= temp11353_221 #x0000000000000001))
(assert (= var211058 temp11353_221))
(model-add temp11353_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp11353_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp11353_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp11353_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




