(declare-fun temp641_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp641_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp641_3 () (_ BitVec 64))
(declare-fun temp641_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp641_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp641_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp641_7 () (_ BitVec 64))
(declare-fun temp641_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp641_9 () (_ BitVec 64))
(declare-fun temp641_10 () (_ BitVec 64))
(declare-fun temp641_11 () (_ BitVec 64))
(declare-fun temp641_12 () (_ BitVec 64))
(declare-fun temp641_13 () (_ BitVec 64))
(declare-fun temp641_14 () (_ BitVec 64))
(declare-fun temp641_15 () (_ BitVec 64))
(declare-fun temp641_16 () (_ BitVec 64))
(declare-fun temp641_17 () (_ BitVec 64))
(declare-fun temp641_18 () (_ BitVec 64))
(declare-fun temp641_19 () (_ BitVec 64))
(declare-fun temp641_20 () (_ BitVec 64))
(declare-fun temp641_21 () (_ BitVec 64))
(declare-fun temp641_22 () (_ BitVec 64))
(declare-fun temp641_23 () (_ BitVec 64))
(declare-fun temp641_24 () (_ BitVec 64))
(declare-fun temp641_25 () (_ BitVec 64))
(declare-fun temp641_26 () (_ BitVec 64))
(declare-fun temp641_27 () (_ BitVec 64))
(declare-fun temp641_28 () (_ BitVec 64))
(declare-fun temp641_29 () (_ BitVec 64))
(declare-fun temp641_30 () (_ BitVec 64))
(declare-fun temp641_31 () (_ BitVec 64))
(declare-fun temp641_32 () (_ BitVec 64))
(declare-fun temp641_33 () (_ BitVec 64))
(declare-fun temp641_34 () (_ BitVec 64))
(declare-fun temp641_35 () (_ BitVec 64))
(declare-fun temp641_36 () (_ BitVec 64))
(declare-fun temp641_37 () (_ BitVec 64))
(declare-fun temp641_38 () (_ BitVec 64))
(declare-fun temp641_39 () (_ BitVec 64))
(declare-fun temp641_40 () (_ BitVec 64))
(declare-fun temp641_41 () (_ BitVec 64))
(declare-fun temp641_42 () (_ BitVec 64))
(declare-fun temp641_43 () (_ BitVec 64))
(declare-fun temp641_44 () (_ BitVec 64))
(declare-fun temp641_45 () (_ BitVec 64))
(declare-fun temp641_46 () (_ BitVec 64))
(declare-fun temp641_47 () (_ BitVec 64))
(declare-fun temp641_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp641_49 () (_ BitVec 64))
(declare-fun temp641_50 () (_ BitVec 64))
(declare-fun temp641_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp641_52 () (_ BitVec 64))
(declare-fun temp641_53 () (_ BitVec 64))
(declare-fun temp641_54 () (_ BitVec 64))
(declare-fun temp641_55 () (_ BitVec 64))
(declare-fun temp641_56 () (_ BitVec 64))
(declare-fun temp641_57 () (_ BitVec 64))
(declare-fun temp641_58 () (_ BitVec 64))
(declare-fun temp641_59 () (_ BitVec 64))
(declare-fun temp641_60 () (_ BitVec 64))
(declare-fun temp641_61 () (_ BitVec 64))
(declare-fun temp641_62 () (_ BitVec 64))
(declare-fun temp641_63 () (_ BitVec 64))
(declare-fun temp641_64 () (_ BitVec 64))
(declare-fun temp641_65 () (_ BitVec 64))
(declare-fun temp641_66 () (_ BitVec 64))
(declare-fun temp641_67 () (_ BitVec 64))
(declare-fun temp641_68 () (_ BitVec 64))
(declare-fun temp641_69 () (_ BitVec 64))
(declare-fun temp641_70 () (_ BitVec 64))
(declare-fun temp641_71 () (_ BitVec 64))
(declare-fun temp641_72 () (_ BitVec 64))
(declare-fun temp641_73 () (_ BitVec 64))
(declare-fun temp641_74 () (_ BitVec 64))
(declare-fun temp641_75 () (_ BitVec 64))
(declare-fun temp641_76 () (_ BitVec 64))
(declare-fun temp641_77 () (_ BitVec 64))
(declare-fun temp641_78 () (_ BitVec 64))
(declare-fun temp641_79 () (_ BitVec 64))
(declare-fun temp641_80 () (_ BitVec 64))
(declare-fun temp641_81 () (_ BitVec 64))
(declare-fun temp641_82 () (_ BitVec 64))
(declare-fun temp641_83 () (_ BitVec 64))
(declare-fun temp641_84 () (_ BitVec 64))
(declare-fun temp641_85 () (_ BitVec 64))
(declare-fun temp641_86 () (_ BitVec 64))
(declare-fun temp641_87 () (_ BitVec 64))
(declare-fun temp641_88 () (_ BitVec 64))
(declare-fun temp641_89 () (_ BitVec 64))
(declare-fun temp641_90 () (_ BitVec 64))
(declare-fun temp641_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp641_92 () (_ BitVec 64))
(declare-fun temp641_93 () (_ BitVec 64))
(declare-fun temp641_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp641_95 () (_ BitVec 64))
(declare-fun temp641_96 () (_ BitVec 64))
(declare-fun temp641_97 () (_ BitVec 64))
(declare-fun temp641_98 () (_ BitVec 64))
(declare-fun temp641_99 () (_ BitVec 64))
(declare-fun temp641_100 () (_ BitVec 64))
(declare-fun temp641_101 () (_ BitVec 64))
(declare-fun temp641_102 () (_ BitVec 64))
(declare-fun temp641_103 () (_ BitVec 64))
(declare-fun temp641_104 () (_ BitVec 64))
(declare-fun temp641_105 () (_ BitVec 64))
(declare-fun temp641_106 () (_ BitVec 64))
(declare-fun temp641_107 () (_ BitVec 64))
(declare-fun temp641_108 () (_ BitVec 64))
(declare-fun temp641_109 () (_ BitVec 64))
(declare-fun temp641_110 () (_ BitVec 64))
(declare-fun temp641_111 () (_ BitVec 64))
(declare-fun temp641_112 () (_ BitVec 64))
(declare-fun temp641_113 () (_ BitVec 64))
(declare-fun temp641_114 () (_ BitVec 64))
(declare-fun temp641_115 () (_ BitVec 64))
(declare-fun temp641_116 () (_ BitVec 64))
(declare-fun temp641_117 () (_ BitVec 64))
(declare-fun temp641_118 () (_ BitVec 64))
(declare-fun temp641_119 () (_ BitVec 64))
(declare-fun temp641_120 () (_ BitVec 64))
(declare-fun temp641_121 () (_ BitVec 64))
(declare-fun temp641_122 () (_ BitVec 64))
(declare-fun temp641_123 () (_ BitVec 64))
(declare-fun temp641_124 () (_ BitVec 64))
(declare-fun temp641_125 () (_ BitVec 64))
(declare-fun temp641_126 () (_ BitVec 64))
(declare-fun temp641_127 () (_ BitVec 64))
(declare-fun temp641_128 () (_ BitVec 64))
(declare-fun temp641_129 () (_ BitVec 64))
(declare-fun temp641_130 () (_ BitVec 64))
(declare-fun temp641_131 () (_ BitVec 64))
(declare-fun temp641_132 () (_ BitVec 64))
(declare-fun temp641_133 () (_ BitVec 64))
(declare-fun temp641_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp641_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp641_136 () (_ BitVec 64))
(declare-fun temp641_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp641_138 () (_ BitVec 64))
(declare-fun temp641_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp641_140 () (_ BitVec 64))
(declare-fun temp641_141 () (_ BitVec 64))
(declare-fun temp641_142 () (_ BitVec 64))
(declare-fun temp641_143 () (_ BitVec 64))
(declare-fun temp641_144 () (_ BitVec 64))
(declare-fun temp641_145 () (_ BitVec 64))
(declare-fun temp641_146 () (_ BitVec 64))
(declare-fun temp641_147 () (_ BitVec 64))
(declare-fun temp641_148 () (_ BitVec 64))
(declare-fun temp641_149 () (_ BitVec 64))
(declare-fun temp641_150 () (_ BitVec 64))
(declare-fun temp641_151 () (_ BitVec 64))
(declare-fun temp641_152 () (_ BitVec 64))
(declare-fun temp641_153 () (_ BitVec 64))
(declare-fun temp641_154 () (_ BitVec 64))
(declare-fun temp641_155 () (_ BitVec 64))
(declare-fun temp641_157 () (_ BitVec 64))
(declare-fun temp641_158 () (_ BitVec 64))
(declare-fun temp641_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp641_159 () (_ BitVec 64))
(declare-fun temp641_160 () (_ BitVec 64))
(declare-fun temp641_162 () (_ BitVec 64))
(declare-fun temp641_163 () (_ BitVec 64))
(declare-fun temp641_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp641_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp641_165 () (_ BitVec 64))
(declare-fun temp641_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp641_167 () (_ BitVec 64))
(declare-fun temp641_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp641_169 () (_ BitVec 64))
(declare-fun temp641_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp641_171 () (_ BitVec 64))
(declare-fun temp641_172 () (_ BitVec 64))
(declare-fun temp641_173 () (_ BitVec 64))
(declare-fun temp641_174 () (_ BitVec 64))
(declare-fun temp641_175 () (_ BitVec 64))
(declare-fun temp641_176 () (_ BitVec 64))
(declare-fun temp641_177 () (_ BitVec 64))
(declare-fun temp641_178 () (_ BitVec 64))
(declare-fun temp641_179 () (_ BitVec 64))
(declare-fun temp641_180 () (_ BitVec 64))
(declare-fun temp641_181 () (_ BitVec 64))
(declare-fun temp641_182 () (_ BitVec 64))
(declare-fun temp641_183 () (_ BitVec 64))
(declare-fun temp641_184 () (_ BitVec 64))
(declare-fun temp641_185 () (_ BitVec 64))
(declare-fun temp641_186 () (_ BitVec 64))
(declare-fun temp641_187 () (_ BitVec 64))
(declare-fun temp641_188 () (_ BitVec 64))
(declare-fun temp641_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp641_190 () (_ BitVec 64))
(declare-fun temp641_192 () (_ BitVec 64))
(declare-fun temp641_193 () (_ BitVec 64))
(declare-fun temp641_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp641_194 () (_ BitVec 64))
(declare-fun temp641_195 () (_ BitVec 64))
(declare-fun temp641_197 () (_ BitVec 64))
(declare-fun temp641_198 () (_ BitVec 64))
(declare-fun temp641_196 () (_ BitVec 64))
(declare-fun temp641_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp641_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp641_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp641_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp641_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp641_204 () (_ BitVec 64))
(declare-fun temp641_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp641_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp641_207 () (_ BitVec 64))
(declare-fun temp641_208 () (_ BitVec 64))
(declare-fun temp641_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp641_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp641_211 () (_ BitVec 64))
(declare-fun temp641_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp641_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp641_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4993424 () (_ BitVec 64))
(declare-fun var211494 () (_ BitVec 64))
(declare-fun temp641_215 () (_ BitVec 64))
(declare-fun var211495 () (_ BitVec 64))
(declare-fun temp641_216 () (_ BitVec 64))
(assert (= temp641_1 #x0000000000000001))
(assert (= var77203 temp641_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp641_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp641_2)))
(assert (= temp641_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp641_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp641_4 #x0000000000000000))
(assert (= var210941 temp641_4))
(assert (= temp641_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp641_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp641_6 #x0000000000000000))
(assert (= var210986 temp641_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp641_7 #x0000000000000000))
(assert (= temp641_8 temp641_7))
(assert (= temp641_9 (select ARGNAME_padding_NAMEEND_VAL temp641_8)))
(assert (= temp641_10 #x0000000000000001))
(assert (= temp641_11 temp641_10))
(assert (= temp641_12 (select ARGNAME_padding_NAMEEND_VAL temp641_11)))
(assert (= temp641_13 #x0000000000000002))
(assert (= temp641_14 temp641_13))
(assert (= temp641_15 (select ARGNAME_padding_NAMEEND_VAL temp641_14)))
(assert (= temp641_16 #x0000000000000003))
(assert (= temp641_17 temp641_16))
(assert (= temp641_18 (select ARGNAME_padding_NAMEEND_VAL temp641_17)))
(assert (= temp641_19 #x0000000000000004))
(assert (= temp641_20 temp641_19))
(assert (= temp641_21 (select ARGNAME_padding_NAMEEND_VAL temp641_20)))
(assert (= temp641_22 #x0000000000000005))
(assert (= temp641_23 temp641_22))
(assert (= temp641_24 (select ARGNAME_padding_NAMEEND_VAL temp641_23)))
(assert (= temp641_25 #x0000000000000000))
(assert (= temp641_26 #x0000000000000000))
(assert (= temp641_27 temp641_26))
(assert (= temp641_28 (select ARGNAME_padding_NAMEEND_VAL temp641_27)))
(assert (= temp641_29 #x0000000000000000))
(assert (= temp641_30 #x0000000000000001))
(assert (= temp641_31 temp641_30))
(assert (= temp641_32 (select ARGNAME_padding_NAMEEND_VAL temp641_31)))
(assert (= temp641_33 #x0000000000000000))
(assert (= temp641_34 #x0000000000000002))
(assert (= temp641_35 temp641_34))
(assert (= temp641_36 (select ARGNAME_padding_NAMEEND_VAL temp641_35)))
(assert (= temp641_37 #x0000000000000000))
(assert (= temp641_38 #x0000000000000003))
(assert (= temp641_39 temp641_38))
(assert (= temp641_40 (select ARGNAME_padding_NAMEEND_VAL temp641_39)))
(assert (= temp641_41 #x0000000000000000))
(assert (= temp641_42 #x0000000000000004))
(assert (= temp641_43 temp641_42))
(assert (= temp641_44 (select ARGNAME_padding_NAMEEND_VAL temp641_43)))
(assert (= temp641_45 #x0000000000000000))
(assert (= temp641_46 #x0000000000000005))
(assert (= temp641_47 temp641_46))
(assert (= temp641_48 (select ARGNAME_padding_NAMEEND_VAL temp641_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp641_28 temp641_25)
             (bvslt temp641_32 temp641_29)
             (bvslt temp641_36 temp641_33)
             (bvslt temp641_40 temp641_37)
             (bvslt temp641_44 temp641_41)
             (bvslt temp641_48 temp641_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp641_49 #x0000000000000000))
(assert (= var1191714 temp641_49))
(assert (= temp641_50 #x0000000000000000))
(assert (= temp641_51 temp641_50))
(assert (= temp641_52 (select ARGNAME_output_padding_NAMEEND_VAL temp641_51)))
(assert (= temp641_53 #x0000000000000001))
(assert (= temp641_54 temp641_53))
(assert (= temp641_55 (select ARGNAME_output_padding_NAMEEND_VAL temp641_54)))
(assert (= temp641_56 #x0000000000000002))
(assert (= temp641_57 temp641_56))
(assert (= temp641_58 (select ARGNAME_output_padding_NAMEEND_VAL temp641_57)))
(assert (= temp641_59 #x0000000000000003))
(assert (= temp641_60 temp641_59))
(assert (= temp641_61 (select ARGNAME_output_padding_NAMEEND_VAL temp641_60)))
(assert (= temp641_62 #x0000000000000004))
(assert (= temp641_63 temp641_62))
(assert (= temp641_64 (select ARGNAME_output_padding_NAMEEND_VAL temp641_63)))
(assert (= temp641_65 #x0000000000000005))
(assert (= temp641_66 temp641_65))
(assert (= temp641_67 (select ARGNAME_output_padding_NAMEEND_VAL temp641_66)))
(assert (= temp641_68 #x0000000000000000))
(assert (= temp641_69 #x0000000000000000))
(assert (= temp641_70 temp641_69))
(assert (= temp641_71 (select ARGNAME_output_padding_NAMEEND_VAL temp641_70)))
(assert (= temp641_72 #x0000000000000000))
(assert (= temp641_73 #x0000000000000001))
(assert (= temp641_74 temp641_73))
(assert (= temp641_75 (select ARGNAME_output_padding_NAMEEND_VAL temp641_74)))
(assert (= temp641_76 #x0000000000000000))
(assert (= temp641_77 #x0000000000000002))
(assert (= temp641_78 temp641_77))
(assert (= temp641_79 (select ARGNAME_output_padding_NAMEEND_VAL temp641_78)))
(assert (= temp641_80 #x0000000000000000))
(assert (= temp641_81 #x0000000000000003))
(assert (= temp641_82 temp641_81))
(assert (= temp641_83 (select ARGNAME_output_padding_NAMEEND_VAL temp641_82)))
(assert (= temp641_84 #x0000000000000000))
(assert (= temp641_85 #x0000000000000004))
(assert (= temp641_86 temp641_85))
(assert (= temp641_87 (select ARGNAME_output_padding_NAMEEND_VAL temp641_86)))
(assert (= temp641_88 #x0000000000000000))
(assert (= temp641_89 #x0000000000000005))
(assert (= temp641_90 temp641_89))
(assert (= temp641_91 (select ARGNAME_output_padding_NAMEEND_VAL temp641_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp641_71 temp641_68)
             (bvslt temp641_75 temp641_72)
             (bvslt temp641_79 temp641_76)
             (bvslt temp641_83 temp641_80)
             (bvslt temp641_87 temp641_84)
             (bvslt temp641_91 temp641_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp641_92 #x0000000000000000))
(assert (= var1191725 temp641_92))
(assert (= temp641_93 #x0000000000000000))
(assert (= temp641_94 temp641_93))
(assert (= temp641_95 (select ARGNAME_stride_NAMEEND_VAL temp641_94)))
(assert (= temp641_96 #x0000000000000001))
(assert (= temp641_97 temp641_96))
(assert (= temp641_98 (select ARGNAME_stride_NAMEEND_VAL temp641_97)))
(assert (= temp641_99 #x0000000000000002))
(assert (= temp641_100 temp641_99))
(assert (= temp641_101 (select ARGNAME_stride_NAMEEND_VAL temp641_100)))
(assert (= temp641_102 #x0000000000000003))
(assert (= temp641_103 temp641_102))
(assert (= temp641_104 (select ARGNAME_stride_NAMEEND_VAL temp641_103)))
(assert (= temp641_105 #x0000000000000004))
(assert (= temp641_106 temp641_105))
(assert (= temp641_107 (select ARGNAME_stride_NAMEEND_VAL temp641_106)))
(assert (= temp641_108 #x0000000000000005))
(assert (= temp641_109 temp641_108))
(assert (= temp641_110 (select ARGNAME_stride_NAMEEND_VAL temp641_109)))
(assert (= temp641_111 #x0000000000000000))
(assert (= temp641_112 #x0000000000000000))
(assert (= temp641_113 temp641_112))
(assert (= temp641_114 (select ARGNAME_stride_NAMEEND_VAL temp641_113)))
(assert (= temp641_115 #x0000000000000000))
(assert (= temp641_116 #x0000000000000001))
(assert (= temp641_117 temp641_116))
(assert (= temp641_118 (select ARGNAME_stride_NAMEEND_VAL temp641_117)))
(assert (= temp641_119 #x0000000000000000))
(assert (= temp641_120 #x0000000000000002))
(assert (= temp641_121 temp641_120))
(assert (= temp641_122 (select ARGNAME_stride_NAMEEND_VAL temp641_121)))
(assert (= temp641_123 #x0000000000000000))
(assert (= temp641_124 #x0000000000000003))
(assert (= temp641_125 temp641_124))
(assert (= temp641_126 (select ARGNAME_stride_NAMEEND_VAL temp641_125)))
(assert (= temp641_127 #x0000000000000000))
(assert (= temp641_128 #x0000000000000004))
(assert (= temp641_129 temp641_128))
(assert (= temp641_130 (select ARGNAME_stride_NAMEEND_VAL temp641_129)))
(assert (= temp641_131 #x0000000000000000))
(assert (= temp641_132 #x0000000000000005))
(assert (= temp641_133 temp641_132))
(assert (= temp641_134 (select ARGNAME_stride_NAMEEND_VAL temp641_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp641_114 temp641_111)
             (bvsle temp641_118 temp641_115)
             (bvsle temp641_122 temp641_119)
             (bvsle temp641_126 temp641_123)
             (bvsle temp641_130 temp641_127)
             (bvsle temp641_134 temp641_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp641_135 #x0000000000000000))
(assert (= var1191735 temp641_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp641_136 #x0000000000000001))
(assert (= var1191747 temp641_136))
(assert (= temp641_137 #x0000000000000000))
(assert (= var1179826 temp641_137))
(assert (= temp641_138 #x0000000000000000))
(assert (= temp641_139 temp641_138))
(assert (= temp641_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp641_139)))
(assert (= temp641_141 #x0000000000000001))
(assert (= temp641_142 temp641_141))
(assert (= temp641_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp641_142)))
(assert (= temp641_144 #x0000000000000002))
(assert (= temp641_145 temp641_144))
(assert (= temp641_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp641_145)))
(assert (= temp641_147 #x0000000000000003))
(assert (= temp641_148 temp641_147))
(assert (= temp641_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp641_148)))
(assert (= temp641_150 #x0000000000000004))
(assert (= temp641_151 temp641_150))
(assert (= temp641_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp641_151)))
(assert (= temp641_153 #x0000000000000005))
(assert (= temp641_154 temp641_153))
(assert (= temp641_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp641_154)))
(assert (= temp641_157 var1179826))
(assert (= temp641_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp641_157)))
(assert (= temp641_156 temp641_158))
(assert (= var1191780
   (ite (bvslt temp641_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp641_159 #x0000000000000000))
(assert (= var1191780 temp641_159))
(assert (= temp641_160 #x0000000000000000))
(assert (= var1179826 temp641_160))
(assert (= temp641_162 var1179826))
(assert (= temp641_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp641_162)))
(assert (= temp641_161 temp641_163))
(assert (= var1191802 (bvsmod temp641_161 ARGNAME_groups_NAMEEND)))
(assert (= temp641_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp641_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp641_165 #x0000000000000001))
(assert (= var1191803 temp641_165))
(assert (= temp641_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp641_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp641_167 #x0000000000000001))
(assert (= var1191823 temp641_167))
(assert (= temp641_168 #x0000000000000001))
(assert (= var1180714 temp641_168))
(assert (= temp641_169 #x0000000000000000))
(assert (= temp641_170 temp641_169))
(assert (= temp641_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp641_170)))
(assert (= temp641_172 #x0000000000000001))
(assert (= temp641_173 temp641_172))
(assert (= temp641_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp641_173)))
(assert (= temp641_175 #x0000000000000002))
(assert (= temp641_176 temp641_175))
(assert (= temp641_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp641_176)))
(assert (= temp641_178 #x0000000000000003))
(assert (= temp641_179 temp641_178))
(assert (= temp641_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp641_179)))
(assert (= temp641_181 #x0000000000000004))
(assert (= temp641_182 temp641_181))
(assert (= temp641_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp641_182)))
(assert (= temp641_184 #x0000000000000005))
(assert (= temp641_185 temp641_184))
(assert (= temp641_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp641_185)))
(assert (= temp641_187 #x0000000000000000))
(assert (= temp641_188
   (ite (bvslt var1180714 temp641_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp641_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp641_188)))
(assert (= var1191831 temp641_189))
(assert (bvslt (ite (bvslt var1180714 temp641_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp641_190 #x0000000000000001))
(assert (= var1180714 temp641_190))
(assert (= temp641_192 var1180714))
(assert (= temp641_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp641_192)))
(assert (= temp641_191 temp641_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp641_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp641_194 #x0000000000000001))
(assert (= var1191836 temp641_194))
(assert (= temp641_195 #x0000000000000000))
(assert (= var1179826 temp641_195))
(assert (= temp641_197 var1179826))
(assert (= temp641_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp641_197)))
(assert (= temp641_196 temp641_198))
(assert (= temp641_199 #x0000000000000002))
(assert (= var1586025 temp641_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp641_200 #x0000000000000001))
(assert (= var1191993 temp641_200))
(assert (= temp641_201 #x0000000000000001))
(assert (= var2700303 temp641_201))
(assert (= temp641_202 #x0000000000000001))
(assert (= var2962447 temp641_202))
(assert (= temp641_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp641_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp641_204 #x0000000000000001))
(assert (= var211058 temp641_204))
(assert (= temp641_205 #x0000000000000001))
(assert (= var211188 temp641_205))
(assert (= var3879401 var211188))
(assert (= temp641_206 #x0000000000000000))
(assert (= var3866802 temp641_206))
(assert (= temp641_207 #x0000000000000000))
(assert (= temp641_208
   (ite (bvslt var3866802 temp641_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp641_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp641_208)))
(assert (= var3879420 temp641_209))
(assert (bvslt (ite (bvslt var3866802 temp641_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp641_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp641_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp641_211 #x0000000000000001))
(assert (= var3879421 temp641_211))
(assert (= temp641_212 #x0000000000000000))
(assert (= var4079423 temp641_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp641_213 #x0000000000000002))
(assert (= var4208259 temp641_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp641_214 #x0000000000000000))
(assert (= var4273820 temp641_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4993424 var211201))
(assert (= var211494 var210913))
(assert (= temp641_215 #x0000000000000000))
(assert (= var211495
   (ite (distinct var211494 temp641_215) #x0000000000000001 #x0000000000000000)))
(assert (= temp641_216 #x0000000000000001))
(assert (= var211058 temp641_216))
(model-add temp641_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp641_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp641_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp641_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




