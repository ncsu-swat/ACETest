(declare-fun temp10954_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10954_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10954_3 () (_ BitVec 64))
(declare-fun temp10954_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10954_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10954_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10954_7 () (_ BitVec 64))
(declare-fun temp10954_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10954_9 () (_ BitVec 64))
(declare-fun temp10954_10 () (_ BitVec 64))
(declare-fun temp10954_11 () (_ BitVec 64))
(declare-fun temp10954_12 () (_ BitVec 64))
(declare-fun temp10954_13 () (_ BitVec 64))
(declare-fun temp10954_14 () (_ BitVec 64))
(declare-fun temp10954_15 () (_ BitVec 64))
(declare-fun temp10954_16 () (_ BitVec 64))
(declare-fun temp10954_17 () (_ BitVec 64))
(declare-fun temp10954_18 () (_ BitVec 64))
(declare-fun temp10954_19 () (_ BitVec 64))
(declare-fun temp10954_20 () (_ BitVec 64))
(declare-fun temp10954_21 () (_ BitVec 64))
(declare-fun temp10954_22 () (_ BitVec 64))
(declare-fun temp10954_23 () (_ BitVec 64))
(declare-fun temp10954_24 () (_ BitVec 64))
(declare-fun temp10954_25 () (_ BitVec 64))
(declare-fun temp10954_26 () (_ BitVec 64))
(declare-fun temp10954_27 () (_ BitVec 64))
(declare-fun temp10954_28 () (_ BitVec 64))
(declare-fun temp10954_29 () (_ BitVec 64))
(declare-fun temp10954_30 () (_ BitVec 64))
(declare-fun temp10954_31 () (_ BitVec 64))
(declare-fun temp10954_32 () (_ BitVec 64))
(declare-fun temp10954_33 () (_ BitVec 64))
(declare-fun temp10954_34 () (_ BitVec 64))
(declare-fun temp10954_35 () (_ BitVec 64))
(declare-fun temp10954_36 () (_ BitVec 64))
(declare-fun temp10954_37 () (_ BitVec 64))
(declare-fun temp10954_38 () (_ BitVec 64))
(declare-fun temp10954_39 () (_ BitVec 64))
(declare-fun temp10954_40 () (_ BitVec 64))
(declare-fun temp10954_41 () (_ BitVec 64))
(declare-fun temp10954_42 () (_ BitVec 64))
(declare-fun temp10954_43 () (_ BitVec 64))
(declare-fun temp10954_44 () (_ BitVec 64))
(declare-fun temp10954_45 () (_ BitVec 64))
(declare-fun temp10954_46 () (_ BitVec 64))
(declare-fun temp10954_47 () (_ BitVec 64))
(declare-fun temp10954_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10954_49 () (_ BitVec 64))
(declare-fun temp10954_50 () (_ BitVec 64))
(declare-fun temp10954_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10954_52 () (_ BitVec 64))
(declare-fun temp10954_53 () (_ BitVec 64))
(declare-fun temp10954_54 () (_ BitVec 64))
(declare-fun temp10954_55 () (_ BitVec 64))
(declare-fun temp10954_56 () (_ BitVec 64))
(declare-fun temp10954_57 () (_ BitVec 64))
(declare-fun temp10954_58 () (_ BitVec 64))
(declare-fun temp10954_59 () (_ BitVec 64))
(declare-fun temp10954_60 () (_ BitVec 64))
(declare-fun temp10954_61 () (_ BitVec 64))
(declare-fun temp10954_62 () (_ BitVec 64))
(declare-fun temp10954_63 () (_ BitVec 64))
(declare-fun temp10954_64 () (_ BitVec 64))
(declare-fun temp10954_65 () (_ BitVec 64))
(declare-fun temp10954_66 () (_ BitVec 64))
(declare-fun temp10954_67 () (_ BitVec 64))
(declare-fun temp10954_68 () (_ BitVec 64))
(declare-fun temp10954_69 () (_ BitVec 64))
(declare-fun temp10954_70 () (_ BitVec 64))
(declare-fun temp10954_71 () (_ BitVec 64))
(declare-fun temp10954_72 () (_ BitVec 64))
(declare-fun temp10954_73 () (_ BitVec 64))
(declare-fun temp10954_74 () (_ BitVec 64))
(declare-fun temp10954_75 () (_ BitVec 64))
(declare-fun temp10954_76 () (_ BitVec 64))
(declare-fun temp10954_77 () (_ BitVec 64))
(declare-fun temp10954_78 () (_ BitVec 64))
(declare-fun temp10954_79 () (_ BitVec 64))
(declare-fun temp10954_80 () (_ BitVec 64))
(declare-fun temp10954_81 () (_ BitVec 64))
(declare-fun temp10954_82 () (_ BitVec 64))
(declare-fun temp10954_83 () (_ BitVec 64))
(declare-fun temp10954_84 () (_ BitVec 64))
(declare-fun temp10954_85 () (_ BitVec 64))
(declare-fun temp10954_86 () (_ BitVec 64))
(declare-fun temp10954_87 () (_ BitVec 64))
(declare-fun temp10954_88 () (_ BitVec 64))
(declare-fun temp10954_89 () (_ BitVec 64))
(declare-fun temp10954_90 () (_ BitVec 64))
(declare-fun temp10954_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10954_92 () (_ BitVec 64))
(declare-fun temp10954_93 () (_ BitVec 64))
(declare-fun temp10954_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10954_95 () (_ BitVec 64))
(declare-fun temp10954_96 () (_ BitVec 64))
(declare-fun temp10954_97 () (_ BitVec 64))
(declare-fun temp10954_98 () (_ BitVec 64))
(declare-fun temp10954_99 () (_ BitVec 64))
(declare-fun temp10954_100 () (_ BitVec 64))
(declare-fun temp10954_101 () (_ BitVec 64))
(declare-fun temp10954_102 () (_ BitVec 64))
(declare-fun temp10954_103 () (_ BitVec 64))
(declare-fun temp10954_104 () (_ BitVec 64))
(declare-fun temp10954_105 () (_ BitVec 64))
(declare-fun temp10954_106 () (_ BitVec 64))
(declare-fun temp10954_107 () (_ BitVec 64))
(declare-fun temp10954_108 () (_ BitVec 64))
(declare-fun temp10954_109 () (_ BitVec 64))
(declare-fun temp10954_110 () (_ BitVec 64))
(declare-fun temp10954_111 () (_ BitVec 64))
(declare-fun temp10954_112 () (_ BitVec 64))
(declare-fun temp10954_113 () (_ BitVec 64))
(declare-fun temp10954_114 () (_ BitVec 64))
(declare-fun temp10954_115 () (_ BitVec 64))
(declare-fun temp10954_116 () (_ BitVec 64))
(declare-fun temp10954_117 () (_ BitVec 64))
(declare-fun temp10954_118 () (_ BitVec 64))
(declare-fun temp10954_119 () (_ BitVec 64))
(declare-fun temp10954_120 () (_ BitVec 64))
(declare-fun temp10954_121 () (_ BitVec 64))
(declare-fun temp10954_122 () (_ BitVec 64))
(declare-fun temp10954_123 () (_ BitVec 64))
(declare-fun temp10954_124 () (_ BitVec 64))
(declare-fun temp10954_125 () (_ BitVec 64))
(declare-fun temp10954_126 () (_ BitVec 64))
(declare-fun temp10954_127 () (_ BitVec 64))
(declare-fun temp10954_128 () (_ BitVec 64))
(declare-fun temp10954_129 () (_ BitVec 64))
(declare-fun temp10954_130 () (_ BitVec 64))
(declare-fun temp10954_131 () (_ BitVec 64))
(declare-fun temp10954_132 () (_ BitVec 64))
(declare-fun temp10954_133 () (_ BitVec 64))
(declare-fun temp10954_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10954_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10954_136 () (_ BitVec 64))
(declare-fun temp10954_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10954_138 () (_ BitVec 64))
(declare-fun temp10954_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10954_140 () (_ BitVec 64))
(declare-fun temp10954_141 () (_ BitVec 64))
(declare-fun temp10954_142 () (_ BitVec 64))
(declare-fun temp10954_143 () (_ BitVec 64))
(declare-fun temp10954_144 () (_ BitVec 64))
(declare-fun temp10954_145 () (_ BitVec 64))
(declare-fun temp10954_146 () (_ BitVec 64))
(declare-fun temp10954_147 () (_ BitVec 64))
(declare-fun temp10954_148 () (_ BitVec 64))
(declare-fun temp10954_149 () (_ BitVec 64))
(declare-fun temp10954_150 () (_ BitVec 64))
(declare-fun temp10954_151 () (_ BitVec 64))
(declare-fun temp10954_152 () (_ BitVec 64))
(declare-fun temp10954_153 () (_ BitVec 64))
(declare-fun temp10954_154 () (_ BitVec 64))
(declare-fun temp10954_155 () (_ BitVec 64))
(declare-fun temp10954_157 () (_ BitVec 64))
(declare-fun temp10954_158 () (_ BitVec 64))
(declare-fun temp10954_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10954_159 () (_ BitVec 64))
(declare-fun temp10954_160 () (_ BitVec 64))
(declare-fun temp10954_162 () (_ BitVec 64))
(declare-fun temp10954_163 () (_ BitVec 64))
(declare-fun temp10954_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10954_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10954_165 () (_ BitVec 64))
(declare-fun temp10954_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10954_167 () (_ BitVec 64))
(declare-fun temp10954_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10954_169 () (_ BitVec 64))
(declare-fun temp10954_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10954_171 () (_ BitVec 64))
(declare-fun temp10954_172 () (_ BitVec 64))
(declare-fun temp10954_173 () (_ BitVec 64))
(declare-fun temp10954_174 () (_ BitVec 64))
(declare-fun temp10954_175 () (_ BitVec 64))
(declare-fun temp10954_176 () (_ BitVec 64))
(declare-fun temp10954_177 () (_ BitVec 64))
(declare-fun temp10954_178 () (_ BitVec 64))
(declare-fun temp10954_179 () (_ BitVec 64))
(declare-fun temp10954_180 () (_ BitVec 64))
(declare-fun temp10954_181 () (_ BitVec 64))
(declare-fun temp10954_182 () (_ BitVec 64))
(declare-fun temp10954_183 () (_ BitVec 64))
(declare-fun temp10954_184 () (_ BitVec 64))
(declare-fun temp10954_185 () (_ BitVec 64))
(declare-fun temp10954_186 () (_ BitVec 64))
(declare-fun temp10954_187 () (_ BitVec 64))
(declare-fun temp10954_188 () (_ BitVec 64))
(declare-fun temp10954_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10954_190 () (_ BitVec 64))
(declare-fun temp10954_192 () (_ BitVec 64))
(declare-fun temp10954_193 () (_ BitVec 64))
(declare-fun temp10954_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10954_194 () (_ BitVec 64))
(declare-fun temp10954_195 () (_ BitVec 64))
(declare-fun temp10954_197 () (_ BitVec 64))
(declare-fun temp10954_198 () (_ BitVec 64))
(declare-fun temp10954_196 () (_ BitVec 64))
(declare-fun temp10954_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10954_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10954_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10954_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10954_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10954_204 () (_ BitVec 64))
(declare-fun temp10954_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10954_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10954_207 () (_ BitVec 64))
(declare-fun temp10954_208 () (_ BitVec 64))
(declare-fun temp10954_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10954_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10954_211 () (_ BitVec 64))
(declare-fun temp10954_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10954_213 () (_ BitVec 64))
(declare-fun temp10954_214 () (_ BitVec 64))
(declare-fun temp10954_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10954_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10954_217 () (_ BitVec 64))
(declare-fun temp10954_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10954_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10954_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var5058960 () (_ BitVec 64))
(declare-fun var5321104 () (_ BitVec 64))
(declare-fun temp10954_221 () (_ BitVec 64))
(assert (= temp10954_1 #x0000000000000001))
(assert (= var77203 temp10954_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10954_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10954_2)))
(assert (= temp10954_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10954_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10954_4 #x0000000000000000))
(assert (= var210941 temp10954_4))
(assert (= temp10954_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10954_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10954_6 #x0000000000000000))
(assert (= var210986 temp10954_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10954_7 #x0000000000000000))
(assert (= temp10954_8 temp10954_7))
(assert (= temp10954_9 (select ARGNAME_padding_NAMEEND_VAL temp10954_8)))
(assert (= temp10954_10 #x0000000000000001))
(assert (= temp10954_11 temp10954_10))
(assert (= temp10954_12 (select ARGNAME_padding_NAMEEND_VAL temp10954_11)))
(assert (= temp10954_13 #x0000000000000002))
(assert (= temp10954_14 temp10954_13))
(assert (= temp10954_15 (select ARGNAME_padding_NAMEEND_VAL temp10954_14)))
(assert (= temp10954_16 #x0000000000000003))
(assert (= temp10954_17 temp10954_16))
(assert (= temp10954_18 (select ARGNAME_padding_NAMEEND_VAL temp10954_17)))
(assert (= temp10954_19 #x0000000000000004))
(assert (= temp10954_20 temp10954_19))
(assert (= temp10954_21 (select ARGNAME_padding_NAMEEND_VAL temp10954_20)))
(assert (= temp10954_22 #x0000000000000005))
(assert (= temp10954_23 temp10954_22))
(assert (= temp10954_24 (select ARGNAME_padding_NAMEEND_VAL temp10954_23)))
(assert (= temp10954_25 #x0000000000000000))
(assert (= temp10954_26 #x0000000000000000))
(assert (= temp10954_27 temp10954_26))
(assert (= temp10954_28 (select ARGNAME_padding_NAMEEND_VAL temp10954_27)))
(assert (= temp10954_29 #x0000000000000000))
(assert (= temp10954_30 #x0000000000000001))
(assert (= temp10954_31 temp10954_30))
(assert (= temp10954_32 (select ARGNAME_padding_NAMEEND_VAL temp10954_31)))
(assert (= temp10954_33 #x0000000000000000))
(assert (= temp10954_34 #x0000000000000002))
(assert (= temp10954_35 temp10954_34))
(assert (= temp10954_36 (select ARGNAME_padding_NAMEEND_VAL temp10954_35)))
(assert (= temp10954_37 #x0000000000000000))
(assert (= temp10954_38 #x0000000000000003))
(assert (= temp10954_39 temp10954_38))
(assert (= temp10954_40 (select ARGNAME_padding_NAMEEND_VAL temp10954_39)))
(assert (= temp10954_41 #x0000000000000000))
(assert (= temp10954_42 #x0000000000000004))
(assert (= temp10954_43 temp10954_42))
(assert (= temp10954_44 (select ARGNAME_padding_NAMEEND_VAL temp10954_43)))
(assert (= temp10954_45 #x0000000000000000))
(assert (= temp10954_46 #x0000000000000005))
(assert (= temp10954_47 temp10954_46))
(assert (= temp10954_48 (select ARGNAME_padding_NAMEEND_VAL temp10954_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10954_28 temp10954_25)
             (bvslt temp10954_32 temp10954_29)
             (bvslt temp10954_36 temp10954_33)
             (bvslt temp10954_40 temp10954_37)
             (bvslt temp10954_44 temp10954_41)
             (bvslt temp10954_48 temp10954_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10954_49 #x0000000000000000))
(assert (= var1191714 temp10954_49))
(assert (= temp10954_50 #x0000000000000000))
(assert (= temp10954_51 temp10954_50))
(assert (= temp10954_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10954_51)))
(assert (= temp10954_53 #x0000000000000001))
(assert (= temp10954_54 temp10954_53))
(assert (= temp10954_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10954_54)))
(assert (= temp10954_56 #x0000000000000002))
(assert (= temp10954_57 temp10954_56))
(assert (= temp10954_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10954_57)))
(assert (= temp10954_59 #x0000000000000003))
(assert (= temp10954_60 temp10954_59))
(assert (= temp10954_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10954_60)))
(assert (= temp10954_62 #x0000000000000004))
(assert (= temp10954_63 temp10954_62))
(assert (= temp10954_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10954_63)))
(assert (= temp10954_65 #x0000000000000005))
(assert (= temp10954_66 temp10954_65))
(assert (= temp10954_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10954_66)))
(assert (= temp10954_68 #x0000000000000000))
(assert (= temp10954_69 #x0000000000000000))
(assert (= temp10954_70 temp10954_69))
(assert (= temp10954_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10954_70)))
(assert (= temp10954_72 #x0000000000000000))
(assert (= temp10954_73 #x0000000000000001))
(assert (= temp10954_74 temp10954_73))
(assert (= temp10954_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10954_74)))
(assert (= temp10954_76 #x0000000000000000))
(assert (= temp10954_77 #x0000000000000002))
(assert (= temp10954_78 temp10954_77))
(assert (= temp10954_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10954_78)))
(assert (= temp10954_80 #x0000000000000000))
(assert (= temp10954_81 #x0000000000000003))
(assert (= temp10954_82 temp10954_81))
(assert (= temp10954_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10954_82)))
(assert (= temp10954_84 #x0000000000000000))
(assert (= temp10954_85 #x0000000000000004))
(assert (= temp10954_86 temp10954_85))
(assert (= temp10954_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10954_86)))
(assert (= temp10954_88 #x0000000000000000))
(assert (= temp10954_89 #x0000000000000005))
(assert (= temp10954_90 temp10954_89))
(assert (= temp10954_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10954_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10954_71 temp10954_68)
             (bvslt temp10954_75 temp10954_72)
             (bvslt temp10954_79 temp10954_76)
             (bvslt temp10954_83 temp10954_80)
             (bvslt temp10954_87 temp10954_84)
             (bvslt temp10954_91 temp10954_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10954_92 #x0000000000000000))
(assert (= var1191725 temp10954_92))
(assert (= temp10954_93 #x0000000000000000))
(assert (= temp10954_94 temp10954_93))
(assert (= temp10954_95 (select ARGNAME_stride_NAMEEND_VAL temp10954_94)))
(assert (= temp10954_96 #x0000000000000001))
(assert (= temp10954_97 temp10954_96))
(assert (= temp10954_98 (select ARGNAME_stride_NAMEEND_VAL temp10954_97)))
(assert (= temp10954_99 #x0000000000000002))
(assert (= temp10954_100 temp10954_99))
(assert (= temp10954_101 (select ARGNAME_stride_NAMEEND_VAL temp10954_100)))
(assert (= temp10954_102 #x0000000000000003))
(assert (= temp10954_103 temp10954_102))
(assert (= temp10954_104 (select ARGNAME_stride_NAMEEND_VAL temp10954_103)))
(assert (= temp10954_105 #x0000000000000004))
(assert (= temp10954_106 temp10954_105))
(assert (= temp10954_107 (select ARGNAME_stride_NAMEEND_VAL temp10954_106)))
(assert (= temp10954_108 #x0000000000000005))
(assert (= temp10954_109 temp10954_108))
(assert (= temp10954_110 (select ARGNAME_stride_NAMEEND_VAL temp10954_109)))
(assert (= temp10954_111 #x0000000000000000))
(assert (= temp10954_112 #x0000000000000000))
(assert (= temp10954_113 temp10954_112))
(assert (= temp10954_114 (select ARGNAME_stride_NAMEEND_VAL temp10954_113)))
(assert (= temp10954_115 #x0000000000000000))
(assert (= temp10954_116 #x0000000000000001))
(assert (= temp10954_117 temp10954_116))
(assert (= temp10954_118 (select ARGNAME_stride_NAMEEND_VAL temp10954_117)))
(assert (= temp10954_119 #x0000000000000000))
(assert (= temp10954_120 #x0000000000000002))
(assert (= temp10954_121 temp10954_120))
(assert (= temp10954_122 (select ARGNAME_stride_NAMEEND_VAL temp10954_121)))
(assert (= temp10954_123 #x0000000000000000))
(assert (= temp10954_124 #x0000000000000003))
(assert (= temp10954_125 temp10954_124))
(assert (= temp10954_126 (select ARGNAME_stride_NAMEEND_VAL temp10954_125)))
(assert (= temp10954_127 #x0000000000000000))
(assert (= temp10954_128 #x0000000000000004))
(assert (= temp10954_129 temp10954_128))
(assert (= temp10954_130 (select ARGNAME_stride_NAMEEND_VAL temp10954_129)))
(assert (= temp10954_131 #x0000000000000000))
(assert (= temp10954_132 #x0000000000000005))
(assert (= temp10954_133 temp10954_132))
(assert (= temp10954_134 (select ARGNAME_stride_NAMEEND_VAL temp10954_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10954_114 temp10954_111)
             (bvsle temp10954_118 temp10954_115)
             (bvsle temp10954_122 temp10954_119)
             (bvsle temp10954_126 temp10954_123)
             (bvsle temp10954_130 temp10954_127)
             (bvsle temp10954_134 temp10954_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10954_135 #x0000000000000000))
(assert (= var1191735 temp10954_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10954_136 #x0000000000000001))
(assert (= var1191747 temp10954_136))
(assert (= temp10954_137 #x0000000000000000))
(assert (= var1179826 temp10954_137))
(assert (= temp10954_138 #x0000000000000000))
(assert (= temp10954_139 temp10954_138))
(assert (= temp10954_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10954_139)))
(assert (= temp10954_141 #x0000000000000001))
(assert (= temp10954_142 temp10954_141))
(assert (= temp10954_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10954_142)))
(assert (= temp10954_144 #x0000000000000002))
(assert (= temp10954_145 temp10954_144))
(assert (= temp10954_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10954_145)))
(assert (= temp10954_147 #x0000000000000003))
(assert (= temp10954_148 temp10954_147))
(assert (= temp10954_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10954_148)))
(assert (= temp10954_150 #x0000000000000004))
(assert (= temp10954_151 temp10954_150))
(assert (= temp10954_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10954_151)))
(assert (= temp10954_153 #x0000000000000005))
(assert (= temp10954_154 temp10954_153))
(assert (= temp10954_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10954_154)))
(assert (= temp10954_157 var1179826))
(assert (= temp10954_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10954_157)))
(assert (= temp10954_156 temp10954_158))
(assert (= var1191780
   (ite (bvslt temp10954_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10954_159 #x0000000000000000))
(assert (= var1191780 temp10954_159))
(assert (= temp10954_160 #x0000000000000000))
(assert (= var1179826 temp10954_160))
(assert (= temp10954_162 var1179826))
(assert (= temp10954_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10954_162)))
(assert (= temp10954_161 temp10954_163))
(assert (= var1191802 (bvsmod temp10954_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10954_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10954_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10954_165 #x0000000000000001))
(assert (= var1191803 temp10954_165))
(assert (= temp10954_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10954_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10954_167 #x0000000000000001))
(assert (= var1191823 temp10954_167))
(assert (= temp10954_168 #x0000000000000001))
(assert (= var1180714 temp10954_168))
(assert (= temp10954_169 #x0000000000000000))
(assert (= temp10954_170 temp10954_169))
(assert (= temp10954_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10954_170)))
(assert (= temp10954_172 #x0000000000000001))
(assert (= temp10954_173 temp10954_172))
(assert (= temp10954_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10954_173)))
(assert (= temp10954_175 #x0000000000000002))
(assert (= temp10954_176 temp10954_175))
(assert (= temp10954_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10954_176)))
(assert (= temp10954_178 #x0000000000000003))
(assert (= temp10954_179 temp10954_178))
(assert (= temp10954_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10954_179)))
(assert (= temp10954_181 #x0000000000000004))
(assert (= temp10954_182 temp10954_181))
(assert (= temp10954_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10954_182)))
(assert (= temp10954_184 #x0000000000000005))
(assert (= temp10954_185 temp10954_184))
(assert (= temp10954_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10954_185)))
(assert (= temp10954_187 #x0000000000000000))
(assert (= temp10954_188
   (ite (bvslt var1180714 temp10954_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10954_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10954_188)))
(assert (= var1191831 temp10954_189))
(assert (bvslt (ite (bvslt var1180714 temp10954_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10954_190 #x0000000000000001))
(assert (= var1180714 temp10954_190))
(assert (= temp10954_192 var1180714))
(assert (= temp10954_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10954_192)))
(assert (= temp10954_191 temp10954_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10954_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10954_194 #x0000000000000001))
(assert (= var1191836 temp10954_194))
(assert (= temp10954_195 #x0000000000000000))
(assert (= var1179826 temp10954_195))
(assert (= temp10954_197 var1179826))
(assert (= temp10954_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10954_197)))
(assert (= temp10954_196 temp10954_198))
(assert (= temp10954_199 #x0000000000000002))
(assert (= var1586025 temp10954_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10954_200 #x0000000000000001))
(assert (= var1191993 temp10954_200))
(assert (= temp10954_201 #x0000000000000001))
(assert (= var2700303 temp10954_201))
(assert (= temp10954_202 #x0000000000000001))
(assert (= var2962447 temp10954_202))
(assert (= temp10954_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10954_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10954_204 #x0000000000000001))
(assert (= var211058 temp10954_204))
(assert (= temp10954_205 #x0000000000000001))
(assert (= var211188 temp10954_205))
(assert (= var3879401 var211188))
(assert (= temp10954_206 #x0000000000000000))
(assert (= var3866802 temp10954_206))
(assert (= temp10954_207 #x0000000000000000))
(assert (= temp10954_208
   (ite (bvslt var3866802 temp10954_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10954_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10954_208)))
(assert (= var3879420 temp10954_209))
(assert (bvslt (ite (bvslt var3866802 temp10954_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10954_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10954_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10954_211 #x0000000000000000))
(assert (= var3879421 temp10954_211))
(assert (= temp10954_212 #x0000000000000001))
(assert (= var3867690 temp10954_212))
(assert (= temp10954_213 #x0000000000000000))
(assert (= temp10954_214
   (ite (bvslt var3867690 temp10954_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10954_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10954_214)))
(assert (= var3879423 temp10954_215))
(assert (bvslt (ite (bvslt var3867690 temp10954_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10954_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10954_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10954_217 #x0000000000000001))
(assert (= var3879424 temp10954_217))
(assert (= temp10954_218 #x0000000000000000))
(assert (= var4133117 temp10954_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10954_219 #x0000000000000002))
(assert (= var4339331 temp10954_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10954_220 #x0000000000000000))
(assert (= var4404892 temp10954_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var5058960 var211201))
(assert (= var5321104 var211201))
(assert (= temp10954_221 #x0000000000000001))
(assert (= var211058 temp10954_221))
(model-add temp10954_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10954_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10954_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10954_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





