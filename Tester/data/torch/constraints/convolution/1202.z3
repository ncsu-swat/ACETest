(declare-fun temp10333_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10333_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10333_3 () (_ BitVec 64))
(declare-fun temp10333_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10333_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10333_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10333_7 () (_ BitVec 64))
(declare-fun temp10333_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10333_9 () (_ BitVec 64))
(declare-fun temp10333_10 () (_ BitVec 64))
(declare-fun temp10333_11 () (_ BitVec 64))
(declare-fun temp10333_12 () (_ BitVec 64))
(declare-fun temp10333_13 () (_ BitVec 64))
(declare-fun temp10333_14 () (_ BitVec 64))
(declare-fun temp10333_15 () (_ BitVec 64))
(declare-fun temp10333_16 () (_ BitVec 64))
(declare-fun temp10333_17 () (_ BitVec 64))
(declare-fun temp10333_18 () (_ BitVec 64))
(declare-fun temp10333_19 () (_ BitVec 64))
(declare-fun temp10333_20 () (_ BitVec 64))
(declare-fun temp10333_21 () (_ BitVec 64))
(declare-fun temp10333_22 () (_ BitVec 64))
(declare-fun temp10333_23 () (_ BitVec 64))
(declare-fun temp10333_24 () (_ BitVec 64))
(declare-fun temp10333_25 () (_ BitVec 64))
(declare-fun temp10333_26 () (_ BitVec 64))
(declare-fun temp10333_27 () (_ BitVec 64))
(declare-fun temp10333_28 () (_ BitVec 64))
(declare-fun temp10333_29 () (_ BitVec 64))
(declare-fun temp10333_30 () (_ BitVec 64))
(declare-fun temp10333_31 () (_ BitVec 64))
(declare-fun temp10333_32 () (_ BitVec 64))
(declare-fun temp10333_33 () (_ BitVec 64))
(declare-fun temp10333_34 () (_ BitVec 64))
(declare-fun temp10333_35 () (_ BitVec 64))
(declare-fun temp10333_36 () (_ BitVec 64))
(declare-fun temp10333_37 () (_ BitVec 64))
(declare-fun temp10333_38 () (_ BitVec 64))
(declare-fun temp10333_39 () (_ BitVec 64))
(declare-fun temp10333_40 () (_ BitVec 64))
(declare-fun temp10333_41 () (_ BitVec 64))
(declare-fun temp10333_42 () (_ BitVec 64))
(declare-fun temp10333_43 () (_ BitVec 64))
(declare-fun temp10333_44 () (_ BitVec 64))
(declare-fun temp10333_45 () (_ BitVec 64))
(declare-fun temp10333_46 () (_ BitVec 64))
(declare-fun temp10333_47 () (_ BitVec 64))
(declare-fun temp10333_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10333_49 () (_ BitVec 64))
(declare-fun temp10333_50 () (_ BitVec 64))
(declare-fun temp10333_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10333_52 () (_ BitVec 64))
(declare-fun temp10333_53 () (_ BitVec 64))
(declare-fun temp10333_54 () (_ BitVec 64))
(declare-fun temp10333_55 () (_ BitVec 64))
(declare-fun temp10333_56 () (_ BitVec 64))
(declare-fun temp10333_57 () (_ BitVec 64))
(declare-fun temp10333_58 () (_ BitVec 64))
(declare-fun temp10333_59 () (_ BitVec 64))
(declare-fun temp10333_60 () (_ BitVec 64))
(declare-fun temp10333_61 () (_ BitVec 64))
(declare-fun temp10333_62 () (_ BitVec 64))
(declare-fun temp10333_63 () (_ BitVec 64))
(declare-fun temp10333_64 () (_ BitVec 64))
(declare-fun temp10333_65 () (_ BitVec 64))
(declare-fun temp10333_66 () (_ BitVec 64))
(declare-fun temp10333_67 () (_ BitVec 64))
(declare-fun temp10333_68 () (_ BitVec 64))
(declare-fun temp10333_69 () (_ BitVec 64))
(declare-fun temp10333_70 () (_ BitVec 64))
(declare-fun temp10333_71 () (_ BitVec 64))
(declare-fun temp10333_72 () (_ BitVec 64))
(declare-fun temp10333_73 () (_ BitVec 64))
(declare-fun temp10333_74 () (_ BitVec 64))
(declare-fun temp10333_75 () (_ BitVec 64))
(declare-fun temp10333_76 () (_ BitVec 64))
(declare-fun temp10333_77 () (_ BitVec 64))
(declare-fun temp10333_78 () (_ BitVec 64))
(declare-fun temp10333_79 () (_ BitVec 64))
(declare-fun temp10333_80 () (_ BitVec 64))
(declare-fun temp10333_81 () (_ BitVec 64))
(declare-fun temp10333_82 () (_ BitVec 64))
(declare-fun temp10333_83 () (_ BitVec 64))
(declare-fun temp10333_84 () (_ BitVec 64))
(declare-fun temp10333_85 () (_ BitVec 64))
(declare-fun temp10333_86 () (_ BitVec 64))
(declare-fun temp10333_87 () (_ BitVec 64))
(declare-fun temp10333_88 () (_ BitVec 64))
(declare-fun temp10333_89 () (_ BitVec 64))
(declare-fun temp10333_90 () (_ BitVec 64))
(declare-fun temp10333_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10333_92 () (_ BitVec 64))
(declare-fun temp10333_93 () (_ BitVec 64))
(declare-fun temp10333_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10333_95 () (_ BitVec 64))
(declare-fun temp10333_96 () (_ BitVec 64))
(declare-fun temp10333_97 () (_ BitVec 64))
(declare-fun temp10333_98 () (_ BitVec 64))
(declare-fun temp10333_99 () (_ BitVec 64))
(declare-fun temp10333_100 () (_ BitVec 64))
(declare-fun temp10333_101 () (_ BitVec 64))
(declare-fun temp10333_102 () (_ BitVec 64))
(declare-fun temp10333_103 () (_ BitVec 64))
(declare-fun temp10333_104 () (_ BitVec 64))
(declare-fun temp10333_105 () (_ BitVec 64))
(declare-fun temp10333_106 () (_ BitVec 64))
(declare-fun temp10333_107 () (_ BitVec 64))
(declare-fun temp10333_108 () (_ BitVec 64))
(declare-fun temp10333_109 () (_ BitVec 64))
(declare-fun temp10333_110 () (_ BitVec 64))
(declare-fun temp10333_111 () (_ BitVec 64))
(declare-fun temp10333_112 () (_ BitVec 64))
(declare-fun temp10333_113 () (_ BitVec 64))
(declare-fun temp10333_114 () (_ BitVec 64))
(declare-fun temp10333_115 () (_ BitVec 64))
(declare-fun temp10333_116 () (_ BitVec 64))
(declare-fun temp10333_117 () (_ BitVec 64))
(declare-fun temp10333_118 () (_ BitVec 64))
(declare-fun temp10333_119 () (_ BitVec 64))
(declare-fun temp10333_120 () (_ BitVec 64))
(declare-fun temp10333_121 () (_ BitVec 64))
(declare-fun temp10333_122 () (_ BitVec 64))
(declare-fun temp10333_123 () (_ BitVec 64))
(declare-fun temp10333_124 () (_ BitVec 64))
(declare-fun temp10333_125 () (_ BitVec 64))
(declare-fun temp10333_126 () (_ BitVec 64))
(declare-fun temp10333_127 () (_ BitVec 64))
(declare-fun temp10333_128 () (_ BitVec 64))
(declare-fun temp10333_129 () (_ BitVec 64))
(declare-fun temp10333_130 () (_ BitVec 64))
(declare-fun temp10333_131 () (_ BitVec 64))
(declare-fun temp10333_132 () (_ BitVec 64))
(declare-fun temp10333_133 () (_ BitVec 64))
(declare-fun temp10333_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10333_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10333_136 () (_ BitVec 64))
(declare-fun temp10333_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10333_138 () (_ BitVec 64))
(declare-fun temp10333_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10333_140 () (_ BitVec 64))
(declare-fun temp10333_141 () (_ BitVec 64))
(declare-fun temp10333_142 () (_ BitVec 64))
(declare-fun temp10333_143 () (_ BitVec 64))
(declare-fun temp10333_144 () (_ BitVec 64))
(declare-fun temp10333_145 () (_ BitVec 64))
(declare-fun temp10333_146 () (_ BitVec 64))
(declare-fun temp10333_147 () (_ BitVec 64))
(declare-fun temp10333_148 () (_ BitVec 64))
(declare-fun temp10333_149 () (_ BitVec 64))
(declare-fun temp10333_150 () (_ BitVec 64))
(declare-fun temp10333_151 () (_ BitVec 64))
(declare-fun temp10333_152 () (_ BitVec 64))
(declare-fun temp10333_153 () (_ BitVec 64))
(declare-fun temp10333_154 () (_ BitVec 64))
(declare-fun temp10333_155 () (_ BitVec 64))
(declare-fun temp10333_157 () (_ BitVec 64))
(declare-fun temp10333_158 () (_ BitVec 64))
(declare-fun temp10333_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10333_159 () (_ BitVec 64))
(declare-fun temp10333_160 () (_ BitVec 64))
(declare-fun temp10333_162 () (_ BitVec 64))
(declare-fun temp10333_163 () (_ BitVec 64))
(declare-fun temp10333_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10333_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10333_165 () (_ BitVec 64))
(declare-fun temp10333_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10333_167 () (_ BitVec 64))
(declare-fun temp10333_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10333_169 () (_ BitVec 64))
(declare-fun temp10333_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10333_171 () (_ BitVec 64))
(declare-fun temp10333_172 () (_ BitVec 64))
(declare-fun temp10333_173 () (_ BitVec 64))
(declare-fun temp10333_174 () (_ BitVec 64))
(declare-fun temp10333_175 () (_ BitVec 64))
(declare-fun temp10333_176 () (_ BitVec 64))
(declare-fun temp10333_177 () (_ BitVec 64))
(declare-fun temp10333_178 () (_ BitVec 64))
(declare-fun temp10333_179 () (_ BitVec 64))
(declare-fun temp10333_180 () (_ BitVec 64))
(declare-fun temp10333_181 () (_ BitVec 64))
(declare-fun temp10333_182 () (_ BitVec 64))
(declare-fun temp10333_183 () (_ BitVec 64))
(declare-fun temp10333_184 () (_ BitVec 64))
(declare-fun temp10333_185 () (_ BitVec 64))
(declare-fun temp10333_186 () (_ BitVec 64))
(declare-fun temp10333_187 () (_ BitVec 64))
(declare-fun temp10333_188 () (_ BitVec 64))
(declare-fun temp10333_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10333_190 () (_ BitVec 64))
(declare-fun temp10333_192 () (_ BitVec 64))
(declare-fun temp10333_193 () (_ BitVec 64))
(declare-fun temp10333_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10333_194 () (_ BitVec 64))
(declare-fun temp10333_195 () (_ BitVec 64))
(declare-fun temp10333_197 () (_ BitVec 64))
(declare-fun temp10333_198 () (_ BitVec 64))
(declare-fun temp10333_196 () (_ BitVec 64))
(declare-fun temp10333_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10333_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10333_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10333_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10333_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10333_204 () (_ BitVec 64))
(declare-fun temp10333_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10333_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10333_207 () (_ BitVec 64))
(declare-fun temp10333_208 () (_ BitVec 64))
(declare-fun temp10333_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10333_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10333_211 () (_ BitVec 64))
(declare-fun temp10333_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10333_213 () (_ BitVec 64))
(declare-fun temp10333_214 () (_ BitVec 64))
(declare-fun temp10333_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10333_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10333_217 () (_ BitVec 64))
(declare-fun temp10333_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10333_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10333_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp10333_221 () (_ BitVec 64))
(assert (= temp10333_1 #x0000000000000001))
(assert (= var77203 temp10333_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10333_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10333_2)))
(assert (= temp10333_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10333_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10333_4 #x0000000000000000))
(assert (= var210941 temp10333_4))
(assert (= temp10333_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10333_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10333_6 #x0000000000000000))
(assert (= var210986 temp10333_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10333_7 #x0000000000000000))
(assert (= temp10333_8 temp10333_7))
(assert (= temp10333_9 (select ARGNAME_padding_NAMEEND_VAL temp10333_8)))
(assert (= temp10333_10 #x0000000000000001))
(assert (= temp10333_11 temp10333_10))
(assert (= temp10333_12 (select ARGNAME_padding_NAMEEND_VAL temp10333_11)))
(assert (= temp10333_13 #x0000000000000002))
(assert (= temp10333_14 temp10333_13))
(assert (= temp10333_15 (select ARGNAME_padding_NAMEEND_VAL temp10333_14)))
(assert (= temp10333_16 #x0000000000000003))
(assert (= temp10333_17 temp10333_16))
(assert (= temp10333_18 (select ARGNAME_padding_NAMEEND_VAL temp10333_17)))
(assert (= temp10333_19 #x0000000000000004))
(assert (= temp10333_20 temp10333_19))
(assert (= temp10333_21 (select ARGNAME_padding_NAMEEND_VAL temp10333_20)))
(assert (= temp10333_22 #x0000000000000005))
(assert (= temp10333_23 temp10333_22))
(assert (= temp10333_24 (select ARGNAME_padding_NAMEEND_VAL temp10333_23)))
(assert (= temp10333_25 #x0000000000000000))
(assert (= temp10333_26 #x0000000000000000))
(assert (= temp10333_27 temp10333_26))
(assert (= temp10333_28 (select ARGNAME_padding_NAMEEND_VAL temp10333_27)))
(assert (= temp10333_29 #x0000000000000000))
(assert (= temp10333_30 #x0000000000000001))
(assert (= temp10333_31 temp10333_30))
(assert (= temp10333_32 (select ARGNAME_padding_NAMEEND_VAL temp10333_31)))
(assert (= temp10333_33 #x0000000000000000))
(assert (= temp10333_34 #x0000000000000002))
(assert (= temp10333_35 temp10333_34))
(assert (= temp10333_36 (select ARGNAME_padding_NAMEEND_VAL temp10333_35)))
(assert (= temp10333_37 #x0000000000000000))
(assert (= temp10333_38 #x0000000000000003))
(assert (= temp10333_39 temp10333_38))
(assert (= temp10333_40 (select ARGNAME_padding_NAMEEND_VAL temp10333_39)))
(assert (= temp10333_41 #x0000000000000000))
(assert (= temp10333_42 #x0000000000000004))
(assert (= temp10333_43 temp10333_42))
(assert (= temp10333_44 (select ARGNAME_padding_NAMEEND_VAL temp10333_43)))
(assert (= temp10333_45 #x0000000000000000))
(assert (= temp10333_46 #x0000000000000005))
(assert (= temp10333_47 temp10333_46))
(assert (= temp10333_48 (select ARGNAME_padding_NAMEEND_VAL temp10333_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10333_28 temp10333_25)
             (bvslt temp10333_32 temp10333_29)
             (bvslt temp10333_36 temp10333_33)
             (bvslt temp10333_40 temp10333_37)
             (bvslt temp10333_44 temp10333_41)
             (bvslt temp10333_48 temp10333_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10333_49 #x0000000000000000))
(assert (= var1191714 temp10333_49))
(assert (= temp10333_50 #x0000000000000000))
(assert (= temp10333_51 temp10333_50))
(assert (= temp10333_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10333_51)))
(assert (= temp10333_53 #x0000000000000001))
(assert (= temp10333_54 temp10333_53))
(assert (= temp10333_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10333_54)))
(assert (= temp10333_56 #x0000000000000002))
(assert (= temp10333_57 temp10333_56))
(assert (= temp10333_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10333_57)))
(assert (= temp10333_59 #x0000000000000003))
(assert (= temp10333_60 temp10333_59))
(assert (= temp10333_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10333_60)))
(assert (= temp10333_62 #x0000000000000004))
(assert (= temp10333_63 temp10333_62))
(assert (= temp10333_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10333_63)))
(assert (= temp10333_65 #x0000000000000005))
(assert (= temp10333_66 temp10333_65))
(assert (= temp10333_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10333_66)))
(assert (= temp10333_68 #x0000000000000000))
(assert (= temp10333_69 #x0000000000000000))
(assert (= temp10333_70 temp10333_69))
(assert (= temp10333_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10333_70)))
(assert (= temp10333_72 #x0000000000000000))
(assert (= temp10333_73 #x0000000000000001))
(assert (= temp10333_74 temp10333_73))
(assert (= temp10333_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10333_74)))
(assert (= temp10333_76 #x0000000000000000))
(assert (= temp10333_77 #x0000000000000002))
(assert (= temp10333_78 temp10333_77))
(assert (= temp10333_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10333_78)))
(assert (= temp10333_80 #x0000000000000000))
(assert (= temp10333_81 #x0000000000000003))
(assert (= temp10333_82 temp10333_81))
(assert (= temp10333_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10333_82)))
(assert (= temp10333_84 #x0000000000000000))
(assert (= temp10333_85 #x0000000000000004))
(assert (= temp10333_86 temp10333_85))
(assert (= temp10333_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10333_86)))
(assert (= temp10333_88 #x0000000000000000))
(assert (= temp10333_89 #x0000000000000005))
(assert (= temp10333_90 temp10333_89))
(assert (= temp10333_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10333_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10333_71 temp10333_68)
             (bvslt temp10333_75 temp10333_72)
             (bvslt temp10333_79 temp10333_76)
             (bvslt temp10333_83 temp10333_80)
             (bvslt temp10333_87 temp10333_84)
             (bvslt temp10333_91 temp10333_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10333_92 #x0000000000000000))
(assert (= var1191725 temp10333_92))
(assert (= temp10333_93 #x0000000000000000))
(assert (= temp10333_94 temp10333_93))
(assert (= temp10333_95 (select ARGNAME_stride_NAMEEND_VAL temp10333_94)))
(assert (= temp10333_96 #x0000000000000001))
(assert (= temp10333_97 temp10333_96))
(assert (= temp10333_98 (select ARGNAME_stride_NAMEEND_VAL temp10333_97)))
(assert (= temp10333_99 #x0000000000000002))
(assert (= temp10333_100 temp10333_99))
(assert (= temp10333_101 (select ARGNAME_stride_NAMEEND_VAL temp10333_100)))
(assert (= temp10333_102 #x0000000000000003))
(assert (= temp10333_103 temp10333_102))
(assert (= temp10333_104 (select ARGNAME_stride_NAMEEND_VAL temp10333_103)))
(assert (= temp10333_105 #x0000000000000004))
(assert (= temp10333_106 temp10333_105))
(assert (= temp10333_107 (select ARGNAME_stride_NAMEEND_VAL temp10333_106)))
(assert (= temp10333_108 #x0000000000000005))
(assert (= temp10333_109 temp10333_108))
(assert (= temp10333_110 (select ARGNAME_stride_NAMEEND_VAL temp10333_109)))
(assert (= temp10333_111 #x0000000000000000))
(assert (= temp10333_112 #x0000000000000000))
(assert (= temp10333_113 temp10333_112))
(assert (= temp10333_114 (select ARGNAME_stride_NAMEEND_VAL temp10333_113)))
(assert (= temp10333_115 #x0000000000000000))
(assert (= temp10333_116 #x0000000000000001))
(assert (= temp10333_117 temp10333_116))
(assert (= temp10333_118 (select ARGNAME_stride_NAMEEND_VAL temp10333_117)))
(assert (= temp10333_119 #x0000000000000000))
(assert (= temp10333_120 #x0000000000000002))
(assert (= temp10333_121 temp10333_120))
(assert (= temp10333_122 (select ARGNAME_stride_NAMEEND_VAL temp10333_121)))
(assert (= temp10333_123 #x0000000000000000))
(assert (= temp10333_124 #x0000000000000003))
(assert (= temp10333_125 temp10333_124))
(assert (= temp10333_126 (select ARGNAME_stride_NAMEEND_VAL temp10333_125)))
(assert (= temp10333_127 #x0000000000000000))
(assert (= temp10333_128 #x0000000000000004))
(assert (= temp10333_129 temp10333_128))
(assert (= temp10333_130 (select ARGNAME_stride_NAMEEND_VAL temp10333_129)))
(assert (= temp10333_131 #x0000000000000000))
(assert (= temp10333_132 #x0000000000000005))
(assert (= temp10333_133 temp10333_132))
(assert (= temp10333_134 (select ARGNAME_stride_NAMEEND_VAL temp10333_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10333_114 temp10333_111)
             (bvsle temp10333_118 temp10333_115)
             (bvsle temp10333_122 temp10333_119)
             (bvsle temp10333_126 temp10333_123)
             (bvsle temp10333_130 temp10333_127)
             (bvsle temp10333_134 temp10333_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10333_135 #x0000000000000000))
(assert (= var1191735 temp10333_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10333_136 #x0000000000000001))
(assert (= var1191747 temp10333_136))
(assert (= temp10333_137 #x0000000000000000))
(assert (= var1179826 temp10333_137))
(assert (= temp10333_138 #x0000000000000000))
(assert (= temp10333_139 temp10333_138))
(assert (= temp10333_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10333_139)))
(assert (= temp10333_141 #x0000000000000001))
(assert (= temp10333_142 temp10333_141))
(assert (= temp10333_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10333_142)))
(assert (= temp10333_144 #x0000000000000002))
(assert (= temp10333_145 temp10333_144))
(assert (= temp10333_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10333_145)))
(assert (= temp10333_147 #x0000000000000003))
(assert (= temp10333_148 temp10333_147))
(assert (= temp10333_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10333_148)))
(assert (= temp10333_150 #x0000000000000004))
(assert (= temp10333_151 temp10333_150))
(assert (= temp10333_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10333_151)))
(assert (= temp10333_153 #x0000000000000005))
(assert (= temp10333_154 temp10333_153))
(assert (= temp10333_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10333_154)))
(assert (= temp10333_157 var1179826))
(assert (= temp10333_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10333_157)))
(assert (= temp10333_156 temp10333_158))
(assert (= var1191780
   (ite (bvslt temp10333_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10333_159 #x0000000000000000))
(assert (= var1191780 temp10333_159))
(assert (= temp10333_160 #x0000000000000000))
(assert (= var1179826 temp10333_160))
(assert (= temp10333_162 var1179826))
(assert (= temp10333_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10333_162)))
(assert (= temp10333_161 temp10333_163))
(assert (= var1191802 (bvsmod temp10333_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10333_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10333_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10333_165 #x0000000000000001))
(assert (= var1191803 temp10333_165))
(assert (= temp10333_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10333_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10333_167 #x0000000000000001))
(assert (= var1191823 temp10333_167))
(assert (= temp10333_168 #x0000000000000001))
(assert (= var1180714 temp10333_168))
(assert (= temp10333_169 #x0000000000000000))
(assert (= temp10333_170 temp10333_169))
(assert (= temp10333_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10333_170)))
(assert (= temp10333_172 #x0000000000000001))
(assert (= temp10333_173 temp10333_172))
(assert (= temp10333_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10333_173)))
(assert (= temp10333_175 #x0000000000000002))
(assert (= temp10333_176 temp10333_175))
(assert (= temp10333_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10333_176)))
(assert (= temp10333_178 #x0000000000000003))
(assert (= temp10333_179 temp10333_178))
(assert (= temp10333_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10333_179)))
(assert (= temp10333_181 #x0000000000000004))
(assert (= temp10333_182 temp10333_181))
(assert (= temp10333_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10333_182)))
(assert (= temp10333_184 #x0000000000000005))
(assert (= temp10333_185 temp10333_184))
(assert (= temp10333_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10333_185)))
(assert (= temp10333_187 #x0000000000000000))
(assert (= temp10333_188
   (ite (bvslt var1180714 temp10333_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10333_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10333_188)))
(assert (= var1191831 temp10333_189))
(assert (bvslt (ite (bvslt var1180714 temp10333_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10333_190 #x0000000000000001))
(assert (= var1180714 temp10333_190))
(assert (= temp10333_192 var1180714))
(assert (= temp10333_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10333_192)))
(assert (= temp10333_191 temp10333_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10333_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10333_194 #x0000000000000001))
(assert (= var1191836 temp10333_194))
(assert (= temp10333_195 #x0000000000000000))
(assert (= var1179826 temp10333_195))
(assert (= temp10333_197 var1179826))
(assert (= temp10333_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10333_197)))
(assert (= temp10333_196 temp10333_198))
(assert (= temp10333_199 #x0000000000000002))
(assert (= var1586025 temp10333_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10333_200 #x0000000000000001))
(assert (= var1191993 temp10333_200))
(assert (= temp10333_201 #x0000000000000001))
(assert (= var2700303 temp10333_201))
(assert (= temp10333_202 #x0000000000000001))
(assert (= var2962447 temp10333_202))
(assert (= temp10333_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10333_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10333_204 #x0000000000000001))
(assert (= var211058 temp10333_204))
(assert (= temp10333_205 #x0000000000000001))
(assert (= var211188 temp10333_205))
(assert (= var3879401 var211188))
(assert (= temp10333_206 #x0000000000000000))
(assert (= var3866802 temp10333_206))
(assert (= temp10333_207 #x0000000000000000))
(assert (= temp10333_208
   (ite (bvslt var3866802 temp10333_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10333_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10333_208)))
(assert (= var3879420 temp10333_209))
(assert (bvslt (ite (bvslt var3866802 temp10333_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10333_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10333_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10333_211 #x0000000000000000))
(assert (= var3879421 temp10333_211))
(assert (= temp10333_212 #x0000000000000001))
(assert (= var3867690 temp10333_212))
(assert (= temp10333_213 #x0000000000000000))
(assert (= temp10333_214
   (ite (bvslt var3867690 temp10333_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10333_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10333_214)))
(assert (= var3879423 temp10333_215))
(assert (bvslt (ite (bvslt var3867690 temp10333_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10333_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10333_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10333_217 #x0000000000000001))
(assert (= var3879424 temp10333_217))
(assert (= temp10333_218 #x0000000000000000))
(assert (= var4079423 temp10333_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10333_219 #x0000000000000002))
(assert (= var4208259 temp10333_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10333_220 #x0000000000000000))
(assert (= var4273820 temp10333_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp10333_221 #x0000000000000001))
(assert (= var211058 temp10333_221))
(model-add temp10333_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10333_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10333_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10333_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





