(declare-fun temp980_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp980_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp980_3 () (_ BitVec 64))
(declare-fun temp980_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp980_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp980_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp980_7 () (_ BitVec 64))
(declare-fun temp980_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp980_9 () (_ BitVec 64))
(declare-fun temp980_10 () (_ BitVec 64))
(declare-fun temp980_11 () (_ BitVec 64))
(declare-fun temp980_12 () (_ BitVec 64))
(declare-fun temp980_13 () (_ BitVec 64))
(declare-fun temp980_14 () (_ BitVec 64))
(declare-fun temp980_15 () (_ BitVec 64))
(declare-fun temp980_16 () (_ BitVec 64))
(declare-fun temp980_17 () (_ BitVec 64))
(declare-fun temp980_18 () (_ BitVec 64))
(declare-fun temp980_19 () (_ BitVec 64))
(declare-fun temp980_20 () (_ BitVec 64))
(declare-fun temp980_21 () (_ BitVec 64))
(declare-fun temp980_22 () (_ BitVec 64))
(declare-fun temp980_23 () (_ BitVec 64))
(declare-fun temp980_24 () (_ BitVec 64))
(declare-fun temp980_25 () (_ BitVec 64))
(declare-fun temp980_26 () (_ BitVec 64))
(declare-fun temp980_27 () (_ BitVec 64))
(declare-fun temp980_28 () (_ BitVec 64))
(declare-fun temp980_29 () (_ BitVec 64))
(declare-fun temp980_30 () (_ BitVec 64))
(declare-fun temp980_31 () (_ BitVec 64))
(declare-fun temp980_32 () (_ BitVec 64))
(declare-fun temp980_33 () (_ BitVec 64))
(declare-fun temp980_34 () (_ BitVec 64))
(declare-fun temp980_35 () (_ BitVec 64))
(declare-fun temp980_36 () (_ BitVec 64))
(declare-fun temp980_37 () (_ BitVec 64))
(declare-fun temp980_38 () (_ BitVec 64))
(declare-fun temp980_39 () (_ BitVec 64))
(declare-fun temp980_40 () (_ BitVec 64))
(declare-fun temp980_41 () (_ BitVec 64))
(declare-fun temp980_42 () (_ BitVec 64))
(declare-fun temp980_43 () (_ BitVec 64))
(declare-fun temp980_44 () (_ BitVec 64))
(declare-fun temp980_45 () (_ BitVec 64))
(declare-fun temp980_46 () (_ BitVec 64))
(declare-fun temp980_47 () (_ BitVec 64))
(declare-fun temp980_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp980_49 () (_ BitVec 64))
(declare-fun temp980_50 () (_ BitVec 64))
(declare-fun temp980_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp980_52 () (_ BitVec 64))
(declare-fun temp980_53 () (_ BitVec 64))
(declare-fun temp980_54 () (_ BitVec 64))
(declare-fun temp980_55 () (_ BitVec 64))
(declare-fun temp980_56 () (_ BitVec 64))
(declare-fun temp980_57 () (_ BitVec 64))
(declare-fun temp980_58 () (_ BitVec 64))
(declare-fun temp980_59 () (_ BitVec 64))
(declare-fun temp980_60 () (_ BitVec 64))
(declare-fun temp980_61 () (_ BitVec 64))
(declare-fun temp980_62 () (_ BitVec 64))
(declare-fun temp980_63 () (_ BitVec 64))
(declare-fun temp980_64 () (_ BitVec 64))
(declare-fun temp980_65 () (_ BitVec 64))
(declare-fun temp980_66 () (_ BitVec 64))
(declare-fun temp980_67 () (_ BitVec 64))
(declare-fun temp980_68 () (_ BitVec 64))
(declare-fun temp980_69 () (_ BitVec 64))
(declare-fun temp980_70 () (_ BitVec 64))
(declare-fun temp980_71 () (_ BitVec 64))
(declare-fun temp980_72 () (_ BitVec 64))
(declare-fun temp980_73 () (_ BitVec 64))
(declare-fun temp980_74 () (_ BitVec 64))
(declare-fun temp980_75 () (_ BitVec 64))
(declare-fun temp980_76 () (_ BitVec 64))
(declare-fun temp980_77 () (_ BitVec 64))
(declare-fun temp980_78 () (_ BitVec 64))
(declare-fun temp980_79 () (_ BitVec 64))
(declare-fun temp980_80 () (_ BitVec 64))
(declare-fun temp980_81 () (_ BitVec 64))
(declare-fun temp980_82 () (_ BitVec 64))
(declare-fun temp980_83 () (_ BitVec 64))
(declare-fun temp980_84 () (_ BitVec 64))
(declare-fun temp980_85 () (_ BitVec 64))
(declare-fun temp980_86 () (_ BitVec 64))
(declare-fun temp980_87 () (_ BitVec 64))
(declare-fun temp980_88 () (_ BitVec 64))
(declare-fun temp980_89 () (_ BitVec 64))
(declare-fun temp980_90 () (_ BitVec 64))
(declare-fun temp980_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp980_92 () (_ BitVec 64))
(declare-fun temp980_93 () (_ BitVec 64))
(declare-fun temp980_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp980_95 () (_ BitVec 64))
(declare-fun temp980_96 () (_ BitVec 64))
(declare-fun temp980_97 () (_ BitVec 64))
(declare-fun temp980_98 () (_ BitVec 64))
(declare-fun temp980_99 () (_ BitVec 64))
(declare-fun temp980_100 () (_ BitVec 64))
(declare-fun temp980_101 () (_ BitVec 64))
(declare-fun temp980_102 () (_ BitVec 64))
(declare-fun temp980_103 () (_ BitVec 64))
(declare-fun temp980_104 () (_ BitVec 64))
(declare-fun temp980_105 () (_ BitVec 64))
(declare-fun temp980_106 () (_ BitVec 64))
(declare-fun temp980_107 () (_ BitVec 64))
(declare-fun temp980_108 () (_ BitVec 64))
(declare-fun temp980_109 () (_ BitVec 64))
(declare-fun temp980_110 () (_ BitVec 64))
(declare-fun temp980_111 () (_ BitVec 64))
(declare-fun temp980_112 () (_ BitVec 64))
(declare-fun temp980_113 () (_ BitVec 64))
(declare-fun temp980_114 () (_ BitVec 64))
(declare-fun temp980_115 () (_ BitVec 64))
(declare-fun temp980_116 () (_ BitVec 64))
(declare-fun temp980_117 () (_ BitVec 64))
(declare-fun temp980_118 () (_ BitVec 64))
(declare-fun temp980_119 () (_ BitVec 64))
(declare-fun temp980_120 () (_ BitVec 64))
(declare-fun temp980_121 () (_ BitVec 64))
(declare-fun temp980_122 () (_ BitVec 64))
(declare-fun temp980_123 () (_ BitVec 64))
(declare-fun temp980_124 () (_ BitVec 64))
(declare-fun temp980_125 () (_ BitVec 64))
(declare-fun temp980_126 () (_ BitVec 64))
(declare-fun temp980_127 () (_ BitVec 64))
(declare-fun temp980_128 () (_ BitVec 64))
(declare-fun temp980_129 () (_ BitVec 64))
(declare-fun temp980_130 () (_ BitVec 64))
(declare-fun temp980_131 () (_ BitVec 64))
(declare-fun temp980_132 () (_ BitVec 64))
(declare-fun temp980_133 () (_ BitVec 64))
(declare-fun temp980_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp980_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp980_136 () (_ BitVec 64))
(declare-fun temp980_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp980_138 () (_ BitVec 64))
(declare-fun temp980_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp980_140 () (_ BitVec 64))
(declare-fun temp980_141 () (_ BitVec 64))
(declare-fun temp980_142 () (_ BitVec 64))
(declare-fun temp980_143 () (_ BitVec 64))
(declare-fun temp980_144 () (_ BitVec 64))
(declare-fun temp980_145 () (_ BitVec 64))
(declare-fun temp980_146 () (_ BitVec 64))
(declare-fun temp980_147 () (_ BitVec 64))
(declare-fun temp980_148 () (_ BitVec 64))
(declare-fun temp980_149 () (_ BitVec 64))
(declare-fun temp980_150 () (_ BitVec 64))
(declare-fun temp980_151 () (_ BitVec 64))
(declare-fun temp980_152 () (_ BitVec 64))
(declare-fun temp980_153 () (_ BitVec 64))
(declare-fun temp980_154 () (_ BitVec 64))
(declare-fun temp980_155 () (_ BitVec 64))
(declare-fun temp980_157 () (_ BitVec 64))
(declare-fun temp980_158 () (_ BitVec 64))
(declare-fun temp980_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp980_159 () (_ BitVec 64))
(declare-fun temp980_160 () (_ BitVec 64))
(declare-fun temp980_162 () (_ BitVec 64))
(declare-fun temp980_163 () (_ BitVec 64))
(declare-fun temp980_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp980_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp980_165 () (_ BitVec 64))
(declare-fun temp980_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp980_167 () (_ BitVec 64))
(declare-fun temp980_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp980_169 () (_ BitVec 64))
(declare-fun temp980_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp980_171 () (_ BitVec 64))
(declare-fun temp980_172 () (_ BitVec 64))
(declare-fun temp980_173 () (_ BitVec 64))
(declare-fun temp980_174 () (_ BitVec 64))
(declare-fun temp980_175 () (_ BitVec 64))
(declare-fun temp980_176 () (_ BitVec 64))
(declare-fun temp980_177 () (_ BitVec 64))
(declare-fun temp980_178 () (_ BitVec 64))
(declare-fun temp980_179 () (_ BitVec 64))
(declare-fun temp980_180 () (_ BitVec 64))
(declare-fun temp980_181 () (_ BitVec 64))
(declare-fun temp980_182 () (_ BitVec 64))
(declare-fun temp980_183 () (_ BitVec 64))
(declare-fun temp980_184 () (_ BitVec 64))
(declare-fun temp980_185 () (_ BitVec 64))
(declare-fun temp980_186 () (_ BitVec 64))
(declare-fun temp980_187 () (_ BitVec 64))
(declare-fun temp980_188 () (_ BitVec 64))
(declare-fun temp980_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp980_190 () (_ BitVec 64))
(declare-fun temp980_192 () (_ BitVec 64))
(declare-fun temp980_193 () (_ BitVec 64))
(declare-fun temp980_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp980_194 () (_ BitVec 64))
(declare-fun temp980_195 () (_ BitVec 64))
(declare-fun temp980_197 () (_ BitVec 64))
(declare-fun temp980_198 () (_ BitVec 64))
(declare-fun temp980_196 () (_ BitVec 64))
(declare-fun temp980_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp980_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp980_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp980_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp980_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp980_204 () (_ BitVec 64))
(declare-fun temp980_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp980_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp980_207 () (_ BitVec 64))
(declare-fun temp980_208 () (_ BitVec 64))
(declare-fun temp980_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp980_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp980_211 () (_ BitVec 64))
(declare-fun temp980_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp980_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp980_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var5124496 () (_ BitVec 64))
(declare-fun var5386640 () (_ BitVec 64))
(declare-fun temp980_215 () (_ BitVec 64))
(declare-fun temp980_216 () (_ BitVec 64))
(declare-fun var7025428 () (_ BitVec 64))
(declare-fun var7025395 () (_ BitVec 64))
(declare-fun var6893959 () (_ BitVec 64))
(declare-fun var6893955 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp980_217 () (_ BitVec 64))
(assert (= temp980_1 #x0000000000000001))
(assert (= var77203 temp980_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp980_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp980_2)))
(assert (= temp980_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp980_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp980_4 #x0000000000000000))
(assert (= var210941 temp980_4))
(assert (= temp980_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp980_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp980_6 #x0000000000000000))
(assert (= var210986 temp980_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp980_7 #x0000000000000000))
(assert (= temp980_8 temp980_7))
(assert (= temp980_9 (select ARGNAME_padding_NAMEEND_VAL temp980_8)))
(assert (= temp980_10 #x0000000000000001))
(assert (= temp980_11 temp980_10))
(assert (= temp980_12 (select ARGNAME_padding_NAMEEND_VAL temp980_11)))
(assert (= temp980_13 #x0000000000000002))
(assert (= temp980_14 temp980_13))
(assert (= temp980_15 (select ARGNAME_padding_NAMEEND_VAL temp980_14)))
(assert (= temp980_16 #x0000000000000003))
(assert (= temp980_17 temp980_16))
(assert (= temp980_18 (select ARGNAME_padding_NAMEEND_VAL temp980_17)))
(assert (= temp980_19 #x0000000000000004))
(assert (= temp980_20 temp980_19))
(assert (= temp980_21 (select ARGNAME_padding_NAMEEND_VAL temp980_20)))
(assert (= temp980_22 #x0000000000000005))
(assert (= temp980_23 temp980_22))
(assert (= temp980_24 (select ARGNAME_padding_NAMEEND_VAL temp980_23)))
(assert (= temp980_25 #x0000000000000000))
(assert (= temp980_26 #x0000000000000000))
(assert (= temp980_27 temp980_26))
(assert (= temp980_28 (select ARGNAME_padding_NAMEEND_VAL temp980_27)))
(assert (= temp980_29 #x0000000000000000))
(assert (= temp980_30 #x0000000000000001))
(assert (= temp980_31 temp980_30))
(assert (= temp980_32 (select ARGNAME_padding_NAMEEND_VAL temp980_31)))
(assert (= temp980_33 #x0000000000000000))
(assert (= temp980_34 #x0000000000000002))
(assert (= temp980_35 temp980_34))
(assert (= temp980_36 (select ARGNAME_padding_NAMEEND_VAL temp980_35)))
(assert (= temp980_37 #x0000000000000000))
(assert (= temp980_38 #x0000000000000003))
(assert (= temp980_39 temp980_38))
(assert (= temp980_40 (select ARGNAME_padding_NAMEEND_VAL temp980_39)))
(assert (= temp980_41 #x0000000000000000))
(assert (= temp980_42 #x0000000000000004))
(assert (= temp980_43 temp980_42))
(assert (= temp980_44 (select ARGNAME_padding_NAMEEND_VAL temp980_43)))
(assert (= temp980_45 #x0000000000000000))
(assert (= temp980_46 #x0000000000000005))
(assert (= temp980_47 temp980_46))
(assert (= temp980_48 (select ARGNAME_padding_NAMEEND_VAL temp980_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp980_28 temp980_25)
             (bvslt temp980_32 temp980_29)
             (bvslt temp980_36 temp980_33)
             (bvslt temp980_40 temp980_37)
             (bvslt temp980_44 temp980_41)
             (bvslt temp980_48 temp980_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp980_49 #x0000000000000000))
(assert (= var1191714 temp980_49))
(assert (= temp980_50 #x0000000000000000))
(assert (= temp980_51 temp980_50))
(assert (= temp980_52 (select ARGNAME_output_padding_NAMEEND_VAL temp980_51)))
(assert (= temp980_53 #x0000000000000001))
(assert (= temp980_54 temp980_53))
(assert (= temp980_55 (select ARGNAME_output_padding_NAMEEND_VAL temp980_54)))
(assert (= temp980_56 #x0000000000000002))
(assert (= temp980_57 temp980_56))
(assert (= temp980_58 (select ARGNAME_output_padding_NAMEEND_VAL temp980_57)))
(assert (= temp980_59 #x0000000000000003))
(assert (= temp980_60 temp980_59))
(assert (= temp980_61 (select ARGNAME_output_padding_NAMEEND_VAL temp980_60)))
(assert (= temp980_62 #x0000000000000004))
(assert (= temp980_63 temp980_62))
(assert (= temp980_64 (select ARGNAME_output_padding_NAMEEND_VAL temp980_63)))
(assert (= temp980_65 #x0000000000000005))
(assert (= temp980_66 temp980_65))
(assert (= temp980_67 (select ARGNAME_output_padding_NAMEEND_VAL temp980_66)))
(assert (= temp980_68 #x0000000000000000))
(assert (= temp980_69 #x0000000000000000))
(assert (= temp980_70 temp980_69))
(assert (= temp980_71 (select ARGNAME_output_padding_NAMEEND_VAL temp980_70)))
(assert (= temp980_72 #x0000000000000000))
(assert (= temp980_73 #x0000000000000001))
(assert (= temp980_74 temp980_73))
(assert (= temp980_75 (select ARGNAME_output_padding_NAMEEND_VAL temp980_74)))
(assert (= temp980_76 #x0000000000000000))
(assert (= temp980_77 #x0000000000000002))
(assert (= temp980_78 temp980_77))
(assert (= temp980_79 (select ARGNAME_output_padding_NAMEEND_VAL temp980_78)))
(assert (= temp980_80 #x0000000000000000))
(assert (= temp980_81 #x0000000000000003))
(assert (= temp980_82 temp980_81))
(assert (= temp980_83 (select ARGNAME_output_padding_NAMEEND_VAL temp980_82)))
(assert (= temp980_84 #x0000000000000000))
(assert (= temp980_85 #x0000000000000004))
(assert (= temp980_86 temp980_85))
(assert (= temp980_87 (select ARGNAME_output_padding_NAMEEND_VAL temp980_86)))
(assert (= temp980_88 #x0000000000000000))
(assert (= temp980_89 #x0000000000000005))
(assert (= temp980_90 temp980_89))
(assert (= temp980_91 (select ARGNAME_output_padding_NAMEEND_VAL temp980_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp980_71 temp980_68)
             (bvslt temp980_75 temp980_72)
             (bvslt temp980_79 temp980_76)
             (bvslt temp980_83 temp980_80)
             (bvslt temp980_87 temp980_84)
             (bvslt temp980_91 temp980_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp980_92 #x0000000000000000))
(assert (= var1191725 temp980_92))
(assert (= temp980_93 #x0000000000000000))
(assert (= temp980_94 temp980_93))
(assert (= temp980_95 (select ARGNAME_stride_NAMEEND_VAL temp980_94)))
(assert (= temp980_96 #x0000000000000001))
(assert (= temp980_97 temp980_96))
(assert (= temp980_98 (select ARGNAME_stride_NAMEEND_VAL temp980_97)))
(assert (= temp980_99 #x0000000000000002))
(assert (= temp980_100 temp980_99))
(assert (= temp980_101 (select ARGNAME_stride_NAMEEND_VAL temp980_100)))
(assert (= temp980_102 #x0000000000000003))
(assert (= temp980_103 temp980_102))
(assert (= temp980_104 (select ARGNAME_stride_NAMEEND_VAL temp980_103)))
(assert (= temp980_105 #x0000000000000004))
(assert (= temp980_106 temp980_105))
(assert (= temp980_107 (select ARGNAME_stride_NAMEEND_VAL temp980_106)))
(assert (= temp980_108 #x0000000000000005))
(assert (= temp980_109 temp980_108))
(assert (= temp980_110 (select ARGNAME_stride_NAMEEND_VAL temp980_109)))
(assert (= temp980_111 #x0000000000000000))
(assert (= temp980_112 #x0000000000000000))
(assert (= temp980_113 temp980_112))
(assert (= temp980_114 (select ARGNAME_stride_NAMEEND_VAL temp980_113)))
(assert (= temp980_115 #x0000000000000000))
(assert (= temp980_116 #x0000000000000001))
(assert (= temp980_117 temp980_116))
(assert (= temp980_118 (select ARGNAME_stride_NAMEEND_VAL temp980_117)))
(assert (= temp980_119 #x0000000000000000))
(assert (= temp980_120 #x0000000000000002))
(assert (= temp980_121 temp980_120))
(assert (= temp980_122 (select ARGNAME_stride_NAMEEND_VAL temp980_121)))
(assert (= temp980_123 #x0000000000000000))
(assert (= temp980_124 #x0000000000000003))
(assert (= temp980_125 temp980_124))
(assert (= temp980_126 (select ARGNAME_stride_NAMEEND_VAL temp980_125)))
(assert (= temp980_127 #x0000000000000000))
(assert (= temp980_128 #x0000000000000004))
(assert (= temp980_129 temp980_128))
(assert (= temp980_130 (select ARGNAME_stride_NAMEEND_VAL temp980_129)))
(assert (= temp980_131 #x0000000000000000))
(assert (= temp980_132 #x0000000000000005))
(assert (= temp980_133 temp980_132))
(assert (= temp980_134 (select ARGNAME_stride_NAMEEND_VAL temp980_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp980_114 temp980_111)
             (bvsle temp980_118 temp980_115)
             (bvsle temp980_122 temp980_119)
             (bvsle temp980_126 temp980_123)
             (bvsle temp980_130 temp980_127)
             (bvsle temp980_134 temp980_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp980_135 #x0000000000000000))
(assert (= var1191735 temp980_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp980_136 #x0000000000000001))
(assert (= var1191747 temp980_136))
(assert (= temp980_137 #x0000000000000000))
(assert (= var1179826 temp980_137))
(assert (= temp980_138 #x0000000000000000))
(assert (= temp980_139 temp980_138))
(assert (= temp980_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp980_139)))
(assert (= temp980_141 #x0000000000000001))
(assert (= temp980_142 temp980_141))
(assert (= temp980_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp980_142)))
(assert (= temp980_144 #x0000000000000002))
(assert (= temp980_145 temp980_144))
(assert (= temp980_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp980_145)))
(assert (= temp980_147 #x0000000000000003))
(assert (= temp980_148 temp980_147))
(assert (= temp980_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp980_148)))
(assert (= temp980_150 #x0000000000000004))
(assert (= temp980_151 temp980_150))
(assert (= temp980_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp980_151)))
(assert (= temp980_153 #x0000000000000005))
(assert (= temp980_154 temp980_153))
(assert (= temp980_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp980_154)))
(assert (= temp980_157 var1179826))
(assert (= temp980_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp980_157)))
(assert (= temp980_156 temp980_158))
(assert (= var1191780
   (ite (bvslt temp980_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp980_159 #x0000000000000000))
(assert (= var1191780 temp980_159))
(assert (= temp980_160 #x0000000000000000))
(assert (= var1179826 temp980_160))
(assert (= temp980_162 var1179826))
(assert (= temp980_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp980_162)))
(assert (= temp980_161 temp980_163))
(assert (= var1191802 (bvsmod temp980_161 ARGNAME_groups_NAMEEND)))
(assert (= temp980_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp980_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp980_165 #x0000000000000001))
(assert (= var1191803 temp980_165))
(assert (= temp980_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp980_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp980_167 #x0000000000000001))
(assert (= var1191823 temp980_167))
(assert (= temp980_168 #x0000000000000001))
(assert (= var1180714 temp980_168))
(assert (= temp980_169 #x0000000000000000))
(assert (= temp980_170 temp980_169))
(assert (= temp980_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp980_170)))
(assert (= temp980_172 #x0000000000000001))
(assert (= temp980_173 temp980_172))
(assert (= temp980_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp980_173)))
(assert (= temp980_175 #x0000000000000002))
(assert (= temp980_176 temp980_175))
(assert (= temp980_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp980_176)))
(assert (= temp980_178 #x0000000000000003))
(assert (= temp980_179 temp980_178))
(assert (= temp980_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp980_179)))
(assert (= temp980_181 #x0000000000000004))
(assert (= temp980_182 temp980_181))
(assert (= temp980_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp980_182)))
(assert (= temp980_184 #x0000000000000005))
(assert (= temp980_185 temp980_184))
(assert (= temp980_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp980_185)))
(assert (= temp980_187 #x0000000000000000))
(assert (= temp980_188
   (ite (bvslt var1180714 temp980_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp980_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp980_188)))
(assert (= var1191831 temp980_189))
(assert (bvslt (ite (bvslt var1180714 temp980_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp980_190 #x0000000000000001))
(assert (= var1180714 temp980_190))
(assert (= temp980_192 var1180714))
(assert (= temp980_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp980_192)))
(assert (= temp980_191 temp980_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp980_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp980_194 #x0000000000000001))
(assert (= var1191836 temp980_194))
(assert (= temp980_195 #x0000000000000000))
(assert (= var1179826 temp980_195))
(assert (= temp980_197 var1179826))
(assert (= temp980_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp980_197)))
(assert (= temp980_196 temp980_198))
(assert (= temp980_199 #x0000000000000002))
(assert (= var1586025 temp980_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp980_200 #x0000000000000001))
(assert (= var1191993 temp980_200))
(assert (= temp980_201 #x0000000000000001))
(assert (= var2700303 temp980_201))
(assert (= temp980_202 #x0000000000000001))
(assert (= var2962447 temp980_202))
(assert (= temp980_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp980_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp980_204 #x0000000000000001))
(assert (= var211058 temp980_204))
(assert (= temp980_205 #x0000000000000001))
(assert (= var211188 temp980_205))
(assert (= var3879401 var211188))
(assert (= temp980_206 #x0000000000000000))
(assert (= var3866802 temp980_206))
(assert (= temp980_207 #x0000000000000000))
(assert (= temp980_208
   (ite (bvslt var3866802 temp980_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp980_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp980_208)))
(assert (= var3879420 temp980_209))
(assert (bvslt (ite (bvslt var3866802 temp980_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp980_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp980_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp980_211 #x0000000000000001))
(assert (= var3879421 temp980_211))
(assert (= temp980_212 #x0000000000000000))
(assert (= var4079423 temp980_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp980_213 #x0000000000000002))
(assert (= var4208259 temp980_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp980_214 #x0000000000000000))
(assert (= var4273820 temp980_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var5124496 var211201))
(assert (= var5386640 var211201))
(assert (= temp980_215 #x0000000000000001))
(assert (= var211058 temp980_215))
(assert (= temp980_216 #x0000000000000000))
(assert (= var7025428 temp980_216))
(assert (= var7025395 var7025428))
(assert (= var6893959 var7025395))
(assert (= var6893955 var6893959))
(assert (= var212669 var6893955))
(assert (= temp980_217 #x0000000000000000))
(assert (= var212669 temp980_217))
(model-add temp980_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp980_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp980_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp980_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





