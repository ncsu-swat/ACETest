(declare-fun temp10766_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10766_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10766_3 () (_ BitVec 64))
(declare-fun temp10766_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10766_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10766_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10766_7 () (_ BitVec 64))
(declare-fun temp10766_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10766_9 () (_ BitVec 64))
(declare-fun temp10766_10 () (_ BitVec 64))
(declare-fun temp10766_11 () (_ BitVec 64))
(declare-fun temp10766_12 () (_ BitVec 64))
(declare-fun temp10766_13 () (_ BitVec 64))
(declare-fun temp10766_14 () (_ BitVec 64))
(declare-fun temp10766_15 () (_ BitVec 64))
(declare-fun temp10766_16 () (_ BitVec 64))
(declare-fun temp10766_17 () (_ BitVec 64))
(declare-fun temp10766_18 () (_ BitVec 64))
(declare-fun temp10766_19 () (_ BitVec 64))
(declare-fun temp10766_20 () (_ BitVec 64))
(declare-fun temp10766_21 () (_ BitVec 64))
(declare-fun temp10766_22 () (_ BitVec 64))
(declare-fun temp10766_23 () (_ BitVec 64))
(declare-fun temp10766_24 () (_ BitVec 64))
(declare-fun temp10766_25 () (_ BitVec 64))
(declare-fun temp10766_26 () (_ BitVec 64))
(declare-fun temp10766_27 () (_ BitVec 64))
(declare-fun temp10766_28 () (_ BitVec 64))
(declare-fun temp10766_29 () (_ BitVec 64))
(declare-fun temp10766_30 () (_ BitVec 64))
(declare-fun temp10766_31 () (_ BitVec 64))
(declare-fun temp10766_32 () (_ BitVec 64))
(declare-fun temp10766_33 () (_ BitVec 64))
(declare-fun temp10766_34 () (_ BitVec 64))
(declare-fun temp10766_35 () (_ BitVec 64))
(declare-fun temp10766_36 () (_ BitVec 64))
(declare-fun temp10766_37 () (_ BitVec 64))
(declare-fun temp10766_38 () (_ BitVec 64))
(declare-fun temp10766_39 () (_ BitVec 64))
(declare-fun temp10766_40 () (_ BitVec 64))
(declare-fun temp10766_41 () (_ BitVec 64))
(declare-fun temp10766_42 () (_ BitVec 64))
(declare-fun temp10766_43 () (_ BitVec 64))
(declare-fun temp10766_44 () (_ BitVec 64))
(declare-fun temp10766_45 () (_ BitVec 64))
(declare-fun temp10766_46 () (_ BitVec 64))
(declare-fun temp10766_47 () (_ BitVec 64))
(declare-fun temp10766_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10766_49 () (_ BitVec 64))
(declare-fun temp10766_50 () (_ BitVec 64))
(declare-fun temp10766_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10766_52 () (_ BitVec 64))
(declare-fun temp10766_53 () (_ BitVec 64))
(declare-fun temp10766_54 () (_ BitVec 64))
(declare-fun temp10766_55 () (_ BitVec 64))
(declare-fun temp10766_56 () (_ BitVec 64))
(declare-fun temp10766_57 () (_ BitVec 64))
(declare-fun temp10766_58 () (_ BitVec 64))
(declare-fun temp10766_59 () (_ BitVec 64))
(declare-fun temp10766_60 () (_ BitVec 64))
(declare-fun temp10766_61 () (_ BitVec 64))
(declare-fun temp10766_62 () (_ BitVec 64))
(declare-fun temp10766_63 () (_ BitVec 64))
(declare-fun temp10766_64 () (_ BitVec 64))
(declare-fun temp10766_65 () (_ BitVec 64))
(declare-fun temp10766_66 () (_ BitVec 64))
(declare-fun temp10766_67 () (_ BitVec 64))
(declare-fun temp10766_68 () (_ BitVec 64))
(declare-fun temp10766_69 () (_ BitVec 64))
(declare-fun temp10766_70 () (_ BitVec 64))
(declare-fun temp10766_71 () (_ BitVec 64))
(declare-fun temp10766_72 () (_ BitVec 64))
(declare-fun temp10766_73 () (_ BitVec 64))
(declare-fun temp10766_74 () (_ BitVec 64))
(declare-fun temp10766_75 () (_ BitVec 64))
(declare-fun temp10766_76 () (_ BitVec 64))
(declare-fun temp10766_77 () (_ BitVec 64))
(declare-fun temp10766_78 () (_ BitVec 64))
(declare-fun temp10766_79 () (_ BitVec 64))
(declare-fun temp10766_80 () (_ BitVec 64))
(declare-fun temp10766_81 () (_ BitVec 64))
(declare-fun temp10766_82 () (_ BitVec 64))
(declare-fun temp10766_83 () (_ BitVec 64))
(declare-fun temp10766_84 () (_ BitVec 64))
(declare-fun temp10766_85 () (_ BitVec 64))
(declare-fun temp10766_86 () (_ BitVec 64))
(declare-fun temp10766_87 () (_ BitVec 64))
(declare-fun temp10766_88 () (_ BitVec 64))
(declare-fun temp10766_89 () (_ BitVec 64))
(declare-fun temp10766_90 () (_ BitVec 64))
(declare-fun temp10766_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10766_92 () (_ BitVec 64))
(declare-fun temp10766_93 () (_ BitVec 64))
(declare-fun temp10766_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10766_95 () (_ BitVec 64))
(declare-fun temp10766_96 () (_ BitVec 64))
(declare-fun temp10766_97 () (_ BitVec 64))
(declare-fun temp10766_98 () (_ BitVec 64))
(declare-fun temp10766_99 () (_ BitVec 64))
(declare-fun temp10766_100 () (_ BitVec 64))
(declare-fun temp10766_101 () (_ BitVec 64))
(declare-fun temp10766_102 () (_ BitVec 64))
(declare-fun temp10766_103 () (_ BitVec 64))
(declare-fun temp10766_104 () (_ BitVec 64))
(declare-fun temp10766_105 () (_ BitVec 64))
(declare-fun temp10766_106 () (_ BitVec 64))
(declare-fun temp10766_107 () (_ BitVec 64))
(declare-fun temp10766_108 () (_ BitVec 64))
(declare-fun temp10766_109 () (_ BitVec 64))
(declare-fun temp10766_110 () (_ BitVec 64))
(declare-fun temp10766_111 () (_ BitVec 64))
(declare-fun temp10766_112 () (_ BitVec 64))
(declare-fun temp10766_113 () (_ BitVec 64))
(declare-fun temp10766_114 () (_ BitVec 64))
(declare-fun temp10766_115 () (_ BitVec 64))
(declare-fun temp10766_116 () (_ BitVec 64))
(declare-fun temp10766_117 () (_ BitVec 64))
(declare-fun temp10766_118 () (_ BitVec 64))
(declare-fun temp10766_119 () (_ BitVec 64))
(declare-fun temp10766_120 () (_ BitVec 64))
(declare-fun temp10766_121 () (_ BitVec 64))
(declare-fun temp10766_122 () (_ BitVec 64))
(declare-fun temp10766_123 () (_ BitVec 64))
(declare-fun temp10766_124 () (_ BitVec 64))
(declare-fun temp10766_125 () (_ BitVec 64))
(declare-fun temp10766_126 () (_ BitVec 64))
(declare-fun temp10766_127 () (_ BitVec 64))
(declare-fun temp10766_128 () (_ BitVec 64))
(declare-fun temp10766_129 () (_ BitVec 64))
(declare-fun temp10766_130 () (_ BitVec 64))
(declare-fun temp10766_131 () (_ BitVec 64))
(declare-fun temp10766_132 () (_ BitVec 64))
(declare-fun temp10766_133 () (_ BitVec 64))
(declare-fun temp10766_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10766_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10766_136 () (_ BitVec 64))
(declare-fun temp10766_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10766_138 () (_ BitVec 64))
(declare-fun temp10766_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10766_140 () (_ BitVec 64))
(declare-fun temp10766_141 () (_ BitVec 64))
(declare-fun temp10766_142 () (_ BitVec 64))
(declare-fun temp10766_143 () (_ BitVec 64))
(declare-fun temp10766_144 () (_ BitVec 64))
(declare-fun temp10766_145 () (_ BitVec 64))
(declare-fun temp10766_146 () (_ BitVec 64))
(declare-fun temp10766_147 () (_ BitVec 64))
(declare-fun temp10766_148 () (_ BitVec 64))
(declare-fun temp10766_149 () (_ BitVec 64))
(declare-fun temp10766_150 () (_ BitVec 64))
(declare-fun temp10766_151 () (_ BitVec 64))
(declare-fun temp10766_152 () (_ BitVec 64))
(declare-fun temp10766_153 () (_ BitVec 64))
(declare-fun temp10766_154 () (_ BitVec 64))
(declare-fun temp10766_155 () (_ BitVec 64))
(declare-fun temp10766_157 () (_ BitVec 64))
(declare-fun temp10766_158 () (_ BitVec 64))
(declare-fun temp10766_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10766_159 () (_ BitVec 64))
(declare-fun temp10766_160 () (_ BitVec 64))
(declare-fun temp10766_162 () (_ BitVec 64))
(declare-fun temp10766_163 () (_ BitVec 64))
(declare-fun temp10766_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10766_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10766_165 () (_ BitVec 64))
(declare-fun temp10766_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10766_167 () (_ BitVec 64))
(declare-fun temp10766_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10766_169 () (_ BitVec 64))
(declare-fun temp10766_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10766_171 () (_ BitVec 64))
(declare-fun temp10766_172 () (_ BitVec 64))
(declare-fun temp10766_173 () (_ BitVec 64))
(declare-fun temp10766_174 () (_ BitVec 64))
(declare-fun temp10766_175 () (_ BitVec 64))
(declare-fun temp10766_176 () (_ BitVec 64))
(declare-fun temp10766_177 () (_ BitVec 64))
(declare-fun temp10766_178 () (_ BitVec 64))
(declare-fun temp10766_179 () (_ BitVec 64))
(declare-fun temp10766_180 () (_ BitVec 64))
(declare-fun temp10766_181 () (_ BitVec 64))
(declare-fun temp10766_182 () (_ BitVec 64))
(declare-fun temp10766_183 () (_ BitVec 64))
(declare-fun temp10766_184 () (_ BitVec 64))
(declare-fun temp10766_185 () (_ BitVec 64))
(declare-fun temp10766_186 () (_ BitVec 64))
(declare-fun temp10766_187 () (_ BitVec 64))
(declare-fun temp10766_188 () (_ BitVec 64))
(declare-fun temp10766_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10766_190 () (_ BitVec 64))
(declare-fun temp10766_192 () (_ BitVec 64))
(declare-fun temp10766_193 () (_ BitVec 64))
(declare-fun temp10766_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10766_194 () (_ BitVec 64))
(declare-fun temp10766_195 () (_ BitVec 64))
(declare-fun temp10766_197 () (_ BitVec 64))
(declare-fun temp10766_198 () (_ BitVec 64))
(declare-fun temp10766_196 () (_ BitVec 64))
(declare-fun temp10766_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10766_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10766_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10766_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10766_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10766_204 () (_ BitVec 64))
(declare-fun temp10766_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10766_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10766_207 () (_ BitVec 64))
(declare-fun temp10766_208 () (_ BitVec 64))
(declare-fun temp10766_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10766_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10766_211 () (_ BitVec 64))
(declare-fun temp10766_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10766_213 () (_ BitVec 64))
(declare-fun temp10766_214 () (_ BitVec 64))
(declare-fun temp10766_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10766_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10766_217 () (_ BitVec 64))
(declare-fun temp10766_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10766_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10766_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var4927888 () (_ BitVec 64))
(declare-fun var211962 () (_ BitVec 64))
(declare-fun temp10766_221 () (_ BitVec 64))
(declare-fun var211963 () (_ BitVec 64))
(declare-fun temp10766_222 () (_ BitVec 64))
(assert (= temp10766_1 #x0000000000000001))
(assert (= var77203 temp10766_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10766_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10766_2)))
(assert (= temp10766_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10766_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10766_4 #x0000000000000000))
(assert (= var210941 temp10766_4))
(assert (= temp10766_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10766_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10766_6 #x0000000000000000))
(assert (= var210986 temp10766_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10766_7 #x0000000000000000))
(assert (= temp10766_8 temp10766_7))
(assert (= temp10766_9 (select ARGNAME_padding_NAMEEND_VAL temp10766_8)))
(assert (= temp10766_10 #x0000000000000001))
(assert (= temp10766_11 temp10766_10))
(assert (= temp10766_12 (select ARGNAME_padding_NAMEEND_VAL temp10766_11)))
(assert (= temp10766_13 #x0000000000000002))
(assert (= temp10766_14 temp10766_13))
(assert (= temp10766_15 (select ARGNAME_padding_NAMEEND_VAL temp10766_14)))
(assert (= temp10766_16 #x0000000000000003))
(assert (= temp10766_17 temp10766_16))
(assert (= temp10766_18 (select ARGNAME_padding_NAMEEND_VAL temp10766_17)))
(assert (= temp10766_19 #x0000000000000004))
(assert (= temp10766_20 temp10766_19))
(assert (= temp10766_21 (select ARGNAME_padding_NAMEEND_VAL temp10766_20)))
(assert (= temp10766_22 #x0000000000000005))
(assert (= temp10766_23 temp10766_22))
(assert (= temp10766_24 (select ARGNAME_padding_NAMEEND_VAL temp10766_23)))
(assert (= temp10766_25 #x0000000000000000))
(assert (= temp10766_26 #x0000000000000000))
(assert (= temp10766_27 temp10766_26))
(assert (= temp10766_28 (select ARGNAME_padding_NAMEEND_VAL temp10766_27)))
(assert (= temp10766_29 #x0000000000000000))
(assert (= temp10766_30 #x0000000000000001))
(assert (= temp10766_31 temp10766_30))
(assert (= temp10766_32 (select ARGNAME_padding_NAMEEND_VAL temp10766_31)))
(assert (= temp10766_33 #x0000000000000000))
(assert (= temp10766_34 #x0000000000000002))
(assert (= temp10766_35 temp10766_34))
(assert (= temp10766_36 (select ARGNAME_padding_NAMEEND_VAL temp10766_35)))
(assert (= temp10766_37 #x0000000000000000))
(assert (= temp10766_38 #x0000000000000003))
(assert (= temp10766_39 temp10766_38))
(assert (= temp10766_40 (select ARGNAME_padding_NAMEEND_VAL temp10766_39)))
(assert (= temp10766_41 #x0000000000000000))
(assert (= temp10766_42 #x0000000000000004))
(assert (= temp10766_43 temp10766_42))
(assert (= temp10766_44 (select ARGNAME_padding_NAMEEND_VAL temp10766_43)))
(assert (= temp10766_45 #x0000000000000000))
(assert (= temp10766_46 #x0000000000000005))
(assert (= temp10766_47 temp10766_46))
(assert (= temp10766_48 (select ARGNAME_padding_NAMEEND_VAL temp10766_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10766_28 temp10766_25)
             (bvslt temp10766_32 temp10766_29)
             (bvslt temp10766_36 temp10766_33)
             (bvslt temp10766_40 temp10766_37)
             (bvslt temp10766_44 temp10766_41)
             (bvslt temp10766_48 temp10766_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10766_49 #x0000000000000000))
(assert (= var1191714 temp10766_49))
(assert (= temp10766_50 #x0000000000000000))
(assert (= temp10766_51 temp10766_50))
(assert (= temp10766_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10766_51)))
(assert (= temp10766_53 #x0000000000000001))
(assert (= temp10766_54 temp10766_53))
(assert (= temp10766_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10766_54)))
(assert (= temp10766_56 #x0000000000000002))
(assert (= temp10766_57 temp10766_56))
(assert (= temp10766_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10766_57)))
(assert (= temp10766_59 #x0000000000000003))
(assert (= temp10766_60 temp10766_59))
(assert (= temp10766_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10766_60)))
(assert (= temp10766_62 #x0000000000000004))
(assert (= temp10766_63 temp10766_62))
(assert (= temp10766_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10766_63)))
(assert (= temp10766_65 #x0000000000000005))
(assert (= temp10766_66 temp10766_65))
(assert (= temp10766_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10766_66)))
(assert (= temp10766_68 #x0000000000000000))
(assert (= temp10766_69 #x0000000000000000))
(assert (= temp10766_70 temp10766_69))
(assert (= temp10766_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10766_70)))
(assert (= temp10766_72 #x0000000000000000))
(assert (= temp10766_73 #x0000000000000001))
(assert (= temp10766_74 temp10766_73))
(assert (= temp10766_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10766_74)))
(assert (= temp10766_76 #x0000000000000000))
(assert (= temp10766_77 #x0000000000000002))
(assert (= temp10766_78 temp10766_77))
(assert (= temp10766_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10766_78)))
(assert (= temp10766_80 #x0000000000000000))
(assert (= temp10766_81 #x0000000000000003))
(assert (= temp10766_82 temp10766_81))
(assert (= temp10766_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10766_82)))
(assert (= temp10766_84 #x0000000000000000))
(assert (= temp10766_85 #x0000000000000004))
(assert (= temp10766_86 temp10766_85))
(assert (= temp10766_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10766_86)))
(assert (= temp10766_88 #x0000000000000000))
(assert (= temp10766_89 #x0000000000000005))
(assert (= temp10766_90 temp10766_89))
(assert (= temp10766_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10766_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10766_71 temp10766_68)
             (bvslt temp10766_75 temp10766_72)
             (bvslt temp10766_79 temp10766_76)
             (bvslt temp10766_83 temp10766_80)
             (bvslt temp10766_87 temp10766_84)
             (bvslt temp10766_91 temp10766_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10766_92 #x0000000000000000))
(assert (= var1191725 temp10766_92))
(assert (= temp10766_93 #x0000000000000000))
(assert (= temp10766_94 temp10766_93))
(assert (= temp10766_95 (select ARGNAME_stride_NAMEEND_VAL temp10766_94)))
(assert (= temp10766_96 #x0000000000000001))
(assert (= temp10766_97 temp10766_96))
(assert (= temp10766_98 (select ARGNAME_stride_NAMEEND_VAL temp10766_97)))
(assert (= temp10766_99 #x0000000000000002))
(assert (= temp10766_100 temp10766_99))
(assert (= temp10766_101 (select ARGNAME_stride_NAMEEND_VAL temp10766_100)))
(assert (= temp10766_102 #x0000000000000003))
(assert (= temp10766_103 temp10766_102))
(assert (= temp10766_104 (select ARGNAME_stride_NAMEEND_VAL temp10766_103)))
(assert (= temp10766_105 #x0000000000000004))
(assert (= temp10766_106 temp10766_105))
(assert (= temp10766_107 (select ARGNAME_stride_NAMEEND_VAL temp10766_106)))
(assert (= temp10766_108 #x0000000000000005))
(assert (= temp10766_109 temp10766_108))
(assert (= temp10766_110 (select ARGNAME_stride_NAMEEND_VAL temp10766_109)))
(assert (= temp10766_111 #x0000000000000000))
(assert (= temp10766_112 #x0000000000000000))
(assert (= temp10766_113 temp10766_112))
(assert (= temp10766_114 (select ARGNAME_stride_NAMEEND_VAL temp10766_113)))
(assert (= temp10766_115 #x0000000000000000))
(assert (= temp10766_116 #x0000000000000001))
(assert (= temp10766_117 temp10766_116))
(assert (= temp10766_118 (select ARGNAME_stride_NAMEEND_VAL temp10766_117)))
(assert (= temp10766_119 #x0000000000000000))
(assert (= temp10766_120 #x0000000000000002))
(assert (= temp10766_121 temp10766_120))
(assert (= temp10766_122 (select ARGNAME_stride_NAMEEND_VAL temp10766_121)))
(assert (= temp10766_123 #x0000000000000000))
(assert (= temp10766_124 #x0000000000000003))
(assert (= temp10766_125 temp10766_124))
(assert (= temp10766_126 (select ARGNAME_stride_NAMEEND_VAL temp10766_125)))
(assert (= temp10766_127 #x0000000000000000))
(assert (= temp10766_128 #x0000000000000004))
(assert (= temp10766_129 temp10766_128))
(assert (= temp10766_130 (select ARGNAME_stride_NAMEEND_VAL temp10766_129)))
(assert (= temp10766_131 #x0000000000000000))
(assert (= temp10766_132 #x0000000000000005))
(assert (= temp10766_133 temp10766_132))
(assert (= temp10766_134 (select ARGNAME_stride_NAMEEND_VAL temp10766_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10766_114 temp10766_111)
             (bvsle temp10766_118 temp10766_115)
             (bvsle temp10766_122 temp10766_119)
             (bvsle temp10766_126 temp10766_123)
             (bvsle temp10766_130 temp10766_127)
             (bvsle temp10766_134 temp10766_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10766_135 #x0000000000000000))
(assert (= var1191735 temp10766_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10766_136 #x0000000000000001))
(assert (= var1191747 temp10766_136))
(assert (= temp10766_137 #x0000000000000000))
(assert (= var1179826 temp10766_137))
(assert (= temp10766_138 #x0000000000000000))
(assert (= temp10766_139 temp10766_138))
(assert (= temp10766_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10766_139)))
(assert (= temp10766_141 #x0000000000000001))
(assert (= temp10766_142 temp10766_141))
(assert (= temp10766_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10766_142)))
(assert (= temp10766_144 #x0000000000000002))
(assert (= temp10766_145 temp10766_144))
(assert (= temp10766_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10766_145)))
(assert (= temp10766_147 #x0000000000000003))
(assert (= temp10766_148 temp10766_147))
(assert (= temp10766_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10766_148)))
(assert (= temp10766_150 #x0000000000000004))
(assert (= temp10766_151 temp10766_150))
(assert (= temp10766_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10766_151)))
(assert (= temp10766_153 #x0000000000000005))
(assert (= temp10766_154 temp10766_153))
(assert (= temp10766_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10766_154)))
(assert (= temp10766_157 var1179826))
(assert (= temp10766_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10766_157)))
(assert (= temp10766_156 temp10766_158))
(assert (= var1191780
   (ite (bvslt temp10766_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10766_159 #x0000000000000000))
(assert (= var1191780 temp10766_159))
(assert (= temp10766_160 #x0000000000000000))
(assert (= var1179826 temp10766_160))
(assert (= temp10766_162 var1179826))
(assert (= temp10766_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10766_162)))
(assert (= temp10766_161 temp10766_163))
(assert (= var1191802 (bvsmod temp10766_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10766_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10766_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10766_165 #x0000000000000001))
(assert (= var1191803 temp10766_165))
(assert (= temp10766_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10766_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10766_167 #x0000000000000001))
(assert (= var1191823 temp10766_167))
(assert (= temp10766_168 #x0000000000000001))
(assert (= var1180714 temp10766_168))
(assert (= temp10766_169 #x0000000000000000))
(assert (= temp10766_170 temp10766_169))
(assert (= temp10766_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10766_170)))
(assert (= temp10766_172 #x0000000000000001))
(assert (= temp10766_173 temp10766_172))
(assert (= temp10766_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10766_173)))
(assert (= temp10766_175 #x0000000000000002))
(assert (= temp10766_176 temp10766_175))
(assert (= temp10766_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10766_176)))
(assert (= temp10766_178 #x0000000000000003))
(assert (= temp10766_179 temp10766_178))
(assert (= temp10766_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10766_179)))
(assert (= temp10766_181 #x0000000000000004))
(assert (= temp10766_182 temp10766_181))
(assert (= temp10766_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10766_182)))
(assert (= temp10766_184 #x0000000000000005))
(assert (= temp10766_185 temp10766_184))
(assert (= temp10766_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10766_185)))
(assert (= temp10766_187 #x0000000000000000))
(assert (= temp10766_188
   (ite (bvslt var1180714 temp10766_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10766_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10766_188)))
(assert (= var1191831 temp10766_189))
(assert (bvslt (ite (bvslt var1180714 temp10766_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10766_190 #x0000000000000001))
(assert (= var1180714 temp10766_190))
(assert (= temp10766_192 var1180714))
(assert (= temp10766_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10766_192)))
(assert (= temp10766_191 temp10766_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10766_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10766_194 #x0000000000000001))
(assert (= var1191836 temp10766_194))
(assert (= temp10766_195 #x0000000000000000))
(assert (= var1179826 temp10766_195))
(assert (= temp10766_197 var1179826))
(assert (= temp10766_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10766_197)))
(assert (= temp10766_196 temp10766_198))
(assert (= temp10766_199 #x0000000000000002))
(assert (= var1586025 temp10766_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10766_200 #x0000000000000001))
(assert (= var1191993 temp10766_200))
(assert (= temp10766_201 #x0000000000000001))
(assert (= var2700303 temp10766_201))
(assert (= temp10766_202 #x0000000000000001))
(assert (= var2962447 temp10766_202))
(assert (= temp10766_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10766_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10766_204 #x0000000000000001))
(assert (= var211058 temp10766_204))
(assert (= temp10766_205 #x0000000000000001))
(assert (= var211188 temp10766_205))
(assert (= var3879401 var211188))
(assert (= temp10766_206 #x0000000000000000))
(assert (= var3866802 temp10766_206))
(assert (= temp10766_207 #x0000000000000000))
(assert (= temp10766_208
   (ite (bvslt var3866802 temp10766_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10766_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10766_208)))
(assert (= var3879420 temp10766_209))
(assert (bvslt (ite (bvslt var3866802 temp10766_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10766_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10766_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10766_211 #x0000000000000000))
(assert (= var3879421 temp10766_211))
(assert (= temp10766_212 #x0000000000000001))
(assert (= var3867690 temp10766_212))
(assert (= temp10766_213 #x0000000000000000))
(assert (= temp10766_214
   (ite (bvslt var3867690 temp10766_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10766_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10766_214)))
(assert (= var3879423 temp10766_215))
(assert (bvslt (ite (bvslt var3867690 temp10766_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10766_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10766_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10766_217 #x0000000000000001))
(assert (= var3879424 temp10766_217))
(assert (= temp10766_218 #x0000000000000000))
(assert (= var4133117 temp10766_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10766_219 #x0000000000000002))
(assert (= var4339331 temp10766_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10766_220 #x0000000000000000))
(assert (= var4404892 temp10766_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var4927888 var211201))
(assert (= var211962 var210913))
(assert (= temp10766_221 #x0000000000000000))
(assert (= var211963
   (ite (distinct var211962 temp10766_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10766_222 #x0000000000000001))
(assert (= var211058 temp10766_222))
(model-add temp10766_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10766_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10766_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10766_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




