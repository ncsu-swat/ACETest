(declare-fun temp780_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp780_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp780_3 () (_ BitVec 64))
(declare-fun temp780_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp780_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp780_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp780_7 () (_ BitVec 64))
(declare-fun temp780_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp780_9 () (_ BitVec 64))
(declare-fun temp780_10 () (_ BitVec 64))
(declare-fun temp780_11 () (_ BitVec 64))
(declare-fun temp780_12 () (_ BitVec 64))
(declare-fun temp780_13 () (_ BitVec 64))
(declare-fun temp780_14 () (_ BitVec 64))
(declare-fun temp780_15 () (_ BitVec 64))
(declare-fun temp780_16 () (_ BitVec 64))
(declare-fun temp780_17 () (_ BitVec 64))
(declare-fun temp780_18 () (_ BitVec 64))
(declare-fun temp780_19 () (_ BitVec 64))
(declare-fun temp780_20 () (_ BitVec 64))
(declare-fun temp780_21 () (_ BitVec 64))
(declare-fun temp780_22 () (_ BitVec 64))
(declare-fun temp780_23 () (_ BitVec 64))
(declare-fun temp780_24 () (_ BitVec 64))
(declare-fun temp780_25 () (_ BitVec 64))
(declare-fun temp780_26 () (_ BitVec 64))
(declare-fun temp780_27 () (_ BitVec 64))
(declare-fun temp780_28 () (_ BitVec 64))
(declare-fun temp780_29 () (_ BitVec 64))
(declare-fun temp780_30 () (_ BitVec 64))
(declare-fun temp780_31 () (_ BitVec 64))
(declare-fun temp780_32 () (_ BitVec 64))
(declare-fun temp780_33 () (_ BitVec 64))
(declare-fun temp780_34 () (_ BitVec 64))
(declare-fun temp780_35 () (_ BitVec 64))
(declare-fun temp780_36 () (_ BitVec 64))
(declare-fun temp780_37 () (_ BitVec 64))
(declare-fun temp780_38 () (_ BitVec 64))
(declare-fun temp780_39 () (_ BitVec 64))
(declare-fun temp780_40 () (_ BitVec 64))
(declare-fun temp780_41 () (_ BitVec 64))
(declare-fun temp780_42 () (_ BitVec 64))
(declare-fun temp780_43 () (_ BitVec 64))
(declare-fun temp780_44 () (_ BitVec 64))
(declare-fun temp780_45 () (_ BitVec 64))
(declare-fun temp780_46 () (_ BitVec 64))
(declare-fun temp780_47 () (_ BitVec 64))
(declare-fun temp780_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp780_49 () (_ BitVec 64))
(declare-fun temp780_50 () (_ BitVec 64))
(declare-fun temp780_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp780_52 () (_ BitVec 64))
(declare-fun temp780_53 () (_ BitVec 64))
(declare-fun temp780_54 () (_ BitVec 64))
(declare-fun temp780_55 () (_ BitVec 64))
(declare-fun temp780_56 () (_ BitVec 64))
(declare-fun temp780_57 () (_ BitVec 64))
(declare-fun temp780_58 () (_ BitVec 64))
(declare-fun temp780_59 () (_ BitVec 64))
(declare-fun temp780_60 () (_ BitVec 64))
(declare-fun temp780_61 () (_ BitVec 64))
(declare-fun temp780_62 () (_ BitVec 64))
(declare-fun temp780_63 () (_ BitVec 64))
(declare-fun temp780_64 () (_ BitVec 64))
(declare-fun temp780_65 () (_ BitVec 64))
(declare-fun temp780_66 () (_ BitVec 64))
(declare-fun temp780_67 () (_ BitVec 64))
(declare-fun temp780_68 () (_ BitVec 64))
(declare-fun temp780_69 () (_ BitVec 64))
(declare-fun temp780_70 () (_ BitVec 64))
(declare-fun temp780_71 () (_ BitVec 64))
(declare-fun temp780_72 () (_ BitVec 64))
(declare-fun temp780_73 () (_ BitVec 64))
(declare-fun temp780_74 () (_ BitVec 64))
(declare-fun temp780_75 () (_ BitVec 64))
(declare-fun temp780_76 () (_ BitVec 64))
(declare-fun temp780_77 () (_ BitVec 64))
(declare-fun temp780_78 () (_ BitVec 64))
(declare-fun temp780_79 () (_ BitVec 64))
(declare-fun temp780_80 () (_ BitVec 64))
(declare-fun temp780_81 () (_ BitVec 64))
(declare-fun temp780_82 () (_ BitVec 64))
(declare-fun temp780_83 () (_ BitVec 64))
(declare-fun temp780_84 () (_ BitVec 64))
(declare-fun temp780_85 () (_ BitVec 64))
(declare-fun temp780_86 () (_ BitVec 64))
(declare-fun temp780_87 () (_ BitVec 64))
(declare-fun temp780_88 () (_ BitVec 64))
(declare-fun temp780_89 () (_ BitVec 64))
(declare-fun temp780_90 () (_ BitVec 64))
(declare-fun temp780_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp780_92 () (_ BitVec 64))
(declare-fun temp780_93 () (_ BitVec 64))
(declare-fun temp780_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp780_95 () (_ BitVec 64))
(declare-fun temp780_96 () (_ BitVec 64))
(declare-fun temp780_97 () (_ BitVec 64))
(declare-fun temp780_98 () (_ BitVec 64))
(declare-fun temp780_99 () (_ BitVec 64))
(declare-fun temp780_100 () (_ BitVec 64))
(declare-fun temp780_101 () (_ BitVec 64))
(declare-fun temp780_102 () (_ BitVec 64))
(declare-fun temp780_103 () (_ BitVec 64))
(declare-fun temp780_104 () (_ BitVec 64))
(declare-fun temp780_105 () (_ BitVec 64))
(declare-fun temp780_106 () (_ BitVec 64))
(declare-fun temp780_107 () (_ BitVec 64))
(declare-fun temp780_108 () (_ BitVec 64))
(declare-fun temp780_109 () (_ BitVec 64))
(declare-fun temp780_110 () (_ BitVec 64))
(declare-fun temp780_111 () (_ BitVec 64))
(declare-fun temp780_112 () (_ BitVec 64))
(declare-fun temp780_113 () (_ BitVec 64))
(declare-fun temp780_114 () (_ BitVec 64))
(declare-fun temp780_115 () (_ BitVec 64))
(declare-fun temp780_116 () (_ BitVec 64))
(declare-fun temp780_117 () (_ BitVec 64))
(declare-fun temp780_118 () (_ BitVec 64))
(declare-fun temp780_119 () (_ BitVec 64))
(declare-fun temp780_120 () (_ BitVec 64))
(declare-fun temp780_121 () (_ BitVec 64))
(declare-fun temp780_122 () (_ BitVec 64))
(declare-fun temp780_123 () (_ BitVec 64))
(declare-fun temp780_124 () (_ BitVec 64))
(declare-fun temp780_125 () (_ BitVec 64))
(declare-fun temp780_126 () (_ BitVec 64))
(declare-fun temp780_127 () (_ BitVec 64))
(declare-fun temp780_128 () (_ BitVec 64))
(declare-fun temp780_129 () (_ BitVec 64))
(declare-fun temp780_130 () (_ BitVec 64))
(declare-fun temp780_131 () (_ BitVec 64))
(declare-fun temp780_132 () (_ BitVec 64))
(declare-fun temp780_133 () (_ BitVec 64))
(declare-fun temp780_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp780_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp780_136 () (_ BitVec 64))
(declare-fun temp780_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp780_138 () (_ BitVec 64))
(declare-fun temp780_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp780_140 () (_ BitVec 64))
(declare-fun temp780_141 () (_ BitVec 64))
(declare-fun temp780_142 () (_ BitVec 64))
(declare-fun temp780_143 () (_ BitVec 64))
(declare-fun temp780_144 () (_ BitVec 64))
(declare-fun temp780_145 () (_ BitVec 64))
(declare-fun temp780_146 () (_ BitVec 64))
(declare-fun temp780_147 () (_ BitVec 64))
(declare-fun temp780_148 () (_ BitVec 64))
(declare-fun temp780_149 () (_ BitVec 64))
(declare-fun temp780_150 () (_ BitVec 64))
(declare-fun temp780_151 () (_ BitVec 64))
(declare-fun temp780_152 () (_ BitVec 64))
(declare-fun temp780_153 () (_ BitVec 64))
(declare-fun temp780_154 () (_ BitVec 64))
(declare-fun temp780_155 () (_ BitVec 64))
(declare-fun temp780_157 () (_ BitVec 64))
(declare-fun temp780_158 () (_ BitVec 64))
(declare-fun temp780_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp780_159 () (_ BitVec 64))
(declare-fun temp780_160 () (_ BitVec 64))
(declare-fun temp780_162 () (_ BitVec 64))
(declare-fun temp780_163 () (_ BitVec 64))
(declare-fun temp780_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp780_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp780_165 () (_ BitVec 64))
(declare-fun temp780_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp780_167 () (_ BitVec 64))
(declare-fun temp780_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp780_169 () (_ BitVec 64))
(declare-fun temp780_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp780_171 () (_ BitVec 64))
(declare-fun temp780_172 () (_ BitVec 64))
(declare-fun temp780_173 () (_ BitVec 64))
(declare-fun temp780_174 () (_ BitVec 64))
(declare-fun temp780_175 () (_ BitVec 64))
(declare-fun temp780_176 () (_ BitVec 64))
(declare-fun temp780_177 () (_ BitVec 64))
(declare-fun temp780_178 () (_ BitVec 64))
(declare-fun temp780_179 () (_ BitVec 64))
(declare-fun temp780_180 () (_ BitVec 64))
(declare-fun temp780_181 () (_ BitVec 64))
(declare-fun temp780_182 () (_ BitVec 64))
(declare-fun temp780_183 () (_ BitVec 64))
(declare-fun temp780_184 () (_ BitVec 64))
(declare-fun temp780_185 () (_ BitVec 64))
(declare-fun temp780_186 () (_ BitVec 64))
(declare-fun temp780_187 () (_ BitVec 64))
(declare-fun temp780_188 () (_ BitVec 64))
(declare-fun temp780_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp780_190 () (_ BitVec 64))
(declare-fun temp780_192 () (_ BitVec 64))
(declare-fun temp780_193 () (_ BitVec 64))
(declare-fun temp780_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp780_194 () (_ BitVec 64))
(declare-fun temp780_195 () (_ BitVec 64))
(declare-fun temp780_197 () (_ BitVec 64))
(declare-fun temp780_198 () (_ BitVec 64))
(declare-fun temp780_196 () (_ BitVec 64))
(declare-fun temp780_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp780_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp780_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp780_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp780_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp780_204 () (_ BitVec 64))
(declare-fun temp780_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp780_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp780_207 () (_ BitVec 64))
(declare-fun temp780_208 () (_ BitVec 64))
(declare-fun temp780_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp780_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp780_211 () (_ BitVec 64))
(declare-fun temp780_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp780_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp780_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp780_216 () (_ BitVec 64))
(declare-fun temp780_215 () (_ BitVec 64))
(declare-fun temp780_217 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp780_218 () (_ BitVec 64))
(declare-fun temp780_219 () (_ BitVec 64))
(declare-fun temp780_220 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp780_221 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp780_222 () (_ BitVec 64))
(declare-fun temp780_223 () (_ BitVec 64))
(declare-fun temp780_224 () (_ BitVec 64))
(declare-fun var5452564 () (_ BitVec 64))
(declare-fun var5452531 () (_ BitVec 64))
(declare-fun var5321095 () (_ BitVec 64))
(declare-fun var5321091 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp780_225 () (_ BitVec 64))
(assert (= temp780_1 #x0000000000000001))
(assert (= var77203 temp780_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp780_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp780_2)))
(assert (= temp780_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp780_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp780_4 #x0000000000000000))
(assert (= var210941 temp780_4))
(assert (= temp780_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp780_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp780_6 #x0000000000000000))
(assert (= var210986 temp780_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp780_7 #x0000000000000000))
(assert (= temp780_8 temp780_7))
(assert (= temp780_9 (select ARGNAME_padding_NAMEEND_VAL temp780_8)))
(assert (= temp780_10 #x0000000000000001))
(assert (= temp780_11 temp780_10))
(assert (= temp780_12 (select ARGNAME_padding_NAMEEND_VAL temp780_11)))
(assert (= temp780_13 #x0000000000000002))
(assert (= temp780_14 temp780_13))
(assert (= temp780_15 (select ARGNAME_padding_NAMEEND_VAL temp780_14)))
(assert (= temp780_16 #x0000000000000003))
(assert (= temp780_17 temp780_16))
(assert (= temp780_18 (select ARGNAME_padding_NAMEEND_VAL temp780_17)))
(assert (= temp780_19 #x0000000000000004))
(assert (= temp780_20 temp780_19))
(assert (= temp780_21 (select ARGNAME_padding_NAMEEND_VAL temp780_20)))
(assert (= temp780_22 #x0000000000000005))
(assert (= temp780_23 temp780_22))
(assert (= temp780_24 (select ARGNAME_padding_NAMEEND_VAL temp780_23)))
(assert (= temp780_25 #x0000000000000000))
(assert (= temp780_26 #x0000000000000000))
(assert (= temp780_27 temp780_26))
(assert (= temp780_28 (select ARGNAME_padding_NAMEEND_VAL temp780_27)))
(assert (= temp780_29 #x0000000000000000))
(assert (= temp780_30 #x0000000000000001))
(assert (= temp780_31 temp780_30))
(assert (= temp780_32 (select ARGNAME_padding_NAMEEND_VAL temp780_31)))
(assert (= temp780_33 #x0000000000000000))
(assert (= temp780_34 #x0000000000000002))
(assert (= temp780_35 temp780_34))
(assert (= temp780_36 (select ARGNAME_padding_NAMEEND_VAL temp780_35)))
(assert (= temp780_37 #x0000000000000000))
(assert (= temp780_38 #x0000000000000003))
(assert (= temp780_39 temp780_38))
(assert (= temp780_40 (select ARGNAME_padding_NAMEEND_VAL temp780_39)))
(assert (= temp780_41 #x0000000000000000))
(assert (= temp780_42 #x0000000000000004))
(assert (= temp780_43 temp780_42))
(assert (= temp780_44 (select ARGNAME_padding_NAMEEND_VAL temp780_43)))
(assert (= temp780_45 #x0000000000000000))
(assert (= temp780_46 #x0000000000000005))
(assert (= temp780_47 temp780_46))
(assert (= temp780_48 (select ARGNAME_padding_NAMEEND_VAL temp780_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp780_28 temp780_25)
             (bvslt temp780_32 temp780_29)
             (bvslt temp780_36 temp780_33)
             (bvslt temp780_40 temp780_37)
             (bvslt temp780_44 temp780_41)
             (bvslt temp780_48 temp780_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp780_49 #x0000000000000000))
(assert (= var1191714 temp780_49))
(assert (= temp780_50 #x0000000000000000))
(assert (= temp780_51 temp780_50))
(assert (= temp780_52 (select ARGNAME_output_padding_NAMEEND_VAL temp780_51)))
(assert (= temp780_53 #x0000000000000001))
(assert (= temp780_54 temp780_53))
(assert (= temp780_55 (select ARGNAME_output_padding_NAMEEND_VAL temp780_54)))
(assert (= temp780_56 #x0000000000000002))
(assert (= temp780_57 temp780_56))
(assert (= temp780_58 (select ARGNAME_output_padding_NAMEEND_VAL temp780_57)))
(assert (= temp780_59 #x0000000000000003))
(assert (= temp780_60 temp780_59))
(assert (= temp780_61 (select ARGNAME_output_padding_NAMEEND_VAL temp780_60)))
(assert (= temp780_62 #x0000000000000004))
(assert (= temp780_63 temp780_62))
(assert (= temp780_64 (select ARGNAME_output_padding_NAMEEND_VAL temp780_63)))
(assert (= temp780_65 #x0000000000000005))
(assert (= temp780_66 temp780_65))
(assert (= temp780_67 (select ARGNAME_output_padding_NAMEEND_VAL temp780_66)))
(assert (= temp780_68 #x0000000000000000))
(assert (= temp780_69 #x0000000000000000))
(assert (= temp780_70 temp780_69))
(assert (= temp780_71 (select ARGNAME_output_padding_NAMEEND_VAL temp780_70)))
(assert (= temp780_72 #x0000000000000000))
(assert (= temp780_73 #x0000000000000001))
(assert (= temp780_74 temp780_73))
(assert (= temp780_75 (select ARGNAME_output_padding_NAMEEND_VAL temp780_74)))
(assert (= temp780_76 #x0000000000000000))
(assert (= temp780_77 #x0000000000000002))
(assert (= temp780_78 temp780_77))
(assert (= temp780_79 (select ARGNAME_output_padding_NAMEEND_VAL temp780_78)))
(assert (= temp780_80 #x0000000000000000))
(assert (= temp780_81 #x0000000000000003))
(assert (= temp780_82 temp780_81))
(assert (= temp780_83 (select ARGNAME_output_padding_NAMEEND_VAL temp780_82)))
(assert (= temp780_84 #x0000000000000000))
(assert (= temp780_85 #x0000000000000004))
(assert (= temp780_86 temp780_85))
(assert (= temp780_87 (select ARGNAME_output_padding_NAMEEND_VAL temp780_86)))
(assert (= temp780_88 #x0000000000000000))
(assert (= temp780_89 #x0000000000000005))
(assert (= temp780_90 temp780_89))
(assert (= temp780_91 (select ARGNAME_output_padding_NAMEEND_VAL temp780_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp780_71 temp780_68)
             (bvslt temp780_75 temp780_72)
             (bvslt temp780_79 temp780_76)
             (bvslt temp780_83 temp780_80)
             (bvslt temp780_87 temp780_84)
             (bvslt temp780_91 temp780_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp780_92 #x0000000000000000))
(assert (= var1191725 temp780_92))
(assert (= temp780_93 #x0000000000000000))
(assert (= temp780_94 temp780_93))
(assert (= temp780_95 (select ARGNAME_stride_NAMEEND_VAL temp780_94)))
(assert (= temp780_96 #x0000000000000001))
(assert (= temp780_97 temp780_96))
(assert (= temp780_98 (select ARGNAME_stride_NAMEEND_VAL temp780_97)))
(assert (= temp780_99 #x0000000000000002))
(assert (= temp780_100 temp780_99))
(assert (= temp780_101 (select ARGNAME_stride_NAMEEND_VAL temp780_100)))
(assert (= temp780_102 #x0000000000000003))
(assert (= temp780_103 temp780_102))
(assert (= temp780_104 (select ARGNAME_stride_NAMEEND_VAL temp780_103)))
(assert (= temp780_105 #x0000000000000004))
(assert (= temp780_106 temp780_105))
(assert (= temp780_107 (select ARGNAME_stride_NAMEEND_VAL temp780_106)))
(assert (= temp780_108 #x0000000000000005))
(assert (= temp780_109 temp780_108))
(assert (= temp780_110 (select ARGNAME_stride_NAMEEND_VAL temp780_109)))
(assert (= temp780_111 #x0000000000000000))
(assert (= temp780_112 #x0000000000000000))
(assert (= temp780_113 temp780_112))
(assert (= temp780_114 (select ARGNAME_stride_NAMEEND_VAL temp780_113)))
(assert (= temp780_115 #x0000000000000000))
(assert (= temp780_116 #x0000000000000001))
(assert (= temp780_117 temp780_116))
(assert (= temp780_118 (select ARGNAME_stride_NAMEEND_VAL temp780_117)))
(assert (= temp780_119 #x0000000000000000))
(assert (= temp780_120 #x0000000000000002))
(assert (= temp780_121 temp780_120))
(assert (= temp780_122 (select ARGNAME_stride_NAMEEND_VAL temp780_121)))
(assert (= temp780_123 #x0000000000000000))
(assert (= temp780_124 #x0000000000000003))
(assert (= temp780_125 temp780_124))
(assert (= temp780_126 (select ARGNAME_stride_NAMEEND_VAL temp780_125)))
(assert (= temp780_127 #x0000000000000000))
(assert (= temp780_128 #x0000000000000004))
(assert (= temp780_129 temp780_128))
(assert (= temp780_130 (select ARGNAME_stride_NAMEEND_VAL temp780_129)))
(assert (= temp780_131 #x0000000000000000))
(assert (= temp780_132 #x0000000000000005))
(assert (= temp780_133 temp780_132))
(assert (= temp780_134 (select ARGNAME_stride_NAMEEND_VAL temp780_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp780_114 temp780_111)
             (bvsle temp780_118 temp780_115)
             (bvsle temp780_122 temp780_119)
             (bvsle temp780_126 temp780_123)
             (bvsle temp780_130 temp780_127)
             (bvsle temp780_134 temp780_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp780_135 #x0000000000000000))
(assert (= var1191735 temp780_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp780_136 #x0000000000000001))
(assert (= var1191747 temp780_136))
(assert (= temp780_137 #x0000000000000000))
(assert (= var1179826 temp780_137))
(assert (= temp780_138 #x0000000000000000))
(assert (= temp780_139 temp780_138))
(assert (= temp780_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp780_139)))
(assert (= temp780_141 #x0000000000000001))
(assert (= temp780_142 temp780_141))
(assert (= temp780_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp780_142)))
(assert (= temp780_144 #x0000000000000002))
(assert (= temp780_145 temp780_144))
(assert (= temp780_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp780_145)))
(assert (= temp780_147 #x0000000000000003))
(assert (= temp780_148 temp780_147))
(assert (= temp780_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp780_148)))
(assert (= temp780_150 #x0000000000000004))
(assert (= temp780_151 temp780_150))
(assert (= temp780_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp780_151)))
(assert (= temp780_153 #x0000000000000005))
(assert (= temp780_154 temp780_153))
(assert (= temp780_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp780_154)))
(assert (= temp780_157 var1179826))
(assert (= temp780_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp780_157)))
(assert (= temp780_156 temp780_158))
(assert (= var1191780
   (ite (bvslt temp780_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp780_159 #x0000000000000000))
(assert (= var1191780 temp780_159))
(assert (= temp780_160 #x0000000000000000))
(assert (= var1179826 temp780_160))
(assert (= temp780_162 var1179826))
(assert (= temp780_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp780_162)))
(assert (= temp780_161 temp780_163))
(assert (= var1191802 (bvsmod temp780_161 ARGNAME_groups_NAMEEND)))
(assert (= temp780_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp780_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp780_165 #x0000000000000001))
(assert (= var1191803 temp780_165))
(assert (= temp780_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp780_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp780_167 #x0000000000000001))
(assert (= var1191823 temp780_167))
(assert (= temp780_168 #x0000000000000001))
(assert (= var1180714 temp780_168))
(assert (= temp780_169 #x0000000000000000))
(assert (= temp780_170 temp780_169))
(assert (= temp780_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp780_170)))
(assert (= temp780_172 #x0000000000000001))
(assert (= temp780_173 temp780_172))
(assert (= temp780_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp780_173)))
(assert (= temp780_175 #x0000000000000002))
(assert (= temp780_176 temp780_175))
(assert (= temp780_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp780_176)))
(assert (= temp780_178 #x0000000000000003))
(assert (= temp780_179 temp780_178))
(assert (= temp780_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp780_179)))
(assert (= temp780_181 #x0000000000000004))
(assert (= temp780_182 temp780_181))
(assert (= temp780_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp780_182)))
(assert (= temp780_184 #x0000000000000005))
(assert (= temp780_185 temp780_184))
(assert (= temp780_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp780_185)))
(assert (= temp780_187 #x0000000000000000))
(assert (= temp780_188
   (ite (bvslt var1180714 temp780_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp780_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp780_188)))
(assert (= var1191831 temp780_189))
(assert (bvslt (ite (bvslt var1180714 temp780_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp780_190 #x0000000000000001))
(assert (= var1180714 temp780_190))
(assert (= temp780_192 var1180714))
(assert (= temp780_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp780_192)))
(assert (= temp780_191 temp780_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp780_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp780_194 #x0000000000000001))
(assert (= var1191836 temp780_194))
(assert (= temp780_195 #x0000000000000000))
(assert (= var1179826 temp780_195))
(assert (= temp780_197 var1179826))
(assert (= temp780_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp780_197)))
(assert (= temp780_196 temp780_198))
(assert (= temp780_199 #x0000000000000002))
(assert (= var1586025 temp780_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp780_200 #x0000000000000001))
(assert (= var1191993 temp780_200))
(assert (= temp780_201 #x0000000000000001))
(assert (= var2700303 temp780_201))
(assert (= temp780_202 #x0000000000000001))
(assert (= var2962447 temp780_202))
(assert (= temp780_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp780_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp780_204 #x0000000000000001))
(assert (= var211058 temp780_204))
(assert (= temp780_205 #x0000000000000001))
(assert (= var211188 temp780_205))
(assert (= var3879401 var211188))
(assert (= temp780_206 #x0000000000000000))
(assert (= var3866802 temp780_206))
(assert (= temp780_207 #x0000000000000000))
(assert (= temp780_208
   (ite (bvslt var3866802 temp780_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp780_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp780_208)))
(assert (= var3879420 temp780_209))
(assert (bvslt (ite (bvslt var3866802 temp780_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp780_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp780_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp780_211 #x0000000000000001))
(assert (= var3879421 temp780_211))
(assert (= temp780_212 #x0000000000000000))
(assert (= var4079423 temp780_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp780_213 #x0000000000000002))
(assert (= var4208259 temp780_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp780_214 #x0000000000000000))
(assert (= var4273820 temp780_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp780_216 #xffffffffffffffff))
(assert (= temp780_215 temp780_216))
(assert (= temp780_217 #x0000000000000001))
(assert (= var197674 temp780_217))
(assert (= temp780_218 #x0000000000000000))
(assert (= temp780_219
   (ite (bvslt var197674 temp780_218)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp780_220 (select ARGNAME_input_NAMEEND_DIMSIZE temp780_219)))
(assert (= var211595 temp780_220))
(assert (bvslt (ite (bvslt var197674 temp780_218)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp780_221 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp780_221) #x0000000000000001 #x0000000000000000)))
(assert (= temp780_222 #x0000000000000000))
(assert (= var211596 temp780_222))
(assert (= temp780_223 #x0000000000000001))
(assert (= var211058 temp780_223))
(assert (= temp780_224 #x0000000000000000))
(assert (= var5452564 temp780_224))
(assert (= var5452531 var5452564))
(assert (= var5321095 var5452531))
(assert (= var5321091 var5321095))
(assert (= var212669 var5321091))
(assert (= temp780_225 #x0000000000000000))
(assert (= var212669 temp780_225))
(model-add temp780_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp780_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp780_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp780_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




