(declare-fun temp10661_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10661_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10661_3 () (_ BitVec 64))
(declare-fun temp10661_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10661_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10661_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10661_7 () (_ BitVec 64))
(declare-fun temp10661_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10661_9 () (_ BitVec 64))
(declare-fun temp10661_10 () (_ BitVec 64))
(declare-fun temp10661_11 () (_ BitVec 64))
(declare-fun temp10661_12 () (_ BitVec 64))
(declare-fun temp10661_13 () (_ BitVec 64))
(declare-fun temp10661_14 () (_ BitVec 64))
(declare-fun temp10661_15 () (_ BitVec 64))
(declare-fun temp10661_16 () (_ BitVec 64))
(declare-fun temp10661_17 () (_ BitVec 64))
(declare-fun temp10661_18 () (_ BitVec 64))
(declare-fun temp10661_19 () (_ BitVec 64))
(declare-fun temp10661_20 () (_ BitVec 64))
(declare-fun temp10661_21 () (_ BitVec 64))
(declare-fun temp10661_22 () (_ BitVec 64))
(declare-fun temp10661_23 () (_ BitVec 64))
(declare-fun temp10661_24 () (_ BitVec 64))
(declare-fun temp10661_25 () (_ BitVec 64))
(declare-fun temp10661_26 () (_ BitVec 64))
(declare-fun temp10661_27 () (_ BitVec 64))
(declare-fun temp10661_28 () (_ BitVec 64))
(declare-fun temp10661_29 () (_ BitVec 64))
(declare-fun temp10661_30 () (_ BitVec 64))
(declare-fun temp10661_31 () (_ BitVec 64))
(declare-fun temp10661_32 () (_ BitVec 64))
(declare-fun temp10661_33 () (_ BitVec 64))
(declare-fun temp10661_34 () (_ BitVec 64))
(declare-fun temp10661_35 () (_ BitVec 64))
(declare-fun temp10661_36 () (_ BitVec 64))
(declare-fun temp10661_37 () (_ BitVec 64))
(declare-fun temp10661_38 () (_ BitVec 64))
(declare-fun temp10661_39 () (_ BitVec 64))
(declare-fun temp10661_40 () (_ BitVec 64))
(declare-fun temp10661_41 () (_ BitVec 64))
(declare-fun temp10661_42 () (_ BitVec 64))
(declare-fun temp10661_43 () (_ BitVec 64))
(declare-fun temp10661_44 () (_ BitVec 64))
(declare-fun temp10661_45 () (_ BitVec 64))
(declare-fun temp10661_46 () (_ BitVec 64))
(declare-fun temp10661_47 () (_ BitVec 64))
(declare-fun temp10661_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10661_49 () (_ BitVec 64))
(declare-fun temp10661_50 () (_ BitVec 64))
(declare-fun temp10661_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10661_52 () (_ BitVec 64))
(declare-fun temp10661_53 () (_ BitVec 64))
(declare-fun temp10661_54 () (_ BitVec 64))
(declare-fun temp10661_55 () (_ BitVec 64))
(declare-fun temp10661_56 () (_ BitVec 64))
(declare-fun temp10661_57 () (_ BitVec 64))
(declare-fun temp10661_58 () (_ BitVec 64))
(declare-fun temp10661_59 () (_ BitVec 64))
(declare-fun temp10661_60 () (_ BitVec 64))
(declare-fun temp10661_61 () (_ BitVec 64))
(declare-fun temp10661_62 () (_ BitVec 64))
(declare-fun temp10661_63 () (_ BitVec 64))
(declare-fun temp10661_64 () (_ BitVec 64))
(declare-fun temp10661_65 () (_ BitVec 64))
(declare-fun temp10661_66 () (_ BitVec 64))
(declare-fun temp10661_67 () (_ BitVec 64))
(declare-fun temp10661_68 () (_ BitVec 64))
(declare-fun temp10661_69 () (_ BitVec 64))
(declare-fun temp10661_70 () (_ BitVec 64))
(declare-fun temp10661_71 () (_ BitVec 64))
(declare-fun temp10661_72 () (_ BitVec 64))
(declare-fun temp10661_73 () (_ BitVec 64))
(declare-fun temp10661_74 () (_ BitVec 64))
(declare-fun temp10661_75 () (_ BitVec 64))
(declare-fun temp10661_76 () (_ BitVec 64))
(declare-fun temp10661_77 () (_ BitVec 64))
(declare-fun temp10661_78 () (_ BitVec 64))
(declare-fun temp10661_79 () (_ BitVec 64))
(declare-fun temp10661_80 () (_ BitVec 64))
(declare-fun temp10661_81 () (_ BitVec 64))
(declare-fun temp10661_82 () (_ BitVec 64))
(declare-fun temp10661_83 () (_ BitVec 64))
(declare-fun temp10661_84 () (_ BitVec 64))
(declare-fun temp10661_85 () (_ BitVec 64))
(declare-fun temp10661_86 () (_ BitVec 64))
(declare-fun temp10661_87 () (_ BitVec 64))
(declare-fun temp10661_88 () (_ BitVec 64))
(declare-fun temp10661_89 () (_ BitVec 64))
(declare-fun temp10661_90 () (_ BitVec 64))
(declare-fun temp10661_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10661_92 () (_ BitVec 64))
(declare-fun temp10661_93 () (_ BitVec 64))
(declare-fun temp10661_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10661_95 () (_ BitVec 64))
(declare-fun temp10661_96 () (_ BitVec 64))
(declare-fun temp10661_97 () (_ BitVec 64))
(declare-fun temp10661_98 () (_ BitVec 64))
(declare-fun temp10661_99 () (_ BitVec 64))
(declare-fun temp10661_100 () (_ BitVec 64))
(declare-fun temp10661_101 () (_ BitVec 64))
(declare-fun temp10661_102 () (_ BitVec 64))
(declare-fun temp10661_103 () (_ BitVec 64))
(declare-fun temp10661_104 () (_ BitVec 64))
(declare-fun temp10661_105 () (_ BitVec 64))
(declare-fun temp10661_106 () (_ BitVec 64))
(declare-fun temp10661_107 () (_ BitVec 64))
(declare-fun temp10661_108 () (_ BitVec 64))
(declare-fun temp10661_109 () (_ BitVec 64))
(declare-fun temp10661_110 () (_ BitVec 64))
(declare-fun temp10661_111 () (_ BitVec 64))
(declare-fun temp10661_112 () (_ BitVec 64))
(declare-fun temp10661_113 () (_ BitVec 64))
(declare-fun temp10661_114 () (_ BitVec 64))
(declare-fun temp10661_115 () (_ BitVec 64))
(declare-fun temp10661_116 () (_ BitVec 64))
(declare-fun temp10661_117 () (_ BitVec 64))
(declare-fun temp10661_118 () (_ BitVec 64))
(declare-fun temp10661_119 () (_ BitVec 64))
(declare-fun temp10661_120 () (_ BitVec 64))
(declare-fun temp10661_121 () (_ BitVec 64))
(declare-fun temp10661_122 () (_ BitVec 64))
(declare-fun temp10661_123 () (_ BitVec 64))
(declare-fun temp10661_124 () (_ BitVec 64))
(declare-fun temp10661_125 () (_ BitVec 64))
(declare-fun temp10661_126 () (_ BitVec 64))
(declare-fun temp10661_127 () (_ BitVec 64))
(declare-fun temp10661_128 () (_ BitVec 64))
(declare-fun temp10661_129 () (_ BitVec 64))
(declare-fun temp10661_130 () (_ BitVec 64))
(declare-fun temp10661_131 () (_ BitVec 64))
(declare-fun temp10661_132 () (_ BitVec 64))
(declare-fun temp10661_133 () (_ BitVec 64))
(declare-fun temp10661_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10661_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10661_136 () (_ BitVec 64))
(declare-fun temp10661_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10661_138 () (_ BitVec 64))
(declare-fun temp10661_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10661_140 () (_ BitVec 64))
(declare-fun temp10661_141 () (_ BitVec 64))
(declare-fun temp10661_142 () (_ BitVec 64))
(declare-fun temp10661_143 () (_ BitVec 64))
(declare-fun temp10661_144 () (_ BitVec 64))
(declare-fun temp10661_145 () (_ BitVec 64))
(declare-fun temp10661_146 () (_ BitVec 64))
(declare-fun temp10661_147 () (_ BitVec 64))
(declare-fun temp10661_148 () (_ BitVec 64))
(declare-fun temp10661_149 () (_ BitVec 64))
(declare-fun temp10661_150 () (_ BitVec 64))
(declare-fun temp10661_151 () (_ BitVec 64))
(declare-fun temp10661_152 () (_ BitVec 64))
(declare-fun temp10661_153 () (_ BitVec 64))
(declare-fun temp10661_154 () (_ BitVec 64))
(declare-fun temp10661_155 () (_ BitVec 64))
(declare-fun temp10661_157 () (_ BitVec 64))
(declare-fun temp10661_158 () (_ BitVec 64))
(declare-fun temp10661_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10661_159 () (_ BitVec 64))
(declare-fun temp10661_160 () (_ BitVec 64))
(declare-fun temp10661_162 () (_ BitVec 64))
(declare-fun temp10661_163 () (_ BitVec 64))
(declare-fun temp10661_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10661_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10661_165 () (_ BitVec 64))
(declare-fun temp10661_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10661_167 () (_ BitVec 64))
(declare-fun temp10661_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10661_169 () (_ BitVec 64))
(declare-fun temp10661_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10661_171 () (_ BitVec 64))
(declare-fun temp10661_172 () (_ BitVec 64))
(declare-fun temp10661_173 () (_ BitVec 64))
(declare-fun temp10661_174 () (_ BitVec 64))
(declare-fun temp10661_175 () (_ BitVec 64))
(declare-fun temp10661_176 () (_ BitVec 64))
(declare-fun temp10661_177 () (_ BitVec 64))
(declare-fun temp10661_178 () (_ BitVec 64))
(declare-fun temp10661_179 () (_ BitVec 64))
(declare-fun temp10661_180 () (_ BitVec 64))
(declare-fun temp10661_181 () (_ BitVec 64))
(declare-fun temp10661_182 () (_ BitVec 64))
(declare-fun temp10661_183 () (_ BitVec 64))
(declare-fun temp10661_184 () (_ BitVec 64))
(declare-fun temp10661_185 () (_ BitVec 64))
(declare-fun temp10661_186 () (_ BitVec 64))
(declare-fun temp10661_187 () (_ BitVec 64))
(declare-fun temp10661_188 () (_ BitVec 64))
(declare-fun temp10661_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10661_190 () (_ BitVec 64))
(declare-fun temp10661_192 () (_ BitVec 64))
(declare-fun temp10661_193 () (_ BitVec 64))
(declare-fun temp10661_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10661_194 () (_ BitVec 64))
(declare-fun temp10661_195 () (_ BitVec 64))
(declare-fun temp10661_197 () (_ BitVec 64))
(declare-fun temp10661_198 () (_ BitVec 64))
(declare-fun temp10661_196 () (_ BitVec 64))
(declare-fun temp10661_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10661_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10661_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10661_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10661_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10661_204 () (_ BitVec 64))
(declare-fun temp10661_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10661_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10661_207 () (_ BitVec 64))
(declare-fun temp10661_208 () (_ BitVec 64))
(declare-fun temp10661_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10661_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10661_211 () (_ BitVec 64))
(declare-fun temp10661_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10661_213 () (_ BitVec 64))
(declare-fun temp10661_214 () (_ BitVec 64))
(declare-fun temp10661_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10661_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10661_217 () (_ BitVec 64))
(declare-fun temp10661_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10661_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10661_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp10661_222 () (_ BitVec 64))
(declare-fun temp10661_221 () (_ BitVec 64))
(declare-fun temp10661_223 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp10661_224 () (_ BitVec 64))
(declare-fun temp10661_225 () (_ BitVec 64))
(declare-fun temp10661_226 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp10661_227 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp10661_228 () (_ BitVec 64))
(declare-fun temp10661_230 () (_ BitVec 64))
(declare-fun temp10661_229 () (_ BitVec 64))
(declare-fun temp10661_231 () (_ BitVec 64))
(assert (= temp10661_1 #x0000000000000001))
(assert (= var77203 temp10661_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10661_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10661_2)))
(assert (= temp10661_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10661_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10661_4 #x0000000000000000))
(assert (= var210941 temp10661_4))
(assert (= temp10661_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10661_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10661_6 #x0000000000000000))
(assert (= var210986 temp10661_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10661_7 #x0000000000000000))
(assert (= temp10661_8 temp10661_7))
(assert (= temp10661_9 (select ARGNAME_padding_NAMEEND_VAL temp10661_8)))
(assert (= temp10661_10 #x0000000000000001))
(assert (= temp10661_11 temp10661_10))
(assert (= temp10661_12 (select ARGNAME_padding_NAMEEND_VAL temp10661_11)))
(assert (= temp10661_13 #x0000000000000002))
(assert (= temp10661_14 temp10661_13))
(assert (= temp10661_15 (select ARGNAME_padding_NAMEEND_VAL temp10661_14)))
(assert (= temp10661_16 #x0000000000000003))
(assert (= temp10661_17 temp10661_16))
(assert (= temp10661_18 (select ARGNAME_padding_NAMEEND_VAL temp10661_17)))
(assert (= temp10661_19 #x0000000000000004))
(assert (= temp10661_20 temp10661_19))
(assert (= temp10661_21 (select ARGNAME_padding_NAMEEND_VAL temp10661_20)))
(assert (= temp10661_22 #x0000000000000005))
(assert (= temp10661_23 temp10661_22))
(assert (= temp10661_24 (select ARGNAME_padding_NAMEEND_VAL temp10661_23)))
(assert (= temp10661_25 #x0000000000000000))
(assert (= temp10661_26 #x0000000000000000))
(assert (= temp10661_27 temp10661_26))
(assert (= temp10661_28 (select ARGNAME_padding_NAMEEND_VAL temp10661_27)))
(assert (= temp10661_29 #x0000000000000000))
(assert (= temp10661_30 #x0000000000000001))
(assert (= temp10661_31 temp10661_30))
(assert (= temp10661_32 (select ARGNAME_padding_NAMEEND_VAL temp10661_31)))
(assert (= temp10661_33 #x0000000000000000))
(assert (= temp10661_34 #x0000000000000002))
(assert (= temp10661_35 temp10661_34))
(assert (= temp10661_36 (select ARGNAME_padding_NAMEEND_VAL temp10661_35)))
(assert (= temp10661_37 #x0000000000000000))
(assert (= temp10661_38 #x0000000000000003))
(assert (= temp10661_39 temp10661_38))
(assert (= temp10661_40 (select ARGNAME_padding_NAMEEND_VAL temp10661_39)))
(assert (= temp10661_41 #x0000000000000000))
(assert (= temp10661_42 #x0000000000000004))
(assert (= temp10661_43 temp10661_42))
(assert (= temp10661_44 (select ARGNAME_padding_NAMEEND_VAL temp10661_43)))
(assert (= temp10661_45 #x0000000000000000))
(assert (= temp10661_46 #x0000000000000005))
(assert (= temp10661_47 temp10661_46))
(assert (= temp10661_48 (select ARGNAME_padding_NAMEEND_VAL temp10661_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10661_28 temp10661_25)
             (bvslt temp10661_32 temp10661_29)
             (bvslt temp10661_36 temp10661_33)
             (bvslt temp10661_40 temp10661_37)
             (bvslt temp10661_44 temp10661_41)
             (bvslt temp10661_48 temp10661_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10661_49 #x0000000000000000))
(assert (= var1191714 temp10661_49))
(assert (= temp10661_50 #x0000000000000000))
(assert (= temp10661_51 temp10661_50))
(assert (= temp10661_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10661_51)))
(assert (= temp10661_53 #x0000000000000001))
(assert (= temp10661_54 temp10661_53))
(assert (= temp10661_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10661_54)))
(assert (= temp10661_56 #x0000000000000002))
(assert (= temp10661_57 temp10661_56))
(assert (= temp10661_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10661_57)))
(assert (= temp10661_59 #x0000000000000003))
(assert (= temp10661_60 temp10661_59))
(assert (= temp10661_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10661_60)))
(assert (= temp10661_62 #x0000000000000004))
(assert (= temp10661_63 temp10661_62))
(assert (= temp10661_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10661_63)))
(assert (= temp10661_65 #x0000000000000005))
(assert (= temp10661_66 temp10661_65))
(assert (= temp10661_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10661_66)))
(assert (= temp10661_68 #x0000000000000000))
(assert (= temp10661_69 #x0000000000000000))
(assert (= temp10661_70 temp10661_69))
(assert (= temp10661_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10661_70)))
(assert (= temp10661_72 #x0000000000000000))
(assert (= temp10661_73 #x0000000000000001))
(assert (= temp10661_74 temp10661_73))
(assert (= temp10661_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10661_74)))
(assert (= temp10661_76 #x0000000000000000))
(assert (= temp10661_77 #x0000000000000002))
(assert (= temp10661_78 temp10661_77))
(assert (= temp10661_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10661_78)))
(assert (= temp10661_80 #x0000000000000000))
(assert (= temp10661_81 #x0000000000000003))
(assert (= temp10661_82 temp10661_81))
(assert (= temp10661_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10661_82)))
(assert (= temp10661_84 #x0000000000000000))
(assert (= temp10661_85 #x0000000000000004))
(assert (= temp10661_86 temp10661_85))
(assert (= temp10661_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10661_86)))
(assert (= temp10661_88 #x0000000000000000))
(assert (= temp10661_89 #x0000000000000005))
(assert (= temp10661_90 temp10661_89))
(assert (= temp10661_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10661_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10661_71 temp10661_68)
             (bvslt temp10661_75 temp10661_72)
             (bvslt temp10661_79 temp10661_76)
             (bvslt temp10661_83 temp10661_80)
             (bvslt temp10661_87 temp10661_84)
             (bvslt temp10661_91 temp10661_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10661_92 #x0000000000000000))
(assert (= var1191725 temp10661_92))
(assert (= temp10661_93 #x0000000000000000))
(assert (= temp10661_94 temp10661_93))
(assert (= temp10661_95 (select ARGNAME_stride_NAMEEND_VAL temp10661_94)))
(assert (= temp10661_96 #x0000000000000001))
(assert (= temp10661_97 temp10661_96))
(assert (= temp10661_98 (select ARGNAME_stride_NAMEEND_VAL temp10661_97)))
(assert (= temp10661_99 #x0000000000000002))
(assert (= temp10661_100 temp10661_99))
(assert (= temp10661_101 (select ARGNAME_stride_NAMEEND_VAL temp10661_100)))
(assert (= temp10661_102 #x0000000000000003))
(assert (= temp10661_103 temp10661_102))
(assert (= temp10661_104 (select ARGNAME_stride_NAMEEND_VAL temp10661_103)))
(assert (= temp10661_105 #x0000000000000004))
(assert (= temp10661_106 temp10661_105))
(assert (= temp10661_107 (select ARGNAME_stride_NAMEEND_VAL temp10661_106)))
(assert (= temp10661_108 #x0000000000000005))
(assert (= temp10661_109 temp10661_108))
(assert (= temp10661_110 (select ARGNAME_stride_NAMEEND_VAL temp10661_109)))
(assert (= temp10661_111 #x0000000000000000))
(assert (= temp10661_112 #x0000000000000000))
(assert (= temp10661_113 temp10661_112))
(assert (= temp10661_114 (select ARGNAME_stride_NAMEEND_VAL temp10661_113)))
(assert (= temp10661_115 #x0000000000000000))
(assert (= temp10661_116 #x0000000000000001))
(assert (= temp10661_117 temp10661_116))
(assert (= temp10661_118 (select ARGNAME_stride_NAMEEND_VAL temp10661_117)))
(assert (= temp10661_119 #x0000000000000000))
(assert (= temp10661_120 #x0000000000000002))
(assert (= temp10661_121 temp10661_120))
(assert (= temp10661_122 (select ARGNAME_stride_NAMEEND_VAL temp10661_121)))
(assert (= temp10661_123 #x0000000000000000))
(assert (= temp10661_124 #x0000000000000003))
(assert (= temp10661_125 temp10661_124))
(assert (= temp10661_126 (select ARGNAME_stride_NAMEEND_VAL temp10661_125)))
(assert (= temp10661_127 #x0000000000000000))
(assert (= temp10661_128 #x0000000000000004))
(assert (= temp10661_129 temp10661_128))
(assert (= temp10661_130 (select ARGNAME_stride_NAMEEND_VAL temp10661_129)))
(assert (= temp10661_131 #x0000000000000000))
(assert (= temp10661_132 #x0000000000000005))
(assert (= temp10661_133 temp10661_132))
(assert (= temp10661_134 (select ARGNAME_stride_NAMEEND_VAL temp10661_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10661_114 temp10661_111)
             (bvsle temp10661_118 temp10661_115)
             (bvsle temp10661_122 temp10661_119)
             (bvsle temp10661_126 temp10661_123)
             (bvsle temp10661_130 temp10661_127)
             (bvsle temp10661_134 temp10661_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10661_135 #x0000000000000000))
(assert (= var1191735 temp10661_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10661_136 #x0000000000000001))
(assert (= var1191747 temp10661_136))
(assert (= temp10661_137 #x0000000000000000))
(assert (= var1179826 temp10661_137))
(assert (= temp10661_138 #x0000000000000000))
(assert (= temp10661_139 temp10661_138))
(assert (= temp10661_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10661_139)))
(assert (= temp10661_141 #x0000000000000001))
(assert (= temp10661_142 temp10661_141))
(assert (= temp10661_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10661_142)))
(assert (= temp10661_144 #x0000000000000002))
(assert (= temp10661_145 temp10661_144))
(assert (= temp10661_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10661_145)))
(assert (= temp10661_147 #x0000000000000003))
(assert (= temp10661_148 temp10661_147))
(assert (= temp10661_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10661_148)))
(assert (= temp10661_150 #x0000000000000004))
(assert (= temp10661_151 temp10661_150))
(assert (= temp10661_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10661_151)))
(assert (= temp10661_153 #x0000000000000005))
(assert (= temp10661_154 temp10661_153))
(assert (= temp10661_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10661_154)))
(assert (= temp10661_157 var1179826))
(assert (= temp10661_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10661_157)))
(assert (= temp10661_156 temp10661_158))
(assert (= var1191780
   (ite (bvslt temp10661_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10661_159 #x0000000000000000))
(assert (= var1191780 temp10661_159))
(assert (= temp10661_160 #x0000000000000000))
(assert (= var1179826 temp10661_160))
(assert (= temp10661_162 var1179826))
(assert (= temp10661_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10661_162)))
(assert (= temp10661_161 temp10661_163))
(assert (= var1191802 (bvsmod temp10661_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10661_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10661_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10661_165 #x0000000000000001))
(assert (= var1191803 temp10661_165))
(assert (= temp10661_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10661_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10661_167 #x0000000000000001))
(assert (= var1191823 temp10661_167))
(assert (= temp10661_168 #x0000000000000001))
(assert (= var1180714 temp10661_168))
(assert (= temp10661_169 #x0000000000000000))
(assert (= temp10661_170 temp10661_169))
(assert (= temp10661_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10661_170)))
(assert (= temp10661_172 #x0000000000000001))
(assert (= temp10661_173 temp10661_172))
(assert (= temp10661_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10661_173)))
(assert (= temp10661_175 #x0000000000000002))
(assert (= temp10661_176 temp10661_175))
(assert (= temp10661_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10661_176)))
(assert (= temp10661_178 #x0000000000000003))
(assert (= temp10661_179 temp10661_178))
(assert (= temp10661_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10661_179)))
(assert (= temp10661_181 #x0000000000000004))
(assert (= temp10661_182 temp10661_181))
(assert (= temp10661_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10661_182)))
(assert (= temp10661_184 #x0000000000000005))
(assert (= temp10661_185 temp10661_184))
(assert (= temp10661_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10661_185)))
(assert (= temp10661_187 #x0000000000000000))
(assert (= temp10661_188
   (ite (bvslt var1180714 temp10661_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10661_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10661_188)))
(assert (= var1191831 temp10661_189))
(assert (bvslt (ite (bvslt var1180714 temp10661_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10661_190 #x0000000000000001))
(assert (= var1180714 temp10661_190))
(assert (= temp10661_192 var1180714))
(assert (= temp10661_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10661_192)))
(assert (= temp10661_191 temp10661_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10661_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10661_194 #x0000000000000001))
(assert (= var1191836 temp10661_194))
(assert (= temp10661_195 #x0000000000000000))
(assert (= var1179826 temp10661_195))
(assert (= temp10661_197 var1179826))
(assert (= temp10661_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10661_197)))
(assert (= temp10661_196 temp10661_198))
(assert (= temp10661_199 #x0000000000000002))
(assert (= var1586025 temp10661_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10661_200 #x0000000000000001))
(assert (= var1191993 temp10661_200))
(assert (= temp10661_201 #x0000000000000001))
(assert (= var2700303 temp10661_201))
(assert (= temp10661_202 #x0000000000000001))
(assert (= var2962447 temp10661_202))
(assert (= temp10661_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10661_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10661_204 #x0000000000000001))
(assert (= var211058 temp10661_204))
(assert (= temp10661_205 #x0000000000000001))
(assert (= var211188 temp10661_205))
(assert (= var3879401 var211188))
(assert (= temp10661_206 #x0000000000000000))
(assert (= var3866802 temp10661_206))
(assert (= temp10661_207 #x0000000000000000))
(assert (= temp10661_208
   (ite (bvslt var3866802 temp10661_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10661_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10661_208)))
(assert (= var3879420 temp10661_209))
(assert (bvslt (ite (bvslt var3866802 temp10661_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10661_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10661_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10661_211 #x0000000000000000))
(assert (= var3879421 temp10661_211))
(assert (= temp10661_212 #x0000000000000001))
(assert (= var3867690 temp10661_212))
(assert (= temp10661_213 #x0000000000000000))
(assert (= temp10661_214
   (ite (bvslt var3867690 temp10661_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10661_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10661_214)))
(assert (= var3879423 temp10661_215))
(assert (bvslt (ite (bvslt var3867690 temp10661_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10661_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10661_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10661_217 #x0000000000000001))
(assert (= var3879424 temp10661_217))
(assert (= temp10661_218 #x0000000000000000))
(assert (= var4133117 temp10661_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10661_219 #x0000000000000002))
(assert (= var4339331 temp10661_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10661_220 #x0000000000000000))
(assert (= var4404892 temp10661_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp10661_222 #xffffffffffffffff))
(assert (= temp10661_221 temp10661_222))
(assert (= temp10661_223 #x0000000000000001))
(assert (= var197674 temp10661_223))
(assert (= temp10661_224 #x0000000000000000))
(assert (= temp10661_225
   (ite (bvslt var197674 temp10661_224)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp10661_226 (select ARGNAME_input_NAMEEND_DIMSIZE temp10661_225)))
(assert (= var211595 temp10661_226))
(assert (bvslt (ite (bvslt var197674 temp10661_224)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10661_227 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp10661_227) #x0000000000000001 #x0000000000000000)))
(assert (= temp10661_228 #x0000000000000001))
(assert (= var211596 temp10661_228))
(assert (= temp10661_230 #xffffffffffffffff))
(assert (= temp10661_229 temp10661_230))
(assert (= temp10661_231 #x0000000000000001))
(assert (= var211058 temp10661_231))
(model-add temp10661_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10661_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10661_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10661_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




