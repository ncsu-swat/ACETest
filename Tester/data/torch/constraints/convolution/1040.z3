(declare-fun temp10053_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10053_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10053_3 () (_ BitVec 64))
(declare-fun temp10053_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10053_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10053_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10053_7 () (_ BitVec 64))
(declare-fun temp10053_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10053_9 () (_ BitVec 64))
(declare-fun temp10053_10 () (_ BitVec 64))
(declare-fun temp10053_11 () (_ BitVec 64))
(declare-fun temp10053_12 () (_ BitVec 64))
(declare-fun temp10053_13 () (_ BitVec 64))
(declare-fun temp10053_14 () (_ BitVec 64))
(declare-fun temp10053_15 () (_ BitVec 64))
(declare-fun temp10053_16 () (_ BitVec 64))
(declare-fun temp10053_17 () (_ BitVec 64))
(declare-fun temp10053_18 () (_ BitVec 64))
(declare-fun temp10053_19 () (_ BitVec 64))
(declare-fun temp10053_20 () (_ BitVec 64))
(declare-fun temp10053_21 () (_ BitVec 64))
(declare-fun temp10053_22 () (_ BitVec 64))
(declare-fun temp10053_23 () (_ BitVec 64))
(declare-fun temp10053_24 () (_ BitVec 64))
(declare-fun temp10053_25 () (_ BitVec 64))
(declare-fun temp10053_26 () (_ BitVec 64))
(declare-fun temp10053_27 () (_ BitVec 64))
(declare-fun temp10053_28 () (_ BitVec 64))
(declare-fun temp10053_29 () (_ BitVec 64))
(declare-fun temp10053_30 () (_ BitVec 64))
(declare-fun temp10053_31 () (_ BitVec 64))
(declare-fun temp10053_32 () (_ BitVec 64))
(declare-fun temp10053_33 () (_ BitVec 64))
(declare-fun temp10053_34 () (_ BitVec 64))
(declare-fun temp10053_35 () (_ BitVec 64))
(declare-fun temp10053_36 () (_ BitVec 64))
(declare-fun temp10053_37 () (_ BitVec 64))
(declare-fun temp10053_38 () (_ BitVec 64))
(declare-fun temp10053_39 () (_ BitVec 64))
(declare-fun temp10053_40 () (_ BitVec 64))
(declare-fun temp10053_41 () (_ BitVec 64))
(declare-fun temp10053_42 () (_ BitVec 64))
(declare-fun temp10053_43 () (_ BitVec 64))
(declare-fun temp10053_44 () (_ BitVec 64))
(declare-fun temp10053_45 () (_ BitVec 64))
(declare-fun temp10053_46 () (_ BitVec 64))
(declare-fun temp10053_47 () (_ BitVec 64))
(declare-fun temp10053_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10053_49 () (_ BitVec 64))
(declare-fun temp10053_50 () (_ BitVec 64))
(declare-fun temp10053_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10053_52 () (_ BitVec 64))
(declare-fun temp10053_53 () (_ BitVec 64))
(declare-fun temp10053_54 () (_ BitVec 64))
(declare-fun temp10053_55 () (_ BitVec 64))
(declare-fun temp10053_56 () (_ BitVec 64))
(declare-fun temp10053_57 () (_ BitVec 64))
(declare-fun temp10053_58 () (_ BitVec 64))
(declare-fun temp10053_59 () (_ BitVec 64))
(declare-fun temp10053_60 () (_ BitVec 64))
(declare-fun temp10053_61 () (_ BitVec 64))
(declare-fun temp10053_62 () (_ BitVec 64))
(declare-fun temp10053_63 () (_ BitVec 64))
(declare-fun temp10053_64 () (_ BitVec 64))
(declare-fun temp10053_65 () (_ BitVec 64))
(declare-fun temp10053_66 () (_ BitVec 64))
(declare-fun temp10053_67 () (_ BitVec 64))
(declare-fun temp10053_68 () (_ BitVec 64))
(declare-fun temp10053_69 () (_ BitVec 64))
(declare-fun temp10053_70 () (_ BitVec 64))
(declare-fun temp10053_71 () (_ BitVec 64))
(declare-fun temp10053_72 () (_ BitVec 64))
(declare-fun temp10053_73 () (_ BitVec 64))
(declare-fun temp10053_74 () (_ BitVec 64))
(declare-fun temp10053_75 () (_ BitVec 64))
(declare-fun temp10053_76 () (_ BitVec 64))
(declare-fun temp10053_77 () (_ BitVec 64))
(declare-fun temp10053_78 () (_ BitVec 64))
(declare-fun temp10053_79 () (_ BitVec 64))
(declare-fun temp10053_80 () (_ BitVec 64))
(declare-fun temp10053_81 () (_ BitVec 64))
(declare-fun temp10053_82 () (_ BitVec 64))
(declare-fun temp10053_83 () (_ BitVec 64))
(declare-fun temp10053_84 () (_ BitVec 64))
(declare-fun temp10053_85 () (_ BitVec 64))
(declare-fun temp10053_86 () (_ BitVec 64))
(declare-fun temp10053_87 () (_ BitVec 64))
(declare-fun temp10053_88 () (_ BitVec 64))
(declare-fun temp10053_89 () (_ BitVec 64))
(declare-fun temp10053_90 () (_ BitVec 64))
(declare-fun temp10053_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10053_92 () (_ BitVec 64))
(declare-fun temp10053_93 () (_ BitVec 64))
(declare-fun temp10053_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10053_95 () (_ BitVec 64))
(declare-fun temp10053_96 () (_ BitVec 64))
(declare-fun temp10053_97 () (_ BitVec 64))
(declare-fun temp10053_98 () (_ BitVec 64))
(declare-fun temp10053_99 () (_ BitVec 64))
(declare-fun temp10053_100 () (_ BitVec 64))
(declare-fun temp10053_101 () (_ BitVec 64))
(declare-fun temp10053_102 () (_ BitVec 64))
(declare-fun temp10053_103 () (_ BitVec 64))
(declare-fun temp10053_104 () (_ BitVec 64))
(declare-fun temp10053_105 () (_ BitVec 64))
(declare-fun temp10053_106 () (_ BitVec 64))
(declare-fun temp10053_107 () (_ BitVec 64))
(declare-fun temp10053_108 () (_ BitVec 64))
(declare-fun temp10053_109 () (_ BitVec 64))
(declare-fun temp10053_110 () (_ BitVec 64))
(declare-fun temp10053_111 () (_ BitVec 64))
(declare-fun temp10053_112 () (_ BitVec 64))
(declare-fun temp10053_113 () (_ BitVec 64))
(declare-fun temp10053_114 () (_ BitVec 64))
(declare-fun temp10053_115 () (_ BitVec 64))
(declare-fun temp10053_116 () (_ BitVec 64))
(declare-fun temp10053_117 () (_ BitVec 64))
(declare-fun temp10053_118 () (_ BitVec 64))
(declare-fun temp10053_119 () (_ BitVec 64))
(declare-fun temp10053_120 () (_ BitVec 64))
(declare-fun temp10053_121 () (_ BitVec 64))
(declare-fun temp10053_122 () (_ BitVec 64))
(declare-fun temp10053_123 () (_ BitVec 64))
(declare-fun temp10053_124 () (_ BitVec 64))
(declare-fun temp10053_125 () (_ BitVec 64))
(declare-fun temp10053_126 () (_ BitVec 64))
(declare-fun temp10053_127 () (_ BitVec 64))
(declare-fun temp10053_128 () (_ BitVec 64))
(declare-fun temp10053_129 () (_ BitVec 64))
(declare-fun temp10053_130 () (_ BitVec 64))
(declare-fun temp10053_131 () (_ BitVec 64))
(declare-fun temp10053_132 () (_ BitVec 64))
(declare-fun temp10053_133 () (_ BitVec 64))
(declare-fun temp10053_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10053_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10053_136 () (_ BitVec 64))
(declare-fun temp10053_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10053_138 () (_ BitVec 64))
(declare-fun temp10053_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10053_140 () (_ BitVec 64))
(declare-fun temp10053_141 () (_ BitVec 64))
(declare-fun temp10053_142 () (_ BitVec 64))
(declare-fun temp10053_143 () (_ BitVec 64))
(declare-fun temp10053_144 () (_ BitVec 64))
(declare-fun temp10053_145 () (_ BitVec 64))
(declare-fun temp10053_146 () (_ BitVec 64))
(declare-fun temp10053_147 () (_ BitVec 64))
(declare-fun temp10053_148 () (_ BitVec 64))
(declare-fun temp10053_149 () (_ BitVec 64))
(declare-fun temp10053_150 () (_ BitVec 64))
(declare-fun temp10053_151 () (_ BitVec 64))
(declare-fun temp10053_152 () (_ BitVec 64))
(declare-fun temp10053_153 () (_ BitVec 64))
(declare-fun temp10053_154 () (_ BitVec 64))
(declare-fun temp10053_155 () (_ BitVec 64))
(declare-fun temp10053_157 () (_ BitVec 64))
(declare-fun temp10053_158 () (_ BitVec 64))
(declare-fun temp10053_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10053_159 () (_ BitVec 64))
(declare-fun temp10053_160 () (_ BitVec 64))
(declare-fun temp10053_162 () (_ BitVec 64))
(declare-fun temp10053_163 () (_ BitVec 64))
(declare-fun temp10053_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10053_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10053_165 () (_ BitVec 64))
(declare-fun temp10053_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10053_167 () (_ BitVec 64))
(declare-fun temp10053_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10053_169 () (_ BitVec 64))
(declare-fun temp10053_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10053_171 () (_ BitVec 64))
(declare-fun temp10053_172 () (_ BitVec 64))
(declare-fun temp10053_173 () (_ BitVec 64))
(declare-fun temp10053_174 () (_ BitVec 64))
(declare-fun temp10053_175 () (_ BitVec 64))
(declare-fun temp10053_176 () (_ BitVec 64))
(declare-fun temp10053_177 () (_ BitVec 64))
(declare-fun temp10053_178 () (_ BitVec 64))
(declare-fun temp10053_179 () (_ BitVec 64))
(declare-fun temp10053_180 () (_ BitVec 64))
(declare-fun temp10053_181 () (_ BitVec 64))
(declare-fun temp10053_182 () (_ BitVec 64))
(declare-fun temp10053_183 () (_ BitVec 64))
(declare-fun temp10053_184 () (_ BitVec 64))
(declare-fun temp10053_185 () (_ BitVec 64))
(declare-fun temp10053_186 () (_ BitVec 64))
(declare-fun temp10053_187 () (_ BitVec 64))
(declare-fun temp10053_188 () (_ BitVec 64))
(declare-fun temp10053_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10053_190 () (_ BitVec 64))
(declare-fun temp10053_192 () (_ BitVec 64))
(declare-fun temp10053_193 () (_ BitVec 64))
(declare-fun temp10053_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10053_194 () (_ BitVec 64))
(declare-fun temp10053_195 () (_ BitVec 64))
(declare-fun temp10053_197 () (_ BitVec 64))
(declare-fun temp10053_198 () (_ BitVec 64))
(declare-fun temp10053_196 () (_ BitVec 64))
(declare-fun temp10053_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10053_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10053_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10053_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10053_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10053_204 () (_ BitVec 64))
(declare-fun temp10053_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10053_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10053_207 () (_ BitVec 64))
(declare-fun temp10053_208 () (_ BitVec 64))
(declare-fun temp10053_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10053_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10053_211 () (_ BitVec 64))
(declare-fun temp10053_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10053_213 () (_ BitVec 64))
(declare-fun temp10053_214 () (_ BitVec 64))
(declare-fun temp10053_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10053_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10053_217 () (_ BitVec 64))
(declare-fun temp10053_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10053_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10053_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp10053_222 () (_ BitVec 64))
(declare-fun temp10053_221 () (_ BitVec 64))
(declare-fun temp10053_223 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp10053_224 () (_ BitVec 64))
(declare-fun temp10053_225 () (_ BitVec 64))
(declare-fun temp10053_226 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp10053_227 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp10053_228 () (_ BitVec 64))
(declare-fun temp10053_230 () (_ BitVec 64))
(declare-fun temp10053_229 () (_ BitVec 64))
(declare-fun temp10053_231 () (_ BitVec 64))
(assert (= temp10053_1 #x0000000000000001))
(assert (= var77203 temp10053_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10053_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10053_2)))
(assert (= temp10053_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10053_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10053_4 #x0000000000000000))
(assert (= var210941 temp10053_4))
(assert (= temp10053_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10053_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10053_6 #x0000000000000000))
(assert (= var210986 temp10053_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10053_7 #x0000000000000000))
(assert (= temp10053_8 temp10053_7))
(assert (= temp10053_9 (select ARGNAME_padding_NAMEEND_VAL temp10053_8)))
(assert (= temp10053_10 #x0000000000000001))
(assert (= temp10053_11 temp10053_10))
(assert (= temp10053_12 (select ARGNAME_padding_NAMEEND_VAL temp10053_11)))
(assert (= temp10053_13 #x0000000000000002))
(assert (= temp10053_14 temp10053_13))
(assert (= temp10053_15 (select ARGNAME_padding_NAMEEND_VAL temp10053_14)))
(assert (= temp10053_16 #x0000000000000003))
(assert (= temp10053_17 temp10053_16))
(assert (= temp10053_18 (select ARGNAME_padding_NAMEEND_VAL temp10053_17)))
(assert (= temp10053_19 #x0000000000000004))
(assert (= temp10053_20 temp10053_19))
(assert (= temp10053_21 (select ARGNAME_padding_NAMEEND_VAL temp10053_20)))
(assert (= temp10053_22 #x0000000000000005))
(assert (= temp10053_23 temp10053_22))
(assert (= temp10053_24 (select ARGNAME_padding_NAMEEND_VAL temp10053_23)))
(assert (= temp10053_25 #x0000000000000000))
(assert (= temp10053_26 #x0000000000000000))
(assert (= temp10053_27 temp10053_26))
(assert (= temp10053_28 (select ARGNAME_padding_NAMEEND_VAL temp10053_27)))
(assert (= temp10053_29 #x0000000000000000))
(assert (= temp10053_30 #x0000000000000001))
(assert (= temp10053_31 temp10053_30))
(assert (= temp10053_32 (select ARGNAME_padding_NAMEEND_VAL temp10053_31)))
(assert (= temp10053_33 #x0000000000000000))
(assert (= temp10053_34 #x0000000000000002))
(assert (= temp10053_35 temp10053_34))
(assert (= temp10053_36 (select ARGNAME_padding_NAMEEND_VAL temp10053_35)))
(assert (= temp10053_37 #x0000000000000000))
(assert (= temp10053_38 #x0000000000000003))
(assert (= temp10053_39 temp10053_38))
(assert (= temp10053_40 (select ARGNAME_padding_NAMEEND_VAL temp10053_39)))
(assert (= temp10053_41 #x0000000000000000))
(assert (= temp10053_42 #x0000000000000004))
(assert (= temp10053_43 temp10053_42))
(assert (= temp10053_44 (select ARGNAME_padding_NAMEEND_VAL temp10053_43)))
(assert (= temp10053_45 #x0000000000000000))
(assert (= temp10053_46 #x0000000000000005))
(assert (= temp10053_47 temp10053_46))
(assert (= temp10053_48 (select ARGNAME_padding_NAMEEND_VAL temp10053_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10053_28 temp10053_25)
             (bvslt temp10053_32 temp10053_29)
             (bvslt temp10053_36 temp10053_33)
             (bvslt temp10053_40 temp10053_37)
             (bvslt temp10053_44 temp10053_41)
             (bvslt temp10053_48 temp10053_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10053_49 #x0000000000000000))
(assert (= var1191714 temp10053_49))
(assert (= temp10053_50 #x0000000000000000))
(assert (= temp10053_51 temp10053_50))
(assert (= temp10053_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10053_51)))
(assert (= temp10053_53 #x0000000000000001))
(assert (= temp10053_54 temp10053_53))
(assert (= temp10053_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10053_54)))
(assert (= temp10053_56 #x0000000000000002))
(assert (= temp10053_57 temp10053_56))
(assert (= temp10053_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10053_57)))
(assert (= temp10053_59 #x0000000000000003))
(assert (= temp10053_60 temp10053_59))
(assert (= temp10053_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10053_60)))
(assert (= temp10053_62 #x0000000000000004))
(assert (= temp10053_63 temp10053_62))
(assert (= temp10053_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10053_63)))
(assert (= temp10053_65 #x0000000000000005))
(assert (= temp10053_66 temp10053_65))
(assert (= temp10053_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10053_66)))
(assert (= temp10053_68 #x0000000000000000))
(assert (= temp10053_69 #x0000000000000000))
(assert (= temp10053_70 temp10053_69))
(assert (= temp10053_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10053_70)))
(assert (= temp10053_72 #x0000000000000000))
(assert (= temp10053_73 #x0000000000000001))
(assert (= temp10053_74 temp10053_73))
(assert (= temp10053_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10053_74)))
(assert (= temp10053_76 #x0000000000000000))
(assert (= temp10053_77 #x0000000000000002))
(assert (= temp10053_78 temp10053_77))
(assert (= temp10053_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10053_78)))
(assert (= temp10053_80 #x0000000000000000))
(assert (= temp10053_81 #x0000000000000003))
(assert (= temp10053_82 temp10053_81))
(assert (= temp10053_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10053_82)))
(assert (= temp10053_84 #x0000000000000000))
(assert (= temp10053_85 #x0000000000000004))
(assert (= temp10053_86 temp10053_85))
(assert (= temp10053_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10053_86)))
(assert (= temp10053_88 #x0000000000000000))
(assert (= temp10053_89 #x0000000000000005))
(assert (= temp10053_90 temp10053_89))
(assert (= temp10053_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10053_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10053_71 temp10053_68)
             (bvslt temp10053_75 temp10053_72)
             (bvslt temp10053_79 temp10053_76)
             (bvslt temp10053_83 temp10053_80)
             (bvslt temp10053_87 temp10053_84)
             (bvslt temp10053_91 temp10053_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10053_92 #x0000000000000000))
(assert (= var1191725 temp10053_92))
(assert (= temp10053_93 #x0000000000000000))
(assert (= temp10053_94 temp10053_93))
(assert (= temp10053_95 (select ARGNAME_stride_NAMEEND_VAL temp10053_94)))
(assert (= temp10053_96 #x0000000000000001))
(assert (= temp10053_97 temp10053_96))
(assert (= temp10053_98 (select ARGNAME_stride_NAMEEND_VAL temp10053_97)))
(assert (= temp10053_99 #x0000000000000002))
(assert (= temp10053_100 temp10053_99))
(assert (= temp10053_101 (select ARGNAME_stride_NAMEEND_VAL temp10053_100)))
(assert (= temp10053_102 #x0000000000000003))
(assert (= temp10053_103 temp10053_102))
(assert (= temp10053_104 (select ARGNAME_stride_NAMEEND_VAL temp10053_103)))
(assert (= temp10053_105 #x0000000000000004))
(assert (= temp10053_106 temp10053_105))
(assert (= temp10053_107 (select ARGNAME_stride_NAMEEND_VAL temp10053_106)))
(assert (= temp10053_108 #x0000000000000005))
(assert (= temp10053_109 temp10053_108))
(assert (= temp10053_110 (select ARGNAME_stride_NAMEEND_VAL temp10053_109)))
(assert (= temp10053_111 #x0000000000000000))
(assert (= temp10053_112 #x0000000000000000))
(assert (= temp10053_113 temp10053_112))
(assert (= temp10053_114 (select ARGNAME_stride_NAMEEND_VAL temp10053_113)))
(assert (= temp10053_115 #x0000000000000000))
(assert (= temp10053_116 #x0000000000000001))
(assert (= temp10053_117 temp10053_116))
(assert (= temp10053_118 (select ARGNAME_stride_NAMEEND_VAL temp10053_117)))
(assert (= temp10053_119 #x0000000000000000))
(assert (= temp10053_120 #x0000000000000002))
(assert (= temp10053_121 temp10053_120))
(assert (= temp10053_122 (select ARGNAME_stride_NAMEEND_VAL temp10053_121)))
(assert (= temp10053_123 #x0000000000000000))
(assert (= temp10053_124 #x0000000000000003))
(assert (= temp10053_125 temp10053_124))
(assert (= temp10053_126 (select ARGNAME_stride_NAMEEND_VAL temp10053_125)))
(assert (= temp10053_127 #x0000000000000000))
(assert (= temp10053_128 #x0000000000000004))
(assert (= temp10053_129 temp10053_128))
(assert (= temp10053_130 (select ARGNAME_stride_NAMEEND_VAL temp10053_129)))
(assert (= temp10053_131 #x0000000000000000))
(assert (= temp10053_132 #x0000000000000005))
(assert (= temp10053_133 temp10053_132))
(assert (= temp10053_134 (select ARGNAME_stride_NAMEEND_VAL temp10053_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10053_114 temp10053_111)
             (bvsle temp10053_118 temp10053_115)
             (bvsle temp10053_122 temp10053_119)
             (bvsle temp10053_126 temp10053_123)
             (bvsle temp10053_130 temp10053_127)
             (bvsle temp10053_134 temp10053_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10053_135 #x0000000000000000))
(assert (= var1191735 temp10053_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10053_136 #x0000000000000001))
(assert (= var1191747 temp10053_136))
(assert (= temp10053_137 #x0000000000000000))
(assert (= var1179826 temp10053_137))
(assert (= temp10053_138 #x0000000000000000))
(assert (= temp10053_139 temp10053_138))
(assert (= temp10053_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10053_139)))
(assert (= temp10053_141 #x0000000000000001))
(assert (= temp10053_142 temp10053_141))
(assert (= temp10053_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10053_142)))
(assert (= temp10053_144 #x0000000000000002))
(assert (= temp10053_145 temp10053_144))
(assert (= temp10053_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10053_145)))
(assert (= temp10053_147 #x0000000000000003))
(assert (= temp10053_148 temp10053_147))
(assert (= temp10053_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10053_148)))
(assert (= temp10053_150 #x0000000000000004))
(assert (= temp10053_151 temp10053_150))
(assert (= temp10053_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10053_151)))
(assert (= temp10053_153 #x0000000000000005))
(assert (= temp10053_154 temp10053_153))
(assert (= temp10053_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10053_154)))
(assert (= temp10053_157 var1179826))
(assert (= temp10053_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10053_157)))
(assert (= temp10053_156 temp10053_158))
(assert (= var1191780
   (ite (bvslt temp10053_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10053_159 #x0000000000000000))
(assert (= var1191780 temp10053_159))
(assert (= temp10053_160 #x0000000000000000))
(assert (= var1179826 temp10053_160))
(assert (= temp10053_162 var1179826))
(assert (= temp10053_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10053_162)))
(assert (= temp10053_161 temp10053_163))
(assert (= var1191802 (bvsmod temp10053_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10053_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10053_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10053_165 #x0000000000000001))
(assert (= var1191803 temp10053_165))
(assert (= temp10053_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10053_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10053_167 #x0000000000000001))
(assert (= var1191823 temp10053_167))
(assert (= temp10053_168 #x0000000000000001))
(assert (= var1180714 temp10053_168))
(assert (= temp10053_169 #x0000000000000000))
(assert (= temp10053_170 temp10053_169))
(assert (= temp10053_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10053_170)))
(assert (= temp10053_172 #x0000000000000001))
(assert (= temp10053_173 temp10053_172))
(assert (= temp10053_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10053_173)))
(assert (= temp10053_175 #x0000000000000002))
(assert (= temp10053_176 temp10053_175))
(assert (= temp10053_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10053_176)))
(assert (= temp10053_178 #x0000000000000003))
(assert (= temp10053_179 temp10053_178))
(assert (= temp10053_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10053_179)))
(assert (= temp10053_181 #x0000000000000004))
(assert (= temp10053_182 temp10053_181))
(assert (= temp10053_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10053_182)))
(assert (= temp10053_184 #x0000000000000005))
(assert (= temp10053_185 temp10053_184))
(assert (= temp10053_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10053_185)))
(assert (= temp10053_187 #x0000000000000000))
(assert (= temp10053_188
   (ite (bvslt var1180714 temp10053_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10053_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10053_188)))
(assert (= var1191831 temp10053_189))
(assert (bvslt (ite (bvslt var1180714 temp10053_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10053_190 #x0000000000000001))
(assert (= var1180714 temp10053_190))
(assert (= temp10053_192 var1180714))
(assert (= temp10053_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10053_192)))
(assert (= temp10053_191 temp10053_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10053_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10053_194 #x0000000000000001))
(assert (= var1191836 temp10053_194))
(assert (= temp10053_195 #x0000000000000000))
(assert (= var1179826 temp10053_195))
(assert (= temp10053_197 var1179826))
(assert (= temp10053_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10053_197)))
(assert (= temp10053_196 temp10053_198))
(assert (= temp10053_199 #x0000000000000002))
(assert (= var1586025 temp10053_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10053_200 #x0000000000000001))
(assert (= var1191993 temp10053_200))
(assert (= temp10053_201 #x0000000000000001))
(assert (= var2700303 temp10053_201))
(assert (= temp10053_202 #x0000000000000001))
(assert (= var2962447 temp10053_202))
(assert (= temp10053_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10053_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10053_204 #x0000000000000001))
(assert (= var211058 temp10053_204))
(assert (= temp10053_205 #x0000000000000001))
(assert (= var211188 temp10053_205))
(assert (= var3879401 var211188))
(assert (= temp10053_206 #x0000000000000000))
(assert (= var3866802 temp10053_206))
(assert (= temp10053_207 #x0000000000000000))
(assert (= temp10053_208
   (ite (bvslt var3866802 temp10053_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10053_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10053_208)))
(assert (= var3879420 temp10053_209))
(assert (bvslt (ite (bvslt var3866802 temp10053_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10053_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10053_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10053_211 #x0000000000000000))
(assert (= var3879421 temp10053_211))
(assert (= temp10053_212 #x0000000000000001))
(assert (= var3867690 temp10053_212))
(assert (= temp10053_213 #x0000000000000000))
(assert (= temp10053_214
   (ite (bvslt var3867690 temp10053_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10053_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10053_214)))
(assert (= var3879423 temp10053_215))
(assert (bvslt (ite (bvslt var3867690 temp10053_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10053_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10053_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10053_217 #x0000000000000001))
(assert (= var3879424 temp10053_217))
(assert (= temp10053_218 #x0000000000000000))
(assert (= var4079423 temp10053_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10053_219 #x0000000000000002))
(assert (= var4208259 temp10053_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10053_220 #x0000000000000000))
(assert (= var4273820 temp10053_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp10053_222 #xffffffffffffffff))
(assert (= temp10053_221 temp10053_222))
(assert (= temp10053_223 #x0000000000000001))
(assert (= var197674 temp10053_223))
(assert (= temp10053_224 #x0000000000000000))
(assert (= temp10053_225
   (ite (bvslt var197674 temp10053_224)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp10053_226 (select ARGNAME_input_NAMEEND_DIMSIZE temp10053_225)))
(assert (= var211595 temp10053_226))
(assert (bvslt (ite (bvslt var197674 temp10053_224)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10053_227 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp10053_227) #x0000000000000001 #x0000000000000000)))
(assert (= temp10053_228 #x0000000000000001))
(assert (= var211596 temp10053_228))
(assert (= temp10053_230 #xffffffffffffffff))
(assert (= temp10053_229 temp10053_230))
(assert (= temp10053_231 #x0000000000000001))
(assert (= var211058 temp10053_231))
(model-add temp10053_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10053_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10053_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10053_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





