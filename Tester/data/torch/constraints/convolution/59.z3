(declare-fun temp78_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp78_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp78_3 () (_ BitVec 64))
(declare-fun temp78_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp78_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp78_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp78_7 () (_ BitVec 64))
(declare-fun temp78_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp78_9 () (_ BitVec 64))
(declare-fun temp78_10 () (_ BitVec 64))
(declare-fun temp78_11 () (_ BitVec 64))
(declare-fun temp78_12 () (_ BitVec 64))
(declare-fun temp78_13 () (_ BitVec 64))
(declare-fun temp78_14 () (_ BitVec 64))
(declare-fun temp78_15 () (_ BitVec 64))
(declare-fun temp78_16 () (_ BitVec 64))
(declare-fun temp78_17 () (_ BitVec 64))
(declare-fun temp78_18 () (_ BitVec 64))
(declare-fun temp78_19 () (_ BitVec 64))
(declare-fun temp78_20 () (_ BitVec 64))
(declare-fun temp78_21 () (_ BitVec 64))
(declare-fun temp78_22 () (_ BitVec 64))
(declare-fun temp78_23 () (_ BitVec 64))
(declare-fun temp78_24 () (_ BitVec 64))
(declare-fun temp78_25 () (_ BitVec 64))
(declare-fun temp78_26 () (_ BitVec 64))
(declare-fun temp78_27 () (_ BitVec 64))
(declare-fun temp78_28 () (_ BitVec 64))
(declare-fun temp78_29 () (_ BitVec 64))
(declare-fun temp78_30 () (_ BitVec 64))
(declare-fun temp78_31 () (_ BitVec 64))
(declare-fun temp78_32 () (_ BitVec 64))
(declare-fun temp78_33 () (_ BitVec 64))
(declare-fun temp78_34 () (_ BitVec 64))
(declare-fun temp78_35 () (_ BitVec 64))
(declare-fun temp78_36 () (_ BitVec 64))
(declare-fun temp78_37 () (_ BitVec 64))
(declare-fun temp78_38 () (_ BitVec 64))
(declare-fun temp78_39 () (_ BitVec 64))
(declare-fun temp78_40 () (_ BitVec 64))
(declare-fun temp78_41 () (_ BitVec 64))
(declare-fun temp78_42 () (_ BitVec 64))
(declare-fun temp78_43 () (_ BitVec 64))
(declare-fun temp78_44 () (_ BitVec 64))
(declare-fun temp78_45 () (_ BitVec 64))
(declare-fun temp78_46 () (_ BitVec 64))
(declare-fun temp78_47 () (_ BitVec 64))
(declare-fun temp78_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp78_49 () (_ BitVec 64))
(declare-fun temp78_50 () (_ BitVec 64))
(declare-fun temp78_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp78_52 () (_ BitVec 64))
(declare-fun temp78_53 () (_ BitVec 64))
(declare-fun temp78_54 () (_ BitVec 64))
(declare-fun temp78_55 () (_ BitVec 64))
(declare-fun temp78_56 () (_ BitVec 64))
(declare-fun temp78_57 () (_ BitVec 64))
(declare-fun temp78_58 () (_ BitVec 64))
(declare-fun temp78_59 () (_ BitVec 64))
(declare-fun temp78_60 () (_ BitVec 64))
(declare-fun temp78_61 () (_ BitVec 64))
(declare-fun temp78_62 () (_ BitVec 64))
(declare-fun temp78_63 () (_ BitVec 64))
(declare-fun temp78_64 () (_ BitVec 64))
(declare-fun temp78_65 () (_ BitVec 64))
(declare-fun temp78_66 () (_ BitVec 64))
(declare-fun temp78_67 () (_ BitVec 64))
(declare-fun temp78_68 () (_ BitVec 64))
(declare-fun temp78_69 () (_ BitVec 64))
(declare-fun temp78_70 () (_ BitVec 64))
(declare-fun temp78_71 () (_ BitVec 64))
(declare-fun temp78_72 () (_ BitVec 64))
(declare-fun temp78_73 () (_ BitVec 64))
(declare-fun temp78_74 () (_ BitVec 64))
(declare-fun temp78_75 () (_ BitVec 64))
(declare-fun temp78_76 () (_ BitVec 64))
(declare-fun temp78_77 () (_ BitVec 64))
(declare-fun temp78_78 () (_ BitVec 64))
(declare-fun temp78_79 () (_ BitVec 64))
(declare-fun temp78_80 () (_ BitVec 64))
(declare-fun temp78_81 () (_ BitVec 64))
(declare-fun temp78_82 () (_ BitVec 64))
(declare-fun temp78_83 () (_ BitVec 64))
(declare-fun temp78_84 () (_ BitVec 64))
(declare-fun temp78_85 () (_ BitVec 64))
(declare-fun temp78_86 () (_ BitVec 64))
(declare-fun temp78_87 () (_ BitVec 64))
(declare-fun temp78_88 () (_ BitVec 64))
(declare-fun temp78_89 () (_ BitVec 64))
(declare-fun temp78_90 () (_ BitVec 64))
(declare-fun temp78_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp78_92 () (_ BitVec 64))
(declare-fun temp78_93 () (_ BitVec 64))
(declare-fun temp78_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp78_95 () (_ BitVec 64))
(declare-fun temp78_96 () (_ BitVec 64))
(declare-fun temp78_97 () (_ BitVec 64))
(declare-fun temp78_98 () (_ BitVec 64))
(declare-fun temp78_99 () (_ BitVec 64))
(declare-fun temp78_100 () (_ BitVec 64))
(declare-fun temp78_101 () (_ BitVec 64))
(declare-fun temp78_102 () (_ BitVec 64))
(declare-fun temp78_103 () (_ BitVec 64))
(declare-fun temp78_104 () (_ BitVec 64))
(declare-fun temp78_105 () (_ BitVec 64))
(declare-fun temp78_106 () (_ BitVec 64))
(declare-fun temp78_107 () (_ BitVec 64))
(declare-fun temp78_108 () (_ BitVec 64))
(declare-fun temp78_109 () (_ BitVec 64))
(declare-fun temp78_110 () (_ BitVec 64))
(declare-fun temp78_111 () (_ BitVec 64))
(declare-fun temp78_112 () (_ BitVec 64))
(declare-fun temp78_113 () (_ BitVec 64))
(declare-fun temp78_114 () (_ BitVec 64))
(declare-fun temp78_115 () (_ BitVec 64))
(declare-fun temp78_116 () (_ BitVec 64))
(declare-fun temp78_117 () (_ BitVec 64))
(declare-fun temp78_118 () (_ BitVec 64))
(declare-fun temp78_119 () (_ BitVec 64))
(declare-fun temp78_120 () (_ BitVec 64))
(declare-fun temp78_121 () (_ BitVec 64))
(declare-fun temp78_122 () (_ BitVec 64))
(declare-fun temp78_123 () (_ BitVec 64))
(declare-fun temp78_124 () (_ BitVec 64))
(declare-fun temp78_125 () (_ BitVec 64))
(declare-fun temp78_126 () (_ BitVec 64))
(declare-fun temp78_127 () (_ BitVec 64))
(declare-fun temp78_128 () (_ BitVec 64))
(declare-fun temp78_129 () (_ BitVec 64))
(declare-fun temp78_130 () (_ BitVec 64))
(declare-fun temp78_131 () (_ BitVec 64))
(declare-fun temp78_132 () (_ BitVec 64))
(declare-fun temp78_133 () (_ BitVec 64))
(declare-fun temp78_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp78_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp78_136 () (_ BitVec 64))
(declare-fun temp78_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp78_138 () (_ BitVec 64))
(declare-fun temp78_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp78_140 () (_ BitVec 64))
(declare-fun temp78_141 () (_ BitVec 64))
(declare-fun temp78_142 () (_ BitVec 64))
(declare-fun temp78_143 () (_ BitVec 64))
(declare-fun temp78_144 () (_ BitVec 64))
(declare-fun temp78_145 () (_ BitVec 64))
(declare-fun temp78_146 () (_ BitVec 64))
(declare-fun temp78_147 () (_ BitVec 64))
(declare-fun temp78_148 () (_ BitVec 64))
(declare-fun temp78_149 () (_ BitVec 64))
(declare-fun temp78_150 () (_ BitVec 64))
(declare-fun temp78_151 () (_ BitVec 64))
(declare-fun temp78_152 () (_ BitVec 64))
(declare-fun temp78_153 () (_ BitVec 64))
(declare-fun temp78_154 () (_ BitVec 64))
(declare-fun temp78_155 () (_ BitVec 64))
(declare-fun temp78_157 () (_ BitVec 64))
(declare-fun temp78_158 () (_ BitVec 64))
(declare-fun temp78_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp78_159 () (_ BitVec 64))
(declare-fun temp78_160 () (_ BitVec 64))
(declare-fun temp78_162 () (_ BitVec 64))
(declare-fun temp78_163 () (_ BitVec 64))
(declare-fun temp78_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp78_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp78_165 () (_ BitVec 64))
(declare-fun temp78_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp78_167 () (_ BitVec 64))
(declare-fun temp78_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp78_169 () (_ BitVec 64))
(declare-fun temp78_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp78_171 () (_ BitVec 64))
(declare-fun temp78_172 () (_ BitVec 64))
(declare-fun temp78_173 () (_ BitVec 64))
(declare-fun temp78_174 () (_ BitVec 64))
(declare-fun temp78_175 () (_ BitVec 64))
(declare-fun temp78_176 () (_ BitVec 64))
(declare-fun temp78_177 () (_ BitVec 64))
(declare-fun temp78_178 () (_ BitVec 64))
(declare-fun temp78_179 () (_ BitVec 64))
(declare-fun temp78_180 () (_ BitVec 64))
(declare-fun temp78_181 () (_ BitVec 64))
(declare-fun temp78_182 () (_ BitVec 64))
(declare-fun temp78_183 () (_ BitVec 64))
(declare-fun temp78_184 () (_ BitVec 64))
(declare-fun temp78_185 () (_ BitVec 64))
(declare-fun temp78_186 () (_ BitVec 64))
(declare-fun temp78_187 () (_ BitVec 64))
(declare-fun temp78_188 () (_ BitVec 64))
(declare-fun temp78_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp78_190 () (_ BitVec 64))
(declare-fun temp78_192 () (_ BitVec 64))
(declare-fun temp78_193 () (_ BitVec 64))
(declare-fun temp78_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp78_194 () (_ BitVec 64))
(declare-fun temp78_195 () (_ BitVec 64))
(declare-fun temp78_197 () (_ BitVec 64))
(declare-fun temp78_198 () (_ BitVec 64))
(declare-fun temp78_196 () (_ BitVec 64))
(declare-fun temp78_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp78_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp78_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp78_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp78_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp78_204 () (_ BitVec 64))
(declare-fun temp78_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp78_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp78_207 () (_ BitVec 64))
(declare-fun temp78_208 () (_ BitVec 64))
(declare-fun temp78_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp78_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp78_211 () (_ BitVec 64))
(declare-fun temp78_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp78_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp78_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4796816 () (_ BitVec 64))
(declare-fun var211494 () (_ BitVec 64))
(declare-fun temp78_215 () (_ BitVec 64))
(declare-fun var211495 () (_ BitVec 64))
(declare-fun temp78_216 () (_ BitVec 64))
(assert (= temp78_1 #x0000000000000001))
(assert (= var77203 temp78_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp78_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp78_2)))
(assert (= temp78_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp78_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp78_4 #x0000000000000000))
(assert (= var210941 temp78_4))
(assert (= temp78_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp78_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp78_6 #x0000000000000000))
(assert (= var210986 temp78_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp78_7 #x0000000000000000))
(assert (= temp78_8 temp78_7))
(assert (= temp78_9 (select ARGNAME_padding_NAMEEND_VAL temp78_8)))
(assert (= temp78_10 #x0000000000000001))
(assert (= temp78_11 temp78_10))
(assert (= temp78_12 (select ARGNAME_padding_NAMEEND_VAL temp78_11)))
(assert (= temp78_13 #x0000000000000002))
(assert (= temp78_14 temp78_13))
(assert (= temp78_15 (select ARGNAME_padding_NAMEEND_VAL temp78_14)))
(assert (= temp78_16 #x0000000000000003))
(assert (= temp78_17 temp78_16))
(assert (= temp78_18 (select ARGNAME_padding_NAMEEND_VAL temp78_17)))
(assert (= temp78_19 #x0000000000000004))
(assert (= temp78_20 temp78_19))
(assert (= temp78_21 (select ARGNAME_padding_NAMEEND_VAL temp78_20)))
(assert (= temp78_22 #x0000000000000005))
(assert (= temp78_23 temp78_22))
(assert (= temp78_24 (select ARGNAME_padding_NAMEEND_VAL temp78_23)))
(assert (= temp78_25 #x0000000000000000))
(assert (= temp78_26 #x0000000000000000))
(assert (= temp78_27 temp78_26))
(assert (= temp78_28 (select ARGNAME_padding_NAMEEND_VAL temp78_27)))
(assert (= temp78_29 #x0000000000000000))
(assert (= temp78_30 #x0000000000000001))
(assert (= temp78_31 temp78_30))
(assert (= temp78_32 (select ARGNAME_padding_NAMEEND_VAL temp78_31)))
(assert (= temp78_33 #x0000000000000000))
(assert (= temp78_34 #x0000000000000002))
(assert (= temp78_35 temp78_34))
(assert (= temp78_36 (select ARGNAME_padding_NAMEEND_VAL temp78_35)))
(assert (= temp78_37 #x0000000000000000))
(assert (= temp78_38 #x0000000000000003))
(assert (= temp78_39 temp78_38))
(assert (= temp78_40 (select ARGNAME_padding_NAMEEND_VAL temp78_39)))
(assert (= temp78_41 #x0000000000000000))
(assert (= temp78_42 #x0000000000000004))
(assert (= temp78_43 temp78_42))
(assert (= temp78_44 (select ARGNAME_padding_NAMEEND_VAL temp78_43)))
(assert (= temp78_45 #x0000000000000000))
(assert (= temp78_46 #x0000000000000005))
(assert (= temp78_47 temp78_46))
(assert (= temp78_48 (select ARGNAME_padding_NAMEEND_VAL temp78_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp78_28 temp78_25)
             (bvslt temp78_32 temp78_29)
             (bvslt temp78_36 temp78_33)
             (bvslt temp78_40 temp78_37)
             (bvslt temp78_44 temp78_41)
             (bvslt temp78_48 temp78_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp78_49 #x0000000000000000))
(assert (= var1191714 temp78_49))
(assert (= temp78_50 #x0000000000000000))
(assert (= temp78_51 temp78_50))
(assert (= temp78_52 (select ARGNAME_output_padding_NAMEEND_VAL temp78_51)))
(assert (= temp78_53 #x0000000000000001))
(assert (= temp78_54 temp78_53))
(assert (= temp78_55 (select ARGNAME_output_padding_NAMEEND_VAL temp78_54)))
(assert (= temp78_56 #x0000000000000002))
(assert (= temp78_57 temp78_56))
(assert (= temp78_58 (select ARGNAME_output_padding_NAMEEND_VAL temp78_57)))
(assert (= temp78_59 #x0000000000000003))
(assert (= temp78_60 temp78_59))
(assert (= temp78_61 (select ARGNAME_output_padding_NAMEEND_VAL temp78_60)))
(assert (= temp78_62 #x0000000000000004))
(assert (= temp78_63 temp78_62))
(assert (= temp78_64 (select ARGNAME_output_padding_NAMEEND_VAL temp78_63)))
(assert (= temp78_65 #x0000000000000005))
(assert (= temp78_66 temp78_65))
(assert (= temp78_67 (select ARGNAME_output_padding_NAMEEND_VAL temp78_66)))
(assert (= temp78_68 #x0000000000000000))
(assert (= temp78_69 #x0000000000000000))
(assert (= temp78_70 temp78_69))
(assert (= temp78_71 (select ARGNAME_output_padding_NAMEEND_VAL temp78_70)))
(assert (= temp78_72 #x0000000000000000))
(assert (= temp78_73 #x0000000000000001))
(assert (= temp78_74 temp78_73))
(assert (= temp78_75 (select ARGNAME_output_padding_NAMEEND_VAL temp78_74)))
(assert (= temp78_76 #x0000000000000000))
(assert (= temp78_77 #x0000000000000002))
(assert (= temp78_78 temp78_77))
(assert (= temp78_79 (select ARGNAME_output_padding_NAMEEND_VAL temp78_78)))
(assert (= temp78_80 #x0000000000000000))
(assert (= temp78_81 #x0000000000000003))
(assert (= temp78_82 temp78_81))
(assert (= temp78_83 (select ARGNAME_output_padding_NAMEEND_VAL temp78_82)))
(assert (= temp78_84 #x0000000000000000))
(assert (= temp78_85 #x0000000000000004))
(assert (= temp78_86 temp78_85))
(assert (= temp78_87 (select ARGNAME_output_padding_NAMEEND_VAL temp78_86)))
(assert (= temp78_88 #x0000000000000000))
(assert (= temp78_89 #x0000000000000005))
(assert (= temp78_90 temp78_89))
(assert (= temp78_91 (select ARGNAME_output_padding_NAMEEND_VAL temp78_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp78_71 temp78_68)
             (bvslt temp78_75 temp78_72)
             (bvslt temp78_79 temp78_76)
             (bvslt temp78_83 temp78_80)
             (bvslt temp78_87 temp78_84)
             (bvslt temp78_91 temp78_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp78_92 #x0000000000000000))
(assert (= var1191725 temp78_92))
(assert (= temp78_93 #x0000000000000000))
(assert (= temp78_94 temp78_93))
(assert (= temp78_95 (select ARGNAME_stride_NAMEEND_VAL temp78_94)))
(assert (= temp78_96 #x0000000000000001))
(assert (= temp78_97 temp78_96))
(assert (= temp78_98 (select ARGNAME_stride_NAMEEND_VAL temp78_97)))
(assert (= temp78_99 #x0000000000000002))
(assert (= temp78_100 temp78_99))
(assert (= temp78_101 (select ARGNAME_stride_NAMEEND_VAL temp78_100)))
(assert (= temp78_102 #x0000000000000003))
(assert (= temp78_103 temp78_102))
(assert (= temp78_104 (select ARGNAME_stride_NAMEEND_VAL temp78_103)))
(assert (= temp78_105 #x0000000000000004))
(assert (= temp78_106 temp78_105))
(assert (= temp78_107 (select ARGNAME_stride_NAMEEND_VAL temp78_106)))
(assert (= temp78_108 #x0000000000000005))
(assert (= temp78_109 temp78_108))
(assert (= temp78_110 (select ARGNAME_stride_NAMEEND_VAL temp78_109)))
(assert (= temp78_111 #x0000000000000000))
(assert (= temp78_112 #x0000000000000000))
(assert (= temp78_113 temp78_112))
(assert (= temp78_114 (select ARGNAME_stride_NAMEEND_VAL temp78_113)))
(assert (= temp78_115 #x0000000000000000))
(assert (= temp78_116 #x0000000000000001))
(assert (= temp78_117 temp78_116))
(assert (= temp78_118 (select ARGNAME_stride_NAMEEND_VAL temp78_117)))
(assert (= temp78_119 #x0000000000000000))
(assert (= temp78_120 #x0000000000000002))
(assert (= temp78_121 temp78_120))
(assert (= temp78_122 (select ARGNAME_stride_NAMEEND_VAL temp78_121)))
(assert (= temp78_123 #x0000000000000000))
(assert (= temp78_124 #x0000000000000003))
(assert (= temp78_125 temp78_124))
(assert (= temp78_126 (select ARGNAME_stride_NAMEEND_VAL temp78_125)))
(assert (= temp78_127 #x0000000000000000))
(assert (= temp78_128 #x0000000000000004))
(assert (= temp78_129 temp78_128))
(assert (= temp78_130 (select ARGNAME_stride_NAMEEND_VAL temp78_129)))
(assert (= temp78_131 #x0000000000000000))
(assert (= temp78_132 #x0000000000000005))
(assert (= temp78_133 temp78_132))
(assert (= temp78_134 (select ARGNAME_stride_NAMEEND_VAL temp78_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp78_114 temp78_111)
             (bvsle temp78_118 temp78_115)
             (bvsle temp78_122 temp78_119)
             (bvsle temp78_126 temp78_123)
             (bvsle temp78_130 temp78_127)
             (bvsle temp78_134 temp78_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp78_135 #x0000000000000000))
(assert (= var1191735 temp78_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp78_136 #x0000000000000001))
(assert (= var1191747 temp78_136))
(assert (= temp78_137 #x0000000000000000))
(assert (= var1179826 temp78_137))
(assert (= temp78_138 #x0000000000000000))
(assert (= temp78_139 temp78_138))
(assert (= temp78_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp78_139)))
(assert (= temp78_141 #x0000000000000001))
(assert (= temp78_142 temp78_141))
(assert (= temp78_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp78_142)))
(assert (= temp78_144 #x0000000000000002))
(assert (= temp78_145 temp78_144))
(assert (= temp78_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp78_145)))
(assert (= temp78_147 #x0000000000000003))
(assert (= temp78_148 temp78_147))
(assert (= temp78_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp78_148)))
(assert (= temp78_150 #x0000000000000004))
(assert (= temp78_151 temp78_150))
(assert (= temp78_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp78_151)))
(assert (= temp78_153 #x0000000000000005))
(assert (= temp78_154 temp78_153))
(assert (= temp78_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp78_154)))
(assert (= temp78_157 var1179826))
(assert (= temp78_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp78_157)))
(assert (= temp78_156 temp78_158))
(assert (= var1191780
   (ite (bvslt temp78_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp78_159 #x0000000000000000))
(assert (= var1191780 temp78_159))
(assert (= temp78_160 #x0000000000000000))
(assert (= var1179826 temp78_160))
(assert (= temp78_162 var1179826))
(assert (= temp78_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp78_162)))
(assert (= temp78_161 temp78_163))
(assert (= var1191802 (bvsmod temp78_161 ARGNAME_groups_NAMEEND)))
(assert (= temp78_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp78_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp78_165 #x0000000000000001))
(assert (= var1191803 temp78_165))
(assert (= temp78_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp78_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp78_167 #x0000000000000001))
(assert (= var1191823 temp78_167))
(assert (= temp78_168 #x0000000000000001))
(assert (= var1180714 temp78_168))
(assert (= temp78_169 #x0000000000000000))
(assert (= temp78_170 temp78_169))
(assert (= temp78_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp78_170)))
(assert (= temp78_172 #x0000000000000001))
(assert (= temp78_173 temp78_172))
(assert (= temp78_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp78_173)))
(assert (= temp78_175 #x0000000000000002))
(assert (= temp78_176 temp78_175))
(assert (= temp78_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp78_176)))
(assert (= temp78_178 #x0000000000000003))
(assert (= temp78_179 temp78_178))
(assert (= temp78_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp78_179)))
(assert (= temp78_181 #x0000000000000004))
(assert (= temp78_182 temp78_181))
(assert (= temp78_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp78_182)))
(assert (= temp78_184 #x0000000000000005))
(assert (= temp78_185 temp78_184))
(assert (= temp78_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp78_185)))
(assert (= temp78_187 #x0000000000000000))
(assert (= temp78_188
   (ite (bvslt var1180714 temp78_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp78_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp78_188)))
(assert (= var1191831 temp78_189))
(assert (bvslt (ite (bvslt var1180714 temp78_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp78_190 #x0000000000000001))
(assert (= var1180714 temp78_190))
(assert (= temp78_192 var1180714))
(assert (= temp78_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp78_192)))
(assert (= temp78_191 temp78_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp78_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp78_194 #x0000000000000001))
(assert (= var1191836 temp78_194))
(assert (= temp78_195 #x0000000000000000))
(assert (= var1179826 temp78_195))
(assert (= temp78_197 var1179826))
(assert (= temp78_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp78_197)))
(assert (= temp78_196 temp78_198))
(assert (= temp78_199 #x0000000000000002))
(assert (= var1586025 temp78_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp78_200 #x0000000000000001))
(assert (= var1191993 temp78_200))
(assert (= temp78_201 #x0000000000000001))
(assert (= var2700303 temp78_201))
(assert (= temp78_202 #x0000000000000001))
(assert (= var2962447 temp78_202))
(assert (= temp78_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp78_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp78_204 #x0000000000000001))
(assert (= var211058 temp78_204))
(assert (= temp78_205 #x0000000000000001))
(assert (= var211188 temp78_205))
(assert (= var3879401 var211188))
(assert (= temp78_206 #x0000000000000000))
(assert (= var3866802 temp78_206))
(assert (= temp78_207 #x0000000000000000))
(assert (= temp78_208
   (ite (bvslt var3866802 temp78_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp78_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp78_208)))
(assert (= var3879420 temp78_209))
(assert (bvslt (ite (bvslt var3866802 temp78_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp78_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp78_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp78_211 #x0000000000000001))
(assert (= var3879421 temp78_211))
(assert (= temp78_212 #x0000000000000000))
(assert (= var4079423 temp78_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp78_213 #x0000000000000002))
(assert (= var4208259 temp78_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp78_214 #x0000000000000000))
(assert (= var4273820 temp78_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4796816 var211201))
(assert (= var211494 var210913))
(assert (= temp78_215 #x0000000000000000))
(assert (= var211495
   (ite (distinct var211494 temp78_215) #x0000000000000001 #x0000000000000000)))
(assert (= temp78_216 #x0000000000000001))
(assert (= var211058 temp78_216))
(model-add temp78_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp78_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp78_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp78_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






