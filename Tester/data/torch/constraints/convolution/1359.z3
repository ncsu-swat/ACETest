(declare-fun temp10542_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10542_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10542_3 () (_ BitVec 64))
(declare-fun temp10542_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10542_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10542_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10542_7 () (_ BitVec 64))
(declare-fun temp10542_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10542_9 () (_ BitVec 64))
(declare-fun temp10542_10 () (_ BitVec 64))
(declare-fun temp10542_11 () (_ BitVec 64))
(declare-fun temp10542_12 () (_ BitVec 64))
(declare-fun temp10542_13 () (_ BitVec 64))
(declare-fun temp10542_14 () (_ BitVec 64))
(declare-fun temp10542_15 () (_ BitVec 64))
(declare-fun temp10542_16 () (_ BitVec 64))
(declare-fun temp10542_17 () (_ BitVec 64))
(declare-fun temp10542_18 () (_ BitVec 64))
(declare-fun temp10542_19 () (_ BitVec 64))
(declare-fun temp10542_20 () (_ BitVec 64))
(declare-fun temp10542_21 () (_ BitVec 64))
(declare-fun temp10542_22 () (_ BitVec 64))
(declare-fun temp10542_23 () (_ BitVec 64))
(declare-fun temp10542_24 () (_ BitVec 64))
(declare-fun temp10542_25 () (_ BitVec 64))
(declare-fun temp10542_26 () (_ BitVec 64))
(declare-fun temp10542_27 () (_ BitVec 64))
(declare-fun temp10542_28 () (_ BitVec 64))
(declare-fun temp10542_29 () (_ BitVec 64))
(declare-fun temp10542_30 () (_ BitVec 64))
(declare-fun temp10542_31 () (_ BitVec 64))
(declare-fun temp10542_32 () (_ BitVec 64))
(declare-fun temp10542_33 () (_ BitVec 64))
(declare-fun temp10542_34 () (_ BitVec 64))
(declare-fun temp10542_35 () (_ BitVec 64))
(declare-fun temp10542_36 () (_ BitVec 64))
(declare-fun temp10542_37 () (_ BitVec 64))
(declare-fun temp10542_38 () (_ BitVec 64))
(declare-fun temp10542_39 () (_ BitVec 64))
(declare-fun temp10542_40 () (_ BitVec 64))
(declare-fun temp10542_41 () (_ BitVec 64))
(declare-fun temp10542_42 () (_ BitVec 64))
(declare-fun temp10542_43 () (_ BitVec 64))
(declare-fun temp10542_44 () (_ BitVec 64))
(declare-fun temp10542_45 () (_ BitVec 64))
(declare-fun temp10542_46 () (_ BitVec 64))
(declare-fun temp10542_47 () (_ BitVec 64))
(declare-fun temp10542_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10542_49 () (_ BitVec 64))
(declare-fun temp10542_50 () (_ BitVec 64))
(declare-fun temp10542_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10542_52 () (_ BitVec 64))
(declare-fun temp10542_53 () (_ BitVec 64))
(declare-fun temp10542_54 () (_ BitVec 64))
(declare-fun temp10542_55 () (_ BitVec 64))
(declare-fun temp10542_56 () (_ BitVec 64))
(declare-fun temp10542_57 () (_ BitVec 64))
(declare-fun temp10542_58 () (_ BitVec 64))
(declare-fun temp10542_59 () (_ BitVec 64))
(declare-fun temp10542_60 () (_ BitVec 64))
(declare-fun temp10542_61 () (_ BitVec 64))
(declare-fun temp10542_62 () (_ BitVec 64))
(declare-fun temp10542_63 () (_ BitVec 64))
(declare-fun temp10542_64 () (_ BitVec 64))
(declare-fun temp10542_65 () (_ BitVec 64))
(declare-fun temp10542_66 () (_ BitVec 64))
(declare-fun temp10542_67 () (_ BitVec 64))
(declare-fun temp10542_68 () (_ BitVec 64))
(declare-fun temp10542_69 () (_ BitVec 64))
(declare-fun temp10542_70 () (_ BitVec 64))
(declare-fun temp10542_71 () (_ BitVec 64))
(declare-fun temp10542_72 () (_ BitVec 64))
(declare-fun temp10542_73 () (_ BitVec 64))
(declare-fun temp10542_74 () (_ BitVec 64))
(declare-fun temp10542_75 () (_ BitVec 64))
(declare-fun temp10542_76 () (_ BitVec 64))
(declare-fun temp10542_77 () (_ BitVec 64))
(declare-fun temp10542_78 () (_ BitVec 64))
(declare-fun temp10542_79 () (_ BitVec 64))
(declare-fun temp10542_80 () (_ BitVec 64))
(declare-fun temp10542_81 () (_ BitVec 64))
(declare-fun temp10542_82 () (_ BitVec 64))
(declare-fun temp10542_83 () (_ BitVec 64))
(declare-fun temp10542_84 () (_ BitVec 64))
(declare-fun temp10542_85 () (_ BitVec 64))
(declare-fun temp10542_86 () (_ BitVec 64))
(declare-fun temp10542_87 () (_ BitVec 64))
(declare-fun temp10542_88 () (_ BitVec 64))
(declare-fun temp10542_89 () (_ BitVec 64))
(declare-fun temp10542_90 () (_ BitVec 64))
(declare-fun temp10542_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10542_92 () (_ BitVec 64))
(declare-fun temp10542_93 () (_ BitVec 64))
(declare-fun temp10542_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10542_95 () (_ BitVec 64))
(declare-fun temp10542_96 () (_ BitVec 64))
(declare-fun temp10542_97 () (_ BitVec 64))
(declare-fun temp10542_98 () (_ BitVec 64))
(declare-fun temp10542_99 () (_ BitVec 64))
(declare-fun temp10542_100 () (_ BitVec 64))
(declare-fun temp10542_101 () (_ BitVec 64))
(declare-fun temp10542_102 () (_ BitVec 64))
(declare-fun temp10542_103 () (_ BitVec 64))
(declare-fun temp10542_104 () (_ BitVec 64))
(declare-fun temp10542_105 () (_ BitVec 64))
(declare-fun temp10542_106 () (_ BitVec 64))
(declare-fun temp10542_107 () (_ BitVec 64))
(declare-fun temp10542_108 () (_ BitVec 64))
(declare-fun temp10542_109 () (_ BitVec 64))
(declare-fun temp10542_110 () (_ BitVec 64))
(declare-fun temp10542_111 () (_ BitVec 64))
(declare-fun temp10542_112 () (_ BitVec 64))
(declare-fun temp10542_113 () (_ BitVec 64))
(declare-fun temp10542_114 () (_ BitVec 64))
(declare-fun temp10542_115 () (_ BitVec 64))
(declare-fun temp10542_116 () (_ BitVec 64))
(declare-fun temp10542_117 () (_ BitVec 64))
(declare-fun temp10542_118 () (_ BitVec 64))
(declare-fun temp10542_119 () (_ BitVec 64))
(declare-fun temp10542_120 () (_ BitVec 64))
(declare-fun temp10542_121 () (_ BitVec 64))
(declare-fun temp10542_122 () (_ BitVec 64))
(declare-fun temp10542_123 () (_ BitVec 64))
(declare-fun temp10542_124 () (_ BitVec 64))
(declare-fun temp10542_125 () (_ BitVec 64))
(declare-fun temp10542_126 () (_ BitVec 64))
(declare-fun temp10542_127 () (_ BitVec 64))
(declare-fun temp10542_128 () (_ BitVec 64))
(declare-fun temp10542_129 () (_ BitVec 64))
(declare-fun temp10542_130 () (_ BitVec 64))
(declare-fun temp10542_131 () (_ BitVec 64))
(declare-fun temp10542_132 () (_ BitVec 64))
(declare-fun temp10542_133 () (_ BitVec 64))
(declare-fun temp10542_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10542_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10542_136 () (_ BitVec 64))
(declare-fun temp10542_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10542_138 () (_ BitVec 64))
(declare-fun temp10542_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10542_140 () (_ BitVec 64))
(declare-fun temp10542_141 () (_ BitVec 64))
(declare-fun temp10542_142 () (_ BitVec 64))
(declare-fun temp10542_143 () (_ BitVec 64))
(declare-fun temp10542_144 () (_ BitVec 64))
(declare-fun temp10542_145 () (_ BitVec 64))
(declare-fun temp10542_146 () (_ BitVec 64))
(declare-fun temp10542_147 () (_ BitVec 64))
(declare-fun temp10542_148 () (_ BitVec 64))
(declare-fun temp10542_149 () (_ BitVec 64))
(declare-fun temp10542_150 () (_ BitVec 64))
(declare-fun temp10542_151 () (_ BitVec 64))
(declare-fun temp10542_152 () (_ BitVec 64))
(declare-fun temp10542_153 () (_ BitVec 64))
(declare-fun temp10542_154 () (_ BitVec 64))
(declare-fun temp10542_155 () (_ BitVec 64))
(declare-fun temp10542_157 () (_ BitVec 64))
(declare-fun temp10542_158 () (_ BitVec 64))
(declare-fun temp10542_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10542_159 () (_ BitVec 64))
(declare-fun temp10542_160 () (_ BitVec 64))
(declare-fun temp10542_162 () (_ BitVec 64))
(declare-fun temp10542_163 () (_ BitVec 64))
(declare-fun temp10542_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10542_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10542_165 () (_ BitVec 64))
(declare-fun temp10542_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10542_167 () (_ BitVec 64))
(declare-fun temp10542_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10542_169 () (_ BitVec 64))
(declare-fun temp10542_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10542_171 () (_ BitVec 64))
(declare-fun temp10542_172 () (_ BitVec 64))
(declare-fun temp10542_173 () (_ BitVec 64))
(declare-fun temp10542_174 () (_ BitVec 64))
(declare-fun temp10542_175 () (_ BitVec 64))
(declare-fun temp10542_176 () (_ BitVec 64))
(declare-fun temp10542_177 () (_ BitVec 64))
(declare-fun temp10542_178 () (_ BitVec 64))
(declare-fun temp10542_179 () (_ BitVec 64))
(declare-fun temp10542_180 () (_ BitVec 64))
(declare-fun temp10542_181 () (_ BitVec 64))
(declare-fun temp10542_182 () (_ BitVec 64))
(declare-fun temp10542_183 () (_ BitVec 64))
(declare-fun temp10542_184 () (_ BitVec 64))
(declare-fun temp10542_185 () (_ BitVec 64))
(declare-fun temp10542_186 () (_ BitVec 64))
(declare-fun temp10542_187 () (_ BitVec 64))
(declare-fun temp10542_188 () (_ BitVec 64))
(declare-fun temp10542_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10542_190 () (_ BitVec 64))
(declare-fun temp10542_192 () (_ BitVec 64))
(declare-fun temp10542_193 () (_ BitVec 64))
(declare-fun temp10542_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10542_194 () (_ BitVec 64))
(declare-fun temp10542_195 () (_ BitVec 64))
(declare-fun temp10542_197 () (_ BitVec 64))
(declare-fun temp10542_198 () (_ BitVec 64))
(declare-fun temp10542_196 () (_ BitVec 64))
(declare-fun temp10542_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10542_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10542_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10542_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10542_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10542_204 () (_ BitVec 64))
(declare-fun temp10542_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10542_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10542_207 () (_ BitVec 64))
(declare-fun temp10542_208 () (_ BitVec 64))
(declare-fun temp10542_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10542_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10542_211 () (_ BitVec 64))
(declare-fun temp10542_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10542_213 () (_ BitVec 64))
(declare-fun temp10542_214 () (_ BitVec 64))
(declare-fun temp10542_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10542_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10542_217 () (_ BitVec 64))
(declare-fun temp10542_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10542_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10542_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var5124496 () (_ BitVec 64))
(declare-fun var211388 () (_ BitVec 64))
(declare-fun temp10542_221 () (_ BitVec 64))
(declare-fun var211389 () (_ BitVec 64))
(declare-fun var6045517 () (_ BitVec 64))
(declare-fun temp10542_222 () (_ BitVec 64))
(assert (= temp10542_1 #x0000000000000001))
(assert (= var77203 temp10542_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10542_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10542_2)))
(assert (= temp10542_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10542_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10542_4 #x0000000000000000))
(assert (= var210941 temp10542_4))
(assert (= temp10542_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10542_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10542_6 #x0000000000000000))
(assert (= var210986 temp10542_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10542_7 #x0000000000000000))
(assert (= temp10542_8 temp10542_7))
(assert (= temp10542_9 (select ARGNAME_padding_NAMEEND_VAL temp10542_8)))
(assert (= temp10542_10 #x0000000000000001))
(assert (= temp10542_11 temp10542_10))
(assert (= temp10542_12 (select ARGNAME_padding_NAMEEND_VAL temp10542_11)))
(assert (= temp10542_13 #x0000000000000002))
(assert (= temp10542_14 temp10542_13))
(assert (= temp10542_15 (select ARGNAME_padding_NAMEEND_VAL temp10542_14)))
(assert (= temp10542_16 #x0000000000000003))
(assert (= temp10542_17 temp10542_16))
(assert (= temp10542_18 (select ARGNAME_padding_NAMEEND_VAL temp10542_17)))
(assert (= temp10542_19 #x0000000000000004))
(assert (= temp10542_20 temp10542_19))
(assert (= temp10542_21 (select ARGNAME_padding_NAMEEND_VAL temp10542_20)))
(assert (= temp10542_22 #x0000000000000005))
(assert (= temp10542_23 temp10542_22))
(assert (= temp10542_24 (select ARGNAME_padding_NAMEEND_VAL temp10542_23)))
(assert (= temp10542_25 #x0000000000000000))
(assert (= temp10542_26 #x0000000000000000))
(assert (= temp10542_27 temp10542_26))
(assert (= temp10542_28 (select ARGNAME_padding_NAMEEND_VAL temp10542_27)))
(assert (= temp10542_29 #x0000000000000000))
(assert (= temp10542_30 #x0000000000000001))
(assert (= temp10542_31 temp10542_30))
(assert (= temp10542_32 (select ARGNAME_padding_NAMEEND_VAL temp10542_31)))
(assert (= temp10542_33 #x0000000000000000))
(assert (= temp10542_34 #x0000000000000002))
(assert (= temp10542_35 temp10542_34))
(assert (= temp10542_36 (select ARGNAME_padding_NAMEEND_VAL temp10542_35)))
(assert (= temp10542_37 #x0000000000000000))
(assert (= temp10542_38 #x0000000000000003))
(assert (= temp10542_39 temp10542_38))
(assert (= temp10542_40 (select ARGNAME_padding_NAMEEND_VAL temp10542_39)))
(assert (= temp10542_41 #x0000000000000000))
(assert (= temp10542_42 #x0000000000000004))
(assert (= temp10542_43 temp10542_42))
(assert (= temp10542_44 (select ARGNAME_padding_NAMEEND_VAL temp10542_43)))
(assert (= temp10542_45 #x0000000000000000))
(assert (= temp10542_46 #x0000000000000005))
(assert (= temp10542_47 temp10542_46))
(assert (= temp10542_48 (select ARGNAME_padding_NAMEEND_VAL temp10542_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10542_28 temp10542_25)
             (bvslt temp10542_32 temp10542_29)
             (bvslt temp10542_36 temp10542_33)
             (bvslt temp10542_40 temp10542_37)
             (bvslt temp10542_44 temp10542_41)
             (bvslt temp10542_48 temp10542_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10542_49 #x0000000000000000))
(assert (= var1191714 temp10542_49))
(assert (= temp10542_50 #x0000000000000000))
(assert (= temp10542_51 temp10542_50))
(assert (= temp10542_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10542_51)))
(assert (= temp10542_53 #x0000000000000001))
(assert (= temp10542_54 temp10542_53))
(assert (= temp10542_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10542_54)))
(assert (= temp10542_56 #x0000000000000002))
(assert (= temp10542_57 temp10542_56))
(assert (= temp10542_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10542_57)))
(assert (= temp10542_59 #x0000000000000003))
(assert (= temp10542_60 temp10542_59))
(assert (= temp10542_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10542_60)))
(assert (= temp10542_62 #x0000000000000004))
(assert (= temp10542_63 temp10542_62))
(assert (= temp10542_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10542_63)))
(assert (= temp10542_65 #x0000000000000005))
(assert (= temp10542_66 temp10542_65))
(assert (= temp10542_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10542_66)))
(assert (= temp10542_68 #x0000000000000000))
(assert (= temp10542_69 #x0000000000000000))
(assert (= temp10542_70 temp10542_69))
(assert (= temp10542_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10542_70)))
(assert (= temp10542_72 #x0000000000000000))
(assert (= temp10542_73 #x0000000000000001))
(assert (= temp10542_74 temp10542_73))
(assert (= temp10542_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10542_74)))
(assert (= temp10542_76 #x0000000000000000))
(assert (= temp10542_77 #x0000000000000002))
(assert (= temp10542_78 temp10542_77))
(assert (= temp10542_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10542_78)))
(assert (= temp10542_80 #x0000000000000000))
(assert (= temp10542_81 #x0000000000000003))
(assert (= temp10542_82 temp10542_81))
(assert (= temp10542_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10542_82)))
(assert (= temp10542_84 #x0000000000000000))
(assert (= temp10542_85 #x0000000000000004))
(assert (= temp10542_86 temp10542_85))
(assert (= temp10542_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10542_86)))
(assert (= temp10542_88 #x0000000000000000))
(assert (= temp10542_89 #x0000000000000005))
(assert (= temp10542_90 temp10542_89))
(assert (= temp10542_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10542_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10542_71 temp10542_68)
             (bvslt temp10542_75 temp10542_72)
             (bvslt temp10542_79 temp10542_76)
             (bvslt temp10542_83 temp10542_80)
             (bvslt temp10542_87 temp10542_84)
             (bvslt temp10542_91 temp10542_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10542_92 #x0000000000000000))
(assert (= var1191725 temp10542_92))
(assert (= temp10542_93 #x0000000000000000))
(assert (= temp10542_94 temp10542_93))
(assert (= temp10542_95 (select ARGNAME_stride_NAMEEND_VAL temp10542_94)))
(assert (= temp10542_96 #x0000000000000001))
(assert (= temp10542_97 temp10542_96))
(assert (= temp10542_98 (select ARGNAME_stride_NAMEEND_VAL temp10542_97)))
(assert (= temp10542_99 #x0000000000000002))
(assert (= temp10542_100 temp10542_99))
(assert (= temp10542_101 (select ARGNAME_stride_NAMEEND_VAL temp10542_100)))
(assert (= temp10542_102 #x0000000000000003))
(assert (= temp10542_103 temp10542_102))
(assert (= temp10542_104 (select ARGNAME_stride_NAMEEND_VAL temp10542_103)))
(assert (= temp10542_105 #x0000000000000004))
(assert (= temp10542_106 temp10542_105))
(assert (= temp10542_107 (select ARGNAME_stride_NAMEEND_VAL temp10542_106)))
(assert (= temp10542_108 #x0000000000000005))
(assert (= temp10542_109 temp10542_108))
(assert (= temp10542_110 (select ARGNAME_stride_NAMEEND_VAL temp10542_109)))
(assert (= temp10542_111 #x0000000000000000))
(assert (= temp10542_112 #x0000000000000000))
(assert (= temp10542_113 temp10542_112))
(assert (= temp10542_114 (select ARGNAME_stride_NAMEEND_VAL temp10542_113)))
(assert (= temp10542_115 #x0000000000000000))
(assert (= temp10542_116 #x0000000000000001))
(assert (= temp10542_117 temp10542_116))
(assert (= temp10542_118 (select ARGNAME_stride_NAMEEND_VAL temp10542_117)))
(assert (= temp10542_119 #x0000000000000000))
(assert (= temp10542_120 #x0000000000000002))
(assert (= temp10542_121 temp10542_120))
(assert (= temp10542_122 (select ARGNAME_stride_NAMEEND_VAL temp10542_121)))
(assert (= temp10542_123 #x0000000000000000))
(assert (= temp10542_124 #x0000000000000003))
(assert (= temp10542_125 temp10542_124))
(assert (= temp10542_126 (select ARGNAME_stride_NAMEEND_VAL temp10542_125)))
(assert (= temp10542_127 #x0000000000000000))
(assert (= temp10542_128 #x0000000000000004))
(assert (= temp10542_129 temp10542_128))
(assert (= temp10542_130 (select ARGNAME_stride_NAMEEND_VAL temp10542_129)))
(assert (= temp10542_131 #x0000000000000000))
(assert (= temp10542_132 #x0000000000000005))
(assert (= temp10542_133 temp10542_132))
(assert (= temp10542_134 (select ARGNAME_stride_NAMEEND_VAL temp10542_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10542_114 temp10542_111)
             (bvsle temp10542_118 temp10542_115)
             (bvsle temp10542_122 temp10542_119)
             (bvsle temp10542_126 temp10542_123)
             (bvsle temp10542_130 temp10542_127)
             (bvsle temp10542_134 temp10542_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10542_135 #x0000000000000000))
(assert (= var1191735 temp10542_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10542_136 #x0000000000000001))
(assert (= var1191747 temp10542_136))
(assert (= temp10542_137 #x0000000000000000))
(assert (= var1179826 temp10542_137))
(assert (= temp10542_138 #x0000000000000000))
(assert (= temp10542_139 temp10542_138))
(assert (= temp10542_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10542_139)))
(assert (= temp10542_141 #x0000000000000001))
(assert (= temp10542_142 temp10542_141))
(assert (= temp10542_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10542_142)))
(assert (= temp10542_144 #x0000000000000002))
(assert (= temp10542_145 temp10542_144))
(assert (= temp10542_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10542_145)))
(assert (= temp10542_147 #x0000000000000003))
(assert (= temp10542_148 temp10542_147))
(assert (= temp10542_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10542_148)))
(assert (= temp10542_150 #x0000000000000004))
(assert (= temp10542_151 temp10542_150))
(assert (= temp10542_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10542_151)))
(assert (= temp10542_153 #x0000000000000005))
(assert (= temp10542_154 temp10542_153))
(assert (= temp10542_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10542_154)))
(assert (= temp10542_157 var1179826))
(assert (= temp10542_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10542_157)))
(assert (= temp10542_156 temp10542_158))
(assert (= var1191780
   (ite (bvslt temp10542_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10542_159 #x0000000000000000))
(assert (= var1191780 temp10542_159))
(assert (= temp10542_160 #x0000000000000000))
(assert (= var1179826 temp10542_160))
(assert (= temp10542_162 var1179826))
(assert (= temp10542_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10542_162)))
(assert (= temp10542_161 temp10542_163))
(assert (= var1191802 (bvsmod temp10542_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10542_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10542_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10542_165 #x0000000000000001))
(assert (= var1191803 temp10542_165))
(assert (= temp10542_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10542_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10542_167 #x0000000000000001))
(assert (= var1191823 temp10542_167))
(assert (= temp10542_168 #x0000000000000001))
(assert (= var1180714 temp10542_168))
(assert (= temp10542_169 #x0000000000000000))
(assert (= temp10542_170 temp10542_169))
(assert (= temp10542_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10542_170)))
(assert (= temp10542_172 #x0000000000000001))
(assert (= temp10542_173 temp10542_172))
(assert (= temp10542_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10542_173)))
(assert (= temp10542_175 #x0000000000000002))
(assert (= temp10542_176 temp10542_175))
(assert (= temp10542_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10542_176)))
(assert (= temp10542_178 #x0000000000000003))
(assert (= temp10542_179 temp10542_178))
(assert (= temp10542_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10542_179)))
(assert (= temp10542_181 #x0000000000000004))
(assert (= temp10542_182 temp10542_181))
(assert (= temp10542_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10542_182)))
(assert (= temp10542_184 #x0000000000000005))
(assert (= temp10542_185 temp10542_184))
(assert (= temp10542_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10542_185)))
(assert (= temp10542_187 #x0000000000000000))
(assert (= temp10542_188
   (ite (bvslt var1180714 temp10542_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10542_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10542_188)))
(assert (= var1191831 temp10542_189))
(assert (bvslt (ite (bvslt var1180714 temp10542_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10542_190 #x0000000000000001))
(assert (= var1180714 temp10542_190))
(assert (= temp10542_192 var1180714))
(assert (= temp10542_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10542_192)))
(assert (= temp10542_191 temp10542_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10542_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10542_194 #x0000000000000001))
(assert (= var1191836 temp10542_194))
(assert (= temp10542_195 #x0000000000000000))
(assert (= var1179826 temp10542_195))
(assert (= temp10542_197 var1179826))
(assert (= temp10542_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10542_197)))
(assert (= temp10542_196 temp10542_198))
(assert (= temp10542_199 #x0000000000000002))
(assert (= var1586025 temp10542_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10542_200 #x0000000000000001))
(assert (= var1191993 temp10542_200))
(assert (= temp10542_201 #x0000000000000001))
(assert (= var2700303 temp10542_201))
(assert (= temp10542_202 #x0000000000000001))
(assert (= var2962447 temp10542_202))
(assert (= temp10542_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10542_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10542_204 #x0000000000000001))
(assert (= var211058 temp10542_204))
(assert (= temp10542_205 #x0000000000000001))
(assert (= var211188 temp10542_205))
(assert (= var3879401 var211188))
(assert (= temp10542_206 #x0000000000000000))
(assert (= var3866802 temp10542_206))
(assert (= temp10542_207 #x0000000000000000))
(assert (= temp10542_208
   (ite (bvslt var3866802 temp10542_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10542_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10542_208)))
(assert (= var3879420 temp10542_209))
(assert (bvslt (ite (bvslt var3866802 temp10542_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10542_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10542_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10542_211 #x0000000000000000))
(assert (= var3879421 temp10542_211))
(assert (= temp10542_212 #x0000000000000001))
(assert (= var3867690 temp10542_212))
(assert (= temp10542_213 #x0000000000000000))
(assert (= temp10542_214
   (ite (bvslt var3867690 temp10542_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10542_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10542_214)))
(assert (= var3879423 temp10542_215))
(assert (bvslt (ite (bvslt var3867690 temp10542_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10542_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10542_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10542_217 #x0000000000000001))
(assert (= var3879424 temp10542_217))
(assert (= temp10542_218 #x0000000000000000))
(assert (= var4133117 temp10542_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10542_219 #x0000000000000002))
(assert (= var4339331 temp10542_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10542_220 #x0000000000000000))
(assert (= var4404892 temp10542_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var5124496 var211201))
(assert (= var211388 var210913))
(assert (= temp10542_221 #x0000000000000000))
(assert (= var211389
   (ite (distinct var211388 temp10542_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var6045517 var211389))
(assert (= temp10542_222 #x0000000000000001))
(assert (= var211058 temp10542_222))
(model-add temp10542_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10542_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10542_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10542_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))



