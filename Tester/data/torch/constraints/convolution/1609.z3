(declare-fun temp10940_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10940_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10940_3 () (_ BitVec 64))
(declare-fun temp10940_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10940_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10940_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10940_7 () (_ BitVec 64))
(declare-fun temp10940_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10940_9 () (_ BitVec 64))
(declare-fun temp10940_10 () (_ BitVec 64))
(declare-fun temp10940_11 () (_ BitVec 64))
(declare-fun temp10940_12 () (_ BitVec 64))
(declare-fun temp10940_13 () (_ BitVec 64))
(declare-fun temp10940_14 () (_ BitVec 64))
(declare-fun temp10940_15 () (_ BitVec 64))
(declare-fun temp10940_16 () (_ BitVec 64))
(declare-fun temp10940_17 () (_ BitVec 64))
(declare-fun temp10940_18 () (_ BitVec 64))
(declare-fun temp10940_19 () (_ BitVec 64))
(declare-fun temp10940_20 () (_ BitVec 64))
(declare-fun temp10940_21 () (_ BitVec 64))
(declare-fun temp10940_22 () (_ BitVec 64))
(declare-fun temp10940_23 () (_ BitVec 64))
(declare-fun temp10940_24 () (_ BitVec 64))
(declare-fun temp10940_25 () (_ BitVec 64))
(declare-fun temp10940_26 () (_ BitVec 64))
(declare-fun temp10940_27 () (_ BitVec 64))
(declare-fun temp10940_28 () (_ BitVec 64))
(declare-fun temp10940_29 () (_ BitVec 64))
(declare-fun temp10940_30 () (_ BitVec 64))
(declare-fun temp10940_31 () (_ BitVec 64))
(declare-fun temp10940_32 () (_ BitVec 64))
(declare-fun temp10940_33 () (_ BitVec 64))
(declare-fun temp10940_34 () (_ BitVec 64))
(declare-fun temp10940_35 () (_ BitVec 64))
(declare-fun temp10940_36 () (_ BitVec 64))
(declare-fun temp10940_37 () (_ BitVec 64))
(declare-fun temp10940_38 () (_ BitVec 64))
(declare-fun temp10940_39 () (_ BitVec 64))
(declare-fun temp10940_40 () (_ BitVec 64))
(declare-fun temp10940_41 () (_ BitVec 64))
(declare-fun temp10940_42 () (_ BitVec 64))
(declare-fun temp10940_43 () (_ BitVec 64))
(declare-fun temp10940_44 () (_ BitVec 64))
(declare-fun temp10940_45 () (_ BitVec 64))
(declare-fun temp10940_46 () (_ BitVec 64))
(declare-fun temp10940_47 () (_ BitVec 64))
(declare-fun temp10940_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10940_49 () (_ BitVec 64))
(declare-fun temp10940_50 () (_ BitVec 64))
(declare-fun temp10940_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10940_52 () (_ BitVec 64))
(declare-fun temp10940_53 () (_ BitVec 64))
(declare-fun temp10940_54 () (_ BitVec 64))
(declare-fun temp10940_55 () (_ BitVec 64))
(declare-fun temp10940_56 () (_ BitVec 64))
(declare-fun temp10940_57 () (_ BitVec 64))
(declare-fun temp10940_58 () (_ BitVec 64))
(declare-fun temp10940_59 () (_ BitVec 64))
(declare-fun temp10940_60 () (_ BitVec 64))
(declare-fun temp10940_61 () (_ BitVec 64))
(declare-fun temp10940_62 () (_ BitVec 64))
(declare-fun temp10940_63 () (_ BitVec 64))
(declare-fun temp10940_64 () (_ BitVec 64))
(declare-fun temp10940_65 () (_ BitVec 64))
(declare-fun temp10940_66 () (_ BitVec 64))
(declare-fun temp10940_67 () (_ BitVec 64))
(declare-fun temp10940_68 () (_ BitVec 64))
(declare-fun temp10940_69 () (_ BitVec 64))
(declare-fun temp10940_70 () (_ BitVec 64))
(declare-fun temp10940_71 () (_ BitVec 64))
(declare-fun temp10940_72 () (_ BitVec 64))
(declare-fun temp10940_73 () (_ BitVec 64))
(declare-fun temp10940_74 () (_ BitVec 64))
(declare-fun temp10940_75 () (_ BitVec 64))
(declare-fun temp10940_76 () (_ BitVec 64))
(declare-fun temp10940_77 () (_ BitVec 64))
(declare-fun temp10940_78 () (_ BitVec 64))
(declare-fun temp10940_79 () (_ BitVec 64))
(declare-fun temp10940_80 () (_ BitVec 64))
(declare-fun temp10940_81 () (_ BitVec 64))
(declare-fun temp10940_82 () (_ BitVec 64))
(declare-fun temp10940_83 () (_ BitVec 64))
(declare-fun temp10940_84 () (_ BitVec 64))
(declare-fun temp10940_85 () (_ BitVec 64))
(declare-fun temp10940_86 () (_ BitVec 64))
(declare-fun temp10940_87 () (_ BitVec 64))
(declare-fun temp10940_88 () (_ BitVec 64))
(declare-fun temp10940_89 () (_ BitVec 64))
(declare-fun temp10940_90 () (_ BitVec 64))
(declare-fun temp10940_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10940_92 () (_ BitVec 64))
(declare-fun temp10940_93 () (_ BitVec 64))
(declare-fun temp10940_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10940_95 () (_ BitVec 64))
(declare-fun temp10940_96 () (_ BitVec 64))
(declare-fun temp10940_97 () (_ BitVec 64))
(declare-fun temp10940_98 () (_ BitVec 64))
(declare-fun temp10940_99 () (_ BitVec 64))
(declare-fun temp10940_100 () (_ BitVec 64))
(declare-fun temp10940_101 () (_ BitVec 64))
(declare-fun temp10940_102 () (_ BitVec 64))
(declare-fun temp10940_103 () (_ BitVec 64))
(declare-fun temp10940_104 () (_ BitVec 64))
(declare-fun temp10940_105 () (_ BitVec 64))
(declare-fun temp10940_106 () (_ BitVec 64))
(declare-fun temp10940_107 () (_ BitVec 64))
(declare-fun temp10940_108 () (_ BitVec 64))
(declare-fun temp10940_109 () (_ BitVec 64))
(declare-fun temp10940_110 () (_ BitVec 64))
(declare-fun temp10940_111 () (_ BitVec 64))
(declare-fun temp10940_112 () (_ BitVec 64))
(declare-fun temp10940_113 () (_ BitVec 64))
(declare-fun temp10940_114 () (_ BitVec 64))
(declare-fun temp10940_115 () (_ BitVec 64))
(declare-fun temp10940_116 () (_ BitVec 64))
(declare-fun temp10940_117 () (_ BitVec 64))
(declare-fun temp10940_118 () (_ BitVec 64))
(declare-fun temp10940_119 () (_ BitVec 64))
(declare-fun temp10940_120 () (_ BitVec 64))
(declare-fun temp10940_121 () (_ BitVec 64))
(declare-fun temp10940_122 () (_ BitVec 64))
(declare-fun temp10940_123 () (_ BitVec 64))
(declare-fun temp10940_124 () (_ BitVec 64))
(declare-fun temp10940_125 () (_ BitVec 64))
(declare-fun temp10940_126 () (_ BitVec 64))
(declare-fun temp10940_127 () (_ BitVec 64))
(declare-fun temp10940_128 () (_ BitVec 64))
(declare-fun temp10940_129 () (_ BitVec 64))
(declare-fun temp10940_130 () (_ BitVec 64))
(declare-fun temp10940_131 () (_ BitVec 64))
(declare-fun temp10940_132 () (_ BitVec 64))
(declare-fun temp10940_133 () (_ BitVec 64))
(declare-fun temp10940_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10940_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10940_136 () (_ BitVec 64))
(declare-fun temp10940_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10940_138 () (_ BitVec 64))
(declare-fun temp10940_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10940_140 () (_ BitVec 64))
(declare-fun temp10940_141 () (_ BitVec 64))
(declare-fun temp10940_142 () (_ BitVec 64))
(declare-fun temp10940_143 () (_ BitVec 64))
(declare-fun temp10940_144 () (_ BitVec 64))
(declare-fun temp10940_145 () (_ BitVec 64))
(declare-fun temp10940_146 () (_ BitVec 64))
(declare-fun temp10940_147 () (_ BitVec 64))
(declare-fun temp10940_148 () (_ BitVec 64))
(declare-fun temp10940_149 () (_ BitVec 64))
(declare-fun temp10940_150 () (_ BitVec 64))
(declare-fun temp10940_151 () (_ BitVec 64))
(declare-fun temp10940_152 () (_ BitVec 64))
(declare-fun temp10940_153 () (_ BitVec 64))
(declare-fun temp10940_154 () (_ BitVec 64))
(declare-fun temp10940_155 () (_ BitVec 64))
(declare-fun temp10940_157 () (_ BitVec 64))
(declare-fun temp10940_158 () (_ BitVec 64))
(declare-fun temp10940_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10940_159 () (_ BitVec 64))
(declare-fun temp10940_160 () (_ BitVec 64))
(declare-fun temp10940_162 () (_ BitVec 64))
(declare-fun temp10940_163 () (_ BitVec 64))
(declare-fun temp10940_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10940_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10940_165 () (_ BitVec 64))
(declare-fun temp10940_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10940_167 () (_ BitVec 64))
(declare-fun temp10940_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10940_169 () (_ BitVec 64))
(declare-fun temp10940_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10940_171 () (_ BitVec 64))
(declare-fun temp10940_172 () (_ BitVec 64))
(declare-fun temp10940_173 () (_ BitVec 64))
(declare-fun temp10940_174 () (_ BitVec 64))
(declare-fun temp10940_175 () (_ BitVec 64))
(declare-fun temp10940_176 () (_ BitVec 64))
(declare-fun temp10940_177 () (_ BitVec 64))
(declare-fun temp10940_178 () (_ BitVec 64))
(declare-fun temp10940_179 () (_ BitVec 64))
(declare-fun temp10940_180 () (_ BitVec 64))
(declare-fun temp10940_181 () (_ BitVec 64))
(declare-fun temp10940_182 () (_ BitVec 64))
(declare-fun temp10940_183 () (_ BitVec 64))
(declare-fun temp10940_184 () (_ BitVec 64))
(declare-fun temp10940_185 () (_ BitVec 64))
(declare-fun temp10940_186 () (_ BitVec 64))
(declare-fun temp10940_187 () (_ BitVec 64))
(declare-fun temp10940_188 () (_ BitVec 64))
(declare-fun temp10940_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10940_190 () (_ BitVec 64))
(declare-fun temp10940_192 () (_ BitVec 64))
(declare-fun temp10940_193 () (_ BitVec 64))
(declare-fun temp10940_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10940_194 () (_ BitVec 64))
(declare-fun temp10940_195 () (_ BitVec 64))
(declare-fun temp10940_197 () (_ BitVec 64))
(declare-fun temp10940_198 () (_ BitVec 64))
(declare-fun temp10940_196 () (_ BitVec 64))
(declare-fun temp10940_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10940_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10940_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10940_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10940_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10940_204 () (_ BitVec 64))
(declare-fun temp10940_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10940_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10940_207 () (_ BitVec 64))
(declare-fun temp10940_208 () (_ BitVec 64))
(declare-fun temp10940_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10940_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10940_211 () (_ BitVec 64))
(declare-fun temp10940_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10940_213 () (_ BitVec 64))
(declare-fun temp10940_214 () (_ BitVec 64))
(declare-fun temp10940_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10940_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10940_217 () (_ BitVec 64))
(declare-fun temp10940_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10940_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10940_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp10940_221 () (_ BitVec 64))
(declare-fun temp10940_222 () (_ BitVec 64))
(declare-fun var6238996 () (_ BitVec 64))
(declare-fun var6238963 () (_ BitVec 64))
(declare-fun var6107527 () (_ BitVec 64))
(declare-fun var6107523 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp10940_223 () (_ BitVec 64))
(assert (= temp10940_1 #x0000000000000001))
(assert (= var77203 temp10940_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10940_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10940_2)))
(assert (= temp10940_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10940_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10940_4 #x0000000000000000))
(assert (= var210941 temp10940_4))
(assert (= temp10940_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10940_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10940_6 #x0000000000000000))
(assert (= var210986 temp10940_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10940_7 #x0000000000000000))
(assert (= temp10940_8 temp10940_7))
(assert (= temp10940_9 (select ARGNAME_padding_NAMEEND_VAL temp10940_8)))
(assert (= temp10940_10 #x0000000000000001))
(assert (= temp10940_11 temp10940_10))
(assert (= temp10940_12 (select ARGNAME_padding_NAMEEND_VAL temp10940_11)))
(assert (= temp10940_13 #x0000000000000002))
(assert (= temp10940_14 temp10940_13))
(assert (= temp10940_15 (select ARGNAME_padding_NAMEEND_VAL temp10940_14)))
(assert (= temp10940_16 #x0000000000000003))
(assert (= temp10940_17 temp10940_16))
(assert (= temp10940_18 (select ARGNAME_padding_NAMEEND_VAL temp10940_17)))
(assert (= temp10940_19 #x0000000000000004))
(assert (= temp10940_20 temp10940_19))
(assert (= temp10940_21 (select ARGNAME_padding_NAMEEND_VAL temp10940_20)))
(assert (= temp10940_22 #x0000000000000005))
(assert (= temp10940_23 temp10940_22))
(assert (= temp10940_24 (select ARGNAME_padding_NAMEEND_VAL temp10940_23)))
(assert (= temp10940_25 #x0000000000000000))
(assert (= temp10940_26 #x0000000000000000))
(assert (= temp10940_27 temp10940_26))
(assert (= temp10940_28 (select ARGNAME_padding_NAMEEND_VAL temp10940_27)))
(assert (= temp10940_29 #x0000000000000000))
(assert (= temp10940_30 #x0000000000000001))
(assert (= temp10940_31 temp10940_30))
(assert (= temp10940_32 (select ARGNAME_padding_NAMEEND_VAL temp10940_31)))
(assert (= temp10940_33 #x0000000000000000))
(assert (= temp10940_34 #x0000000000000002))
(assert (= temp10940_35 temp10940_34))
(assert (= temp10940_36 (select ARGNAME_padding_NAMEEND_VAL temp10940_35)))
(assert (= temp10940_37 #x0000000000000000))
(assert (= temp10940_38 #x0000000000000003))
(assert (= temp10940_39 temp10940_38))
(assert (= temp10940_40 (select ARGNAME_padding_NAMEEND_VAL temp10940_39)))
(assert (= temp10940_41 #x0000000000000000))
(assert (= temp10940_42 #x0000000000000004))
(assert (= temp10940_43 temp10940_42))
(assert (= temp10940_44 (select ARGNAME_padding_NAMEEND_VAL temp10940_43)))
(assert (= temp10940_45 #x0000000000000000))
(assert (= temp10940_46 #x0000000000000005))
(assert (= temp10940_47 temp10940_46))
(assert (= temp10940_48 (select ARGNAME_padding_NAMEEND_VAL temp10940_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10940_28 temp10940_25)
             (bvslt temp10940_32 temp10940_29)
             (bvslt temp10940_36 temp10940_33)
             (bvslt temp10940_40 temp10940_37)
             (bvslt temp10940_44 temp10940_41)
             (bvslt temp10940_48 temp10940_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10940_49 #x0000000000000000))
(assert (= var1191714 temp10940_49))
(assert (= temp10940_50 #x0000000000000000))
(assert (= temp10940_51 temp10940_50))
(assert (= temp10940_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10940_51)))
(assert (= temp10940_53 #x0000000000000001))
(assert (= temp10940_54 temp10940_53))
(assert (= temp10940_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10940_54)))
(assert (= temp10940_56 #x0000000000000002))
(assert (= temp10940_57 temp10940_56))
(assert (= temp10940_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10940_57)))
(assert (= temp10940_59 #x0000000000000003))
(assert (= temp10940_60 temp10940_59))
(assert (= temp10940_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10940_60)))
(assert (= temp10940_62 #x0000000000000004))
(assert (= temp10940_63 temp10940_62))
(assert (= temp10940_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10940_63)))
(assert (= temp10940_65 #x0000000000000005))
(assert (= temp10940_66 temp10940_65))
(assert (= temp10940_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10940_66)))
(assert (= temp10940_68 #x0000000000000000))
(assert (= temp10940_69 #x0000000000000000))
(assert (= temp10940_70 temp10940_69))
(assert (= temp10940_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10940_70)))
(assert (= temp10940_72 #x0000000000000000))
(assert (= temp10940_73 #x0000000000000001))
(assert (= temp10940_74 temp10940_73))
(assert (= temp10940_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10940_74)))
(assert (= temp10940_76 #x0000000000000000))
(assert (= temp10940_77 #x0000000000000002))
(assert (= temp10940_78 temp10940_77))
(assert (= temp10940_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10940_78)))
(assert (= temp10940_80 #x0000000000000000))
(assert (= temp10940_81 #x0000000000000003))
(assert (= temp10940_82 temp10940_81))
(assert (= temp10940_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10940_82)))
(assert (= temp10940_84 #x0000000000000000))
(assert (= temp10940_85 #x0000000000000004))
(assert (= temp10940_86 temp10940_85))
(assert (= temp10940_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10940_86)))
(assert (= temp10940_88 #x0000000000000000))
(assert (= temp10940_89 #x0000000000000005))
(assert (= temp10940_90 temp10940_89))
(assert (= temp10940_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10940_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10940_71 temp10940_68)
             (bvslt temp10940_75 temp10940_72)
             (bvslt temp10940_79 temp10940_76)
             (bvslt temp10940_83 temp10940_80)
             (bvslt temp10940_87 temp10940_84)
             (bvslt temp10940_91 temp10940_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10940_92 #x0000000000000000))
(assert (= var1191725 temp10940_92))
(assert (= temp10940_93 #x0000000000000000))
(assert (= temp10940_94 temp10940_93))
(assert (= temp10940_95 (select ARGNAME_stride_NAMEEND_VAL temp10940_94)))
(assert (= temp10940_96 #x0000000000000001))
(assert (= temp10940_97 temp10940_96))
(assert (= temp10940_98 (select ARGNAME_stride_NAMEEND_VAL temp10940_97)))
(assert (= temp10940_99 #x0000000000000002))
(assert (= temp10940_100 temp10940_99))
(assert (= temp10940_101 (select ARGNAME_stride_NAMEEND_VAL temp10940_100)))
(assert (= temp10940_102 #x0000000000000003))
(assert (= temp10940_103 temp10940_102))
(assert (= temp10940_104 (select ARGNAME_stride_NAMEEND_VAL temp10940_103)))
(assert (= temp10940_105 #x0000000000000004))
(assert (= temp10940_106 temp10940_105))
(assert (= temp10940_107 (select ARGNAME_stride_NAMEEND_VAL temp10940_106)))
(assert (= temp10940_108 #x0000000000000005))
(assert (= temp10940_109 temp10940_108))
(assert (= temp10940_110 (select ARGNAME_stride_NAMEEND_VAL temp10940_109)))
(assert (= temp10940_111 #x0000000000000000))
(assert (= temp10940_112 #x0000000000000000))
(assert (= temp10940_113 temp10940_112))
(assert (= temp10940_114 (select ARGNAME_stride_NAMEEND_VAL temp10940_113)))
(assert (= temp10940_115 #x0000000000000000))
(assert (= temp10940_116 #x0000000000000001))
(assert (= temp10940_117 temp10940_116))
(assert (= temp10940_118 (select ARGNAME_stride_NAMEEND_VAL temp10940_117)))
(assert (= temp10940_119 #x0000000000000000))
(assert (= temp10940_120 #x0000000000000002))
(assert (= temp10940_121 temp10940_120))
(assert (= temp10940_122 (select ARGNAME_stride_NAMEEND_VAL temp10940_121)))
(assert (= temp10940_123 #x0000000000000000))
(assert (= temp10940_124 #x0000000000000003))
(assert (= temp10940_125 temp10940_124))
(assert (= temp10940_126 (select ARGNAME_stride_NAMEEND_VAL temp10940_125)))
(assert (= temp10940_127 #x0000000000000000))
(assert (= temp10940_128 #x0000000000000004))
(assert (= temp10940_129 temp10940_128))
(assert (= temp10940_130 (select ARGNAME_stride_NAMEEND_VAL temp10940_129)))
(assert (= temp10940_131 #x0000000000000000))
(assert (= temp10940_132 #x0000000000000005))
(assert (= temp10940_133 temp10940_132))
(assert (= temp10940_134 (select ARGNAME_stride_NAMEEND_VAL temp10940_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10940_114 temp10940_111)
             (bvsle temp10940_118 temp10940_115)
             (bvsle temp10940_122 temp10940_119)
             (bvsle temp10940_126 temp10940_123)
             (bvsle temp10940_130 temp10940_127)
             (bvsle temp10940_134 temp10940_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10940_135 #x0000000000000000))
(assert (= var1191735 temp10940_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10940_136 #x0000000000000001))
(assert (= var1191747 temp10940_136))
(assert (= temp10940_137 #x0000000000000000))
(assert (= var1179826 temp10940_137))
(assert (= temp10940_138 #x0000000000000000))
(assert (= temp10940_139 temp10940_138))
(assert (= temp10940_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10940_139)))
(assert (= temp10940_141 #x0000000000000001))
(assert (= temp10940_142 temp10940_141))
(assert (= temp10940_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10940_142)))
(assert (= temp10940_144 #x0000000000000002))
(assert (= temp10940_145 temp10940_144))
(assert (= temp10940_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10940_145)))
(assert (= temp10940_147 #x0000000000000003))
(assert (= temp10940_148 temp10940_147))
(assert (= temp10940_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10940_148)))
(assert (= temp10940_150 #x0000000000000004))
(assert (= temp10940_151 temp10940_150))
(assert (= temp10940_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10940_151)))
(assert (= temp10940_153 #x0000000000000005))
(assert (= temp10940_154 temp10940_153))
(assert (= temp10940_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10940_154)))
(assert (= temp10940_157 var1179826))
(assert (= temp10940_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10940_157)))
(assert (= temp10940_156 temp10940_158))
(assert (= var1191780
   (ite (bvslt temp10940_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10940_159 #x0000000000000000))
(assert (= var1191780 temp10940_159))
(assert (= temp10940_160 #x0000000000000000))
(assert (= var1179826 temp10940_160))
(assert (= temp10940_162 var1179826))
(assert (= temp10940_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10940_162)))
(assert (= temp10940_161 temp10940_163))
(assert (= var1191802 (bvsmod temp10940_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10940_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10940_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10940_165 #x0000000000000001))
(assert (= var1191803 temp10940_165))
(assert (= temp10940_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10940_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10940_167 #x0000000000000001))
(assert (= var1191823 temp10940_167))
(assert (= temp10940_168 #x0000000000000001))
(assert (= var1180714 temp10940_168))
(assert (= temp10940_169 #x0000000000000000))
(assert (= temp10940_170 temp10940_169))
(assert (= temp10940_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10940_170)))
(assert (= temp10940_172 #x0000000000000001))
(assert (= temp10940_173 temp10940_172))
(assert (= temp10940_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10940_173)))
(assert (= temp10940_175 #x0000000000000002))
(assert (= temp10940_176 temp10940_175))
(assert (= temp10940_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10940_176)))
(assert (= temp10940_178 #x0000000000000003))
(assert (= temp10940_179 temp10940_178))
(assert (= temp10940_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10940_179)))
(assert (= temp10940_181 #x0000000000000004))
(assert (= temp10940_182 temp10940_181))
(assert (= temp10940_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10940_182)))
(assert (= temp10940_184 #x0000000000000005))
(assert (= temp10940_185 temp10940_184))
(assert (= temp10940_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10940_185)))
(assert (= temp10940_187 #x0000000000000000))
(assert (= temp10940_188
   (ite (bvslt var1180714 temp10940_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10940_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10940_188)))
(assert (= var1191831 temp10940_189))
(assert (bvslt (ite (bvslt var1180714 temp10940_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10940_190 #x0000000000000001))
(assert (= var1180714 temp10940_190))
(assert (= temp10940_192 var1180714))
(assert (= temp10940_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10940_192)))
(assert (= temp10940_191 temp10940_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10940_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10940_194 #x0000000000000001))
(assert (= var1191836 temp10940_194))
(assert (= temp10940_195 #x0000000000000000))
(assert (= var1179826 temp10940_195))
(assert (= temp10940_197 var1179826))
(assert (= temp10940_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10940_197)))
(assert (= temp10940_196 temp10940_198))
(assert (= temp10940_199 #x0000000000000002))
(assert (= var1586025 temp10940_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10940_200 #x0000000000000001))
(assert (= var1191993 temp10940_200))
(assert (= temp10940_201 #x0000000000000001))
(assert (= var2700303 temp10940_201))
(assert (= temp10940_202 #x0000000000000001))
(assert (= var2962447 temp10940_202))
(assert (= temp10940_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10940_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10940_204 #x0000000000000001))
(assert (= var211058 temp10940_204))
(assert (= temp10940_205 #x0000000000000001))
(assert (= var211188 temp10940_205))
(assert (= var3879401 var211188))
(assert (= temp10940_206 #x0000000000000000))
(assert (= var3866802 temp10940_206))
(assert (= temp10940_207 #x0000000000000000))
(assert (= temp10940_208
   (ite (bvslt var3866802 temp10940_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10940_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10940_208)))
(assert (= var3879420 temp10940_209))
(assert (bvslt (ite (bvslt var3866802 temp10940_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10940_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10940_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10940_211 #x0000000000000000))
(assert (= var3879421 temp10940_211))
(assert (= temp10940_212 #x0000000000000001))
(assert (= var3867690 temp10940_212))
(assert (= temp10940_213 #x0000000000000000))
(assert (= temp10940_214
   (ite (bvslt var3867690 temp10940_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10940_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10940_214)))
(assert (= var3879423 temp10940_215))
(assert (bvslt (ite (bvslt var3867690 temp10940_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10940_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10940_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10940_217 #x0000000000000001))
(assert (= var3879424 temp10940_217))
(assert (= temp10940_218 #x0000000000000000))
(assert (= var4133117 temp10940_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10940_219 #x0000000000000002))
(assert (= var4339331 temp10940_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10940_220 #x0000000000000000))
(assert (= var4404892 temp10940_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp10940_221 #x0000000000000001))
(assert (= var211058 temp10940_221))
(assert (= temp10940_222 #x0000000000000000))
(assert (= var6238996 temp10940_222))
(assert (= var6238963 var6238996))
(assert (= var6107527 var6238963))
(assert (= var6107523 var6107527))
(assert (= var212669 var6107523))
(assert (= temp10940_223 #x0000000000000000))
(assert (= var212669 temp10940_223))
(model-add temp10940_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10940_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10940_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10940_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




