(declare-fun temp676_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp676_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp676_3 () (_ BitVec 64))
(declare-fun temp676_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp676_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp676_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp676_7 () (_ BitVec 64))
(declare-fun temp676_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp676_9 () (_ BitVec 64))
(declare-fun temp676_10 () (_ BitVec 64))
(declare-fun temp676_11 () (_ BitVec 64))
(declare-fun temp676_12 () (_ BitVec 64))
(declare-fun temp676_13 () (_ BitVec 64))
(declare-fun temp676_14 () (_ BitVec 64))
(declare-fun temp676_15 () (_ BitVec 64))
(declare-fun temp676_16 () (_ BitVec 64))
(declare-fun temp676_17 () (_ BitVec 64))
(declare-fun temp676_18 () (_ BitVec 64))
(declare-fun temp676_19 () (_ BitVec 64))
(declare-fun temp676_20 () (_ BitVec 64))
(declare-fun temp676_21 () (_ BitVec 64))
(declare-fun temp676_22 () (_ BitVec 64))
(declare-fun temp676_23 () (_ BitVec 64))
(declare-fun temp676_24 () (_ BitVec 64))
(declare-fun temp676_25 () (_ BitVec 64))
(declare-fun temp676_26 () (_ BitVec 64))
(declare-fun temp676_27 () (_ BitVec 64))
(declare-fun temp676_28 () (_ BitVec 64))
(declare-fun temp676_29 () (_ BitVec 64))
(declare-fun temp676_30 () (_ BitVec 64))
(declare-fun temp676_31 () (_ BitVec 64))
(declare-fun temp676_32 () (_ BitVec 64))
(declare-fun temp676_33 () (_ BitVec 64))
(declare-fun temp676_34 () (_ BitVec 64))
(declare-fun temp676_35 () (_ BitVec 64))
(declare-fun temp676_36 () (_ BitVec 64))
(declare-fun temp676_37 () (_ BitVec 64))
(declare-fun temp676_38 () (_ BitVec 64))
(declare-fun temp676_39 () (_ BitVec 64))
(declare-fun temp676_40 () (_ BitVec 64))
(declare-fun temp676_41 () (_ BitVec 64))
(declare-fun temp676_42 () (_ BitVec 64))
(declare-fun temp676_43 () (_ BitVec 64))
(declare-fun temp676_44 () (_ BitVec 64))
(declare-fun temp676_45 () (_ BitVec 64))
(declare-fun temp676_46 () (_ BitVec 64))
(declare-fun temp676_47 () (_ BitVec 64))
(declare-fun temp676_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp676_49 () (_ BitVec 64))
(declare-fun temp676_50 () (_ BitVec 64))
(declare-fun temp676_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp676_52 () (_ BitVec 64))
(declare-fun temp676_53 () (_ BitVec 64))
(declare-fun temp676_54 () (_ BitVec 64))
(declare-fun temp676_55 () (_ BitVec 64))
(declare-fun temp676_56 () (_ BitVec 64))
(declare-fun temp676_57 () (_ BitVec 64))
(declare-fun temp676_58 () (_ BitVec 64))
(declare-fun temp676_59 () (_ BitVec 64))
(declare-fun temp676_60 () (_ BitVec 64))
(declare-fun temp676_61 () (_ BitVec 64))
(declare-fun temp676_62 () (_ BitVec 64))
(declare-fun temp676_63 () (_ BitVec 64))
(declare-fun temp676_64 () (_ BitVec 64))
(declare-fun temp676_65 () (_ BitVec 64))
(declare-fun temp676_66 () (_ BitVec 64))
(declare-fun temp676_67 () (_ BitVec 64))
(declare-fun temp676_68 () (_ BitVec 64))
(declare-fun temp676_69 () (_ BitVec 64))
(declare-fun temp676_70 () (_ BitVec 64))
(declare-fun temp676_71 () (_ BitVec 64))
(declare-fun temp676_72 () (_ BitVec 64))
(declare-fun temp676_73 () (_ BitVec 64))
(declare-fun temp676_74 () (_ BitVec 64))
(declare-fun temp676_75 () (_ BitVec 64))
(declare-fun temp676_76 () (_ BitVec 64))
(declare-fun temp676_77 () (_ BitVec 64))
(declare-fun temp676_78 () (_ BitVec 64))
(declare-fun temp676_79 () (_ BitVec 64))
(declare-fun temp676_80 () (_ BitVec 64))
(declare-fun temp676_81 () (_ BitVec 64))
(declare-fun temp676_82 () (_ BitVec 64))
(declare-fun temp676_83 () (_ BitVec 64))
(declare-fun temp676_84 () (_ BitVec 64))
(declare-fun temp676_85 () (_ BitVec 64))
(declare-fun temp676_86 () (_ BitVec 64))
(declare-fun temp676_87 () (_ BitVec 64))
(declare-fun temp676_88 () (_ BitVec 64))
(declare-fun temp676_89 () (_ BitVec 64))
(declare-fun temp676_90 () (_ BitVec 64))
(declare-fun temp676_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp676_92 () (_ BitVec 64))
(declare-fun temp676_93 () (_ BitVec 64))
(declare-fun temp676_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp676_95 () (_ BitVec 64))
(declare-fun temp676_96 () (_ BitVec 64))
(declare-fun temp676_97 () (_ BitVec 64))
(declare-fun temp676_98 () (_ BitVec 64))
(declare-fun temp676_99 () (_ BitVec 64))
(declare-fun temp676_100 () (_ BitVec 64))
(declare-fun temp676_101 () (_ BitVec 64))
(declare-fun temp676_102 () (_ BitVec 64))
(declare-fun temp676_103 () (_ BitVec 64))
(declare-fun temp676_104 () (_ BitVec 64))
(declare-fun temp676_105 () (_ BitVec 64))
(declare-fun temp676_106 () (_ BitVec 64))
(declare-fun temp676_107 () (_ BitVec 64))
(declare-fun temp676_108 () (_ BitVec 64))
(declare-fun temp676_109 () (_ BitVec 64))
(declare-fun temp676_110 () (_ BitVec 64))
(declare-fun temp676_111 () (_ BitVec 64))
(declare-fun temp676_112 () (_ BitVec 64))
(declare-fun temp676_113 () (_ BitVec 64))
(declare-fun temp676_114 () (_ BitVec 64))
(declare-fun temp676_115 () (_ BitVec 64))
(declare-fun temp676_116 () (_ BitVec 64))
(declare-fun temp676_117 () (_ BitVec 64))
(declare-fun temp676_118 () (_ BitVec 64))
(declare-fun temp676_119 () (_ BitVec 64))
(declare-fun temp676_120 () (_ BitVec 64))
(declare-fun temp676_121 () (_ BitVec 64))
(declare-fun temp676_122 () (_ BitVec 64))
(declare-fun temp676_123 () (_ BitVec 64))
(declare-fun temp676_124 () (_ BitVec 64))
(declare-fun temp676_125 () (_ BitVec 64))
(declare-fun temp676_126 () (_ BitVec 64))
(declare-fun temp676_127 () (_ BitVec 64))
(declare-fun temp676_128 () (_ BitVec 64))
(declare-fun temp676_129 () (_ BitVec 64))
(declare-fun temp676_130 () (_ BitVec 64))
(declare-fun temp676_131 () (_ BitVec 64))
(declare-fun temp676_132 () (_ BitVec 64))
(declare-fun temp676_133 () (_ BitVec 64))
(declare-fun temp676_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp676_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp676_136 () (_ BitVec 64))
(declare-fun temp676_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp676_138 () (_ BitVec 64))
(declare-fun temp676_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp676_140 () (_ BitVec 64))
(declare-fun temp676_141 () (_ BitVec 64))
(declare-fun temp676_142 () (_ BitVec 64))
(declare-fun temp676_143 () (_ BitVec 64))
(declare-fun temp676_144 () (_ BitVec 64))
(declare-fun temp676_145 () (_ BitVec 64))
(declare-fun temp676_146 () (_ BitVec 64))
(declare-fun temp676_147 () (_ BitVec 64))
(declare-fun temp676_148 () (_ BitVec 64))
(declare-fun temp676_149 () (_ BitVec 64))
(declare-fun temp676_150 () (_ BitVec 64))
(declare-fun temp676_151 () (_ BitVec 64))
(declare-fun temp676_152 () (_ BitVec 64))
(declare-fun temp676_153 () (_ BitVec 64))
(declare-fun temp676_154 () (_ BitVec 64))
(declare-fun temp676_155 () (_ BitVec 64))
(declare-fun temp676_157 () (_ BitVec 64))
(declare-fun temp676_158 () (_ BitVec 64))
(declare-fun temp676_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp676_159 () (_ BitVec 64))
(declare-fun temp676_160 () (_ BitVec 64))
(declare-fun temp676_162 () (_ BitVec 64))
(declare-fun temp676_163 () (_ BitVec 64))
(declare-fun temp676_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp676_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp676_165 () (_ BitVec 64))
(declare-fun temp676_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp676_167 () (_ BitVec 64))
(declare-fun temp676_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp676_169 () (_ BitVec 64))
(declare-fun temp676_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp676_171 () (_ BitVec 64))
(declare-fun temp676_172 () (_ BitVec 64))
(declare-fun temp676_173 () (_ BitVec 64))
(declare-fun temp676_174 () (_ BitVec 64))
(declare-fun temp676_175 () (_ BitVec 64))
(declare-fun temp676_176 () (_ BitVec 64))
(declare-fun temp676_177 () (_ BitVec 64))
(declare-fun temp676_178 () (_ BitVec 64))
(declare-fun temp676_179 () (_ BitVec 64))
(declare-fun temp676_180 () (_ BitVec 64))
(declare-fun temp676_181 () (_ BitVec 64))
(declare-fun temp676_182 () (_ BitVec 64))
(declare-fun temp676_183 () (_ BitVec 64))
(declare-fun temp676_184 () (_ BitVec 64))
(declare-fun temp676_185 () (_ BitVec 64))
(declare-fun temp676_186 () (_ BitVec 64))
(declare-fun temp676_187 () (_ BitVec 64))
(declare-fun temp676_188 () (_ BitVec 64))
(declare-fun temp676_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp676_190 () (_ BitVec 64))
(declare-fun temp676_192 () (_ BitVec 64))
(declare-fun temp676_193 () (_ BitVec 64))
(declare-fun temp676_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp676_194 () (_ BitVec 64))
(declare-fun temp676_195 () (_ BitVec 64))
(declare-fun temp676_197 () (_ BitVec 64))
(declare-fun temp676_198 () (_ BitVec 64))
(declare-fun temp676_196 () (_ BitVec 64))
(declare-fun temp676_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp676_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp676_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp676_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp676_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp676_204 () (_ BitVec 64))
(declare-fun temp676_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp676_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp676_207 () (_ BitVec 64))
(declare-fun temp676_208 () (_ BitVec 64))
(declare-fun temp676_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp676_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp676_211 () (_ BitVec 64))
(declare-fun temp676_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp676_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp676_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp676_216 () (_ BitVec 64))
(declare-fun temp676_215 () (_ BitVec 64))
(declare-fun temp676_217 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp676_218 () (_ BitVec 64))
(declare-fun temp676_219 () (_ BitVec 64))
(declare-fun temp676_220 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp676_221 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp676_222 () (_ BitVec 64))
(declare-fun temp676_224 () (_ BitVec 64))
(declare-fun temp676_223 () (_ BitVec 64))
(declare-fun temp676_225 () (_ BitVec 64))
(declare-fun temp676_226 () (_ BitVec 64))
(declare-fun var5583636 () (_ BitVec 64))
(declare-fun var5583603 () (_ BitVec 64))
(declare-fun var5452167 () (_ BitVec 64))
(declare-fun var5452163 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp676_227 () (_ BitVec 64))
(assert (= temp676_1 #x0000000000000001))
(assert (= var77203 temp676_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp676_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp676_2)))
(assert (= temp676_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp676_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp676_4 #x0000000000000000))
(assert (= var210941 temp676_4))
(assert (= temp676_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp676_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp676_6 #x0000000000000000))
(assert (= var210986 temp676_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp676_7 #x0000000000000000))
(assert (= temp676_8 temp676_7))
(assert (= temp676_9 (select ARGNAME_padding_NAMEEND_VAL temp676_8)))
(assert (= temp676_10 #x0000000000000001))
(assert (= temp676_11 temp676_10))
(assert (= temp676_12 (select ARGNAME_padding_NAMEEND_VAL temp676_11)))
(assert (= temp676_13 #x0000000000000002))
(assert (= temp676_14 temp676_13))
(assert (= temp676_15 (select ARGNAME_padding_NAMEEND_VAL temp676_14)))
(assert (= temp676_16 #x0000000000000003))
(assert (= temp676_17 temp676_16))
(assert (= temp676_18 (select ARGNAME_padding_NAMEEND_VAL temp676_17)))
(assert (= temp676_19 #x0000000000000004))
(assert (= temp676_20 temp676_19))
(assert (= temp676_21 (select ARGNAME_padding_NAMEEND_VAL temp676_20)))
(assert (= temp676_22 #x0000000000000005))
(assert (= temp676_23 temp676_22))
(assert (= temp676_24 (select ARGNAME_padding_NAMEEND_VAL temp676_23)))
(assert (= temp676_25 #x0000000000000000))
(assert (= temp676_26 #x0000000000000000))
(assert (= temp676_27 temp676_26))
(assert (= temp676_28 (select ARGNAME_padding_NAMEEND_VAL temp676_27)))
(assert (= temp676_29 #x0000000000000000))
(assert (= temp676_30 #x0000000000000001))
(assert (= temp676_31 temp676_30))
(assert (= temp676_32 (select ARGNAME_padding_NAMEEND_VAL temp676_31)))
(assert (= temp676_33 #x0000000000000000))
(assert (= temp676_34 #x0000000000000002))
(assert (= temp676_35 temp676_34))
(assert (= temp676_36 (select ARGNAME_padding_NAMEEND_VAL temp676_35)))
(assert (= temp676_37 #x0000000000000000))
(assert (= temp676_38 #x0000000000000003))
(assert (= temp676_39 temp676_38))
(assert (= temp676_40 (select ARGNAME_padding_NAMEEND_VAL temp676_39)))
(assert (= temp676_41 #x0000000000000000))
(assert (= temp676_42 #x0000000000000004))
(assert (= temp676_43 temp676_42))
(assert (= temp676_44 (select ARGNAME_padding_NAMEEND_VAL temp676_43)))
(assert (= temp676_45 #x0000000000000000))
(assert (= temp676_46 #x0000000000000005))
(assert (= temp676_47 temp676_46))
(assert (= temp676_48 (select ARGNAME_padding_NAMEEND_VAL temp676_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp676_28 temp676_25)
             (bvslt temp676_32 temp676_29)
             (bvslt temp676_36 temp676_33)
             (bvslt temp676_40 temp676_37)
             (bvslt temp676_44 temp676_41)
             (bvslt temp676_48 temp676_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp676_49 #x0000000000000000))
(assert (= var1191714 temp676_49))
(assert (= temp676_50 #x0000000000000000))
(assert (= temp676_51 temp676_50))
(assert (= temp676_52 (select ARGNAME_output_padding_NAMEEND_VAL temp676_51)))
(assert (= temp676_53 #x0000000000000001))
(assert (= temp676_54 temp676_53))
(assert (= temp676_55 (select ARGNAME_output_padding_NAMEEND_VAL temp676_54)))
(assert (= temp676_56 #x0000000000000002))
(assert (= temp676_57 temp676_56))
(assert (= temp676_58 (select ARGNAME_output_padding_NAMEEND_VAL temp676_57)))
(assert (= temp676_59 #x0000000000000003))
(assert (= temp676_60 temp676_59))
(assert (= temp676_61 (select ARGNAME_output_padding_NAMEEND_VAL temp676_60)))
(assert (= temp676_62 #x0000000000000004))
(assert (= temp676_63 temp676_62))
(assert (= temp676_64 (select ARGNAME_output_padding_NAMEEND_VAL temp676_63)))
(assert (= temp676_65 #x0000000000000005))
(assert (= temp676_66 temp676_65))
(assert (= temp676_67 (select ARGNAME_output_padding_NAMEEND_VAL temp676_66)))
(assert (= temp676_68 #x0000000000000000))
(assert (= temp676_69 #x0000000000000000))
(assert (= temp676_70 temp676_69))
(assert (= temp676_71 (select ARGNAME_output_padding_NAMEEND_VAL temp676_70)))
(assert (= temp676_72 #x0000000000000000))
(assert (= temp676_73 #x0000000000000001))
(assert (= temp676_74 temp676_73))
(assert (= temp676_75 (select ARGNAME_output_padding_NAMEEND_VAL temp676_74)))
(assert (= temp676_76 #x0000000000000000))
(assert (= temp676_77 #x0000000000000002))
(assert (= temp676_78 temp676_77))
(assert (= temp676_79 (select ARGNAME_output_padding_NAMEEND_VAL temp676_78)))
(assert (= temp676_80 #x0000000000000000))
(assert (= temp676_81 #x0000000000000003))
(assert (= temp676_82 temp676_81))
(assert (= temp676_83 (select ARGNAME_output_padding_NAMEEND_VAL temp676_82)))
(assert (= temp676_84 #x0000000000000000))
(assert (= temp676_85 #x0000000000000004))
(assert (= temp676_86 temp676_85))
(assert (= temp676_87 (select ARGNAME_output_padding_NAMEEND_VAL temp676_86)))
(assert (= temp676_88 #x0000000000000000))
(assert (= temp676_89 #x0000000000000005))
(assert (= temp676_90 temp676_89))
(assert (= temp676_91 (select ARGNAME_output_padding_NAMEEND_VAL temp676_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp676_71 temp676_68)
             (bvslt temp676_75 temp676_72)
             (bvslt temp676_79 temp676_76)
             (bvslt temp676_83 temp676_80)
             (bvslt temp676_87 temp676_84)
             (bvslt temp676_91 temp676_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp676_92 #x0000000000000000))
(assert (= var1191725 temp676_92))
(assert (= temp676_93 #x0000000000000000))
(assert (= temp676_94 temp676_93))
(assert (= temp676_95 (select ARGNAME_stride_NAMEEND_VAL temp676_94)))
(assert (= temp676_96 #x0000000000000001))
(assert (= temp676_97 temp676_96))
(assert (= temp676_98 (select ARGNAME_stride_NAMEEND_VAL temp676_97)))
(assert (= temp676_99 #x0000000000000002))
(assert (= temp676_100 temp676_99))
(assert (= temp676_101 (select ARGNAME_stride_NAMEEND_VAL temp676_100)))
(assert (= temp676_102 #x0000000000000003))
(assert (= temp676_103 temp676_102))
(assert (= temp676_104 (select ARGNAME_stride_NAMEEND_VAL temp676_103)))
(assert (= temp676_105 #x0000000000000004))
(assert (= temp676_106 temp676_105))
(assert (= temp676_107 (select ARGNAME_stride_NAMEEND_VAL temp676_106)))
(assert (= temp676_108 #x0000000000000005))
(assert (= temp676_109 temp676_108))
(assert (= temp676_110 (select ARGNAME_stride_NAMEEND_VAL temp676_109)))
(assert (= temp676_111 #x0000000000000000))
(assert (= temp676_112 #x0000000000000000))
(assert (= temp676_113 temp676_112))
(assert (= temp676_114 (select ARGNAME_stride_NAMEEND_VAL temp676_113)))
(assert (= temp676_115 #x0000000000000000))
(assert (= temp676_116 #x0000000000000001))
(assert (= temp676_117 temp676_116))
(assert (= temp676_118 (select ARGNAME_stride_NAMEEND_VAL temp676_117)))
(assert (= temp676_119 #x0000000000000000))
(assert (= temp676_120 #x0000000000000002))
(assert (= temp676_121 temp676_120))
(assert (= temp676_122 (select ARGNAME_stride_NAMEEND_VAL temp676_121)))
(assert (= temp676_123 #x0000000000000000))
(assert (= temp676_124 #x0000000000000003))
(assert (= temp676_125 temp676_124))
(assert (= temp676_126 (select ARGNAME_stride_NAMEEND_VAL temp676_125)))
(assert (= temp676_127 #x0000000000000000))
(assert (= temp676_128 #x0000000000000004))
(assert (= temp676_129 temp676_128))
(assert (= temp676_130 (select ARGNAME_stride_NAMEEND_VAL temp676_129)))
(assert (= temp676_131 #x0000000000000000))
(assert (= temp676_132 #x0000000000000005))
(assert (= temp676_133 temp676_132))
(assert (= temp676_134 (select ARGNAME_stride_NAMEEND_VAL temp676_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp676_114 temp676_111)
             (bvsle temp676_118 temp676_115)
             (bvsle temp676_122 temp676_119)
             (bvsle temp676_126 temp676_123)
             (bvsle temp676_130 temp676_127)
             (bvsle temp676_134 temp676_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp676_135 #x0000000000000000))
(assert (= var1191735 temp676_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp676_136 #x0000000000000001))
(assert (= var1191747 temp676_136))
(assert (= temp676_137 #x0000000000000000))
(assert (= var1179826 temp676_137))
(assert (= temp676_138 #x0000000000000000))
(assert (= temp676_139 temp676_138))
(assert (= temp676_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp676_139)))
(assert (= temp676_141 #x0000000000000001))
(assert (= temp676_142 temp676_141))
(assert (= temp676_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp676_142)))
(assert (= temp676_144 #x0000000000000002))
(assert (= temp676_145 temp676_144))
(assert (= temp676_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp676_145)))
(assert (= temp676_147 #x0000000000000003))
(assert (= temp676_148 temp676_147))
(assert (= temp676_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp676_148)))
(assert (= temp676_150 #x0000000000000004))
(assert (= temp676_151 temp676_150))
(assert (= temp676_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp676_151)))
(assert (= temp676_153 #x0000000000000005))
(assert (= temp676_154 temp676_153))
(assert (= temp676_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp676_154)))
(assert (= temp676_157 var1179826))
(assert (= temp676_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp676_157)))
(assert (= temp676_156 temp676_158))
(assert (= var1191780
   (ite (bvslt temp676_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp676_159 #x0000000000000000))
(assert (= var1191780 temp676_159))
(assert (= temp676_160 #x0000000000000000))
(assert (= var1179826 temp676_160))
(assert (= temp676_162 var1179826))
(assert (= temp676_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp676_162)))
(assert (= temp676_161 temp676_163))
(assert (= var1191802 (bvsmod temp676_161 ARGNAME_groups_NAMEEND)))
(assert (= temp676_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp676_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp676_165 #x0000000000000001))
(assert (= var1191803 temp676_165))
(assert (= temp676_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp676_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp676_167 #x0000000000000001))
(assert (= var1191823 temp676_167))
(assert (= temp676_168 #x0000000000000001))
(assert (= var1180714 temp676_168))
(assert (= temp676_169 #x0000000000000000))
(assert (= temp676_170 temp676_169))
(assert (= temp676_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp676_170)))
(assert (= temp676_172 #x0000000000000001))
(assert (= temp676_173 temp676_172))
(assert (= temp676_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp676_173)))
(assert (= temp676_175 #x0000000000000002))
(assert (= temp676_176 temp676_175))
(assert (= temp676_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp676_176)))
(assert (= temp676_178 #x0000000000000003))
(assert (= temp676_179 temp676_178))
(assert (= temp676_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp676_179)))
(assert (= temp676_181 #x0000000000000004))
(assert (= temp676_182 temp676_181))
(assert (= temp676_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp676_182)))
(assert (= temp676_184 #x0000000000000005))
(assert (= temp676_185 temp676_184))
(assert (= temp676_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp676_185)))
(assert (= temp676_187 #x0000000000000000))
(assert (= temp676_188
   (ite (bvslt var1180714 temp676_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp676_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp676_188)))
(assert (= var1191831 temp676_189))
(assert (bvslt (ite (bvslt var1180714 temp676_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp676_190 #x0000000000000001))
(assert (= var1180714 temp676_190))
(assert (= temp676_192 var1180714))
(assert (= temp676_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp676_192)))
(assert (= temp676_191 temp676_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp676_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp676_194 #x0000000000000001))
(assert (= var1191836 temp676_194))
(assert (= temp676_195 #x0000000000000000))
(assert (= var1179826 temp676_195))
(assert (= temp676_197 var1179826))
(assert (= temp676_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp676_197)))
(assert (= temp676_196 temp676_198))
(assert (= temp676_199 #x0000000000000002))
(assert (= var1586025 temp676_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp676_200 #x0000000000000001))
(assert (= var1191993 temp676_200))
(assert (= temp676_201 #x0000000000000001))
(assert (= var2700303 temp676_201))
(assert (= temp676_202 #x0000000000000001))
(assert (= var2962447 temp676_202))
(assert (= temp676_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp676_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp676_204 #x0000000000000001))
(assert (= var211058 temp676_204))
(assert (= temp676_205 #x0000000000000001))
(assert (= var211188 temp676_205))
(assert (= var3879401 var211188))
(assert (= temp676_206 #x0000000000000000))
(assert (= var3866802 temp676_206))
(assert (= temp676_207 #x0000000000000000))
(assert (= temp676_208
   (ite (bvslt var3866802 temp676_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp676_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp676_208)))
(assert (= var3879420 temp676_209))
(assert (bvslt (ite (bvslt var3866802 temp676_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp676_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp676_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp676_211 #x0000000000000001))
(assert (= var3879421 temp676_211))
(assert (= temp676_212 #x0000000000000000))
(assert (= var4079423 temp676_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp676_213 #x0000000000000002))
(assert (= var4208259 temp676_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp676_214 #x0000000000000000))
(assert (= var4273820 temp676_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp676_216 #xffffffffffffffff))
(assert (= temp676_215 temp676_216))
(assert (= temp676_217 #x0000000000000001))
(assert (= var197674 temp676_217))
(assert (= temp676_218 #x0000000000000000))
(assert (= temp676_219
   (ite (bvslt var197674 temp676_218)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp676_220 (select ARGNAME_input_NAMEEND_DIMSIZE temp676_219)))
(assert (= var211595 temp676_220))
(assert (bvslt (ite (bvslt var197674 temp676_218)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp676_221 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp676_221) #x0000000000000001 #x0000000000000000)))
(assert (= temp676_222 #x0000000000000001))
(assert (= var211596 temp676_222))
(assert (= temp676_224 #xffffffffffffffff))
(assert (= temp676_223 temp676_224))
(assert (= temp676_225 #x0000000000000001))
(assert (= var211058 temp676_225))
(assert (= temp676_226 #x0000000000000000))
(assert (= var5583636 temp676_226))
(assert (= var5583603 var5583636))
(assert (= var5452167 var5583603))
(assert (= var5452163 var5452167))
(assert (= var212669 var5452163))
(assert (= temp676_227 #x0000000000000000))
(assert (= var212669 temp676_227))
(model-add temp676_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp676_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp676_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp676_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





