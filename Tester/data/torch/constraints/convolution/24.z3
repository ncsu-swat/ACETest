(declare-fun temp32_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp32_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp32_3 () (_ BitVec 64))
(declare-fun temp32_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp32_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp32_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp32_7 () (_ BitVec 64))
(declare-fun temp32_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp32_9 () (_ BitVec 64))
(declare-fun temp32_10 () (_ BitVec 64))
(declare-fun temp32_11 () (_ BitVec 64))
(declare-fun temp32_12 () (_ BitVec 64))
(declare-fun temp32_13 () (_ BitVec 64))
(declare-fun temp32_14 () (_ BitVec 64))
(declare-fun temp32_15 () (_ BitVec 64))
(declare-fun temp32_16 () (_ BitVec 64))
(declare-fun temp32_17 () (_ BitVec 64))
(declare-fun temp32_18 () (_ BitVec 64))
(declare-fun temp32_19 () (_ BitVec 64))
(declare-fun temp32_20 () (_ BitVec 64))
(declare-fun temp32_21 () (_ BitVec 64))
(declare-fun temp32_22 () (_ BitVec 64))
(declare-fun temp32_23 () (_ BitVec 64))
(declare-fun temp32_24 () (_ BitVec 64))
(declare-fun temp32_25 () (_ BitVec 64))
(declare-fun temp32_26 () (_ BitVec 64))
(declare-fun temp32_27 () (_ BitVec 64))
(declare-fun temp32_28 () (_ BitVec 64))
(declare-fun temp32_29 () (_ BitVec 64))
(declare-fun temp32_30 () (_ BitVec 64))
(declare-fun temp32_31 () (_ BitVec 64))
(declare-fun temp32_32 () (_ BitVec 64))
(declare-fun temp32_33 () (_ BitVec 64))
(declare-fun temp32_34 () (_ BitVec 64))
(declare-fun temp32_35 () (_ BitVec 64))
(declare-fun temp32_36 () (_ BitVec 64))
(declare-fun temp32_37 () (_ BitVec 64))
(declare-fun temp32_38 () (_ BitVec 64))
(declare-fun temp32_39 () (_ BitVec 64))
(declare-fun temp32_40 () (_ BitVec 64))
(declare-fun temp32_41 () (_ BitVec 64))
(declare-fun temp32_42 () (_ BitVec 64))
(declare-fun temp32_43 () (_ BitVec 64))
(declare-fun temp32_44 () (_ BitVec 64))
(declare-fun temp32_45 () (_ BitVec 64))
(declare-fun temp32_46 () (_ BitVec 64))
(declare-fun temp32_47 () (_ BitVec 64))
(declare-fun temp32_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp32_49 () (_ BitVec 64))
(declare-fun temp32_50 () (_ BitVec 64))
(declare-fun temp32_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp32_52 () (_ BitVec 64))
(declare-fun temp32_53 () (_ BitVec 64))
(declare-fun temp32_54 () (_ BitVec 64))
(declare-fun temp32_55 () (_ BitVec 64))
(declare-fun temp32_56 () (_ BitVec 64))
(declare-fun temp32_57 () (_ BitVec 64))
(declare-fun temp32_58 () (_ BitVec 64))
(declare-fun temp32_59 () (_ BitVec 64))
(declare-fun temp32_60 () (_ BitVec 64))
(declare-fun temp32_61 () (_ BitVec 64))
(declare-fun temp32_62 () (_ BitVec 64))
(declare-fun temp32_63 () (_ BitVec 64))
(declare-fun temp32_64 () (_ BitVec 64))
(declare-fun temp32_65 () (_ BitVec 64))
(declare-fun temp32_66 () (_ BitVec 64))
(declare-fun temp32_67 () (_ BitVec 64))
(declare-fun temp32_68 () (_ BitVec 64))
(declare-fun temp32_69 () (_ BitVec 64))
(declare-fun temp32_70 () (_ BitVec 64))
(declare-fun temp32_71 () (_ BitVec 64))
(declare-fun temp32_72 () (_ BitVec 64))
(declare-fun temp32_73 () (_ BitVec 64))
(declare-fun temp32_74 () (_ BitVec 64))
(declare-fun temp32_75 () (_ BitVec 64))
(declare-fun temp32_76 () (_ BitVec 64))
(declare-fun temp32_77 () (_ BitVec 64))
(declare-fun temp32_78 () (_ BitVec 64))
(declare-fun temp32_79 () (_ BitVec 64))
(declare-fun temp32_80 () (_ BitVec 64))
(declare-fun temp32_81 () (_ BitVec 64))
(declare-fun temp32_82 () (_ BitVec 64))
(declare-fun temp32_83 () (_ BitVec 64))
(declare-fun temp32_84 () (_ BitVec 64))
(declare-fun temp32_85 () (_ BitVec 64))
(declare-fun temp32_86 () (_ BitVec 64))
(declare-fun temp32_87 () (_ BitVec 64))
(declare-fun temp32_88 () (_ BitVec 64))
(declare-fun temp32_89 () (_ BitVec 64))
(declare-fun temp32_90 () (_ BitVec 64))
(declare-fun temp32_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp32_92 () (_ BitVec 64))
(declare-fun temp32_93 () (_ BitVec 64))
(declare-fun temp32_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp32_95 () (_ BitVec 64))
(declare-fun temp32_96 () (_ BitVec 64))
(declare-fun temp32_97 () (_ BitVec 64))
(declare-fun temp32_98 () (_ BitVec 64))
(declare-fun temp32_99 () (_ BitVec 64))
(declare-fun temp32_100 () (_ BitVec 64))
(declare-fun temp32_101 () (_ BitVec 64))
(declare-fun temp32_102 () (_ BitVec 64))
(declare-fun temp32_103 () (_ BitVec 64))
(declare-fun temp32_104 () (_ BitVec 64))
(declare-fun temp32_105 () (_ BitVec 64))
(declare-fun temp32_106 () (_ BitVec 64))
(declare-fun temp32_107 () (_ BitVec 64))
(declare-fun temp32_108 () (_ BitVec 64))
(declare-fun temp32_109 () (_ BitVec 64))
(declare-fun temp32_110 () (_ BitVec 64))
(declare-fun temp32_111 () (_ BitVec 64))
(declare-fun temp32_112 () (_ BitVec 64))
(declare-fun temp32_113 () (_ BitVec 64))
(declare-fun temp32_114 () (_ BitVec 64))
(declare-fun temp32_115 () (_ BitVec 64))
(declare-fun temp32_116 () (_ BitVec 64))
(declare-fun temp32_117 () (_ BitVec 64))
(declare-fun temp32_118 () (_ BitVec 64))
(declare-fun temp32_119 () (_ BitVec 64))
(declare-fun temp32_120 () (_ BitVec 64))
(declare-fun temp32_121 () (_ BitVec 64))
(declare-fun temp32_122 () (_ BitVec 64))
(declare-fun temp32_123 () (_ BitVec 64))
(declare-fun temp32_124 () (_ BitVec 64))
(declare-fun temp32_125 () (_ BitVec 64))
(declare-fun temp32_126 () (_ BitVec 64))
(declare-fun temp32_127 () (_ BitVec 64))
(declare-fun temp32_128 () (_ BitVec 64))
(declare-fun temp32_129 () (_ BitVec 64))
(declare-fun temp32_130 () (_ BitVec 64))
(declare-fun temp32_131 () (_ BitVec 64))
(declare-fun temp32_132 () (_ BitVec 64))
(declare-fun temp32_133 () (_ BitVec 64))
(declare-fun temp32_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp32_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp32_136 () (_ BitVec 64))
(declare-fun temp32_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp32_138 () (_ BitVec 64))
(declare-fun temp32_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp32_140 () (_ BitVec 64))
(declare-fun temp32_141 () (_ BitVec 64))
(declare-fun temp32_142 () (_ BitVec 64))
(declare-fun temp32_143 () (_ BitVec 64))
(declare-fun temp32_144 () (_ BitVec 64))
(declare-fun temp32_145 () (_ BitVec 64))
(declare-fun temp32_146 () (_ BitVec 64))
(declare-fun temp32_147 () (_ BitVec 64))
(declare-fun temp32_148 () (_ BitVec 64))
(declare-fun temp32_149 () (_ BitVec 64))
(declare-fun temp32_150 () (_ BitVec 64))
(declare-fun temp32_151 () (_ BitVec 64))
(declare-fun temp32_152 () (_ BitVec 64))
(declare-fun temp32_153 () (_ BitVec 64))
(declare-fun temp32_154 () (_ BitVec 64))
(declare-fun temp32_155 () (_ BitVec 64))
(declare-fun temp32_157 () (_ BitVec 64))
(declare-fun temp32_158 () (_ BitVec 64))
(declare-fun temp32_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp32_159 () (_ BitVec 64))
(declare-fun temp32_160 () (_ BitVec 64))
(declare-fun temp32_162 () (_ BitVec 64))
(declare-fun temp32_163 () (_ BitVec 64))
(declare-fun temp32_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp32_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp32_165 () (_ BitVec 64))
(declare-fun temp32_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp32_167 () (_ BitVec 64))
(declare-fun temp32_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp32_169 () (_ BitVec 64))
(declare-fun temp32_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp32_171 () (_ BitVec 64))
(declare-fun temp32_172 () (_ BitVec 64))
(declare-fun temp32_173 () (_ BitVec 64))
(declare-fun temp32_174 () (_ BitVec 64))
(declare-fun temp32_175 () (_ BitVec 64))
(declare-fun temp32_176 () (_ BitVec 64))
(declare-fun temp32_177 () (_ BitVec 64))
(declare-fun temp32_178 () (_ BitVec 64))
(declare-fun temp32_179 () (_ BitVec 64))
(declare-fun temp32_180 () (_ BitVec 64))
(declare-fun temp32_181 () (_ BitVec 64))
(declare-fun temp32_182 () (_ BitVec 64))
(declare-fun temp32_183 () (_ BitVec 64))
(declare-fun temp32_184 () (_ BitVec 64))
(declare-fun temp32_185 () (_ BitVec 64))
(declare-fun temp32_186 () (_ BitVec 64))
(declare-fun temp32_187 () (_ BitVec 64))
(declare-fun temp32_188 () (_ BitVec 64))
(declare-fun temp32_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp32_190 () (_ BitVec 64))
(declare-fun temp32_192 () (_ BitVec 64))
(declare-fun temp32_193 () (_ BitVec 64))
(declare-fun temp32_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp32_194 () (_ BitVec 64))
(declare-fun temp32_195 () (_ BitVec 64))
(declare-fun temp32_197 () (_ BitVec 64))
(declare-fun temp32_198 () (_ BitVec 64))
(declare-fun temp32_196 () (_ BitVec 64))
(declare-fun temp32_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp32_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp32_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp32_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp32_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp32_204 () (_ BitVec 64))
(declare-fun temp32_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp32_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp32_207 () (_ BitVec 64))
(declare-fun temp32_208 () (_ BitVec 64))
(declare-fun temp32_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp32_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp32_211 () (_ BitVec 64))
(declare-fun temp32_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp32_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp32_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4993424 () (_ BitVec 64))
(declare-fun var211388 () (_ BitVec 64))
(declare-fun temp32_215 () (_ BitVec 64))
(declare-fun var211389 () (_ BitVec 64))
(declare-fun var5914445 () (_ BitVec 64))
(declare-fun temp32_217 () (_ BitVec 64))
(declare-fun temp32_216 () (_ BitVec 64))
(declare-fun temp32_218 () (_ BitVec 64))
(declare-fun var6753770 () (_ BitVec 64))
(declare-fun temp32_220 () (_ BitVec 64))
(declare-fun temp32_219 () (_ BitVec 64))
(declare-fun temp32_221 () (_ BitVec 64))
(assert (= temp32_1 #x0000000000000001))
(assert (= var77203 temp32_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp32_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp32_2)))
(assert (= temp32_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp32_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp32_4 #x0000000000000000))
(assert (= var210941 temp32_4))
(assert (= temp32_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp32_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp32_6 #x0000000000000000))
(assert (= var210986 temp32_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp32_7 #x0000000000000000))
(assert (= temp32_8 temp32_7))
(assert (= temp32_9 (select ARGNAME_padding_NAMEEND_VAL temp32_8)))
(assert (= temp32_10 #x0000000000000001))
(assert (= temp32_11 temp32_10))
(assert (= temp32_12 (select ARGNAME_padding_NAMEEND_VAL temp32_11)))
(assert (= temp32_13 #x0000000000000002))
(assert (= temp32_14 temp32_13))
(assert (= temp32_15 (select ARGNAME_padding_NAMEEND_VAL temp32_14)))
(assert (= temp32_16 #x0000000000000003))
(assert (= temp32_17 temp32_16))
(assert (= temp32_18 (select ARGNAME_padding_NAMEEND_VAL temp32_17)))
(assert (= temp32_19 #x0000000000000004))
(assert (= temp32_20 temp32_19))
(assert (= temp32_21 (select ARGNAME_padding_NAMEEND_VAL temp32_20)))
(assert (= temp32_22 #x0000000000000005))
(assert (= temp32_23 temp32_22))
(assert (= temp32_24 (select ARGNAME_padding_NAMEEND_VAL temp32_23)))
(assert (= temp32_25 #x0000000000000000))
(assert (= temp32_26 #x0000000000000000))
(assert (= temp32_27 temp32_26))
(assert (= temp32_28 (select ARGNAME_padding_NAMEEND_VAL temp32_27)))
(assert (= temp32_29 #x0000000000000000))
(assert (= temp32_30 #x0000000000000001))
(assert (= temp32_31 temp32_30))
(assert (= temp32_32 (select ARGNAME_padding_NAMEEND_VAL temp32_31)))
(assert (= temp32_33 #x0000000000000000))
(assert (= temp32_34 #x0000000000000002))
(assert (= temp32_35 temp32_34))
(assert (= temp32_36 (select ARGNAME_padding_NAMEEND_VAL temp32_35)))
(assert (= temp32_37 #x0000000000000000))
(assert (= temp32_38 #x0000000000000003))
(assert (= temp32_39 temp32_38))
(assert (= temp32_40 (select ARGNAME_padding_NAMEEND_VAL temp32_39)))
(assert (= temp32_41 #x0000000000000000))
(assert (= temp32_42 #x0000000000000004))
(assert (= temp32_43 temp32_42))
(assert (= temp32_44 (select ARGNAME_padding_NAMEEND_VAL temp32_43)))
(assert (= temp32_45 #x0000000000000000))
(assert (= temp32_46 #x0000000000000005))
(assert (= temp32_47 temp32_46))
(assert (= temp32_48 (select ARGNAME_padding_NAMEEND_VAL temp32_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp32_28 temp32_25)
             (bvslt temp32_32 temp32_29)
             (bvslt temp32_36 temp32_33)
             (bvslt temp32_40 temp32_37)
             (bvslt temp32_44 temp32_41)
             (bvslt temp32_48 temp32_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp32_49 #x0000000000000000))
(assert (= var1191714 temp32_49))
(assert (= temp32_50 #x0000000000000000))
(assert (= temp32_51 temp32_50))
(assert (= temp32_52 (select ARGNAME_output_padding_NAMEEND_VAL temp32_51)))
(assert (= temp32_53 #x0000000000000001))
(assert (= temp32_54 temp32_53))
(assert (= temp32_55 (select ARGNAME_output_padding_NAMEEND_VAL temp32_54)))
(assert (= temp32_56 #x0000000000000002))
(assert (= temp32_57 temp32_56))
(assert (= temp32_58 (select ARGNAME_output_padding_NAMEEND_VAL temp32_57)))
(assert (= temp32_59 #x0000000000000003))
(assert (= temp32_60 temp32_59))
(assert (= temp32_61 (select ARGNAME_output_padding_NAMEEND_VAL temp32_60)))
(assert (= temp32_62 #x0000000000000004))
(assert (= temp32_63 temp32_62))
(assert (= temp32_64 (select ARGNAME_output_padding_NAMEEND_VAL temp32_63)))
(assert (= temp32_65 #x0000000000000005))
(assert (= temp32_66 temp32_65))
(assert (= temp32_67 (select ARGNAME_output_padding_NAMEEND_VAL temp32_66)))
(assert (= temp32_68 #x0000000000000000))
(assert (= temp32_69 #x0000000000000000))
(assert (= temp32_70 temp32_69))
(assert (= temp32_71 (select ARGNAME_output_padding_NAMEEND_VAL temp32_70)))
(assert (= temp32_72 #x0000000000000000))
(assert (= temp32_73 #x0000000000000001))
(assert (= temp32_74 temp32_73))
(assert (= temp32_75 (select ARGNAME_output_padding_NAMEEND_VAL temp32_74)))
(assert (= temp32_76 #x0000000000000000))
(assert (= temp32_77 #x0000000000000002))
(assert (= temp32_78 temp32_77))
(assert (= temp32_79 (select ARGNAME_output_padding_NAMEEND_VAL temp32_78)))
(assert (= temp32_80 #x0000000000000000))
(assert (= temp32_81 #x0000000000000003))
(assert (= temp32_82 temp32_81))
(assert (= temp32_83 (select ARGNAME_output_padding_NAMEEND_VAL temp32_82)))
(assert (= temp32_84 #x0000000000000000))
(assert (= temp32_85 #x0000000000000004))
(assert (= temp32_86 temp32_85))
(assert (= temp32_87 (select ARGNAME_output_padding_NAMEEND_VAL temp32_86)))
(assert (= temp32_88 #x0000000000000000))
(assert (= temp32_89 #x0000000000000005))
(assert (= temp32_90 temp32_89))
(assert (= temp32_91 (select ARGNAME_output_padding_NAMEEND_VAL temp32_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp32_71 temp32_68)
             (bvslt temp32_75 temp32_72)
             (bvslt temp32_79 temp32_76)
             (bvslt temp32_83 temp32_80)
             (bvslt temp32_87 temp32_84)
             (bvslt temp32_91 temp32_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp32_92 #x0000000000000000))
(assert (= var1191725 temp32_92))
(assert (= temp32_93 #x0000000000000000))
(assert (= temp32_94 temp32_93))
(assert (= temp32_95 (select ARGNAME_stride_NAMEEND_VAL temp32_94)))
(assert (= temp32_96 #x0000000000000001))
(assert (= temp32_97 temp32_96))
(assert (= temp32_98 (select ARGNAME_stride_NAMEEND_VAL temp32_97)))
(assert (= temp32_99 #x0000000000000002))
(assert (= temp32_100 temp32_99))
(assert (= temp32_101 (select ARGNAME_stride_NAMEEND_VAL temp32_100)))
(assert (= temp32_102 #x0000000000000003))
(assert (= temp32_103 temp32_102))
(assert (= temp32_104 (select ARGNAME_stride_NAMEEND_VAL temp32_103)))
(assert (= temp32_105 #x0000000000000004))
(assert (= temp32_106 temp32_105))
(assert (= temp32_107 (select ARGNAME_stride_NAMEEND_VAL temp32_106)))
(assert (= temp32_108 #x0000000000000005))
(assert (= temp32_109 temp32_108))
(assert (= temp32_110 (select ARGNAME_stride_NAMEEND_VAL temp32_109)))
(assert (= temp32_111 #x0000000000000000))
(assert (= temp32_112 #x0000000000000000))
(assert (= temp32_113 temp32_112))
(assert (= temp32_114 (select ARGNAME_stride_NAMEEND_VAL temp32_113)))
(assert (= temp32_115 #x0000000000000000))
(assert (= temp32_116 #x0000000000000001))
(assert (= temp32_117 temp32_116))
(assert (= temp32_118 (select ARGNAME_stride_NAMEEND_VAL temp32_117)))
(assert (= temp32_119 #x0000000000000000))
(assert (= temp32_120 #x0000000000000002))
(assert (= temp32_121 temp32_120))
(assert (= temp32_122 (select ARGNAME_stride_NAMEEND_VAL temp32_121)))
(assert (= temp32_123 #x0000000000000000))
(assert (= temp32_124 #x0000000000000003))
(assert (= temp32_125 temp32_124))
(assert (= temp32_126 (select ARGNAME_stride_NAMEEND_VAL temp32_125)))
(assert (= temp32_127 #x0000000000000000))
(assert (= temp32_128 #x0000000000000004))
(assert (= temp32_129 temp32_128))
(assert (= temp32_130 (select ARGNAME_stride_NAMEEND_VAL temp32_129)))
(assert (= temp32_131 #x0000000000000000))
(assert (= temp32_132 #x0000000000000005))
(assert (= temp32_133 temp32_132))
(assert (= temp32_134 (select ARGNAME_stride_NAMEEND_VAL temp32_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp32_114 temp32_111)
             (bvsle temp32_118 temp32_115)
             (bvsle temp32_122 temp32_119)
             (bvsle temp32_126 temp32_123)
             (bvsle temp32_130 temp32_127)
             (bvsle temp32_134 temp32_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp32_135 #x0000000000000000))
(assert (= var1191735 temp32_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp32_136 #x0000000000000001))
(assert (= var1191747 temp32_136))
(assert (= temp32_137 #x0000000000000000))
(assert (= var1179826 temp32_137))
(assert (= temp32_138 #x0000000000000000))
(assert (= temp32_139 temp32_138))
(assert (= temp32_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp32_139)))
(assert (= temp32_141 #x0000000000000001))
(assert (= temp32_142 temp32_141))
(assert (= temp32_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp32_142)))
(assert (= temp32_144 #x0000000000000002))
(assert (= temp32_145 temp32_144))
(assert (= temp32_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp32_145)))
(assert (= temp32_147 #x0000000000000003))
(assert (= temp32_148 temp32_147))
(assert (= temp32_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp32_148)))
(assert (= temp32_150 #x0000000000000004))
(assert (= temp32_151 temp32_150))
(assert (= temp32_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp32_151)))
(assert (= temp32_153 #x0000000000000005))
(assert (= temp32_154 temp32_153))
(assert (= temp32_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp32_154)))
(assert (= temp32_157 var1179826))
(assert (= temp32_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp32_157)))
(assert (= temp32_156 temp32_158))
(assert (= var1191780
   (ite (bvslt temp32_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp32_159 #x0000000000000000))
(assert (= var1191780 temp32_159))
(assert (= temp32_160 #x0000000000000000))
(assert (= var1179826 temp32_160))
(assert (= temp32_162 var1179826))
(assert (= temp32_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp32_162)))
(assert (= temp32_161 temp32_163))
(assert (= var1191802 (bvsmod temp32_161 ARGNAME_groups_NAMEEND)))
(assert (= temp32_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp32_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp32_165 #x0000000000000001))
(assert (= var1191803 temp32_165))
(assert (= temp32_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp32_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp32_167 #x0000000000000001))
(assert (= var1191823 temp32_167))
(assert (= temp32_168 #x0000000000000001))
(assert (= var1180714 temp32_168))
(assert (= temp32_169 #x0000000000000000))
(assert (= temp32_170 temp32_169))
(assert (= temp32_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp32_170)))
(assert (= temp32_172 #x0000000000000001))
(assert (= temp32_173 temp32_172))
(assert (= temp32_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp32_173)))
(assert (= temp32_175 #x0000000000000002))
(assert (= temp32_176 temp32_175))
(assert (= temp32_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp32_176)))
(assert (= temp32_178 #x0000000000000003))
(assert (= temp32_179 temp32_178))
(assert (= temp32_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp32_179)))
(assert (= temp32_181 #x0000000000000004))
(assert (= temp32_182 temp32_181))
(assert (= temp32_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp32_182)))
(assert (= temp32_184 #x0000000000000005))
(assert (= temp32_185 temp32_184))
(assert (= temp32_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp32_185)))
(assert (= temp32_187 #x0000000000000000))
(assert (= temp32_188
   (ite (bvslt var1180714 temp32_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp32_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp32_188)))
(assert (= var1191831 temp32_189))
(assert (bvslt (ite (bvslt var1180714 temp32_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp32_190 #x0000000000000001))
(assert (= var1180714 temp32_190))
(assert (= temp32_192 var1180714))
(assert (= temp32_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp32_192)))
(assert (= temp32_191 temp32_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp32_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp32_194 #x0000000000000001))
(assert (= var1191836 temp32_194))
(assert (= temp32_195 #x0000000000000000))
(assert (= var1179826 temp32_195))
(assert (= temp32_197 var1179826))
(assert (= temp32_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp32_197)))
(assert (= temp32_196 temp32_198))
(assert (= temp32_199 #x0000000000000002))
(assert (= var1586025 temp32_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp32_200 #x0000000000000001))
(assert (= var1191993 temp32_200))
(assert (= temp32_201 #x0000000000000001))
(assert (= var2700303 temp32_201))
(assert (= temp32_202 #x0000000000000001))
(assert (= var2962447 temp32_202))
(assert (= temp32_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp32_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp32_204 #x0000000000000001))
(assert (= var211058 temp32_204))
(assert (= temp32_205 #x0000000000000001))
(assert (= var211188 temp32_205))
(assert (= var3879401 var211188))
(assert (= temp32_206 #x0000000000000000))
(assert (= var3866802 temp32_206))
(assert (= temp32_207 #x0000000000000000))
(assert (= temp32_208
   (ite (bvslt var3866802 temp32_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp32_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp32_208)))
(assert (= var3879420 temp32_209))
(assert (bvslt (ite (bvslt var3866802 temp32_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp32_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp32_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp32_211 #x0000000000000001))
(assert (= var3879421 temp32_211))
(assert (= temp32_212 #x0000000000000000))
(assert (= var4079423 temp32_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp32_213 #x0000000000000002))
(assert (= var4208259 temp32_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp32_214 #x0000000000000000))
(assert (= var4273820 temp32_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4993424 var211201))
(assert (= var211388 var210913))
(assert (= temp32_215 #x0000000000000000))
(assert (= var211389
   (ite (distinct var211388 temp32_215) #x0000000000000001 #x0000000000000000)))
(assert (= var5914445 var211389))
(assert (= temp32_217 #x0000000000000001))
(assert (= temp32_216 temp32_217))
(assert (= temp32_218 #x0000000000000001))
(assert (= var6753770 temp32_218))
(assert (= temp32_220 #xffffffffffffffff))
(assert (= temp32_219 temp32_220))
(assert (= temp32_221 #x0000000000000001))
(assert (= var211058 temp32_221))
(model-add temp32_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp32_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp32_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp32_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




