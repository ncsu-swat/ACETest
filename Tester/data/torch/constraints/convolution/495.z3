(declare-fun temp660_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp660_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp660_3 () (_ BitVec 64))
(declare-fun temp660_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp660_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp660_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp660_7 () (_ BitVec 64))
(declare-fun temp660_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp660_9 () (_ BitVec 64))
(declare-fun temp660_10 () (_ BitVec 64))
(declare-fun temp660_11 () (_ BitVec 64))
(declare-fun temp660_12 () (_ BitVec 64))
(declare-fun temp660_13 () (_ BitVec 64))
(declare-fun temp660_14 () (_ BitVec 64))
(declare-fun temp660_15 () (_ BitVec 64))
(declare-fun temp660_16 () (_ BitVec 64))
(declare-fun temp660_17 () (_ BitVec 64))
(declare-fun temp660_18 () (_ BitVec 64))
(declare-fun temp660_19 () (_ BitVec 64))
(declare-fun temp660_20 () (_ BitVec 64))
(declare-fun temp660_21 () (_ BitVec 64))
(declare-fun temp660_22 () (_ BitVec 64))
(declare-fun temp660_23 () (_ BitVec 64))
(declare-fun temp660_24 () (_ BitVec 64))
(declare-fun temp660_25 () (_ BitVec 64))
(declare-fun temp660_26 () (_ BitVec 64))
(declare-fun temp660_27 () (_ BitVec 64))
(declare-fun temp660_28 () (_ BitVec 64))
(declare-fun temp660_29 () (_ BitVec 64))
(declare-fun temp660_30 () (_ BitVec 64))
(declare-fun temp660_31 () (_ BitVec 64))
(declare-fun temp660_32 () (_ BitVec 64))
(declare-fun temp660_33 () (_ BitVec 64))
(declare-fun temp660_34 () (_ BitVec 64))
(declare-fun temp660_35 () (_ BitVec 64))
(declare-fun temp660_36 () (_ BitVec 64))
(declare-fun temp660_37 () (_ BitVec 64))
(declare-fun temp660_38 () (_ BitVec 64))
(declare-fun temp660_39 () (_ BitVec 64))
(declare-fun temp660_40 () (_ BitVec 64))
(declare-fun temp660_41 () (_ BitVec 64))
(declare-fun temp660_42 () (_ BitVec 64))
(declare-fun temp660_43 () (_ BitVec 64))
(declare-fun temp660_44 () (_ BitVec 64))
(declare-fun temp660_45 () (_ BitVec 64))
(declare-fun temp660_46 () (_ BitVec 64))
(declare-fun temp660_47 () (_ BitVec 64))
(declare-fun temp660_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp660_49 () (_ BitVec 64))
(declare-fun temp660_50 () (_ BitVec 64))
(declare-fun temp660_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp660_52 () (_ BitVec 64))
(declare-fun temp660_53 () (_ BitVec 64))
(declare-fun temp660_54 () (_ BitVec 64))
(declare-fun temp660_55 () (_ BitVec 64))
(declare-fun temp660_56 () (_ BitVec 64))
(declare-fun temp660_57 () (_ BitVec 64))
(declare-fun temp660_58 () (_ BitVec 64))
(declare-fun temp660_59 () (_ BitVec 64))
(declare-fun temp660_60 () (_ BitVec 64))
(declare-fun temp660_61 () (_ BitVec 64))
(declare-fun temp660_62 () (_ BitVec 64))
(declare-fun temp660_63 () (_ BitVec 64))
(declare-fun temp660_64 () (_ BitVec 64))
(declare-fun temp660_65 () (_ BitVec 64))
(declare-fun temp660_66 () (_ BitVec 64))
(declare-fun temp660_67 () (_ BitVec 64))
(declare-fun temp660_68 () (_ BitVec 64))
(declare-fun temp660_69 () (_ BitVec 64))
(declare-fun temp660_70 () (_ BitVec 64))
(declare-fun temp660_71 () (_ BitVec 64))
(declare-fun temp660_72 () (_ BitVec 64))
(declare-fun temp660_73 () (_ BitVec 64))
(declare-fun temp660_74 () (_ BitVec 64))
(declare-fun temp660_75 () (_ BitVec 64))
(declare-fun temp660_76 () (_ BitVec 64))
(declare-fun temp660_77 () (_ BitVec 64))
(declare-fun temp660_78 () (_ BitVec 64))
(declare-fun temp660_79 () (_ BitVec 64))
(declare-fun temp660_80 () (_ BitVec 64))
(declare-fun temp660_81 () (_ BitVec 64))
(declare-fun temp660_82 () (_ BitVec 64))
(declare-fun temp660_83 () (_ BitVec 64))
(declare-fun temp660_84 () (_ BitVec 64))
(declare-fun temp660_85 () (_ BitVec 64))
(declare-fun temp660_86 () (_ BitVec 64))
(declare-fun temp660_87 () (_ BitVec 64))
(declare-fun temp660_88 () (_ BitVec 64))
(declare-fun temp660_89 () (_ BitVec 64))
(declare-fun temp660_90 () (_ BitVec 64))
(declare-fun temp660_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp660_92 () (_ BitVec 64))
(declare-fun temp660_93 () (_ BitVec 64))
(declare-fun temp660_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp660_95 () (_ BitVec 64))
(declare-fun temp660_96 () (_ BitVec 64))
(declare-fun temp660_97 () (_ BitVec 64))
(declare-fun temp660_98 () (_ BitVec 64))
(declare-fun temp660_99 () (_ BitVec 64))
(declare-fun temp660_100 () (_ BitVec 64))
(declare-fun temp660_101 () (_ BitVec 64))
(declare-fun temp660_102 () (_ BitVec 64))
(declare-fun temp660_103 () (_ BitVec 64))
(declare-fun temp660_104 () (_ BitVec 64))
(declare-fun temp660_105 () (_ BitVec 64))
(declare-fun temp660_106 () (_ BitVec 64))
(declare-fun temp660_107 () (_ BitVec 64))
(declare-fun temp660_108 () (_ BitVec 64))
(declare-fun temp660_109 () (_ BitVec 64))
(declare-fun temp660_110 () (_ BitVec 64))
(declare-fun temp660_111 () (_ BitVec 64))
(declare-fun temp660_112 () (_ BitVec 64))
(declare-fun temp660_113 () (_ BitVec 64))
(declare-fun temp660_114 () (_ BitVec 64))
(declare-fun temp660_115 () (_ BitVec 64))
(declare-fun temp660_116 () (_ BitVec 64))
(declare-fun temp660_117 () (_ BitVec 64))
(declare-fun temp660_118 () (_ BitVec 64))
(declare-fun temp660_119 () (_ BitVec 64))
(declare-fun temp660_120 () (_ BitVec 64))
(declare-fun temp660_121 () (_ BitVec 64))
(declare-fun temp660_122 () (_ BitVec 64))
(declare-fun temp660_123 () (_ BitVec 64))
(declare-fun temp660_124 () (_ BitVec 64))
(declare-fun temp660_125 () (_ BitVec 64))
(declare-fun temp660_126 () (_ BitVec 64))
(declare-fun temp660_127 () (_ BitVec 64))
(declare-fun temp660_128 () (_ BitVec 64))
(declare-fun temp660_129 () (_ BitVec 64))
(declare-fun temp660_130 () (_ BitVec 64))
(declare-fun temp660_131 () (_ BitVec 64))
(declare-fun temp660_132 () (_ BitVec 64))
(declare-fun temp660_133 () (_ BitVec 64))
(declare-fun temp660_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp660_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp660_136 () (_ BitVec 64))
(declare-fun temp660_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp660_138 () (_ BitVec 64))
(declare-fun temp660_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp660_140 () (_ BitVec 64))
(declare-fun temp660_141 () (_ BitVec 64))
(declare-fun temp660_142 () (_ BitVec 64))
(declare-fun temp660_143 () (_ BitVec 64))
(declare-fun temp660_144 () (_ BitVec 64))
(declare-fun temp660_145 () (_ BitVec 64))
(declare-fun temp660_146 () (_ BitVec 64))
(declare-fun temp660_147 () (_ BitVec 64))
(declare-fun temp660_148 () (_ BitVec 64))
(declare-fun temp660_149 () (_ BitVec 64))
(declare-fun temp660_150 () (_ BitVec 64))
(declare-fun temp660_151 () (_ BitVec 64))
(declare-fun temp660_152 () (_ BitVec 64))
(declare-fun temp660_153 () (_ BitVec 64))
(declare-fun temp660_154 () (_ BitVec 64))
(declare-fun temp660_155 () (_ BitVec 64))
(declare-fun temp660_157 () (_ BitVec 64))
(declare-fun temp660_158 () (_ BitVec 64))
(declare-fun temp660_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp660_159 () (_ BitVec 64))
(declare-fun temp660_160 () (_ BitVec 64))
(declare-fun temp660_162 () (_ BitVec 64))
(declare-fun temp660_163 () (_ BitVec 64))
(declare-fun temp660_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp660_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp660_165 () (_ BitVec 64))
(declare-fun temp660_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp660_167 () (_ BitVec 64))
(declare-fun temp660_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp660_169 () (_ BitVec 64))
(declare-fun temp660_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp660_171 () (_ BitVec 64))
(declare-fun temp660_172 () (_ BitVec 64))
(declare-fun temp660_173 () (_ BitVec 64))
(declare-fun temp660_174 () (_ BitVec 64))
(declare-fun temp660_175 () (_ BitVec 64))
(declare-fun temp660_176 () (_ BitVec 64))
(declare-fun temp660_177 () (_ BitVec 64))
(declare-fun temp660_178 () (_ BitVec 64))
(declare-fun temp660_179 () (_ BitVec 64))
(declare-fun temp660_180 () (_ BitVec 64))
(declare-fun temp660_181 () (_ BitVec 64))
(declare-fun temp660_182 () (_ BitVec 64))
(declare-fun temp660_183 () (_ BitVec 64))
(declare-fun temp660_184 () (_ BitVec 64))
(declare-fun temp660_185 () (_ BitVec 64))
(declare-fun temp660_186 () (_ BitVec 64))
(declare-fun temp660_187 () (_ BitVec 64))
(declare-fun temp660_188 () (_ BitVec 64))
(declare-fun temp660_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp660_190 () (_ BitVec 64))
(declare-fun temp660_192 () (_ BitVec 64))
(declare-fun temp660_193 () (_ BitVec 64))
(declare-fun temp660_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp660_194 () (_ BitVec 64))
(declare-fun temp660_195 () (_ BitVec 64))
(declare-fun temp660_197 () (_ BitVec 64))
(declare-fun temp660_198 () (_ BitVec 64))
(declare-fun temp660_196 () (_ BitVec 64))
(declare-fun temp660_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp660_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp660_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp660_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp660_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp660_204 () (_ BitVec 64))
(declare-fun temp660_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp660_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp660_207 () (_ BitVec 64))
(declare-fun temp660_208 () (_ BitVec 64))
(declare-fun temp660_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp660_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp660_211 () (_ BitVec 64))
(declare-fun temp660_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp660_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp660_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4796816 () (_ BitVec 64))
(declare-fun var211494 () (_ BitVec 64))
(declare-fun temp660_215 () (_ BitVec 64))
(declare-fun var211495 () (_ BitVec 64))
(declare-fun temp660_216 () (_ BitVec 64))
(declare-fun temp660_217 () (_ BitVec 64))
(declare-fun var6435604 () (_ BitVec 64))
(declare-fun var6435571 () (_ BitVec 64))
(declare-fun var6304135 () (_ BitVec 64))
(declare-fun var6304131 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp660_218 () (_ BitVec 64))
(assert (= temp660_1 #x0000000000000001))
(assert (= var77203 temp660_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp660_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp660_2)))
(assert (= temp660_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp660_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp660_4 #x0000000000000000))
(assert (= var210941 temp660_4))
(assert (= temp660_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp660_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp660_6 #x0000000000000000))
(assert (= var210986 temp660_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp660_7 #x0000000000000000))
(assert (= temp660_8 temp660_7))
(assert (= temp660_9 (select ARGNAME_padding_NAMEEND_VAL temp660_8)))
(assert (= temp660_10 #x0000000000000001))
(assert (= temp660_11 temp660_10))
(assert (= temp660_12 (select ARGNAME_padding_NAMEEND_VAL temp660_11)))
(assert (= temp660_13 #x0000000000000002))
(assert (= temp660_14 temp660_13))
(assert (= temp660_15 (select ARGNAME_padding_NAMEEND_VAL temp660_14)))
(assert (= temp660_16 #x0000000000000003))
(assert (= temp660_17 temp660_16))
(assert (= temp660_18 (select ARGNAME_padding_NAMEEND_VAL temp660_17)))
(assert (= temp660_19 #x0000000000000004))
(assert (= temp660_20 temp660_19))
(assert (= temp660_21 (select ARGNAME_padding_NAMEEND_VAL temp660_20)))
(assert (= temp660_22 #x0000000000000005))
(assert (= temp660_23 temp660_22))
(assert (= temp660_24 (select ARGNAME_padding_NAMEEND_VAL temp660_23)))
(assert (= temp660_25 #x0000000000000000))
(assert (= temp660_26 #x0000000000000000))
(assert (= temp660_27 temp660_26))
(assert (= temp660_28 (select ARGNAME_padding_NAMEEND_VAL temp660_27)))
(assert (= temp660_29 #x0000000000000000))
(assert (= temp660_30 #x0000000000000001))
(assert (= temp660_31 temp660_30))
(assert (= temp660_32 (select ARGNAME_padding_NAMEEND_VAL temp660_31)))
(assert (= temp660_33 #x0000000000000000))
(assert (= temp660_34 #x0000000000000002))
(assert (= temp660_35 temp660_34))
(assert (= temp660_36 (select ARGNAME_padding_NAMEEND_VAL temp660_35)))
(assert (= temp660_37 #x0000000000000000))
(assert (= temp660_38 #x0000000000000003))
(assert (= temp660_39 temp660_38))
(assert (= temp660_40 (select ARGNAME_padding_NAMEEND_VAL temp660_39)))
(assert (= temp660_41 #x0000000000000000))
(assert (= temp660_42 #x0000000000000004))
(assert (= temp660_43 temp660_42))
(assert (= temp660_44 (select ARGNAME_padding_NAMEEND_VAL temp660_43)))
(assert (= temp660_45 #x0000000000000000))
(assert (= temp660_46 #x0000000000000005))
(assert (= temp660_47 temp660_46))
(assert (= temp660_48 (select ARGNAME_padding_NAMEEND_VAL temp660_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp660_28 temp660_25)
             (bvslt temp660_32 temp660_29)
             (bvslt temp660_36 temp660_33)
             (bvslt temp660_40 temp660_37)
             (bvslt temp660_44 temp660_41)
             (bvslt temp660_48 temp660_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp660_49 #x0000000000000000))
(assert (= var1191714 temp660_49))
(assert (= temp660_50 #x0000000000000000))
(assert (= temp660_51 temp660_50))
(assert (= temp660_52 (select ARGNAME_output_padding_NAMEEND_VAL temp660_51)))
(assert (= temp660_53 #x0000000000000001))
(assert (= temp660_54 temp660_53))
(assert (= temp660_55 (select ARGNAME_output_padding_NAMEEND_VAL temp660_54)))
(assert (= temp660_56 #x0000000000000002))
(assert (= temp660_57 temp660_56))
(assert (= temp660_58 (select ARGNAME_output_padding_NAMEEND_VAL temp660_57)))
(assert (= temp660_59 #x0000000000000003))
(assert (= temp660_60 temp660_59))
(assert (= temp660_61 (select ARGNAME_output_padding_NAMEEND_VAL temp660_60)))
(assert (= temp660_62 #x0000000000000004))
(assert (= temp660_63 temp660_62))
(assert (= temp660_64 (select ARGNAME_output_padding_NAMEEND_VAL temp660_63)))
(assert (= temp660_65 #x0000000000000005))
(assert (= temp660_66 temp660_65))
(assert (= temp660_67 (select ARGNAME_output_padding_NAMEEND_VAL temp660_66)))
(assert (= temp660_68 #x0000000000000000))
(assert (= temp660_69 #x0000000000000000))
(assert (= temp660_70 temp660_69))
(assert (= temp660_71 (select ARGNAME_output_padding_NAMEEND_VAL temp660_70)))
(assert (= temp660_72 #x0000000000000000))
(assert (= temp660_73 #x0000000000000001))
(assert (= temp660_74 temp660_73))
(assert (= temp660_75 (select ARGNAME_output_padding_NAMEEND_VAL temp660_74)))
(assert (= temp660_76 #x0000000000000000))
(assert (= temp660_77 #x0000000000000002))
(assert (= temp660_78 temp660_77))
(assert (= temp660_79 (select ARGNAME_output_padding_NAMEEND_VAL temp660_78)))
(assert (= temp660_80 #x0000000000000000))
(assert (= temp660_81 #x0000000000000003))
(assert (= temp660_82 temp660_81))
(assert (= temp660_83 (select ARGNAME_output_padding_NAMEEND_VAL temp660_82)))
(assert (= temp660_84 #x0000000000000000))
(assert (= temp660_85 #x0000000000000004))
(assert (= temp660_86 temp660_85))
(assert (= temp660_87 (select ARGNAME_output_padding_NAMEEND_VAL temp660_86)))
(assert (= temp660_88 #x0000000000000000))
(assert (= temp660_89 #x0000000000000005))
(assert (= temp660_90 temp660_89))
(assert (= temp660_91 (select ARGNAME_output_padding_NAMEEND_VAL temp660_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp660_71 temp660_68)
             (bvslt temp660_75 temp660_72)
             (bvslt temp660_79 temp660_76)
             (bvslt temp660_83 temp660_80)
             (bvslt temp660_87 temp660_84)
             (bvslt temp660_91 temp660_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp660_92 #x0000000000000000))
(assert (= var1191725 temp660_92))
(assert (= temp660_93 #x0000000000000000))
(assert (= temp660_94 temp660_93))
(assert (= temp660_95 (select ARGNAME_stride_NAMEEND_VAL temp660_94)))
(assert (= temp660_96 #x0000000000000001))
(assert (= temp660_97 temp660_96))
(assert (= temp660_98 (select ARGNAME_stride_NAMEEND_VAL temp660_97)))
(assert (= temp660_99 #x0000000000000002))
(assert (= temp660_100 temp660_99))
(assert (= temp660_101 (select ARGNAME_stride_NAMEEND_VAL temp660_100)))
(assert (= temp660_102 #x0000000000000003))
(assert (= temp660_103 temp660_102))
(assert (= temp660_104 (select ARGNAME_stride_NAMEEND_VAL temp660_103)))
(assert (= temp660_105 #x0000000000000004))
(assert (= temp660_106 temp660_105))
(assert (= temp660_107 (select ARGNAME_stride_NAMEEND_VAL temp660_106)))
(assert (= temp660_108 #x0000000000000005))
(assert (= temp660_109 temp660_108))
(assert (= temp660_110 (select ARGNAME_stride_NAMEEND_VAL temp660_109)))
(assert (= temp660_111 #x0000000000000000))
(assert (= temp660_112 #x0000000000000000))
(assert (= temp660_113 temp660_112))
(assert (= temp660_114 (select ARGNAME_stride_NAMEEND_VAL temp660_113)))
(assert (= temp660_115 #x0000000000000000))
(assert (= temp660_116 #x0000000000000001))
(assert (= temp660_117 temp660_116))
(assert (= temp660_118 (select ARGNAME_stride_NAMEEND_VAL temp660_117)))
(assert (= temp660_119 #x0000000000000000))
(assert (= temp660_120 #x0000000000000002))
(assert (= temp660_121 temp660_120))
(assert (= temp660_122 (select ARGNAME_stride_NAMEEND_VAL temp660_121)))
(assert (= temp660_123 #x0000000000000000))
(assert (= temp660_124 #x0000000000000003))
(assert (= temp660_125 temp660_124))
(assert (= temp660_126 (select ARGNAME_stride_NAMEEND_VAL temp660_125)))
(assert (= temp660_127 #x0000000000000000))
(assert (= temp660_128 #x0000000000000004))
(assert (= temp660_129 temp660_128))
(assert (= temp660_130 (select ARGNAME_stride_NAMEEND_VAL temp660_129)))
(assert (= temp660_131 #x0000000000000000))
(assert (= temp660_132 #x0000000000000005))
(assert (= temp660_133 temp660_132))
(assert (= temp660_134 (select ARGNAME_stride_NAMEEND_VAL temp660_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp660_114 temp660_111)
             (bvsle temp660_118 temp660_115)
             (bvsle temp660_122 temp660_119)
             (bvsle temp660_126 temp660_123)
             (bvsle temp660_130 temp660_127)
             (bvsle temp660_134 temp660_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp660_135 #x0000000000000000))
(assert (= var1191735 temp660_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp660_136 #x0000000000000001))
(assert (= var1191747 temp660_136))
(assert (= temp660_137 #x0000000000000000))
(assert (= var1179826 temp660_137))
(assert (= temp660_138 #x0000000000000000))
(assert (= temp660_139 temp660_138))
(assert (= temp660_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp660_139)))
(assert (= temp660_141 #x0000000000000001))
(assert (= temp660_142 temp660_141))
(assert (= temp660_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp660_142)))
(assert (= temp660_144 #x0000000000000002))
(assert (= temp660_145 temp660_144))
(assert (= temp660_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp660_145)))
(assert (= temp660_147 #x0000000000000003))
(assert (= temp660_148 temp660_147))
(assert (= temp660_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp660_148)))
(assert (= temp660_150 #x0000000000000004))
(assert (= temp660_151 temp660_150))
(assert (= temp660_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp660_151)))
(assert (= temp660_153 #x0000000000000005))
(assert (= temp660_154 temp660_153))
(assert (= temp660_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp660_154)))
(assert (= temp660_157 var1179826))
(assert (= temp660_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp660_157)))
(assert (= temp660_156 temp660_158))
(assert (= var1191780
   (ite (bvslt temp660_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp660_159 #x0000000000000000))
(assert (= var1191780 temp660_159))
(assert (= temp660_160 #x0000000000000000))
(assert (= var1179826 temp660_160))
(assert (= temp660_162 var1179826))
(assert (= temp660_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp660_162)))
(assert (= temp660_161 temp660_163))
(assert (= var1191802 (bvsmod temp660_161 ARGNAME_groups_NAMEEND)))
(assert (= temp660_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp660_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp660_165 #x0000000000000001))
(assert (= var1191803 temp660_165))
(assert (= temp660_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp660_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp660_167 #x0000000000000001))
(assert (= var1191823 temp660_167))
(assert (= temp660_168 #x0000000000000001))
(assert (= var1180714 temp660_168))
(assert (= temp660_169 #x0000000000000000))
(assert (= temp660_170 temp660_169))
(assert (= temp660_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp660_170)))
(assert (= temp660_172 #x0000000000000001))
(assert (= temp660_173 temp660_172))
(assert (= temp660_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp660_173)))
(assert (= temp660_175 #x0000000000000002))
(assert (= temp660_176 temp660_175))
(assert (= temp660_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp660_176)))
(assert (= temp660_178 #x0000000000000003))
(assert (= temp660_179 temp660_178))
(assert (= temp660_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp660_179)))
(assert (= temp660_181 #x0000000000000004))
(assert (= temp660_182 temp660_181))
(assert (= temp660_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp660_182)))
(assert (= temp660_184 #x0000000000000005))
(assert (= temp660_185 temp660_184))
(assert (= temp660_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp660_185)))
(assert (= temp660_187 #x0000000000000000))
(assert (= temp660_188
   (ite (bvslt var1180714 temp660_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp660_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp660_188)))
(assert (= var1191831 temp660_189))
(assert (bvslt (ite (bvslt var1180714 temp660_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp660_190 #x0000000000000001))
(assert (= var1180714 temp660_190))
(assert (= temp660_192 var1180714))
(assert (= temp660_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp660_192)))
(assert (= temp660_191 temp660_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp660_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp660_194 #x0000000000000001))
(assert (= var1191836 temp660_194))
(assert (= temp660_195 #x0000000000000000))
(assert (= var1179826 temp660_195))
(assert (= temp660_197 var1179826))
(assert (= temp660_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp660_197)))
(assert (= temp660_196 temp660_198))
(assert (= temp660_199 #x0000000000000002))
(assert (= var1586025 temp660_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp660_200 #x0000000000000001))
(assert (= var1191993 temp660_200))
(assert (= temp660_201 #x0000000000000001))
(assert (= var2700303 temp660_201))
(assert (= temp660_202 #x0000000000000001))
(assert (= var2962447 temp660_202))
(assert (= temp660_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp660_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp660_204 #x0000000000000001))
(assert (= var211058 temp660_204))
(assert (= temp660_205 #x0000000000000001))
(assert (= var211188 temp660_205))
(assert (= var3879401 var211188))
(assert (= temp660_206 #x0000000000000000))
(assert (= var3866802 temp660_206))
(assert (= temp660_207 #x0000000000000000))
(assert (= temp660_208
   (ite (bvslt var3866802 temp660_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp660_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp660_208)))
(assert (= var3879420 temp660_209))
(assert (bvslt (ite (bvslt var3866802 temp660_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp660_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp660_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp660_211 #x0000000000000001))
(assert (= var3879421 temp660_211))
(assert (= temp660_212 #x0000000000000000))
(assert (= var4079423 temp660_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp660_213 #x0000000000000002))
(assert (= var4208259 temp660_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp660_214 #x0000000000000000))
(assert (= var4273820 temp660_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4796816 var211201))
(assert (= var211494 var210913))
(assert (= temp660_215 #x0000000000000000))
(assert (= var211495
   (ite (distinct var211494 temp660_215) #x0000000000000001 #x0000000000000000)))
(assert (= temp660_216 #x0000000000000001))
(assert (= var211058 temp660_216))
(assert (= temp660_217 #x0000000000000000))
(assert (= var6435604 temp660_217))
(assert (= var6435571 var6435604))
(assert (= var6304135 var6435571))
(assert (= var6304131 var6304135))
(assert (= var212669 var6304131))
(assert (= temp660_218 #x0000000000000000))
(assert (= var212669 temp660_218))
(model-add temp660_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp660_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp660_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp660_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))



