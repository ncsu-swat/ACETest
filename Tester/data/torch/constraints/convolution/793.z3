(declare-fun temp1057_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp1057_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1057_3 () (_ BitVec 64))
(declare-fun temp1057_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1057_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp1057_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1057_7 () (_ BitVec 64))
(declare-fun temp1057_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1057_9 () (_ BitVec 64))
(declare-fun temp1057_10 () (_ BitVec 64))
(declare-fun temp1057_11 () (_ BitVec 64))
(declare-fun temp1057_12 () (_ BitVec 64))
(declare-fun temp1057_13 () (_ BitVec 64))
(declare-fun temp1057_14 () (_ BitVec 64))
(declare-fun temp1057_15 () (_ BitVec 64))
(declare-fun temp1057_16 () (_ BitVec 64))
(declare-fun temp1057_17 () (_ BitVec 64))
(declare-fun temp1057_18 () (_ BitVec 64))
(declare-fun temp1057_19 () (_ BitVec 64))
(declare-fun temp1057_20 () (_ BitVec 64))
(declare-fun temp1057_21 () (_ BitVec 64))
(declare-fun temp1057_22 () (_ BitVec 64))
(declare-fun temp1057_23 () (_ BitVec 64))
(declare-fun temp1057_24 () (_ BitVec 64))
(declare-fun temp1057_25 () (_ BitVec 64))
(declare-fun temp1057_26 () (_ BitVec 64))
(declare-fun temp1057_27 () (_ BitVec 64))
(declare-fun temp1057_28 () (_ BitVec 64))
(declare-fun temp1057_29 () (_ BitVec 64))
(declare-fun temp1057_30 () (_ BitVec 64))
(declare-fun temp1057_31 () (_ BitVec 64))
(declare-fun temp1057_32 () (_ BitVec 64))
(declare-fun temp1057_33 () (_ BitVec 64))
(declare-fun temp1057_34 () (_ BitVec 64))
(declare-fun temp1057_35 () (_ BitVec 64))
(declare-fun temp1057_36 () (_ BitVec 64))
(declare-fun temp1057_37 () (_ BitVec 64))
(declare-fun temp1057_38 () (_ BitVec 64))
(declare-fun temp1057_39 () (_ BitVec 64))
(declare-fun temp1057_40 () (_ BitVec 64))
(declare-fun temp1057_41 () (_ BitVec 64))
(declare-fun temp1057_42 () (_ BitVec 64))
(declare-fun temp1057_43 () (_ BitVec 64))
(declare-fun temp1057_44 () (_ BitVec 64))
(declare-fun temp1057_45 () (_ BitVec 64))
(declare-fun temp1057_46 () (_ BitVec 64))
(declare-fun temp1057_47 () (_ BitVec 64))
(declare-fun temp1057_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp1057_49 () (_ BitVec 64))
(declare-fun temp1057_50 () (_ BitVec 64))
(declare-fun temp1057_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1057_52 () (_ BitVec 64))
(declare-fun temp1057_53 () (_ BitVec 64))
(declare-fun temp1057_54 () (_ BitVec 64))
(declare-fun temp1057_55 () (_ BitVec 64))
(declare-fun temp1057_56 () (_ BitVec 64))
(declare-fun temp1057_57 () (_ BitVec 64))
(declare-fun temp1057_58 () (_ BitVec 64))
(declare-fun temp1057_59 () (_ BitVec 64))
(declare-fun temp1057_60 () (_ BitVec 64))
(declare-fun temp1057_61 () (_ BitVec 64))
(declare-fun temp1057_62 () (_ BitVec 64))
(declare-fun temp1057_63 () (_ BitVec 64))
(declare-fun temp1057_64 () (_ BitVec 64))
(declare-fun temp1057_65 () (_ BitVec 64))
(declare-fun temp1057_66 () (_ BitVec 64))
(declare-fun temp1057_67 () (_ BitVec 64))
(declare-fun temp1057_68 () (_ BitVec 64))
(declare-fun temp1057_69 () (_ BitVec 64))
(declare-fun temp1057_70 () (_ BitVec 64))
(declare-fun temp1057_71 () (_ BitVec 64))
(declare-fun temp1057_72 () (_ BitVec 64))
(declare-fun temp1057_73 () (_ BitVec 64))
(declare-fun temp1057_74 () (_ BitVec 64))
(declare-fun temp1057_75 () (_ BitVec 64))
(declare-fun temp1057_76 () (_ BitVec 64))
(declare-fun temp1057_77 () (_ BitVec 64))
(declare-fun temp1057_78 () (_ BitVec 64))
(declare-fun temp1057_79 () (_ BitVec 64))
(declare-fun temp1057_80 () (_ BitVec 64))
(declare-fun temp1057_81 () (_ BitVec 64))
(declare-fun temp1057_82 () (_ BitVec 64))
(declare-fun temp1057_83 () (_ BitVec 64))
(declare-fun temp1057_84 () (_ BitVec 64))
(declare-fun temp1057_85 () (_ BitVec 64))
(declare-fun temp1057_86 () (_ BitVec 64))
(declare-fun temp1057_87 () (_ BitVec 64))
(declare-fun temp1057_88 () (_ BitVec 64))
(declare-fun temp1057_89 () (_ BitVec 64))
(declare-fun temp1057_90 () (_ BitVec 64))
(declare-fun temp1057_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp1057_92 () (_ BitVec 64))
(declare-fun temp1057_93 () (_ BitVec 64))
(declare-fun temp1057_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1057_95 () (_ BitVec 64))
(declare-fun temp1057_96 () (_ BitVec 64))
(declare-fun temp1057_97 () (_ BitVec 64))
(declare-fun temp1057_98 () (_ BitVec 64))
(declare-fun temp1057_99 () (_ BitVec 64))
(declare-fun temp1057_100 () (_ BitVec 64))
(declare-fun temp1057_101 () (_ BitVec 64))
(declare-fun temp1057_102 () (_ BitVec 64))
(declare-fun temp1057_103 () (_ BitVec 64))
(declare-fun temp1057_104 () (_ BitVec 64))
(declare-fun temp1057_105 () (_ BitVec 64))
(declare-fun temp1057_106 () (_ BitVec 64))
(declare-fun temp1057_107 () (_ BitVec 64))
(declare-fun temp1057_108 () (_ BitVec 64))
(declare-fun temp1057_109 () (_ BitVec 64))
(declare-fun temp1057_110 () (_ BitVec 64))
(declare-fun temp1057_111 () (_ BitVec 64))
(declare-fun temp1057_112 () (_ BitVec 64))
(declare-fun temp1057_113 () (_ BitVec 64))
(declare-fun temp1057_114 () (_ BitVec 64))
(declare-fun temp1057_115 () (_ BitVec 64))
(declare-fun temp1057_116 () (_ BitVec 64))
(declare-fun temp1057_117 () (_ BitVec 64))
(declare-fun temp1057_118 () (_ BitVec 64))
(declare-fun temp1057_119 () (_ BitVec 64))
(declare-fun temp1057_120 () (_ BitVec 64))
(declare-fun temp1057_121 () (_ BitVec 64))
(declare-fun temp1057_122 () (_ BitVec 64))
(declare-fun temp1057_123 () (_ BitVec 64))
(declare-fun temp1057_124 () (_ BitVec 64))
(declare-fun temp1057_125 () (_ BitVec 64))
(declare-fun temp1057_126 () (_ BitVec 64))
(declare-fun temp1057_127 () (_ BitVec 64))
(declare-fun temp1057_128 () (_ BitVec 64))
(declare-fun temp1057_129 () (_ BitVec 64))
(declare-fun temp1057_130 () (_ BitVec 64))
(declare-fun temp1057_131 () (_ BitVec 64))
(declare-fun temp1057_132 () (_ BitVec 64))
(declare-fun temp1057_133 () (_ BitVec 64))
(declare-fun temp1057_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp1057_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp1057_136 () (_ BitVec 64))
(declare-fun temp1057_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp1057_138 () (_ BitVec 64))
(declare-fun temp1057_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1057_140 () (_ BitVec 64))
(declare-fun temp1057_141 () (_ BitVec 64))
(declare-fun temp1057_142 () (_ BitVec 64))
(declare-fun temp1057_143 () (_ BitVec 64))
(declare-fun temp1057_144 () (_ BitVec 64))
(declare-fun temp1057_145 () (_ BitVec 64))
(declare-fun temp1057_146 () (_ BitVec 64))
(declare-fun temp1057_147 () (_ BitVec 64))
(declare-fun temp1057_148 () (_ BitVec 64))
(declare-fun temp1057_149 () (_ BitVec 64))
(declare-fun temp1057_150 () (_ BitVec 64))
(declare-fun temp1057_151 () (_ BitVec 64))
(declare-fun temp1057_152 () (_ BitVec 64))
(declare-fun temp1057_153 () (_ BitVec 64))
(declare-fun temp1057_154 () (_ BitVec 64))
(declare-fun temp1057_155 () (_ BitVec 64))
(declare-fun temp1057_157 () (_ BitVec 64))
(declare-fun temp1057_158 () (_ BitVec 64))
(declare-fun temp1057_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp1057_159 () (_ BitVec 64))
(declare-fun temp1057_160 () (_ BitVec 64))
(declare-fun temp1057_162 () (_ BitVec 64))
(declare-fun temp1057_163 () (_ BitVec 64))
(declare-fun temp1057_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp1057_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp1057_165 () (_ BitVec 64))
(declare-fun temp1057_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp1057_167 () (_ BitVec 64))
(declare-fun temp1057_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp1057_169 () (_ BitVec 64))
(declare-fun temp1057_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1057_171 () (_ BitVec 64))
(declare-fun temp1057_172 () (_ BitVec 64))
(declare-fun temp1057_173 () (_ BitVec 64))
(declare-fun temp1057_174 () (_ BitVec 64))
(declare-fun temp1057_175 () (_ BitVec 64))
(declare-fun temp1057_176 () (_ BitVec 64))
(declare-fun temp1057_177 () (_ BitVec 64))
(declare-fun temp1057_178 () (_ BitVec 64))
(declare-fun temp1057_179 () (_ BitVec 64))
(declare-fun temp1057_180 () (_ BitVec 64))
(declare-fun temp1057_181 () (_ BitVec 64))
(declare-fun temp1057_182 () (_ BitVec 64))
(declare-fun temp1057_183 () (_ BitVec 64))
(declare-fun temp1057_184 () (_ BitVec 64))
(declare-fun temp1057_185 () (_ BitVec 64))
(declare-fun temp1057_186 () (_ BitVec 64))
(declare-fun temp1057_187 () (_ BitVec 64))
(declare-fun temp1057_188 () (_ BitVec 64))
(declare-fun temp1057_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp1057_190 () (_ BitVec 64))
(declare-fun temp1057_192 () (_ BitVec 64))
(declare-fun temp1057_193 () (_ BitVec 64))
(declare-fun temp1057_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp1057_194 () (_ BitVec 64))
(declare-fun temp1057_195 () (_ BitVec 64))
(declare-fun temp1057_197 () (_ BitVec 64))
(declare-fun temp1057_198 () (_ BitVec 64))
(declare-fun temp1057_196 () (_ BitVec 64))
(declare-fun temp1057_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp1057_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp1057_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp1057_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp1057_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp1057_204 () (_ BitVec 64))
(declare-fun temp1057_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp1057_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp1057_207 () (_ BitVec 64))
(declare-fun temp1057_208 () (_ BitVec 64))
(declare-fun temp1057_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp1057_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp1057_211 () (_ BitVec 64))
(declare-fun temp1057_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp1057_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp1057_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp1057_215 () (_ BitVec 64))
(assert (= temp1057_1 #x0000000000000001))
(assert (= var77203 temp1057_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp1057_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp1057_2)))
(assert (= temp1057_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1057_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1057_4 #x0000000000000000))
(assert (= var210941 temp1057_4))
(assert (= temp1057_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp1057_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1057_6 #x0000000000000000))
(assert (= var210986 temp1057_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp1057_7 #x0000000000000000))
(assert (= temp1057_8 temp1057_7))
(assert (= temp1057_9 (select ARGNAME_padding_NAMEEND_VAL temp1057_8)))
(assert (= temp1057_10 #x0000000000000001))
(assert (= temp1057_11 temp1057_10))
(assert (= temp1057_12 (select ARGNAME_padding_NAMEEND_VAL temp1057_11)))
(assert (= temp1057_13 #x0000000000000002))
(assert (= temp1057_14 temp1057_13))
(assert (= temp1057_15 (select ARGNAME_padding_NAMEEND_VAL temp1057_14)))
(assert (= temp1057_16 #x0000000000000003))
(assert (= temp1057_17 temp1057_16))
(assert (= temp1057_18 (select ARGNAME_padding_NAMEEND_VAL temp1057_17)))
(assert (= temp1057_19 #x0000000000000004))
(assert (= temp1057_20 temp1057_19))
(assert (= temp1057_21 (select ARGNAME_padding_NAMEEND_VAL temp1057_20)))
(assert (= temp1057_22 #x0000000000000005))
(assert (= temp1057_23 temp1057_22))
(assert (= temp1057_24 (select ARGNAME_padding_NAMEEND_VAL temp1057_23)))
(assert (= temp1057_25 #x0000000000000000))
(assert (= temp1057_26 #x0000000000000000))
(assert (= temp1057_27 temp1057_26))
(assert (= temp1057_28 (select ARGNAME_padding_NAMEEND_VAL temp1057_27)))
(assert (= temp1057_29 #x0000000000000000))
(assert (= temp1057_30 #x0000000000000001))
(assert (= temp1057_31 temp1057_30))
(assert (= temp1057_32 (select ARGNAME_padding_NAMEEND_VAL temp1057_31)))
(assert (= temp1057_33 #x0000000000000000))
(assert (= temp1057_34 #x0000000000000002))
(assert (= temp1057_35 temp1057_34))
(assert (= temp1057_36 (select ARGNAME_padding_NAMEEND_VAL temp1057_35)))
(assert (= temp1057_37 #x0000000000000000))
(assert (= temp1057_38 #x0000000000000003))
(assert (= temp1057_39 temp1057_38))
(assert (= temp1057_40 (select ARGNAME_padding_NAMEEND_VAL temp1057_39)))
(assert (= temp1057_41 #x0000000000000000))
(assert (= temp1057_42 #x0000000000000004))
(assert (= temp1057_43 temp1057_42))
(assert (= temp1057_44 (select ARGNAME_padding_NAMEEND_VAL temp1057_43)))
(assert (= temp1057_45 #x0000000000000000))
(assert (= temp1057_46 #x0000000000000005))
(assert (= temp1057_47 temp1057_46))
(assert (= temp1057_48 (select ARGNAME_padding_NAMEEND_VAL temp1057_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp1057_28 temp1057_25)
             (bvslt temp1057_32 temp1057_29)
             (bvslt temp1057_36 temp1057_33)
             (bvslt temp1057_40 temp1057_37)
             (bvslt temp1057_44 temp1057_41)
             (bvslt temp1057_48 temp1057_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1057_49 #x0000000000000000))
(assert (= var1191714 temp1057_49))
(assert (= temp1057_50 #x0000000000000000))
(assert (= temp1057_51 temp1057_50))
(assert (= temp1057_52 (select ARGNAME_output_padding_NAMEEND_VAL temp1057_51)))
(assert (= temp1057_53 #x0000000000000001))
(assert (= temp1057_54 temp1057_53))
(assert (= temp1057_55 (select ARGNAME_output_padding_NAMEEND_VAL temp1057_54)))
(assert (= temp1057_56 #x0000000000000002))
(assert (= temp1057_57 temp1057_56))
(assert (= temp1057_58 (select ARGNAME_output_padding_NAMEEND_VAL temp1057_57)))
(assert (= temp1057_59 #x0000000000000003))
(assert (= temp1057_60 temp1057_59))
(assert (= temp1057_61 (select ARGNAME_output_padding_NAMEEND_VAL temp1057_60)))
(assert (= temp1057_62 #x0000000000000004))
(assert (= temp1057_63 temp1057_62))
(assert (= temp1057_64 (select ARGNAME_output_padding_NAMEEND_VAL temp1057_63)))
(assert (= temp1057_65 #x0000000000000005))
(assert (= temp1057_66 temp1057_65))
(assert (= temp1057_67 (select ARGNAME_output_padding_NAMEEND_VAL temp1057_66)))
(assert (= temp1057_68 #x0000000000000000))
(assert (= temp1057_69 #x0000000000000000))
(assert (= temp1057_70 temp1057_69))
(assert (= temp1057_71 (select ARGNAME_output_padding_NAMEEND_VAL temp1057_70)))
(assert (= temp1057_72 #x0000000000000000))
(assert (= temp1057_73 #x0000000000000001))
(assert (= temp1057_74 temp1057_73))
(assert (= temp1057_75 (select ARGNAME_output_padding_NAMEEND_VAL temp1057_74)))
(assert (= temp1057_76 #x0000000000000000))
(assert (= temp1057_77 #x0000000000000002))
(assert (= temp1057_78 temp1057_77))
(assert (= temp1057_79 (select ARGNAME_output_padding_NAMEEND_VAL temp1057_78)))
(assert (= temp1057_80 #x0000000000000000))
(assert (= temp1057_81 #x0000000000000003))
(assert (= temp1057_82 temp1057_81))
(assert (= temp1057_83 (select ARGNAME_output_padding_NAMEEND_VAL temp1057_82)))
(assert (= temp1057_84 #x0000000000000000))
(assert (= temp1057_85 #x0000000000000004))
(assert (= temp1057_86 temp1057_85))
(assert (= temp1057_87 (select ARGNAME_output_padding_NAMEEND_VAL temp1057_86)))
(assert (= temp1057_88 #x0000000000000000))
(assert (= temp1057_89 #x0000000000000005))
(assert (= temp1057_90 temp1057_89))
(assert (= temp1057_91 (select ARGNAME_output_padding_NAMEEND_VAL temp1057_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp1057_71 temp1057_68)
             (bvslt temp1057_75 temp1057_72)
             (bvslt temp1057_79 temp1057_76)
             (bvslt temp1057_83 temp1057_80)
             (bvslt temp1057_87 temp1057_84)
             (bvslt temp1057_91 temp1057_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1057_92 #x0000000000000000))
(assert (= var1191725 temp1057_92))
(assert (= temp1057_93 #x0000000000000000))
(assert (= temp1057_94 temp1057_93))
(assert (= temp1057_95 (select ARGNAME_stride_NAMEEND_VAL temp1057_94)))
(assert (= temp1057_96 #x0000000000000001))
(assert (= temp1057_97 temp1057_96))
(assert (= temp1057_98 (select ARGNAME_stride_NAMEEND_VAL temp1057_97)))
(assert (= temp1057_99 #x0000000000000002))
(assert (= temp1057_100 temp1057_99))
(assert (= temp1057_101 (select ARGNAME_stride_NAMEEND_VAL temp1057_100)))
(assert (= temp1057_102 #x0000000000000003))
(assert (= temp1057_103 temp1057_102))
(assert (= temp1057_104 (select ARGNAME_stride_NAMEEND_VAL temp1057_103)))
(assert (= temp1057_105 #x0000000000000004))
(assert (= temp1057_106 temp1057_105))
(assert (= temp1057_107 (select ARGNAME_stride_NAMEEND_VAL temp1057_106)))
(assert (= temp1057_108 #x0000000000000005))
(assert (= temp1057_109 temp1057_108))
(assert (= temp1057_110 (select ARGNAME_stride_NAMEEND_VAL temp1057_109)))
(assert (= temp1057_111 #x0000000000000000))
(assert (= temp1057_112 #x0000000000000000))
(assert (= temp1057_113 temp1057_112))
(assert (= temp1057_114 (select ARGNAME_stride_NAMEEND_VAL temp1057_113)))
(assert (= temp1057_115 #x0000000000000000))
(assert (= temp1057_116 #x0000000000000001))
(assert (= temp1057_117 temp1057_116))
(assert (= temp1057_118 (select ARGNAME_stride_NAMEEND_VAL temp1057_117)))
(assert (= temp1057_119 #x0000000000000000))
(assert (= temp1057_120 #x0000000000000002))
(assert (= temp1057_121 temp1057_120))
(assert (= temp1057_122 (select ARGNAME_stride_NAMEEND_VAL temp1057_121)))
(assert (= temp1057_123 #x0000000000000000))
(assert (= temp1057_124 #x0000000000000003))
(assert (= temp1057_125 temp1057_124))
(assert (= temp1057_126 (select ARGNAME_stride_NAMEEND_VAL temp1057_125)))
(assert (= temp1057_127 #x0000000000000000))
(assert (= temp1057_128 #x0000000000000004))
(assert (= temp1057_129 temp1057_128))
(assert (= temp1057_130 (select ARGNAME_stride_NAMEEND_VAL temp1057_129)))
(assert (= temp1057_131 #x0000000000000000))
(assert (= temp1057_132 #x0000000000000005))
(assert (= temp1057_133 temp1057_132))
(assert (= temp1057_134 (select ARGNAME_stride_NAMEEND_VAL temp1057_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp1057_114 temp1057_111)
             (bvsle temp1057_118 temp1057_115)
             (bvsle temp1057_122 temp1057_119)
             (bvsle temp1057_126 temp1057_123)
             (bvsle temp1057_130 temp1057_127)
             (bvsle temp1057_134 temp1057_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1057_135 #x0000000000000000))
(assert (= var1191735 temp1057_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1057_136 #x0000000000000001))
(assert (= var1191747 temp1057_136))
(assert (= temp1057_137 #x0000000000000000))
(assert (= var1179826 temp1057_137))
(assert (= temp1057_138 #x0000000000000000))
(assert (= temp1057_139 temp1057_138))
(assert (= temp1057_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1057_139)))
(assert (= temp1057_141 #x0000000000000001))
(assert (= temp1057_142 temp1057_141))
(assert (= temp1057_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1057_142)))
(assert (= temp1057_144 #x0000000000000002))
(assert (= temp1057_145 temp1057_144))
(assert (= temp1057_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1057_145)))
(assert (= temp1057_147 #x0000000000000003))
(assert (= temp1057_148 temp1057_147))
(assert (= temp1057_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1057_148)))
(assert (= temp1057_150 #x0000000000000004))
(assert (= temp1057_151 temp1057_150))
(assert (= temp1057_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1057_151)))
(assert (= temp1057_153 #x0000000000000005))
(assert (= temp1057_154 temp1057_153))
(assert (= temp1057_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1057_154)))
(assert (= temp1057_157 var1179826))
(assert (= temp1057_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1057_157)))
(assert (= temp1057_156 temp1057_158))
(assert (= var1191780
   (ite (bvslt temp1057_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1057_159 #x0000000000000000))
(assert (= var1191780 temp1057_159))
(assert (= temp1057_160 #x0000000000000000))
(assert (= var1179826 temp1057_160))
(assert (= temp1057_162 var1179826))
(assert (= temp1057_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1057_162)))
(assert (= temp1057_161 temp1057_163))
(assert (= var1191802 (bvsmod temp1057_161 ARGNAME_groups_NAMEEND)))
(assert (= temp1057_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp1057_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp1057_165 #x0000000000000001))
(assert (= var1191803 temp1057_165))
(assert (= temp1057_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp1057_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1057_167 #x0000000000000001))
(assert (= var1191823 temp1057_167))
(assert (= temp1057_168 #x0000000000000001))
(assert (= var1180714 temp1057_168))
(assert (= temp1057_169 #x0000000000000000))
(assert (= temp1057_170 temp1057_169))
(assert (= temp1057_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp1057_170)))
(assert (= temp1057_172 #x0000000000000001))
(assert (= temp1057_173 temp1057_172))
(assert (= temp1057_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp1057_173)))
(assert (= temp1057_175 #x0000000000000002))
(assert (= temp1057_176 temp1057_175))
(assert (= temp1057_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp1057_176)))
(assert (= temp1057_178 #x0000000000000003))
(assert (= temp1057_179 temp1057_178))
(assert (= temp1057_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp1057_179)))
(assert (= temp1057_181 #x0000000000000004))
(assert (= temp1057_182 temp1057_181))
(assert (= temp1057_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp1057_182)))
(assert (= temp1057_184 #x0000000000000005))
(assert (= temp1057_185 temp1057_184))
(assert (= temp1057_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp1057_185)))
(assert (= temp1057_187 #x0000000000000000))
(assert (= temp1057_188
   (ite (bvslt var1180714 temp1057_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp1057_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp1057_188)))
(assert (= var1191831 temp1057_189))
(assert (bvslt (ite (bvslt var1180714 temp1057_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1057_190 #x0000000000000001))
(assert (= var1180714 temp1057_190))
(assert (= temp1057_192 var1180714))
(assert (= temp1057_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1057_192)))
(assert (= temp1057_191 temp1057_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp1057_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp1057_194 #x0000000000000001))
(assert (= var1191836 temp1057_194))
(assert (= temp1057_195 #x0000000000000000))
(assert (= var1179826 temp1057_195))
(assert (= temp1057_197 var1179826))
(assert (= temp1057_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1057_197)))
(assert (= temp1057_196 temp1057_198))
(assert (= temp1057_199 #x0000000000000002))
(assert (= var1586025 temp1057_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp1057_200 #x0000000000000001))
(assert (= var1191993 temp1057_200))
(assert (= temp1057_201 #x0000000000000001))
(assert (= var2700303 temp1057_201))
(assert (= temp1057_202 #x0000000000000001))
(assert (= var2962447 temp1057_202))
(assert (= temp1057_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1057_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1057_204 #x0000000000000001))
(assert (= var211058 temp1057_204))
(assert (= temp1057_205 #x0000000000000001))
(assert (= var211188 temp1057_205))
(assert (= var3879401 var211188))
(assert (= temp1057_206 #x0000000000000000))
(assert (= var3866802 temp1057_206))
(assert (= temp1057_207 #x0000000000000000))
(assert (= temp1057_208
   (ite (bvslt var3866802 temp1057_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp1057_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp1057_208)))
(assert (= var3879420 temp1057_209))
(assert (bvslt (ite (bvslt var3866802 temp1057_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1057_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp1057_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp1057_211 #x0000000000000001))
(assert (= var3879421 temp1057_211))
(assert (= temp1057_212 #x0000000000000000))
(assert (= var4079423 temp1057_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp1057_213 #x0000000000000002))
(assert (= var4208259 temp1057_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1057_214 #x0000000000000000))
(assert (= var4273820 temp1057_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp1057_215 #x0000000000000001))
(assert (= var211058 temp1057_215))
(model-add temp1057_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp1057_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1057_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp1057_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))



