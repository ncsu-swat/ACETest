(declare-fun temp10456_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10456_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10456_3 () (_ BitVec 64))
(declare-fun temp10456_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10456_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10456_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10456_7 () (_ BitVec 64))
(declare-fun temp10456_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10456_9 () (_ BitVec 64))
(declare-fun temp10456_10 () (_ BitVec 64))
(declare-fun temp10456_11 () (_ BitVec 64))
(declare-fun temp10456_12 () (_ BitVec 64))
(declare-fun temp10456_13 () (_ BitVec 64))
(declare-fun temp10456_14 () (_ BitVec 64))
(declare-fun temp10456_15 () (_ BitVec 64))
(declare-fun temp10456_16 () (_ BitVec 64))
(declare-fun temp10456_17 () (_ BitVec 64))
(declare-fun temp10456_18 () (_ BitVec 64))
(declare-fun temp10456_19 () (_ BitVec 64))
(declare-fun temp10456_20 () (_ BitVec 64))
(declare-fun temp10456_21 () (_ BitVec 64))
(declare-fun temp10456_22 () (_ BitVec 64))
(declare-fun temp10456_23 () (_ BitVec 64))
(declare-fun temp10456_24 () (_ BitVec 64))
(declare-fun temp10456_25 () (_ BitVec 64))
(declare-fun temp10456_26 () (_ BitVec 64))
(declare-fun temp10456_27 () (_ BitVec 64))
(declare-fun temp10456_28 () (_ BitVec 64))
(declare-fun temp10456_29 () (_ BitVec 64))
(declare-fun temp10456_30 () (_ BitVec 64))
(declare-fun temp10456_31 () (_ BitVec 64))
(declare-fun temp10456_32 () (_ BitVec 64))
(declare-fun temp10456_33 () (_ BitVec 64))
(declare-fun temp10456_34 () (_ BitVec 64))
(declare-fun temp10456_35 () (_ BitVec 64))
(declare-fun temp10456_36 () (_ BitVec 64))
(declare-fun temp10456_37 () (_ BitVec 64))
(declare-fun temp10456_38 () (_ BitVec 64))
(declare-fun temp10456_39 () (_ BitVec 64))
(declare-fun temp10456_40 () (_ BitVec 64))
(declare-fun temp10456_41 () (_ BitVec 64))
(declare-fun temp10456_42 () (_ BitVec 64))
(declare-fun temp10456_43 () (_ BitVec 64))
(declare-fun temp10456_44 () (_ BitVec 64))
(declare-fun temp10456_45 () (_ BitVec 64))
(declare-fun temp10456_46 () (_ BitVec 64))
(declare-fun temp10456_47 () (_ BitVec 64))
(declare-fun temp10456_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10456_49 () (_ BitVec 64))
(declare-fun temp10456_50 () (_ BitVec 64))
(declare-fun temp10456_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10456_52 () (_ BitVec 64))
(declare-fun temp10456_53 () (_ BitVec 64))
(declare-fun temp10456_54 () (_ BitVec 64))
(declare-fun temp10456_55 () (_ BitVec 64))
(declare-fun temp10456_56 () (_ BitVec 64))
(declare-fun temp10456_57 () (_ BitVec 64))
(declare-fun temp10456_58 () (_ BitVec 64))
(declare-fun temp10456_59 () (_ BitVec 64))
(declare-fun temp10456_60 () (_ BitVec 64))
(declare-fun temp10456_61 () (_ BitVec 64))
(declare-fun temp10456_62 () (_ BitVec 64))
(declare-fun temp10456_63 () (_ BitVec 64))
(declare-fun temp10456_64 () (_ BitVec 64))
(declare-fun temp10456_65 () (_ BitVec 64))
(declare-fun temp10456_66 () (_ BitVec 64))
(declare-fun temp10456_67 () (_ BitVec 64))
(declare-fun temp10456_68 () (_ BitVec 64))
(declare-fun temp10456_69 () (_ BitVec 64))
(declare-fun temp10456_70 () (_ BitVec 64))
(declare-fun temp10456_71 () (_ BitVec 64))
(declare-fun temp10456_72 () (_ BitVec 64))
(declare-fun temp10456_73 () (_ BitVec 64))
(declare-fun temp10456_74 () (_ BitVec 64))
(declare-fun temp10456_75 () (_ BitVec 64))
(declare-fun temp10456_76 () (_ BitVec 64))
(declare-fun temp10456_77 () (_ BitVec 64))
(declare-fun temp10456_78 () (_ BitVec 64))
(declare-fun temp10456_79 () (_ BitVec 64))
(declare-fun temp10456_80 () (_ BitVec 64))
(declare-fun temp10456_81 () (_ BitVec 64))
(declare-fun temp10456_82 () (_ BitVec 64))
(declare-fun temp10456_83 () (_ BitVec 64))
(declare-fun temp10456_84 () (_ BitVec 64))
(declare-fun temp10456_85 () (_ BitVec 64))
(declare-fun temp10456_86 () (_ BitVec 64))
(declare-fun temp10456_87 () (_ BitVec 64))
(declare-fun temp10456_88 () (_ BitVec 64))
(declare-fun temp10456_89 () (_ BitVec 64))
(declare-fun temp10456_90 () (_ BitVec 64))
(declare-fun temp10456_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10456_92 () (_ BitVec 64))
(declare-fun temp10456_93 () (_ BitVec 64))
(declare-fun temp10456_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10456_95 () (_ BitVec 64))
(declare-fun temp10456_96 () (_ BitVec 64))
(declare-fun temp10456_97 () (_ BitVec 64))
(declare-fun temp10456_98 () (_ BitVec 64))
(declare-fun temp10456_99 () (_ BitVec 64))
(declare-fun temp10456_100 () (_ BitVec 64))
(declare-fun temp10456_101 () (_ BitVec 64))
(declare-fun temp10456_102 () (_ BitVec 64))
(declare-fun temp10456_103 () (_ BitVec 64))
(declare-fun temp10456_104 () (_ BitVec 64))
(declare-fun temp10456_105 () (_ BitVec 64))
(declare-fun temp10456_106 () (_ BitVec 64))
(declare-fun temp10456_107 () (_ BitVec 64))
(declare-fun temp10456_108 () (_ BitVec 64))
(declare-fun temp10456_109 () (_ BitVec 64))
(declare-fun temp10456_110 () (_ BitVec 64))
(declare-fun temp10456_111 () (_ BitVec 64))
(declare-fun temp10456_112 () (_ BitVec 64))
(declare-fun temp10456_113 () (_ BitVec 64))
(declare-fun temp10456_114 () (_ BitVec 64))
(declare-fun temp10456_115 () (_ BitVec 64))
(declare-fun temp10456_116 () (_ BitVec 64))
(declare-fun temp10456_117 () (_ BitVec 64))
(declare-fun temp10456_118 () (_ BitVec 64))
(declare-fun temp10456_119 () (_ BitVec 64))
(declare-fun temp10456_120 () (_ BitVec 64))
(declare-fun temp10456_121 () (_ BitVec 64))
(declare-fun temp10456_122 () (_ BitVec 64))
(declare-fun temp10456_123 () (_ BitVec 64))
(declare-fun temp10456_124 () (_ BitVec 64))
(declare-fun temp10456_125 () (_ BitVec 64))
(declare-fun temp10456_126 () (_ BitVec 64))
(declare-fun temp10456_127 () (_ BitVec 64))
(declare-fun temp10456_128 () (_ BitVec 64))
(declare-fun temp10456_129 () (_ BitVec 64))
(declare-fun temp10456_130 () (_ BitVec 64))
(declare-fun temp10456_131 () (_ BitVec 64))
(declare-fun temp10456_132 () (_ BitVec 64))
(declare-fun temp10456_133 () (_ BitVec 64))
(declare-fun temp10456_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10456_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10456_136 () (_ BitVec 64))
(declare-fun temp10456_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10456_138 () (_ BitVec 64))
(declare-fun temp10456_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10456_140 () (_ BitVec 64))
(declare-fun temp10456_141 () (_ BitVec 64))
(declare-fun temp10456_142 () (_ BitVec 64))
(declare-fun temp10456_143 () (_ BitVec 64))
(declare-fun temp10456_144 () (_ BitVec 64))
(declare-fun temp10456_145 () (_ BitVec 64))
(declare-fun temp10456_146 () (_ BitVec 64))
(declare-fun temp10456_147 () (_ BitVec 64))
(declare-fun temp10456_148 () (_ BitVec 64))
(declare-fun temp10456_149 () (_ BitVec 64))
(declare-fun temp10456_150 () (_ BitVec 64))
(declare-fun temp10456_151 () (_ BitVec 64))
(declare-fun temp10456_152 () (_ BitVec 64))
(declare-fun temp10456_153 () (_ BitVec 64))
(declare-fun temp10456_154 () (_ BitVec 64))
(declare-fun temp10456_155 () (_ BitVec 64))
(declare-fun temp10456_157 () (_ BitVec 64))
(declare-fun temp10456_158 () (_ BitVec 64))
(declare-fun temp10456_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10456_159 () (_ BitVec 64))
(declare-fun temp10456_160 () (_ BitVec 64))
(declare-fun temp10456_162 () (_ BitVec 64))
(declare-fun temp10456_163 () (_ BitVec 64))
(declare-fun temp10456_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10456_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10456_165 () (_ BitVec 64))
(declare-fun temp10456_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10456_167 () (_ BitVec 64))
(declare-fun temp10456_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10456_169 () (_ BitVec 64))
(declare-fun temp10456_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10456_171 () (_ BitVec 64))
(declare-fun temp10456_172 () (_ BitVec 64))
(declare-fun temp10456_173 () (_ BitVec 64))
(declare-fun temp10456_174 () (_ BitVec 64))
(declare-fun temp10456_175 () (_ BitVec 64))
(declare-fun temp10456_176 () (_ BitVec 64))
(declare-fun temp10456_177 () (_ BitVec 64))
(declare-fun temp10456_178 () (_ BitVec 64))
(declare-fun temp10456_179 () (_ BitVec 64))
(declare-fun temp10456_180 () (_ BitVec 64))
(declare-fun temp10456_181 () (_ BitVec 64))
(declare-fun temp10456_182 () (_ BitVec 64))
(declare-fun temp10456_183 () (_ BitVec 64))
(declare-fun temp10456_184 () (_ BitVec 64))
(declare-fun temp10456_185 () (_ BitVec 64))
(declare-fun temp10456_186 () (_ BitVec 64))
(declare-fun temp10456_187 () (_ BitVec 64))
(declare-fun temp10456_188 () (_ BitVec 64))
(declare-fun temp10456_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10456_190 () (_ BitVec 64))
(declare-fun temp10456_192 () (_ BitVec 64))
(declare-fun temp10456_193 () (_ BitVec 64))
(declare-fun temp10456_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10456_194 () (_ BitVec 64))
(declare-fun temp10456_195 () (_ BitVec 64))
(declare-fun temp10456_197 () (_ BitVec 64))
(declare-fun temp10456_198 () (_ BitVec 64))
(declare-fun temp10456_196 () (_ BitVec 64))
(declare-fun temp10456_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10456_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10456_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10456_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10456_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10456_204 () (_ BitVec 64))
(declare-fun temp10456_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10456_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10456_207 () (_ BitVec 64))
(declare-fun temp10456_208 () (_ BitVec 64))
(declare-fun temp10456_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10456_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10456_211 () (_ BitVec 64))
(declare-fun temp10456_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10456_213 () (_ BitVec 64))
(declare-fun temp10456_214 () (_ BitVec 64))
(declare-fun temp10456_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10456_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10456_217 () (_ BitVec 64))
(declare-fun temp10456_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10456_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10456_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4469136 () (_ BitVec 64))
(declare-fun var4731280 () (_ BitVec 64))
(declare-fun temp10456_221 () (_ BitVec 64))
(declare-fun var212414 () (_ BitVec 64))
(declare-fun temp10456_222 () (_ BitVec 64))
(declare-fun temp10456_223 () (_ BitVec 64))
(declare-fun var5060227 () (_ BitVec 64))
(declare-fun var5125772 () (_ BitVec 64))
(declare-fun temp10456_224 () (_ BitVec 64))
(assert (= temp10456_1 #x0000000000000001))
(assert (= var77203 temp10456_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10456_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10456_2)))
(assert (= temp10456_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10456_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10456_4 #x0000000000000000))
(assert (= var210941 temp10456_4))
(assert (= temp10456_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10456_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10456_6 #x0000000000000000))
(assert (= var210986 temp10456_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10456_7 #x0000000000000000))
(assert (= temp10456_8 temp10456_7))
(assert (= temp10456_9 (select ARGNAME_padding_NAMEEND_VAL temp10456_8)))
(assert (= temp10456_10 #x0000000000000001))
(assert (= temp10456_11 temp10456_10))
(assert (= temp10456_12 (select ARGNAME_padding_NAMEEND_VAL temp10456_11)))
(assert (= temp10456_13 #x0000000000000002))
(assert (= temp10456_14 temp10456_13))
(assert (= temp10456_15 (select ARGNAME_padding_NAMEEND_VAL temp10456_14)))
(assert (= temp10456_16 #x0000000000000003))
(assert (= temp10456_17 temp10456_16))
(assert (= temp10456_18 (select ARGNAME_padding_NAMEEND_VAL temp10456_17)))
(assert (= temp10456_19 #x0000000000000004))
(assert (= temp10456_20 temp10456_19))
(assert (= temp10456_21 (select ARGNAME_padding_NAMEEND_VAL temp10456_20)))
(assert (= temp10456_22 #x0000000000000005))
(assert (= temp10456_23 temp10456_22))
(assert (= temp10456_24 (select ARGNAME_padding_NAMEEND_VAL temp10456_23)))
(assert (= temp10456_25 #x0000000000000000))
(assert (= temp10456_26 #x0000000000000000))
(assert (= temp10456_27 temp10456_26))
(assert (= temp10456_28 (select ARGNAME_padding_NAMEEND_VAL temp10456_27)))
(assert (= temp10456_29 #x0000000000000000))
(assert (= temp10456_30 #x0000000000000001))
(assert (= temp10456_31 temp10456_30))
(assert (= temp10456_32 (select ARGNAME_padding_NAMEEND_VAL temp10456_31)))
(assert (= temp10456_33 #x0000000000000000))
(assert (= temp10456_34 #x0000000000000002))
(assert (= temp10456_35 temp10456_34))
(assert (= temp10456_36 (select ARGNAME_padding_NAMEEND_VAL temp10456_35)))
(assert (= temp10456_37 #x0000000000000000))
(assert (= temp10456_38 #x0000000000000003))
(assert (= temp10456_39 temp10456_38))
(assert (= temp10456_40 (select ARGNAME_padding_NAMEEND_VAL temp10456_39)))
(assert (= temp10456_41 #x0000000000000000))
(assert (= temp10456_42 #x0000000000000004))
(assert (= temp10456_43 temp10456_42))
(assert (= temp10456_44 (select ARGNAME_padding_NAMEEND_VAL temp10456_43)))
(assert (= temp10456_45 #x0000000000000000))
(assert (= temp10456_46 #x0000000000000005))
(assert (= temp10456_47 temp10456_46))
(assert (= temp10456_48 (select ARGNAME_padding_NAMEEND_VAL temp10456_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10456_28 temp10456_25)
             (bvslt temp10456_32 temp10456_29)
             (bvslt temp10456_36 temp10456_33)
             (bvslt temp10456_40 temp10456_37)
             (bvslt temp10456_44 temp10456_41)
             (bvslt temp10456_48 temp10456_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10456_49 #x0000000000000000))
(assert (= var1191714 temp10456_49))
(assert (= temp10456_50 #x0000000000000000))
(assert (= temp10456_51 temp10456_50))
(assert (= temp10456_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10456_51)))
(assert (= temp10456_53 #x0000000000000001))
(assert (= temp10456_54 temp10456_53))
(assert (= temp10456_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10456_54)))
(assert (= temp10456_56 #x0000000000000002))
(assert (= temp10456_57 temp10456_56))
(assert (= temp10456_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10456_57)))
(assert (= temp10456_59 #x0000000000000003))
(assert (= temp10456_60 temp10456_59))
(assert (= temp10456_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10456_60)))
(assert (= temp10456_62 #x0000000000000004))
(assert (= temp10456_63 temp10456_62))
(assert (= temp10456_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10456_63)))
(assert (= temp10456_65 #x0000000000000005))
(assert (= temp10456_66 temp10456_65))
(assert (= temp10456_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10456_66)))
(assert (= temp10456_68 #x0000000000000000))
(assert (= temp10456_69 #x0000000000000000))
(assert (= temp10456_70 temp10456_69))
(assert (= temp10456_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10456_70)))
(assert (= temp10456_72 #x0000000000000000))
(assert (= temp10456_73 #x0000000000000001))
(assert (= temp10456_74 temp10456_73))
(assert (= temp10456_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10456_74)))
(assert (= temp10456_76 #x0000000000000000))
(assert (= temp10456_77 #x0000000000000002))
(assert (= temp10456_78 temp10456_77))
(assert (= temp10456_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10456_78)))
(assert (= temp10456_80 #x0000000000000000))
(assert (= temp10456_81 #x0000000000000003))
(assert (= temp10456_82 temp10456_81))
(assert (= temp10456_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10456_82)))
(assert (= temp10456_84 #x0000000000000000))
(assert (= temp10456_85 #x0000000000000004))
(assert (= temp10456_86 temp10456_85))
(assert (= temp10456_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10456_86)))
(assert (= temp10456_88 #x0000000000000000))
(assert (= temp10456_89 #x0000000000000005))
(assert (= temp10456_90 temp10456_89))
(assert (= temp10456_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10456_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10456_71 temp10456_68)
             (bvslt temp10456_75 temp10456_72)
             (bvslt temp10456_79 temp10456_76)
             (bvslt temp10456_83 temp10456_80)
             (bvslt temp10456_87 temp10456_84)
             (bvslt temp10456_91 temp10456_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10456_92 #x0000000000000000))
(assert (= var1191725 temp10456_92))
(assert (= temp10456_93 #x0000000000000000))
(assert (= temp10456_94 temp10456_93))
(assert (= temp10456_95 (select ARGNAME_stride_NAMEEND_VAL temp10456_94)))
(assert (= temp10456_96 #x0000000000000001))
(assert (= temp10456_97 temp10456_96))
(assert (= temp10456_98 (select ARGNAME_stride_NAMEEND_VAL temp10456_97)))
(assert (= temp10456_99 #x0000000000000002))
(assert (= temp10456_100 temp10456_99))
(assert (= temp10456_101 (select ARGNAME_stride_NAMEEND_VAL temp10456_100)))
(assert (= temp10456_102 #x0000000000000003))
(assert (= temp10456_103 temp10456_102))
(assert (= temp10456_104 (select ARGNAME_stride_NAMEEND_VAL temp10456_103)))
(assert (= temp10456_105 #x0000000000000004))
(assert (= temp10456_106 temp10456_105))
(assert (= temp10456_107 (select ARGNAME_stride_NAMEEND_VAL temp10456_106)))
(assert (= temp10456_108 #x0000000000000005))
(assert (= temp10456_109 temp10456_108))
(assert (= temp10456_110 (select ARGNAME_stride_NAMEEND_VAL temp10456_109)))
(assert (= temp10456_111 #x0000000000000000))
(assert (= temp10456_112 #x0000000000000000))
(assert (= temp10456_113 temp10456_112))
(assert (= temp10456_114 (select ARGNAME_stride_NAMEEND_VAL temp10456_113)))
(assert (= temp10456_115 #x0000000000000000))
(assert (= temp10456_116 #x0000000000000001))
(assert (= temp10456_117 temp10456_116))
(assert (= temp10456_118 (select ARGNAME_stride_NAMEEND_VAL temp10456_117)))
(assert (= temp10456_119 #x0000000000000000))
(assert (= temp10456_120 #x0000000000000002))
(assert (= temp10456_121 temp10456_120))
(assert (= temp10456_122 (select ARGNAME_stride_NAMEEND_VAL temp10456_121)))
(assert (= temp10456_123 #x0000000000000000))
(assert (= temp10456_124 #x0000000000000003))
(assert (= temp10456_125 temp10456_124))
(assert (= temp10456_126 (select ARGNAME_stride_NAMEEND_VAL temp10456_125)))
(assert (= temp10456_127 #x0000000000000000))
(assert (= temp10456_128 #x0000000000000004))
(assert (= temp10456_129 temp10456_128))
(assert (= temp10456_130 (select ARGNAME_stride_NAMEEND_VAL temp10456_129)))
(assert (= temp10456_131 #x0000000000000000))
(assert (= temp10456_132 #x0000000000000005))
(assert (= temp10456_133 temp10456_132))
(assert (= temp10456_134 (select ARGNAME_stride_NAMEEND_VAL temp10456_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10456_114 temp10456_111)
             (bvsle temp10456_118 temp10456_115)
             (bvsle temp10456_122 temp10456_119)
             (bvsle temp10456_126 temp10456_123)
             (bvsle temp10456_130 temp10456_127)
             (bvsle temp10456_134 temp10456_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10456_135 #x0000000000000000))
(assert (= var1191735 temp10456_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10456_136 #x0000000000000001))
(assert (= var1191747 temp10456_136))
(assert (= temp10456_137 #x0000000000000000))
(assert (= var1179826 temp10456_137))
(assert (= temp10456_138 #x0000000000000000))
(assert (= temp10456_139 temp10456_138))
(assert (= temp10456_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10456_139)))
(assert (= temp10456_141 #x0000000000000001))
(assert (= temp10456_142 temp10456_141))
(assert (= temp10456_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10456_142)))
(assert (= temp10456_144 #x0000000000000002))
(assert (= temp10456_145 temp10456_144))
(assert (= temp10456_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10456_145)))
(assert (= temp10456_147 #x0000000000000003))
(assert (= temp10456_148 temp10456_147))
(assert (= temp10456_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10456_148)))
(assert (= temp10456_150 #x0000000000000004))
(assert (= temp10456_151 temp10456_150))
(assert (= temp10456_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10456_151)))
(assert (= temp10456_153 #x0000000000000005))
(assert (= temp10456_154 temp10456_153))
(assert (= temp10456_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10456_154)))
(assert (= temp10456_157 var1179826))
(assert (= temp10456_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10456_157)))
(assert (= temp10456_156 temp10456_158))
(assert (= var1191780
   (ite (bvslt temp10456_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10456_159 #x0000000000000000))
(assert (= var1191780 temp10456_159))
(assert (= temp10456_160 #x0000000000000000))
(assert (= var1179826 temp10456_160))
(assert (= temp10456_162 var1179826))
(assert (= temp10456_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10456_162)))
(assert (= temp10456_161 temp10456_163))
(assert (= var1191802 (bvsmod temp10456_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10456_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10456_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10456_165 #x0000000000000001))
(assert (= var1191803 temp10456_165))
(assert (= temp10456_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10456_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10456_167 #x0000000000000001))
(assert (= var1191823 temp10456_167))
(assert (= temp10456_168 #x0000000000000001))
(assert (= var1180714 temp10456_168))
(assert (= temp10456_169 #x0000000000000000))
(assert (= temp10456_170 temp10456_169))
(assert (= temp10456_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10456_170)))
(assert (= temp10456_172 #x0000000000000001))
(assert (= temp10456_173 temp10456_172))
(assert (= temp10456_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10456_173)))
(assert (= temp10456_175 #x0000000000000002))
(assert (= temp10456_176 temp10456_175))
(assert (= temp10456_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10456_176)))
(assert (= temp10456_178 #x0000000000000003))
(assert (= temp10456_179 temp10456_178))
(assert (= temp10456_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10456_179)))
(assert (= temp10456_181 #x0000000000000004))
(assert (= temp10456_182 temp10456_181))
(assert (= temp10456_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10456_182)))
(assert (= temp10456_184 #x0000000000000005))
(assert (= temp10456_185 temp10456_184))
(assert (= temp10456_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10456_185)))
(assert (= temp10456_187 #x0000000000000000))
(assert (= temp10456_188
   (ite (bvslt var1180714 temp10456_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10456_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10456_188)))
(assert (= var1191831 temp10456_189))
(assert (bvslt (ite (bvslt var1180714 temp10456_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10456_190 #x0000000000000001))
(assert (= var1180714 temp10456_190))
(assert (= temp10456_192 var1180714))
(assert (= temp10456_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10456_192)))
(assert (= temp10456_191 temp10456_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10456_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10456_194 #x0000000000000001))
(assert (= var1191836 temp10456_194))
(assert (= temp10456_195 #x0000000000000000))
(assert (= var1179826 temp10456_195))
(assert (= temp10456_197 var1179826))
(assert (= temp10456_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10456_197)))
(assert (= temp10456_196 temp10456_198))
(assert (= temp10456_199 #x0000000000000002))
(assert (= var1586025 temp10456_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10456_200 #x0000000000000001))
(assert (= var1191993 temp10456_200))
(assert (= temp10456_201 #x0000000000000001))
(assert (= var2700303 temp10456_201))
(assert (= temp10456_202 #x0000000000000001))
(assert (= var2962447 temp10456_202))
(assert (= temp10456_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10456_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10456_204 #x0000000000000001))
(assert (= var211058 temp10456_204))
(assert (= temp10456_205 #x0000000000000001))
(assert (= var211188 temp10456_205))
(assert (= var3879401 var211188))
(assert (= temp10456_206 #x0000000000000000))
(assert (= var3866802 temp10456_206))
(assert (= temp10456_207 #x0000000000000000))
(assert (= temp10456_208
   (ite (bvslt var3866802 temp10456_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10456_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10456_208)))
(assert (= var3879420 temp10456_209))
(assert (bvslt (ite (bvslt var3866802 temp10456_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10456_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10456_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10456_211 #x0000000000000000))
(assert (= var3879421 temp10456_211))
(assert (= temp10456_212 #x0000000000000001))
(assert (= var3867690 temp10456_212))
(assert (= temp10456_213 #x0000000000000000))
(assert (= temp10456_214
   (ite (bvslt var3867690 temp10456_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10456_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10456_214)))
(assert (= var3879423 temp10456_215))
(assert (bvslt (ite (bvslt var3867690 temp10456_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10456_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10456_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10456_217 #x0000000000000001))
(assert (= var3879424 temp10456_217))
(assert (= temp10456_218 #x0000000000000000))
(assert (= var4079423 temp10456_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10456_219 #x0000000000000002))
(assert (= var4208259 temp10456_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10456_220 #x0000000000000000))
(assert (= var4273820 temp10456_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4469136 var211201))
(assert (= var4731280 var211201))
(assert (= temp10456_221 #x0000000000000001))
(assert (= var212414
   (ite (= ARGNAME_groups_NAMEEND temp10456_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10456_222 #x0000000000000000))
(assert (= var212414 temp10456_222))
(assert (= temp10456_223 #x0000000000000002))
(assert (= var5060227 temp10456_223))
(assert (= var5125772 var5060227))
(assert (= temp10456_224 #x0000000000000001))
(assert (= var211058 temp10456_224))
(model-add temp10456_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10456_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10456_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10456_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))



