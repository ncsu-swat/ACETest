(declare-fun temp10605_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10605_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10605_3 () (_ BitVec 64))
(declare-fun temp10605_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10605_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10605_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10605_7 () (_ BitVec 64))
(declare-fun temp10605_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10605_9 () (_ BitVec 64))
(declare-fun temp10605_10 () (_ BitVec 64))
(declare-fun temp10605_11 () (_ BitVec 64))
(declare-fun temp10605_12 () (_ BitVec 64))
(declare-fun temp10605_13 () (_ BitVec 64))
(declare-fun temp10605_14 () (_ BitVec 64))
(declare-fun temp10605_15 () (_ BitVec 64))
(declare-fun temp10605_16 () (_ BitVec 64))
(declare-fun temp10605_17 () (_ BitVec 64))
(declare-fun temp10605_18 () (_ BitVec 64))
(declare-fun temp10605_19 () (_ BitVec 64))
(declare-fun temp10605_20 () (_ BitVec 64))
(declare-fun temp10605_21 () (_ BitVec 64))
(declare-fun temp10605_22 () (_ BitVec 64))
(declare-fun temp10605_23 () (_ BitVec 64))
(declare-fun temp10605_24 () (_ BitVec 64))
(declare-fun temp10605_25 () (_ BitVec 64))
(declare-fun temp10605_26 () (_ BitVec 64))
(declare-fun temp10605_27 () (_ BitVec 64))
(declare-fun temp10605_28 () (_ BitVec 64))
(declare-fun temp10605_29 () (_ BitVec 64))
(declare-fun temp10605_30 () (_ BitVec 64))
(declare-fun temp10605_31 () (_ BitVec 64))
(declare-fun temp10605_32 () (_ BitVec 64))
(declare-fun temp10605_33 () (_ BitVec 64))
(declare-fun temp10605_34 () (_ BitVec 64))
(declare-fun temp10605_35 () (_ BitVec 64))
(declare-fun temp10605_36 () (_ BitVec 64))
(declare-fun temp10605_37 () (_ BitVec 64))
(declare-fun temp10605_38 () (_ BitVec 64))
(declare-fun temp10605_39 () (_ BitVec 64))
(declare-fun temp10605_40 () (_ BitVec 64))
(declare-fun temp10605_41 () (_ BitVec 64))
(declare-fun temp10605_42 () (_ BitVec 64))
(declare-fun temp10605_43 () (_ BitVec 64))
(declare-fun temp10605_44 () (_ BitVec 64))
(declare-fun temp10605_45 () (_ BitVec 64))
(declare-fun temp10605_46 () (_ BitVec 64))
(declare-fun temp10605_47 () (_ BitVec 64))
(declare-fun temp10605_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10605_49 () (_ BitVec 64))
(declare-fun temp10605_50 () (_ BitVec 64))
(declare-fun temp10605_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10605_52 () (_ BitVec 64))
(declare-fun temp10605_53 () (_ BitVec 64))
(declare-fun temp10605_54 () (_ BitVec 64))
(declare-fun temp10605_55 () (_ BitVec 64))
(declare-fun temp10605_56 () (_ BitVec 64))
(declare-fun temp10605_57 () (_ BitVec 64))
(declare-fun temp10605_58 () (_ BitVec 64))
(declare-fun temp10605_59 () (_ BitVec 64))
(declare-fun temp10605_60 () (_ BitVec 64))
(declare-fun temp10605_61 () (_ BitVec 64))
(declare-fun temp10605_62 () (_ BitVec 64))
(declare-fun temp10605_63 () (_ BitVec 64))
(declare-fun temp10605_64 () (_ BitVec 64))
(declare-fun temp10605_65 () (_ BitVec 64))
(declare-fun temp10605_66 () (_ BitVec 64))
(declare-fun temp10605_67 () (_ BitVec 64))
(declare-fun temp10605_68 () (_ BitVec 64))
(declare-fun temp10605_69 () (_ BitVec 64))
(declare-fun temp10605_70 () (_ BitVec 64))
(declare-fun temp10605_71 () (_ BitVec 64))
(declare-fun temp10605_72 () (_ BitVec 64))
(declare-fun temp10605_73 () (_ BitVec 64))
(declare-fun temp10605_74 () (_ BitVec 64))
(declare-fun temp10605_75 () (_ BitVec 64))
(declare-fun temp10605_76 () (_ BitVec 64))
(declare-fun temp10605_77 () (_ BitVec 64))
(declare-fun temp10605_78 () (_ BitVec 64))
(declare-fun temp10605_79 () (_ BitVec 64))
(declare-fun temp10605_80 () (_ BitVec 64))
(declare-fun temp10605_81 () (_ BitVec 64))
(declare-fun temp10605_82 () (_ BitVec 64))
(declare-fun temp10605_83 () (_ BitVec 64))
(declare-fun temp10605_84 () (_ BitVec 64))
(declare-fun temp10605_85 () (_ BitVec 64))
(declare-fun temp10605_86 () (_ BitVec 64))
(declare-fun temp10605_87 () (_ BitVec 64))
(declare-fun temp10605_88 () (_ BitVec 64))
(declare-fun temp10605_89 () (_ BitVec 64))
(declare-fun temp10605_90 () (_ BitVec 64))
(declare-fun temp10605_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10605_92 () (_ BitVec 64))
(declare-fun temp10605_93 () (_ BitVec 64))
(declare-fun temp10605_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10605_95 () (_ BitVec 64))
(declare-fun temp10605_96 () (_ BitVec 64))
(declare-fun temp10605_97 () (_ BitVec 64))
(declare-fun temp10605_98 () (_ BitVec 64))
(declare-fun temp10605_99 () (_ BitVec 64))
(declare-fun temp10605_100 () (_ BitVec 64))
(declare-fun temp10605_101 () (_ BitVec 64))
(declare-fun temp10605_102 () (_ BitVec 64))
(declare-fun temp10605_103 () (_ BitVec 64))
(declare-fun temp10605_104 () (_ BitVec 64))
(declare-fun temp10605_105 () (_ BitVec 64))
(declare-fun temp10605_106 () (_ BitVec 64))
(declare-fun temp10605_107 () (_ BitVec 64))
(declare-fun temp10605_108 () (_ BitVec 64))
(declare-fun temp10605_109 () (_ BitVec 64))
(declare-fun temp10605_110 () (_ BitVec 64))
(declare-fun temp10605_111 () (_ BitVec 64))
(declare-fun temp10605_112 () (_ BitVec 64))
(declare-fun temp10605_113 () (_ BitVec 64))
(declare-fun temp10605_114 () (_ BitVec 64))
(declare-fun temp10605_115 () (_ BitVec 64))
(declare-fun temp10605_116 () (_ BitVec 64))
(declare-fun temp10605_117 () (_ BitVec 64))
(declare-fun temp10605_118 () (_ BitVec 64))
(declare-fun temp10605_119 () (_ BitVec 64))
(declare-fun temp10605_120 () (_ BitVec 64))
(declare-fun temp10605_121 () (_ BitVec 64))
(declare-fun temp10605_122 () (_ BitVec 64))
(declare-fun temp10605_123 () (_ BitVec 64))
(declare-fun temp10605_124 () (_ BitVec 64))
(declare-fun temp10605_125 () (_ BitVec 64))
(declare-fun temp10605_126 () (_ BitVec 64))
(declare-fun temp10605_127 () (_ BitVec 64))
(declare-fun temp10605_128 () (_ BitVec 64))
(declare-fun temp10605_129 () (_ BitVec 64))
(declare-fun temp10605_130 () (_ BitVec 64))
(declare-fun temp10605_131 () (_ BitVec 64))
(declare-fun temp10605_132 () (_ BitVec 64))
(declare-fun temp10605_133 () (_ BitVec 64))
(declare-fun temp10605_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10605_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10605_136 () (_ BitVec 64))
(declare-fun temp10605_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10605_138 () (_ BitVec 64))
(declare-fun temp10605_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10605_140 () (_ BitVec 64))
(declare-fun temp10605_141 () (_ BitVec 64))
(declare-fun temp10605_142 () (_ BitVec 64))
(declare-fun temp10605_143 () (_ BitVec 64))
(declare-fun temp10605_144 () (_ BitVec 64))
(declare-fun temp10605_145 () (_ BitVec 64))
(declare-fun temp10605_146 () (_ BitVec 64))
(declare-fun temp10605_147 () (_ BitVec 64))
(declare-fun temp10605_148 () (_ BitVec 64))
(declare-fun temp10605_149 () (_ BitVec 64))
(declare-fun temp10605_150 () (_ BitVec 64))
(declare-fun temp10605_151 () (_ BitVec 64))
(declare-fun temp10605_152 () (_ BitVec 64))
(declare-fun temp10605_153 () (_ BitVec 64))
(declare-fun temp10605_154 () (_ BitVec 64))
(declare-fun temp10605_155 () (_ BitVec 64))
(declare-fun temp10605_157 () (_ BitVec 64))
(declare-fun temp10605_158 () (_ BitVec 64))
(declare-fun temp10605_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10605_159 () (_ BitVec 64))
(declare-fun temp10605_160 () (_ BitVec 64))
(declare-fun temp10605_162 () (_ BitVec 64))
(declare-fun temp10605_163 () (_ BitVec 64))
(declare-fun temp10605_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10605_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10605_165 () (_ BitVec 64))
(declare-fun temp10605_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10605_167 () (_ BitVec 64))
(declare-fun temp10605_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10605_169 () (_ BitVec 64))
(declare-fun temp10605_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10605_171 () (_ BitVec 64))
(declare-fun temp10605_172 () (_ BitVec 64))
(declare-fun temp10605_173 () (_ BitVec 64))
(declare-fun temp10605_174 () (_ BitVec 64))
(declare-fun temp10605_175 () (_ BitVec 64))
(declare-fun temp10605_176 () (_ BitVec 64))
(declare-fun temp10605_177 () (_ BitVec 64))
(declare-fun temp10605_178 () (_ BitVec 64))
(declare-fun temp10605_179 () (_ BitVec 64))
(declare-fun temp10605_180 () (_ BitVec 64))
(declare-fun temp10605_181 () (_ BitVec 64))
(declare-fun temp10605_182 () (_ BitVec 64))
(declare-fun temp10605_183 () (_ BitVec 64))
(declare-fun temp10605_184 () (_ BitVec 64))
(declare-fun temp10605_185 () (_ BitVec 64))
(declare-fun temp10605_186 () (_ BitVec 64))
(declare-fun temp10605_187 () (_ BitVec 64))
(declare-fun temp10605_188 () (_ BitVec 64))
(declare-fun temp10605_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10605_190 () (_ BitVec 64))
(declare-fun temp10605_192 () (_ BitVec 64))
(declare-fun temp10605_193 () (_ BitVec 64))
(declare-fun temp10605_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10605_194 () (_ BitVec 64))
(declare-fun temp10605_195 () (_ BitVec 64))
(declare-fun temp10605_197 () (_ BitVec 64))
(declare-fun temp10605_198 () (_ BitVec 64))
(declare-fun temp10605_196 () (_ BitVec 64))
(declare-fun temp10605_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10605_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10605_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10605_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10605_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10605_204 () (_ BitVec 64))
(declare-fun temp10605_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10605_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10605_207 () (_ BitVec 64))
(declare-fun temp10605_208 () (_ BitVec 64))
(declare-fun temp10605_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10605_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10605_211 () (_ BitVec 64))
(declare-fun temp10605_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10605_213 () (_ BitVec 64))
(declare-fun temp10605_214 () (_ BitVec 64))
(declare-fun temp10605_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10605_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10605_217 () (_ BitVec 64))
(declare-fun temp10605_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10605_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10605_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp10605_222 () (_ BitVec 64))
(declare-fun temp10605_221 () (_ BitVec 64))
(declare-fun temp10605_223 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp10605_224 () (_ BitVec 64))
(declare-fun temp10605_225 () (_ BitVec 64))
(declare-fun temp10605_226 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp10605_227 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp10605_228 () (_ BitVec 64))
(declare-fun temp10605_230 () (_ BitVec 64))
(declare-fun temp10605_229 () (_ BitVec 64))
(declare-fun temp10605_231 () (_ BitVec 64))
(assert (= temp10605_1 #x0000000000000001))
(assert (= var77203 temp10605_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10605_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10605_2)))
(assert (= temp10605_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10605_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10605_4 #x0000000000000000))
(assert (= var210941 temp10605_4))
(assert (= temp10605_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10605_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10605_6 #x0000000000000000))
(assert (= var210986 temp10605_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10605_7 #x0000000000000000))
(assert (= temp10605_8 temp10605_7))
(assert (= temp10605_9 (select ARGNAME_padding_NAMEEND_VAL temp10605_8)))
(assert (= temp10605_10 #x0000000000000001))
(assert (= temp10605_11 temp10605_10))
(assert (= temp10605_12 (select ARGNAME_padding_NAMEEND_VAL temp10605_11)))
(assert (= temp10605_13 #x0000000000000002))
(assert (= temp10605_14 temp10605_13))
(assert (= temp10605_15 (select ARGNAME_padding_NAMEEND_VAL temp10605_14)))
(assert (= temp10605_16 #x0000000000000003))
(assert (= temp10605_17 temp10605_16))
(assert (= temp10605_18 (select ARGNAME_padding_NAMEEND_VAL temp10605_17)))
(assert (= temp10605_19 #x0000000000000004))
(assert (= temp10605_20 temp10605_19))
(assert (= temp10605_21 (select ARGNAME_padding_NAMEEND_VAL temp10605_20)))
(assert (= temp10605_22 #x0000000000000005))
(assert (= temp10605_23 temp10605_22))
(assert (= temp10605_24 (select ARGNAME_padding_NAMEEND_VAL temp10605_23)))
(assert (= temp10605_25 #x0000000000000000))
(assert (= temp10605_26 #x0000000000000000))
(assert (= temp10605_27 temp10605_26))
(assert (= temp10605_28 (select ARGNAME_padding_NAMEEND_VAL temp10605_27)))
(assert (= temp10605_29 #x0000000000000000))
(assert (= temp10605_30 #x0000000000000001))
(assert (= temp10605_31 temp10605_30))
(assert (= temp10605_32 (select ARGNAME_padding_NAMEEND_VAL temp10605_31)))
(assert (= temp10605_33 #x0000000000000000))
(assert (= temp10605_34 #x0000000000000002))
(assert (= temp10605_35 temp10605_34))
(assert (= temp10605_36 (select ARGNAME_padding_NAMEEND_VAL temp10605_35)))
(assert (= temp10605_37 #x0000000000000000))
(assert (= temp10605_38 #x0000000000000003))
(assert (= temp10605_39 temp10605_38))
(assert (= temp10605_40 (select ARGNAME_padding_NAMEEND_VAL temp10605_39)))
(assert (= temp10605_41 #x0000000000000000))
(assert (= temp10605_42 #x0000000000000004))
(assert (= temp10605_43 temp10605_42))
(assert (= temp10605_44 (select ARGNAME_padding_NAMEEND_VAL temp10605_43)))
(assert (= temp10605_45 #x0000000000000000))
(assert (= temp10605_46 #x0000000000000005))
(assert (= temp10605_47 temp10605_46))
(assert (= temp10605_48 (select ARGNAME_padding_NAMEEND_VAL temp10605_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10605_28 temp10605_25)
             (bvslt temp10605_32 temp10605_29)
             (bvslt temp10605_36 temp10605_33)
             (bvslt temp10605_40 temp10605_37)
             (bvslt temp10605_44 temp10605_41)
             (bvslt temp10605_48 temp10605_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10605_49 #x0000000000000000))
(assert (= var1191714 temp10605_49))
(assert (= temp10605_50 #x0000000000000000))
(assert (= temp10605_51 temp10605_50))
(assert (= temp10605_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10605_51)))
(assert (= temp10605_53 #x0000000000000001))
(assert (= temp10605_54 temp10605_53))
(assert (= temp10605_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10605_54)))
(assert (= temp10605_56 #x0000000000000002))
(assert (= temp10605_57 temp10605_56))
(assert (= temp10605_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10605_57)))
(assert (= temp10605_59 #x0000000000000003))
(assert (= temp10605_60 temp10605_59))
(assert (= temp10605_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10605_60)))
(assert (= temp10605_62 #x0000000000000004))
(assert (= temp10605_63 temp10605_62))
(assert (= temp10605_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10605_63)))
(assert (= temp10605_65 #x0000000000000005))
(assert (= temp10605_66 temp10605_65))
(assert (= temp10605_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10605_66)))
(assert (= temp10605_68 #x0000000000000000))
(assert (= temp10605_69 #x0000000000000000))
(assert (= temp10605_70 temp10605_69))
(assert (= temp10605_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10605_70)))
(assert (= temp10605_72 #x0000000000000000))
(assert (= temp10605_73 #x0000000000000001))
(assert (= temp10605_74 temp10605_73))
(assert (= temp10605_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10605_74)))
(assert (= temp10605_76 #x0000000000000000))
(assert (= temp10605_77 #x0000000000000002))
(assert (= temp10605_78 temp10605_77))
(assert (= temp10605_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10605_78)))
(assert (= temp10605_80 #x0000000000000000))
(assert (= temp10605_81 #x0000000000000003))
(assert (= temp10605_82 temp10605_81))
(assert (= temp10605_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10605_82)))
(assert (= temp10605_84 #x0000000000000000))
(assert (= temp10605_85 #x0000000000000004))
(assert (= temp10605_86 temp10605_85))
(assert (= temp10605_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10605_86)))
(assert (= temp10605_88 #x0000000000000000))
(assert (= temp10605_89 #x0000000000000005))
(assert (= temp10605_90 temp10605_89))
(assert (= temp10605_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10605_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10605_71 temp10605_68)
             (bvslt temp10605_75 temp10605_72)
             (bvslt temp10605_79 temp10605_76)
             (bvslt temp10605_83 temp10605_80)
             (bvslt temp10605_87 temp10605_84)
             (bvslt temp10605_91 temp10605_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10605_92 #x0000000000000000))
(assert (= var1191725 temp10605_92))
(assert (= temp10605_93 #x0000000000000000))
(assert (= temp10605_94 temp10605_93))
(assert (= temp10605_95 (select ARGNAME_stride_NAMEEND_VAL temp10605_94)))
(assert (= temp10605_96 #x0000000000000001))
(assert (= temp10605_97 temp10605_96))
(assert (= temp10605_98 (select ARGNAME_stride_NAMEEND_VAL temp10605_97)))
(assert (= temp10605_99 #x0000000000000002))
(assert (= temp10605_100 temp10605_99))
(assert (= temp10605_101 (select ARGNAME_stride_NAMEEND_VAL temp10605_100)))
(assert (= temp10605_102 #x0000000000000003))
(assert (= temp10605_103 temp10605_102))
(assert (= temp10605_104 (select ARGNAME_stride_NAMEEND_VAL temp10605_103)))
(assert (= temp10605_105 #x0000000000000004))
(assert (= temp10605_106 temp10605_105))
(assert (= temp10605_107 (select ARGNAME_stride_NAMEEND_VAL temp10605_106)))
(assert (= temp10605_108 #x0000000000000005))
(assert (= temp10605_109 temp10605_108))
(assert (= temp10605_110 (select ARGNAME_stride_NAMEEND_VAL temp10605_109)))
(assert (= temp10605_111 #x0000000000000000))
(assert (= temp10605_112 #x0000000000000000))
(assert (= temp10605_113 temp10605_112))
(assert (= temp10605_114 (select ARGNAME_stride_NAMEEND_VAL temp10605_113)))
(assert (= temp10605_115 #x0000000000000000))
(assert (= temp10605_116 #x0000000000000001))
(assert (= temp10605_117 temp10605_116))
(assert (= temp10605_118 (select ARGNAME_stride_NAMEEND_VAL temp10605_117)))
(assert (= temp10605_119 #x0000000000000000))
(assert (= temp10605_120 #x0000000000000002))
(assert (= temp10605_121 temp10605_120))
(assert (= temp10605_122 (select ARGNAME_stride_NAMEEND_VAL temp10605_121)))
(assert (= temp10605_123 #x0000000000000000))
(assert (= temp10605_124 #x0000000000000003))
(assert (= temp10605_125 temp10605_124))
(assert (= temp10605_126 (select ARGNAME_stride_NAMEEND_VAL temp10605_125)))
(assert (= temp10605_127 #x0000000000000000))
(assert (= temp10605_128 #x0000000000000004))
(assert (= temp10605_129 temp10605_128))
(assert (= temp10605_130 (select ARGNAME_stride_NAMEEND_VAL temp10605_129)))
(assert (= temp10605_131 #x0000000000000000))
(assert (= temp10605_132 #x0000000000000005))
(assert (= temp10605_133 temp10605_132))
(assert (= temp10605_134 (select ARGNAME_stride_NAMEEND_VAL temp10605_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10605_114 temp10605_111)
             (bvsle temp10605_118 temp10605_115)
             (bvsle temp10605_122 temp10605_119)
             (bvsle temp10605_126 temp10605_123)
             (bvsle temp10605_130 temp10605_127)
             (bvsle temp10605_134 temp10605_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10605_135 #x0000000000000000))
(assert (= var1191735 temp10605_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10605_136 #x0000000000000001))
(assert (= var1191747 temp10605_136))
(assert (= temp10605_137 #x0000000000000000))
(assert (= var1179826 temp10605_137))
(assert (= temp10605_138 #x0000000000000000))
(assert (= temp10605_139 temp10605_138))
(assert (= temp10605_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10605_139)))
(assert (= temp10605_141 #x0000000000000001))
(assert (= temp10605_142 temp10605_141))
(assert (= temp10605_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10605_142)))
(assert (= temp10605_144 #x0000000000000002))
(assert (= temp10605_145 temp10605_144))
(assert (= temp10605_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10605_145)))
(assert (= temp10605_147 #x0000000000000003))
(assert (= temp10605_148 temp10605_147))
(assert (= temp10605_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10605_148)))
(assert (= temp10605_150 #x0000000000000004))
(assert (= temp10605_151 temp10605_150))
(assert (= temp10605_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10605_151)))
(assert (= temp10605_153 #x0000000000000005))
(assert (= temp10605_154 temp10605_153))
(assert (= temp10605_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10605_154)))
(assert (= temp10605_157 var1179826))
(assert (= temp10605_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10605_157)))
(assert (= temp10605_156 temp10605_158))
(assert (= var1191780
   (ite (bvslt temp10605_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10605_159 #x0000000000000000))
(assert (= var1191780 temp10605_159))
(assert (= temp10605_160 #x0000000000000000))
(assert (= var1179826 temp10605_160))
(assert (= temp10605_162 var1179826))
(assert (= temp10605_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10605_162)))
(assert (= temp10605_161 temp10605_163))
(assert (= var1191802 (bvsmod temp10605_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10605_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10605_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10605_165 #x0000000000000001))
(assert (= var1191803 temp10605_165))
(assert (= temp10605_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10605_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10605_167 #x0000000000000001))
(assert (= var1191823 temp10605_167))
(assert (= temp10605_168 #x0000000000000001))
(assert (= var1180714 temp10605_168))
(assert (= temp10605_169 #x0000000000000000))
(assert (= temp10605_170 temp10605_169))
(assert (= temp10605_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10605_170)))
(assert (= temp10605_172 #x0000000000000001))
(assert (= temp10605_173 temp10605_172))
(assert (= temp10605_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10605_173)))
(assert (= temp10605_175 #x0000000000000002))
(assert (= temp10605_176 temp10605_175))
(assert (= temp10605_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10605_176)))
(assert (= temp10605_178 #x0000000000000003))
(assert (= temp10605_179 temp10605_178))
(assert (= temp10605_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10605_179)))
(assert (= temp10605_181 #x0000000000000004))
(assert (= temp10605_182 temp10605_181))
(assert (= temp10605_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10605_182)))
(assert (= temp10605_184 #x0000000000000005))
(assert (= temp10605_185 temp10605_184))
(assert (= temp10605_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10605_185)))
(assert (= temp10605_187 #x0000000000000000))
(assert (= temp10605_188
   (ite (bvslt var1180714 temp10605_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10605_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10605_188)))
(assert (= var1191831 temp10605_189))
(assert (bvslt (ite (bvslt var1180714 temp10605_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10605_190 #x0000000000000001))
(assert (= var1180714 temp10605_190))
(assert (= temp10605_192 var1180714))
(assert (= temp10605_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10605_192)))
(assert (= temp10605_191 temp10605_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10605_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10605_194 #x0000000000000001))
(assert (= var1191836 temp10605_194))
(assert (= temp10605_195 #x0000000000000000))
(assert (= var1179826 temp10605_195))
(assert (= temp10605_197 var1179826))
(assert (= temp10605_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10605_197)))
(assert (= temp10605_196 temp10605_198))
(assert (= temp10605_199 #x0000000000000002))
(assert (= var1586025 temp10605_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10605_200 #x0000000000000001))
(assert (= var1191993 temp10605_200))
(assert (= temp10605_201 #x0000000000000001))
(assert (= var2700303 temp10605_201))
(assert (= temp10605_202 #x0000000000000001))
(assert (= var2962447 temp10605_202))
(assert (= temp10605_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10605_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10605_204 #x0000000000000001))
(assert (= var211058 temp10605_204))
(assert (= temp10605_205 #x0000000000000001))
(assert (= var211188 temp10605_205))
(assert (= var3879401 var211188))
(assert (= temp10605_206 #x0000000000000000))
(assert (= var3866802 temp10605_206))
(assert (= temp10605_207 #x0000000000000000))
(assert (= temp10605_208
   (ite (bvslt var3866802 temp10605_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10605_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10605_208)))
(assert (= var3879420 temp10605_209))
(assert (bvslt (ite (bvslt var3866802 temp10605_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10605_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10605_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10605_211 #x0000000000000000))
(assert (= var3879421 temp10605_211))
(assert (= temp10605_212 #x0000000000000001))
(assert (= var3867690 temp10605_212))
(assert (= temp10605_213 #x0000000000000000))
(assert (= temp10605_214
   (ite (bvslt var3867690 temp10605_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10605_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10605_214)))
(assert (= var3879423 temp10605_215))
(assert (bvslt (ite (bvslt var3867690 temp10605_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10605_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10605_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10605_217 #x0000000000000001))
(assert (= var3879424 temp10605_217))
(assert (= temp10605_218 #x0000000000000000))
(assert (= var4133117 temp10605_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10605_219 #x0000000000000002))
(assert (= var4339331 temp10605_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10605_220 #x0000000000000000))
(assert (= var4404892 temp10605_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp10605_222 #xffffffffffffffff))
(assert (= temp10605_221 temp10605_222))
(assert (= temp10605_223 #x0000000000000001))
(assert (= var197674 temp10605_223))
(assert (= temp10605_224 #x0000000000000000))
(assert (= temp10605_225
   (ite (bvslt var197674 temp10605_224)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp10605_226 (select ARGNAME_input_NAMEEND_DIMSIZE temp10605_225)))
(assert (= var211595 temp10605_226))
(assert (bvslt (ite (bvslt var197674 temp10605_224)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10605_227 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp10605_227) #x0000000000000001 #x0000000000000000)))
(assert (= temp10605_228 #x0000000000000001))
(assert (= var211596 temp10605_228))
(assert (= temp10605_230 #xffffffffffffffff))
(assert (= temp10605_229 temp10605_230))
(assert (= temp10605_231 #x0000000000000001))
(assert (= var211058 temp10605_231))
(model-add temp10605_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10605_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10605_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10605_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




