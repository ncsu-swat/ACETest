(declare-fun temp11341_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp11341_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp11341_3 () (_ BitVec 64))
(declare-fun temp11341_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp11341_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp11341_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp11341_7 () (_ BitVec 64))
(declare-fun temp11341_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11341_9 () (_ BitVec 64))
(declare-fun temp11341_10 () (_ BitVec 64))
(declare-fun temp11341_11 () (_ BitVec 64))
(declare-fun temp11341_12 () (_ BitVec 64))
(declare-fun temp11341_13 () (_ BitVec 64))
(declare-fun temp11341_14 () (_ BitVec 64))
(declare-fun temp11341_15 () (_ BitVec 64))
(declare-fun temp11341_16 () (_ BitVec 64))
(declare-fun temp11341_17 () (_ BitVec 64))
(declare-fun temp11341_18 () (_ BitVec 64))
(declare-fun temp11341_19 () (_ BitVec 64))
(declare-fun temp11341_20 () (_ BitVec 64))
(declare-fun temp11341_21 () (_ BitVec 64))
(declare-fun temp11341_22 () (_ BitVec 64))
(declare-fun temp11341_23 () (_ BitVec 64))
(declare-fun temp11341_24 () (_ BitVec 64))
(declare-fun temp11341_25 () (_ BitVec 64))
(declare-fun temp11341_26 () (_ BitVec 64))
(declare-fun temp11341_27 () (_ BitVec 64))
(declare-fun temp11341_28 () (_ BitVec 64))
(declare-fun temp11341_29 () (_ BitVec 64))
(declare-fun temp11341_30 () (_ BitVec 64))
(declare-fun temp11341_31 () (_ BitVec 64))
(declare-fun temp11341_32 () (_ BitVec 64))
(declare-fun temp11341_33 () (_ BitVec 64))
(declare-fun temp11341_34 () (_ BitVec 64))
(declare-fun temp11341_35 () (_ BitVec 64))
(declare-fun temp11341_36 () (_ BitVec 64))
(declare-fun temp11341_37 () (_ BitVec 64))
(declare-fun temp11341_38 () (_ BitVec 64))
(declare-fun temp11341_39 () (_ BitVec 64))
(declare-fun temp11341_40 () (_ BitVec 64))
(declare-fun temp11341_41 () (_ BitVec 64))
(declare-fun temp11341_42 () (_ BitVec 64))
(declare-fun temp11341_43 () (_ BitVec 64))
(declare-fun temp11341_44 () (_ BitVec 64))
(declare-fun temp11341_45 () (_ BitVec 64))
(declare-fun temp11341_46 () (_ BitVec 64))
(declare-fun temp11341_47 () (_ BitVec 64))
(declare-fun temp11341_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp11341_49 () (_ BitVec 64))
(declare-fun temp11341_50 () (_ BitVec 64))
(declare-fun temp11341_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11341_52 () (_ BitVec 64))
(declare-fun temp11341_53 () (_ BitVec 64))
(declare-fun temp11341_54 () (_ BitVec 64))
(declare-fun temp11341_55 () (_ BitVec 64))
(declare-fun temp11341_56 () (_ BitVec 64))
(declare-fun temp11341_57 () (_ BitVec 64))
(declare-fun temp11341_58 () (_ BitVec 64))
(declare-fun temp11341_59 () (_ BitVec 64))
(declare-fun temp11341_60 () (_ BitVec 64))
(declare-fun temp11341_61 () (_ BitVec 64))
(declare-fun temp11341_62 () (_ BitVec 64))
(declare-fun temp11341_63 () (_ BitVec 64))
(declare-fun temp11341_64 () (_ BitVec 64))
(declare-fun temp11341_65 () (_ BitVec 64))
(declare-fun temp11341_66 () (_ BitVec 64))
(declare-fun temp11341_67 () (_ BitVec 64))
(declare-fun temp11341_68 () (_ BitVec 64))
(declare-fun temp11341_69 () (_ BitVec 64))
(declare-fun temp11341_70 () (_ BitVec 64))
(declare-fun temp11341_71 () (_ BitVec 64))
(declare-fun temp11341_72 () (_ BitVec 64))
(declare-fun temp11341_73 () (_ BitVec 64))
(declare-fun temp11341_74 () (_ BitVec 64))
(declare-fun temp11341_75 () (_ BitVec 64))
(declare-fun temp11341_76 () (_ BitVec 64))
(declare-fun temp11341_77 () (_ BitVec 64))
(declare-fun temp11341_78 () (_ BitVec 64))
(declare-fun temp11341_79 () (_ BitVec 64))
(declare-fun temp11341_80 () (_ BitVec 64))
(declare-fun temp11341_81 () (_ BitVec 64))
(declare-fun temp11341_82 () (_ BitVec 64))
(declare-fun temp11341_83 () (_ BitVec 64))
(declare-fun temp11341_84 () (_ BitVec 64))
(declare-fun temp11341_85 () (_ BitVec 64))
(declare-fun temp11341_86 () (_ BitVec 64))
(declare-fun temp11341_87 () (_ BitVec 64))
(declare-fun temp11341_88 () (_ BitVec 64))
(declare-fun temp11341_89 () (_ BitVec 64))
(declare-fun temp11341_90 () (_ BitVec 64))
(declare-fun temp11341_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp11341_92 () (_ BitVec 64))
(declare-fun temp11341_93 () (_ BitVec 64))
(declare-fun temp11341_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11341_95 () (_ BitVec 64))
(declare-fun temp11341_96 () (_ BitVec 64))
(declare-fun temp11341_97 () (_ BitVec 64))
(declare-fun temp11341_98 () (_ BitVec 64))
(declare-fun temp11341_99 () (_ BitVec 64))
(declare-fun temp11341_100 () (_ BitVec 64))
(declare-fun temp11341_101 () (_ BitVec 64))
(declare-fun temp11341_102 () (_ BitVec 64))
(declare-fun temp11341_103 () (_ BitVec 64))
(declare-fun temp11341_104 () (_ BitVec 64))
(declare-fun temp11341_105 () (_ BitVec 64))
(declare-fun temp11341_106 () (_ BitVec 64))
(declare-fun temp11341_107 () (_ BitVec 64))
(declare-fun temp11341_108 () (_ BitVec 64))
(declare-fun temp11341_109 () (_ BitVec 64))
(declare-fun temp11341_110 () (_ BitVec 64))
(declare-fun temp11341_111 () (_ BitVec 64))
(declare-fun temp11341_112 () (_ BitVec 64))
(declare-fun temp11341_113 () (_ BitVec 64))
(declare-fun temp11341_114 () (_ BitVec 64))
(declare-fun temp11341_115 () (_ BitVec 64))
(declare-fun temp11341_116 () (_ BitVec 64))
(declare-fun temp11341_117 () (_ BitVec 64))
(declare-fun temp11341_118 () (_ BitVec 64))
(declare-fun temp11341_119 () (_ BitVec 64))
(declare-fun temp11341_120 () (_ BitVec 64))
(declare-fun temp11341_121 () (_ BitVec 64))
(declare-fun temp11341_122 () (_ BitVec 64))
(declare-fun temp11341_123 () (_ BitVec 64))
(declare-fun temp11341_124 () (_ BitVec 64))
(declare-fun temp11341_125 () (_ BitVec 64))
(declare-fun temp11341_126 () (_ BitVec 64))
(declare-fun temp11341_127 () (_ BitVec 64))
(declare-fun temp11341_128 () (_ BitVec 64))
(declare-fun temp11341_129 () (_ BitVec 64))
(declare-fun temp11341_130 () (_ BitVec 64))
(declare-fun temp11341_131 () (_ BitVec 64))
(declare-fun temp11341_132 () (_ BitVec 64))
(declare-fun temp11341_133 () (_ BitVec 64))
(declare-fun temp11341_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp11341_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp11341_136 () (_ BitVec 64))
(declare-fun temp11341_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp11341_138 () (_ BitVec 64))
(declare-fun temp11341_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11341_140 () (_ BitVec 64))
(declare-fun temp11341_141 () (_ BitVec 64))
(declare-fun temp11341_142 () (_ BitVec 64))
(declare-fun temp11341_143 () (_ BitVec 64))
(declare-fun temp11341_144 () (_ BitVec 64))
(declare-fun temp11341_145 () (_ BitVec 64))
(declare-fun temp11341_146 () (_ BitVec 64))
(declare-fun temp11341_147 () (_ BitVec 64))
(declare-fun temp11341_148 () (_ BitVec 64))
(declare-fun temp11341_149 () (_ BitVec 64))
(declare-fun temp11341_150 () (_ BitVec 64))
(declare-fun temp11341_151 () (_ BitVec 64))
(declare-fun temp11341_152 () (_ BitVec 64))
(declare-fun temp11341_153 () (_ BitVec 64))
(declare-fun temp11341_154 () (_ BitVec 64))
(declare-fun temp11341_155 () (_ BitVec 64))
(declare-fun temp11341_157 () (_ BitVec 64))
(declare-fun temp11341_158 () (_ BitVec 64))
(declare-fun temp11341_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp11341_159 () (_ BitVec 64))
(declare-fun temp11341_160 () (_ BitVec 64))
(declare-fun temp11341_162 () (_ BitVec 64))
(declare-fun temp11341_163 () (_ BitVec 64))
(declare-fun temp11341_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp11341_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp11341_165 () (_ BitVec 64))
(declare-fun temp11341_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp11341_167 () (_ BitVec 64))
(declare-fun temp11341_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp11341_169 () (_ BitVec 64))
(declare-fun temp11341_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11341_171 () (_ BitVec 64))
(declare-fun temp11341_172 () (_ BitVec 64))
(declare-fun temp11341_173 () (_ BitVec 64))
(declare-fun temp11341_174 () (_ BitVec 64))
(declare-fun temp11341_175 () (_ BitVec 64))
(declare-fun temp11341_176 () (_ BitVec 64))
(declare-fun temp11341_177 () (_ BitVec 64))
(declare-fun temp11341_178 () (_ BitVec 64))
(declare-fun temp11341_179 () (_ BitVec 64))
(declare-fun temp11341_180 () (_ BitVec 64))
(declare-fun temp11341_181 () (_ BitVec 64))
(declare-fun temp11341_182 () (_ BitVec 64))
(declare-fun temp11341_183 () (_ BitVec 64))
(declare-fun temp11341_184 () (_ BitVec 64))
(declare-fun temp11341_185 () (_ BitVec 64))
(declare-fun temp11341_186 () (_ BitVec 64))
(declare-fun temp11341_187 () (_ BitVec 64))
(declare-fun temp11341_188 () (_ BitVec 64))
(declare-fun temp11341_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp11341_190 () (_ BitVec 64))
(declare-fun temp11341_192 () (_ BitVec 64))
(declare-fun temp11341_193 () (_ BitVec 64))
(declare-fun temp11341_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp11341_194 () (_ BitVec 64))
(declare-fun temp11341_195 () (_ BitVec 64))
(declare-fun temp11341_197 () (_ BitVec 64))
(declare-fun temp11341_198 () (_ BitVec 64))
(declare-fun temp11341_196 () (_ BitVec 64))
(declare-fun temp11341_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp11341_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp11341_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp11341_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp11341_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp11341_204 () (_ BitVec 64))
(declare-fun temp11341_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp11341_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp11341_207 () (_ BitVec 64))
(declare-fun temp11341_208 () (_ BitVec 64))
(declare-fun temp11341_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp11341_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp11341_211 () (_ BitVec 64))
(declare-fun temp11341_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp11341_213 () (_ BitVec 64))
(declare-fun temp11341_214 () (_ BitVec 64))
(declare-fun temp11341_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp11341_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp11341_217 () (_ BitVec 64))
(declare-fun temp11341_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp11341_219 () (_ BitVec 64))
(declare-fun var4404867 () (_ BitVec 64))
(declare-fun var4404869 () (_ BitVec 64))
(declare-fun var4470412 () (_ BitVec 64))
(declare-fun var4470413 () (_ BitVec 64))
(declare-fun var4470426 () (_ BitVec 64))
(declare-fun var4470428 () (_ BitVec 64))
(declare-fun temp11341_220 () (_ BitVec 64))
(declare-fun var4470453 () (_ BitVec 64))
(declare-fun var4470455 () (_ BitVec 64))
(declare-fun var4591443 () (_ BitVec 64))
(declare-fun var5190032 () (_ BitVec 64))
(declare-fun var211962 () (_ BitVec 64))
(declare-fun temp11341_221 () (_ BitVec 64))
(declare-fun var211963 () (_ BitVec 64))
(declare-fun temp11341_222 () (_ BitVec 64))
(assert (= temp11341_1 #x0000000000000001))
(assert (= var77203 temp11341_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp11341_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp11341_2)))
(assert (= temp11341_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp11341_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11341_4 #x0000000000000000))
(assert (= var210941 temp11341_4))
(assert (= temp11341_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp11341_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11341_6 #x0000000000000000))
(assert (= var210986 temp11341_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp11341_7 #x0000000000000000))
(assert (= temp11341_8 temp11341_7))
(assert (= temp11341_9 (select ARGNAME_padding_NAMEEND_VAL temp11341_8)))
(assert (= temp11341_10 #x0000000000000001))
(assert (= temp11341_11 temp11341_10))
(assert (= temp11341_12 (select ARGNAME_padding_NAMEEND_VAL temp11341_11)))
(assert (= temp11341_13 #x0000000000000002))
(assert (= temp11341_14 temp11341_13))
(assert (= temp11341_15 (select ARGNAME_padding_NAMEEND_VAL temp11341_14)))
(assert (= temp11341_16 #x0000000000000003))
(assert (= temp11341_17 temp11341_16))
(assert (= temp11341_18 (select ARGNAME_padding_NAMEEND_VAL temp11341_17)))
(assert (= temp11341_19 #x0000000000000004))
(assert (= temp11341_20 temp11341_19))
(assert (= temp11341_21 (select ARGNAME_padding_NAMEEND_VAL temp11341_20)))
(assert (= temp11341_22 #x0000000000000005))
(assert (= temp11341_23 temp11341_22))
(assert (= temp11341_24 (select ARGNAME_padding_NAMEEND_VAL temp11341_23)))
(assert (= temp11341_25 #x0000000000000000))
(assert (= temp11341_26 #x0000000000000000))
(assert (= temp11341_27 temp11341_26))
(assert (= temp11341_28 (select ARGNAME_padding_NAMEEND_VAL temp11341_27)))
(assert (= temp11341_29 #x0000000000000000))
(assert (= temp11341_30 #x0000000000000001))
(assert (= temp11341_31 temp11341_30))
(assert (= temp11341_32 (select ARGNAME_padding_NAMEEND_VAL temp11341_31)))
(assert (= temp11341_33 #x0000000000000000))
(assert (= temp11341_34 #x0000000000000002))
(assert (= temp11341_35 temp11341_34))
(assert (= temp11341_36 (select ARGNAME_padding_NAMEEND_VAL temp11341_35)))
(assert (= temp11341_37 #x0000000000000000))
(assert (= temp11341_38 #x0000000000000003))
(assert (= temp11341_39 temp11341_38))
(assert (= temp11341_40 (select ARGNAME_padding_NAMEEND_VAL temp11341_39)))
(assert (= temp11341_41 #x0000000000000000))
(assert (= temp11341_42 #x0000000000000004))
(assert (= temp11341_43 temp11341_42))
(assert (= temp11341_44 (select ARGNAME_padding_NAMEEND_VAL temp11341_43)))
(assert (= temp11341_45 #x0000000000000000))
(assert (= temp11341_46 #x0000000000000005))
(assert (= temp11341_47 temp11341_46))
(assert (= temp11341_48 (select ARGNAME_padding_NAMEEND_VAL temp11341_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp11341_28 temp11341_25)
             (bvslt temp11341_32 temp11341_29)
             (bvslt temp11341_36 temp11341_33)
             (bvslt temp11341_40 temp11341_37)
             (bvslt temp11341_44 temp11341_41)
             (bvslt temp11341_48 temp11341_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11341_49 #x0000000000000000))
(assert (= var1191714 temp11341_49))
(assert (= temp11341_50 #x0000000000000000))
(assert (= temp11341_51 temp11341_50))
(assert (= temp11341_52 (select ARGNAME_output_padding_NAMEEND_VAL temp11341_51)))
(assert (= temp11341_53 #x0000000000000001))
(assert (= temp11341_54 temp11341_53))
(assert (= temp11341_55 (select ARGNAME_output_padding_NAMEEND_VAL temp11341_54)))
(assert (= temp11341_56 #x0000000000000002))
(assert (= temp11341_57 temp11341_56))
(assert (= temp11341_58 (select ARGNAME_output_padding_NAMEEND_VAL temp11341_57)))
(assert (= temp11341_59 #x0000000000000003))
(assert (= temp11341_60 temp11341_59))
(assert (= temp11341_61 (select ARGNAME_output_padding_NAMEEND_VAL temp11341_60)))
(assert (= temp11341_62 #x0000000000000004))
(assert (= temp11341_63 temp11341_62))
(assert (= temp11341_64 (select ARGNAME_output_padding_NAMEEND_VAL temp11341_63)))
(assert (= temp11341_65 #x0000000000000005))
(assert (= temp11341_66 temp11341_65))
(assert (= temp11341_67 (select ARGNAME_output_padding_NAMEEND_VAL temp11341_66)))
(assert (= temp11341_68 #x0000000000000000))
(assert (= temp11341_69 #x0000000000000000))
(assert (= temp11341_70 temp11341_69))
(assert (= temp11341_71 (select ARGNAME_output_padding_NAMEEND_VAL temp11341_70)))
(assert (= temp11341_72 #x0000000000000000))
(assert (= temp11341_73 #x0000000000000001))
(assert (= temp11341_74 temp11341_73))
(assert (= temp11341_75 (select ARGNAME_output_padding_NAMEEND_VAL temp11341_74)))
(assert (= temp11341_76 #x0000000000000000))
(assert (= temp11341_77 #x0000000000000002))
(assert (= temp11341_78 temp11341_77))
(assert (= temp11341_79 (select ARGNAME_output_padding_NAMEEND_VAL temp11341_78)))
(assert (= temp11341_80 #x0000000000000000))
(assert (= temp11341_81 #x0000000000000003))
(assert (= temp11341_82 temp11341_81))
(assert (= temp11341_83 (select ARGNAME_output_padding_NAMEEND_VAL temp11341_82)))
(assert (= temp11341_84 #x0000000000000000))
(assert (= temp11341_85 #x0000000000000004))
(assert (= temp11341_86 temp11341_85))
(assert (= temp11341_87 (select ARGNAME_output_padding_NAMEEND_VAL temp11341_86)))
(assert (= temp11341_88 #x0000000000000000))
(assert (= temp11341_89 #x0000000000000005))
(assert (= temp11341_90 temp11341_89))
(assert (= temp11341_91 (select ARGNAME_output_padding_NAMEEND_VAL temp11341_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp11341_71 temp11341_68)
             (bvslt temp11341_75 temp11341_72)
             (bvslt temp11341_79 temp11341_76)
             (bvslt temp11341_83 temp11341_80)
             (bvslt temp11341_87 temp11341_84)
             (bvslt temp11341_91 temp11341_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11341_92 #x0000000000000000))
(assert (= var1191725 temp11341_92))
(assert (= temp11341_93 #x0000000000000000))
(assert (= temp11341_94 temp11341_93))
(assert (= temp11341_95 (select ARGNAME_stride_NAMEEND_VAL temp11341_94)))
(assert (= temp11341_96 #x0000000000000001))
(assert (= temp11341_97 temp11341_96))
(assert (= temp11341_98 (select ARGNAME_stride_NAMEEND_VAL temp11341_97)))
(assert (= temp11341_99 #x0000000000000002))
(assert (= temp11341_100 temp11341_99))
(assert (= temp11341_101 (select ARGNAME_stride_NAMEEND_VAL temp11341_100)))
(assert (= temp11341_102 #x0000000000000003))
(assert (= temp11341_103 temp11341_102))
(assert (= temp11341_104 (select ARGNAME_stride_NAMEEND_VAL temp11341_103)))
(assert (= temp11341_105 #x0000000000000004))
(assert (= temp11341_106 temp11341_105))
(assert (= temp11341_107 (select ARGNAME_stride_NAMEEND_VAL temp11341_106)))
(assert (= temp11341_108 #x0000000000000005))
(assert (= temp11341_109 temp11341_108))
(assert (= temp11341_110 (select ARGNAME_stride_NAMEEND_VAL temp11341_109)))
(assert (= temp11341_111 #x0000000000000000))
(assert (= temp11341_112 #x0000000000000000))
(assert (= temp11341_113 temp11341_112))
(assert (= temp11341_114 (select ARGNAME_stride_NAMEEND_VAL temp11341_113)))
(assert (= temp11341_115 #x0000000000000000))
(assert (= temp11341_116 #x0000000000000001))
(assert (= temp11341_117 temp11341_116))
(assert (= temp11341_118 (select ARGNAME_stride_NAMEEND_VAL temp11341_117)))
(assert (= temp11341_119 #x0000000000000000))
(assert (= temp11341_120 #x0000000000000002))
(assert (= temp11341_121 temp11341_120))
(assert (= temp11341_122 (select ARGNAME_stride_NAMEEND_VAL temp11341_121)))
(assert (= temp11341_123 #x0000000000000000))
(assert (= temp11341_124 #x0000000000000003))
(assert (= temp11341_125 temp11341_124))
(assert (= temp11341_126 (select ARGNAME_stride_NAMEEND_VAL temp11341_125)))
(assert (= temp11341_127 #x0000000000000000))
(assert (= temp11341_128 #x0000000000000004))
(assert (= temp11341_129 temp11341_128))
(assert (= temp11341_130 (select ARGNAME_stride_NAMEEND_VAL temp11341_129)))
(assert (= temp11341_131 #x0000000000000000))
(assert (= temp11341_132 #x0000000000000005))
(assert (= temp11341_133 temp11341_132))
(assert (= temp11341_134 (select ARGNAME_stride_NAMEEND_VAL temp11341_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp11341_114 temp11341_111)
             (bvsle temp11341_118 temp11341_115)
             (bvsle temp11341_122 temp11341_119)
             (bvsle temp11341_126 temp11341_123)
             (bvsle temp11341_130 temp11341_127)
             (bvsle temp11341_134 temp11341_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11341_135 #x0000000000000000))
(assert (= var1191735 temp11341_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11341_136 #x0000000000000001))
(assert (= var1191747 temp11341_136))
(assert (= temp11341_137 #x0000000000000000))
(assert (= var1179826 temp11341_137))
(assert (= temp11341_138 #x0000000000000000))
(assert (= temp11341_139 temp11341_138))
(assert (= temp11341_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11341_139)))
(assert (= temp11341_141 #x0000000000000001))
(assert (= temp11341_142 temp11341_141))
(assert (= temp11341_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11341_142)))
(assert (= temp11341_144 #x0000000000000002))
(assert (= temp11341_145 temp11341_144))
(assert (= temp11341_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11341_145)))
(assert (= temp11341_147 #x0000000000000003))
(assert (= temp11341_148 temp11341_147))
(assert (= temp11341_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11341_148)))
(assert (= temp11341_150 #x0000000000000004))
(assert (= temp11341_151 temp11341_150))
(assert (= temp11341_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11341_151)))
(assert (= temp11341_153 #x0000000000000005))
(assert (= temp11341_154 temp11341_153))
(assert (= temp11341_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11341_154)))
(assert (= temp11341_157 var1179826))
(assert (= temp11341_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11341_157)))
(assert (= temp11341_156 temp11341_158))
(assert (= var1191780
   (ite (bvslt temp11341_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11341_159 #x0000000000000000))
(assert (= var1191780 temp11341_159))
(assert (= temp11341_160 #x0000000000000000))
(assert (= var1179826 temp11341_160))
(assert (= temp11341_162 var1179826))
(assert (= temp11341_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11341_162)))
(assert (= temp11341_161 temp11341_163))
(assert (= var1191802 (bvsmod temp11341_161 ARGNAME_groups_NAMEEND)))
(assert (= temp11341_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp11341_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp11341_165 #x0000000000000001))
(assert (= var1191803 temp11341_165))
(assert (= temp11341_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp11341_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11341_167 #x0000000000000001))
(assert (= var1191823 temp11341_167))
(assert (= temp11341_168 #x0000000000000001))
(assert (= var1180714 temp11341_168))
(assert (= temp11341_169 #x0000000000000000))
(assert (= temp11341_170 temp11341_169))
(assert (= temp11341_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp11341_170)))
(assert (= temp11341_172 #x0000000000000001))
(assert (= temp11341_173 temp11341_172))
(assert (= temp11341_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp11341_173)))
(assert (= temp11341_175 #x0000000000000002))
(assert (= temp11341_176 temp11341_175))
(assert (= temp11341_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp11341_176)))
(assert (= temp11341_178 #x0000000000000003))
(assert (= temp11341_179 temp11341_178))
(assert (= temp11341_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp11341_179)))
(assert (= temp11341_181 #x0000000000000004))
(assert (= temp11341_182 temp11341_181))
(assert (= temp11341_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp11341_182)))
(assert (= temp11341_184 #x0000000000000005))
(assert (= temp11341_185 temp11341_184))
(assert (= temp11341_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp11341_185)))
(assert (= temp11341_187 #x0000000000000000))
(assert (= temp11341_188
   (ite (bvslt var1180714 temp11341_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp11341_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp11341_188)))
(assert (= var1191831 temp11341_189))
(assert (bvslt (ite (bvslt var1180714 temp11341_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11341_190 #x0000000000000001))
(assert (= var1180714 temp11341_190))
(assert (= temp11341_192 var1180714))
(assert (= temp11341_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11341_192)))
(assert (= temp11341_191 temp11341_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp11341_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp11341_194 #x0000000000000001))
(assert (= var1191836 temp11341_194))
(assert (= temp11341_195 #x0000000000000000))
(assert (= var1179826 temp11341_195))
(assert (= temp11341_197 var1179826))
(assert (= temp11341_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11341_197)))
(assert (= temp11341_196 temp11341_198))
(assert (= temp11341_199 #x0000000000000002))
(assert (= var1586025 temp11341_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp11341_200 #x0000000000000001))
(assert (= var1191993 temp11341_200))
(assert (= temp11341_201 #x0000000000000001))
(assert (= var2700303 temp11341_201))
(assert (= temp11341_202 #x0000000000000001))
(assert (= var2962447 temp11341_202))
(assert (= temp11341_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp11341_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11341_204 #x0000000000000001))
(assert (= var211058 temp11341_204))
(assert (= temp11341_205 #x0000000000000001))
(assert (= var211188 temp11341_205))
(assert (= var3879401 var211188))
(assert (= temp11341_206 #x0000000000000000))
(assert (= var3866802 temp11341_206))
(assert (= temp11341_207 #x0000000000000000))
(assert (= temp11341_208
   (ite (bvslt var3866802 temp11341_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp11341_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp11341_208)))
(assert (= var3879420 temp11341_209))
(assert (bvslt (ite (bvslt var3866802 temp11341_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11341_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp11341_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp11341_211 #x0000000000000000))
(assert (= var3879421 temp11341_211))
(assert (= temp11341_212 #x0000000000000001))
(assert (= var3867690 temp11341_212))
(assert (= temp11341_213 #x0000000000000000))
(assert (= temp11341_214
   (ite (bvslt var3867690 temp11341_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp11341_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp11341_214)))
(assert (= var3879423 temp11341_215))
(assert (bvslt (ite (bvslt var3867690 temp11341_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11341_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp11341_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp11341_217 #x0000000000000001))
(assert (= var3879424 temp11341_217))
(assert (= temp11341_218 #x0000000000000000))
(assert (= var4133117 temp11341_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp11341_219 #x0000000000000002))
(assert (= var4404867 temp11341_219))
(assert (= var4404869 (bvsub ARGNAME_weight_NAMEEND_DIM var4404867)))
(assert (= var4470412 var4404867))
(assert (= var4470413 var4404869))
(assert (= var4470426 (bvadd var4470413 var4470412)))
(assert (= var4470428
   (ite (bvsgt var4470426 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11341_220 #x0000000000000000))
(assert (= var4470428 temp11341_220))
(assert (= var4470453 var4470412))
(assert (= var4470455 var4470413))
(assert (= var4591443 var4470455))
(assert (= var5190032 var211201))
(assert (= var211962 var210913))
(assert (= temp11341_221 #x0000000000000000))
(assert (= var211963
   (ite (distinct var211962 temp11341_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11341_222 #x0000000000000001))
(assert (= var211058 temp11341_222))
(model-add temp11341_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp11341_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp11341_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp11341_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





