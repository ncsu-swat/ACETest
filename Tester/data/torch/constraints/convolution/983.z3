(declare-fun temp1310_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp1310_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1310_3 () (_ BitVec 64))
(declare-fun temp1310_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1310_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp1310_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1310_7 () (_ BitVec 64))
(declare-fun temp1310_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1310_9 () (_ BitVec 64))
(declare-fun temp1310_10 () (_ BitVec 64))
(declare-fun temp1310_11 () (_ BitVec 64))
(declare-fun temp1310_12 () (_ BitVec 64))
(declare-fun temp1310_13 () (_ BitVec 64))
(declare-fun temp1310_14 () (_ BitVec 64))
(declare-fun temp1310_15 () (_ BitVec 64))
(declare-fun temp1310_16 () (_ BitVec 64))
(declare-fun temp1310_17 () (_ BitVec 64))
(declare-fun temp1310_18 () (_ BitVec 64))
(declare-fun temp1310_19 () (_ BitVec 64))
(declare-fun temp1310_20 () (_ BitVec 64))
(declare-fun temp1310_21 () (_ BitVec 64))
(declare-fun temp1310_22 () (_ BitVec 64))
(declare-fun temp1310_23 () (_ BitVec 64))
(declare-fun temp1310_24 () (_ BitVec 64))
(declare-fun temp1310_25 () (_ BitVec 64))
(declare-fun temp1310_26 () (_ BitVec 64))
(declare-fun temp1310_27 () (_ BitVec 64))
(declare-fun temp1310_28 () (_ BitVec 64))
(declare-fun temp1310_29 () (_ BitVec 64))
(declare-fun temp1310_30 () (_ BitVec 64))
(declare-fun temp1310_31 () (_ BitVec 64))
(declare-fun temp1310_32 () (_ BitVec 64))
(declare-fun temp1310_33 () (_ BitVec 64))
(declare-fun temp1310_34 () (_ BitVec 64))
(declare-fun temp1310_35 () (_ BitVec 64))
(declare-fun temp1310_36 () (_ BitVec 64))
(declare-fun temp1310_37 () (_ BitVec 64))
(declare-fun temp1310_38 () (_ BitVec 64))
(declare-fun temp1310_39 () (_ BitVec 64))
(declare-fun temp1310_40 () (_ BitVec 64))
(declare-fun temp1310_41 () (_ BitVec 64))
(declare-fun temp1310_42 () (_ BitVec 64))
(declare-fun temp1310_43 () (_ BitVec 64))
(declare-fun temp1310_44 () (_ BitVec 64))
(declare-fun temp1310_45 () (_ BitVec 64))
(declare-fun temp1310_46 () (_ BitVec 64))
(declare-fun temp1310_47 () (_ BitVec 64))
(declare-fun temp1310_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp1310_49 () (_ BitVec 64))
(declare-fun temp1310_50 () (_ BitVec 64))
(declare-fun temp1310_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1310_52 () (_ BitVec 64))
(declare-fun temp1310_53 () (_ BitVec 64))
(declare-fun temp1310_54 () (_ BitVec 64))
(declare-fun temp1310_55 () (_ BitVec 64))
(declare-fun temp1310_56 () (_ BitVec 64))
(declare-fun temp1310_57 () (_ BitVec 64))
(declare-fun temp1310_58 () (_ BitVec 64))
(declare-fun temp1310_59 () (_ BitVec 64))
(declare-fun temp1310_60 () (_ BitVec 64))
(declare-fun temp1310_61 () (_ BitVec 64))
(declare-fun temp1310_62 () (_ BitVec 64))
(declare-fun temp1310_63 () (_ BitVec 64))
(declare-fun temp1310_64 () (_ BitVec 64))
(declare-fun temp1310_65 () (_ BitVec 64))
(declare-fun temp1310_66 () (_ BitVec 64))
(declare-fun temp1310_67 () (_ BitVec 64))
(declare-fun temp1310_68 () (_ BitVec 64))
(declare-fun temp1310_69 () (_ BitVec 64))
(declare-fun temp1310_70 () (_ BitVec 64))
(declare-fun temp1310_71 () (_ BitVec 64))
(declare-fun temp1310_72 () (_ BitVec 64))
(declare-fun temp1310_73 () (_ BitVec 64))
(declare-fun temp1310_74 () (_ BitVec 64))
(declare-fun temp1310_75 () (_ BitVec 64))
(declare-fun temp1310_76 () (_ BitVec 64))
(declare-fun temp1310_77 () (_ BitVec 64))
(declare-fun temp1310_78 () (_ BitVec 64))
(declare-fun temp1310_79 () (_ BitVec 64))
(declare-fun temp1310_80 () (_ BitVec 64))
(declare-fun temp1310_81 () (_ BitVec 64))
(declare-fun temp1310_82 () (_ BitVec 64))
(declare-fun temp1310_83 () (_ BitVec 64))
(declare-fun temp1310_84 () (_ BitVec 64))
(declare-fun temp1310_85 () (_ BitVec 64))
(declare-fun temp1310_86 () (_ BitVec 64))
(declare-fun temp1310_87 () (_ BitVec 64))
(declare-fun temp1310_88 () (_ BitVec 64))
(declare-fun temp1310_89 () (_ BitVec 64))
(declare-fun temp1310_90 () (_ BitVec 64))
(declare-fun temp1310_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp1310_92 () (_ BitVec 64))
(declare-fun temp1310_93 () (_ BitVec 64))
(declare-fun temp1310_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1310_95 () (_ BitVec 64))
(declare-fun temp1310_96 () (_ BitVec 64))
(declare-fun temp1310_97 () (_ BitVec 64))
(declare-fun temp1310_98 () (_ BitVec 64))
(declare-fun temp1310_99 () (_ BitVec 64))
(declare-fun temp1310_100 () (_ BitVec 64))
(declare-fun temp1310_101 () (_ BitVec 64))
(declare-fun temp1310_102 () (_ BitVec 64))
(declare-fun temp1310_103 () (_ BitVec 64))
(declare-fun temp1310_104 () (_ BitVec 64))
(declare-fun temp1310_105 () (_ BitVec 64))
(declare-fun temp1310_106 () (_ BitVec 64))
(declare-fun temp1310_107 () (_ BitVec 64))
(declare-fun temp1310_108 () (_ BitVec 64))
(declare-fun temp1310_109 () (_ BitVec 64))
(declare-fun temp1310_110 () (_ BitVec 64))
(declare-fun temp1310_111 () (_ BitVec 64))
(declare-fun temp1310_112 () (_ BitVec 64))
(declare-fun temp1310_113 () (_ BitVec 64))
(declare-fun temp1310_114 () (_ BitVec 64))
(declare-fun temp1310_115 () (_ BitVec 64))
(declare-fun temp1310_116 () (_ BitVec 64))
(declare-fun temp1310_117 () (_ BitVec 64))
(declare-fun temp1310_118 () (_ BitVec 64))
(declare-fun temp1310_119 () (_ BitVec 64))
(declare-fun temp1310_120 () (_ BitVec 64))
(declare-fun temp1310_121 () (_ BitVec 64))
(declare-fun temp1310_122 () (_ BitVec 64))
(declare-fun temp1310_123 () (_ BitVec 64))
(declare-fun temp1310_124 () (_ BitVec 64))
(declare-fun temp1310_125 () (_ BitVec 64))
(declare-fun temp1310_126 () (_ BitVec 64))
(declare-fun temp1310_127 () (_ BitVec 64))
(declare-fun temp1310_128 () (_ BitVec 64))
(declare-fun temp1310_129 () (_ BitVec 64))
(declare-fun temp1310_130 () (_ BitVec 64))
(declare-fun temp1310_131 () (_ BitVec 64))
(declare-fun temp1310_132 () (_ BitVec 64))
(declare-fun temp1310_133 () (_ BitVec 64))
(declare-fun temp1310_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp1310_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp1310_136 () (_ BitVec 64))
(declare-fun temp1310_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp1310_138 () (_ BitVec 64))
(declare-fun temp1310_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1310_140 () (_ BitVec 64))
(declare-fun temp1310_141 () (_ BitVec 64))
(declare-fun temp1310_142 () (_ BitVec 64))
(declare-fun temp1310_143 () (_ BitVec 64))
(declare-fun temp1310_144 () (_ BitVec 64))
(declare-fun temp1310_145 () (_ BitVec 64))
(declare-fun temp1310_146 () (_ BitVec 64))
(declare-fun temp1310_147 () (_ BitVec 64))
(declare-fun temp1310_148 () (_ BitVec 64))
(declare-fun temp1310_149 () (_ BitVec 64))
(declare-fun temp1310_150 () (_ BitVec 64))
(declare-fun temp1310_151 () (_ BitVec 64))
(declare-fun temp1310_152 () (_ BitVec 64))
(declare-fun temp1310_153 () (_ BitVec 64))
(declare-fun temp1310_154 () (_ BitVec 64))
(declare-fun temp1310_155 () (_ BitVec 64))
(declare-fun temp1310_157 () (_ BitVec 64))
(declare-fun temp1310_158 () (_ BitVec 64))
(declare-fun temp1310_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp1310_159 () (_ BitVec 64))
(declare-fun temp1310_160 () (_ BitVec 64))
(declare-fun temp1310_162 () (_ BitVec 64))
(declare-fun temp1310_163 () (_ BitVec 64))
(declare-fun temp1310_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp1310_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp1310_165 () (_ BitVec 64))
(declare-fun temp1310_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp1310_167 () (_ BitVec 64))
(declare-fun temp1310_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp1310_169 () (_ BitVec 64))
(declare-fun temp1310_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1310_171 () (_ BitVec 64))
(declare-fun temp1310_172 () (_ BitVec 64))
(declare-fun temp1310_173 () (_ BitVec 64))
(declare-fun temp1310_174 () (_ BitVec 64))
(declare-fun temp1310_175 () (_ BitVec 64))
(declare-fun temp1310_176 () (_ BitVec 64))
(declare-fun temp1310_177 () (_ BitVec 64))
(declare-fun temp1310_178 () (_ BitVec 64))
(declare-fun temp1310_179 () (_ BitVec 64))
(declare-fun temp1310_180 () (_ BitVec 64))
(declare-fun temp1310_181 () (_ BitVec 64))
(declare-fun temp1310_182 () (_ BitVec 64))
(declare-fun temp1310_183 () (_ BitVec 64))
(declare-fun temp1310_184 () (_ BitVec 64))
(declare-fun temp1310_185 () (_ BitVec 64))
(declare-fun temp1310_186 () (_ BitVec 64))
(declare-fun temp1310_187 () (_ BitVec 64))
(declare-fun temp1310_188 () (_ BitVec 64))
(declare-fun temp1310_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp1310_190 () (_ BitVec 64))
(declare-fun temp1310_192 () (_ BitVec 64))
(declare-fun temp1310_193 () (_ BitVec 64))
(declare-fun temp1310_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp1310_194 () (_ BitVec 64))
(declare-fun temp1310_195 () (_ BitVec 64))
(declare-fun temp1310_197 () (_ BitVec 64))
(declare-fun temp1310_198 () (_ BitVec 64))
(declare-fun temp1310_196 () (_ BitVec 64))
(declare-fun temp1310_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp1310_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp1310_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp1310_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp1310_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp1310_204 () (_ BitVec 64))
(declare-fun temp1310_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp1310_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp1310_207 () (_ BitVec 64))
(declare-fun temp1310_208 () (_ BitVec 64))
(declare-fun temp1310_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp1310_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp1310_211 () (_ BitVec 64))
(declare-fun temp1310_212 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp1310_213 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp1310_214 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp1310_216 () (_ BitVec 64))
(declare-fun temp1310_215 () (_ BitVec 64))
(declare-fun temp1310_217 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp1310_218 () (_ BitVec 64))
(declare-fun temp1310_219 () (_ BitVec 64))
(declare-fun temp1310_220 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp1310_221 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp1310_222 () (_ BitVec 64))
(declare-fun temp1310_224 () (_ BitVec 64))
(declare-fun temp1310_223 () (_ BitVec 64))
(declare-fun temp1310_225 () (_ BitVec 64))
(assert (= temp1310_1 #x0000000000000001))
(assert (= var77203 temp1310_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp1310_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp1310_2)))
(assert (= temp1310_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1310_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1310_4 #x0000000000000000))
(assert (= var210941 temp1310_4))
(assert (= temp1310_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp1310_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1310_6 #x0000000000000000))
(assert (= var210986 temp1310_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp1310_7 #x0000000000000000))
(assert (= temp1310_8 temp1310_7))
(assert (= temp1310_9 (select ARGNAME_padding_NAMEEND_VAL temp1310_8)))
(assert (= temp1310_10 #x0000000000000001))
(assert (= temp1310_11 temp1310_10))
(assert (= temp1310_12 (select ARGNAME_padding_NAMEEND_VAL temp1310_11)))
(assert (= temp1310_13 #x0000000000000002))
(assert (= temp1310_14 temp1310_13))
(assert (= temp1310_15 (select ARGNAME_padding_NAMEEND_VAL temp1310_14)))
(assert (= temp1310_16 #x0000000000000003))
(assert (= temp1310_17 temp1310_16))
(assert (= temp1310_18 (select ARGNAME_padding_NAMEEND_VAL temp1310_17)))
(assert (= temp1310_19 #x0000000000000004))
(assert (= temp1310_20 temp1310_19))
(assert (= temp1310_21 (select ARGNAME_padding_NAMEEND_VAL temp1310_20)))
(assert (= temp1310_22 #x0000000000000005))
(assert (= temp1310_23 temp1310_22))
(assert (= temp1310_24 (select ARGNAME_padding_NAMEEND_VAL temp1310_23)))
(assert (= temp1310_25 #x0000000000000000))
(assert (= temp1310_26 #x0000000000000000))
(assert (= temp1310_27 temp1310_26))
(assert (= temp1310_28 (select ARGNAME_padding_NAMEEND_VAL temp1310_27)))
(assert (= temp1310_29 #x0000000000000000))
(assert (= temp1310_30 #x0000000000000001))
(assert (= temp1310_31 temp1310_30))
(assert (= temp1310_32 (select ARGNAME_padding_NAMEEND_VAL temp1310_31)))
(assert (= temp1310_33 #x0000000000000000))
(assert (= temp1310_34 #x0000000000000002))
(assert (= temp1310_35 temp1310_34))
(assert (= temp1310_36 (select ARGNAME_padding_NAMEEND_VAL temp1310_35)))
(assert (= temp1310_37 #x0000000000000000))
(assert (= temp1310_38 #x0000000000000003))
(assert (= temp1310_39 temp1310_38))
(assert (= temp1310_40 (select ARGNAME_padding_NAMEEND_VAL temp1310_39)))
(assert (= temp1310_41 #x0000000000000000))
(assert (= temp1310_42 #x0000000000000004))
(assert (= temp1310_43 temp1310_42))
(assert (= temp1310_44 (select ARGNAME_padding_NAMEEND_VAL temp1310_43)))
(assert (= temp1310_45 #x0000000000000000))
(assert (= temp1310_46 #x0000000000000005))
(assert (= temp1310_47 temp1310_46))
(assert (= temp1310_48 (select ARGNAME_padding_NAMEEND_VAL temp1310_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp1310_28 temp1310_25)
             (bvslt temp1310_32 temp1310_29)
             (bvslt temp1310_36 temp1310_33)
             (bvslt temp1310_40 temp1310_37)
             (bvslt temp1310_44 temp1310_41)
             (bvslt temp1310_48 temp1310_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1310_49 #x0000000000000000))
(assert (= var1191714 temp1310_49))
(assert (= temp1310_50 #x0000000000000000))
(assert (= temp1310_51 temp1310_50))
(assert (= temp1310_52 (select ARGNAME_output_padding_NAMEEND_VAL temp1310_51)))
(assert (= temp1310_53 #x0000000000000001))
(assert (= temp1310_54 temp1310_53))
(assert (= temp1310_55 (select ARGNAME_output_padding_NAMEEND_VAL temp1310_54)))
(assert (= temp1310_56 #x0000000000000002))
(assert (= temp1310_57 temp1310_56))
(assert (= temp1310_58 (select ARGNAME_output_padding_NAMEEND_VAL temp1310_57)))
(assert (= temp1310_59 #x0000000000000003))
(assert (= temp1310_60 temp1310_59))
(assert (= temp1310_61 (select ARGNAME_output_padding_NAMEEND_VAL temp1310_60)))
(assert (= temp1310_62 #x0000000000000004))
(assert (= temp1310_63 temp1310_62))
(assert (= temp1310_64 (select ARGNAME_output_padding_NAMEEND_VAL temp1310_63)))
(assert (= temp1310_65 #x0000000000000005))
(assert (= temp1310_66 temp1310_65))
(assert (= temp1310_67 (select ARGNAME_output_padding_NAMEEND_VAL temp1310_66)))
(assert (= temp1310_68 #x0000000000000000))
(assert (= temp1310_69 #x0000000000000000))
(assert (= temp1310_70 temp1310_69))
(assert (= temp1310_71 (select ARGNAME_output_padding_NAMEEND_VAL temp1310_70)))
(assert (= temp1310_72 #x0000000000000000))
(assert (= temp1310_73 #x0000000000000001))
(assert (= temp1310_74 temp1310_73))
(assert (= temp1310_75 (select ARGNAME_output_padding_NAMEEND_VAL temp1310_74)))
(assert (= temp1310_76 #x0000000000000000))
(assert (= temp1310_77 #x0000000000000002))
(assert (= temp1310_78 temp1310_77))
(assert (= temp1310_79 (select ARGNAME_output_padding_NAMEEND_VAL temp1310_78)))
(assert (= temp1310_80 #x0000000000000000))
(assert (= temp1310_81 #x0000000000000003))
(assert (= temp1310_82 temp1310_81))
(assert (= temp1310_83 (select ARGNAME_output_padding_NAMEEND_VAL temp1310_82)))
(assert (= temp1310_84 #x0000000000000000))
(assert (= temp1310_85 #x0000000000000004))
(assert (= temp1310_86 temp1310_85))
(assert (= temp1310_87 (select ARGNAME_output_padding_NAMEEND_VAL temp1310_86)))
(assert (= temp1310_88 #x0000000000000000))
(assert (= temp1310_89 #x0000000000000005))
(assert (= temp1310_90 temp1310_89))
(assert (= temp1310_91 (select ARGNAME_output_padding_NAMEEND_VAL temp1310_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp1310_71 temp1310_68)
             (bvslt temp1310_75 temp1310_72)
             (bvslt temp1310_79 temp1310_76)
             (bvslt temp1310_83 temp1310_80)
             (bvslt temp1310_87 temp1310_84)
             (bvslt temp1310_91 temp1310_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1310_92 #x0000000000000000))
(assert (= var1191725 temp1310_92))
(assert (= temp1310_93 #x0000000000000000))
(assert (= temp1310_94 temp1310_93))
(assert (= temp1310_95 (select ARGNAME_stride_NAMEEND_VAL temp1310_94)))
(assert (= temp1310_96 #x0000000000000001))
(assert (= temp1310_97 temp1310_96))
(assert (= temp1310_98 (select ARGNAME_stride_NAMEEND_VAL temp1310_97)))
(assert (= temp1310_99 #x0000000000000002))
(assert (= temp1310_100 temp1310_99))
(assert (= temp1310_101 (select ARGNAME_stride_NAMEEND_VAL temp1310_100)))
(assert (= temp1310_102 #x0000000000000003))
(assert (= temp1310_103 temp1310_102))
(assert (= temp1310_104 (select ARGNAME_stride_NAMEEND_VAL temp1310_103)))
(assert (= temp1310_105 #x0000000000000004))
(assert (= temp1310_106 temp1310_105))
(assert (= temp1310_107 (select ARGNAME_stride_NAMEEND_VAL temp1310_106)))
(assert (= temp1310_108 #x0000000000000005))
(assert (= temp1310_109 temp1310_108))
(assert (= temp1310_110 (select ARGNAME_stride_NAMEEND_VAL temp1310_109)))
(assert (= temp1310_111 #x0000000000000000))
(assert (= temp1310_112 #x0000000000000000))
(assert (= temp1310_113 temp1310_112))
(assert (= temp1310_114 (select ARGNAME_stride_NAMEEND_VAL temp1310_113)))
(assert (= temp1310_115 #x0000000000000000))
(assert (= temp1310_116 #x0000000000000001))
(assert (= temp1310_117 temp1310_116))
(assert (= temp1310_118 (select ARGNAME_stride_NAMEEND_VAL temp1310_117)))
(assert (= temp1310_119 #x0000000000000000))
(assert (= temp1310_120 #x0000000000000002))
(assert (= temp1310_121 temp1310_120))
(assert (= temp1310_122 (select ARGNAME_stride_NAMEEND_VAL temp1310_121)))
(assert (= temp1310_123 #x0000000000000000))
(assert (= temp1310_124 #x0000000000000003))
(assert (= temp1310_125 temp1310_124))
(assert (= temp1310_126 (select ARGNAME_stride_NAMEEND_VAL temp1310_125)))
(assert (= temp1310_127 #x0000000000000000))
(assert (= temp1310_128 #x0000000000000004))
(assert (= temp1310_129 temp1310_128))
(assert (= temp1310_130 (select ARGNAME_stride_NAMEEND_VAL temp1310_129)))
(assert (= temp1310_131 #x0000000000000000))
(assert (= temp1310_132 #x0000000000000005))
(assert (= temp1310_133 temp1310_132))
(assert (= temp1310_134 (select ARGNAME_stride_NAMEEND_VAL temp1310_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp1310_114 temp1310_111)
             (bvsle temp1310_118 temp1310_115)
             (bvsle temp1310_122 temp1310_119)
             (bvsle temp1310_126 temp1310_123)
             (bvsle temp1310_130 temp1310_127)
             (bvsle temp1310_134 temp1310_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1310_135 #x0000000000000000))
(assert (= var1191735 temp1310_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1310_136 #x0000000000000001))
(assert (= var1191747 temp1310_136))
(assert (= temp1310_137 #x0000000000000000))
(assert (= var1179826 temp1310_137))
(assert (= temp1310_138 #x0000000000000000))
(assert (= temp1310_139 temp1310_138))
(assert (= temp1310_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1310_139)))
(assert (= temp1310_141 #x0000000000000001))
(assert (= temp1310_142 temp1310_141))
(assert (= temp1310_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1310_142)))
(assert (= temp1310_144 #x0000000000000002))
(assert (= temp1310_145 temp1310_144))
(assert (= temp1310_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1310_145)))
(assert (= temp1310_147 #x0000000000000003))
(assert (= temp1310_148 temp1310_147))
(assert (= temp1310_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1310_148)))
(assert (= temp1310_150 #x0000000000000004))
(assert (= temp1310_151 temp1310_150))
(assert (= temp1310_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1310_151)))
(assert (= temp1310_153 #x0000000000000005))
(assert (= temp1310_154 temp1310_153))
(assert (= temp1310_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1310_154)))
(assert (= temp1310_157 var1179826))
(assert (= temp1310_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1310_157)))
(assert (= temp1310_156 temp1310_158))
(assert (= var1191780
   (ite (bvslt temp1310_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1310_159 #x0000000000000000))
(assert (= var1191780 temp1310_159))
(assert (= temp1310_160 #x0000000000000000))
(assert (= var1179826 temp1310_160))
(assert (= temp1310_162 var1179826))
(assert (= temp1310_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1310_162)))
(assert (= temp1310_161 temp1310_163))
(assert (= var1191802 (bvsmod temp1310_161 ARGNAME_groups_NAMEEND)))
(assert (= temp1310_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp1310_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp1310_165 #x0000000000000001))
(assert (= var1191803 temp1310_165))
(assert (= temp1310_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp1310_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1310_167 #x0000000000000001))
(assert (= var1191823 temp1310_167))
(assert (= temp1310_168 #x0000000000000001))
(assert (= var1180714 temp1310_168))
(assert (= temp1310_169 #x0000000000000000))
(assert (= temp1310_170 temp1310_169))
(assert (= temp1310_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp1310_170)))
(assert (= temp1310_172 #x0000000000000001))
(assert (= temp1310_173 temp1310_172))
(assert (= temp1310_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp1310_173)))
(assert (= temp1310_175 #x0000000000000002))
(assert (= temp1310_176 temp1310_175))
(assert (= temp1310_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp1310_176)))
(assert (= temp1310_178 #x0000000000000003))
(assert (= temp1310_179 temp1310_178))
(assert (= temp1310_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp1310_179)))
(assert (= temp1310_181 #x0000000000000004))
(assert (= temp1310_182 temp1310_181))
(assert (= temp1310_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp1310_182)))
(assert (= temp1310_184 #x0000000000000005))
(assert (= temp1310_185 temp1310_184))
(assert (= temp1310_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp1310_185)))
(assert (= temp1310_187 #x0000000000000000))
(assert (= temp1310_188
   (ite (bvslt var1180714 temp1310_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp1310_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp1310_188)))
(assert (= var1191831 temp1310_189))
(assert (bvslt (ite (bvslt var1180714 temp1310_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1310_190 #x0000000000000001))
(assert (= var1180714 temp1310_190))
(assert (= temp1310_192 var1180714))
(assert (= temp1310_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1310_192)))
(assert (= temp1310_191 temp1310_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp1310_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp1310_194 #x0000000000000001))
(assert (= var1191836 temp1310_194))
(assert (= temp1310_195 #x0000000000000000))
(assert (= var1179826 temp1310_195))
(assert (= temp1310_197 var1179826))
(assert (= temp1310_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1310_197)))
(assert (= temp1310_196 temp1310_198))
(assert (= temp1310_199 #x0000000000000002))
(assert (= var1586025 temp1310_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp1310_200 #x0000000000000001))
(assert (= var1191993 temp1310_200))
(assert (= temp1310_201 #x0000000000000001))
(assert (= var2700303 temp1310_201))
(assert (= temp1310_202 #x0000000000000001))
(assert (= var2962447 temp1310_202))
(assert (= temp1310_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1310_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1310_204 #x0000000000000001))
(assert (= var211058 temp1310_204))
(assert (= temp1310_205 #x0000000000000001))
(assert (= var211188 temp1310_205))
(assert (= var3879401 var211188))
(assert (= temp1310_206 #x0000000000000000))
(assert (= var3866802 temp1310_206))
(assert (= temp1310_207 #x0000000000000000))
(assert (= temp1310_208
   (ite (bvslt var3866802 temp1310_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp1310_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp1310_208)))
(assert (= var3879420 temp1310_209))
(assert (bvslt (ite (bvslt var3866802 temp1310_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1310_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp1310_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp1310_211 #x0000000000000001))
(assert (= var3879421 temp1310_211))
(assert (= temp1310_212 #x0000000000000000))
(assert (= var4133117 temp1310_212))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp1310_213 #x0000000000000002))
(assert (= var4339331 temp1310_213))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1310_214 #x0000000000000000))
(assert (= var4404892 temp1310_214))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp1310_216 #xffffffffffffffff))
(assert (= temp1310_215 temp1310_216))
(assert (= temp1310_217 #x0000000000000001))
(assert (= var197674 temp1310_217))
(assert (= temp1310_218 #x0000000000000000))
(assert (= temp1310_219
   (ite (bvslt var197674 temp1310_218)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp1310_220 (select ARGNAME_input_NAMEEND_DIMSIZE temp1310_219)))
(assert (= var211595 temp1310_220))
(assert (bvslt (ite (bvslt var197674 temp1310_218)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1310_221 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp1310_221) #x0000000000000001 #x0000000000000000)))
(assert (= temp1310_222 #x0000000000000001))
(assert (= var211596 temp1310_222))
(assert (= temp1310_224 #xffffffffffffffff))
(assert (= temp1310_223 temp1310_224))
(assert (= temp1310_225 #x0000000000000001))
(assert (= var211058 temp1310_225))
(model-add temp1310_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp1310_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1310_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp1310_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





