(declare-fun temp10870_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10870_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10870_3 () (_ BitVec 64))
(declare-fun temp10870_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10870_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10870_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10870_7 () (_ BitVec 64))
(declare-fun temp10870_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10870_9 () (_ BitVec 64))
(declare-fun temp10870_10 () (_ BitVec 64))
(declare-fun temp10870_11 () (_ BitVec 64))
(declare-fun temp10870_12 () (_ BitVec 64))
(declare-fun temp10870_13 () (_ BitVec 64))
(declare-fun temp10870_14 () (_ BitVec 64))
(declare-fun temp10870_15 () (_ BitVec 64))
(declare-fun temp10870_16 () (_ BitVec 64))
(declare-fun temp10870_17 () (_ BitVec 64))
(declare-fun temp10870_18 () (_ BitVec 64))
(declare-fun temp10870_19 () (_ BitVec 64))
(declare-fun temp10870_20 () (_ BitVec 64))
(declare-fun temp10870_21 () (_ BitVec 64))
(declare-fun temp10870_22 () (_ BitVec 64))
(declare-fun temp10870_23 () (_ BitVec 64))
(declare-fun temp10870_24 () (_ BitVec 64))
(declare-fun temp10870_25 () (_ BitVec 64))
(declare-fun temp10870_26 () (_ BitVec 64))
(declare-fun temp10870_27 () (_ BitVec 64))
(declare-fun temp10870_28 () (_ BitVec 64))
(declare-fun temp10870_29 () (_ BitVec 64))
(declare-fun temp10870_30 () (_ BitVec 64))
(declare-fun temp10870_31 () (_ BitVec 64))
(declare-fun temp10870_32 () (_ BitVec 64))
(declare-fun temp10870_33 () (_ BitVec 64))
(declare-fun temp10870_34 () (_ BitVec 64))
(declare-fun temp10870_35 () (_ BitVec 64))
(declare-fun temp10870_36 () (_ BitVec 64))
(declare-fun temp10870_37 () (_ BitVec 64))
(declare-fun temp10870_38 () (_ BitVec 64))
(declare-fun temp10870_39 () (_ BitVec 64))
(declare-fun temp10870_40 () (_ BitVec 64))
(declare-fun temp10870_41 () (_ BitVec 64))
(declare-fun temp10870_42 () (_ BitVec 64))
(declare-fun temp10870_43 () (_ BitVec 64))
(declare-fun temp10870_44 () (_ BitVec 64))
(declare-fun temp10870_45 () (_ BitVec 64))
(declare-fun temp10870_46 () (_ BitVec 64))
(declare-fun temp10870_47 () (_ BitVec 64))
(declare-fun temp10870_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10870_49 () (_ BitVec 64))
(declare-fun temp10870_50 () (_ BitVec 64))
(declare-fun temp10870_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10870_52 () (_ BitVec 64))
(declare-fun temp10870_53 () (_ BitVec 64))
(declare-fun temp10870_54 () (_ BitVec 64))
(declare-fun temp10870_55 () (_ BitVec 64))
(declare-fun temp10870_56 () (_ BitVec 64))
(declare-fun temp10870_57 () (_ BitVec 64))
(declare-fun temp10870_58 () (_ BitVec 64))
(declare-fun temp10870_59 () (_ BitVec 64))
(declare-fun temp10870_60 () (_ BitVec 64))
(declare-fun temp10870_61 () (_ BitVec 64))
(declare-fun temp10870_62 () (_ BitVec 64))
(declare-fun temp10870_63 () (_ BitVec 64))
(declare-fun temp10870_64 () (_ BitVec 64))
(declare-fun temp10870_65 () (_ BitVec 64))
(declare-fun temp10870_66 () (_ BitVec 64))
(declare-fun temp10870_67 () (_ BitVec 64))
(declare-fun temp10870_68 () (_ BitVec 64))
(declare-fun temp10870_69 () (_ BitVec 64))
(declare-fun temp10870_70 () (_ BitVec 64))
(declare-fun temp10870_71 () (_ BitVec 64))
(declare-fun temp10870_72 () (_ BitVec 64))
(declare-fun temp10870_73 () (_ BitVec 64))
(declare-fun temp10870_74 () (_ BitVec 64))
(declare-fun temp10870_75 () (_ BitVec 64))
(declare-fun temp10870_76 () (_ BitVec 64))
(declare-fun temp10870_77 () (_ BitVec 64))
(declare-fun temp10870_78 () (_ BitVec 64))
(declare-fun temp10870_79 () (_ BitVec 64))
(declare-fun temp10870_80 () (_ BitVec 64))
(declare-fun temp10870_81 () (_ BitVec 64))
(declare-fun temp10870_82 () (_ BitVec 64))
(declare-fun temp10870_83 () (_ BitVec 64))
(declare-fun temp10870_84 () (_ BitVec 64))
(declare-fun temp10870_85 () (_ BitVec 64))
(declare-fun temp10870_86 () (_ BitVec 64))
(declare-fun temp10870_87 () (_ BitVec 64))
(declare-fun temp10870_88 () (_ BitVec 64))
(declare-fun temp10870_89 () (_ BitVec 64))
(declare-fun temp10870_90 () (_ BitVec 64))
(declare-fun temp10870_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10870_92 () (_ BitVec 64))
(declare-fun temp10870_93 () (_ BitVec 64))
(declare-fun temp10870_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10870_95 () (_ BitVec 64))
(declare-fun temp10870_96 () (_ BitVec 64))
(declare-fun temp10870_97 () (_ BitVec 64))
(declare-fun temp10870_98 () (_ BitVec 64))
(declare-fun temp10870_99 () (_ BitVec 64))
(declare-fun temp10870_100 () (_ BitVec 64))
(declare-fun temp10870_101 () (_ BitVec 64))
(declare-fun temp10870_102 () (_ BitVec 64))
(declare-fun temp10870_103 () (_ BitVec 64))
(declare-fun temp10870_104 () (_ BitVec 64))
(declare-fun temp10870_105 () (_ BitVec 64))
(declare-fun temp10870_106 () (_ BitVec 64))
(declare-fun temp10870_107 () (_ BitVec 64))
(declare-fun temp10870_108 () (_ BitVec 64))
(declare-fun temp10870_109 () (_ BitVec 64))
(declare-fun temp10870_110 () (_ BitVec 64))
(declare-fun temp10870_111 () (_ BitVec 64))
(declare-fun temp10870_112 () (_ BitVec 64))
(declare-fun temp10870_113 () (_ BitVec 64))
(declare-fun temp10870_114 () (_ BitVec 64))
(declare-fun temp10870_115 () (_ BitVec 64))
(declare-fun temp10870_116 () (_ BitVec 64))
(declare-fun temp10870_117 () (_ BitVec 64))
(declare-fun temp10870_118 () (_ BitVec 64))
(declare-fun temp10870_119 () (_ BitVec 64))
(declare-fun temp10870_120 () (_ BitVec 64))
(declare-fun temp10870_121 () (_ BitVec 64))
(declare-fun temp10870_122 () (_ BitVec 64))
(declare-fun temp10870_123 () (_ BitVec 64))
(declare-fun temp10870_124 () (_ BitVec 64))
(declare-fun temp10870_125 () (_ BitVec 64))
(declare-fun temp10870_126 () (_ BitVec 64))
(declare-fun temp10870_127 () (_ BitVec 64))
(declare-fun temp10870_128 () (_ BitVec 64))
(declare-fun temp10870_129 () (_ BitVec 64))
(declare-fun temp10870_130 () (_ BitVec 64))
(declare-fun temp10870_131 () (_ BitVec 64))
(declare-fun temp10870_132 () (_ BitVec 64))
(declare-fun temp10870_133 () (_ BitVec 64))
(declare-fun temp10870_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10870_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10870_136 () (_ BitVec 64))
(declare-fun temp10870_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10870_138 () (_ BitVec 64))
(declare-fun temp10870_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10870_140 () (_ BitVec 64))
(declare-fun temp10870_141 () (_ BitVec 64))
(declare-fun temp10870_142 () (_ BitVec 64))
(declare-fun temp10870_143 () (_ BitVec 64))
(declare-fun temp10870_144 () (_ BitVec 64))
(declare-fun temp10870_145 () (_ BitVec 64))
(declare-fun temp10870_146 () (_ BitVec 64))
(declare-fun temp10870_147 () (_ BitVec 64))
(declare-fun temp10870_148 () (_ BitVec 64))
(declare-fun temp10870_149 () (_ BitVec 64))
(declare-fun temp10870_150 () (_ BitVec 64))
(declare-fun temp10870_151 () (_ BitVec 64))
(declare-fun temp10870_152 () (_ BitVec 64))
(declare-fun temp10870_153 () (_ BitVec 64))
(declare-fun temp10870_154 () (_ BitVec 64))
(declare-fun temp10870_155 () (_ BitVec 64))
(declare-fun temp10870_157 () (_ BitVec 64))
(declare-fun temp10870_158 () (_ BitVec 64))
(declare-fun temp10870_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10870_159 () (_ BitVec 64))
(declare-fun temp10870_160 () (_ BitVec 64))
(declare-fun temp10870_162 () (_ BitVec 64))
(declare-fun temp10870_163 () (_ BitVec 64))
(declare-fun temp10870_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10870_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10870_165 () (_ BitVec 64))
(declare-fun temp10870_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10870_167 () (_ BitVec 64))
(declare-fun temp10870_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10870_169 () (_ BitVec 64))
(declare-fun temp10870_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10870_171 () (_ BitVec 64))
(declare-fun temp10870_172 () (_ BitVec 64))
(declare-fun temp10870_173 () (_ BitVec 64))
(declare-fun temp10870_174 () (_ BitVec 64))
(declare-fun temp10870_175 () (_ BitVec 64))
(declare-fun temp10870_176 () (_ BitVec 64))
(declare-fun temp10870_177 () (_ BitVec 64))
(declare-fun temp10870_178 () (_ BitVec 64))
(declare-fun temp10870_179 () (_ BitVec 64))
(declare-fun temp10870_180 () (_ BitVec 64))
(declare-fun temp10870_181 () (_ BitVec 64))
(declare-fun temp10870_182 () (_ BitVec 64))
(declare-fun temp10870_183 () (_ BitVec 64))
(declare-fun temp10870_184 () (_ BitVec 64))
(declare-fun temp10870_185 () (_ BitVec 64))
(declare-fun temp10870_186 () (_ BitVec 64))
(declare-fun temp10870_187 () (_ BitVec 64))
(declare-fun temp10870_188 () (_ BitVec 64))
(declare-fun temp10870_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10870_190 () (_ BitVec 64))
(declare-fun temp10870_192 () (_ BitVec 64))
(declare-fun temp10870_193 () (_ BitVec 64))
(declare-fun temp10870_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10870_194 () (_ BitVec 64))
(declare-fun temp10870_195 () (_ BitVec 64))
(declare-fun temp10870_197 () (_ BitVec 64))
(declare-fun temp10870_198 () (_ BitVec 64))
(declare-fun temp10870_196 () (_ BitVec 64))
(declare-fun temp10870_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10870_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10870_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10870_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10870_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10870_204 () (_ BitVec 64))
(declare-fun temp10870_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10870_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10870_207 () (_ BitVec 64))
(declare-fun temp10870_208 () (_ BitVec 64))
(declare-fun temp10870_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10870_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10870_211 () (_ BitVec 64))
(declare-fun temp10870_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10870_213 () (_ BitVec 64))
(declare-fun temp10870_214 () (_ BitVec 64))
(declare-fun temp10870_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10870_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10870_217 () (_ BitVec 64))
(declare-fun temp10870_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10870_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10870_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp10870_221 () (_ BitVec 64))
(assert (= temp10870_1 #x0000000000000001))
(assert (= var77203 temp10870_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10870_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10870_2)))
(assert (= temp10870_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10870_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10870_4 #x0000000000000000))
(assert (= var210941 temp10870_4))
(assert (= temp10870_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10870_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10870_6 #x0000000000000000))
(assert (= var210986 temp10870_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10870_7 #x0000000000000000))
(assert (= temp10870_8 temp10870_7))
(assert (= temp10870_9 (select ARGNAME_padding_NAMEEND_VAL temp10870_8)))
(assert (= temp10870_10 #x0000000000000001))
(assert (= temp10870_11 temp10870_10))
(assert (= temp10870_12 (select ARGNAME_padding_NAMEEND_VAL temp10870_11)))
(assert (= temp10870_13 #x0000000000000002))
(assert (= temp10870_14 temp10870_13))
(assert (= temp10870_15 (select ARGNAME_padding_NAMEEND_VAL temp10870_14)))
(assert (= temp10870_16 #x0000000000000003))
(assert (= temp10870_17 temp10870_16))
(assert (= temp10870_18 (select ARGNAME_padding_NAMEEND_VAL temp10870_17)))
(assert (= temp10870_19 #x0000000000000004))
(assert (= temp10870_20 temp10870_19))
(assert (= temp10870_21 (select ARGNAME_padding_NAMEEND_VAL temp10870_20)))
(assert (= temp10870_22 #x0000000000000005))
(assert (= temp10870_23 temp10870_22))
(assert (= temp10870_24 (select ARGNAME_padding_NAMEEND_VAL temp10870_23)))
(assert (= temp10870_25 #x0000000000000000))
(assert (= temp10870_26 #x0000000000000000))
(assert (= temp10870_27 temp10870_26))
(assert (= temp10870_28 (select ARGNAME_padding_NAMEEND_VAL temp10870_27)))
(assert (= temp10870_29 #x0000000000000000))
(assert (= temp10870_30 #x0000000000000001))
(assert (= temp10870_31 temp10870_30))
(assert (= temp10870_32 (select ARGNAME_padding_NAMEEND_VAL temp10870_31)))
(assert (= temp10870_33 #x0000000000000000))
(assert (= temp10870_34 #x0000000000000002))
(assert (= temp10870_35 temp10870_34))
(assert (= temp10870_36 (select ARGNAME_padding_NAMEEND_VAL temp10870_35)))
(assert (= temp10870_37 #x0000000000000000))
(assert (= temp10870_38 #x0000000000000003))
(assert (= temp10870_39 temp10870_38))
(assert (= temp10870_40 (select ARGNAME_padding_NAMEEND_VAL temp10870_39)))
(assert (= temp10870_41 #x0000000000000000))
(assert (= temp10870_42 #x0000000000000004))
(assert (= temp10870_43 temp10870_42))
(assert (= temp10870_44 (select ARGNAME_padding_NAMEEND_VAL temp10870_43)))
(assert (= temp10870_45 #x0000000000000000))
(assert (= temp10870_46 #x0000000000000005))
(assert (= temp10870_47 temp10870_46))
(assert (= temp10870_48 (select ARGNAME_padding_NAMEEND_VAL temp10870_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10870_28 temp10870_25)
             (bvslt temp10870_32 temp10870_29)
             (bvslt temp10870_36 temp10870_33)
             (bvslt temp10870_40 temp10870_37)
             (bvslt temp10870_44 temp10870_41)
             (bvslt temp10870_48 temp10870_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10870_49 #x0000000000000000))
(assert (= var1191714 temp10870_49))
(assert (= temp10870_50 #x0000000000000000))
(assert (= temp10870_51 temp10870_50))
(assert (= temp10870_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10870_51)))
(assert (= temp10870_53 #x0000000000000001))
(assert (= temp10870_54 temp10870_53))
(assert (= temp10870_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10870_54)))
(assert (= temp10870_56 #x0000000000000002))
(assert (= temp10870_57 temp10870_56))
(assert (= temp10870_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10870_57)))
(assert (= temp10870_59 #x0000000000000003))
(assert (= temp10870_60 temp10870_59))
(assert (= temp10870_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10870_60)))
(assert (= temp10870_62 #x0000000000000004))
(assert (= temp10870_63 temp10870_62))
(assert (= temp10870_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10870_63)))
(assert (= temp10870_65 #x0000000000000005))
(assert (= temp10870_66 temp10870_65))
(assert (= temp10870_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10870_66)))
(assert (= temp10870_68 #x0000000000000000))
(assert (= temp10870_69 #x0000000000000000))
(assert (= temp10870_70 temp10870_69))
(assert (= temp10870_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10870_70)))
(assert (= temp10870_72 #x0000000000000000))
(assert (= temp10870_73 #x0000000000000001))
(assert (= temp10870_74 temp10870_73))
(assert (= temp10870_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10870_74)))
(assert (= temp10870_76 #x0000000000000000))
(assert (= temp10870_77 #x0000000000000002))
(assert (= temp10870_78 temp10870_77))
(assert (= temp10870_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10870_78)))
(assert (= temp10870_80 #x0000000000000000))
(assert (= temp10870_81 #x0000000000000003))
(assert (= temp10870_82 temp10870_81))
(assert (= temp10870_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10870_82)))
(assert (= temp10870_84 #x0000000000000000))
(assert (= temp10870_85 #x0000000000000004))
(assert (= temp10870_86 temp10870_85))
(assert (= temp10870_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10870_86)))
(assert (= temp10870_88 #x0000000000000000))
(assert (= temp10870_89 #x0000000000000005))
(assert (= temp10870_90 temp10870_89))
(assert (= temp10870_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10870_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10870_71 temp10870_68)
             (bvslt temp10870_75 temp10870_72)
             (bvslt temp10870_79 temp10870_76)
             (bvslt temp10870_83 temp10870_80)
             (bvslt temp10870_87 temp10870_84)
             (bvslt temp10870_91 temp10870_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10870_92 #x0000000000000000))
(assert (= var1191725 temp10870_92))
(assert (= temp10870_93 #x0000000000000000))
(assert (= temp10870_94 temp10870_93))
(assert (= temp10870_95 (select ARGNAME_stride_NAMEEND_VAL temp10870_94)))
(assert (= temp10870_96 #x0000000000000001))
(assert (= temp10870_97 temp10870_96))
(assert (= temp10870_98 (select ARGNAME_stride_NAMEEND_VAL temp10870_97)))
(assert (= temp10870_99 #x0000000000000002))
(assert (= temp10870_100 temp10870_99))
(assert (= temp10870_101 (select ARGNAME_stride_NAMEEND_VAL temp10870_100)))
(assert (= temp10870_102 #x0000000000000003))
(assert (= temp10870_103 temp10870_102))
(assert (= temp10870_104 (select ARGNAME_stride_NAMEEND_VAL temp10870_103)))
(assert (= temp10870_105 #x0000000000000004))
(assert (= temp10870_106 temp10870_105))
(assert (= temp10870_107 (select ARGNAME_stride_NAMEEND_VAL temp10870_106)))
(assert (= temp10870_108 #x0000000000000005))
(assert (= temp10870_109 temp10870_108))
(assert (= temp10870_110 (select ARGNAME_stride_NAMEEND_VAL temp10870_109)))
(assert (= temp10870_111 #x0000000000000000))
(assert (= temp10870_112 #x0000000000000000))
(assert (= temp10870_113 temp10870_112))
(assert (= temp10870_114 (select ARGNAME_stride_NAMEEND_VAL temp10870_113)))
(assert (= temp10870_115 #x0000000000000000))
(assert (= temp10870_116 #x0000000000000001))
(assert (= temp10870_117 temp10870_116))
(assert (= temp10870_118 (select ARGNAME_stride_NAMEEND_VAL temp10870_117)))
(assert (= temp10870_119 #x0000000000000000))
(assert (= temp10870_120 #x0000000000000002))
(assert (= temp10870_121 temp10870_120))
(assert (= temp10870_122 (select ARGNAME_stride_NAMEEND_VAL temp10870_121)))
(assert (= temp10870_123 #x0000000000000000))
(assert (= temp10870_124 #x0000000000000003))
(assert (= temp10870_125 temp10870_124))
(assert (= temp10870_126 (select ARGNAME_stride_NAMEEND_VAL temp10870_125)))
(assert (= temp10870_127 #x0000000000000000))
(assert (= temp10870_128 #x0000000000000004))
(assert (= temp10870_129 temp10870_128))
(assert (= temp10870_130 (select ARGNAME_stride_NAMEEND_VAL temp10870_129)))
(assert (= temp10870_131 #x0000000000000000))
(assert (= temp10870_132 #x0000000000000005))
(assert (= temp10870_133 temp10870_132))
(assert (= temp10870_134 (select ARGNAME_stride_NAMEEND_VAL temp10870_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10870_114 temp10870_111)
             (bvsle temp10870_118 temp10870_115)
             (bvsle temp10870_122 temp10870_119)
             (bvsle temp10870_126 temp10870_123)
             (bvsle temp10870_130 temp10870_127)
             (bvsle temp10870_134 temp10870_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10870_135 #x0000000000000000))
(assert (= var1191735 temp10870_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10870_136 #x0000000000000001))
(assert (= var1191747 temp10870_136))
(assert (= temp10870_137 #x0000000000000000))
(assert (= var1179826 temp10870_137))
(assert (= temp10870_138 #x0000000000000000))
(assert (= temp10870_139 temp10870_138))
(assert (= temp10870_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10870_139)))
(assert (= temp10870_141 #x0000000000000001))
(assert (= temp10870_142 temp10870_141))
(assert (= temp10870_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10870_142)))
(assert (= temp10870_144 #x0000000000000002))
(assert (= temp10870_145 temp10870_144))
(assert (= temp10870_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10870_145)))
(assert (= temp10870_147 #x0000000000000003))
(assert (= temp10870_148 temp10870_147))
(assert (= temp10870_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10870_148)))
(assert (= temp10870_150 #x0000000000000004))
(assert (= temp10870_151 temp10870_150))
(assert (= temp10870_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10870_151)))
(assert (= temp10870_153 #x0000000000000005))
(assert (= temp10870_154 temp10870_153))
(assert (= temp10870_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10870_154)))
(assert (= temp10870_157 var1179826))
(assert (= temp10870_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10870_157)))
(assert (= temp10870_156 temp10870_158))
(assert (= var1191780
   (ite (bvslt temp10870_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10870_159 #x0000000000000000))
(assert (= var1191780 temp10870_159))
(assert (= temp10870_160 #x0000000000000000))
(assert (= var1179826 temp10870_160))
(assert (= temp10870_162 var1179826))
(assert (= temp10870_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10870_162)))
(assert (= temp10870_161 temp10870_163))
(assert (= var1191802 (bvsmod temp10870_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10870_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10870_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10870_165 #x0000000000000001))
(assert (= var1191803 temp10870_165))
(assert (= temp10870_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10870_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10870_167 #x0000000000000001))
(assert (= var1191823 temp10870_167))
(assert (= temp10870_168 #x0000000000000001))
(assert (= var1180714 temp10870_168))
(assert (= temp10870_169 #x0000000000000000))
(assert (= temp10870_170 temp10870_169))
(assert (= temp10870_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10870_170)))
(assert (= temp10870_172 #x0000000000000001))
(assert (= temp10870_173 temp10870_172))
(assert (= temp10870_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10870_173)))
(assert (= temp10870_175 #x0000000000000002))
(assert (= temp10870_176 temp10870_175))
(assert (= temp10870_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10870_176)))
(assert (= temp10870_178 #x0000000000000003))
(assert (= temp10870_179 temp10870_178))
(assert (= temp10870_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10870_179)))
(assert (= temp10870_181 #x0000000000000004))
(assert (= temp10870_182 temp10870_181))
(assert (= temp10870_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10870_182)))
(assert (= temp10870_184 #x0000000000000005))
(assert (= temp10870_185 temp10870_184))
(assert (= temp10870_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10870_185)))
(assert (= temp10870_187 #x0000000000000000))
(assert (= temp10870_188
   (ite (bvslt var1180714 temp10870_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10870_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10870_188)))
(assert (= var1191831 temp10870_189))
(assert (bvslt (ite (bvslt var1180714 temp10870_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10870_190 #x0000000000000001))
(assert (= var1180714 temp10870_190))
(assert (= temp10870_192 var1180714))
(assert (= temp10870_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10870_192)))
(assert (= temp10870_191 temp10870_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10870_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10870_194 #x0000000000000001))
(assert (= var1191836 temp10870_194))
(assert (= temp10870_195 #x0000000000000000))
(assert (= var1179826 temp10870_195))
(assert (= temp10870_197 var1179826))
(assert (= temp10870_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10870_197)))
(assert (= temp10870_196 temp10870_198))
(assert (= temp10870_199 #x0000000000000002))
(assert (= var1586025 temp10870_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10870_200 #x0000000000000001))
(assert (= var1191993 temp10870_200))
(assert (= temp10870_201 #x0000000000000001))
(assert (= var2700303 temp10870_201))
(assert (= temp10870_202 #x0000000000000001))
(assert (= var2962447 temp10870_202))
(assert (= temp10870_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10870_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10870_204 #x0000000000000001))
(assert (= var211058 temp10870_204))
(assert (= temp10870_205 #x0000000000000001))
(assert (= var211188 temp10870_205))
(assert (= var3879401 var211188))
(assert (= temp10870_206 #x0000000000000000))
(assert (= var3866802 temp10870_206))
(assert (= temp10870_207 #x0000000000000000))
(assert (= temp10870_208
   (ite (bvslt var3866802 temp10870_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10870_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10870_208)))
(assert (= var3879420 temp10870_209))
(assert (bvslt (ite (bvslt var3866802 temp10870_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10870_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10870_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10870_211 #x0000000000000000))
(assert (= var3879421 temp10870_211))
(assert (= temp10870_212 #x0000000000000001))
(assert (= var3867690 temp10870_212))
(assert (= temp10870_213 #x0000000000000000))
(assert (= temp10870_214
   (ite (bvslt var3867690 temp10870_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10870_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10870_214)))
(assert (= var3879423 temp10870_215))
(assert (bvslt (ite (bvslt var3867690 temp10870_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10870_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10870_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10870_217 #x0000000000000001))
(assert (= var3879424 temp10870_217))
(assert (= temp10870_218 #x0000000000000000))
(assert (= var4133117 temp10870_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10870_219 #x0000000000000002))
(assert (= var4339331 temp10870_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10870_220 #x0000000000000000))
(assert (= var4404892 temp10870_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp10870_221 #x0000000000000001))
(assert (= var211058 temp10870_221))
(model-add temp10870_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10870_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10870_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10870_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





