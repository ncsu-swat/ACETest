(declare-fun temp888_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp888_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp888_3 () (_ BitVec 64))
(declare-fun temp888_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp888_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp888_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp888_7 () (_ BitVec 64))
(declare-fun temp888_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp888_9 () (_ BitVec 64))
(declare-fun temp888_10 () (_ BitVec 64))
(declare-fun temp888_11 () (_ BitVec 64))
(declare-fun temp888_12 () (_ BitVec 64))
(declare-fun temp888_13 () (_ BitVec 64))
(declare-fun temp888_14 () (_ BitVec 64))
(declare-fun temp888_15 () (_ BitVec 64))
(declare-fun temp888_16 () (_ BitVec 64))
(declare-fun temp888_17 () (_ BitVec 64))
(declare-fun temp888_18 () (_ BitVec 64))
(declare-fun temp888_19 () (_ BitVec 64))
(declare-fun temp888_20 () (_ BitVec 64))
(declare-fun temp888_21 () (_ BitVec 64))
(declare-fun temp888_22 () (_ BitVec 64))
(declare-fun temp888_23 () (_ BitVec 64))
(declare-fun temp888_24 () (_ BitVec 64))
(declare-fun temp888_25 () (_ BitVec 64))
(declare-fun temp888_26 () (_ BitVec 64))
(declare-fun temp888_27 () (_ BitVec 64))
(declare-fun temp888_28 () (_ BitVec 64))
(declare-fun temp888_29 () (_ BitVec 64))
(declare-fun temp888_30 () (_ BitVec 64))
(declare-fun temp888_31 () (_ BitVec 64))
(declare-fun temp888_32 () (_ BitVec 64))
(declare-fun temp888_33 () (_ BitVec 64))
(declare-fun temp888_34 () (_ BitVec 64))
(declare-fun temp888_35 () (_ BitVec 64))
(declare-fun temp888_36 () (_ BitVec 64))
(declare-fun temp888_37 () (_ BitVec 64))
(declare-fun temp888_38 () (_ BitVec 64))
(declare-fun temp888_39 () (_ BitVec 64))
(declare-fun temp888_40 () (_ BitVec 64))
(declare-fun temp888_41 () (_ BitVec 64))
(declare-fun temp888_42 () (_ BitVec 64))
(declare-fun temp888_43 () (_ BitVec 64))
(declare-fun temp888_44 () (_ BitVec 64))
(declare-fun temp888_45 () (_ BitVec 64))
(declare-fun temp888_46 () (_ BitVec 64))
(declare-fun temp888_47 () (_ BitVec 64))
(declare-fun temp888_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp888_49 () (_ BitVec 64))
(declare-fun temp888_50 () (_ BitVec 64))
(declare-fun temp888_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp888_52 () (_ BitVec 64))
(declare-fun temp888_53 () (_ BitVec 64))
(declare-fun temp888_54 () (_ BitVec 64))
(declare-fun temp888_55 () (_ BitVec 64))
(declare-fun temp888_56 () (_ BitVec 64))
(declare-fun temp888_57 () (_ BitVec 64))
(declare-fun temp888_58 () (_ BitVec 64))
(declare-fun temp888_59 () (_ BitVec 64))
(declare-fun temp888_60 () (_ BitVec 64))
(declare-fun temp888_61 () (_ BitVec 64))
(declare-fun temp888_62 () (_ BitVec 64))
(declare-fun temp888_63 () (_ BitVec 64))
(declare-fun temp888_64 () (_ BitVec 64))
(declare-fun temp888_65 () (_ BitVec 64))
(declare-fun temp888_66 () (_ BitVec 64))
(declare-fun temp888_67 () (_ BitVec 64))
(declare-fun temp888_68 () (_ BitVec 64))
(declare-fun temp888_69 () (_ BitVec 64))
(declare-fun temp888_70 () (_ BitVec 64))
(declare-fun temp888_71 () (_ BitVec 64))
(declare-fun temp888_72 () (_ BitVec 64))
(declare-fun temp888_73 () (_ BitVec 64))
(declare-fun temp888_74 () (_ BitVec 64))
(declare-fun temp888_75 () (_ BitVec 64))
(declare-fun temp888_76 () (_ BitVec 64))
(declare-fun temp888_77 () (_ BitVec 64))
(declare-fun temp888_78 () (_ BitVec 64))
(declare-fun temp888_79 () (_ BitVec 64))
(declare-fun temp888_80 () (_ BitVec 64))
(declare-fun temp888_81 () (_ BitVec 64))
(declare-fun temp888_82 () (_ BitVec 64))
(declare-fun temp888_83 () (_ BitVec 64))
(declare-fun temp888_84 () (_ BitVec 64))
(declare-fun temp888_85 () (_ BitVec 64))
(declare-fun temp888_86 () (_ BitVec 64))
(declare-fun temp888_87 () (_ BitVec 64))
(declare-fun temp888_88 () (_ BitVec 64))
(declare-fun temp888_89 () (_ BitVec 64))
(declare-fun temp888_90 () (_ BitVec 64))
(declare-fun temp888_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp888_92 () (_ BitVec 64))
(declare-fun temp888_93 () (_ BitVec 64))
(declare-fun temp888_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp888_95 () (_ BitVec 64))
(declare-fun temp888_96 () (_ BitVec 64))
(declare-fun temp888_97 () (_ BitVec 64))
(declare-fun temp888_98 () (_ BitVec 64))
(declare-fun temp888_99 () (_ BitVec 64))
(declare-fun temp888_100 () (_ BitVec 64))
(declare-fun temp888_101 () (_ BitVec 64))
(declare-fun temp888_102 () (_ BitVec 64))
(declare-fun temp888_103 () (_ BitVec 64))
(declare-fun temp888_104 () (_ BitVec 64))
(declare-fun temp888_105 () (_ BitVec 64))
(declare-fun temp888_106 () (_ BitVec 64))
(declare-fun temp888_107 () (_ BitVec 64))
(declare-fun temp888_108 () (_ BitVec 64))
(declare-fun temp888_109 () (_ BitVec 64))
(declare-fun temp888_110 () (_ BitVec 64))
(declare-fun temp888_111 () (_ BitVec 64))
(declare-fun temp888_112 () (_ BitVec 64))
(declare-fun temp888_113 () (_ BitVec 64))
(declare-fun temp888_114 () (_ BitVec 64))
(declare-fun temp888_115 () (_ BitVec 64))
(declare-fun temp888_116 () (_ BitVec 64))
(declare-fun temp888_117 () (_ BitVec 64))
(declare-fun temp888_118 () (_ BitVec 64))
(declare-fun temp888_119 () (_ BitVec 64))
(declare-fun temp888_120 () (_ BitVec 64))
(declare-fun temp888_121 () (_ BitVec 64))
(declare-fun temp888_122 () (_ BitVec 64))
(declare-fun temp888_123 () (_ BitVec 64))
(declare-fun temp888_124 () (_ BitVec 64))
(declare-fun temp888_125 () (_ BitVec 64))
(declare-fun temp888_126 () (_ BitVec 64))
(declare-fun temp888_127 () (_ BitVec 64))
(declare-fun temp888_128 () (_ BitVec 64))
(declare-fun temp888_129 () (_ BitVec 64))
(declare-fun temp888_130 () (_ BitVec 64))
(declare-fun temp888_131 () (_ BitVec 64))
(declare-fun temp888_132 () (_ BitVec 64))
(declare-fun temp888_133 () (_ BitVec 64))
(declare-fun temp888_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp888_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp888_136 () (_ BitVec 64))
(declare-fun temp888_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp888_138 () (_ BitVec 64))
(declare-fun temp888_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp888_140 () (_ BitVec 64))
(declare-fun temp888_141 () (_ BitVec 64))
(declare-fun temp888_142 () (_ BitVec 64))
(declare-fun temp888_143 () (_ BitVec 64))
(declare-fun temp888_144 () (_ BitVec 64))
(declare-fun temp888_145 () (_ BitVec 64))
(declare-fun temp888_146 () (_ BitVec 64))
(declare-fun temp888_147 () (_ BitVec 64))
(declare-fun temp888_148 () (_ BitVec 64))
(declare-fun temp888_149 () (_ BitVec 64))
(declare-fun temp888_150 () (_ BitVec 64))
(declare-fun temp888_151 () (_ BitVec 64))
(declare-fun temp888_152 () (_ BitVec 64))
(declare-fun temp888_153 () (_ BitVec 64))
(declare-fun temp888_154 () (_ BitVec 64))
(declare-fun temp888_155 () (_ BitVec 64))
(declare-fun temp888_157 () (_ BitVec 64))
(declare-fun temp888_158 () (_ BitVec 64))
(declare-fun temp888_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp888_159 () (_ BitVec 64))
(declare-fun temp888_160 () (_ BitVec 64))
(declare-fun temp888_162 () (_ BitVec 64))
(declare-fun temp888_163 () (_ BitVec 64))
(declare-fun temp888_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp888_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp888_165 () (_ BitVec 64))
(declare-fun temp888_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp888_167 () (_ BitVec 64))
(declare-fun temp888_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp888_169 () (_ BitVec 64))
(declare-fun temp888_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp888_171 () (_ BitVec 64))
(declare-fun temp888_172 () (_ BitVec 64))
(declare-fun temp888_173 () (_ BitVec 64))
(declare-fun temp888_174 () (_ BitVec 64))
(declare-fun temp888_175 () (_ BitVec 64))
(declare-fun temp888_176 () (_ BitVec 64))
(declare-fun temp888_177 () (_ BitVec 64))
(declare-fun temp888_178 () (_ BitVec 64))
(declare-fun temp888_179 () (_ BitVec 64))
(declare-fun temp888_180 () (_ BitVec 64))
(declare-fun temp888_181 () (_ BitVec 64))
(declare-fun temp888_182 () (_ BitVec 64))
(declare-fun temp888_183 () (_ BitVec 64))
(declare-fun temp888_184 () (_ BitVec 64))
(declare-fun temp888_185 () (_ BitVec 64))
(declare-fun temp888_186 () (_ BitVec 64))
(declare-fun temp888_187 () (_ BitVec 64))
(declare-fun temp888_188 () (_ BitVec 64))
(declare-fun temp888_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp888_190 () (_ BitVec 64))
(declare-fun temp888_192 () (_ BitVec 64))
(declare-fun temp888_193 () (_ BitVec 64))
(declare-fun temp888_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp888_194 () (_ BitVec 64))
(declare-fun temp888_195 () (_ BitVec 64))
(declare-fun temp888_197 () (_ BitVec 64))
(declare-fun temp888_198 () (_ BitVec 64))
(declare-fun temp888_196 () (_ BitVec 64))
(declare-fun temp888_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp888_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp888_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp888_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp888_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp888_204 () (_ BitVec 64))
(declare-fun temp888_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp888_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp888_207 () (_ BitVec 64))
(declare-fun temp888_208 () (_ BitVec 64))
(declare-fun temp888_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp888_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp888_211 () (_ BitVec 64))
(declare-fun temp888_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp888_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp888_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp888_215 () (_ BitVec 64))
(assert (= temp888_1 #x0000000000000001))
(assert (= var77203 temp888_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp888_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp888_2)))
(assert (= temp888_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp888_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp888_4 #x0000000000000000))
(assert (= var210941 temp888_4))
(assert (= temp888_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp888_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp888_6 #x0000000000000000))
(assert (= var210986 temp888_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp888_7 #x0000000000000000))
(assert (= temp888_8 temp888_7))
(assert (= temp888_9 (select ARGNAME_padding_NAMEEND_VAL temp888_8)))
(assert (= temp888_10 #x0000000000000001))
(assert (= temp888_11 temp888_10))
(assert (= temp888_12 (select ARGNAME_padding_NAMEEND_VAL temp888_11)))
(assert (= temp888_13 #x0000000000000002))
(assert (= temp888_14 temp888_13))
(assert (= temp888_15 (select ARGNAME_padding_NAMEEND_VAL temp888_14)))
(assert (= temp888_16 #x0000000000000003))
(assert (= temp888_17 temp888_16))
(assert (= temp888_18 (select ARGNAME_padding_NAMEEND_VAL temp888_17)))
(assert (= temp888_19 #x0000000000000004))
(assert (= temp888_20 temp888_19))
(assert (= temp888_21 (select ARGNAME_padding_NAMEEND_VAL temp888_20)))
(assert (= temp888_22 #x0000000000000005))
(assert (= temp888_23 temp888_22))
(assert (= temp888_24 (select ARGNAME_padding_NAMEEND_VAL temp888_23)))
(assert (= temp888_25 #x0000000000000000))
(assert (= temp888_26 #x0000000000000000))
(assert (= temp888_27 temp888_26))
(assert (= temp888_28 (select ARGNAME_padding_NAMEEND_VAL temp888_27)))
(assert (= temp888_29 #x0000000000000000))
(assert (= temp888_30 #x0000000000000001))
(assert (= temp888_31 temp888_30))
(assert (= temp888_32 (select ARGNAME_padding_NAMEEND_VAL temp888_31)))
(assert (= temp888_33 #x0000000000000000))
(assert (= temp888_34 #x0000000000000002))
(assert (= temp888_35 temp888_34))
(assert (= temp888_36 (select ARGNAME_padding_NAMEEND_VAL temp888_35)))
(assert (= temp888_37 #x0000000000000000))
(assert (= temp888_38 #x0000000000000003))
(assert (= temp888_39 temp888_38))
(assert (= temp888_40 (select ARGNAME_padding_NAMEEND_VAL temp888_39)))
(assert (= temp888_41 #x0000000000000000))
(assert (= temp888_42 #x0000000000000004))
(assert (= temp888_43 temp888_42))
(assert (= temp888_44 (select ARGNAME_padding_NAMEEND_VAL temp888_43)))
(assert (= temp888_45 #x0000000000000000))
(assert (= temp888_46 #x0000000000000005))
(assert (= temp888_47 temp888_46))
(assert (= temp888_48 (select ARGNAME_padding_NAMEEND_VAL temp888_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp888_28 temp888_25)
             (bvslt temp888_32 temp888_29)
             (bvslt temp888_36 temp888_33)
             (bvslt temp888_40 temp888_37)
             (bvslt temp888_44 temp888_41)
             (bvslt temp888_48 temp888_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp888_49 #x0000000000000000))
(assert (= var1191714 temp888_49))
(assert (= temp888_50 #x0000000000000000))
(assert (= temp888_51 temp888_50))
(assert (= temp888_52 (select ARGNAME_output_padding_NAMEEND_VAL temp888_51)))
(assert (= temp888_53 #x0000000000000001))
(assert (= temp888_54 temp888_53))
(assert (= temp888_55 (select ARGNAME_output_padding_NAMEEND_VAL temp888_54)))
(assert (= temp888_56 #x0000000000000002))
(assert (= temp888_57 temp888_56))
(assert (= temp888_58 (select ARGNAME_output_padding_NAMEEND_VAL temp888_57)))
(assert (= temp888_59 #x0000000000000003))
(assert (= temp888_60 temp888_59))
(assert (= temp888_61 (select ARGNAME_output_padding_NAMEEND_VAL temp888_60)))
(assert (= temp888_62 #x0000000000000004))
(assert (= temp888_63 temp888_62))
(assert (= temp888_64 (select ARGNAME_output_padding_NAMEEND_VAL temp888_63)))
(assert (= temp888_65 #x0000000000000005))
(assert (= temp888_66 temp888_65))
(assert (= temp888_67 (select ARGNAME_output_padding_NAMEEND_VAL temp888_66)))
(assert (= temp888_68 #x0000000000000000))
(assert (= temp888_69 #x0000000000000000))
(assert (= temp888_70 temp888_69))
(assert (= temp888_71 (select ARGNAME_output_padding_NAMEEND_VAL temp888_70)))
(assert (= temp888_72 #x0000000000000000))
(assert (= temp888_73 #x0000000000000001))
(assert (= temp888_74 temp888_73))
(assert (= temp888_75 (select ARGNAME_output_padding_NAMEEND_VAL temp888_74)))
(assert (= temp888_76 #x0000000000000000))
(assert (= temp888_77 #x0000000000000002))
(assert (= temp888_78 temp888_77))
(assert (= temp888_79 (select ARGNAME_output_padding_NAMEEND_VAL temp888_78)))
(assert (= temp888_80 #x0000000000000000))
(assert (= temp888_81 #x0000000000000003))
(assert (= temp888_82 temp888_81))
(assert (= temp888_83 (select ARGNAME_output_padding_NAMEEND_VAL temp888_82)))
(assert (= temp888_84 #x0000000000000000))
(assert (= temp888_85 #x0000000000000004))
(assert (= temp888_86 temp888_85))
(assert (= temp888_87 (select ARGNAME_output_padding_NAMEEND_VAL temp888_86)))
(assert (= temp888_88 #x0000000000000000))
(assert (= temp888_89 #x0000000000000005))
(assert (= temp888_90 temp888_89))
(assert (= temp888_91 (select ARGNAME_output_padding_NAMEEND_VAL temp888_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp888_71 temp888_68)
             (bvslt temp888_75 temp888_72)
             (bvslt temp888_79 temp888_76)
             (bvslt temp888_83 temp888_80)
             (bvslt temp888_87 temp888_84)
             (bvslt temp888_91 temp888_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp888_92 #x0000000000000000))
(assert (= var1191725 temp888_92))
(assert (= temp888_93 #x0000000000000000))
(assert (= temp888_94 temp888_93))
(assert (= temp888_95 (select ARGNAME_stride_NAMEEND_VAL temp888_94)))
(assert (= temp888_96 #x0000000000000001))
(assert (= temp888_97 temp888_96))
(assert (= temp888_98 (select ARGNAME_stride_NAMEEND_VAL temp888_97)))
(assert (= temp888_99 #x0000000000000002))
(assert (= temp888_100 temp888_99))
(assert (= temp888_101 (select ARGNAME_stride_NAMEEND_VAL temp888_100)))
(assert (= temp888_102 #x0000000000000003))
(assert (= temp888_103 temp888_102))
(assert (= temp888_104 (select ARGNAME_stride_NAMEEND_VAL temp888_103)))
(assert (= temp888_105 #x0000000000000004))
(assert (= temp888_106 temp888_105))
(assert (= temp888_107 (select ARGNAME_stride_NAMEEND_VAL temp888_106)))
(assert (= temp888_108 #x0000000000000005))
(assert (= temp888_109 temp888_108))
(assert (= temp888_110 (select ARGNAME_stride_NAMEEND_VAL temp888_109)))
(assert (= temp888_111 #x0000000000000000))
(assert (= temp888_112 #x0000000000000000))
(assert (= temp888_113 temp888_112))
(assert (= temp888_114 (select ARGNAME_stride_NAMEEND_VAL temp888_113)))
(assert (= temp888_115 #x0000000000000000))
(assert (= temp888_116 #x0000000000000001))
(assert (= temp888_117 temp888_116))
(assert (= temp888_118 (select ARGNAME_stride_NAMEEND_VAL temp888_117)))
(assert (= temp888_119 #x0000000000000000))
(assert (= temp888_120 #x0000000000000002))
(assert (= temp888_121 temp888_120))
(assert (= temp888_122 (select ARGNAME_stride_NAMEEND_VAL temp888_121)))
(assert (= temp888_123 #x0000000000000000))
(assert (= temp888_124 #x0000000000000003))
(assert (= temp888_125 temp888_124))
(assert (= temp888_126 (select ARGNAME_stride_NAMEEND_VAL temp888_125)))
(assert (= temp888_127 #x0000000000000000))
(assert (= temp888_128 #x0000000000000004))
(assert (= temp888_129 temp888_128))
(assert (= temp888_130 (select ARGNAME_stride_NAMEEND_VAL temp888_129)))
(assert (= temp888_131 #x0000000000000000))
(assert (= temp888_132 #x0000000000000005))
(assert (= temp888_133 temp888_132))
(assert (= temp888_134 (select ARGNAME_stride_NAMEEND_VAL temp888_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp888_114 temp888_111)
             (bvsle temp888_118 temp888_115)
             (bvsle temp888_122 temp888_119)
             (bvsle temp888_126 temp888_123)
             (bvsle temp888_130 temp888_127)
             (bvsle temp888_134 temp888_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp888_135 #x0000000000000000))
(assert (= var1191735 temp888_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp888_136 #x0000000000000001))
(assert (= var1191747 temp888_136))
(assert (= temp888_137 #x0000000000000000))
(assert (= var1179826 temp888_137))
(assert (= temp888_138 #x0000000000000000))
(assert (= temp888_139 temp888_138))
(assert (= temp888_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp888_139)))
(assert (= temp888_141 #x0000000000000001))
(assert (= temp888_142 temp888_141))
(assert (= temp888_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp888_142)))
(assert (= temp888_144 #x0000000000000002))
(assert (= temp888_145 temp888_144))
(assert (= temp888_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp888_145)))
(assert (= temp888_147 #x0000000000000003))
(assert (= temp888_148 temp888_147))
(assert (= temp888_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp888_148)))
(assert (= temp888_150 #x0000000000000004))
(assert (= temp888_151 temp888_150))
(assert (= temp888_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp888_151)))
(assert (= temp888_153 #x0000000000000005))
(assert (= temp888_154 temp888_153))
(assert (= temp888_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp888_154)))
(assert (= temp888_157 var1179826))
(assert (= temp888_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp888_157)))
(assert (= temp888_156 temp888_158))
(assert (= var1191780
   (ite (bvslt temp888_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp888_159 #x0000000000000000))
(assert (= var1191780 temp888_159))
(assert (= temp888_160 #x0000000000000000))
(assert (= var1179826 temp888_160))
(assert (= temp888_162 var1179826))
(assert (= temp888_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp888_162)))
(assert (= temp888_161 temp888_163))
(assert (= var1191802 (bvsmod temp888_161 ARGNAME_groups_NAMEEND)))
(assert (= temp888_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp888_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp888_165 #x0000000000000001))
(assert (= var1191803 temp888_165))
(assert (= temp888_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp888_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp888_167 #x0000000000000001))
(assert (= var1191823 temp888_167))
(assert (= temp888_168 #x0000000000000001))
(assert (= var1180714 temp888_168))
(assert (= temp888_169 #x0000000000000000))
(assert (= temp888_170 temp888_169))
(assert (= temp888_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp888_170)))
(assert (= temp888_172 #x0000000000000001))
(assert (= temp888_173 temp888_172))
(assert (= temp888_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp888_173)))
(assert (= temp888_175 #x0000000000000002))
(assert (= temp888_176 temp888_175))
(assert (= temp888_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp888_176)))
(assert (= temp888_178 #x0000000000000003))
(assert (= temp888_179 temp888_178))
(assert (= temp888_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp888_179)))
(assert (= temp888_181 #x0000000000000004))
(assert (= temp888_182 temp888_181))
(assert (= temp888_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp888_182)))
(assert (= temp888_184 #x0000000000000005))
(assert (= temp888_185 temp888_184))
(assert (= temp888_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp888_185)))
(assert (= temp888_187 #x0000000000000000))
(assert (= temp888_188
   (ite (bvslt var1180714 temp888_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp888_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp888_188)))
(assert (= var1191831 temp888_189))
(assert (bvslt (ite (bvslt var1180714 temp888_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp888_190 #x0000000000000001))
(assert (= var1180714 temp888_190))
(assert (= temp888_192 var1180714))
(assert (= temp888_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp888_192)))
(assert (= temp888_191 temp888_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp888_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp888_194 #x0000000000000001))
(assert (= var1191836 temp888_194))
(assert (= temp888_195 #x0000000000000000))
(assert (= var1179826 temp888_195))
(assert (= temp888_197 var1179826))
(assert (= temp888_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp888_197)))
(assert (= temp888_196 temp888_198))
(assert (= temp888_199 #x0000000000000002))
(assert (= var1586025 temp888_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp888_200 #x0000000000000001))
(assert (= var1191993 temp888_200))
(assert (= temp888_201 #x0000000000000001))
(assert (= var2700303 temp888_201))
(assert (= temp888_202 #x0000000000000001))
(assert (= var2962447 temp888_202))
(assert (= temp888_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp888_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp888_204 #x0000000000000001))
(assert (= var211058 temp888_204))
(assert (= temp888_205 #x0000000000000001))
(assert (= var211188 temp888_205))
(assert (= var3879401 var211188))
(assert (= temp888_206 #x0000000000000000))
(assert (= var3866802 temp888_206))
(assert (= temp888_207 #x0000000000000000))
(assert (= temp888_208
   (ite (bvslt var3866802 temp888_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp888_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp888_208)))
(assert (= var3879420 temp888_209))
(assert (bvslt (ite (bvslt var3866802 temp888_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp888_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp888_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp888_211 #x0000000000000001))
(assert (= var3879421 temp888_211))
(assert (= temp888_212 #x0000000000000000))
(assert (= var4079423 temp888_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp888_213 #x0000000000000002))
(assert (= var4208259 temp888_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp888_214 #x0000000000000000))
(assert (= var4273820 temp888_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp888_215 #x0000000000000001))
(assert (= var211058 temp888_215))
(model-add temp888_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp888_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp888_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp888_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






