(declare-fun temp368_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp368_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp368_3 () (_ BitVec 64))
(declare-fun temp368_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp368_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp368_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp368_7 () (_ BitVec 64))
(declare-fun temp368_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp368_9 () (_ BitVec 64))
(declare-fun temp368_10 () (_ BitVec 64))
(declare-fun temp368_11 () (_ BitVec 64))
(declare-fun temp368_12 () (_ BitVec 64))
(declare-fun temp368_13 () (_ BitVec 64))
(declare-fun temp368_14 () (_ BitVec 64))
(declare-fun temp368_15 () (_ BitVec 64))
(declare-fun temp368_16 () (_ BitVec 64))
(declare-fun temp368_17 () (_ BitVec 64))
(declare-fun temp368_18 () (_ BitVec 64))
(declare-fun temp368_19 () (_ BitVec 64))
(declare-fun temp368_20 () (_ BitVec 64))
(declare-fun temp368_21 () (_ BitVec 64))
(declare-fun temp368_22 () (_ BitVec 64))
(declare-fun temp368_23 () (_ BitVec 64))
(declare-fun temp368_24 () (_ BitVec 64))
(declare-fun temp368_25 () (_ BitVec 64))
(declare-fun temp368_26 () (_ BitVec 64))
(declare-fun temp368_27 () (_ BitVec 64))
(declare-fun temp368_28 () (_ BitVec 64))
(declare-fun temp368_29 () (_ BitVec 64))
(declare-fun temp368_30 () (_ BitVec 64))
(declare-fun temp368_31 () (_ BitVec 64))
(declare-fun temp368_32 () (_ BitVec 64))
(declare-fun temp368_33 () (_ BitVec 64))
(declare-fun temp368_34 () (_ BitVec 64))
(declare-fun temp368_35 () (_ BitVec 64))
(declare-fun temp368_36 () (_ BitVec 64))
(declare-fun temp368_37 () (_ BitVec 64))
(declare-fun temp368_38 () (_ BitVec 64))
(declare-fun temp368_39 () (_ BitVec 64))
(declare-fun temp368_40 () (_ BitVec 64))
(declare-fun temp368_41 () (_ BitVec 64))
(declare-fun temp368_42 () (_ BitVec 64))
(declare-fun temp368_43 () (_ BitVec 64))
(declare-fun temp368_44 () (_ BitVec 64))
(declare-fun temp368_45 () (_ BitVec 64))
(declare-fun temp368_46 () (_ BitVec 64))
(declare-fun temp368_47 () (_ BitVec 64))
(declare-fun temp368_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp368_49 () (_ BitVec 64))
(declare-fun temp368_50 () (_ BitVec 64))
(declare-fun temp368_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp368_52 () (_ BitVec 64))
(declare-fun temp368_53 () (_ BitVec 64))
(declare-fun temp368_54 () (_ BitVec 64))
(declare-fun temp368_55 () (_ BitVec 64))
(declare-fun temp368_56 () (_ BitVec 64))
(declare-fun temp368_57 () (_ BitVec 64))
(declare-fun temp368_58 () (_ BitVec 64))
(declare-fun temp368_59 () (_ BitVec 64))
(declare-fun temp368_60 () (_ BitVec 64))
(declare-fun temp368_61 () (_ BitVec 64))
(declare-fun temp368_62 () (_ BitVec 64))
(declare-fun temp368_63 () (_ BitVec 64))
(declare-fun temp368_64 () (_ BitVec 64))
(declare-fun temp368_65 () (_ BitVec 64))
(declare-fun temp368_66 () (_ BitVec 64))
(declare-fun temp368_67 () (_ BitVec 64))
(declare-fun temp368_68 () (_ BitVec 64))
(declare-fun temp368_69 () (_ BitVec 64))
(declare-fun temp368_70 () (_ BitVec 64))
(declare-fun temp368_71 () (_ BitVec 64))
(declare-fun temp368_72 () (_ BitVec 64))
(declare-fun temp368_73 () (_ BitVec 64))
(declare-fun temp368_74 () (_ BitVec 64))
(declare-fun temp368_75 () (_ BitVec 64))
(declare-fun temp368_76 () (_ BitVec 64))
(declare-fun temp368_77 () (_ BitVec 64))
(declare-fun temp368_78 () (_ BitVec 64))
(declare-fun temp368_79 () (_ BitVec 64))
(declare-fun temp368_80 () (_ BitVec 64))
(declare-fun temp368_81 () (_ BitVec 64))
(declare-fun temp368_82 () (_ BitVec 64))
(declare-fun temp368_83 () (_ BitVec 64))
(declare-fun temp368_84 () (_ BitVec 64))
(declare-fun temp368_85 () (_ BitVec 64))
(declare-fun temp368_86 () (_ BitVec 64))
(declare-fun temp368_87 () (_ BitVec 64))
(declare-fun temp368_88 () (_ BitVec 64))
(declare-fun temp368_89 () (_ BitVec 64))
(declare-fun temp368_90 () (_ BitVec 64))
(declare-fun temp368_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp368_92 () (_ BitVec 64))
(declare-fun temp368_93 () (_ BitVec 64))
(declare-fun temp368_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp368_95 () (_ BitVec 64))
(declare-fun temp368_96 () (_ BitVec 64))
(declare-fun temp368_97 () (_ BitVec 64))
(declare-fun temp368_98 () (_ BitVec 64))
(declare-fun temp368_99 () (_ BitVec 64))
(declare-fun temp368_100 () (_ BitVec 64))
(declare-fun temp368_101 () (_ BitVec 64))
(declare-fun temp368_102 () (_ BitVec 64))
(declare-fun temp368_103 () (_ BitVec 64))
(declare-fun temp368_104 () (_ BitVec 64))
(declare-fun temp368_105 () (_ BitVec 64))
(declare-fun temp368_106 () (_ BitVec 64))
(declare-fun temp368_107 () (_ BitVec 64))
(declare-fun temp368_108 () (_ BitVec 64))
(declare-fun temp368_109 () (_ BitVec 64))
(declare-fun temp368_110 () (_ BitVec 64))
(declare-fun temp368_111 () (_ BitVec 64))
(declare-fun temp368_112 () (_ BitVec 64))
(declare-fun temp368_113 () (_ BitVec 64))
(declare-fun temp368_114 () (_ BitVec 64))
(declare-fun temp368_115 () (_ BitVec 64))
(declare-fun temp368_116 () (_ BitVec 64))
(declare-fun temp368_117 () (_ BitVec 64))
(declare-fun temp368_118 () (_ BitVec 64))
(declare-fun temp368_119 () (_ BitVec 64))
(declare-fun temp368_120 () (_ BitVec 64))
(declare-fun temp368_121 () (_ BitVec 64))
(declare-fun temp368_122 () (_ BitVec 64))
(declare-fun temp368_123 () (_ BitVec 64))
(declare-fun temp368_124 () (_ BitVec 64))
(declare-fun temp368_125 () (_ BitVec 64))
(declare-fun temp368_126 () (_ BitVec 64))
(declare-fun temp368_127 () (_ BitVec 64))
(declare-fun temp368_128 () (_ BitVec 64))
(declare-fun temp368_129 () (_ BitVec 64))
(declare-fun temp368_130 () (_ BitVec 64))
(declare-fun temp368_131 () (_ BitVec 64))
(declare-fun temp368_132 () (_ BitVec 64))
(declare-fun temp368_133 () (_ BitVec 64))
(declare-fun temp368_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp368_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp368_136 () (_ BitVec 64))
(declare-fun temp368_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp368_138 () (_ BitVec 64))
(declare-fun temp368_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp368_140 () (_ BitVec 64))
(declare-fun temp368_141 () (_ BitVec 64))
(declare-fun temp368_142 () (_ BitVec 64))
(declare-fun temp368_143 () (_ BitVec 64))
(declare-fun temp368_144 () (_ BitVec 64))
(declare-fun temp368_145 () (_ BitVec 64))
(declare-fun temp368_146 () (_ BitVec 64))
(declare-fun temp368_147 () (_ BitVec 64))
(declare-fun temp368_148 () (_ BitVec 64))
(declare-fun temp368_149 () (_ BitVec 64))
(declare-fun temp368_150 () (_ BitVec 64))
(declare-fun temp368_151 () (_ BitVec 64))
(declare-fun temp368_152 () (_ BitVec 64))
(declare-fun temp368_153 () (_ BitVec 64))
(declare-fun temp368_154 () (_ BitVec 64))
(declare-fun temp368_155 () (_ BitVec 64))
(declare-fun temp368_157 () (_ BitVec 64))
(declare-fun temp368_158 () (_ BitVec 64))
(declare-fun temp368_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp368_159 () (_ BitVec 64))
(declare-fun temp368_160 () (_ BitVec 64))
(declare-fun temp368_162 () (_ BitVec 64))
(declare-fun temp368_163 () (_ BitVec 64))
(declare-fun temp368_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp368_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp368_165 () (_ BitVec 64))
(declare-fun temp368_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp368_167 () (_ BitVec 64))
(declare-fun temp368_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp368_169 () (_ BitVec 64))
(declare-fun temp368_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp368_171 () (_ BitVec 64))
(declare-fun temp368_172 () (_ BitVec 64))
(declare-fun temp368_173 () (_ BitVec 64))
(declare-fun temp368_174 () (_ BitVec 64))
(declare-fun temp368_175 () (_ BitVec 64))
(declare-fun temp368_176 () (_ BitVec 64))
(declare-fun temp368_177 () (_ BitVec 64))
(declare-fun temp368_178 () (_ BitVec 64))
(declare-fun temp368_179 () (_ BitVec 64))
(declare-fun temp368_180 () (_ BitVec 64))
(declare-fun temp368_181 () (_ BitVec 64))
(declare-fun temp368_182 () (_ BitVec 64))
(declare-fun temp368_183 () (_ BitVec 64))
(declare-fun temp368_184 () (_ BitVec 64))
(declare-fun temp368_185 () (_ BitVec 64))
(declare-fun temp368_186 () (_ BitVec 64))
(declare-fun temp368_187 () (_ BitVec 64))
(declare-fun temp368_188 () (_ BitVec 64))
(declare-fun temp368_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp368_190 () (_ BitVec 64))
(declare-fun temp368_192 () (_ BitVec 64))
(declare-fun temp368_193 () (_ BitVec 64))
(declare-fun temp368_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp368_194 () (_ BitVec 64))
(declare-fun temp368_195 () (_ BitVec 64))
(declare-fun temp368_197 () (_ BitVec 64))
(declare-fun temp368_198 () (_ BitVec 64))
(declare-fun temp368_196 () (_ BitVec 64))
(declare-fun temp368_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp368_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp368_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp368_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp368_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp368_204 () (_ BitVec 64))
(declare-fun temp368_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp368_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp368_207 () (_ BitVec 64))
(declare-fun temp368_208 () (_ BitVec 64))
(declare-fun temp368_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp368_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp368_211 () (_ BitVec 64))
(declare-fun temp368_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp368_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp368_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var5583248 () (_ BitVec 64))
(declare-fun var5845392 () (_ BitVec 64))
(declare-fun temp368_215 () (_ BitVec 64))
(assert (= temp368_1 #x0000000000000001))
(assert (= var77203 temp368_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp368_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp368_2)))
(assert (= temp368_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp368_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp368_4 #x0000000000000000))
(assert (= var210941 temp368_4))
(assert (= temp368_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp368_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp368_6 #x0000000000000000))
(assert (= var210986 temp368_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp368_7 #x0000000000000000))
(assert (= temp368_8 temp368_7))
(assert (= temp368_9 (select ARGNAME_padding_NAMEEND_VAL temp368_8)))
(assert (= temp368_10 #x0000000000000001))
(assert (= temp368_11 temp368_10))
(assert (= temp368_12 (select ARGNAME_padding_NAMEEND_VAL temp368_11)))
(assert (= temp368_13 #x0000000000000002))
(assert (= temp368_14 temp368_13))
(assert (= temp368_15 (select ARGNAME_padding_NAMEEND_VAL temp368_14)))
(assert (= temp368_16 #x0000000000000003))
(assert (= temp368_17 temp368_16))
(assert (= temp368_18 (select ARGNAME_padding_NAMEEND_VAL temp368_17)))
(assert (= temp368_19 #x0000000000000004))
(assert (= temp368_20 temp368_19))
(assert (= temp368_21 (select ARGNAME_padding_NAMEEND_VAL temp368_20)))
(assert (= temp368_22 #x0000000000000005))
(assert (= temp368_23 temp368_22))
(assert (= temp368_24 (select ARGNAME_padding_NAMEEND_VAL temp368_23)))
(assert (= temp368_25 #x0000000000000000))
(assert (= temp368_26 #x0000000000000000))
(assert (= temp368_27 temp368_26))
(assert (= temp368_28 (select ARGNAME_padding_NAMEEND_VAL temp368_27)))
(assert (= temp368_29 #x0000000000000000))
(assert (= temp368_30 #x0000000000000001))
(assert (= temp368_31 temp368_30))
(assert (= temp368_32 (select ARGNAME_padding_NAMEEND_VAL temp368_31)))
(assert (= temp368_33 #x0000000000000000))
(assert (= temp368_34 #x0000000000000002))
(assert (= temp368_35 temp368_34))
(assert (= temp368_36 (select ARGNAME_padding_NAMEEND_VAL temp368_35)))
(assert (= temp368_37 #x0000000000000000))
(assert (= temp368_38 #x0000000000000003))
(assert (= temp368_39 temp368_38))
(assert (= temp368_40 (select ARGNAME_padding_NAMEEND_VAL temp368_39)))
(assert (= temp368_41 #x0000000000000000))
(assert (= temp368_42 #x0000000000000004))
(assert (= temp368_43 temp368_42))
(assert (= temp368_44 (select ARGNAME_padding_NAMEEND_VAL temp368_43)))
(assert (= temp368_45 #x0000000000000000))
(assert (= temp368_46 #x0000000000000005))
(assert (= temp368_47 temp368_46))
(assert (= temp368_48 (select ARGNAME_padding_NAMEEND_VAL temp368_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp368_28 temp368_25)
             (bvslt temp368_32 temp368_29)
             (bvslt temp368_36 temp368_33)
             (bvslt temp368_40 temp368_37)
             (bvslt temp368_44 temp368_41)
             (bvslt temp368_48 temp368_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp368_49 #x0000000000000000))
(assert (= var1191714 temp368_49))
(assert (= temp368_50 #x0000000000000000))
(assert (= temp368_51 temp368_50))
(assert (= temp368_52 (select ARGNAME_output_padding_NAMEEND_VAL temp368_51)))
(assert (= temp368_53 #x0000000000000001))
(assert (= temp368_54 temp368_53))
(assert (= temp368_55 (select ARGNAME_output_padding_NAMEEND_VAL temp368_54)))
(assert (= temp368_56 #x0000000000000002))
(assert (= temp368_57 temp368_56))
(assert (= temp368_58 (select ARGNAME_output_padding_NAMEEND_VAL temp368_57)))
(assert (= temp368_59 #x0000000000000003))
(assert (= temp368_60 temp368_59))
(assert (= temp368_61 (select ARGNAME_output_padding_NAMEEND_VAL temp368_60)))
(assert (= temp368_62 #x0000000000000004))
(assert (= temp368_63 temp368_62))
(assert (= temp368_64 (select ARGNAME_output_padding_NAMEEND_VAL temp368_63)))
(assert (= temp368_65 #x0000000000000005))
(assert (= temp368_66 temp368_65))
(assert (= temp368_67 (select ARGNAME_output_padding_NAMEEND_VAL temp368_66)))
(assert (= temp368_68 #x0000000000000000))
(assert (= temp368_69 #x0000000000000000))
(assert (= temp368_70 temp368_69))
(assert (= temp368_71 (select ARGNAME_output_padding_NAMEEND_VAL temp368_70)))
(assert (= temp368_72 #x0000000000000000))
(assert (= temp368_73 #x0000000000000001))
(assert (= temp368_74 temp368_73))
(assert (= temp368_75 (select ARGNAME_output_padding_NAMEEND_VAL temp368_74)))
(assert (= temp368_76 #x0000000000000000))
(assert (= temp368_77 #x0000000000000002))
(assert (= temp368_78 temp368_77))
(assert (= temp368_79 (select ARGNAME_output_padding_NAMEEND_VAL temp368_78)))
(assert (= temp368_80 #x0000000000000000))
(assert (= temp368_81 #x0000000000000003))
(assert (= temp368_82 temp368_81))
(assert (= temp368_83 (select ARGNAME_output_padding_NAMEEND_VAL temp368_82)))
(assert (= temp368_84 #x0000000000000000))
(assert (= temp368_85 #x0000000000000004))
(assert (= temp368_86 temp368_85))
(assert (= temp368_87 (select ARGNAME_output_padding_NAMEEND_VAL temp368_86)))
(assert (= temp368_88 #x0000000000000000))
(assert (= temp368_89 #x0000000000000005))
(assert (= temp368_90 temp368_89))
(assert (= temp368_91 (select ARGNAME_output_padding_NAMEEND_VAL temp368_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp368_71 temp368_68)
             (bvslt temp368_75 temp368_72)
             (bvslt temp368_79 temp368_76)
             (bvslt temp368_83 temp368_80)
             (bvslt temp368_87 temp368_84)
             (bvslt temp368_91 temp368_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp368_92 #x0000000000000000))
(assert (= var1191725 temp368_92))
(assert (= temp368_93 #x0000000000000000))
(assert (= temp368_94 temp368_93))
(assert (= temp368_95 (select ARGNAME_stride_NAMEEND_VAL temp368_94)))
(assert (= temp368_96 #x0000000000000001))
(assert (= temp368_97 temp368_96))
(assert (= temp368_98 (select ARGNAME_stride_NAMEEND_VAL temp368_97)))
(assert (= temp368_99 #x0000000000000002))
(assert (= temp368_100 temp368_99))
(assert (= temp368_101 (select ARGNAME_stride_NAMEEND_VAL temp368_100)))
(assert (= temp368_102 #x0000000000000003))
(assert (= temp368_103 temp368_102))
(assert (= temp368_104 (select ARGNAME_stride_NAMEEND_VAL temp368_103)))
(assert (= temp368_105 #x0000000000000004))
(assert (= temp368_106 temp368_105))
(assert (= temp368_107 (select ARGNAME_stride_NAMEEND_VAL temp368_106)))
(assert (= temp368_108 #x0000000000000005))
(assert (= temp368_109 temp368_108))
(assert (= temp368_110 (select ARGNAME_stride_NAMEEND_VAL temp368_109)))
(assert (= temp368_111 #x0000000000000000))
(assert (= temp368_112 #x0000000000000000))
(assert (= temp368_113 temp368_112))
(assert (= temp368_114 (select ARGNAME_stride_NAMEEND_VAL temp368_113)))
(assert (= temp368_115 #x0000000000000000))
(assert (= temp368_116 #x0000000000000001))
(assert (= temp368_117 temp368_116))
(assert (= temp368_118 (select ARGNAME_stride_NAMEEND_VAL temp368_117)))
(assert (= temp368_119 #x0000000000000000))
(assert (= temp368_120 #x0000000000000002))
(assert (= temp368_121 temp368_120))
(assert (= temp368_122 (select ARGNAME_stride_NAMEEND_VAL temp368_121)))
(assert (= temp368_123 #x0000000000000000))
(assert (= temp368_124 #x0000000000000003))
(assert (= temp368_125 temp368_124))
(assert (= temp368_126 (select ARGNAME_stride_NAMEEND_VAL temp368_125)))
(assert (= temp368_127 #x0000000000000000))
(assert (= temp368_128 #x0000000000000004))
(assert (= temp368_129 temp368_128))
(assert (= temp368_130 (select ARGNAME_stride_NAMEEND_VAL temp368_129)))
(assert (= temp368_131 #x0000000000000000))
(assert (= temp368_132 #x0000000000000005))
(assert (= temp368_133 temp368_132))
(assert (= temp368_134 (select ARGNAME_stride_NAMEEND_VAL temp368_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp368_114 temp368_111)
             (bvsle temp368_118 temp368_115)
             (bvsle temp368_122 temp368_119)
             (bvsle temp368_126 temp368_123)
             (bvsle temp368_130 temp368_127)
             (bvsle temp368_134 temp368_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp368_135 #x0000000000000000))
(assert (= var1191735 temp368_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp368_136 #x0000000000000001))
(assert (= var1191747 temp368_136))
(assert (= temp368_137 #x0000000000000000))
(assert (= var1179826 temp368_137))
(assert (= temp368_138 #x0000000000000000))
(assert (= temp368_139 temp368_138))
(assert (= temp368_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp368_139)))
(assert (= temp368_141 #x0000000000000001))
(assert (= temp368_142 temp368_141))
(assert (= temp368_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp368_142)))
(assert (= temp368_144 #x0000000000000002))
(assert (= temp368_145 temp368_144))
(assert (= temp368_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp368_145)))
(assert (= temp368_147 #x0000000000000003))
(assert (= temp368_148 temp368_147))
(assert (= temp368_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp368_148)))
(assert (= temp368_150 #x0000000000000004))
(assert (= temp368_151 temp368_150))
(assert (= temp368_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp368_151)))
(assert (= temp368_153 #x0000000000000005))
(assert (= temp368_154 temp368_153))
(assert (= temp368_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp368_154)))
(assert (= temp368_157 var1179826))
(assert (= temp368_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp368_157)))
(assert (= temp368_156 temp368_158))
(assert (= var1191780
   (ite (bvslt temp368_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp368_159 #x0000000000000000))
(assert (= var1191780 temp368_159))
(assert (= temp368_160 #x0000000000000000))
(assert (= var1179826 temp368_160))
(assert (= temp368_162 var1179826))
(assert (= temp368_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp368_162)))
(assert (= temp368_161 temp368_163))
(assert (= var1191802 (bvsmod temp368_161 ARGNAME_groups_NAMEEND)))
(assert (= temp368_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp368_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp368_165 #x0000000000000001))
(assert (= var1191803 temp368_165))
(assert (= temp368_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp368_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp368_167 #x0000000000000001))
(assert (= var1191823 temp368_167))
(assert (= temp368_168 #x0000000000000001))
(assert (= var1180714 temp368_168))
(assert (= temp368_169 #x0000000000000000))
(assert (= temp368_170 temp368_169))
(assert (= temp368_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp368_170)))
(assert (= temp368_172 #x0000000000000001))
(assert (= temp368_173 temp368_172))
(assert (= temp368_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp368_173)))
(assert (= temp368_175 #x0000000000000002))
(assert (= temp368_176 temp368_175))
(assert (= temp368_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp368_176)))
(assert (= temp368_178 #x0000000000000003))
(assert (= temp368_179 temp368_178))
(assert (= temp368_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp368_179)))
(assert (= temp368_181 #x0000000000000004))
(assert (= temp368_182 temp368_181))
(assert (= temp368_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp368_182)))
(assert (= temp368_184 #x0000000000000005))
(assert (= temp368_185 temp368_184))
(assert (= temp368_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp368_185)))
(assert (= temp368_187 #x0000000000000000))
(assert (= temp368_188
   (ite (bvslt var1180714 temp368_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp368_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp368_188)))
(assert (= var1191831 temp368_189))
(assert (bvslt (ite (bvslt var1180714 temp368_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp368_190 #x0000000000000001))
(assert (= var1180714 temp368_190))
(assert (= temp368_192 var1180714))
(assert (= temp368_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp368_192)))
(assert (= temp368_191 temp368_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp368_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp368_194 #x0000000000000001))
(assert (= var1191836 temp368_194))
(assert (= temp368_195 #x0000000000000000))
(assert (= var1179826 temp368_195))
(assert (= temp368_197 var1179826))
(assert (= temp368_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp368_197)))
(assert (= temp368_196 temp368_198))
(assert (= temp368_199 #x0000000000000002))
(assert (= var1586025 temp368_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp368_200 #x0000000000000001))
(assert (= var1191993 temp368_200))
(assert (= temp368_201 #x0000000000000001))
(assert (= var2700303 temp368_201))
(assert (= temp368_202 #x0000000000000001))
(assert (= var2962447 temp368_202))
(assert (= temp368_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp368_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp368_204 #x0000000000000001))
(assert (= var211058 temp368_204))
(assert (= temp368_205 #x0000000000000001))
(assert (= var211188 temp368_205))
(assert (= var3879401 var211188))
(assert (= temp368_206 #x0000000000000000))
(assert (= var3866802 temp368_206))
(assert (= temp368_207 #x0000000000000000))
(assert (= temp368_208
   (ite (bvslt var3866802 temp368_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp368_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp368_208)))
(assert (= var3879420 temp368_209))
(assert (bvslt (ite (bvslt var3866802 temp368_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp368_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp368_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp368_211 #x0000000000000001))
(assert (= var3879421 temp368_211))
(assert (= temp368_212 #x0000000000000000))
(assert (= var4079423 temp368_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp368_213 #x0000000000000002))
(assert (= var4208259 temp368_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp368_214 #x0000000000000000))
(assert (= var4273820 temp368_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var5583248 var211201))
(assert (= var5845392 var211201))
(assert (= temp368_215 #x0000000000000001))
(assert (= var211058 temp368_215))
(model-add temp368_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp368_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp368_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp368_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




