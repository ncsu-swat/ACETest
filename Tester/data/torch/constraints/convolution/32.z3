(declare-fun temp42_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp42_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp42_3 () (_ BitVec 64))
(declare-fun temp42_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp42_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp42_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp42_7 () (_ BitVec 64))
(declare-fun temp42_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp42_9 () (_ BitVec 64))
(declare-fun temp42_10 () (_ BitVec 64))
(declare-fun temp42_11 () (_ BitVec 64))
(declare-fun temp42_12 () (_ BitVec 64))
(declare-fun temp42_13 () (_ BitVec 64))
(declare-fun temp42_14 () (_ BitVec 64))
(declare-fun temp42_15 () (_ BitVec 64))
(declare-fun temp42_16 () (_ BitVec 64))
(declare-fun temp42_17 () (_ BitVec 64))
(declare-fun temp42_18 () (_ BitVec 64))
(declare-fun temp42_19 () (_ BitVec 64))
(declare-fun temp42_20 () (_ BitVec 64))
(declare-fun temp42_21 () (_ BitVec 64))
(declare-fun temp42_22 () (_ BitVec 64))
(declare-fun temp42_23 () (_ BitVec 64))
(declare-fun temp42_24 () (_ BitVec 64))
(declare-fun temp42_25 () (_ BitVec 64))
(declare-fun temp42_26 () (_ BitVec 64))
(declare-fun temp42_27 () (_ BitVec 64))
(declare-fun temp42_28 () (_ BitVec 64))
(declare-fun temp42_29 () (_ BitVec 64))
(declare-fun temp42_30 () (_ BitVec 64))
(declare-fun temp42_31 () (_ BitVec 64))
(declare-fun temp42_32 () (_ BitVec 64))
(declare-fun temp42_33 () (_ BitVec 64))
(declare-fun temp42_34 () (_ BitVec 64))
(declare-fun temp42_35 () (_ BitVec 64))
(declare-fun temp42_36 () (_ BitVec 64))
(declare-fun temp42_37 () (_ BitVec 64))
(declare-fun temp42_38 () (_ BitVec 64))
(declare-fun temp42_39 () (_ BitVec 64))
(declare-fun temp42_40 () (_ BitVec 64))
(declare-fun temp42_41 () (_ BitVec 64))
(declare-fun temp42_42 () (_ BitVec 64))
(declare-fun temp42_43 () (_ BitVec 64))
(declare-fun temp42_44 () (_ BitVec 64))
(declare-fun temp42_45 () (_ BitVec 64))
(declare-fun temp42_46 () (_ BitVec 64))
(declare-fun temp42_47 () (_ BitVec 64))
(declare-fun temp42_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp42_49 () (_ BitVec 64))
(declare-fun temp42_50 () (_ BitVec 64))
(declare-fun temp42_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp42_52 () (_ BitVec 64))
(declare-fun temp42_53 () (_ BitVec 64))
(declare-fun temp42_54 () (_ BitVec 64))
(declare-fun temp42_55 () (_ BitVec 64))
(declare-fun temp42_56 () (_ BitVec 64))
(declare-fun temp42_57 () (_ BitVec 64))
(declare-fun temp42_58 () (_ BitVec 64))
(declare-fun temp42_59 () (_ BitVec 64))
(declare-fun temp42_60 () (_ BitVec 64))
(declare-fun temp42_61 () (_ BitVec 64))
(declare-fun temp42_62 () (_ BitVec 64))
(declare-fun temp42_63 () (_ BitVec 64))
(declare-fun temp42_64 () (_ BitVec 64))
(declare-fun temp42_65 () (_ BitVec 64))
(declare-fun temp42_66 () (_ BitVec 64))
(declare-fun temp42_67 () (_ BitVec 64))
(declare-fun temp42_68 () (_ BitVec 64))
(declare-fun temp42_69 () (_ BitVec 64))
(declare-fun temp42_70 () (_ BitVec 64))
(declare-fun temp42_71 () (_ BitVec 64))
(declare-fun temp42_72 () (_ BitVec 64))
(declare-fun temp42_73 () (_ BitVec 64))
(declare-fun temp42_74 () (_ BitVec 64))
(declare-fun temp42_75 () (_ BitVec 64))
(declare-fun temp42_76 () (_ BitVec 64))
(declare-fun temp42_77 () (_ BitVec 64))
(declare-fun temp42_78 () (_ BitVec 64))
(declare-fun temp42_79 () (_ BitVec 64))
(declare-fun temp42_80 () (_ BitVec 64))
(declare-fun temp42_81 () (_ BitVec 64))
(declare-fun temp42_82 () (_ BitVec 64))
(declare-fun temp42_83 () (_ BitVec 64))
(declare-fun temp42_84 () (_ BitVec 64))
(declare-fun temp42_85 () (_ BitVec 64))
(declare-fun temp42_86 () (_ BitVec 64))
(declare-fun temp42_87 () (_ BitVec 64))
(declare-fun temp42_88 () (_ BitVec 64))
(declare-fun temp42_89 () (_ BitVec 64))
(declare-fun temp42_90 () (_ BitVec 64))
(declare-fun temp42_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp42_92 () (_ BitVec 64))
(declare-fun temp42_93 () (_ BitVec 64))
(declare-fun temp42_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp42_95 () (_ BitVec 64))
(declare-fun temp42_96 () (_ BitVec 64))
(declare-fun temp42_97 () (_ BitVec 64))
(declare-fun temp42_98 () (_ BitVec 64))
(declare-fun temp42_99 () (_ BitVec 64))
(declare-fun temp42_100 () (_ BitVec 64))
(declare-fun temp42_101 () (_ BitVec 64))
(declare-fun temp42_102 () (_ BitVec 64))
(declare-fun temp42_103 () (_ BitVec 64))
(declare-fun temp42_104 () (_ BitVec 64))
(declare-fun temp42_105 () (_ BitVec 64))
(declare-fun temp42_106 () (_ BitVec 64))
(declare-fun temp42_107 () (_ BitVec 64))
(declare-fun temp42_108 () (_ BitVec 64))
(declare-fun temp42_109 () (_ BitVec 64))
(declare-fun temp42_110 () (_ BitVec 64))
(declare-fun temp42_111 () (_ BitVec 64))
(declare-fun temp42_112 () (_ BitVec 64))
(declare-fun temp42_113 () (_ BitVec 64))
(declare-fun temp42_114 () (_ BitVec 64))
(declare-fun temp42_115 () (_ BitVec 64))
(declare-fun temp42_116 () (_ BitVec 64))
(declare-fun temp42_117 () (_ BitVec 64))
(declare-fun temp42_118 () (_ BitVec 64))
(declare-fun temp42_119 () (_ BitVec 64))
(declare-fun temp42_120 () (_ BitVec 64))
(declare-fun temp42_121 () (_ BitVec 64))
(declare-fun temp42_122 () (_ BitVec 64))
(declare-fun temp42_123 () (_ BitVec 64))
(declare-fun temp42_124 () (_ BitVec 64))
(declare-fun temp42_125 () (_ BitVec 64))
(declare-fun temp42_126 () (_ BitVec 64))
(declare-fun temp42_127 () (_ BitVec 64))
(declare-fun temp42_128 () (_ BitVec 64))
(declare-fun temp42_129 () (_ BitVec 64))
(declare-fun temp42_130 () (_ BitVec 64))
(declare-fun temp42_131 () (_ BitVec 64))
(declare-fun temp42_132 () (_ BitVec 64))
(declare-fun temp42_133 () (_ BitVec 64))
(declare-fun temp42_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp42_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp42_136 () (_ BitVec 64))
(declare-fun temp42_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp42_138 () (_ BitVec 64))
(declare-fun temp42_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp42_140 () (_ BitVec 64))
(declare-fun temp42_141 () (_ BitVec 64))
(declare-fun temp42_142 () (_ BitVec 64))
(declare-fun temp42_143 () (_ BitVec 64))
(declare-fun temp42_144 () (_ BitVec 64))
(declare-fun temp42_145 () (_ BitVec 64))
(declare-fun temp42_146 () (_ BitVec 64))
(declare-fun temp42_147 () (_ BitVec 64))
(declare-fun temp42_148 () (_ BitVec 64))
(declare-fun temp42_149 () (_ BitVec 64))
(declare-fun temp42_150 () (_ BitVec 64))
(declare-fun temp42_151 () (_ BitVec 64))
(declare-fun temp42_152 () (_ BitVec 64))
(declare-fun temp42_153 () (_ BitVec 64))
(declare-fun temp42_154 () (_ BitVec 64))
(declare-fun temp42_155 () (_ BitVec 64))
(declare-fun temp42_157 () (_ BitVec 64))
(declare-fun temp42_158 () (_ BitVec 64))
(declare-fun temp42_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp42_159 () (_ BitVec 64))
(declare-fun temp42_160 () (_ BitVec 64))
(declare-fun temp42_162 () (_ BitVec 64))
(declare-fun temp42_163 () (_ BitVec 64))
(declare-fun temp42_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp42_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp42_165 () (_ BitVec 64))
(declare-fun temp42_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp42_167 () (_ BitVec 64))
(declare-fun temp42_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp42_169 () (_ BitVec 64))
(declare-fun temp42_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp42_171 () (_ BitVec 64))
(declare-fun temp42_172 () (_ BitVec 64))
(declare-fun temp42_173 () (_ BitVec 64))
(declare-fun temp42_174 () (_ BitVec 64))
(declare-fun temp42_175 () (_ BitVec 64))
(declare-fun temp42_176 () (_ BitVec 64))
(declare-fun temp42_177 () (_ BitVec 64))
(declare-fun temp42_178 () (_ BitVec 64))
(declare-fun temp42_179 () (_ BitVec 64))
(declare-fun temp42_180 () (_ BitVec 64))
(declare-fun temp42_181 () (_ BitVec 64))
(declare-fun temp42_182 () (_ BitVec 64))
(declare-fun temp42_183 () (_ BitVec 64))
(declare-fun temp42_184 () (_ BitVec 64))
(declare-fun temp42_185 () (_ BitVec 64))
(declare-fun temp42_186 () (_ BitVec 64))
(declare-fun temp42_187 () (_ BitVec 64))
(declare-fun temp42_188 () (_ BitVec 64))
(declare-fun temp42_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp42_190 () (_ BitVec 64))
(declare-fun temp42_192 () (_ BitVec 64))
(declare-fun temp42_193 () (_ BitVec 64))
(declare-fun temp42_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp42_194 () (_ BitVec 64))
(declare-fun temp42_195 () (_ BitVec 64))
(declare-fun temp42_197 () (_ BitVec 64))
(declare-fun temp42_198 () (_ BitVec 64))
(declare-fun temp42_196 () (_ BitVec 64))
(declare-fun temp42_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp42_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp42_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp42_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp42_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp42_204 () (_ BitVec 64))
(declare-fun temp42_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp42_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp42_207 () (_ BitVec 64))
(declare-fun temp42_208 () (_ BitVec 64))
(declare-fun temp42_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp42_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp42_211 () (_ BitVec 64))
(declare-fun temp42_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp42_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp42_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4796816 () (_ BitVec 64))
(declare-fun var211388 () (_ BitVec 64))
(declare-fun temp42_215 () (_ BitVec 64))
(declare-fun var211389 () (_ BitVec 64))
(declare-fun var5717837 () (_ BitVec 64))
(declare-fun temp42_216 () (_ BitVec 64))
(assert (= temp42_1 #x0000000000000001))
(assert (= var77203 temp42_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp42_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp42_2)))
(assert (= temp42_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp42_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp42_4 #x0000000000000000))
(assert (= var210941 temp42_4))
(assert (= temp42_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp42_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp42_6 #x0000000000000000))
(assert (= var210986 temp42_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp42_7 #x0000000000000000))
(assert (= temp42_8 temp42_7))
(assert (= temp42_9 (select ARGNAME_padding_NAMEEND_VAL temp42_8)))
(assert (= temp42_10 #x0000000000000001))
(assert (= temp42_11 temp42_10))
(assert (= temp42_12 (select ARGNAME_padding_NAMEEND_VAL temp42_11)))
(assert (= temp42_13 #x0000000000000002))
(assert (= temp42_14 temp42_13))
(assert (= temp42_15 (select ARGNAME_padding_NAMEEND_VAL temp42_14)))
(assert (= temp42_16 #x0000000000000003))
(assert (= temp42_17 temp42_16))
(assert (= temp42_18 (select ARGNAME_padding_NAMEEND_VAL temp42_17)))
(assert (= temp42_19 #x0000000000000004))
(assert (= temp42_20 temp42_19))
(assert (= temp42_21 (select ARGNAME_padding_NAMEEND_VAL temp42_20)))
(assert (= temp42_22 #x0000000000000005))
(assert (= temp42_23 temp42_22))
(assert (= temp42_24 (select ARGNAME_padding_NAMEEND_VAL temp42_23)))
(assert (= temp42_25 #x0000000000000000))
(assert (= temp42_26 #x0000000000000000))
(assert (= temp42_27 temp42_26))
(assert (= temp42_28 (select ARGNAME_padding_NAMEEND_VAL temp42_27)))
(assert (= temp42_29 #x0000000000000000))
(assert (= temp42_30 #x0000000000000001))
(assert (= temp42_31 temp42_30))
(assert (= temp42_32 (select ARGNAME_padding_NAMEEND_VAL temp42_31)))
(assert (= temp42_33 #x0000000000000000))
(assert (= temp42_34 #x0000000000000002))
(assert (= temp42_35 temp42_34))
(assert (= temp42_36 (select ARGNAME_padding_NAMEEND_VAL temp42_35)))
(assert (= temp42_37 #x0000000000000000))
(assert (= temp42_38 #x0000000000000003))
(assert (= temp42_39 temp42_38))
(assert (= temp42_40 (select ARGNAME_padding_NAMEEND_VAL temp42_39)))
(assert (= temp42_41 #x0000000000000000))
(assert (= temp42_42 #x0000000000000004))
(assert (= temp42_43 temp42_42))
(assert (= temp42_44 (select ARGNAME_padding_NAMEEND_VAL temp42_43)))
(assert (= temp42_45 #x0000000000000000))
(assert (= temp42_46 #x0000000000000005))
(assert (= temp42_47 temp42_46))
(assert (= temp42_48 (select ARGNAME_padding_NAMEEND_VAL temp42_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp42_28 temp42_25)
             (bvslt temp42_32 temp42_29)
             (bvslt temp42_36 temp42_33)
             (bvslt temp42_40 temp42_37)
             (bvslt temp42_44 temp42_41)
             (bvslt temp42_48 temp42_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp42_49 #x0000000000000000))
(assert (= var1191714 temp42_49))
(assert (= temp42_50 #x0000000000000000))
(assert (= temp42_51 temp42_50))
(assert (= temp42_52 (select ARGNAME_output_padding_NAMEEND_VAL temp42_51)))
(assert (= temp42_53 #x0000000000000001))
(assert (= temp42_54 temp42_53))
(assert (= temp42_55 (select ARGNAME_output_padding_NAMEEND_VAL temp42_54)))
(assert (= temp42_56 #x0000000000000002))
(assert (= temp42_57 temp42_56))
(assert (= temp42_58 (select ARGNAME_output_padding_NAMEEND_VAL temp42_57)))
(assert (= temp42_59 #x0000000000000003))
(assert (= temp42_60 temp42_59))
(assert (= temp42_61 (select ARGNAME_output_padding_NAMEEND_VAL temp42_60)))
(assert (= temp42_62 #x0000000000000004))
(assert (= temp42_63 temp42_62))
(assert (= temp42_64 (select ARGNAME_output_padding_NAMEEND_VAL temp42_63)))
(assert (= temp42_65 #x0000000000000005))
(assert (= temp42_66 temp42_65))
(assert (= temp42_67 (select ARGNAME_output_padding_NAMEEND_VAL temp42_66)))
(assert (= temp42_68 #x0000000000000000))
(assert (= temp42_69 #x0000000000000000))
(assert (= temp42_70 temp42_69))
(assert (= temp42_71 (select ARGNAME_output_padding_NAMEEND_VAL temp42_70)))
(assert (= temp42_72 #x0000000000000000))
(assert (= temp42_73 #x0000000000000001))
(assert (= temp42_74 temp42_73))
(assert (= temp42_75 (select ARGNAME_output_padding_NAMEEND_VAL temp42_74)))
(assert (= temp42_76 #x0000000000000000))
(assert (= temp42_77 #x0000000000000002))
(assert (= temp42_78 temp42_77))
(assert (= temp42_79 (select ARGNAME_output_padding_NAMEEND_VAL temp42_78)))
(assert (= temp42_80 #x0000000000000000))
(assert (= temp42_81 #x0000000000000003))
(assert (= temp42_82 temp42_81))
(assert (= temp42_83 (select ARGNAME_output_padding_NAMEEND_VAL temp42_82)))
(assert (= temp42_84 #x0000000000000000))
(assert (= temp42_85 #x0000000000000004))
(assert (= temp42_86 temp42_85))
(assert (= temp42_87 (select ARGNAME_output_padding_NAMEEND_VAL temp42_86)))
(assert (= temp42_88 #x0000000000000000))
(assert (= temp42_89 #x0000000000000005))
(assert (= temp42_90 temp42_89))
(assert (= temp42_91 (select ARGNAME_output_padding_NAMEEND_VAL temp42_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp42_71 temp42_68)
             (bvslt temp42_75 temp42_72)
             (bvslt temp42_79 temp42_76)
             (bvslt temp42_83 temp42_80)
             (bvslt temp42_87 temp42_84)
             (bvslt temp42_91 temp42_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp42_92 #x0000000000000000))
(assert (= var1191725 temp42_92))
(assert (= temp42_93 #x0000000000000000))
(assert (= temp42_94 temp42_93))
(assert (= temp42_95 (select ARGNAME_stride_NAMEEND_VAL temp42_94)))
(assert (= temp42_96 #x0000000000000001))
(assert (= temp42_97 temp42_96))
(assert (= temp42_98 (select ARGNAME_stride_NAMEEND_VAL temp42_97)))
(assert (= temp42_99 #x0000000000000002))
(assert (= temp42_100 temp42_99))
(assert (= temp42_101 (select ARGNAME_stride_NAMEEND_VAL temp42_100)))
(assert (= temp42_102 #x0000000000000003))
(assert (= temp42_103 temp42_102))
(assert (= temp42_104 (select ARGNAME_stride_NAMEEND_VAL temp42_103)))
(assert (= temp42_105 #x0000000000000004))
(assert (= temp42_106 temp42_105))
(assert (= temp42_107 (select ARGNAME_stride_NAMEEND_VAL temp42_106)))
(assert (= temp42_108 #x0000000000000005))
(assert (= temp42_109 temp42_108))
(assert (= temp42_110 (select ARGNAME_stride_NAMEEND_VAL temp42_109)))
(assert (= temp42_111 #x0000000000000000))
(assert (= temp42_112 #x0000000000000000))
(assert (= temp42_113 temp42_112))
(assert (= temp42_114 (select ARGNAME_stride_NAMEEND_VAL temp42_113)))
(assert (= temp42_115 #x0000000000000000))
(assert (= temp42_116 #x0000000000000001))
(assert (= temp42_117 temp42_116))
(assert (= temp42_118 (select ARGNAME_stride_NAMEEND_VAL temp42_117)))
(assert (= temp42_119 #x0000000000000000))
(assert (= temp42_120 #x0000000000000002))
(assert (= temp42_121 temp42_120))
(assert (= temp42_122 (select ARGNAME_stride_NAMEEND_VAL temp42_121)))
(assert (= temp42_123 #x0000000000000000))
(assert (= temp42_124 #x0000000000000003))
(assert (= temp42_125 temp42_124))
(assert (= temp42_126 (select ARGNAME_stride_NAMEEND_VAL temp42_125)))
(assert (= temp42_127 #x0000000000000000))
(assert (= temp42_128 #x0000000000000004))
(assert (= temp42_129 temp42_128))
(assert (= temp42_130 (select ARGNAME_stride_NAMEEND_VAL temp42_129)))
(assert (= temp42_131 #x0000000000000000))
(assert (= temp42_132 #x0000000000000005))
(assert (= temp42_133 temp42_132))
(assert (= temp42_134 (select ARGNAME_stride_NAMEEND_VAL temp42_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp42_114 temp42_111)
             (bvsle temp42_118 temp42_115)
             (bvsle temp42_122 temp42_119)
             (bvsle temp42_126 temp42_123)
             (bvsle temp42_130 temp42_127)
             (bvsle temp42_134 temp42_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp42_135 #x0000000000000000))
(assert (= var1191735 temp42_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp42_136 #x0000000000000001))
(assert (= var1191747 temp42_136))
(assert (= temp42_137 #x0000000000000000))
(assert (= var1179826 temp42_137))
(assert (= temp42_138 #x0000000000000000))
(assert (= temp42_139 temp42_138))
(assert (= temp42_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp42_139)))
(assert (= temp42_141 #x0000000000000001))
(assert (= temp42_142 temp42_141))
(assert (= temp42_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp42_142)))
(assert (= temp42_144 #x0000000000000002))
(assert (= temp42_145 temp42_144))
(assert (= temp42_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp42_145)))
(assert (= temp42_147 #x0000000000000003))
(assert (= temp42_148 temp42_147))
(assert (= temp42_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp42_148)))
(assert (= temp42_150 #x0000000000000004))
(assert (= temp42_151 temp42_150))
(assert (= temp42_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp42_151)))
(assert (= temp42_153 #x0000000000000005))
(assert (= temp42_154 temp42_153))
(assert (= temp42_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp42_154)))
(assert (= temp42_157 var1179826))
(assert (= temp42_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp42_157)))
(assert (= temp42_156 temp42_158))
(assert (= var1191780
   (ite (bvslt temp42_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp42_159 #x0000000000000000))
(assert (= var1191780 temp42_159))
(assert (= temp42_160 #x0000000000000000))
(assert (= var1179826 temp42_160))
(assert (= temp42_162 var1179826))
(assert (= temp42_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp42_162)))
(assert (= temp42_161 temp42_163))
(assert (= var1191802 (bvsmod temp42_161 ARGNAME_groups_NAMEEND)))
(assert (= temp42_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp42_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp42_165 #x0000000000000001))
(assert (= var1191803 temp42_165))
(assert (= temp42_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp42_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp42_167 #x0000000000000001))
(assert (= var1191823 temp42_167))
(assert (= temp42_168 #x0000000000000001))
(assert (= var1180714 temp42_168))
(assert (= temp42_169 #x0000000000000000))
(assert (= temp42_170 temp42_169))
(assert (= temp42_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp42_170)))
(assert (= temp42_172 #x0000000000000001))
(assert (= temp42_173 temp42_172))
(assert (= temp42_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp42_173)))
(assert (= temp42_175 #x0000000000000002))
(assert (= temp42_176 temp42_175))
(assert (= temp42_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp42_176)))
(assert (= temp42_178 #x0000000000000003))
(assert (= temp42_179 temp42_178))
(assert (= temp42_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp42_179)))
(assert (= temp42_181 #x0000000000000004))
(assert (= temp42_182 temp42_181))
(assert (= temp42_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp42_182)))
(assert (= temp42_184 #x0000000000000005))
(assert (= temp42_185 temp42_184))
(assert (= temp42_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp42_185)))
(assert (= temp42_187 #x0000000000000000))
(assert (= temp42_188
   (ite (bvslt var1180714 temp42_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp42_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp42_188)))
(assert (= var1191831 temp42_189))
(assert (bvslt (ite (bvslt var1180714 temp42_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp42_190 #x0000000000000001))
(assert (= var1180714 temp42_190))
(assert (= temp42_192 var1180714))
(assert (= temp42_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp42_192)))
(assert (= temp42_191 temp42_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp42_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp42_194 #x0000000000000001))
(assert (= var1191836 temp42_194))
(assert (= temp42_195 #x0000000000000000))
(assert (= var1179826 temp42_195))
(assert (= temp42_197 var1179826))
(assert (= temp42_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp42_197)))
(assert (= temp42_196 temp42_198))
(assert (= temp42_199 #x0000000000000002))
(assert (= var1586025 temp42_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp42_200 #x0000000000000001))
(assert (= var1191993 temp42_200))
(assert (= temp42_201 #x0000000000000001))
(assert (= var2700303 temp42_201))
(assert (= temp42_202 #x0000000000000001))
(assert (= var2962447 temp42_202))
(assert (= temp42_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp42_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp42_204 #x0000000000000001))
(assert (= var211058 temp42_204))
(assert (= temp42_205 #x0000000000000001))
(assert (= var211188 temp42_205))
(assert (= var3879401 var211188))
(assert (= temp42_206 #x0000000000000000))
(assert (= var3866802 temp42_206))
(assert (= temp42_207 #x0000000000000000))
(assert (= temp42_208
   (ite (bvslt var3866802 temp42_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp42_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp42_208)))
(assert (= var3879420 temp42_209))
(assert (bvslt (ite (bvslt var3866802 temp42_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp42_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp42_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp42_211 #x0000000000000001))
(assert (= var3879421 temp42_211))
(assert (= temp42_212 #x0000000000000000))
(assert (= var4079423 temp42_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp42_213 #x0000000000000002))
(assert (= var4208259 temp42_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp42_214 #x0000000000000000))
(assert (= var4273820 temp42_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4796816 var211201))
(assert (= var211388 var210913))
(assert (= temp42_215 #x0000000000000000))
(assert (= var211389
   (ite (distinct var211388 temp42_215) #x0000000000000001 #x0000000000000000)))
(assert (= var5717837 var211389))
(assert (= temp42_216 #x0000000000000001))
(assert (= var211058 temp42_216))
(model-add temp42_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp42_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp42_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp42_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





