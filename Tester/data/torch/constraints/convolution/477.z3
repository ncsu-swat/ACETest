(declare-fun temp636_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp636_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp636_3 () (_ BitVec 64))
(declare-fun temp636_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp636_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp636_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp636_7 () (_ BitVec 64))
(declare-fun temp636_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp636_9 () (_ BitVec 64))
(declare-fun temp636_10 () (_ BitVec 64))
(declare-fun temp636_11 () (_ BitVec 64))
(declare-fun temp636_12 () (_ BitVec 64))
(declare-fun temp636_13 () (_ BitVec 64))
(declare-fun temp636_14 () (_ BitVec 64))
(declare-fun temp636_15 () (_ BitVec 64))
(declare-fun temp636_16 () (_ BitVec 64))
(declare-fun temp636_17 () (_ BitVec 64))
(declare-fun temp636_18 () (_ BitVec 64))
(declare-fun temp636_19 () (_ BitVec 64))
(declare-fun temp636_20 () (_ BitVec 64))
(declare-fun temp636_21 () (_ BitVec 64))
(declare-fun temp636_22 () (_ BitVec 64))
(declare-fun temp636_23 () (_ BitVec 64))
(declare-fun temp636_24 () (_ BitVec 64))
(declare-fun temp636_25 () (_ BitVec 64))
(declare-fun temp636_26 () (_ BitVec 64))
(declare-fun temp636_27 () (_ BitVec 64))
(declare-fun temp636_28 () (_ BitVec 64))
(declare-fun temp636_29 () (_ BitVec 64))
(declare-fun temp636_30 () (_ BitVec 64))
(declare-fun temp636_31 () (_ BitVec 64))
(declare-fun temp636_32 () (_ BitVec 64))
(declare-fun temp636_33 () (_ BitVec 64))
(declare-fun temp636_34 () (_ BitVec 64))
(declare-fun temp636_35 () (_ BitVec 64))
(declare-fun temp636_36 () (_ BitVec 64))
(declare-fun temp636_37 () (_ BitVec 64))
(declare-fun temp636_38 () (_ BitVec 64))
(declare-fun temp636_39 () (_ BitVec 64))
(declare-fun temp636_40 () (_ BitVec 64))
(declare-fun temp636_41 () (_ BitVec 64))
(declare-fun temp636_42 () (_ BitVec 64))
(declare-fun temp636_43 () (_ BitVec 64))
(declare-fun temp636_44 () (_ BitVec 64))
(declare-fun temp636_45 () (_ BitVec 64))
(declare-fun temp636_46 () (_ BitVec 64))
(declare-fun temp636_47 () (_ BitVec 64))
(declare-fun temp636_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp636_49 () (_ BitVec 64))
(declare-fun temp636_50 () (_ BitVec 64))
(declare-fun temp636_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp636_52 () (_ BitVec 64))
(declare-fun temp636_53 () (_ BitVec 64))
(declare-fun temp636_54 () (_ BitVec 64))
(declare-fun temp636_55 () (_ BitVec 64))
(declare-fun temp636_56 () (_ BitVec 64))
(declare-fun temp636_57 () (_ BitVec 64))
(declare-fun temp636_58 () (_ BitVec 64))
(declare-fun temp636_59 () (_ BitVec 64))
(declare-fun temp636_60 () (_ BitVec 64))
(declare-fun temp636_61 () (_ BitVec 64))
(declare-fun temp636_62 () (_ BitVec 64))
(declare-fun temp636_63 () (_ BitVec 64))
(declare-fun temp636_64 () (_ BitVec 64))
(declare-fun temp636_65 () (_ BitVec 64))
(declare-fun temp636_66 () (_ BitVec 64))
(declare-fun temp636_67 () (_ BitVec 64))
(declare-fun temp636_68 () (_ BitVec 64))
(declare-fun temp636_69 () (_ BitVec 64))
(declare-fun temp636_70 () (_ BitVec 64))
(declare-fun temp636_71 () (_ BitVec 64))
(declare-fun temp636_72 () (_ BitVec 64))
(declare-fun temp636_73 () (_ BitVec 64))
(declare-fun temp636_74 () (_ BitVec 64))
(declare-fun temp636_75 () (_ BitVec 64))
(declare-fun temp636_76 () (_ BitVec 64))
(declare-fun temp636_77 () (_ BitVec 64))
(declare-fun temp636_78 () (_ BitVec 64))
(declare-fun temp636_79 () (_ BitVec 64))
(declare-fun temp636_80 () (_ BitVec 64))
(declare-fun temp636_81 () (_ BitVec 64))
(declare-fun temp636_82 () (_ BitVec 64))
(declare-fun temp636_83 () (_ BitVec 64))
(declare-fun temp636_84 () (_ BitVec 64))
(declare-fun temp636_85 () (_ BitVec 64))
(declare-fun temp636_86 () (_ BitVec 64))
(declare-fun temp636_87 () (_ BitVec 64))
(declare-fun temp636_88 () (_ BitVec 64))
(declare-fun temp636_89 () (_ BitVec 64))
(declare-fun temp636_90 () (_ BitVec 64))
(declare-fun temp636_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp636_92 () (_ BitVec 64))
(declare-fun temp636_93 () (_ BitVec 64))
(declare-fun temp636_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp636_95 () (_ BitVec 64))
(declare-fun temp636_96 () (_ BitVec 64))
(declare-fun temp636_97 () (_ BitVec 64))
(declare-fun temp636_98 () (_ BitVec 64))
(declare-fun temp636_99 () (_ BitVec 64))
(declare-fun temp636_100 () (_ BitVec 64))
(declare-fun temp636_101 () (_ BitVec 64))
(declare-fun temp636_102 () (_ BitVec 64))
(declare-fun temp636_103 () (_ BitVec 64))
(declare-fun temp636_104 () (_ BitVec 64))
(declare-fun temp636_105 () (_ BitVec 64))
(declare-fun temp636_106 () (_ BitVec 64))
(declare-fun temp636_107 () (_ BitVec 64))
(declare-fun temp636_108 () (_ BitVec 64))
(declare-fun temp636_109 () (_ BitVec 64))
(declare-fun temp636_110 () (_ BitVec 64))
(declare-fun temp636_111 () (_ BitVec 64))
(declare-fun temp636_112 () (_ BitVec 64))
(declare-fun temp636_113 () (_ BitVec 64))
(declare-fun temp636_114 () (_ BitVec 64))
(declare-fun temp636_115 () (_ BitVec 64))
(declare-fun temp636_116 () (_ BitVec 64))
(declare-fun temp636_117 () (_ BitVec 64))
(declare-fun temp636_118 () (_ BitVec 64))
(declare-fun temp636_119 () (_ BitVec 64))
(declare-fun temp636_120 () (_ BitVec 64))
(declare-fun temp636_121 () (_ BitVec 64))
(declare-fun temp636_122 () (_ BitVec 64))
(declare-fun temp636_123 () (_ BitVec 64))
(declare-fun temp636_124 () (_ BitVec 64))
(declare-fun temp636_125 () (_ BitVec 64))
(declare-fun temp636_126 () (_ BitVec 64))
(declare-fun temp636_127 () (_ BitVec 64))
(declare-fun temp636_128 () (_ BitVec 64))
(declare-fun temp636_129 () (_ BitVec 64))
(declare-fun temp636_130 () (_ BitVec 64))
(declare-fun temp636_131 () (_ BitVec 64))
(declare-fun temp636_132 () (_ BitVec 64))
(declare-fun temp636_133 () (_ BitVec 64))
(declare-fun temp636_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp636_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp636_136 () (_ BitVec 64))
(declare-fun temp636_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp636_138 () (_ BitVec 64))
(declare-fun temp636_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp636_140 () (_ BitVec 64))
(declare-fun temp636_141 () (_ BitVec 64))
(declare-fun temp636_142 () (_ BitVec 64))
(declare-fun temp636_143 () (_ BitVec 64))
(declare-fun temp636_144 () (_ BitVec 64))
(declare-fun temp636_145 () (_ BitVec 64))
(declare-fun temp636_146 () (_ BitVec 64))
(declare-fun temp636_147 () (_ BitVec 64))
(declare-fun temp636_148 () (_ BitVec 64))
(declare-fun temp636_149 () (_ BitVec 64))
(declare-fun temp636_150 () (_ BitVec 64))
(declare-fun temp636_151 () (_ BitVec 64))
(declare-fun temp636_152 () (_ BitVec 64))
(declare-fun temp636_153 () (_ BitVec 64))
(declare-fun temp636_154 () (_ BitVec 64))
(declare-fun temp636_155 () (_ BitVec 64))
(declare-fun temp636_157 () (_ BitVec 64))
(declare-fun temp636_158 () (_ BitVec 64))
(declare-fun temp636_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp636_159 () (_ BitVec 64))
(declare-fun temp636_160 () (_ BitVec 64))
(declare-fun temp636_162 () (_ BitVec 64))
(declare-fun temp636_163 () (_ BitVec 64))
(declare-fun temp636_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp636_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp636_165 () (_ BitVec 64))
(declare-fun temp636_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp636_167 () (_ BitVec 64))
(declare-fun temp636_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp636_169 () (_ BitVec 64))
(declare-fun temp636_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp636_171 () (_ BitVec 64))
(declare-fun temp636_172 () (_ BitVec 64))
(declare-fun temp636_173 () (_ BitVec 64))
(declare-fun temp636_174 () (_ BitVec 64))
(declare-fun temp636_175 () (_ BitVec 64))
(declare-fun temp636_176 () (_ BitVec 64))
(declare-fun temp636_177 () (_ BitVec 64))
(declare-fun temp636_178 () (_ BitVec 64))
(declare-fun temp636_179 () (_ BitVec 64))
(declare-fun temp636_180 () (_ BitVec 64))
(declare-fun temp636_181 () (_ BitVec 64))
(declare-fun temp636_182 () (_ BitVec 64))
(declare-fun temp636_183 () (_ BitVec 64))
(declare-fun temp636_184 () (_ BitVec 64))
(declare-fun temp636_185 () (_ BitVec 64))
(declare-fun temp636_186 () (_ BitVec 64))
(declare-fun temp636_187 () (_ BitVec 64))
(declare-fun temp636_188 () (_ BitVec 64))
(declare-fun temp636_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp636_190 () (_ BitVec 64))
(declare-fun temp636_192 () (_ BitVec 64))
(declare-fun temp636_193 () (_ BitVec 64))
(declare-fun temp636_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp636_194 () (_ BitVec 64))
(declare-fun temp636_195 () (_ BitVec 64))
(declare-fun temp636_197 () (_ BitVec 64))
(declare-fun temp636_198 () (_ BitVec 64))
(declare-fun temp636_196 () (_ BitVec 64))
(declare-fun temp636_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp636_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp636_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp636_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp636_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp636_204 () (_ BitVec 64))
(declare-fun temp636_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp636_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp636_207 () (_ BitVec 64))
(declare-fun temp636_208 () (_ BitVec 64))
(declare-fun temp636_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp636_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp636_211 () (_ BitVec 64))
(declare-fun temp636_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp636_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp636_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4796816 () (_ BitVec 64))
(declare-fun var211388 () (_ BitVec 64))
(declare-fun temp636_215 () (_ BitVec 64))
(declare-fun var211389 () (_ BitVec 64))
(declare-fun var5717837 () (_ BitVec 64))
(declare-fun temp636_217 () (_ BitVec 64))
(declare-fun temp636_216 () (_ BitVec 64))
(declare-fun temp636_218 () (_ BitVec 64))
(declare-fun var6557162 () (_ BitVec 64))
(declare-fun temp636_220 () (_ BitVec 64))
(declare-fun temp636_219 () (_ BitVec 64))
(declare-fun temp636_221 () (_ BitVec 64))
(declare-fun temp636_222 () (_ BitVec 64))
(declare-fun var7287572 () (_ BitVec 64))
(declare-fun var7287539 () (_ BitVec 64))
(declare-fun var7156103 () (_ BitVec 64))
(declare-fun var7156099 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp636_223 () (_ BitVec 64))
(assert (= temp636_1 #x0000000000000001))
(assert (= var77203 temp636_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp636_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp636_2)))
(assert (= temp636_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp636_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp636_4 #x0000000000000000))
(assert (= var210941 temp636_4))
(assert (= temp636_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp636_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp636_6 #x0000000000000000))
(assert (= var210986 temp636_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp636_7 #x0000000000000000))
(assert (= temp636_8 temp636_7))
(assert (= temp636_9 (select ARGNAME_padding_NAMEEND_VAL temp636_8)))
(assert (= temp636_10 #x0000000000000001))
(assert (= temp636_11 temp636_10))
(assert (= temp636_12 (select ARGNAME_padding_NAMEEND_VAL temp636_11)))
(assert (= temp636_13 #x0000000000000002))
(assert (= temp636_14 temp636_13))
(assert (= temp636_15 (select ARGNAME_padding_NAMEEND_VAL temp636_14)))
(assert (= temp636_16 #x0000000000000003))
(assert (= temp636_17 temp636_16))
(assert (= temp636_18 (select ARGNAME_padding_NAMEEND_VAL temp636_17)))
(assert (= temp636_19 #x0000000000000004))
(assert (= temp636_20 temp636_19))
(assert (= temp636_21 (select ARGNAME_padding_NAMEEND_VAL temp636_20)))
(assert (= temp636_22 #x0000000000000005))
(assert (= temp636_23 temp636_22))
(assert (= temp636_24 (select ARGNAME_padding_NAMEEND_VAL temp636_23)))
(assert (= temp636_25 #x0000000000000000))
(assert (= temp636_26 #x0000000000000000))
(assert (= temp636_27 temp636_26))
(assert (= temp636_28 (select ARGNAME_padding_NAMEEND_VAL temp636_27)))
(assert (= temp636_29 #x0000000000000000))
(assert (= temp636_30 #x0000000000000001))
(assert (= temp636_31 temp636_30))
(assert (= temp636_32 (select ARGNAME_padding_NAMEEND_VAL temp636_31)))
(assert (= temp636_33 #x0000000000000000))
(assert (= temp636_34 #x0000000000000002))
(assert (= temp636_35 temp636_34))
(assert (= temp636_36 (select ARGNAME_padding_NAMEEND_VAL temp636_35)))
(assert (= temp636_37 #x0000000000000000))
(assert (= temp636_38 #x0000000000000003))
(assert (= temp636_39 temp636_38))
(assert (= temp636_40 (select ARGNAME_padding_NAMEEND_VAL temp636_39)))
(assert (= temp636_41 #x0000000000000000))
(assert (= temp636_42 #x0000000000000004))
(assert (= temp636_43 temp636_42))
(assert (= temp636_44 (select ARGNAME_padding_NAMEEND_VAL temp636_43)))
(assert (= temp636_45 #x0000000000000000))
(assert (= temp636_46 #x0000000000000005))
(assert (= temp636_47 temp636_46))
(assert (= temp636_48 (select ARGNAME_padding_NAMEEND_VAL temp636_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp636_28 temp636_25)
             (bvslt temp636_32 temp636_29)
             (bvslt temp636_36 temp636_33)
             (bvslt temp636_40 temp636_37)
             (bvslt temp636_44 temp636_41)
             (bvslt temp636_48 temp636_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp636_49 #x0000000000000000))
(assert (= var1191714 temp636_49))
(assert (= temp636_50 #x0000000000000000))
(assert (= temp636_51 temp636_50))
(assert (= temp636_52 (select ARGNAME_output_padding_NAMEEND_VAL temp636_51)))
(assert (= temp636_53 #x0000000000000001))
(assert (= temp636_54 temp636_53))
(assert (= temp636_55 (select ARGNAME_output_padding_NAMEEND_VAL temp636_54)))
(assert (= temp636_56 #x0000000000000002))
(assert (= temp636_57 temp636_56))
(assert (= temp636_58 (select ARGNAME_output_padding_NAMEEND_VAL temp636_57)))
(assert (= temp636_59 #x0000000000000003))
(assert (= temp636_60 temp636_59))
(assert (= temp636_61 (select ARGNAME_output_padding_NAMEEND_VAL temp636_60)))
(assert (= temp636_62 #x0000000000000004))
(assert (= temp636_63 temp636_62))
(assert (= temp636_64 (select ARGNAME_output_padding_NAMEEND_VAL temp636_63)))
(assert (= temp636_65 #x0000000000000005))
(assert (= temp636_66 temp636_65))
(assert (= temp636_67 (select ARGNAME_output_padding_NAMEEND_VAL temp636_66)))
(assert (= temp636_68 #x0000000000000000))
(assert (= temp636_69 #x0000000000000000))
(assert (= temp636_70 temp636_69))
(assert (= temp636_71 (select ARGNAME_output_padding_NAMEEND_VAL temp636_70)))
(assert (= temp636_72 #x0000000000000000))
(assert (= temp636_73 #x0000000000000001))
(assert (= temp636_74 temp636_73))
(assert (= temp636_75 (select ARGNAME_output_padding_NAMEEND_VAL temp636_74)))
(assert (= temp636_76 #x0000000000000000))
(assert (= temp636_77 #x0000000000000002))
(assert (= temp636_78 temp636_77))
(assert (= temp636_79 (select ARGNAME_output_padding_NAMEEND_VAL temp636_78)))
(assert (= temp636_80 #x0000000000000000))
(assert (= temp636_81 #x0000000000000003))
(assert (= temp636_82 temp636_81))
(assert (= temp636_83 (select ARGNAME_output_padding_NAMEEND_VAL temp636_82)))
(assert (= temp636_84 #x0000000000000000))
(assert (= temp636_85 #x0000000000000004))
(assert (= temp636_86 temp636_85))
(assert (= temp636_87 (select ARGNAME_output_padding_NAMEEND_VAL temp636_86)))
(assert (= temp636_88 #x0000000000000000))
(assert (= temp636_89 #x0000000000000005))
(assert (= temp636_90 temp636_89))
(assert (= temp636_91 (select ARGNAME_output_padding_NAMEEND_VAL temp636_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp636_71 temp636_68)
             (bvslt temp636_75 temp636_72)
             (bvslt temp636_79 temp636_76)
             (bvslt temp636_83 temp636_80)
             (bvslt temp636_87 temp636_84)
             (bvslt temp636_91 temp636_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp636_92 #x0000000000000000))
(assert (= var1191725 temp636_92))
(assert (= temp636_93 #x0000000000000000))
(assert (= temp636_94 temp636_93))
(assert (= temp636_95 (select ARGNAME_stride_NAMEEND_VAL temp636_94)))
(assert (= temp636_96 #x0000000000000001))
(assert (= temp636_97 temp636_96))
(assert (= temp636_98 (select ARGNAME_stride_NAMEEND_VAL temp636_97)))
(assert (= temp636_99 #x0000000000000002))
(assert (= temp636_100 temp636_99))
(assert (= temp636_101 (select ARGNAME_stride_NAMEEND_VAL temp636_100)))
(assert (= temp636_102 #x0000000000000003))
(assert (= temp636_103 temp636_102))
(assert (= temp636_104 (select ARGNAME_stride_NAMEEND_VAL temp636_103)))
(assert (= temp636_105 #x0000000000000004))
(assert (= temp636_106 temp636_105))
(assert (= temp636_107 (select ARGNAME_stride_NAMEEND_VAL temp636_106)))
(assert (= temp636_108 #x0000000000000005))
(assert (= temp636_109 temp636_108))
(assert (= temp636_110 (select ARGNAME_stride_NAMEEND_VAL temp636_109)))
(assert (= temp636_111 #x0000000000000000))
(assert (= temp636_112 #x0000000000000000))
(assert (= temp636_113 temp636_112))
(assert (= temp636_114 (select ARGNAME_stride_NAMEEND_VAL temp636_113)))
(assert (= temp636_115 #x0000000000000000))
(assert (= temp636_116 #x0000000000000001))
(assert (= temp636_117 temp636_116))
(assert (= temp636_118 (select ARGNAME_stride_NAMEEND_VAL temp636_117)))
(assert (= temp636_119 #x0000000000000000))
(assert (= temp636_120 #x0000000000000002))
(assert (= temp636_121 temp636_120))
(assert (= temp636_122 (select ARGNAME_stride_NAMEEND_VAL temp636_121)))
(assert (= temp636_123 #x0000000000000000))
(assert (= temp636_124 #x0000000000000003))
(assert (= temp636_125 temp636_124))
(assert (= temp636_126 (select ARGNAME_stride_NAMEEND_VAL temp636_125)))
(assert (= temp636_127 #x0000000000000000))
(assert (= temp636_128 #x0000000000000004))
(assert (= temp636_129 temp636_128))
(assert (= temp636_130 (select ARGNAME_stride_NAMEEND_VAL temp636_129)))
(assert (= temp636_131 #x0000000000000000))
(assert (= temp636_132 #x0000000000000005))
(assert (= temp636_133 temp636_132))
(assert (= temp636_134 (select ARGNAME_stride_NAMEEND_VAL temp636_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp636_114 temp636_111)
             (bvsle temp636_118 temp636_115)
             (bvsle temp636_122 temp636_119)
             (bvsle temp636_126 temp636_123)
             (bvsle temp636_130 temp636_127)
             (bvsle temp636_134 temp636_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp636_135 #x0000000000000000))
(assert (= var1191735 temp636_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp636_136 #x0000000000000001))
(assert (= var1191747 temp636_136))
(assert (= temp636_137 #x0000000000000000))
(assert (= var1179826 temp636_137))
(assert (= temp636_138 #x0000000000000000))
(assert (= temp636_139 temp636_138))
(assert (= temp636_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp636_139)))
(assert (= temp636_141 #x0000000000000001))
(assert (= temp636_142 temp636_141))
(assert (= temp636_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp636_142)))
(assert (= temp636_144 #x0000000000000002))
(assert (= temp636_145 temp636_144))
(assert (= temp636_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp636_145)))
(assert (= temp636_147 #x0000000000000003))
(assert (= temp636_148 temp636_147))
(assert (= temp636_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp636_148)))
(assert (= temp636_150 #x0000000000000004))
(assert (= temp636_151 temp636_150))
(assert (= temp636_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp636_151)))
(assert (= temp636_153 #x0000000000000005))
(assert (= temp636_154 temp636_153))
(assert (= temp636_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp636_154)))
(assert (= temp636_157 var1179826))
(assert (= temp636_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp636_157)))
(assert (= temp636_156 temp636_158))
(assert (= var1191780
   (ite (bvslt temp636_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp636_159 #x0000000000000000))
(assert (= var1191780 temp636_159))
(assert (= temp636_160 #x0000000000000000))
(assert (= var1179826 temp636_160))
(assert (= temp636_162 var1179826))
(assert (= temp636_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp636_162)))
(assert (= temp636_161 temp636_163))
(assert (= var1191802 (bvsmod temp636_161 ARGNAME_groups_NAMEEND)))
(assert (= temp636_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp636_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp636_165 #x0000000000000001))
(assert (= var1191803 temp636_165))
(assert (= temp636_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp636_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp636_167 #x0000000000000001))
(assert (= var1191823 temp636_167))
(assert (= temp636_168 #x0000000000000001))
(assert (= var1180714 temp636_168))
(assert (= temp636_169 #x0000000000000000))
(assert (= temp636_170 temp636_169))
(assert (= temp636_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp636_170)))
(assert (= temp636_172 #x0000000000000001))
(assert (= temp636_173 temp636_172))
(assert (= temp636_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp636_173)))
(assert (= temp636_175 #x0000000000000002))
(assert (= temp636_176 temp636_175))
(assert (= temp636_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp636_176)))
(assert (= temp636_178 #x0000000000000003))
(assert (= temp636_179 temp636_178))
(assert (= temp636_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp636_179)))
(assert (= temp636_181 #x0000000000000004))
(assert (= temp636_182 temp636_181))
(assert (= temp636_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp636_182)))
(assert (= temp636_184 #x0000000000000005))
(assert (= temp636_185 temp636_184))
(assert (= temp636_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp636_185)))
(assert (= temp636_187 #x0000000000000000))
(assert (= temp636_188
   (ite (bvslt var1180714 temp636_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp636_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp636_188)))
(assert (= var1191831 temp636_189))
(assert (bvslt (ite (bvslt var1180714 temp636_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp636_190 #x0000000000000001))
(assert (= var1180714 temp636_190))
(assert (= temp636_192 var1180714))
(assert (= temp636_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp636_192)))
(assert (= temp636_191 temp636_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp636_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp636_194 #x0000000000000001))
(assert (= var1191836 temp636_194))
(assert (= temp636_195 #x0000000000000000))
(assert (= var1179826 temp636_195))
(assert (= temp636_197 var1179826))
(assert (= temp636_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp636_197)))
(assert (= temp636_196 temp636_198))
(assert (= temp636_199 #x0000000000000002))
(assert (= var1586025 temp636_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp636_200 #x0000000000000001))
(assert (= var1191993 temp636_200))
(assert (= temp636_201 #x0000000000000001))
(assert (= var2700303 temp636_201))
(assert (= temp636_202 #x0000000000000001))
(assert (= var2962447 temp636_202))
(assert (= temp636_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp636_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp636_204 #x0000000000000001))
(assert (= var211058 temp636_204))
(assert (= temp636_205 #x0000000000000001))
(assert (= var211188 temp636_205))
(assert (= var3879401 var211188))
(assert (= temp636_206 #x0000000000000000))
(assert (= var3866802 temp636_206))
(assert (= temp636_207 #x0000000000000000))
(assert (= temp636_208
   (ite (bvslt var3866802 temp636_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp636_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp636_208)))
(assert (= var3879420 temp636_209))
(assert (bvslt (ite (bvslt var3866802 temp636_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp636_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp636_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp636_211 #x0000000000000001))
(assert (= var3879421 temp636_211))
(assert (= temp636_212 #x0000000000000000))
(assert (= var4079423 temp636_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp636_213 #x0000000000000002))
(assert (= var4208259 temp636_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp636_214 #x0000000000000000))
(assert (= var4273820 temp636_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4796816 var211201))
(assert (= var211388 var210913))
(assert (= temp636_215 #x0000000000000000))
(assert (= var211389
   (ite (distinct var211388 temp636_215) #x0000000000000001 #x0000000000000000)))
(assert (= var5717837 var211389))
(assert (= temp636_217 #x0000000000000001))
(assert (= temp636_216 temp636_217))
(assert (= temp636_218 #x0000000000000001))
(assert (= var6557162 temp636_218))
(assert (= temp636_220 #xffffffffffffffff))
(assert (= temp636_219 temp636_220))
(assert (= temp636_221 #x0000000000000001))
(assert (= var211058 temp636_221))
(assert (= temp636_222 #x0000000000000000))
(assert (= var7287572 temp636_222))
(assert (= var7287539 var7287572))
(assert (= var7156103 var7287539))
(assert (= var7156099 var7156103))
(assert (= var212669 var7156099))
(assert (= temp636_223 #x0000000000000000))
(assert (= var212669 temp636_223))
(model-add temp636_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp636_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp636_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp636_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




