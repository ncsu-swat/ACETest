(declare-fun temp10036_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10036_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10036_3 () (_ BitVec 64))
(declare-fun temp10036_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10036_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10036_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10036_7 () (_ BitVec 64))
(declare-fun temp10036_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10036_9 () (_ BitVec 64))
(declare-fun temp10036_10 () (_ BitVec 64))
(declare-fun temp10036_11 () (_ BitVec 64))
(declare-fun temp10036_12 () (_ BitVec 64))
(declare-fun temp10036_13 () (_ BitVec 64))
(declare-fun temp10036_14 () (_ BitVec 64))
(declare-fun temp10036_15 () (_ BitVec 64))
(declare-fun temp10036_16 () (_ BitVec 64))
(declare-fun temp10036_17 () (_ BitVec 64))
(declare-fun temp10036_18 () (_ BitVec 64))
(declare-fun temp10036_19 () (_ BitVec 64))
(declare-fun temp10036_20 () (_ BitVec 64))
(declare-fun temp10036_21 () (_ BitVec 64))
(declare-fun temp10036_22 () (_ BitVec 64))
(declare-fun temp10036_23 () (_ BitVec 64))
(declare-fun temp10036_24 () (_ BitVec 64))
(declare-fun temp10036_25 () (_ BitVec 64))
(declare-fun temp10036_26 () (_ BitVec 64))
(declare-fun temp10036_27 () (_ BitVec 64))
(declare-fun temp10036_28 () (_ BitVec 64))
(declare-fun temp10036_29 () (_ BitVec 64))
(declare-fun temp10036_30 () (_ BitVec 64))
(declare-fun temp10036_31 () (_ BitVec 64))
(declare-fun temp10036_32 () (_ BitVec 64))
(declare-fun temp10036_33 () (_ BitVec 64))
(declare-fun temp10036_34 () (_ BitVec 64))
(declare-fun temp10036_35 () (_ BitVec 64))
(declare-fun temp10036_36 () (_ BitVec 64))
(declare-fun temp10036_37 () (_ BitVec 64))
(declare-fun temp10036_38 () (_ BitVec 64))
(declare-fun temp10036_39 () (_ BitVec 64))
(declare-fun temp10036_40 () (_ BitVec 64))
(declare-fun temp10036_41 () (_ BitVec 64))
(declare-fun temp10036_42 () (_ BitVec 64))
(declare-fun temp10036_43 () (_ BitVec 64))
(declare-fun temp10036_44 () (_ BitVec 64))
(declare-fun temp10036_45 () (_ BitVec 64))
(declare-fun temp10036_46 () (_ BitVec 64))
(declare-fun temp10036_47 () (_ BitVec 64))
(declare-fun temp10036_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10036_49 () (_ BitVec 64))
(declare-fun temp10036_50 () (_ BitVec 64))
(declare-fun temp10036_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10036_52 () (_ BitVec 64))
(declare-fun temp10036_53 () (_ BitVec 64))
(declare-fun temp10036_54 () (_ BitVec 64))
(declare-fun temp10036_55 () (_ BitVec 64))
(declare-fun temp10036_56 () (_ BitVec 64))
(declare-fun temp10036_57 () (_ BitVec 64))
(declare-fun temp10036_58 () (_ BitVec 64))
(declare-fun temp10036_59 () (_ BitVec 64))
(declare-fun temp10036_60 () (_ BitVec 64))
(declare-fun temp10036_61 () (_ BitVec 64))
(declare-fun temp10036_62 () (_ BitVec 64))
(declare-fun temp10036_63 () (_ BitVec 64))
(declare-fun temp10036_64 () (_ BitVec 64))
(declare-fun temp10036_65 () (_ BitVec 64))
(declare-fun temp10036_66 () (_ BitVec 64))
(declare-fun temp10036_67 () (_ BitVec 64))
(declare-fun temp10036_68 () (_ BitVec 64))
(declare-fun temp10036_69 () (_ BitVec 64))
(declare-fun temp10036_70 () (_ BitVec 64))
(declare-fun temp10036_71 () (_ BitVec 64))
(declare-fun temp10036_72 () (_ BitVec 64))
(declare-fun temp10036_73 () (_ BitVec 64))
(declare-fun temp10036_74 () (_ BitVec 64))
(declare-fun temp10036_75 () (_ BitVec 64))
(declare-fun temp10036_76 () (_ BitVec 64))
(declare-fun temp10036_77 () (_ BitVec 64))
(declare-fun temp10036_78 () (_ BitVec 64))
(declare-fun temp10036_79 () (_ BitVec 64))
(declare-fun temp10036_80 () (_ BitVec 64))
(declare-fun temp10036_81 () (_ BitVec 64))
(declare-fun temp10036_82 () (_ BitVec 64))
(declare-fun temp10036_83 () (_ BitVec 64))
(declare-fun temp10036_84 () (_ BitVec 64))
(declare-fun temp10036_85 () (_ BitVec 64))
(declare-fun temp10036_86 () (_ BitVec 64))
(declare-fun temp10036_87 () (_ BitVec 64))
(declare-fun temp10036_88 () (_ BitVec 64))
(declare-fun temp10036_89 () (_ BitVec 64))
(declare-fun temp10036_90 () (_ BitVec 64))
(declare-fun temp10036_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10036_92 () (_ BitVec 64))
(declare-fun temp10036_93 () (_ BitVec 64))
(declare-fun temp10036_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10036_95 () (_ BitVec 64))
(declare-fun temp10036_96 () (_ BitVec 64))
(declare-fun temp10036_97 () (_ BitVec 64))
(declare-fun temp10036_98 () (_ BitVec 64))
(declare-fun temp10036_99 () (_ BitVec 64))
(declare-fun temp10036_100 () (_ BitVec 64))
(declare-fun temp10036_101 () (_ BitVec 64))
(declare-fun temp10036_102 () (_ BitVec 64))
(declare-fun temp10036_103 () (_ BitVec 64))
(declare-fun temp10036_104 () (_ BitVec 64))
(declare-fun temp10036_105 () (_ BitVec 64))
(declare-fun temp10036_106 () (_ BitVec 64))
(declare-fun temp10036_107 () (_ BitVec 64))
(declare-fun temp10036_108 () (_ BitVec 64))
(declare-fun temp10036_109 () (_ BitVec 64))
(declare-fun temp10036_110 () (_ BitVec 64))
(declare-fun temp10036_111 () (_ BitVec 64))
(declare-fun temp10036_112 () (_ BitVec 64))
(declare-fun temp10036_113 () (_ BitVec 64))
(declare-fun temp10036_114 () (_ BitVec 64))
(declare-fun temp10036_115 () (_ BitVec 64))
(declare-fun temp10036_116 () (_ BitVec 64))
(declare-fun temp10036_117 () (_ BitVec 64))
(declare-fun temp10036_118 () (_ BitVec 64))
(declare-fun temp10036_119 () (_ BitVec 64))
(declare-fun temp10036_120 () (_ BitVec 64))
(declare-fun temp10036_121 () (_ BitVec 64))
(declare-fun temp10036_122 () (_ BitVec 64))
(declare-fun temp10036_123 () (_ BitVec 64))
(declare-fun temp10036_124 () (_ BitVec 64))
(declare-fun temp10036_125 () (_ BitVec 64))
(declare-fun temp10036_126 () (_ BitVec 64))
(declare-fun temp10036_127 () (_ BitVec 64))
(declare-fun temp10036_128 () (_ BitVec 64))
(declare-fun temp10036_129 () (_ BitVec 64))
(declare-fun temp10036_130 () (_ BitVec 64))
(declare-fun temp10036_131 () (_ BitVec 64))
(declare-fun temp10036_132 () (_ BitVec 64))
(declare-fun temp10036_133 () (_ BitVec 64))
(declare-fun temp10036_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10036_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10036_136 () (_ BitVec 64))
(declare-fun temp10036_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10036_138 () (_ BitVec 64))
(declare-fun temp10036_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10036_140 () (_ BitVec 64))
(declare-fun temp10036_141 () (_ BitVec 64))
(declare-fun temp10036_142 () (_ BitVec 64))
(declare-fun temp10036_143 () (_ BitVec 64))
(declare-fun temp10036_144 () (_ BitVec 64))
(declare-fun temp10036_145 () (_ BitVec 64))
(declare-fun temp10036_146 () (_ BitVec 64))
(declare-fun temp10036_147 () (_ BitVec 64))
(declare-fun temp10036_148 () (_ BitVec 64))
(declare-fun temp10036_149 () (_ BitVec 64))
(declare-fun temp10036_150 () (_ BitVec 64))
(declare-fun temp10036_151 () (_ BitVec 64))
(declare-fun temp10036_152 () (_ BitVec 64))
(declare-fun temp10036_153 () (_ BitVec 64))
(declare-fun temp10036_154 () (_ BitVec 64))
(declare-fun temp10036_155 () (_ BitVec 64))
(declare-fun temp10036_157 () (_ BitVec 64))
(declare-fun temp10036_158 () (_ BitVec 64))
(declare-fun temp10036_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10036_159 () (_ BitVec 64))
(declare-fun temp10036_160 () (_ BitVec 64))
(declare-fun temp10036_162 () (_ BitVec 64))
(declare-fun temp10036_163 () (_ BitVec 64))
(declare-fun temp10036_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10036_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10036_165 () (_ BitVec 64))
(declare-fun temp10036_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10036_167 () (_ BitVec 64))
(declare-fun temp10036_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10036_169 () (_ BitVec 64))
(declare-fun temp10036_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10036_171 () (_ BitVec 64))
(declare-fun temp10036_172 () (_ BitVec 64))
(declare-fun temp10036_173 () (_ BitVec 64))
(declare-fun temp10036_174 () (_ BitVec 64))
(declare-fun temp10036_175 () (_ BitVec 64))
(declare-fun temp10036_176 () (_ BitVec 64))
(declare-fun temp10036_177 () (_ BitVec 64))
(declare-fun temp10036_178 () (_ BitVec 64))
(declare-fun temp10036_179 () (_ BitVec 64))
(declare-fun temp10036_180 () (_ BitVec 64))
(declare-fun temp10036_181 () (_ BitVec 64))
(declare-fun temp10036_182 () (_ BitVec 64))
(declare-fun temp10036_183 () (_ BitVec 64))
(declare-fun temp10036_184 () (_ BitVec 64))
(declare-fun temp10036_185 () (_ BitVec 64))
(declare-fun temp10036_186 () (_ BitVec 64))
(declare-fun temp10036_187 () (_ BitVec 64))
(declare-fun temp10036_188 () (_ BitVec 64))
(declare-fun temp10036_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10036_190 () (_ BitVec 64))
(declare-fun temp10036_192 () (_ BitVec 64))
(declare-fun temp10036_193 () (_ BitVec 64))
(declare-fun temp10036_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10036_194 () (_ BitVec 64))
(declare-fun temp10036_195 () (_ BitVec 64))
(declare-fun temp10036_197 () (_ BitVec 64))
(declare-fun temp10036_198 () (_ BitVec 64))
(declare-fun temp10036_196 () (_ BitVec 64))
(declare-fun temp10036_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10036_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10036_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10036_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10036_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10036_204 () (_ BitVec 64))
(declare-fun temp10036_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10036_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10036_207 () (_ BitVec 64))
(declare-fun temp10036_208 () (_ BitVec 64))
(declare-fun temp10036_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10036_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10036_211 () (_ BitVec 64))
(declare-fun temp10036_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10036_213 () (_ BitVec 64))
(declare-fun temp10036_214 () (_ BitVec 64))
(declare-fun temp10036_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10036_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10036_217 () (_ BitVec 64))
(declare-fun temp10036_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10036_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10036_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp10036_222 () (_ BitVec 64))
(declare-fun temp10036_221 () (_ BitVec 64))
(declare-fun temp10036_223 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp10036_224 () (_ BitVec 64))
(declare-fun temp10036_225 () (_ BitVec 64))
(declare-fun temp10036_226 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp10036_227 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp10036_228 () (_ BitVec 64))
(declare-fun temp10036_230 () (_ BitVec 64))
(declare-fun temp10036_229 () (_ BitVec 64))
(declare-fun temp10036_231 () (_ BitVec 64))
(declare-fun temp10036_232 () (_ BitVec 64))
(declare-fun var5518100 () (_ BitVec 64))
(declare-fun var5518067 () (_ BitVec 64))
(declare-fun var5386631 () (_ BitVec 64))
(declare-fun var5386627 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp10036_233 () (_ BitVec 64))
(assert (= temp10036_1 #x0000000000000001))
(assert (= var77203 temp10036_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10036_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10036_2)))
(assert (= temp10036_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10036_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10036_4 #x0000000000000000))
(assert (= var210941 temp10036_4))
(assert (= temp10036_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10036_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10036_6 #x0000000000000000))
(assert (= var210986 temp10036_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10036_7 #x0000000000000000))
(assert (= temp10036_8 temp10036_7))
(assert (= temp10036_9 (select ARGNAME_padding_NAMEEND_VAL temp10036_8)))
(assert (= temp10036_10 #x0000000000000001))
(assert (= temp10036_11 temp10036_10))
(assert (= temp10036_12 (select ARGNAME_padding_NAMEEND_VAL temp10036_11)))
(assert (= temp10036_13 #x0000000000000002))
(assert (= temp10036_14 temp10036_13))
(assert (= temp10036_15 (select ARGNAME_padding_NAMEEND_VAL temp10036_14)))
(assert (= temp10036_16 #x0000000000000003))
(assert (= temp10036_17 temp10036_16))
(assert (= temp10036_18 (select ARGNAME_padding_NAMEEND_VAL temp10036_17)))
(assert (= temp10036_19 #x0000000000000004))
(assert (= temp10036_20 temp10036_19))
(assert (= temp10036_21 (select ARGNAME_padding_NAMEEND_VAL temp10036_20)))
(assert (= temp10036_22 #x0000000000000005))
(assert (= temp10036_23 temp10036_22))
(assert (= temp10036_24 (select ARGNAME_padding_NAMEEND_VAL temp10036_23)))
(assert (= temp10036_25 #x0000000000000000))
(assert (= temp10036_26 #x0000000000000000))
(assert (= temp10036_27 temp10036_26))
(assert (= temp10036_28 (select ARGNAME_padding_NAMEEND_VAL temp10036_27)))
(assert (= temp10036_29 #x0000000000000000))
(assert (= temp10036_30 #x0000000000000001))
(assert (= temp10036_31 temp10036_30))
(assert (= temp10036_32 (select ARGNAME_padding_NAMEEND_VAL temp10036_31)))
(assert (= temp10036_33 #x0000000000000000))
(assert (= temp10036_34 #x0000000000000002))
(assert (= temp10036_35 temp10036_34))
(assert (= temp10036_36 (select ARGNAME_padding_NAMEEND_VAL temp10036_35)))
(assert (= temp10036_37 #x0000000000000000))
(assert (= temp10036_38 #x0000000000000003))
(assert (= temp10036_39 temp10036_38))
(assert (= temp10036_40 (select ARGNAME_padding_NAMEEND_VAL temp10036_39)))
(assert (= temp10036_41 #x0000000000000000))
(assert (= temp10036_42 #x0000000000000004))
(assert (= temp10036_43 temp10036_42))
(assert (= temp10036_44 (select ARGNAME_padding_NAMEEND_VAL temp10036_43)))
(assert (= temp10036_45 #x0000000000000000))
(assert (= temp10036_46 #x0000000000000005))
(assert (= temp10036_47 temp10036_46))
(assert (= temp10036_48 (select ARGNAME_padding_NAMEEND_VAL temp10036_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10036_28 temp10036_25)
             (bvslt temp10036_32 temp10036_29)
             (bvslt temp10036_36 temp10036_33)
             (bvslt temp10036_40 temp10036_37)
             (bvslt temp10036_44 temp10036_41)
             (bvslt temp10036_48 temp10036_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10036_49 #x0000000000000000))
(assert (= var1191714 temp10036_49))
(assert (= temp10036_50 #x0000000000000000))
(assert (= temp10036_51 temp10036_50))
(assert (= temp10036_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10036_51)))
(assert (= temp10036_53 #x0000000000000001))
(assert (= temp10036_54 temp10036_53))
(assert (= temp10036_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10036_54)))
(assert (= temp10036_56 #x0000000000000002))
(assert (= temp10036_57 temp10036_56))
(assert (= temp10036_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10036_57)))
(assert (= temp10036_59 #x0000000000000003))
(assert (= temp10036_60 temp10036_59))
(assert (= temp10036_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10036_60)))
(assert (= temp10036_62 #x0000000000000004))
(assert (= temp10036_63 temp10036_62))
(assert (= temp10036_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10036_63)))
(assert (= temp10036_65 #x0000000000000005))
(assert (= temp10036_66 temp10036_65))
(assert (= temp10036_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10036_66)))
(assert (= temp10036_68 #x0000000000000000))
(assert (= temp10036_69 #x0000000000000000))
(assert (= temp10036_70 temp10036_69))
(assert (= temp10036_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10036_70)))
(assert (= temp10036_72 #x0000000000000000))
(assert (= temp10036_73 #x0000000000000001))
(assert (= temp10036_74 temp10036_73))
(assert (= temp10036_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10036_74)))
(assert (= temp10036_76 #x0000000000000000))
(assert (= temp10036_77 #x0000000000000002))
(assert (= temp10036_78 temp10036_77))
(assert (= temp10036_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10036_78)))
(assert (= temp10036_80 #x0000000000000000))
(assert (= temp10036_81 #x0000000000000003))
(assert (= temp10036_82 temp10036_81))
(assert (= temp10036_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10036_82)))
(assert (= temp10036_84 #x0000000000000000))
(assert (= temp10036_85 #x0000000000000004))
(assert (= temp10036_86 temp10036_85))
(assert (= temp10036_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10036_86)))
(assert (= temp10036_88 #x0000000000000000))
(assert (= temp10036_89 #x0000000000000005))
(assert (= temp10036_90 temp10036_89))
(assert (= temp10036_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10036_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10036_71 temp10036_68)
             (bvslt temp10036_75 temp10036_72)
             (bvslt temp10036_79 temp10036_76)
             (bvslt temp10036_83 temp10036_80)
             (bvslt temp10036_87 temp10036_84)
             (bvslt temp10036_91 temp10036_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10036_92 #x0000000000000000))
(assert (= var1191725 temp10036_92))
(assert (= temp10036_93 #x0000000000000000))
(assert (= temp10036_94 temp10036_93))
(assert (= temp10036_95 (select ARGNAME_stride_NAMEEND_VAL temp10036_94)))
(assert (= temp10036_96 #x0000000000000001))
(assert (= temp10036_97 temp10036_96))
(assert (= temp10036_98 (select ARGNAME_stride_NAMEEND_VAL temp10036_97)))
(assert (= temp10036_99 #x0000000000000002))
(assert (= temp10036_100 temp10036_99))
(assert (= temp10036_101 (select ARGNAME_stride_NAMEEND_VAL temp10036_100)))
(assert (= temp10036_102 #x0000000000000003))
(assert (= temp10036_103 temp10036_102))
(assert (= temp10036_104 (select ARGNAME_stride_NAMEEND_VAL temp10036_103)))
(assert (= temp10036_105 #x0000000000000004))
(assert (= temp10036_106 temp10036_105))
(assert (= temp10036_107 (select ARGNAME_stride_NAMEEND_VAL temp10036_106)))
(assert (= temp10036_108 #x0000000000000005))
(assert (= temp10036_109 temp10036_108))
(assert (= temp10036_110 (select ARGNAME_stride_NAMEEND_VAL temp10036_109)))
(assert (= temp10036_111 #x0000000000000000))
(assert (= temp10036_112 #x0000000000000000))
(assert (= temp10036_113 temp10036_112))
(assert (= temp10036_114 (select ARGNAME_stride_NAMEEND_VAL temp10036_113)))
(assert (= temp10036_115 #x0000000000000000))
(assert (= temp10036_116 #x0000000000000001))
(assert (= temp10036_117 temp10036_116))
(assert (= temp10036_118 (select ARGNAME_stride_NAMEEND_VAL temp10036_117)))
(assert (= temp10036_119 #x0000000000000000))
(assert (= temp10036_120 #x0000000000000002))
(assert (= temp10036_121 temp10036_120))
(assert (= temp10036_122 (select ARGNAME_stride_NAMEEND_VAL temp10036_121)))
(assert (= temp10036_123 #x0000000000000000))
(assert (= temp10036_124 #x0000000000000003))
(assert (= temp10036_125 temp10036_124))
(assert (= temp10036_126 (select ARGNAME_stride_NAMEEND_VAL temp10036_125)))
(assert (= temp10036_127 #x0000000000000000))
(assert (= temp10036_128 #x0000000000000004))
(assert (= temp10036_129 temp10036_128))
(assert (= temp10036_130 (select ARGNAME_stride_NAMEEND_VAL temp10036_129)))
(assert (= temp10036_131 #x0000000000000000))
(assert (= temp10036_132 #x0000000000000005))
(assert (= temp10036_133 temp10036_132))
(assert (= temp10036_134 (select ARGNAME_stride_NAMEEND_VAL temp10036_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10036_114 temp10036_111)
             (bvsle temp10036_118 temp10036_115)
             (bvsle temp10036_122 temp10036_119)
             (bvsle temp10036_126 temp10036_123)
             (bvsle temp10036_130 temp10036_127)
             (bvsle temp10036_134 temp10036_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10036_135 #x0000000000000000))
(assert (= var1191735 temp10036_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10036_136 #x0000000000000001))
(assert (= var1191747 temp10036_136))
(assert (= temp10036_137 #x0000000000000000))
(assert (= var1179826 temp10036_137))
(assert (= temp10036_138 #x0000000000000000))
(assert (= temp10036_139 temp10036_138))
(assert (= temp10036_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10036_139)))
(assert (= temp10036_141 #x0000000000000001))
(assert (= temp10036_142 temp10036_141))
(assert (= temp10036_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10036_142)))
(assert (= temp10036_144 #x0000000000000002))
(assert (= temp10036_145 temp10036_144))
(assert (= temp10036_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10036_145)))
(assert (= temp10036_147 #x0000000000000003))
(assert (= temp10036_148 temp10036_147))
(assert (= temp10036_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10036_148)))
(assert (= temp10036_150 #x0000000000000004))
(assert (= temp10036_151 temp10036_150))
(assert (= temp10036_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10036_151)))
(assert (= temp10036_153 #x0000000000000005))
(assert (= temp10036_154 temp10036_153))
(assert (= temp10036_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10036_154)))
(assert (= temp10036_157 var1179826))
(assert (= temp10036_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10036_157)))
(assert (= temp10036_156 temp10036_158))
(assert (= var1191780
   (ite (bvslt temp10036_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10036_159 #x0000000000000000))
(assert (= var1191780 temp10036_159))
(assert (= temp10036_160 #x0000000000000000))
(assert (= var1179826 temp10036_160))
(assert (= temp10036_162 var1179826))
(assert (= temp10036_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10036_162)))
(assert (= temp10036_161 temp10036_163))
(assert (= var1191802 (bvsmod temp10036_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10036_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10036_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10036_165 #x0000000000000001))
(assert (= var1191803 temp10036_165))
(assert (= temp10036_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10036_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10036_167 #x0000000000000001))
(assert (= var1191823 temp10036_167))
(assert (= temp10036_168 #x0000000000000001))
(assert (= var1180714 temp10036_168))
(assert (= temp10036_169 #x0000000000000000))
(assert (= temp10036_170 temp10036_169))
(assert (= temp10036_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10036_170)))
(assert (= temp10036_172 #x0000000000000001))
(assert (= temp10036_173 temp10036_172))
(assert (= temp10036_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10036_173)))
(assert (= temp10036_175 #x0000000000000002))
(assert (= temp10036_176 temp10036_175))
(assert (= temp10036_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10036_176)))
(assert (= temp10036_178 #x0000000000000003))
(assert (= temp10036_179 temp10036_178))
(assert (= temp10036_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10036_179)))
(assert (= temp10036_181 #x0000000000000004))
(assert (= temp10036_182 temp10036_181))
(assert (= temp10036_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10036_182)))
(assert (= temp10036_184 #x0000000000000005))
(assert (= temp10036_185 temp10036_184))
(assert (= temp10036_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10036_185)))
(assert (= temp10036_187 #x0000000000000000))
(assert (= temp10036_188
   (ite (bvslt var1180714 temp10036_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10036_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10036_188)))
(assert (= var1191831 temp10036_189))
(assert (bvslt (ite (bvslt var1180714 temp10036_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10036_190 #x0000000000000001))
(assert (= var1180714 temp10036_190))
(assert (= temp10036_192 var1180714))
(assert (= temp10036_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10036_192)))
(assert (= temp10036_191 temp10036_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10036_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10036_194 #x0000000000000001))
(assert (= var1191836 temp10036_194))
(assert (= temp10036_195 #x0000000000000000))
(assert (= var1179826 temp10036_195))
(assert (= temp10036_197 var1179826))
(assert (= temp10036_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10036_197)))
(assert (= temp10036_196 temp10036_198))
(assert (= temp10036_199 #x0000000000000002))
(assert (= var1586025 temp10036_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10036_200 #x0000000000000001))
(assert (= var1191993 temp10036_200))
(assert (= temp10036_201 #x0000000000000001))
(assert (= var2700303 temp10036_201))
(assert (= temp10036_202 #x0000000000000001))
(assert (= var2962447 temp10036_202))
(assert (= temp10036_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10036_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10036_204 #x0000000000000001))
(assert (= var211058 temp10036_204))
(assert (= temp10036_205 #x0000000000000001))
(assert (= var211188 temp10036_205))
(assert (= var3879401 var211188))
(assert (= temp10036_206 #x0000000000000000))
(assert (= var3866802 temp10036_206))
(assert (= temp10036_207 #x0000000000000000))
(assert (= temp10036_208
   (ite (bvslt var3866802 temp10036_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10036_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10036_208)))
(assert (= var3879420 temp10036_209))
(assert (bvslt (ite (bvslt var3866802 temp10036_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10036_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10036_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10036_211 #x0000000000000000))
(assert (= var3879421 temp10036_211))
(assert (= temp10036_212 #x0000000000000001))
(assert (= var3867690 temp10036_212))
(assert (= temp10036_213 #x0000000000000000))
(assert (= temp10036_214
   (ite (bvslt var3867690 temp10036_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10036_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10036_214)))
(assert (= var3879423 temp10036_215))
(assert (bvslt (ite (bvslt var3867690 temp10036_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10036_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10036_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10036_217 #x0000000000000001))
(assert (= var3879424 temp10036_217))
(assert (= temp10036_218 #x0000000000000000))
(assert (= var4079423 temp10036_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10036_219 #x0000000000000002))
(assert (= var4208259 temp10036_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10036_220 #x0000000000000000))
(assert (= var4273820 temp10036_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp10036_222 #xffffffffffffffff))
(assert (= temp10036_221 temp10036_222))
(assert (= temp10036_223 #x0000000000000001))
(assert (= var197674 temp10036_223))
(assert (= temp10036_224 #x0000000000000000))
(assert (= temp10036_225
   (ite (bvslt var197674 temp10036_224)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp10036_226 (select ARGNAME_input_NAMEEND_DIMSIZE temp10036_225)))
(assert (= var211595 temp10036_226))
(assert (bvslt (ite (bvslt var197674 temp10036_224)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10036_227 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp10036_227) #x0000000000000001 #x0000000000000000)))
(assert (= temp10036_228 #x0000000000000001))
(assert (= var211596 temp10036_228))
(assert (= temp10036_230 #xffffffffffffffff))
(assert (= temp10036_229 temp10036_230))
(assert (= temp10036_231 #x0000000000000001))
(assert (= var211058 temp10036_231))
(assert (= temp10036_232 #x0000000000000000))
(assert (= var5518100 temp10036_232))
(assert (= var5518067 var5518100))
(assert (= var5386631 var5518067))
(assert (= var5386627 var5386631))
(assert (= var212669 var5386627))
(assert (= temp10036_233 #x0000000000000000))
(assert (= var212669 temp10036_233))
(model-add temp10036_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10036_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10036_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10036_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






