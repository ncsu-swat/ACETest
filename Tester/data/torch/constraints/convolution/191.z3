(declare-fun temp254_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp254_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp254_3 () (_ BitVec 64))
(declare-fun temp254_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp254_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp254_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp254_7 () (_ BitVec 64))
(declare-fun temp254_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp254_9 () (_ BitVec 64))
(declare-fun temp254_10 () (_ BitVec 64))
(declare-fun temp254_11 () (_ BitVec 64))
(declare-fun temp254_12 () (_ BitVec 64))
(declare-fun temp254_13 () (_ BitVec 64))
(declare-fun temp254_14 () (_ BitVec 64))
(declare-fun temp254_15 () (_ BitVec 64))
(declare-fun temp254_16 () (_ BitVec 64))
(declare-fun temp254_17 () (_ BitVec 64))
(declare-fun temp254_18 () (_ BitVec 64))
(declare-fun temp254_19 () (_ BitVec 64))
(declare-fun temp254_20 () (_ BitVec 64))
(declare-fun temp254_21 () (_ BitVec 64))
(declare-fun temp254_22 () (_ BitVec 64))
(declare-fun temp254_23 () (_ BitVec 64))
(declare-fun temp254_24 () (_ BitVec 64))
(declare-fun temp254_25 () (_ BitVec 64))
(declare-fun temp254_26 () (_ BitVec 64))
(declare-fun temp254_27 () (_ BitVec 64))
(declare-fun temp254_28 () (_ BitVec 64))
(declare-fun temp254_29 () (_ BitVec 64))
(declare-fun temp254_30 () (_ BitVec 64))
(declare-fun temp254_31 () (_ BitVec 64))
(declare-fun temp254_32 () (_ BitVec 64))
(declare-fun temp254_33 () (_ BitVec 64))
(declare-fun temp254_34 () (_ BitVec 64))
(declare-fun temp254_35 () (_ BitVec 64))
(declare-fun temp254_36 () (_ BitVec 64))
(declare-fun temp254_37 () (_ BitVec 64))
(declare-fun temp254_38 () (_ BitVec 64))
(declare-fun temp254_39 () (_ BitVec 64))
(declare-fun temp254_40 () (_ BitVec 64))
(declare-fun temp254_41 () (_ BitVec 64))
(declare-fun temp254_42 () (_ BitVec 64))
(declare-fun temp254_43 () (_ BitVec 64))
(declare-fun temp254_44 () (_ BitVec 64))
(declare-fun temp254_45 () (_ BitVec 64))
(declare-fun temp254_46 () (_ BitVec 64))
(declare-fun temp254_47 () (_ BitVec 64))
(declare-fun temp254_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp254_49 () (_ BitVec 64))
(declare-fun temp254_50 () (_ BitVec 64))
(declare-fun temp254_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp254_52 () (_ BitVec 64))
(declare-fun temp254_53 () (_ BitVec 64))
(declare-fun temp254_54 () (_ BitVec 64))
(declare-fun temp254_55 () (_ BitVec 64))
(declare-fun temp254_56 () (_ BitVec 64))
(declare-fun temp254_57 () (_ BitVec 64))
(declare-fun temp254_58 () (_ BitVec 64))
(declare-fun temp254_59 () (_ BitVec 64))
(declare-fun temp254_60 () (_ BitVec 64))
(declare-fun temp254_61 () (_ BitVec 64))
(declare-fun temp254_62 () (_ BitVec 64))
(declare-fun temp254_63 () (_ BitVec 64))
(declare-fun temp254_64 () (_ BitVec 64))
(declare-fun temp254_65 () (_ BitVec 64))
(declare-fun temp254_66 () (_ BitVec 64))
(declare-fun temp254_67 () (_ BitVec 64))
(declare-fun temp254_68 () (_ BitVec 64))
(declare-fun temp254_69 () (_ BitVec 64))
(declare-fun temp254_70 () (_ BitVec 64))
(declare-fun temp254_71 () (_ BitVec 64))
(declare-fun temp254_72 () (_ BitVec 64))
(declare-fun temp254_73 () (_ BitVec 64))
(declare-fun temp254_74 () (_ BitVec 64))
(declare-fun temp254_75 () (_ BitVec 64))
(declare-fun temp254_76 () (_ BitVec 64))
(declare-fun temp254_77 () (_ BitVec 64))
(declare-fun temp254_78 () (_ BitVec 64))
(declare-fun temp254_79 () (_ BitVec 64))
(declare-fun temp254_80 () (_ BitVec 64))
(declare-fun temp254_81 () (_ BitVec 64))
(declare-fun temp254_82 () (_ BitVec 64))
(declare-fun temp254_83 () (_ BitVec 64))
(declare-fun temp254_84 () (_ BitVec 64))
(declare-fun temp254_85 () (_ BitVec 64))
(declare-fun temp254_86 () (_ BitVec 64))
(declare-fun temp254_87 () (_ BitVec 64))
(declare-fun temp254_88 () (_ BitVec 64))
(declare-fun temp254_89 () (_ BitVec 64))
(declare-fun temp254_90 () (_ BitVec 64))
(declare-fun temp254_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp254_92 () (_ BitVec 64))
(declare-fun temp254_93 () (_ BitVec 64))
(declare-fun temp254_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp254_95 () (_ BitVec 64))
(declare-fun temp254_96 () (_ BitVec 64))
(declare-fun temp254_97 () (_ BitVec 64))
(declare-fun temp254_98 () (_ BitVec 64))
(declare-fun temp254_99 () (_ BitVec 64))
(declare-fun temp254_100 () (_ BitVec 64))
(declare-fun temp254_101 () (_ BitVec 64))
(declare-fun temp254_102 () (_ BitVec 64))
(declare-fun temp254_103 () (_ BitVec 64))
(declare-fun temp254_104 () (_ BitVec 64))
(declare-fun temp254_105 () (_ BitVec 64))
(declare-fun temp254_106 () (_ BitVec 64))
(declare-fun temp254_107 () (_ BitVec 64))
(declare-fun temp254_108 () (_ BitVec 64))
(declare-fun temp254_109 () (_ BitVec 64))
(declare-fun temp254_110 () (_ BitVec 64))
(declare-fun temp254_111 () (_ BitVec 64))
(declare-fun temp254_112 () (_ BitVec 64))
(declare-fun temp254_113 () (_ BitVec 64))
(declare-fun temp254_114 () (_ BitVec 64))
(declare-fun temp254_115 () (_ BitVec 64))
(declare-fun temp254_116 () (_ BitVec 64))
(declare-fun temp254_117 () (_ BitVec 64))
(declare-fun temp254_118 () (_ BitVec 64))
(declare-fun temp254_119 () (_ BitVec 64))
(declare-fun temp254_120 () (_ BitVec 64))
(declare-fun temp254_121 () (_ BitVec 64))
(declare-fun temp254_122 () (_ BitVec 64))
(declare-fun temp254_123 () (_ BitVec 64))
(declare-fun temp254_124 () (_ BitVec 64))
(declare-fun temp254_125 () (_ BitVec 64))
(declare-fun temp254_126 () (_ BitVec 64))
(declare-fun temp254_127 () (_ BitVec 64))
(declare-fun temp254_128 () (_ BitVec 64))
(declare-fun temp254_129 () (_ BitVec 64))
(declare-fun temp254_130 () (_ BitVec 64))
(declare-fun temp254_131 () (_ BitVec 64))
(declare-fun temp254_132 () (_ BitVec 64))
(declare-fun temp254_133 () (_ BitVec 64))
(declare-fun temp254_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp254_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp254_136 () (_ BitVec 64))
(declare-fun temp254_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp254_138 () (_ BitVec 64))
(declare-fun temp254_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp254_140 () (_ BitVec 64))
(declare-fun temp254_141 () (_ BitVec 64))
(declare-fun temp254_142 () (_ BitVec 64))
(declare-fun temp254_143 () (_ BitVec 64))
(declare-fun temp254_144 () (_ BitVec 64))
(declare-fun temp254_145 () (_ BitVec 64))
(declare-fun temp254_146 () (_ BitVec 64))
(declare-fun temp254_147 () (_ BitVec 64))
(declare-fun temp254_148 () (_ BitVec 64))
(declare-fun temp254_149 () (_ BitVec 64))
(declare-fun temp254_150 () (_ BitVec 64))
(declare-fun temp254_151 () (_ BitVec 64))
(declare-fun temp254_152 () (_ BitVec 64))
(declare-fun temp254_153 () (_ BitVec 64))
(declare-fun temp254_154 () (_ BitVec 64))
(declare-fun temp254_155 () (_ BitVec 64))
(declare-fun temp254_157 () (_ BitVec 64))
(declare-fun temp254_158 () (_ BitVec 64))
(declare-fun temp254_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp254_159 () (_ BitVec 64))
(declare-fun temp254_160 () (_ BitVec 64))
(declare-fun temp254_162 () (_ BitVec 64))
(declare-fun temp254_163 () (_ BitVec 64))
(declare-fun temp254_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp254_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp254_165 () (_ BitVec 64))
(declare-fun temp254_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp254_167 () (_ BitVec 64))
(declare-fun temp254_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp254_169 () (_ BitVec 64))
(declare-fun temp254_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp254_171 () (_ BitVec 64))
(declare-fun temp254_172 () (_ BitVec 64))
(declare-fun temp254_173 () (_ BitVec 64))
(declare-fun temp254_174 () (_ BitVec 64))
(declare-fun temp254_175 () (_ BitVec 64))
(declare-fun temp254_176 () (_ BitVec 64))
(declare-fun temp254_177 () (_ BitVec 64))
(declare-fun temp254_178 () (_ BitVec 64))
(declare-fun temp254_179 () (_ BitVec 64))
(declare-fun temp254_180 () (_ BitVec 64))
(declare-fun temp254_181 () (_ BitVec 64))
(declare-fun temp254_182 () (_ BitVec 64))
(declare-fun temp254_183 () (_ BitVec 64))
(declare-fun temp254_184 () (_ BitVec 64))
(declare-fun temp254_185 () (_ BitVec 64))
(declare-fun temp254_186 () (_ BitVec 64))
(declare-fun temp254_187 () (_ BitVec 64))
(declare-fun temp254_188 () (_ BitVec 64))
(declare-fun temp254_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp254_190 () (_ BitVec 64))
(declare-fun temp254_192 () (_ BitVec 64))
(declare-fun temp254_193 () (_ BitVec 64))
(declare-fun temp254_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp254_194 () (_ BitVec 64))
(declare-fun temp254_195 () (_ BitVec 64))
(declare-fun temp254_197 () (_ BitVec 64))
(declare-fun temp254_198 () (_ BitVec 64))
(declare-fun temp254_196 () (_ BitVec 64))
(declare-fun temp254_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp254_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp254_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp254_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp254_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp254_204 () (_ BitVec 64))
(declare-fun temp254_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp254_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp254_207 () (_ BitVec 64))
(declare-fun temp254_208 () (_ BitVec 64))
(declare-fun temp254_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp254_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp254_211 () (_ BitVec 64))
(declare-fun temp254_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp254_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp254_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4796816 () (_ BitVec 64))
(declare-fun var211962 () (_ BitVec 64))
(declare-fun temp254_215 () (_ BitVec 64))
(declare-fun var211963 () (_ BitVec 64))
(declare-fun temp254_216 () (_ BitVec 64))
(assert (= temp254_1 #x0000000000000001))
(assert (= var77203 temp254_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp254_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp254_2)))
(assert (= temp254_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp254_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp254_4 #x0000000000000000))
(assert (= var210941 temp254_4))
(assert (= temp254_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp254_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp254_6 #x0000000000000000))
(assert (= var210986 temp254_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp254_7 #x0000000000000000))
(assert (= temp254_8 temp254_7))
(assert (= temp254_9 (select ARGNAME_padding_NAMEEND_VAL temp254_8)))
(assert (= temp254_10 #x0000000000000001))
(assert (= temp254_11 temp254_10))
(assert (= temp254_12 (select ARGNAME_padding_NAMEEND_VAL temp254_11)))
(assert (= temp254_13 #x0000000000000002))
(assert (= temp254_14 temp254_13))
(assert (= temp254_15 (select ARGNAME_padding_NAMEEND_VAL temp254_14)))
(assert (= temp254_16 #x0000000000000003))
(assert (= temp254_17 temp254_16))
(assert (= temp254_18 (select ARGNAME_padding_NAMEEND_VAL temp254_17)))
(assert (= temp254_19 #x0000000000000004))
(assert (= temp254_20 temp254_19))
(assert (= temp254_21 (select ARGNAME_padding_NAMEEND_VAL temp254_20)))
(assert (= temp254_22 #x0000000000000005))
(assert (= temp254_23 temp254_22))
(assert (= temp254_24 (select ARGNAME_padding_NAMEEND_VAL temp254_23)))
(assert (= temp254_25 #x0000000000000000))
(assert (= temp254_26 #x0000000000000000))
(assert (= temp254_27 temp254_26))
(assert (= temp254_28 (select ARGNAME_padding_NAMEEND_VAL temp254_27)))
(assert (= temp254_29 #x0000000000000000))
(assert (= temp254_30 #x0000000000000001))
(assert (= temp254_31 temp254_30))
(assert (= temp254_32 (select ARGNAME_padding_NAMEEND_VAL temp254_31)))
(assert (= temp254_33 #x0000000000000000))
(assert (= temp254_34 #x0000000000000002))
(assert (= temp254_35 temp254_34))
(assert (= temp254_36 (select ARGNAME_padding_NAMEEND_VAL temp254_35)))
(assert (= temp254_37 #x0000000000000000))
(assert (= temp254_38 #x0000000000000003))
(assert (= temp254_39 temp254_38))
(assert (= temp254_40 (select ARGNAME_padding_NAMEEND_VAL temp254_39)))
(assert (= temp254_41 #x0000000000000000))
(assert (= temp254_42 #x0000000000000004))
(assert (= temp254_43 temp254_42))
(assert (= temp254_44 (select ARGNAME_padding_NAMEEND_VAL temp254_43)))
(assert (= temp254_45 #x0000000000000000))
(assert (= temp254_46 #x0000000000000005))
(assert (= temp254_47 temp254_46))
(assert (= temp254_48 (select ARGNAME_padding_NAMEEND_VAL temp254_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp254_28 temp254_25)
             (bvslt temp254_32 temp254_29)
             (bvslt temp254_36 temp254_33)
             (bvslt temp254_40 temp254_37)
             (bvslt temp254_44 temp254_41)
             (bvslt temp254_48 temp254_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp254_49 #x0000000000000000))
(assert (= var1191714 temp254_49))
(assert (= temp254_50 #x0000000000000000))
(assert (= temp254_51 temp254_50))
(assert (= temp254_52 (select ARGNAME_output_padding_NAMEEND_VAL temp254_51)))
(assert (= temp254_53 #x0000000000000001))
(assert (= temp254_54 temp254_53))
(assert (= temp254_55 (select ARGNAME_output_padding_NAMEEND_VAL temp254_54)))
(assert (= temp254_56 #x0000000000000002))
(assert (= temp254_57 temp254_56))
(assert (= temp254_58 (select ARGNAME_output_padding_NAMEEND_VAL temp254_57)))
(assert (= temp254_59 #x0000000000000003))
(assert (= temp254_60 temp254_59))
(assert (= temp254_61 (select ARGNAME_output_padding_NAMEEND_VAL temp254_60)))
(assert (= temp254_62 #x0000000000000004))
(assert (= temp254_63 temp254_62))
(assert (= temp254_64 (select ARGNAME_output_padding_NAMEEND_VAL temp254_63)))
(assert (= temp254_65 #x0000000000000005))
(assert (= temp254_66 temp254_65))
(assert (= temp254_67 (select ARGNAME_output_padding_NAMEEND_VAL temp254_66)))
(assert (= temp254_68 #x0000000000000000))
(assert (= temp254_69 #x0000000000000000))
(assert (= temp254_70 temp254_69))
(assert (= temp254_71 (select ARGNAME_output_padding_NAMEEND_VAL temp254_70)))
(assert (= temp254_72 #x0000000000000000))
(assert (= temp254_73 #x0000000000000001))
(assert (= temp254_74 temp254_73))
(assert (= temp254_75 (select ARGNAME_output_padding_NAMEEND_VAL temp254_74)))
(assert (= temp254_76 #x0000000000000000))
(assert (= temp254_77 #x0000000000000002))
(assert (= temp254_78 temp254_77))
(assert (= temp254_79 (select ARGNAME_output_padding_NAMEEND_VAL temp254_78)))
(assert (= temp254_80 #x0000000000000000))
(assert (= temp254_81 #x0000000000000003))
(assert (= temp254_82 temp254_81))
(assert (= temp254_83 (select ARGNAME_output_padding_NAMEEND_VAL temp254_82)))
(assert (= temp254_84 #x0000000000000000))
(assert (= temp254_85 #x0000000000000004))
(assert (= temp254_86 temp254_85))
(assert (= temp254_87 (select ARGNAME_output_padding_NAMEEND_VAL temp254_86)))
(assert (= temp254_88 #x0000000000000000))
(assert (= temp254_89 #x0000000000000005))
(assert (= temp254_90 temp254_89))
(assert (= temp254_91 (select ARGNAME_output_padding_NAMEEND_VAL temp254_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp254_71 temp254_68)
             (bvslt temp254_75 temp254_72)
             (bvslt temp254_79 temp254_76)
             (bvslt temp254_83 temp254_80)
             (bvslt temp254_87 temp254_84)
             (bvslt temp254_91 temp254_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp254_92 #x0000000000000000))
(assert (= var1191725 temp254_92))
(assert (= temp254_93 #x0000000000000000))
(assert (= temp254_94 temp254_93))
(assert (= temp254_95 (select ARGNAME_stride_NAMEEND_VAL temp254_94)))
(assert (= temp254_96 #x0000000000000001))
(assert (= temp254_97 temp254_96))
(assert (= temp254_98 (select ARGNAME_stride_NAMEEND_VAL temp254_97)))
(assert (= temp254_99 #x0000000000000002))
(assert (= temp254_100 temp254_99))
(assert (= temp254_101 (select ARGNAME_stride_NAMEEND_VAL temp254_100)))
(assert (= temp254_102 #x0000000000000003))
(assert (= temp254_103 temp254_102))
(assert (= temp254_104 (select ARGNAME_stride_NAMEEND_VAL temp254_103)))
(assert (= temp254_105 #x0000000000000004))
(assert (= temp254_106 temp254_105))
(assert (= temp254_107 (select ARGNAME_stride_NAMEEND_VAL temp254_106)))
(assert (= temp254_108 #x0000000000000005))
(assert (= temp254_109 temp254_108))
(assert (= temp254_110 (select ARGNAME_stride_NAMEEND_VAL temp254_109)))
(assert (= temp254_111 #x0000000000000000))
(assert (= temp254_112 #x0000000000000000))
(assert (= temp254_113 temp254_112))
(assert (= temp254_114 (select ARGNAME_stride_NAMEEND_VAL temp254_113)))
(assert (= temp254_115 #x0000000000000000))
(assert (= temp254_116 #x0000000000000001))
(assert (= temp254_117 temp254_116))
(assert (= temp254_118 (select ARGNAME_stride_NAMEEND_VAL temp254_117)))
(assert (= temp254_119 #x0000000000000000))
(assert (= temp254_120 #x0000000000000002))
(assert (= temp254_121 temp254_120))
(assert (= temp254_122 (select ARGNAME_stride_NAMEEND_VAL temp254_121)))
(assert (= temp254_123 #x0000000000000000))
(assert (= temp254_124 #x0000000000000003))
(assert (= temp254_125 temp254_124))
(assert (= temp254_126 (select ARGNAME_stride_NAMEEND_VAL temp254_125)))
(assert (= temp254_127 #x0000000000000000))
(assert (= temp254_128 #x0000000000000004))
(assert (= temp254_129 temp254_128))
(assert (= temp254_130 (select ARGNAME_stride_NAMEEND_VAL temp254_129)))
(assert (= temp254_131 #x0000000000000000))
(assert (= temp254_132 #x0000000000000005))
(assert (= temp254_133 temp254_132))
(assert (= temp254_134 (select ARGNAME_stride_NAMEEND_VAL temp254_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp254_114 temp254_111)
             (bvsle temp254_118 temp254_115)
             (bvsle temp254_122 temp254_119)
             (bvsle temp254_126 temp254_123)
             (bvsle temp254_130 temp254_127)
             (bvsle temp254_134 temp254_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp254_135 #x0000000000000000))
(assert (= var1191735 temp254_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp254_136 #x0000000000000001))
(assert (= var1191747 temp254_136))
(assert (= temp254_137 #x0000000000000000))
(assert (= var1179826 temp254_137))
(assert (= temp254_138 #x0000000000000000))
(assert (= temp254_139 temp254_138))
(assert (= temp254_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp254_139)))
(assert (= temp254_141 #x0000000000000001))
(assert (= temp254_142 temp254_141))
(assert (= temp254_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp254_142)))
(assert (= temp254_144 #x0000000000000002))
(assert (= temp254_145 temp254_144))
(assert (= temp254_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp254_145)))
(assert (= temp254_147 #x0000000000000003))
(assert (= temp254_148 temp254_147))
(assert (= temp254_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp254_148)))
(assert (= temp254_150 #x0000000000000004))
(assert (= temp254_151 temp254_150))
(assert (= temp254_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp254_151)))
(assert (= temp254_153 #x0000000000000005))
(assert (= temp254_154 temp254_153))
(assert (= temp254_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp254_154)))
(assert (= temp254_157 var1179826))
(assert (= temp254_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp254_157)))
(assert (= temp254_156 temp254_158))
(assert (= var1191780
   (ite (bvslt temp254_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp254_159 #x0000000000000000))
(assert (= var1191780 temp254_159))
(assert (= temp254_160 #x0000000000000000))
(assert (= var1179826 temp254_160))
(assert (= temp254_162 var1179826))
(assert (= temp254_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp254_162)))
(assert (= temp254_161 temp254_163))
(assert (= var1191802 (bvsmod temp254_161 ARGNAME_groups_NAMEEND)))
(assert (= temp254_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp254_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp254_165 #x0000000000000001))
(assert (= var1191803 temp254_165))
(assert (= temp254_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp254_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp254_167 #x0000000000000001))
(assert (= var1191823 temp254_167))
(assert (= temp254_168 #x0000000000000001))
(assert (= var1180714 temp254_168))
(assert (= temp254_169 #x0000000000000000))
(assert (= temp254_170 temp254_169))
(assert (= temp254_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp254_170)))
(assert (= temp254_172 #x0000000000000001))
(assert (= temp254_173 temp254_172))
(assert (= temp254_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp254_173)))
(assert (= temp254_175 #x0000000000000002))
(assert (= temp254_176 temp254_175))
(assert (= temp254_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp254_176)))
(assert (= temp254_178 #x0000000000000003))
(assert (= temp254_179 temp254_178))
(assert (= temp254_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp254_179)))
(assert (= temp254_181 #x0000000000000004))
(assert (= temp254_182 temp254_181))
(assert (= temp254_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp254_182)))
(assert (= temp254_184 #x0000000000000005))
(assert (= temp254_185 temp254_184))
(assert (= temp254_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp254_185)))
(assert (= temp254_187 #x0000000000000000))
(assert (= temp254_188
   (ite (bvslt var1180714 temp254_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp254_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp254_188)))
(assert (= var1191831 temp254_189))
(assert (bvslt (ite (bvslt var1180714 temp254_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp254_190 #x0000000000000001))
(assert (= var1180714 temp254_190))
(assert (= temp254_192 var1180714))
(assert (= temp254_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp254_192)))
(assert (= temp254_191 temp254_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp254_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp254_194 #x0000000000000001))
(assert (= var1191836 temp254_194))
(assert (= temp254_195 #x0000000000000000))
(assert (= var1179826 temp254_195))
(assert (= temp254_197 var1179826))
(assert (= temp254_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp254_197)))
(assert (= temp254_196 temp254_198))
(assert (= temp254_199 #x0000000000000002))
(assert (= var1586025 temp254_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp254_200 #x0000000000000001))
(assert (= var1191993 temp254_200))
(assert (= temp254_201 #x0000000000000001))
(assert (= var2700303 temp254_201))
(assert (= temp254_202 #x0000000000000001))
(assert (= var2962447 temp254_202))
(assert (= temp254_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp254_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp254_204 #x0000000000000001))
(assert (= var211058 temp254_204))
(assert (= temp254_205 #x0000000000000001))
(assert (= var211188 temp254_205))
(assert (= var3879401 var211188))
(assert (= temp254_206 #x0000000000000000))
(assert (= var3866802 temp254_206))
(assert (= temp254_207 #x0000000000000000))
(assert (= temp254_208
   (ite (bvslt var3866802 temp254_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp254_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp254_208)))
(assert (= var3879420 temp254_209))
(assert (bvslt (ite (bvslt var3866802 temp254_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp254_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp254_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp254_211 #x0000000000000001))
(assert (= var3879421 temp254_211))
(assert (= temp254_212 #x0000000000000000))
(assert (= var4079423 temp254_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp254_213 #x0000000000000002))
(assert (= var4208259 temp254_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp254_214 #x0000000000000000))
(assert (= var4273820 temp254_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4796816 var211201))
(assert (= var211962 var210913))
(assert (= temp254_215 #x0000000000000000))
(assert (= var211963
   (ite (distinct var211962 temp254_215) #x0000000000000001 #x0000000000000000)))
(assert (= temp254_216 #x0000000000000001))
(assert (= var211058 temp254_216))
(model-add temp254_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp254_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp254_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp254_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





