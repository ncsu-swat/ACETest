(declare-fun temp1065_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp1065_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1065_3 () (_ BitVec 64))
(declare-fun temp1065_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1065_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp1065_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1065_7 () (_ BitVec 64))
(declare-fun temp1065_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1065_9 () (_ BitVec 64))
(declare-fun temp1065_10 () (_ BitVec 64))
(declare-fun temp1065_11 () (_ BitVec 64))
(declare-fun temp1065_12 () (_ BitVec 64))
(declare-fun temp1065_13 () (_ BitVec 64))
(declare-fun temp1065_14 () (_ BitVec 64))
(declare-fun temp1065_15 () (_ BitVec 64))
(declare-fun temp1065_16 () (_ BitVec 64))
(declare-fun temp1065_17 () (_ BitVec 64))
(declare-fun temp1065_18 () (_ BitVec 64))
(declare-fun temp1065_19 () (_ BitVec 64))
(declare-fun temp1065_20 () (_ BitVec 64))
(declare-fun temp1065_21 () (_ BitVec 64))
(declare-fun temp1065_22 () (_ BitVec 64))
(declare-fun temp1065_23 () (_ BitVec 64))
(declare-fun temp1065_24 () (_ BitVec 64))
(declare-fun temp1065_25 () (_ BitVec 64))
(declare-fun temp1065_26 () (_ BitVec 64))
(declare-fun temp1065_27 () (_ BitVec 64))
(declare-fun temp1065_28 () (_ BitVec 64))
(declare-fun temp1065_29 () (_ BitVec 64))
(declare-fun temp1065_30 () (_ BitVec 64))
(declare-fun temp1065_31 () (_ BitVec 64))
(declare-fun temp1065_32 () (_ BitVec 64))
(declare-fun temp1065_33 () (_ BitVec 64))
(declare-fun temp1065_34 () (_ BitVec 64))
(declare-fun temp1065_35 () (_ BitVec 64))
(declare-fun temp1065_36 () (_ BitVec 64))
(declare-fun temp1065_37 () (_ BitVec 64))
(declare-fun temp1065_38 () (_ BitVec 64))
(declare-fun temp1065_39 () (_ BitVec 64))
(declare-fun temp1065_40 () (_ BitVec 64))
(declare-fun temp1065_41 () (_ BitVec 64))
(declare-fun temp1065_42 () (_ BitVec 64))
(declare-fun temp1065_43 () (_ BitVec 64))
(declare-fun temp1065_44 () (_ BitVec 64))
(declare-fun temp1065_45 () (_ BitVec 64))
(declare-fun temp1065_46 () (_ BitVec 64))
(declare-fun temp1065_47 () (_ BitVec 64))
(declare-fun temp1065_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp1065_49 () (_ BitVec 64))
(declare-fun temp1065_50 () (_ BitVec 64))
(declare-fun temp1065_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1065_52 () (_ BitVec 64))
(declare-fun temp1065_53 () (_ BitVec 64))
(declare-fun temp1065_54 () (_ BitVec 64))
(declare-fun temp1065_55 () (_ BitVec 64))
(declare-fun temp1065_56 () (_ BitVec 64))
(declare-fun temp1065_57 () (_ BitVec 64))
(declare-fun temp1065_58 () (_ BitVec 64))
(declare-fun temp1065_59 () (_ BitVec 64))
(declare-fun temp1065_60 () (_ BitVec 64))
(declare-fun temp1065_61 () (_ BitVec 64))
(declare-fun temp1065_62 () (_ BitVec 64))
(declare-fun temp1065_63 () (_ BitVec 64))
(declare-fun temp1065_64 () (_ BitVec 64))
(declare-fun temp1065_65 () (_ BitVec 64))
(declare-fun temp1065_66 () (_ BitVec 64))
(declare-fun temp1065_67 () (_ BitVec 64))
(declare-fun temp1065_68 () (_ BitVec 64))
(declare-fun temp1065_69 () (_ BitVec 64))
(declare-fun temp1065_70 () (_ BitVec 64))
(declare-fun temp1065_71 () (_ BitVec 64))
(declare-fun temp1065_72 () (_ BitVec 64))
(declare-fun temp1065_73 () (_ BitVec 64))
(declare-fun temp1065_74 () (_ BitVec 64))
(declare-fun temp1065_75 () (_ BitVec 64))
(declare-fun temp1065_76 () (_ BitVec 64))
(declare-fun temp1065_77 () (_ BitVec 64))
(declare-fun temp1065_78 () (_ BitVec 64))
(declare-fun temp1065_79 () (_ BitVec 64))
(declare-fun temp1065_80 () (_ BitVec 64))
(declare-fun temp1065_81 () (_ BitVec 64))
(declare-fun temp1065_82 () (_ BitVec 64))
(declare-fun temp1065_83 () (_ BitVec 64))
(declare-fun temp1065_84 () (_ BitVec 64))
(declare-fun temp1065_85 () (_ BitVec 64))
(declare-fun temp1065_86 () (_ BitVec 64))
(declare-fun temp1065_87 () (_ BitVec 64))
(declare-fun temp1065_88 () (_ BitVec 64))
(declare-fun temp1065_89 () (_ BitVec 64))
(declare-fun temp1065_90 () (_ BitVec 64))
(declare-fun temp1065_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp1065_92 () (_ BitVec 64))
(declare-fun temp1065_93 () (_ BitVec 64))
(declare-fun temp1065_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1065_95 () (_ BitVec 64))
(declare-fun temp1065_96 () (_ BitVec 64))
(declare-fun temp1065_97 () (_ BitVec 64))
(declare-fun temp1065_98 () (_ BitVec 64))
(declare-fun temp1065_99 () (_ BitVec 64))
(declare-fun temp1065_100 () (_ BitVec 64))
(declare-fun temp1065_101 () (_ BitVec 64))
(declare-fun temp1065_102 () (_ BitVec 64))
(declare-fun temp1065_103 () (_ BitVec 64))
(declare-fun temp1065_104 () (_ BitVec 64))
(declare-fun temp1065_105 () (_ BitVec 64))
(declare-fun temp1065_106 () (_ BitVec 64))
(declare-fun temp1065_107 () (_ BitVec 64))
(declare-fun temp1065_108 () (_ BitVec 64))
(declare-fun temp1065_109 () (_ BitVec 64))
(declare-fun temp1065_110 () (_ BitVec 64))
(declare-fun temp1065_111 () (_ BitVec 64))
(declare-fun temp1065_112 () (_ BitVec 64))
(declare-fun temp1065_113 () (_ BitVec 64))
(declare-fun temp1065_114 () (_ BitVec 64))
(declare-fun temp1065_115 () (_ BitVec 64))
(declare-fun temp1065_116 () (_ BitVec 64))
(declare-fun temp1065_117 () (_ BitVec 64))
(declare-fun temp1065_118 () (_ BitVec 64))
(declare-fun temp1065_119 () (_ BitVec 64))
(declare-fun temp1065_120 () (_ BitVec 64))
(declare-fun temp1065_121 () (_ BitVec 64))
(declare-fun temp1065_122 () (_ BitVec 64))
(declare-fun temp1065_123 () (_ BitVec 64))
(declare-fun temp1065_124 () (_ BitVec 64))
(declare-fun temp1065_125 () (_ BitVec 64))
(declare-fun temp1065_126 () (_ BitVec 64))
(declare-fun temp1065_127 () (_ BitVec 64))
(declare-fun temp1065_128 () (_ BitVec 64))
(declare-fun temp1065_129 () (_ BitVec 64))
(declare-fun temp1065_130 () (_ BitVec 64))
(declare-fun temp1065_131 () (_ BitVec 64))
(declare-fun temp1065_132 () (_ BitVec 64))
(declare-fun temp1065_133 () (_ BitVec 64))
(declare-fun temp1065_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp1065_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp1065_136 () (_ BitVec 64))
(declare-fun temp1065_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp1065_138 () (_ BitVec 64))
(declare-fun temp1065_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1065_140 () (_ BitVec 64))
(declare-fun temp1065_141 () (_ BitVec 64))
(declare-fun temp1065_142 () (_ BitVec 64))
(declare-fun temp1065_143 () (_ BitVec 64))
(declare-fun temp1065_144 () (_ BitVec 64))
(declare-fun temp1065_145 () (_ BitVec 64))
(declare-fun temp1065_146 () (_ BitVec 64))
(declare-fun temp1065_147 () (_ BitVec 64))
(declare-fun temp1065_148 () (_ BitVec 64))
(declare-fun temp1065_149 () (_ BitVec 64))
(declare-fun temp1065_150 () (_ BitVec 64))
(declare-fun temp1065_151 () (_ BitVec 64))
(declare-fun temp1065_152 () (_ BitVec 64))
(declare-fun temp1065_153 () (_ BitVec 64))
(declare-fun temp1065_154 () (_ BitVec 64))
(declare-fun temp1065_155 () (_ BitVec 64))
(declare-fun temp1065_157 () (_ BitVec 64))
(declare-fun temp1065_158 () (_ BitVec 64))
(declare-fun temp1065_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp1065_159 () (_ BitVec 64))
(declare-fun temp1065_160 () (_ BitVec 64))
(declare-fun temp1065_162 () (_ BitVec 64))
(declare-fun temp1065_163 () (_ BitVec 64))
(declare-fun temp1065_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp1065_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp1065_165 () (_ BitVec 64))
(declare-fun temp1065_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp1065_167 () (_ BitVec 64))
(declare-fun temp1065_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp1065_169 () (_ BitVec 64))
(declare-fun temp1065_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1065_171 () (_ BitVec 64))
(declare-fun temp1065_172 () (_ BitVec 64))
(declare-fun temp1065_173 () (_ BitVec 64))
(declare-fun temp1065_174 () (_ BitVec 64))
(declare-fun temp1065_175 () (_ BitVec 64))
(declare-fun temp1065_176 () (_ BitVec 64))
(declare-fun temp1065_177 () (_ BitVec 64))
(declare-fun temp1065_178 () (_ BitVec 64))
(declare-fun temp1065_179 () (_ BitVec 64))
(declare-fun temp1065_180 () (_ BitVec 64))
(declare-fun temp1065_181 () (_ BitVec 64))
(declare-fun temp1065_182 () (_ BitVec 64))
(declare-fun temp1065_183 () (_ BitVec 64))
(declare-fun temp1065_184 () (_ BitVec 64))
(declare-fun temp1065_185 () (_ BitVec 64))
(declare-fun temp1065_186 () (_ BitVec 64))
(declare-fun temp1065_187 () (_ BitVec 64))
(declare-fun temp1065_188 () (_ BitVec 64))
(declare-fun temp1065_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp1065_190 () (_ BitVec 64))
(declare-fun temp1065_192 () (_ BitVec 64))
(declare-fun temp1065_193 () (_ BitVec 64))
(declare-fun temp1065_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp1065_194 () (_ BitVec 64))
(declare-fun temp1065_195 () (_ BitVec 64))
(declare-fun temp1065_197 () (_ BitVec 64))
(declare-fun temp1065_198 () (_ BitVec 64))
(declare-fun temp1065_196 () (_ BitVec 64))
(declare-fun temp1065_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp1065_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp1065_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp1065_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp1065_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp1065_204 () (_ BitVec 64))
(declare-fun temp1065_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp1065_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp1065_207 () (_ BitVec 64))
(declare-fun temp1065_208 () (_ BitVec 64))
(declare-fun temp1065_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp1065_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp1065_211 () (_ BitVec 64))
(declare-fun temp1065_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp1065_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp1065_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4469136 () (_ BitVec 64))
(declare-fun var4731280 () (_ BitVec 64))
(declare-fun temp1065_215 () (_ BitVec 64))
(declare-fun var212414 () (_ BitVec 64))
(declare-fun temp1065_216 () (_ BitVec 64))
(declare-fun temp1065_217 () (_ BitVec 64))
(declare-fun var5060227 () (_ BitVec 64))
(declare-fun var5060229 () (_ BitVec 64))
(declare-fun var5125772 () (_ BitVec 64))
(declare-fun var5125773 () (_ BitVec 64))
(declare-fun temp1065_218 () (_ BitVec 64))
(assert (= temp1065_1 #x0000000000000001))
(assert (= var77203 temp1065_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp1065_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp1065_2)))
(assert (= temp1065_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1065_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1065_4 #x0000000000000000))
(assert (= var210941 temp1065_4))
(assert (= temp1065_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp1065_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1065_6 #x0000000000000000))
(assert (= var210986 temp1065_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp1065_7 #x0000000000000000))
(assert (= temp1065_8 temp1065_7))
(assert (= temp1065_9 (select ARGNAME_padding_NAMEEND_VAL temp1065_8)))
(assert (= temp1065_10 #x0000000000000001))
(assert (= temp1065_11 temp1065_10))
(assert (= temp1065_12 (select ARGNAME_padding_NAMEEND_VAL temp1065_11)))
(assert (= temp1065_13 #x0000000000000002))
(assert (= temp1065_14 temp1065_13))
(assert (= temp1065_15 (select ARGNAME_padding_NAMEEND_VAL temp1065_14)))
(assert (= temp1065_16 #x0000000000000003))
(assert (= temp1065_17 temp1065_16))
(assert (= temp1065_18 (select ARGNAME_padding_NAMEEND_VAL temp1065_17)))
(assert (= temp1065_19 #x0000000000000004))
(assert (= temp1065_20 temp1065_19))
(assert (= temp1065_21 (select ARGNAME_padding_NAMEEND_VAL temp1065_20)))
(assert (= temp1065_22 #x0000000000000005))
(assert (= temp1065_23 temp1065_22))
(assert (= temp1065_24 (select ARGNAME_padding_NAMEEND_VAL temp1065_23)))
(assert (= temp1065_25 #x0000000000000000))
(assert (= temp1065_26 #x0000000000000000))
(assert (= temp1065_27 temp1065_26))
(assert (= temp1065_28 (select ARGNAME_padding_NAMEEND_VAL temp1065_27)))
(assert (= temp1065_29 #x0000000000000000))
(assert (= temp1065_30 #x0000000000000001))
(assert (= temp1065_31 temp1065_30))
(assert (= temp1065_32 (select ARGNAME_padding_NAMEEND_VAL temp1065_31)))
(assert (= temp1065_33 #x0000000000000000))
(assert (= temp1065_34 #x0000000000000002))
(assert (= temp1065_35 temp1065_34))
(assert (= temp1065_36 (select ARGNAME_padding_NAMEEND_VAL temp1065_35)))
(assert (= temp1065_37 #x0000000000000000))
(assert (= temp1065_38 #x0000000000000003))
(assert (= temp1065_39 temp1065_38))
(assert (= temp1065_40 (select ARGNAME_padding_NAMEEND_VAL temp1065_39)))
(assert (= temp1065_41 #x0000000000000000))
(assert (= temp1065_42 #x0000000000000004))
(assert (= temp1065_43 temp1065_42))
(assert (= temp1065_44 (select ARGNAME_padding_NAMEEND_VAL temp1065_43)))
(assert (= temp1065_45 #x0000000000000000))
(assert (= temp1065_46 #x0000000000000005))
(assert (= temp1065_47 temp1065_46))
(assert (= temp1065_48 (select ARGNAME_padding_NAMEEND_VAL temp1065_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp1065_28 temp1065_25)
             (bvslt temp1065_32 temp1065_29)
             (bvslt temp1065_36 temp1065_33)
             (bvslt temp1065_40 temp1065_37)
             (bvslt temp1065_44 temp1065_41)
             (bvslt temp1065_48 temp1065_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1065_49 #x0000000000000000))
(assert (= var1191714 temp1065_49))
(assert (= temp1065_50 #x0000000000000000))
(assert (= temp1065_51 temp1065_50))
(assert (= temp1065_52 (select ARGNAME_output_padding_NAMEEND_VAL temp1065_51)))
(assert (= temp1065_53 #x0000000000000001))
(assert (= temp1065_54 temp1065_53))
(assert (= temp1065_55 (select ARGNAME_output_padding_NAMEEND_VAL temp1065_54)))
(assert (= temp1065_56 #x0000000000000002))
(assert (= temp1065_57 temp1065_56))
(assert (= temp1065_58 (select ARGNAME_output_padding_NAMEEND_VAL temp1065_57)))
(assert (= temp1065_59 #x0000000000000003))
(assert (= temp1065_60 temp1065_59))
(assert (= temp1065_61 (select ARGNAME_output_padding_NAMEEND_VAL temp1065_60)))
(assert (= temp1065_62 #x0000000000000004))
(assert (= temp1065_63 temp1065_62))
(assert (= temp1065_64 (select ARGNAME_output_padding_NAMEEND_VAL temp1065_63)))
(assert (= temp1065_65 #x0000000000000005))
(assert (= temp1065_66 temp1065_65))
(assert (= temp1065_67 (select ARGNAME_output_padding_NAMEEND_VAL temp1065_66)))
(assert (= temp1065_68 #x0000000000000000))
(assert (= temp1065_69 #x0000000000000000))
(assert (= temp1065_70 temp1065_69))
(assert (= temp1065_71 (select ARGNAME_output_padding_NAMEEND_VAL temp1065_70)))
(assert (= temp1065_72 #x0000000000000000))
(assert (= temp1065_73 #x0000000000000001))
(assert (= temp1065_74 temp1065_73))
(assert (= temp1065_75 (select ARGNAME_output_padding_NAMEEND_VAL temp1065_74)))
(assert (= temp1065_76 #x0000000000000000))
(assert (= temp1065_77 #x0000000000000002))
(assert (= temp1065_78 temp1065_77))
(assert (= temp1065_79 (select ARGNAME_output_padding_NAMEEND_VAL temp1065_78)))
(assert (= temp1065_80 #x0000000000000000))
(assert (= temp1065_81 #x0000000000000003))
(assert (= temp1065_82 temp1065_81))
(assert (= temp1065_83 (select ARGNAME_output_padding_NAMEEND_VAL temp1065_82)))
(assert (= temp1065_84 #x0000000000000000))
(assert (= temp1065_85 #x0000000000000004))
(assert (= temp1065_86 temp1065_85))
(assert (= temp1065_87 (select ARGNAME_output_padding_NAMEEND_VAL temp1065_86)))
(assert (= temp1065_88 #x0000000000000000))
(assert (= temp1065_89 #x0000000000000005))
(assert (= temp1065_90 temp1065_89))
(assert (= temp1065_91 (select ARGNAME_output_padding_NAMEEND_VAL temp1065_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp1065_71 temp1065_68)
             (bvslt temp1065_75 temp1065_72)
             (bvslt temp1065_79 temp1065_76)
             (bvslt temp1065_83 temp1065_80)
             (bvslt temp1065_87 temp1065_84)
             (bvslt temp1065_91 temp1065_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1065_92 #x0000000000000000))
(assert (= var1191725 temp1065_92))
(assert (= temp1065_93 #x0000000000000000))
(assert (= temp1065_94 temp1065_93))
(assert (= temp1065_95 (select ARGNAME_stride_NAMEEND_VAL temp1065_94)))
(assert (= temp1065_96 #x0000000000000001))
(assert (= temp1065_97 temp1065_96))
(assert (= temp1065_98 (select ARGNAME_stride_NAMEEND_VAL temp1065_97)))
(assert (= temp1065_99 #x0000000000000002))
(assert (= temp1065_100 temp1065_99))
(assert (= temp1065_101 (select ARGNAME_stride_NAMEEND_VAL temp1065_100)))
(assert (= temp1065_102 #x0000000000000003))
(assert (= temp1065_103 temp1065_102))
(assert (= temp1065_104 (select ARGNAME_stride_NAMEEND_VAL temp1065_103)))
(assert (= temp1065_105 #x0000000000000004))
(assert (= temp1065_106 temp1065_105))
(assert (= temp1065_107 (select ARGNAME_stride_NAMEEND_VAL temp1065_106)))
(assert (= temp1065_108 #x0000000000000005))
(assert (= temp1065_109 temp1065_108))
(assert (= temp1065_110 (select ARGNAME_stride_NAMEEND_VAL temp1065_109)))
(assert (= temp1065_111 #x0000000000000000))
(assert (= temp1065_112 #x0000000000000000))
(assert (= temp1065_113 temp1065_112))
(assert (= temp1065_114 (select ARGNAME_stride_NAMEEND_VAL temp1065_113)))
(assert (= temp1065_115 #x0000000000000000))
(assert (= temp1065_116 #x0000000000000001))
(assert (= temp1065_117 temp1065_116))
(assert (= temp1065_118 (select ARGNAME_stride_NAMEEND_VAL temp1065_117)))
(assert (= temp1065_119 #x0000000000000000))
(assert (= temp1065_120 #x0000000000000002))
(assert (= temp1065_121 temp1065_120))
(assert (= temp1065_122 (select ARGNAME_stride_NAMEEND_VAL temp1065_121)))
(assert (= temp1065_123 #x0000000000000000))
(assert (= temp1065_124 #x0000000000000003))
(assert (= temp1065_125 temp1065_124))
(assert (= temp1065_126 (select ARGNAME_stride_NAMEEND_VAL temp1065_125)))
(assert (= temp1065_127 #x0000000000000000))
(assert (= temp1065_128 #x0000000000000004))
(assert (= temp1065_129 temp1065_128))
(assert (= temp1065_130 (select ARGNAME_stride_NAMEEND_VAL temp1065_129)))
(assert (= temp1065_131 #x0000000000000000))
(assert (= temp1065_132 #x0000000000000005))
(assert (= temp1065_133 temp1065_132))
(assert (= temp1065_134 (select ARGNAME_stride_NAMEEND_VAL temp1065_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp1065_114 temp1065_111)
             (bvsle temp1065_118 temp1065_115)
             (bvsle temp1065_122 temp1065_119)
             (bvsle temp1065_126 temp1065_123)
             (bvsle temp1065_130 temp1065_127)
             (bvsle temp1065_134 temp1065_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1065_135 #x0000000000000000))
(assert (= var1191735 temp1065_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1065_136 #x0000000000000001))
(assert (= var1191747 temp1065_136))
(assert (= temp1065_137 #x0000000000000000))
(assert (= var1179826 temp1065_137))
(assert (= temp1065_138 #x0000000000000000))
(assert (= temp1065_139 temp1065_138))
(assert (= temp1065_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1065_139)))
(assert (= temp1065_141 #x0000000000000001))
(assert (= temp1065_142 temp1065_141))
(assert (= temp1065_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1065_142)))
(assert (= temp1065_144 #x0000000000000002))
(assert (= temp1065_145 temp1065_144))
(assert (= temp1065_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1065_145)))
(assert (= temp1065_147 #x0000000000000003))
(assert (= temp1065_148 temp1065_147))
(assert (= temp1065_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1065_148)))
(assert (= temp1065_150 #x0000000000000004))
(assert (= temp1065_151 temp1065_150))
(assert (= temp1065_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1065_151)))
(assert (= temp1065_153 #x0000000000000005))
(assert (= temp1065_154 temp1065_153))
(assert (= temp1065_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1065_154)))
(assert (= temp1065_157 var1179826))
(assert (= temp1065_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1065_157)))
(assert (= temp1065_156 temp1065_158))
(assert (= var1191780
   (ite (bvslt temp1065_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1065_159 #x0000000000000000))
(assert (= var1191780 temp1065_159))
(assert (= temp1065_160 #x0000000000000000))
(assert (= var1179826 temp1065_160))
(assert (= temp1065_162 var1179826))
(assert (= temp1065_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1065_162)))
(assert (= temp1065_161 temp1065_163))
(assert (= var1191802 (bvsmod temp1065_161 ARGNAME_groups_NAMEEND)))
(assert (= temp1065_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp1065_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp1065_165 #x0000000000000001))
(assert (= var1191803 temp1065_165))
(assert (= temp1065_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp1065_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1065_167 #x0000000000000001))
(assert (= var1191823 temp1065_167))
(assert (= temp1065_168 #x0000000000000001))
(assert (= var1180714 temp1065_168))
(assert (= temp1065_169 #x0000000000000000))
(assert (= temp1065_170 temp1065_169))
(assert (= temp1065_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp1065_170)))
(assert (= temp1065_172 #x0000000000000001))
(assert (= temp1065_173 temp1065_172))
(assert (= temp1065_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp1065_173)))
(assert (= temp1065_175 #x0000000000000002))
(assert (= temp1065_176 temp1065_175))
(assert (= temp1065_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp1065_176)))
(assert (= temp1065_178 #x0000000000000003))
(assert (= temp1065_179 temp1065_178))
(assert (= temp1065_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp1065_179)))
(assert (= temp1065_181 #x0000000000000004))
(assert (= temp1065_182 temp1065_181))
(assert (= temp1065_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp1065_182)))
(assert (= temp1065_184 #x0000000000000005))
(assert (= temp1065_185 temp1065_184))
(assert (= temp1065_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp1065_185)))
(assert (= temp1065_187 #x0000000000000000))
(assert (= temp1065_188
   (ite (bvslt var1180714 temp1065_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp1065_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp1065_188)))
(assert (= var1191831 temp1065_189))
(assert (bvslt (ite (bvslt var1180714 temp1065_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1065_190 #x0000000000000001))
(assert (= var1180714 temp1065_190))
(assert (= temp1065_192 var1180714))
(assert (= temp1065_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1065_192)))
(assert (= temp1065_191 temp1065_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp1065_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp1065_194 #x0000000000000001))
(assert (= var1191836 temp1065_194))
(assert (= temp1065_195 #x0000000000000000))
(assert (= var1179826 temp1065_195))
(assert (= temp1065_197 var1179826))
(assert (= temp1065_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1065_197)))
(assert (= temp1065_196 temp1065_198))
(assert (= temp1065_199 #x0000000000000002))
(assert (= var1586025 temp1065_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp1065_200 #x0000000000000001))
(assert (= var1191993 temp1065_200))
(assert (= temp1065_201 #x0000000000000001))
(assert (= var2700303 temp1065_201))
(assert (= temp1065_202 #x0000000000000001))
(assert (= var2962447 temp1065_202))
(assert (= temp1065_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1065_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1065_204 #x0000000000000001))
(assert (= var211058 temp1065_204))
(assert (= temp1065_205 #x0000000000000001))
(assert (= var211188 temp1065_205))
(assert (= var3879401 var211188))
(assert (= temp1065_206 #x0000000000000000))
(assert (= var3866802 temp1065_206))
(assert (= temp1065_207 #x0000000000000000))
(assert (= temp1065_208
   (ite (bvslt var3866802 temp1065_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp1065_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp1065_208)))
(assert (= var3879420 temp1065_209))
(assert (bvslt (ite (bvslt var3866802 temp1065_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1065_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp1065_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp1065_211 #x0000000000000001))
(assert (= var3879421 temp1065_211))
(assert (= temp1065_212 #x0000000000000000))
(assert (= var4079423 temp1065_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp1065_213 #x0000000000000002))
(assert (= var4208259 temp1065_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1065_214 #x0000000000000000))
(assert (= var4273820 temp1065_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4469136 var211201))
(assert (= var4731280 var211201))
(assert (= temp1065_215 #x0000000000000001))
(assert (= var212414
   (ite (= ARGNAME_groups_NAMEEND temp1065_215)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1065_216 #x0000000000000001))
(assert (= var212414 temp1065_216))
(assert (= temp1065_217 #x0000000000000002))
(assert (= var5060227 temp1065_217))
(assert (= var5060229 (bvsub ARGNAME_weight_NAMEEND_DIM var5060227)))
(assert (= var5125772 var5060227))
(assert (= var5125773 var5060229))
(assert (= temp1065_218 #x0000000000000001))
(assert (= var211058 temp1065_218))
(model-add temp1065_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp1065_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1065_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp1065_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





