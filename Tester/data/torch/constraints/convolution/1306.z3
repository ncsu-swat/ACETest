(declare-fun temp10472_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10472_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10472_3 () (_ BitVec 64))
(declare-fun temp10472_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10472_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10472_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10472_7 () (_ BitVec 64))
(declare-fun temp10472_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10472_9 () (_ BitVec 64))
(declare-fun temp10472_10 () (_ BitVec 64))
(declare-fun temp10472_11 () (_ BitVec 64))
(declare-fun temp10472_12 () (_ BitVec 64))
(declare-fun temp10472_13 () (_ BitVec 64))
(declare-fun temp10472_14 () (_ BitVec 64))
(declare-fun temp10472_15 () (_ BitVec 64))
(declare-fun temp10472_16 () (_ BitVec 64))
(declare-fun temp10472_17 () (_ BitVec 64))
(declare-fun temp10472_18 () (_ BitVec 64))
(declare-fun temp10472_19 () (_ BitVec 64))
(declare-fun temp10472_20 () (_ BitVec 64))
(declare-fun temp10472_21 () (_ BitVec 64))
(declare-fun temp10472_22 () (_ BitVec 64))
(declare-fun temp10472_23 () (_ BitVec 64))
(declare-fun temp10472_24 () (_ BitVec 64))
(declare-fun temp10472_25 () (_ BitVec 64))
(declare-fun temp10472_26 () (_ BitVec 64))
(declare-fun temp10472_27 () (_ BitVec 64))
(declare-fun temp10472_28 () (_ BitVec 64))
(declare-fun temp10472_29 () (_ BitVec 64))
(declare-fun temp10472_30 () (_ BitVec 64))
(declare-fun temp10472_31 () (_ BitVec 64))
(declare-fun temp10472_32 () (_ BitVec 64))
(declare-fun temp10472_33 () (_ BitVec 64))
(declare-fun temp10472_34 () (_ BitVec 64))
(declare-fun temp10472_35 () (_ BitVec 64))
(declare-fun temp10472_36 () (_ BitVec 64))
(declare-fun temp10472_37 () (_ BitVec 64))
(declare-fun temp10472_38 () (_ BitVec 64))
(declare-fun temp10472_39 () (_ BitVec 64))
(declare-fun temp10472_40 () (_ BitVec 64))
(declare-fun temp10472_41 () (_ BitVec 64))
(declare-fun temp10472_42 () (_ BitVec 64))
(declare-fun temp10472_43 () (_ BitVec 64))
(declare-fun temp10472_44 () (_ BitVec 64))
(declare-fun temp10472_45 () (_ BitVec 64))
(declare-fun temp10472_46 () (_ BitVec 64))
(declare-fun temp10472_47 () (_ BitVec 64))
(declare-fun temp10472_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10472_49 () (_ BitVec 64))
(declare-fun temp10472_50 () (_ BitVec 64))
(declare-fun temp10472_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10472_52 () (_ BitVec 64))
(declare-fun temp10472_53 () (_ BitVec 64))
(declare-fun temp10472_54 () (_ BitVec 64))
(declare-fun temp10472_55 () (_ BitVec 64))
(declare-fun temp10472_56 () (_ BitVec 64))
(declare-fun temp10472_57 () (_ BitVec 64))
(declare-fun temp10472_58 () (_ BitVec 64))
(declare-fun temp10472_59 () (_ BitVec 64))
(declare-fun temp10472_60 () (_ BitVec 64))
(declare-fun temp10472_61 () (_ BitVec 64))
(declare-fun temp10472_62 () (_ BitVec 64))
(declare-fun temp10472_63 () (_ BitVec 64))
(declare-fun temp10472_64 () (_ BitVec 64))
(declare-fun temp10472_65 () (_ BitVec 64))
(declare-fun temp10472_66 () (_ BitVec 64))
(declare-fun temp10472_67 () (_ BitVec 64))
(declare-fun temp10472_68 () (_ BitVec 64))
(declare-fun temp10472_69 () (_ BitVec 64))
(declare-fun temp10472_70 () (_ BitVec 64))
(declare-fun temp10472_71 () (_ BitVec 64))
(declare-fun temp10472_72 () (_ BitVec 64))
(declare-fun temp10472_73 () (_ BitVec 64))
(declare-fun temp10472_74 () (_ BitVec 64))
(declare-fun temp10472_75 () (_ BitVec 64))
(declare-fun temp10472_76 () (_ BitVec 64))
(declare-fun temp10472_77 () (_ BitVec 64))
(declare-fun temp10472_78 () (_ BitVec 64))
(declare-fun temp10472_79 () (_ BitVec 64))
(declare-fun temp10472_80 () (_ BitVec 64))
(declare-fun temp10472_81 () (_ BitVec 64))
(declare-fun temp10472_82 () (_ BitVec 64))
(declare-fun temp10472_83 () (_ BitVec 64))
(declare-fun temp10472_84 () (_ BitVec 64))
(declare-fun temp10472_85 () (_ BitVec 64))
(declare-fun temp10472_86 () (_ BitVec 64))
(declare-fun temp10472_87 () (_ BitVec 64))
(declare-fun temp10472_88 () (_ BitVec 64))
(declare-fun temp10472_89 () (_ BitVec 64))
(declare-fun temp10472_90 () (_ BitVec 64))
(declare-fun temp10472_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10472_92 () (_ BitVec 64))
(declare-fun temp10472_93 () (_ BitVec 64))
(declare-fun temp10472_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10472_95 () (_ BitVec 64))
(declare-fun temp10472_96 () (_ BitVec 64))
(declare-fun temp10472_97 () (_ BitVec 64))
(declare-fun temp10472_98 () (_ BitVec 64))
(declare-fun temp10472_99 () (_ BitVec 64))
(declare-fun temp10472_100 () (_ BitVec 64))
(declare-fun temp10472_101 () (_ BitVec 64))
(declare-fun temp10472_102 () (_ BitVec 64))
(declare-fun temp10472_103 () (_ BitVec 64))
(declare-fun temp10472_104 () (_ BitVec 64))
(declare-fun temp10472_105 () (_ BitVec 64))
(declare-fun temp10472_106 () (_ BitVec 64))
(declare-fun temp10472_107 () (_ BitVec 64))
(declare-fun temp10472_108 () (_ BitVec 64))
(declare-fun temp10472_109 () (_ BitVec 64))
(declare-fun temp10472_110 () (_ BitVec 64))
(declare-fun temp10472_111 () (_ BitVec 64))
(declare-fun temp10472_112 () (_ BitVec 64))
(declare-fun temp10472_113 () (_ BitVec 64))
(declare-fun temp10472_114 () (_ BitVec 64))
(declare-fun temp10472_115 () (_ BitVec 64))
(declare-fun temp10472_116 () (_ BitVec 64))
(declare-fun temp10472_117 () (_ BitVec 64))
(declare-fun temp10472_118 () (_ BitVec 64))
(declare-fun temp10472_119 () (_ BitVec 64))
(declare-fun temp10472_120 () (_ BitVec 64))
(declare-fun temp10472_121 () (_ BitVec 64))
(declare-fun temp10472_122 () (_ BitVec 64))
(declare-fun temp10472_123 () (_ BitVec 64))
(declare-fun temp10472_124 () (_ BitVec 64))
(declare-fun temp10472_125 () (_ BitVec 64))
(declare-fun temp10472_126 () (_ BitVec 64))
(declare-fun temp10472_127 () (_ BitVec 64))
(declare-fun temp10472_128 () (_ BitVec 64))
(declare-fun temp10472_129 () (_ BitVec 64))
(declare-fun temp10472_130 () (_ BitVec 64))
(declare-fun temp10472_131 () (_ BitVec 64))
(declare-fun temp10472_132 () (_ BitVec 64))
(declare-fun temp10472_133 () (_ BitVec 64))
(declare-fun temp10472_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10472_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10472_136 () (_ BitVec 64))
(declare-fun temp10472_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10472_138 () (_ BitVec 64))
(declare-fun temp10472_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10472_140 () (_ BitVec 64))
(declare-fun temp10472_141 () (_ BitVec 64))
(declare-fun temp10472_142 () (_ BitVec 64))
(declare-fun temp10472_143 () (_ BitVec 64))
(declare-fun temp10472_144 () (_ BitVec 64))
(declare-fun temp10472_145 () (_ BitVec 64))
(declare-fun temp10472_146 () (_ BitVec 64))
(declare-fun temp10472_147 () (_ BitVec 64))
(declare-fun temp10472_148 () (_ BitVec 64))
(declare-fun temp10472_149 () (_ BitVec 64))
(declare-fun temp10472_150 () (_ BitVec 64))
(declare-fun temp10472_151 () (_ BitVec 64))
(declare-fun temp10472_152 () (_ BitVec 64))
(declare-fun temp10472_153 () (_ BitVec 64))
(declare-fun temp10472_154 () (_ BitVec 64))
(declare-fun temp10472_155 () (_ BitVec 64))
(declare-fun temp10472_157 () (_ BitVec 64))
(declare-fun temp10472_158 () (_ BitVec 64))
(declare-fun temp10472_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10472_159 () (_ BitVec 64))
(declare-fun temp10472_160 () (_ BitVec 64))
(declare-fun temp10472_162 () (_ BitVec 64))
(declare-fun temp10472_163 () (_ BitVec 64))
(declare-fun temp10472_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10472_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10472_165 () (_ BitVec 64))
(declare-fun temp10472_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10472_167 () (_ BitVec 64))
(declare-fun temp10472_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10472_169 () (_ BitVec 64))
(declare-fun temp10472_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10472_171 () (_ BitVec 64))
(declare-fun temp10472_172 () (_ BitVec 64))
(declare-fun temp10472_173 () (_ BitVec 64))
(declare-fun temp10472_174 () (_ BitVec 64))
(declare-fun temp10472_175 () (_ BitVec 64))
(declare-fun temp10472_176 () (_ BitVec 64))
(declare-fun temp10472_177 () (_ BitVec 64))
(declare-fun temp10472_178 () (_ BitVec 64))
(declare-fun temp10472_179 () (_ BitVec 64))
(declare-fun temp10472_180 () (_ BitVec 64))
(declare-fun temp10472_181 () (_ BitVec 64))
(declare-fun temp10472_182 () (_ BitVec 64))
(declare-fun temp10472_183 () (_ BitVec 64))
(declare-fun temp10472_184 () (_ BitVec 64))
(declare-fun temp10472_185 () (_ BitVec 64))
(declare-fun temp10472_186 () (_ BitVec 64))
(declare-fun temp10472_187 () (_ BitVec 64))
(declare-fun temp10472_188 () (_ BitVec 64))
(declare-fun temp10472_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10472_190 () (_ BitVec 64))
(declare-fun temp10472_192 () (_ BitVec 64))
(declare-fun temp10472_193 () (_ BitVec 64))
(declare-fun temp10472_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10472_194 () (_ BitVec 64))
(declare-fun temp10472_195 () (_ BitVec 64))
(declare-fun temp10472_197 () (_ BitVec 64))
(declare-fun temp10472_198 () (_ BitVec 64))
(declare-fun temp10472_196 () (_ BitVec 64))
(declare-fun temp10472_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10472_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10472_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10472_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10472_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10472_204 () (_ BitVec 64))
(declare-fun temp10472_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10472_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10472_207 () (_ BitVec 64))
(declare-fun temp10472_208 () (_ BitVec 64))
(declare-fun temp10472_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10472_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10472_211 () (_ BitVec 64))
(declare-fun temp10472_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10472_213 () (_ BitVec 64))
(declare-fun temp10472_214 () (_ BitVec 64))
(declare-fun temp10472_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10472_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10472_217 () (_ BitVec 64))
(declare-fun temp10472_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10472_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10472_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4469136 () (_ BitVec 64))
(declare-fun var4731280 () (_ BitVec 64))
(declare-fun temp10472_221 () (_ BitVec 64))
(declare-fun var212414 () (_ BitVec 64))
(declare-fun temp10472_222 () (_ BitVec 64))
(declare-fun temp10472_223 () (_ BitVec 64))
(declare-fun var5060227 () (_ BitVec 64))
(declare-fun var5125772 () (_ BitVec 64))
(declare-fun temp10472_224 () (_ BitVec 64))
(assert (= temp10472_1 #x0000000000000001))
(assert (= var77203 temp10472_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10472_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10472_2)))
(assert (= temp10472_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10472_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10472_4 #x0000000000000000))
(assert (= var210941 temp10472_4))
(assert (= temp10472_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10472_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10472_6 #x0000000000000000))
(assert (= var210986 temp10472_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10472_7 #x0000000000000000))
(assert (= temp10472_8 temp10472_7))
(assert (= temp10472_9 (select ARGNAME_padding_NAMEEND_VAL temp10472_8)))
(assert (= temp10472_10 #x0000000000000001))
(assert (= temp10472_11 temp10472_10))
(assert (= temp10472_12 (select ARGNAME_padding_NAMEEND_VAL temp10472_11)))
(assert (= temp10472_13 #x0000000000000002))
(assert (= temp10472_14 temp10472_13))
(assert (= temp10472_15 (select ARGNAME_padding_NAMEEND_VAL temp10472_14)))
(assert (= temp10472_16 #x0000000000000003))
(assert (= temp10472_17 temp10472_16))
(assert (= temp10472_18 (select ARGNAME_padding_NAMEEND_VAL temp10472_17)))
(assert (= temp10472_19 #x0000000000000004))
(assert (= temp10472_20 temp10472_19))
(assert (= temp10472_21 (select ARGNAME_padding_NAMEEND_VAL temp10472_20)))
(assert (= temp10472_22 #x0000000000000005))
(assert (= temp10472_23 temp10472_22))
(assert (= temp10472_24 (select ARGNAME_padding_NAMEEND_VAL temp10472_23)))
(assert (= temp10472_25 #x0000000000000000))
(assert (= temp10472_26 #x0000000000000000))
(assert (= temp10472_27 temp10472_26))
(assert (= temp10472_28 (select ARGNAME_padding_NAMEEND_VAL temp10472_27)))
(assert (= temp10472_29 #x0000000000000000))
(assert (= temp10472_30 #x0000000000000001))
(assert (= temp10472_31 temp10472_30))
(assert (= temp10472_32 (select ARGNAME_padding_NAMEEND_VAL temp10472_31)))
(assert (= temp10472_33 #x0000000000000000))
(assert (= temp10472_34 #x0000000000000002))
(assert (= temp10472_35 temp10472_34))
(assert (= temp10472_36 (select ARGNAME_padding_NAMEEND_VAL temp10472_35)))
(assert (= temp10472_37 #x0000000000000000))
(assert (= temp10472_38 #x0000000000000003))
(assert (= temp10472_39 temp10472_38))
(assert (= temp10472_40 (select ARGNAME_padding_NAMEEND_VAL temp10472_39)))
(assert (= temp10472_41 #x0000000000000000))
(assert (= temp10472_42 #x0000000000000004))
(assert (= temp10472_43 temp10472_42))
(assert (= temp10472_44 (select ARGNAME_padding_NAMEEND_VAL temp10472_43)))
(assert (= temp10472_45 #x0000000000000000))
(assert (= temp10472_46 #x0000000000000005))
(assert (= temp10472_47 temp10472_46))
(assert (= temp10472_48 (select ARGNAME_padding_NAMEEND_VAL temp10472_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10472_28 temp10472_25)
             (bvslt temp10472_32 temp10472_29)
             (bvslt temp10472_36 temp10472_33)
             (bvslt temp10472_40 temp10472_37)
             (bvslt temp10472_44 temp10472_41)
             (bvslt temp10472_48 temp10472_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10472_49 #x0000000000000000))
(assert (= var1191714 temp10472_49))
(assert (= temp10472_50 #x0000000000000000))
(assert (= temp10472_51 temp10472_50))
(assert (= temp10472_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10472_51)))
(assert (= temp10472_53 #x0000000000000001))
(assert (= temp10472_54 temp10472_53))
(assert (= temp10472_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10472_54)))
(assert (= temp10472_56 #x0000000000000002))
(assert (= temp10472_57 temp10472_56))
(assert (= temp10472_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10472_57)))
(assert (= temp10472_59 #x0000000000000003))
(assert (= temp10472_60 temp10472_59))
(assert (= temp10472_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10472_60)))
(assert (= temp10472_62 #x0000000000000004))
(assert (= temp10472_63 temp10472_62))
(assert (= temp10472_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10472_63)))
(assert (= temp10472_65 #x0000000000000005))
(assert (= temp10472_66 temp10472_65))
(assert (= temp10472_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10472_66)))
(assert (= temp10472_68 #x0000000000000000))
(assert (= temp10472_69 #x0000000000000000))
(assert (= temp10472_70 temp10472_69))
(assert (= temp10472_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10472_70)))
(assert (= temp10472_72 #x0000000000000000))
(assert (= temp10472_73 #x0000000000000001))
(assert (= temp10472_74 temp10472_73))
(assert (= temp10472_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10472_74)))
(assert (= temp10472_76 #x0000000000000000))
(assert (= temp10472_77 #x0000000000000002))
(assert (= temp10472_78 temp10472_77))
(assert (= temp10472_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10472_78)))
(assert (= temp10472_80 #x0000000000000000))
(assert (= temp10472_81 #x0000000000000003))
(assert (= temp10472_82 temp10472_81))
(assert (= temp10472_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10472_82)))
(assert (= temp10472_84 #x0000000000000000))
(assert (= temp10472_85 #x0000000000000004))
(assert (= temp10472_86 temp10472_85))
(assert (= temp10472_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10472_86)))
(assert (= temp10472_88 #x0000000000000000))
(assert (= temp10472_89 #x0000000000000005))
(assert (= temp10472_90 temp10472_89))
(assert (= temp10472_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10472_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10472_71 temp10472_68)
             (bvslt temp10472_75 temp10472_72)
             (bvslt temp10472_79 temp10472_76)
             (bvslt temp10472_83 temp10472_80)
             (bvslt temp10472_87 temp10472_84)
             (bvslt temp10472_91 temp10472_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10472_92 #x0000000000000000))
(assert (= var1191725 temp10472_92))
(assert (= temp10472_93 #x0000000000000000))
(assert (= temp10472_94 temp10472_93))
(assert (= temp10472_95 (select ARGNAME_stride_NAMEEND_VAL temp10472_94)))
(assert (= temp10472_96 #x0000000000000001))
(assert (= temp10472_97 temp10472_96))
(assert (= temp10472_98 (select ARGNAME_stride_NAMEEND_VAL temp10472_97)))
(assert (= temp10472_99 #x0000000000000002))
(assert (= temp10472_100 temp10472_99))
(assert (= temp10472_101 (select ARGNAME_stride_NAMEEND_VAL temp10472_100)))
(assert (= temp10472_102 #x0000000000000003))
(assert (= temp10472_103 temp10472_102))
(assert (= temp10472_104 (select ARGNAME_stride_NAMEEND_VAL temp10472_103)))
(assert (= temp10472_105 #x0000000000000004))
(assert (= temp10472_106 temp10472_105))
(assert (= temp10472_107 (select ARGNAME_stride_NAMEEND_VAL temp10472_106)))
(assert (= temp10472_108 #x0000000000000005))
(assert (= temp10472_109 temp10472_108))
(assert (= temp10472_110 (select ARGNAME_stride_NAMEEND_VAL temp10472_109)))
(assert (= temp10472_111 #x0000000000000000))
(assert (= temp10472_112 #x0000000000000000))
(assert (= temp10472_113 temp10472_112))
(assert (= temp10472_114 (select ARGNAME_stride_NAMEEND_VAL temp10472_113)))
(assert (= temp10472_115 #x0000000000000000))
(assert (= temp10472_116 #x0000000000000001))
(assert (= temp10472_117 temp10472_116))
(assert (= temp10472_118 (select ARGNAME_stride_NAMEEND_VAL temp10472_117)))
(assert (= temp10472_119 #x0000000000000000))
(assert (= temp10472_120 #x0000000000000002))
(assert (= temp10472_121 temp10472_120))
(assert (= temp10472_122 (select ARGNAME_stride_NAMEEND_VAL temp10472_121)))
(assert (= temp10472_123 #x0000000000000000))
(assert (= temp10472_124 #x0000000000000003))
(assert (= temp10472_125 temp10472_124))
(assert (= temp10472_126 (select ARGNAME_stride_NAMEEND_VAL temp10472_125)))
(assert (= temp10472_127 #x0000000000000000))
(assert (= temp10472_128 #x0000000000000004))
(assert (= temp10472_129 temp10472_128))
(assert (= temp10472_130 (select ARGNAME_stride_NAMEEND_VAL temp10472_129)))
(assert (= temp10472_131 #x0000000000000000))
(assert (= temp10472_132 #x0000000000000005))
(assert (= temp10472_133 temp10472_132))
(assert (= temp10472_134 (select ARGNAME_stride_NAMEEND_VAL temp10472_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10472_114 temp10472_111)
             (bvsle temp10472_118 temp10472_115)
             (bvsle temp10472_122 temp10472_119)
             (bvsle temp10472_126 temp10472_123)
             (bvsle temp10472_130 temp10472_127)
             (bvsle temp10472_134 temp10472_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10472_135 #x0000000000000000))
(assert (= var1191735 temp10472_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10472_136 #x0000000000000001))
(assert (= var1191747 temp10472_136))
(assert (= temp10472_137 #x0000000000000000))
(assert (= var1179826 temp10472_137))
(assert (= temp10472_138 #x0000000000000000))
(assert (= temp10472_139 temp10472_138))
(assert (= temp10472_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10472_139)))
(assert (= temp10472_141 #x0000000000000001))
(assert (= temp10472_142 temp10472_141))
(assert (= temp10472_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10472_142)))
(assert (= temp10472_144 #x0000000000000002))
(assert (= temp10472_145 temp10472_144))
(assert (= temp10472_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10472_145)))
(assert (= temp10472_147 #x0000000000000003))
(assert (= temp10472_148 temp10472_147))
(assert (= temp10472_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10472_148)))
(assert (= temp10472_150 #x0000000000000004))
(assert (= temp10472_151 temp10472_150))
(assert (= temp10472_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10472_151)))
(assert (= temp10472_153 #x0000000000000005))
(assert (= temp10472_154 temp10472_153))
(assert (= temp10472_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10472_154)))
(assert (= temp10472_157 var1179826))
(assert (= temp10472_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10472_157)))
(assert (= temp10472_156 temp10472_158))
(assert (= var1191780
   (ite (bvslt temp10472_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10472_159 #x0000000000000000))
(assert (= var1191780 temp10472_159))
(assert (= temp10472_160 #x0000000000000000))
(assert (= var1179826 temp10472_160))
(assert (= temp10472_162 var1179826))
(assert (= temp10472_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10472_162)))
(assert (= temp10472_161 temp10472_163))
(assert (= var1191802 (bvsmod temp10472_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10472_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10472_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10472_165 #x0000000000000001))
(assert (= var1191803 temp10472_165))
(assert (= temp10472_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10472_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10472_167 #x0000000000000001))
(assert (= var1191823 temp10472_167))
(assert (= temp10472_168 #x0000000000000001))
(assert (= var1180714 temp10472_168))
(assert (= temp10472_169 #x0000000000000000))
(assert (= temp10472_170 temp10472_169))
(assert (= temp10472_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10472_170)))
(assert (= temp10472_172 #x0000000000000001))
(assert (= temp10472_173 temp10472_172))
(assert (= temp10472_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10472_173)))
(assert (= temp10472_175 #x0000000000000002))
(assert (= temp10472_176 temp10472_175))
(assert (= temp10472_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10472_176)))
(assert (= temp10472_178 #x0000000000000003))
(assert (= temp10472_179 temp10472_178))
(assert (= temp10472_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10472_179)))
(assert (= temp10472_181 #x0000000000000004))
(assert (= temp10472_182 temp10472_181))
(assert (= temp10472_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10472_182)))
(assert (= temp10472_184 #x0000000000000005))
(assert (= temp10472_185 temp10472_184))
(assert (= temp10472_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10472_185)))
(assert (= temp10472_187 #x0000000000000000))
(assert (= temp10472_188
   (ite (bvslt var1180714 temp10472_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10472_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10472_188)))
(assert (= var1191831 temp10472_189))
(assert (bvslt (ite (bvslt var1180714 temp10472_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10472_190 #x0000000000000001))
(assert (= var1180714 temp10472_190))
(assert (= temp10472_192 var1180714))
(assert (= temp10472_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10472_192)))
(assert (= temp10472_191 temp10472_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10472_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10472_194 #x0000000000000001))
(assert (= var1191836 temp10472_194))
(assert (= temp10472_195 #x0000000000000000))
(assert (= var1179826 temp10472_195))
(assert (= temp10472_197 var1179826))
(assert (= temp10472_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10472_197)))
(assert (= temp10472_196 temp10472_198))
(assert (= temp10472_199 #x0000000000000002))
(assert (= var1586025 temp10472_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10472_200 #x0000000000000001))
(assert (= var1191993 temp10472_200))
(assert (= temp10472_201 #x0000000000000001))
(assert (= var2700303 temp10472_201))
(assert (= temp10472_202 #x0000000000000001))
(assert (= var2962447 temp10472_202))
(assert (= temp10472_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10472_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10472_204 #x0000000000000001))
(assert (= var211058 temp10472_204))
(assert (= temp10472_205 #x0000000000000001))
(assert (= var211188 temp10472_205))
(assert (= var3879401 var211188))
(assert (= temp10472_206 #x0000000000000000))
(assert (= var3866802 temp10472_206))
(assert (= temp10472_207 #x0000000000000000))
(assert (= temp10472_208
   (ite (bvslt var3866802 temp10472_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10472_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10472_208)))
(assert (= var3879420 temp10472_209))
(assert (bvslt (ite (bvslt var3866802 temp10472_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10472_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10472_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10472_211 #x0000000000000000))
(assert (= var3879421 temp10472_211))
(assert (= temp10472_212 #x0000000000000001))
(assert (= var3867690 temp10472_212))
(assert (= temp10472_213 #x0000000000000000))
(assert (= temp10472_214
   (ite (bvslt var3867690 temp10472_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10472_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10472_214)))
(assert (= var3879423 temp10472_215))
(assert (bvslt (ite (bvslt var3867690 temp10472_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10472_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10472_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10472_217 #x0000000000000001))
(assert (= var3879424 temp10472_217))
(assert (= temp10472_218 #x0000000000000000))
(assert (= var4079423 temp10472_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10472_219 #x0000000000000002))
(assert (= var4208259 temp10472_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10472_220 #x0000000000000000))
(assert (= var4273820 temp10472_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4469136 var211201))
(assert (= var4731280 var211201))
(assert (= temp10472_221 #x0000000000000001))
(assert (= var212414
   (ite (= ARGNAME_groups_NAMEEND temp10472_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10472_222 #x0000000000000000))
(assert (= var212414 temp10472_222))
(assert (= temp10472_223 #x0000000000000002))
(assert (= var5060227 temp10472_223))
(assert (= var5125772 var5060227))
(assert (= temp10472_224 #x0000000000000001))
(assert (= var211058 temp10472_224))
(model-add temp10472_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10472_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10472_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10472_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))



