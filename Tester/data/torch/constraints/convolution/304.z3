(declare-fun temp405_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp405_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp405_3 () (_ BitVec 64))
(declare-fun temp405_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp405_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp405_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp405_7 () (_ BitVec 64))
(declare-fun temp405_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp405_9 () (_ BitVec 64))
(declare-fun temp405_10 () (_ BitVec 64))
(declare-fun temp405_11 () (_ BitVec 64))
(declare-fun temp405_12 () (_ BitVec 64))
(declare-fun temp405_13 () (_ BitVec 64))
(declare-fun temp405_14 () (_ BitVec 64))
(declare-fun temp405_15 () (_ BitVec 64))
(declare-fun temp405_16 () (_ BitVec 64))
(declare-fun temp405_17 () (_ BitVec 64))
(declare-fun temp405_18 () (_ BitVec 64))
(declare-fun temp405_19 () (_ BitVec 64))
(declare-fun temp405_20 () (_ BitVec 64))
(declare-fun temp405_21 () (_ BitVec 64))
(declare-fun temp405_22 () (_ BitVec 64))
(declare-fun temp405_23 () (_ BitVec 64))
(declare-fun temp405_24 () (_ BitVec 64))
(declare-fun temp405_25 () (_ BitVec 64))
(declare-fun temp405_26 () (_ BitVec 64))
(declare-fun temp405_27 () (_ BitVec 64))
(declare-fun temp405_28 () (_ BitVec 64))
(declare-fun temp405_29 () (_ BitVec 64))
(declare-fun temp405_30 () (_ BitVec 64))
(declare-fun temp405_31 () (_ BitVec 64))
(declare-fun temp405_32 () (_ BitVec 64))
(declare-fun temp405_33 () (_ BitVec 64))
(declare-fun temp405_34 () (_ BitVec 64))
(declare-fun temp405_35 () (_ BitVec 64))
(declare-fun temp405_36 () (_ BitVec 64))
(declare-fun temp405_37 () (_ BitVec 64))
(declare-fun temp405_38 () (_ BitVec 64))
(declare-fun temp405_39 () (_ BitVec 64))
(declare-fun temp405_40 () (_ BitVec 64))
(declare-fun temp405_41 () (_ BitVec 64))
(declare-fun temp405_42 () (_ BitVec 64))
(declare-fun temp405_43 () (_ BitVec 64))
(declare-fun temp405_44 () (_ BitVec 64))
(declare-fun temp405_45 () (_ BitVec 64))
(declare-fun temp405_46 () (_ BitVec 64))
(declare-fun temp405_47 () (_ BitVec 64))
(declare-fun temp405_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp405_49 () (_ BitVec 64))
(declare-fun temp405_50 () (_ BitVec 64))
(declare-fun temp405_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp405_52 () (_ BitVec 64))
(declare-fun temp405_53 () (_ BitVec 64))
(declare-fun temp405_54 () (_ BitVec 64))
(declare-fun temp405_55 () (_ BitVec 64))
(declare-fun temp405_56 () (_ BitVec 64))
(declare-fun temp405_57 () (_ BitVec 64))
(declare-fun temp405_58 () (_ BitVec 64))
(declare-fun temp405_59 () (_ BitVec 64))
(declare-fun temp405_60 () (_ BitVec 64))
(declare-fun temp405_61 () (_ BitVec 64))
(declare-fun temp405_62 () (_ BitVec 64))
(declare-fun temp405_63 () (_ BitVec 64))
(declare-fun temp405_64 () (_ BitVec 64))
(declare-fun temp405_65 () (_ BitVec 64))
(declare-fun temp405_66 () (_ BitVec 64))
(declare-fun temp405_67 () (_ BitVec 64))
(declare-fun temp405_68 () (_ BitVec 64))
(declare-fun temp405_69 () (_ BitVec 64))
(declare-fun temp405_70 () (_ BitVec 64))
(declare-fun temp405_71 () (_ BitVec 64))
(declare-fun temp405_72 () (_ BitVec 64))
(declare-fun temp405_73 () (_ BitVec 64))
(declare-fun temp405_74 () (_ BitVec 64))
(declare-fun temp405_75 () (_ BitVec 64))
(declare-fun temp405_76 () (_ BitVec 64))
(declare-fun temp405_77 () (_ BitVec 64))
(declare-fun temp405_78 () (_ BitVec 64))
(declare-fun temp405_79 () (_ BitVec 64))
(declare-fun temp405_80 () (_ BitVec 64))
(declare-fun temp405_81 () (_ BitVec 64))
(declare-fun temp405_82 () (_ BitVec 64))
(declare-fun temp405_83 () (_ BitVec 64))
(declare-fun temp405_84 () (_ BitVec 64))
(declare-fun temp405_85 () (_ BitVec 64))
(declare-fun temp405_86 () (_ BitVec 64))
(declare-fun temp405_87 () (_ BitVec 64))
(declare-fun temp405_88 () (_ BitVec 64))
(declare-fun temp405_89 () (_ BitVec 64))
(declare-fun temp405_90 () (_ BitVec 64))
(declare-fun temp405_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp405_92 () (_ BitVec 64))
(declare-fun temp405_93 () (_ BitVec 64))
(declare-fun temp405_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp405_95 () (_ BitVec 64))
(declare-fun temp405_96 () (_ BitVec 64))
(declare-fun temp405_97 () (_ BitVec 64))
(declare-fun temp405_98 () (_ BitVec 64))
(declare-fun temp405_99 () (_ BitVec 64))
(declare-fun temp405_100 () (_ BitVec 64))
(declare-fun temp405_101 () (_ BitVec 64))
(declare-fun temp405_102 () (_ BitVec 64))
(declare-fun temp405_103 () (_ BitVec 64))
(declare-fun temp405_104 () (_ BitVec 64))
(declare-fun temp405_105 () (_ BitVec 64))
(declare-fun temp405_106 () (_ BitVec 64))
(declare-fun temp405_107 () (_ BitVec 64))
(declare-fun temp405_108 () (_ BitVec 64))
(declare-fun temp405_109 () (_ BitVec 64))
(declare-fun temp405_110 () (_ BitVec 64))
(declare-fun temp405_111 () (_ BitVec 64))
(declare-fun temp405_112 () (_ BitVec 64))
(declare-fun temp405_113 () (_ BitVec 64))
(declare-fun temp405_114 () (_ BitVec 64))
(declare-fun temp405_115 () (_ BitVec 64))
(declare-fun temp405_116 () (_ BitVec 64))
(declare-fun temp405_117 () (_ BitVec 64))
(declare-fun temp405_118 () (_ BitVec 64))
(declare-fun temp405_119 () (_ BitVec 64))
(declare-fun temp405_120 () (_ BitVec 64))
(declare-fun temp405_121 () (_ BitVec 64))
(declare-fun temp405_122 () (_ BitVec 64))
(declare-fun temp405_123 () (_ BitVec 64))
(declare-fun temp405_124 () (_ BitVec 64))
(declare-fun temp405_125 () (_ BitVec 64))
(declare-fun temp405_126 () (_ BitVec 64))
(declare-fun temp405_127 () (_ BitVec 64))
(declare-fun temp405_128 () (_ BitVec 64))
(declare-fun temp405_129 () (_ BitVec 64))
(declare-fun temp405_130 () (_ BitVec 64))
(declare-fun temp405_131 () (_ BitVec 64))
(declare-fun temp405_132 () (_ BitVec 64))
(declare-fun temp405_133 () (_ BitVec 64))
(declare-fun temp405_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp405_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp405_136 () (_ BitVec 64))
(declare-fun temp405_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp405_138 () (_ BitVec 64))
(declare-fun temp405_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp405_140 () (_ BitVec 64))
(declare-fun temp405_141 () (_ BitVec 64))
(declare-fun temp405_142 () (_ BitVec 64))
(declare-fun temp405_143 () (_ BitVec 64))
(declare-fun temp405_144 () (_ BitVec 64))
(declare-fun temp405_145 () (_ BitVec 64))
(declare-fun temp405_146 () (_ BitVec 64))
(declare-fun temp405_147 () (_ BitVec 64))
(declare-fun temp405_148 () (_ BitVec 64))
(declare-fun temp405_149 () (_ BitVec 64))
(declare-fun temp405_150 () (_ BitVec 64))
(declare-fun temp405_151 () (_ BitVec 64))
(declare-fun temp405_152 () (_ BitVec 64))
(declare-fun temp405_153 () (_ BitVec 64))
(declare-fun temp405_154 () (_ BitVec 64))
(declare-fun temp405_155 () (_ BitVec 64))
(declare-fun temp405_157 () (_ BitVec 64))
(declare-fun temp405_158 () (_ BitVec 64))
(declare-fun temp405_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp405_159 () (_ BitVec 64))
(declare-fun temp405_160 () (_ BitVec 64))
(declare-fun temp405_162 () (_ BitVec 64))
(declare-fun temp405_163 () (_ BitVec 64))
(declare-fun temp405_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp405_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp405_165 () (_ BitVec 64))
(declare-fun temp405_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp405_167 () (_ BitVec 64))
(declare-fun temp405_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp405_169 () (_ BitVec 64))
(declare-fun temp405_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp405_171 () (_ BitVec 64))
(declare-fun temp405_172 () (_ BitVec 64))
(declare-fun temp405_173 () (_ BitVec 64))
(declare-fun temp405_174 () (_ BitVec 64))
(declare-fun temp405_175 () (_ BitVec 64))
(declare-fun temp405_176 () (_ BitVec 64))
(declare-fun temp405_177 () (_ BitVec 64))
(declare-fun temp405_178 () (_ BitVec 64))
(declare-fun temp405_179 () (_ BitVec 64))
(declare-fun temp405_180 () (_ BitVec 64))
(declare-fun temp405_181 () (_ BitVec 64))
(declare-fun temp405_182 () (_ BitVec 64))
(declare-fun temp405_183 () (_ BitVec 64))
(declare-fun temp405_184 () (_ BitVec 64))
(declare-fun temp405_185 () (_ BitVec 64))
(declare-fun temp405_186 () (_ BitVec 64))
(declare-fun temp405_187 () (_ BitVec 64))
(declare-fun temp405_188 () (_ BitVec 64))
(declare-fun temp405_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp405_190 () (_ BitVec 64))
(declare-fun temp405_192 () (_ BitVec 64))
(declare-fun temp405_193 () (_ BitVec 64))
(declare-fun temp405_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp405_194 () (_ BitVec 64))
(declare-fun temp405_195 () (_ BitVec 64))
(declare-fun temp405_197 () (_ BitVec 64))
(declare-fun temp405_198 () (_ BitVec 64))
(declare-fun temp405_196 () (_ BitVec 64))
(declare-fun temp405_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp405_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp405_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp405_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp405_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp405_204 () (_ BitVec 64))
(declare-fun temp405_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp405_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp405_207 () (_ BitVec 64))
(declare-fun temp405_208 () (_ BitVec 64))
(declare-fun temp405_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp405_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp405_211 () (_ BitVec 64))
(declare-fun temp405_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp405_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp405_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp405_215 () (_ BitVec 64))
(assert (= temp405_1 #x0000000000000001))
(assert (= var77203 temp405_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp405_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp405_2)))
(assert (= temp405_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp405_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp405_4 #x0000000000000000))
(assert (= var210941 temp405_4))
(assert (= temp405_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp405_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp405_6 #x0000000000000000))
(assert (= var210986 temp405_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp405_7 #x0000000000000000))
(assert (= temp405_8 temp405_7))
(assert (= temp405_9 (select ARGNAME_padding_NAMEEND_VAL temp405_8)))
(assert (= temp405_10 #x0000000000000001))
(assert (= temp405_11 temp405_10))
(assert (= temp405_12 (select ARGNAME_padding_NAMEEND_VAL temp405_11)))
(assert (= temp405_13 #x0000000000000002))
(assert (= temp405_14 temp405_13))
(assert (= temp405_15 (select ARGNAME_padding_NAMEEND_VAL temp405_14)))
(assert (= temp405_16 #x0000000000000003))
(assert (= temp405_17 temp405_16))
(assert (= temp405_18 (select ARGNAME_padding_NAMEEND_VAL temp405_17)))
(assert (= temp405_19 #x0000000000000004))
(assert (= temp405_20 temp405_19))
(assert (= temp405_21 (select ARGNAME_padding_NAMEEND_VAL temp405_20)))
(assert (= temp405_22 #x0000000000000005))
(assert (= temp405_23 temp405_22))
(assert (= temp405_24 (select ARGNAME_padding_NAMEEND_VAL temp405_23)))
(assert (= temp405_25 #x0000000000000000))
(assert (= temp405_26 #x0000000000000000))
(assert (= temp405_27 temp405_26))
(assert (= temp405_28 (select ARGNAME_padding_NAMEEND_VAL temp405_27)))
(assert (= temp405_29 #x0000000000000000))
(assert (= temp405_30 #x0000000000000001))
(assert (= temp405_31 temp405_30))
(assert (= temp405_32 (select ARGNAME_padding_NAMEEND_VAL temp405_31)))
(assert (= temp405_33 #x0000000000000000))
(assert (= temp405_34 #x0000000000000002))
(assert (= temp405_35 temp405_34))
(assert (= temp405_36 (select ARGNAME_padding_NAMEEND_VAL temp405_35)))
(assert (= temp405_37 #x0000000000000000))
(assert (= temp405_38 #x0000000000000003))
(assert (= temp405_39 temp405_38))
(assert (= temp405_40 (select ARGNAME_padding_NAMEEND_VAL temp405_39)))
(assert (= temp405_41 #x0000000000000000))
(assert (= temp405_42 #x0000000000000004))
(assert (= temp405_43 temp405_42))
(assert (= temp405_44 (select ARGNAME_padding_NAMEEND_VAL temp405_43)))
(assert (= temp405_45 #x0000000000000000))
(assert (= temp405_46 #x0000000000000005))
(assert (= temp405_47 temp405_46))
(assert (= temp405_48 (select ARGNAME_padding_NAMEEND_VAL temp405_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp405_28 temp405_25)
             (bvslt temp405_32 temp405_29)
             (bvslt temp405_36 temp405_33)
             (bvslt temp405_40 temp405_37)
             (bvslt temp405_44 temp405_41)
             (bvslt temp405_48 temp405_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp405_49 #x0000000000000000))
(assert (= var1191714 temp405_49))
(assert (= temp405_50 #x0000000000000000))
(assert (= temp405_51 temp405_50))
(assert (= temp405_52 (select ARGNAME_output_padding_NAMEEND_VAL temp405_51)))
(assert (= temp405_53 #x0000000000000001))
(assert (= temp405_54 temp405_53))
(assert (= temp405_55 (select ARGNAME_output_padding_NAMEEND_VAL temp405_54)))
(assert (= temp405_56 #x0000000000000002))
(assert (= temp405_57 temp405_56))
(assert (= temp405_58 (select ARGNAME_output_padding_NAMEEND_VAL temp405_57)))
(assert (= temp405_59 #x0000000000000003))
(assert (= temp405_60 temp405_59))
(assert (= temp405_61 (select ARGNAME_output_padding_NAMEEND_VAL temp405_60)))
(assert (= temp405_62 #x0000000000000004))
(assert (= temp405_63 temp405_62))
(assert (= temp405_64 (select ARGNAME_output_padding_NAMEEND_VAL temp405_63)))
(assert (= temp405_65 #x0000000000000005))
(assert (= temp405_66 temp405_65))
(assert (= temp405_67 (select ARGNAME_output_padding_NAMEEND_VAL temp405_66)))
(assert (= temp405_68 #x0000000000000000))
(assert (= temp405_69 #x0000000000000000))
(assert (= temp405_70 temp405_69))
(assert (= temp405_71 (select ARGNAME_output_padding_NAMEEND_VAL temp405_70)))
(assert (= temp405_72 #x0000000000000000))
(assert (= temp405_73 #x0000000000000001))
(assert (= temp405_74 temp405_73))
(assert (= temp405_75 (select ARGNAME_output_padding_NAMEEND_VAL temp405_74)))
(assert (= temp405_76 #x0000000000000000))
(assert (= temp405_77 #x0000000000000002))
(assert (= temp405_78 temp405_77))
(assert (= temp405_79 (select ARGNAME_output_padding_NAMEEND_VAL temp405_78)))
(assert (= temp405_80 #x0000000000000000))
(assert (= temp405_81 #x0000000000000003))
(assert (= temp405_82 temp405_81))
(assert (= temp405_83 (select ARGNAME_output_padding_NAMEEND_VAL temp405_82)))
(assert (= temp405_84 #x0000000000000000))
(assert (= temp405_85 #x0000000000000004))
(assert (= temp405_86 temp405_85))
(assert (= temp405_87 (select ARGNAME_output_padding_NAMEEND_VAL temp405_86)))
(assert (= temp405_88 #x0000000000000000))
(assert (= temp405_89 #x0000000000000005))
(assert (= temp405_90 temp405_89))
(assert (= temp405_91 (select ARGNAME_output_padding_NAMEEND_VAL temp405_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp405_71 temp405_68)
             (bvslt temp405_75 temp405_72)
             (bvslt temp405_79 temp405_76)
             (bvslt temp405_83 temp405_80)
             (bvslt temp405_87 temp405_84)
             (bvslt temp405_91 temp405_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp405_92 #x0000000000000000))
(assert (= var1191725 temp405_92))
(assert (= temp405_93 #x0000000000000000))
(assert (= temp405_94 temp405_93))
(assert (= temp405_95 (select ARGNAME_stride_NAMEEND_VAL temp405_94)))
(assert (= temp405_96 #x0000000000000001))
(assert (= temp405_97 temp405_96))
(assert (= temp405_98 (select ARGNAME_stride_NAMEEND_VAL temp405_97)))
(assert (= temp405_99 #x0000000000000002))
(assert (= temp405_100 temp405_99))
(assert (= temp405_101 (select ARGNAME_stride_NAMEEND_VAL temp405_100)))
(assert (= temp405_102 #x0000000000000003))
(assert (= temp405_103 temp405_102))
(assert (= temp405_104 (select ARGNAME_stride_NAMEEND_VAL temp405_103)))
(assert (= temp405_105 #x0000000000000004))
(assert (= temp405_106 temp405_105))
(assert (= temp405_107 (select ARGNAME_stride_NAMEEND_VAL temp405_106)))
(assert (= temp405_108 #x0000000000000005))
(assert (= temp405_109 temp405_108))
(assert (= temp405_110 (select ARGNAME_stride_NAMEEND_VAL temp405_109)))
(assert (= temp405_111 #x0000000000000000))
(assert (= temp405_112 #x0000000000000000))
(assert (= temp405_113 temp405_112))
(assert (= temp405_114 (select ARGNAME_stride_NAMEEND_VAL temp405_113)))
(assert (= temp405_115 #x0000000000000000))
(assert (= temp405_116 #x0000000000000001))
(assert (= temp405_117 temp405_116))
(assert (= temp405_118 (select ARGNAME_stride_NAMEEND_VAL temp405_117)))
(assert (= temp405_119 #x0000000000000000))
(assert (= temp405_120 #x0000000000000002))
(assert (= temp405_121 temp405_120))
(assert (= temp405_122 (select ARGNAME_stride_NAMEEND_VAL temp405_121)))
(assert (= temp405_123 #x0000000000000000))
(assert (= temp405_124 #x0000000000000003))
(assert (= temp405_125 temp405_124))
(assert (= temp405_126 (select ARGNAME_stride_NAMEEND_VAL temp405_125)))
(assert (= temp405_127 #x0000000000000000))
(assert (= temp405_128 #x0000000000000004))
(assert (= temp405_129 temp405_128))
(assert (= temp405_130 (select ARGNAME_stride_NAMEEND_VAL temp405_129)))
(assert (= temp405_131 #x0000000000000000))
(assert (= temp405_132 #x0000000000000005))
(assert (= temp405_133 temp405_132))
(assert (= temp405_134 (select ARGNAME_stride_NAMEEND_VAL temp405_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp405_114 temp405_111)
             (bvsle temp405_118 temp405_115)
             (bvsle temp405_122 temp405_119)
             (bvsle temp405_126 temp405_123)
             (bvsle temp405_130 temp405_127)
             (bvsle temp405_134 temp405_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp405_135 #x0000000000000000))
(assert (= var1191735 temp405_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp405_136 #x0000000000000001))
(assert (= var1191747 temp405_136))
(assert (= temp405_137 #x0000000000000000))
(assert (= var1179826 temp405_137))
(assert (= temp405_138 #x0000000000000000))
(assert (= temp405_139 temp405_138))
(assert (= temp405_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp405_139)))
(assert (= temp405_141 #x0000000000000001))
(assert (= temp405_142 temp405_141))
(assert (= temp405_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp405_142)))
(assert (= temp405_144 #x0000000000000002))
(assert (= temp405_145 temp405_144))
(assert (= temp405_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp405_145)))
(assert (= temp405_147 #x0000000000000003))
(assert (= temp405_148 temp405_147))
(assert (= temp405_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp405_148)))
(assert (= temp405_150 #x0000000000000004))
(assert (= temp405_151 temp405_150))
(assert (= temp405_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp405_151)))
(assert (= temp405_153 #x0000000000000005))
(assert (= temp405_154 temp405_153))
(assert (= temp405_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp405_154)))
(assert (= temp405_157 var1179826))
(assert (= temp405_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp405_157)))
(assert (= temp405_156 temp405_158))
(assert (= var1191780
   (ite (bvslt temp405_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp405_159 #x0000000000000000))
(assert (= var1191780 temp405_159))
(assert (= temp405_160 #x0000000000000000))
(assert (= var1179826 temp405_160))
(assert (= temp405_162 var1179826))
(assert (= temp405_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp405_162)))
(assert (= temp405_161 temp405_163))
(assert (= var1191802 (bvsmod temp405_161 ARGNAME_groups_NAMEEND)))
(assert (= temp405_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp405_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp405_165 #x0000000000000001))
(assert (= var1191803 temp405_165))
(assert (= temp405_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp405_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp405_167 #x0000000000000001))
(assert (= var1191823 temp405_167))
(assert (= temp405_168 #x0000000000000001))
(assert (= var1180714 temp405_168))
(assert (= temp405_169 #x0000000000000000))
(assert (= temp405_170 temp405_169))
(assert (= temp405_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp405_170)))
(assert (= temp405_172 #x0000000000000001))
(assert (= temp405_173 temp405_172))
(assert (= temp405_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp405_173)))
(assert (= temp405_175 #x0000000000000002))
(assert (= temp405_176 temp405_175))
(assert (= temp405_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp405_176)))
(assert (= temp405_178 #x0000000000000003))
(assert (= temp405_179 temp405_178))
(assert (= temp405_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp405_179)))
(assert (= temp405_181 #x0000000000000004))
(assert (= temp405_182 temp405_181))
(assert (= temp405_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp405_182)))
(assert (= temp405_184 #x0000000000000005))
(assert (= temp405_185 temp405_184))
(assert (= temp405_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp405_185)))
(assert (= temp405_187 #x0000000000000000))
(assert (= temp405_188
   (ite (bvslt var1180714 temp405_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp405_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp405_188)))
(assert (= var1191831 temp405_189))
(assert (bvslt (ite (bvslt var1180714 temp405_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp405_190 #x0000000000000001))
(assert (= var1180714 temp405_190))
(assert (= temp405_192 var1180714))
(assert (= temp405_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp405_192)))
(assert (= temp405_191 temp405_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp405_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp405_194 #x0000000000000001))
(assert (= var1191836 temp405_194))
(assert (= temp405_195 #x0000000000000000))
(assert (= var1179826 temp405_195))
(assert (= temp405_197 var1179826))
(assert (= temp405_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp405_197)))
(assert (= temp405_196 temp405_198))
(assert (= temp405_199 #x0000000000000002))
(assert (= var1586025 temp405_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp405_200 #x0000000000000001))
(assert (= var1191993 temp405_200))
(assert (= temp405_201 #x0000000000000001))
(assert (= var2700303 temp405_201))
(assert (= temp405_202 #x0000000000000001))
(assert (= var2962447 temp405_202))
(assert (= temp405_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp405_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp405_204 #x0000000000000001))
(assert (= var211058 temp405_204))
(assert (= temp405_205 #x0000000000000001))
(assert (= var211188 temp405_205))
(assert (= var3879401 var211188))
(assert (= temp405_206 #x0000000000000000))
(assert (= var3866802 temp405_206))
(assert (= temp405_207 #x0000000000000000))
(assert (= temp405_208
   (ite (bvslt var3866802 temp405_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp405_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp405_208)))
(assert (= var3879420 temp405_209))
(assert (bvslt (ite (bvslt var3866802 temp405_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp405_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp405_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp405_211 #x0000000000000001))
(assert (= var3879421 temp405_211))
(assert (= temp405_212 #x0000000000000000))
(assert (= var4079423 temp405_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp405_213 #x0000000000000002))
(assert (= var4208259 temp405_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp405_214 #x0000000000000000))
(assert (= var4273820 temp405_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp405_215 #x0000000000000001))
(assert (= var211058 temp405_215))
(model-add temp405_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp405_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp405_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp405_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





