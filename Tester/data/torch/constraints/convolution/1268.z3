(declare-fun temp10421_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10421_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10421_3 () (_ BitVec 64))
(declare-fun temp10421_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10421_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10421_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10421_7 () (_ BitVec 64))
(declare-fun temp10421_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10421_9 () (_ BitVec 64))
(declare-fun temp10421_10 () (_ BitVec 64))
(declare-fun temp10421_11 () (_ BitVec 64))
(declare-fun temp10421_12 () (_ BitVec 64))
(declare-fun temp10421_13 () (_ BitVec 64))
(declare-fun temp10421_14 () (_ BitVec 64))
(declare-fun temp10421_15 () (_ BitVec 64))
(declare-fun temp10421_16 () (_ BitVec 64))
(declare-fun temp10421_17 () (_ BitVec 64))
(declare-fun temp10421_18 () (_ BitVec 64))
(declare-fun temp10421_19 () (_ BitVec 64))
(declare-fun temp10421_20 () (_ BitVec 64))
(declare-fun temp10421_21 () (_ BitVec 64))
(declare-fun temp10421_22 () (_ BitVec 64))
(declare-fun temp10421_23 () (_ BitVec 64))
(declare-fun temp10421_24 () (_ BitVec 64))
(declare-fun temp10421_25 () (_ BitVec 64))
(declare-fun temp10421_26 () (_ BitVec 64))
(declare-fun temp10421_27 () (_ BitVec 64))
(declare-fun temp10421_28 () (_ BitVec 64))
(declare-fun temp10421_29 () (_ BitVec 64))
(declare-fun temp10421_30 () (_ BitVec 64))
(declare-fun temp10421_31 () (_ BitVec 64))
(declare-fun temp10421_32 () (_ BitVec 64))
(declare-fun temp10421_33 () (_ BitVec 64))
(declare-fun temp10421_34 () (_ BitVec 64))
(declare-fun temp10421_35 () (_ BitVec 64))
(declare-fun temp10421_36 () (_ BitVec 64))
(declare-fun temp10421_37 () (_ BitVec 64))
(declare-fun temp10421_38 () (_ BitVec 64))
(declare-fun temp10421_39 () (_ BitVec 64))
(declare-fun temp10421_40 () (_ BitVec 64))
(declare-fun temp10421_41 () (_ BitVec 64))
(declare-fun temp10421_42 () (_ BitVec 64))
(declare-fun temp10421_43 () (_ BitVec 64))
(declare-fun temp10421_44 () (_ BitVec 64))
(declare-fun temp10421_45 () (_ BitVec 64))
(declare-fun temp10421_46 () (_ BitVec 64))
(declare-fun temp10421_47 () (_ BitVec 64))
(declare-fun temp10421_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10421_49 () (_ BitVec 64))
(declare-fun temp10421_50 () (_ BitVec 64))
(declare-fun temp10421_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10421_52 () (_ BitVec 64))
(declare-fun temp10421_53 () (_ BitVec 64))
(declare-fun temp10421_54 () (_ BitVec 64))
(declare-fun temp10421_55 () (_ BitVec 64))
(declare-fun temp10421_56 () (_ BitVec 64))
(declare-fun temp10421_57 () (_ BitVec 64))
(declare-fun temp10421_58 () (_ BitVec 64))
(declare-fun temp10421_59 () (_ BitVec 64))
(declare-fun temp10421_60 () (_ BitVec 64))
(declare-fun temp10421_61 () (_ BitVec 64))
(declare-fun temp10421_62 () (_ BitVec 64))
(declare-fun temp10421_63 () (_ BitVec 64))
(declare-fun temp10421_64 () (_ BitVec 64))
(declare-fun temp10421_65 () (_ BitVec 64))
(declare-fun temp10421_66 () (_ BitVec 64))
(declare-fun temp10421_67 () (_ BitVec 64))
(declare-fun temp10421_68 () (_ BitVec 64))
(declare-fun temp10421_69 () (_ BitVec 64))
(declare-fun temp10421_70 () (_ BitVec 64))
(declare-fun temp10421_71 () (_ BitVec 64))
(declare-fun temp10421_72 () (_ BitVec 64))
(declare-fun temp10421_73 () (_ BitVec 64))
(declare-fun temp10421_74 () (_ BitVec 64))
(declare-fun temp10421_75 () (_ BitVec 64))
(declare-fun temp10421_76 () (_ BitVec 64))
(declare-fun temp10421_77 () (_ BitVec 64))
(declare-fun temp10421_78 () (_ BitVec 64))
(declare-fun temp10421_79 () (_ BitVec 64))
(declare-fun temp10421_80 () (_ BitVec 64))
(declare-fun temp10421_81 () (_ BitVec 64))
(declare-fun temp10421_82 () (_ BitVec 64))
(declare-fun temp10421_83 () (_ BitVec 64))
(declare-fun temp10421_84 () (_ BitVec 64))
(declare-fun temp10421_85 () (_ BitVec 64))
(declare-fun temp10421_86 () (_ BitVec 64))
(declare-fun temp10421_87 () (_ BitVec 64))
(declare-fun temp10421_88 () (_ BitVec 64))
(declare-fun temp10421_89 () (_ BitVec 64))
(declare-fun temp10421_90 () (_ BitVec 64))
(declare-fun temp10421_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10421_92 () (_ BitVec 64))
(declare-fun temp10421_93 () (_ BitVec 64))
(declare-fun temp10421_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10421_95 () (_ BitVec 64))
(declare-fun temp10421_96 () (_ BitVec 64))
(declare-fun temp10421_97 () (_ BitVec 64))
(declare-fun temp10421_98 () (_ BitVec 64))
(declare-fun temp10421_99 () (_ BitVec 64))
(declare-fun temp10421_100 () (_ BitVec 64))
(declare-fun temp10421_101 () (_ BitVec 64))
(declare-fun temp10421_102 () (_ BitVec 64))
(declare-fun temp10421_103 () (_ BitVec 64))
(declare-fun temp10421_104 () (_ BitVec 64))
(declare-fun temp10421_105 () (_ BitVec 64))
(declare-fun temp10421_106 () (_ BitVec 64))
(declare-fun temp10421_107 () (_ BitVec 64))
(declare-fun temp10421_108 () (_ BitVec 64))
(declare-fun temp10421_109 () (_ BitVec 64))
(declare-fun temp10421_110 () (_ BitVec 64))
(declare-fun temp10421_111 () (_ BitVec 64))
(declare-fun temp10421_112 () (_ BitVec 64))
(declare-fun temp10421_113 () (_ BitVec 64))
(declare-fun temp10421_114 () (_ BitVec 64))
(declare-fun temp10421_115 () (_ BitVec 64))
(declare-fun temp10421_116 () (_ BitVec 64))
(declare-fun temp10421_117 () (_ BitVec 64))
(declare-fun temp10421_118 () (_ BitVec 64))
(declare-fun temp10421_119 () (_ BitVec 64))
(declare-fun temp10421_120 () (_ BitVec 64))
(declare-fun temp10421_121 () (_ BitVec 64))
(declare-fun temp10421_122 () (_ BitVec 64))
(declare-fun temp10421_123 () (_ BitVec 64))
(declare-fun temp10421_124 () (_ BitVec 64))
(declare-fun temp10421_125 () (_ BitVec 64))
(declare-fun temp10421_126 () (_ BitVec 64))
(declare-fun temp10421_127 () (_ BitVec 64))
(declare-fun temp10421_128 () (_ BitVec 64))
(declare-fun temp10421_129 () (_ BitVec 64))
(declare-fun temp10421_130 () (_ BitVec 64))
(declare-fun temp10421_131 () (_ BitVec 64))
(declare-fun temp10421_132 () (_ BitVec 64))
(declare-fun temp10421_133 () (_ BitVec 64))
(declare-fun temp10421_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10421_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10421_136 () (_ BitVec 64))
(declare-fun temp10421_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10421_138 () (_ BitVec 64))
(declare-fun temp10421_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10421_140 () (_ BitVec 64))
(declare-fun temp10421_141 () (_ BitVec 64))
(declare-fun temp10421_142 () (_ BitVec 64))
(declare-fun temp10421_143 () (_ BitVec 64))
(declare-fun temp10421_144 () (_ BitVec 64))
(declare-fun temp10421_145 () (_ BitVec 64))
(declare-fun temp10421_146 () (_ BitVec 64))
(declare-fun temp10421_147 () (_ BitVec 64))
(declare-fun temp10421_148 () (_ BitVec 64))
(declare-fun temp10421_149 () (_ BitVec 64))
(declare-fun temp10421_150 () (_ BitVec 64))
(declare-fun temp10421_151 () (_ BitVec 64))
(declare-fun temp10421_152 () (_ BitVec 64))
(declare-fun temp10421_153 () (_ BitVec 64))
(declare-fun temp10421_154 () (_ BitVec 64))
(declare-fun temp10421_155 () (_ BitVec 64))
(declare-fun temp10421_157 () (_ BitVec 64))
(declare-fun temp10421_158 () (_ BitVec 64))
(declare-fun temp10421_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10421_159 () (_ BitVec 64))
(declare-fun temp10421_160 () (_ BitVec 64))
(declare-fun temp10421_162 () (_ BitVec 64))
(declare-fun temp10421_163 () (_ BitVec 64))
(declare-fun temp10421_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10421_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10421_165 () (_ BitVec 64))
(declare-fun temp10421_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10421_167 () (_ BitVec 64))
(declare-fun temp10421_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10421_169 () (_ BitVec 64))
(declare-fun temp10421_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10421_171 () (_ BitVec 64))
(declare-fun temp10421_172 () (_ BitVec 64))
(declare-fun temp10421_173 () (_ BitVec 64))
(declare-fun temp10421_174 () (_ BitVec 64))
(declare-fun temp10421_175 () (_ BitVec 64))
(declare-fun temp10421_176 () (_ BitVec 64))
(declare-fun temp10421_177 () (_ BitVec 64))
(declare-fun temp10421_178 () (_ BitVec 64))
(declare-fun temp10421_179 () (_ BitVec 64))
(declare-fun temp10421_180 () (_ BitVec 64))
(declare-fun temp10421_181 () (_ BitVec 64))
(declare-fun temp10421_182 () (_ BitVec 64))
(declare-fun temp10421_183 () (_ BitVec 64))
(declare-fun temp10421_184 () (_ BitVec 64))
(declare-fun temp10421_185 () (_ BitVec 64))
(declare-fun temp10421_186 () (_ BitVec 64))
(declare-fun temp10421_187 () (_ BitVec 64))
(declare-fun temp10421_188 () (_ BitVec 64))
(declare-fun temp10421_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10421_190 () (_ BitVec 64))
(declare-fun temp10421_192 () (_ BitVec 64))
(declare-fun temp10421_193 () (_ BitVec 64))
(declare-fun temp10421_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10421_194 () (_ BitVec 64))
(declare-fun temp10421_195 () (_ BitVec 64))
(declare-fun temp10421_197 () (_ BitVec 64))
(declare-fun temp10421_198 () (_ BitVec 64))
(declare-fun temp10421_196 () (_ BitVec 64))
(declare-fun temp10421_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10421_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10421_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10421_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10421_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10421_204 () (_ BitVec 64))
(declare-fun temp10421_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10421_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10421_207 () (_ BitVec 64))
(declare-fun temp10421_208 () (_ BitVec 64))
(declare-fun temp10421_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10421_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10421_211 () (_ BitVec 64))
(declare-fun temp10421_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10421_213 () (_ BitVec 64))
(declare-fun temp10421_214 () (_ BitVec 64))
(declare-fun temp10421_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10421_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10421_217 () (_ BitVec 64))
(declare-fun temp10421_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10421_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10421_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4469136 () (_ BitVec 64))
(declare-fun var4731280 () (_ BitVec 64))
(declare-fun temp10421_221 () (_ BitVec 64))
(declare-fun var212414 () (_ BitVec 64))
(declare-fun temp10421_222 () (_ BitVec 64))
(declare-fun temp10421_223 () (_ BitVec 64))
(declare-fun var5060227 () (_ BitVec 64))
(declare-fun var5060229 () (_ BitVec 64))
(declare-fun var5125772 () (_ BitVec 64))
(declare-fun var5125773 () (_ BitVec 64))
(declare-fun temp10421_224 () (_ BitVec 64))
(assert (= temp10421_1 #x0000000000000001))
(assert (= var77203 temp10421_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10421_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10421_2)))
(assert (= temp10421_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10421_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10421_4 #x0000000000000000))
(assert (= var210941 temp10421_4))
(assert (= temp10421_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10421_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10421_6 #x0000000000000000))
(assert (= var210986 temp10421_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10421_7 #x0000000000000000))
(assert (= temp10421_8 temp10421_7))
(assert (= temp10421_9 (select ARGNAME_padding_NAMEEND_VAL temp10421_8)))
(assert (= temp10421_10 #x0000000000000001))
(assert (= temp10421_11 temp10421_10))
(assert (= temp10421_12 (select ARGNAME_padding_NAMEEND_VAL temp10421_11)))
(assert (= temp10421_13 #x0000000000000002))
(assert (= temp10421_14 temp10421_13))
(assert (= temp10421_15 (select ARGNAME_padding_NAMEEND_VAL temp10421_14)))
(assert (= temp10421_16 #x0000000000000003))
(assert (= temp10421_17 temp10421_16))
(assert (= temp10421_18 (select ARGNAME_padding_NAMEEND_VAL temp10421_17)))
(assert (= temp10421_19 #x0000000000000004))
(assert (= temp10421_20 temp10421_19))
(assert (= temp10421_21 (select ARGNAME_padding_NAMEEND_VAL temp10421_20)))
(assert (= temp10421_22 #x0000000000000005))
(assert (= temp10421_23 temp10421_22))
(assert (= temp10421_24 (select ARGNAME_padding_NAMEEND_VAL temp10421_23)))
(assert (= temp10421_25 #x0000000000000000))
(assert (= temp10421_26 #x0000000000000000))
(assert (= temp10421_27 temp10421_26))
(assert (= temp10421_28 (select ARGNAME_padding_NAMEEND_VAL temp10421_27)))
(assert (= temp10421_29 #x0000000000000000))
(assert (= temp10421_30 #x0000000000000001))
(assert (= temp10421_31 temp10421_30))
(assert (= temp10421_32 (select ARGNAME_padding_NAMEEND_VAL temp10421_31)))
(assert (= temp10421_33 #x0000000000000000))
(assert (= temp10421_34 #x0000000000000002))
(assert (= temp10421_35 temp10421_34))
(assert (= temp10421_36 (select ARGNAME_padding_NAMEEND_VAL temp10421_35)))
(assert (= temp10421_37 #x0000000000000000))
(assert (= temp10421_38 #x0000000000000003))
(assert (= temp10421_39 temp10421_38))
(assert (= temp10421_40 (select ARGNAME_padding_NAMEEND_VAL temp10421_39)))
(assert (= temp10421_41 #x0000000000000000))
(assert (= temp10421_42 #x0000000000000004))
(assert (= temp10421_43 temp10421_42))
(assert (= temp10421_44 (select ARGNAME_padding_NAMEEND_VAL temp10421_43)))
(assert (= temp10421_45 #x0000000000000000))
(assert (= temp10421_46 #x0000000000000005))
(assert (= temp10421_47 temp10421_46))
(assert (= temp10421_48 (select ARGNAME_padding_NAMEEND_VAL temp10421_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10421_28 temp10421_25)
             (bvslt temp10421_32 temp10421_29)
             (bvslt temp10421_36 temp10421_33)
             (bvslt temp10421_40 temp10421_37)
             (bvslt temp10421_44 temp10421_41)
             (bvslt temp10421_48 temp10421_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10421_49 #x0000000000000000))
(assert (= var1191714 temp10421_49))
(assert (= temp10421_50 #x0000000000000000))
(assert (= temp10421_51 temp10421_50))
(assert (= temp10421_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10421_51)))
(assert (= temp10421_53 #x0000000000000001))
(assert (= temp10421_54 temp10421_53))
(assert (= temp10421_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10421_54)))
(assert (= temp10421_56 #x0000000000000002))
(assert (= temp10421_57 temp10421_56))
(assert (= temp10421_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10421_57)))
(assert (= temp10421_59 #x0000000000000003))
(assert (= temp10421_60 temp10421_59))
(assert (= temp10421_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10421_60)))
(assert (= temp10421_62 #x0000000000000004))
(assert (= temp10421_63 temp10421_62))
(assert (= temp10421_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10421_63)))
(assert (= temp10421_65 #x0000000000000005))
(assert (= temp10421_66 temp10421_65))
(assert (= temp10421_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10421_66)))
(assert (= temp10421_68 #x0000000000000000))
(assert (= temp10421_69 #x0000000000000000))
(assert (= temp10421_70 temp10421_69))
(assert (= temp10421_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10421_70)))
(assert (= temp10421_72 #x0000000000000000))
(assert (= temp10421_73 #x0000000000000001))
(assert (= temp10421_74 temp10421_73))
(assert (= temp10421_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10421_74)))
(assert (= temp10421_76 #x0000000000000000))
(assert (= temp10421_77 #x0000000000000002))
(assert (= temp10421_78 temp10421_77))
(assert (= temp10421_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10421_78)))
(assert (= temp10421_80 #x0000000000000000))
(assert (= temp10421_81 #x0000000000000003))
(assert (= temp10421_82 temp10421_81))
(assert (= temp10421_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10421_82)))
(assert (= temp10421_84 #x0000000000000000))
(assert (= temp10421_85 #x0000000000000004))
(assert (= temp10421_86 temp10421_85))
(assert (= temp10421_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10421_86)))
(assert (= temp10421_88 #x0000000000000000))
(assert (= temp10421_89 #x0000000000000005))
(assert (= temp10421_90 temp10421_89))
(assert (= temp10421_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10421_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10421_71 temp10421_68)
             (bvslt temp10421_75 temp10421_72)
             (bvslt temp10421_79 temp10421_76)
             (bvslt temp10421_83 temp10421_80)
             (bvslt temp10421_87 temp10421_84)
             (bvslt temp10421_91 temp10421_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10421_92 #x0000000000000000))
(assert (= var1191725 temp10421_92))
(assert (= temp10421_93 #x0000000000000000))
(assert (= temp10421_94 temp10421_93))
(assert (= temp10421_95 (select ARGNAME_stride_NAMEEND_VAL temp10421_94)))
(assert (= temp10421_96 #x0000000000000001))
(assert (= temp10421_97 temp10421_96))
(assert (= temp10421_98 (select ARGNAME_stride_NAMEEND_VAL temp10421_97)))
(assert (= temp10421_99 #x0000000000000002))
(assert (= temp10421_100 temp10421_99))
(assert (= temp10421_101 (select ARGNAME_stride_NAMEEND_VAL temp10421_100)))
(assert (= temp10421_102 #x0000000000000003))
(assert (= temp10421_103 temp10421_102))
(assert (= temp10421_104 (select ARGNAME_stride_NAMEEND_VAL temp10421_103)))
(assert (= temp10421_105 #x0000000000000004))
(assert (= temp10421_106 temp10421_105))
(assert (= temp10421_107 (select ARGNAME_stride_NAMEEND_VAL temp10421_106)))
(assert (= temp10421_108 #x0000000000000005))
(assert (= temp10421_109 temp10421_108))
(assert (= temp10421_110 (select ARGNAME_stride_NAMEEND_VAL temp10421_109)))
(assert (= temp10421_111 #x0000000000000000))
(assert (= temp10421_112 #x0000000000000000))
(assert (= temp10421_113 temp10421_112))
(assert (= temp10421_114 (select ARGNAME_stride_NAMEEND_VAL temp10421_113)))
(assert (= temp10421_115 #x0000000000000000))
(assert (= temp10421_116 #x0000000000000001))
(assert (= temp10421_117 temp10421_116))
(assert (= temp10421_118 (select ARGNAME_stride_NAMEEND_VAL temp10421_117)))
(assert (= temp10421_119 #x0000000000000000))
(assert (= temp10421_120 #x0000000000000002))
(assert (= temp10421_121 temp10421_120))
(assert (= temp10421_122 (select ARGNAME_stride_NAMEEND_VAL temp10421_121)))
(assert (= temp10421_123 #x0000000000000000))
(assert (= temp10421_124 #x0000000000000003))
(assert (= temp10421_125 temp10421_124))
(assert (= temp10421_126 (select ARGNAME_stride_NAMEEND_VAL temp10421_125)))
(assert (= temp10421_127 #x0000000000000000))
(assert (= temp10421_128 #x0000000000000004))
(assert (= temp10421_129 temp10421_128))
(assert (= temp10421_130 (select ARGNAME_stride_NAMEEND_VAL temp10421_129)))
(assert (= temp10421_131 #x0000000000000000))
(assert (= temp10421_132 #x0000000000000005))
(assert (= temp10421_133 temp10421_132))
(assert (= temp10421_134 (select ARGNAME_stride_NAMEEND_VAL temp10421_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10421_114 temp10421_111)
             (bvsle temp10421_118 temp10421_115)
             (bvsle temp10421_122 temp10421_119)
             (bvsle temp10421_126 temp10421_123)
             (bvsle temp10421_130 temp10421_127)
             (bvsle temp10421_134 temp10421_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10421_135 #x0000000000000000))
(assert (= var1191735 temp10421_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10421_136 #x0000000000000001))
(assert (= var1191747 temp10421_136))
(assert (= temp10421_137 #x0000000000000000))
(assert (= var1179826 temp10421_137))
(assert (= temp10421_138 #x0000000000000000))
(assert (= temp10421_139 temp10421_138))
(assert (= temp10421_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10421_139)))
(assert (= temp10421_141 #x0000000000000001))
(assert (= temp10421_142 temp10421_141))
(assert (= temp10421_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10421_142)))
(assert (= temp10421_144 #x0000000000000002))
(assert (= temp10421_145 temp10421_144))
(assert (= temp10421_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10421_145)))
(assert (= temp10421_147 #x0000000000000003))
(assert (= temp10421_148 temp10421_147))
(assert (= temp10421_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10421_148)))
(assert (= temp10421_150 #x0000000000000004))
(assert (= temp10421_151 temp10421_150))
(assert (= temp10421_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10421_151)))
(assert (= temp10421_153 #x0000000000000005))
(assert (= temp10421_154 temp10421_153))
(assert (= temp10421_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10421_154)))
(assert (= temp10421_157 var1179826))
(assert (= temp10421_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10421_157)))
(assert (= temp10421_156 temp10421_158))
(assert (= var1191780
   (ite (bvslt temp10421_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10421_159 #x0000000000000000))
(assert (= var1191780 temp10421_159))
(assert (= temp10421_160 #x0000000000000000))
(assert (= var1179826 temp10421_160))
(assert (= temp10421_162 var1179826))
(assert (= temp10421_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10421_162)))
(assert (= temp10421_161 temp10421_163))
(assert (= var1191802 (bvsmod temp10421_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10421_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10421_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10421_165 #x0000000000000001))
(assert (= var1191803 temp10421_165))
(assert (= temp10421_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10421_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10421_167 #x0000000000000001))
(assert (= var1191823 temp10421_167))
(assert (= temp10421_168 #x0000000000000001))
(assert (= var1180714 temp10421_168))
(assert (= temp10421_169 #x0000000000000000))
(assert (= temp10421_170 temp10421_169))
(assert (= temp10421_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10421_170)))
(assert (= temp10421_172 #x0000000000000001))
(assert (= temp10421_173 temp10421_172))
(assert (= temp10421_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10421_173)))
(assert (= temp10421_175 #x0000000000000002))
(assert (= temp10421_176 temp10421_175))
(assert (= temp10421_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10421_176)))
(assert (= temp10421_178 #x0000000000000003))
(assert (= temp10421_179 temp10421_178))
(assert (= temp10421_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10421_179)))
(assert (= temp10421_181 #x0000000000000004))
(assert (= temp10421_182 temp10421_181))
(assert (= temp10421_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10421_182)))
(assert (= temp10421_184 #x0000000000000005))
(assert (= temp10421_185 temp10421_184))
(assert (= temp10421_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10421_185)))
(assert (= temp10421_187 #x0000000000000000))
(assert (= temp10421_188
   (ite (bvslt var1180714 temp10421_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10421_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10421_188)))
(assert (= var1191831 temp10421_189))
(assert (bvslt (ite (bvslt var1180714 temp10421_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10421_190 #x0000000000000001))
(assert (= var1180714 temp10421_190))
(assert (= temp10421_192 var1180714))
(assert (= temp10421_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10421_192)))
(assert (= temp10421_191 temp10421_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10421_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10421_194 #x0000000000000001))
(assert (= var1191836 temp10421_194))
(assert (= temp10421_195 #x0000000000000000))
(assert (= var1179826 temp10421_195))
(assert (= temp10421_197 var1179826))
(assert (= temp10421_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10421_197)))
(assert (= temp10421_196 temp10421_198))
(assert (= temp10421_199 #x0000000000000002))
(assert (= var1586025 temp10421_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10421_200 #x0000000000000001))
(assert (= var1191993 temp10421_200))
(assert (= temp10421_201 #x0000000000000001))
(assert (= var2700303 temp10421_201))
(assert (= temp10421_202 #x0000000000000001))
(assert (= var2962447 temp10421_202))
(assert (= temp10421_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10421_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10421_204 #x0000000000000001))
(assert (= var211058 temp10421_204))
(assert (= temp10421_205 #x0000000000000001))
(assert (= var211188 temp10421_205))
(assert (= var3879401 var211188))
(assert (= temp10421_206 #x0000000000000000))
(assert (= var3866802 temp10421_206))
(assert (= temp10421_207 #x0000000000000000))
(assert (= temp10421_208
   (ite (bvslt var3866802 temp10421_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10421_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10421_208)))
(assert (= var3879420 temp10421_209))
(assert (bvslt (ite (bvslt var3866802 temp10421_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10421_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10421_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10421_211 #x0000000000000000))
(assert (= var3879421 temp10421_211))
(assert (= temp10421_212 #x0000000000000001))
(assert (= var3867690 temp10421_212))
(assert (= temp10421_213 #x0000000000000000))
(assert (= temp10421_214
   (ite (bvslt var3867690 temp10421_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10421_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10421_214)))
(assert (= var3879423 temp10421_215))
(assert (bvslt (ite (bvslt var3867690 temp10421_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10421_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10421_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10421_217 #x0000000000000001))
(assert (= var3879424 temp10421_217))
(assert (= temp10421_218 #x0000000000000000))
(assert (= var4079423 temp10421_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10421_219 #x0000000000000002))
(assert (= var4208259 temp10421_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10421_220 #x0000000000000000))
(assert (= var4273820 temp10421_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4469136 var211201))
(assert (= var4731280 var211201))
(assert (= temp10421_221 #x0000000000000001))
(assert (= var212414
   (ite (= ARGNAME_groups_NAMEEND temp10421_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10421_222 #x0000000000000001))
(assert (= var212414 temp10421_222))
(assert (= temp10421_223 #x0000000000000002))
(assert (= var5060227 temp10421_223))
(assert (= var5060229 (bvsub ARGNAME_weight_NAMEEND_DIM var5060227)))
(assert (= var5125772 var5060227))
(assert (= var5125773 var5060229))
(assert (= temp10421_224 #x0000000000000001))
(assert (= var211058 temp10421_224))
(model-add temp10421_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10421_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10421_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10421_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





