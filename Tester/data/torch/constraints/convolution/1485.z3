(declare-fun temp10774_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10774_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10774_3 () (_ BitVec 64))
(declare-fun temp10774_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10774_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10774_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10774_7 () (_ BitVec 64))
(declare-fun temp10774_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10774_9 () (_ BitVec 64))
(declare-fun temp10774_10 () (_ BitVec 64))
(declare-fun temp10774_11 () (_ BitVec 64))
(declare-fun temp10774_12 () (_ BitVec 64))
(declare-fun temp10774_13 () (_ BitVec 64))
(declare-fun temp10774_14 () (_ BitVec 64))
(declare-fun temp10774_15 () (_ BitVec 64))
(declare-fun temp10774_16 () (_ BitVec 64))
(declare-fun temp10774_17 () (_ BitVec 64))
(declare-fun temp10774_18 () (_ BitVec 64))
(declare-fun temp10774_19 () (_ BitVec 64))
(declare-fun temp10774_20 () (_ BitVec 64))
(declare-fun temp10774_21 () (_ BitVec 64))
(declare-fun temp10774_22 () (_ BitVec 64))
(declare-fun temp10774_23 () (_ BitVec 64))
(declare-fun temp10774_24 () (_ BitVec 64))
(declare-fun temp10774_25 () (_ BitVec 64))
(declare-fun temp10774_26 () (_ BitVec 64))
(declare-fun temp10774_27 () (_ BitVec 64))
(declare-fun temp10774_28 () (_ BitVec 64))
(declare-fun temp10774_29 () (_ BitVec 64))
(declare-fun temp10774_30 () (_ BitVec 64))
(declare-fun temp10774_31 () (_ BitVec 64))
(declare-fun temp10774_32 () (_ BitVec 64))
(declare-fun temp10774_33 () (_ BitVec 64))
(declare-fun temp10774_34 () (_ BitVec 64))
(declare-fun temp10774_35 () (_ BitVec 64))
(declare-fun temp10774_36 () (_ BitVec 64))
(declare-fun temp10774_37 () (_ BitVec 64))
(declare-fun temp10774_38 () (_ BitVec 64))
(declare-fun temp10774_39 () (_ BitVec 64))
(declare-fun temp10774_40 () (_ BitVec 64))
(declare-fun temp10774_41 () (_ BitVec 64))
(declare-fun temp10774_42 () (_ BitVec 64))
(declare-fun temp10774_43 () (_ BitVec 64))
(declare-fun temp10774_44 () (_ BitVec 64))
(declare-fun temp10774_45 () (_ BitVec 64))
(declare-fun temp10774_46 () (_ BitVec 64))
(declare-fun temp10774_47 () (_ BitVec 64))
(declare-fun temp10774_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10774_49 () (_ BitVec 64))
(declare-fun temp10774_50 () (_ BitVec 64))
(declare-fun temp10774_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10774_52 () (_ BitVec 64))
(declare-fun temp10774_53 () (_ BitVec 64))
(declare-fun temp10774_54 () (_ BitVec 64))
(declare-fun temp10774_55 () (_ BitVec 64))
(declare-fun temp10774_56 () (_ BitVec 64))
(declare-fun temp10774_57 () (_ BitVec 64))
(declare-fun temp10774_58 () (_ BitVec 64))
(declare-fun temp10774_59 () (_ BitVec 64))
(declare-fun temp10774_60 () (_ BitVec 64))
(declare-fun temp10774_61 () (_ BitVec 64))
(declare-fun temp10774_62 () (_ BitVec 64))
(declare-fun temp10774_63 () (_ BitVec 64))
(declare-fun temp10774_64 () (_ BitVec 64))
(declare-fun temp10774_65 () (_ BitVec 64))
(declare-fun temp10774_66 () (_ BitVec 64))
(declare-fun temp10774_67 () (_ BitVec 64))
(declare-fun temp10774_68 () (_ BitVec 64))
(declare-fun temp10774_69 () (_ BitVec 64))
(declare-fun temp10774_70 () (_ BitVec 64))
(declare-fun temp10774_71 () (_ BitVec 64))
(declare-fun temp10774_72 () (_ BitVec 64))
(declare-fun temp10774_73 () (_ BitVec 64))
(declare-fun temp10774_74 () (_ BitVec 64))
(declare-fun temp10774_75 () (_ BitVec 64))
(declare-fun temp10774_76 () (_ BitVec 64))
(declare-fun temp10774_77 () (_ BitVec 64))
(declare-fun temp10774_78 () (_ BitVec 64))
(declare-fun temp10774_79 () (_ BitVec 64))
(declare-fun temp10774_80 () (_ BitVec 64))
(declare-fun temp10774_81 () (_ BitVec 64))
(declare-fun temp10774_82 () (_ BitVec 64))
(declare-fun temp10774_83 () (_ BitVec 64))
(declare-fun temp10774_84 () (_ BitVec 64))
(declare-fun temp10774_85 () (_ BitVec 64))
(declare-fun temp10774_86 () (_ BitVec 64))
(declare-fun temp10774_87 () (_ BitVec 64))
(declare-fun temp10774_88 () (_ BitVec 64))
(declare-fun temp10774_89 () (_ BitVec 64))
(declare-fun temp10774_90 () (_ BitVec 64))
(declare-fun temp10774_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10774_92 () (_ BitVec 64))
(declare-fun temp10774_93 () (_ BitVec 64))
(declare-fun temp10774_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10774_95 () (_ BitVec 64))
(declare-fun temp10774_96 () (_ BitVec 64))
(declare-fun temp10774_97 () (_ BitVec 64))
(declare-fun temp10774_98 () (_ BitVec 64))
(declare-fun temp10774_99 () (_ BitVec 64))
(declare-fun temp10774_100 () (_ BitVec 64))
(declare-fun temp10774_101 () (_ BitVec 64))
(declare-fun temp10774_102 () (_ BitVec 64))
(declare-fun temp10774_103 () (_ BitVec 64))
(declare-fun temp10774_104 () (_ BitVec 64))
(declare-fun temp10774_105 () (_ BitVec 64))
(declare-fun temp10774_106 () (_ BitVec 64))
(declare-fun temp10774_107 () (_ BitVec 64))
(declare-fun temp10774_108 () (_ BitVec 64))
(declare-fun temp10774_109 () (_ BitVec 64))
(declare-fun temp10774_110 () (_ BitVec 64))
(declare-fun temp10774_111 () (_ BitVec 64))
(declare-fun temp10774_112 () (_ BitVec 64))
(declare-fun temp10774_113 () (_ BitVec 64))
(declare-fun temp10774_114 () (_ BitVec 64))
(declare-fun temp10774_115 () (_ BitVec 64))
(declare-fun temp10774_116 () (_ BitVec 64))
(declare-fun temp10774_117 () (_ BitVec 64))
(declare-fun temp10774_118 () (_ BitVec 64))
(declare-fun temp10774_119 () (_ BitVec 64))
(declare-fun temp10774_120 () (_ BitVec 64))
(declare-fun temp10774_121 () (_ BitVec 64))
(declare-fun temp10774_122 () (_ BitVec 64))
(declare-fun temp10774_123 () (_ BitVec 64))
(declare-fun temp10774_124 () (_ BitVec 64))
(declare-fun temp10774_125 () (_ BitVec 64))
(declare-fun temp10774_126 () (_ BitVec 64))
(declare-fun temp10774_127 () (_ BitVec 64))
(declare-fun temp10774_128 () (_ BitVec 64))
(declare-fun temp10774_129 () (_ BitVec 64))
(declare-fun temp10774_130 () (_ BitVec 64))
(declare-fun temp10774_131 () (_ BitVec 64))
(declare-fun temp10774_132 () (_ BitVec 64))
(declare-fun temp10774_133 () (_ BitVec 64))
(declare-fun temp10774_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10774_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10774_136 () (_ BitVec 64))
(declare-fun temp10774_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10774_138 () (_ BitVec 64))
(declare-fun temp10774_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10774_140 () (_ BitVec 64))
(declare-fun temp10774_141 () (_ BitVec 64))
(declare-fun temp10774_142 () (_ BitVec 64))
(declare-fun temp10774_143 () (_ BitVec 64))
(declare-fun temp10774_144 () (_ BitVec 64))
(declare-fun temp10774_145 () (_ BitVec 64))
(declare-fun temp10774_146 () (_ BitVec 64))
(declare-fun temp10774_147 () (_ BitVec 64))
(declare-fun temp10774_148 () (_ BitVec 64))
(declare-fun temp10774_149 () (_ BitVec 64))
(declare-fun temp10774_150 () (_ BitVec 64))
(declare-fun temp10774_151 () (_ BitVec 64))
(declare-fun temp10774_152 () (_ BitVec 64))
(declare-fun temp10774_153 () (_ BitVec 64))
(declare-fun temp10774_154 () (_ BitVec 64))
(declare-fun temp10774_155 () (_ BitVec 64))
(declare-fun temp10774_157 () (_ BitVec 64))
(declare-fun temp10774_158 () (_ BitVec 64))
(declare-fun temp10774_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10774_159 () (_ BitVec 64))
(declare-fun temp10774_160 () (_ BitVec 64))
(declare-fun temp10774_162 () (_ BitVec 64))
(declare-fun temp10774_163 () (_ BitVec 64))
(declare-fun temp10774_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10774_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10774_165 () (_ BitVec 64))
(declare-fun temp10774_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10774_167 () (_ BitVec 64))
(declare-fun temp10774_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10774_169 () (_ BitVec 64))
(declare-fun temp10774_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10774_171 () (_ BitVec 64))
(declare-fun temp10774_172 () (_ BitVec 64))
(declare-fun temp10774_173 () (_ BitVec 64))
(declare-fun temp10774_174 () (_ BitVec 64))
(declare-fun temp10774_175 () (_ BitVec 64))
(declare-fun temp10774_176 () (_ BitVec 64))
(declare-fun temp10774_177 () (_ BitVec 64))
(declare-fun temp10774_178 () (_ BitVec 64))
(declare-fun temp10774_179 () (_ BitVec 64))
(declare-fun temp10774_180 () (_ BitVec 64))
(declare-fun temp10774_181 () (_ BitVec 64))
(declare-fun temp10774_182 () (_ BitVec 64))
(declare-fun temp10774_183 () (_ BitVec 64))
(declare-fun temp10774_184 () (_ BitVec 64))
(declare-fun temp10774_185 () (_ BitVec 64))
(declare-fun temp10774_186 () (_ BitVec 64))
(declare-fun temp10774_187 () (_ BitVec 64))
(declare-fun temp10774_188 () (_ BitVec 64))
(declare-fun temp10774_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10774_190 () (_ BitVec 64))
(declare-fun temp10774_192 () (_ BitVec 64))
(declare-fun temp10774_193 () (_ BitVec 64))
(declare-fun temp10774_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10774_194 () (_ BitVec 64))
(declare-fun temp10774_195 () (_ BitVec 64))
(declare-fun temp10774_197 () (_ BitVec 64))
(declare-fun temp10774_198 () (_ BitVec 64))
(declare-fun temp10774_196 () (_ BitVec 64))
(declare-fun temp10774_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10774_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10774_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10774_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10774_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10774_204 () (_ BitVec 64))
(declare-fun temp10774_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10774_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10774_207 () (_ BitVec 64))
(declare-fun temp10774_208 () (_ BitVec 64))
(declare-fun temp10774_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10774_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10774_211 () (_ BitVec 64))
(declare-fun temp10774_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10774_213 () (_ BitVec 64))
(declare-fun temp10774_214 () (_ BitVec 64))
(declare-fun temp10774_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10774_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10774_217 () (_ BitVec 64))
(declare-fun temp10774_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10774_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10774_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp10774_221 () (_ BitVec 64))
(assert (= temp10774_1 #x0000000000000001))
(assert (= var77203 temp10774_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10774_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10774_2)))
(assert (= temp10774_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10774_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10774_4 #x0000000000000000))
(assert (= var210941 temp10774_4))
(assert (= temp10774_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10774_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10774_6 #x0000000000000000))
(assert (= var210986 temp10774_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10774_7 #x0000000000000000))
(assert (= temp10774_8 temp10774_7))
(assert (= temp10774_9 (select ARGNAME_padding_NAMEEND_VAL temp10774_8)))
(assert (= temp10774_10 #x0000000000000001))
(assert (= temp10774_11 temp10774_10))
(assert (= temp10774_12 (select ARGNAME_padding_NAMEEND_VAL temp10774_11)))
(assert (= temp10774_13 #x0000000000000002))
(assert (= temp10774_14 temp10774_13))
(assert (= temp10774_15 (select ARGNAME_padding_NAMEEND_VAL temp10774_14)))
(assert (= temp10774_16 #x0000000000000003))
(assert (= temp10774_17 temp10774_16))
(assert (= temp10774_18 (select ARGNAME_padding_NAMEEND_VAL temp10774_17)))
(assert (= temp10774_19 #x0000000000000004))
(assert (= temp10774_20 temp10774_19))
(assert (= temp10774_21 (select ARGNAME_padding_NAMEEND_VAL temp10774_20)))
(assert (= temp10774_22 #x0000000000000005))
(assert (= temp10774_23 temp10774_22))
(assert (= temp10774_24 (select ARGNAME_padding_NAMEEND_VAL temp10774_23)))
(assert (= temp10774_25 #x0000000000000000))
(assert (= temp10774_26 #x0000000000000000))
(assert (= temp10774_27 temp10774_26))
(assert (= temp10774_28 (select ARGNAME_padding_NAMEEND_VAL temp10774_27)))
(assert (= temp10774_29 #x0000000000000000))
(assert (= temp10774_30 #x0000000000000001))
(assert (= temp10774_31 temp10774_30))
(assert (= temp10774_32 (select ARGNAME_padding_NAMEEND_VAL temp10774_31)))
(assert (= temp10774_33 #x0000000000000000))
(assert (= temp10774_34 #x0000000000000002))
(assert (= temp10774_35 temp10774_34))
(assert (= temp10774_36 (select ARGNAME_padding_NAMEEND_VAL temp10774_35)))
(assert (= temp10774_37 #x0000000000000000))
(assert (= temp10774_38 #x0000000000000003))
(assert (= temp10774_39 temp10774_38))
(assert (= temp10774_40 (select ARGNAME_padding_NAMEEND_VAL temp10774_39)))
(assert (= temp10774_41 #x0000000000000000))
(assert (= temp10774_42 #x0000000000000004))
(assert (= temp10774_43 temp10774_42))
(assert (= temp10774_44 (select ARGNAME_padding_NAMEEND_VAL temp10774_43)))
(assert (= temp10774_45 #x0000000000000000))
(assert (= temp10774_46 #x0000000000000005))
(assert (= temp10774_47 temp10774_46))
(assert (= temp10774_48 (select ARGNAME_padding_NAMEEND_VAL temp10774_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10774_28 temp10774_25)
             (bvslt temp10774_32 temp10774_29)
             (bvslt temp10774_36 temp10774_33)
             (bvslt temp10774_40 temp10774_37)
             (bvslt temp10774_44 temp10774_41)
             (bvslt temp10774_48 temp10774_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10774_49 #x0000000000000000))
(assert (= var1191714 temp10774_49))
(assert (= temp10774_50 #x0000000000000000))
(assert (= temp10774_51 temp10774_50))
(assert (= temp10774_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10774_51)))
(assert (= temp10774_53 #x0000000000000001))
(assert (= temp10774_54 temp10774_53))
(assert (= temp10774_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10774_54)))
(assert (= temp10774_56 #x0000000000000002))
(assert (= temp10774_57 temp10774_56))
(assert (= temp10774_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10774_57)))
(assert (= temp10774_59 #x0000000000000003))
(assert (= temp10774_60 temp10774_59))
(assert (= temp10774_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10774_60)))
(assert (= temp10774_62 #x0000000000000004))
(assert (= temp10774_63 temp10774_62))
(assert (= temp10774_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10774_63)))
(assert (= temp10774_65 #x0000000000000005))
(assert (= temp10774_66 temp10774_65))
(assert (= temp10774_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10774_66)))
(assert (= temp10774_68 #x0000000000000000))
(assert (= temp10774_69 #x0000000000000000))
(assert (= temp10774_70 temp10774_69))
(assert (= temp10774_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10774_70)))
(assert (= temp10774_72 #x0000000000000000))
(assert (= temp10774_73 #x0000000000000001))
(assert (= temp10774_74 temp10774_73))
(assert (= temp10774_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10774_74)))
(assert (= temp10774_76 #x0000000000000000))
(assert (= temp10774_77 #x0000000000000002))
(assert (= temp10774_78 temp10774_77))
(assert (= temp10774_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10774_78)))
(assert (= temp10774_80 #x0000000000000000))
(assert (= temp10774_81 #x0000000000000003))
(assert (= temp10774_82 temp10774_81))
(assert (= temp10774_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10774_82)))
(assert (= temp10774_84 #x0000000000000000))
(assert (= temp10774_85 #x0000000000000004))
(assert (= temp10774_86 temp10774_85))
(assert (= temp10774_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10774_86)))
(assert (= temp10774_88 #x0000000000000000))
(assert (= temp10774_89 #x0000000000000005))
(assert (= temp10774_90 temp10774_89))
(assert (= temp10774_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10774_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10774_71 temp10774_68)
             (bvslt temp10774_75 temp10774_72)
             (bvslt temp10774_79 temp10774_76)
             (bvslt temp10774_83 temp10774_80)
             (bvslt temp10774_87 temp10774_84)
             (bvslt temp10774_91 temp10774_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10774_92 #x0000000000000000))
(assert (= var1191725 temp10774_92))
(assert (= temp10774_93 #x0000000000000000))
(assert (= temp10774_94 temp10774_93))
(assert (= temp10774_95 (select ARGNAME_stride_NAMEEND_VAL temp10774_94)))
(assert (= temp10774_96 #x0000000000000001))
(assert (= temp10774_97 temp10774_96))
(assert (= temp10774_98 (select ARGNAME_stride_NAMEEND_VAL temp10774_97)))
(assert (= temp10774_99 #x0000000000000002))
(assert (= temp10774_100 temp10774_99))
(assert (= temp10774_101 (select ARGNAME_stride_NAMEEND_VAL temp10774_100)))
(assert (= temp10774_102 #x0000000000000003))
(assert (= temp10774_103 temp10774_102))
(assert (= temp10774_104 (select ARGNAME_stride_NAMEEND_VAL temp10774_103)))
(assert (= temp10774_105 #x0000000000000004))
(assert (= temp10774_106 temp10774_105))
(assert (= temp10774_107 (select ARGNAME_stride_NAMEEND_VAL temp10774_106)))
(assert (= temp10774_108 #x0000000000000005))
(assert (= temp10774_109 temp10774_108))
(assert (= temp10774_110 (select ARGNAME_stride_NAMEEND_VAL temp10774_109)))
(assert (= temp10774_111 #x0000000000000000))
(assert (= temp10774_112 #x0000000000000000))
(assert (= temp10774_113 temp10774_112))
(assert (= temp10774_114 (select ARGNAME_stride_NAMEEND_VAL temp10774_113)))
(assert (= temp10774_115 #x0000000000000000))
(assert (= temp10774_116 #x0000000000000001))
(assert (= temp10774_117 temp10774_116))
(assert (= temp10774_118 (select ARGNAME_stride_NAMEEND_VAL temp10774_117)))
(assert (= temp10774_119 #x0000000000000000))
(assert (= temp10774_120 #x0000000000000002))
(assert (= temp10774_121 temp10774_120))
(assert (= temp10774_122 (select ARGNAME_stride_NAMEEND_VAL temp10774_121)))
(assert (= temp10774_123 #x0000000000000000))
(assert (= temp10774_124 #x0000000000000003))
(assert (= temp10774_125 temp10774_124))
(assert (= temp10774_126 (select ARGNAME_stride_NAMEEND_VAL temp10774_125)))
(assert (= temp10774_127 #x0000000000000000))
(assert (= temp10774_128 #x0000000000000004))
(assert (= temp10774_129 temp10774_128))
(assert (= temp10774_130 (select ARGNAME_stride_NAMEEND_VAL temp10774_129)))
(assert (= temp10774_131 #x0000000000000000))
(assert (= temp10774_132 #x0000000000000005))
(assert (= temp10774_133 temp10774_132))
(assert (= temp10774_134 (select ARGNAME_stride_NAMEEND_VAL temp10774_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10774_114 temp10774_111)
             (bvsle temp10774_118 temp10774_115)
             (bvsle temp10774_122 temp10774_119)
             (bvsle temp10774_126 temp10774_123)
             (bvsle temp10774_130 temp10774_127)
             (bvsle temp10774_134 temp10774_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10774_135 #x0000000000000000))
(assert (= var1191735 temp10774_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10774_136 #x0000000000000001))
(assert (= var1191747 temp10774_136))
(assert (= temp10774_137 #x0000000000000000))
(assert (= var1179826 temp10774_137))
(assert (= temp10774_138 #x0000000000000000))
(assert (= temp10774_139 temp10774_138))
(assert (= temp10774_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10774_139)))
(assert (= temp10774_141 #x0000000000000001))
(assert (= temp10774_142 temp10774_141))
(assert (= temp10774_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10774_142)))
(assert (= temp10774_144 #x0000000000000002))
(assert (= temp10774_145 temp10774_144))
(assert (= temp10774_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10774_145)))
(assert (= temp10774_147 #x0000000000000003))
(assert (= temp10774_148 temp10774_147))
(assert (= temp10774_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10774_148)))
(assert (= temp10774_150 #x0000000000000004))
(assert (= temp10774_151 temp10774_150))
(assert (= temp10774_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10774_151)))
(assert (= temp10774_153 #x0000000000000005))
(assert (= temp10774_154 temp10774_153))
(assert (= temp10774_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10774_154)))
(assert (= temp10774_157 var1179826))
(assert (= temp10774_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10774_157)))
(assert (= temp10774_156 temp10774_158))
(assert (= var1191780
   (ite (bvslt temp10774_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10774_159 #x0000000000000000))
(assert (= var1191780 temp10774_159))
(assert (= temp10774_160 #x0000000000000000))
(assert (= var1179826 temp10774_160))
(assert (= temp10774_162 var1179826))
(assert (= temp10774_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10774_162)))
(assert (= temp10774_161 temp10774_163))
(assert (= var1191802 (bvsmod temp10774_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10774_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10774_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10774_165 #x0000000000000001))
(assert (= var1191803 temp10774_165))
(assert (= temp10774_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10774_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10774_167 #x0000000000000001))
(assert (= var1191823 temp10774_167))
(assert (= temp10774_168 #x0000000000000001))
(assert (= var1180714 temp10774_168))
(assert (= temp10774_169 #x0000000000000000))
(assert (= temp10774_170 temp10774_169))
(assert (= temp10774_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10774_170)))
(assert (= temp10774_172 #x0000000000000001))
(assert (= temp10774_173 temp10774_172))
(assert (= temp10774_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10774_173)))
(assert (= temp10774_175 #x0000000000000002))
(assert (= temp10774_176 temp10774_175))
(assert (= temp10774_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10774_176)))
(assert (= temp10774_178 #x0000000000000003))
(assert (= temp10774_179 temp10774_178))
(assert (= temp10774_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10774_179)))
(assert (= temp10774_181 #x0000000000000004))
(assert (= temp10774_182 temp10774_181))
(assert (= temp10774_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10774_182)))
(assert (= temp10774_184 #x0000000000000005))
(assert (= temp10774_185 temp10774_184))
(assert (= temp10774_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10774_185)))
(assert (= temp10774_187 #x0000000000000000))
(assert (= temp10774_188
   (ite (bvslt var1180714 temp10774_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10774_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10774_188)))
(assert (= var1191831 temp10774_189))
(assert (bvslt (ite (bvslt var1180714 temp10774_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10774_190 #x0000000000000001))
(assert (= var1180714 temp10774_190))
(assert (= temp10774_192 var1180714))
(assert (= temp10774_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10774_192)))
(assert (= temp10774_191 temp10774_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10774_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10774_194 #x0000000000000001))
(assert (= var1191836 temp10774_194))
(assert (= temp10774_195 #x0000000000000000))
(assert (= var1179826 temp10774_195))
(assert (= temp10774_197 var1179826))
(assert (= temp10774_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10774_197)))
(assert (= temp10774_196 temp10774_198))
(assert (= temp10774_199 #x0000000000000002))
(assert (= var1586025 temp10774_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10774_200 #x0000000000000001))
(assert (= var1191993 temp10774_200))
(assert (= temp10774_201 #x0000000000000001))
(assert (= var2700303 temp10774_201))
(assert (= temp10774_202 #x0000000000000001))
(assert (= var2962447 temp10774_202))
(assert (= temp10774_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10774_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10774_204 #x0000000000000001))
(assert (= var211058 temp10774_204))
(assert (= temp10774_205 #x0000000000000001))
(assert (= var211188 temp10774_205))
(assert (= var3879401 var211188))
(assert (= temp10774_206 #x0000000000000000))
(assert (= var3866802 temp10774_206))
(assert (= temp10774_207 #x0000000000000000))
(assert (= temp10774_208
   (ite (bvslt var3866802 temp10774_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10774_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10774_208)))
(assert (= var3879420 temp10774_209))
(assert (bvslt (ite (bvslt var3866802 temp10774_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10774_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10774_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10774_211 #x0000000000000000))
(assert (= var3879421 temp10774_211))
(assert (= temp10774_212 #x0000000000000001))
(assert (= var3867690 temp10774_212))
(assert (= temp10774_213 #x0000000000000000))
(assert (= temp10774_214
   (ite (bvslt var3867690 temp10774_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10774_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10774_214)))
(assert (= var3879423 temp10774_215))
(assert (bvslt (ite (bvslt var3867690 temp10774_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10774_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10774_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10774_217 #x0000000000000001))
(assert (= var3879424 temp10774_217))
(assert (= temp10774_218 #x0000000000000000))
(assert (= var4133117 temp10774_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10774_219 #x0000000000000002))
(assert (= var4339331 temp10774_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10774_220 #x0000000000000000))
(assert (= var4404892 temp10774_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp10774_221 #x0000000000000001))
(assert (= var211058 temp10774_221))
(model-add temp10774_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10774_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10774_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10774_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






