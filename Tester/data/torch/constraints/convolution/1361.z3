(declare-fun temp10545_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10545_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10545_3 () (_ BitVec 64))
(declare-fun temp10545_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10545_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10545_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10545_7 () (_ BitVec 64))
(declare-fun temp10545_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10545_9 () (_ BitVec 64))
(declare-fun temp10545_10 () (_ BitVec 64))
(declare-fun temp10545_11 () (_ BitVec 64))
(declare-fun temp10545_12 () (_ BitVec 64))
(declare-fun temp10545_13 () (_ BitVec 64))
(declare-fun temp10545_14 () (_ BitVec 64))
(declare-fun temp10545_15 () (_ BitVec 64))
(declare-fun temp10545_16 () (_ BitVec 64))
(declare-fun temp10545_17 () (_ BitVec 64))
(declare-fun temp10545_18 () (_ BitVec 64))
(declare-fun temp10545_19 () (_ BitVec 64))
(declare-fun temp10545_20 () (_ BitVec 64))
(declare-fun temp10545_21 () (_ BitVec 64))
(declare-fun temp10545_22 () (_ BitVec 64))
(declare-fun temp10545_23 () (_ BitVec 64))
(declare-fun temp10545_24 () (_ BitVec 64))
(declare-fun temp10545_25 () (_ BitVec 64))
(declare-fun temp10545_26 () (_ BitVec 64))
(declare-fun temp10545_27 () (_ BitVec 64))
(declare-fun temp10545_28 () (_ BitVec 64))
(declare-fun temp10545_29 () (_ BitVec 64))
(declare-fun temp10545_30 () (_ BitVec 64))
(declare-fun temp10545_31 () (_ BitVec 64))
(declare-fun temp10545_32 () (_ BitVec 64))
(declare-fun temp10545_33 () (_ BitVec 64))
(declare-fun temp10545_34 () (_ BitVec 64))
(declare-fun temp10545_35 () (_ BitVec 64))
(declare-fun temp10545_36 () (_ BitVec 64))
(declare-fun temp10545_37 () (_ BitVec 64))
(declare-fun temp10545_38 () (_ BitVec 64))
(declare-fun temp10545_39 () (_ BitVec 64))
(declare-fun temp10545_40 () (_ BitVec 64))
(declare-fun temp10545_41 () (_ BitVec 64))
(declare-fun temp10545_42 () (_ BitVec 64))
(declare-fun temp10545_43 () (_ BitVec 64))
(declare-fun temp10545_44 () (_ BitVec 64))
(declare-fun temp10545_45 () (_ BitVec 64))
(declare-fun temp10545_46 () (_ BitVec 64))
(declare-fun temp10545_47 () (_ BitVec 64))
(declare-fun temp10545_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10545_49 () (_ BitVec 64))
(declare-fun temp10545_50 () (_ BitVec 64))
(declare-fun temp10545_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10545_52 () (_ BitVec 64))
(declare-fun temp10545_53 () (_ BitVec 64))
(declare-fun temp10545_54 () (_ BitVec 64))
(declare-fun temp10545_55 () (_ BitVec 64))
(declare-fun temp10545_56 () (_ BitVec 64))
(declare-fun temp10545_57 () (_ BitVec 64))
(declare-fun temp10545_58 () (_ BitVec 64))
(declare-fun temp10545_59 () (_ BitVec 64))
(declare-fun temp10545_60 () (_ BitVec 64))
(declare-fun temp10545_61 () (_ BitVec 64))
(declare-fun temp10545_62 () (_ BitVec 64))
(declare-fun temp10545_63 () (_ BitVec 64))
(declare-fun temp10545_64 () (_ BitVec 64))
(declare-fun temp10545_65 () (_ BitVec 64))
(declare-fun temp10545_66 () (_ BitVec 64))
(declare-fun temp10545_67 () (_ BitVec 64))
(declare-fun temp10545_68 () (_ BitVec 64))
(declare-fun temp10545_69 () (_ BitVec 64))
(declare-fun temp10545_70 () (_ BitVec 64))
(declare-fun temp10545_71 () (_ BitVec 64))
(declare-fun temp10545_72 () (_ BitVec 64))
(declare-fun temp10545_73 () (_ BitVec 64))
(declare-fun temp10545_74 () (_ BitVec 64))
(declare-fun temp10545_75 () (_ BitVec 64))
(declare-fun temp10545_76 () (_ BitVec 64))
(declare-fun temp10545_77 () (_ BitVec 64))
(declare-fun temp10545_78 () (_ BitVec 64))
(declare-fun temp10545_79 () (_ BitVec 64))
(declare-fun temp10545_80 () (_ BitVec 64))
(declare-fun temp10545_81 () (_ BitVec 64))
(declare-fun temp10545_82 () (_ BitVec 64))
(declare-fun temp10545_83 () (_ BitVec 64))
(declare-fun temp10545_84 () (_ BitVec 64))
(declare-fun temp10545_85 () (_ BitVec 64))
(declare-fun temp10545_86 () (_ BitVec 64))
(declare-fun temp10545_87 () (_ BitVec 64))
(declare-fun temp10545_88 () (_ BitVec 64))
(declare-fun temp10545_89 () (_ BitVec 64))
(declare-fun temp10545_90 () (_ BitVec 64))
(declare-fun temp10545_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10545_92 () (_ BitVec 64))
(declare-fun temp10545_93 () (_ BitVec 64))
(declare-fun temp10545_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10545_95 () (_ BitVec 64))
(declare-fun temp10545_96 () (_ BitVec 64))
(declare-fun temp10545_97 () (_ BitVec 64))
(declare-fun temp10545_98 () (_ BitVec 64))
(declare-fun temp10545_99 () (_ BitVec 64))
(declare-fun temp10545_100 () (_ BitVec 64))
(declare-fun temp10545_101 () (_ BitVec 64))
(declare-fun temp10545_102 () (_ BitVec 64))
(declare-fun temp10545_103 () (_ BitVec 64))
(declare-fun temp10545_104 () (_ BitVec 64))
(declare-fun temp10545_105 () (_ BitVec 64))
(declare-fun temp10545_106 () (_ BitVec 64))
(declare-fun temp10545_107 () (_ BitVec 64))
(declare-fun temp10545_108 () (_ BitVec 64))
(declare-fun temp10545_109 () (_ BitVec 64))
(declare-fun temp10545_110 () (_ BitVec 64))
(declare-fun temp10545_111 () (_ BitVec 64))
(declare-fun temp10545_112 () (_ BitVec 64))
(declare-fun temp10545_113 () (_ BitVec 64))
(declare-fun temp10545_114 () (_ BitVec 64))
(declare-fun temp10545_115 () (_ BitVec 64))
(declare-fun temp10545_116 () (_ BitVec 64))
(declare-fun temp10545_117 () (_ BitVec 64))
(declare-fun temp10545_118 () (_ BitVec 64))
(declare-fun temp10545_119 () (_ BitVec 64))
(declare-fun temp10545_120 () (_ BitVec 64))
(declare-fun temp10545_121 () (_ BitVec 64))
(declare-fun temp10545_122 () (_ BitVec 64))
(declare-fun temp10545_123 () (_ BitVec 64))
(declare-fun temp10545_124 () (_ BitVec 64))
(declare-fun temp10545_125 () (_ BitVec 64))
(declare-fun temp10545_126 () (_ BitVec 64))
(declare-fun temp10545_127 () (_ BitVec 64))
(declare-fun temp10545_128 () (_ BitVec 64))
(declare-fun temp10545_129 () (_ BitVec 64))
(declare-fun temp10545_130 () (_ BitVec 64))
(declare-fun temp10545_131 () (_ BitVec 64))
(declare-fun temp10545_132 () (_ BitVec 64))
(declare-fun temp10545_133 () (_ BitVec 64))
(declare-fun temp10545_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10545_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10545_136 () (_ BitVec 64))
(declare-fun temp10545_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10545_138 () (_ BitVec 64))
(declare-fun temp10545_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10545_140 () (_ BitVec 64))
(declare-fun temp10545_141 () (_ BitVec 64))
(declare-fun temp10545_142 () (_ BitVec 64))
(declare-fun temp10545_143 () (_ BitVec 64))
(declare-fun temp10545_144 () (_ BitVec 64))
(declare-fun temp10545_145 () (_ BitVec 64))
(declare-fun temp10545_146 () (_ BitVec 64))
(declare-fun temp10545_147 () (_ BitVec 64))
(declare-fun temp10545_148 () (_ BitVec 64))
(declare-fun temp10545_149 () (_ BitVec 64))
(declare-fun temp10545_150 () (_ BitVec 64))
(declare-fun temp10545_151 () (_ BitVec 64))
(declare-fun temp10545_152 () (_ BitVec 64))
(declare-fun temp10545_153 () (_ BitVec 64))
(declare-fun temp10545_154 () (_ BitVec 64))
(declare-fun temp10545_155 () (_ BitVec 64))
(declare-fun temp10545_157 () (_ BitVec 64))
(declare-fun temp10545_158 () (_ BitVec 64))
(declare-fun temp10545_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10545_159 () (_ BitVec 64))
(declare-fun temp10545_160 () (_ BitVec 64))
(declare-fun temp10545_162 () (_ BitVec 64))
(declare-fun temp10545_163 () (_ BitVec 64))
(declare-fun temp10545_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10545_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10545_165 () (_ BitVec 64))
(declare-fun temp10545_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10545_167 () (_ BitVec 64))
(declare-fun temp10545_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10545_169 () (_ BitVec 64))
(declare-fun temp10545_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10545_171 () (_ BitVec 64))
(declare-fun temp10545_172 () (_ BitVec 64))
(declare-fun temp10545_173 () (_ BitVec 64))
(declare-fun temp10545_174 () (_ BitVec 64))
(declare-fun temp10545_175 () (_ BitVec 64))
(declare-fun temp10545_176 () (_ BitVec 64))
(declare-fun temp10545_177 () (_ BitVec 64))
(declare-fun temp10545_178 () (_ BitVec 64))
(declare-fun temp10545_179 () (_ BitVec 64))
(declare-fun temp10545_180 () (_ BitVec 64))
(declare-fun temp10545_181 () (_ BitVec 64))
(declare-fun temp10545_182 () (_ BitVec 64))
(declare-fun temp10545_183 () (_ BitVec 64))
(declare-fun temp10545_184 () (_ BitVec 64))
(declare-fun temp10545_185 () (_ BitVec 64))
(declare-fun temp10545_186 () (_ BitVec 64))
(declare-fun temp10545_187 () (_ BitVec 64))
(declare-fun temp10545_188 () (_ BitVec 64))
(declare-fun temp10545_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10545_190 () (_ BitVec 64))
(declare-fun temp10545_192 () (_ BitVec 64))
(declare-fun temp10545_193 () (_ BitVec 64))
(declare-fun temp10545_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10545_194 () (_ BitVec 64))
(declare-fun temp10545_195 () (_ BitVec 64))
(declare-fun temp10545_197 () (_ BitVec 64))
(declare-fun temp10545_198 () (_ BitVec 64))
(declare-fun temp10545_196 () (_ BitVec 64))
(declare-fun temp10545_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10545_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10545_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10545_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10545_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10545_204 () (_ BitVec 64))
(declare-fun temp10545_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10545_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10545_207 () (_ BitVec 64))
(declare-fun temp10545_208 () (_ BitVec 64))
(declare-fun temp10545_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10545_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10545_211 () (_ BitVec 64))
(declare-fun temp10545_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10545_213 () (_ BitVec 64))
(declare-fun temp10545_214 () (_ BitVec 64))
(declare-fun temp10545_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10545_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10545_217 () (_ BitVec 64))
(declare-fun temp10545_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10545_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10545_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var5124496 () (_ BitVec 64))
(declare-fun var211388 () (_ BitVec 64))
(declare-fun temp10545_221 () (_ BitVec 64))
(declare-fun var211389 () (_ BitVec 64))
(declare-fun var6045517 () (_ BitVec 64))
(declare-fun temp10545_223 () (_ BitVec 64))
(declare-fun temp10545_222 () (_ BitVec 64))
(declare-fun temp10545_224 () (_ BitVec 64))
(declare-fun var6884842 () (_ BitVec 64))
(declare-fun temp10545_226 () (_ BitVec 64))
(declare-fun temp10545_225 () (_ BitVec 64))
(declare-fun temp10545_227 () (_ BitVec 64))
(assert (= temp10545_1 #x0000000000000001))
(assert (= var77203 temp10545_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10545_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10545_2)))
(assert (= temp10545_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10545_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10545_4 #x0000000000000000))
(assert (= var210941 temp10545_4))
(assert (= temp10545_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10545_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10545_6 #x0000000000000000))
(assert (= var210986 temp10545_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10545_7 #x0000000000000000))
(assert (= temp10545_8 temp10545_7))
(assert (= temp10545_9 (select ARGNAME_padding_NAMEEND_VAL temp10545_8)))
(assert (= temp10545_10 #x0000000000000001))
(assert (= temp10545_11 temp10545_10))
(assert (= temp10545_12 (select ARGNAME_padding_NAMEEND_VAL temp10545_11)))
(assert (= temp10545_13 #x0000000000000002))
(assert (= temp10545_14 temp10545_13))
(assert (= temp10545_15 (select ARGNAME_padding_NAMEEND_VAL temp10545_14)))
(assert (= temp10545_16 #x0000000000000003))
(assert (= temp10545_17 temp10545_16))
(assert (= temp10545_18 (select ARGNAME_padding_NAMEEND_VAL temp10545_17)))
(assert (= temp10545_19 #x0000000000000004))
(assert (= temp10545_20 temp10545_19))
(assert (= temp10545_21 (select ARGNAME_padding_NAMEEND_VAL temp10545_20)))
(assert (= temp10545_22 #x0000000000000005))
(assert (= temp10545_23 temp10545_22))
(assert (= temp10545_24 (select ARGNAME_padding_NAMEEND_VAL temp10545_23)))
(assert (= temp10545_25 #x0000000000000000))
(assert (= temp10545_26 #x0000000000000000))
(assert (= temp10545_27 temp10545_26))
(assert (= temp10545_28 (select ARGNAME_padding_NAMEEND_VAL temp10545_27)))
(assert (= temp10545_29 #x0000000000000000))
(assert (= temp10545_30 #x0000000000000001))
(assert (= temp10545_31 temp10545_30))
(assert (= temp10545_32 (select ARGNAME_padding_NAMEEND_VAL temp10545_31)))
(assert (= temp10545_33 #x0000000000000000))
(assert (= temp10545_34 #x0000000000000002))
(assert (= temp10545_35 temp10545_34))
(assert (= temp10545_36 (select ARGNAME_padding_NAMEEND_VAL temp10545_35)))
(assert (= temp10545_37 #x0000000000000000))
(assert (= temp10545_38 #x0000000000000003))
(assert (= temp10545_39 temp10545_38))
(assert (= temp10545_40 (select ARGNAME_padding_NAMEEND_VAL temp10545_39)))
(assert (= temp10545_41 #x0000000000000000))
(assert (= temp10545_42 #x0000000000000004))
(assert (= temp10545_43 temp10545_42))
(assert (= temp10545_44 (select ARGNAME_padding_NAMEEND_VAL temp10545_43)))
(assert (= temp10545_45 #x0000000000000000))
(assert (= temp10545_46 #x0000000000000005))
(assert (= temp10545_47 temp10545_46))
(assert (= temp10545_48 (select ARGNAME_padding_NAMEEND_VAL temp10545_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10545_28 temp10545_25)
             (bvslt temp10545_32 temp10545_29)
             (bvslt temp10545_36 temp10545_33)
             (bvslt temp10545_40 temp10545_37)
             (bvslt temp10545_44 temp10545_41)
             (bvslt temp10545_48 temp10545_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10545_49 #x0000000000000000))
(assert (= var1191714 temp10545_49))
(assert (= temp10545_50 #x0000000000000000))
(assert (= temp10545_51 temp10545_50))
(assert (= temp10545_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10545_51)))
(assert (= temp10545_53 #x0000000000000001))
(assert (= temp10545_54 temp10545_53))
(assert (= temp10545_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10545_54)))
(assert (= temp10545_56 #x0000000000000002))
(assert (= temp10545_57 temp10545_56))
(assert (= temp10545_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10545_57)))
(assert (= temp10545_59 #x0000000000000003))
(assert (= temp10545_60 temp10545_59))
(assert (= temp10545_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10545_60)))
(assert (= temp10545_62 #x0000000000000004))
(assert (= temp10545_63 temp10545_62))
(assert (= temp10545_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10545_63)))
(assert (= temp10545_65 #x0000000000000005))
(assert (= temp10545_66 temp10545_65))
(assert (= temp10545_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10545_66)))
(assert (= temp10545_68 #x0000000000000000))
(assert (= temp10545_69 #x0000000000000000))
(assert (= temp10545_70 temp10545_69))
(assert (= temp10545_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10545_70)))
(assert (= temp10545_72 #x0000000000000000))
(assert (= temp10545_73 #x0000000000000001))
(assert (= temp10545_74 temp10545_73))
(assert (= temp10545_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10545_74)))
(assert (= temp10545_76 #x0000000000000000))
(assert (= temp10545_77 #x0000000000000002))
(assert (= temp10545_78 temp10545_77))
(assert (= temp10545_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10545_78)))
(assert (= temp10545_80 #x0000000000000000))
(assert (= temp10545_81 #x0000000000000003))
(assert (= temp10545_82 temp10545_81))
(assert (= temp10545_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10545_82)))
(assert (= temp10545_84 #x0000000000000000))
(assert (= temp10545_85 #x0000000000000004))
(assert (= temp10545_86 temp10545_85))
(assert (= temp10545_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10545_86)))
(assert (= temp10545_88 #x0000000000000000))
(assert (= temp10545_89 #x0000000000000005))
(assert (= temp10545_90 temp10545_89))
(assert (= temp10545_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10545_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10545_71 temp10545_68)
             (bvslt temp10545_75 temp10545_72)
             (bvslt temp10545_79 temp10545_76)
             (bvslt temp10545_83 temp10545_80)
             (bvslt temp10545_87 temp10545_84)
             (bvslt temp10545_91 temp10545_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10545_92 #x0000000000000000))
(assert (= var1191725 temp10545_92))
(assert (= temp10545_93 #x0000000000000000))
(assert (= temp10545_94 temp10545_93))
(assert (= temp10545_95 (select ARGNAME_stride_NAMEEND_VAL temp10545_94)))
(assert (= temp10545_96 #x0000000000000001))
(assert (= temp10545_97 temp10545_96))
(assert (= temp10545_98 (select ARGNAME_stride_NAMEEND_VAL temp10545_97)))
(assert (= temp10545_99 #x0000000000000002))
(assert (= temp10545_100 temp10545_99))
(assert (= temp10545_101 (select ARGNAME_stride_NAMEEND_VAL temp10545_100)))
(assert (= temp10545_102 #x0000000000000003))
(assert (= temp10545_103 temp10545_102))
(assert (= temp10545_104 (select ARGNAME_stride_NAMEEND_VAL temp10545_103)))
(assert (= temp10545_105 #x0000000000000004))
(assert (= temp10545_106 temp10545_105))
(assert (= temp10545_107 (select ARGNAME_stride_NAMEEND_VAL temp10545_106)))
(assert (= temp10545_108 #x0000000000000005))
(assert (= temp10545_109 temp10545_108))
(assert (= temp10545_110 (select ARGNAME_stride_NAMEEND_VAL temp10545_109)))
(assert (= temp10545_111 #x0000000000000000))
(assert (= temp10545_112 #x0000000000000000))
(assert (= temp10545_113 temp10545_112))
(assert (= temp10545_114 (select ARGNAME_stride_NAMEEND_VAL temp10545_113)))
(assert (= temp10545_115 #x0000000000000000))
(assert (= temp10545_116 #x0000000000000001))
(assert (= temp10545_117 temp10545_116))
(assert (= temp10545_118 (select ARGNAME_stride_NAMEEND_VAL temp10545_117)))
(assert (= temp10545_119 #x0000000000000000))
(assert (= temp10545_120 #x0000000000000002))
(assert (= temp10545_121 temp10545_120))
(assert (= temp10545_122 (select ARGNAME_stride_NAMEEND_VAL temp10545_121)))
(assert (= temp10545_123 #x0000000000000000))
(assert (= temp10545_124 #x0000000000000003))
(assert (= temp10545_125 temp10545_124))
(assert (= temp10545_126 (select ARGNAME_stride_NAMEEND_VAL temp10545_125)))
(assert (= temp10545_127 #x0000000000000000))
(assert (= temp10545_128 #x0000000000000004))
(assert (= temp10545_129 temp10545_128))
(assert (= temp10545_130 (select ARGNAME_stride_NAMEEND_VAL temp10545_129)))
(assert (= temp10545_131 #x0000000000000000))
(assert (= temp10545_132 #x0000000000000005))
(assert (= temp10545_133 temp10545_132))
(assert (= temp10545_134 (select ARGNAME_stride_NAMEEND_VAL temp10545_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10545_114 temp10545_111)
             (bvsle temp10545_118 temp10545_115)
             (bvsle temp10545_122 temp10545_119)
             (bvsle temp10545_126 temp10545_123)
             (bvsle temp10545_130 temp10545_127)
             (bvsle temp10545_134 temp10545_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10545_135 #x0000000000000000))
(assert (= var1191735 temp10545_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10545_136 #x0000000000000001))
(assert (= var1191747 temp10545_136))
(assert (= temp10545_137 #x0000000000000000))
(assert (= var1179826 temp10545_137))
(assert (= temp10545_138 #x0000000000000000))
(assert (= temp10545_139 temp10545_138))
(assert (= temp10545_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10545_139)))
(assert (= temp10545_141 #x0000000000000001))
(assert (= temp10545_142 temp10545_141))
(assert (= temp10545_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10545_142)))
(assert (= temp10545_144 #x0000000000000002))
(assert (= temp10545_145 temp10545_144))
(assert (= temp10545_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10545_145)))
(assert (= temp10545_147 #x0000000000000003))
(assert (= temp10545_148 temp10545_147))
(assert (= temp10545_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10545_148)))
(assert (= temp10545_150 #x0000000000000004))
(assert (= temp10545_151 temp10545_150))
(assert (= temp10545_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10545_151)))
(assert (= temp10545_153 #x0000000000000005))
(assert (= temp10545_154 temp10545_153))
(assert (= temp10545_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10545_154)))
(assert (= temp10545_157 var1179826))
(assert (= temp10545_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10545_157)))
(assert (= temp10545_156 temp10545_158))
(assert (= var1191780
   (ite (bvslt temp10545_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10545_159 #x0000000000000000))
(assert (= var1191780 temp10545_159))
(assert (= temp10545_160 #x0000000000000000))
(assert (= var1179826 temp10545_160))
(assert (= temp10545_162 var1179826))
(assert (= temp10545_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10545_162)))
(assert (= temp10545_161 temp10545_163))
(assert (= var1191802 (bvsmod temp10545_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10545_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10545_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10545_165 #x0000000000000001))
(assert (= var1191803 temp10545_165))
(assert (= temp10545_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10545_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10545_167 #x0000000000000001))
(assert (= var1191823 temp10545_167))
(assert (= temp10545_168 #x0000000000000001))
(assert (= var1180714 temp10545_168))
(assert (= temp10545_169 #x0000000000000000))
(assert (= temp10545_170 temp10545_169))
(assert (= temp10545_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10545_170)))
(assert (= temp10545_172 #x0000000000000001))
(assert (= temp10545_173 temp10545_172))
(assert (= temp10545_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10545_173)))
(assert (= temp10545_175 #x0000000000000002))
(assert (= temp10545_176 temp10545_175))
(assert (= temp10545_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10545_176)))
(assert (= temp10545_178 #x0000000000000003))
(assert (= temp10545_179 temp10545_178))
(assert (= temp10545_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10545_179)))
(assert (= temp10545_181 #x0000000000000004))
(assert (= temp10545_182 temp10545_181))
(assert (= temp10545_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10545_182)))
(assert (= temp10545_184 #x0000000000000005))
(assert (= temp10545_185 temp10545_184))
(assert (= temp10545_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10545_185)))
(assert (= temp10545_187 #x0000000000000000))
(assert (= temp10545_188
   (ite (bvslt var1180714 temp10545_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10545_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10545_188)))
(assert (= var1191831 temp10545_189))
(assert (bvslt (ite (bvslt var1180714 temp10545_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10545_190 #x0000000000000001))
(assert (= var1180714 temp10545_190))
(assert (= temp10545_192 var1180714))
(assert (= temp10545_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10545_192)))
(assert (= temp10545_191 temp10545_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10545_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10545_194 #x0000000000000001))
(assert (= var1191836 temp10545_194))
(assert (= temp10545_195 #x0000000000000000))
(assert (= var1179826 temp10545_195))
(assert (= temp10545_197 var1179826))
(assert (= temp10545_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10545_197)))
(assert (= temp10545_196 temp10545_198))
(assert (= temp10545_199 #x0000000000000002))
(assert (= var1586025 temp10545_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10545_200 #x0000000000000001))
(assert (= var1191993 temp10545_200))
(assert (= temp10545_201 #x0000000000000001))
(assert (= var2700303 temp10545_201))
(assert (= temp10545_202 #x0000000000000001))
(assert (= var2962447 temp10545_202))
(assert (= temp10545_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10545_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10545_204 #x0000000000000001))
(assert (= var211058 temp10545_204))
(assert (= temp10545_205 #x0000000000000001))
(assert (= var211188 temp10545_205))
(assert (= var3879401 var211188))
(assert (= temp10545_206 #x0000000000000000))
(assert (= var3866802 temp10545_206))
(assert (= temp10545_207 #x0000000000000000))
(assert (= temp10545_208
   (ite (bvslt var3866802 temp10545_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10545_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10545_208)))
(assert (= var3879420 temp10545_209))
(assert (bvslt (ite (bvslt var3866802 temp10545_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10545_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10545_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10545_211 #x0000000000000000))
(assert (= var3879421 temp10545_211))
(assert (= temp10545_212 #x0000000000000001))
(assert (= var3867690 temp10545_212))
(assert (= temp10545_213 #x0000000000000000))
(assert (= temp10545_214
   (ite (bvslt var3867690 temp10545_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10545_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10545_214)))
(assert (= var3879423 temp10545_215))
(assert (bvslt (ite (bvslt var3867690 temp10545_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10545_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10545_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10545_217 #x0000000000000001))
(assert (= var3879424 temp10545_217))
(assert (= temp10545_218 #x0000000000000000))
(assert (= var4133117 temp10545_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10545_219 #x0000000000000002))
(assert (= var4339331 temp10545_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10545_220 #x0000000000000000))
(assert (= var4404892 temp10545_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var5124496 var211201))
(assert (= var211388 var210913))
(assert (= temp10545_221 #x0000000000000000))
(assert (= var211389
   (ite (distinct var211388 temp10545_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= var6045517 var211389))
(assert (= temp10545_223 #x0000000000000001))
(assert (= temp10545_222 temp10545_223))
(assert (= temp10545_224 #x0000000000000001))
(assert (= var6884842 temp10545_224))
(assert (= temp10545_226 #xffffffffffffffff))
(assert (= temp10545_225 temp10545_226))
(assert (= temp10545_227 #x0000000000000001))
(assert (= var211058 temp10545_227))
(model-add temp10545_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10545_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10545_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10545_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




