(declare-fun temp1066_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp1066_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1066_3 () (_ BitVec 64))
(declare-fun temp1066_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1066_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp1066_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1066_7 () (_ BitVec 64))
(declare-fun temp1066_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1066_9 () (_ BitVec 64))
(declare-fun temp1066_10 () (_ BitVec 64))
(declare-fun temp1066_11 () (_ BitVec 64))
(declare-fun temp1066_12 () (_ BitVec 64))
(declare-fun temp1066_13 () (_ BitVec 64))
(declare-fun temp1066_14 () (_ BitVec 64))
(declare-fun temp1066_15 () (_ BitVec 64))
(declare-fun temp1066_16 () (_ BitVec 64))
(declare-fun temp1066_17 () (_ BitVec 64))
(declare-fun temp1066_18 () (_ BitVec 64))
(declare-fun temp1066_19 () (_ BitVec 64))
(declare-fun temp1066_20 () (_ BitVec 64))
(declare-fun temp1066_21 () (_ BitVec 64))
(declare-fun temp1066_22 () (_ BitVec 64))
(declare-fun temp1066_23 () (_ BitVec 64))
(declare-fun temp1066_24 () (_ BitVec 64))
(declare-fun temp1066_25 () (_ BitVec 64))
(declare-fun temp1066_26 () (_ BitVec 64))
(declare-fun temp1066_27 () (_ BitVec 64))
(declare-fun temp1066_28 () (_ BitVec 64))
(declare-fun temp1066_29 () (_ BitVec 64))
(declare-fun temp1066_30 () (_ BitVec 64))
(declare-fun temp1066_31 () (_ BitVec 64))
(declare-fun temp1066_32 () (_ BitVec 64))
(declare-fun temp1066_33 () (_ BitVec 64))
(declare-fun temp1066_34 () (_ BitVec 64))
(declare-fun temp1066_35 () (_ BitVec 64))
(declare-fun temp1066_36 () (_ BitVec 64))
(declare-fun temp1066_37 () (_ BitVec 64))
(declare-fun temp1066_38 () (_ BitVec 64))
(declare-fun temp1066_39 () (_ BitVec 64))
(declare-fun temp1066_40 () (_ BitVec 64))
(declare-fun temp1066_41 () (_ BitVec 64))
(declare-fun temp1066_42 () (_ BitVec 64))
(declare-fun temp1066_43 () (_ BitVec 64))
(declare-fun temp1066_44 () (_ BitVec 64))
(declare-fun temp1066_45 () (_ BitVec 64))
(declare-fun temp1066_46 () (_ BitVec 64))
(declare-fun temp1066_47 () (_ BitVec 64))
(declare-fun temp1066_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp1066_49 () (_ BitVec 64))
(declare-fun temp1066_50 () (_ BitVec 64))
(declare-fun temp1066_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1066_52 () (_ BitVec 64))
(declare-fun temp1066_53 () (_ BitVec 64))
(declare-fun temp1066_54 () (_ BitVec 64))
(declare-fun temp1066_55 () (_ BitVec 64))
(declare-fun temp1066_56 () (_ BitVec 64))
(declare-fun temp1066_57 () (_ BitVec 64))
(declare-fun temp1066_58 () (_ BitVec 64))
(declare-fun temp1066_59 () (_ BitVec 64))
(declare-fun temp1066_60 () (_ BitVec 64))
(declare-fun temp1066_61 () (_ BitVec 64))
(declare-fun temp1066_62 () (_ BitVec 64))
(declare-fun temp1066_63 () (_ BitVec 64))
(declare-fun temp1066_64 () (_ BitVec 64))
(declare-fun temp1066_65 () (_ BitVec 64))
(declare-fun temp1066_66 () (_ BitVec 64))
(declare-fun temp1066_67 () (_ BitVec 64))
(declare-fun temp1066_68 () (_ BitVec 64))
(declare-fun temp1066_69 () (_ BitVec 64))
(declare-fun temp1066_70 () (_ BitVec 64))
(declare-fun temp1066_71 () (_ BitVec 64))
(declare-fun temp1066_72 () (_ BitVec 64))
(declare-fun temp1066_73 () (_ BitVec 64))
(declare-fun temp1066_74 () (_ BitVec 64))
(declare-fun temp1066_75 () (_ BitVec 64))
(declare-fun temp1066_76 () (_ BitVec 64))
(declare-fun temp1066_77 () (_ BitVec 64))
(declare-fun temp1066_78 () (_ BitVec 64))
(declare-fun temp1066_79 () (_ BitVec 64))
(declare-fun temp1066_80 () (_ BitVec 64))
(declare-fun temp1066_81 () (_ BitVec 64))
(declare-fun temp1066_82 () (_ BitVec 64))
(declare-fun temp1066_83 () (_ BitVec 64))
(declare-fun temp1066_84 () (_ BitVec 64))
(declare-fun temp1066_85 () (_ BitVec 64))
(declare-fun temp1066_86 () (_ BitVec 64))
(declare-fun temp1066_87 () (_ BitVec 64))
(declare-fun temp1066_88 () (_ BitVec 64))
(declare-fun temp1066_89 () (_ BitVec 64))
(declare-fun temp1066_90 () (_ BitVec 64))
(declare-fun temp1066_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp1066_92 () (_ BitVec 64))
(declare-fun temp1066_93 () (_ BitVec 64))
(declare-fun temp1066_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1066_95 () (_ BitVec 64))
(declare-fun temp1066_96 () (_ BitVec 64))
(declare-fun temp1066_97 () (_ BitVec 64))
(declare-fun temp1066_98 () (_ BitVec 64))
(declare-fun temp1066_99 () (_ BitVec 64))
(declare-fun temp1066_100 () (_ BitVec 64))
(declare-fun temp1066_101 () (_ BitVec 64))
(declare-fun temp1066_102 () (_ BitVec 64))
(declare-fun temp1066_103 () (_ BitVec 64))
(declare-fun temp1066_104 () (_ BitVec 64))
(declare-fun temp1066_105 () (_ BitVec 64))
(declare-fun temp1066_106 () (_ BitVec 64))
(declare-fun temp1066_107 () (_ BitVec 64))
(declare-fun temp1066_108 () (_ BitVec 64))
(declare-fun temp1066_109 () (_ BitVec 64))
(declare-fun temp1066_110 () (_ BitVec 64))
(declare-fun temp1066_111 () (_ BitVec 64))
(declare-fun temp1066_112 () (_ BitVec 64))
(declare-fun temp1066_113 () (_ BitVec 64))
(declare-fun temp1066_114 () (_ BitVec 64))
(declare-fun temp1066_115 () (_ BitVec 64))
(declare-fun temp1066_116 () (_ BitVec 64))
(declare-fun temp1066_117 () (_ BitVec 64))
(declare-fun temp1066_118 () (_ BitVec 64))
(declare-fun temp1066_119 () (_ BitVec 64))
(declare-fun temp1066_120 () (_ BitVec 64))
(declare-fun temp1066_121 () (_ BitVec 64))
(declare-fun temp1066_122 () (_ BitVec 64))
(declare-fun temp1066_123 () (_ BitVec 64))
(declare-fun temp1066_124 () (_ BitVec 64))
(declare-fun temp1066_125 () (_ BitVec 64))
(declare-fun temp1066_126 () (_ BitVec 64))
(declare-fun temp1066_127 () (_ BitVec 64))
(declare-fun temp1066_128 () (_ BitVec 64))
(declare-fun temp1066_129 () (_ BitVec 64))
(declare-fun temp1066_130 () (_ BitVec 64))
(declare-fun temp1066_131 () (_ BitVec 64))
(declare-fun temp1066_132 () (_ BitVec 64))
(declare-fun temp1066_133 () (_ BitVec 64))
(declare-fun temp1066_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp1066_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp1066_136 () (_ BitVec 64))
(declare-fun temp1066_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp1066_138 () (_ BitVec 64))
(declare-fun temp1066_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1066_140 () (_ BitVec 64))
(declare-fun temp1066_141 () (_ BitVec 64))
(declare-fun temp1066_142 () (_ BitVec 64))
(declare-fun temp1066_143 () (_ BitVec 64))
(declare-fun temp1066_144 () (_ BitVec 64))
(declare-fun temp1066_145 () (_ BitVec 64))
(declare-fun temp1066_146 () (_ BitVec 64))
(declare-fun temp1066_147 () (_ BitVec 64))
(declare-fun temp1066_148 () (_ BitVec 64))
(declare-fun temp1066_149 () (_ BitVec 64))
(declare-fun temp1066_150 () (_ BitVec 64))
(declare-fun temp1066_151 () (_ BitVec 64))
(declare-fun temp1066_152 () (_ BitVec 64))
(declare-fun temp1066_153 () (_ BitVec 64))
(declare-fun temp1066_154 () (_ BitVec 64))
(declare-fun temp1066_155 () (_ BitVec 64))
(declare-fun temp1066_157 () (_ BitVec 64))
(declare-fun temp1066_158 () (_ BitVec 64))
(declare-fun temp1066_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp1066_159 () (_ BitVec 64))
(declare-fun temp1066_160 () (_ BitVec 64))
(declare-fun temp1066_162 () (_ BitVec 64))
(declare-fun temp1066_163 () (_ BitVec 64))
(declare-fun temp1066_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp1066_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp1066_165 () (_ BitVec 64))
(declare-fun temp1066_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp1066_167 () (_ BitVec 64))
(declare-fun temp1066_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp1066_169 () (_ BitVec 64))
(declare-fun temp1066_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1066_171 () (_ BitVec 64))
(declare-fun temp1066_172 () (_ BitVec 64))
(declare-fun temp1066_173 () (_ BitVec 64))
(declare-fun temp1066_174 () (_ BitVec 64))
(declare-fun temp1066_175 () (_ BitVec 64))
(declare-fun temp1066_176 () (_ BitVec 64))
(declare-fun temp1066_177 () (_ BitVec 64))
(declare-fun temp1066_178 () (_ BitVec 64))
(declare-fun temp1066_179 () (_ BitVec 64))
(declare-fun temp1066_180 () (_ BitVec 64))
(declare-fun temp1066_181 () (_ BitVec 64))
(declare-fun temp1066_182 () (_ BitVec 64))
(declare-fun temp1066_183 () (_ BitVec 64))
(declare-fun temp1066_184 () (_ BitVec 64))
(declare-fun temp1066_185 () (_ BitVec 64))
(declare-fun temp1066_186 () (_ BitVec 64))
(declare-fun temp1066_187 () (_ BitVec 64))
(declare-fun temp1066_188 () (_ BitVec 64))
(declare-fun temp1066_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp1066_190 () (_ BitVec 64))
(declare-fun temp1066_192 () (_ BitVec 64))
(declare-fun temp1066_193 () (_ BitVec 64))
(declare-fun temp1066_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp1066_194 () (_ BitVec 64))
(declare-fun temp1066_195 () (_ BitVec 64))
(declare-fun temp1066_197 () (_ BitVec 64))
(declare-fun temp1066_198 () (_ BitVec 64))
(declare-fun temp1066_196 () (_ BitVec 64))
(declare-fun temp1066_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp1066_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp1066_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp1066_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp1066_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp1066_204 () (_ BitVec 64))
(declare-fun temp1066_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp1066_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp1066_207 () (_ BitVec 64))
(declare-fun temp1066_208 () (_ BitVec 64))
(declare-fun temp1066_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp1066_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp1066_211 () (_ BitVec 64))
(declare-fun temp1066_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp1066_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp1066_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4469136 () (_ BitVec 64))
(declare-fun var4731280 () (_ BitVec 64))
(declare-fun temp1066_215 () (_ BitVec 64))
(declare-fun var212414 () (_ BitVec 64))
(declare-fun temp1066_216 () (_ BitVec 64))
(declare-fun temp1066_217 () (_ BitVec 64))
(declare-fun var5060227 () (_ BitVec 64))
(declare-fun var5060229 () (_ BitVec 64))
(declare-fun var5125772 () (_ BitVec 64))
(declare-fun var5125773 () (_ BitVec 64))
(declare-fun temp1066_218 () (_ BitVec 64))
(assert (= temp1066_1 #x0000000000000001))
(assert (= var77203 temp1066_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp1066_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp1066_2)))
(assert (= temp1066_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1066_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1066_4 #x0000000000000000))
(assert (= var210941 temp1066_4))
(assert (= temp1066_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp1066_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1066_6 #x0000000000000000))
(assert (= var210986 temp1066_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp1066_7 #x0000000000000000))
(assert (= temp1066_8 temp1066_7))
(assert (= temp1066_9 (select ARGNAME_padding_NAMEEND_VAL temp1066_8)))
(assert (= temp1066_10 #x0000000000000001))
(assert (= temp1066_11 temp1066_10))
(assert (= temp1066_12 (select ARGNAME_padding_NAMEEND_VAL temp1066_11)))
(assert (= temp1066_13 #x0000000000000002))
(assert (= temp1066_14 temp1066_13))
(assert (= temp1066_15 (select ARGNAME_padding_NAMEEND_VAL temp1066_14)))
(assert (= temp1066_16 #x0000000000000003))
(assert (= temp1066_17 temp1066_16))
(assert (= temp1066_18 (select ARGNAME_padding_NAMEEND_VAL temp1066_17)))
(assert (= temp1066_19 #x0000000000000004))
(assert (= temp1066_20 temp1066_19))
(assert (= temp1066_21 (select ARGNAME_padding_NAMEEND_VAL temp1066_20)))
(assert (= temp1066_22 #x0000000000000005))
(assert (= temp1066_23 temp1066_22))
(assert (= temp1066_24 (select ARGNAME_padding_NAMEEND_VAL temp1066_23)))
(assert (= temp1066_25 #x0000000000000000))
(assert (= temp1066_26 #x0000000000000000))
(assert (= temp1066_27 temp1066_26))
(assert (= temp1066_28 (select ARGNAME_padding_NAMEEND_VAL temp1066_27)))
(assert (= temp1066_29 #x0000000000000000))
(assert (= temp1066_30 #x0000000000000001))
(assert (= temp1066_31 temp1066_30))
(assert (= temp1066_32 (select ARGNAME_padding_NAMEEND_VAL temp1066_31)))
(assert (= temp1066_33 #x0000000000000000))
(assert (= temp1066_34 #x0000000000000002))
(assert (= temp1066_35 temp1066_34))
(assert (= temp1066_36 (select ARGNAME_padding_NAMEEND_VAL temp1066_35)))
(assert (= temp1066_37 #x0000000000000000))
(assert (= temp1066_38 #x0000000000000003))
(assert (= temp1066_39 temp1066_38))
(assert (= temp1066_40 (select ARGNAME_padding_NAMEEND_VAL temp1066_39)))
(assert (= temp1066_41 #x0000000000000000))
(assert (= temp1066_42 #x0000000000000004))
(assert (= temp1066_43 temp1066_42))
(assert (= temp1066_44 (select ARGNAME_padding_NAMEEND_VAL temp1066_43)))
(assert (= temp1066_45 #x0000000000000000))
(assert (= temp1066_46 #x0000000000000005))
(assert (= temp1066_47 temp1066_46))
(assert (= temp1066_48 (select ARGNAME_padding_NAMEEND_VAL temp1066_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp1066_28 temp1066_25)
             (bvslt temp1066_32 temp1066_29)
             (bvslt temp1066_36 temp1066_33)
             (bvslt temp1066_40 temp1066_37)
             (bvslt temp1066_44 temp1066_41)
             (bvslt temp1066_48 temp1066_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1066_49 #x0000000000000000))
(assert (= var1191714 temp1066_49))
(assert (= temp1066_50 #x0000000000000000))
(assert (= temp1066_51 temp1066_50))
(assert (= temp1066_52 (select ARGNAME_output_padding_NAMEEND_VAL temp1066_51)))
(assert (= temp1066_53 #x0000000000000001))
(assert (= temp1066_54 temp1066_53))
(assert (= temp1066_55 (select ARGNAME_output_padding_NAMEEND_VAL temp1066_54)))
(assert (= temp1066_56 #x0000000000000002))
(assert (= temp1066_57 temp1066_56))
(assert (= temp1066_58 (select ARGNAME_output_padding_NAMEEND_VAL temp1066_57)))
(assert (= temp1066_59 #x0000000000000003))
(assert (= temp1066_60 temp1066_59))
(assert (= temp1066_61 (select ARGNAME_output_padding_NAMEEND_VAL temp1066_60)))
(assert (= temp1066_62 #x0000000000000004))
(assert (= temp1066_63 temp1066_62))
(assert (= temp1066_64 (select ARGNAME_output_padding_NAMEEND_VAL temp1066_63)))
(assert (= temp1066_65 #x0000000000000005))
(assert (= temp1066_66 temp1066_65))
(assert (= temp1066_67 (select ARGNAME_output_padding_NAMEEND_VAL temp1066_66)))
(assert (= temp1066_68 #x0000000000000000))
(assert (= temp1066_69 #x0000000000000000))
(assert (= temp1066_70 temp1066_69))
(assert (= temp1066_71 (select ARGNAME_output_padding_NAMEEND_VAL temp1066_70)))
(assert (= temp1066_72 #x0000000000000000))
(assert (= temp1066_73 #x0000000000000001))
(assert (= temp1066_74 temp1066_73))
(assert (= temp1066_75 (select ARGNAME_output_padding_NAMEEND_VAL temp1066_74)))
(assert (= temp1066_76 #x0000000000000000))
(assert (= temp1066_77 #x0000000000000002))
(assert (= temp1066_78 temp1066_77))
(assert (= temp1066_79 (select ARGNAME_output_padding_NAMEEND_VAL temp1066_78)))
(assert (= temp1066_80 #x0000000000000000))
(assert (= temp1066_81 #x0000000000000003))
(assert (= temp1066_82 temp1066_81))
(assert (= temp1066_83 (select ARGNAME_output_padding_NAMEEND_VAL temp1066_82)))
(assert (= temp1066_84 #x0000000000000000))
(assert (= temp1066_85 #x0000000000000004))
(assert (= temp1066_86 temp1066_85))
(assert (= temp1066_87 (select ARGNAME_output_padding_NAMEEND_VAL temp1066_86)))
(assert (= temp1066_88 #x0000000000000000))
(assert (= temp1066_89 #x0000000000000005))
(assert (= temp1066_90 temp1066_89))
(assert (= temp1066_91 (select ARGNAME_output_padding_NAMEEND_VAL temp1066_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp1066_71 temp1066_68)
             (bvslt temp1066_75 temp1066_72)
             (bvslt temp1066_79 temp1066_76)
             (bvslt temp1066_83 temp1066_80)
             (bvslt temp1066_87 temp1066_84)
             (bvslt temp1066_91 temp1066_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1066_92 #x0000000000000000))
(assert (= var1191725 temp1066_92))
(assert (= temp1066_93 #x0000000000000000))
(assert (= temp1066_94 temp1066_93))
(assert (= temp1066_95 (select ARGNAME_stride_NAMEEND_VAL temp1066_94)))
(assert (= temp1066_96 #x0000000000000001))
(assert (= temp1066_97 temp1066_96))
(assert (= temp1066_98 (select ARGNAME_stride_NAMEEND_VAL temp1066_97)))
(assert (= temp1066_99 #x0000000000000002))
(assert (= temp1066_100 temp1066_99))
(assert (= temp1066_101 (select ARGNAME_stride_NAMEEND_VAL temp1066_100)))
(assert (= temp1066_102 #x0000000000000003))
(assert (= temp1066_103 temp1066_102))
(assert (= temp1066_104 (select ARGNAME_stride_NAMEEND_VAL temp1066_103)))
(assert (= temp1066_105 #x0000000000000004))
(assert (= temp1066_106 temp1066_105))
(assert (= temp1066_107 (select ARGNAME_stride_NAMEEND_VAL temp1066_106)))
(assert (= temp1066_108 #x0000000000000005))
(assert (= temp1066_109 temp1066_108))
(assert (= temp1066_110 (select ARGNAME_stride_NAMEEND_VAL temp1066_109)))
(assert (= temp1066_111 #x0000000000000000))
(assert (= temp1066_112 #x0000000000000000))
(assert (= temp1066_113 temp1066_112))
(assert (= temp1066_114 (select ARGNAME_stride_NAMEEND_VAL temp1066_113)))
(assert (= temp1066_115 #x0000000000000000))
(assert (= temp1066_116 #x0000000000000001))
(assert (= temp1066_117 temp1066_116))
(assert (= temp1066_118 (select ARGNAME_stride_NAMEEND_VAL temp1066_117)))
(assert (= temp1066_119 #x0000000000000000))
(assert (= temp1066_120 #x0000000000000002))
(assert (= temp1066_121 temp1066_120))
(assert (= temp1066_122 (select ARGNAME_stride_NAMEEND_VAL temp1066_121)))
(assert (= temp1066_123 #x0000000000000000))
(assert (= temp1066_124 #x0000000000000003))
(assert (= temp1066_125 temp1066_124))
(assert (= temp1066_126 (select ARGNAME_stride_NAMEEND_VAL temp1066_125)))
(assert (= temp1066_127 #x0000000000000000))
(assert (= temp1066_128 #x0000000000000004))
(assert (= temp1066_129 temp1066_128))
(assert (= temp1066_130 (select ARGNAME_stride_NAMEEND_VAL temp1066_129)))
(assert (= temp1066_131 #x0000000000000000))
(assert (= temp1066_132 #x0000000000000005))
(assert (= temp1066_133 temp1066_132))
(assert (= temp1066_134 (select ARGNAME_stride_NAMEEND_VAL temp1066_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp1066_114 temp1066_111)
             (bvsle temp1066_118 temp1066_115)
             (bvsle temp1066_122 temp1066_119)
             (bvsle temp1066_126 temp1066_123)
             (bvsle temp1066_130 temp1066_127)
             (bvsle temp1066_134 temp1066_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1066_135 #x0000000000000000))
(assert (= var1191735 temp1066_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1066_136 #x0000000000000001))
(assert (= var1191747 temp1066_136))
(assert (= temp1066_137 #x0000000000000000))
(assert (= var1179826 temp1066_137))
(assert (= temp1066_138 #x0000000000000000))
(assert (= temp1066_139 temp1066_138))
(assert (= temp1066_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1066_139)))
(assert (= temp1066_141 #x0000000000000001))
(assert (= temp1066_142 temp1066_141))
(assert (= temp1066_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1066_142)))
(assert (= temp1066_144 #x0000000000000002))
(assert (= temp1066_145 temp1066_144))
(assert (= temp1066_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1066_145)))
(assert (= temp1066_147 #x0000000000000003))
(assert (= temp1066_148 temp1066_147))
(assert (= temp1066_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1066_148)))
(assert (= temp1066_150 #x0000000000000004))
(assert (= temp1066_151 temp1066_150))
(assert (= temp1066_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1066_151)))
(assert (= temp1066_153 #x0000000000000005))
(assert (= temp1066_154 temp1066_153))
(assert (= temp1066_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1066_154)))
(assert (= temp1066_157 var1179826))
(assert (= temp1066_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1066_157)))
(assert (= temp1066_156 temp1066_158))
(assert (= var1191780
   (ite (bvslt temp1066_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1066_159 #x0000000000000000))
(assert (= var1191780 temp1066_159))
(assert (= temp1066_160 #x0000000000000000))
(assert (= var1179826 temp1066_160))
(assert (= temp1066_162 var1179826))
(assert (= temp1066_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1066_162)))
(assert (= temp1066_161 temp1066_163))
(assert (= var1191802 (bvsmod temp1066_161 ARGNAME_groups_NAMEEND)))
(assert (= temp1066_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp1066_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp1066_165 #x0000000000000001))
(assert (= var1191803 temp1066_165))
(assert (= temp1066_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp1066_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1066_167 #x0000000000000001))
(assert (= var1191823 temp1066_167))
(assert (= temp1066_168 #x0000000000000001))
(assert (= var1180714 temp1066_168))
(assert (= temp1066_169 #x0000000000000000))
(assert (= temp1066_170 temp1066_169))
(assert (= temp1066_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp1066_170)))
(assert (= temp1066_172 #x0000000000000001))
(assert (= temp1066_173 temp1066_172))
(assert (= temp1066_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp1066_173)))
(assert (= temp1066_175 #x0000000000000002))
(assert (= temp1066_176 temp1066_175))
(assert (= temp1066_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp1066_176)))
(assert (= temp1066_178 #x0000000000000003))
(assert (= temp1066_179 temp1066_178))
(assert (= temp1066_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp1066_179)))
(assert (= temp1066_181 #x0000000000000004))
(assert (= temp1066_182 temp1066_181))
(assert (= temp1066_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp1066_182)))
(assert (= temp1066_184 #x0000000000000005))
(assert (= temp1066_185 temp1066_184))
(assert (= temp1066_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp1066_185)))
(assert (= temp1066_187 #x0000000000000000))
(assert (= temp1066_188
   (ite (bvslt var1180714 temp1066_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp1066_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp1066_188)))
(assert (= var1191831 temp1066_189))
(assert (bvslt (ite (bvslt var1180714 temp1066_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1066_190 #x0000000000000001))
(assert (= var1180714 temp1066_190))
(assert (= temp1066_192 var1180714))
(assert (= temp1066_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1066_192)))
(assert (= temp1066_191 temp1066_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp1066_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp1066_194 #x0000000000000001))
(assert (= var1191836 temp1066_194))
(assert (= temp1066_195 #x0000000000000000))
(assert (= var1179826 temp1066_195))
(assert (= temp1066_197 var1179826))
(assert (= temp1066_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1066_197)))
(assert (= temp1066_196 temp1066_198))
(assert (= temp1066_199 #x0000000000000002))
(assert (= var1586025 temp1066_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp1066_200 #x0000000000000001))
(assert (= var1191993 temp1066_200))
(assert (= temp1066_201 #x0000000000000001))
(assert (= var2700303 temp1066_201))
(assert (= temp1066_202 #x0000000000000001))
(assert (= var2962447 temp1066_202))
(assert (= temp1066_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1066_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1066_204 #x0000000000000001))
(assert (= var211058 temp1066_204))
(assert (= temp1066_205 #x0000000000000001))
(assert (= var211188 temp1066_205))
(assert (= var3879401 var211188))
(assert (= temp1066_206 #x0000000000000000))
(assert (= var3866802 temp1066_206))
(assert (= temp1066_207 #x0000000000000000))
(assert (= temp1066_208
   (ite (bvslt var3866802 temp1066_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp1066_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp1066_208)))
(assert (= var3879420 temp1066_209))
(assert (bvslt (ite (bvslt var3866802 temp1066_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1066_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp1066_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp1066_211 #x0000000000000001))
(assert (= var3879421 temp1066_211))
(assert (= temp1066_212 #x0000000000000000))
(assert (= var4079423 temp1066_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp1066_213 #x0000000000000002))
(assert (= var4208259 temp1066_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1066_214 #x0000000000000000))
(assert (= var4273820 temp1066_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4469136 var211201))
(assert (= var4731280 var211201))
(assert (= temp1066_215 #x0000000000000001))
(assert (= var212414
   (ite (= ARGNAME_groups_NAMEEND temp1066_215)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1066_216 #x0000000000000001))
(assert (= var212414 temp1066_216))
(assert (= temp1066_217 #x0000000000000002))
(assert (= var5060227 temp1066_217))
(assert (= var5060229 (bvsub ARGNAME_weight_NAMEEND_DIM var5060227)))
(assert (= var5125772 var5060227))
(assert (= var5125773 var5060229))
(assert (= temp1066_218 #x0000000000000001))
(assert (= var211058 temp1066_218))
(model-add temp1066_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp1066_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1066_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp1066_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




