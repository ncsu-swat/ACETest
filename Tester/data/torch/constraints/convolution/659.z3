(declare-fun temp878_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp878_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp878_3 () (_ BitVec 64))
(declare-fun temp878_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp878_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp878_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp878_7 () (_ BitVec 64))
(declare-fun temp878_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp878_9 () (_ BitVec 64))
(declare-fun temp878_10 () (_ BitVec 64))
(declare-fun temp878_11 () (_ BitVec 64))
(declare-fun temp878_12 () (_ BitVec 64))
(declare-fun temp878_13 () (_ BitVec 64))
(declare-fun temp878_14 () (_ BitVec 64))
(declare-fun temp878_15 () (_ BitVec 64))
(declare-fun temp878_16 () (_ BitVec 64))
(declare-fun temp878_17 () (_ BitVec 64))
(declare-fun temp878_18 () (_ BitVec 64))
(declare-fun temp878_19 () (_ BitVec 64))
(declare-fun temp878_20 () (_ BitVec 64))
(declare-fun temp878_21 () (_ BitVec 64))
(declare-fun temp878_22 () (_ BitVec 64))
(declare-fun temp878_23 () (_ BitVec 64))
(declare-fun temp878_24 () (_ BitVec 64))
(declare-fun temp878_25 () (_ BitVec 64))
(declare-fun temp878_26 () (_ BitVec 64))
(declare-fun temp878_27 () (_ BitVec 64))
(declare-fun temp878_28 () (_ BitVec 64))
(declare-fun temp878_29 () (_ BitVec 64))
(declare-fun temp878_30 () (_ BitVec 64))
(declare-fun temp878_31 () (_ BitVec 64))
(declare-fun temp878_32 () (_ BitVec 64))
(declare-fun temp878_33 () (_ BitVec 64))
(declare-fun temp878_34 () (_ BitVec 64))
(declare-fun temp878_35 () (_ BitVec 64))
(declare-fun temp878_36 () (_ BitVec 64))
(declare-fun temp878_37 () (_ BitVec 64))
(declare-fun temp878_38 () (_ BitVec 64))
(declare-fun temp878_39 () (_ BitVec 64))
(declare-fun temp878_40 () (_ BitVec 64))
(declare-fun temp878_41 () (_ BitVec 64))
(declare-fun temp878_42 () (_ BitVec 64))
(declare-fun temp878_43 () (_ BitVec 64))
(declare-fun temp878_44 () (_ BitVec 64))
(declare-fun temp878_45 () (_ BitVec 64))
(declare-fun temp878_46 () (_ BitVec 64))
(declare-fun temp878_47 () (_ BitVec 64))
(declare-fun temp878_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp878_49 () (_ BitVec 64))
(declare-fun temp878_50 () (_ BitVec 64))
(declare-fun temp878_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp878_52 () (_ BitVec 64))
(declare-fun temp878_53 () (_ BitVec 64))
(declare-fun temp878_54 () (_ BitVec 64))
(declare-fun temp878_55 () (_ BitVec 64))
(declare-fun temp878_56 () (_ BitVec 64))
(declare-fun temp878_57 () (_ BitVec 64))
(declare-fun temp878_58 () (_ BitVec 64))
(declare-fun temp878_59 () (_ BitVec 64))
(declare-fun temp878_60 () (_ BitVec 64))
(declare-fun temp878_61 () (_ BitVec 64))
(declare-fun temp878_62 () (_ BitVec 64))
(declare-fun temp878_63 () (_ BitVec 64))
(declare-fun temp878_64 () (_ BitVec 64))
(declare-fun temp878_65 () (_ BitVec 64))
(declare-fun temp878_66 () (_ BitVec 64))
(declare-fun temp878_67 () (_ BitVec 64))
(declare-fun temp878_68 () (_ BitVec 64))
(declare-fun temp878_69 () (_ BitVec 64))
(declare-fun temp878_70 () (_ BitVec 64))
(declare-fun temp878_71 () (_ BitVec 64))
(declare-fun temp878_72 () (_ BitVec 64))
(declare-fun temp878_73 () (_ BitVec 64))
(declare-fun temp878_74 () (_ BitVec 64))
(declare-fun temp878_75 () (_ BitVec 64))
(declare-fun temp878_76 () (_ BitVec 64))
(declare-fun temp878_77 () (_ BitVec 64))
(declare-fun temp878_78 () (_ BitVec 64))
(declare-fun temp878_79 () (_ BitVec 64))
(declare-fun temp878_80 () (_ BitVec 64))
(declare-fun temp878_81 () (_ BitVec 64))
(declare-fun temp878_82 () (_ BitVec 64))
(declare-fun temp878_83 () (_ BitVec 64))
(declare-fun temp878_84 () (_ BitVec 64))
(declare-fun temp878_85 () (_ BitVec 64))
(declare-fun temp878_86 () (_ BitVec 64))
(declare-fun temp878_87 () (_ BitVec 64))
(declare-fun temp878_88 () (_ BitVec 64))
(declare-fun temp878_89 () (_ BitVec 64))
(declare-fun temp878_90 () (_ BitVec 64))
(declare-fun temp878_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp878_92 () (_ BitVec 64))
(declare-fun temp878_93 () (_ BitVec 64))
(declare-fun temp878_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp878_95 () (_ BitVec 64))
(declare-fun temp878_96 () (_ BitVec 64))
(declare-fun temp878_97 () (_ BitVec 64))
(declare-fun temp878_98 () (_ BitVec 64))
(declare-fun temp878_99 () (_ BitVec 64))
(declare-fun temp878_100 () (_ BitVec 64))
(declare-fun temp878_101 () (_ BitVec 64))
(declare-fun temp878_102 () (_ BitVec 64))
(declare-fun temp878_103 () (_ BitVec 64))
(declare-fun temp878_104 () (_ BitVec 64))
(declare-fun temp878_105 () (_ BitVec 64))
(declare-fun temp878_106 () (_ BitVec 64))
(declare-fun temp878_107 () (_ BitVec 64))
(declare-fun temp878_108 () (_ BitVec 64))
(declare-fun temp878_109 () (_ BitVec 64))
(declare-fun temp878_110 () (_ BitVec 64))
(declare-fun temp878_111 () (_ BitVec 64))
(declare-fun temp878_112 () (_ BitVec 64))
(declare-fun temp878_113 () (_ BitVec 64))
(declare-fun temp878_114 () (_ BitVec 64))
(declare-fun temp878_115 () (_ BitVec 64))
(declare-fun temp878_116 () (_ BitVec 64))
(declare-fun temp878_117 () (_ BitVec 64))
(declare-fun temp878_118 () (_ BitVec 64))
(declare-fun temp878_119 () (_ BitVec 64))
(declare-fun temp878_120 () (_ BitVec 64))
(declare-fun temp878_121 () (_ BitVec 64))
(declare-fun temp878_122 () (_ BitVec 64))
(declare-fun temp878_123 () (_ BitVec 64))
(declare-fun temp878_124 () (_ BitVec 64))
(declare-fun temp878_125 () (_ BitVec 64))
(declare-fun temp878_126 () (_ BitVec 64))
(declare-fun temp878_127 () (_ BitVec 64))
(declare-fun temp878_128 () (_ BitVec 64))
(declare-fun temp878_129 () (_ BitVec 64))
(declare-fun temp878_130 () (_ BitVec 64))
(declare-fun temp878_131 () (_ BitVec 64))
(declare-fun temp878_132 () (_ BitVec 64))
(declare-fun temp878_133 () (_ BitVec 64))
(declare-fun temp878_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp878_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp878_136 () (_ BitVec 64))
(declare-fun temp878_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp878_138 () (_ BitVec 64))
(declare-fun temp878_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp878_140 () (_ BitVec 64))
(declare-fun temp878_141 () (_ BitVec 64))
(declare-fun temp878_142 () (_ BitVec 64))
(declare-fun temp878_143 () (_ BitVec 64))
(declare-fun temp878_144 () (_ BitVec 64))
(declare-fun temp878_145 () (_ BitVec 64))
(declare-fun temp878_146 () (_ BitVec 64))
(declare-fun temp878_147 () (_ BitVec 64))
(declare-fun temp878_148 () (_ BitVec 64))
(declare-fun temp878_149 () (_ BitVec 64))
(declare-fun temp878_150 () (_ BitVec 64))
(declare-fun temp878_151 () (_ BitVec 64))
(declare-fun temp878_152 () (_ BitVec 64))
(declare-fun temp878_153 () (_ BitVec 64))
(declare-fun temp878_154 () (_ BitVec 64))
(declare-fun temp878_155 () (_ BitVec 64))
(declare-fun temp878_157 () (_ BitVec 64))
(declare-fun temp878_158 () (_ BitVec 64))
(declare-fun temp878_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp878_159 () (_ BitVec 64))
(declare-fun temp878_160 () (_ BitVec 64))
(declare-fun temp878_162 () (_ BitVec 64))
(declare-fun temp878_163 () (_ BitVec 64))
(declare-fun temp878_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp878_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp878_165 () (_ BitVec 64))
(declare-fun temp878_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp878_167 () (_ BitVec 64))
(declare-fun temp878_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp878_169 () (_ BitVec 64))
(declare-fun temp878_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp878_171 () (_ BitVec 64))
(declare-fun temp878_172 () (_ BitVec 64))
(declare-fun temp878_173 () (_ BitVec 64))
(declare-fun temp878_174 () (_ BitVec 64))
(declare-fun temp878_175 () (_ BitVec 64))
(declare-fun temp878_176 () (_ BitVec 64))
(declare-fun temp878_177 () (_ BitVec 64))
(declare-fun temp878_178 () (_ BitVec 64))
(declare-fun temp878_179 () (_ BitVec 64))
(declare-fun temp878_180 () (_ BitVec 64))
(declare-fun temp878_181 () (_ BitVec 64))
(declare-fun temp878_182 () (_ BitVec 64))
(declare-fun temp878_183 () (_ BitVec 64))
(declare-fun temp878_184 () (_ BitVec 64))
(declare-fun temp878_185 () (_ BitVec 64))
(declare-fun temp878_186 () (_ BitVec 64))
(declare-fun temp878_187 () (_ BitVec 64))
(declare-fun temp878_188 () (_ BitVec 64))
(declare-fun temp878_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp878_190 () (_ BitVec 64))
(declare-fun temp878_192 () (_ BitVec 64))
(declare-fun temp878_193 () (_ BitVec 64))
(declare-fun temp878_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp878_194 () (_ BitVec 64))
(declare-fun temp878_195 () (_ BitVec 64))
(declare-fun temp878_197 () (_ BitVec 64))
(declare-fun temp878_198 () (_ BitVec 64))
(declare-fun temp878_196 () (_ BitVec 64))
(declare-fun temp878_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp878_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp878_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp878_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp878_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp878_204 () (_ BitVec 64))
(declare-fun temp878_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp878_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp878_207 () (_ BitVec 64))
(declare-fun temp878_208 () (_ BitVec 64))
(declare-fun temp878_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp878_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp878_211 () (_ BitVec 64))
(declare-fun temp878_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp878_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp878_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var5321104 () (_ BitVec 64))
(declare-fun var5583248 () (_ BitVec 64))
(declare-fun temp878_215 () (_ BitVec 64))
(declare-fun var5910928 () (_ BitVec 64))
(declare-fun temp878_216 () (_ BitVec 64))
(assert (= temp878_1 #x0000000000000001))
(assert (= var77203 temp878_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp878_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp878_2)))
(assert (= temp878_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp878_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp878_4 #x0000000000000000))
(assert (= var210941 temp878_4))
(assert (= temp878_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp878_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp878_6 #x0000000000000000))
(assert (= var210986 temp878_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp878_7 #x0000000000000000))
(assert (= temp878_8 temp878_7))
(assert (= temp878_9 (select ARGNAME_padding_NAMEEND_VAL temp878_8)))
(assert (= temp878_10 #x0000000000000001))
(assert (= temp878_11 temp878_10))
(assert (= temp878_12 (select ARGNAME_padding_NAMEEND_VAL temp878_11)))
(assert (= temp878_13 #x0000000000000002))
(assert (= temp878_14 temp878_13))
(assert (= temp878_15 (select ARGNAME_padding_NAMEEND_VAL temp878_14)))
(assert (= temp878_16 #x0000000000000003))
(assert (= temp878_17 temp878_16))
(assert (= temp878_18 (select ARGNAME_padding_NAMEEND_VAL temp878_17)))
(assert (= temp878_19 #x0000000000000004))
(assert (= temp878_20 temp878_19))
(assert (= temp878_21 (select ARGNAME_padding_NAMEEND_VAL temp878_20)))
(assert (= temp878_22 #x0000000000000005))
(assert (= temp878_23 temp878_22))
(assert (= temp878_24 (select ARGNAME_padding_NAMEEND_VAL temp878_23)))
(assert (= temp878_25 #x0000000000000000))
(assert (= temp878_26 #x0000000000000000))
(assert (= temp878_27 temp878_26))
(assert (= temp878_28 (select ARGNAME_padding_NAMEEND_VAL temp878_27)))
(assert (= temp878_29 #x0000000000000000))
(assert (= temp878_30 #x0000000000000001))
(assert (= temp878_31 temp878_30))
(assert (= temp878_32 (select ARGNAME_padding_NAMEEND_VAL temp878_31)))
(assert (= temp878_33 #x0000000000000000))
(assert (= temp878_34 #x0000000000000002))
(assert (= temp878_35 temp878_34))
(assert (= temp878_36 (select ARGNAME_padding_NAMEEND_VAL temp878_35)))
(assert (= temp878_37 #x0000000000000000))
(assert (= temp878_38 #x0000000000000003))
(assert (= temp878_39 temp878_38))
(assert (= temp878_40 (select ARGNAME_padding_NAMEEND_VAL temp878_39)))
(assert (= temp878_41 #x0000000000000000))
(assert (= temp878_42 #x0000000000000004))
(assert (= temp878_43 temp878_42))
(assert (= temp878_44 (select ARGNAME_padding_NAMEEND_VAL temp878_43)))
(assert (= temp878_45 #x0000000000000000))
(assert (= temp878_46 #x0000000000000005))
(assert (= temp878_47 temp878_46))
(assert (= temp878_48 (select ARGNAME_padding_NAMEEND_VAL temp878_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp878_28 temp878_25)
             (bvslt temp878_32 temp878_29)
             (bvslt temp878_36 temp878_33)
             (bvslt temp878_40 temp878_37)
             (bvslt temp878_44 temp878_41)
             (bvslt temp878_48 temp878_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp878_49 #x0000000000000000))
(assert (= var1191714 temp878_49))
(assert (= temp878_50 #x0000000000000000))
(assert (= temp878_51 temp878_50))
(assert (= temp878_52 (select ARGNAME_output_padding_NAMEEND_VAL temp878_51)))
(assert (= temp878_53 #x0000000000000001))
(assert (= temp878_54 temp878_53))
(assert (= temp878_55 (select ARGNAME_output_padding_NAMEEND_VAL temp878_54)))
(assert (= temp878_56 #x0000000000000002))
(assert (= temp878_57 temp878_56))
(assert (= temp878_58 (select ARGNAME_output_padding_NAMEEND_VAL temp878_57)))
(assert (= temp878_59 #x0000000000000003))
(assert (= temp878_60 temp878_59))
(assert (= temp878_61 (select ARGNAME_output_padding_NAMEEND_VAL temp878_60)))
(assert (= temp878_62 #x0000000000000004))
(assert (= temp878_63 temp878_62))
(assert (= temp878_64 (select ARGNAME_output_padding_NAMEEND_VAL temp878_63)))
(assert (= temp878_65 #x0000000000000005))
(assert (= temp878_66 temp878_65))
(assert (= temp878_67 (select ARGNAME_output_padding_NAMEEND_VAL temp878_66)))
(assert (= temp878_68 #x0000000000000000))
(assert (= temp878_69 #x0000000000000000))
(assert (= temp878_70 temp878_69))
(assert (= temp878_71 (select ARGNAME_output_padding_NAMEEND_VAL temp878_70)))
(assert (= temp878_72 #x0000000000000000))
(assert (= temp878_73 #x0000000000000001))
(assert (= temp878_74 temp878_73))
(assert (= temp878_75 (select ARGNAME_output_padding_NAMEEND_VAL temp878_74)))
(assert (= temp878_76 #x0000000000000000))
(assert (= temp878_77 #x0000000000000002))
(assert (= temp878_78 temp878_77))
(assert (= temp878_79 (select ARGNAME_output_padding_NAMEEND_VAL temp878_78)))
(assert (= temp878_80 #x0000000000000000))
(assert (= temp878_81 #x0000000000000003))
(assert (= temp878_82 temp878_81))
(assert (= temp878_83 (select ARGNAME_output_padding_NAMEEND_VAL temp878_82)))
(assert (= temp878_84 #x0000000000000000))
(assert (= temp878_85 #x0000000000000004))
(assert (= temp878_86 temp878_85))
(assert (= temp878_87 (select ARGNAME_output_padding_NAMEEND_VAL temp878_86)))
(assert (= temp878_88 #x0000000000000000))
(assert (= temp878_89 #x0000000000000005))
(assert (= temp878_90 temp878_89))
(assert (= temp878_91 (select ARGNAME_output_padding_NAMEEND_VAL temp878_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp878_71 temp878_68)
             (bvslt temp878_75 temp878_72)
             (bvslt temp878_79 temp878_76)
             (bvslt temp878_83 temp878_80)
             (bvslt temp878_87 temp878_84)
             (bvslt temp878_91 temp878_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp878_92 #x0000000000000000))
(assert (= var1191725 temp878_92))
(assert (= temp878_93 #x0000000000000000))
(assert (= temp878_94 temp878_93))
(assert (= temp878_95 (select ARGNAME_stride_NAMEEND_VAL temp878_94)))
(assert (= temp878_96 #x0000000000000001))
(assert (= temp878_97 temp878_96))
(assert (= temp878_98 (select ARGNAME_stride_NAMEEND_VAL temp878_97)))
(assert (= temp878_99 #x0000000000000002))
(assert (= temp878_100 temp878_99))
(assert (= temp878_101 (select ARGNAME_stride_NAMEEND_VAL temp878_100)))
(assert (= temp878_102 #x0000000000000003))
(assert (= temp878_103 temp878_102))
(assert (= temp878_104 (select ARGNAME_stride_NAMEEND_VAL temp878_103)))
(assert (= temp878_105 #x0000000000000004))
(assert (= temp878_106 temp878_105))
(assert (= temp878_107 (select ARGNAME_stride_NAMEEND_VAL temp878_106)))
(assert (= temp878_108 #x0000000000000005))
(assert (= temp878_109 temp878_108))
(assert (= temp878_110 (select ARGNAME_stride_NAMEEND_VAL temp878_109)))
(assert (= temp878_111 #x0000000000000000))
(assert (= temp878_112 #x0000000000000000))
(assert (= temp878_113 temp878_112))
(assert (= temp878_114 (select ARGNAME_stride_NAMEEND_VAL temp878_113)))
(assert (= temp878_115 #x0000000000000000))
(assert (= temp878_116 #x0000000000000001))
(assert (= temp878_117 temp878_116))
(assert (= temp878_118 (select ARGNAME_stride_NAMEEND_VAL temp878_117)))
(assert (= temp878_119 #x0000000000000000))
(assert (= temp878_120 #x0000000000000002))
(assert (= temp878_121 temp878_120))
(assert (= temp878_122 (select ARGNAME_stride_NAMEEND_VAL temp878_121)))
(assert (= temp878_123 #x0000000000000000))
(assert (= temp878_124 #x0000000000000003))
(assert (= temp878_125 temp878_124))
(assert (= temp878_126 (select ARGNAME_stride_NAMEEND_VAL temp878_125)))
(assert (= temp878_127 #x0000000000000000))
(assert (= temp878_128 #x0000000000000004))
(assert (= temp878_129 temp878_128))
(assert (= temp878_130 (select ARGNAME_stride_NAMEEND_VAL temp878_129)))
(assert (= temp878_131 #x0000000000000000))
(assert (= temp878_132 #x0000000000000005))
(assert (= temp878_133 temp878_132))
(assert (= temp878_134 (select ARGNAME_stride_NAMEEND_VAL temp878_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp878_114 temp878_111)
             (bvsle temp878_118 temp878_115)
             (bvsle temp878_122 temp878_119)
             (bvsle temp878_126 temp878_123)
             (bvsle temp878_130 temp878_127)
             (bvsle temp878_134 temp878_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp878_135 #x0000000000000000))
(assert (= var1191735 temp878_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp878_136 #x0000000000000001))
(assert (= var1191747 temp878_136))
(assert (= temp878_137 #x0000000000000000))
(assert (= var1179826 temp878_137))
(assert (= temp878_138 #x0000000000000000))
(assert (= temp878_139 temp878_138))
(assert (= temp878_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp878_139)))
(assert (= temp878_141 #x0000000000000001))
(assert (= temp878_142 temp878_141))
(assert (= temp878_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp878_142)))
(assert (= temp878_144 #x0000000000000002))
(assert (= temp878_145 temp878_144))
(assert (= temp878_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp878_145)))
(assert (= temp878_147 #x0000000000000003))
(assert (= temp878_148 temp878_147))
(assert (= temp878_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp878_148)))
(assert (= temp878_150 #x0000000000000004))
(assert (= temp878_151 temp878_150))
(assert (= temp878_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp878_151)))
(assert (= temp878_153 #x0000000000000005))
(assert (= temp878_154 temp878_153))
(assert (= temp878_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp878_154)))
(assert (= temp878_157 var1179826))
(assert (= temp878_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp878_157)))
(assert (= temp878_156 temp878_158))
(assert (= var1191780
   (ite (bvslt temp878_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp878_159 #x0000000000000000))
(assert (= var1191780 temp878_159))
(assert (= temp878_160 #x0000000000000000))
(assert (= var1179826 temp878_160))
(assert (= temp878_162 var1179826))
(assert (= temp878_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp878_162)))
(assert (= temp878_161 temp878_163))
(assert (= var1191802 (bvsmod temp878_161 ARGNAME_groups_NAMEEND)))
(assert (= temp878_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp878_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp878_165 #x0000000000000001))
(assert (= var1191803 temp878_165))
(assert (= temp878_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp878_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp878_167 #x0000000000000001))
(assert (= var1191823 temp878_167))
(assert (= temp878_168 #x0000000000000001))
(assert (= var1180714 temp878_168))
(assert (= temp878_169 #x0000000000000000))
(assert (= temp878_170 temp878_169))
(assert (= temp878_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp878_170)))
(assert (= temp878_172 #x0000000000000001))
(assert (= temp878_173 temp878_172))
(assert (= temp878_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp878_173)))
(assert (= temp878_175 #x0000000000000002))
(assert (= temp878_176 temp878_175))
(assert (= temp878_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp878_176)))
(assert (= temp878_178 #x0000000000000003))
(assert (= temp878_179 temp878_178))
(assert (= temp878_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp878_179)))
(assert (= temp878_181 #x0000000000000004))
(assert (= temp878_182 temp878_181))
(assert (= temp878_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp878_182)))
(assert (= temp878_184 #x0000000000000005))
(assert (= temp878_185 temp878_184))
(assert (= temp878_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp878_185)))
(assert (= temp878_187 #x0000000000000000))
(assert (= temp878_188
   (ite (bvslt var1180714 temp878_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp878_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp878_188)))
(assert (= var1191831 temp878_189))
(assert (bvslt (ite (bvslt var1180714 temp878_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp878_190 #x0000000000000001))
(assert (= var1180714 temp878_190))
(assert (= temp878_192 var1180714))
(assert (= temp878_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp878_192)))
(assert (= temp878_191 temp878_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp878_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp878_194 #x0000000000000001))
(assert (= var1191836 temp878_194))
(assert (= temp878_195 #x0000000000000000))
(assert (= var1179826 temp878_195))
(assert (= temp878_197 var1179826))
(assert (= temp878_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp878_197)))
(assert (= temp878_196 temp878_198))
(assert (= temp878_199 #x0000000000000002))
(assert (= var1586025 temp878_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp878_200 #x0000000000000001))
(assert (= var1191993 temp878_200))
(assert (= temp878_201 #x0000000000000001))
(assert (= var2700303 temp878_201))
(assert (= temp878_202 #x0000000000000001))
(assert (= var2962447 temp878_202))
(assert (= temp878_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp878_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp878_204 #x0000000000000001))
(assert (= var211058 temp878_204))
(assert (= temp878_205 #x0000000000000001))
(assert (= var211188 temp878_205))
(assert (= var3879401 var211188))
(assert (= temp878_206 #x0000000000000000))
(assert (= var3866802 temp878_206))
(assert (= temp878_207 #x0000000000000000))
(assert (= temp878_208
   (ite (bvslt var3866802 temp878_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp878_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp878_208)))
(assert (= var3879420 temp878_209))
(assert (bvslt (ite (bvslt var3866802 temp878_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp878_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp878_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp878_211 #x0000000000000001))
(assert (= var3879421 temp878_211))
(assert (= temp878_212 #x0000000000000000))
(assert (= var4079423 temp878_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp878_213 #x0000000000000002))
(assert (= var4208259 temp878_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp878_214 #x0000000000000000))
(assert (= var4273820 temp878_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var5321104 var211201))
(assert (= var5583248 var211201))
(assert (= temp878_215 #x0000000000000000))
(assert (= var5910928 temp878_215))
(assert (= temp878_216 #x0000000000000001))
(assert (= var211058 temp878_216))
(model-add temp878_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp878_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp878_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp878_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





