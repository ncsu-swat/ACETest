(declare-fun temp985_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp985_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp985_3 () (_ BitVec 64))
(declare-fun temp985_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp985_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp985_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp985_7 () (_ BitVec 64))
(declare-fun temp985_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp985_9 () (_ BitVec 64))
(declare-fun temp985_10 () (_ BitVec 64))
(declare-fun temp985_11 () (_ BitVec 64))
(declare-fun temp985_12 () (_ BitVec 64))
(declare-fun temp985_13 () (_ BitVec 64))
(declare-fun temp985_14 () (_ BitVec 64))
(declare-fun temp985_15 () (_ BitVec 64))
(declare-fun temp985_16 () (_ BitVec 64))
(declare-fun temp985_17 () (_ BitVec 64))
(declare-fun temp985_18 () (_ BitVec 64))
(declare-fun temp985_19 () (_ BitVec 64))
(declare-fun temp985_20 () (_ BitVec 64))
(declare-fun temp985_21 () (_ BitVec 64))
(declare-fun temp985_22 () (_ BitVec 64))
(declare-fun temp985_23 () (_ BitVec 64))
(declare-fun temp985_24 () (_ BitVec 64))
(declare-fun temp985_25 () (_ BitVec 64))
(declare-fun temp985_26 () (_ BitVec 64))
(declare-fun temp985_27 () (_ BitVec 64))
(declare-fun temp985_28 () (_ BitVec 64))
(declare-fun temp985_29 () (_ BitVec 64))
(declare-fun temp985_30 () (_ BitVec 64))
(declare-fun temp985_31 () (_ BitVec 64))
(declare-fun temp985_32 () (_ BitVec 64))
(declare-fun temp985_33 () (_ BitVec 64))
(declare-fun temp985_34 () (_ BitVec 64))
(declare-fun temp985_35 () (_ BitVec 64))
(declare-fun temp985_36 () (_ BitVec 64))
(declare-fun temp985_37 () (_ BitVec 64))
(declare-fun temp985_38 () (_ BitVec 64))
(declare-fun temp985_39 () (_ BitVec 64))
(declare-fun temp985_40 () (_ BitVec 64))
(declare-fun temp985_41 () (_ BitVec 64))
(declare-fun temp985_42 () (_ BitVec 64))
(declare-fun temp985_43 () (_ BitVec 64))
(declare-fun temp985_44 () (_ BitVec 64))
(declare-fun temp985_45 () (_ BitVec 64))
(declare-fun temp985_46 () (_ BitVec 64))
(declare-fun temp985_47 () (_ BitVec 64))
(declare-fun temp985_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp985_49 () (_ BitVec 64))
(declare-fun temp985_50 () (_ BitVec 64))
(declare-fun temp985_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp985_52 () (_ BitVec 64))
(declare-fun temp985_53 () (_ BitVec 64))
(declare-fun temp985_54 () (_ BitVec 64))
(declare-fun temp985_55 () (_ BitVec 64))
(declare-fun temp985_56 () (_ BitVec 64))
(declare-fun temp985_57 () (_ BitVec 64))
(declare-fun temp985_58 () (_ BitVec 64))
(declare-fun temp985_59 () (_ BitVec 64))
(declare-fun temp985_60 () (_ BitVec 64))
(declare-fun temp985_61 () (_ BitVec 64))
(declare-fun temp985_62 () (_ BitVec 64))
(declare-fun temp985_63 () (_ BitVec 64))
(declare-fun temp985_64 () (_ BitVec 64))
(declare-fun temp985_65 () (_ BitVec 64))
(declare-fun temp985_66 () (_ BitVec 64))
(declare-fun temp985_67 () (_ BitVec 64))
(declare-fun temp985_68 () (_ BitVec 64))
(declare-fun temp985_69 () (_ BitVec 64))
(declare-fun temp985_70 () (_ BitVec 64))
(declare-fun temp985_71 () (_ BitVec 64))
(declare-fun temp985_72 () (_ BitVec 64))
(declare-fun temp985_73 () (_ BitVec 64))
(declare-fun temp985_74 () (_ BitVec 64))
(declare-fun temp985_75 () (_ BitVec 64))
(declare-fun temp985_76 () (_ BitVec 64))
(declare-fun temp985_77 () (_ BitVec 64))
(declare-fun temp985_78 () (_ BitVec 64))
(declare-fun temp985_79 () (_ BitVec 64))
(declare-fun temp985_80 () (_ BitVec 64))
(declare-fun temp985_81 () (_ BitVec 64))
(declare-fun temp985_82 () (_ BitVec 64))
(declare-fun temp985_83 () (_ BitVec 64))
(declare-fun temp985_84 () (_ BitVec 64))
(declare-fun temp985_85 () (_ BitVec 64))
(declare-fun temp985_86 () (_ BitVec 64))
(declare-fun temp985_87 () (_ BitVec 64))
(declare-fun temp985_88 () (_ BitVec 64))
(declare-fun temp985_89 () (_ BitVec 64))
(declare-fun temp985_90 () (_ BitVec 64))
(declare-fun temp985_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp985_92 () (_ BitVec 64))
(declare-fun temp985_93 () (_ BitVec 64))
(declare-fun temp985_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp985_95 () (_ BitVec 64))
(declare-fun temp985_96 () (_ BitVec 64))
(declare-fun temp985_97 () (_ BitVec 64))
(declare-fun temp985_98 () (_ BitVec 64))
(declare-fun temp985_99 () (_ BitVec 64))
(declare-fun temp985_100 () (_ BitVec 64))
(declare-fun temp985_101 () (_ BitVec 64))
(declare-fun temp985_102 () (_ BitVec 64))
(declare-fun temp985_103 () (_ BitVec 64))
(declare-fun temp985_104 () (_ BitVec 64))
(declare-fun temp985_105 () (_ BitVec 64))
(declare-fun temp985_106 () (_ BitVec 64))
(declare-fun temp985_107 () (_ BitVec 64))
(declare-fun temp985_108 () (_ BitVec 64))
(declare-fun temp985_109 () (_ BitVec 64))
(declare-fun temp985_110 () (_ BitVec 64))
(declare-fun temp985_111 () (_ BitVec 64))
(declare-fun temp985_112 () (_ BitVec 64))
(declare-fun temp985_113 () (_ BitVec 64))
(declare-fun temp985_114 () (_ BitVec 64))
(declare-fun temp985_115 () (_ BitVec 64))
(declare-fun temp985_116 () (_ BitVec 64))
(declare-fun temp985_117 () (_ BitVec 64))
(declare-fun temp985_118 () (_ BitVec 64))
(declare-fun temp985_119 () (_ BitVec 64))
(declare-fun temp985_120 () (_ BitVec 64))
(declare-fun temp985_121 () (_ BitVec 64))
(declare-fun temp985_122 () (_ BitVec 64))
(declare-fun temp985_123 () (_ BitVec 64))
(declare-fun temp985_124 () (_ BitVec 64))
(declare-fun temp985_125 () (_ BitVec 64))
(declare-fun temp985_126 () (_ BitVec 64))
(declare-fun temp985_127 () (_ BitVec 64))
(declare-fun temp985_128 () (_ BitVec 64))
(declare-fun temp985_129 () (_ BitVec 64))
(declare-fun temp985_130 () (_ BitVec 64))
(declare-fun temp985_131 () (_ BitVec 64))
(declare-fun temp985_132 () (_ BitVec 64))
(declare-fun temp985_133 () (_ BitVec 64))
(declare-fun temp985_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp985_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp985_136 () (_ BitVec 64))
(declare-fun temp985_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp985_138 () (_ BitVec 64))
(declare-fun temp985_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp985_140 () (_ BitVec 64))
(declare-fun temp985_141 () (_ BitVec 64))
(declare-fun temp985_142 () (_ BitVec 64))
(declare-fun temp985_143 () (_ BitVec 64))
(declare-fun temp985_144 () (_ BitVec 64))
(declare-fun temp985_145 () (_ BitVec 64))
(declare-fun temp985_146 () (_ BitVec 64))
(declare-fun temp985_147 () (_ BitVec 64))
(declare-fun temp985_148 () (_ BitVec 64))
(declare-fun temp985_149 () (_ BitVec 64))
(declare-fun temp985_150 () (_ BitVec 64))
(declare-fun temp985_151 () (_ BitVec 64))
(declare-fun temp985_152 () (_ BitVec 64))
(declare-fun temp985_153 () (_ BitVec 64))
(declare-fun temp985_154 () (_ BitVec 64))
(declare-fun temp985_155 () (_ BitVec 64))
(declare-fun temp985_157 () (_ BitVec 64))
(declare-fun temp985_158 () (_ BitVec 64))
(declare-fun temp985_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp985_159 () (_ BitVec 64))
(declare-fun temp985_160 () (_ BitVec 64))
(declare-fun temp985_162 () (_ BitVec 64))
(declare-fun temp985_163 () (_ BitVec 64))
(declare-fun temp985_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp985_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp985_165 () (_ BitVec 64))
(declare-fun temp985_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp985_167 () (_ BitVec 64))
(declare-fun temp985_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp985_169 () (_ BitVec 64))
(declare-fun temp985_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp985_171 () (_ BitVec 64))
(declare-fun temp985_172 () (_ BitVec 64))
(declare-fun temp985_173 () (_ BitVec 64))
(declare-fun temp985_174 () (_ BitVec 64))
(declare-fun temp985_175 () (_ BitVec 64))
(declare-fun temp985_176 () (_ BitVec 64))
(declare-fun temp985_177 () (_ BitVec 64))
(declare-fun temp985_178 () (_ BitVec 64))
(declare-fun temp985_179 () (_ BitVec 64))
(declare-fun temp985_180 () (_ BitVec 64))
(declare-fun temp985_181 () (_ BitVec 64))
(declare-fun temp985_182 () (_ BitVec 64))
(declare-fun temp985_183 () (_ BitVec 64))
(declare-fun temp985_184 () (_ BitVec 64))
(declare-fun temp985_185 () (_ BitVec 64))
(declare-fun temp985_186 () (_ BitVec 64))
(declare-fun temp985_187 () (_ BitVec 64))
(declare-fun temp985_188 () (_ BitVec 64))
(declare-fun temp985_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp985_190 () (_ BitVec 64))
(declare-fun temp985_192 () (_ BitVec 64))
(declare-fun temp985_193 () (_ BitVec 64))
(declare-fun temp985_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp985_194 () (_ BitVec 64))
(declare-fun temp985_195 () (_ BitVec 64))
(declare-fun temp985_197 () (_ BitVec 64))
(declare-fun temp985_198 () (_ BitVec 64))
(declare-fun temp985_196 () (_ BitVec 64))
(declare-fun temp985_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp985_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp985_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp985_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp985_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp985_204 () (_ BitVec 64))
(declare-fun temp985_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp985_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp985_207 () (_ BitVec 64))
(declare-fun temp985_208 () (_ BitVec 64))
(declare-fun temp985_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp985_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp985_211 () (_ BitVec 64))
(declare-fun temp985_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp985_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp985_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp985_215 () (_ BitVec 64))
(assert (= temp985_1 #x0000000000000001))
(assert (= var77203 temp985_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp985_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp985_2)))
(assert (= temp985_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp985_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp985_4 #x0000000000000000))
(assert (= var210941 temp985_4))
(assert (= temp985_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp985_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp985_6 #x0000000000000000))
(assert (= var210986 temp985_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp985_7 #x0000000000000000))
(assert (= temp985_8 temp985_7))
(assert (= temp985_9 (select ARGNAME_padding_NAMEEND_VAL temp985_8)))
(assert (= temp985_10 #x0000000000000001))
(assert (= temp985_11 temp985_10))
(assert (= temp985_12 (select ARGNAME_padding_NAMEEND_VAL temp985_11)))
(assert (= temp985_13 #x0000000000000002))
(assert (= temp985_14 temp985_13))
(assert (= temp985_15 (select ARGNAME_padding_NAMEEND_VAL temp985_14)))
(assert (= temp985_16 #x0000000000000003))
(assert (= temp985_17 temp985_16))
(assert (= temp985_18 (select ARGNAME_padding_NAMEEND_VAL temp985_17)))
(assert (= temp985_19 #x0000000000000004))
(assert (= temp985_20 temp985_19))
(assert (= temp985_21 (select ARGNAME_padding_NAMEEND_VAL temp985_20)))
(assert (= temp985_22 #x0000000000000005))
(assert (= temp985_23 temp985_22))
(assert (= temp985_24 (select ARGNAME_padding_NAMEEND_VAL temp985_23)))
(assert (= temp985_25 #x0000000000000000))
(assert (= temp985_26 #x0000000000000000))
(assert (= temp985_27 temp985_26))
(assert (= temp985_28 (select ARGNAME_padding_NAMEEND_VAL temp985_27)))
(assert (= temp985_29 #x0000000000000000))
(assert (= temp985_30 #x0000000000000001))
(assert (= temp985_31 temp985_30))
(assert (= temp985_32 (select ARGNAME_padding_NAMEEND_VAL temp985_31)))
(assert (= temp985_33 #x0000000000000000))
(assert (= temp985_34 #x0000000000000002))
(assert (= temp985_35 temp985_34))
(assert (= temp985_36 (select ARGNAME_padding_NAMEEND_VAL temp985_35)))
(assert (= temp985_37 #x0000000000000000))
(assert (= temp985_38 #x0000000000000003))
(assert (= temp985_39 temp985_38))
(assert (= temp985_40 (select ARGNAME_padding_NAMEEND_VAL temp985_39)))
(assert (= temp985_41 #x0000000000000000))
(assert (= temp985_42 #x0000000000000004))
(assert (= temp985_43 temp985_42))
(assert (= temp985_44 (select ARGNAME_padding_NAMEEND_VAL temp985_43)))
(assert (= temp985_45 #x0000000000000000))
(assert (= temp985_46 #x0000000000000005))
(assert (= temp985_47 temp985_46))
(assert (= temp985_48 (select ARGNAME_padding_NAMEEND_VAL temp985_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp985_28 temp985_25)
             (bvslt temp985_32 temp985_29)
             (bvslt temp985_36 temp985_33)
             (bvslt temp985_40 temp985_37)
             (bvslt temp985_44 temp985_41)
             (bvslt temp985_48 temp985_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp985_49 #x0000000000000000))
(assert (= var1191714 temp985_49))
(assert (= temp985_50 #x0000000000000000))
(assert (= temp985_51 temp985_50))
(assert (= temp985_52 (select ARGNAME_output_padding_NAMEEND_VAL temp985_51)))
(assert (= temp985_53 #x0000000000000001))
(assert (= temp985_54 temp985_53))
(assert (= temp985_55 (select ARGNAME_output_padding_NAMEEND_VAL temp985_54)))
(assert (= temp985_56 #x0000000000000002))
(assert (= temp985_57 temp985_56))
(assert (= temp985_58 (select ARGNAME_output_padding_NAMEEND_VAL temp985_57)))
(assert (= temp985_59 #x0000000000000003))
(assert (= temp985_60 temp985_59))
(assert (= temp985_61 (select ARGNAME_output_padding_NAMEEND_VAL temp985_60)))
(assert (= temp985_62 #x0000000000000004))
(assert (= temp985_63 temp985_62))
(assert (= temp985_64 (select ARGNAME_output_padding_NAMEEND_VAL temp985_63)))
(assert (= temp985_65 #x0000000000000005))
(assert (= temp985_66 temp985_65))
(assert (= temp985_67 (select ARGNAME_output_padding_NAMEEND_VAL temp985_66)))
(assert (= temp985_68 #x0000000000000000))
(assert (= temp985_69 #x0000000000000000))
(assert (= temp985_70 temp985_69))
(assert (= temp985_71 (select ARGNAME_output_padding_NAMEEND_VAL temp985_70)))
(assert (= temp985_72 #x0000000000000000))
(assert (= temp985_73 #x0000000000000001))
(assert (= temp985_74 temp985_73))
(assert (= temp985_75 (select ARGNAME_output_padding_NAMEEND_VAL temp985_74)))
(assert (= temp985_76 #x0000000000000000))
(assert (= temp985_77 #x0000000000000002))
(assert (= temp985_78 temp985_77))
(assert (= temp985_79 (select ARGNAME_output_padding_NAMEEND_VAL temp985_78)))
(assert (= temp985_80 #x0000000000000000))
(assert (= temp985_81 #x0000000000000003))
(assert (= temp985_82 temp985_81))
(assert (= temp985_83 (select ARGNAME_output_padding_NAMEEND_VAL temp985_82)))
(assert (= temp985_84 #x0000000000000000))
(assert (= temp985_85 #x0000000000000004))
(assert (= temp985_86 temp985_85))
(assert (= temp985_87 (select ARGNAME_output_padding_NAMEEND_VAL temp985_86)))
(assert (= temp985_88 #x0000000000000000))
(assert (= temp985_89 #x0000000000000005))
(assert (= temp985_90 temp985_89))
(assert (= temp985_91 (select ARGNAME_output_padding_NAMEEND_VAL temp985_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp985_71 temp985_68)
             (bvslt temp985_75 temp985_72)
             (bvslt temp985_79 temp985_76)
             (bvslt temp985_83 temp985_80)
             (bvslt temp985_87 temp985_84)
             (bvslt temp985_91 temp985_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp985_92 #x0000000000000000))
(assert (= var1191725 temp985_92))
(assert (= temp985_93 #x0000000000000000))
(assert (= temp985_94 temp985_93))
(assert (= temp985_95 (select ARGNAME_stride_NAMEEND_VAL temp985_94)))
(assert (= temp985_96 #x0000000000000001))
(assert (= temp985_97 temp985_96))
(assert (= temp985_98 (select ARGNAME_stride_NAMEEND_VAL temp985_97)))
(assert (= temp985_99 #x0000000000000002))
(assert (= temp985_100 temp985_99))
(assert (= temp985_101 (select ARGNAME_stride_NAMEEND_VAL temp985_100)))
(assert (= temp985_102 #x0000000000000003))
(assert (= temp985_103 temp985_102))
(assert (= temp985_104 (select ARGNAME_stride_NAMEEND_VAL temp985_103)))
(assert (= temp985_105 #x0000000000000004))
(assert (= temp985_106 temp985_105))
(assert (= temp985_107 (select ARGNAME_stride_NAMEEND_VAL temp985_106)))
(assert (= temp985_108 #x0000000000000005))
(assert (= temp985_109 temp985_108))
(assert (= temp985_110 (select ARGNAME_stride_NAMEEND_VAL temp985_109)))
(assert (= temp985_111 #x0000000000000000))
(assert (= temp985_112 #x0000000000000000))
(assert (= temp985_113 temp985_112))
(assert (= temp985_114 (select ARGNAME_stride_NAMEEND_VAL temp985_113)))
(assert (= temp985_115 #x0000000000000000))
(assert (= temp985_116 #x0000000000000001))
(assert (= temp985_117 temp985_116))
(assert (= temp985_118 (select ARGNAME_stride_NAMEEND_VAL temp985_117)))
(assert (= temp985_119 #x0000000000000000))
(assert (= temp985_120 #x0000000000000002))
(assert (= temp985_121 temp985_120))
(assert (= temp985_122 (select ARGNAME_stride_NAMEEND_VAL temp985_121)))
(assert (= temp985_123 #x0000000000000000))
(assert (= temp985_124 #x0000000000000003))
(assert (= temp985_125 temp985_124))
(assert (= temp985_126 (select ARGNAME_stride_NAMEEND_VAL temp985_125)))
(assert (= temp985_127 #x0000000000000000))
(assert (= temp985_128 #x0000000000000004))
(assert (= temp985_129 temp985_128))
(assert (= temp985_130 (select ARGNAME_stride_NAMEEND_VAL temp985_129)))
(assert (= temp985_131 #x0000000000000000))
(assert (= temp985_132 #x0000000000000005))
(assert (= temp985_133 temp985_132))
(assert (= temp985_134 (select ARGNAME_stride_NAMEEND_VAL temp985_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp985_114 temp985_111)
             (bvsle temp985_118 temp985_115)
             (bvsle temp985_122 temp985_119)
             (bvsle temp985_126 temp985_123)
             (bvsle temp985_130 temp985_127)
             (bvsle temp985_134 temp985_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp985_135 #x0000000000000000))
(assert (= var1191735 temp985_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp985_136 #x0000000000000001))
(assert (= var1191747 temp985_136))
(assert (= temp985_137 #x0000000000000000))
(assert (= var1179826 temp985_137))
(assert (= temp985_138 #x0000000000000000))
(assert (= temp985_139 temp985_138))
(assert (= temp985_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp985_139)))
(assert (= temp985_141 #x0000000000000001))
(assert (= temp985_142 temp985_141))
(assert (= temp985_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp985_142)))
(assert (= temp985_144 #x0000000000000002))
(assert (= temp985_145 temp985_144))
(assert (= temp985_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp985_145)))
(assert (= temp985_147 #x0000000000000003))
(assert (= temp985_148 temp985_147))
(assert (= temp985_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp985_148)))
(assert (= temp985_150 #x0000000000000004))
(assert (= temp985_151 temp985_150))
(assert (= temp985_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp985_151)))
(assert (= temp985_153 #x0000000000000005))
(assert (= temp985_154 temp985_153))
(assert (= temp985_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp985_154)))
(assert (= temp985_157 var1179826))
(assert (= temp985_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp985_157)))
(assert (= temp985_156 temp985_158))
(assert (= var1191780
   (ite (bvslt temp985_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp985_159 #x0000000000000000))
(assert (= var1191780 temp985_159))
(assert (= temp985_160 #x0000000000000000))
(assert (= var1179826 temp985_160))
(assert (= temp985_162 var1179826))
(assert (= temp985_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp985_162)))
(assert (= temp985_161 temp985_163))
(assert (= var1191802 (bvsmod temp985_161 ARGNAME_groups_NAMEEND)))
(assert (= temp985_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp985_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp985_165 #x0000000000000001))
(assert (= var1191803 temp985_165))
(assert (= temp985_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp985_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp985_167 #x0000000000000001))
(assert (= var1191823 temp985_167))
(assert (= temp985_168 #x0000000000000001))
(assert (= var1180714 temp985_168))
(assert (= temp985_169 #x0000000000000000))
(assert (= temp985_170 temp985_169))
(assert (= temp985_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp985_170)))
(assert (= temp985_172 #x0000000000000001))
(assert (= temp985_173 temp985_172))
(assert (= temp985_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp985_173)))
(assert (= temp985_175 #x0000000000000002))
(assert (= temp985_176 temp985_175))
(assert (= temp985_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp985_176)))
(assert (= temp985_178 #x0000000000000003))
(assert (= temp985_179 temp985_178))
(assert (= temp985_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp985_179)))
(assert (= temp985_181 #x0000000000000004))
(assert (= temp985_182 temp985_181))
(assert (= temp985_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp985_182)))
(assert (= temp985_184 #x0000000000000005))
(assert (= temp985_185 temp985_184))
(assert (= temp985_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp985_185)))
(assert (= temp985_187 #x0000000000000000))
(assert (= temp985_188
   (ite (bvslt var1180714 temp985_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp985_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp985_188)))
(assert (= var1191831 temp985_189))
(assert (bvslt (ite (bvslt var1180714 temp985_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp985_190 #x0000000000000001))
(assert (= var1180714 temp985_190))
(assert (= temp985_192 var1180714))
(assert (= temp985_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp985_192)))
(assert (= temp985_191 temp985_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp985_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp985_194 #x0000000000000001))
(assert (= var1191836 temp985_194))
(assert (= temp985_195 #x0000000000000000))
(assert (= var1179826 temp985_195))
(assert (= temp985_197 var1179826))
(assert (= temp985_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp985_197)))
(assert (= temp985_196 temp985_198))
(assert (= temp985_199 #x0000000000000002))
(assert (= var1586025 temp985_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp985_200 #x0000000000000001))
(assert (= var1191993 temp985_200))
(assert (= temp985_201 #x0000000000000001))
(assert (= var2700303 temp985_201))
(assert (= temp985_202 #x0000000000000001))
(assert (= var2962447 temp985_202))
(assert (= temp985_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp985_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp985_204 #x0000000000000001))
(assert (= var211058 temp985_204))
(assert (= temp985_205 #x0000000000000001))
(assert (= var211188 temp985_205))
(assert (= var3879401 var211188))
(assert (= temp985_206 #x0000000000000000))
(assert (= var3866802 temp985_206))
(assert (= temp985_207 #x0000000000000000))
(assert (= temp985_208
   (ite (bvslt var3866802 temp985_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp985_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp985_208)))
(assert (= var3879420 temp985_209))
(assert (bvslt (ite (bvslt var3866802 temp985_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp985_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp985_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp985_211 #x0000000000000001))
(assert (= var3879421 temp985_211))
(assert (= temp985_212 #x0000000000000000))
(assert (= var4079423 temp985_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp985_213 #x0000000000000002))
(assert (= var4208259 temp985_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp985_214 #x0000000000000000))
(assert (= var4273820 temp985_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp985_215 #x0000000000000001))
(assert (= var211058 temp985_215))
(model-add temp985_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp985_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp985_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp985_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





