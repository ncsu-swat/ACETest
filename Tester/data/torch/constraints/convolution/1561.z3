(declare-fun temp10876_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10876_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10876_3 () (_ BitVec 64))
(declare-fun temp10876_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10876_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10876_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10876_7 () (_ BitVec 64))
(declare-fun temp10876_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10876_9 () (_ BitVec 64))
(declare-fun temp10876_10 () (_ BitVec 64))
(declare-fun temp10876_11 () (_ BitVec 64))
(declare-fun temp10876_12 () (_ BitVec 64))
(declare-fun temp10876_13 () (_ BitVec 64))
(declare-fun temp10876_14 () (_ BitVec 64))
(declare-fun temp10876_15 () (_ BitVec 64))
(declare-fun temp10876_16 () (_ BitVec 64))
(declare-fun temp10876_17 () (_ BitVec 64))
(declare-fun temp10876_18 () (_ BitVec 64))
(declare-fun temp10876_19 () (_ BitVec 64))
(declare-fun temp10876_20 () (_ BitVec 64))
(declare-fun temp10876_21 () (_ BitVec 64))
(declare-fun temp10876_22 () (_ BitVec 64))
(declare-fun temp10876_23 () (_ BitVec 64))
(declare-fun temp10876_24 () (_ BitVec 64))
(declare-fun temp10876_25 () (_ BitVec 64))
(declare-fun temp10876_26 () (_ BitVec 64))
(declare-fun temp10876_27 () (_ BitVec 64))
(declare-fun temp10876_28 () (_ BitVec 64))
(declare-fun temp10876_29 () (_ BitVec 64))
(declare-fun temp10876_30 () (_ BitVec 64))
(declare-fun temp10876_31 () (_ BitVec 64))
(declare-fun temp10876_32 () (_ BitVec 64))
(declare-fun temp10876_33 () (_ BitVec 64))
(declare-fun temp10876_34 () (_ BitVec 64))
(declare-fun temp10876_35 () (_ BitVec 64))
(declare-fun temp10876_36 () (_ BitVec 64))
(declare-fun temp10876_37 () (_ BitVec 64))
(declare-fun temp10876_38 () (_ BitVec 64))
(declare-fun temp10876_39 () (_ BitVec 64))
(declare-fun temp10876_40 () (_ BitVec 64))
(declare-fun temp10876_41 () (_ BitVec 64))
(declare-fun temp10876_42 () (_ BitVec 64))
(declare-fun temp10876_43 () (_ BitVec 64))
(declare-fun temp10876_44 () (_ BitVec 64))
(declare-fun temp10876_45 () (_ BitVec 64))
(declare-fun temp10876_46 () (_ BitVec 64))
(declare-fun temp10876_47 () (_ BitVec 64))
(declare-fun temp10876_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10876_49 () (_ BitVec 64))
(declare-fun temp10876_50 () (_ BitVec 64))
(declare-fun temp10876_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10876_52 () (_ BitVec 64))
(declare-fun temp10876_53 () (_ BitVec 64))
(declare-fun temp10876_54 () (_ BitVec 64))
(declare-fun temp10876_55 () (_ BitVec 64))
(declare-fun temp10876_56 () (_ BitVec 64))
(declare-fun temp10876_57 () (_ BitVec 64))
(declare-fun temp10876_58 () (_ BitVec 64))
(declare-fun temp10876_59 () (_ BitVec 64))
(declare-fun temp10876_60 () (_ BitVec 64))
(declare-fun temp10876_61 () (_ BitVec 64))
(declare-fun temp10876_62 () (_ BitVec 64))
(declare-fun temp10876_63 () (_ BitVec 64))
(declare-fun temp10876_64 () (_ BitVec 64))
(declare-fun temp10876_65 () (_ BitVec 64))
(declare-fun temp10876_66 () (_ BitVec 64))
(declare-fun temp10876_67 () (_ BitVec 64))
(declare-fun temp10876_68 () (_ BitVec 64))
(declare-fun temp10876_69 () (_ BitVec 64))
(declare-fun temp10876_70 () (_ BitVec 64))
(declare-fun temp10876_71 () (_ BitVec 64))
(declare-fun temp10876_72 () (_ BitVec 64))
(declare-fun temp10876_73 () (_ BitVec 64))
(declare-fun temp10876_74 () (_ BitVec 64))
(declare-fun temp10876_75 () (_ BitVec 64))
(declare-fun temp10876_76 () (_ BitVec 64))
(declare-fun temp10876_77 () (_ BitVec 64))
(declare-fun temp10876_78 () (_ BitVec 64))
(declare-fun temp10876_79 () (_ BitVec 64))
(declare-fun temp10876_80 () (_ BitVec 64))
(declare-fun temp10876_81 () (_ BitVec 64))
(declare-fun temp10876_82 () (_ BitVec 64))
(declare-fun temp10876_83 () (_ BitVec 64))
(declare-fun temp10876_84 () (_ BitVec 64))
(declare-fun temp10876_85 () (_ BitVec 64))
(declare-fun temp10876_86 () (_ BitVec 64))
(declare-fun temp10876_87 () (_ BitVec 64))
(declare-fun temp10876_88 () (_ BitVec 64))
(declare-fun temp10876_89 () (_ BitVec 64))
(declare-fun temp10876_90 () (_ BitVec 64))
(declare-fun temp10876_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10876_92 () (_ BitVec 64))
(declare-fun temp10876_93 () (_ BitVec 64))
(declare-fun temp10876_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10876_95 () (_ BitVec 64))
(declare-fun temp10876_96 () (_ BitVec 64))
(declare-fun temp10876_97 () (_ BitVec 64))
(declare-fun temp10876_98 () (_ BitVec 64))
(declare-fun temp10876_99 () (_ BitVec 64))
(declare-fun temp10876_100 () (_ BitVec 64))
(declare-fun temp10876_101 () (_ BitVec 64))
(declare-fun temp10876_102 () (_ BitVec 64))
(declare-fun temp10876_103 () (_ BitVec 64))
(declare-fun temp10876_104 () (_ BitVec 64))
(declare-fun temp10876_105 () (_ BitVec 64))
(declare-fun temp10876_106 () (_ BitVec 64))
(declare-fun temp10876_107 () (_ BitVec 64))
(declare-fun temp10876_108 () (_ BitVec 64))
(declare-fun temp10876_109 () (_ BitVec 64))
(declare-fun temp10876_110 () (_ BitVec 64))
(declare-fun temp10876_111 () (_ BitVec 64))
(declare-fun temp10876_112 () (_ BitVec 64))
(declare-fun temp10876_113 () (_ BitVec 64))
(declare-fun temp10876_114 () (_ BitVec 64))
(declare-fun temp10876_115 () (_ BitVec 64))
(declare-fun temp10876_116 () (_ BitVec 64))
(declare-fun temp10876_117 () (_ BitVec 64))
(declare-fun temp10876_118 () (_ BitVec 64))
(declare-fun temp10876_119 () (_ BitVec 64))
(declare-fun temp10876_120 () (_ BitVec 64))
(declare-fun temp10876_121 () (_ BitVec 64))
(declare-fun temp10876_122 () (_ BitVec 64))
(declare-fun temp10876_123 () (_ BitVec 64))
(declare-fun temp10876_124 () (_ BitVec 64))
(declare-fun temp10876_125 () (_ BitVec 64))
(declare-fun temp10876_126 () (_ BitVec 64))
(declare-fun temp10876_127 () (_ BitVec 64))
(declare-fun temp10876_128 () (_ BitVec 64))
(declare-fun temp10876_129 () (_ BitVec 64))
(declare-fun temp10876_130 () (_ BitVec 64))
(declare-fun temp10876_131 () (_ BitVec 64))
(declare-fun temp10876_132 () (_ BitVec 64))
(declare-fun temp10876_133 () (_ BitVec 64))
(declare-fun temp10876_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10876_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10876_136 () (_ BitVec 64))
(declare-fun temp10876_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10876_138 () (_ BitVec 64))
(declare-fun temp10876_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10876_140 () (_ BitVec 64))
(declare-fun temp10876_141 () (_ BitVec 64))
(declare-fun temp10876_142 () (_ BitVec 64))
(declare-fun temp10876_143 () (_ BitVec 64))
(declare-fun temp10876_144 () (_ BitVec 64))
(declare-fun temp10876_145 () (_ BitVec 64))
(declare-fun temp10876_146 () (_ BitVec 64))
(declare-fun temp10876_147 () (_ BitVec 64))
(declare-fun temp10876_148 () (_ BitVec 64))
(declare-fun temp10876_149 () (_ BitVec 64))
(declare-fun temp10876_150 () (_ BitVec 64))
(declare-fun temp10876_151 () (_ BitVec 64))
(declare-fun temp10876_152 () (_ BitVec 64))
(declare-fun temp10876_153 () (_ BitVec 64))
(declare-fun temp10876_154 () (_ BitVec 64))
(declare-fun temp10876_155 () (_ BitVec 64))
(declare-fun temp10876_157 () (_ BitVec 64))
(declare-fun temp10876_158 () (_ BitVec 64))
(declare-fun temp10876_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10876_159 () (_ BitVec 64))
(declare-fun temp10876_160 () (_ BitVec 64))
(declare-fun temp10876_162 () (_ BitVec 64))
(declare-fun temp10876_163 () (_ BitVec 64))
(declare-fun temp10876_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10876_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10876_165 () (_ BitVec 64))
(declare-fun temp10876_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10876_167 () (_ BitVec 64))
(declare-fun temp10876_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10876_169 () (_ BitVec 64))
(declare-fun temp10876_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10876_171 () (_ BitVec 64))
(declare-fun temp10876_172 () (_ BitVec 64))
(declare-fun temp10876_173 () (_ BitVec 64))
(declare-fun temp10876_174 () (_ BitVec 64))
(declare-fun temp10876_175 () (_ BitVec 64))
(declare-fun temp10876_176 () (_ BitVec 64))
(declare-fun temp10876_177 () (_ BitVec 64))
(declare-fun temp10876_178 () (_ BitVec 64))
(declare-fun temp10876_179 () (_ BitVec 64))
(declare-fun temp10876_180 () (_ BitVec 64))
(declare-fun temp10876_181 () (_ BitVec 64))
(declare-fun temp10876_182 () (_ BitVec 64))
(declare-fun temp10876_183 () (_ BitVec 64))
(declare-fun temp10876_184 () (_ BitVec 64))
(declare-fun temp10876_185 () (_ BitVec 64))
(declare-fun temp10876_186 () (_ BitVec 64))
(declare-fun temp10876_187 () (_ BitVec 64))
(declare-fun temp10876_188 () (_ BitVec 64))
(declare-fun temp10876_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10876_190 () (_ BitVec 64))
(declare-fun temp10876_192 () (_ BitVec 64))
(declare-fun temp10876_193 () (_ BitVec 64))
(declare-fun temp10876_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10876_194 () (_ BitVec 64))
(declare-fun temp10876_195 () (_ BitVec 64))
(declare-fun temp10876_197 () (_ BitVec 64))
(declare-fun temp10876_198 () (_ BitVec 64))
(declare-fun temp10876_196 () (_ BitVec 64))
(declare-fun temp10876_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10876_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10876_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10876_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10876_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10876_204 () (_ BitVec 64))
(declare-fun temp10876_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10876_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10876_207 () (_ BitVec 64))
(declare-fun temp10876_208 () (_ BitVec 64))
(declare-fun temp10876_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10876_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10876_211 () (_ BitVec 64))
(declare-fun temp10876_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10876_213 () (_ BitVec 64))
(declare-fun temp10876_214 () (_ BitVec 64))
(declare-fun temp10876_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10876_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10876_217 () (_ BitVec 64))
(declare-fun temp10876_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10876_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10876_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var5714320 () (_ BitVec 64))
(declare-fun var5976464 () (_ BitVec 64))
(declare-fun temp10876_221 () (_ BitVec 64))
(declare-fun var6304144 () (_ BitVec 64))
(declare-fun temp10876_222 () (_ BitVec 64))
(declare-fun temp10876_223 () (_ BitVec 64))
(declare-fun var7746324 () (_ BitVec 64))
(declare-fun var7746291 () (_ BitVec 64))
(declare-fun var7614855 () (_ BitVec 64))
(declare-fun var7614851 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp10876_224 () (_ BitVec 64))
(assert (= temp10876_1 #x0000000000000001))
(assert (= var77203 temp10876_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10876_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10876_2)))
(assert (= temp10876_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10876_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10876_4 #x0000000000000000))
(assert (= var210941 temp10876_4))
(assert (= temp10876_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10876_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10876_6 #x0000000000000000))
(assert (= var210986 temp10876_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10876_7 #x0000000000000000))
(assert (= temp10876_8 temp10876_7))
(assert (= temp10876_9 (select ARGNAME_padding_NAMEEND_VAL temp10876_8)))
(assert (= temp10876_10 #x0000000000000001))
(assert (= temp10876_11 temp10876_10))
(assert (= temp10876_12 (select ARGNAME_padding_NAMEEND_VAL temp10876_11)))
(assert (= temp10876_13 #x0000000000000002))
(assert (= temp10876_14 temp10876_13))
(assert (= temp10876_15 (select ARGNAME_padding_NAMEEND_VAL temp10876_14)))
(assert (= temp10876_16 #x0000000000000003))
(assert (= temp10876_17 temp10876_16))
(assert (= temp10876_18 (select ARGNAME_padding_NAMEEND_VAL temp10876_17)))
(assert (= temp10876_19 #x0000000000000004))
(assert (= temp10876_20 temp10876_19))
(assert (= temp10876_21 (select ARGNAME_padding_NAMEEND_VAL temp10876_20)))
(assert (= temp10876_22 #x0000000000000005))
(assert (= temp10876_23 temp10876_22))
(assert (= temp10876_24 (select ARGNAME_padding_NAMEEND_VAL temp10876_23)))
(assert (= temp10876_25 #x0000000000000000))
(assert (= temp10876_26 #x0000000000000000))
(assert (= temp10876_27 temp10876_26))
(assert (= temp10876_28 (select ARGNAME_padding_NAMEEND_VAL temp10876_27)))
(assert (= temp10876_29 #x0000000000000000))
(assert (= temp10876_30 #x0000000000000001))
(assert (= temp10876_31 temp10876_30))
(assert (= temp10876_32 (select ARGNAME_padding_NAMEEND_VAL temp10876_31)))
(assert (= temp10876_33 #x0000000000000000))
(assert (= temp10876_34 #x0000000000000002))
(assert (= temp10876_35 temp10876_34))
(assert (= temp10876_36 (select ARGNAME_padding_NAMEEND_VAL temp10876_35)))
(assert (= temp10876_37 #x0000000000000000))
(assert (= temp10876_38 #x0000000000000003))
(assert (= temp10876_39 temp10876_38))
(assert (= temp10876_40 (select ARGNAME_padding_NAMEEND_VAL temp10876_39)))
(assert (= temp10876_41 #x0000000000000000))
(assert (= temp10876_42 #x0000000000000004))
(assert (= temp10876_43 temp10876_42))
(assert (= temp10876_44 (select ARGNAME_padding_NAMEEND_VAL temp10876_43)))
(assert (= temp10876_45 #x0000000000000000))
(assert (= temp10876_46 #x0000000000000005))
(assert (= temp10876_47 temp10876_46))
(assert (= temp10876_48 (select ARGNAME_padding_NAMEEND_VAL temp10876_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10876_28 temp10876_25)
             (bvslt temp10876_32 temp10876_29)
             (bvslt temp10876_36 temp10876_33)
             (bvslt temp10876_40 temp10876_37)
             (bvslt temp10876_44 temp10876_41)
             (bvslt temp10876_48 temp10876_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10876_49 #x0000000000000000))
(assert (= var1191714 temp10876_49))
(assert (= temp10876_50 #x0000000000000000))
(assert (= temp10876_51 temp10876_50))
(assert (= temp10876_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10876_51)))
(assert (= temp10876_53 #x0000000000000001))
(assert (= temp10876_54 temp10876_53))
(assert (= temp10876_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10876_54)))
(assert (= temp10876_56 #x0000000000000002))
(assert (= temp10876_57 temp10876_56))
(assert (= temp10876_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10876_57)))
(assert (= temp10876_59 #x0000000000000003))
(assert (= temp10876_60 temp10876_59))
(assert (= temp10876_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10876_60)))
(assert (= temp10876_62 #x0000000000000004))
(assert (= temp10876_63 temp10876_62))
(assert (= temp10876_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10876_63)))
(assert (= temp10876_65 #x0000000000000005))
(assert (= temp10876_66 temp10876_65))
(assert (= temp10876_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10876_66)))
(assert (= temp10876_68 #x0000000000000000))
(assert (= temp10876_69 #x0000000000000000))
(assert (= temp10876_70 temp10876_69))
(assert (= temp10876_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10876_70)))
(assert (= temp10876_72 #x0000000000000000))
(assert (= temp10876_73 #x0000000000000001))
(assert (= temp10876_74 temp10876_73))
(assert (= temp10876_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10876_74)))
(assert (= temp10876_76 #x0000000000000000))
(assert (= temp10876_77 #x0000000000000002))
(assert (= temp10876_78 temp10876_77))
(assert (= temp10876_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10876_78)))
(assert (= temp10876_80 #x0000000000000000))
(assert (= temp10876_81 #x0000000000000003))
(assert (= temp10876_82 temp10876_81))
(assert (= temp10876_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10876_82)))
(assert (= temp10876_84 #x0000000000000000))
(assert (= temp10876_85 #x0000000000000004))
(assert (= temp10876_86 temp10876_85))
(assert (= temp10876_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10876_86)))
(assert (= temp10876_88 #x0000000000000000))
(assert (= temp10876_89 #x0000000000000005))
(assert (= temp10876_90 temp10876_89))
(assert (= temp10876_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10876_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10876_71 temp10876_68)
             (bvslt temp10876_75 temp10876_72)
             (bvslt temp10876_79 temp10876_76)
             (bvslt temp10876_83 temp10876_80)
             (bvslt temp10876_87 temp10876_84)
             (bvslt temp10876_91 temp10876_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10876_92 #x0000000000000000))
(assert (= var1191725 temp10876_92))
(assert (= temp10876_93 #x0000000000000000))
(assert (= temp10876_94 temp10876_93))
(assert (= temp10876_95 (select ARGNAME_stride_NAMEEND_VAL temp10876_94)))
(assert (= temp10876_96 #x0000000000000001))
(assert (= temp10876_97 temp10876_96))
(assert (= temp10876_98 (select ARGNAME_stride_NAMEEND_VAL temp10876_97)))
(assert (= temp10876_99 #x0000000000000002))
(assert (= temp10876_100 temp10876_99))
(assert (= temp10876_101 (select ARGNAME_stride_NAMEEND_VAL temp10876_100)))
(assert (= temp10876_102 #x0000000000000003))
(assert (= temp10876_103 temp10876_102))
(assert (= temp10876_104 (select ARGNAME_stride_NAMEEND_VAL temp10876_103)))
(assert (= temp10876_105 #x0000000000000004))
(assert (= temp10876_106 temp10876_105))
(assert (= temp10876_107 (select ARGNAME_stride_NAMEEND_VAL temp10876_106)))
(assert (= temp10876_108 #x0000000000000005))
(assert (= temp10876_109 temp10876_108))
(assert (= temp10876_110 (select ARGNAME_stride_NAMEEND_VAL temp10876_109)))
(assert (= temp10876_111 #x0000000000000000))
(assert (= temp10876_112 #x0000000000000000))
(assert (= temp10876_113 temp10876_112))
(assert (= temp10876_114 (select ARGNAME_stride_NAMEEND_VAL temp10876_113)))
(assert (= temp10876_115 #x0000000000000000))
(assert (= temp10876_116 #x0000000000000001))
(assert (= temp10876_117 temp10876_116))
(assert (= temp10876_118 (select ARGNAME_stride_NAMEEND_VAL temp10876_117)))
(assert (= temp10876_119 #x0000000000000000))
(assert (= temp10876_120 #x0000000000000002))
(assert (= temp10876_121 temp10876_120))
(assert (= temp10876_122 (select ARGNAME_stride_NAMEEND_VAL temp10876_121)))
(assert (= temp10876_123 #x0000000000000000))
(assert (= temp10876_124 #x0000000000000003))
(assert (= temp10876_125 temp10876_124))
(assert (= temp10876_126 (select ARGNAME_stride_NAMEEND_VAL temp10876_125)))
(assert (= temp10876_127 #x0000000000000000))
(assert (= temp10876_128 #x0000000000000004))
(assert (= temp10876_129 temp10876_128))
(assert (= temp10876_130 (select ARGNAME_stride_NAMEEND_VAL temp10876_129)))
(assert (= temp10876_131 #x0000000000000000))
(assert (= temp10876_132 #x0000000000000005))
(assert (= temp10876_133 temp10876_132))
(assert (= temp10876_134 (select ARGNAME_stride_NAMEEND_VAL temp10876_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10876_114 temp10876_111)
             (bvsle temp10876_118 temp10876_115)
             (bvsle temp10876_122 temp10876_119)
             (bvsle temp10876_126 temp10876_123)
             (bvsle temp10876_130 temp10876_127)
             (bvsle temp10876_134 temp10876_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10876_135 #x0000000000000000))
(assert (= var1191735 temp10876_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10876_136 #x0000000000000001))
(assert (= var1191747 temp10876_136))
(assert (= temp10876_137 #x0000000000000000))
(assert (= var1179826 temp10876_137))
(assert (= temp10876_138 #x0000000000000000))
(assert (= temp10876_139 temp10876_138))
(assert (= temp10876_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10876_139)))
(assert (= temp10876_141 #x0000000000000001))
(assert (= temp10876_142 temp10876_141))
(assert (= temp10876_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10876_142)))
(assert (= temp10876_144 #x0000000000000002))
(assert (= temp10876_145 temp10876_144))
(assert (= temp10876_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10876_145)))
(assert (= temp10876_147 #x0000000000000003))
(assert (= temp10876_148 temp10876_147))
(assert (= temp10876_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10876_148)))
(assert (= temp10876_150 #x0000000000000004))
(assert (= temp10876_151 temp10876_150))
(assert (= temp10876_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10876_151)))
(assert (= temp10876_153 #x0000000000000005))
(assert (= temp10876_154 temp10876_153))
(assert (= temp10876_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10876_154)))
(assert (= temp10876_157 var1179826))
(assert (= temp10876_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10876_157)))
(assert (= temp10876_156 temp10876_158))
(assert (= var1191780
   (ite (bvslt temp10876_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10876_159 #x0000000000000000))
(assert (= var1191780 temp10876_159))
(assert (= temp10876_160 #x0000000000000000))
(assert (= var1179826 temp10876_160))
(assert (= temp10876_162 var1179826))
(assert (= temp10876_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10876_162)))
(assert (= temp10876_161 temp10876_163))
(assert (= var1191802 (bvsmod temp10876_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10876_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10876_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10876_165 #x0000000000000001))
(assert (= var1191803 temp10876_165))
(assert (= temp10876_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10876_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10876_167 #x0000000000000001))
(assert (= var1191823 temp10876_167))
(assert (= temp10876_168 #x0000000000000001))
(assert (= var1180714 temp10876_168))
(assert (= temp10876_169 #x0000000000000000))
(assert (= temp10876_170 temp10876_169))
(assert (= temp10876_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10876_170)))
(assert (= temp10876_172 #x0000000000000001))
(assert (= temp10876_173 temp10876_172))
(assert (= temp10876_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10876_173)))
(assert (= temp10876_175 #x0000000000000002))
(assert (= temp10876_176 temp10876_175))
(assert (= temp10876_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10876_176)))
(assert (= temp10876_178 #x0000000000000003))
(assert (= temp10876_179 temp10876_178))
(assert (= temp10876_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10876_179)))
(assert (= temp10876_181 #x0000000000000004))
(assert (= temp10876_182 temp10876_181))
(assert (= temp10876_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10876_182)))
(assert (= temp10876_184 #x0000000000000005))
(assert (= temp10876_185 temp10876_184))
(assert (= temp10876_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10876_185)))
(assert (= temp10876_187 #x0000000000000000))
(assert (= temp10876_188
   (ite (bvslt var1180714 temp10876_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10876_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10876_188)))
(assert (= var1191831 temp10876_189))
(assert (bvslt (ite (bvslt var1180714 temp10876_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10876_190 #x0000000000000001))
(assert (= var1180714 temp10876_190))
(assert (= temp10876_192 var1180714))
(assert (= temp10876_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10876_192)))
(assert (= temp10876_191 temp10876_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10876_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10876_194 #x0000000000000001))
(assert (= var1191836 temp10876_194))
(assert (= temp10876_195 #x0000000000000000))
(assert (= var1179826 temp10876_195))
(assert (= temp10876_197 var1179826))
(assert (= temp10876_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10876_197)))
(assert (= temp10876_196 temp10876_198))
(assert (= temp10876_199 #x0000000000000002))
(assert (= var1586025 temp10876_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10876_200 #x0000000000000001))
(assert (= var1191993 temp10876_200))
(assert (= temp10876_201 #x0000000000000001))
(assert (= var2700303 temp10876_201))
(assert (= temp10876_202 #x0000000000000001))
(assert (= var2962447 temp10876_202))
(assert (= temp10876_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10876_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10876_204 #x0000000000000001))
(assert (= var211058 temp10876_204))
(assert (= temp10876_205 #x0000000000000001))
(assert (= var211188 temp10876_205))
(assert (= var3879401 var211188))
(assert (= temp10876_206 #x0000000000000000))
(assert (= var3866802 temp10876_206))
(assert (= temp10876_207 #x0000000000000000))
(assert (= temp10876_208
   (ite (bvslt var3866802 temp10876_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10876_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10876_208)))
(assert (= var3879420 temp10876_209))
(assert (bvslt (ite (bvslt var3866802 temp10876_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10876_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10876_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10876_211 #x0000000000000000))
(assert (= var3879421 temp10876_211))
(assert (= temp10876_212 #x0000000000000001))
(assert (= var3867690 temp10876_212))
(assert (= temp10876_213 #x0000000000000000))
(assert (= temp10876_214
   (ite (bvslt var3867690 temp10876_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10876_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10876_214)))
(assert (= var3879423 temp10876_215))
(assert (bvslt (ite (bvslt var3867690 temp10876_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10876_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10876_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10876_217 #x0000000000000001))
(assert (= var3879424 temp10876_217))
(assert (= temp10876_218 #x0000000000000000))
(assert (= var4133117 temp10876_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10876_219 #x0000000000000002))
(assert (= var4339331 temp10876_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10876_220 #x0000000000000000))
(assert (= var4404892 temp10876_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var5714320 var211201))
(assert (= var5976464 var211201))
(assert (= temp10876_221 #x0000000000000000))
(assert (= var6304144 temp10876_221))
(assert (= temp10876_222 #x0000000000000001))
(assert (= var211058 temp10876_222))
(assert (= temp10876_223 #x0000000000000000))
(assert (= var7746324 temp10876_223))
(assert (= var7746291 var7746324))
(assert (= var7614855 var7746291))
(assert (= var7614851 var7614855))
(assert (= var212669 var7614851))
(assert (= temp10876_224 #x0000000000000000))
(assert (= var212669 temp10876_224))
(model-add temp10876_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10876_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10876_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10876_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





