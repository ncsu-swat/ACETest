(declare-fun temp10049_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10049_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10049_3 () (_ BitVec 64))
(declare-fun temp10049_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10049_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10049_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10049_7 () (_ BitVec 64))
(declare-fun temp10049_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10049_9 () (_ BitVec 64))
(declare-fun temp10049_10 () (_ BitVec 64))
(declare-fun temp10049_11 () (_ BitVec 64))
(declare-fun temp10049_12 () (_ BitVec 64))
(declare-fun temp10049_13 () (_ BitVec 64))
(declare-fun temp10049_14 () (_ BitVec 64))
(declare-fun temp10049_15 () (_ BitVec 64))
(declare-fun temp10049_16 () (_ BitVec 64))
(declare-fun temp10049_17 () (_ BitVec 64))
(declare-fun temp10049_18 () (_ BitVec 64))
(declare-fun temp10049_19 () (_ BitVec 64))
(declare-fun temp10049_20 () (_ BitVec 64))
(declare-fun temp10049_21 () (_ BitVec 64))
(declare-fun temp10049_22 () (_ BitVec 64))
(declare-fun temp10049_23 () (_ BitVec 64))
(declare-fun temp10049_24 () (_ BitVec 64))
(declare-fun temp10049_25 () (_ BitVec 64))
(declare-fun temp10049_26 () (_ BitVec 64))
(declare-fun temp10049_27 () (_ BitVec 64))
(declare-fun temp10049_28 () (_ BitVec 64))
(declare-fun temp10049_29 () (_ BitVec 64))
(declare-fun temp10049_30 () (_ BitVec 64))
(declare-fun temp10049_31 () (_ BitVec 64))
(declare-fun temp10049_32 () (_ BitVec 64))
(declare-fun temp10049_33 () (_ BitVec 64))
(declare-fun temp10049_34 () (_ BitVec 64))
(declare-fun temp10049_35 () (_ BitVec 64))
(declare-fun temp10049_36 () (_ BitVec 64))
(declare-fun temp10049_37 () (_ BitVec 64))
(declare-fun temp10049_38 () (_ BitVec 64))
(declare-fun temp10049_39 () (_ BitVec 64))
(declare-fun temp10049_40 () (_ BitVec 64))
(declare-fun temp10049_41 () (_ BitVec 64))
(declare-fun temp10049_42 () (_ BitVec 64))
(declare-fun temp10049_43 () (_ BitVec 64))
(declare-fun temp10049_44 () (_ BitVec 64))
(declare-fun temp10049_45 () (_ BitVec 64))
(declare-fun temp10049_46 () (_ BitVec 64))
(declare-fun temp10049_47 () (_ BitVec 64))
(declare-fun temp10049_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10049_49 () (_ BitVec 64))
(declare-fun temp10049_50 () (_ BitVec 64))
(declare-fun temp10049_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10049_52 () (_ BitVec 64))
(declare-fun temp10049_53 () (_ BitVec 64))
(declare-fun temp10049_54 () (_ BitVec 64))
(declare-fun temp10049_55 () (_ BitVec 64))
(declare-fun temp10049_56 () (_ BitVec 64))
(declare-fun temp10049_57 () (_ BitVec 64))
(declare-fun temp10049_58 () (_ BitVec 64))
(declare-fun temp10049_59 () (_ BitVec 64))
(declare-fun temp10049_60 () (_ BitVec 64))
(declare-fun temp10049_61 () (_ BitVec 64))
(declare-fun temp10049_62 () (_ BitVec 64))
(declare-fun temp10049_63 () (_ BitVec 64))
(declare-fun temp10049_64 () (_ BitVec 64))
(declare-fun temp10049_65 () (_ BitVec 64))
(declare-fun temp10049_66 () (_ BitVec 64))
(declare-fun temp10049_67 () (_ BitVec 64))
(declare-fun temp10049_68 () (_ BitVec 64))
(declare-fun temp10049_69 () (_ BitVec 64))
(declare-fun temp10049_70 () (_ BitVec 64))
(declare-fun temp10049_71 () (_ BitVec 64))
(declare-fun temp10049_72 () (_ BitVec 64))
(declare-fun temp10049_73 () (_ BitVec 64))
(declare-fun temp10049_74 () (_ BitVec 64))
(declare-fun temp10049_75 () (_ BitVec 64))
(declare-fun temp10049_76 () (_ BitVec 64))
(declare-fun temp10049_77 () (_ BitVec 64))
(declare-fun temp10049_78 () (_ BitVec 64))
(declare-fun temp10049_79 () (_ BitVec 64))
(declare-fun temp10049_80 () (_ BitVec 64))
(declare-fun temp10049_81 () (_ BitVec 64))
(declare-fun temp10049_82 () (_ BitVec 64))
(declare-fun temp10049_83 () (_ BitVec 64))
(declare-fun temp10049_84 () (_ BitVec 64))
(declare-fun temp10049_85 () (_ BitVec 64))
(declare-fun temp10049_86 () (_ BitVec 64))
(declare-fun temp10049_87 () (_ BitVec 64))
(declare-fun temp10049_88 () (_ BitVec 64))
(declare-fun temp10049_89 () (_ BitVec 64))
(declare-fun temp10049_90 () (_ BitVec 64))
(declare-fun temp10049_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10049_92 () (_ BitVec 64))
(declare-fun temp10049_93 () (_ BitVec 64))
(declare-fun temp10049_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10049_95 () (_ BitVec 64))
(declare-fun temp10049_96 () (_ BitVec 64))
(declare-fun temp10049_97 () (_ BitVec 64))
(declare-fun temp10049_98 () (_ BitVec 64))
(declare-fun temp10049_99 () (_ BitVec 64))
(declare-fun temp10049_100 () (_ BitVec 64))
(declare-fun temp10049_101 () (_ BitVec 64))
(declare-fun temp10049_102 () (_ BitVec 64))
(declare-fun temp10049_103 () (_ BitVec 64))
(declare-fun temp10049_104 () (_ BitVec 64))
(declare-fun temp10049_105 () (_ BitVec 64))
(declare-fun temp10049_106 () (_ BitVec 64))
(declare-fun temp10049_107 () (_ BitVec 64))
(declare-fun temp10049_108 () (_ BitVec 64))
(declare-fun temp10049_109 () (_ BitVec 64))
(declare-fun temp10049_110 () (_ BitVec 64))
(declare-fun temp10049_111 () (_ BitVec 64))
(declare-fun temp10049_112 () (_ BitVec 64))
(declare-fun temp10049_113 () (_ BitVec 64))
(declare-fun temp10049_114 () (_ BitVec 64))
(declare-fun temp10049_115 () (_ BitVec 64))
(declare-fun temp10049_116 () (_ BitVec 64))
(declare-fun temp10049_117 () (_ BitVec 64))
(declare-fun temp10049_118 () (_ BitVec 64))
(declare-fun temp10049_119 () (_ BitVec 64))
(declare-fun temp10049_120 () (_ BitVec 64))
(declare-fun temp10049_121 () (_ BitVec 64))
(declare-fun temp10049_122 () (_ BitVec 64))
(declare-fun temp10049_123 () (_ BitVec 64))
(declare-fun temp10049_124 () (_ BitVec 64))
(declare-fun temp10049_125 () (_ BitVec 64))
(declare-fun temp10049_126 () (_ BitVec 64))
(declare-fun temp10049_127 () (_ BitVec 64))
(declare-fun temp10049_128 () (_ BitVec 64))
(declare-fun temp10049_129 () (_ BitVec 64))
(declare-fun temp10049_130 () (_ BitVec 64))
(declare-fun temp10049_131 () (_ BitVec 64))
(declare-fun temp10049_132 () (_ BitVec 64))
(declare-fun temp10049_133 () (_ BitVec 64))
(declare-fun temp10049_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10049_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10049_136 () (_ BitVec 64))
(declare-fun temp10049_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10049_138 () (_ BitVec 64))
(declare-fun temp10049_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10049_140 () (_ BitVec 64))
(declare-fun temp10049_141 () (_ BitVec 64))
(declare-fun temp10049_142 () (_ BitVec 64))
(declare-fun temp10049_143 () (_ BitVec 64))
(declare-fun temp10049_144 () (_ BitVec 64))
(declare-fun temp10049_145 () (_ BitVec 64))
(declare-fun temp10049_146 () (_ BitVec 64))
(declare-fun temp10049_147 () (_ BitVec 64))
(declare-fun temp10049_148 () (_ BitVec 64))
(declare-fun temp10049_149 () (_ BitVec 64))
(declare-fun temp10049_150 () (_ BitVec 64))
(declare-fun temp10049_151 () (_ BitVec 64))
(declare-fun temp10049_152 () (_ BitVec 64))
(declare-fun temp10049_153 () (_ BitVec 64))
(declare-fun temp10049_154 () (_ BitVec 64))
(declare-fun temp10049_155 () (_ BitVec 64))
(declare-fun temp10049_157 () (_ BitVec 64))
(declare-fun temp10049_158 () (_ BitVec 64))
(declare-fun temp10049_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10049_159 () (_ BitVec 64))
(declare-fun temp10049_160 () (_ BitVec 64))
(declare-fun temp10049_162 () (_ BitVec 64))
(declare-fun temp10049_163 () (_ BitVec 64))
(declare-fun temp10049_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10049_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10049_165 () (_ BitVec 64))
(declare-fun temp10049_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10049_167 () (_ BitVec 64))
(declare-fun temp10049_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10049_169 () (_ BitVec 64))
(declare-fun temp10049_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10049_171 () (_ BitVec 64))
(declare-fun temp10049_172 () (_ BitVec 64))
(declare-fun temp10049_173 () (_ BitVec 64))
(declare-fun temp10049_174 () (_ BitVec 64))
(declare-fun temp10049_175 () (_ BitVec 64))
(declare-fun temp10049_176 () (_ BitVec 64))
(declare-fun temp10049_177 () (_ BitVec 64))
(declare-fun temp10049_178 () (_ BitVec 64))
(declare-fun temp10049_179 () (_ BitVec 64))
(declare-fun temp10049_180 () (_ BitVec 64))
(declare-fun temp10049_181 () (_ BitVec 64))
(declare-fun temp10049_182 () (_ BitVec 64))
(declare-fun temp10049_183 () (_ BitVec 64))
(declare-fun temp10049_184 () (_ BitVec 64))
(declare-fun temp10049_185 () (_ BitVec 64))
(declare-fun temp10049_186 () (_ BitVec 64))
(declare-fun temp10049_187 () (_ BitVec 64))
(declare-fun temp10049_188 () (_ BitVec 64))
(declare-fun temp10049_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10049_190 () (_ BitVec 64))
(declare-fun temp10049_192 () (_ BitVec 64))
(declare-fun temp10049_193 () (_ BitVec 64))
(declare-fun temp10049_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10049_194 () (_ BitVec 64))
(declare-fun temp10049_195 () (_ BitVec 64))
(declare-fun temp10049_197 () (_ BitVec 64))
(declare-fun temp10049_198 () (_ BitVec 64))
(declare-fun temp10049_196 () (_ BitVec 64))
(declare-fun temp10049_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10049_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10049_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10049_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10049_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10049_204 () (_ BitVec 64))
(declare-fun temp10049_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10049_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10049_207 () (_ BitVec 64))
(declare-fun temp10049_208 () (_ BitVec 64))
(declare-fun temp10049_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10049_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10049_211 () (_ BitVec 64))
(declare-fun temp10049_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10049_213 () (_ BitVec 64))
(declare-fun temp10049_214 () (_ BitVec 64))
(declare-fun temp10049_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10049_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10049_217 () (_ BitVec 64))
(declare-fun temp10049_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10049_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10049_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp10049_222 () (_ BitVec 64))
(declare-fun temp10049_221 () (_ BitVec 64))
(declare-fun temp10049_223 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp10049_224 () (_ BitVec 64))
(declare-fun temp10049_225 () (_ BitVec 64))
(declare-fun temp10049_226 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp10049_227 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp10049_228 () (_ BitVec 64))
(declare-fun temp10049_230 () (_ BitVec 64))
(declare-fun temp10049_229 () (_ BitVec 64))
(declare-fun temp10049_231 () (_ BitVec 64))
(assert (= temp10049_1 #x0000000000000001))
(assert (= var77203 temp10049_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10049_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10049_2)))
(assert (= temp10049_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10049_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10049_4 #x0000000000000000))
(assert (= var210941 temp10049_4))
(assert (= temp10049_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10049_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10049_6 #x0000000000000000))
(assert (= var210986 temp10049_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10049_7 #x0000000000000000))
(assert (= temp10049_8 temp10049_7))
(assert (= temp10049_9 (select ARGNAME_padding_NAMEEND_VAL temp10049_8)))
(assert (= temp10049_10 #x0000000000000001))
(assert (= temp10049_11 temp10049_10))
(assert (= temp10049_12 (select ARGNAME_padding_NAMEEND_VAL temp10049_11)))
(assert (= temp10049_13 #x0000000000000002))
(assert (= temp10049_14 temp10049_13))
(assert (= temp10049_15 (select ARGNAME_padding_NAMEEND_VAL temp10049_14)))
(assert (= temp10049_16 #x0000000000000003))
(assert (= temp10049_17 temp10049_16))
(assert (= temp10049_18 (select ARGNAME_padding_NAMEEND_VAL temp10049_17)))
(assert (= temp10049_19 #x0000000000000004))
(assert (= temp10049_20 temp10049_19))
(assert (= temp10049_21 (select ARGNAME_padding_NAMEEND_VAL temp10049_20)))
(assert (= temp10049_22 #x0000000000000005))
(assert (= temp10049_23 temp10049_22))
(assert (= temp10049_24 (select ARGNAME_padding_NAMEEND_VAL temp10049_23)))
(assert (= temp10049_25 #x0000000000000000))
(assert (= temp10049_26 #x0000000000000000))
(assert (= temp10049_27 temp10049_26))
(assert (= temp10049_28 (select ARGNAME_padding_NAMEEND_VAL temp10049_27)))
(assert (= temp10049_29 #x0000000000000000))
(assert (= temp10049_30 #x0000000000000001))
(assert (= temp10049_31 temp10049_30))
(assert (= temp10049_32 (select ARGNAME_padding_NAMEEND_VAL temp10049_31)))
(assert (= temp10049_33 #x0000000000000000))
(assert (= temp10049_34 #x0000000000000002))
(assert (= temp10049_35 temp10049_34))
(assert (= temp10049_36 (select ARGNAME_padding_NAMEEND_VAL temp10049_35)))
(assert (= temp10049_37 #x0000000000000000))
(assert (= temp10049_38 #x0000000000000003))
(assert (= temp10049_39 temp10049_38))
(assert (= temp10049_40 (select ARGNAME_padding_NAMEEND_VAL temp10049_39)))
(assert (= temp10049_41 #x0000000000000000))
(assert (= temp10049_42 #x0000000000000004))
(assert (= temp10049_43 temp10049_42))
(assert (= temp10049_44 (select ARGNAME_padding_NAMEEND_VAL temp10049_43)))
(assert (= temp10049_45 #x0000000000000000))
(assert (= temp10049_46 #x0000000000000005))
(assert (= temp10049_47 temp10049_46))
(assert (= temp10049_48 (select ARGNAME_padding_NAMEEND_VAL temp10049_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10049_28 temp10049_25)
             (bvslt temp10049_32 temp10049_29)
             (bvslt temp10049_36 temp10049_33)
             (bvslt temp10049_40 temp10049_37)
             (bvslt temp10049_44 temp10049_41)
             (bvslt temp10049_48 temp10049_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10049_49 #x0000000000000000))
(assert (= var1191714 temp10049_49))
(assert (= temp10049_50 #x0000000000000000))
(assert (= temp10049_51 temp10049_50))
(assert (= temp10049_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10049_51)))
(assert (= temp10049_53 #x0000000000000001))
(assert (= temp10049_54 temp10049_53))
(assert (= temp10049_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10049_54)))
(assert (= temp10049_56 #x0000000000000002))
(assert (= temp10049_57 temp10049_56))
(assert (= temp10049_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10049_57)))
(assert (= temp10049_59 #x0000000000000003))
(assert (= temp10049_60 temp10049_59))
(assert (= temp10049_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10049_60)))
(assert (= temp10049_62 #x0000000000000004))
(assert (= temp10049_63 temp10049_62))
(assert (= temp10049_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10049_63)))
(assert (= temp10049_65 #x0000000000000005))
(assert (= temp10049_66 temp10049_65))
(assert (= temp10049_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10049_66)))
(assert (= temp10049_68 #x0000000000000000))
(assert (= temp10049_69 #x0000000000000000))
(assert (= temp10049_70 temp10049_69))
(assert (= temp10049_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10049_70)))
(assert (= temp10049_72 #x0000000000000000))
(assert (= temp10049_73 #x0000000000000001))
(assert (= temp10049_74 temp10049_73))
(assert (= temp10049_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10049_74)))
(assert (= temp10049_76 #x0000000000000000))
(assert (= temp10049_77 #x0000000000000002))
(assert (= temp10049_78 temp10049_77))
(assert (= temp10049_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10049_78)))
(assert (= temp10049_80 #x0000000000000000))
(assert (= temp10049_81 #x0000000000000003))
(assert (= temp10049_82 temp10049_81))
(assert (= temp10049_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10049_82)))
(assert (= temp10049_84 #x0000000000000000))
(assert (= temp10049_85 #x0000000000000004))
(assert (= temp10049_86 temp10049_85))
(assert (= temp10049_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10049_86)))
(assert (= temp10049_88 #x0000000000000000))
(assert (= temp10049_89 #x0000000000000005))
(assert (= temp10049_90 temp10049_89))
(assert (= temp10049_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10049_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10049_71 temp10049_68)
             (bvslt temp10049_75 temp10049_72)
             (bvslt temp10049_79 temp10049_76)
             (bvslt temp10049_83 temp10049_80)
             (bvslt temp10049_87 temp10049_84)
             (bvslt temp10049_91 temp10049_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10049_92 #x0000000000000000))
(assert (= var1191725 temp10049_92))
(assert (= temp10049_93 #x0000000000000000))
(assert (= temp10049_94 temp10049_93))
(assert (= temp10049_95 (select ARGNAME_stride_NAMEEND_VAL temp10049_94)))
(assert (= temp10049_96 #x0000000000000001))
(assert (= temp10049_97 temp10049_96))
(assert (= temp10049_98 (select ARGNAME_stride_NAMEEND_VAL temp10049_97)))
(assert (= temp10049_99 #x0000000000000002))
(assert (= temp10049_100 temp10049_99))
(assert (= temp10049_101 (select ARGNAME_stride_NAMEEND_VAL temp10049_100)))
(assert (= temp10049_102 #x0000000000000003))
(assert (= temp10049_103 temp10049_102))
(assert (= temp10049_104 (select ARGNAME_stride_NAMEEND_VAL temp10049_103)))
(assert (= temp10049_105 #x0000000000000004))
(assert (= temp10049_106 temp10049_105))
(assert (= temp10049_107 (select ARGNAME_stride_NAMEEND_VAL temp10049_106)))
(assert (= temp10049_108 #x0000000000000005))
(assert (= temp10049_109 temp10049_108))
(assert (= temp10049_110 (select ARGNAME_stride_NAMEEND_VAL temp10049_109)))
(assert (= temp10049_111 #x0000000000000000))
(assert (= temp10049_112 #x0000000000000000))
(assert (= temp10049_113 temp10049_112))
(assert (= temp10049_114 (select ARGNAME_stride_NAMEEND_VAL temp10049_113)))
(assert (= temp10049_115 #x0000000000000000))
(assert (= temp10049_116 #x0000000000000001))
(assert (= temp10049_117 temp10049_116))
(assert (= temp10049_118 (select ARGNAME_stride_NAMEEND_VAL temp10049_117)))
(assert (= temp10049_119 #x0000000000000000))
(assert (= temp10049_120 #x0000000000000002))
(assert (= temp10049_121 temp10049_120))
(assert (= temp10049_122 (select ARGNAME_stride_NAMEEND_VAL temp10049_121)))
(assert (= temp10049_123 #x0000000000000000))
(assert (= temp10049_124 #x0000000000000003))
(assert (= temp10049_125 temp10049_124))
(assert (= temp10049_126 (select ARGNAME_stride_NAMEEND_VAL temp10049_125)))
(assert (= temp10049_127 #x0000000000000000))
(assert (= temp10049_128 #x0000000000000004))
(assert (= temp10049_129 temp10049_128))
(assert (= temp10049_130 (select ARGNAME_stride_NAMEEND_VAL temp10049_129)))
(assert (= temp10049_131 #x0000000000000000))
(assert (= temp10049_132 #x0000000000000005))
(assert (= temp10049_133 temp10049_132))
(assert (= temp10049_134 (select ARGNAME_stride_NAMEEND_VAL temp10049_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10049_114 temp10049_111)
             (bvsle temp10049_118 temp10049_115)
             (bvsle temp10049_122 temp10049_119)
             (bvsle temp10049_126 temp10049_123)
             (bvsle temp10049_130 temp10049_127)
             (bvsle temp10049_134 temp10049_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10049_135 #x0000000000000000))
(assert (= var1191735 temp10049_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10049_136 #x0000000000000001))
(assert (= var1191747 temp10049_136))
(assert (= temp10049_137 #x0000000000000000))
(assert (= var1179826 temp10049_137))
(assert (= temp10049_138 #x0000000000000000))
(assert (= temp10049_139 temp10049_138))
(assert (= temp10049_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10049_139)))
(assert (= temp10049_141 #x0000000000000001))
(assert (= temp10049_142 temp10049_141))
(assert (= temp10049_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10049_142)))
(assert (= temp10049_144 #x0000000000000002))
(assert (= temp10049_145 temp10049_144))
(assert (= temp10049_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10049_145)))
(assert (= temp10049_147 #x0000000000000003))
(assert (= temp10049_148 temp10049_147))
(assert (= temp10049_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10049_148)))
(assert (= temp10049_150 #x0000000000000004))
(assert (= temp10049_151 temp10049_150))
(assert (= temp10049_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10049_151)))
(assert (= temp10049_153 #x0000000000000005))
(assert (= temp10049_154 temp10049_153))
(assert (= temp10049_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10049_154)))
(assert (= temp10049_157 var1179826))
(assert (= temp10049_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10049_157)))
(assert (= temp10049_156 temp10049_158))
(assert (= var1191780
   (ite (bvslt temp10049_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10049_159 #x0000000000000000))
(assert (= var1191780 temp10049_159))
(assert (= temp10049_160 #x0000000000000000))
(assert (= var1179826 temp10049_160))
(assert (= temp10049_162 var1179826))
(assert (= temp10049_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10049_162)))
(assert (= temp10049_161 temp10049_163))
(assert (= var1191802 (bvsmod temp10049_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10049_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10049_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10049_165 #x0000000000000001))
(assert (= var1191803 temp10049_165))
(assert (= temp10049_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10049_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10049_167 #x0000000000000001))
(assert (= var1191823 temp10049_167))
(assert (= temp10049_168 #x0000000000000001))
(assert (= var1180714 temp10049_168))
(assert (= temp10049_169 #x0000000000000000))
(assert (= temp10049_170 temp10049_169))
(assert (= temp10049_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10049_170)))
(assert (= temp10049_172 #x0000000000000001))
(assert (= temp10049_173 temp10049_172))
(assert (= temp10049_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10049_173)))
(assert (= temp10049_175 #x0000000000000002))
(assert (= temp10049_176 temp10049_175))
(assert (= temp10049_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10049_176)))
(assert (= temp10049_178 #x0000000000000003))
(assert (= temp10049_179 temp10049_178))
(assert (= temp10049_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10049_179)))
(assert (= temp10049_181 #x0000000000000004))
(assert (= temp10049_182 temp10049_181))
(assert (= temp10049_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10049_182)))
(assert (= temp10049_184 #x0000000000000005))
(assert (= temp10049_185 temp10049_184))
(assert (= temp10049_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10049_185)))
(assert (= temp10049_187 #x0000000000000000))
(assert (= temp10049_188
   (ite (bvslt var1180714 temp10049_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10049_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10049_188)))
(assert (= var1191831 temp10049_189))
(assert (bvslt (ite (bvslt var1180714 temp10049_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10049_190 #x0000000000000001))
(assert (= var1180714 temp10049_190))
(assert (= temp10049_192 var1180714))
(assert (= temp10049_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10049_192)))
(assert (= temp10049_191 temp10049_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10049_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10049_194 #x0000000000000001))
(assert (= var1191836 temp10049_194))
(assert (= temp10049_195 #x0000000000000000))
(assert (= var1179826 temp10049_195))
(assert (= temp10049_197 var1179826))
(assert (= temp10049_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10049_197)))
(assert (= temp10049_196 temp10049_198))
(assert (= temp10049_199 #x0000000000000002))
(assert (= var1586025 temp10049_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10049_200 #x0000000000000001))
(assert (= var1191993 temp10049_200))
(assert (= temp10049_201 #x0000000000000001))
(assert (= var2700303 temp10049_201))
(assert (= temp10049_202 #x0000000000000001))
(assert (= var2962447 temp10049_202))
(assert (= temp10049_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10049_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10049_204 #x0000000000000001))
(assert (= var211058 temp10049_204))
(assert (= temp10049_205 #x0000000000000001))
(assert (= var211188 temp10049_205))
(assert (= var3879401 var211188))
(assert (= temp10049_206 #x0000000000000000))
(assert (= var3866802 temp10049_206))
(assert (= temp10049_207 #x0000000000000000))
(assert (= temp10049_208
   (ite (bvslt var3866802 temp10049_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10049_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10049_208)))
(assert (= var3879420 temp10049_209))
(assert (bvslt (ite (bvslt var3866802 temp10049_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10049_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10049_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10049_211 #x0000000000000000))
(assert (= var3879421 temp10049_211))
(assert (= temp10049_212 #x0000000000000001))
(assert (= var3867690 temp10049_212))
(assert (= temp10049_213 #x0000000000000000))
(assert (= temp10049_214
   (ite (bvslt var3867690 temp10049_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10049_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10049_214)))
(assert (= var3879423 temp10049_215))
(assert (bvslt (ite (bvslt var3867690 temp10049_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10049_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10049_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10049_217 #x0000000000000001))
(assert (= var3879424 temp10049_217))
(assert (= temp10049_218 #x0000000000000000))
(assert (= var4079423 temp10049_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10049_219 #x0000000000000002))
(assert (= var4208259 temp10049_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10049_220 #x0000000000000000))
(assert (= var4273820 temp10049_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp10049_222 #xffffffffffffffff))
(assert (= temp10049_221 temp10049_222))
(assert (= temp10049_223 #x0000000000000001))
(assert (= var197674 temp10049_223))
(assert (= temp10049_224 #x0000000000000000))
(assert (= temp10049_225
   (ite (bvslt var197674 temp10049_224)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp10049_226 (select ARGNAME_input_NAMEEND_DIMSIZE temp10049_225)))
(assert (= var211595 temp10049_226))
(assert (bvslt (ite (bvslt var197674 temp10049_224)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10049_227 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp10049_227) #x0000000000000001 #x0000000000000000)))
(assert (= temp10049_228 #x0000000000000001))
(assert (= var211596 temp10049_228))
(assert (= temp10049_230 #xffffffffffffffff))
(assert (= temp10049_229 temp10049_230))
(assert (= temp10049_231 #x0000000000000001))
(assert (= var211058 temp10049_231))
(model-add temp10049_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10049_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10049_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10049_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





