(declare-fun temp10596_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10596_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10596_3 () (_ BitVec 64))
(declare-fun temp10596_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10596_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10596_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10596_7 () (_ BitVec 64))
(declare-fun temp10596_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10596_9 () (_ BitVec 64))
(declare-fun temp10596_10 () (_ BitVec 64))
(declare-fun temp10596_11 () (_ BitVec 64))
(declare-fun temp10596_12 () (_ BitVec 64))
(declare-fun temp10596_13 () (_ BitVec 64))
(declare-fun temp10596_14 () (_ BitVec 64))
(declare-fun temp10596_15 () (_ BitVec 64))
(declare-fun temp10596_16 () (_ BitVec 64))
(declare-fun temp10596_17 () (_ BitVec 64))
(declare-fun temp10596_18 () (_ BitVec 64))
(declare-fun temp10596_19 () (_ BitVec 64))
(declare-fun temp10596_20 () (_ BitVec 64))
(declare-fun temp10596_21 () (_ BitVec 64))
(declare-fun temp10596_22 () (_ BitVec 64))
(declare-fun temp10596_23 () (_ BitVec 64))
(declare-fun temp10596_24 () (_ BitVec 64))
(declare-fun temp10596_25 () (_ BitVec 64))
(declare-fun temp10596_26 () (_ BitVec 64))
(declare-fun temp10596_27 () (_ BitVec 64))
(declare-fun temp10596_28 () (_ BitVec 64))
(declare-fun temp10596_29 () (_ BitVec 64))
(declare-fun temp10596_30 () (_ BitVec 64))
(declare-fun temp10596_31 () (_ BitVec 64))
(declare-fun temp10596_32 () (_ BitVec 64))
(declare-fun temp10596_33 () (_ BitVec 64))
(declare-fun temp10596_34 () (_ BitVec 64))
(declare-fun temp10596_35 () (_ BitVec 64))
(declare-fun temp10596_36 () (_ BitVec 64))
(declare-fun temp10596_37 () (_ BitVec 64))
(declare-fun temp10596_38 () (_ BitVec 64))
(declare-fun temp10596_39 () (_ BitVec 64))
(declare-fun temp10596_40 () (_ BitVec 64))
(declare-fun temp10596_41 () (_ BitVec 64))
(declare-fun temp10596_42 () (_ BitVec 64))
(declare-fun temp10596_43 () (_ BitVec 64))
(declare-fun temp10596_44 () (_ BitVec 64))
(declare-fun temp10596_45 () (_ BitVec 64))
(declare-fun temp10596_46 () (_ BitVec 64))
(declare-fun temp10596_47 () (_ BitVec 64))
(declare-fun temp10596_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10596_49 () (_ BitVec 64))
(declare-fun temp10596_50 () (_ BitVec 64))
(declare-fun temp10596_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10596_52 () (_ BitVec 64))
(declare-fun temp10596_53 () (_ BitVec 64))
(declare-fun temp10596_54 () (_ BitVec 64))
(declare-fun temp10596_55 () (_ BitVec 64))
(declare-fun temp10596_56 () (_ BitVec 64))
(declare-fun temp10596_57 () (_ BitVec 64))
(declare-fun temp10596_58 () (_ BitVec 64))
(declare-fun temp10596_59 () (_ BitVec 64))
(declare-fun temp10596_60 () (_ BitVec 64))
(declare-fun temp10596_61 () (_ BitVec 64))
(declare-fun temp10596_62 () (_ BitVec 64))
(declare-fun temp10596_63 () (_ BitVec 64))
(declare-fun temp10596_64 () (_ BitVec 64))
(declare-fun temp10596_65 () (_ BitVec 64))
(declare-fun temp10596_66 () (_ BitVec 64))
(declare-fun temp10596_67 () (_ BitVec 64))
(declare-fun temp10596_68 () (_ BitVec 64))
(declare-fun temp10596_69 () (_ BitVec 64))
(declare-fun temp10596_70 () (_ BitVec 64))
(declare-fun temp10596_71 () (_ BitVec 64))
(declare-fun temp10596_72 () (_ BitVec 64))
(declare-fun temp10596_73 () (_ BitVec 64))
(declare-fun temp10596_74 () (_ BitVec 64))
(declare-fun temp10596_75 () (_ BitVec 64))
(declare-fun temp10596_76 () (_ BitVec 64))
(declare-fun temp10596_77 () (_ BitVec 64))
(declare-fun temp10596_78 () (_ BitVec 64))
(declare-fun temp10596_79 () (_ BitVec 64))
(declare-fun temp10596_80 () (_ BitVec 64))
(declare-fun temp10596_81 () (_ BitVec 64))
(declare-fun temp10596_82 () (_ BitVec 64))
(declare-fun temp10596_83 () (_ BitVec 64))
(declare-fun temp10596_84 () (_ BitVec 64))
(declare-fun temp10596_85 () (_ BitVec 64))
(declare-fun temp10596_86 () (_ BitVec 64))
(declare-fun temp10596_87 () (_ BitVec 64))
(declare-fun temp10596_88 () (_ BitVec 64))
(declare-fun temp10596_89 () (_ BitVec 64))
(declare-fun temp10596_90 () (_ BitVec 64))
(declare-fun temp10596_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10596_92 () (_ BitVec 64))
(declare-fun temp10596_93 () (_ BitVec 64))
(declare-fun temp10596_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10596_95 () (_ BitVec 64))
(declare-fun temp10596_96 () (_ BitVec 64))
(declare-fun temp10596_97 () (_ BitVec 64))
(declare-fun temp10596_98 () (_ BitVec 64))
(declare-fun temp10596_99 () (_ BitVec 64))
(declare-fun temp10596_100 () (_ BitVec 64))
(declare-fun temp10596_101 () (_ BitVec 64))
(declare-fun temp10596_102 () (_ BitVec 64))
(declare-fun temp10596_103 () (_ BitVec 64))
(declare-fun temp10596_104 () (_ BitVec 64))
(declare-fun temp10596_105 () (_ BitVec 64))
(declare-fun temp10596_106 () (_ BitVec 64))
(declare-fun temp10596_107 () (_ BitVec 64))
(declare-fun temp10596_108 () (_ BitVec 64))
(declare-fun temp10596_109 () (_ BitVec 64))
(declare-fun temp10596_110 () (_ BitVec 64))
(declare-fun temp10596_111 () (_ BitVec 64))
(declare-fun temp10596_112 () (_ BitVec 64))
(declare-fun temp10596_113 () (_ BitVec 64))
(declare-fun temp10596_114 () (_ BitVec 64))
(declare-fun temp10596_115 () (_ BitVec 64))
(declare-fun temp10596_116 () (_ BitVec 64))
(declare-fun temp10596_117 () (_ BitVec 64))
(declare-fun temp10596_118 () (_ BitVec 64))
(declare-fun temp10596_119 () (_ BitVec 64))
(declare-fun temp10596_120 () (_ BitVec 64))
(declare-fun temp10596_121 () (_ BitVec 64))
(declare-fun temp10596_122 () (_ BitVec 64))
(declare-fun temp10596_123 () (_ BitVec 64))
(declare-fun temp10596_124 () (_ BitVec 64))
(declare-fun temp10596_125 () (_ BitVec 64))
(declare-fun temp10596_126 () (_ BitVec 64))
(declare-fun temp10596_127 () (_ BitVec 64))
(declare-fun temp10596_128 () (_ BitVec 64))
(declare-fun temp10596_129 () (_ BitVec 64))
(declare-fun temp10596_130 () (_ BitVec 64))
(declare-fun temp10596_131 () (_ BitVec 64))
(declare-fun temp10596_132 () (_ BitVec 64))
(declare-fun temp10596_133 () (_ BitVec 64))
(declare-fun temp10596_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10596_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10596_136 () (_ BitVec 64))
(declare-fun temp10596_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10596_138 () (_ BitVec 64))
(declare-fun temp10596_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10596_140 () (_ BitVec 64))
(declare-fun temp10596_141 () (_ BitVec 64))
(declare-fun temp10596_142 () (_ BitVec 64))
(declare-fun temp10596_143 () (_ BitVec 64))
(declare-fun temp10596_144 () (_ BitVec 64))
(declare-fun temp10596_145 () (_ BitVec 64))
(declare-fun temp10596_146 () (_ BitVec 64))
(declare-fun temp10596_147 () (_ BitVec 64))
(declare-fun temp10596_148 () (_ BitVec 64))
(declare-fun temp10596_149 () (_ BitVec 64))
(declare-fun temp10596_150 () (_ BitVec 64))
(declare-fun temp10596_151 () (_ BitVec 64))
(declare-fun temp10596_152 () (_ BitVec 64))
(declare-fun temp10596_153 () (_ BitVec 64))
(declare-fun temp10596_154 () (_ BitVec 64))
(declare-fun temp10596_155 () (_ BitVec 64))
(declare-fun temp10596_157 () (_ BitVec 64))
(declare-fun temp10596_158 () (_ BitVec 64))
(declare-fun temp10596_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10596_159 () (_ BitVec 64))
(declare-fun temp10596_160 () (_ BitVec 64))
(declare-fun temp10596_162 () (_ BitVec 64))
(declare-fun temp10596_163 () (_ BitVec 64))
(declare-fun temp10596_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10596_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10596_165 () (_ BitVec 64))
(declare-fun temp10596_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10596_167 () (_ BitVec 64))
(declare-fun temp10596_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10596_169 () (_ BitVec 64))
(declare-fun temp10596_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10596_171 () (_ BitVec 64))
(declare-fun temp10596_172 () (_ BitVec 64))
(declare-fun temp10596_173 () (_ BitVec 64))
(declare-fun temp10596_174 () (_ BitVec 64))
(declare-fun temp10596_175 () (_ BitVec 64))
(declare-fun temp10596_176 () (_ BitVec 64))
(declare-fun temp10596_177 () (_ BitVec 64))
(declare-fun temp10596_178 () (_ BitVec 64))
(declare-fun temp10596_179 () (_ BitVec 64))
(declare-fun temp10596_180 () (_ BitVec 64))
(declare-fun temp10596_181 () (_ BitVec 64))
(declare-fun temp10596_182 () (_ BitVec 64))
(declare-fun temp10596_183 () (_ BitVec 64))
(declare-fun temp10596_184 () (_ BitVec 64))
(declare-fun temp10596_185 () (_ BitVec 64))
(declare-fun temp10596_186 () (_ BitVec 64))
(declare-fun temp10596_187 () (_ BitVec 64))
(declare-fun temp10596_188 () (_ BitVec 64))
(declare-fun temp10596_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10596_190 () (_ BitVec 64))
(declare-fun temp10596_192 () (_ BitVec 64))
(declare-fun temp10596_193 () (_ BitVec 64))
(declare-fun temp10596_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10596_194 () (_ BitVec 64))
(declare-fun temp10596_195 () (_ BitVec 64))
(declare-fun temp10596_197 () (_ BitVec 64))
(declare-fun temp10596_198 () (_ BitVec 64))
(declare-fun temp10596_196 () (_ BitVec 64))
(declare-fun temp10596_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10596_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10596_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10596_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10596_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10596_204 () (_ BitVec 64))
(declare-fun temp10596_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10596_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10596_207 () (_ BitVec 64))
(declare-fun temp10596_208 () (_ BitVec 64))
(declare-fun temp10596_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10596_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10596_211 () (_ BitVec 64))
(declare-fun temp10596_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10596_213 () (_ BitVec 64))
(declare-fun temp10596_214 () (_ BitVec 64))
(declare-fun temp10596_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10596_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10596_217 () (_ BitVec 64))
(declare-fun temp10596_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10596_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10596_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var4927888 () (_ BitVec 64))
(declare-fun var211494 () (_ BitVec 64))
(declare-fun temp10596_221 () (_ BitVec 64))
(declare-fun var211495 () (_ BitVec 64))
(declare-fun temp10596_223 () (_ BitVec 64))
(declare-fun temp10596_222 () (_ BitVec 64))
(declare-fun temp10596_224 () (_ BitVec 64))
(declare-fun var6884842 () (_ BitVec 64))
(declare-fun temp10596_226 () (_ BitVec 64))
(declare-fun temp10596_225 () (_ BitVec 64))
(declare-fun temp10596_227 () (_ BitVec 64))
(declare-fun temp10596_228 () (_ BitVec 64))
(declare-fun var7615252 () (_ BitVec 64))
(declare-fun var7615219 () (_ BitVec 64))
(declare-fun var7483783 () (_ BitVec 64))
(declare-fun var7483779 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp10596_229 () (_ BitVec 64))
(assert (= temp10596_1 #x0000000000000001))
(assert (= var77203 temp10596_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10596_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10596_2)))
(assert (= temp10596_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10596_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10596_4 #x0000000000000000))
(assert (= var210941 temp10596_4))
(assert (= temp10596_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10596_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10596_6 #x0000000000000000))
(assert (= var210986 temp10596_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10596_7 #x0000000000000000))
(assert (= temp10596_8 temp10596_7))
(assert (= temp10596_9 (select ARGNAME_padding_NAMEEND_VAL temp10596_8)))
(assert (= temp10596_10 #x0000000000000001))
(assert (= temp10596_11 temp10596_10))
(assert (= temp10596_12 (select ARGNAME_padding_NAMEEND_VAL temp10596_11)))
(assert (= temp10596_13 #x0000000000000002))
(assert (= temp10596_14 temp10596_13))
(assert (= temp10596_15 (select ARGNAME_padding_NAMEEND_VAL temp10596_14)))
(assert (= temp10596_16 #x0000000000000003))
(assert (= temp10596_17 temp10596_16))
(assert (= temp10596_18 (select ARGNAME_padding_NAMEEND_VAL temp10596_17)))
(assert (= temp10596_19 #x0000000000000004))
(assert (= temp10596_20 temp10596_19))
(assert (= temp10596_21 (select ARGNAME_padding_NAMEEND_VAL temp10596_20)))
(assert (= temp10596_22 #x0000000000000005))
(assert (= temp10596_23 temp10596_22))
(assert (= temp10596_24 (select ARGNAME_padding_NAMEEND_VAL temp10596_23)))
(assert (= temp10596_25 #x0000000000000000))
(assert (= temp10596_26 #x0000000000000000))
(assert (= temp10596_27 temp10596_26))
(assert (= temp10596_28 (select ARGNAME_padding_NAMEEND_VAL temp10596_27)))
(assert (= temp10596_29 #x0000000000000000))
(assert (= temp10596_30 #x0000000000000001))
(assert (= temp10596_31 temp10596_30))
(assert (= temp10596_32 (select ARGNAME_padding_NAMEEND_VAL temp10596_31)))
(assert (= temp10596_33 #x0000000000000000))
(assert (= temp10596_34 #x0000000000000002))
(assert (= temp10596_35 temp10596_34))
(assert (= temp10596_36 (select ARGNAME_padding_NAMEEND_VAL temp10596_35)))
(assert (= temp10596_37 #x0000000000000000))
(assert (= temp10596_38 #x0000000000000003))
(assert (= temp10596_39 temp10596_38))
(assert (= temp10596_40 (select ARGNAME_padding_NAMEEND_VAL temp10596_39)))
(assert (= temp10596_41 #x0000000000000000))
(assert (= temp10596_42 #x0000000000000004))
(assert (= temp10596_43 temp10596_42))
(assert (= temp10596_44 (select ARGNAME_padding_NAMEEND_VAL temp10596_43)))
(assert (= temp10596_45 #x0000000000000000))
(assert (= temp10596_46 #x0000000000000005))
(assert (= temp10596_47 temp10596_46))
(assert (= temp10596_48 (select ARGNAME_padding_NAMEEND_VAL temp10596_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10596_28 temp10596_25)
             (bvslt temp10596_32 temp10596_29)
             (bvslt temp10596_36 temp10596_33)
             (bvslt temp10596_40 temp10596_37)
             (bvslt temp10596_44 temp10596_41)
             (bvslt temp10596_48 temp10596_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10596_49 #x0000000000000000))
(assert (= var1191714 temp10596_49))
(assert (= temp10596_50 #x0000000000000000))
(assert (= temp10596_51 temp10596_50))
(assert (= temp10596_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10596_51)))
(assert (= temp10596_53 #x0000000000000001))
(assert (= temp10596_54 temp10596_53))
(assert (= temp10596_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10596_54)))
(assert (= temp10596_56 #x0000000000000002))
(assert (= temp10596_57 temp10596_56))
(assert (= temp10596_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10596_57)))
(assert (= temp10596_59 #x0000000000000003))
(assert (= temp10596_60 temp10596_59))
(assert (= temp10596_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10596_60)))
(assert (= temp10596_62 #x0000000000000004))
(assert (= temp10596_63 temp10596_62))
(assert (= temp10596_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10596_63)))
(assert (= temp10596_65 #x0000000000000005))
(assert (= temp10596_66 temp10596_65))
(assert (= temp10596_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10596_66)))
(assert (= temp10596_68 #x0000000000000000))
(assert (= temp10596_69 #x0000000000000000))
(assert (= temp10596_70 temp10596_69))
(assert (= temp10596_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10596_70)))
(assert (= temp10596_72 #x0000000000000000))
(assert (= temp10596_73 #x0000000000000001))
(assert (= temp10596_74 temp10596_73))
(assert (= temp10596_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10596_74)))
(assert (= temp10596_76 #x0000000000000000))
(assert (= temp10596_77 #x0000000000000002))
(assert (= temp10596_78 temp10596_77))
(assert (= temp10596_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10596_78)))
(assert (= temp10596_80 #x0000000000000000))
(assert (= temp10596_81 #x0000000000000003))
(assert (= temp10596_82 temp10596_81))
(assert (= temp10596_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10596_82)))
(assert (= temp10596_84 #x0000000000000000))
(assert (= temp10596_85 #x0000000000000004))
(assert (= temp10596_86 temp10596_85))
(assert (= temp10596_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10596_86)))
(assert (= temp10596_88 #x0000000000000000))
(assert (= temp10596_89 #x0000000000000005))
(assert (= temp10596_90 temp10596_89))
(assert (= temp10596_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10596_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10596_71 temp10596_68)
             (bvslt temp10596_75 temp10596_72)
             (bvslt temp10596_79 temp10596_76)
             (bvslt temp10596_83 temp10596_80)
             (bvslt temp10596_87 temp10596_84)
             (bvslt temp10596_91 temp10596_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10596_92 #x0000000000000000))
(assert (= var1191725 temp10596_92))
(assert (= temp10596_93 #x0000000000000000))
(assert (= temp10596_94 temp10596_93))
(assert (= temp10596_95 (select ARGNAME_stride_NAMEEND_VAL temp10596_94)))
(assert (= temp10596_96 #x0000000000000001))
(assert (= temp10596_97 temp10596_96))
(assert (= temp10596_98 (select ARGNAME_stride_NAMEEND_VAL temp10596_97)))
(assert (= temp10596_99 #x0000000000000002))
(assert (= temp10596_100 temp10596_99))
(assert (= temp10596_101 (select ARGNAME_stride_NAMEEND_VAL temp10596_100)))
(assert (= temp10596_102 #x0000000000000003))
(assert (= temp10596_103 temp10596_102))
(assert (= temp10596_104 (select ARGNAME_stride_NAMEEND_VAL temp10596_103)))
(assert (= temp10596_105 #x0000000000000004))
(assert (= temp10596_106 temp10596_105))
(assert (= temp10596_107 (select ARGNAME_stride_NAMEEND_VAL temp10596_106)))
(assert (= temp10596_108 #x0000000000000005))
(assert (= temp10596_109 temp10596_108))
(assert (= temp10596_110 (select ARGNAME_stride_NAMEEND_VAL temp10596_109)))
(assert (= temp10596_111 #x0000000000000000))
(assert (= temp10596_112 #x0000000000000000))
(assert (= temp10596_113 temp10596_112))
(assert (= temp10596_114 (select ARGNAME_stride_NAMEEND_VAL temp10596_113)))
(assert (= temp10596_115 #x0000000000000000))
(assert (= temp10596_116 #x0000000000000001))
(assert (= temp10596_117 temp10596_116))
(assert (= temp10596_118 (select ARGNAME_stride_NAMEEND_VAL temp10596_117)))
(assert (= temp10596_119 #x0000000000000000))
(assert (= temp10596_120 #x0000000000000002))
(assert (= temp10596_121 temp10596_120))
(assert (= temp10596_122 (select ARGNAME_stride_NAMEEND_VAL temp10596_121)))
(assert (= temp10596_123 #x0000000000000000))
(assert (= temp10596_124 #x0000000000000003))
(assert (= temp10596_125 temp10596_124))
(assert (= temp10596_126 (select ARGNAME_stride_NAMEEND_VAL temp10596_125)))
(assert (= temp10596_127 #x0000000000000000))
(assert (= temp10596_128 #x0000000000000004))
(assert (= temp10596_129 temp10596_128))
(assert (= temp10596_130 (select ARGNAME_stride_NAMEEND_VAL temp10596_129)))
(assert (= temp10596_131 #x0000000000000000))
(assert (= temp10596_132 #x0000000000000005))
(assert (= temp10596_133 temp10596_132))
(assert (= temp10596_134 (select ARGNAME_stride_NAMEEND_VAL temp10596_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10596_114 temp10596_111)
             (bvsle temp10596_118 temp10596_115)
             (bvsle temp10596_122 temp10596_119)
             (bvsle temp10596_126 temp10596_123)
             (bvsle temp10596_130 temp10596_127)
             (bvsle temp10596_134 temp10596_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10596_135 #x0000000000000000))
(assert (= var1191735 temp10596_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10596_136 #x0000000000000001))
(assert (= var1191747 temp10596_136))
(assert (= temp10596_137 #x0000000000000000))
(assert (= var1179826 temp10596_137))
(assert (= temp10596_138 #x0000000000000000))
(assert (= temp10596_139 temp10596_138))
(assert (= temp10596_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10596_139)))
(assert (= temp10596_141 #x0000000000000001))
(assert (= temp10596_142 temp10596_141))
(assert (= temp10596_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10596_142)))
(assert (= temp10596_144 #x0000000000000002))
(assert (= temp10596_145 temp10596_144))
(assert (= temp10596_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10596_145)))
(assert (= temp10596_147 #x0000000000000003))
(assert (= temp10596_148 temp10596_147))
(assert (= temp10596_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10596_148)))
(assert (= temp10596_150 #x0000000000000004))
(assert (= temp10596_151 temp10596_150))
(assert (= temp10596_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10596_151)))
(assert (= temp10596_153 #x0000000000000005))
(assert (= temp10596_154 temp10596_153))
(assert (= temp10596_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10596_154)))
(assert (= temp10596_157 var1179826))
(assert (= temp10596_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10596_157)))
(assert (= temp10596_156 temp10596_158))
(assert (= var1191780
   (ite (bvslt temp10596_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10596_159 #x0000000000000000))
(assert (= var1191780 temp10596_159))
(assert (= temp10596_160 #x0000000000000000))
(assert (= var1179826 temp10596_160))
(assert (= temp10596_162 var1179826))
(assert (= temp10596_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10596_162)))
(assert (= temp10596_161 temp10596_163))
(assert (= var1191802 (bvsmod temp10596_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10596_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10596_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10596_165 #x0000000000000001))
(assert (= var1191803 temp10596_165))
(assert (= temp10596_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10596_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10596_167 #x0000000000000001))
(assert (= var1191823 temp10596_167))
(assert (= temp10596_168 #x0000000000000001))
(assert (= var1180714 temp10596_168))
(assert (= temp10596_169 #x0000000000000000))
(assert (= temp10596_170 temp10596_169))
(assert (= temp10596_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10596_170)))
(assert (= temp10596_172 #x0000000000000001))
(assert (= temp10596_173 temp10596_172))
(assert (= temp10596_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10596_173)))
(assert (= temp10596_175 #x0000000000000002))
(assert (= temp10596_176 temp10596_175))
(assert (= temp10596_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10596_176)))
(assert (= temp10596_178 #x0000000000000003))
(assert (= temp10596_179 temp10596_178))
(assert (= temp10596_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10596_179)))
(assert (= temp10596_181 #x0000000000000004))
(assert (= temp10596_182 temp10596_181))
(assert (= temp10596_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10596_182)))
(assert (= temp10596_184 #x0000000000000005))
(assert (= temp10596_185 temp10596_184))
(assert (= temp10596_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10596_185)))
(assert (= temp10596_187 #x0000000000000000))
(assert (= temp10596_188
   (ite (bvslt var1180714 temp10596_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10596_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10596_188)))
(assert (= var1191831 temp10596_189))
(assert (bvslt (ite (bvslt var1180714 temp10596_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10596_190 #x0000000000000001))
(assert (= var1180714 temp10596_190))
(assert (= temp10596_192 var1180714))
(assert (= temp10596_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10596_192)))
(assert (= temp10596_191 temp10596_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10596_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10596_194 #x0000000000000001))
(assert (= var1191836 temp10596_194))
(assert (= temp10596_195 #x0000000000000000))
(assert (= var1179826 temp10596_195))
(assert (= temp10596_197 var1179826))
(assert (= temp10596_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10596_197)))
(assert (= temp10596_196 temp10596_198))
(assert (= temp10596_199 #x0000000000000002))
(assert (= var1586025 temp10596_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10596_200 #x0000000000000001))
(assert (= var1191993 temp10596_200))
(assert (= temp10596_201 #x0000000000000001))
(assert (= var2700303 temp10596_201))
(assert (= temp10596_202 #x0000000000000001))
(assert (= var2962447 temp10596_202))
(assert (= temp10596_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10596_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10596_204 #x0000000000000001))
(assert (= var211058 temp10596_204))
(assert (= temp10596_205 #x0000000000000001))
(assert (= var211188 temp10596_205))
(assert (= var3879401 var211188))
(assert (= temp10596_206 #x0000000000000000))
(assert (= var3866802 temp10596_206))
(assert (= temp10596_207 #x0000000000000000))
(assert (= temp10596_208
   (ite (bvslt var3866802 temp10596_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10596_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10596_208)))
(assert (= var3879420 temp10596_209))
(assert (bvslt (ite (bvslt var3866802 temp10596_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10596_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10596_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10596_211 #x0000000000000000))
(assert (= var3879421 temp10596_211))
(assert (= temp10596_212 #x0000000000000001))
(assert (= var3867690 temp10596_212))
(assert (= temp10596_213 #x0000000000000000))
(assert (= temp10596_214
   (ite (bvslt var3867690 temp10596_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10596_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10596_214)))
(assert (= var3879423 temp10596_215))
(assert (bvslt (ite (bvslt var3867690 temp10596_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10596_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10596_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10596_217 #x0000000000000001))
(assert (= var3879424 temp10596_217))
(assert (= temp10596_218 #x0000000000000000))
(assert (= var4133117 temp10596_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10596_219 #x0000000000000002))
(assert (= var4339331 temp10596_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10596_220 #x0000000000000000))
(assert (= var4404892 temp10596_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var4927888 var211201))
(assert (= var211494 var210913))
(assert (= temp10596_221 #x0000000000000000))
(assert (= var211495
   (ite (distinct var211494 temp10596_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10596_223 #x0000000000000001))
(assert (= temp10596_222 temp10596_223))
(assert (= temp10596_224 #x0000000000000001))
(assert (= var6884842 temp10596_224))
(assert (= temp10596_226 #xffffffffffffffff))
(assert (= temp10596_225 temp10596_226))
(assert (= temp10596_227 #x0000000000000001))
(assert (= var211058 temp10596_227))
(assert (= temp10596_228 #x0000000000000000))
(assert (= var7615252 temp10596_228))
(assert (= var7615219 var7615252))
(assert (= var7483783 var7615219))
(assert (= var7483779 var7483783))
(assert (= var212669 var7483779))
(assert (= temp10596_229 #x0000000000000000))
(assert (= var212669 temp10596_229))
(model-add temp10596_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10596_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10596_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10596_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




