(declare-fun temp11026_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp11026_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp11026_3 () (_ BitVec 64))
(declare-fun temp11026_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp11026_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp11026_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp11026_7 () (_ BitVec 64))
(declare-fun temp11026_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11026_9 () (_ BitVec 64))
(declare-fun temp11026_10 () (_ BitVec 64))
(declare-fun temp11026_11 () (_ BitVec 64))
(declare-fun temp11026_12 () (_ BitVec 64))
(declare-fun temp11026_13 () (_ BitVec 64))
(declare-fun temp11026_14 () (_ BitVec 64))
(declare-fun temp11026_15 () (_ BitVec 64))
(declare-fun temp11026_16 () (_ BitVec 64))
(declare-fun temp11026_17 () (_ BitVec 64))
(declare-fun temp11026_18 () (_ BitVec 64))
(declare-fun temp11026_19 () (_ BitVec 64))
(declare-fun temp11026_20 () (_ BitVec 64))
(declare-fun temp11026_21 () (_ BitVec 64))
(declare-fun temp11026_22 () (_ BitVec 64))
(declare-fun temp11026_23 () (_ BitVec 64))
(declare-fun temp11026_24 () (_ BitVec 64))
(declare-fun temp11026_25 () (_ BitVec 64))
(declare-fun temp11026_26 () (_ BitVec 64))
(declare-fun temp11026_27 () (_ BitVec 64))
(declare-fun temp11026_28 () (_ BitVec 64))
(declare-fun temp11026_29 () (_ BitVec 64))
(declare-fun temp11026_30 () (_ BitVec 64))
(declare-fun temp11026_31 () (_ BitVec 64))
(declare-fun temp11026_32 () (_ BitVec 64))
(declare-fun temp11026_33 () (_ BitVec 64))
(declare-fun temp11026_34 () (_ BitVec 64))
(declare-fun temp11026_35 () (_ BitVec 64))
(declare-fun temp11026_36 () (_ BitVec 64))
(declare-fun temp11026_37 () (_ BitVec 64))
(declare-fun temp11026_38 () (_ BitVec 64))
(declare-fun temp11026_39 () (_ BitVec 64))
(declare-fun temp11026_40 () (_ BitVec 64))
(declare-fun temp11026_41 () (_ BitVec 64))
(declare-fun temp11026_42 () (_ BitVec 64))
(declare-fun temp11026_43 () (_ BitVec 64))
(declare-fun temp11026_44 () (_ BitVec 64))
(declare-fun temp11026_45 () (_ BitVec 64))
(declare-fun temp11026_46 () (_ BitVec 64))
(declare-fun temp11026_47 () (_ BitVec 64))
(declare-fun temp11026_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp11026_49 () (_ BitVec 64))
(declare-fun temp11026_50 () (_ BitVec 64))
(declare-fun temp11026_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11026_52 () (_ BitVec 64))
(declare-fun temp11026_53 () (_ BitVec 64))
(declare-fun temp11026_54 () (_ BitVec 64))
(declare-fun temp11026_55 () (_ BitVec 64))
(declare-fun temp11026_56 () (_ BitVec 64))
(declare-fun temp11026_57 () (_ BitVec 64))
(declare-fun temp11026_58 () (_ BitVec 64))
(declare-fun temp11026_59 () (_ BitVec 64))
(declare-fun temp11026_60 () (_ BitVec 64))
(declare-fun temp11026_61 () (_ BitVec 64))
(declare-fun temp11026_62 () (_ BitVec 64))
(declare-fun temp11026_63 () (_ BitVec 64))
(declare-fun temp11026_64 () (_ BitVec 64))
(declare-fun temp11026_65 () (_ BitVec 64))
(declare-fun temp11026_66 () (_ BitVec 64))
(declare-fun temp11026_67 () (_ BitVec 64))
(declare-fun temp11026_68 () (_ BitVec 64))
(declare-fun temp11026_69 () (_ BitVec 64))
(declare-fun temp11026_70 () (_ BitVec 64))
(declare-fun temp11026_71 () (_ BitVec 64))
(declare-fun temp11026_72 () (_ BitVec 64))
(declare-fun temp11026_73 () (_ BitVec 64))
(declare-fun temp11026_74 () (_ BitVec 64))
(declare-fun temp11026_75 () (_ BitVec 64))
(declare-fun temp11026_76 () (_ BitVec 64))
(declare-fun temp11026_77 () (_ BitVec 64))
(declare-fun temp11026_78 () (_ BitVec 64))
(declare-fun temp11026_79 () (_ BitVec 64))
(declare-fun temp11026_80 () (_ BitVec 64))
(declare-fun temp11026_81 () (_ BitVec 64))
(declare-fun temp11026_82 () (_ BitVec 64))
(declare-fun temp11026_83 () (_ BitVec 64))
(declare-fun temp11026_84 () (_ BitVec 64))
(declare-fun temp11026_85 () (_ BitVec 64))
(declare-fun temp11026_86 () (_ BitVec 64))
(declare-fun temp11026_87 () (_ BitVec 64))
(declare-fun temp11026_88 () (_ BitVec 64))
(declare-fun temp11026_89 () (_ BitVec 64))
(declare-fun temp11026_90 () (_ BitVec 64))
(declare-fun temp11026_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp11026_92 () (_ BitVec 64))
(declare-fun temp11026_93 () (_ BitVec 64))
(declare-fun temp11026_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11026_95 () (_ BitVec 64))
(declare-fun temp11026_96 () (_ BitVec 64))
(declare-fun temp11026_97 () (_ BitVec 64))
(declare-fun temp11026_98 () (_ BitVec 64))
(declare-fun temp11026_99 () (_ BitVec 64))
(declare-fun temp11026_100 () (_ BitVec 64))
(declare-fun temp11026_101 () (_ BitVec 64))
(declare-fun temp11026_102 () (_ BitVec 64))
(declare-fun temp11026_103 () (_ BitVec 64))
(declare-fun temp11026_104 () (_ BitVec 64))
(declare-fun temp11026_105 () (_ BitVec 64))
(declare-fun temp11026_106 () (_ BitVec 64))
(declare-fun temp11026_107 () (_ BitVec 64))
(declare-fun temp11026_108 () (_ BitVec 64))
(declare-fun temp11026_109 () (_ BitVec 64))
(declare-fun temp11026_110 () (_ BitVec 64))
(declare-fun temp11026_111 () (_ BitVec 64))
(declare-fun temp11026_112 () (_ BitVec 64))
(declare-fun temp11026_113 () (_ BitVec 64))
(declare-fun temp11026_114 () (_ BitVec 64))
(declare-fun temp11026_115 () (_ BitVec 64))
(declare-fun temp11026_116 () (_ BitVec 64))
(declare-fun temp11026_117 () (_ BitVec 64))
(declare-fun temp11026_118 () (_ BitVec 64))
(declare-fun temp11026_119 () (_ BitVec 64))
(declare-fun temp11026_120 () (_ BitVec 64))
(declare-fun temp11026_121 () (_ BitVec 64))
(declare-fun temp11026_122 () (_ BitVec 64))
(declare-fun temp11026_123 () (_ BitVec 64))
(declare-fun temp11026_124 () (_ BitVec 64))
(declare-fun temp11026_125 () (_ BitVec 64))
(declare-fun temp11026_126 () (_ BitVec 64))
(declare-fun temp11026_127 () (_ BitVec 64))
(declare-fun temp11026_128 () (_ BitVec 64))
(declare-fun temp11026_129 () (_ BitVec 64))
(declare-fun temp11026_130 () (_ BitVec 64))
(declare-fun temp11026_131 () (_ BitVec 64))
(declare-fun temp11026_132 () (_ BitVec 64))
(declare-fun temp11026_133 () (_ BitVec 64))
(declare-fun temp11026_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp11026_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp11026_136 () (_ BitVec 64))
(declare-fun temp11026_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp11026_138 () (_ BitVec 64))
(declare-fun temp11026_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11026_140 () (_ BitVec 64))
(declare-fun temp11026_141 () (_ BitVec 64))
(declare-fun temp11026_142 () (_ BitVec 64))
(declare-fun temp11026_143 () (_ BitVec 64))
(declare-fun temp11026_144 () (_ BitVec 64))
(declare-fun temp11026_145 () (_ BitVec 64))
(declare-fun temp11026_146 () (_ BitVec 64))
(declare-fun temp11026_147 () (_ BitVec 64))
(declare-fun temp11026_148 () (_ BitVec 64))
(declare-fun temp11026_149 () (_ BitVec 64))
(declare-fun temp11026_150 () (_ BitVec 64))
(declare-fun temp11026_151 () (_ BitVec 64))
(declare-fun temp11026_152 () (_ BitVec 64))
(declare-fun temp11026_153 () (_ BitVec 64))
(declare-fun temp11026_154 () (_ BitVec 64))
(declare-fun temp11026_155 () (_ BitVec 64))
(declare-fun temp11026_157 () (_ BitVec 64))
(declare-fun temp11026_158 () (_ BitVec 64))
(declare-fun temp11026_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp11026_159 () (_ BitVec 64))
(declare-fun temp11026_160 () (_ BitVec 64))
(declare-fun temp11026_162 () (_ BitVec 64))
(declare-fun temp11026_163 () (_ BitVec 64))
(declare-fun temp11026_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp11026_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp11026_165 () (_ BitVec 64))
(declare-fun temp11026_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp11026_167 () (_ BitVec 64))
(declare-fun temp11026_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp11026_169 () (_ BitVec 64))
(declare-fun temp11026_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11026_171 () (_ BitVec 64))
(declare-fun temp11026_172 () (_ BitVec 64))
(declare-fun temp11026_173 () (_ BitVec 64))
(declare-fun temp11026_174 () (_ BitVec 64))
(declare-fun temp11026_175 () (_ BitVec 64))
(declare-fun temp11026_176 () (_ BitVec 64))
(declare-fun temp11026_177 () (_ BitVec 64))
(declare-fun temp11026_178 () (_ BitVec 64))
(declare-fun temp11026_179 () (_ BitVec 64))
(declare-fun temp11026_180 () (_ BitVec 64))
(declare-fun temp11026_181 () (_ BitVec 64))
(declare-fun temp11026_182 () (_ BitVec 64))
(declare-fun temp11026_183 () (_ BitVec 64))
(declare-fun temp11026_184 () (_ BitVec 64))
(declare-fun temp11026_185 () (_ BitVec 64))
(declare-fun temp11026_186 () (_ BitVec 64))
(declare-fun temp11026_187 () (_ BitVec 64))
(declare-fun temp11026_188 () (_ BitVec 64))
(declare-fun temp11026_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp11026_190 () (_ BitVec 64))
(declare-fun temp11026_192 () (_ BitVec 64))
(declare-fun temp11026_193 () (_ BitVec 64))
(declare-fun temp11026_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp11026_194 () (_ BitVec 64))
(declare-fun temp11026_195 () (_ BitVec 64))
(declare-fun temp11026_197 () (_ BitVec 64))
(declare-fun temp11026_198 () (_ BitVec 64))
(declare-fun temp11026_196 () (_ BitVec 64))
(declare-fun temp11026_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp11026_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp11026_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp11026_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp11026_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp11026_204 () (_ BitVec 64))
(declare-fun temp11026_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp11026_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp11026_207 () (_ BitVec 64))
(declare-fun temp11026_208 () (_ BitVec 64))
(declare-fun temp11026_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp11026_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp11026_211 () (_ BitVec 64))
(declare-fun temp11026_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp11026_213 () (_ BitVec 64))
(declare-fun temp11026_214 () (_ BitVec 64))
(declare-fun temp11026_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp11026_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp11026_217 () (_ BitVec 64))
(declare-fun temp11026_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp11026_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp11026_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var4600208 () (_ BitVec 64))
(declare-fun var4862352 () (_ BitVec 64))
(declare-fun temp11026_221 () (_ BitVec 64))
(declare-fun var212414 () (_ BitVec 64))
(declare-fun temp11026_222 () (_ BitVec 64))
(declare-fun temp11026_223 () (_ BitVec 64))
(declare-fun var5191299 () (_ BitVec 64))
(declare-fun var5191301 () (_ BitVec 64))
(declare-fun var5256844 () (_ BitVec 64))
(declare-fun var5256845 () (_ BitVec 64))
(declare-fun temp11026_224 () (_ BitVec 64))
(assert (= temp11026_1 #x0000000000000001))
(assert (= var77203 temp11026_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp11026_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp11026_2)))
(assert (= temp11026_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp11026_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11026_4 #x0000000000000000))
(assert (= var210941 temp11026_4))
(assert (= temp11026_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp11026_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11026_6 #x0000000000000000))
(assert (= var210986 temp11026_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp11026_7 #x0000000000000000))
(assert (= temp11026_8 temp11026_7))
(assert (= temp11026_9 (select ARGNAME_padding_NAMEEND_VAL temp11026_8)))
(assert (= temp11026_10 #x0000000000000001))
(assert (= temp11026_11 temp11026_10))
(assert (= temp11026_12 (select ARGNAME_padding_NAMEEND_VAL temp11026_11)))
(assert (= temp11026_13 #x0000000000000002))
(assert (= temp11026_14 temp11026_13))
(assert (= temp11026_15 (select ARGNAME_padding_NAMEEND_VAL temp11026_14)))
(assert (= temp11026_16 #x0000000000000003))
(assert (= temp11026_17 temp11026_16))
(assert (= temp11026_18 (select ARGNAME_padding_NAMEEND_VAL temp11026_17)))
(assert (= temp11026_19 #x0000000000000004))
(assert (= temp11026_20 temp11026_19))
(assert (= temp11026_21 (select ARGNAME_padding_NAMEEND_VAL temp11026_20)))
(assert (= temp11026_22 #x0000000000000005))
(assert (= temp11026_23 temp11026_22))
(assert (= temp11026_24 (select ARGNAME_padding_NAMEEND_VAL temp11026_23)))
(assert (= temp11026_25 #x0000000000000000))
(assert (= temp11026_26 #x0000000000000000))
(assert (= temp11026_27 temp11026_26))
(assert (= temp11026_28 (select ARGNAME_padding_NAMEEND_VAL temp11026_27)))
(assert (= temp11026_29 #x0000000000000000))
(assert (= temp11026_30 #x0000000000000001))
(assert (= temp11026_31 temp11026_30))
(assert (= temp11026_32 (select ARGNAME_padding_NAMEEND_VAL temp11026_31)))
(assert (= temp11026_33 #x0000000000000000))
(assert (= temp11026_34 #x0000000000000002))
(assert (= temp11026_35 temp11026_34))
(assert (= temp11026_36 (select ARGNAME_padding_NAMEEND_VAL temp11026_35)))
(assert (= temp11026_37 #x0000000000000000))
(assert (= temp11026_38 #x0000000000000003))
(assert (= temp11026_39 temp11026_38))
(assert (= temp11026_40 (select ARGNAME_padding_NAMEEND_VAL temp11026_39)))
(assert (= temp11026_41 #x0000000000000000))
(assert (= temp11026_42 #x0000000000000004))
(assert (= temp11026_43 temp11026_42))
(assert (= temp11026_44 (select ARGNAME_padding_NAMEEND_VAL temp11026_43)))
(assert (= temp11026_45 #x0000000000000000))
(assert (= temp11026_46 #x0000000000000005))
(assert (= temp11026_47 temp11026_46))
(assert (= temp11026_48 (select ARGNAME_padding_NAMEEND_VAL temp11026_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp11026_28 temp11026_25)
             (bvslt temp11026_32 temp11026_29)
             (bvslt temp11026_36 temp11026_33)
             (bvslt temp11026_40 temp11026_37)
             (bvslt temp11026_44 temp11026_41)
             (bvslt temp11026_48 temp11026_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11026_49 #x0000000000000000))
(assert (= var1191714 temp11026_49))
(assert (= temp11026_50 #x0000000000000000))
(assert (= temp11026_51 temp11026_50))
(assert (= temp11026_52 (select ARGNAME_output_padding_NAMEEND_VAL temp11026_51)))
(assert (= temp11026_53 #x0000000000000001))
(assert (= temp11026_54 temp11026_53))
(assert (= temp11026_55 (select ARGNAME_output_padding_NAMEEND_VAL temp11026_54)))
(assert (= temp11026_56 #x0000000000000002))
(assert (= temp11026_57 temp11026_56))
(assert (= temp11026_58 (select ARGNAME_output_padding_NAMEEND_VAL temp11026_57)))
(assert (= temp11026_59 #x0000000000000003))
(assert (= temp11026_60 temp11026_59))
(assert (= temp11026_61 (select ARGNAME_output_padding_NAMEEND_VAL temp11026_60)))
(assert (= temp11026_62 #x0000000000000004))
(assert (= temp11026_63 temp11026_62))
(assert (= temp11026_64 (select ARGNAME_output_padding_NAMEEND_VAL temp11026_63)))
(assert (= temp11026_65 #x0000000000000005))
(assert (= temp11026_66 temp11026_65))
(assert (= temp11026_67 (select ARGNAME_output_padding_NAMEEND_VAL temp11026_66)))
(assert (= temp11026_68 #x0000000000000000))
(assert (= temp11026_69 #x0000000000000000))
(assert (= temp11026_70 temp11026_69))
(assert (= temp11026_71 (select ARGNAME_output_padding_NAMEEND_VAL temp11026_70)))
(assert (= temp11026_72 #x0000000000000000))
(assert (= temp11026_73 #x0000000000000001))
(assert (= temp11026_74 temp11026_73))
(assert (= temp11026_75 (select ARGNAME_output_padding_NAMEEND_VAL temp11026_74)))
(assert (= temp11026_76 #x0000000000000000))
(assert (= temp11026_77 #x0000000000000002))
(assert (= temp11026_78 temp11026_77))
(assert (= temp11026_79 (select ARGNAME_output_padding_NAMEEND_VAL temp11026_78)))
(assert (= temp11026_80 #x0000000000000000))
(assert (= temp11026_81 #x0000000000000003))
(assert (= temp11026_82 temp11026_81))
(assert (= temp11026_83 (select ARGNAME_output_padding_NAMEEND_VAL temp11026_82)))
(assert (= temp11026_84 #x0000000000000000))
(assert (= temp11026_85 #x0000000000000004))
(assert (= temp11026_86 temp11026_85))
(assert (= temp11026_87 (select ARGNAME_output_padding_NAMEEND_VAL temp11026_86)))
(assert (= temp11026_88 #x0000000000000000))
(assert (= temp11026_89 #x0000000000000005))
(assert (= temp11026_90 temp11026_89))
(assert (= temp11026_91 (select ARGNAME_output_padding_NAMEEND_VAL temp11026_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp11026_71 temp11026_68)
             (bvslt temp11026_75 temp11026_72)
             (bvslt temp11026_79 temp11026_76)
             (bvslt temp11026_83 temp11026_80)
             (bvslt temp11026_87 temp11026_84)
             (bvslt temp11026_91 temp11026_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11026_92 #x0000000000000000))
(assert (= var1191725 temp11026_92))
(assert (= temp11026_93 #x0000000000000000))
(assert (= temp11026_94 temp11026_93))
(assert (= temp11026_95 (select ARGNAME_stride_NAMEEND_VAL temp11026_94)))
(assert (= temp11026_96 #x0000000000000001))
(assert (= temp11026_97 temp11026_96))
(assert (= temp11026_98 (select ARGNAME_stride_NAMEEND_VAL temp11026_97)))
(assert (= temp11026_99 #x0000000000000002))
(assert (= temp11026_100 temp11026_99))
(assert (= temp11026_101 (select ARGNAME_stride_NAMEEND_VAL temp11026_100)))
(assert (= temp11026_102 #x0000000000000003))
(assert (= temp11026_103 temp11026_102))
(assert (= temp11026_104 (select ARGNAME_stride_NAMEEND_VAL temp11026_103)))
(assert (= temp11026_105 #x0000000000000004))
(assert (= temp11026_106 temp11026_105))
(assert (= temp11026_107 (select ARGNAME_stride_NAMEEND_VAL temp11026_106)))
(assert (= temp11026_108 #x0000000000000005))
(assert (= temp11026_109 temp11026_108))
(assert (= temp11026_110 (select ARGNAME_stride_NAMEEND_VAL temp11026_109)))
(assert (= temp11026_111 #x0000000000000000))
(assert (= temp11026_112 #x0000000000000000))
(assert (= temp11026_113 temp11026_112))
(assert (= temp11026_114 (select ARGNAME_stride_NAMEEND_VAL temp11026_113)))
(assert (= temp11026_115 #x0000000000000000))
(assert (= temp11026_116 #x0000000000000001))
(assert (= temp11026_117 temp11026_116))
(assert (= temp11026_118 (select ARGNAME_stride_NAMEEND_VAL temp11026_117)))
(assert (= temp11026_119 #x0000000000000000))
(assert (= temp11026_120 #x0000000000000002))
(assert (= temp11026_121 temp11026_120))
(assert (= temp11026_122 (select ARGNAME_stride_NAMEEND_VAL temp11026_121)))
(assert (= temp11026_123 #x0000000000000000))
(assert (= temp11026_124 #x0000000000000003))
(assert (= temp11026_125 temp11026_124))
(assert (= temp11026_126 (select ARGNAME_stride_NAMEEND_VAL temp11026_125)))
(assert (= temp11026_127 #x0000000000000000))
(assert (= temp11026_128 #x0000000000000004))
(assert (= temp11026_129 temp11026_128))
(assert (= temp11026_130 (select ARGNAME_stride_NAMEEND_VAL temp11026_129)))
(assert (= temp11026_131 #x0000000000000000))
(assert (= temp11026_132 #x0000000000000005))
(assert (= temp11026_133 temp11026_132))
(assert (= temp11026_134 (select ARGNAME_stride_NAMEEND_VAL temp11026_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp11026_114 temp11026_111)
             (bvsle temp11026_118 temp11026_115)
             (bvsle temp11026_122 temp11026_119)
             (bvsle temp11026_126 temp11026_123)
             (bvsle temp11026_130 temp11026_127)
             (bvsle temp11026_134 temp11026_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11026_135 #x0000000000000000))
(assert (= var1191735 temp11026_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11026_136 #x0000000000000001))
(assert (= var1191747 temp11026_136))
(assert (= temp11026_137 #x0000000000000000))
(assert (= var1179826 temp11026_137))
(assert (= temp11026_138 #x0000000000000000))
(assert (= temp11026_139 temp11026_138))
(assert (= temp11026_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11026_139)))
(assert (= temp11026_141 #x0000000000000001))
(assert (= temp11026_142 temp11026_141))
(assert (= temp11026_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11026_142)))
(assert (= temp11026_144 #x0000000000000002))
(assert (= temp11026_145 temp11026_144))
(assert (= temp11026_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11026_145)))
(assert (= temp11026_147 #x0000000000000003))
(assert (= temp11026_148 temp11026_147))
(assert (= temp11026_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11026_148)))
(assert (= temp11026_150 #x0000000000000004))
(assert (= temp11026_151 temp11026_150))
(assert (= temp11026_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11026_151)))
(assert (= temp11026_153 #x0000000000000005))
(assert (= temp11026_154 temp11026_153))
(assert (= temp11026_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11026_154)))
(assert (= temp11026_157 var1179826))
(assert (= temp11026_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11026_157)))
(assert (= temp11026_156 temp11026_158))
(assert (= var1191780
   (ite (bvslt temp11026_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11026_159 #x0000000000000000))
(assert (= var1191780 temp11026_159))
(assert (= temp11026_160 #x0000000000000000))
(assert (= var1179826 temp11026_160))
(assert (= temp11026_162 var1179826))
(assert (= temp11026_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11026_162)))
(assert (= temp11026_161 temp11026_163))
(assert (= var1191802 (bvsmod temp11026_161 ARGNAME_groups_NAMEEND)))
(assert (= temp11026_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp11026_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp11026_165 #x0000000000000001))
(assert (= var1191803 temp11026_165))
(assert (= temp11026_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp11026_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11026_167 #x0000000000000001))
(assert (= var1191823 temp11026_167))
(assert (= temp11026_168 #x0000000000000001))
(assert (= var1180714 temp11026_168))
(assert (= temp11026_169 #x0000000000000000))
(assert (= temp11026_170 temp11026_169))
(assert (= temp11026_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp11026_170)))
(assert (= temp11026_172 #x0000000000000001))
(assert (= temp11026_173 temp11026_172))
(assert (= temp11026_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp11026_173)))
(assert (= temp11026_175 #x0000000000000002))
(assert (= temp11026_176 temp11026_175))
(assert (= temp11026_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp11026_176)))
(assert (= temp11026_178 #x0000000000000003))
(assert (= temp11026_179 temp11026_178))
(assert (= temp11026_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp11026_179)))
(assert (= temp11026_181 #x0000000000000004))
(assert (= temp11026_182 temp11026_181))
(assert (= temp11026_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp11026_182)))
(assert (= temp11026_184 #x0000000000000005))
(assert (= temp11026_185 temp11026_184))
(assert (= temp11026_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp11026_185)))
(assert (= temp11026_187 #x0000000000000000))
(assert (= temp11026_188
   (ite (bvslt var1180714 temp11026_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp11026_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp11026_188)))
(assert (= var1191831 temp11026_189))
(assert (bvslt (ite (bvslt var1180714 temp11026_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11026_190 #x0000000000000001))
(assert (= var1180714 temp11026_190))
(assert (= temp11026_192 var1180714))
(assert (= temp11026_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11026_192)))
(assert (= temp11026_191 temp11026_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp11026_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp11026_194 #x0000000000000001))
(assert (= var1191836 temp11026_194))
(assert (= temp11026_195 #x0000000000000000))
(assert (= var1179826 temp11026_195))
(assert (= temp11026_197 var1179826))
(assert (= temp11026_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11026_197)))
(assert (= temp11026_196 temp11026_198))
(assert (= temp11026_199 #x0000000000000002))
(assert (= var1586025 temp11026_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp11026_200 #x0000000000000001))
(assert (= var1191993 temp11026_200))
(assert (= temp11026_201 #x0000000000000001))
(assert (= var2700303 temp11026_201))
(assert (= temp11026_202 #x0000000000000001))
(assert (= var2962447 temp11026_202))
(assert (= temp11026_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp11026_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11026_204 #x0000000000000001))
(assert (= var211058 temp11026_204))
(assert (= temp11026_205 #x0000000000000001))
(assert (= var211188 temp11026_205))
(assert (= var3879401 var211188))
(assert (= temp11026_206 #x0000000000000000))
(assert (= var3866802 temp11026_206))
(assert (= temp11026_207 #x0000000000000000))
(assert (= temp11026_208
   (ite (bvslt var3866802 temp11026_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp11026_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp11026_208)))
(assert (= var3879420 temp11026_209))
(assert (bvslt (ite (bvslt var3866802 temp11026_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11026_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp11026_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp11026_211 #x0000000000000000))
(assert (= var3879421 temp11026_211))
(assert (= temp11026_212 #x0000000000000001))
(assert (= var3867690 temp11026_212))
(assert (= temp11026_213 #x0000000000000000))
(assert (= temp11026_214
   (ite (bvslt var3867690 temp11026_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp11026_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp11026_214)))
(assert (= var3879423 temp11026_215))
(assert (bvslt (ite (bvslt var3867690 temp11026_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11026_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp11026_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp11026_217 #x0000000000000001))
(assert (= var3879424 temp11026_217))
(assert (= temp11026_218 #x0000000000000000))
(assert (= var4133117 temp11026_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp11026_219 #x0000000000000002))
(assert (= var4339331 temp11026_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11026_220 #x0000000000000000))
(assert (= var4404892 temp11026_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var4600208 var211201))
(assert (= var4862352 var211201))
(assert (= temp11026_221 #x0000000000000001))
(assert (= var212414
   (ite (= ARGNAME_groups_NAMEEND temp11026_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11026_222 #x0000000000000001))
(assert (= var212414 temp11026_222))
(assert (= temp11026_223 #x0000000000000002))
(assert (= var5191299 temp11026_223))
(assert (= var5191301 (bvsub ARGNAME_weight_NAMEEND_DIM var5191299)))
(assert (= var5256844 var5191299))
(assert (= var5256845 var5191301))
(assert (= temp11026_224 #x0000000000000001))
(assert (= var211058 temp11026_224))
(model-add temp11026_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp11026_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp11026_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp11026_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





