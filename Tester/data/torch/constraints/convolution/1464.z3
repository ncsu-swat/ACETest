(declare-fun temp10746_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10746_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10746_3 () (_ BitVec 64))
(declare-fun temp10746_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10746_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10746_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10746_7 () (_ BitVec 64))
(declare-fun temp10746_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10746_9 () (_ BitVec 64))
(declare-fun temp10746_10 () (_ BitVec 64))
(declare-fun temp10746_11 () (_ BitVec 64))
(declare-fun temp10746_12 () (_ BitVec 64))
(declare-fun temp10746_13 () (_ BitVec 64))
(declare-fun temp10746_14 () (_ BitVec 64))
(declare-fun temp10746_15 () (_ BitVec 64))
(declare-fun temp10746_16 () (_ BitVec 64))
(declare-fun temp10746_17 () (_ BitVec 64))
(declare-fun temp10746_18 () (_ BitVec 64))
(declare-fun temp10746_19 () (_ BitVec 64))
(declare-fun temp10746_20 () (_ BitVec 64))
(declare-fun temp10746_21 () (_ BitVec 64))
(declare-fun temp10746_22 () (_ BitVec 64))
(declare-fun temp10746_23 () (_ BitVec 64))
(declare-fun temp10746_24 () (_ BitVec 64))
(declare-fun temp10746_25 () (_ BitVec 64))
(declare-fun temp10746_26 () (_ BitVec 64))
(declare-fun temp10746_27 () (_ BitVec 64))
(declare-fun temp10746_28 () (_ BitVec 64))
(declare-fun temp10746_29 () (_ BitVec 64))
(declare-fun temp10746_30 () (_ BitVec 64))
(declare-fun temp10746_31 () (_ BitVec 64))
(declare-fun temp10746_32 () (_ BitVec 64))
(declare-fun temp10746_33 () (_ BitVec 64))
(declare-fun temp10746_34 () (_ BitVec 64))
(declare-fun temp10746_35 () (_ BitVec 64))
(declare-fun temp10746_36 () (_ BitVec 64))
(declare-fun temp10746_37 () (_ BitVec 64))
(declare-fun temp10746_38 () (_ BitVec 64))
(declare-fun temp10746_39 () (_ BitVec 64))
(declare-fun temp10746_40 () (_ BitVec 64))
(declare-fun temp10746_41 () (_ BitVec 64))
(declare-fun temp10746_42 () (_ BitVec 64))
(declare-fun temp10746_43 () (_ BitVec 64))
(declare-fun temp10746_44 () (_ BitVec 64))
(declare-fun temp10746_45 () (_ BitVec 64))
(declare-fun temp10746_46 () (_ BitVec 64))
(declare-fun temp10746_47 () (_ BitVec 64))
(declare-fun temp10746_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10746_49 () (_ BitVec 64))
(declare-fun temp10746_50 () (_ BitVec 64))
(declare-fun temp10746_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10746_52 () (_ BitVec 64))
(declare-fun temp10746_53 () (_ BitVec 64))
(declare-fun temp10746_54 () (_ BitVec 64))
(declare-fun temp10746_55 () (_ BitVec 64))
(declare-fun temp10746_56 () (_ BitVec 64))
(declare-fun temp10746_57 () (_ BitVec 64))
(declare-fun temp10746_58 () (_ BitVec 64))
(declare-fun temp10746_59 () (_ BitVec 64))
(declare-fun temp10746_60 () (_ BitVec 64))
(declare-fun temp10746_61 () (_ BitVec 64))
(declare-fun temp10746_62 () (_ BitVec 64))
(declare-fun temp10746_63 () (_ BitVec 64))
(declare-fun temp10746_64 () (_ BitVec 64))
(declare-fun temp10746_65 () (_ BitVec 64))
(declare-fun temp10746_66 () (_ BitVec 64))
(declare-fun temp10746_67 () (_ BitVec 64))
(declare-fun temp10746_68 () (_ BitVec 64))
(declare-fun temp10746_69 () (_ BitVec 64))
(declare-fun temp10746_70 () (_ BitVec 64))
(declare-fun temp10746_71 () (_ BitVec 64))
(declare-fun temp10746_72 () (_ BitVec 64))
(declare-fun temp10746_73 () (_ BitVec 64))
(declare-fun temp10746_74 () (_ BitVec 64))
(declare-fun temp10746_75 () (_ BitVec 64))
(declare-fun temp10746_76 () (_ BitVec 64))
(declare-fun temp10746_77 () (_ BitVec 64))
(declare-fun temp10746_78 () (_ BitVec 64))
(declare-fun temp10746_79 () (_ BitVec 64))
(declare-fun temp10746_80 () (_ BitVec 64))
(declare-fun temp10746_81 () (_ BitVec 64))
(declare-fun temp10746_82 () (_ BitVec 64))
(declare-fun temp10746_83 () (_ BitVec 64))
(declare-fun temp10746_84 () (_ BitVec 64))
(declare-fun temp10746_85 () (_ BitVec 64))
(declare-fun temp10746_86 () (_ BitVec 64))
(declare-fun temp10746_87 () (_ BitVec 64))
(declare-fun temp10746_88 () (_ BitVec 64))
(declare-fun temp10746_89 () (_ BitVec 64))
(declare-fun temp10746_90 () (_ BitVec 64))
(declare-fun temp10746_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10746_92 () (_ BitVec 64))
(declare-fun temp10746_93 () (_ BitVec 64))
(declare-fun temp10746_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10746_95 () (_ BitVec 64))
(declare-fun temp10746_96 () (_ BitVec 64))
(declare-fun temp10746_97 () (_ BitVec 64))
(declare-fun temp10746_98 () (_ BitVec 64))
(declare-fun temp10746_99 () (_ BitVec 64))
(declare-fun temp10746_100 () (_ BitVec 64))
(declare-fun temp10746_101 () (_ BitVec 64))
(declare-fun temp10746_102 () (_ BitVec 64))
(declare-fun temp10746_103 () (_ BitVec 64))
(declare-fun temp10746_104 () (_ BitVec 64))
(declare-fun temp10746_105 () (_ BitVec 64))
(declare-fun temp10746_106 () (_ BitVec 64))
(declare-fun temp10746_107 () (_ BitVec 64))
(declare-fun temp10746_108 () (_ BitVec 64))
(declare-fun temp10746_109 () (_ BitVec 64))
(declare-fun temp10746_110 () (_ BitVec 64))
(declare-fun temp10746_111 () (_ BitVec 64))
(declare-fun temp10746_112 () (_ BitVec 64))
(declare-fun temp10746_113 () (_ BitVec 64))
(declare-fun temp10746_114 () (_ BitVec 64))
(declare-fun temp10746_115 () (_ BitVec 64))
(declare-fun temp10746_116 () (_ BitVec 64))
(declare-fun temp10746_117 () (_ BitVec 64))
(declare-fun temp10746_118 () (_ BitVec 64))
(declare-fun temp10746_119 () (_ BitVec 64))
(declare-fun temp10746_120 () (_ BitVec 64))
(declare-fun temp10746_121 () (_ BitVec 64))
(declare-fun temp10746_122 () (_ BitVec 64))
(declare-fun temp10746_123 () (_ BitVec 64))
(declare-fun temp10746_124 () (_ BitVec 64))
(declare-fun temp10746_125 () (_ BitVec 64))
(declare-fun temp10746_126 () (_ BitVec 64))
(declare-fun temp10746_127 () (_ BitVec 64))
(declare-fun temp10746_128 () (_ BitVec 64))
(declare-fun temp10746_129 () (_ BitVec 64))
(declare-fun temp10746_130 () (_ BitVec 64))
(declare-fun temp10746_131 () (_ BitVec 64))
(declare-fun temp10746_132 () (_ BitVec 64))
(declare-fun temp10746_133 () (_ BitVec 64))
(declare-fun temp10746_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10746_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10746_136 () (_ BitVec 64))
(declare-fun temp10746_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10746_138 () (_ BitVec 64))
(declare-fun temp10746_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10746_140 () (_ BitVec 64))
(declare-fun temp10746_141 () (_ BitVec 64))
(declare-fun temp10746_142 () (_ BitVec 64))
(declare-fun temp10746_143 () (_ BitVec 64))
(declare-fun temp10746_144 () (_ BitVec 64))
(declare-fun temp10746_145 () (_ BitVec 64))
(declare-fun temp10746_146 () (_ BitVec 64))
(declare-fun temp10746_147 () (_ BitVec 64))
(declare-fun temp10746_148 () (_ BitVec 64))
(declare-fun temp10746_149 () (_ BitVec 64))
(declare-fun temp10746_150 () (_ BitVec 64))
(declare-fun temp10746_151 () (_ BitVec 64))
(declare-fun temp10746_152 () (_ BitVec 64))
(declare-fun temp10746_153 () (_ BitVec 64))
(declare-fun temp10746_154 () (_ BitVec 64))
(declare-fun temp10746_155 () (_ BitVec 64))
(declare-fun temp10746_157 () (_ BitVec 64))
(declare-fun temp10746_158 () (_ BitVec 64))
(declare-fun temp10746_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10746_159 () (_ BitVec 64))
(declare-fun temp10746_160 () (_ BitVec 64))
(declare-fun temp10746_162 () (_ BitVec 64))
(declare-fun temp10746_163 () (_ BitVec 64))
(declare-fun temp10746_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10746_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10746_165 () (_ BitVec 64))
(declare-fun temp10746_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10746_167 () (_ BitVec 64))
(declare-fun temp10746_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10746_169 () (_ BitVec 64))
(declare-fun temp10746_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10746_171 () (_ BitVec 64))
(declare-fun temp10746_172 () (_ BitVec 64))
(declare-fun temp10746_173 () (_ BitVec 64))
(declare-fun temp10746_174 () (_ BitVec 64))
(declare-fun temp10746_175 () (_ BitVec 64))
(declare-fun temp10746_176 () (_ BitVec 64))
(declare-fun temp10746_177 () (_ BitVec 64))
(declare-fun temp10746_178 () (_ BitVec 64))
(declare-fun temp10746_179 () (_ BitVec 64))
(declare-fun temp10746_180 () (_ BitVec 64))
(declare-fun temp10746_181 () (_ BitVec 64))
(declare-fun temp10746_182 () (_ BitVec 64))
(declare-fun temp10746_183 () (_ BitVec 64))
(declare-fun temp10746_184 () (_ BitVec 64))
(declare-fun temp10746_185 () (_ BitVec 64))
(declare-fun temp10746_186 () (_ BitVec 64))
(declare-fun temp10746_187 () (_ BitVec 64))
(declare-fun temp10746_188 () (_ BitVec 64))
(declare-fun temp10746_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10746_190 () (_ BitVec 64))
(declare-fun temp10746_192 () (_ BitVec 64))
(declare-fun temp10746_193 () (_ BitVec 64))
(declare-fun temp10746_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10746_194 () (_ BitVec 64))
(declare-fun temp10746_195 () (_ BitVec 64))
(declare-fun temp10746_197 () (_ BitVec 64))
(declare-fun temp10746_198 () (_ BitVec 64))
(declare-fun temp10746_196 () (_ BitVec 64))
(declare-fun temp10746_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10746_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10746_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10746_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10746_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10746_204 () (_ BitVec 64))
(declare-fun temp10746_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10746_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10746_207 () (_ BitVec 64))
(declare-fun temp10746_208 () (_ BitVec 64))
(declare-fun temp10746_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10746_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10746_211 () (_ BitVec 64))
(declare-fun temp10746_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10746_213 () (_ BitVec 64))
(declare-fun temp10746_214 () (_ BitVec 64))
(declare-fun temp10746_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10746_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10746_217 () (_ BitVec 64))
(declare-fun temp10746_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10746_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10746_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var4600208 () (_ BitVec 64))
(declare-fun var211890 () (_ BitVec 64))
(declare-fun temp10746_221 () (_ BitVec 64))
(declare-fun var211891 () (_ BitVec 64))
(declare-fun temp10746_222 () (_ BitVec 64))
(assert (= temp10746_1 #x0000000000000001))
(assert (= var77203 temp10746_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10746_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10746_2)))
(assert (= temp10746_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10746_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10746_4 #x0000000000000000))
(assert (= var210941 temp10746_4))
(assert (= temp10746_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10746_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10746_6 #x0000000000000000))
(assert (= var210986 temp10746_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10746_7 #x0000000000000000))
(assert (= temp10746_8 temp10746_7))
(assert (= temp10746_9 (select ARGNAME_padding_NAMEEND_VAL temp10746_8)))
(assert (= temp10746_10 #x0000000000000001))
(assert (= temp10746_11 temp10746_10))
(assert (= temp10746_12 (select ARGNAME_padding_NAMEEND_VAL temp10746_11)))
(assert (= temp10746_13 #x0000000000000002))
(assert (= temp10746_14 temp10746_13))
(assert (= temp10746_15 (select ARGNAME_padding_NAMEEND_VAL temp10746_14)))
(assert (= temp10746_16 #x0000000000000003))
(assert (= temp10746_17 temp10746_16))
(assert (= temp10746_18 (select ARGNAME_padding_NAMEEND_VAL temp10746_17)))
(assert (= temp10746_19 #x0000000000000004))
(assert (= temp10746_20 temp10746_19))
(assert (= temp10746_21 (select ARGNAME_padding_NAMEEND_VAL temp10746_20)))
(assert (= temp10746_22 #x0000000000000005))
(assert (= temp10746_23 temp10746_22))
(assert (= temp10746_24 (select ARGNAME_padding_NAMEEND_VAL temp10746_23)))
(assert (= temp10746_25 #x0000000000000000))
(assert (= temp10746_26 #x0000000000000000))
(assert (= temp10746_27 temp10746_26))
(assert (= temp10746_28 (select ARGNAME_padding_NAMEEND_VAL temp10746_27)))
(assert (= temp10746_29 #x0000000000000000))
(assert (= temp10746_30 #x0000000000000001))
(assert (= temp10746_31 temp10746_30))
(assert (= temp10746_32 (select ARGNAME_padding_NAMEEND_VAL temp10746_31)))
(assert (= temp10746_33 #x0000000000000000))
(assert (= temp10746_34 #x0000000000000002))
(assert (= temp10746_35 temp10746_34))
(assert (= temp10746_36 (select ARGNAME_padding_NAMEEND_VAL temp10746_35)))
(assert (= temp10746_37 #x0000000000000000))
(assert (= temp10746_38 #x0000000000000003))
(assert (= temp10746_39 temp10746_38))
(assert (= temp10746_40 (select ARGNAME_padding_NAMEEND_VAL temp10746_39)))
(assert (= temp10746_41 #x0000000000000000))
(assert (= temp10746_42 #x0000000000000004))
(assert (= temp10746_43 temp10746_42))
(assert (= temp10746_44 (select ARGNAME_padding_NAMEEND_VAL temp10746_43)))
(assert (= temp10746_45 #x0000000000000000))
(assert (= temp10746_46 #x0000000000000005))
(assert (= temp10746_47 temp10746_46))
(assert (= temp10746_48 (select ARGNAME_padding_NAMEEND_VAL temp10746_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10746_28 temp10746_25)
             (bvslt temp10746_32 temp10746_29)
             (bvslt temp10746_36 temp10746_33)
             (bvslt temp10746_40 temp10746_37)
             (bvslt temp10746_44 temp10746_41)
             (bvslt temp10746_48 temp10746_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10746_49 #x0000000000000000))
(assert (= var1191714 temp10746_49))
(assert (= temp10746_50 #x0000000000000000))
(assert (= temp10746_51 temp10746_50))
(assert (= temp10746_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10746_51)))
(assert (= temp10746_53 #x0000000000000001))
(assert (= temp10746_54 temp10746_53))
(assert (= temp10746_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10746_54)))
(assert (= temp10746_56 #x0000000000000002))
(assert (= temp10746_57 temp10746_56))
(assert (= temp10746_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10746_57)))
(assert (= temp10746_59 #x0000000000000003))
(assert (= temp10746_60 temp10746_59))
(assert (= temp10746_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10746_60)))
(assert (= temp10746_62 #x0000000000000004))
(assert (= temp10746_63 temp10746_62))
(assert (= temp10746_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10746_63)))
(assert (= temp10746_65 #x0000000000000005))
(assert (= temp10746_66 temp10746_65))
(assert (= temp10746_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10746_66)))
(assert (= temp10746_68 #x0000000000000000))
(assert (= temp10746_69 #x0000000000000000))
(assert (= temp10746_70 temp10746_69))
(assert (= temp10746_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10746_70)))
(assert (= temp10746_72 #x0000000000000000))
(assert (= temp10746_73 #x0000000000000001))
(assert (= temp10746_74 temp10746_73))
(assert (= temp10746_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10746_74)))
(assert (= temp10746_76 #x0000000000000000))
(assert (= temp10746_77 #x0000000000000002))
(assert (= temp10746_78 temp10746_77))
(assert (= temp10746_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10746_78)))
(assert (= temp10746_80 #x0000000000000000))
(assert (= temp10746_81 #x0000000000000003))
(assert (= temp10746_82 temp10746_81))
(assert (= temp10746_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10746_82)))
(assert (= temp10746_84 #x0000000000000000))
(assert (= temp10746_85 #x0000000000000004))
(assert (= temp10746_86 temp10746_85))
(assert (= temp10746_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10746_86)))
(assert (= temp10746_88 #x0000000000000000))
(assert (= temp10746_89 #x0000000000000005))
(assert (= temp10746_90 temp10746_89))
(assert (= temp10746_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10746_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10746_71 temp10746_68)
             (bvslt temp10746_75 temp10746_72)
             (bvslt temp10746_79 temp10746_76)
             (bvslt temp10746_83 temp10746_80)
             (bvslt temp10746_87 temp10746_84)
             (bvslt temp10746_91 temp10746_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10746_92 #x0000000000000000))
(assert (= var1191725 temp10746_92))
(assert (= temp10746_93 #x0000000000000000))
(assert (= temp10746_94 temp10746_93))
(assert (= temp10746_95 (select ARGNAME_stride_NAMEEND_VAL temp10746_94)))
(assert (= temp10746_96 #x0000000000000001))
(assert (= temp10746_97 temp10746_96))
(assert (= temp10746_98 (select ARGNAME_stride_NAMEEND_VAL temp10746_97)))
(assert (= temp10746_99 #x0000000000000002))
(assert (= temp10746_100 temp10746_99))
(assert (= temp10746_101 (select ARGNAME_stride_NAMEEND_VAL temp10746_100)))
(assert (= temp10746_102 #x0000000000000003))
(assert (= temp10746_103 temp10746_102))
(assert (= temp10746_104 (select ARGNAME_stride_NAMEEND_VAL temp10746_103)))
(assert (= temp10746_105 #x0000000000000004))
(assert (= temp10746_106 temp10746_105))
(assert (= temp10746_107 (select ARGNAME_stride_NAMEEND_VAL temp10746_106)))
(assert (= temp10746_108 #x0000000000000005))
(assert (= temp10746_109 temp10746_108))
(assert (= temp10746_110 (select ARGNAME_stride_NAMEEND_VAL temp10746_109)))
(assert (= temp10746_111 #x0000000000000000))
(assert (= temp10746_112 #x0000000000000000))
(assert (= temp10746_113 temp10746_112))
(assert (= temp10746_114 (select ARGNAME_stride_NAMEEND_VAL temp10746_113)))
(assert (= temp10746_115 #x0000000000000000))
(assert (= temp10746_116 #x0000000000000001))
(assert (= temp10746_117 temp10746_116))
(assert (= temp10746_118 (select ARGNAME_stride_NAMEEND_VAL temp10746_117)))
(assert (= temp10746_119 #x0000000000000000))
(assert (= temp10746_120 #x0000000000000002))
(assert (= temp10746_121 temp10746_120))
(assert (= temp10746_122 (select ARGNAME_stride_NAMEEND_VAL temp10746_121)))
(assert (= temp10746_123 #x0000000000000000))
(assert (= temp10746_124 #x0000000000000003))
(assert (= temp10746_125 temp10746_124))
(assert (= temp10746_126 (select ARGNAME_stride_NAMEEND_VAL temp10746_125)))
(assert (= temp10746_127 #x0000000000000000))
(assert (= temp10746_128 #x0000000000000004))
(assert (= temp10746_129 temp10746_128))
(assert (= temp10746_130 (select ARGNAME_stride_NAMEEND_VAL temp10746_129)))
(assert (= temp10746_131 #x0000000000000000))
(assert (= temp10746_132 #x0000000000000005))
(assert (= temp10746_133 temp10746_132))
(assert (= temp10746_134 (select ARGNAME_stride_NAMEEND_VAL temp10746_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10746_114 temp10746_111)
             (bvsle temp10746_118 temp10746_115)
             (bvsle temp10746_122 temp10746_119)
             (bvsle temp10746_126 temp10746_123)
             (bvsle temp10746_130 temp10746_127)
             (bvsle temp10746_134 temp10746_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10746_135 #x0000000000000000))
(assert (= var1191735 temp10746_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10746_136 #x0000000000000001))
(assert (= var1191747 temp10746_136))
(assert (= temp10746_137 #x0000000000000000))
(assert (= var1179826 temp10746_137))
(assert (= temp10746_138 #x0000000000000000))
(assert (= temp10746_139 temp10746_138))
(assert (= temp10746_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10746_139)))
(assert (= temp10746_141 #x0000000000000001))
(assert (= temp10746_142 temp10746_141))
(assert (= temp10746_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10746_142)))
(assert (= temp10746_144 #x0000000000000002))
(assert (= temp10746_145 temp10746_144))
(assert (= temp10746_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10746_145)))
(assert (= temp10746_147 #x0000000000000003))
(assert (= temp10746_148 temp10746_147))
(assert (= temp10746_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10746_148)))
(assert (= temp10746_150 #x0000000000000004))
(assert (= temp10746_151 temp10746_150))
(assert (= temp10746_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10746_151)))
(assert (= temp10746_153 #x0000000000000005))
(assert (= temp10746_154 temp10746_153))
(assert (= temp10746_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10746_154)))
(assert (= temp10746_157 var1179826))
(assert (= temp10746_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10746_157)))
(assert (= temp10746_156 temp10746_158))
(assert (= var1191780
   (ite (bvslt temp10746_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10746_159 #x0000000000000000))
(assert (= var1191780 temp10746_159))
(assert (= temp10746_160 #x0000000000000000))
(assert (= var1179826 temp10746_160))
(assert (= temp10746_162 var1179826))
(assert (= temp10746_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10746_162)))
(assert (= temp10746_161 temp10746_163))
(assert (= var1191802 (bvsmod temp10746_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10746_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10746_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10746_165 #x0000000000000001))
(assert (= var1191803 temp10746_165))
(assert (= temp10746_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10746_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10746_167 #x0000000000000001))
(assert (= var1191823 temp10746_167))
(assert (= temp10746_168 #x0000000000000001))
(assert (= var1180714 temp10746_168))
(assert (= temp10746_169 #x0000000000000000))
(assert (= temp10746_170 temp10746_169))
(assert (= temp10746_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10746_170)))
(assert (= temp10746_172 #x0000000000000001))
(assert (= temp10746_173 temp10746_172))
(assert (= temp10746_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10746_173)))
(assert (= temp10746_175 #x0000000000000002))
(assert (= temp10746_176 temp10746_175))
(assert (= temp10746_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10746_176)))
(assert (= temp10746_178 #x0000000000000003))
(assert (= temp10746_179 temp10746_178))
(assert (= temp10746_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10746_179)))
(assert (= temp10746_181 #x0000000000000004))
(assert (= temp10746_182 temp10746_181))
(assert (= temp10746_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10746_182)))
(assert (= temp10746_184 #x0000000000000005))
(assert (= temp10746_185 temp10746_184))
(assert (= temp10746_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10746_185)))
(assert (= temp10746_187 #x0000000000000000))
(assert (= temp10746_188
   (ite (bvslt var1180714 temp10746_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10746_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10746_188)))
(assert (= var1191831 temp10746_189))
(assert (bvslt (ite (bvslt var1180714 temp10746_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10746_190 #x0000000000000001))
(assert (= var1180714 temp10746_190))
(assert (= temp10746_192 var1180714))
(assert (= temp10746_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10746_192)))
(assert (= temp10746_191 temp10746_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10746_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10746_194 #x0000000000000001))
(assert (= var1191836 temp10746_194))
(assert (= temp10746_195 #x0000000000000000))
(assert (= var1179826 temp10746_195))
(assert (= temp10746_197 var1179826))
(assert (= temp10746_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10746_197)))
(assert (= temp10746_196 temp10746_198))
(assert (= temp10746_199 #x0000000000000002))
(assert (= var1586025 temp10746_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10746_200 #x0000000000000001))
(assert (= var1191993 temp10746_200))
(assert (= temp10746_201 #x0000000000000001))
(assert (= var2700303 temp10746_201))
(assert (= temp10746_202 #x0000000000000001))
(assert (= var2962447 temp10746_202))
(assert (= temp10746_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10746_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10746_204 #x0000000000000001))
(assert (= var211058 temp10746_204))
(assert (= temp10746_205 #x0000000000000001))
(assert (= var211188 temp10746_205))
(assert (= var3879401 var211188))
(assert (= temp10746_206 #x0000000000000000))
(assert (= var3866802 temp10746_206))
(assert (= temp10746_207 #x0000000000000000))
(assert (= temp10746_208
   (ite (bvslt var3866802 temp10746_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10746_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10746_208)))
(assert (= var3879420 temp10746_209))
(assert (bvslt (ite (bvslt var3866802 temp10746_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10746_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10746_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10746_211 #x0000000000000000))
(assert (= var3879421 temp10746_211))
(assert (= temp10746_212 #x0000000000000001))
(assert (= var3867690 temp10746_212))
(assert (= temp10746_213 #x0000000000000000))
(assert (= temp10746_214
   (ite (bvslt var3867690 temp10746_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10746_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10746_214)))
(assert (= var3879423 temp10746_215))
(assert (bvslt (ite (bvslt var3867690 temp10746_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10746_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10746_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10746_217 #x0000000000000001))
(assert (= var3879424 temp10746_217))
(assert (= temp10746_218 #x0000000000000000))
(assert (= var4133117 temp10746_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10746_219 #x0000000000000002))
(assert (= var4339331 temp10746_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10746_220 #x0000000000000000))
(assert (= var4404892 temp10746_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var4600208 var211201))
(assert (= var211890 var210913))
(assert (= temp10746_221 #x0000000000000000))
(assert (= var211891
   (ite (distinct var211890 temp10746_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10746_222 #x0000000000000001))
(assert (= var211058 temp10746_222))
(model-add temp10746_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10746_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10746_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10746_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






