(declare-fun temp45_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp45_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp45_3 () (_ BitVec 64))
(declare-fun temp45_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp45_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp45_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp45_7 () (_ BitVec 64))
(declare-fun temp45_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp45_9 () (_ BitVec 64))
(declare-fun temp45_10 () (_ BitVec 64))
(declare-fun temp45_11 () (_ BitVec 64))
(declare-fun temp45_12 () (_ BitVec 64))
(declare-fun temp45_13 () (_ BitVec 64))
(declare-fun temp45_14 () (_ BitVec 64))
(declare-fun temp45_15 () (_ BitVec 64))
(declare-fun temp45_16 () (_ BitVec 64))
(declare-fun temp45_17 () (_ BitVec 64))
(declare-fun temp45_18 () (_ BitVec 64))
(declare-fun temp45_19 () (_ BitVec 64))
(declare-fun temp45_20 () (_ BitVec 64))
(declare-fun temp45_21 () (_ BitVec 64))
(declare-fun temp45_22 () (_ BitVec 64))
(declare-fun temp45_23 () (_ BitVec 64))
(declare-fun temp45_24 () (_ BitVec 64))
(declare-fun temp45_25 () (_ BitVec 64))
(declare-fun temp45_26 () (_ BitVec 64))
(declare-fun temp45_27 () (_ BitVec 64))
(declare-fun temp45_28 () (_ BitVec 64))
(declare-fun temp45_29 () (_ BitVec 64))
(declare-fun temp45_30 () (_ BitVec 64))
(declare-fun temp45_31 () (_ BitVec 64))
(declare-fun temp45_32 () (_ BitVec 64))
(declare-fun temp45_33 () (_ BitVec 64))
(declare-fun temp45_34 () (_ BitVec 64))
(declare-fun temp45_35 () (_ BitVec 64))
(declare-fun temp45_36 () (_ BitVec 64))
(declare-fun temp45_37 () (_ BitVec 64))
(declare-fun temp45_38 () (_ BitVec 64))
(declare-fun temp45_39 () (_ BitVec 64))
(declare-fun temp45_40 () (_ BitVec 64))
(declare-fun temp45_41 () (_ BitVec 64))
(declare-fun temp45_42 () (_ BitVec 64))
(declare-fun temp45_43 () (_ BitVec 64))
(declare-fun temp45_44 () (_ BitVec 64))
(declare-fun temp45_45 () (_ BitVec 64))
(declare-fun temp45_46 () (_ BitVec 64))
(declare-fun temp45_47 () (_ BitVec 64))
(declare-fun temp45_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp45_49 () (_ BitVec 64))
(declare-fun temp45_50 () (_ BitVec 64))
(declare-fun temp45_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp45_52 () (_ BitVec 64))
(declare-fun temp45_53 () (_ BitVec 64))
(declare-fun temp45_54 () (_ BitVec 64))
(declare-fun temp45_55 () (_ BitVec 64))
(declare-fun temp45_56 () (_ BitVec 64))
(declare-fun temp45_57 () (_ BitVec 64))
(declare-fun temp45_58 () (_ BitVec 64))
(declare-fun temp45_59 () (_ BitVec 64))
(declare-fun temp45_60 () (_ BitVec 64))
(declare-fun temp45_61 () (_ BitVec 64))
(declare-fun temp45_62 () (_ BitVec 64))
(declare-fun temp45_63 () (_ BitVec 64))
(declare-fun temp45_64 () (_ BitVec 64))
(declare-fun temp45_65 () (_ BitVec 64))
(declare-fun temp45_66 () (_ BitVec 64))
(declare-fun temp45_67 () (_ BitVec 64))
(declare-fun temp45_68 () (_ BitVec 64))
(declare-fun temp45_69 () (_ BitVec 64))
(declare-fun temp45_70 () (_ BitVec 64))
(declare-fun temp45_71 () (_ BitVec 64))
(declare-fun temp45_72 () (_ BitVec 64))
(declare-fun temp45_73 () (_ BitVec 64))
(declare-fun temp45_74 () (_ BitVec 64))
(declare-fun temp45_75 () (_ BitVec 64))
(declare-fun temp45_76 () (_ BitVec 64))
(declare-fun temp45_77 () (_ BitVec 64))
(declare-fun temp45_78 () (_ BitVec 64))
(declare-fun temp45_79 () (_ BitVec 64))
(declare-fun temp45_80 () (_ BitVec 64))
(declare-fun temp45_81 () (_ BitVec 64))
(declare-fun temp45_82 () (_ BitVec 64))
(declare-fun temp45_83 () (_ BitVec 64))
(declare-fun temp45_84 () (_ BitVec 64))
(declare-fun temp45_85 () (_ BitVec 64))
(declare-fun temp45_86 () (_ BitVec 64))
(declare-fun temp45_87 () (_ BitVec 64))
(declare-fun temp45_88 () (_ BitVec 64))
(declare-fun temp45_89 () (_ BitVec 64))
(declare-fun temp45_90 () (_ BitVec 64))
(declare-fun temp45_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp45_92 () (_ BitVec 64))
(declare-fun temp45_93 () (_ BitVec 64))
(declare-fun temp45_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp45_95 () (_ BitVec 64))
(declare-fun temp45_96 () (_ BitVec 64))
(declare-fun temp45_97 () (_ BitVec 64))
(declare-fun temp45_98 () (_ BitVec 64))
(declare-fun temp45_99 () (_ BitVec 64))
(declare-fun temp45_100 () (_ BitVec 64))
(declare-fun temp45_101 () (_ BitVec 64))
(declare-fun temp45_102 () (_ BitVec 64))
(declare-fun temp45_103 () (_ BitVec 64))
(declare-fun temp45_104 () (_ BitVec 64))
(declare-fun temp45_105 () (_ BitVec 64))
(declare-fun temp45_106 () (_ BitVec 64))
(declare-fun temp45_107 () (_ BitVec 64))
(declare-fun temp45_108 () (_ BitVec 64))
(declare-fun temp45_109 () (_ BitVec 64))
(declare-fun temp45_110 () (_ BitVec 64))
(declare-fun temp45_111 () (_ BitVec 64))
(declare-fun temp45_112 () (_ BitVec 64))
(declare-fun temp45_113 () (_ BitVec 64))
(declare-fun temp45_114 () (_ BitVec 64))
(declare-fun temp45_115 () (_ BitVec 64))
(declare-fun temp45_116 () (_ BitVec 64))
(declare-fun temp45_117 () (_ BitVec 64))
(declare-fun temp45_118 () (_ BitVec 64))
(declare-fun temp45_119 () (_ BitVec 64))
(declare-fun temp45_120 () (_ BitVec 64))
(declare-fun temp45_121 () (_ BitVec 64))
(declare-fun temp45_122 () (_ BitVec 64))
(declare-fun temp45_123 () (_ BitVec 64))
(declare-fun temp45_124 () (_ BitVec 64))
(declare-fun temp45_125 () (_ BitVec 64))
(declare-fun temp45_126 () (_ BitVec 64))
(declare-fun temp45_127 () (_ BitVec 64))
(declare-fun temp45_128 () (_ BitVec 64))
(declare-fun temp45_129 () (_ BitVec 64))
(declare-fun temp45_130 () (_ BitVec 64))
(declare-fun temp45_131 () (_ BitVec 64))
(declare-fun temp45_132 () (_ BitVec 64))
(declare-fun temp45_133 () (_ BitVec 64))
(declare-fun temp45_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp45_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp45_136 () (_ BitVec 64))
(declare-fun temp45_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp45_138 () (_ BitVec 64))
(declare-fun temp45_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp45_140 () (_ BitVec 64))
(declare-fun temp45_141 () (_ BitVec 64))
(declare-fun temp45_142 () (_ BitVec 64))
(declare-fun temp45_143 () (_ BitVec 64))
(declare-fun temp45_144 () (_ BitVec 64))
(declare-fun temp45_145 () (_ BitVec 64))
(declare-fun temp45_146 () (_ BitVec 64))
(declare-fun temp45_147 () (_ BitVec 64))
(declare-fun temp45_148 () (_ BitVec 64))
(declare-fun temp45_149 () (_ BitVec 64))
(declare-fun temp45_150 () (_ BitVec 64))
(declare-fun temp45_151 () (_ BitVec 64))
(declare-fun temp45_152 () (_ BitVec 64))
(declare-fun temp45_153 () (_ BitVec 64))
(declare-fun temp45_154 () (_ BitVec 64))
(declare-fun temp45_155 () (_ BitVec 64))
(declare-fun temp45_157 () (_ BitVec 64))
(declare-fun temp45_158 () (_ BitVec 64))
(declare-fun temp45_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp45_159 () (_ BitVec 64))
(declare-fun temp45_160 () (_ BitVec 64))
(declare-fun temp45_162 () (_ BitVec 64))
(declare-fun temp45_163 () (_ BitVec 64))
(declare-fun temp45_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp45_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp45_165 () (_ BitVec 64))
(declare-fun temp45_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp45_167 () (_ BitVec 64))
(declare-fun temp45_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp45_169 () (_ BitVec 64))
(declare-fun temp45_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp45_171 () (_ BitVec 64))
(declare-fun temp45_172 () (_ BitVec 64))
(declare-fun temp45_173 () (_ BitVec 64))
(declare-fun temp45_174 () (_ BitVec 64))
(declare-fun temp45_175 () (_ BitVec 64))
(declare-fun temp45_176 () (_ BitVec 64))
(declare-fun temp45_177 () (_ BitVec 64))
(declare-fun temp45_178 () (_ BitVec 64))
(declare-fun temp45_179 () (_ BitVec 64))
(declare-fun temp45_180 () (_ BitVec 64))
(declare-fun temp45_181 () (_ BitVec 64))
(declare-fun temp45_182 () (_ BitVec 64))
(declare-fun temp45_183 () (_ BitVec 64))
(declare-fun temp45_184 () (_ BitVec 64))
(declare-fun temp45_185 () (_ BitVec 64))
(declare-fun temp45_186 () (_ BitVec 64))
(declare-fun temp45_187 () (_ BitVec 64))
(declare-fun temp45_188 () (_ BitVec 64))
(declare-fun temp45_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp45_190 () (_ BitVec 64))
(declare-fun temp45_192 () (_ BitVec 64))
(declare-fun temp45_193 () (_ BitVec 64))
(declare-fun temp45_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp45_194 () (_ BitVec 64))
(declare-fun temp45_195 () (_ BitVec 64))
(declare-fun temp45_197 () (_ BitVec 64))
(declare-fun temp45_198 () (_ BitVec 64))
(declare-fun temp45_196 () (_ BitVec 64))
(declare-fun temp45_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp45_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp45_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp45_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp45_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp45_204 () (_ BitVec 64))
(declare-fun temp45_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp45_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp45_207 () (_ BitVec 64))
(declare-fun temp45_208 () (_ BitVec 64))
(declare-fun temp45_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp45_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp45_211 () (_ BitVec 64))
(declare-fun temp45_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp45_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp45_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4796816 () (_ BitVec 64))
(declare-fun var211388 () (_ BitVec 64))
(declare-fun temp45_215 () (_ BitVec 64))
(declare-fun var211389 () (_ BitVec 64))
(declare-fun var5717837 () (_ BitVec 64))
(declare-fun temp45_216 () (_ BitVec 64))
(assert (= temp45_1 #x0000000000000001))
(assert (= var77203 temp45_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp45_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp45_2)))
(assert (= temp45_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp45_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp45_4 #x0000000000000000))
(assert (= var210941 temp45_4))
(assert (= temp45_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp45_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp45_6 #x0000000000000000))
(assert (= var210986 temp45_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp45_7 #x0000000000000000))
(assert (= temp45_8 temp45_7))
(assert (= temp45_9 (select ARGNAME_padding_NAMEEND_VAL temp45_8)))
(assert (= temp45_10 #x0000000000000001))
(assert (= temp45_11 temp45_10))
(assert (= temp45_12 (select ARGNAME_padding_NAMEEND_VAL temp45_11)))
(assert (= temp45_13 #x0000000000000002))
(assert (= temp45_14 temp45_13))
(assert (= temp45_15 (select ARGNAME_padding_NAMEEND_VAL temp45_14)))
(assert (= temp45_16 #x0000000000000003))
(assert (= temp45_17 temp45_16))
(assert (= temp45_18 (select ARGNAME_padding_NAMEEND_VAL temp45_17)))
(assert (= temp45_19 #x0000000000000004))
(assert (= temp45_20 temp45_19))
(assert (= temp45_21 (select ARGNAME_padding_NAMEEND_VAL temp45_20)))
(assert (= temp45_22 #x0000000000000005))
(assert (= temp45_23 temp45_22))
(assert (= temp45_24 (select ARGNAME_padding_NAMEEND_VAL temp45_23)))
(assert (= temp45_25 #x0000000000000000))
(assert (= temp45_26 #x0000000000000000))
(assert (= temp45_27 temp45_26))
(assert (= temp45_28 (select ARGNAME_padding_NAMEEND_VAL temp45_27)))
(assert (= temp45_29 #x0000000000000000))
(assert (= temp45_30 #x0000000000000001))
(assert (= temp45_31 temp45_30))
(assert (= temp45_32 (select ARGNAME_padding_NAMEEND_VAL temp45_31)))
(assert (= temp45_33 #x0000000000000000))
(assert (= temp45_34 #x0000000000000002))
(assert (= temp45_35 temp45_34))
(assert (= temp45_36 (select ARGNAME_padding_NAMEEND_VAL temp45_35)))
(assert (= temp45_37 #x0000000000000000))
(assert (= temp45_38 #x0000000000000003))
(assert (= temp45_39 temp45_38))
(assert (= temp45_40 (select ARGNAME_padding_NAMEEND_VAL temp45_39)))
(assert (= temp45_41 #x0000000000000000))
(assert (= temp45_42 #x0000000000000004))
(assert (= temp45_43 temp45_42))
(assert (= temp45_44 (select ARGNAME_padding_NAMEEND_VAL temp45_43)))
(assert (= temp45_45 #x0000000000000000))
(assert (= temp45_46 #x0000000000000005))
(assert (= temp45_47 temp45_46))
(assert (= temp45_48 (select ARGNAME_padding_NAMEEND_VAL temp45_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp45_28 temp45_25)
             (bvslt temp45_32 temp45_29)
             (bvslt temp45_36 temp45_33)
             (bvslt temp45_40 temp45_37)
             (bvslt temp45_44 temp45_41)
             (bvslt temp45_48 temp45_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp45_49 #x0000000000000000))
(assert (= var1191714 temp45_49))
(assert (= temp45_50 #x0000000000000000))
(assert (= temp45_51 temp45_50))
(assert (= temp45_52 (select ARGNAME_output_padding_NAMEEND_VAL temp45_51)))
(assert (= temp45_53 #x0000000000000001))
(assert (= temp45_54 temp45_53))
(assert (= temp45_55 (select ARGNAME_output_padding_NAMEEND_VAL temp45_54)))
(assert (= temp45_56 #x0000000000000002))
(assert (= temp45_57 temp45_56))
(assert (= temp45_58 (select ARGNAME_output_padding_NAMEEND_VAL temp45_57)))
(assert (= temp45_59 #x0000000000000003))
(assert (= temp45_60 temp45_59))
(assert (= temp45_61 (select ARGNAME_output_padding_NAMEEND_VAL temp45_60)))
(assert (= temp45_62 #x0000000000000004))
(assert (= temp45_63 temp45_62))
(assert (= temp45_64 (select ARGNAME_output_padding_NAMEEND_VAL temp45_63)))
(assert (= temp45_65 #x0000000000000005))
(assert (= temp45_66 temp45_65))
(assert (= temp45_67 (select ARGNAME_output_padding_NAMEEND_VAL temp45_66)))
(assert (= temp45_68 #x0000000000000000))
(assert (= temp45_69 #x0000000000000000))
(assert (= temp45_70 temp45_69))
(assert (= temp45_71 (select ARGNAME_output_padding_NAMEEND_VAL temp45_70)))
(assert (= temp45_72 #x0000000000000000))
(assert (= temp45_73 #x0000000000000001))
(assert (= temp45_74 temp45_73))
(assert (= temp45_75 (select ARGNAME_output_padding_NAMEEND_VAL temp45_74)))
(assert (= temp45_76 #x0000000000000000))
(assert (= temp45_77 #x0000000000000002))
(assert (= temp45_78 temp45_77))
(assert (= temp45_79 (select ARGNAME_output_padding_NAMEEND_VAL temp45_78)))
(assert (= temp45_80 #x0000000000000000))
(assert (= temp45_81 #x0000000000000003))
(assert (= temp45_82 temp45_81))
(assert (= temp45_83 (select ARGNAME_output_padding_NAMEEND_VAL temp45_82)))
(assert (= temp45_84 #x0000000000000000))
(assert (= temp45_85 #x0000000000000004))
(assert (= temp45_86 temp45_85))
(assert (= temp45_87 (select ARGNAME_output_padding_NAMEEND_VAL temp45_86)))
(assert (= temp45_88 #x0000000000000000))
(assert (= temp45_89 #x0000000000000005))
(assert (= temp45_90 temp45_89))
(assert (= temp45_91 (select ARGNAME_output_padding_NAMEEND_VAL temp45_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp45_71 temp45_68)
             (bvslt temp45_75 temp45_72)
             (bvslt temp45_79 temp45_76)
             (bvslt temp45_83 temp45_80)
             (bvslt temp45_87 temp45_84)
             (bvslt temp45_91 temp45_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp45_92 #x0000000000000000))
(assert (= var1191725 temp45_92))
(assert (= temp45_93 #x0000000000000000))
(assert (= temp45_94 temp45_93))
(assert (= temp45_95 (select ARGNAME_stride_NAMEEND_VAL temp45_94)))
(assert (= temp45_96 #x0000000000000001))
(assert (= temp45_97 temp45_96))
(assert (= temp45_98 (select ARGNAME_stride_NAMEEND_VAL temp45_97)))
(assert (= temp45_99 #x0000000000000002))
(assert (= temp45_100 temp45_99))
(assert (= temp45_101 (select ARGNAME_stride_NAMEEND_VAL temp45_100)))
(assert (= temp45_102 #x0000000000000003))
(assert (= temp45_103 temp45_102))
(assert (= temp45_104 (select ARGNAME_stride_NAMEEND_VAL temp45_103)))
(assert (= temp45_105 #x0000000000000004))
(assert (= temp45_106 temp45_105))
(assert (= temp45_107 (select ARGNAME_stride_NAMEEND_VAL temp45_106)))
(assert (= temp45_108 #x0000000000000005))
(assert (= temp45_109 temp45_108))
(assert (= temp45_110 (select ARGNAME_stride_NAMEEND_VAL temp45_109)))
(assert (= temp45_111 #x0000000000000000))
(assert (= temp45_112 #x0000000000000000))
(assert (= temp45_113 temp45_112))
(assert (= temp45_114 (select ARGNAME_stride_NAMEEND_VAL temp45_113)))
(assert (= temp45_115 #x0000000000000000))
(assert (= temp45_116 #x0000000000000001))
(assert (= temp45_117 temp45_116))
(assert (= temp45_118 (select ARGNAME_stride_NAMEEND_VAL temp45_117)))
(assert (= temp45_119 #x0000000000000000))
(assert (= temp45_120 #x0000000000000002))
(assert (= temp45_121 temp45_120))
(assert (= temp45_122 (select ARGNAME_stride_NAMEEND_VAL temp45_121)))
(assert (= temp45_123 #x0000000000000000))
(assert (= temp45_124 #x0000000000000003))
(assert (= temp45_125 temp45_124))
(assert (= temp45_126 (select ARGNAME_stride_NAMEEND_VAL temp45_125)))
(assert (= temp45_127 #x0000000000000000))
(assert (= temp45_128 #x0000000000000004))
(assert (= temp45_129 temp45_128))
(assert (= temp45_130 (select ARGNAME_stride_NAMEEND_VAL temp45_129)))
(assert (= temp45_131 #x0000000000000000))
(assert (= temp45_132 #x0000000000000005))
(assert (= temp45_133 temp45_132))
(assert (= temp45_134 (select ARGNAME_stride_NAMEEND_VAL temp45_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp45_114 temp45_111)
             (bvsle temp45_118 temp45_115)
             (bvsle temp45_122 temp45_119)
             (bvsle temp45_126 temp45_123)
             (bvsle temp45_130 temp45_127)
             (bvsle temp45_134 temp45_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp45_135 #x0000000000000000))
(assert (= var1191735 temp45_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp45_136 #x0000000000000001))
(assert (= var1191747 temp45_136))
(assert (= temp45_137 #x0000000000000000))
(assert (= var1179826 temp45_137))
(assert (= temp45_138 #x0000000000000000))
(assert (= temp45_139 temp45_138))
(assert (= temp45_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp45_139)))
(assert (= temp45_141 #x0000000000000001))
(assert (= temp45_142 temp45_141))
(assert (= temp45_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp45_142)))
(assert (= temp45_144 #x0000000000000002))
(assert (= temp45_145 temp45_144))
(assert (= temp45_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp45_145)))
(assert (= temp45_147 #x0000000000000003))
(assert (= temp45_148 temp45_147))
(assert (= temp45_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp45_148)))
(assert (= temp45_150 #x0000000000000004))
(assert (= temp45_151 temp45_150))
(assert (= temp45_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp45_151)))
(assert (= temp45_153 #x0000000000000005))
(assert (= temp45_154 temp45_153))
(assert (= temp45_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp45_154)))
(assert (= temp45_157 var1179826))
(assert (= temp45_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp45_157)))
(assert (= temp45_156 temp45_158))
(assert (= var1191780
   (ite (bvslt temp45_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp45_159 #x0000000000000000))
(assert (= var1191780 temp45_159))
(assert (= temp45_160 #x0000000000000000))
(assert (= var1179826 temp45_160))
(assert (= temp45_162 var1179826))
(assert (= temp45_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp45_162)))
(assert (= temp45_161 temp45_163))
(assert (= var1191802 (bvsmod temp45_161 ARGNAME_groups_NAMEEND)))
(assert (= temp45_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp45_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp45_165 #x0000000000000001))
(assert (= var1191803 temp45_165))
(assert (= temp45_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp45_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp45_167 #x0000000000000001))
(assert (= var1191823 temp45_167))
(assert (= temp45_168 #x0000000000000001))
(assert (= var1180714 temp45_168))
(assert (= temp45_169 #x0000000000000000))
(assert (= temp45_170 temp45_169))
(assert (= temp45_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp45_170)))
(assert (= temp45_172 #x0000000000000001))
(assert (= temp45_173 temp45_172))
(assert (= temp45_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp45_173)))
(assert (= temp45_175 #x0000000000000002))
(assert (= temp45_176 temp45_175))
(assert (= temp45_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp45_176)))
(assert (= temp45_178 #x0000000000000003))
(assert (= temp45_179 temp45_178))
(assert (= temp45_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp45_179)))
(assert (= temp45_181 #x0000000000000004))
(assert (= temp45_182 temp45_181))
(assert (= temp45_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp45_182)))
(assert (= temp45_184 #x0000000000000005))
(assert (= temp45_185 temp45_184))
(assert (= temp45_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp45_185)))
(assert (= temp45_187 #x0000000000000000))
(assert (= temp45_188
   (ite (bvslt var1180714 temp45_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp45_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp45_188)))
(assert (= var1191831 temp45_189))
(assert (bvslt (ite (bvslt var1180714 temp45_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp45_190 #x0000000000000001))
(assert (= var1180714 temp45_190))
(assert (= temp45_192 var1180714))
(assert (= temp45_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp45_192)))
(assert (= temp45_191 temp45_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp45_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp45_194 #x0000000000000001))
(assert (= var1191836 temp45_194))
(assert (= temp45_195 #x0000000000000000))
(assert (= var1179826 temp45_195))
(assert (= temp45_197 var1179826))
(assert (= temp45_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp45_197)))
(assert (= temp45_196 temp45_198))
(assert (= temp45_199 #x0000000000000002))
(assert (= var1586025 temp45_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp45_200 #x0000000000000001))
(assert (= var1191993 temp45_200))
(assert (= temp45_201 #x0000000000000001))
(assert (= var2700303 temp45_201))
(assert (= temp45_202 #x0000000000000001))
(assert (= var2962447 temp45_202))
(assert (= temp45_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp45_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp45_204 #x0000000000000001))
(assert (= var211058 temp45_204))
(assert (= temp45_205 #x0000000000000001))
(assert (= var211188 temp45_205))
(assert (= var3879401 var211188))
(assert (= temp45_206 #x0000000000000000))
(assert (= var3866802 temp45_206))
(assert (= temp45_207 #x0000000000000000))
(assert (= temp45_208
   (ite (bvslt var3866802 temp45_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp45_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp45_208)))
(assert (= var3879420 temp45_209))
(assert (bvslt (ite (bvslt var3866802 temp45_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp45_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp45_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp45_211 #x0000000000000001))
(assert (= var3879421 temp45_211))
(assert (= temp45_212 #x0000000000000000))
(assert (= var4079423 temp45_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp45_213 #x0000000000000002))
(assert (= var4208259 temp45_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp45_214 #x0000000000000000))
(assert (= var4273820 temp45_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4796816 var211201))
(assert (= var211388 var210913))
(assert (= temp45_215 #x0000000000000000))
(assert (= var211389
   (ite (distinct var211388 temp45_215) #x0000000000000001 #x0000000000000000)))
(assert (= var5717837 var211389))
(assert (= temp45_216 #x0000000000000001))
(assert (= var211058 temp45_216))
(model-add temp45_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp45_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp45_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp45_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






