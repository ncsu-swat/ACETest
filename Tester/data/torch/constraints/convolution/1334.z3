(declare-fun temp10509_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10509_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10509_3 () (_ BitVec 64))
(declare-fun temp10509_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10509_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10509_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10509_7 () (_ BitVec 64))
(declare-fun temp10509_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10509_9 () (_ BitVec 64))
(declare-fun temp10509_10 () (_ BitVec 64))
(declare-fun temp10509_11 () (_ BitVec 64))
(declare-fun temp10509_12 () (_ BitVec 64))
(declare-fun temp10509_13 () (_ BitVec 64))
(declare-fun temp10509_14 () (_ BitVec 64))
(declare-fun temp10509_15 () (_ BitVec 64))
(declare-fun temp10509_16 () (_ BitVec 64))
(declare-fun temp10509_17 () (_ BitVec 64))
(declare-fun temp10509_18 () (_ BitVec 64))
(declare-fun temp10509_19 () (_ BitVec 64))
(declare-fun temp10509_20 () (_ BitVec 64))
(declare-fun temp10509_21 () (_ BitVec 64))
(declare-fun temp10509_22 () (_ BitVec 64))
(declare-fun temp10509_23 () (_ BitVec 64))
(declare-fun temp10509_24 () (_ BitVec 64))
(declare-fun temp10509_25 () (_ BitVec 64))
(declare-fun temp10509_26 () (_ BitVec 64))
(declare-fun temp10509_27 () (_ BitVec 64))
(declare-fun temp10509_28 () (_ BitVec 64))
(declare-fun temp10509_29 () (_ BitVec 64))
(declare-fun temp10509_30 () (_ BitVec 64))
(declare-fun temp10509_31 () (_ BitVec 64))
(declare-fun temp10509_32 () (_ BitVec 64))
(declare-fun temp10509_33 () (_ BitVec 64))
(declare-fun temp10509_34 () (_ BitVec 64))
(declare-fun temp10509_35 () (_ BitVec 64))
(declare-fun temp10509_36 () (_ BitVec 64))
(declare-fun temp10509_37 () (_ BitVec 64))
(declare-fun temp10509_38 () (_ BitVec 64))
(declare-fun temp10509_39 () (_ BitVec 64))
(declare-fun temp10509_40 () (_ BitVec 64))
(declare-fun temp10509_41 () (_ BitVec 64))
(declare-fun temp10509_42 () (_ BitVec 64))
(declare-fun temp10509_43 () (_ BitVec 64))
(declare-fun temp10509_44 () (_ BitVec 64))
(declare-fun temp10509_45 () (_ BitVec 64))
(declare-fun temp10509_46 () (_ BitVec 64))
(declare-fun temp10509_47 () (_ BitVec 64))
(declare-fun temp10509_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10509_49 () (_ BitVec 64))
(declare-fun temp10509_50 () (_ BitVec 64))
(declare-fun temp10509_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10509_52 () (_ BitVec 64))
(declare-fun temp10509_53 () (_ BitVec 64))
(declare-fun temp10509_54 () (_ BitVec 64))
(declare-fun temp10509_55 () (_ BitVec 64))
(declare-fun temp10509_56 () (_ BitVec 64))
(declare-fun temp10509_57 () (_ BitVec 64))
(declare-fun temp10509_58 () (_ BitVec 64))
(declare-fun temp10509_59 () (_ BitVec 64))
(declare-fun temp10509_60 () (_ BitVec 64))
(declare-fun temp10509_61 () (_ BitVec 64))
(declare-fun temp10509_62 () (_ BitVec 64))
(declare-fun temp10509_63 () (_ BitVec 64))
(declare-fun temp10509_64 () (_ BitVec 64))
(declare-fun temp10509_65 () (_ BitVec 64))
(declare-fun temp10509_66 () (_ BitVec 64))
(declare-fun temp10509_67 () (_ BitVec 64))
(declare-fun temp10509_68 () (_ BitVec 64))
(declare-fun temp10509_69 () (_ BitVec 64))
(declare-fun temp10509_70 () (_ BitVec 64))
(declare-fun temp10509_71 () (_ BitVec 64))
(declare-fun temp10509_72 () (_ BitVec 64))
(declare-fun temp10509_73 () (_ BitVec 64))
(declare-fun temp10509_74 () (_ BitVec 64))
(declare-fun temp10509_75 () (_ BitVec 64))
(declare-fun temp10509_76 () (_ BitVec 64))
(declare-fun temp10509_77 () (_ BitVec 64))
(declare-fun temp10509_78 () (_ BitVec 64))
(declare-fun temp10509_79 () (_ BitVec 64))
(declare-fun temp10509_80 () (_ BitVec 64))
(declare-fun temp10509_81 () (_ BitVec 64))
(declare-fun temp10509_82 () (_ BitVec 64))
(declare-fun temp10509_83 () (_ BitVec 64))
(declare-fun temp10509_84 () (_ BitVec 64))
(declare-fun temp10509_85 () (_ BitVec 64))
(declare-fun temp10509_86 () (_ BitVec 64))
(declare-fun temp10509_87 () (_ BitVec 64))
(declare-fun temp10509_88 () (_ BitVec 64))
(declare-fun temp10509_89 () (_ BitVec 64))
(declare-fun temp10509_90 () (_ BitVec 64))
(declare-fun temp10509_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10509_92 () (_ BitVec 64))
(declare-fun temp10509_93 () (_ BitVec 64))
(declare-fun temp10509_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10509_95 () (_ BitVec 64))
(declare-fun temp10509_96 () (_ BitVec 64))
(declare-fun temp10509_97 () (_ BitVec 64))
(declare-fun temp10509_98 () (_ BitVec 64))
(declare-fun temp10509_99 () (_ BitVec 64))
(declare-fun temp10509_100 () (_ BitVec 64))
(declare-fun temp10509_101 () (_ BitVec 64))
(declare-fun temp10509_102 () (_ BitVec 64))
(declare-fun temp10509_103 () (_ BitVec 64))
(declare-fun temp10509_104 () (_ BitVec 64))
(declare-fun temp10509_105 () (_ BitVec 64))
(declare-fun temp10509_106 () (_ BitVec 64))
(declare-fun temp10509_107 () (_ BitVec 64))
(declare-fun temp10509_108 () (_ BitVec 64))
(declare-fun temp10509_109 () (_ BitVec 64))
(declare-fun temp10509_110 () (_ BitVec 64))
(declare-fun temp10509_111 () (_ BitVec 64))
(declare-fun temp10509_112 () (_ BitVec 64))
(declare-fun temp10509_113 () (_ BitVec 64))
(declare-fun temp10509_114 () (_ BitVec 64))
(declare-fun temp10509_115 () (_ BitVec 64))
(declare-fun temp10509_116 () (_ BitVec 64))
(declare-fun temp10509_117 () (_ BitVec 64))
(declare-fun temp10509_118 () (_ BitVec 64))
(declare-fun temp10509_119 () (_ BitVec 64))
(declare-fun temp10509_120 () (_ BitVec 64))
(declare-fun temp10509_121 () (_ BitVec 64))
(declare-fun temp10509_122 () (_ BitVec 64))
(declare-fun temp10509_123 () (_ BitVec 64))
(declare-fun temp10509_124 () (_ BitVec 64))
(declare-fun temp10509_125 () (_ BitVec 64))
(declare-fun temp10509_126 () (_ BitVec 64))
(declare-fun temp10509_127 () (_ BitVec 64))
(declare-fun temp10509_128 () (_ BitVec 64))
(declare-fun temp10509_129 () (_ BitVec 64))
(declare-fun temp10509_130 () (_ BitVec 64))
(declare-fun temp10509_131 () (_ BitVec 64))
(declare-fun temp10509_132 () (_ BitVec 64))
(declare-fun temp10509_133 () (_ BitVec 64))
(declare-fun temp10509_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10509_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10509_136 () (_ BitVec 64))
(declare-fun temp10509_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10509_138 () (_ BitVec 64))
(declare-fun temp10509_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10509_140 () (_ BitVec 64))
(declare-fun temp10509_141 () (_ BitVec 64))
(declare-fun temp10509_142 () (_ BitVec 64))
(declare-fun temp10509_143 () (_ BitVec 64))
(declare-fun temp10509_144 () (_ BitVec 64))
(declare-fun temp10509_145 () (_ BitVec 64))
(declare-fun temp10509_146 () (_ BitVec 64))
(declare-fun temp10509_147 () (_ BitVec 64))
(declare-fun temp10509_148 () (_ BitVec 64))
(declare-fun temp10509_149 () (_ BitVec 64))
(declare-fun temp10509_150 () (_ BitVec 64))
(declare-fun temp10509_151 () (_ BitVec 64))
(declare-fun temp10509_152 () (_ BitVec 64))
(declare-fun temp10509_153 () (_ BitVec 64))
(declare-fun temp10509_154 () (_ BitVec 64))
(declare-fun temp10509_155 () (_ BitVec 64))
(declare-fun temp10509_157 () (_ BitVec 64))
(declare-fun temp10509_158 () (_ BitVec 64))
(declare-fun temp10509_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10509_159 () (_ BitVec 64))
(declare-fun temp10509_160 () (_ BitVec 64))
(declare-fun temp10509_162 () (_ BitVec 64))
(declare-fun temp10509_163 () (_ BitVec 64))
(declare-fun temp10509_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10509_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10509_165 () (_ BitVec 64))
(declare-fun temp10509_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10509_167 () (_ BitVec 64))
(declare-fun temp10509_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10509_169 () (_ BitVec 64))
(declare-fun temp10509_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10509_171 () (_ BitVec 64))
(declare-fun temp10509_172 () (_ BitVec 64))
(declare-fun temp10509_173 () (_ BitVec 64))
(declare-fun temp10509_174 () (_ BitVec 64))
(declare-fun temp10509_175 () (_ BitVec 64))
(declare-fun temp10509_176 () (_ BitVec 64))
(declare-fun temp10509_177 () (_ BitVec 64))
(declare-fun temp10509_178 () (_ BitVec 64))
(declare-fun temp10509_179 () (_ BitVec 64))
(declare-fun temp10509_180 () (_ BitVec 64))
(declare-fun temp10509_181 () (_ BitVec 64))
(declare-fun temp10509_182 () (_ BitVec 64))
(declare-fun temp10509_183 () (_ BitVec 64))
(declare-fun temp10509_184 () (_ BitVec 64))
(declare-fun temp10509_185 () (_ BitVec 64))
(declare-fun temp10509_186 () (_ BitVec 64))
(declare-fun temp10509_187 () (_ BitVec 64))
(declare-fun temp10509_188 () (_ BitVec 64))
(declare-fun temp10509_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10509_190 () (_ BitVec 64))
(declare-fun temp10509_192 () (_ BitVec 64))
(declare-fun temp10509_193 () (_ BitVec 64))
(declare-fun temp10509_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10509_194 () (_ BitVec 64))
(declare-fun temp10509_195 () (_ BitVec 64))
(declare-fun temp10509_197 () (_ BitVec 64))
(declare-fun temp10509_198 () (_ BitVec 64))
(declare-fun temp10509_196 () (_ BitVec 64))
(declare-fun temp10509_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10509_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10509_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10509_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10509_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10509_204 () (_ BitVec 64))
(declare-fun temp10509_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10509_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10509_207 () (_ BitVec 64))
(declare-fun temp10509_208 () (_ BitVec 64))
(declare-fun temp10509_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10509_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10509_211 () (_ BitVec 64))
(declare-fun temp10509_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10509_213 () (_ BitVec 64))
(declare-fun temp10509_214 () (_ BitVec 64))
(declare-fun temp10509_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10509_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10509_217 () (_ BitVec 64))
(declare-fun temp10509_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10509_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10509_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4469136 () (_ BitVec 64))
(declare-fun var4731280 () (_ BitVec 64))
(declare-fun temp10509_221 () (_ BitVec 64))
(declare-fun var212414 () (_ BitVec 64))
(declare-fun temp10509_222 () (_ BitVec 64))
(declare-fun temp10509_223 () (_ BitVec 64))
(assert (= temp10509_1 #x0000000000000001))
(assert (= var77203 temp10509_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10509_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10509_2)))
(assert (= temp10509_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10509_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10509_4 #x0000000000000000))
(assert (= var210941 temp10509_4))
(assert (= temp10509_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10509_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10509_6 #x0000000000000000))
(assert (= var210986 temp10509_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10509_7 #x0000000000000000))
(assert (= temp10509_8 temp10509_7))
(assert (= temp10509_9 (select ARGNAME_padding_NAMEEND_VAL temp10509_8)))
(assert (= temp10509_10 #x0000000000000001))
(assert (= temp10509_11 temp10509_10))
(assert (= temp10509_12 (select ARGNAME_padding_NAMEEND_VAL temp10509_11)))
(assert (= temp10509_13 #x0000000000000002))
(assert (= temp10509_14 temp10509_13))
(assert (= temp10509_15 (select ARGNAME_padding_NAMEEND_VAL temp10509_14)))
(assert (= temp10509_16 #x0000000000000003))
(assert (= temp10509_17 temp10509_16))
(assert (= temp10509_18 (select ARGNAME_padding_NAMEEND_VAL temp10509_17)))
(assert (= temp10509_19 #x0000000000000004))
(assert (= temp10509_20 temp10509_19))
(assert (= temp10509_21 (select ARGNAME_padding_NAMEEND_VAL temp10509_20)))
(assert (= temp10509_22 #x0000000000000005))
(assert (= temp10509_23 temp10509_22))
(assert (= temp10509_24 (select ARGNAME_padding_NAMEEND_VAL temp10509_23)))
(assert (= temp10509_25 #x0000000000000000))
(assert (= temp10509_26 #x0000000000000000))
(assert (= temp10509_27 temp10509_26))
(assert (= temp10509_28 (select ARGNAME_padding_NAMEEND_VAL temp10509_27)))
(assert (= temp10509_29 #x0000000000000000))
(assert (= temp10509_30 #x0000000000000001))
(assert (= temp10509_31 temp10509_30))
(assert (= temp10509_32 (select ARGNAME_padding_NAMEEND_VAL temp10509_31)))
(assert (= temp10509_33 #x0000000000000000))
(assert (= temp10509_34 #x0000000000000002))
(assert (= temp10509_35 temp10509_34))
(assert (= temp10509_36 (select ARGNAME_padding_NAMEEND_VAL temp10509_35)))
(assert (= temp10509_37 #x0000000000000000))
(assert (= temp10509_38 #x0000000000000003))
(assert (= temp10509_39 temp10509_38))
(assert (= temp10509_40 (select ARGNAME_padding_NAMEEND_VAL temp10509_39)))
(assert (= temp10509_41 #x0000000000000000))
(assert (= temp10509_42 #x0000000000000004))
(assert (= temp10509_43 temp10509_42))
(assert (= temp10509_44 (select ARGNAME_padding_NAMEEND_VAL temp10509_43)))
(assert (= temp10509_45 #x0000000000000000))
(assert (= temp10509_46 #x0000000000000005))
(assert (= temp10509_47 temp10509_46))
(assert (= temp10509_48 (select ARGNAME_padding_NAMEEND_VAL temp10509_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10509_28 temp10509_25)
             (bvslt temp10509_32 temp10509_29)
             (bvslt temp10509_36 temp10509_33)
             (bvslt temp10509_40 temp10509_37)
             (bvslt temp10509_44 temp10509_41)
             (bvslt temp10509_48 temp10509_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10509_49 #x0000000000000000))
(assert (= var1191714 temp10509_49))
(assert (= temp10509_50 #x0000000000000000))
(assert (= temp10509_51 temp10509_50))
(assert (= temp10509_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10509_51)))
(assert (= temp10509_53 #x0000000000000001))
(assert (= temp10509_54 temp10509_53))
(assert (= temp10509_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10509_54)))
(assert (= temp10509_56 #x0000000000000002))
(assert (= temp10509_57 temp10509_56))
(assert (= temp10509_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10509_57)))
(assert (= temp10509_59 #x0000000000000003))
(assert (= temp10509_60 temp10509_59))
(assert (= temp10509_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10509_60)))
(assert (= temp10509_62 #x0000000000000004))
(assert (= temp10509_63 temp10509_62))
(assert (= temp10509_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10509_63)))
(assert (= temp10509_65 #x0000000000000005))
(assert (= temp10509_66 temp10509_65))
(assert (= temp10509_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10509_66)))
(assert (= temp10509_68 #x0000000000000000))
(assert (= temp10509_69 #x0000000000000000))
(assert (= temp10509_70 temp10509_69))
(assert (= temp10509_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10509_70)))
(assert (= temp10509_72 #x0000000000000000))
(assert (= temp10509_73 #x0000000000000001))
(assert (= temp10509_74 temp10509_73))
(assert (= temp10509_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10509_74)))
(assert (= temp10509_76 #x0000000000000000))
(assert (= temp10509_77 #x0000000000000002))
(assert (= temp10509_78 temp10509_77))
(assert (= temp10509_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10509_78)))
(assert (= temp10509_80 #x0000000000000000))
(assert (= temp10509_81 #x0000000000000003))
(assert (= temp10509_82 temp10509_81))
(assert (= temp10509_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10509_82)))
(assert (= temp10509_84 #x0000000000000000))
(assert (= temp10509_85 #x0000000000000004))
(assert (= temp10509_86 temp10509_85))
(assert (= temp10509_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10509_86)))
(assert (= temp10509_88 #x0000000000000000))
(assert (= temp10509_89 #x0000000000000005))
(assert (= temp10509_90 temp10509_89))
(assert (= temp10509_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10509_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10509_71 temp10509_68)
             (bvslt temp10509_75 temp10509_72)
             (bvslt temp10509_79 temp10509_76)
             (bvslt temp10509_83 temp10509_80)
             (bvslt temp10509_87 temp10509_84)
             (bvslt temp10509_91 temp10509_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10509_92 #x0000000000000000))
(assert (= var1191725 temp10509_92))
(assert (= temp10509_93 #x0000000000000000))
(assert (= temp10509_94 temp10509_93))
(assert (= temp10509_95 (select ARGNAME_stride_NAMEEND_VAL temp10509_94)))
(assert (= temp10509_96 #x0000000000000001))
(assert (= temp10509_97 temp10509_96))
(assert (= temp10509_98 (select ARGNAME_stride_NAMEEND_VAL temp10509_97)))
(assert (= temp10509_99 #x0000000000000002))
(assert (= temp10509_100 temp10509_99))
(assert (= temp10509_101 (select ARGNAME_stride_NAMEEND_VAL temp10509_100)))
(assert (= temp10509_102 #x0000000000000003))
(assert (= temp10509_103 temp10509_102))
(assert (= temp10509_104 (select ARGNAME_stride_NAMEEND_VAL temp10509_103)))
(assert (= temp10509_105 #x0000000000000004))
(assert (= temp10509_106 temp10509_105))
(assert (= temp10509_107 (select ARGNAME_stride_NAMEEND_VAL temp10509_106)))
(assert (= temp10509_108 #x0000000000000005))
(assert (= temp10509_109 temp10509_108))
(assert (= temp10509_110 (select ARGNAME_stride_NAMEEND_VAL temp10509_109)))
(assert (= temp10509_111 #x0000000000000000))
(assert (= temp10509_112 #x0000000000000000))
(assert (= temp10509_113 temp10509_112))
(assert (= temp10509_114 (select ARGNAME_stride_NAMEEND_VAL temp10509_113)))
(assert (= temp10509_115 #x0000000000000000))
(assert (= temp10509_116 #x0000000000000001))
(assert (= temp10509_117 temp10509_116))
(assert (= temp10509_118 (select ARGNAME_stride_NAMEEND_VAL temp10509_117)))
(assert (= temp10509_119 #x0000000000000000))
(assert (= temp10509_120 #x0000000000000002))
(assert (= temp10509_121 temp10509_120))
(assert (= temp10509_122 (select ARGNAME_stride_NAMEEND_VAL temp10509_121)))
(assert (= temp10509_123 #x0000000000000000))
(assert (= temp10509_124 #x0000000000000003))
(assert (= temp10509_125 temp10509_124))
(assert (= temp10509_126 (select ARGNAME_stride_NAMEEND_VAL temp10509_125)))
(assert (= temp10509_127 #x0000000000000000))
(assert (= temp10509_128 #x0000000000000004))
(assert (= temp10509_129 temp10509_128))
(assert (= temp10509_130 (select ARGNAME_stride_NAMEEND_VAL temp10509_129)))
(assert (= temp10509_131 #x0000000000000000))
(assert (= temp10509_132 #x0000000000000005))
(assert (= temp10509_133 temp10509_132))
(assert (= temp10509_134 (select ARGNAME_stride_NAMEEND_VAL temp10509_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10509_114 temp10509_111)
             (bvsle temp10509_118 temp10509_115)
             (bvsle temp10509_122 temp10509_119)
             (bvsle temp10509_126 temp10509_123)
             (bvsle temp10509_130 temp10509_127)
             (bvsle temp10509_134 temp10509_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10509_135 #x0000000000000000))
(assert (= var1191735 temp10509_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10509_136 #x0000000000000001))
(assert (= var1191747 temp10509_136))
(assert (= temp10509_137 #x0000000000000000))
(assert (= var1179826 temp10509_137))
(assert (= temp10509_138 #x0000000000000000))
(assert (= temp10509_139 temp10509_138))
(assert (= temp10509_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10509_139)))
(assert (= temp10509_141 #x0000000000000001))
(assert (= temp10509_142 temp10509_141))
(assert (= temp10509_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10509_142)))
(assert (= temp10509_144 #x0000000000000002))
(assert (= temp10509_145 temp10509_144))
(assert (= temp10509_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10509_145)))
(assert (= temp10509_147 #x0000000000000003))
(assert (= temp10509_148 temp10509_147))
(assert (= temp10509_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10509_148)))
(assert (= temp10509_150 #x0000000000000004))
(assert (= temp10509_151 temp10509_150))
(assert (= temp10509_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10509_151)))
(assert (= temp10509_153 #x0000000000000005))
(assert (= temp10509_154 temp10509_153))
(assert (= temp10509_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10509_154)))
(assert (= temp10509_157 var1179826))
(assert (= temp10509_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10509_157)))
(assert (= temp10509_156 temp10509_158))
(assert (= var1191780
   (ite (bvslt temp10509_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10509_159 #x0000000000000000))
(assert (= var1191780 temp10509_159))
(assert (= temp10509_160 #x0000000000000000))
(assert (= var1179826 temp10509_160))
(assert (= temp10509_162 var1179826))
(assert (= temp10509_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10509_162)))
(assert (= temp10509_161 temp10509_163))
(assert (= var1191802 (bvsmod temp10509_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10509_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10509_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10509_165 #x0000000000000001))
(assert (= var1191803 temp10509_165))
(assert (= temp10509_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10509_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10509_167 #x0000000000000001))
(assert (= var1191823 temp10509_167))
(assert (= temp10509_168 #x0000000000000001))
(assert (= var1180714 temp10509_168))
(assert (= temp10509_169 #x0000000000000000))
(assert (= temp10509_170 temp10509_169))
(assert (= temp10509_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10509_170)))
(assert (= temp10509_172 #x0000000000000001))
(assert (= temp10509_173 temp10509_172))
(assert (= temp10509_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10509_173)))
(assert (= temp10509_175 #x0000000000000002))
(assert (= temp10509_176 temp10509_175))
(assert (= temp10509_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10509_176)))
(assert (= temp10509_178 #x0000000000000003))
(assert (= temp10509_179 temp10509_178))
(assert (= temp10509_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10509_179)))
(assert (= temp10509_181 #x0000000000000004))
(assert (= temp10509_182 temp10509_181))
(assert (= temp10509_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10509_182)))
(assert (= temp10509_184 #x0000000000000005))
(assert (= temp10509_185 temp10509_184))
(assert (= temp10509_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10509_185)))
(assert (= temp10509_187 #x0000000000000000))
(assert (= temp10509_188
   (ite (bvslt var1180714 temp10509_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10509_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10509_188)))
(assert (= var1191831 temp10509_189))
(assert (bvslt (ite (bvslt var1180714 temp10509_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10509_190 #x0000000000000001))
(assert (= var1180714 temp10509_190))
(assert (= temp10509_192 var1180714))
(assert (= temp10509_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10509_192)))
(assert (= temp10509_191 temp10509_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10509_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10509_194 #x0000000000000001))
(assert (= var1191836 temp10509_194))
(assert (= temp10509_195 #x0000000000000000))
(assert (= var1179826 temp10509_195))
(assert (= temp10509_197 var1179826))
(assert (= temp10509_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10509_197)))
(assert (= temp10509_196 temp10509_198))
(assert (= temp10509_199 #x0000000000000002))
(assert (= var1586025 temp10509_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10509_200 #x0000000000000001))
(assert (= var1191993 temp10509_200))
(assert (= temp10509_201 #x0000000000000001))
(assert (= var2700303 temp10509_201))
(assert (= temp10509_202 #x0000000000000001))
(assert (= var2962447 temp10509_202))
(assert (= temp10509_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10509_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10509_204 #x0000000000000001))
(assert (= var211058 temp10509_204))
(assert (= temp10509_205 #x0000000000000001))
(assert (= var211188 temp10509_205))
(assert (= var3879401 var211188))
(assert (= temp10509_206 #x0000000000000000))
(assert (= var3866802 temp10509_206))
(assert (= temp10509_207 #x0000000000000000))
(assert (= temp10509_208
   (ite (bvslt var3866802 temp10509_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10509_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10509_208)))
(assert (= var3879420 temp10509_209))
(assert (bvslt (ite (bvslt var3866802 temp10509_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10509_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10509_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10509_211 #x0000000000000000))
(assert (= var3879421 temp10509_211))
(assert (= temp10509_212 #x0000000000000001))
(assert (= var3867690 temp10509_212))
(assert (= temp10509_213 #x0000000000000000))
(assert (= temp10509_214
   (ite (bvslt var3867690 temp10509_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10509_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10509_214)))
(assert (= var3879423 temp10509_215))
(assert (bvslt (ite (bvslt var3867690 temp10509_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10509_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10509_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10509_217 #x0000000000000001))
(assert (= var3879424 temp10509_217))
(assert (= temp10509_218 #x0000000000000000))
(assert (= var4079423 temp10509_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10509_219 #x0000000000000002))
(assert (= var4208259 temp10509_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10509_220 #x0000000000000000))
(assert (= var4273820 temp10509_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4469136 var211201))
(assert (= var4731280 var211201))
(assert (= temp10509_221 #x0000000000000001))
(assert (= var212414
   (ite (= ARGNAME_groups_NAMEEND temp10509_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10509_222 #x0000000000000000))
(assert (= var212414 temp10509_222))
(assert (= temp10509_223 #x0000000000000001))
(assert (= var211058 temp10509_223))
(model-add temp10509_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10509_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10509_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10509_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





