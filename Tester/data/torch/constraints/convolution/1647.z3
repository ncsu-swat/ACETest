(declare-fun temp10990_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10990_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10990_3 () (_ BitVec 64))
(declare-fun temp10990_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10990_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10990_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10990_7 () (_ BitVec 64))
(declare-fun temp10990_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10990_9 () (_ BitVec 64))
(declare-fun temp10990_10 () (_ BitVec 64))
(declare-fun temp10990_11 () (_ BitVec 64))
(declare-fun temp10990_12 () (_ BitVec 64))
(declare-fun temp10990_13 () (_ BitVec 64))
(declare-fun temp10990_14 () (_ BitVec 64))
(declare-fun temp10990_15 () (_ BitVec 64))
(declare-fun temp10990_16 () (_ BitVec 64))
(declare-fun temp10990_17 () (_ BitVec 64))
(declare-fun temp10990_18 () (_ BitVec 64))
(declare-fun temp10990_19 () (_ BitVec 64))
(declare-fun temp10990_20 () (_ BitVec 64))
(declare-fun temp10990_21 () (_ BitVec 64))
(declare-fun temp10990_22 () (_ BitVec 64))
(declare-fun temp10990_23 () (_ BitVec 64))
(declare-fun temp10990_24 () (_ BitVec 64))
(declare-fun temp10990_25 () (_ BitVec 64))
(declare-fun temp10990_26 () (_ BitVec 64))
(declare-fun temp10990_27 () (_ BitVec 64))
(declare-fun temp10990_28 () (_ BitVec 64))
(declare-fun temp10990_29 () (_ BitVec 64))
(declare-fun temp10990_30 () (_ BitVec 64))
(declare-fun temp10990_31 () (_ BitVec 64))
(declare-fun temp10990_32 () (_ BitVec 64))
(declare-fun temp10990_33 () (_ BitVec 64))
(declare-fun temp10990_34 () (_ BitVec 64))
(declare-fun temp10990_35 () (_ BitVec 64))
(declare-fun temp10990_36 () (_ BitVec 64))
(declare-fun temp10990_37 () (_ BitVec 64))
(declare-fun temp10990_38 () (_ BitVec 64))
(declare-fun temp10990_39 () (_ BitVec 64))
(declare-fun temp10990_40 () (_ BitVec 64))
(declare-fun temp10990_41 () (_ BitVec 64))
(declare-fun temp10990_42 () (_ BitVec 64))
(declare-fun temp10990_43 () (_ BitVec 64))
(declare-fun temp10990_44 () (_ BitVec 64))
(declare-fun temp10990_45 () (_ BitVec 64))
(declare-fun temp10990_46 () (_ BitVec 64))
(declare-fun temp10990_47 () (_ BitVec 64))
(declare-fun temp10990_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10990_49 () (_ BitVec 64))
(declare-fun temp10990_50 () (_ BitVec 64))
(declare-fun temp10990_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10990_52 () (_ BitVec 64))
(declare-fun temp10990_53 () (_ BitVec 64))
(declare-fun temp10990_54 () (_ BitVec 64))
(declare-fun temp10990_55 () (_ BitVec 64))
(declare-fun temp10990_56 () (_ BitVec 64))
(declare-fun temp10990_57 () (_ BitVec 64))
(declare-fun temp10990_58 () (_ BitVec 64))
(declare-fun temp10990_59 () (_ BitVec 64))
(declare-fun temp10990_60 () (_ BitVec 64))
(declare-fun temp10990_61 () (_ BitVec 64))
(declare-fun temp10990_62 () (_ BitVec 64))
(declare-fun temp10990_63 () (_ BitVec 64))
(declare-fun temp10990_64 () (_ BitVec 64))
(declare-fun temp10990_65 () (_ BitVec 64))
(declare-fun temp10990_66 () (_ BitVec 64))
(declare-fun temp10990_67 () (_ BitVec 64))
(declare-fun temp10990_68 () (_ BitVec 64))
(declare-fun temp10990_69 () (_ BitVec 64))
(declare-fun temp10990_70 () (_ BitVec 64))
(declare-fun temp10990_71 () (_ BitVec 64))
(declare-fun temp10990_72 () (_ BitVec 64))
(declare-fun temp10990_73 () (_ BitVec 64))
(declare-fun temp10990_74 () (_ BitVec 64))
(declare-fun temp10990_75 () (_ BitVec 64))
(declare-fun temp10990_76 () (_ BitVec 64))
(declare-fun temp10990_77 () (_ BitVec 64))
(declare-fun temp10990_78 () (_ BitVec 64))
(declare-fun temp10990_79 () (_ BitVec 64))
(declare-fun temp10990_80 () (_ BitVec 64))
(declare-fun temp10990_81 () (_ BitVec 64))
(declare-fun temp10990_82 () (_ BitVec 64))
(declare-fun temp10990_83 () (_ BitVec 64))
(declare-fun temp10990_84 () (_ BitVec 64))
(declare-fun temp10990_85 () (_ BitVec 64))
(declare-fun temp10990_86 () (_ BitVec 64))
(declare-fun temp10990_87 () (_ BitVec 64))
(declare-fun temp10990_88 () (_ BitVec 64))
(declare-fun temp10990_89 () (_ BitVec 64))
(declare-fun temp10990_90 () (_ BitVec 64))
(declare-fun temp10990_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10990_92 () (_ BitVec 64))
(declare-fun temp10990_93 () (_ BitVec 64))
(declare-fun temp10990_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10990_95 () (_ BitVec 64))
(declare-fun temp10990_96 () (_ BitVec 64))
(declare-fun temp10990_97 () (_ BitVec 64))
(declare-fun temp10990_98 () (_ BitVec 64))
(declare-fun temp10990_99 () (_ BitVec 64))
(declare-fun temp10990_100 () (_ BitVec 64))
(declare-fun temp10990_101 () (_ BitVec 64))
(declare-fun temp10990_102 () (_ BitVec 64))
(declare-fun temp10990_103 () (_ BitVec 64))
(declare-fun temp10990_104 () (_ BitVec 64))
(declare-fun temp10990_105 () (_ BitVec 64))
(declare-fun temp10990_106 () (_ BitVec 64))
(declare-fun temp10990_107 () (_ BitVec 64))
(declare-fun temp10990_108 () (_ BitVec 64))
(declare-fun temp10990_109 () (_ BitVec 64))
(declare-fun temp10990_110 () (_ BitVec 64))
(declare-fun temp10990_111 () (_ BitVec 64))
(declare-fun temp10990_112 () (_ BitVec 64))
(declare-fun temp10990_113 () (_ BitVec 64))
(declare-fun temp10990_114 () (_ BitVec 64))
(declare-fun temp10990_115 () (_ BitVec 64))
(declare-fun temp10990_116 () (_ BitVec 64))
(declare-fun temp10990_117 () (_ BitVec 64))
(declare-fun temp10990_118 () (_ BitVec 64))
(declare-fun temp10990_119 () (_ BitVec 64))
(declare-fun temp10990_120 () (_ BitVec 64))
(declare-fun temp10990_121 () (_ BitVec 64))
(declare-fun temp10990_122 () (_ BitVec 64))
(declare-fun temp10990_123 () (_ BitVec 64))
(declare-fun temp10990_124 () (_ BitVec 64))
(declare-fun temp10990_125 () (_ BitVec 64))
(declare-fun temp10990_126 () (_ BitVec 64))
(declare-fun temp10990_127 () (_ BitVec 64))
(declare-fun temp10990_128 () (_ BitVec 64))
(declare-fun temp10990_129 () (_ BitVec 64))
(declare-fun temp10990_130 () (_ BitVec 64))
(declare-fun temp10990_131 () (_ BitVec 64))
(declare-fun temp10990_132 () (_ BitVec 64))
(declare-fun temp10990_133 () (_ BitVec 64))
(declare-fun temp10990_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10990_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10990_136 () (_ BitVec 64))
(declare-fun temp10990_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10990_138 () (_ BitVec 64))
(declare-fun temp10990_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10990_140 () (_ BitVec 64))
(declare-fun temp10990_141 () (_ BitVec 64))
(declare-fun temp10990_142 () (_ BitVec 64))
(declare-fun temp10990_143 () (_ BitVec 64))
(declare-fun temp10990_144 () (_ BitVec 64))
(declare-fun temp10990_145 () (_ BitVec 64))
(declare-fun temp10990_146 () (_ BitVec 64))
(declare-fun temp10990_147 () (_ BitVec 64))
(declare-fun temp10990_148 () (_ BitVec 64))
(declare-fun temp10990_149 () (_ BitVec 64))
(declare-fun temp10990_150 () (_ BitVec 64))
(declare-fun temp10990_151 () (_ BitVec 64))
(declare-fun temp10990_152 () (_ BitVec 64))
(declare-fun temp10990_153 () (_ BitVec 64))
(declare-fun temp10990_154 () (_ BitVec 64))
(declare-fun temp10990_155 () (_ BitVec 64))
(declare-fun temp10990_157 () (_ BitVec 64))
(declare-fun temp10990_158 () (_ BitVec 64))
(declare-fun temp10990_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10990_159 () (_ BitVec 64))
(declare-fun temp10990_160 () (_ BitVec 64))
(declare-fun temp10990_162 () (_ BitVec 64))
(declare-fun temp10990_163 () (_ BitVec 64))
(declare-fun temp10990_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10990_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10990_165 () (_ BitVec 64))
(declare-fun temp10990_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10990_167 () (_ BitVec 64))
(declare-fun temp10990_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10990_169 () (_ BitVec 64))
(declare-fun temp10990_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10990_171 () (_ BitVec 64))
(declare-fun temp10990_172 () (_ BitVec 64))
(declare-fun temp10990_173 () (_ BitVec 64))
(declare-fun temp10990_174 () (_ BitVec 64))
(declare-fun temp10990_175 () (_ BitVec 64))
(declare-fun temp10990_176 () (_ BitVec 64))
(declare-fun temp10990_177 () (_ BitVec 64))
(declare-fun temp10990_178 () (_ BitVec 64))
(declare-fun temp10990_179 () (_ BitVec 64))
(declare-fun temp10990_180 () (_ BitVec 64))
(declare-fun temp10990_181 () (_ BitVec 64))
(declare-fun temp10990_182 () (_ BitVec 64))
(declare-fun temp10990_183 () (_ BitVec 64))
(declare-fun temp10990_184 () (_ BitVec 64))
(declare-fun temp10990_185 () (_ BitVec 64))
(declare-fun temp10990_186 () (_ BitVec 64))
(declare-fun temp10990_187 () (_ BitVec 64))
(declare-fun temp10990_188 () (_ BitVec 64))
(declare-fun temp10990_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10990_190 () (_ BitVec 64))
(declare-fun temp10990_192 () (_ BitVec 64))
(declare-fun temp10990_193 () (_ BitVec 64))
(declare-fun temp10990_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10990_194 () (_ BitVec 64))
(declare-fun temp10990_195 () (_ BitVec 64))
(declare-fun temp10990_197 () (_ BitVec 64))
(declare-fun temp10990_198 () (_ BitVec 64))
(declare-fun temp10990_196 () (_ BitVec 64))
(declare-fun temp10990_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10990_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10990_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10990_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10990_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10990_204 () (_ BitVec 64))
(declare-fun temp10990_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10990_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10990_207 () (_ BitVec 64))
(declare-fun temp10990_208 () (_ BitVec 64))
(declare-fun temp10990_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10990_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10990_211 () (_ BitVec 64))
(declare-fun temp10990_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10990_213 () (_ BitVec 64))
(declare-fun temp10990_214 () (_ BitVec 64))
(declare-fun temp10990_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10990_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10990_217 () (_ BitVec 64))
(declare-fun temp10990_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10990_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10990_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp10990_221 () (_ BitVec 64))
(assert (= temp10990_1 #x0000000000000001))
(assert (= var77203 temp10990_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10990_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10990_2)))
(assert (= temp10990_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10990_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10990_4 #x0000000000000000))
(assert (= var210941 temp10990_4))
(assert (= temp10990_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10990_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10990_6 #x0000000000000000))
(assert (= var210986 temp10990_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10990_7 #x0000000000000000))
(assert (= temp10990_8 temp10990_7))
(assert (= temp10990_9 (select ARGNAME_padding_NAMEEND_VAL temp10990_8)))
(assert (= temp10990_10 #x0000000000000001))
(assert (= temp10990_11 temp10990_10))
(assert (= temp10990_12 (select ARGNAME_padding_NAMEEND_VAL temp10990_11)))
(assert (= temp10990_13 #x0000000000000002))
(assert (= temp10990_14 temp10990_13))
(assert (= temp10990_15 (select ARGNAME_padding_NAMEEND_VAL temp10990_14)))
(assert (= temp10990_16 #x0000000000000003))
(assert (= temp10990_17 temp10990_16))
(assert (= temp10990_18 (select ARGNAME_padding_NAMEEND_VAL temp10990_17)))
(assert (= temp10990_19 #x0000000000000004))
(assert (= temp10990_20 temp10990_19))
(assert (= temp10990_21 (select ARGNAME_padding_NAMEEND_VAL temp10990_20)))
(assert (= temp10990_22 #x0000000000000005))
(assert (= temp10990_23 temp10990_22))
(assert (= temp10990_24 (select ARGNAME_padding_NAMEEND_VAL temp10990_23)))
(assert (= temp10990_25 #x0000000000000000))
(assert (= temp10990_26 #x0000000000000000))
(assert (= temp10990_27 temp10990_26))
(assert (= temp10990_28 (select ARGNAME_padding_NAMEEND_VAL temp10990_27)))
(assert (= temp10990_29 #x0000000000000000))
(assert (= temp10990_30 #x0000000000000001))
(assert (= temp10990_31 temp10990_30))
(assert (= temp10990_32 (select ARGNAME_padding_NAMEEND_VAL temp10990_31)))
(assert (= temp10990_33 #x0000000000000000))
(assert (= temp10990_34 #x0000000000000002))
(assert (= temp10990_35 temp10990_34))
(assert (= temp10990_36 (select ARGNAME_padding_NAMEEND_VAL temp10990_35)))
(assert (= temp10990_37 #x0000000000000000))
(assert (= temp10990_38 #x0000000000000003))
(assert (= temp10990_39 temp10990_38))
(assert (= temp10990_40 (select ARGNAME_padding_NAMEEND_VAL temp10990_39)))
(assert (= temp10990_41 #x0000000000000000))
(assert (= temp10990_42 #x0000000000000004))
(assert (= temp10990_43 temp10990_42))
(assert (= temp10990_44 (select ARGNAME_padding_NAMEEND_VAL temp10990_43)))
(assert (= temp10990_45 #x0000000000000000))
(assert (= temp10990_46 #x0000000000000005))
(assert (= temp10990_47 temp10990_46))
(assert (= temp10990_48 (select ARGNAME_padding_NAMEEND_VAL temp10990_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10990_28 temp10990_25)
             (bvslt temp10990_32 temp10990_29)
             (bvslt temp10990_36 temp10990_33)
             (bvslt temp10990_40 temp10990_37)
             (bvslt temp10990_44 temp10990_41)
             (bvslt temp10990_48 temp10990_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10990_49 #x0000000000000000))
(assert (= var1191714 temp10990_49))
(assert (= temp10990_50 #x0000000000000000))
(assert (= temp10990_51 temp10990_50))
(assert (= temp10990_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10990_51)))
(assert (= temp10990_53 #x0000000000000001))
(assert (= temp10990_54 temp10990_53))
(assert (= temp10990_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10990_54)))
(assert (= temp10990_56 #x0000000000000002))
(assert (= temp10990_57 temp10990_56))
(assert (= temp10990_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10990_57)))
(assert (= temp10990_59 #x0000000000000003))
(assert (= temp10990_60 temp10990_59))
(assert (= temp10990_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10990_60)))
(assert (= temp10990_62 #x0000000000000004))
(assert (= temp10990_63 temp10990_62))
(assert (= temp10990_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10990_63)))
(assert (= temp10990_65 #x0000000000000005))
(assert (= temp10990_66 temp10990_65))
(assert (= temp10990_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10990_66)))
(assert (= temp10990_68 #x0000000000000000))
(assert (= temp10990_69 #x0000000000000000))
(assert (= temp10990_70 temp10990_69))
(assert (= temp10990_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10990_70)))
(assert (= temp10990_72 #x0000000000000000))
(assert (= temp10990_73 #x0000000000000001))
(assert (= temp10990_74 temp10990_73))
(assert (= temp10990_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10990_74)))
(assert (= temp10990_76 #x0000000000000000))
(assert (= temp10990_77 #x0000000000000002))
(assert (= temp10990_78 temp10990_77))
(assert (= temp10990_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10990_78)))
(assert (= temp10990_80 #x0000000000000000))
(assert (= temp10990_81 #x0000000000000003))
(assert (= temp10990_82 temp10990_81))
(assert (= temp10990_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10990_82)))
(assert (= temp10990_84 #x0000000000000000))
(assert (= temp10990_85 #x0000000000000004))
(assert (= temp10990_86 temp10990_85))
(assert (= temp10990_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10990_86)))
(assert (= temp10990_88 #x0000000000000000))
(assert (= temp10990_89 #x0000000000000005))
(assert (= temp10990_90 temp10990_89))
(assert (= temp10990_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10990_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10990_71 temp10990_68)
             (bvslt temp10990_75 temp10990_72)
             (bvslt temp10990_79 temp10990_76)
             (bvslt temp10990_83 temp10990_80)
             (bvslt temp10990_87 temp10990_84)
             (bvslt temp10990_91 temp10990_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10990_92 #x0000000000000000))
(assert (= var1191725 temp10990_92))
(assert (= temp10990_93 #x0000000000000000))
(assert (= temp10990_94 temp10990_93))
(assert (= temp10990_95 (select ARGNAME_stride_NAMEEND_VAL temp10990_94)))
(assert (= temp10990_96 #x0000000000000001))
(assert (= temp10990_97 temp10990_96))
(assert (= temp10990_98 (select ARGNAME_stride_NAMEEND_VAL temp10990_97)))
(assert (= temp10990_99 #x0000000000000002))
(assert (= temp10990_100 temp10990_99))
(assert (= temp10990_101 (select ARGNAME_stride_NAMEEND_VAL temp10990_100)))
(assert (= temp10990_102 #x0000000000000003))
(assert (= temp10990_103 temp10990_102))
(assert (= temp10990_104 (select ARGNAME_stride_NAMEEND_VAL temp10990_103)))
(assert (= temp10990_105 #x0000000000000004))
(assert (= temp10990_106 temp10990_105))
(assert (= temp10990_107 (select ARGNAME_stride_NAMEEND_VAL temp10990_106)))
(assert (= temp10990_108 #x0000000000000005))
(assert (= temp10990_109 temp10990_108))
(assert (= temp10990_110 (select ARGNAME_stride_NAMEEND_VAL temp10990_109)))
(assert (= temp10990_111 #x0000000000000000))
(assert (= temp10990_112 #x0000000000000000))
(assert (= temp10990_113 temp10990_112))
(assert (= temp10990_114 (select ARGNAME_stride_NAMEEND_VAL temp10990_113)))
(assert (= temp10990_115 #x0000000000000000))
(assert (= temp10990_116 #x0000000000000001))
(assert (= temp10990_117 temp10990_116))
(assert (= temp10990_118 (select ARGNAME_stride_NAMEEND_VAL temp10990_117)))
(assert (= temp10990_119 #x0000000000000000))
(assert (= temp10990_120 #x0000000000000002))
(assert (= temp10990_121 temp10990_120))
(assert (= temp10990_122 (select ARGNAME_stride_NAMEEND_VAL temp10990_121)))
(assert (= temp10990_123 #x0000000000000000))
(assert (= temp10990_124 #x0000000000000003))
(assert (= temp10990_125 temp10990_124))
(assert (= temp10990_126 (select ARGNAME_stride_NAMEEND_VAL temp10990_125)))
(assert (= temp10990_127 #x0000000000000000))
(assert (= temp10990_128 #x0000000000000004))
(assert (= temp10990_129 temp10990_128))
(assert (= temp10990_130 (select ARGNAME_stride_NAMEEND_VAL temp10990_129)))
(assert (= temp10990_131 #x0000000000000000))
(assert (= temp10990_132 #x0000000000000005))
(assert (= temp10990_133 temp10990_132))
(assert (= temp10990_134 (select ARGNAME_stride_NAMEEND_VAL temp10990_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10990_114 temp10990_111)
             (bvsle temp10990_118 temp10990_115)
             (bvsle temp10990_122 temp10990_119)
             (bvsle temp10990_126 temp10990_123)
             (bvsle temp10990_130 temp10990_127)
             (bvsle temp10990_134 temp10990_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10990_135 #x0000000000000000))
(assert (= var1191735 temp10990_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10990_136 #x0000000000000001))
(assert (= var1191747 temp10990_136))
(assert (= temp10990_137 #x0000000000000000))
(assert (= var1179826 temp10990_137))
(assert (= temp10990_138 #x0000000000000000))
(assert (= temp10990_139 temp10990_138))
(assert (= temp10990_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10990_139)))
(assert (= temp10990_141 #x0000000000000001))
(assert (= temp10990_142 temp10990_141))
(assert (= temp10990_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10990_142)))
(assert (= temp10990_144 #x0000000000000002))
(assert (= temp10990_145 temp10990_144))
(assert (= temp10990_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10990_145)))
(assert (= temp10990_147 #x0000000000000003))
(assert (= temp10990_148 temp10990_147))
(assert (= temp10990_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10990_148)))
(assert (= temp10990_150 #x0000000000000004))
(assert (= temp10990_151 temp10990_150))
(assert (= temp10990_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10990_151)))
(assert (= temp10990_153 #x0000000000000005))
(assert (= temp10990_154 temp10990_153))
(assert (= temp10990_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10990_154)))
(assert (= temp10990_157 var1179826))
(assert (= temp10990_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10990_157)))
(assert (= temp10990_156 temp10990_158))
(assert (= var1191780
   (ite (bvslt temp10990_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10990_159 #x0000000000000000))
(assert (= var1191780 temp10990_159))
(assert (= temp10990_160 #x0000000000000000))
(assert (= var1179826 temp10990_160))
(assert (= temp10990_162 var1179826))
(assert (= temp10990_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10990_162)))
(assert (= temp10990_161 temp10990_163))
(assert (= var1191802 (bvsmod temp10990_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10990_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10990_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10990_165 #x0000000000000001))
(assert (= var1191803 temp10990_165))
(assert (= temp10990_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10990_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10990_167 #x0000000000000001))
(assert (= var1191823 temp10990_167))
(assert (= temp10990_168 #x0000000000000001))
(assert (= var1180714 temp10990_168))
(assert (= temp10990_169 #x0000000000000000))
(assert (= temp10990_170 temp10990_169))
(assert (= temp10990_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10990_170)))
(assert (= temp10990_172 #x0000000000000001))
(assert (= temp10990_173 temp10990_172))
(assert (= temp10990_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10990_173)))
(assert (= temp10990_175 #x0000000000000002))
(assert (= temp10990_176 temp10990_175))
(assert (= temp10990_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10990_176)))
(assert (= temp10990_178 #x0000000000000003))
(assert (= temp10990_179 temp10990_178))
(assert (= temp10990_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10990_179)))
(assert (= temp10990_181 #x0000000000000004))
(assert (= temp10990_182 temp10990_181))
(assert (= temp10990_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10990_182)))
(assert (= temp10990_184 #x0000000000000005))
(assert (= temp10990_185 temp10990_184))
(assert (= temp10990_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10990_185)))
(assert (= temp10990_187 #x0000000000000000))
(assert (= temp10990_188
   (ite (bvslt var1180714 temp10990_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10990_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10990_188)))
(assert (= var1191831 temp10990_189))
(assert (bvslt (ite (bvslt var1180714 temp10990_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10990_190 #x0000000000000001))
(assert (= var1180714 temp10990_190))
(assert (= temp10990_192 var1180714))
(assert (= temp10990_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10990_192)))
(assert (= temp10990_191 temp10990_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10990_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10990_194 #x0000000000000001))
(assert (= var1191836 temp10990_194))
(assert (= temp10990_195 #x0000000000000000))
(assert (= var1179826 temp10990_195))
(assert (= temp10990_197 var1179826))
(assert (= temp10990_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10990_197)))
(assert (= temp10990_196 temp10990_198))
(assert (= temp10990_199 #x0000000000000002))
(assert (= var1586025 temp10990_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10990_200 #x0000000000000001))
(assert (= var1191993 temp10990_200))
(assert (= temp10990_201 #x0000000000000001))
(assert (= var2700303 temp10990_201))
(assert (= temp10990_202 #x0000000000000001))
(assert (= var2962447 temp10990_202))
(assert (= temp10990_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10990_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10990_204 #x0000000000000001))
(assert (= var211058 temp10990_204))
(assert (= temp10990_205 #x0000000000000001))
(assert (= var211188 temp10990_205))
(assert (= var3879401 var211188))
(assert (= temp10990_206 #x0000000000000000))
(assert (= var3866802 temp10990_206))
(assert (= temp10990_207 #x0000000000000000))
(assert (= temp10990_208
   (ite (bvslt var3866802 temp10990_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10990_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10990_208)))
(assert (= var3879420 temp10990_209))
(assert (bvslt (ite (bvslt var3866802 temp10990_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10990_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10990_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10990_211 #x0000000000000000))
(assert (= var3879421 temp10990_211))
(assert (= temp10990_212 #x0000000000000001))
(assert (= var3867690 temp10990_212))
(assert (= temp10990_213 #x0000000000000000))
(assert (= temp10990_214
   (ite (bvslt var3867690 temp10990_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10990_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10990_214)))
(assert (= var3879423 temp10990_215))
(assert (bvslt (ite (bvslt var3867690 temp10990_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10990_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10990_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10990_217 #x0000000000000001))
(assert (= var3879424 temp10990_217))
(assert (= temp10990_218 #x0000000000000000))
(assert (= var4133117 temp10990_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10990_219 #x0000000000000002))
(assert (= var4339331 temp10990_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10990_220 #x0000000000000000))
(assert (= var4404892 temp10990_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp10990_221 #x0000000000000001))
(assert (= var211058 temp10990_221))
(model-add temp10990_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10990_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10990_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10990_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





