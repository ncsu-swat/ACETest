(declare-fun temp11062_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp11062_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp11062_3 () (_ BitVec 64))
(declare-fun temp11062_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp11062_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp11062_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp11062_7 () (_ BitVec 64))
(declare-fun temp11062_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11062_9 () (_ BitVec 64))
(declare-fun temp11062_10 () (_ BitVec 64))
(declare-fun temp11062_11 () (_ BitVec 64))
(declare-fun temp11062_12 () (_ BitVec 64))
(declare-fun temp11062_13 () (_ BitVec 64))
(declare-fun temp11062_14 () (_ BitVec 64))
(declare-fun temp11062_15 () (_ BitVec 64))
(declare-fun temp11062_16 () (_ BitVec 64))
(declare-fun temp11062_17 () (_ BitVec 64))
(declare-fun temp11062_18 () (_ BitVec 64))
(declare-fun temp11062_19 () (_ BitVec 64))
(declare-fun temp11062_20 () (_ BitVec 64))
(declare-fun temp11062_21 () (_ BitVec 64))
(declare-fun temp11062_22 () (_ BitVec 64))
(declare-fun temp11062_23 () (_ BitVec 64))
(declare-fun temp11062_24 () (_ BitVec 64))
(declare-fun temp11062_25 () (_ BitVec 64))
(declare-fun temp11062_26 () (_ BitVec 64))
(declare-fun temp11062_27 () (_ BitVec 64))
(declare-fun temp11062_28 () (_ BitVec 64))
(declare-fun temp11062_29 () (_ BitVec 64))
(declare-fun temp11062_30 () (_ BitVec 64))
(declare-fun temp11062_31 () (_ BitVec 64))
(declare-fun temp11062_32 () (_ BitVec 64))
(declare-fun temp11062_33 () (_ BitVec 64))
(declare-fun temp11062_34 () (_ BitVec 64))
(declare-fun temp11062_35 () (_ BitVec 64))
(declare-fun temp11062_36 () (_ BitVec 64))
(declare-fun temp11062_37 () (_ BitVec 64))
(declare-fun temp11062_38 () (_ BitVec 64))
(declare-fun temp11062_39 () (_ BitVec 64))
(declare-fun temp11062_40 () (_ BitVec 64))
(declare-fun temp11062_41 () (_ BitVec 64))
(declare-fun temp11062_42 () (_ BitVec 64))
(declare-fun temp11062_43 () (_ BitVec 64))
(declare-fun temp11062_44 () (_ BitVec 64))
(declare-fun temp11062_45 () (_ BitVec 64))
(declare-fun temp11062_46 () (_ BitVec 64))
(declare-fun temp11062_47 () (_ BitVec 64))
(declare-fun temp11062_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp11062_49 () (_ BitVec 64))
(declare-fun temp11062_50 () (_ BitVec 64))
(declare-fun temp11062_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11062_52 () (_ BitVec 64))
(declare-fun temp11062_53 () (_ BitVec 64))
(declare-fun temp11062_54 () (_ BitVec 64))
(declare-fun temp11062_55 () (_ BitVec 64))
(declare-fun temp11062_56 () (_ BitVec 64))
(declare-fun temp11062_57 () (_ BitVec 64))
(declare-fun temp11062_58 () (_ BitVec 64))
(declare-fun temp11062_59 () (_ BitVec 64))
(declare-fun temp11062_60 () (_ BitVec 64))
(declare-fun temp11062_61 () (_ BitVec 64))
(declare-fun temp11062_62 () (_ BitVec 64))
(declare-fun temp11062_63 () (_ BitVec 64))
(declare-fun temp11062_64 () (_ BitVec 64))
(declare-fun temp11062_65 () (_ BitVec 64))
(declare-fun temp11062_66 () (_ BitVec 64))
(declare-fun temp11062_67 () (_ BitVec 64))
(declare-fun temp11062_68 () (_ BitVec 64))
(declare-fun temp11062_69 () (_ BitVec 64))
(declare-fun temp11062_70 () (_ BitVec 64))
(declare-fun temp11062_71 () (_ BitVec 64))
(declare-fun temp11062_72 () (_ BitVec 64))
(declare-fun temp11062_73 () (_ BitVec 64))
(declare-fun temp11062_74 () (_ BitVec 64))
(declare-fun temp11062_75 () (_ BitVec 64))
(declare-fun temp11062_76 () (_ BitVec 64))
(declare-fun temp11062_77 () (_ BitVec 64))
(declare-fun temp11062_78 () (_ BitVec 64))
(declare-fun temp11062_79 () (_ BitVec 64))
(declare-fun temp11062_80 () (_ BitVec 64))
(declare-fun temp11062_81 () (_ BitVec 64))
(declare-fun temp11062_82 () (_ BitVec 64))
(declare-fun temp11062_83 () (_ BitVec 64))
(declare-fun temp11062_84 () (_ BitVec 64))
(declare-fun temp11062_85 () (_ BitVec 64))
(declare-fun temp11062_86 () (_ BitVec 64))
(declare-fun temp11062_87 () (_ BitVec 64))
(declare-fun temp11062_88 () (_ BitVec 64))
(declare-fun temp11062_89 () (_ BitVec 64))
(declare-fun temp11062_90 () (_ BitVec 64))
(declare-fun temp11062_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp11062_92 () (_ BitVec 64))
(declare-fun temp11062_93 () (_ BitVec 64))
(declare-fun temp11062_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11062_95 () (_ BitVec 64))
(declare-fun temp11062_96 () (_ BitVec 64))
(declare-fun temp11062_97 () (_ BitVec 64))
(declare-fun temp11062_98 () (_ BitVec 64))
(declare-fun temp11062_99 () (_ BitVec 64))
(declare-fun temp11062_100 () (_ BitVec 64))
(declare-fun temp11062_101 () (_ BitVec 64))
(declare-fun temp11062_102 () (_ BitVec 64))
(declare-fun temp11062_103 () (_ BitVec 64))
(declare-fun temp11062_104 () (_ BitVec 64))
(declare-fun temp11062_105 () (_ BitVec 64))
(declare-fun temp11062_106 () (_ BitVec 64))
(declare-fun temp11062_107 () (_ BitVec 64))
(declare-fun temp11062_108 () (_ BitVec 64))
(declare-fun temp11062_109 () (_ BitVec 64))
(declare-fun temp11062_110 () (_ BitVec 64))
(declare-fun temp11062_111 () (_ BitVec 64))
(declare-fun temp11062_112 () (_ BitVec 64))
(declare-fun temp11062_113 () (_ BitVec 64))
(declare-fun temp11062_114 () (_ BitVec 64))
(declare-fun temp11062_115 () (_ BitVec 64))
(declare-fun temp11062_116 () (_ BitVec 64))
(declare-fun temp11062_117 () (_ BitVec 64))
(declare-fun temp11062_118 () (_ BitVec 64))
(declare-fun temp11062_119 () (_ BitVec 64))
(declare-fun temp11062_120 () (_ BitVec 64))
(declare-fun temp11062_121 () (_ BitVec 64))
(declare-fun temp11062_122 () (_ BitVec 64))
(declare-fun temp11062_123 () (_ BitVec 64))
(declare-fun temp11062_124 () (_ BitVec 64))
(declare-fun temp11062_125 () (_ BitVec 64))
(declare-fun temp11062_126 () (_ BitVec 64))
(declare-fun temp11062_127 () (_ BitVec 64))
(declare-fun temp11062_128 () (_ BitVec 64))
(declare-fun temp11062_129 () (_ BitVec 64))
(declare-fun temp11062_130 () (_ BitVec 64))
(declare-fun temp11062_131 () (_ BitVec 64))
(declare-fun temp11062_132 () (_ BitVec 64))
(declare-fun temp11062_133 () (_ BitVec 64))
(declare-fun temp11062_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp11062_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp11062_136 () (_ BitVec 64))
(declare-fun temp11062_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp11062_138 () (_ BitVec 64))
(declare-fun temp11062_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11062_140 () (_ BitVec 64))
(declare-fun temp11062_141 () (_ BitVec 64))
(declare-fun temp11062_142 () (_ BitVec 64))
(declare-fun temp11062_143 () (_ BitVec 64))
(declare-fun temp11062_144 () (_ BitVec 64))
(declare-fun temp11062_145 () (_ BitVec 64))
(declare-fun temp11062_146 () (_ BitVec 64))
(declare-fun temp11062_147 () (_ BitVec 64))
(declare-fun temp11062_148 () (_ BitVec 64))
(declare-fun temp11062_149 () (_ BitVec 64))
(declare-fun temp11062_150 () (_ BitVec 64))
(declare-fun temp11062_151 () (_ BitVec 64))
(declare-fun temp11062_152 () (_ BitVec 64))
(declare-fun temp11062_153 () (_ BitVec 64))
(declare-fun temp11062_154 () (_ BitVec 64))
(declare-fun temp11062_155 () (_ BitVec 64))
(declare-fun temp11062_157 () (_ BitVec 64))
(declare-fun temp11062_158 () (_ BitVec 64))
(declare-fun temp11062_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp11062_159 () (_ BitVec 64))
(declare-fun temp11062_160 () (_ BitVec 64))
(declare-fun temp11062_162 () (_ BitVec 64))
(declare-fun temp11062_163 () (_ BitVec 64))
(declare-fun temp11062_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp11062_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp11062_165 () (_ BitVec 64))
(declare-fun temp11062_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp11062_167 () (_ BitVec 64))
(declare-fun temp11062_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp11062_169 () (_ BitVec 64))
(declare-fun temp11062_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11062_171 () (_ BitVec 64))
(declare-fun temp11062_172 () (_ BitVec 64))
(declare-fun temp11062_173 () (_ BitVec 64))
(declare-fun temp11062_174 () (_ BitVec 64))
(declare-fun temp11062_175 () (_ BitVec 64))
(declare-fun temp11062_176 () (_ BitVec 64))
(declare-fun temp11062_177 () (_ BitVec 64))
(declare-fun temp11062_178 () (_ BitVec 64))
(declare-fun temp11062_179 () (_ BitVec 64))
(declare-fun temp11062_180 () (_ BitVec 64))
(declare-fun temp11062_181 () (_ BitVec 64))
(declare-fun temp11062_182 () (_ BitVec 64))
(declare-fun temp11062_183 () (_ BitVec 64))
(declare-fun temp11062_184 () (_ BitVec 64))
(declare-fun temp11062_185 () (_ BitVec 64))
(declare-fun temp11062_186 () (_ BitVec 64))
(declare-fun temp11062_187 () (_ BitVec 64))
(declare-fun temp11062_188 () (_ BitVec 64))
(declare-fun temp11062_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp11062_190 () (_ BitVec 64))
(declare-fun temp11062_192 () (_ BitVec 64))
(declare-fun temp11062_193 () (_ BitVec 64))
(declare-fun temp11062_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp11062_194 () (_ BitVec 64))
(declare-fun temp11062_195 () (_ BitVec 64))
(declare-fun temp11062_197 () (_ BitVec 64))
(declare-fun temp11062_198 () (_ BitVec 64))
(declare-fun temp11062_196 () (_ BitVec 64))
(declare-fun temp11062_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp11062_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp11062_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp11062_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp11062_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp11062_204 () (_ BitVec 64))
(declare-fun temp11062_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp11062_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp11062_207 () (_ BitVec 64))
(declare-fun temp11062_208 () (_ BitVec 64))
(declare-fun temp11062_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp11062_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp11062_211 () (_ BitVec 64))
(declare-fun temp11062_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp11062_213 () (_ BitVec 64))
(declare-fun temp11062_214 () (_ BitVec 64))
(declare-fun temp11062_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp11062_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp11062_217 () (_ BitVec 64))
(declare-fun temp11062_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp11062_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp11062_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var4600208 () (_ BitVec 64))
(declare-fun var4862352 () (_ BitVec 64))
(declare-fun temp11062_221 () (_ BitVec 64))
(declare-fun var212414 () (_ BitVec 64))
(declare-fun temp11062_222 () (_ BitVec 64))
(declare-fun temp11062_223 () (_ BitVec 64))
(declare-fun var5191299 () (_ BitVec 64))
(declare-fun var5256844 () (_ BitVec 64))
(declare-fun temp11062_224 () (_ BitVec 64))
(assert (= temp11062_1 #x0000000000000001))
(assert (= var77203 temp11062_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp11062_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp11062_2)))
(assert (= temp11062_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp11062_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11062_4 #x0000000000000000))
(assert (= var210941 temp11062_4))
(assert (= temp11062_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp11062_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11062_6 #x0000000000000000))
(assert (= var210986 temp11062_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp11062_7 #x0000000000000000))
(assert (= temp11062_8 temp11062_7))
(assert (= temp11062_9 (select ARGNAME_padding_NAMEEND_VAL temp11062_8)))
(assert (= temp11062_10 #x0000000000000001))
(assert (= temp11062_11 temp11062_10))
(assert (= temp11062_12 (select ARGNAME_padding_NAMEEND_VAL temp11062_11)))
(assert (= temp11062_13 #x0000000000000002))
(assert (= temp11062_14 temp11062_13))
(assert (= temp11062_15 (select ARGNAME_padding_NAMEEND_VAL temp11062_14)))
(assert (= temp11062_16 #x0000000000000003))
(assert (= temp11062_17 temp11062_16))
(assert (= temp11062_18 (select ARGNAME_padding_NAMEEND_VAL temp11062_17)))
(assert (= temp11062_19 #x0000000000000004))
(assert (= temp11062_20 temp11062_19))
(assert (= temp11062_21 (select ARGNAME_padding_NAMEEND_VAL temp11062_20)))
(assert (= temp11062_22 #x0000000000000005))
(assert (= temp11062_23 temp11062_22))
(assert (= temp11062_24 (select ARGNAME_padding_NAMEEND_VAL temp11062_23)))
(assert (= temp11062_25 #x0000000000000000))
(assert (= temp11062_26 #x0000000000000000))
(assert (= temp11062_27 temp11062_26))
(assert (= temp11062_28 (select ARGNAME_padding_NAMEEND_VAL temp11062_27)))
(assert (= temp11062_29 #x0000000000000000))
(assert (= temp11062_30 #x0000000000000001))
(assert (= temp11062_31 temp11062_30))
(assert (= temp11062_32 (select ARGNAME_padding_NAMEEND_VAL temp11062_31)))
(assert (= temp11062_33 #x0000000000000000))
(assert (= temp11062_34 #x0000000000000002))
(assert (= temp11062_35 temp11062_34))
(assert (= temp11062_36 (select ARGNAME_padding_NAMEEND_VAL temp11062_35)))
(assert (= temp11062_37 #x0000000000000000))
(assert (= temp11062_38 #x0000000000000003))
(assert (= temp11062_39 temp11062_38))
(assert (= temp11062_40 (select ARGNAME_padding_NAMEEND_VAL temp11062_39)))
(assert (= temp11062_41 #x0000000000000000))
(assert (= temp11062_42 #x0000000000000004))
(assert (= temp11062_43 temp11062_42))
(assert (= temp11062_44 (select ARGNAME_padding_NAMEEND_VAL temp11062_43)))
(assert (= temp11062_45 #x0000000000000000))
(assert (= temp11062_46 #x0000000000000005))
(assert (= temp11062_47 temp11062_46))
(assert (= temp11062_48 (select ARGNAME_padding_NAMEEND_VAL temp11062_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp11062_28 temp11062_25)
             (bvslt temp11062_32 temp11062_29)
             (bvslt temp11062_36 temp11062_33)
             (bvslt temp11062_40 temp11062_37)
             (bvslt temp11062_44 temp11062_41)
             (bvslt temp11062_48 temp11062_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11062_49 #x0000000000000000))
(assert (= var1191714 temp11062_49))
(assert (= temp11062_50 #x0000000000000000))
(assert (= temp11062_51 temp11062_50))
(assert (= temp11062_52 (select ARGNAME_output_padding_NAMEEND_VAL temp11062_51)))
(assert (= temp11062_53 #x0000000000000001))
(assert (= temp11062_54 temp11062_53))
(assert (= temp11062_55 (select ARGNAME_output_padding_NAMEEND_VAL temp11062_54)))
(assert (= temp11062_56 #x0000000000000002))
(assert (= temp11062_57 temp11062_56))
(assert (= temp11062_58 (select ARGNAME_output_padding_NAMEEND_VAL temp11062_57)))
(assert (= temp11062_59 #x0000000000000003))
(assert (= temp11062_60 temp11062_59))
(assert (= temp11062_61 (select ARGNAME_output_padding_NAMEEND_VAL temp11062_60)))
(assert (= temp11062_62 #x0000000000000004))
(assert (= temp11062_63 temp11062_62))
(assert (= temp11062_64 (select ARGNAME_output_padding_NAMEEND_VAL temp11062_63)))
(assert (= temp11062_65 #x0000000000000005))
(assert (= temp11062_66 temp11062_65))
(assert (= temp11062_67 (select ARGNAME_output_padding_NAMEEND_VAL temp11062_66)))
(assert (= temp11062_68 #x0000000000000000))
(assert (= temp11062_69 #x0000000000000000))
(assert (= temp11062_70 temp11062_69))
(assert (= temp11062_71 (select ARGNAME_output_padding_NAMEEND_VAL temp11062_70)))
(assert (= temp11062_72 #x0000000000000000))
(assert (= temp11062_73 #x0000000000000001))
(assert (= temp11062_74 temp11062_73))
(assert (= temp11062_75 (select ARGNAME_output_padding_NAMEEND_VAL temp11062_74)))
(assert (= temp11062_76 #x0000000000000000))
(assert (= temp11062_77 #x0000000000000002))
(assert (= temp11062_78 temp11062_77))
(assert (= temp11062_79 (select ARGNAME_output_padding_NAMEEND_VAL temp11062_78)))
(assert (= temp11062_80 #x0000000000000000))
(assert (= temp11062_81 #x0000000000000003))
(assert (= temp11062_82 temp11062_81))
(assert (= temp11062_83 (select ARGNAME_output_padding_NAMEEND_VAL temp11062_82)))
(assert (= temp11062_84 #x0000000000000000))
(assert (= temp11062_85 #x0000000000000004))
(assert (= temp11062_86 temp11062_85))
(assert (= temp11062_87 (select ARGNAME_output_padding_NAMEEND_VAL temp11062_86)))
(assert (= temp11062_88 #x0000000000000000))
(assert (= temp11062_89 #x0000000000000005))
(assert (= temp11062_90 temp11062_89))
(assert (= temp11062_91 (select ARGNAME_output_padding_NAMEEND_VAL temp11062_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp11062_71 temp11062_68)
             (bvslt temp11062_75 temp11062_72)
             (bvslt temp11062_79 temp11062_76)
             (bvslt temp11062_83 temp11062_80)
             (bvslt temp11062_87 temp11062_84)
             (bvslt temp11062_91 temp11062_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11062_92 #x0000000000000000))
(assert (= var1191725 temp11062_92))
(assert (= temp11062_93 #x0000000000000000))
(assert (= temp11062_94 temp11062_93))
(assert (= temp11062_95 (select ARGNAME_stride_NAMEEND_VAL temp11062_94)))
(assert (= temp11062_96 #x0000000000000001))
(assert (= temp11062_97 temp11062_96))
(assert (= temp11062_98 (select ARGNAME_stride_NAMEEND_VAL temp11062_97)))
(assert (= temp11062_99 #x0000000000000002))
(assert (= temp11062_100 temp11062_99))
(assert (= temp11062_101 (select ARGNAME_stride_NAMEEND_VAL temp11062_100)))
(assert (= temp11062_102 #x0000000000000003))
(assert (= temp11062_103 temp11062_102))
(assert (= temp11062_104 (select ARGNAME_stride_NAMEEND_VAL temp11062_103)))
(assert (= temp11062_105 #x0000000000000004))
(assert (= temp11062_106 temp11062_105))
(assert (= temp11062_107 (select ARGNAME_stride_NAMEEND_VAL temp11062_106)))
(assert (= temp11062_108 #x0000000000000005))
(assert (= temp11062_109 temp11062_108))
(assert (= temp11062_110 (select ARGNAME_stride_NAMEEND_VAL temp11062_109)))
(assert (= temp11062_111 #x0000000000000000))
(assert (= temp11062_112 #x0000000000000000))
(assert (= temp11062_113 temp11062_112))
(assert (= temp11062_114 (select ARGNAME_stride_NAMEEND_VAL temp11062_113)))
(assert (= temp11062_115 #x0000000000000000))
(assert (= temp11062_116 #x0000000000000001))
(assert (= temp11062_117 temp11062_116))
(assert (= temp11062_118 (select ARGNAME_stride_NAMEEND_VAL temp11062_117)))
(assert (= temp11062_119 #x0000000000000000))
(assert (= temp11062_120 #x0000000000000002))
(assert (= temp11062_121 temp11062_120))
(assert (= temp11062_122 (select ARGNAME_stride_NAMEEND_VAL temp11062_121)))
(assert (= temp11062_123 #x0000000000000000))
(assert (= temp11062_124 #x0000000000000003))
(assert (= temp11062_125 temp11062_124))
(assert (= temp11062_126 (select ARGNAME_stride_NAMEEND_VAL temp11062_125)))
(assert (= temp11062_127 #x0000000000000000))
(assert (= temp11062_128 #x0000000000000004))
(assert (= temp11062_129 temp11062_128))
(assert (= temp11062_130 (select ARGNAME_stride_NAMEEND_VAL temp11062_129)))
(assert (= temp11062_131 #x0000000000000000))
(assert (= temp11062_132 #x0000000000000005))
(assert (= temp11062_133 temp11062_132))
(assert (= temp11062_134 (select ARGNAME_stride_NAMEEND_VAL temp11062_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp11062_114 temp11062_111)
             (bvsle temp11062_118 temp11062_115)
             (bvsle temp11062_122 temp11062_119)
             (bvsle temp11062_126 temp11062_123)
             (bvsle temp11062_130 temp11062_127)
             (bvsle temp11062_134 temp11062_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11062_135 #x0000000000000000))
(assert (= var1191735 temp11062_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11062_136 #x0000000000000001))
(assert (= var1191747 temp11062_136))
(assert (= temp11062_137 #x0000000000000000))
(assert (= var1179826 temp11062_137))
(assert (= temp11062_138 #x0000000000000000))
(assert (= temp11062_139 temp11062_138))
(assert (= temp11062_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11062_139)))
(assert (= temp11062_141 #x0000000000000001))
(assert (= temp11062_142 temp11062_141))
(assert (= temp11062_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11062_142)))
(assert (= temp11062_144 #x0000000000000002))
(assert (= temp11062_145 temp11062_144))
(assert (= temp11062_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11062_145)))
(assert (= temp11062_147 #x0000000000000003))
(assert (= temp11062_148 temp11062_147))
(assert (= temp11062_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11062_148)))
(assert (= temp11062_150 #x0000000000000004))
(assert (= temp11062_151 temp11062_150))
(assert (= temp11062_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11062_151)))
(assert (= temp11062_153 #x0000000000000005))
(assert (= temp11062_154 temp11062_153))
(assert (= temp11062_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11062_154)))
(assert (= temp11062_157 var1179826))
(assert (= temp11062_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11062_157)))
(assert (= temp11062_156 temp11062_158))
(assert (= var1191780
   (ite (bvslt temp11062_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11062_159 #x0000000000000000))
(assert (= var1191780 temp11062_159))
(assert (= temp11062_160 #x0000000000000000))
(assert (= var1179826 temp11062_160))
(assert (= temp11062_162 var1179826))
(assert (= temp11062_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11062_162)))
(assert (= temp11062_161 temp11062_163))
(assert (= var1191802 (bvsmod temp11062_161 ARGNAME_groups_NAMEEND)))
(assert (= temp11062_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp11062_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp11062_165 #x0000000000000001))
(assert (= var1191803 temp11062_165))
(assert (= temp11062_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp11062_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11062_167 #x0000000000000001))
(assert (= var1191823 temp11062_167))
(assert (= temp11062_168 #x0000000000000001))
(assert (= var1180714 temp11062_168))
(assert (= temp11062_169 #x0000000000000000))
(assert (= temp11062_170 temp11062_169))
(assert (= temp11062_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp11062_170)))
(assert (= temp11062_172 #x0000000000000001))
(assert (= temp11062_173 temp11062_172))
(assert (= temp11062_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp11062_173)))
(assert (= temp11062_175 #x0000000000000002))
(assert (= temp11062_176 temp11062_175))
(assert (= temp11062_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp11062_176)))
(assert (= temp11062_178 #x0000000000000003))
(assert (= temp11062_179 temp11062_178))
(assert (= temp11062_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp11062_179)))
(assert (= temp11062_181 #x0000000000000004))
(assert (= temp11062_182 temp11062_181))
(assert (= temp11062_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp11062_182)))
(assert (= temp11062_184 #x0000000000000005))
(assert (= temp11062_185 temp11062_184))
(assert (= temp11062_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp11062_185)))
(assert (= temp11062_187 #x0000000000000000))
(assert (= temp11062_188
   (ite (bvslt var1180714 temp11062_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp11062_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp11062_188)))
(assert (= var1191831 temp11062_189))
(assert (bvslt (ite (bvslt var1180714 temp11062_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11062_190 #x0000000000000001))
(assert (= var1180714 temp11062_190))
(assert (= temp11062_192 var1180714))
(assert (= temp11062_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11062_192)))
(assert (= temp11062_191 temp11062_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp11062_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp11062_194 #x0000000000000001))
(assert (= var1191836 temp11062_194))
(assert (= temp11062_195 #x0000000000000000))
(assert (= var1179826 temp11062_195))
(assert (= temp11062_197 var1179826))
(assert (= temp11062_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11062_197)))
(assert (= temp11062_196 temp11062_198))
(assert (= temp11062_199 #x0000000000000002))
(assert (= var1586025 temp11062_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp11062_200 #x0000000000000001))
(assert (= var1191993 temp11062_200))
(assert (= temp11062_201 #x0000000000000001))
(assert (= var2700303 temp11062_201))
(assert (= temp11062_202 #x0000000000000001))
(assert (= var2962447 temp11062_202))
(assert (= temp11062_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp11062_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11062_204 #x0000000000000001))
(assert (= var211058 temp11062_204))
(assert (= temp11062_205 #x0000000000000001))
(assert (= var211188 temp11062_205))
(assert (= var3879401 var211188))
(assert (= temp11062_206 #x0000000000000000))
(assert (= var3866802 temp11062_206))
(assert (= temp11062_207 #x0000000000000000))
(assert (= temp11062_208
   (ite (bvslt var3866802 temp11062_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp11062_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp11062_208)))
(assert (= var3879420 temp11062_209))
(assert (bvslt (ite (bvslt var3866802 temp11062_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11062_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp11062_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp11062_211 #x0000000000000000))
(assert (= var3879421 temp11062_211))
(assert (= temp11062_212 #x0000000000000001))
(assert (= var3867690 temp11062_212))
(assert (= temp11062_213 #x0000000000000000))
(assert (= temp11062_214
   (ite (bvslt var3867690 temp11062_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp11062_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp11062_214)))
(assert (= var3879423 temp11062_215))
(assert (bvslt (ite (bvslt var3867690 temp11062_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11062_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp11062_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp11062_217 #x0000000000000001))
(assert (= var3879424 temp11062_217))
(assert (= temp11062_218 #x0000000000000000))
(assert (= var4133117 temp11062_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp11062_219 #x0000000000000002))
(assert (= var4339331 temp11062_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11062_220 #x0000000000000000))
(assert (= var4404892 temp11062_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var4600208 var211201))
(assert (= var4862352 var211201))
(assert (= temp11062_221 #x0000000000000001))
(assert (= var212414
   (ite (= ARGNAME_groups_NAMEEND temp11062_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11062_222 #x0000000000000000))
(assert (= var212414 temp11062_222))
(assert (= temp11062_223 #x0000000000000002))
(assert (= var5191299 temp11062_223))
(assert (= var5256844 var5191299))
(assert (= temp11062_224 #x0000000000000001))
(assert (= var211058 temp11062_224))
(model-add temp11062_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp11062_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp11062_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp11062_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





