(declare-fun temp10041_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10041_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10041_3 () (_ BitVec 64))
(declare-fun temp10041_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10041_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10041_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10041_7 () (_ BitVec 64))
(declare-fun temp10041_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10041_9 () (_ BitVec 64))
(declare-fun temp10041_10 () (_ BitVec 64))
(declare-fun temp10041_11 () (_ BitVec 64))
(declare-fun temp10041_12 () (_ BitVec 64))
(declare-fun temp10041_13 () (_ BitVec 64))
(declare-fun temp10041_14 () (_ BitVec 64))
(declare-fun temp10041_15 () (_ BitVec 64))
(declare-fun temp10041_16 () (_ BitVec 64))
(declare-fun temp10041_17 () (_ BitVec 64))
(declare-fun temp10041_18 () (_ BitVec 64))
(declare-fun temp10041_19 () (_ BitVec 64))
(declare-fun temp10041_20 () (_ BitVec 64))
(declare-fun temp10041_21 () (_ BitVec 64))
(declare-fun temp10041_22 () (_ BitVec 64))
(declare-fun temp10041_23 () (_ BitVec 64))
(declare-fun temp10041_24 () (_ BitVec 64))
(declare-fun temp10041_25 () (_ BitVec 64))
(declare-fun temp10041_26 () (_ BitVec 64))
(declare-fun temp10041_27 () (_ BitVec 64))
(declare-fun temp10041_28 () (_ BitVec 64))
(declare-fun temp10041_29 () (_ BitVec 64))
(declare-fun temp10041_30 () (_ BitVec 64))
(declare-fun temp10041_31 () (_ BitVec 64))
(declare-fun temp10041_32 () (_ BitVec 64))
(declare-fun temp10041_33 () (_ BitVec 64))
(declare-fun temp10041_34 () (_ BitVec 64))
(declare-fun temp10041_35 () (_ BitVec 64))
(declare-fun temp10041_36 () (_ BitVec 64))
(declare-fun temp10041_37 () (_ BitVec 64))
(declare-fun temp10041_38 () (_ BitVec 64))
(declare-fun temp10041_39 () (_ BitVec 64))
(declare-fun temp10041_40 () (_ BitVec 64))
(declare-fun temp10041_41 () (_ BitVec 64))
(declare-fun temp10041_42 () (_ BitVec 64))
(declare-fun temp10041_43 () (_ BitVec 64))
(declare-fun temp10041_44 () (_ BitVec 64))
(declare-fun temp10041_45 () (_ BitVec 64))
(declare-fun temp10041_46 () (_ BitVec 64))
(declare-fun temp10041_47 () (_ BitVec 64))
(declare-fun temp10041_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10041_49 () (_ BitVec 64))
(declare-fun temp10041_50 () (_ BitVec 64))
(declare-fun temp10041_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10041_52 () (_ BitVec 64))
(declare-fun temp10041_53 () (_ BitVec 64))
(declare-fun temp10041_54 () (_ BitVec 64))
(declare-fun temp10041_55 () (_ BitVec 64))
(declare-fun temp10041_56 () (_ BitVec 64))
(declare-fun temp10041_57 () (_ BitVec 64))
(declare-fun temp10041_58 () (_ BitVec 64))
(declare-fun temp10041_59 () (_ BitVec 64))
(declare-fun temp10041_60 () (_ BitVec 64))
(declare-fun temp10041_61 () (_ BitVec 64))
(declare-fun temp10041_62 () (_ BitVec 64))
(declare-fun temp10041_63 () (_ BitVec 64))
(declare-fun temp10041_64 () (_ BitVec 64))
(declare-fun temp10041_65 () (_ BitVec 64))
(declare-fun temp10041_66 () (_ BitVec 64))
(declare-fun temp10041_67 () (_ BitVec 64))
(declare-fun temp10041_68 () (_ BitVec 64))
(declare-fun temp10041_69 () (_ BitVec 64))
(declare-fun temp10041_70 () (_ BitVec 64))
(declare-fun temp10041_71 () (_ BitVec 64))
(declare-fun temp10041_72 () (_ BitVec 64))
(declare-fun temp10041_73 () (_ BitVec 64))
(declare-fun temp10041_74 () (_ BitVec 64))
(declare-fun temp10041_75 () (_ BitVec 64))
(declare-fun temp10041_76 () (_ BitVec 64))
(declare-fun temp10041_77 () (_ BitVec 64))
(declare-fun temp10041_78 () (_ BitVec 64))
(declare-fun temp10041_79 () (_ BitVec 64))
(declare-fun temp10041_80 () (_ BitVec 64))
(declare-fun temp10041_81 () (_ BitVec 64))
(declare-fun temp10041_82 () (_ BitVec 64))
(declare-fun temp10041_83 () (_ BitVec 64))
(declare-fun temp10041_84 () (_ BitVec 64))
(declare-fun temp10041_85 () (_ BitVec 64))
(declare-fun temp10041_86 () (_ BitVec 64))
(declare-fun temp10041_87 () (_ BitVec 64))
(declare-fun temp10041_88 () (_ BitVec 64))
(declare-fun temp10041_89 () (_ BitVec 64))
(declare-fun temp10041_90 () (_ BitVec 64))
(declare-fun temp10041_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10041_92 () (_ BitVec 64))
(declare-fun temp10041_93 () (_ BitVec 64))
(declare-fun temp10041_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10041_95 () (_ BitVec 64))
(declare-fun temp10041_96 () (_ BitVec 64))
(declare-fun temp10041_97 () (_ BitVec 64))
(declare-fun temp10041_98 () (_ BitVec 64))
(declare-fun temp10041_99 () (_ BitVec 64))
(declare-fun temp10041_100 () (_ BitVec 64))
(declare-fun temp10041_101 () (_ BitVec 64))
(declare-fun temp10041_102 () (_ BitVec 64))
(declare-fun temp10041_103 () (_ BitVec 64))
(declare-fun temp10041_104 () (_ BitVec 64))
(declare-fun temp10041_105 () (_ BitVec 64))
(declare-fun temp10041_106 () (_ BitVec 64))
(declare-fun temp10041_107 () (_ BitVec 64))
(declare-fun temp10041_108 () (_ BitVec 64))
(declare-fun temp10041_109 () (_ BitVec 64))
(declare-fun temp10041_110 () (_ BitVec 64))
(declare-fun temp10041_111 () (_ BitVec 64))
(declare-fun temp10041_112 () (_ BitVec 64))
(declare-fun temp10041_113 () (_ BitVec 64))
(declare-fun temp10041_114 () (_ BitVec 64))
(declare-fun temp10041_115 () (_ BitVec 64))
(declare-fun temp10041_116 () (_ BitVec 64))
(declare-fun temp10041_117 () (_ BitVec 64))
(declare-fun temp10041_118 () (_ BitVec 64))
(declare-fun temp10041_119 () (_ BitVec 64))
(declare-fun temp10041_120 () (_ BitVec 64))
(declare-fun temp10041_121 () (_ BitVec 64))
(declare-fun temp10041_122 () (_ BitVec 64))
(declare-fun temp10041_123 () (_ BitVec 64))
(declare-fun temp10041_124 () (_ BitVec 64))
(declare-fun temp10041_125 () (_ BitVec 64))
(declare-fun temp10041_126 () (_ BitVec 64))
(declare-fun temp10041_127 () (_ BitVec 64))
(declare-fun temp10041_128 () (_ BitVec 64))
(declare-fun temp10041_129 () (_ BitVec 64))
(declare-fun temp10041_130 () (_ BitVec 64))
(declare-fun temp10041_131 () (_ BitVec 64))
(declare-fun temp10041_132 () (_ BitVec 64))
(declare-fun temp10041_133 () (_ BitVec 64))
(declare-fun temp10041_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10041_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10041_136 () (_ BitVec 64))
(declare-fun temp10041_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10041_138 () (_ BitVec 64))
(declare-fun temp10041_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10041_140 () (_ BitVec 64))
(declare-fun temp10041_141 () (_ BitVec 64))
(declare-fun temp10041_142 () (_ BitVec 64))
(declare-fun temp10041_143 () (_ BitVec 64))
(declare-fun temp10041_144 () (_ BitVec 64))
(declare-fun temp10041_145 () (_ BitVec 64))
(declare-fun temp10041_146 () (_ BitVec 64))
(declare-fun temp10041_147 () (_ BitVec 64))
(declare-fun temp10041_148 () (_ BitVec 64))
(declare-fun temp10041_149 () (_ BitVec 64))
(declare-fun temp10041_150 () (_ BitVec 64))
(declare-fun temp10041_151 () (_ BitVec 64))
(declare-fun temp10041_152 () (_ BitVec 64))
(declare-fun temp10041_153 () (_ BitVec 64))
(declare-fun temp10041_154 () (_ BitVec 64))
(declare-fun temp10041_155 () (_ BitVec 64))
(declare-fun temp10041_157 () (_ BitVec 64))
(declare-fun temp10041_158 () (_ BitVec 64))
(declare-fun temp10041_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10041_159 () (_ BitVec 64))
(declare-fun temp10041_160 () (_ BitVec 64))
(declare-fun temp10041_162 () (_ BitVec 64))
(declare-fun temp10041_163 () (_ BitVec 64))
(declare-fun temp10041_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10041_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10041_165 () (_ BitVec 64))
(declare-fun temp10041_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10041_167 () (_ BitVec 64))
(declare-fun temp10041_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10041_169 () (_ BitVec 64))
(declare-fun temp10041_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10041_171 () (_ BitVec 64))
(declare-fun temp10041_172 () (_ BitVec 64))
(declare-fun temp10041_173 () (_ BitVec 64))
(declare-fun temp10041_174 () (_ BitVec 64))
(declare-fun temp10041_175 () (_ BitVec 64))
(declare-fun temp10041_176 () (_ BitVec 64))
(declare-fun temp10041_177 () (_ BitVec 64))
(declare-fun temp10041_178 () (_ BitVec 64))
(declare-fun temp10041_179 () (_ BitVec 64))
(declare-fun temp10041_180 () (_ BitVec 64))
(declare-fun temp10041_181 () (_ BitVec 64))
(declare-fun temp10041_182 () (_ BitVec 64))
(declare-fun temp10041_183 () (_ BitVec 64))
(declare-fun temp10041_184 () (_ BitVec 64))
(declare-fun temp10041_185 () (_ BitVec 64))
(declare-fun temp10041_186 () (_ BitVec 64))
(declare-fun temp10041_187 () (_ BitVec 64))
(declare-fun temp10041_188 () (_ BitVec 64))
(declare-fun temp10041_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10041_190 () (_ BitVec 64))
(declare-fun temp10041_192 () (_ BitVec 64))
(declare-fun temp10041_193 () (_ BitVec 64))
(declare-fun temp10041_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10041_194 () (_ BitVec 64))
(declare-fun temp10041_195 () (_ BitVec 64))
(declare-fun temp10041_197 () (_ BitVec 64))
(declare-fun temp10041_198 () (_ BitVec 64))
(declare-fun temp10041_196 () (_ BitVec 64))
(declare-fun temp10041_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10041_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10041_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10041_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10041_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10041_204 () (_ BitVec 64))
(declare-fun temp10041_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10041_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10041_207 () (_ BitVec 64))
(declare-fun temp10041_208 () (_ BitVec 64))
(declare-fun temp10041_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10041_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10041_211 () (_ BitVec 64))
(declare-fun temp10041_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10041_213 () (_ BitVec 64))
(declare-fun temp10041_214 () (_ BitVec 64))
(declare-fun temp10041_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10041_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10041_217 () (_ BitVec 64))
(declare-fun temp10041_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10041_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10041_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp10041_222 () (_ BitVec 64))
(declare-fun temp10041_221 () (_ BitVec 64))
(declare-fun temp10041_223 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp10041_224 () (_ BitVec 64))
(declare-fun temp10041_225 () (_ BitVec 64))
(declare-fun temp10041_226 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp10041_227 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp10041_228 () (_ BitVec 64))
(declare-fun temp10041_230 () (_ BitVec 64))
(declare-fun temp10041_229 () (_ BitVec 64))
(declare-fun temp10041_231 () (_ BitVec 64))
(assert (= temp10041_1 #x0000000000000001))
(assert (= var77203 temp10041_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10041_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10041_2)))
(assert (= temp10041_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10041_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10041_4 #x0000000000000000))
(assert (= var210941 temp10041_4))
(assert (= temp10041_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10041_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10041_6 #x0000000000000000))
(assert (= var210986 temp10041_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10041_7 #x0000000000000000))
(assert (= temp10041_8 temp10041_7))
(assert (= temp10041_9 (select ARGNAME_padding_NAMEEND_VAL temp10041_8)))
(assert (= temp10041_10 #x0000000000000001))
(assert (= temp10041_11 temp10041_10))
(assert (= temp10041_12 (select ARGNAME_padding_NAMEEND_VAL temp10041_11)))
(assert (= temp10041_13 #x0000000000000002))
(assert (= temp10041_14 temp10041_13))
(assert (= temp10041_15 (select ARGNAME_padding_NAMEEND_VAL temp10041_14)))
(assert (= temp10041_16 #x0000000000000003))
(assert (= temp10041_17 temp10041_16))
(assert (= temp10041_18 (select ARGNAME_padding_NAMEEND_VAL temp10041_17)))
(assert (= temp10041_19 #x0000000000000004))
(assert (= temp10041_20 temp10041_19))
(assert (= temp10041_21 (select ARGNAME_padding_NAMEEND_VAL temp10041_20)))
(assert (= temp10041_22 #x0000000000000005))
(assert (= temp10041_23 temp10041_22))
(assert (= temp10041_24 (select ARGNAME_padding_NAMEEND_VAL temp10041_23)))
(assert (= temp10041_25 #x0000000000000000))
(assert (= temp10041_26 #x0000000000000000))
(assert (= temp10041_27 temp10041_26))
(assert (= temp10041_28 (select ARGNAME_padding_NAMEEND_VAL temp10041_27)))
(assert (= temp10041_29 #x0000000000000000))
(assert (= temp10041_30 #x0000000000000001))
(assert (= temp10041_31 temp10041_30))
(assert (= temp10041_32 (select ARGNAME_padding_NAMEEND_VAL temp10041_31)))
(assert (= temp10041_33 #x0000000000000000))
(assert (= temp10041_34 #x0000000000000002))
(assert (= temp10041_35 temp10041_34))
(assert (= temp10041_36 (select ARGNAME_padding_NAMEEND_VAL temp10041_35)))
(assert (= temp10041_37 #x0000000000000000))
(assert (= temp10041_38 #x0000000000000003))
(assert (= temp10041_39 temp10041_38))
(assert (= temp10041_40 (select ARGNAME_padding_NAMEEND_VAL temp10041_39)))
(assert (= temp10041_41 #x0000000000000000))
(assert (= temp10041_42 #x0000000000000004))
(assert (= temp10041_43 temp10041_42))
(assert (= temp10041_44 (select ARGNAME_padding_NAMEEND_VAL temp10041_43)))
(assert (= temp10041_45 #x0000000000000000))
(assert (= temp10041_46 #x0000000000000005))
(assert (= temp10041_47 temp10041_46))
(assert (= temp10041_48 (select ARGNAME_padding_NAMEEND_VAL temp10041_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10041_28 temp10041_25)
             (bvslt temp10041_32 temp10041_29)
             (bvslt temp10041_36 temp10041_33)
             (bvslt temp10041_40 temp10041_37)
             (bvslt temp10041_44 temp10041_41)
             (bvslt temp10041_48 temp10041_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10041_49 #x0000000000000000))
(assert (= var1191714 temp10041_49))
(assert (= temp10041_50 #x0000000000000000))
(assert (= temp10041_51 temp10041_50))
(assert (= temp10041_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10041_51)))
(assert (= temp10041_53 #x0000000000000001))
(assert (= temp10041_54 temp10041_53))
(assert (= temp10041_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10041_54)))
(assert (= temp10041_56 #x0000000000000002))
(assert (= temp10041_57 temp10041_56))
(assert (= temp10041_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10041_57)))
(assert (= temp10041_59 #x0000000000000003))
(assert (= temp10041_60 temp10041_59))
(assert (= temp10041_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10041_60)))
(assert (= temp10041_62 #x0000000000000004))
(assert (= temp10041_63 temp10041_62))
(assert (= temp10041_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10041_63)))
(assert (= temp10041_65 #x0000000000000005))
(assert (= temp10041_66 temp10041_65))
(assert (= temp10041_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10041_66)))
(assert (= temp10041_68 #x0000000000000000))
(assert (= temp10041_69 #x0000000000000000))
(assert (= temp10041_70 temp10041_69))
(assert (= temp10041_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10041_70)))
(assert (= temp10041_72 #x0000000000000000))
(assert (= temp10041_73 #x0000000000000001))
(assert (= temp10041_74 temp10041_73))
(assert (= temp10041_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10041_74)))
(assert (= temp10041_76 #x0000000000000000))
(assert (= temp10041_77 #x0000000000000002))
(assert (= temp10041_78 temp10041_77))
(assert (= temp10041_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10041_78)))
(assert (= temp10041_80 #x0000000000000000))
(assert (= temp10041_81 #x0000000000000003))
(assert (= temp10041_82 temp10041_81))
(assert (= temp10041_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10041_82)))
(assert (= temp10041_84 #x0000000000000000))
(assert (= temp10041_85 #x0000000000000004))
(assert (= temp10041_86 temp10041_85))
(assert (= temp10041_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10041_86)))
(assert (= temp10041_88 #x0000000000000000))
(assert (= temp10041_89 #x0000000000000005))
(assert (= temp10041_90 temp10041_89))
(assert (= temp10041_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10041_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10041_71 temp10041_68)
             (bvslt temp10041_75 temp10041_72)
             (bvslt temp10041_79 temp10041_76)
             (bvslt temp10041_83 temp10041_80)
             (bvslt temp10041_87 temp10041_84)
             (bvslt temp10041_91 temp10041_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10041_92 #x0000000000000000))
(assert (= var1191725 temp10041_92))
(assert (= temp10041_93 #x0000000000000000))
(assert (= temp10041_94 temp10041_93))
(assert (= temp10041_95 (select ARGNAME_stride_NAMEEND_VAL temp10041_94)))
(assert (= temp10041_96 #x0000000000000001))
(assert (= temp10041_97 temp10041_96))
(assert (= temp10041_98 (select ARGNAME_stride_NAMEEND_VAL temp10041_97)))
(assert (= temp10041_99 #x0000000000000002))
(assert (= temp10041_100 temp10041_99))
(assert (= temp10041_101 (select ARGNAME_stride_NAMEEND_VAL temp10041_100)))
(assert (= temp10041_102 #x0000000000000003))
(assert (= temp10041_103 temp10041_102))
(assert (= temp10041_104 (select ARGNAME_stride_NAMEEND_VAL temp10041_103)))
(assert (= temp10041_105 #x0000000000000004))
(assert (= temp10041_106 temp10041_105))
(assert (= temp10041_107 (select ARGNAME_stride_NAMEEND_VAL temp10041_106)))
(assert (= temp10041_108 #x0000000000000005))
(assert (= temp10041_109 temp10041_108))
(assert (= temp10041_110 (select ARGNAME_stride_NAMEEND_VAL temp10041_109)))
(assert (= temp10041_111 #x0000000000000000))
(assert (= temp10041_112 #x0000000000000000))
(assert (= temp10041_113 temp10041_112))
(assert (= temp10041_114 (select ARGNAME_stride_NAMEEND_VAL temp10041_113)))
(assert (= temp10041_115 #x0000000000000000))
(assert (= temp10041_116 #x0000000000000001))
(assert (= temp10041_117 temp10041_116))
(assert (= temp10041_118 (select ARGNAME_stride_NAMEEND_VAL temp10041_117)))
(assert (= temp10041_119 #x0000000000000000))
(assert (= temp10041_120 #x0000000000000002))
(assert (= temp10041_121 temp10041_120))
(assert (= temp10041_122 (select ARGNAME_stride_NAMEEND_VAL temp10041_121)))
(assert (= temp10041_123 #x0000000000000000))
(assert (= temp10041_124 #x0000000000000003))
(assert (= temp10041_125 temp10041_124))
(assert (= temp10041_126 (select ARGNAME_stride_NAMEEND_VAL temp10041_125)))
(assert (= temp10041_127 #x0000000000000000))
(assert (= temp10041_128 #x0000000000000004))
(assert (= temp10041_129 temp10041_128))
(assert (= temp10041_130 (select ARGNAME_stride_NAMEEND_VAL temp10041_129)))
(assert (= temp10041_131 #x0000000000000000))
(assert (= temp10041_132 #x0000000000000005))
(assert (= temp10041_133 temp10041_132))
(assert (= temp10041_134 (select ARGNAME_stride_NAMEEND_VAL temp10041_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10041_114 temp10041_111)
             (bvsle temp10041_118 temp10041_115)
             (bvsle temp10041_122 temp10041_119)
             (bvsle temp10041_126 temp10041_123)
             (bvsle temp10041_130 temp10041_127)
             (bvsle temp10041_134 temp10041_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10041_135 #x0000000000000000))
(assert (= var1191735 temp10041_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10041_136 #x0000000000000001))
(assert (= var1191747 temp10041_136))
(assert (= temp10041_137 #x0000000000000000))
(assert (= var1179826 temp10041_137))
(assert (= temp10041_138 #x0000000000000000))
(assert (= temp10041_139 temp10041_138))
(assert (= temp10041_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10041_139)))
(assert (= temp10041_141 #x0000000000000001))
(assert (= temp10041_142 temp10041_141))
(assert (= temp10041_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10041_142)))
(assert (= temp10041_144 #x0000000000000002))
(assert (= temp10041_145 temp10041_144))
(assert (= temp10041_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10041_145)))
(assert (= temp10041_147 #x0000000000000003))
(assert (= temp10041_148 temp10041_147))
(assert (= temp10041_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10041_148)))
(assert (= temp10041_150 #x0000000000000004))
(assert (= temp10041_151 temp10041_150))
(assert (= temp10041_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10041_151)))
(assert (= temp10041_153 #x0000000000000005))
(assert (= temp10041_154 temp10041_153))
(assert (= temp10041_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10041_154)))
(assert (= temp10041_157 var1179826))
(assert (= temp10041_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10041_157)))
(assert (= temp10041_156 temp10041_158))
(assert (= var1191780
   (ite (bvslt temp10041_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10041_159 #x0000000000000000))
(assert (= var1191780 temp10041_159))
(assert (= temp10041_160 #x0000000000000000))
(assert (= var1179826 temp10041_160))
(assert (= temp10041_162 var1179826))
(assert (= temp10041_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10041_162)))
(assert (= temp10041_161 temp10041_163))
(assert (= var1191802 (bvsmod temp10041_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10041_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10041_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10041_165 #x0000000000000001))
(assert (= var1191803 temp10041_165))
(assert (= temp10041_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10041_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10041_167 #x0000000000000001))
(assert (= var1191823 temp10041_167))
(assert (= temp10041_168 #x0000000000000001))
(assert (= var1180714 temp10041_168))
(assert (= temp10041_169 #x0000000000000000))
(assert (= temp10041_170 temp10041_169))
(assert (= temp10041_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10041_170)))
(assert (= temp10041_172 #x0000000000000001))
(assert (= temp10041_173 temp10041_172))
(assert (= temp10041_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10041_173)))
(assert (= temp10041_175 #x0000000000000002))
(assert (= temp10041_176 temp10041_175))
(assert (= temp10041_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10041_176)))
(assert (= temp10041_178 #x0000000000000003))
(assert (= temp10041_179 temp10041_178))
(assert (= temp10041_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10041_179)))
(assert (= temp10041_181 #x0000000000000004))
(assert (= temp10041_182 temp10041_181))
(assert (= temp10041_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10041_182)))
(assert (= temp10041_184 #x0000000000000005))
(assert (= temp10041_185 temp10041_184))
(assert (= temp10041_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10041_185)))
(assert (= temp10041_187 #x0000000000000000))
(assert (= temp10041_188
   (ite (bvslt var1180714 temp10041_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10041_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10041_188)))
(assert (= var1191831 temp10041_189))
(assert (bvslt (ite (bvslt var1180714 temp10041_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10041_190 #x0000000000000001))
(assert (= var1180714 temp10041_190))
(assert (= temp10041_192 var1180714))
(assert (= temp10041_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10041_192)))
(assert (= temp10041_191 temp10041_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10041_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10041_194 #x0000000000000001))
(assert (= var1191836 temp10041_194))
(assert (= temp10041_195 #x0000000000000000))
(assert (= var1179826 temp10041_195))
(assert (= temp10041_197 var1179826))
(assert (= temp10041_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10041_197)))
(assert (= temp10041_196 temp10041_198))
(assert (= temp10041_199 #x0000000000000002))
(assert (= var1586025 temp10041_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10041_200 #x0000000000000001))
(assert (= var1191993 temp10041_200))
(assert (= temp10041_201 #x0000000000000001))
(assert (= var2700303 temp10041_201))
(assert (= temp10041_202 #x0000000000000001))
(assert (= var2962447 temp10041_202))
(assert (= temp10041_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10041_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10041_204 #x0000000000000001))
(assert (= var211058 temp10041_204))
(assert (= temp10041_205 #x0000000000000001))
(assert (= var211188 temp10041_205))
(assert (= var3879401 var211188))
(assert (= temp10041_206 #x0000000000000000))
(assert (= var3866802 temp10041_206))
(assert (= temp10041_207 #x0000000000000000))
(assert (= temp10041_208
   (ite (bvslt var3866802 temp10041_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10041_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10041_208)))
(assert (= var3879420 temp10041_209))
(assert (bvslt (ite (bvslt var3866802 temp10041_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10041_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10041_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10041_211 #x0000000000000000))
(assert (= var3879421 temp10041_211))
(assert (= temp10041_212 #x0000000000000001))
(assert (= var3867690 temp10041_212))
(assert (= temp10041_213 #x0000000000000000))
(assert (= temp10041_214
   (ite (bvslt var3867690 temp10041_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10041_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10041_214)))
(assert (= var3879423 temp10041_215))
(assert (bvslt (ite (bvslt var3867690 temp10041_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10041_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10041_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10041_217 #x0000000000000001))
(assert (= var3879424 temp10041_217))
(assert (= temp10041_218 #x0000000000000000))
(assert (= var4079423 temp10041_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10041_219 #x0000000000000002))
(assert (= var4208259 temp10041_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10041_220 #x0000000000000000))
(assert (= var4273820 temp10041_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp10041_222 #xffffffffffffffff))
(assert (= temp10041_221 temp10041_222))
(assert (= temp10041_223 #x0000000000000001))
(assert (= var197674 temp10041_223))
(assert (= temp10041_224 #x0000000000000000))
(assert (= temp10041_225
   (ite (bvslt var197674 temp10041_224)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp10041_226 (select ARGNAME_input_NAMEEND_DIMSIZE temp10041_225)))
(assert (= var211595 temp10041_226))
(assert (bvslt (ite (bvslt var197674 temp10041_224)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10041_227 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp10041_227) #x0000000000000001 #x0000000000000000)))
(assert (= temp10041_228 #x0000000000000001))
(assert (= var211596 temp10041_228))
(assert (= temp10041_230 #xffffffffffffffff))
(assert (= temp10041_229 temp10041_230))
(assert (= temp10041_231 #x0000000000000001))
(assert (= var211058 temp10041_231))
(model-add temp10041_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10041_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10041_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10041_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





