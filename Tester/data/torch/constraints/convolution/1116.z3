(declare-fun temp10218_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10218_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10218_3 () (_ BitVec 64))
(declare-fun temp10218_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10218_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10218_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10218_7 () (_ BitVec 64))
(declare-fun temp10218_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10218_9 () (_ BitVec 64))
(declare-fun temp10218_10 () (_ BitVec 64))
(declare-fun temp10218_11 () (_ BitVec 64))
(declare-fun temp10218_12 () (_ BitVec 64))
(declare-fun temp10218_13 () (_ BitVec 64))
(declare-fun temp10218_14 () (_ BitVec 64))
(declare-fun temp10218_15 () (_ BitVec 64))
(declare-fun temp10218_16 () (_ BitVec 64))
(declare-fun temp10218_17 () (_ BitVec 64))
(declare-fun temp10218_18 () (_ BitVec 64))
(declare-fun temp10218_19 () (_ BitVec 64))
(declare-fun temp10218_20 () (_ BitVec 64))
(declare-fun temp10218_21 () (_ BitVec 64))
(declare-fun temp10218_22 () (_ BitVec 64))
(declare-fun temp10218_23 () (_ BitVec 64))
(declare-fun temp10218_24 () (_ BitVec 64))
(declare-fun temp10218_25 () (_ BitVec 64))
(declare-fun temp10218_26 () (_ BitVec 64))
(declare-fun temp10218_27 () (_ BitVec 64))
(declare-fun temp10218_28 () (_ BitVec 64))
(declare-fun temp10218_29 () (_ BitVec 64))
(declare-fun temp10218_30 () (_ BitVec 64))
(declare-fun temp10218_31 () (_ BitVec 64))
(declare-fun temp10218_32 () (_ BitVec 64))
(declare-fun temp10218_33 () (_ BitVec 64))
(declare-fun temp10218_34 () (_ BitVec 64))
(declare-fun temp10218_35 () (_ BitVec 64))
(declare-fun temp10218_36 () (_ BitVec 64))
(declare-fun temp10218_37 () (_ BitVec 64))
(declare-fun temp10218_38 () (_ BitVec 64))
(declare-fun temp10218_39 () (_ BitVec 64))
(declare-fun temp10218_40 () (_ BitVec 64))
(declare-fun temp10218_41 () (_ BitVec 64))
(declare-fun temp10218_42 () (_ BitVec 64))
(declare-fun temp10218_43 () (_ BitVec 64))
(declare-fun temp10218_44 () (_ BitVec 64))
(declare-fun temp10218_45 () (_ BitVec 64))
(declare-fun temp10218_46 () (_ BitVec 64))
(declare-fun temp10218_47 () (_ BitVec 64))
(declare-fun temp10218_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10218_49 () (_ BitVec 64))
(declare-fun temp10218_50 () (_ BitVec 64))
(declare-fun temp10218_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10218_52 () (_ BitVec 64))
(declare-fun temp10218_53 () (_ BitVec 64))
(declare-fun temp10218_54 () (_ BitVec 64))
(declare-fun temp10218_55 () (_ BitVec 64))
(declare-fun temp10218_56 () (_ BitVec 64))
(declare-fun temp10218_57 () (_ BitVec 64))
(declare-fun temp10218_58 () (_ BitVec 64))
(declare-fun temp10218_59 () (_ BitVec 64))
(declare-fun temp10218_60 () (_ BitVec 64))
(declare-fun temp10218_61 () (_ BitVec 64))
(declare-fun temp10218_62 () (_ BitVec 64))
(declare-fun temp10218_63 () (_ BitVec 64))
(declare-fun temp10218_64 () (_ BitVec 64))
(declare-fun temp10218_65 () (_ BitVec 64))
(declare-fun temp10218_66 () (_ BitVec 64))
(declare-fun temp10218_67 () (_ BitVec 64))
(declare-fun temp10218_68 () (_ BitVec 64))
(declare-fun temp10218_69 () (_ BitVec 64))
(declare-fun temp10218_70 () (_ BitVec 64))
(declare-fun temp10218_71 () (_ BitVec 64))
(declare-fun temp10218_72 () (_ BitVec 64))
(declare-fun temp10218_73 () (_ BitVec 64))
(declare-fun temp10218_74 () (_ BitVec 64))
(declare-fun temp10218_75 () (_ BitVec 64))
(declare-fun temp10218_76 () (_ BitVec 64))
(declare-fun temp10218_77 () (_ BitVec 64))
(declare-fun temp10218_78 () (_ BitVec 64))
(declare-fun temp10218_79 () (_ BitVec 64))
(declare-fun temp10218_80 () (_ BitVec 64))
(declare-fun temp10218_81 () (_ BitVec 64))
(declare-fun temp10218_82 () (_ BitVec 64))
(declare-fun temp10218_83 () (_ BitVec 64))
(declare-fun temp10218_84 () (_ BitVec 64))
(declare-fun temp10218_85 () (_ BitVec 64))
(declare-fun temp10218_86 () (_ BitVec 64))
(declare-fun temp10218_87 () (_ BitVec 64))
(declare-fun temp10218_88 () (_ BitVec 64))
(declare-fun temp10218_89 () (_ BitVec 64))
(declare-fun temp10218_90 () (_ BitVec 64))
(declare-fun temp10218_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10218_92 () (_ BitVec 64))
(declare-fun temp10218_93 () (_ BitVec 64))
(declare-fun temp10218_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10218_95 () (_ BitVec 64))
(declare-fun temp10218_96 () (_ BitVec 64))
(declare-fun temp10218_97 () (_ BitVec 64))
(declare-fun temp10218_98 () (_ BitVec 64))
(declare-fun temp10218_99 () (_ BitVec 64))
(declare-fun temp10218_100 () (_ BitVec 64))
(declare-fun temp10218_101 () (_ BitVec 64))
(declare-fun temp10218_102 () (_ BitVec 64))
(declare-fun temp10218_103 () (_ BitVec 64))
(declare-fun temp10218_104 () (_ BitVec 64))
(declare-fun temp10218_105 () (_ BitVec 64))
(declare-fun temp10218_106 () (_ BitVec 64))
(declare-fun temp10218_107 () (_ BitVec 64))
(declare-fun temp10218_108 () (_ BitVec 64))
(declare-fun temp10218_109 () (_ BitVec 64))
(declare-fun temp10218_110 () (_ BitVec 64))
(declare-fun temp10218_111 () (_ BitVec 64))
(declare-fun temp10218_112 () (_ BitVec 64))
(declare-fun temp10218_113 () (_ BitVec 64))
(declare-fun temp10218_114 () (_ BitVec 64))
(declare-fun temp10218_115 () (_ BitVec 64))
(declare-fun temp10218_116 () (_ BitVec 64))
(declare-fun temp10218_117 () (_ BitVec 64))
(declare-fun temp10218_118 () (_ BitVec 64))
(declare-fun temp10218_119 () (_ BitVec 64))
(declare-fun temp10218_120 () (_ BitVec 64))
(declare-fun temp10218_121 () (_ BitVec 64))
(declare-fun temp10218_122 () (_ BitVec 64))
(declare-fun temp10218_123 () (_ BitVec 64))
(declare-fun temp10218_124 () (_ BitVec 64))
(declare-fun temp10218_125 () (_ BitVec 64))
(declare-fun temp10218_126 () (_ BitVec 64))
(declare-fun temp10218_127 () (_ BitVec 64))
(declare-fun temp10218_128 () (_ BitVec 64))
(declare-fun temp10218_129 () (_ BitVec 64))
(declare-fun temp10218_130 () (_ BitVec 64))
(declare-fun temp10218_131 () (_ BitVec 64))
(declare-fun temp10218_132 () (_ BitVec 64))
(declare-fun temp10218_133 () (_ BitVec 64))
(declare-fun temp10218_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10218_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10218_136 () (_ BitVec 64))
(declare-fun temp10218_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10218_138 () (_ BitVec 64))
(declare-fun temp10218_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10218_140 () (_ BitVec 64))
(declare-fun temp10218_141 () (_ BitVec 64))
(declare-fun temp10218_142 () (_ BitVec 64))
(declare-fun temp10218_143 () (_ BitVec 64))
(declare-fun temp10218_144 () (_ BitVec 64))
(declare-fun temp10218_145 () (_ BitVec 64))
(declare-fun temp10218_146 () (_ BitVec 64))
(declare-fun temp10218_147 () (_ BitVec 64))
(declare-fun temp10218_148 () (_ BitVec 64))
(declare-fun temp10218_149 () (_ BitVec 64))
(declare-fun temp10218_150 () (_ BitVec 64))
(declare-fun temp10218_151 () (_ BitVec 64))
(declare-fun temp10218_152 () (_ BitVec 64))
(declare-fun temp10218_153 () (_ BitVec 64))
(declare-fun temp10218_154 () (_ BitVec 64))
(declare-fun temp10218_155 () (_ BitVec 64))
(declare-fun temp10218_157 () (_ BitVec 64))
(declare-fun temp10218_158 () (_ BitVec 64))
(declare-fun temp10218_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10218_159 () (_ BitVec 64))
(declare-fun temp10218_160 () (_ BitVec 64))
(declare-fun temp10218_162 () (_ BitVec 64))
(declare-fun temp10218_163 () (_ BitVec 64))
(declare-fun temp10218_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10218_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10218_165 () (_ BitVec 64))
(declare-fun temp10218_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10218_167 () (_ BitVec 64))
(declare-fun temp10218_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10218_169 () (_ BitVec 64))
(declare-fun temp10218_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10218_171 () (_ BitVec 64))
(declare-fun temp10218_172 () (_ BitVec 64))
(declare-fun temp10218_173 () (_ BitVec 64))
(declare-fun temp10218_174 () (_ BitVec 64))
(declare-fun temp10218_175 () (_ BitVec 64))
(declare-fun temp10218_176 () (_ BitVec 64))
(declare-fun temp10218_177 () (_ BitVec 64))
(declare-fun temp10218_178 () (_ BitVec 64))
(declare-fun temp10218_179 () (_ BitVec 64))
(declare-fun temp10218_180 () (_ BitVec 64))
(declare-fun temp10218_181 () (_ BitVec 64))
(declare-fun temp10218_182 () (_ BitVec 64))
(declare-fun temp10218_183 () (_ BitVec 64))
(declare-fun temp10218_184 () (_ BitVec 64))
(declare-fun temp10218_185 () (_ BitVec 64))
(declare-fun temp10218_186 () (_ BitVec 64))
(declare-fun temp10218_187 () (_ BitVec 64))
(declare-fun temp10218_188 () (_ BitVec 64))
(declare-fun temp10218_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10218_190 () (_ BitVec 64))
(declare-fun temp10218_192 () (_ BitVec 64))
(declare-fun temp10218_193 () (_ BitVec 64))
(declare-fun temp10218_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10218_194 () (_ BitVec 64))
(declare-fun temp10218_195 () (_ BitVec 64))
(declare-fun temp10218_197 () (_ BitVec 64))
(declare-fun temp10218_198 () (_ BitVec 64))
(declare-fun temp10218_196 () (_ BitVec 64))
(declare-fun temp10218_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10218_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10218_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10218_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10218_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10218_204 () (_ BitVec 64))
(declare-fun temp10218_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10218_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10218_207 () (_ BitVec 64))
(declare-fun temp10218_208 () (_ BitVec 64))
(declare-fun temp10218_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10218_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10218_211 () (_ BitVec 64))
(declare-fun temp10218_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10218_213 () (_ BitVec 64))
(declare-fun temp10218_214 () (_ BitVec 64))
(declare-fun temp10218_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10218_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10218_217 () (_ BitVec 64))
(declare-fun temp10218_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10218_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10218_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var5321104 () (_ BitVec 64))
(declare-fun var5583248 () (_ BitVec 64))
(declare-fun temp10218_221 () (_ BitVec 64))
(declare-fun var5910928 () (_ BitVec 64))
(declare-fun temp10218_222 () (_ BitVec 64))
(assert (= temp10218_1 #x0000000000000001))
(assert (= var77203 temp10218_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10218_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10218_2)))
(assert (= temp10218_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10218_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10218_4 #x0000000000000000))
(assert (= var210941 temp10218_4))
(assert (= temp10218_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10218_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10218_6 #x0000000000000000))
(assert (= var210986 temp10218_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10218_7 #x0000000000000000))
(assert (= temp10218_8 temp10218_7))
(assert (= temp10218_9 (select ARGNAME_padding_NAMEEND_VAL temp10218_8)))
(assert (= temp10218_10 #x0000000000000001))
(assert (= temp10218_11 temp10218_10))
(assert (= temp10218_12 (select ARGNAME_padding_NAMEEND_VAL temp10218_11)))
(assert (= temp10218_13 #x0000000000000002))
(assert (= temp10218_14 temp10218_13))
(assert (= temp10218_15 (select ARGNAME_padding_NAMEEND_VAL temp10218_14)))
(assert (= temp10218_16 #x0000000000000003))
(assert (= temp10218_17 temp10218_16))
(assert (= temp10218_18 (select ARGNAME_padding_NAMEEND_VAL temp10218_17)))
(assert (= temp10218_19 #x0000000000000004))
(assert (= temp10218_20 temp10218_19))
(assert (= temp10218_21 (select ARGNAME_padding_NAMEEND_VAL temp10218_20)))
(assert (= temp10218_22 #x0000000000000005))
(assert (= temp10218_23 temp10218_22))
(assert (= temp10218_24 (select ARGNAME_padding_NAMEEND_VAL temp10218_23)))
(assert (= temp10218_25 #x0000000000000000))
(assert (= temp10218_26 #x0000000000000000))
(assert (= temp10218_27 temp10218_26))
(assert (= temp10218_28 (select ARGNAME_padding_NAMEEND_VAL temp10218_27)))
(assert (= temp10218_29 #x0000000000000000))
(assert (= temp10218_30 #x0000000000000001))
(assert (= temp10218_31 temp10218_30))
(assert (= temp10218_32 (select ARGNAME_padding_NAMEEND_VAL temp10218_31)))
(assert (= temp10218_33 #x0000000000000000))
(assert (= temp10218_34 #x0000000000000002))
(assert (= temp10218_35 temp10218_34))
(assert (= temp10218_36 (select ARGNAME_padding_NAMEEND_VAL temp10218_35)))
(assert (= temp10218_37 #x0000000000000000))
(assert (= temp10218_38 #x0000000000000003))
(assert (= temp10218_39 temp10218_38))
(assert (= temp10218_40 (select ARGNAME_padding_NAMEEND_VAL temp10218_39)))
(assert (= temp10218_41 #x0000000000000000))
(assert (= temp10218_42 #x0000000000000004))
(assert (= temp10218_43 temp10218_42))
(assert (= temp10218_44 (select ARGNAME_padding_NAMEEND_VAL temp10218_43)))
(assert (= temp10218_45 #x0000000000000000))
(assert (= temp10218_46 #x0000000000000005))
(assert (= temp10218_47 temp10218_46))
(assert (= temp10218_48 (select ARGNAME_padding_NAMEEND_VAL temp10218_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10218_28 temp10218_25)
             (bvslt temp10218_32 temp10218_29)
             (bvslt temp10218_36 temp10218_33)
             (bvslt temp10218_40 temp10218_37)
             (bvslt temp10218_44 temp10218_41)
             (bvslt temp10218_48 temp10218_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10218_49 #x0000000000000000))
(assert (= var1191714 temp10218_49))
(assert (= temp10218_50 #x0000000000000000))
(assert (= temp10218_51 temp10218_50))
(assert (= temp10218_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10218_51)))
(assert (= temp10218_53 #x0000000000000001))
(assert (= temp10218_54 temp10218_53))
(assert (= temp10218_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10218_54)))
(assert (= temp10218_56 #x0000000000000002))
(assert (= temp10218_57 temp10218_56))
(assert (= temp10218_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10218_57)))
(assert (= temp10218_59 #x0000000000000003))
(assert (= temp10218_60 temp10218_59))
(assert (= temp10218_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10218_60)))
(assert (= temp10218_62 #x0000000000000004))
(assert (= temp10218_63 temp10218_62))
(assert (= temp10218_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10218_63)))
(assert (= temp10218_65 #x0000000000000005))
(assert (= temp10218_66 temp10218_65))
(assert (= temp10218_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10218_66)))
(assert (= temp10218_68 #x0000000000000000))
(assert (= temp10218_69 #x0000000000000000))
(assert (= temp10218_70 temp10218_69))
(assert (= temp10218_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10218_70)))
(assert (= temp10218_72 #x0000000000000000))
(assert (= temp10218_73 #x0000000000000001))
(assert (= temp10218_74 temp10218_73))
(assert (= temp10218_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10218_74)))
(assert (= temp10218_76 #x0000000000000000))
(assert (= temp10218_77 #x0000000000000002))
(assert (= temp10218_78 temp10218_77))
(assert (= temp10218_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10218_78)))
(assert (= temp10218_80 #x0000000000000000))
(assert (= temp10218_81 #x0000000000000003))
(assert (= temp10218_82 temp10218_81))
(assert (= temp10218_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10218_82)))
(assert (= temp10218_84 #x0000000000000000))
(assert (= temp10218_85 #x0000000000000004))
(assert (= temp10218_86 temp10218_85))
(assert (= temp10218_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10218_86)))
(assert (= temp10218_88 #x0000000000000000))
(assert (= temp10218_89 #x0000000000000005))
(assert (= temp10218_90 temp10218_89))
(assert (= temp10218_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10218_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10218_71 temp10218_68)
             (bvslt temp10218_75 temp10218_72)
             (bvslt temp10218_79 temp10218_76)
             (bvslt temp10218_83 temp10218_80)
             (bvslt temp10218_87 temp10218_84)
             (bvslt temp10218_91 temp10218_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10218_92 #x0000000000000000))
(assert (= var1191725 temp10218_92))
(assert (= temp10218_93 #x0000000000000000))
(assert (= temp10218_94 temp10218_93))
(assert (= temp10218_95 (select ARGNAME_stride_NAMEEND_VAL temp10218_94)))
(assert (= temp10218_96 #x0000000000000001))
(assert (= temp10218_97 temp10218_96))
(assert (= temp10218_98 (select ARGNAME_stride_NAMEEND_VAL temp10218_97)))
(assert (= temp10218_99 #x0000000000000002))
(assert (= temp10218_100 temp10218_99))
(assert (= temp10218_101 (select ARGNAME_stride_NAMEEND_VAL temp10218_100)))
(assert (= temp10218_102 #x0000000000000003))
(assert (= temp10218_103 temp10218_102))
(assert (= temp10218_104 (select ARGNAME_stride_NAMEEND_VAL temp10218_103)))
(assert (= temp10218_105 #x0000000000000004))
(assert (= temp10218_106 temp10218_105))
(assert (= temp10218_107 (select ARGNAME_stride_NAMEEND_VAL temp10218_106)))
(assert (= temp10218_108 #x0000000000000005))
(assert (= temp10218_109 temp10218_108))
(assert (= temp10218_110 (select ARGNAME_stride_NAMEEND_VAL temp10218_109)))
(assert (= temp10218_111 #x0000000000000000))
(assert (= temp10218_112 #x0000000000000000))
(assert (= temp10218_113 temp10218_112))
(assert (= temp10218_114 (select ARGNAME_stride_NAMEEND_VAL temp10218_113)))
(assert (= temp10218_115 #x0000000000000000))
(assert (= temp10218_116 #x0000000000000001))
(assert (= temp10218_117 temp10218_116))
(assert (= temp10218_118 (select ARGNAME_stride_NAMEEND_VAL temp10218_117)))
(assert (= temp10218_119 #x0000000000000000))
(assert (= temp10218_120 #x0000000000000002))
(assert (= temp10218_121 temp10218_120))
(assert (= temp10218_122 (select ARGNAME_stride_NAMEEND_VAL temp10218_121)))
(assert (= temp10218_123 #x0000000000000000))
(assert (= temp10218_124 #x0000000000000003))
(assert (= temp10218_125 temp10218_124))
(assert (= temp10218_126 (select ARGNAME_stride_NAMEEND_VAL temp10218_125)))
(assert (= temp10218_127 #x0000000000000000))
(assert (= temp10218_128 #x0000000000000004))
(assert (= temp10218_129 temp10218_128))
(assert (= temp10218_130 (select ARGNAME_stride_NAMEEND_VAL temp10218_129)))
(assert (= temp10218_131 #x0000000000000000))
(assert (= temp10218_132 #x0000000000000005))
(assert (= temp10218_133 temp10218_132))
(assert (= temp10218_134 (select ARGNAME_stride_NAMEEND_VAL temp10218_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10218_114 temp10218_111)
             (bvsle temp10218_118 temp10218_115)
             (bvsle temp10218_122 temp10218_119)
             (bvsle temp10218_126 temp10218_123)
             (bvsle temp10218_130 temp10218_127)
             (bvsle temp10218_134 temp10218_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10218_135 #x0000000000000000))
(assert (= var1191735 temp10218_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10218_136 #x0000000000000001))
(assert (= var1191747 temp10218_136))
(assert (= temp10218_137 #x0000000000000000))
(assert (= var1179826 temp10218_137))
(assert (= temp10218_138 #x0000000000000000))
(assert (= temp10218_139 temp10218_138))
(assert (= temp10218_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10218_139)))
(assert (= temp10218_141 #x0000000000000001))
(assert (= temp10218_142 temp10218_141))
(assert (= temp10218_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10218_142)))
(assert (= temp10218_144 #x0000000000000002))
(assert (= temp10218_145 temp10218_144))
(assert (= temp10218_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10218_145)))
(assert (= temp10218_147 #x0000000000000003))
(assert (= temp10218_148 temp10218_147))
(assert (= temp10218_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10218_148)))
(assert (= temp10218_150 #x0000000000000004))
(assert (= temp10218_151 temp10218_150))
(assert (= temp10218_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10218_151)))
(assert (= temp10218_153 #x0000000000000005))
(assert (= temp10218_154 temp10218_153))
(assert (= temp10218_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10218_154)))
(assert (= temp10218_157 var1179826))
(assert (= temp10218_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10218_157)))
(assert (= temp10218_156 temp10218_158))
(assert (= var1191780
   (ite (bvslt temp10218_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10218_159 #x0000000000000000))
(assert (= var1191780 temp10218_159))
(assert (= temp10218_160 #x0000000000000000))
(assert (= var1179826 temp10218_160))
(assert (= temp10218_162 var1179826))
(assert (= temp10218_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10218_162)))
(assert (= temp10218_161 temp10218_163))
(assert (= var1191802 (bvsmod temp10218_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10218_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10218_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10218_165 #x0000000000000001))
(assert (= var1191803 temp10218_165))
(assert (= temp10218_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10218_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10218_167 #x0000000000000001))
(assert (= var1191823 temp10218_167))
(assert (= temp10218_168 #x0000000000000001))
(assert (= var1180714 temp10218_168))
(assert (= temp10218_169 #x0000000000000000))
(assert (= temp10218_170 temp10218_169))
(assert (= temp10218_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10218_170)))
(assert (= temp10218_172 #x0000000000000001))
(assert (= temp10218_173 temp10218_172))
(assert (= temp10218_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10218_173)))
(assert (= temp10218_175 #x0000000000000002))
(assert (= temp10218_176 temp10218_175))
(assert (= temp10218_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10218_176)))
(assert (= temp10218_178 #x0000000000000003))
(assert (= temp10218_179 temp10218_178))
(assert (= temp10218_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10218_179)))
(assert (= temp10218_181 #x0000000000000004))
(assert (= temp10218_182 temp10218_181))
(assert (= temp10218_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10218_182)))
(assert (= temp10218_184 #x0000000000000005))
(assert (= temp10218_185 temp10218_184))
(assert (= temp10218_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10218_185)))
(assert (= temp10218_187 #x0000000000000000))
(assert (= temp10218_188
   (ite (bvslt var1180714 temp10218_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10218_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10218_188)))
(assert (= var1191831 temp10218_189))
(assert (bvslt (ite (bvslt var1180714 temp10218_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10218_190 #x0000000000000001))
(assert (= var1180714 temp10218_190))
(assert (= temp10218_192 var1180714))
(assert (= temp10218_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10218_192)))
(assert (= temp10218_191 temp10218_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10218_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10218_194 #x0000000000000001))
(assert (= var1191836 temp10218_194))
(assert (= temp10218_195 #x0000000000000000))
(assert (= var1179826 temp10218_195))
(assert (= temp10218_197 var1179826))
(assert (= temp10218_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10218_197)))
(assert (= temp10218_196 temp10218_198))
(assert (= temp10218_199 #x0000000000000002))
(assert (= var1586025 temp10218_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10218_200 #x0000000000000001))
(assert (= var1191993 temp10218_200))
(assert (= temp10218_201 #x0000000000000001))
(assert (= var2700303 temp10218_201))
(assert (= temp10218_202 #x0000000000000001))
(assert (= var2962447 temp10218_202))
(assert (= temp10218_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10218_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10218_204 #x0000000000000001))
(assert (= var211058 temp10218_204))
(assert (= temp10218_205 #x0000000000000001))
(assert (= var211188 temp10218_205))
(assert (= var3879401 var211188))
(assert (= temp10218_206 #x0000000000000000))
(assert (= var3866802 temp10218_206))
(assert (= temp10218_207 #x0000000000000000))
(assert (= temp10218_208
   (ite (bvslt var3866802 temp10218_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10218_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10218_208)))
(assert (= var3879420 temp10218_209))
(assert (bvslt (ite (bvslt var3866802 temp10218_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10218_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10218_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10218_211 #x0000000000000000))
(assert (= var3879421 temp10218_211))
(assert (= temp10218_212 #x0000000000000001))
(assert (= var3867690 temp10218_212))
(assert (= temp10218_213 #x0000000000000000))
(assert (= temp10218_214
   (ite (bvslt var3867690 temp10218_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10218_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10218_214)))
(assert (= var3879423 temp10218_215))
(assert (bvslt (ite (bvslt var3867690 temp10218_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10218_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10218_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10218_217 #x0000000000000001))
(assert (= var3879424 temp10218_217))
(assert (= temp10218_218 #x0000000000000000))
(assert (= var4079423 temp10218_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10218_219 #x0000000000000002))
(assert (= var4208259 temp10218_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10218_220 #x0000000000000000))
(assert (= var4273820 temp10218_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var5321104 var211201))
(assert (= var5583248 var211201))
(assert (= temp10218_221 #x0000000000000000))
(assert (= var5910928 temp10218_221))
(assert (= temp10218_222 #x0000000000000001))
(assert (= var211058 temp10218_222))
(model-add temp10218_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10218_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10218_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10218_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





