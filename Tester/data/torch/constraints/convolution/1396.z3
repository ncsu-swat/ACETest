(declare-fun temp10592_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10592_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10592_3 () (_ BitVec 64))
(declare-fun temp10592_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10592_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10592_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10592_7 () (_ BitVec 64))
(declare-fun temp10592_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10592_9 () (_ BitVec 64))
(declare-fun temp10592_10 () (_ BitVec 64))
(declare-fun temp10592_11 () (_ BitVec 64))
(declare-fun temp10592_12 () (_ BitVec 64))
(declare-fun temp10592_13 () (_ BitVec 64))
(declare-fun temp10592_14 () (_ BitVec 64))
(declare-fun temp10592_15 () (_ BitVec 64))
(declare-fun temp10592_16 () (_ BitVec 64))
(declare-fun temp10592_17 () (_ BitVec 64))
(declare-fun temp10592_18 () (_ BitVec 64))
(declare-fun temp10592_19 () (_ BitVec 64))
(declare-fun temp10592_20 () (_ BitVec 64))
(declare-fun temp10592_21 () (_ BitVec 64))
(declare-fun temp10592_22 () (_ BitVec 64))
(declare-fun temp10592_23 () (_ BitVec 64))
(declare-fun temp10592_24 () (_ BitVec 64))
(declare-fun temp10592_25 () (_ BitVec 64))
(declare-fun temp10592_26 () (_ BitVec 64))
(declare-fun temp10592_27 () (_ BitVec 64))
(declare-fun temp10592_28 () (_ BitVec 64))
(declare-fun temp10592_29 () (_ BitVec 64))
(declare-fun temp10592_30 () (_ BitVec 64))
(declare-fun temp10592_31 () (_ BitVec 64))
(declare-fun temp10592_32 () (_ BitVec 64))
(declare-fun temp10592_33 () (_ BitVec 64))
(declare-fun temp10592_34 () (_ BitVec 64))
(declare-fun temp10592_35 () (_ BitVec 64))
(declare-fun temp10592_36 () (_ BitVec 64))
(declare-fun temp10592_37 () (_ BitVec 64))
(declare-fun temp10592_38 () (_ BitVec 64))
(declare-fun temp10592_39 () (_ BitVec 64))
(declare-fun temp10592_40 () (_ BitVec 64))
(declare-fun temp10592_41 () (_ BitVec 64))
(declare-fun temp10592_42 () (_ BitVec 64))
(declare-fun temp10592_43 () (_ BitVec 64))
(declare-fun temp10592_44 () (_ BitVec 64))
(declare-fun temp10592_45 () (_ BitVec 64))
(declare-fun temp10592_46 () (_ BitVec 64))
(declare-fun temp10592_47 () (_ BitVec 64))
(declare-fun temp10592_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10592_49 () (_ BitVec 64))
(declare-fun temp10592_50 () (_ BitVec 64))
(declare-fun temp10592_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10592_52 () (_ BitVec 64))
(declare-fun temp10592_53 () (_ BitVec 64))
(declare-fun temp10592_54 () (_ BitVec 64))
(declare-fun temp10592_55 () (_ BitVec 64))
(declare-fun temp10592_56 () (_ BitVec 64))
(declare-fun temp10592_57 () (_ BitVec 64))
(declare-fun temp10592_58 () (_ BitVec 64))
(declare-fun temp10592_59 () (_ BitVec 64))
(declare-fun temp10592_60 () (_ BitVec 64))
(declare-fun temp10592_61 () (_ BitVec 64))
(declare-fun temp10592_62 () (_ BitVec 64))
(declare-fun temp10592_63 () (_ BitVec 64))
(declare-fun temp10592_64 () (_ BitVec 64))
(declare-fun temp10592_65 () (_ BitVec 64))
(declare-fun temp10592_66 () (_ BitVec 64))
(declare-fun temp10592_67 () (_ BitVec 64))
(declare-fun temp10592_68 () (_ BitVec 64))
(declare-fun temp10592_69 () (_ BitVec 64))
(declare-fun temp10592_70 () (_ BitVec 64))
(declare-fun temp10592_71 () (_ BitVec 64))
(declare-fun temp10592_72 () (_ BitVec 64))
(declare-fun temp10592_73 () (_ BitVec 64))
(declare-fun temp10592_74 () (_ BitVec 64))
(declare-fun temp10592_75 () (_ BitVec 64))
(declare-fun temp10592_76 () (_ BitVec 64))
(declare-fun temp10592_77 () (_ BitVec 64))
(declare-fun temp10592_78 () (_ BitVec 64))
(declare-fun temp10592_79 () (_ BitVec 64))
(declare-fun temp10592_80 () (_ BitVec 64))
(declare-fun temp10592_81 () (_ BitVec 64))
(declare-fun temp10592_82 () (_ BitVec 64))
(declare-fun temp10592_83 () (_ BitVec 64))
(declare-fun temp10592_84 () (_ BitVec 64))
(declare-fun temp10592_85 () (_ BitVec 64))
(declare-fun temp10592_86 () (_ BitVec 64))
(declare-fun temp10592_87 () (_ BitVec 64))
(declare-fun temp10592_88 () (_ BitVec 64))
(declare-fun temp10592_89 () (_ BitVec 64))
(declare-fun temp10592_90 () (_ BitVec 64))
(declare-fun temp10592_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10592_92 () (_ BitVec 64))
(declare-fun temp10592_93 () (_ BitVec 64))
(declare-fun temp10592_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10592_95 () (_ BitVec 64))
(declare-fun temp10592_96 () (_ BitVec 64))
(declare-fun temp10592_97 () (_ BitVec 64))
(declare-fun temp10592_98 () (_ BitVec 64))
(declare-fun temp10592_99 () (_ BitVec 64))
(declare-fun temp10592_100 () (_ BitVec 64))
(declare-fun temp10592_101 () (_ BitVec 64))
(declare-fun temp10592_102 () (_ BitVec 64))
(declare-fun temp10592_103 () (_ BitVec 64))
(declare-fun temp10592_104 () (_ BitVec 64))
(declare-fun temp10592_105 () (_ BitVec 64))
(declare-fun temp10592_106 () (_ BitVec 64))
(declare-fun temp10592_107 () (_ BitVec 64))
(declare-fun temp10592_108 () (_ BitVec 64))
(declare-fun temp10592_109 () (_ BitVec 64))
(declare-fun temp10592_110 () (_ BitVec 64))
(declare-fun temp10592_111 () (_ BitVec 64))
(declare-fun temp10592_112 () (_ BitVec 64))
(declare-fun temp10592_113 () (_ BitVec 64))
(declare-fun temp10592_114 () (_ BitVec 64))
(declare-fun temp10592_115 () (_ BitVec 64))
(declare-fun temp10592_116 () (_ BitVec 64))
(declare-fun temp10592_117 () (_ BitVec 64))
(declare-fun temp10592_118 () (_ BitVec 64))
(declare-fun temp10592_119 () (_ BitVec 64))
(declare-fun temp10592_120 () (_ BitVec 64))
(declare-fun temp10592_121 () (_ BitVec 64))
(declare-fun temp10592_122 () (_ BitVec 64))
(declare-fun temp10592_123 () (_ BitVec 64))
(declare-fun temp10592_124 () (_ BitVec 64))
(declare-fun temp10592_125 () (_ BitVec 64))
(declare-fun temp10592_126 () (_ BitVec 64))
(declare-fun temp10592_127 () (_ BitVec 64))
(declare-fun temp10592_128 () (_ BitVec 64))
(declare-fun temp10592_129 () (_ BitVec 64))
(declare-fun temp10592_130 () (_ BitVec 64))
(declare-fun temp10592_131 () (_ BitVec 64))
(declare-fun temp10592_132 () (_ BitVec 64))
(declare-fun temp10592_133 () (_ BitVec 64))
(declare-fun temp10592_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10592_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10592_136 () (_ BitVec 64))
(declare-fun temp10592_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10592_138 () (_ BitVec 64))
(declare-fun temp10592_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10592_140 () (_ BitVec 64))
(declare-fun temp10592_141 () (_ BitVec 64))
(declare-fun temp10592_142 () (_ BitVec 64))
(declare-fun temp10592_143 () (_ BitVec 64))
(declare-fun temp10592_144 () (_ BitVec 64))
(declare-fun temp10592_145 () (_ BitVec 64))
(declare-fun temp10592_146 () (_ BitVec 64))
(declare-fun temp10592_147 () (_ BitVec 64))
(declare-fun temp10592_148 () (_ BitVec 64))
(declare-fun temp10592_149 () (_ BitVec 64))
(declare-fun temp10592_150 () (_ BitVec 64))
(declare-fun temp10592_151 () (_ BitVec 64))
(declare-fun temp10592_152 () (_ BitVec 64))
(declare-fun temp10592_153 () (_ BitVec 64))
(declare-fun temp10592_154 () (_ BitVec 64))
(declare-fun temp10592_155 () (_ BitVec 64))
(declare-fun temp10592_157 () (_ BitVec 64))
(declare-fun temp10592_158 () (_ BitVec 64))
(declare-fun temp10592_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10592_159 () (_ BitVec 64))
(declare-fun temp10592_160 () (_ BitVec 64))
(declare-fun temp10592_162 () (_ BitVec 64))
(declare-fun temp10592_163 () (_ BitVec 64))
(declare-fun temp10592_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10592_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10592_165 () (_ BitVec 64))
(declare-fun temp10592_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10592_167 () (_ BitVec 64))
(declare-fun temp10592_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10592_169 () (_ BitVec 64))
(declare-fun temp10592_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10592_171 () (_ BitVec 64))
(declare-fun temp10592_172 () (_ BitVec 64))
(declare-fun temp10592_173 () (_ BitVec 64))
(declare-fun temp10592_174 () (_ BitVec 64))
(declare-fun temp10592_175 () (_ BitVec 64))
(declare-fun temp10592_176 () (_ BitVec 64))
(declare-fun temp10592_177 () (_ BitVec 64))
(declare-fun temp10592_178 () (_ BitVec 64))
(declare-fun temp10592_179 () (_ BitVec 64))
(declare-fun temp10592_180 () (_ BitVec 64))
(declare-fun temp10592_181 () (_ BitVec 64))
(declare-fun temp10592_182 () (_ BitVec 64))
(declare-fun temp10592_183 () (_ BitVec 64))
(declare-fun temp10592_184 () (_ BitVec 64))
(declare-fun temp10592_185 () (_ BitVec 64))
(declare-fun temp10592_186 () (_ BitVec 64))
(declare-fun temp10592_187 () (_ BitVec 64))
(declare-fun temp10592_188 () (_ BitVec 64))
(declare-fun temp10592_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10592_190 () (_ BitVec 64))
(declare-fun temp10592_192 () (_ BitVec 64))
(declare-fun temp10592_193 () (_ BitVec 64))
(declare-fun temp10592_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10592_194 () (_ BitVec 64))
(declare-fun temp10592_195 () (_ BitVec 64))
(declare-fun temp10592_197 () (_ BitVec 64))
(declare-fun temp10592_198 () (_ BitVec 64))
(declare-fun temp10592_196 () (_ BitVec 64))
(declare-fun temp10592_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10592_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10592_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10592_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10592_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10592_204 () (_ BitVec 64))
(declare-fun temp10592_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10592_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10592_207 () (_ BitVec 64))
(declare-fun temp10592_208 () (_ BitVec 64))
(declare-fun temp10592_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10592_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10592_211 () (_ BitVec 64))
(declare-fun temp10592_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10592_213 () (_ BitVec 64))
(declare-fun temp10592_214 () (_ BitVec 64))
(declare-fun temp10592_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10592_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10592_217 () (_ BitVec 64))
(declare-fun temp10592_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10592_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10592_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var4927888 () (_ BitVec 64))
(declare-fun var211494 () (_ BitVec 64))
(declare-fun temp10592_221 () (_ BitVec 64))
(declare-fun var211495 () (_ BitVec 64))
(declare-fun temp10592_223 () (_ BitVec 64))
(declare-fun temp10592_222 () (_ BitVec 64))
(declare-fun temp10592_224 () (_ BitVec 64))
(declare-fun var6884842 () (_ BitVec 64))
(declare-fun temp10592_226 () (_ BitVec 64))
(declare-fun temp10592_225 () (_ BitVec 64))
(declare-fun temp10592_227 () (_ BitVec 64))
(assert (= temp10592_1 #x0000000000000001))
(assert (= var77203 temp10592_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10592_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10592_2)))
(assert (= temp10592_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10592_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10592_4 #x0000000000000000))
(assert (= var210941 temp10592_4))
(assert (= temp10592_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10592_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10592_6 #x0000000000000000))
(assert (= var210986 temp10592_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10592_7 #x0000000000000000))
(assert (= temp10592_8 temp10592_7))
(assert (= temp10592_9 (select ARGNAME_padding_NAMEEND_VAL temp10592_8)))
(assert (= temp10592_10 #x0000000000000001))
(assert (= temp10592_11 temp10592_10))
(assert (= temp10592_12 (select ARGNAME_padding_NAMEEND_VAL temp10592_11)))
(assert (= temp10592_13 #x0000000000000002))
(assert (= temp10592_14 temp10592_13))
(assert (= temp10592_15 (select ARGNAME_padding_NAMEEND_VAL temp10592_14)))
(assert (= temp10592_16 #x0000000000000003))
(assert (= temp10592_17 temp10592_16))
(assert (= temp10592_18 (select ARGNAME_padding_NAMEEND_VAL temp10592_17)))
(assert (= temp10592_19 #x0000000000000004))
(assert (= temp10592_20 temp10592_19))
(assert (= temp10592_21 (select ARGNAME_padding_NAMEEND_VAL temp10592_20)))
(assert (= temp10592_22 #x0000000000000005))
(assert (= temp10592_23 temp10592_22))
(assert (= temp10592_24 (select ARGNAME_padding_NAMEEND_VAL temp10592_23)))
(assert (= temp10592_25 #x0000000000000000))
(assert (= temp10592_26 #x0000000000000000))
(assert (= temp10592_27 temp10592_26))
(assert (= temp10592_28 (select ARGNAME_padding_NAMEEND_VAL temp10592_27)))
(assert (= temp10592_29 #x0000000000000000))
(assert (= temp10592_30 #x0000000000000001))
(assert (= temp10592_31 temp10592_30))
(assert (= temp10592_32 (select ARGNAME_padding_NAMEEND_VAL temp10592_31)))
(assert (= temp10592_33 #x0000000000000000))
(assert (= temp10592_34 #x0000000000000002))
(assert (= temp10592_35 temp10592_34))
(assert (= temp10592_36 (select ARGNAME_padding_NAMEEND_VAL temp10592_35)))
(assert (= temp10592_37 #x0000000000000000))
(assert (= temp10592_38 #x0000000000000003))
(assert (= temp10592_39 temp10592_38))
(assert (= temp10592_40 (select ARGNAME_padding_NAMEEND_VAL temp10592_39)))
(assert (= temp10592_41 #x0000000000000000))
(assert (= temp10592_42 #x0000000000000004))
(assert (= temp10592_43 temp10592_42))
(assert (= temp10592_44 (select ARGNAME_padding_NAMEEND_VAL temp10592_43)))
(assert (= temp10592_45 #x0000000000000000))
(assert (= temp10592_46 #x0000000000000005))
(assert (= temp10592_47 temp10592_46))
(assert (= temp10592_48 (select ARGNAME_padding_NAMEEND_VAL temp10592_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10592_28 temp10592_25)
             (bvslt temp10592_32 temp10592_29)
             (bvslt temp10592_36 temp10592_33)
             (bvslt temp10592_40 temp10592_37)
             (bvslt temp10592_44 temp10592_41)
             (bvslt temp10592_48 temp10592_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10592_49 #x0000000000000000))
(assert (= var1191714 temp10592_49))
(assert (= temp10592_50 #x0000000000000000))
(assert (= temp10592_51 temp10592_50))
(assert (= temp10592_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10592_51)))
(assert (= temp10592_53 #x0000000000000001))
(assert (= temp10592_54 temp10592_53))
(assert (= temp10592_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10592_54)))
(assert (= temp10592_56 #x0000000000000002))
(assert (= temp10592_57 temp10592_56))
(assert (= temp10592_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10592_57)))
(assert (= temp10592_59 #x0000000000000003))
(assert (= temp10592_60 temp10592_59))
(assert (= temp10592_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10592_60)))
(assert (= temp10592_62 #x0000000000000004))
(assert (= temp10592_63 temp10592_62))
(assert (= temp10592_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10592_63)))
(assert (= temp10592_65 #x0000000000000005))
(assert (= temp10592_66 temp10592_65))
(assert (= temp10592_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10592_66)))
(assert (= temp10592_68 #x0000000000000000))
(assert (= temp10592_69 #x0000000000000000))
(assert (= temp10592_70 temp10592_69))
(assert (= temp10592_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10592_70)))
(assert (= temp10592_72 #x0000000000000000))
(assert (= temp10592_73 #x0000000000000001))
(assert (= temp10592_74 temp10592_73))
(assert (= temp10592_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10592_74)))
(assert (= temp10592_76 #x0000000000000000))
(assert (= temp10592_77 #x0000000000000002))
(assert (= temp10592_78 temp10592_77))
(assert (= temp10592_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10592_78)))
(assert (= temp10592_80 #x0000000000000000))
(assert (= temp10592_81 #x0000000000000003))
(assert (= temp10592_82 temp10592_81))
(assert (= temp10592_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10592_82)))
(assert (= temp10592_84 #x0000000000000000))
(assert (= temp10592_85 #x0000000000000004))
(assert (= temp10592_86 temp10592_85))
(assert (= temp10592_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10592_86)))
(assert (= temp10592_88 #x0000000000000000))
(assert (= temp10592_89 #x0000000000000005))
(assert (= temp10592_90 temp10592_89))
(assert (= temp10592_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10592_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10592_71 temp10592_68)
             (bvslt temp10592_75 temp10592_72)
             (bvslt temp10592_79 temp10592_76)
             (bvslt temp10592_83 temp10592_80)
             (bvslt temp10592_87 temp10592_84)
             (bvslt temp10592_91 temp10592_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10592_92 #x0000000000000000))
(assert (= var1191725 temp10592_92))
(assert (= temp10592_93 #x0000000000000000))
(assert (= temp10592_94 temp10592_93))
(assert (= temp10592_95 (select ARGNAME_stride_NAMEEND_VAL temp10592_94)))
(assert (= temp10592_96 #x0000000000000001))
(assert (= temp10592_97 temp10592_96))
(assert (= temp10592_98 (select ARGNAME_stride_NAMEEND_VAL temp10592_97)))
(assert (= temp10592_99 #x0000000000000002))
(assert (= temp10592_100 temp10592_99))
(assert (= temp10592_101 (select ARGNAME_stride_NAMEEND_VAL temp10592_100)))
(assert (= temp10592_102 #x0000000000000003))
(assert (= temp10592_103 temp10592_102))
(assert (= temp10592_104 (select ARGNAME_stride_NAMEEND_VAL temp10592_103)))
(assert (= temp10592_105 #x0000000000000004))
(assert (= temp10592_106 temp10592_105))
(assert (= temp10592_107 (select ARGNAME_stride_NAMEEND_VAL temp10592_106)))
(assert (= temp10592_108 #x0000000000000005))
(assert (= temp10592_109 temp10592_108))
(assert (= temp10592_110 (select ARGNAME_stride_NAMEEND_VAL temp10592_109)))
(assert (= temp10592_111 #x0000000000000000))
(assert (= temp10592_112 #x0000000000000000))
(assert (= temp10592_113 temp10592_112))
(assert (= temp10592_114 (select ARGNAME_stride_NAMEEND_VAL temp10592_113)))
(assert (= temp10592_115 #x0000000000000000))
(assert (= temp10592_116 #x0000000000000001))
(assert (= temp10592_117 temp10592_116))
(assert (= temp10592_118 (select ARGNAME_stride_NAMEEND_VAL temp10592_117)))
(assert (= temp10592_119 #x0000000000000000))
(assert (= temp10592_120 #x0000000000000002))
(assert (= temp10592_121 temp10592_120))
(assert (= temp10592_122 (select ARGNAME_stride_NAMEEND_VAL temp10592_121)))
(assert (= temp10592_123 #x0000000000000000))
(assert (= temp10592_124 #x0000000000000003))
(assert (= temp10592_125 temp10592_124))
(assert (= temp10592_126 (select ARGNAME_stride_NAMEEND_VAL temp10592_125)))
(assert (= temp10592_127 #x0000000000000000))
(assert (= temp10592_128 #x0000000000000004))
(assert (= temp10592_129 temp10592_128))
(assert (= temp10592_130 (select ARGNAME_stride_NAMEEND_VAL temp10592_129)))
(assert (= temp10592_131 #x0000000000000000))
(assert (= temp10592_132 #x0000000000000005))
(assert (= temp10592_133 temp10592_132))
(assert (= temp10592_134 (select ARGNAME_stride_NAMEEND_VAL temp10592_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10592_114 temp10592_111)
             (bvsle temp10592_118 temp10592_115)
             (bvsle temp10592_122 temp10592_119)
             (bvsle temp10592_126 temp10592_123)
             (bvsle temp10592_130 temp10592_127)
             (bvsle temp10592_134 temp10592_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10592_135 #x0000000000000000))
(assert (= var1191735 temp10592_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10592_136 #x0000000000000001))
(assert (= var1191747 temp10592_136))
(assert (= temp10592_137 #x0000000000000000))
(assert (= var1179826 temp10592_137))
(assert (= temp10592_138 #x0000000000000000))
(assert (= temp10592_139 temp10592_138))
(assert (= temp10592_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10592_139)))
(assert (= temp10592_141 #x0000000000000001))
(assert (= temp10592_142 temp10592_141))
(assert (= temp10592_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10592_142)))
(assert (= temp10592_144 #x0000000000000002))
(assert (= temp10592_145 temp10592_144))
(assert (= temp10592_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10592_145)))
(assert (= temp10592_147 #x0000000000000003))
(assert (= temp10592_148 temp10592_147))
(assert (= temp10592_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10592_148)))
(assert (= temp10592_150 #x0000000000000004))
(assert (= temp10592_151 temp10592_150))
(assert (= temp10592_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10592_151)))
(assert (= temp10592_153 #x0000000000000005))
(assert (= temp10592_154 temp10592_153))
(assert (= temp10592_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10592_154)))
(assert (= temp10592_157 var1179826))
(assert (= temp10592_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10592_157)))
(assert (= temp10592_156 temp10592_158))
(assert (= var1191780
   (ite (bvslt temp10592_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10592_159 #x0000000000000000))
(assert (= var1191780 temp10592_159))
(assert (= temp10592_160 #x0000000000000000))
(assert (= var1179826 temp10592_160))
(assert (= temp10592_162 var1179826))
(assert (= temp10592_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10592_162)))
(assert (= temp10592_161 temp10592_163))
(assert (= var1191802 (bvsmod temp10592_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10592_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10592_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10592_165 #x0000000000000001))
(assert (= var1191803 temp10592_165))
(assert (= temp10592_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10592_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10592_167 #x0000000000000001))
(assert (= var1191823 temp10592_167))
(assert (= temp10592_168 #x0000000000000001))
(assert (= var1180714 temp10592_168))
(assert (= temp10592_169 #x0000000000000000))
(assert (= temp10592_170 temp10592_169))
(assert (= temp10592_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10592_170)))
(assert (= temp10592_172 #x0000000000000001))
(assert (= temp10592_173 temp10592_172))
(assert (= temp10592_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10592_173)))
(assert (= temp10592_175 #x0000000000000002))
(assert (= temp10592_176 temp10592_175))
(assert (= temp10592_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10592_176)))
(assert (= temp10592_178 #x0000000000000003))
(assert (= temp10592_179 temp10592_178))
(assert (= temp10592_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10592_179)))
(assert (= temp10592_181 #x0000000000000004))
(assert (= temp10592_182 temp10592_181))
(assert (= temp10592_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10592_182)))
(assert (= temp10592_184 #x0000000000000005))
(assert (= temp10592_185 temp10592_184))
(assert (= temp10592_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10592_185)))
(assert (= temp10592_187 #x0000000000000000))
(assert (= temp10592_188
   (ite (bvslt var1180714 temp10592_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10592_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10592_188)))
(assert (= var1191831 temp10592_189))
(assert (bvslt (ite (bvslt var1180714 temp10592_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10592_190 #x0000000000000001))
(assert (= var1180714 temp10592_190))
(assert (= temp10592_192 var1180714))
(assert (= temp10592_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10592_192)))
(assert (= temp10592_191 temp10592_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10592_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10592_194 #x0000000000000001))
(assert (= var1191836 temp10592_194))
(assert (= temp10592_195 #x0000000000000000))
(assert (= var1179826 temp10592_195))
(assert (= temp10592_197 var1179826))
(assert (= temp10592_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10592_197)))
(assert (= temp10592_196 temp10592_198))
(assert (= temp10592_199 #x0000000000000002))
(assert (= var1586025 temp10592_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10592_200 #x0000000000000001))
(assert (= var1191993 temp10592_200))
(assert (= temp10592_201 #x0000000000000001))
(assert (= var2700303 temp10592_201))
(assert (= temp10592_202 #x0000000000000001))
(assert (= var2962447 temp10592_202))
(assert (= temp10592_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10592_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10592_204 #x0000000000000001))
(assert (= var211058 temp10592_204))
(assert (= temp10592_205 #x0000000000000001))
(assert (= var211188 temp10592_205))
(assert (= var3879401 var211188))
(assert (= temp10592_206 #x0000000000000000))
(assert (= var3866802 temp10592_206))
(assert (= temp10592_207 #x0000000000000000))
(assert (= temp10592_208
   (ite (bvslt var3866802 temp10592_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10592_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10592_208)))
(assert (= var3879420 temp10592_209))
(assert (bvslt (ite (bvslt var3866802 temp10592_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10592_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10592_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10592_211 #x0000000000000000))
(assert (= var3879421 temp10592_211))
(assert (= temp10592_212 #x0000000000000001))
(assert (= var3867690 temp10592_212))
(assert (= temp10592_213 #x0000000000000000))
(assert (= temp10592_214
   (ite (bvslt var3867690 temp10592_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10592_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10592_214)))
(assert (= var3879423 temp10592_215))
(assert (bvslt (ite (bvslt var3867690 temp10592_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10592_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10592_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10592_217 #x0000000000000001))
(assert (= var3879424 temp10592_217))
(assert (= temp10592_218 #x0000000000000000))
(assert (= var4133117 temp10592_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10592_219 #x0000000000000002))
(assert (= var4339331 temp10592_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10592_220 #x0000000000000000))
(assert (= var4404892 temp10592_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var4927888 var211201))
(assert (= var211494 var210913))
(assert (= temp10592_221 #x0000000000000000))
(assert (= var211495
   (ite (distinct var211494 temp10592_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10592_223 #x0000000000000001))
(assert (= temp10592_222 temp10592_223))
(assert (= temp10592_224 #x0000000000000001))
(assert (= var6884842 temp10592_224))
(assert (= temp10592_226 #xffffffffffffffff))
(assert (= temp10592_225 temp10592_226))
(assert (= temp10592_227 #x0000000000000001))
(assert (= var211058 temp10592_227))
(model-add temp10592_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10592_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10592_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10592_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






