(declare-fun temp10590_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10590_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10590_3 () (_ BitVec 64))
(declare-fun temp10590_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10590_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10590_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10590_7 () (_ BitVec 64))
(declare-fun temp10590_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10590_9 () (_ BitVec 64))
(declare-fun temp10590_10 () (_ BitVec 64))
(declare-fun temp10590_11 () (_ BitVec 64))
(declare-fun temp10590_12 () (_ BitVec 64))
(declare-fun temp10590_13 () (_ BitVec 64))
(declare-fun temp10590_14 () (_ BitVec 64))
(declare-fun temp10590_15 () (_ BitVec 64))
(declare-fun temp10590_16 () (_ BitVec 64))
(declare-fun temp10590_17 () (_ BitVec 64))
(declare-fun temp10590_18 () (_ BitVec 64))
(declare-fun temp10590_19 () (_ BitVec 64))
(declare-fun temp10590_20 () (_ BitVec 64))
(declare-fun temp10590_21 () (_ BitVec 64))
(declare-fun temp10590_22 () (_ BitVec 64))
(declare-fun temp10590_23 () (_ BitVec 64))
(declare-fun temp10590_24 () (_ BitVec 64))
(declare-fun temp10590_25 () (_ BitVec 64))
(declare-fun temp10590_26 () (_ BitVec 64))
(declare-fun temp10590_27 () (_ BitVec 64))
(declare-fun temp10590_28 () (_ BitVec 64))
(declare-fun temp10590_29 () (_ BitVec 64))
(declare-fun temp10590_30 () (_ BitVec 64))
(declare-fun temp10590_31 () (_ BitVec 64))
(declare-fun temp10590_32 () (_ BitVec 64))
(declare-fun temp10590_33 () (_ BitVec 64))
(declare-fun temp10590_34 () (_ BitVec 64))
(declare-fun temp10590_35 () (_ BitVec 64))
(declare-fun temp10590_36 () (_ BitVec 64))
(declare-fun temp10590_37 () (_ BitVec 64))
(declare-fun temp10590_38 () (_ BitVec 64))
(declare-fun temp10590_39 () (_ BitVec 64))
(declare-fun temp10590_40 () (_ BitVec 64))
(declare-fun temp10590_41 () (_ BitVec 64))
(declare-fun temp10590_42 () (_ BitVec 64))
(declare-fun temp10590_43 () (_ BitVec 64))
(declare-fun temp10590_44 () (_ BitVec 64))
(declare-fun temp10590_45 () (_ BitVec 64))
(declare-fun temp10590_46 () (_ BitVec 64))
(declare-fun temp10590_47 () (_ BitVec 64))
(declare-fun temp10590_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10590_49 () (_ BitVec 64))
(declare-fun temp10590_50 () (_ BitVec 64))
(declare-fun temp10590_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10590_52 () (_ BitVec 64))
(declare-fun temp10590_53 () (_ BitVec 64))
(declare-fun temp10590_54 () (_ BitVec 64))
(declare-fun temp10590_55 () (_ BitVec 64))
(declare-fun temp10590_56 () (_ BitVec 64))
(declare-fun temp10590_57 () (_ BitVec 64))
(declare-fun temp10590_58 () (_ BitVec 64))
(declare-fun temp10590_59 () (_ BitVec 64))
(declare-fun temp10590_60 () (_ BitVec 64))
(declare-fun temp10590_61 () (_ BitVec 64))
(declare-fun temp10590_62 () (_ BitVec 64))
(declare-fun temp10590_63 () (_ BitVec 64))
(declare-fun temp10590_64 () (_ BitVec 64))
(declare-fun temp10590_65 () (_ BitVec 64))
(declare-fun temp10590_66 () (_ BitVec 64))
(declare-fun temp10590_67 () (_ BitVec 64))
(declare-fun temp10590_68 () (_ BitVec 64))
(declare-fun temp10590_69 () (_ BitVec 64))
(declare-fun temp10590_70 () (_ BitVec 64))
(declare-fun temp10590_71 () (_ BitVec 64))
(declare-fun temp10590_72 () (_ BitVec 64))
(declare-fun temp10590_73 () (_ BitVec 64))
(declare-fun temp10590_74 () (_ BitVec 64))
(declare-fun temp10590_75 () (_ BitVec 64))
(declare-fun temp10590_76 () (_ BitVec 64))
(declare-fun temp10590_77 () (_ BitVec 64))
(declare-fun temp10590_78 () (_ BitVec 64))
(declare-fun temp10590_79 () (_ BitVec 64))
(declare-fun temp10590_80 () (_ BitVec 64))
(declare-fun temp10590_81 () (_ BitVec 64))
(declare-fun temp10590_82 () (_ BitVec 64))
(declare-fun temp10590_83 () (_ BitVec 64))
(declare-fun temp10590_84 () (_ BitVec 64))
(declare-fun temp10590_85 () (_ BitVec 64))
(declare-fun temp10590_86 () (_ BitVec 64))
(declare-fun temp10590_87 () (_ BitVec 64))
(declare-fun temp10590_88 () (_ BitVec 64))
(declare-fun temp10590_89 () (_ BitVec 64))
(declare-fun temp10590_90 () (_ BitVec 64))
(declare-fun temp10590_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10590_92 () (_ BitVec 64))
(declare-fun temp10590_93 () (_ BitVec 64))
(declare-fun temp10590_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10590_95 () (_ BitVec 64))
(declare-fun temp10590_96 () (_ BitVec 64))
(declare-fun temp10590_97 () (_ BitVec 64))
(declare-fun temp10590_98 () (_ BitVec 64))
(declare-fun temp10590_99 () (_ BitVec 64))
(declare-fun temp10590_100 () (_ BitVec 64))
(declare-fun temp10590_101 () (_ BitVec 64))
(declare-fun temp10590_102 () (_ BitVec 64))
(declare-fun temp10590_103 () (_ BitVec 64))
(declare-fun temp10590_104 () (_ BitVec 64))
(declare-fun temp10590_105 () (_ BitVec 64))
(declare-fun temp10590_106 () (_ BitVec 64))
(declare-fun temp10590_107 () (_ BitVec 64))
(declare-fun temp10590_108 () (_ BitVec 64))
(declare-fun temp10590_109 () (_ BitVec 64))
(declare-fun temp10590_110 () (_ BitVec 64))
(declare-fun temp10590_111 () (_ BitVec 64))
(declare-fun temp10590_112 () (_ BitVec 64))
(declare-fun temp10590_113 () (_ BitVec 64))
(declare-fun temp10590_114 () (_ BitVec 64))
(declare-fun temp10590_115 () (_ BitVec 64))
(declare-fun temp10590_116 () (_ BitVec 64))
(declare-fun temp10590_117 () (_ BitVec 64))
(declare-fun temp10590_118 () (_ BitVec 64))
(declare-fun temp10590_119 () (_ BitVec 64))
(declare-fun temp10590_120 () (_ BitVec 64))
(declare-fun temp10590_121 () (_ BitVec 64))
(declare-fun temp10590_122 () (_ BitVec 64))
(declare-fun temp10590_123 () (_ BitVec 64))
(declare-fun temp10590_124 () (_ BitVec 64))
(declare-fun temp10590_125 () (_ BitVec 64))
(declare-fun temp10590_126 () (_ BitVec 64))
(declare-fun temp10590_127 () (_ BitVec 64))
(declare-fun temp10590_128 () (_ BitVec 64))
(declare-fun temp10590_129 () (_ BitVec 64))
(declare-fun temp10590_130 () (_ BitVec 64))
(declare-fun temp10590_131 () (_ BitVec 64))
(declare-fun temp10590_132 () (_ BitVec 64))
(declare-fun temp10590_133 () (_ BitVec 64))
(declare-fun temp10590_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10590_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10590_136 () (_ BitVec 64))
(declare-fun temp10590_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10590_138 () (_ BitVec 64))
(declare-fun temp10590_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10590_140 () (_ BitVec 64))
(declare-fun temp10590_141 () (_ BitVec 64))
(declare-fun temp10590_142 () (_ BitVec 64))
(declare-fun temp10590_143 () (_ BitVec 64))
(declare-fun temp10590_144 () (_ BitVec 64))
(declare-fun temp10590_145 () (_ BitVec 64))
(declare-fun temp10590_146 () (_ BitVec 64))
(declare-fun temp10590_147 () (_ BitVec 64))
(declare-fun temp10590_148 () (_ BitVec 64))
(declare-fun temp10590_149 () (_ BitVec 64))
(declare-fun temp10590_150 () (_ BitVec 64))
(declare-fun temp10590_151 () (_ BitVec 64))
(declare-fun temp10590_152 () (_ BitVec 64))
(declare-fun temp10590_153 () (_ BitVec 64))
(declare-fun temp10590_154 () (_ BitVec 64))
(declare-fun temp10590_155 () (_ BitVec 64))
(declare-fun temp10590_157 () (_ BitVec 64))
(declare-fun temp10590_158 () (_ BitVec 64))
(declare-fun temp10590_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10590_159 () (_ BitVec 64))
(declare-fun temp10590_160 () (_ BitVec 64))
(declare-fun temp10590_162 () (_ BitVec 64))
(declare-fun temp10590_163 () (_ BitVec 64))
(declare-fun temp10590_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10590_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10590_165 () (_ BitVec 64))
(declare-fun temp10590_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10590_167 () (_ BitVec 64))
(declare-fun temp10590_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10590_169 () (_ BitVec 64))
(declare-fun temp10590_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10590_171 () (_ BitVec 64))
(declare-fun temp10590_172 () (_ BitVec 64))
(declare-fun temp10590_173 () (_ BitVec 64))
(declare-fun temp10590_174 () (_ BitVec 64))
(declare-fun temp10590_175 () (_ BitVec 64))
(declare-fun temp10590_176 () (_ BitVec 64))
(declare-fun temp10590_177 () (_ BitVec 64))
(declare-fun temp10590_178 () (_ BitVec 64))
(declare-fun temp10590_179 () (_ BitVec 64))
(declare-fun temp10590_180 () (_ BitVec 64))
(declare-fun temp10590_181 () (_ BitVec 64))
(declare-fun temp10590_182 () (_ BitVec 64))
(declare-fun temp10590_183 () (_ BitVec 64))
(declare-fun temp10590_184 () (_ BitVec 64))
(declare-fun temp10590_185 () (_ BitVec 64))
(declare-fun temp10590_186 () (_ BitVec 64))
(declare-fun temp10590_187 () (_ BitVec 64))
(declare-fun temp10590_188 () (_ BitVec 64))
(declare-fun temp10590_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10590_190 () (_ BitVec 64))
(declare-fun temp10590_192 () (_ BitVec 64))
(declare-fun temp10590_193 () (_ BitVec 64))
(declare-fun temp10590_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10590_194 () (_ BitVec 64))
(declare-fun temp10590_195 () (_ BitVec 64))
(declare-fun temp10590_197 () (_ BitVec 64))
(declare-fun temp10590_198 () (_ BitVec 64))
(declare-fun temp10590_196 () (_ BitVec 64))
(declare-fun temp10590_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10590_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10590_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10590_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10590_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10590_204 () (_ BitVec 64))
(declare-fun temp10590_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10590_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10590_207 () (_ BitVec 64))
(declare-fun temp10590_208 () (_ BitVec 64))
(declare-fun temp10590_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10590_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10590_211 () (_ BitVec 64))
(declare-fun temp10590_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10590_213 () (_ BitVec 64))
(declare-fun temp10590_214 () (_ BitVec 64))
(declare-fun temp10590_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10590_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10590_217 () (_ BitVec 64))
(declare-fun temp10590_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10590_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10590_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var4927888 () (_ BitVec 64))
(declare-fun var211494 () (_ BitVec 64))
(declare-fun temp10590_221 () (_ BitVec 64))
(declare-fun var211495 () (_ BitVec 64))
(declare-fun temp10590_222 () (_ BitVec 64))
(assert (= temp10590_1 #x0000000000000001))
(assert (= var77203 temp10590_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10590_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10590_2)))
(assert (= temp10590_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10590_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10590_4 #x0000000000000000))
(assert (= var210941 temp10590_4))
(assert (= temp10590_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10590_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10590_6 #x0000000000000000))
(assert (= var210986 temp10590_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10590_7 #x0000000000000000))
(assert (= temp10590_8 temp10590_7))
(assert (= temp10590_9 (select ARGNAME_padding_NAMEEND_VAL temp10590_8)))
(assert (= temp10590_10 #x0000000000000001))
(assert (= temp10590_11 temp10590_10))
(assert (= temp10590_12 (select ARGNAME_padding_NAMEEND_VAL temp10590_11)))
(assert (= temp10590_13 #x0000000000000002))
(assert (= temp10590_14 temp10590_13))
(assert (= temp10590_15 (select ARGNAME_padding_NAMEEND_VAL temp10590_14)))
(assert (= temp10590_16 #x0000000000000003))
(assert (= temp10590_17 temp10590_16))
(assert (= temp10590_18 (select ARGNAME_padding_NAMEEND_VAL temp10590_17)))
(assert (= temp10590_19 #x0000000000000004))
(assert (= temp10590_20 temp10590_19))
(assert (= temp10590_21 (select ARGNAME_padding_NAMEEND_VAL temp10590_20)))
(assert (= temp10590_22 #x0000000000000005))
(assert (= temp10590_23 temp10590_22))
(assert (= temp10590_24 (select ARGNAME_padding_NAMEEND_VAL temp10590_23)))
(assert (= temp10590_25 #x0000000000000000))
(assert (= temp10590_26 #x0000000000000000))
(assert (= temp10590_27 temp10590_26))
(assert (= temp10590_28 (select ARGNAME_padding_NAMEEND_VAL temp10590_27)))
(assert (= temp10590_29 #x0000000000000000))
(assert (= temp10590_30 #x0000000000000001))
(assert (= temp10590_31 temp10590_30))
(assert (= temp10590_32 (select ARGNAME_padding_NAMEEND_VAL temp10590_31)))
(assert (= temp10590_33 #x0000000000000000))
(assert (= temp10590_34 #x0000000000000002))
(assert (= temp10590_35 temp10590_34))
(assert (= temp10590_36 (select ARGNAME_padding_NAMEEND_VAL temp10590_35)))
(assert (= temp10590_37 #x0000000000000000))
(assert (= temp10590_38 #x0000000000000003))
(assert (= temp10590_39 temp10590_38))
(assert (= temp10590_40 (select ARGNAME_padding_NAMEEND_VAL temp10590_39)))
(assert (= temp10590_41 #x0000000000000000))
(assert (= temp10590_42 #x0000000000000004))
(assert (= temp10590_43 temp10590_42))
(assert (= temp10590_44 (select ARGNAME_padding_NAMEEND_VAL temp10590_43)))
(assert (= temp10590_45 #x0000000000000000))
(assert (= temp10590_46 #x0000000000000005))
(assert (= temp10590_47 temp10590_46))
(assert (= temp10590_48 (select ARGNAME_padding_NAMEEND_VAL temp10590_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10590_28 temp10590_25)
             (bvslt temp10590_32 temp10590_29)
             (bvslt temp10590_36 temp10590_33)
             (bvslt temp10590_40 temp10590_37)
             (bvslt temp10590_44 temp10590_41)
             (bvslt temp10590_48 temp10590_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10590_49 #x0000000000000000))
(assert (= var1191714 temp10590_49))
(assert (= temp10590_50 #x0000000000000000))
(assert (= temp10590_51 temp10590_50))
(assert (= temp10590_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10590_51)))
(assert (= temp10590_53 #x0000000000000001))
(assert (= temp10590_54 temp10590_53))
(assert (= temp10590_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10590_54)))
(assert (= temp10590_56 #x0000000000000002))
(assert (= temp10590_57 temp10590_56))
(assert (= temp10590_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10590_57)))
(assert (= temp10590_59 #x0000000000000003))
(assert (= temp10590_60 temp10590_59))
(assert (= temp10590_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10590_60)))
(assert (= temp10590_62 #x0000000000000004))
(assert (= temp10590_63 temp10590_62))
(assert (= temp10590_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10590_63)))
(assert (= temp10590_65 #x0000000000000005))
(assert (= temp10590_66 temp10590_65))
(assert (= temp10590_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10590_66)))
(assert (= temp10590_68 #x0000000000000000))
(assert (= temp10590_69 #x0000000000000000))
(assert (= temp10590_70 temp10590_69))
(assert (= temp10590_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10590_70)))
(assert (= temp10590_72 #x0000000000000000))
(assert (= temp10590_73 #x0000000000000001))
(assert (= temp10590_74 temp10590_73))
(assert (= temp10590_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10590_74)))
(assert (= temp10590_76 #x0000000000000000))
(assert (= temp10590_77 #x0000000000000002))
(assert (= temp10590_78 temp10590_77))
(assert (= temp10590_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10590_78)))
(assert (= temp10590_80 #x0000000000000000))
(assert (= temp10590_81 #x0000000000000003))
(assert (= temp10590_82 temp10590_81))
(assert (= temp10590_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10590_82)))
(assert (= temp10590_84 #x0000000000000000))
(assert (= temp10590_85 #x0000000000000004))
(assert (= temp10590_86 temp10590_85))
(assert (= temp10590_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10590_86)))
(assert (= temp10590_88 #x0000000000000000))
(assert (= temp10590_89 #x0000000000000005))
(assert (= temp10590_90 temp10590_89))
(assert (= temp10590_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10590_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10590_71 temp10590_68)
             (bvslt temp10590_75 temp10590_72)
             (bvslt temp10590_79 temp10590_76)
             (bvslt temp10590_83 temp10590_80)
             (bvslt temp10590_87 temp10590_84)
             (bvslt temp10590_91 temp10590_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10590_92 #x0000000000000000))
(assert (= var1191725 temp10590_92))
(assert (= temp10590_93 #x0000000000000000))
(assert (= temp10590_94 temp10590_93))
(assert (= temp10590_95 (select ARGNAME_stride_NAMEEND_VAL temp10590_94)))
(assert (= temp10590_96 #x0000000000000001))
(assert (= temp10590_97 temp10590_96))
(assert (= temp10590_98 (select ARGNAME_stride_NAMEEND_VAL temp10590_97)))
(assert (= temp10590_99 #x0000000000000002))
(assert (= temp10590_100 temp10590_99))
(assert (= temp10590_101 (select ARGNAME_stride_NAMEEND_VAL temp10590_100)))
(assert (= temp10590_102 #x0000000000000003))
(assert (= temp10590_103 temp10590_102))
(assert (= temp10590_104 (select ARGNAME_stride_NAMEEND_VAL temp10590_103)))
(assert (= temp10590_105 #x0000000000000004))
(assert (= temp10590_106 temp10590_105))
(assert (= temp10590_107 (select ARGNAME_stride_NAMEEND_VAL temp10590_106)))
(assert (= temp10590_108 #x0000000000000005))
(assert (= temp10590_109 temp10590_108))
(assert (= temp10590_110 (select ARGNAME_stride_NAMEEND_VAL temp10590_109)))
(assert (= temp10590_111 #x0000000000000000))
(assert (= temp10590_112 #x0000000000000000))
(assert (= temp10590_113 temp10590_112))
(assert (= temp10590_114 (select ARGNAME_stride_NAMEEND_VAL temp10590_113)))
(assert (= temp10590_115 #x0000000000000000))
(assert (= temp10590_116 #x0000000000000001))
(assert (= temp10590_117 temp10590_116))
(assert (= temp10590_118 (select ARGNAME_stride_NAMEEND_VAL temp10590_117)))
(assert (= temp10590_119 #x0000000000000000))
(assert (= temp10590_120 #x0000000000000002))
(assert (= temp10590_121 temp10590_120))
(assert (= temp10590_122 (select ARGNAME_stride_NAMEEND_VAL temp10590_121)))
(assert (= temp10590_123 #x0000000000000000))
(assert (= temp10590_124 #x0000000000000003))
(assert (= temp10590_125 temp10590_124))
(assert (= temp10590_126 (select ARGNAME_stride_NAMEEND_VAL temp10590_125)))
(assert (= temp10590_127 #x0000000000000000))
(assert (= temp10590_128 #x0000000000000004))
(assert (= temp10590_129 temp10590_128))
(assert (= temp10590_130 (select ARGNAME_stride_NAMEEND_VAL temp10590_129)))
(assert (= temp10590_131 #x0000000000000000))
(assert (= temp10590_132 #x0000000000000005))
(assert (= temp10590_133 temp10590_132))
(assert (= temp10590_134 (select ARGNAME_stride_NAMEEND_VAL temp10590_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10590_114 temp10590_111)
             (bvsle temp10590_118 temp10590_115)
             (bvsle temp10590_122 temp10590_119)
             (bvsle temp10590_126 temp10590_123)
             (bvsle temp10590_130 temp10590_127)
             (bvsle temp10590_134 temp10590_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10590_135 #x0000000000000000))
(assert (= var1191735 temp10590_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10590_136 #x0000000000000001))
(assert (= var1191747 temp10590_136))
(assert (= temp10590_137 #x0000000000000000))
(assert (= var1179826 temp10590_137))
(assert (= temp10590_138 #x0000000000000000))
(assert (= temp10590_139 temp10590_138))
(assert (= temp10590_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10590_139)))
(assert (= temp10590_141 #x0000000000000001))
(assert (= temp10590_142 temp10590_141))
(assert (= temp10590_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10590_142)))
(assert (= temp10590_144 #x0000000000000002))
(assert (= temp10590_145 temp10590_144))
(assert (= temp10590_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10590_145)))
(assert (= temp10590_147 #x0000000000000003))
(assert (= temp10590_148 temp10590_147))
(assert (= temp10590_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10590_148)))
(assert (= temp10590_150 #x0000000000000004))
(assert (= temp10590_151 temp10590_150))
(assert (= temp10590_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10590_151)))
(assert (= temp10590_153 #x0000000000000005))
(assert (= temp10590_154 temp10590_153))
(assert (= temp10590_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10590_154)))
(assert (= temp10590_157 var1179826))
(assert (= temp10590_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10590_157)))
(assert (= temp10590_156 temp10590_158))
(assert (= var1191780
   (ite (bvslt temp10590_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10590_159 #x0000000000000000))
(assert (= var1191780 temp10590_159))
(assert (= temp10590_160 #x0000000000000000))
(assert (= var1179826 temp10590_160))
(assert (= temp10590_162 var1179826))
(assert (= temp10590_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10590_162)))
(assert (= temp10590_161 temp10590_163))
(assert (= var1191802 (bvsmod temp10590_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10590_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10590_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10590_165 #x0000000000000001))
(assert (= var1191803 temp10590_165))
(assert (= temp10590_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10590_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10590_167 #x0000000000000001))
(assert (= var1191823 temp10590_167))
(assert (= temp10590_168 #x0000000000000001))
(assert (= var1180714 temp10590_168))
(assert (= temp10590_169 #x0000000000000000))
(assert (= temp10590_170 temp10590_169))
(assert (= temp10590_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10590_170)))
(assert (= temp10590_172 #x0000000000000001))
(assert (= temp10590_173 temp10590_172))
(assert (= temp10590_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10590_173)))
(assert (= temp10590_175 #x0000000000000002))
(assert (= temp10590_176 temp10590_175))
(assert (= temp10590_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10590_176)))
(assert (= temp10590_178 #x0000000000000003))
(assert (= temp10590_179 temp10590_178))
(assert (= temp10590_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10590_179)))
(assert (= temp10590_181 #x0000000000000004))
(assert (= temp10590_182 temp10590_181))
(assert (= temp10590_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10590_182)))
(assert (= temp10590_184 #x0000000000000005))
(assert (= temp10590_185 temp10590_184))
(assert (= temp10590_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10590_185)))
(assert (= temp10590_187 #x0000000000000000))
(assert (= temp10590_188
   (ite (bvslt var1180714 temp10590_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10590_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10590_188)))
(assert (= var1191831 temp10590_189))
(assert (bvslt (ite (bvslt var1180714 temp10590_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10590_190 #x0000000000000001))
(assert (= var1180714 temp10590_190))
(assert (= temp10590_192 var1180714))
(assert (= temp10590_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10590_192)))
(assert (= temp10590_191 temp10590_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10590_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10590_194 #x0000000000000001))
(assert (= var1191836 temp10590_194))
(assert (= temp10590_195 #x0000000000000000))
(assert (= var1179826 temp10590_195))
(assert (= temp10590_197 var1179826))
(assert (= temp10590_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10590_197)))
(assert (= temp10590_196 temp10590_198))
(assert (= temp10590_199 #x0000000000000002))
(assert (= var1586025 temp10590_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10590_200 #x0000000000000001))
(assert (= var1191993 temp10590_200))
(assert (= temp10590_201 #x0000000000000001))
(assert (= var2700303 temp10590_201))
(assert (= temp10590_202 #x0000000000000001))
(assert (= var2962447 temp10590_202))
(assert (= temp10590_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10590_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10590_204 #x0000000000000001))
(assert (= var211058 temp10590_204))
(assert (= temp10590_205 #x0000000000000001))
(assert (= var211188 temp10590_205))
(assert (= var3879401 var211188))
(assert (= temp10590_206 #x0000000000000000))
(assert (= var3866802 temp10590_206))
(assert (= temp10590_207 #x0000000000000000))
(assert (= temp10590_208
   (ite (bvslt var3866802 temp10590_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10590_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10590_208)))
(assert (= var3879420 temp10590_209))
(assert (bvslt (ite (bvslt var3866802 temp10590_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10590_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10590_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10590_211 #x0000000000000000))
(assert (= var3879421 temp10590_211))
(assert (= temp10590_212 #x0000000000000001))
(assert (= var3867690 temp10590_212))
(assert (= temp10590_213 #x0000000000000000))
(assert (= temp10590_214
   (ite (bvslt var3867690 temp10590_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10590_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10590_214)))
(assert (= var3879423 temp10590_215))
(assert (bvslt (ite (bvslt var3867690 temp10590_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10590_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10590_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10590_217 #x0000000000000001))
(assert (= var3879424 temp10590_217))
(assert (= temp10590_218 #x0000000000000000))
(assert (= var4133117 temp10590_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10590_219 #x0000000000000002))
(assert (= var4339331 temp10590_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10590_220 #x0000000000000000))
(assert (= var4404892 temp10590_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var4927888 var211201))
(assert (= var211494 var210913))
(assert (= temp10590_221 #x0000000000000000))
(assert (= var211495
   (ite (distinct var211494 temp10590_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10590_222 #x0000000000000001))
(assert (= var211058 temp10590_222))
(model-add temp10590_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10590_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10590_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10590_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




