(declare-fun temp10573_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10573_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10573_3 () (_ BitVec 64))
(declare-fun temp10573_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10573_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10573_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10573_7 () (_ BitVec 64))
(declare-fun temp10573_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10573_9 () (_ BitVec 64))
(declare-fun temp10573_10 () (_ BitVec 64))
(declare-fun temp10573_11 () (_ BitVec 64))
(declare-fun temp10573_12 () (_ BitVec 64))
(declare-fun temp10573_13 () (_ BitVec 64))
(declare-fun temp10573_14 () (_ BitVec 64))
(declare-fun temp10573_15 () (_ BitVec 64))
(declare-fun temp10573_16 () (_ BitVec 64))
(declare-fun temp10573_17 () (_ BitVec 64))
(declare-fun temp10573_18 () (_ BitVec 64))
(declare-fun temp10573_19 () (_ BitVec 64))
(declare-fun temp10573_20 () (_ BitVec 64))
(declare-fun temp10573_21 () (_ BitVec 64))
(declare-fun temp10573_22 () (_ BitVec 64))
(declare-fun temp10573_23 () (_ BitVec 64))
(declare-fun temp10573_24 () (_ BitVec 64))
(declare-fun temp10573_25 () (_ BitVec 64))
(declare-fun temp10573_26 () (_ BitVec 64))
(declare-fun temp10573_27 () (_ BitVec 64))
(declare-fun temp10573_28 () (_ BitVec 64))
(declare-fun temp10573_29 () (_ BitVec 64))
(declare-fun temp10573_30 () (_ BitVec 64))
(declare-fun temp10573_31 () (_ BitVec 64))
(declare-fun temp10573_32 () (_ BitVec 64))
(declare-fun temp10573_33 () (_ BitVec 64))
(declare-fun temp10573_34 () (_ BitVec 64))
(declare-fun temp10573_35 () (_ BitVec 64))
(declare-fun temp10573_36 () (_ BitVec 64))
(declare-fun temp10573_37 () (_ BitVec 64))
(declare-fun temp10573_38 () (_ BitVec 64))
(declare-fun temp10573_39 () (_ BitVec 64))
(declare-fun temp10573_40 () (_ BitVec 64))
(declare-fun temp10573_41 () (_ BitVec 64))
(declare-fun temp10573_42 () (_ BitVec 64))
(declare-fun temp10573_43 () (_ BitVec 64))
(declare-fun temp10573_44 () (_ BitVec 64))
(declare-fun temp10573_45 () (_ BitVec 64))
(declare-fun temp10573_46 () (_ BitVec 64))
(declare-fun temp10573_47 () (_ BitVec 64))
(declare-fun temp10573_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10573_49 () (_ BitVec 64))
(declare-fun temp10573_50 () (_ BitVec 64))
(declare-fun temp10573_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10573_52 () (_ BitVec 64))
(declare-fun temp10573_53 () (_ BitVec 64))
(declare-fun temp10573_54 () (_ BitVec 64))
(declare-fun temp10573_55 () (_ BitVec 64))
(declare-fun temp10573_56 () (_ BitVec 64))
(declare-fun temp10573_57 () (_ BitVec 64))
(declare-fun temp10573_58 () (_ BitVec 64))
(declare-fun temp10573_59 () (_ BitVec 64))
(declare-fun temp10573_60 () (_ BitVec 64))
(declare-fun temp10573_61 () (_ BitVec 64))
(declare-fun temp10573_62 () (_ BitVec 64))
(declare-fun temp10573_63 () (_ BitVec 64))
(declare-fun temp10573_64 () (_ BitVec 64))
(declare-fun temp10573_65 () (_ BitVec 64))
(declare-fun temp10573_66 () (_ BitVec 64))
(declare-fun temp10573_67 () (_ BitVec 64))
(declare-fun temp10573_68 () (_ BitVec 64))
(declare-fun temp10573_69 () (_ BitVec 64))
(declare-fun temp10573_70 () (_ BitVec 64))
(declare-fun temp10573_71 () (_ BitVec 64))
(declare-fun temp10573_72 () (_ BitVec 64))
(declare-fun temp10573_73 () (_ BitVec 64))
(declare-fun temp10573_74 () (_ BitVec 64))
(declare-fun temp10573_75 () (_ BitVec 64))
(declare-fun temp10573_76 () (_ BitVec 64))
(declare-fun temp10573_77 () (_ BitVec 64))
(declare-fun temp10573_78 () (_ BitVec 64))
(declare-fun temp10573_79 () (_ BitVec 64))
(declare-fun temp10573_80 () (_ BitVec 64))
(declare-fun temp10573_81 () (_ BitVec 64))
(declare-fun temp10573_82 () (_ BitVec 64))
(declare-fun temp10573_83 () (_ BitVec 64))
(declare-fun temp10573_84 () (_ BitVec 64))
(declare-fun temp10573_85 () (_ BitVec 64))
(declare-fun temp10573_86 () (_ BitVec 64))
(declare-fun temp10573_87 () (_ BitVec 64))
(declare-fun temp10573_88 () (_ BitVec 64))
(declare-fun temp10573_89 () (_ BitVec 64))
(declare-fun temp10573_90 () (_ BitVec 64))
(declare-fun temp10573_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10573_92 () (_ BitVec 64))
(declare-fun temp10573_93 () (_ BitVec 64))
(declare-fun temp10573_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10573_95 () (_ BitVec 64))
(declare-fun temp10573_96 () (_ BitVec 64))
(declare-fun temp10573_97 () (_ BitVec 64))
(declare-fun temp10573_98 () (_ BitVec 64))
(declare-fun temp10573_99 () (_ BitVec 64))
(declare-fun temp10573_100 () (_ BitVec 64))
(declare-fun temp10573_101 () (_ BitVec 64))
(declare-fun temp10573_102 () (_ BitVec 64))
(declare-fun temp10573_103 () (_ BitVec 64))
(declare-fun temp10573_104 () (_ BitVec 64))
(declare-fun temp10573_105 () (_ BitVec 64))
(declare-fun temp10573_106 () (_ BitVec 64))
(declare-fun temp10573_107 () (_ BitVec 64))
(declare-fun temp10573_108 () (_ BitVec 64))
(declare-fun temp10573_109 () (_ BitVec 64))
(declare-fun temp10573_110 () (_ BitVec 64))
(declare-fun temp10573_111 () (_ BitVec 64))
(declare-fun temp10573_112 () (_ BitVec 64))
(declare-fun temp10573_113 () (_ BitVec 64))
(declare-fun temp10573_114 () (_ BitVec 64))
(declare-fun temp10573_115 () (_ BitVec 64))
(declare-fun temp10573_116 () (_ BitVec 64))
(declare-fun temp10573_117 () (_ BitVec 64))
(declare-fun temp10573_118 () (_ BitVec 64))
(declare-fun temp10573_119 () (_ BitVec 64))
(declare-fun temp10573_120 () (_ BitVec 64))
(declare-fun temp10573_121 () (_ BitVec 64))
(declare-fun temp10573_122 () (_ BitVec 64))
(declare-fun temp10573_123 () (_ BitVec 64))
(declare-fun temp10573_124 () (_ BitVec 64))
(declare-fun temp10573_125 () (_ BitVec 64))
(declare-fun temp10573_126 () (_ BitVec 64))
(declare-fun temp10573_127 () (_ BitVec 64))
(declare-fun temp10573_128 () (_ BitVec 64))
(declare-fun temp10573_129 () (_ BitVec 64))
(declare-fun temp10573_130 () (_ BitVec 64))
(declare-fun temp10573_131 () (_ BitVec 64))
(declare-fun temp10573_132 () (_ BitVec 64))
(declare-fun temp10573_133 () (_ BitVec 64))
(declare-fun temp10573_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10573_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10573_136 () (_ BitVec 64))
(declare-fun temp10573_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10573_138 () (_ BitVec 64))
(declare-fun temp10573_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10573_140 () (_ BitVec 64))
(declare-fun temp10573_141 () (_ BitVec 64))
(declare-fun temp10573_142 () (_ BitVec 64))
(declare-fun temp10573_143 () (_ BitVec 64))
(declare-fun temp10573_144 () (_ BitVec 64))
(declare-fun temp10573_145 () (_ BitVec 64))
(declare-fun temp10573_146 () (_ BitVec 64))
(declare-fun temp10573_147 () (_ BitVec 64))
(declare-fun temp10573_148 () (_ BitVec 64))
(declare-fun temp10573_149 () (_ BitVec 64))
(declare-fun temp10573_150 () (_ BitVec 64))
(declare-fun temp10573_151 () (_ BitVec 64))
(declare-fun temp10573_152 () (_ BitVec 64))
(declare-fun temp10573_153 () (_ BitVec 64))
(declare-fun temp10573_154 () (_ BitVec 64))
(declare-fun temp10573_155 () (_ BitVec 64))
(declare-fun temp10573_157 () (_ BitVec 64))
(declare-fun temp10573_158 () (_ BitVec 64))
(declare-fun temp10573_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10573_159 () (_ BitVec 64))
(declare-fun temp10573_160 () (_ BitVec 64))
(declare-fun temp10573_162 () (_ BitVec 64))
(declare-fun temp10573_163 () (_ BitVec 64))
(declare-fun temp10573_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10573_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10573_165 () (_ BitVec 64))
(declare-fun temp10573_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10573_167 () (_ BitVec 64))
(declare-fun temp10573_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10573_169 () (_ BitVec 64))
(declare-fun temp10573_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10573_171 () (_ BitVec 64))
(declare-fun temp10573_172 () (_ BitVec 64))
(declare-fun temp10573_173 () (_ BitVec 64))
(declare-fun temp10573_174 () (_ BitVec 64))
(declare-fun temp10573_175 () (_ BitVec 64))
(declare-fun temp10573_176 () (_ BitVec 64))
(declare-fun temp10573_177 () (_ BitVec 64))
(declare-fun temp10573_178 () (_ BitVec 64))
(declare-fun temp10573_179 () (_ BitVec 64))
(declare-fun temp10573_180 () (_ BitVec 64))
(declare-fun temp10573_181 () (_ BitVec 64))
(declare-fun temp10573_182 () (_ BitVec 64))
(declare-fun temp10573_183 () (_ BitVec 64))
(declare-fun temp10573_184 () (_ BitVec 64))
(declare-fun temp10573_185 () (_ BitVec 64))
(declare-fun temp10573_186 () (_ BitVec 64))
(declare-fun temp10573_187 () (_ BitVec 64))
(declare-fun temp10573_188 () (_ BitVec 64))
(declare-fun temp10573_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10573_190 () (_ BitVec 64))
(declare-fun temp10573_192 () (_ BitVec 64))
(declare-fun temp10573_193 () (_ BitVec 64))
(declare-fun temp10573_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10573_194 () (_ BitVec 64))
(declare-fun temp10573_195 () (_ BitVec 64))
(declare-fun temp10573_197 () (_ BitVec 64))
(declare-fun temp10573_198 () (_ BitVec 64))
(declare-fun temp10573_196 () (_ BitVec 64))
(declare-fun temp10573_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10573_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10573_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10573_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10573_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10573_204 () (_ BitVec 64))
(declare-fun temp10573_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10573_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10573_207 () (_ BitVec 64))
(declare-fun temp10573_208 () (_ BitVec 64))
(declare-fun temp10573_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10573_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10573_211 () (_ BitVec 64))
(declare-fun temp10573_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10573_213 () (_ BitVec 64))
(declare-fun temp10573_214 () (_ BitVec 64))
(declare-fun temp10573_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10573_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10573_217 () (_ BitVec 64))
(declare-fun temp10573_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10573_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10573_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var5124496 () (_ BitVec 64))
(declare-fun var211494 () (_ BitVec 64))
(declare-fun temp10573_221 () (_ BitVec 64))
(declare-fun var211495 () (_ BitVec 64))
(declare-fun temp10573_222 () (_ BitVec 64))
(assert (= temp10573_1 #x0000000000000001))
(assert (= var77203 temp10573_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10573_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10573_2)))
(assert (= temp10573_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10573_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10573_4 #x0000000000000000))
(assert (= var210941 temp10573_4))
(assert (= temp10573_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10573_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10573_6 #x0000000000000000))
(assert (= var210986 temp10573_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10573_7 #x0000000000000000))
(assert (= temp10573_8 temp10573_7))
(assert (= temp10573_9 (select ARGNAME_padding_NAMEEND_VAL temp10573_8)))
(assert (= temp10573_10 #x0000000000000001))
(assert (= temp10573_11 temp10573_10))
(assert (= temp10573_12 (select ARGNAME_padding_NAMEEND_VAL temp10573_11)))
(assert (= temp10573_13 #x0000000000000002))
(assert (= temp10573_14 temp10573_13))
(assert (= temp10573_15 (select ARGNAME_padding_NAMEEND_VAL temp10573_14)))
(assert (= temp10573_16 #x0000000000000003))
(assert (= temp10573_17 temp10573_16))
(assert (= temp10573_18 (select ARGNAME_padding_NAMEEND_VAL temp10573_17)))
(assert (= temp10573_19 #x0000000000000004))
(assert (= temp10573_20 temp10573_19))
(assert (= temp10573_21 (select ARGNAME_padding_NAMEEND_VAL temp10573_20)))
(assert (= temp10573_22 #x0000000000000005))
(assert (= temp10573_23 temp10573_22))
(assert (= temp10573_24 (select ARGNAME_padding_NAMEEND_VAL temp10573_23)))
(assert (= temp10573_25 #x0000000000000000))
(assert (= temp10573_26 #x0000000000000000))
(assert (= temp10573_27 temp10573_26))
(assert (= temp10573_28 (select ARGNAME_padding_NAMEEND_VAL temp10573_27)))
(assert (= temp10573_29 #x0000000000000000))
(assert (= temp10573_30 #x0000000000000001))
(assert (= temp10573_31 temp10573_30))
(assert (= temp10573_32 (select ARGNAME_padding_NAMEEND_VAL temp10573_31)))
(assert (= temp10573_33 #x0000000000000000))
(assert (= temp10573_34 #x0000000000000002))
(assert (= temp10573_35 temp10573_34))
(assert (= temp10573_36 (select ARGNAME_padding_NAMEEND_VAL temp10573_35)))
(assert (= temp10573_37 #x0000000000000000))
(assert (= temp10573_38 #x0000000000000003))
(assert (= temp10573_39 temp10573_38))
(assert (= temp10573_40 (select ARGNAME_padding_NAMEEND_VAL temp10573_39)))
(assert (= temp10573_41 #x0000000000000000))
(assert (= temp10573_42 #x0000000000000004))
(assert (= temp10573_43 temp10573_42))
(assert (= temp10573_44 (select ARGNAME_padding_NAMEEND_VAL temp10573_43)))
(assert (= temp10573_45 #x0000000000000000))
(assert (= temp10573_46 #x0000000000000005))
(assert (= temp10573_47 temp10573_46))
(assert (= temp10573_48 (select ARGNAME_padding_NAMEEND_VAL temp10573_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10573_28 temp10573_25)
             (bvslt temp10573_32 temp10573_29)
             (bvslt temp10573_36 temp10573_33)
             (bvslt temp10573_40 temp10573_37)
             (bvslt temp10573_44 temp10573_41)
             (bvslt temp10573_48 temp10573_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10573_49 #x0000000000000000))
(assert (= var1191714 temp10573_49))
(assert (= temp10573_50 #x0000000000000000))
(assert (= temp10573_51 temp10573_50))
(assert (= temp10573_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10573_51)))
(assert (= temp10573_53 #x0000000000000001))
(assert (= temp10573_54 temp10573_53))
(assert (= temp10573_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10573_54)))
(assert (= temp10573_56 #x0000000000000002))
(assert (= temp10573_57 temp10573_56))
(assert (= temp10573_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10573_57)))
(assert (= temp10573_59 #x0000000000000003))
(assert (= temp10573_60 temp10573_59))
(assert (= temp10573_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10573_60)))
(assert (= temp10573_62 #x0000000000000004))
(assert (= temp10573_63 temp10573_62))
(assert (= temp10573_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10573_63)))
(assert (= temp10573_65 #x0000000000000005))
(assert (= temp10573_66 temp10573_65))
(assert (= temp10573_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10573_66)))
(assert (= temp10573_68 #x0000000000000000))
(assert (= temp10573_69 #x0000000000000000))
(assert (= temp10573_70 temp10573_69))
(assert (= temp10573_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10573_70)))
(assert (= temp10573_72 #x0000000000000000))
(assert (= temp10573_73 #x0000000000000001))
(assert (= temp10573_74 temp10573_73))
(assert (= temp10573_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10573_74)))
(assert (= temp10573_76 #x0000000000000000))
(assert (= temp10573_77 #x0000000000000002))
(assert (= temp10573_78 temp10573_77))
(assert (= temp10573_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10573_78)))
(assert (= temp10573_80 #x0000000000000000))
(assert (= temp10573_81 #x0000000000000003))
(assert (= temp10573_82 temp10573_81))
(assert (= temp10573_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10573_82)))
(assert (= temp10573_84 #x0000000000000000))
(assert (= temp10573_85 #x0000000000000004))
(assert (= temp10573_86 temp10573_85))
(assert (= temp10573_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10573_86)))
(assert (= temp10573_88 #x0000000000000000))
(assert (= temp10573_89 #x0000000000000005))
(assert (= temp10573_90 temp10573_89))
(assert (= temp10573_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10573_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10573_71 temp10573_68)
             (bvslt temp10573_75 temp10573_72)
             (bvslt temp10573_79 temp10573_76)
             (bvslt temp10573_83 temp10573_80)
             (bvslt temp10573_87 temp10573_84)
             (bvslt temp10573_91 temp10573_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10573_92 #x0000000000000000))
(assert (= var1191725 temp10573_92))
(assert (= temp10573_93 #x0000000000000000))
(assert (= temp10573_94 temp10573_93))
(assert (= temp10573_95 (select ARGNAME_stride_NAMEEND_VAL temp10573_94)))
(assert (= temp10573_96 #x0000000000000001))
(assert (= temp10573_97 temp10573_96))
(assert (= temp10573_98 (select ARGNAME_stride_NAMEEND_VAL temp10573_97)))
(assert (= temp10573_99 #x0000000000000002))
(assert (= temp10573_100 temp10573_99))
(assert (= temp10573_101 (select ARGNAME_stride_NAMEEND_VAL temp10573_100)))
(assert (= temp10573_102 #x0000000000000003))
(assert (= temp10573_103 temp10573_102))
(assert (= temp10573_104 (select ARGNAME_stride_NAMEEND_VAL temp10573_103)))
(assert (= temp10573_105 #x0000000000000004))
(assert (= temp10573_106 temp10573_105))
(assert (= temp10573_107 (select ARGNAME_stride_NAMEEND_VAL temp10573_106)))
(assert (= temp10573_108 #x0000000000000005))
(assert (= temp10573_109 temp10573_108))
(assert (= temp10573_110 (select ARGNAME_stride_NAMEEND_VAL temp10573_109)))
(assert (= temp10573_111 #x0000000000000000))
(assert (= temp10573_112 #x0000000000000000))
(assert (= temp10573_113 temp10573_112))
(assert (= temp10573_114 (select ARGNAME_stride_NAMEEND_VAL temp10573_113)))
(assert (= temp10573_115 #x0000000000000000))
(assert (= temp10573_116 #x0000000000000001))
(assert (= temp10573_117 temp10573_116))
(assert (= temp10573_118 (select ARGNAME_stride_NAMEEND_VAL temp10573_117)))
(assert (= temp10573_119 #x0000000000000000))
(assert (= temp10573_120 #x0000000000000002))
(assert (= temp10573_121 temp10573_120))
(assert (= temp10573_122 (select ARGNAME_stride_NAMEEND_VAL temp10573_121)))
(assert (= temp10573_123 #x0000000000000000))
(assert (= temp10573_124 #x0000000000000003))
(assert (= temp10573_125 temp10573_124))
(assert (= temp10573_126 (select ARGNAME_stride_NAMEEND_VAL temp10573_125)))
(assert (= temp10573_127 #x0000000000000000))
(assert (= temp10573_128 #x0000000000000004))
(assert (= temp10573_129 temp10573_128))
(assert (= temp10573_130 (select ARGNAME_stride_NAMEEND_VAL temp10573_129)))
(assert (= temp10573_131 #x0000000000000000))
(assert (= temp10573_132 #x0000000000000005))
(assert (= temp10573_133 temp10573_132))
(assert (= temp10573_134 (select ARGNAME_stride_NAMEEND_VAL temp10573_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10573_114 temp10573_111)
             (bvsle temp10573_118 temp10573_115)
             (bvsle temp10573_122 temp10573_119)
             (bvsle temp10573_126 temp10573_123)
             (bvsle temp10573_130 temp10573_127)
             (bvsle temp10573_134 temp10573_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10573_135 #x0000000000000000))
(assert (= var1191735 temp10573_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10573_136 #x0000000000000001))
(assert (= var1191747 temp10573_136))
(assert (= temp10573_137 #x0000000000000000))
(assert (= var1179826 temp10573_137))
(assert (= temp10573_138 #x0000000000000000))
(assert (= temp10573_139 temp10573_138))
(assert (= temp10573_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10573_139)))
(assert (= temp10573_141 #x0000000000000001))
(assert (= temp10573_142 temp10573_141))
(assert (= temp10573_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10573_142)))
(assert (= temp10573_144 #x0000000000000002))
(assert (= temp10573_145 temp10573_144))
(assert (= temp10573_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10573_145)))
(assert (= temp10573_147 #x0000000000000003))
(assert (= temp10573_148 temp10573_147))
(assert (= temp10573_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10573_148)))
(assert (= temp10573_150 #x0000000000000004))
(assert (= temp10573_151 temp10573_150))
(assert (= temp10573_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10573_151)))
(assert (= temp10573_153 #x0000000000000005))
(assert (= temp10573_154 temp10573_153))
(assert (= temp10573_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10573_154)))
(assert (= temp10573_157 var1179826))
(assert (= temp10573_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10573_157)))
(assert (= temp10573_156 temp10573_158))
(assert (= var1191780
   (ite (bvslt temp10573_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10573_159 #x0000000000000000))
(assert (= var1191780 temp10573_159))
(assert (= temp10573_160 #x0000000000000000))
(assert (= var1179826 temp10573_160))
(assert (= temp10573_162 var1179826))
(assert (= temp10573_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10573_162)))
(assert (= temp10573_161 temp10573_163))
(assert (= var1191802 (bvsmod temp10573_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10573_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10573_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10573_165 #x0000000000000001))
(assert (= var1191803 temp10573_165))
(assert (= temp10573_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10573_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10573_167 #x0000000000000001))
(assert (= var1191823 temp10573_167))
(assert (= temp10573_168 #x0000000000000001))
(assert (= var1180714 temp10573_168))
(assert (= temp10573_169 #x0000000000000000))
(assert (= temp10573_170 temp10573_169))
(assert (= temp10573_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10573_170)))
(assert (= temp10573_172 #x0000000000000001))
(assert (= temp10573_173 temp10573_172))
(assert (= temp10573_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10573_173)))
(assert (= temp10573_175 #x0000000000000002))
(assert (= temp10573_176 temp10573_175))
(assert (= temp10573_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10573_176)))
(assert (= temp10573_178 #x0000000000000003))
(assert (= temp10573_179 temp10573_178))
(assert (= temp10573_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10573_179)))
(assert (= temp10573_181 #x0000000000000004))
(assert (= temp10573_182 temp10573_181))
(assert (= temp10573_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10573_182)))
(assert (= temp10573_184 #x0000000000000005))
(assert (= temp10573_185 temp10573_184))
(assert (= temp10573_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10573_185)))
(assert (= temp10573_187 #x0000000000000000))
(assert (= temp10573_188
   (ite (bvslt var1180714 temp10573_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10573_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10573_188)))
(assert (= var1191831 temp10573_189))
(assert (bvslt (ite (bvslt var1180714 temp10573_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10573_190 #x0000000000000001))
(assert (= var1180714 temp10573_190))
(assert (= temp10573_192 var1180714))
(assert (= temp10573_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10573_192)))
(assert (= temp10573_191 temp10573_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10573_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10573_194 #x0000000000000001))
(assert (= var1191836 temp10573_194))
(assert (= temp10573_195 #x0000000000000000))
(assert (= var1179826 temp10573_195))
(assert (= temp10573_197 var1179826))
(assert (= temp10573_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10573_197)))
(assert (= temp10573_196 temp10573_198))
(assert (= temp10573_199 #x0000000000000002))
(assert (= var1586025 temp10573_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10573_200 #x0000000000000001))
(assert (= var1191993 temp10573_200))
(assert (= temp10573_201 #x0000000000000001))
(assert (= var2700303 temp10573_201))
(assert (= temp10573_202 #x0000000000000001))
(assert (= var2962447 temp10573_202))
(assert (= temp10573_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10573_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10573_204 #x0000000000000001))
(assert (= var211058 temp10573_204))
(assert (= temp10573_205 #x0000000000000001))
(assert (= var211188 temp10573_205))
(assert (= var3879401 var211188))
(assert (= temp10573_206 #x0000000000000000))
(assert (= var3866802 temp10573_206))
(assert (= temp10573_207 #x0000000000000000))
(assert (= temp10573_208
   (ite (bvslt var3866802 temp10573_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10573_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10573_208)))
(assert (= var3879420 temp10573_209))
(assert (bvslt (ite (bvslt var3866802 temp10573_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10573_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10573_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10573_211 #x0000000000000000))
(assert (= var3879421 temp10573_211))
(assert (= temp10573_212 #x0000000000000001))
(assert (= var3867690 temp10573_212))
(assert (= temp10573_213 #x0000000000000000))
(assert (= temp10573_214
   (ite (bvslt var3867690 temp10573_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10573_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10573_214)))
(assert (= var3879423 temp10573_215))
(assert (bvslt (ite (bvslt var3867690 temp10573_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10573_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10573_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10573_217 #x0000000000000001))
(assert (= var3879424 temp10573_217))
(assert (= temp10573_218 #x0000000000000000))
(assert (= var4133117 temp10573_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10573_219 #x0000000000000002))
(assert (= var4339331 temp10573_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10573_220 #x0000000000000000))
(assert (= var4404892 temp10573_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var5124496 var211201))
(assert (= var211494 var210913))
(assert (= temp10573_221 #x0000000000000000))
(assert (= var211495
   (ite (distinct var211494 temp10573_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10573_222 #x0000000000000001))
(assert (= var211058 temp10573_222))
(model-add temp10573_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10573_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10573_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10573_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))



