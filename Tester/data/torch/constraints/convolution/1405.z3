(declare-fun temp10604_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10604_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10604_3 () (_ BitVec 64))
(declare-fun temp10604_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10604_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10604_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10604_7 () (_ BitVec 64))
(declare-fun temp10604_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10604_9 () (_ BitVec 64))
(declare-fun temp10604_10 () (_ BitVec 64))
(declare-fun temp10604_11 () (_ BitVec 64))
(declare-fun temp10604_12 () (_ BitVec 64))
(declare-fun temp10604_13 () (_ BitVec 64))
(declare-fun temp10604_14 () (_ BitVec 64))
(declare-fun temp10604_15 () (_ BitVec 64))
(declare-fun temp10604_16 () (_ BitVec 64))
(declare-fun temp10604_17 () (_ BitVec 64))
(declare-fun temp10604_18 () (_ BitVec 64))
(declare-fun temp10604_19 () (_ BitVec 64))
(declare-fun temp10604_20 () (_ BitVec 64))
(declare-fun temp10604_21 () (_ BitVec 64))
(declare-fun temp10604_22 () (_ BitVec 64))
(declare-fun temp10604_23 () (_ BitVec 64))
(declare-fun temp10604_24 () (_ BitVec 64))
(declare-fun temp10604_25 () (_ BitVec 64))
(declare-fun temp10604_26 () (_ BitVec 64))
(declare-fun temp10604_27 () (_ BitVec 64))
(declare-fun temp10604_28 () (_ BitVec 64))
(declare-fun temp10604_29 () (_ BitVec 64))
(declare-fun temp10604_30 () (_ BitVec 64))
(declare-fun temp10604_31 () (_ BitVec 64))
(declare-fun temp10604_32 () (_ BitVec 64))
(declare-fun temp10604_33 () (_ BitVec 64))
(declare-fun temp10604_34 () (_ BitVec 64))
(declare-fun temp10604_35 () (_ BitVec 64))
(declare-fun temp10604_36 () (_ BitVec 64))
(declare-fun temp10604_37 () (_ BitVec 64))
(declare-fun temp10604_38 () (_ BitVec 64))
(declare-fun temp10604_39 () (_ BitVec 64))
(declare-fun temp10604_40 () (_ BitVec 64))
(declare-fun temp10604_41 () (_ BitVec 64))
(declare-fun temp10604_42 () (_ BitVec 64))
(declare-fun temp10604_43 () (_ BitVec 64))
(declare-fun temp10604_44 () (_ BitVec 64))
(declare-fun temp10604_45 () (_ BitVec 64))
(declare-fun temp10604_46 () (_ BitVec 64))
(declare-fun temp10604_47 () (_ BitVec 64))
(declare-fun temp10604_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10604_49 () (_ BitVec 64))
(declare-fun temp10604_50 () (_ BitVec 64))
(declare-fun temp10604_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10604_52 () (_ BitVec 64))
(declare-fun temp10604_53 () (_ BitVec 64))
(declare-fun temp10604_54 () (_ BitVec 64))
(declare-fun temp10604_55 () (_ BitVec 64))
(declare-fun temp10604_56 () (_ BitVec 64))
(declare-fun temp10604_57 () (_ BitVec 64))
(declare-fun temp10604_58 () (_ BitVec 64))
(declare-fun temp10604_59 () (_ BitVec 64))
(declare-fun temp10604_60 () (_ BitVec 64))
(declare-fun temp10604_61 () (_ BitVec 64))
(declare-fun temp10604_62 () (_ BitVec 64))
(declare-fun temp10604_63 () (_ BitVec 64))
(declare-fun temp10604_64 () (_ BitVec 64))
(declare-fun temp10604_65 () (_ BitVec 64))
(declare-fun temp10604_66 () (_ BitVec 64))
(declare-fun temp10604_67 () (_ BitVec 64))
(declare-fun temp10604_68 () (_ BitVec 64))
(declare-fun temp10604_69 () (_ BitVec 64))
(declare-fun temp10604_70 () (_ BitVec 64))
(declare-fun temp10604_71 () (_ BitVec 64))
(declare-fun temp10604_72 () (_ BitVec 64))
(declare-fun temp10604_73 () (_ BitVec 64))
(declare-fun temp10604_74 () (_ BitVec 64))
(declare-fun temp10604_75 () (_ BitVec 64))
(declare-fun temp10604_76 () (_ BitVec 64))
(declare-fun temp10604_77 () (_ BitVec 64))
(declare-fun temp10604_78 () (_ BitVec 64))
(declare-fun temp10604_79 () (_ BitVec 64))
(declare-fun temp10604_80 () (_ BitVec 64))
(declare-fun temp10604_81 () (_ BitVec 64))
(declare-fun temp10604_82 () (_ BitVec 64))
(declare-fun temp10604_83 () (_ BitVec 64))
(declare-fun temp10604_84 () (_ BitVec 64))
(declare-fun temp10604_85 () (_ BitVec 64))
(declare-fun temp10604_86 () (_ BitVec 64))
(declare-fun temp10604_87 () (_ BitVec 64))
(declare-fun temp10604_88 () (_ BitVec 64))
(declare-fun temp10604_89 () (_ BitVec 64))
(declare-fun temp10604_90 () (_ BitVec 64))
(declare-fun temp10604_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10604_92 () (_ BitVec 64))
(declare-fun temp10604_93 () (_ BitVec 64))
(declare-fun temp10604_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10604_95 () (_ BitVec 64))
(declare-fun temp10604_96 () (_ BitVec 64))
(declare-fun temp10604_97 () (_ BitVec 64))
(declare-fun temp10604_98 () (_ BitVec 64))
(declare-fun temp10604_99 () (_ BitVec 64))
(declare-fun temp10604_100 () (_ BitVec 64))
(declare-fun temp10604_101 () (_ BitVec 64))
(declare-fun temp10604_102 () (_ BitVec 64))
(declare-fun temp10604_103 () (_ BitVec 64))
(declare-fun temp10604_104 () (_ BitVec 64))
(declare-fun temp10604_105 () (_ BitVec 64))
(declare-fun temp10604_106 () (_ BitVec 64))
(declare-fun temp10604_107 () (_ BitVec 64))
(declare-fun temp10604_108 () (_ BitVec 64))
(declare-fun temp10604_109 () (_ BitVec 64))
(declare-fun temp10604_110 () (_ BitVec 64))
(declare-fun temp10604_111 () (_ BitVec 64))
(declare-fun temp10604_112 () (_ BitVec 64))
(declare-fun temp10604_113 () (_ BitVec 64))
(declare-fun temp10604_114 () (_ BitVec 64))
(declare-fun temp10604_115 () (_ BitVec 64))
(declare-fun temp10604_116 () (_ BitVec 64))
(declare-fun temp10604_117 () (_ BitVec 64))
(declare-fun temp10604_118 () (_ BitVec 64))
(declare-fun temp10604_119 () (_ BitVec 64))
(declare-fun temp10604_120 () (_ BitVec 64))
(declare-fun temp10604_121 () (_ BitVec 64))
(declare-fun temp10604_122 () (_ BitVec 64))
(declare-fun temp10604_123 () (_ BitVec 64))
(declare-fun temp10604_124 () (_ BitVec 64))
(declare-fun temp10604_125 () (_ BitVec 64))
(declare-fun temp10604_126 () (_ BitVec 64))
(declare-fun temp10604_127 () (_ BitVec 64))
(declare-fun temp10604_128 () (_ BitVec 64))
(declare-fun temp10604_129 () (_ BitVec 64))
(declare-fun temp10604_130 () (_ BitVec 64))
(declare-fun temp10604_131 () (_ BitVec 64))
(declare-fun temp10604_132 () (_ BitVec 64))
(declare-fun temp10604_133 () (_ BitVec 64))
(declare-fun temp10604_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10604_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10604_136 () (_ BitVec 64))
(declare-fun temp10604_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10604_138 () (_ BitVec 64))
(declare-fun temp10604_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10604_140 () (_ BitVec 64))
(declare-fun temp10604_141 () (_ BitVec 64))
(declare-fun temp10604_142 () (_ BitVec 64))
(declare-fun temp10604_143 () (_ BitVec 64))
(declare-fun temp10604_144 () (_ BitVec 64))
(declare-fun temp10604_145 () (_ BitVec 64))
(declare-fun temp10604_146 () (_ BitVec 64))
(declare-fun temp10604_147 () (_ BitVec 64))
(declare-fun temp10604_148 () (_ BitVec 64))
(declare-fun temp10604_149 () (_ BitVec 64))
(declare-fun temp10604_150 () (_ BitVec 64))
(declare-fun temp10604_151 () (_ BitVec 64))
(declare-fun temp10604_152 () (_ BitVec 64))
(declare-fun temp10604_153 () (_ BitVec 64))
(declare-fun temp10604_154 () (_ BitVec 64))
(declare-fun temp10604_155 () (_ BitVec 64))
(declare-fun temp10604_157 () (_ BitVec 64))
(declare-fun temp10604_158 () (_ BitVec 64))
(declare-fun temp10604_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10604_159 () (_ BitVec 64))
(declare-fun temp10604_160 () (_ BitVec 64))
(declare-fun temp10604_162 () (_ BitVec 64))
(declare-fun temp10604_163 () (_ BitVec 64))
(declare-fun temp10604_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10604_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10604_165 () (_ BitVec 64))
(declare-fun temp10604_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10604_167 () (_ BitVec 64))
(declare-fun temp10604_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10604_169 () (_ BitVec 64))
(declare-fun temp10604_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10604_171 () (_ BitVec 64))
(declare-fun temp10604_172 () (_ BitVec 64))
(declare-fun temp10604_173 () (_ BitVec 64))
(declare-fun temp10604_174 () (_ BitVec 64))
(declare-fun temp10604_175 () (_ BitVec 64))
(declare-fun temp10604_176 () (_ BitVec 64))
(declare-fun temp10604_177 () (_ BitVec 64))
(declare-fun temp10604_178 () (_ BitVec 64))
(declare-fun temp10604_179 () (_ BitVec 64))
(declare-fun temp10604_180 () (_ BitVec 64))
(declare-fun temp10604_181 () (_ BitVec 64))
(declare-fun temp10604_182 () (_ BitVec 64))
(declare-fun temp10604_183 () (_ BitVec 64))
(declare-fun temp10604_184 () (_ BitVec 64))
(declare-fun temp10604_185 () (_ BitVec 64))
(declare-fun temp10604_186 () (_ BitVec 64))
(declare-fun temp10604_187 () (_ BitVec 64))
(declare-fun temp10604_188 () (_ BitVec 64))
(declare-fun temp10604_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10604_190 () (_ BitVec 64))
(declare-fun temp10604_192 () (_ BitVec 64))
(declare-fun temp10604_193 () (_ BitVec 64))
(declare-fun temp10604_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10604_194 () (_ BitVec 64))
(declare-fun temp10604_195 () (_ BitVec 64))
(declare-fun temp10604_197 () (_ BitVec 64))
(declare-fun temp10604_198 () (_ BitVec 64))
(declare-fun temp10604_196 () (_ BitVec 64))
(declare-fun temp10604_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10604_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10604_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10604_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10604_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10604_204 () (_ BitVec 64))
(declare-fun temp10604_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10604_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10604_207 () (_ BitVec 64))
(declare-fun temp10604_208 () (_ BitVec 64))
(declare-fun temp10604_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10604_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10604_211 () (_ BitVec 64))
(declare-fun temp10604_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10604_213 () (_ BitVec 64))
(declare-fun temp10604_214 () (_ BitVec 64))
(declare-fun temp10604_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10604_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10604_217 () (_ BitVec 64))
(declare-fun temp10604_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10604_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10604_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp10604_222 () (_ BitVec 64))
(declare-fun temp10604_221 () (_ BitVec 64))
(declare-fun temp10604_223 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp10604_224 () (_ BitVec 64))
(declare-fun temp10604_225 () (_ BitVec 64))
(declare-fun temp10604_226 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp10604_227 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp10604_228 () (_ BitVec 64))
(declare-fun temp10604_230 () (_ BitVec 64))
(declare-fun temp10604_229 () (_ BitVec 64))
(declare-fun temp10604_231 () (_ BitVec 64))
(declare-fun temp10604_232 () (_ BitVec 64))
(declare-fun var5714708 () (_ BitVec 64))
(declare-fun var5714675 () (_ BitVec 64))
(declare-fun var5583239 () (_ BitVec 64))
(declare-fun var5583235 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp10604_233 () (_ BitVec 64))
(assert (= temp10604_1 #x0000000000000001))
(assert (= var77203 temp10604_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10604_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10604_2)))
(assert (= temp10604_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10604_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10604_4 #x0000000000000000))
(assert (= var210941 temp10604_4))
(assert (= temp10604_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10604_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10604_6 #x0000000000000000))
(assert (= var210986 temp10604_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10604_7 #x0000000000000000))
(assert (= temp10604_8 temp10604_7))
(assert (= temp10604_9 (select ARGNAME_padding_NAMEEND_VAL temp10604_8)))
(assert (= temp10604_10 #x0000000000000001))
(assert (= temp10604_11 temp10604_10))
(assert (= temp10604_12 (select ARGNAME_padding_NAMEEND_VAL temp10604_11)))
(assert (= temp10604_13 #x0000000000000002))
(assert (= temp10604_14 temp10604_13))
(assert (= temp10604_15 (select ARGNAME_padding_NAMEEND_VAL temp10604_14)))
(assert (= temp10604_16 #x0000000000000003))
(assert (= temp10604_17 temp10604_16))
(assert (= temp10604_18 (select ARGNAME_padding_NAMEEND_VAL temp10604_17)))
(assert (= temp10604_19 #x0000000000000004))
(assert (= temp10604_20 temp10604_19))
(assert (= temp10604_21 (select ARGNAME_padding_NAMEEND_VAL temp10604_20)))
(assert (= temp10604_22 #x0000000000000005))
(assert (= temp10604_23 temp10604_22))
(assert (= temp10604_24 (select ARGNAME_padding_NAMEEND_VAL temp10604_23)))
(assert (= temp10604_25 #x0000000000000000))
(assert (= temp10604_26 #x0000000000000000))
(assert (= temp10604_27 temp10604_26))
(assert (= temp10604_28 (select ARGNAME_padding_NAMEEND_VAL temp10604_27)))
(assert (= temp10604_29 #x0000000000000000))
(assert (= temp10604_30 #x0000000000000001))
(assert (= temp10604_31 temp10604_30))
(assert (= temp10604_32 (select ARGNAME_padding_NAMEEND_VAL temp10604_31)))
(assert (= temp10604_33 #x0000000000000000))
(assert (= temp10604_34 #x0000000000000002))
(assert (= temp10604_35 temp10604_34))
(assert (= temp10604_36 (select ARGNAME_padding_NAMEEND_VAL temp10604_35)))
(assert (= temp10604_37 #x0000000000000000))
(assert (= temp10604_38 #x0000000000000003))
(assert (= temp10604_39 temp10604_38))
(assert (= temp10604_40 (select ARGNAME_padding_NAMEEND_VAL temp10604_39)))
(assert (= temp10604_41 #x0000000000000000))
(assert (= temp10604_42 #x0000000000000004))
(assert (= temp10604_43 temp10604_42))
(assert (= temp10604_44 (select ARGNAME_padding_NAMEEND_VAL temp10604_43)))
(assert (= temp10604_45 #x0000000000000000))
(assert (= temp10604_46 #x0000000000000005))
(assert (= temp10604_47 temp10604_46))
(assert (= temp10604_48 (select ARGNAME_padding_NAMEEND_VAL temp10604_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10604_28 temp10604_25)
             (bvslt temp10604_32 temp10604_29)
             (bvslt temp10604_36 temp10604_33)
             (bvslt temp10604_40 temp10604_37)
             (bvslt temp10604_44 temp10604_41)
             (bvslt temp10604_48 temp10604_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10604_49 #x0000000000000000))
(assert (= var1191714 temp10604_49))
(assert (= temp10604_50 #x0000000000000000))
(assert (= temp10604_51 temp10604_50))
(assert (= temp10604_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10604_51)))
(assert (= temp10604_53 #x0000000000000001))
(assert (= temp10604_54 temp10604_53))
(assert (= temp10604_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10604_54)))
(assert (= temp10604_56 #x0000000000000002))
(assert (= temp10604_57 temp10604_56))
(assert (= temp10604_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10604_57)))
(assert (= temp10604_59 #x0000000000000003))
(assert (= temp10604_60 temp10604_59))
(assert (= temp10604_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10604_60)))
(assert (= temp10604_62 #x0000000000000004))
(assert (= temp10604_63 temp10604_62))
(assert (= temp10604_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10604_63)))
(assert (= temp10604_65 #x0000000000000005))
(assert (= temp10604_66 temp10604_65))
(assert (= temp10604_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10604_66)))
(assert (= temp10604_68 #x0000000000000000))
(assert (= temp10604_69 #x0000000000000000))
(assert (= temp10604_70 temp10604_69))
(assert (= temp10604_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10604_70)))
(assert (= temp10604_72 #x0000000000000000))
(assert (= temp10604_73 #x0000000000000001))
(assert (= temp10604_74 temp10604_73))
(assert (= temp10604_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10604_74)))
(assert (= temp10604_76 #x0000000000000000))
(assert (= temp10604_77 #x0000000000000002))
(assert (= temp10604_78 temp10604_77))
(assert (= temp10604_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10604_78)))
(assert (= temp10604_80 #x0000000000000000))
(assert (= temp10604_81 #x0000000000000003))
(assert (= temp10604_82 temp10604_81))
(assert (= temp10604_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10604_82)))
(assert (= temp10604_84 #x0000000000000000))
(assert (= temp10604_85 #x0000000000000004))
(assert (= temp10604_86 temp10604_85))
(assert (= temp10604_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10604_86)))
(assert (= temp10604_88 #x0000000000000000))
(assert (= temp10604_89 #x0000000000000005))
(assert (= temp10604_90 temp10604_89))
(assert (= temp10604_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10604_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10604_71 temp10604_68)
             (bvslt temp10604_75 temp10604_72)
             (bvslt temp10604_79 temp10604_76)
             (bvslt temp10604_83 temp10604_80)
             (bvslt temp10604_87 temp10604_84)
             (bvslt temp10604_91 temp10604_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10604_92 #x0000000000000000))
(assert (= var1191725 temp10604_92))
(assert (= temp10604_93 #x0000000000000000))
(assert (= temp10604_94 temp10604_93))
(assert (= temp10604_95 (select ARGNAME_stride_NAMEEND_VAL temp10604_94)))
(assert (= temp10604_96 #x0000000000000001))
(assert (= temp10604_97 temp10604_96))
(assert (= temp10604_98 (select ARGNAME_stride_NAMEEND_VAL temp10604_97)))
(assert (= temp10604_99 #x0000000000000002))
(assert (= temp10604_100 temp10604_99))
(assert (= temp10604_101 (select ARGNAME_stride_NAMEEND_VAL temp10604_100)))
(assert (= temp10604_102 #x0000000000000003))
(assert (= temp10604_103 temp10604_102))
(assert (= temp10604_104 (select ARGNAME_stride_NAMEEND_VAL temp10604_103)))
(assert (= temp10604_105 #x0000000000000004))
(assert (= temp10604_106 temp10604_105))
(assert (= temp10604_107 (select ARGNAME_stride_NAMEEND_VAL temp10604_106)))
(assert (= temp10604_108 #x0000000000000005))
(assert (= temp10604_109 temp10604_108))
(assert (= temp10604_110 (select ARGNAME_stride_NAMEEND_VAL temp10604_109)))
(assert (= temp10604_111 #x0000000000000000))
(assert (= temp10604_112 #x0000000000000000))
(assert (= temp10604_113 temp10604_112))
(assert (= temp10604_114 (select ARGNAME_stride_NAMEEND_VAL temp10604_113)))
(assert (= temp10604_115 #x0000000000000000))
(assert (= temp10604_116 #x0000000000000001))
(assert (= temp10604_117 temp10604_116))
(assert (= temp10604_118 (select ARGNAME_stride_NAMEEND_VAL temp10604_117)))
(assert (= temp10604_119 #x0000000000000000))
(assert (= temp10604_120 #x0000000000000002))
(assert (= temp10604_121 temp10604_120))
(assert (= temp10604_122 (select ARGNAME_stride_NAMEEND_VAL temp10604_121)))
(assert (= temp10604_123 #x0000000000000000))
(assert (= temp10604_124 #x0000000000000003))
(assert (= temp10604_125 temp10604_124))
(assert (= temp10604_126 (select ARGNAME_stride_NAMEEND_VAL temp10604_125)))
(assert (= temp10604_127 #x0000000000000000))
(assert (= temp10604_128 #x0000000000000004))
(assert (= temp10604_129 temp10604_128))
(assert (= temp10604_130 (select ARGNAME_stride_NAMEEND_VAL temp10604_129)))
(assert (= temp10604_131 #x0000000000000000))
(assert (= temp10604_132 #x0000000000000005))
(assert (= temp10604_133 temp10604_132))
(assert (= temp10604_134 (select ARGNAME_stride_NAMEEND_VAL temp10604_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10604_114 temp10604_111)
             (bvsle temp10604_118 temp10604_115)
             (bvsle temp10604_122 temp10604_119)
             (bvsle temp10604_126 temp10604_123)
             (bvsle temp10604_130 temp10604_127)
             (bvsle temp10604_134 temp10604_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10604_135 #x0000000000000000))
(assert (= var1191735 temp10604_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10604_136 #x0000000000000001))
(assert (= var1191747 temp10604_136))
(assert (= temp10604_137 #x0000000000000000))
(assert (= var1179826 temp10604_137))
(assert (= temp10604_138 #x0000000000000000))
(assert (= temp10604_139 temp10604_138))
(assert (= temp10604_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10604_139)))
(assert (= temp10604_141 #x0000000000000001))
(assert (= temp10604_142 temp10604_141))
(assert (= temp10604_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10604_142)))
(assert (= temp10604_144 #x0000000000000002))
(assert (= temp10604_145 temp10604_144))
(assert (= temp10604_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10604_145)))
(assert (= temp10604_147 #x0000000000000003))
(assert (= temp10604_148 temp10604_147))
(assert (= temp10604_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10604_148)))
(assert (= temp10604_150 #x0000000000000004))
(assert (= temp10604_151 temp10604_150))
(assert (= temp10604_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10604_151)))
(assert (= temp10604_153 #x0000000000000005))
(assert (= temp10604_154 temp10604_153))
(assert (= temp10604_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10604_154)))
(assert (= temp10604_157 var1179826))
(assert (= temp10604_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10604_157)))
(assert (= temp10604_156 temp10604_158))
(assert (= var1191780
   (ite (bvslt temp10604_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10604_159 #x0000000000000000))
(assert (= var1191780 temp10604_159))
(assert (= temp10604_160 #x0000000000000000))
(assert (= var1179826 temp10604_160))
(assert (= temp10604_162 var1179826))
(assert (= temp10604_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10604_162)))
(assert (= temp10604_161 temp10604_163))
(assert (= var1191802 (bvsmod temp10604_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10604_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10604_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10604_165 #x0000000000000001))
(assert (= var1191803 temp10604_165))
(assert (= temp10604_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10604_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10604_167 #x0000000000000001))
(assert (= var1191823 temp10604_167))
(assert (= temp10604_168 #x0000000000000001))
(assert (= var1180714 temp10604_168))
(assert (= temp10604_169 #x0000000000000000))
(assert (= temp10604_170 temp10604_169))
(assert (= temp10604_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10604_170)))
(assert (= temp10604_172 #x0000000000000001))
(assert (= temp10604_173 temp10604_172))
(assert (= temp10604_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10604_173)))
(assert (= temp10604_175 #x0000000000000002))
(assert (= temp10604_176 temp10604_175))
(assert (= temp10604_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10604_176)))
(assert (= temp10604_178 #x0000000000000003))
(assert (= temp10604_179 temp10604_178))
(assert (= temp10604_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10604_179)))
(assert (= temp10604_181 #x0000000000000004))
(assert (= temp10604_182 temp10604_181))
(assert (= temp10604_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10604_182)))
(assert (= temp10604_184 #x0000000000000005))
(assert (= temp10604_185 temp10604_184))
(assert (= temp10604_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10604_185)))
(assert (= temp10604_187 #x0000000000000000))
(assert (= temp10604_188
   (ite (bvslt var1180714 temp10604_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10604_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10604_188)))
(assert (= var1191831 temp10604_189))
(assert (bvslt (ite (bvslt var1180714 temp10604_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10604_190 #x0000000000000001))
(assert (= var1180714 temp10604_190))
(assert (= temp10604_192 var1180714))
(assert (= temp10604_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10604_192)))
(assert (= temp10604_191 temp10604_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10604_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10604_194 #x0000000000000001))
(assert (= var1191836 temp10604_194))
(assert (= temp10604_195 #x0000000000000000))
(assert (= var1179826 temp10604_195))
(assert (= temp10604_197 var1179826))
(assert (= temp10604_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10604_197)))
(assert (= temp10604_196 temp10604_198))
(assert (= temp10604_199 #x0000000000000002))
(assert (= var1586025 temp10604_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10604_200 #x0000000000000001))
(assert (= var1191993 temp10604_200))
(assert (= temp10604_201 #x0000000000000001))
(assert (= var2700303 temp10604_201))
(assert (= temp10604_202 #x0000000000000001))
(assert (= var2962447 temp10604_202))
(assert (= temp10604_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10604_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10604_204 #x0000000000000001))
(assert (= var211058 temp10604_204))
(assert (= temp10604_205 #x0000000000000001))
(assert (= var211188 temp10604_205))
(assert (= var3879401 var211188))
(assert (= temp10604_206 #x0000000000000000))
(assert (= var3866802 temp10604_206))
(assert (= temp10604_207 #x0000000000000000))
(assert (= temp10604_208
   (ite (bvslt var3866802 temp10604_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10604_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10604_208)))
(assert (= var3879420 temp10604_209))
(assert (bvslt (ite (bvslt var3866802 temp10604_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10604_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10604_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10604_211 #x0000000000000000))
(assert (= var3879421 temp10604_211))
(assert (= temp10604_212 #x0000000000000001))
(assert (= var3867690 temp10604_212))
(assert (= temp10604_213 #x0000000000000000))
(assert (= temp10604_214
   (ite (bvslt var3867690 temp10604_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10604_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10604_214)))
(assert (= var3879423 temp10604_215))
(assert (bvslt (ite (bvslt var3867690 temp10604_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10604_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10604_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10604_217 #x0000000000000001))
(assert (= var3879424 temp10604_217))
(assert (= temp10604_218 #x0000000000000000))
(assert (= var4133117 temp10604_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10604_219 #x0000000000000002))
(assert (= var4339331 temp10604_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10604_220 #x0000000000000000))
(assert (= var4404892 temp10604_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp10604_222 #xffffffffffffffff))
(assert (= temp10604_221 temp10604_222))
(assert (= temp10604_223 #x0000000000000001))
(assert (= var197674 temp10604_223))
(assert (= temp10604_224 #x0000000000000000))
(assert (= temp10604_225
   (ite (bvslt var197674 temp10604_224)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp10604_226 (select ARGNAME_input_NAMEEND_DIMSIZE temp10604_225)))
(assert (= var211595 temp10604_226))
(assert (bvslt (ite (bvslt var197674 temp10604_224)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10604_227 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp10604_227) #x0000000000000001 #x0000000000000000)))
(assert (= temp10604_228 #x0000000000000001))
(assert (= var211596 temp10604_228))
(assert (= temp10604_230 #xffffffffffffffff))
(assert (= temp10604_229 temp10604_230))
(assert (= temp10604_231 #x0000000000000001))
(assert (= var211058 temp10604_231))
(assert (= temp10604_232 #x0000000000000000))
(assert (= var5714708 temp10604_232))
(assert (= var5714675 var5714708))
(assert (= var5583239 var5714675))
(assert (= var5583235 var5583239))
(assert (= var212669 var5583235))
(assert (= temp10604_233 #x0000000000000000))
(assert (= var212669 temp10604_233))
(model-add temp10604_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10604_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10604_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10604_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))



