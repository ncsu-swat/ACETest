(declare-fun temp10965_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10965_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10965_3 () (_ BitVec 64))
(declare-fun temp10965_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10965_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10965_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10965_7 () (_ BitVec 64))
(declare-fun temp10965_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10965_9 () (_ BitVec 64))
(declare-fun temp10965_10 () (_ BitVec 64))
(declare-fun temp10965_11 () (_ BitVec 64))
(declare-fun temp10965_12 () (_ BitVec 64))
(declare-fun temp10965_13 () (_ BitVec 64))
(declare-fun temp10965_14 () (_ BitVec 64))
(declare-fun temp10965_15 () (_ BitVec 64))
(declare-fun temp10965_16 () (_ BitVec 64))
(declare-fun temp10965_17 () (_ BitVec 64))
(declare-fun temp10965_18 () (_ BitVec 64))
(declare-fun temp10965_19 () (_ BitVec 64))
(declare-fun temp10965_20 () (_ BitVec 64))
(declare-fun temp10965_21 () (_ BitVec 64))
(declare-fun temp10965_22 () (_ BitVec 64))
(declare-fun temp10965_23 () (_ BitVec 64))
(declare-fun temp10965_24 () (_ BitVec 64))
(declare-fun temp10965_25 () (_ BitVec 64))
(declare-fun temp10965_26 () (_ BitVec 64))
(declare-fun temp10965_27 () (_ BitVec 64))
(declare-fun temp10965_28 () (_ BitVec 64))
(declare-fun temp10965_29 () (_ BitVec 64))
(declare-fun temp10965_30 () (_ BitVec 64))
(declare-fun temp10965_31 () (_ BitVec 64))
(declare-fun temp10965_32 () (_ BitVec 64))
(declare-fun temp10965_33 () (_ BitVec 64))
(declare-fun temp10965_34 () (_ BitVec 64))
(declare-fun temp10965_35 () (_ BitVec 64))
(declare-fun temp10965_36 () (_ BitVec 64))
(declare-fun temp10965_37 () (_ BitVec 64))
(declare-fun temp10965_38 () (_ BitVec 64))
(declare-fun temp10965_39 () (_ BitVec 64))
(declare-fun temp10965_40 () (_ BitVec 64))
(declare-fun temp10965_41 () (_ BitVec 64))
(declare-fun temp10965_42 () (_ BitVec 64))
(declare-fun temp10965_43 () (_ BitVec 64))
(declare-fun temp10965_44 () (_ BitVec 64))
(declare-fun temp10965_45 () (_ BitVec 64))
(declare-fun temp10965_46 () (_ BitVec 64))
(declare-fun temp10965_47 () (_ BitVec 64))
(declare-fun temp10965_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10965_49 () (_ BitVec 64))
(declare-fun temp10965_50 () (_ BitVec 64))
(declare-fun temp10965_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10965_52 () (_ BitVec 64))
(declare-fun temp10965_53 () (_ BitVec 64))
(declare-fun temp10965_54 () (_ BitVec 64))
(declare-fun temp10965_55 () (_ BitVec 64))
(declare-fun temp10965_56 () (_ BitVec 64))
(declare-fun temp10965_57 () (_ BitVec 64))
(declare-fun temp10965_58 () (_ BitVec 64))
(declare-fun temp10965_59 () (_ BitVec 64))
(declare-fun temp10965_60 () (_ BitVec 64))
(declare-fun temp10965_61 () (_ BitVec 64))
(declare-fun temp10965_62 () (_ BitVec 64))
(declare-fun temp10965_63 () (_ BitVec 64))
(declare-fun temp10965_64 () (_ BitVec 64))
(declare-fun temp10965_65 () (_ BitVec 64))
(declare-fun temp10965_66 () (_ BitVec 64))
(declare-fun temp10965_67 () (_ BitVec 64))
(declare-fun temp10965_68 () (_ BitVec 64))
(declare-fun temp10965_69 () (_ BitVec 64))
(declare-fun temp10965_70 () (_ BitVec 64))
(declare-fun temp10965_71 () (_ BitVec 64))
(declare-fun temp10965_72 () (_ BitVec 64))
(declare-fun temp10965_73 () (_ BitVec 64))
(declare-fun temp10965_74 () (_ BitVec 64))
(declare-fun temp10965_75 () (_ BitVec 64))
(declare-fun temp10965_76 () (_ BitVec 64))
(declare-fun temp10965_77 () (_ BitVec 64))
(declare-fun temp10965_78 () (_ BitVec 64))
(declare-fun temp10965_79 () (_ BitVec 64))
(declare-fun temp10965_80 () (_ BitVec 64))
(declare-fun temp10965_81 () (_ BitVec 64))
(declare-fun temp10965_82 () (_ BitVec 64))
(declare-fun temp10965_83 () (_ BitVec 64))
(declare-fun temp10965_84 () (_ BitVec 64))
(declare-fun temp10965_85 () (_ BitVec 64))
(declare-fun temp10965_86 () (_ BitVec 64))
(declare-fun temp10965_87 () (_ BitVec 64))
(declare-fun temp10965_88 () (_ BitVec 64))
(declare-fun temp10965_89 () (_ BitVec 64))
(declare-fun temp10965_90 () (_ BitVec 64))
(declare-fun temp10965_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10965_92 () (_ BitVec 64))
(declare-fun temp10965_93 () (_ BitVec 64))
(declare-fun temp10965_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10965_95 () (_ BitVec 64))
(declare-fun temp10965_96 () (_ BitVec 64))
(declare-fun temp10965_97 () (_ BitVec 64))
(declare-fun temp10965_98 () (_ BitVec 64))
(declare-fun temp10965_99 () (_ BitVec 64))
(declare-fun temp10965_100 () (_ BitVec 64))
(declare-fun temp10965_101 () (_ BitVec 64))
(declare-fun temp10965_102 () (_ BitVec 64))
(declare-fun temp10965_103 () (_ BitVec 64))
(declare-fun temp10965_104 () (_ BitVec 64))
(declare-fun temp10965_105 () (_ BitVec 64))
(declare-fun temp10965_106 () (_ BitVec 64))
(declare-fun temp10965_107 () (_ BitVec 64))
(declare-fun temp10965_108 () (_ BitVec 64))
(declare-fun temp10965_109 () (_ BitVec 64))
(declare-fun temp10965_110 () (_ BitVec 64))
(declare-fun temp10965_111 () (_ BitVec 64))
(declare-fun temp10965_112 () (_ BitVec 64))
(declare-fun temp10965_113 () (_ BitVec 64))
(declare-fun temp10965_114 () (_ BitVec 64))
(declare-fun temp10965_115 () (_ BitVec 64))
(declare-fun temp10965_116 () (_ BitVec 64))
(declare-fun temp10965_117 () (_ BitVec 64))
(declare-fun temp10965_118 () (_ BitVec 64))
(declare-fun temp10965_119 () (_ BitVec 64))
(declare-fun temp10965_120 () (_ BitVec 64))
(declare-fun temp10965_121 () (_ BitVec 64))
(declare-fun temp10965_122 () (_ BitVec 64))
(declare-fun temp10965_123 () (_ BitVec 64))
(declare-fun temp10965_124 () (_ BitVec 64))
(declare-fun temp10965_125 () (_ BitVec 64))
(declare-fun temp10965_126 () (_ BitVec 64))
(declare-fun temp10965_127 () (_ BitVec 64))
(declare-fun temp10965_128 () (_ BitVec 64))
(declare-fun temp10965_129 () (_ BitVec 64))
(declare-fun temp10965_130 () (_ BitVec 64))
(declare-fun temp10965_131 () (_ BitVec 64))
(declare-fun temp10965_132 () (_ BitVec 64))
(declare-fun temp10965_133 () (_ BitVec 64))
(declare-fun temp10965_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10965_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10965_136 () (_ BitVec 64))
(declare-fun temp10965_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10965_138 () (_ BitVec 64))
(declare-fun temp10965_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10965_140 () (_ BitVec 64))
(declare-fun temp10965_141 () (_ BitVec 64))
(declare-fun temp10965_142 () (_ BitVec 64))
(declare-fun temp10965_143 () (_ BitVec 64))
(declare-fun temp10965_144 () (_ BitVec 64))
(declare-fun temp10965_145 () (_ BitVec 64))
(declare-fun temp10965_146 () (_ BitVec 64))
(declare-fun temp10965_147 () (_ BitVec 64))
(declare-fun temp10965_148 () (_ BitVec 64))
(declare-fun temp10965_149 () (_ BitVec 64))
(declare-fun temp10965_150 () (_ BitVec 64))
(declare-fun temp10965_151 () (_ BitVec 64))
(declare-fun temp10965_152 () (_ BitVec 64))
(declare-fun temp10965_153 () (_ BitVec 64))
(declare-fun temp10965_154 () (_ BitVec 64))
(declare-fun temp10965_155 () (_ BitVec 64))
(declare-fun temp10965_157 () (_ BitVec 64))
(declare-fun temp10965_158 () (_ BitVec 64))
(declare-fun temp10965_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10965_159 () (_ BitVec 64))
(declare-fun temp10965_160 () (_ BitVec 64))
(declare-fun temp10965_162 () (_ BitVec 64))
(declare-fun temp10965_163 () (_ BitVec 64))
(declare-fun temp10965_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10965_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10965_165 () (_ BitVec 64))
(declare-fun temp10965_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10965_167 () (_ BitVec 64))
(declare-fun temp10965_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10965_169 () (_ BitVec 64))
(declare-fun temp10965_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10965_171 () (_ BitVec 64))
(declare-fun temp10965_172 () (_ BitVec 64))
(declare-fun temp10965_173 () (_ BitVec 64))
(declare-fun temp10965_174 () (_ BitVec 64))
(declare-fun temp10965_175 () (_ BitVec 64))
(declare-fun temp10965_176 () (_ BitVec 64))
(declare-fun temp10965_177 () (_ BitVec 64))
(declare-fun temp10965_178 () (_ BitVec 64))
(declare-fun temp10965_179 () (_ BitVec 64))
(declare-fun temp10965_180 () (_ BitVec 64))
(declare-fun temp10965_181 () (_ BitVec 64))
(declare-fun temp10965_182 () (_ BitVec 64))
(declare-fun temp10965_183 () (_ BitVec 64))
(declare-fun temp10965_184 () (_ BitVec 64))
(declare-fun temp10965_185 () (_ BitVec 64))
(declare-fun temp10965_186 () (_ BitVec 64))
(declare-fun temp10965_187 () (_ BitVec 64))
(declare-fun temp10965_188 () (_ BitVec 64))
(declare-fun temp10965_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10965_190 () (_ BitVec 64))
(declare-fun temp10965_192 () (_ BitVec 64))
(declare-fun temp10965_193 () (_ BitVec 64))
(declare-fun temp10965_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10965_194 () (_ BitVec 64))
(declare-fun temp10965_195 () (_ BitVec 64))
(declare-fun temp10965_197 () (_ BitVec 64))
(declare-fun temp10965_198 () (_ BitVec 64))
(declare-fun temp10965_196 () (_ BitVec 64))
(declare-fun temp10965_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10965_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10965_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10965_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10965_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10965_204 () (_ BitVec 64))
(declare-fun temp10965_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10965_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10965_207 () (_ BitVec 64))
(declare-fun temp10965_208 () (_ BitVec 64))
(declare-fun temp10965_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10965_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10965_211 () (_ BitVec 64))
(declare-fun temp10965_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10965_213 () (_ BitVec 64))
(declare-fun temp10965_214 () (_ BitVec 64))
(declare-fun temp10965_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10965_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10965_217 () (_ BitVec 64))
(declare-fun temp10965_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10965_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10965_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp10965_221 () (_ BitVec 64))
(assert (= temp10965_1 #x0000000000000001))
(assert (= var77203 temp10965_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10965_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10965_2)))
(assert (= temp10965_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10965_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10965_4 #x0000000000000000))
(assert (= var210941 temp10965_4))
(assert (= temp10965_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10965_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10965_6 #x0000000000000000))
(assert (= var210986 temp10965_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10965_7 #x0000000000000000))
(assert (= temp10965_8 temp10965_7))
(assert (= temp10965_9 (select ARGNAME_padding_NAMEEND_VAL temp10965_8)))
(assert (= temp10965_10 #x0000000000000001))
(assert (= temp10965_11 temp10965_10))
(assert (= temp10965_12 (select ARGNAME_padding_NAMEEND_VAL temp10965_11)))
(assert (= temp10965_13 #x0000000000000002))
(assert (= temp10965_14 temp10965_13))
(assert (= temp10965_15 (select ARGNAME_padding_NAMEEND_VAL temp10965_14)))
(assert (= temp10965_16 #x0000000000000003))
(assert (= temp10965_17 temp10965_16))
(assert (= temp10965_18 (select ARGNAME_padding_NAMEEND_VAL temp10965_17)))
(assert (= temp10965_19 #x0000000000000004))
(assert (= temp10965_20 temp10965_19))
(assert (= temp10965_21 (select ARGNAME_padding_NAMEEND_VAL temp10965_20)))
(assert (= temp10965_22 #x0000000000000005))
(assert (= temp10965_23 temp10965_22))
(assert (= temp10965_24 (select ARGNAME_padding_NAMEEND_VAL temp10965_23)))
(assert (= temp10965_25 #x0000000000000000))
(assert (= temp10965_26 #x0000000000000000))
(assert (= temp10965_27 temp10965_26))
(assert (= temp10965_28 (select ARGNAME_padding_NAMEEND_VAL temp10965_27)))
(assert (= temp10965_29 #x0000000000000000))
(assert (= temp10965_30 #x0000000000000001))
(assert (= temp10965_31 temp10965_30))
(assert (= temp10965_32 (select ARGNAME_padding_NAMEEND_VAL temp10965_31)))
(assert (= temp10965_33 #x0000000000000000))
(assert (= temp10965_34 #x0000000000000002))
(assert (= temp10965_35 temp10965_34))
(assert (= temp10965_36 (select ARGNAME_padding_NAMEEND_VAL temp10965_35)))
(assert (= temp10965_37 #x0000000000000000))
(assert (= temp10965_38 #x0000000000000003))
(assert (= temp10965_39 temp10965_38))
(assert (= temp10965_40 (select ARGNAME_padding_NAMEEND_VAL temp10965_39)))
(assert (= temp10965_41 #x0000000000000000))
(assert (= temp10965_42 #x0000000000000004))
(assert (= temp10965_43 temp10965_42))
(assert (= temp10965_44 (select ARGNAME_padding_NAMEEND_VAL temp10965_43)))
(assert (= temp10965_45 #x0000000000000000))
(assert (= temp10965_46 #x0000000000000005))
(assert (= temp10965_47 temp10965_46))
(assert (= temp10965_48 (select ARGNAME_padding_NAMEEND_VAL temp10965_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10965_28 temp10965_25)
             (bvslt temp10965_32 temp10965_29)
             (bvslt temp10965_36 temp10965_33)
             (bvslt temp10965_40 temp10965_37)
             (bvslt temp10965_44 temp10965_41)
             (bvslt temp10965_48 temp10965_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10965_49 #x0000000000000000))
(assert (= var1191714 temp10965_49))
(assert (= temp10965_50 #x0000000000000000))
(assert (= temp10965_51 temp10965_50))
(assert (= temp10965_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10965_51)))
(assert (= temp10965_53 #x0000000000000001))
(assert (= temp10965_54 temp10965_53))
(assert (= temp10965_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10965_54)))
(assert (= temp10965_56 #x0000000000000002))
(assert (= temp10965_57 temp10965_56))
(assert (= temp10965_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10965_57)))
(assert (= temp10965_59 #x0000000000000003))
(assert (= temp10965_60 temp10965_59))
(assert (= temp10965_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10965_60)))
(assert (= temp10965_62 #x0000000000000004))
(assert (= temp10965_63 temp10965_62))
(assert (= temp10965_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10965_63)))
(assert (= temp10965_65 #x0000000000000005))
(assert (= temp10965_66 temp10965_65))
(assert (= temp10965_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10965_66)))
(assert (= temp10965_68 #x0000000000000000))
(assert (= temp10965_69 #x0000000000000000))
(assert (= temp10965_70 temp10965_69))
(assert (= temp10965_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10965_70)))
(assert (= temp10965_72 #x0000000000000000))
(assert (= temp10965_73 #x0000000000000001))
(assert (= temp10965_74 temp10965_73))
(assert (= temp10965_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10965_74)))
(assert (= temp10965_76 #x0000000000000000))
(assert (= temp10965_77 #x0000000000000002))
(assert (= temp10965_78 temp10965_77))
(assert (= temp10965_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10965_78)))
(assert (= temp10965_80 #x0000000000000000))
(assert (= temp10965_81 #x0000000000000003))
(assert (= temp10965_82 temp10965_81))
(assert (= temp10965_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10965_82)))
(assert (= temp10965_84 #x0000000000000000))
(assert (= temp10965_85 #x0000000000000004))
(assert (= temp10965_86 temp10965_85))
(assert (= temp10965_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10965_86)))
(assert (= temp10965_88 #x0000000000000000))
(assert (= temp10965_89 #x0000000000000005))
(assert (= temp10965_90 temp10965_89))
(assert (= temp10965_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10965_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10965_71 temp10965_68)
             (bvslt temp10965_75 temp10965_72)
             (bvslt temp10965_79 temp10965_76)
             (bvslt temp10965_83 temp10965_80)
             (bvslt temp10965_87 temp10965_84)
             (bvslt temp10965_91 temp10965_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10965_92 #x0000000000000000))
(assert (= var1191725 temp10965_92))
(assert (= temp10965_93 #x0000000000000000))
(assert (= temp10965_94 temp10965_93))
(assert (= temp10965_95 (select ARGNAME_stride_NAMEEND_VAL temp10965_94)))
(assert (= temp10965_96 #x0000000000000001))
(assert (= temp10965_97 temp10965_96))
(assert (= temp10965_98 (select ARGNAME_stride_NAMEEND_VAL temp10965_97)))
(assert (= temp10965_99 #x0000000000000002))
(assert (= temp10965_100 temp10965_99))
(assert (= temp10965_101 (select ARGNAME_stride_NAMEEND_VAL temp10965_100)))
(assert (= temp10965_102 #x0000000000000003))
(assert (= temp10965_103 temp10965_102))
(assert (= temp10965_104 (select ARGNAME_stride_NAMEEND_VAL temp10965_103)))
(assert (= temp10965_105 #x0000000000000004))
(assert (= temp10965_106 temp10965_105))
(assert (= temp10965_107 (select ARGNAME_stride_NAMEEND_VAL temp10965_106)))
(assert (= temp10965_108 #x0000000000000005))
(assert (= temp10965_109 temp10965_108))
(assert (= temp10965_110 (select ARGNAME_stride_NAMEEND_VAL temp10965_109)))
(assert (= temp10965_111 #x0000000000000000))
(assert (= temp10965_112 #x0000000000000000))
(assert (= temp10965_113 temp10965_112))
(assert (= temp10965_114 (select ARGNAME_stride_NAMEEND_VAL temp10965_113)))
(assert (= temp10965_115 #x0000000000000000))
(assert (= temp10965_116 #x0000000000000001))
(assert (= temp10965_117 temp10965_116))
(assert (= temp10965_118 (select ARGNAME_stride_NAMEEND_VAL temp10965_117)))
(assert (= temp10965_119 #x0000000000000000))
(assert (= temp10965_120 #x0000000000000002))
(assert (= temp10965_121 temp10965_120))
(assert (= temp10965_122 (select ARGNAME_stride_NAMEEND_VAL temp10965_121)))
(assert (= temp10965_123 #x0000000000000000))
(assert (= temp10965_124 #x0000000000000003))
(assert (= temp10965_125 temp10965_124))
(assert (= temp10965_126 (select ARGNAME_stride_NAMEEND_VAL temp10965_125)))
(assert (= temp10965_127 #x0000000000000000))
(assert (= temp10965_128 #x0000000000000004))
(assert (= temp10965_129 temp10965_128))
(assert (= temp10965_130 (select ARGNAME_stride_NAMEEND_VAL temp10965_129)))
(assert (= temp10965_131 #x0000000000000000))
(assert (= temp10965_132 #x0000000000000005))
(assert (= temp10965_133 temp10965_132))
(assert (= temp10965_134 (select ARGNAME_stride_NAMEEND_VAL temp10965_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10965_114 temp10965_111)
             (bvsle temp10965_118 temp10965_115)
             (bvsle temp10965_122 temp10965_119)
             (bvsle temp10965_126 temp10965_123)
             (bvsle temp10965_130 temp10965_127)
             (bvsle temp10965_134 temp10965_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10965_135 #x0000000000000000))
(assert (= var1191735 temp10965_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10965_136 #x0000000000000001))
(assert (= var1191747 temp10965_136))
(assert (= temp10965_137 #x0000000000000000))
(assert (= var1179826 temp10965_137))
(assert (= temp10965_138 #x0000000000000000))
(assert (= temp10965_139 temp10965_138))
(assert (= temp10965_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10965_139)))
(assert (= temp10965_141 #x0000000000000001))
(assert (= temp10965_142 temp10965_141))
(assert (= temp10965_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10965_142)))
(assert (= temp10965_144 #x0000000000000002))
(assert (= temp10965_145 temp10965_144))
(assert (= temp10965_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10965_145)))
(assert (= temp10965_147 #x0000000000000003))
(assert (= temp10965_148 temp10965_147))
(assert (= temp10965_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10965_148)))
(assert (= temp10965_150 #x0000000000000004))
(assert (= temp10965_151 temp10965_150))
(assert (= temp10965_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10965_151)))
(assert (= temp10965_153 #x0000000000000005))
(assert (= temp10965_154 temp10965_153))
(assert (= temp10965_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10965_154)))
(assert (= temp10965_157 var1179826))
(assert (= temp10965_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10965_157)))
(assert (= temp10965_156 temp10965_158))
(assert (= var1191780
   (ite (bvslt temp10965_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10965_159 #x0000000000000000))
(assert (= var1191780 temp10965_159))
(assert (= temp10965_160 #x0000000000000000))
(assert (= var1179826 temp10965_160))
(assert (= temp10965_162 var1179826))
(assert (= temp10965_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10965_162)))
(assert (= temp10965_161 temp10965_163))
(assert (= var1191802 (bvsmod temp10965_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10965_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10965_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10965_165 #x0000000000000001))
(assert (= var1191803 temp10965_165))
(assert (= temp10965_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10965_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10965_167 #x0000000000000001))
(assert (= var1191823 temp10965_167))
(assert (= temp10965_168 #x0000000000000001))
(assert (= var1180714 temp10965_168))
(assert (= temp10965_169 #x0000000000000000))
(assert (= temp10965_170 temp10965_169))
(assert (= temp10965_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10965_170)))
(assert (= temp10965_172 #x0000000000000001))
(assert (= temp10965_173 temp10965_172))
(assert (= temp10965_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10965_173)))
(assert (= temp10965_175 #x0000000000000002))
(assert (= temp10965_176 temp10965_175))
(assert (= temp10965_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10965_176)))
(assert (= temp10965_178 #x0000000000000003))
(assert (= temp10965_179 temp10965_178))
(assert (= temp10965_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10965_179)))
(assert (= temp10965_181 #x0000000000000004))
(assert (= temp10965_182 temp10965_181))
(assert (= temp10965_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10965_182)))
(assert (= temp10965_184 #x0000000000000005))
(assert (= temp10965_185 temp10965_184))
(assert (= temp10965_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10965_185)))
(assert (= temp10965_187 #x0000000000000000))
(assert (= temp10965_188
   (ite (bvslt var1180714 temp10965_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10965_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10965_188)))
(assert (= var1191831 temp10965_189))
(assert (bvslt (ite (bvslt var1180714 temp10965_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10965_190 #x0000000000000001))
(assert (= var1180714 temp10965_190))
(assert (= temp10965_192 var1180714))
(assert (= temp10965_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10965_192)))
(assert (= temp10965_191 temp10965_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10965_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10965_194 #x0000000000000001))
(assert (= var1191836 temp10965_194))
(assert (= temp10965_195 #x0000000000000000))
(assert (= var1179826 temp10965_195))
(assert (= temp10965_197 var1179826))
(assert (= temp10965_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10965_197)))
(assert (= temp10965_196 temp10965_198))
(assert (= temp10965_199 #x0000000000000002))
(assert (= var1586025 temp10965_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10965_200 #x0000000000000001))
(assert (= var1191993 temp10965_200))
(assert (= temp10965_201 #x0000000000000001))
(assert (= var2700303 temp10965_201))
(assert (= temp10965_202 #x0000000000000001))
(assert (= var2962447 temp10965_202))
(assert (= temp10965_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10965_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10965_204 #x0000000000000001))
(assert (= var211058 temp10965_204))
(assert (= temp10965_205 #x0000000000000001))
(assert (= var211188 temp10965_205))
(assert (= var3879401 var211188))
(assert (= temp10965_206 #x0000000000000000))
(assert (= var3866802 temp10965_206))
(assert (= temp10965_207 #x0000000000000000))
(assert (= temp10965_208
   (ite (bvslt var3866802 temp10965_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10965_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10965_208)))
(assert (= var3879420 temp10965_209))
(assert (bvslt (ite (bvslt var3866802 temp10965_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10965_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10965_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10965_211 #x0000000000000000))
(assert (= var3879421 temp10965_211))
(assert (= temp10965_212 #x0000000000000001))
(assert (= var3867690 temp10965_212))
(assert (= temp10965_213 #x0000000000000000))
(assert (= temp10965_214
   (ite (bvslt var3867690 temp10965_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10965_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10965_214)))
(assert (= var3879423 temp10965_215))
(assert (bvslt (ite (bvslt var3867690 temp10965_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10965_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10965_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10965_217 #x0000000000000001))
(assert (= var3879424 temp10965_217))
(assert (= temp10965_218 #x0000000000000000))
(assert (= var4133117 temp10965_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10965_219 #x0000000000000002))
(assert (= var4339331 temp10965_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10965_220 #x0000000000000000))
(assert (= var4404892 temp10965_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp10965_221 #x0000000000000001))
(assert (= var211058 temp10965_221))
(model-add temp10965_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10965_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10965_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10965_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))



