(declare-fun temp1062_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp1062_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1062_3 () (_ BitVec 64))
(declare-fun temp1062_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1062_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp1062_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1062_7 () (_ BitVec 64))
(declare-fun temp1062_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1062_9 () (_ BitVec 64))
(declare-fun temp1062_10 () (_ BitVec 64))
(declare-fun temp1062_11 () (_ BitVec 64))
(declare-fun temp1062_12 () (_ BitVec 64))
(declare-fun temp1062_13 () (_ BitVec 64))
(declare-fun temp1062_14 () (_ BitVec 64))
(declare-fun temp1062_15 () (_ BitVec 64))
(declare-fun temp1062_16 () (_ BitVec 64))
(declare-fun temp1062_17 () (_ BitVec 64))
(declare-fun temp1062_18 () (_ BitVec 64))
(declare-fun temp1062_19 () (_ BitVec 64))
(declare-fun temp1062_20 () (_ BitVec 64))
(declare-fun temp1062_21 () (_ BitVec 64))
(declare-fun temp1062_22 () (_ BitVec 64))
(declare-fun temp1062_23 () (_ BitVec 64))
(declare-fun temp1062_24 () (_ BitVec 64))
(declare-fun temp1062_25 () (_ BitVec 64))
(declare-fun temp1062_26 () (_ BitVec 64))
(declare-fun temp1062_27 () (_ BitVec 64))
(declare-fun temp1062_28 () (_ BitVec 64))
(declare-fun temp1062_29 () (_ BitVec 64))
(declare-fun temp1062_30 () (_ BitVec 64))
(declare-fun temp1062_31 () (_ BitVec 64))
(declare-fun temp1062_32 () (_ BitVec 64))
(declare-fun temp1062_33 () (_ BitVec 64))
(declare-fun temp1062_34 () (_ BitVec 64))
(declare-fun temp1062_35 () (_ BitVec 64))
(declare-fun temp1062_36 () (_ BitVec 64))
(declare-fun temp1062_37 () (_ BitVec 64))
(declare-fun temp1062_38 () (_ BitVec 64))
(declare-fun temp1062_39 () (_ BitVec 64))
(declare-fun temp1062_40 () (_ BitVec 64))
(declare-fun temp1062_41 () (_ BitVec 64))
(declare-fun temp1062_42 () (_ BitVec 64))
(declare-fun temp1062_43 () (_ BitVec 64))
(declare-fun temp1062_44 () (_ BitVec 64))
(declare-fun temp1062_45 () (_ BitVec 64))
(declare-fun temp1062_46 () (_ BitVec 64))
(declare-fun temp1062_47 () (_ BitVec 64))
(declare-fun temp1062_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp1062_49 () (_ BitVec 64))
(declare-fun temp1062_50 () (_ BitVec 64))
(declare-fun temp1062_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1062_52 () (_ BitVec 64))
(declare-fun temp1062_53 () (_ BitVec 64))
(declare-fun temp1062_54 () (_ BitVec 64))
(declare-fun temp1062_55 () (_ BitVec 64))
(declare-fun temp1062_56 () (_ BitVec 64))
(declare-fun temp1062_57 () (_ BitVec 64))
(declare-fun temp1062_58 () (_ BitVec 64))
(declare-fun temp1062_59 () (_ BitVec 64))
(declare-fun temp1062_60 () (_ BitVec 64))
(declare-fun temp1062_61 () (_ BitVec 64))
(declare-fun temp1062_62 () (_ BitVec 64))
(declare-fun temp1062_63 () (_ BitVec 64))
(declare-fun temp1062_64 () (_ BitVec 64))
(declare-fun temp1062_65 () (_ BitVec 64))
(declare-fun temp1062_66 () (_ BitVec 64))
(declare-fun temp1062_67 () (_ BitVec 64))
(declare-fun temp1062_68 () (_ BitVec 64))
(declare-fun temp1062_69 () (_ BitVec 64))
(declare-fun temp1062_70 () (_ BitVec 64))
(declare-fun temp1062_71 () (_ BitVec 64))
(declare-fun temp1062_72 () (_ BitVec 64))
(declare-fun temp1062_73 () (_ BitVec 64))
(declare-fun temp1062_74 () (_ BitVec 64))
(declare-fun temp1062_75 () (_ BitVec 64))
(declare-fun temp1062_76 () (_ BitVec 64))
(declare-fun temp1062_77 () (_ BitVec 64))
(declare-fun temp1062_78 () (_ BitVec 64))
(declare-fun temp1062_79 () (_ BitVec 64))
(declare-fun temp1062_80 () (_ BitVec 64))
(declare-fun temp1062_81 () (_ BitVec 64))
(declare-fun temp1062_82 () (_ BitVec 64))
(declare-fun temp1062_83 () (_ BitVec 64))
(declare-fun temp1062_84 () (_ BitVec 64))
(declare-fun temp1062_85 () (_ BitVec 64))
(declare-fun temp1062_86 () (_ BitVec 64))
(declare-fun temp1062_87 () (_ BitVec 64))
(declare-fun temp1062_88 () (_ BitVec 64))
(declare-fun temp1062_89 () (_ BitVec 64))
(declare-fun temp1062_90 () (_ BitVec 64))
(declare-fun temp1062_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp1062_92 () (_ BitVec 64))
(declare-fun temp1062_93 () (_ BitVec 64))
(declare-fun temp1062_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1062_95 () (_ BitVec 64))
(declare-fun temp1062_96 () (_ BitVec 64))
(declare-fun temp1062_97 () (_ BitVec 64))
(declare-fun temp1062_98 () (_ BitVec 64))
(declare-fun temp1062_99 () (_ BitVec 64))
(declare-fun temp1062_100 () (_ BitVec 64))
(declare-fun temp1062_101 () (_ BitVec 64))
(declare-fun temp1062_102 () (_ BitVec 64))
(declare-fun temp1062_103 () (_ BitVec 64))
(declare-fun temp1062_104 () (_ BitVec 64))
(declare-fun temp1062_105 () (_ BitVec 64))
(declare-fun temp1062_106 () (_ BitVec 64))
(declare-fun temp1062_107 () (_ BitVec 64))
(declare-fun temp1062_108 () (_ BitVec 64))
(declare-fun temp1062_109 () (_ BitVec 64))
(declare-fun temp1062_110 () (_ BitVec 64))
(declare-fun temp1062_111 () (_ BitVec 64))
(declare-fun temp1062_112 () (_ BitVec 64))
(declare-fun temp1062_113 () (_ BitVec 64))
(declare-fun temp1062_114 () (_ BitVec 64))
(declare-fun temp1062_115 () (_ BitVec 64))
(declare-fun temp1062_116 () (_ BitVec 64))
(declare-fun temp1062_117 () (_ BitVec 64))
(declare-fun temp1062_118 () (_ BitVec 64))
(declare-fun temp1062_119 () (_ BitVec 64))
(declare-fun temp1062_120 () (_ BitVec 64))
(declare-fun temp1062_121 () (_ BitVec 64))
(declare-fun temp1062_122 () (_ BitVec 64))
(declare-fun temp1062_123 () (_ BitVec 64))
(declare-fun temp1062_124 () (_ BitVec 64))
(declare-fun temp1062_125 () (_ BitVec 64))
(declare-fun temp1062_126 () (_ BitVec 64))
(declare-fun temp1062_127 () (_ BitVec 64))
(declare-fun temp1062_128 () (_ BitVec 64))
(declare-fun temp1062_129 () (_ BitVec 64))
(declare-fun temp1062_130 () (_ BitVec 64))
(declare-fun temp1062_131 () (_ BitVec 64))
(declare-fun temp1062_132 () (_ BitVec 64))
(declare-fun temp1062_133 () (_ BitVec 64))
(declare-fun temp1062_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp1062_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp1062_136 () (_ BitVec 64))
(declare-fun temp1062_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp1062_138 () (_ BitVec 64))
(declare-fun temp1062_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1062_140 () (_ BitVec 64))
(declare-fun temp1062_141 () (_ BitVec 64))
(declare-fun temp1062_142 () (_ BitVec 64))
(declare-fun temp1062_143 () (_ BitVec 64))
(declare-fun temp1062_144 () (_ BitVec 64))
(declare-fun temp1062_145 () (_ BitVec 64))
(declare-fun temp1062_146 () (_ BitVec 64))
(declare-fun temp1062_147 () (_ BitVec 64))
(declare-fun temp1062_148 () (_ BitVec 64))
(declare-fun temp1062_149 () (_ BitVec 64))
(declare-fun temp1062_150 () (_ BitVec 64))
(declare-fun temp1062_151 () (_ BitVec 64))
(declare-fun temp1062_152 () (_ BitVec 64))
(declare-fun temp1062_153 () (_ BitVec 64))
(declare-fun temp1062_154 () (_ BitVec 64))
(declare-fun temp1062_155 () (_ BitVec 64))
(declare-fun temp1062_157 () (_ BitVec 64))
(declare-fun temp1062_158 () (_ BitVec 64))
(declare-fun temp1062_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp1062_159 () (_ BitVec 64))
(declare-fun temp1062_160 () (_ BitVec 64))
(declare-fun temp1062_162 () (_ BitVec 64))
(declare-fun temp1062_163 () (_ BitVec 64))
(declare-fun temp1062_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp1062_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp1062_165 () (_ BitVec 64))
(declare-fun temp1062_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp1062_167 () (_ BitVec 64))
(declare-fun temp1062_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp1062_169 () (_ BitVec 64))
(declare-fun temp1062_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1062_171 () (_ BitVec 64))
(declare-fun temp1062_172 () (_ BitVec 64))
(declare-fun temp1062_173 () (_ BitVec 64))
(declare-fun temp1062_174 () (_ BitVec 64))
(declare-fun temp1062_175 () (_ BitVec 64))
(declare-fun temp1062_176 () (_ BitVec 64))
(declare-fun temp1062_177 () (_ BitVec 64))
(declare-fun temp1062_178 () (_ BitVec 64))
(declare-fun temp1062_179 () (_ BitVec 64))
(declare-fun temp1062_180 () (_ BitVec 64))
(declare-fun temp1062_181 () (_ BitVec 64))
(declare-fun temp1062_182 () (_ BitVec 64))
(declare-fun temp1062_183 () (_ BitVec 64))
(declare-fun temp1062_184 () (_ BitVec 64))
(declare-fun temp1062_185 () (_ BitVec 64))
(declare-fun temp1062_186 () (_ BitVec 64))
(declare-fun temp1062_187 () (_ BitVec 64))
(declare-fun temp1062_188 () (_ BitVec 64))
(declare-fun temp1062_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp1062_190 () (_ BitVec 64))
(declare-fun temp1062_192 () (_ BitVec 64))
(declare-fun temp1062_193 () (_ BitVec 64))
(declare-fun temp1062_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp1062_194 () (_ BitVec 64))
(declare-fun temp1062_195 () (_ BitVec 64))
(declare-fun temp1062_197 () (_ BitVec 64))
(declare-fun temp1062_198 () (_ BitVec 64))
(declare-fun temp1062_196 () (_ BitVec 64))
(declare-fun temp1062_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp1062_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp1062_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp1062_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp1062_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp1062_204 () (_ BitVec 64))
(declare-fun temp1062_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp1062_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp1062_207 () (_ BitVec 64))
(declare-fun temp1062_208 () (_ BitVec 64))
(declare-fun temp1062_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp1062_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp1062_211 () (_ BitVec 64))
(declare-fun temp1062_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp1062_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp1062_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp1062_215 () (_ BitVec 64))
(assert (= temp1062_1 #x0000000000000001))
(assert (= var77203 temp1062_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp1062_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp1062_2)))
(assert (= temp1062_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1062_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1062_4 #x0000000000000000))
(assert (= var210941 temp1062_4))
(assert (= temp1062_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp1062_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1062_6 #x0000000000000000))
(assert (= var210986 temp1062_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp1062_7 #x0000000000000000))
(assert (= temp1062_8 temp1062_7))
(assert (= temp1062_9 (select ARGNAME_padding_NAMEEND_VAL temp1062_8)))
(assert (= temp1062_10 #x0000000000000001))
(assert (= temp1062_11 temp1062_10))
(assert (= temp1062_12 (select ARGNAME_padding_NAMEEND_VAL temp1062_11)))
(assert (= temp1062_13 #x0000000000000002))
(assert (= temp1062_14 temp1062_13))
(assert (= temp1062_15 (select ARGNAME_padding_NAMEEND_VAL temp1062_14)))
(assert (= temp1062_16 #x0000000000000003))
(assert (= temp1062_17 temp1062_16))
(assert (= temp1062_18 (select ARGNAME_padding_NAMEEND_VAL temp1062_17)))
(assert (= temp1062_19 #x0000000000000004))
(assert (= temp1062_20 temp1062_19))
(assert (= temp1062_21 (select ARGNAME_padding_NAMEEND_VAL temp1062_20)))
(assert (= temp1062_22 #x0000000000000005))
(assert (= temp1062_23 temp1062_22))
(assert (= temp1062_24 (select ARGNAME_padding_NAMEEND_VAL temp1062_23)))
(assert (= temp1062_25 #x0000000000000000))
(assert (= temp1062_26 #x0000000000000000))
(assert (= temp1062_27 temp1062_26))
(assert (= temp1062_28 (select ARGNAME_padding_NAMEEND_VAL temp1062_27)))
(assert (= temp1062_29 #x0000000000000000))
(assert (= temp1062_30 #x0000000000000001))
(assert (= temp1062_31 temp1062_30))
(assert (= temp1062_32 (select ARGNAME_padding_NAMEEND_VAL temp1062_31)))
(assert (= temp1062_33 #x0000000000000000))
(assert (= temp1062_34 #x0000000000000002))
(assert (= temp1062_35 temp1062_34))
(assert (= temp1062_36 (select ARGNAME_padding_NAMEEND_VAL temp1062_35)))
(assert (= temp1062_37 #x0000000000000000))
(assert (= temp1062_38 #x0000000000000003))
(assert (= temp1062_39 temp1062_38))
(assert (= temp1062_40 (select ARGNAME_padding_NAMEEND_VAL temp1062_39)))
(assert (= temp1062_41 #x0000000000000000))
(assert (= temp1062_42 #x0000000000000004))
(assert (= temp1062_43 temp1062_42))
(assert (= temp1062_44 (select ARGNAME_padding_NAMEEND_VAL temp1062_43)))
(assert (= temp1062_45 #x0000000000000000))
(assert (= temp1062_46 #x0000000000000005))
(assert (= temp1062_47 temp1062_46))
(assert (= temp1062_48 (select ARGNAME_padding_NAMEEND_VAL temp1062_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp1062_28 temp1062_25)
             (bvslt temp1062_32 temp1062_29)
             (bvslt temp1062_36 temp1062_33)
             (bvslt temp1062_40 temp1062_37)
             (bvslt temp1062_44 temp1062_41)
             (bvslt temp1062_48 temp1062_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1062_49 #x0000000000000000))
(assert (= var1191714 temp1062_49))
(assert (= temp1062_50 #x0000000000000000))
(assert (= temp1062_51 temp1062_50))
(assert (= temp1062_52 (select ARGNAME_output_padding_NAMEEND_VAL temp1062_51)))
(assert (= temp1062_53 #x0000000000000001))
(assert (= temp1062_54 temp1062_53))
(assert (= temp1062_55 (select ARGNAME_output_padding_NAMEEND_VAL temp1062_54)))
(assert (= temp1062_56 #x0000000000000002))
(assert (= temp1062_57 temp1062_56))
(assert (= temp1062_58 (select ARGNAME_output_padding_NAMEEND_VAL temp1062_57)))
(assert (= temp1062_59 #x0000000000000003))
(assert (= temp1062_60 temp1062_59))
(assert (= temp1062_61 (select ARGNAME_output_padding_NAMEEND_VAL temp1062_60)))
(assert (= temp1062_62 #x0000000000000004))
(assert (= temp1062_63 temp1062_62))
(assert (= temp1062_64 (select ARGNAME_output_padding_NAMEEND_VAL temp1062_63)))
(assert (= temp1062_65 #x0000000000000005))
(assert (= temp1062_66 temp1062_65))
(assert (= temp1062_67 (select ARGNAME_output_padding_NAMEEND_VAL temp1062_66)))
(assert (= temp1062_68 #x0000000000000000))
(assert (= temp1062_69 #x0000000000000000))
(assert (= temp1062_70 temp1062_69))
(assert (= temp1062_71 (select ARGNAME_output_padding_NAMEEND_VAL temp1062_70)))
(assert (= temp1062_72 #x0000000000000000))
(assert (= temp1062_73 #x0000000000000001))
(assert (= temp1062_74 temp1062_73))
(assert (= temp1062_75 (select ARGNAME_output_padding_NAMEEND_VAL temp1062_74)))
(assert (= temp1062_76 #x0000000000000000))
(assert (= temp1062_77 #x0000000000000002))
(assert (= temp1062_78 temp1062_77))
(assert (= temp1062_79 (select ARGNAME_output_padding_NAMEEND_VAL temp1062_78)))
(assert (= temp1062_80 #x0000000000000000))
(assert (= temp1062_81 #x0000000000000003))
(assert (= temp1062_82 temp1062_81))
(assert (= temp1062_83 (select ARGNAME_output_padding_NAMEEND_VAL temp1062_82)))
(assert (= temp1062_84 #x0000000000000000))
(assert (= temp1062_85 #x0000000000000004))
(assert (= temp1062_86 temp1062_85))
(assert (= temp1062_87 (select ARGNAME_output_padding_NAMEEND_VAL temp1062_86)))
(assert (= temp1062_88 #x0000000000000000))
(assert (= temp1062_89 #x0000000000000005))
(assert (= temp1062_90 temp1062_89))
(assert (= temp1062_91 (select ARGNAME_output_padding_NAMEEND_VAL temp1062_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp1062_71 temp1062_68)
             (bvslt temp1062_75 temp1062_72)
             (bvslt temp1062_79 temp1062_76)
             (bvslt temp1062_83 temp1062_80)
             (bvslt temp1062_87 temp1062_84)
             (bvslt temp1062_91 temp1062_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1062_92 #x0000000000000000))
(assert (= var1191725 temp1062_92))
(assert (= temp1062_93 #x0000000000000000))
(assert (= temp1062_94 temp1062_93))
(assert (= temp1062_95 (select ARGNAME_stride_NAMEEND_VAL temp1062_94)))
(assert (= temp1062_96 #x0000000000000001))
(assert (= temp1062_97 temp1062_96))
(assert (= temp1062_98 (select ARGNAME_stride_NAMEEND_VAL temp1062_97)))
(assert (= temp1062_99 #x0000000000000002))
(assert (= temp1062_100 temp1062_99))
(assert (= temp1062_101 (select ARGNAME_stride_NAMEEND_VAL temp1062_100)))
(assert (= temp1062_102 #x0000000000000003))
(assert (= temp1062_103 temp1062_102))
(assert (= temp1062_104 (select ARGNAME_stride_NAMEEND_VAL temp1062_103)))
(assert (= temp1062_105 #x0000000000000004))
(assert (= temp1062_106 temp1062_105))
(assert (= temp1062_107 (select ARGNAME_stride_NAMEEND_VAL temp1062_106)))
(assert (= temp1062_108 #x0000000000000005))
(assert (= temp1062_109 temp1062_108))
(assert (= temp1062_110 (select ARGNAME_stride_NAMEEND_VAL temp1062_109)))
(assert (= temp1062_111 #x0000000000000000))
(assert (= temp1062_112 #x0000000000000000))
(assert (= temp1062_113 temp1062_112))
(assert (= temp1062_114 (select ARGNAME_stride_NAMEEND_VAL temp1062_113)))
(assert (= temp1062_115 #x0000000000000000))
(assert (= temp1062_116 #x0000000000000001))
(assert (= temp1062_117 temp1062_116))
(assert (= temp1062_118 (select ARGNAME_stride_NAMEEND_VAL temp1062_117)))
(assert (= temp1062_119 #x0000000000000000))
(assert (= temp1062_120 #x0000000000000002))
(assert (= temp1062_121 temp1062_120))
(assert (= temp1062_122 (select ARGNAME_stride_NAMEEND_VAL temp1062_121)))
(assert (= temp1062_123 #x0000000000000000))
(assert (= temp1062_124 #x0000000000000003))
(assert (= temp1062_125 temp1062_124))
(assert (= temp1062_126 (select ARGNAME_stride_NAMEEND_VAL temp1062_125)))
(assert (= temp1062_127 #x0000000000000000))
(assert (= temp1062_128 #x0000000000000004))
(assert (= temp1062_129 temp1062_128))
(assert (= temp1062_130 (select ARGNAME_stride_NAMEEND_VAL temp1062_129)))
(assert (= temp1062_131 #x0000000000000000))
(assert (= temp1062_132 #x0000000000000005))
(assert (= temp1062_133 temp1062_132))
(assert (= temp1062_134 (select ARGNAME_stride_NAMEEND_VAL temp1062_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp1062_114 temp1062_111)
             (bvsle temp1062_118 temp1062_115)
             (bvsle temp1062_122 temp1062_119)
             (bvsle temp1062_126 temp1062_123)
             (bvsle temp1062_130 temp1062_127)
             (bvsle temp1062_134 temp1062_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1062_135 #x0000000000000000))
(assert (= var1191735 temp1062_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1062_136 #x0000000000000001))
(assert (= var1191747 temp1062_136))
(assert (= temp1062_137 #x0000000000000000))
(assert (= var1179826 temp1062_137))
(assert (= temp1062_138 #x0000000000000000))
(assert (= temp1062_139 temp1062_138))
(assert (= temp1062_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1062_139)))
(assert (= temp1062_141 #x0000000000000001))
(assert (= temp1062_142 temp1062_141))
(assert (= temp1062_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1062_142)))
(assert (= temp1062_144 #x0000000000000002))
(assert (= temp1062_145 temp1062_144))
(assert (= temp1062_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1062_145)))
(assert (= temp1062_147 #x0000000000000003))
(assert (= temp1062_148 temp1062_147))
(assert (= temp1062_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1062_148)))
(assert (= temp1062_150 #x0000000000000004))
(assert (= temp1062_151 temp1062_150))
(assert (= temp1062_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1062_151)))
(assert (= temp1062_153 #x0000000000000005))
(assert (= temp1062_154 temp1062_153))
(assert (= temp1062_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1062_154)))
(assert (= temp1062_157 var1179826))
(assert (= temp1062_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1062_157)))
(assert (= temp1062_156 temp1062_158))
(assert (= var1191780
   (ite (bvslt temp1062_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1062_159 #x0000000000000000))
(assert (= var1191780 temp1062_159))
(assert (= temp1062_160 #x0000000000000000))
(assert (= var1179826 temp1062_160))
(assert (= temp1062_162 var1179826))
(assert (= temp1062_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1062_162)))
(assert (= temp1062_161 temp1062_163))
(assert (= var1191802 (bvsmod temp1062_161 ARGNAME_groups_NAMEEND)))
(assert (= temp1062_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp1062_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp1062_165 #x0000000000000001))
(assert (= var1191803 temp1062_165))
(assert (= temp1062_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp1062_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1062_167 #x0000000000000001))
(assert (= var1191823 temp1062_167))
(assert (= temp1062_168 #x0000000000000001))
(assert (= var1180714 temp1062_168))
(assert (= temp1062_169 #x0000000000000000))
(assert (= temp1062_170 temp1062_169))
(assert (= temp1062_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp1062_170)))
(assert (= temp1062_172 #x0000000000000001))
(assert (= temp1062_173 temp1062_172))
(assert (= temp1062_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp1062_173)))
(assert (= temp1062_175 #x0000000000000002))
(assert (= temp1062_176 temp1062_175))
(assert (= temp1062_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp1062_176)))
(assert (= temp1062_178 #x0000000000000003))
(assert (= temp1062_179 temp1062_178))
(assert (= temp1062_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp1062_179)))
(assert (= temp1062_181 #x0000000000000004))
(assert (= temp1062_182 temp1062_181))
(assert (= temp1062_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp1062_182)))
(assert (= temp1062_184 #x0000000000000005))
(assert (= temp1062_185 temp1062_184))
(assert (= temp1062_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp1062_185)))
(assert (= temp1062_187 #x0000000000000000))
(assert (= temp1062_188
   (ite (bvslt var1180714 temp1062_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp1062_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp1062_188)))
(assert (= var1191831 temp1062_189))
(assert (bvslt (ite (bvslt var1180714 temp1062_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1062_190 #x0000000000000001))
(assert (= var1180714 temp1062_190))
(assert (= temp1062_192 var1180714))
(assert (= temp1062_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1062_192)))
(assert (= temp1062_191 temp1062_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp1062_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp1062_194 #x0000000000000001))
(assert (= var1191836 temp1062_194))
(assert (= temp1062_195 #x0000000000000000))
(assert (= var1179826 temp1062_195))
(assert (= temp1062_197 var1179826))
(assert (= temp1062_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1062_197)))
(assert (= temp1062_196 temp1062_198))
(assert (= temp1062_199 #x0000000000000002))
(assert (= var1586025 temp1062_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp1062_200 #x0000000000000001))
(assert (= var1191993 temp1062_200))
(assert (= temp1062_201 #x0000000000000001))
(assert (= var2700303 temp1062_201))
(assert (= temp1062_202 #x0000000000000001))
(assert (= var2962447 temp1062_202))
(assert (= temp1062_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1062_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1062_204 #x0000000000000001))
(assert (= var211058 temp1062_204))
(assert (= temp1062_205 #x0000000000000001))
(assert (= var211188 temp1062_205))
(assert (= var3879401 var211188))
(assert (= temp1062_206 #x0000000000000000))
(assert (= var3866802 temp1062_206))
(assert (= temp1062_207 #x0000000000000000))
(assert (= temp1062_208
   (ite (bvslt var3866802 temp1062_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp1062_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp1062_208)))
(assert (= var3879420 temp1062_209))
(assert (bvslt (ite (bvslt var3866802 temp1062_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1062_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp1062_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp1062_211 #x0000000000000001))
(assert (= var3879421 temp1062_211))
(assert (= temp1062_212 #x0000000000000000))
(assert (= var4079423 temp1062_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp1062_213 #x0000000000000002))
(assert (= var4208259 temp1062_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1062_214 #x0000000000000000))
(assert (= var4273820 temp1062_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp1062_215 #x0000000000000001))
(assert (= var211058 temp1062_215))
(model-add temp1062_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp1062_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1062_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp1062_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





