(declare-fun temp10860_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10860_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10860_3 () (_ BitVec 64))
(declare-fun temp10860_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10860_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10860_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10860_7 () (_ BitVec 64))
(declare-fun temp10860_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10860_9 () (_ BitVec 64))
(declare-fun temp10860_10 () (_ BitVec 64))
(declare-fun temp10860_11 () (_ BitVec 64))
(declare-fun temp10860_12 () (_ BitVec 64))
(declare-fun temp10860_13 () (_ BitVec 64))
(declare-fun temp10860_14 () (_ BitVec 64))
(declare-fun temp10860_15 () (_ BitVec 64))
(declare-fun temp10860_16 () (_ BitVec 64))
(declare-fun temp10860_17 () (_ BitVec 64))
(declare-fun temp10860_18 () (_ BitVec 64))
(declare-fun temp10860_19 () (_ BitVec 64))
(declare-fun temp10860_20 () (_ BitVec 64))
(declare-fun temp10860_21 () (_ BitVec 64))
(declare-fun temp10860_22 () (_ BitVec 64))
(declare-fun temp10860_23 () (_ BitVec 64))
(declare-fun temp10860_24 () (_ BitVec 64))
(declare-fun temp10860_25 () (_ BitVec 64))
(declare-fun temp10860_26 () (_ BitVec 64))
(declare-fun temp10860_27 () (_ BitVec 64))
(declare-fun temp10860_28 () (_ BitVec 64))
(declare-fun temp10860_29 () (_ BitVec 64))
(declare-fun temp10860_30 () (_ BitVec 64))
(declare-fun temp10860_31 () (_ BitVec 64))
(declare-fun temp10860_32 () (_ BitVec 64))
(declare-fun temp10860_33 () (_ BitVec 64))
(declare-fun temp10860_34 () (_ BitVec 64))
(declare-fun temp10860_35 () (_ BitVec 64))
(declare-fun temp10860_36 () (_ BitVec 64))
(declare-fun temp10860_37 () (_ BitVec 64))
(declare-fun temp10860_38 () (_ BitVec 64))
(declare-fun temp10860_39 () (_ BitVec 64))
(declare-fun temp10860_40 () (_ BitVec 64))
(declare-fun temp10860_41 () (_ BitVec 64))
(declare-fun temp10860_42 () (_ BitVec 64))
(declare-fun temp10860_43 () (_ BitVec 64))
(declare-fun temp10860_44 () (_ BitVec 64))
(declare-fun temp10860_45 () (_ BitVec 64))
(declare-fun temp10860_46 () (_ BitVec 64))
(declare-fun temp10860_47 () (_ BitVec 64))
(declare-fun temp10860_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10860_49 () (_ BitVec 64))
(declare-fun temp10860_50 () (_ BitVec 64))
(declare-fun temp10860_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10860_52 () (_ BitVec 64))
(declare-fun temp10860_53 () (_ BitVec 64))
(declare-fun temp10860_54 () (_ BitVec 64))
(declare-fun temp10860_55 () (_ BitVec 64))
(declare-fun temp10860_56 () (_ BitVec 64))
(declare-fun temp10860_57 () (_ BitVec 64))
(declare-fun temp10860_58 () (_ BitVec 64))
(declare-fun temp10860_59 () (_ BitVec 64))
(declare-fun temp10860_60 () (_ BitVec 64))
(declare-fun temp10860_61 () (_ BitVec 64))
(declare-fun temp10860_62 () (_ BitVec 64))
(declare-fun temp10860_63 () (_ BitVec 64))
(declare-fun temp10860_64 () (_ BitVec 64))
(declare-fun temp10860_65 () (_ BitVec 64))
(declare-fun temp10860_66 () (_ BitVec 64))
(declare-fun temp10860_67 () (_ BitVec 64))
(declare-fun temp10860_68 () (_ BitVec 64))
(declare-fun temp10860_69 () (_ BitVec 64))
(declare-fun temp10860_70 () (_ BitVec 64))
(declare-fun temp10860_71 () (_ BitVec 64))
(declare-fun temp10860_72 () (_ BitVec 64))
(declare-fun temp10860_73 () (_ BitVec 64))
(declare-fun temp10860_74 () (_ BitVec 64))
(declare-fun temp10860_75 () (_ BitVec 64))
(declare-fun temp10860_76 () (_ BitVec 64))
(declare-fun temp10860_77 () (_ BitVec 64))
(declare-fun temp10860_78 () (_ BitVec 64))
(declare-fun temp10860_79 () (_ BitVec 64))
(declare-fun temp10860_80 () (_ BitVec 64))
(declare-fun temp10860_81 () (_ BitVec 64))
(declare-fun temp10860_82 () (_ BitVec 64))
(declare-fun temp10860_83 () (_ BitVec 64))
(declare-fun temp10860_84 () (_ BitVec 64))
(declare-fun temp10860_85 () (_ BitVec 64))
(declare-fun temp10860_86 () (_ BitVec 64))
(declare-fun temp10860_87 () (_ BitVec 64))
(declare-fun temp10860_88 () (_ BitVec 64))
(declare-fun temp10860_89 () (_ BitVec 64))
(declare-fun temp10860_90 () (_ BitVec 64))
(declare-fun temp10860_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10860_92 () (_ BitVec 64))
(declare-fun temp10860_93 () (_ BitVec 64))
(declare-fun temp10860_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10860_95 () (_ BitVec 64))
(declare-fun temp10860_96 () (_ BitVec 64))
(declare-fun temp10860_97 () (_ BitVec 64))
(declare-fun temp10860_98 () (_ BitVec 64))
(declare-fun temp10860_99 () (_ BitVec 64))
(declare-fun temp10860_100 () (_ BitVec 64))
(declare-fun temp10860_101 () (_ BitVec 64))
(declare-fun temp10860_102 () (_ BitVec 64))
(declare-fun temp10860_103 () (_ BitVec 64))
(declare-fun temp10860_104 () (_ BitVec 64))
(declare-fun temp10860_105 () (_ BitVec 64))
(declare-fun temp10860_106 () (_ BitVec 64))
(declare-fun temp10860_107 () (_ BitVec 64))
(declare-fun temp10860_108 () (_ BitVec 64))
(declare-fun temp10860_109 () (_ BitVec 64))
(declare-fun temp10860_110 () (_ BitVec 64))
(declare-fun temp10860_111 () (_ BitVec 64))
(declare-fun temp10860_112 () (_ BitVec 64))
(declare-fun temp10860_113 () (_ BitVec 64))
(declare-fun temp10860_114 () (_ BitVec 64))
(declare-fun temp10860_115 () (_ BitVec 64))
(declare-fun temp10860_116 () (_ BitVec 64))
(declare-fun temp10860_117 () (_ BitVec 64))
(declare-fun temp10860_118 () (_ BitVec 64))
(declare-fun temp10860_119 () (_ BitVec 64))
(declare-fun temp10860_120 () (_ BitVec 64))
(declare-fun temp10860_121 () (_ BitVec 64))
(declare-fun temp10860_122 () (_ BitVec 64))
(declare-fun temp10860_123 () (_ BitVec 64))
(declare-fun temp10860_124 () (_ BitVec 64))
(declare-fun temp10860_125 () (_ BitVec 64))
(declare-fun temp10860_126 () (_ BitVec 64))
(declare-fun temp10860_127 () (_ BitVec 64))
(declare-fun temp10860_128 () (_ BitVec 64))
(declare-fun temp10860_129 () (_ BitVec 64))
(declare-fun temp10860_130 () (_ BitVec 64))
(declare-fun temp10860_131 () (_ BitVec 64))
(declare-fun temp10860_132 () (_ BitVec 64))
(declare-fun temp10860_133 () (_ BitVec 64))
(declare-fun temp10860_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10860_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10860_136 () (_ BitVec 64))
(declare-fun temp10860_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10860_138 () (_ BitVec 64))
(declare-fun temp10860_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10860_140 () (_ BitVec 64))
(declare-fun temp10860_141 () (_ BitVec 64))
(declare-fun temp10860_142 () (_ BitVec 64))
(declare-fun temp10860_143 () (_ BitVec 64))
(declare-fun temp10860_144 () (_ BitVec 64))
(declare-fun temp10860_145 () (_ BitVec 64))
(declare-fun temp10860_146 () (_ BitVec 64))
(declare-fun temp10860_147 () (_ BitVec 64))
(declare-fun temp10860_148 () (_ BitVec 64))
(declare-fun temp10860_149 () (_ BitVec 64))
(declare-fun temp10860_150 () (_ BitVec 64))
(declare-fun temp10860_151 () (_ BitVec 64))
(declare-fun temp10860_152 () (_ BitVec 64))
(declare-fun temp10860_153 () (_ BitVec 64))
(declare-fun temp10860_154 () (_ BitVec 64))
(declare-fun temp10860_155 () (_ BitVec 64))
(declare-fun temp10860_157 () (_ BitVec 64))
(declare-fun temp10860_158 () (_ BitVec 64))
(declare-fun temp10860_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10860_159 () (_ BitVec 64))
(declare-fun temp10860_160 () (_ BitVec 64))
(declare-fun temp10860_162 () (_ BitVec 64))
(declare-fun temp10860_163 () (_ BitVec 64))
(declare-fun temp10860_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10860_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10860_165 () (_ BitVec 64))
(declare-fun temp10860_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10860_167 () (_ BitVec 64))
(declare-fun temp10860_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10860_169 () (_ BitVec 64))
(declare-fun temp10860_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10860_171 () (_ BitVec 64))
(declare-fun temp10860_172 () (_ BitVec 64))
(declare-fun temp10860_173 () (_ BitVec 64))
(declare-fun temp10860_174 () (_ BitVec 64))
(declare-fun temp10860_175 () (_ BitVec 64))
(declare-fun temp10860_176 () (_ BitVec 64))
(declare-fun temp10860_177 () (_ BitVec 64))
(declare-fun temp10860_178 () (_ BitVec 64))
(declare-fun temp10860_179 () (_ BitVec 64))
(declare-fun temp10860_180 () (_ BitVec 64))
(declare-fun temp10860_181 () (_ BitVec 64))
(declare-fun temp10860_182 () (_ BitVec 64))
(declare-fun temp10860_183 () (_ BitVec 64))
(declare-fun temp10860_184 () (_ BitVec 64))
(declare-fun temp10860_185 () (_ BitVec 64))
(declare-fun temp10860_186 () (_ BitVec 64))
(declare-fun temp10860_187 () (_ BitVec 64))
(declare-fun temp10860_188 () (_ BitVec 64))
(declare-fun temp10860_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10860_190 () (_ BitVec 64))
(declare-fun temp10860_192 () (_ BitVec 64))
(declare-fun temp10860_193 () (_ BitVec 64))
(declare-fun temp10860_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10860_194 () (_ BitVec 64))
(declare-fun temp10860_195 () (_ BitVec 64))
(declare-fun temp10860_197 () (_ BitVec 64))
(declare-fun temp10860_198 () (_ BitVec 64))
(declare-fun temp10860_196 () (_ BitVec 64))
(declare-fun temp10860_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10860_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10860_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10860_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10860_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10860_204 () (_ BitVec 64))
(declare-fun temp10860_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10860_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10860_207 () (_ BitVec 64))
(declare-fun temp10860_208 () (_ BitVec 64))
(declare-fun temp10860_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10860_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10860_211 () (_ BitVec 64))
(declare-fun temp10860_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10860_213 () (_ BitVec 64))
(declare-fun temp10860_214 () (_ BitVec 64))
(declare-fun temp10860_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10860_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10860_217 () (_ BitVec 64))
(declare-fun temp10860_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10860_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10860_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var5452176 () (_ BitVec 64))
(declare-fun var5714320 () (_ BitVec 64))
(declare-fun temp10860_221 () (_ BitVec 64))
(declare-fun temp10860_222 () (_ BitVec 64))
(declare-fun var7353108 () (_ BitVec 64))
(declare-fun var7353075 () (_ BitVec 64))
(declare-fun var7221639 () (_ BitVec 64))
(declare-fun var7221635 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp10860_223 () (_ BitVec 64))
(assert (= temp10860_1 #x0000000000000001))
(assert (= var77203 temp10860_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10860_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10860_2)))
(assert (= temp10860_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10860_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10860_4 #x0000000000000000))
(assert (= var210941 temp10860_4))
(assert (= temp10860_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10860_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10860_6 #x0000000000000000))
(assert (= var210986 temp10860_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10860_7 #x0000000000000000))
(assert (= temp10860_8 temp10860_7))
(assert (= temp10860_9 (select ARGNAME_padding_NAMEEND_VAL temp10860_8)))
(assert (= temp10860_10 #x0000000000000001))
(assert (= temp10860_11 temp10860_10))
(assert (= temp10860_12 (select ARGNAME_padding_NAMEEND_VAL temp10860_11)))
(assert (= temp10860_13 #x0000000000000002))
(assert (= temp10860_14 temp10860_13))
(assert (= temp10860_15 (select ARGNAME_padding_NAMEEND_VAL temp10860_14)))
(assert (= temp10860_16 #x0000000000000003))
(assert (= temp10860_17 temp10860_16))
(assert (= temp10860_18 (select ARGNAME_padding_NAMEEND_VAL temp10860_17)))
(assert (= temp10860_19 #x0000000000000004))
(assert (= temp10860_20 temp10860_19))
(assert (= temp10860_21 (select ARGNAME_padding_NAMEEND_VAL temp10860_20)))
(assert (= temp10860_22 #x0000000000000005))
(assert (= temp10860_23 temp10860_22))
(assert (= temp10860_24 (select ARGNAME_padding_NAMEEND_VAL temp10860_23)))
(assert (= temp10860_25 #x0000000000000000))
(assert (= temp10860_26 #x0000000000000000))
(assert (= temp10860_27 temp10860_26))
(assert (= temp10860_28 (select ARGNAME_padding_NAMEEND_VAL temp10860_27)))
(assert (= temp10860_29 #x0000000000000000))
(assert (= temp10860_30 #x0000000000000001))
(assert (= temp10860_31 temp10860_30))
(assert (= temp10860_32 (select ARGNAME_padding_NAMEEND_VAL temp10860_31)))
(assert (= temp10860_33 #x0000000000000000))
(assert (= temp10860_34 #x0000000000000002))
(assert (= temp10860_35 temp10860_34))
(assert (= temp10860_36 (select ARGNAME_padding_NAMEEND_VAL temp10860_35)))
(assert (= temp10860_37 #x0000000000000000))
(assert (= temp10860_38 #x0000000000000003))
(assert (= temp10860_39 temp10860_38))
(assert (= temp10860_40 (select ARGNAME_padding_NAMEEND_VAL temp10860_39)))
(assert (= temp10860_41 #x0000000000000000))
(assert (= temp10860_42 #x0000000000000004))
(assert (= temp10860_43 temp10860_42))
(assert (= temp10860_44 (select ARGNAME_padding_NAMEEND_VAL temp10860_43)))
(assert (= temp10860_45 #x0000000000000000))
(assert (= temp10860_46 #x0000000000000005))
(assert (= temp10860_47 temp10860_46))
(assert (= temp10860_48 (select ARGNAME_padding_NAMEEND_VAL temp10860_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10860_28 temp10860_25)
             (bvslt temp10860_32 temp10860_29)
             (bvslt temp10860_36 temp10860_33)
             (bvslt temp10860_40 temp10860_37)
             (bvslt temp10860_44 temp10860_41)
             (bvslt temp10860_48 temp10860_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10860_49 #x0000000000000000))
(assert (= var1191714 temp10860_49))
(assert (= temp10860_50 #x0000000000000000))
(assert (= temp10860_51 temp10860_50))
(assert (= temp10860_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10860_51)))
(assert (= temp10860_53 #x0000000000000001))
(assert (= temp10860_54 temp10860_53))
(assert (= temp10860_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10860_54)))
(assert (= temp10860_56 #x0000000000000002))
(assert (= temp10860_57 temp10860_56))
(assert (= temp10860_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10860_57)))
(assert (= temp10860_59 #x0000000000000003))
(assert (= temp10860_60 temp10860_59))
(assert (= temp10860_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10860_60)))
(assert (= temp10860_62 #x0000000000000004))
(assert (= temp10860_63 temp10860_62))
(assert (= temp10860_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10860_63)))
(assert (= temp10860_65 #x0000000000000005))
(assert (= temp10860_66 temp10860_65))
(assert (= temp10860_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10860_66)))
(assert (= temp10860_68 #x0000000000000000))
(assert (= temp10860_69 #x0000000000000000))
(assert (= temp10860_70 temp10860_69))
(assert (= temp10860_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10860_70)))
(assert (= temp10860_72 #x0000000000000000))
(assert (= temp10860_73 #x0000000000000001))
(assert (= temp10860_74 temp10860_73))
(assert (= temp10860_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10860_74)))
(assert (= temp10860_76 #x0000000000000000))
(assert (= temp10860_77 #x0000000000000002))
(assert (= temp10860_78 temp10860_77))
(assert (= temp10860_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10860_78)))
(assert (= temp10860_80 #x0000000000000000))
(assert (= temp10860_81 #x0000000000000003))
(assert (= temp10860_82 temp10860_81))
(assert (= temp10860_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10860_82)))
(assert (= temp10860_84 #x0000000000000000))
(assert (= temp10860_85 #x0000000000000004))
(assert (= temp10860_86 temp10860_85))
(assert (= temp10860_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10860_86)))
(assert (= temp10860_88 #x0000000000000000))
(assert (= temp10860_89 #x0000000000000005))
(assert (= temp10860_90 temp10860_89))
(assert (= temp10860_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10860_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10860_71 temp10860_68)
             (bvslt temp10860_75 temp10860_72)
             (bvslt temp10860_79 temp10860_76)
             (bvslt temp10860_83 temp10860_80)
             (bvslt temp10860_87 temp10860_84)
             (bvslt temp10860_91 temp10860_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10860_92 #x0000000000000000))
(assert (= var1191725 temp10860_92))
(assert (= temp10860_93 #x0000000000000000))
(assert (= temp10860_94 temp10860_93))
(assert (= temp10860_95 (select ARGNAME_stride_NAMEEND_VAL temp10860_94)))
(assert (= temp10860_96 #x0000000000000001))
(assert (= temp10860_97 temp10860_96))
(assert (= temp10860_98 (select ARGNAME_stride_NAMEEND_VAL temp10860_97)))
(assert (= temp10860_99 #x0000000000000002))
(assert (= temp10860_100 temp10860_99))
(assert (= temp10860_101 (select ARGNAME_stride_NAMEEND_VAL temp10860_100)))
(assert (= temp10860_102 #x0000000000000003))
(assert (= temp10860_103 temp10860_102))
(assert (= temp10860_104 (select ARGNAME_stride_NAMEEND_VAL temp10860_103)))
(assert (= temp10860_105 #x0000000000000004))
(assert (= temp10860_106 temp10860_105))
(assert (= temp10860_107 (select ARGNAME_stride_NAMEEND_VAL temp10860_106)))
(assert (= temp10860_108 #x0000000000000005))
(assert (= temp10860_109 temp10860_108))
(assert (= temp10860_110 (select ARGNAME_stride_NAMEEND_VAL temp10860_109)))
(assert (= temp10860_111 #x0000000000000000))
(assert (= temp10860_112 #x0000000000000000))
(assert (= temp10860_113 temp10860_112))
(assert (= temp10860_114 (select ARGNAME_stride_NAMEEND_VAL temp10860_113)))
(assert (= temp10860_115 #x0000000000000000))
(assert (= temp10860_116 #x0000000000000001))
(assert (= temp10860_117 temp10860_116))
(assert (= temp10860_118 (select ARGNAME_stride_NAMEEND_VAL temp10860_117)))
(assert (= temp10860_119 #x0000000000000000))
(assert (= temp10860_120 #x0000000000000002))
(assert (= temp10860_121 temp10860_120))
(assert (= temp10860_122 (select ARGNAME_stride_NAMEEND_VAL temp10860_121)))
(assert (= temp10860_123 #x0000000000000000))
(assert (= temp10860_124 #x0000000000000003))
(assert (= temp10860_125 temp10860_124))
(assert (= temp10860_126 (select ARGNAME_stride_NAMEEND_VAL temp10860_125)))
(assert (= temp10860_127 #x0000000000000000))
(assert (= temp10860_128 #x0000000000000004))
(assert (= temp10860_129 temp10860_128))
(assert (= temp10860_130 (select ARGNAME_stride_NAMEEND_VAL temp10860_129)))
(assert (= temp10860_131 #x0000000000000000))
(assert (= temp10860_132 #x0000000000000005))
(assert (= temp10860_133 temp10860_132))
(assert (= temp10860_134 (select ARGNAME_stride_NAMEEND_VAL temp10860_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10860_114 temp10860_111)
             (bvsle temp10860_118 temp10860_115)
             (bvsle temp10860_122 temp10860_119)
             (bvsle temp10860_126 temp10860_123)
             (bvsle temp10860_130 temp10860_127)
             (bvsle temp10860_134 temp10860_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10860_135 #x0000000000000000))
(assert (= var1191735 temp10860_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10860_136 #x0000000000000001))
(assert (= var1191747 temp10860_136))
(assert (= temp10860_137 #x0000000000000000))
(assert (= var1179826 temp10860_137))
(assert (= temp10860_138 #x0000000000000000))
(assert (= temp10860_139 temp10860_138))
(assert (= temp10860_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10860_139)))
(assert (= temp10860_141 #x0000000000000001))
(assert (= temp10860_142 temp10860_141))
(assert (= temp10860_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10860_142)))
(assert (= temp10860_144 #x0000000000000002))
(assert (= temp10860_145 temp10860_144))
(assert (= temp10860_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10860_145)))
(assert (= temp10860_147 #x0000000000000003))
(assert (= temp10860_148 temp10860_147))
(assert (= temp10860_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10860_148)))
(assert (= temp10860_150 #x0000000000000004))
(assert (= temp10860_151 temp10860_150))
(assert (= temp10860_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10860_151)))
(assert (= temp10860_153 #x0000000000000005))
(assert (= temp10860_154 temp10860_153))
(assert (= temp10860_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10860_154)))
(assert (= temp10860_157 var1179826))
(assert (= temp10860_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10860_157)))
(assert (= temp10860_156 temp10860_158))
(assert (= var1191780
   (ite (bvslt temp10860_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10860_159 #x0000000000000000))
(assert (= var1191780 temp10860_159))
(assert (= temp10860_160 #x0000000000000000))
(assert (= var1179826 temp10860_160))
(assert (= temp10860_162 var1179826))
(assert (= temp10860_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10860_162)))
(assert (= temp10860_161 temp10860_163))
(assert (= var1191802 (bvsmod temp10860_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10860_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10860_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10860_165 #x0000000000000001))
(assert (= var1191803 temp10860_165))
(assert (= temp10860_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10860_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10860_167 #x0000000000000001))
(assert (= var1191823 temp10860_167))
(assert (= temp10860_168 #x0000000000000001))
(assert (= var1180714 temp10860_168))
(assert (= temp10860_169 #x0000000000000000))
(assert (= temp10860_170 temp10860_169))
(assert (= temp10860_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10860_170)))
(assert (= temp10860_172 #x0000000000000001))
(assert (= temp10860_173 temp10860_172))
(assert (= temp10860_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10860_173)))
(assert (= temp10860_175 #x0000000000000002))
(assert (= temp10860_176 temp10860_175))
(assert (= temp10860_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10860_176)))
(assert (= temp10860_178 #x0000000000000003))
(assert (= temp10860_179 temp10860_178))
(assert (= temp10860_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10860_179)))
(assert (= temp10860_181 #x0000000000000004))
(assert (= temp10860_182 temp10860_181))
(assert (= temp10860_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10860_182)))
(assert (= temp10860_184 #x0000000000000005))
(assert (= temp10860_185 temp10860_184))
(assert (= temp10860_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10860_185)))
(assert (= temp10860_187 #x0000000000000000))
(assert (= temp10860_188
   (ite (bvslt var1180714 temp10860_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10860_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10860_188)))
(assert (= var1191831 temp10860_189))
(assert (bvslt (ite (bvslt var1180714 temp10860_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10860_190 #x0000000000000001))
(assert (= var1180714 temp10860_190))
(assert (= temp10860_192 var1180714))
(assert (= temp10860_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10860_192)))
(assert (= temp10860_191 temp10860_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10860_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10860_194 #x0000000000000001))
(assert (= var1191836 temp10860_194))
(assert (= temp10860_195 #x0000000000000000))
(assert (= var1179826 temp10860_195))
(assert (= temp10860_197 var1179826))
(assert (= temp10860_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10860_197)))
(assert (= temp10860_196 temp10860_198))
(assert (= temp10860_199 #x0000000000000002))
(assert (= var1586025 temp10860_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10860_200 #x0000000000000001))
(assert (= var1191993 temp10860_200))
(assert (= temp10860_201 #x0000000000000001))
(assert (= var2700303 temp10860_201))
(assert (= temp10860_202 #x0000000000000001))
(assert (= var2962447 temp10860_202))
(assert (= temp10860_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10860_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10860_204 #x0000000000000001))
(assert (= var211058 temp10860_204))
(assert (= temp10860_205 #x0000000000000001))
(assert (= var211188 temp10860_205))
(assert (= var3879401 var211188))
(assert (= temp10860_206 #x0000000000000000))
(assert (= var3866802 temp10860_206))
(assert (= temp10860_207 #x0000000000000000))
(assert (= temp10860_208
   (ite (bvslt var3866802 temp10860_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10860_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10860_208)))
(assert (= var3879420 temp10860_209))
(assert (bvslt (ite (bvslt var3866802 temp10860_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10860_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10860_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10860_211 #x0000000000000000))
(assert (= var3879421 temp10860_211))
(assert (= temp10860_212 #x0000000000000001))
(assert (= var3867690 temp10860_212))
(assert (= temp10860_213 #x0000000000000000))
(assert (= temp10860_214
   (ite (bvslt var3867690 temp10860_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10860_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10860_214)))
(assert (= var3879423 temp10860_215))
(assert (bvslt (ite (bvslt var3867690 temp10860_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10860_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10860_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10860_217 #x0000000000000001))
(assert (= var3879424 temp10860_217))
(assert (= temp10860_218 #x0000000000000000))
(assert (= var4133117 temp10860_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10860_219 #x0000000000000002))
(assert (= var4339331 temp10860_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10860_220 #x0000000000000000))
(assert (= var4404892 temp10860_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var5452176 var211201))
(assert (= var5714320 var211201))
(assert (= temp10860_221 #x0000000000000001))
(assert (= var211058 temp10860_221))
(assert (= temp10860_222 #x0000000000000000))
(assert (= var7353108 temp10860_222))
(assert (= var7353075 var7353108))
(assert (= var7221639 var7353075))
(assert (= var7221635 var7221639))
(assert (= var212669 var7221635))
(assert (= temp10860_223 #x0000000000000000))
(assert (= var212669 temp10860_223))
(model-add temp10860_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10860_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10860_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10860_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))



