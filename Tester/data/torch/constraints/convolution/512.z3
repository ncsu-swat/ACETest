(declare-fun temp682_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp682_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp682_3 () (_ BitVec 64))
(declare-fun temp682_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp682_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp682_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp682_7 () (_ BitVec 64))
(declare-fun temp682_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp682_9 () (_ BitVec 64))
(declare-fun temp682_10 () (_ BitVec 64))
(declare-fun temp682_11 () (_ BitVec 64))
(declare-fun temp682_12 () (_ BitVec 64))
(declare-fun temp682_13 () (_ BitVec 64))
(declare-fun temp682_14 () (_ BitVec 64))
(declare-fun temp682_15 () (_ BitVec 64))
(declare-fun temp682_16 () (_ BitVec 64))
(declare-fun temp682_17 () (_ BitVec 64))
(declare-fun temp682_18 () (_ BitVec 64))
(declare-fun temp682_19 () (_ BitVec 64))
(declare-fun temp682_20 () (_ BitVec 64))
(declare-fun temp682_21 () (_ BitVec 64))
(declare-fun temp682_22 () (_ BitVec 64))
(declare-fun temp682_23 () (_ BitVec 64))
(declare-fun temp682_24 () (_ BitVec 64))
(declare-fun temp682_25 () (_ BitVec 64))
(declare-fun temp682_26 () (_ BitVec 64))
(declare-fun temp682_27 () (_ BitVec 64))
(declare-fun temp682_28 () (_ BitVec 64))
(declare-fun temp682_29 () (_ BitVec 64))
(declare-fun temp682_30 () (_ BitVec 64))
(declare-fun temp682_31 () (_ BitVec 64))
(declare-fun temp682_32 () (_ BitVec 64))
(declare-fun temp682_33 () (_ BitVec 64))
(declare-fun temp682_34 () (_ BitVec 64))
(declare-fun temp682_35 () (_ BitVec 64))
(declare-fun temp682_36 () (_ BitVec 64))
(declare-fun temp682_37 () (_ BitVec 64))
(declare-fun temp682_38 () (_ BitVec 64))
(declare-fun temp682_39 () (_ BitVec 64))
(declare-fun temp682_40 () (_ BitVec 64))
(declare-fun temp682_41 () (_ BitVec 64))
(declare-fun temp682_42 () (_ BitVec 64))
(declare-fun temp682_43 () (_ BitVec 64))
(declare-fun temp682_44 () (_ BitVec 64))
(declare-fun temp682_45 () (_ BitVec 64))
(declare-fun temp682_46 () (_ BitVec 64))
(declare-fun temp682_47 () (_ BitVec 64))
(declare-fun temp682_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp682_49 () (_ BitVec 64))
(declare-fun temp682_50 () (_ BitVec 64))
(declare-fun temp682_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp682_52 () (_ BitVec 64))
(declare-fun temp682_53 () (_ BitVec 64))
(declare-fun temp682_54 () (_ BitVec 64))
(declare-fun temp682_55 () (_ BitVec 64))
(declare-fun temp682_56 () (_ BitVec 64))
(declare-fun temp682_57 () (_ BitVec 64))
(declare-fun temp682_58 () (_ BitVec 64))
(declare-fun temp682_59 () (_ BitVec 64))
(declare-fun temp682_60 () (_ BitVec 64))
(declare-fun temp682_61 () (_ BitVec 64))
(declare-fun temp682_62 () (_ BitVec 64))
(declare-fun temp682_63 () (_ BitVec 64))
(declare-fun temp682_64 () (_ BitVec 64))
(declare-fun temp682_65 () (_ BitVec 64))
(declare-fun temp682_66 () (_ BitVec 64))
(declare-fun temp682_67 () (_ BitVec 64))
(declare-fun temp682_68 () (_ BitVec 64))
(declare-fun temp682_69 () (_ BitVec 64))
(declare-fun temp682_70 () (_ BitVec 64))
(declare-fun temp682_71 () (_ BitVec 64))
(declare-fun temp682_72 () (_ BitVec 64))
(declare-fun temp682_73 () (_ BitVec 64))
(declare-fun temp682_74 () (_ BitVec 64))
(declare-fun temp682_75 () (_ BitVec 64))
(declare-fun temp682_76 () (_ BitVec 64))
(declare-fun temp682_77 () (_ BitVec 64))
(declare-fun temp682_78 () (_ BitVec 64))
(declare-fun temp682_79 () (_ BitVec 64))
(declare-fun temp682_80 () (_ BitVec 64))
(declare-fun temp682_81 () (_ BitVec 64))
(declare-fun temp682_82 () (_ BitVec 64))
(declare-fun temp682_83 () (_ BitVec 64))
(declare-fun temp682_84 () (_ BitVec 64))
(declare-fun temp682_85 () (_ BitVec 64))
(declare-fun temp682_86 () (_ BitVec 64))
(declare-fun temp682_87 () (_ BitVec 64))
(declare-fun temp682_88 () (_ BitVec 64))
(declare-fun temp682_89 () (_ BitVec 64))
(declare-fun temp682_90 () (_ BitVec 64))
(declare-fun temp682_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp682_92 () (_ BitVec 64))
(declare-fun temp682_93 () (_ BitVec 64))
(declare-fun temp682_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp682_95 () (_ BitVec 64))
(declare-fun temp682_96 () (_ BitVec 64))
(declare-fun temp682_97 () (_ BitVec 64))
(declare-fun temp682_98 () (_ BitVec 64))
(declare-fun temp682_99 () (_ BitVec 64))
(declare-fun temp682_100 () (_ BitVec 64))
(declare-fun temp682_101 () (_ BitVec 64))
(declare-fun temp682_102 () (_ BitVec 64))
(declare-fun temp682_103 () (_ BitVec 64))
(declare-fun temp682_104 () (_ BitVec 64))
(declare-fun temp682_105 () (_ BitVec 64))
(declare-fun temp682_106 () (_ BitVec 64))
(declare-fun temp682_107 () (_ BitVec 64))
(declare-fun temp682_108 () (_ BitVec 64))
(declare-fun temp682_109 () (_ BitVec 64))
(declare-fun temp682_110 () (_ BitVec 64))
(declare-fun temp682_111 () (_ BitVec 64))
(declare-fun temp682_112 () (_ BitVec 64))
(declare-fun temp682_113 () (_ BitVec 64))
(declare-fun temp682_114 () (_ BitVec 64))
(declare-fun temp682_115 () (_ BitVec 64))
(declare-fun temp682_116 () (_ BitVec 64))
(declare-fun temp682_117 () (_ BitVec 64))
(declare-fun temp682_118 () (_ BitVec 64))
(declare-fun temp682_119 () (_ BitVec 64))
(declare-fun temp682_120 () (_ BitVec 64))
(declare-fun temp682_121 () (_ BitVec 64))
(declare-fun temp682_122 () (_ BitVec 64))
(declare-fun temp682_123 () (_ BitVec 64))
(declare-fun temp682_124 () (_ BitVec 64))
(declare-fun temp682_125 () (_ BitVec 64))
(declare-fun temp682_126 () (_ BitVec 64))
(declare-fun temp682_127 () (_ BitVec 64))
(declare-fun temp682_128 () (_ BitVec 64))
(declare-fun temp682_129 () (_ BitVec 64))
(declare-fun temp682_130 () (_ BitVec 64))
(declare-fun temp682_131 () (_ BitVec 64))
(declare-fun temp682_132 () (_ BitVec 64))
(declare-fun temp682_133 () (_ BitVec 64))
(declare-fun temp682_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp682_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp682_136 () (_ BitVec 64))
(declare-fun temp682_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp682_138 () (_ BitVec 64))
(declare-fun temp682_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp682_140 () (_ BitVec 64))
(declare-fun temp682_141 () (_ BitVec 64))
(declare-fun temp682_142 () (_ BitVec 64))
(declare-fun temp682_143 () (_ BitVec 64))
(declare-fun temp682_144 () (_ BitVec 64))
(declare-fun temp682_145 () (_ BitVec 64))
(declare-fun temp682_146 () (_ BitVec 64))
(declare-fun temp682_147 () (_ BitVec 64))
(declare-fun temp682_148 () (_ BitVec 64))
(declare-fun temp682_149 () (_ BitVec 64))
(declare-fun temp682_150 () (_ BitVec 64))
(declare-fun temp682_151 () (_ BitVec 64))
(declare-fun temp682_152 () (_ BitVec 64))
(declare-fun temp682_153 () (_ BitVec 64))
(declare-fun temp682_154 () (_ BitVec 64))
(declare-fun temp682_155 () (_ BitVec 64))
(declare-fun temp682_157 () (_ BitVec 64))
(declare-fun temp682_158 () (_ BitVec 64))
(declare-fun temp682_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp682_159 () (_ BitVec 64))
(declare-fun temp682_160 () (_ BitVec 64))
(declare-fun temp682_162 () (_ BitVec 64))
(declare-fun temp682_163 () (_ BitVec 64))
(declare-fun temp682_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp682_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp682_165 () (_ BitVec 64))
(declare-fun temp682_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp682_167 () (_ BitVec 64))
(declare-fun temp682_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp682_169 () (_ BitVec 64))
(declare-fun temp682_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp682_171 () (_ BitVec 64))
(declare-fun temp682_172 () (_ BitVec 64))
(declare-fun temp682_173 () (_ BitVec 64))
(declare-fun temp682_174 () (_ BitVec 64))
(declare-fun temp682_175 () (_ BitVec 64))
(declare-fun temp682_176 () (_ BitVec 64))
(declare-fun temp682_177 () (_ BitVec 64))
(declare-fun temp682_178 () (_ BitVec 64))
(declare-fun temp682_179 () (_ BitVec 64))
(declare-fun temp682_180 () (_ BitVec 64))
(declare-fun temp682_181 () (_ BitVec 64))
(declare-fun temp682_182 () (_ BitVec 64))
(declare-fun temp682_183 () (_ BitVec 64))
(declare-fun temp682_184 () (_ BitVec 64))
(declare-fun temp682_185 () (_ BitVec 64))
(declare-fun temp682_186 () (_ BitVec 64))
(declare-fun temp682_187 () (_ BitVec 64))
(declare-fun temp682_188 () (_ BitVec 64))
(declare-fun temp682_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp682_190 () (_ BitVec 64))
(declare-fun temp682_192 () (_ BitVec 64))
(declare-fun temp682_193 () (_ BitVec 64))
(declare-fun temp682_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp682_194 () (_ BitVec 64))
(declare-fun temp682_195 () (_ BitVec 64))
(declare-fun temp682_197 () (_ BitVec 64))
(declare-fun temp682_198 () (_ BitVec 64))
(declare-fun temp682_196 () (_ BitVec 64))
(declare-fun temp682_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp682_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp682_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp682_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp682_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp682_204 () (_ BitVec 64))
(declare-fun temp682_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp682_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp682_207 () (_ BitVec 64))
(declare-fun temp682_208 () (_ BitVec 64))
(declare-fun temp682_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp682_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp682_211 () (_ BitVec 64))
(declare-fun temp682_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp682_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp682_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp682_216 () (_ BitVec 64))
(declare-fun temp682_215 () (_ BitVec 64))
(declare-fun temp682_217 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp682_218 () (_ BitVec 64))
(declare-fun temp682_219 () (_ BitVec 64))
(declare-fun temp682_220 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp682_221 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp682_222 () (_ BitVec 64))
(declare-fun temp682_224 () (_ BitVec 64))
(declare-fun temp682_223 () (_ BitVec 64))
(declare-fun temp682_225 () (_ BitVec 64))
(assert (= temp682_1 #x0000000000000001))
(assert (= var77203 temp682_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp682_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp682_2)))
(assert (= temp682_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp682_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp682_4 #x0000000000000000))
(assert (= var210941 temp682_4))
(assert (= temp682_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp682_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp682_6 #x0000000000000000))
(assert (= var210986 temp682_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp682_7 #x0000000000000000))
(assert (= temp682_8 temp682_7))
(assert (= temp682_9 (select ARGNAME_padding_NAMEEND_VAL temp682_8)))
(assert (= temp682_10 #x0000000000000001))
(assert (= temp682_11 temp682_10))
(assert (= temp682_12 (select ARGNAME_padding_NAMEEND_VAL temp682_11)))
(assert (= temp682_13 #x0000000000000002))
(assert (= temp682_14 temp682_13))
(assert (= temp682_15 (select ARGNAME_padding_NAMEEND_VAL temp682_14)))
(assert (= temp682_16 #x0000000000000003))
(assert (= temp682_17 temp682_16))
(assert (= temp682_18 (select ARGNAME_padding_NAMEEND_VAL temp682_17)))
(assert (= temp682_19 #x0000000000000004))
(assert (= temp682_20 temp682_19))
(assert (= temp682_21 (select ARGNAME_padding_NAMEEND_VAL temp682_20)))
(assert (= temp682_22 #x0000000000000005))
(assert (= temp682_23 temp682_22))
(assert (= temp682_24 (select ARGNAME_padding_NAMEEND_VAL temp682_23)))
(assert (= temp682_25 #x0000000000000000))
(assert (= temp682_26 #x0000000000000000))
(assert (= temp682_27 temp682_26))
(assert (= temp682_28 (select ARGNAME_padding_NAMEEND_VAL temp682_27)))
(assert (= temp682_29 #x0000000000000000))
(assert (= temp682_30 #x0000000000000001))
(assert (= temp682_31 temp682_30))
(assert (= temp682_32 (select ARGNAME_padding_NAMEEND_VAL temp682_31)))
(assert (= temp682_33 #x0000000000000000))
(assert (= temp682_34 #x0000000000000002))
(assert (= temp682_35 temp682_34))
(assert (= temp682_36 (select ARGNAME_padding_NAMEEND_VAL temp682_35)))
(assert (= temp682_37 #x0000000000000000))
(assert (= temp682_38 #x0000000000000003))
(assert (= temp682_39 temp682_38))
(assert (= temp682_40 (select ARGNAME_padding_NAMEEND_VAL temp682_39)))
(assert (= temp682_41 #x0000000000000000))
(assert (= temp682_42 #x0000000000000004))
(assert (= temp682_43 temp682_42))
(assert (= temp682_44 (select ARGNAME_padding_NAMEEND_VAL temp682_43)))
(assert (= temp682_45 #x0000000000000000))
(assert (= temp682_46 #x0000000000000005))
(assert (= temp682_47 temp682_46))
(assert (= temp682_48 (select ARGNAME_padding_NAMEEND_VAL temp682_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp682_28 temp682_25)
             (bvslt temp682_32 temp682_29)
             (bvslt temp682_36 temp682_33)
             (bvslt temp682_40 temp682_37)
             (bvslt temp682_44 temp682_41)
             (bvslt temp682_48 temp682_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp682_49 #x0000000000000000))
(assert (= var1191714 temp682_49))
(assert (= temp682_50 #x0000000000000000))
(assert (= temp682_51 temp682_50))
(assert (= temp682_52 (select ARGNAME_output_padding_NAMEEND_VAL temp682_51)))
(assert (= temp682_53 #x0000000000000001))
(assert (= temp682_54 temp682_53))
(assert (= temp682_55 (select ARGNAME_output_padding_NAMEEND_VAL temp682_54)))
(assert (= temp682_56 #x0000000000000002))
(assert (= temp682_57 temp682_56))
(assert (= temp682_58 (select ARGNAME_output_padding_NAMEEND_VAL temp682_57)))
(assert (= temp682_59 #x0000000000000003))
(assert (= temp682_60 temp682_59))
(assert (= temp682_61 (select ARGNAME_output_padding_NAMEEND_VAL temp682_60)))
(assert (= temp682_62 #x0000000000000004))
(assert (= temp682_63 temp682_62))
(assert (= temp682_64 (select ARGNAME_output_padding_NAMEEND_VAL temp682_63)))
(assert (= temp682_65 #x0000000000000005))
(assert (= temp682_66 temp682_65))
(assert (= temp682_67 (select ARGNAME_output_padding_NAMEEND_VAL temp682_66)))
(assert (= temp682_68 #x0000000000000000))
(assert (= temp682_69 #x0000000000000000))
(assert (= temp682_70 temp682_69))
(assert (= temp682_71 (select ARGNAME_output_padding_NAMEEND_VAL temp682_70)))
(assert (= temp682_72 #x0000000000000000))
(assert (= temp682_73 #x0000000000000001))
(assert (= temp682_74 temp682_73))
(assert (= temp682_75 (select ARGNAME_output_padding_NAMEEND_VAL temp682_74)))
(assert (= temp682_76 #x0000000000000000))
(assert (= temp682_77 #x0000000000000002))
(assert (= temp682_78 temp682_77))
(assert (= temp682_79 (select ARGNAME_output_padding_NAMEEND_VAL temp682_78)))
(assert (= temp682_80 #x0000000000000000))
(assert (= temp682_81 #x0000000000000003))
(assert (= temp682_82 temp682_81))
(assert (= temp682_83 (select ARGNAME_output_padding_NAMEEND_VAL temp682_82)))
(assert (= temp682_84 #x0000000000000000))
(assert (= temp682_85 #x0000000000000004))
(assert (= temp682_86 temp682_85))
(assert (= temp682_87 (select ARGNAME_output_padding_NAMEEND_VAL temp682_86)))
(assert (= temp682_88 #x0000000000000000))
(assert (= temp682_89 #x0000000000000005))
(assert (= temp682_90 temp682_89))
(assert (= temp682_91 (select ARGNAME_output_padding_NAMEEND_VAL temp682_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp682_71 temp682_68)
             (bvslt temp682_75 temp682_72)
             (bvslt temp682_79 temp682_76)
             (bvslt temp682_83 temp682_80)
             (bvslt temp682_87 temp682_84)
             (bvslt temp682_91 temp682_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp682_92 #x0000000000000000))
(assert (= var1191725 temp682_92))
(assert (= temp682_93 #x0000000000000000))
(assert (= temp682_94 temp682_93))
(assert (= temp682_95 (select ARGNAME_stride_NAMEEND_VAL temp682_94)))
(assert (= temp682_96 #x0000000000000001))
(assert (= temp682_97 temp682_96))
(assert (= temp682_98 (select ARGNAME_stride_NAMEEND_VAL temp682_97)))
(assert (= temp682_99 #x0000000000000002))
(assert (= temp682_100 temp682_99))
(assert (= temp682_101 (select ARGNAME_stride_NAMEEND_VAL temp682_100)))
(assert (= temp682_102 #x0000000000000003))
(assert (= temp682_103 temp682_102))
(assert (= temp682_104 (select ARGNAME_stride_NAMEEND_VAL temp682_103)))
(assert (= temp682_105 #x0000000000000004))
(assert (= temp682_106 temp682_105))
(assert (= temp682_107 (select ARGNAME_stride_NAMEEND_VAL temp682_106)))
(assert (= temp682_108 #x0000000000000005))
(assert (= temp682_109 temp682_108))
(assert (= temp682_110 (select ARGNAME_stride_NAMEEND_VAL temp682_109)))
(assert (= temp682_111 #x0000000000000000))
(assert (= temp682_112 #x0000000000000000))
(assert (= temp682_113 temp682_112))
(assert (= temp682_114 (select ARGNAME_stride_NAMEEND_VAL temp682_113)))
(assert (= temp682_115 #x0000000000000000))
(assert (= temp682_116 #x0000000000000001))
(assert (= temp682_117 temp682_116))
(assert (= temp682_118 (select ARGNAME_stride_NAMEEND_VAL temp682_117)))
(assert (= temp682_119 #x0000000000000000))
(assert (= temp682_120 #x0000000000000002))
(assert (= temp682_121 temp682_120))
(assert (= temp682_122 (select ARGNAME_stride_NAMEEND_VAL temp682_121)))
(assert (= temp682_123 #x0000000000000000))
(assert (= temp682_124 #x0000000000000003))
(assert (= temp682_125 temp682_124))
(assert (= temp682_126 (select ARGNAME_stride_NAMEEND_VAL temp682_125)))
(assert (= temp682_127 #x0000000000000000))
(assert (= temp682_128 #x0000000000000004))
(assert (= temp682_129 temp682_128))
(assert (= temp682_130 (select ARGNAME_stride_NAMEEND_VAL temp682_129)))
(assert (= temp682_131 #x0000000000000000))
(assert (= temp682_132 #x0000000000000005))
(assert (= temp682_133 temp682_132))
(assert (= temp682_134 (select ARGNAME_stride_NAMEEND_VAL temp682_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp682_114 temp682_111)
             (bvsle temp682_118 temp682_115)
             (bvsle temp682_122 temp682_119)
             (bvsle temp682_126 temp682_123)
             (bvsle temp682_130 temp682_127)
             (bvsle temp682_134 temp682_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp682_135 #x0000000000000000))
(assert (= var1191735 temp682_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp682_136 #x0000000000000001))
(assert (= var1191747 temp682_136))
(assert (= temp682_137 #x0000000000000000))
(assert (= var1179826 temp682_137))
(assert (= temp682_138 #x0000000000000000))
(assert (= temp682_139 temp682_138))
(assert (= temp682_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp682_139)))
(assert (= temp682_141 #x0000000000000001))
(assert (= temp682_142 temp682_141))
(assert (= temp682_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp682_142)))
(assert (= temp682_144 #x0000000000000002))
(assert (= temp682_145 temp682_144))
(assert (= temp682_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp682_145)))
(assert (= temp682_147 #x0000000000000003))
(assert (= temp682_148 temp682_147))
(assert (= temp682_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp682_148)))
(assert (= temp682_150 #x0000000000000004))
(assert (= temp682_151 temp682_150))
(assert (= temp682_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp682_151)))
(assert (= temp682_153 #x0000000000000005))
(assert (= temp682_154 temp682_153))
(assert (= temp682_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp682_154)))
(assert (= temp682_157 var1179826))
(assert (= temp682_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp682_157)))
(assert (= temp682_156 temp682_158))
(assert (= var1191780
   (ite (bvslt temp682_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp682_159 #x0000000000000000))
(assert (= var1191780 temp682_159))
(assert (= temp682_160 #x0000000000000000))
(assert (= var1179826 temp682_160))
(assert (= temp682_162 var1179826))
(assert (= temp682_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp682_162)))
(assert (= temp682_161 temp682_163))
(assert (= var1191802 (bvsmod temp682_161 ARGNAME_groups_NAMEEND)))
(assert (= temp682_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp682_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp682_165 #x0000000000000001))
(assert (= var1191803 temp682_165))
(assert (= temp682_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp682_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp682_167 #x0000000000000001))
(assert (= var1191823 temp682_167))
(assert (= temp682_168 #x0000000000000001))
(assert (= var1180714 temp682_168))
(assert (= temp682_169 #x0000000000000000))
(assert (= temp682_170 temp682_169))
(assert (= temp682_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp682_170)))
(assert (= temp682_172 #x0000000000000001))
(assert (= temp682_173 temp682_172))
(assert (= temp682_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp682_173)))
(assert (= temp682_175 #x0000000000000002))
(assert (= temp682_176 temp682_175))
(assert (= temp682_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp682_176)))
(assert (= temp682_178 #x0000000000000003))
(assert (= temp682_179 temp682_178))
(assert (= temp682_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp682_179)))
(assert (= temp682_181 #x0000000000000004))
(assert (= temp682_182 temp682_181))
(assert (= temp682_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp682_182)))
(assert (= temp682_184 #x0000000000000005))
(assert (= temp682_185 temp682_184))
(assert (= temp682_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp682_185)))
(assert (= temp682_187 #x0000000000000000))
(assert (= temp682_188
   (ite (bvslt var1180714 temp682_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp682_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp682_188)))
(assert (= var1191831 temp682_189))
(assert (bvslt (ite (bvslt var1180714 temp682_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp682_190 #x0000000000000001))
(assert (= var1180714 temp682_190))
(assert (= temp682_192 var1180714))
(assert (= temp682_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp682_192)))
(assert (= temp682_191 temp682_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp682_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp682_194 #x0000000000000001))
(assert (= var1191836 temp682_194))
(assert (= temp682_195 #x0000000000000000))
(assert (= var1179826 temp682_195))
(assert (= temp682_197 var1179826))
(assert (= temp682_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp682_197)))
(assert (= temp682_196 temp682_198))
(assert (= temp682_199 #x0000000000000002))
(assert (= var1586025 temp682_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp682_200 #x0000000000000001))
(assert (= var1191993 temp682_200))
(assert (= temp682_201 #x0000000000000001))
(assert (= var2700303 temp682_201))
(assert (= temp682_202 #x0000000000000001))
(assert (= var2962447 temp682_202))
(assert (= temp682_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp682_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp682_204 #x0000000000000001))
(assert (= var211058 temp682_204))
(assert (= temp682_205 #x0000000000000001))
(assert (= var211188 temp682_205))
(assert (= var3879401 var211188))
(assert (= temp682_206 #x0000000000000000))
(assert (= var3866802 temp682_206))
(assert (= temp682_207 #x0000000000000000))
(assert (= temp682_208
   (ite (bvslt var3866802 temp682_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp682_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp682_208)))
(assert (= var3879420 temp682_209))
(assert (bvslt (ite (bvslt var3866802 temp682_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp682_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp682_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp682_211 #x0000000000000001))
(assert (= var3879421 temp682_211))
(assert (= temp682_212 #x0000000000000000))
(assert (= var4079423 temp682_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp682_213 #x0000000000000002))
(assert (= var4208259 temp682_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp682_214 #x0000000000000000))
(assert (= var4273820 temp682_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp682_216 #xffffffffffffffff))
(assert (= temp682_215 temp682_216))
(assert (= temp682_217 #x0000000000000001))
(assert (= var197674 temp682_217))
(assert (= temp682_218 #x0000000000000000))
(assert (= temp682_219
   (ite (bvslt var197674 temp682_218)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp682_220 (select ARGNAME_input_NAMEEND_DIMSIZE temp682_219)))
(assert (= var211595 temp682_220))
(assert (bvslt (ite (bvslt var197674 temp682_218)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp682_221 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp682_221) #x0000000000000001 #x0000000000000000)))
(assert (= temp682_222 #x0000000000000001))
(assert (= var211596 temp682_222))
(assert (= temp682_224 #xffffffffffffffff))
(assert (= temp682_223 temp682_224))
(assert (= temp682_225 #x0000000000000001))
(assert (= var211058 temp682_225))
(model-add temp682_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp682_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp682_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp682_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




