(declare-fun temp646_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp646_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp646_3 () (_ BitVec 64))
(declare-fun temp646_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp646_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp646_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp646_7 () (_ BitVec 64))
(declare-fun temp646_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp646_9 () (_ BitVec 64))
(declare-fun temp646_10 () (_ BitVec 64))
(declare-fun temp646_11 () (_ BitVec 64))
(declare-fun temp646_12 () (_ BitVec 64))
(declare-fun temp646_13 () (_ BitVec 64))
(declare-fun temp646_14 () (_ BitVec 64))
(declare-fun temp646_15 () (_ BitVec 64))
(declare-fun temp646_16 () (_ BitVec 64))
(declare-fun temp646_17 () (_ BitVec 64))
(declare-fun temp646_18 () (_ BitVec 64))
(declare-fun temp646_19 () (_ BitVec 64))
(declare-fun temp646_20 () (_ BitVec 64))
(declare-fun temp646_21 () (_ BitVec 64))
(declare-fun temp646_22 () (_ BitVec 64))
(declare-fun temp646_23 () (_ BitVec 64))
(declare-fun temp646_24 () (_ BitVec 64))
(declare-fun temp646_25 () (_ BitVec 64))
(declare-fun temp646_26 () (_ BitVec 64))
(declare-fun temp646_27 () (_ BitVec 64))
(declare-fun temp646_28 () (_ BitVec 64))
(declare-fun temp646_29 () (_ BitVec 64))
(declare-fun temp646_30 () (_ BitVec 64))
(declare-fun temp646_31 () (_ BitVec 64))
(declare-fun temp646_32 () (_ BitVec 64))
(declare-fun temp646_33 () (_ BitVec 64))
(declare-fun temp646_34 () (_ BitVec 64))
(declare-fun temp646_35 () (_ BitVec 64))
(declare-fun temp646_36 () (_ BitVec 64))
(declare-fun temp646_37 () (_ BitVec 64))
(declare-fun temp646_38 () (_ BitVec 64))
(declare-fun temp646_39 () (_ BitVec 64))
(declare-fun temp646_40 () (_ BitVec 64))
(declare-fun temp646_41 () (_ BitVec 64))
(declare-fun temp646_42 () (_ BitVec 64))
(declare-fun temp646_43 () (_ BitVec 64))
(declare-fun temp646_44 () (_ BitVec 64))
(declare-fun temp646_45 () (_ BitVec 64))
(declare-fun temp646_46 () (_ BitVec 64))
(declare-fun temp646_47 () (_ BitVec 64))
(declare-fun temp646_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp646_49 () (_ BitVec 64))
(declare-fun temp646_50 () (_ BitVec 64))
(declare-fun temp646_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp646_52 () (_ BitVec 64))
(declare-fun temp646_53 () (_ BitVec 64))
(declare-fun temp646_54 () (_ BitVec 64))
(declare-fun temp646_55 () (_ BitVec 64))
(declare-fun temp646_56 () (_ BitVec 64))
(declare-fun temp646_57 () (_ BitVec 64))
(declare-fun temp646_58 () (_ BitVec 64))
(declare-fun temp646_59 () (_ BitVec 64))
(declare-fun temp646_60 () (_ BitVec 64))
(declare-fun temp646_61 () (_ BitVec 64))
(declare-fun temp646_62 () (_ BitVec 64))
(declare-fun temp646_63 () (_ BitVec 64))
(declare-fun temp646_64 () (_ BitVec 64))
(declare-fun temp646_65 () (_ BitVec 64))
(declare-fun temp646_66 () (_ BitVec 64))
(declare-fun temp646_67 () (_ BitVec 64))
(declare-fun temp646_68 () (_ BitVec 64))
(declare-fun temp646_69 () (_ BitVec 64))
(declare-fun temp646_70 () (_ BitVec 64))
(declare-fun temp646_71 () (_ BitVec 64))
(declare-fun temp646_72 () (_ BitVec 64))
(declare-fun temp646_73 () (_ BitVec 64))
(declare-fun temp646_74 () (_ BitVec 64))
(declare-fun temp646_75 () (_ BitVec 64))
(declare-fun temp646_76 () (_ BitVec 64))
(declare-fun temp646_77 () (_ BitVec 64))
(declare-fun temp646_78 () (_ BitVec 64))
(declare-fun temp646_79 () (_ BitVec 64))
(declare-fun temp646_80 () (_ BitVec 64))
(declare-fun temp646_81 () (_ BitVec 64))
(declare-fun temp646_82 () (_ BitVec 64))
(declare-fun temp646_83 () (_ BitVec 64))
(declare-fun temp646_84 () (_ BitVec 64))
(declare-fun temp646_85 () (_ BitVec 64))
(declare-fun temp646_86 () (_ BitVec 64))
(declare-fun temp646_87 () (_ BitVec 64))
(declare-fun temp646_88 () (_ BitVec 64))
(declare-fun temp646_89 () (_ BitVec 64))
(declare-fun temp646_90 () (_ BitVec 64))
(declare-fun temp646_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp646_92 () (_ BitVec 64))
(declare-fun temp646_93 () (_ BitVec 64))
(declare-fun temp646_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp646_95 () (_ BitVec 64))
(declare-fun temp646_96 () (_ BitVec 64))
(declare-fun temp646_97 () (_ BitVec 64))
(declare-fun temp646_98 () (_ BitVec 64))
(declare-fun temp646_99 () (_ BitVec 64))
(declare-fun temp646_100 () (_ BitVec 64))
(declare-fun temp646_101 () (_ BitVec 64))
(declare-fun temp646_102 () (_ BitVec 64))
(declare-fun temp646_103 () (_ BitVec 64))
(declare-fun temp646_104 () (_ BitVec 64))
(declare-fun temp646_105 () (_ BitVec 64))
(declare-fun temp646_106 () (_ BitVec 64))
(declare-fun temp646_107 () (_ BitVec 64))
(declare-fun temp646_108 () (_ BitVec 64))
(declare-fun temp646_109 () (_ BitVec 64))
(declare-fun temp646_110 () (_ BitVec 64))
(declare-fun temp646_111 () (_ BitVec 64))
(declare-fun temp646_112 () (_ BitVec 64))
(declare-fun temp646_113 () (_ BitVec 64))
(declare-fun temp646_114 () (_ BitVec 64))
(declare-fun temp646_115 () (_ BitVec 64))
(declare-fun temp646_116 () (_ BitVec 64))
(declare-fun temp646_117 () (_ BitVec 64))
(declare-fun temp646_118 () (_ BitVec 64))
(declare-fun temp646_119 () (_ BitVec 64))
(declare-fun temp646_120 () (_ BitVec 64))
(declare-fun temp646_121 () (_ BitVec 64))
(declare-fun temp646_122 () (_ BitVec 64))
(declare-fun temp646_123 () (_ BitVec 64))
(declare-fun temp646_124 () (_ BitVec 64))
(declare-fun temp646_125 () (_ BitVec 64))
(declare-fun temp646_126 () (_ BitVec 64))
(declare-fun temp646_127 () (_ BitVec 64))
(declare-fun temp646_128 () (_ BitVec 64))
(declare-fun temp646_129 () (_ BitVec 64))
(declare-fun temp646_130 () (_ BitVec 64))
(declare-fun temp646_131 () (_ BitVec 64))
(declare-fun temp646_132 () (_ BitVec 64))
(declare-fun temp646_133 () (_ BitVec 64))
(declare-fun temp646_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp646_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp646_136 () (_ BitVec 64))
(declare-fun temp646_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp646_138 () (_ BitVec 64))
(declare-fun temp646_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp646_140 () (_ BitVec 64))
(declare-fun temp646_141 () (_ BitVec 64))
(declare-fun temp646_142 () (_ BitVec 64))
(declare-fun temp646_143 () (_ BitVec 64))
(declare-fun temp646_144 () (_ BitVec 64))
(declare-fun temp646_145 () (_ BitVec 64))
(declare-fun temp646_146 () (_ BitVec 64))
(declare-fun temp646_147 () (_ BitVec 64))
(declare-fun temp646_148 () (_ BitVec 64))
(declare-fun temp646_149 () (_ BitVec 64))
(declare-fun temp646_150 () (_ BitVec 64))
(declare-fun temp646_151 () (_ BitVec 64))
(declare-fun temp646_152 () (_ BitVec 64))
(declare-fun temp646_153 () (_ BitVec 64))
(declare-fun temp646_154 () (_ BitVec 64))
(declare-fun temp646_155 () (_ BitVec 64))
(declare-fun temp646_157 () (_ BitVec 64))
(declare-fun temp646_158 () (_ BitVec 64))
(declare-fun temp646_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp646_159 () (_ BitVec 64))
(declare-fun temp646_160 () (_ BitVec 64))
(declare-fun temp646_162 () (_ BitVec 64))
(declare-fun temp646_163 () (_ BitVec 64))
(declare-fun temp646_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp646_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp646_165 () (_ BitVec 64))
(declare-fun temp646_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp646_167 () (_ BitVec 64))
(declare-fun temp646_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp646_169 () (_ BitVec 64))
(declare-fun temp646_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp646_171 () (_ BitVec 64))
(declare-fun temp646_172 () (_ BitVec 64))
(declare-fun temp646_173 () (_ BitVec 64))
(declare-fun temp646_174 () (_ BitVec 64))
(declare-fun temp646_175 () (_ BitVec 64))
(declare-fun temp646_176 () (_ BitVec 64))
(declare-fun temp646_177 () (_ BitVec 64))
(declare-fun temp646_178 () (_ BitVec 64))
(declare-fun temp646_179 () (_ BitVec 64))
(declare-fun temp646_180 () (_ BitVec 64))
(declare-fun temp646_181 () (_ BitVec 64))
(declare-fun temp646_182 () (_ BitVec 64))
(declare-fun temp646_183 () (_ BitVec 64))
(declare-fun temp646_184 () (_ BitVec 64))
(declare-fun temp646_185 () (_ BitVec 64))
(declare-fun temp646_186 () (_ BitVec 64))
(declare-fun temp646_187 () (_ BitVec 64))
(declare-fun temp646_188 () (_ BitVec 64))
(declare-fun temp646_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp646_190 () (_ BitVec 64))
(declare-fun temp646_192 () (_ BitVec 64))
(declare-fun temp646_193 () (_ BitVec 64))
(declare-fun temp646_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp646_194 () (_ BitVec 64))
(declare-fun temp646_195 () (_ BitVec 64))
(declare-fun temp646_197 () (_ BitVec 64))
(declare-fun temp646_198 () (_ BitVec 64))
(declare-fun temp646_196 () (_ BitVec 64))
(declare-fun temp646_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp646_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp646_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp646_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp646_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp646_204 () (_ BitVec 64))
(declare-fun temp646_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp646_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp646_207 () (_ BitVec 64))
(declare-fun temp646_208 () (_ BitVec 64))
(declare-fun temp646_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp646_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp646_211 () (_ BitVec 64))
(declare-fun temp646_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp646_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp646_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4993424 () (_ BitVec 64))
(declare-fun var211494 () (_ BitVec 64))
(declare-fun temp646_215 () (_ BitVec 64))
(declare-fun var211495 () (_ BitVec 64))
(declare-fun temp646_216 () (_ BitVec 64))
(assert (= temp646_1 #x0000000000000001))
(assert (= var77203 temp646_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp646_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp646_2)))
(assert (= temp646_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp646_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp646_4 #x0000000000000000))
(assert (= var210941 temp646_4))
(assert (= temp646_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp646_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp646_6 #x0000000000000000))
(assert (= var210986 temp646_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp646_7 #x0000000000000000))
(assert (= temp646_8 temp646_7))
(assert (= temp646_9 (select ARGNAME_padding_NAMEEND_VAL temp646_8)))
(assert (= temp646_10 #x0000000000000001))
(assert (= temp646_11 temp646_10))
(assert (= temp646_12 (select ARGNAME_padding_NAMEEND_VAL temp646_11)))
(assert (= temp646_13 #x0000000000000002))
(assert (= temp646_14 temp646_13))
(assert (= temp646_15 (select ARGNAME_padding_NAMEEND_VAL temp646_14)))
(assert (= temp646_16 #x0000000000000003))
(assert (= temp646_17 temp646_16))
(assert (= temp646_18 (select ARGNAME_padding_NAMEEND_VAL temp646_17)))
(assert (= temp646_19 #x0000000000000004))
(assert (= temp646_20 temp646_19))
(assert (= temp646_21 (select ARGNAME_padding_NAMEEND_VAL temp646_20)))
(assert (= temp646_22 #x0000000000000005))
(assert (= temp646_23 temp646_22))
(assert (= temp646_24 (select ARGNAME_padding_NAMEEND_VAL temp646_23)))
(assert (= temp646_25 #x0000000000000000))
(assert (= temp646_26 #x0000000000000000))
(assert (= temp646_27 temp646_26))
(assert (= temp646_28 (select ARGNAME_padding_NAMEEND_VAL temp646_27)))
(assert (= temp646_29 #x0000000000000000))
(assert (= temp646_30 #x0000000000000001))
(assert (= temp646_31 temp646_30))
(assert (= temp646_32 (select ARGNAME_padding_NAMEEND_VAL temp646_31)))
(assert (= temp646_33 #x0000000000000000))
(assert (= temp646_34 #x0000000000000002))
(assert (= temp646_35 temp646_34))
(assert (= temp646_36 (select ARGNAME_padding_NAMEEND_VAL temp646_35)))
(assert (= temp646_37 #x0000000000000000))
(assert (= temp646_38 #x0000000000000003))
(assert (= temp646_39 temp646_38))
(assert (= temp646_40 (select ARGNAME_padding_NAMEEND_VAL temp646_39)))
(assert (= temp646_41 #x0000000000000000))
(assert (= temp646_42 #x0000000000000004))
(assert (= temp646_43 temp646_42))
(assert (= temp646_44 (select ARGNAME_padding_NAMEEND_VAL temp646_43)))
(assert (= temp646_45 #x0000000000000000))
(assert (= temp646_46 #x0000000000000005))
(assert (= temp646_47 temp646_46))
(assert (= temp646_48 (select ARGNAME_padding_NAMEEND_VAL temp646_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp646_28 temp646_25)
             (bvslt temp646_32 temp646_29)
             (bvslt temp646_36 temp646_33)
             (bvslt temp646_40 temp646_37)
             (bvslt temp646_44 temp646_41)
             (bvslt temp646_48 temp646_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp646_49 #x0000000000000000))
(assert (= var1191714 temp646_49))
(assert (= temp646_50 #x0000000000000000))
(assert (= temp646_51 temp646_50))
(assert (= temp646_52 (select ARGNAME_output_padding_NAMEEND_VAL temp646_51)))
(assert (= temp646_53 #x0000000000000001))
(assert (= temp646_54 temp646_53))
(assert (= temp646_55 (select ARGNAME_output_padding_NAMEEND_VAL temp646_54)))
(assert (= temp646_56 #x0000000000000002))
(assert (= temp646_57 temp646_56))
(assert (= temp646_58 (select ARGNAME_output_padding_NAMEEND_VAL temp646_57)))
(assert (= temp646_59 #x0000000000000003))
(assert (= temp646_60 temp646_59))
(assert (= temp646_61 (select ARGNAME_output_padding_NAMEEND_VAL temp646_60)))
(assert (= temp646_62 #x0000000000000004))
(assert (= temp646_63 temp646_62))
(assert (= temp646_64 (select ARGNAME_output_padding_NAMEEND_VAL temp646_63)))
(assert (= temp646_65 #x0000000000000005))
(assert (= temp646_66 temp646_65))
(assert (= temp646_67 (select ARGNAME_output_padding_NAMEEND_VAL temp646_66)))
(assert (= temp646_68 #x0000000000000000))
(assert (= temp646_69 #x0000000000000000))
(assert (= temp646_70 temp646_69))
(assert (= temp646_71 (select ARGNAME_output_padding_NAMEEND_VAL temp646_70)))
(assert (= temp646_72 #x0000000000000000))
(assert (= temp646_73 #x0000000000000001))
(assert (= temp646_74 temp646_73))
(assert (= temp646_75 (select ARGNAME_output_padding_NAMEEND_VAL temp646_74)))
(assert (= temp646_76 #x0000000000000000))
(assert (= temp646_77 #x0000000000000002))
(assert (= temp646_78 temp646_77))
(assert (= temp646_79 (select ARGNAME_output_padding_NAMEEND_VAL temp646_78)))
(assert (= temp646_80 #x0000000000000000))
(assert (= temp646_81 #x0000000000000003))
(assert (= temp646_82 temp646_81))
(assert (= temp646_83 (select ARGNAME_output_padding_NAMEEND_VAL temp646_82)))
(assert (= temp646_84 #x0000000000000000))
(assert (= temp646_85 #x0000000000000004))
(assert (= temp646_86 temp646_85))
(assert (= temp646_87 (select ARGNAME_output_padding_NAMEEND_VAL temp646_86)))
(assert (= temp646_88 #x0000000000000000))
(assert (= temp646_89 #x0000000000000005))
(assert (= temp646_90 temp646_89))
(assert (= temp646_91 (select ARGNAME_output_padding_NAMEEND_VAL temp646_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp646_71 temp646_68)
             (bvslt temp646_75 temp646_72)
             (bvslt temp646_79 temp646_76)
             (bvslt temp646_83 temp646_80)
             (bvslt temp646_87 temp646_84)
             (bvslt temp646_91 temp646_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp646_92 #x0000000000000000))
(assert (= var1191725 temp646_92))
(assert (= temp646_93 #x0000000000000000))
(assert (= temp646_94 temp646_93))
(assert (= temp646_95 (select ARGNAME_stride_NAMEEND_VAL temp646_94)))
(assert (= temp646_96 #x0000000000000001))
(assert (= temp646_97 temp646_96))
(assert (= temp646_98 (select ARGNAME_stride_NAMEEND_VAL temp646_97)))
(assert (= temp646_99 #x0000000000000002))
(assert (= temp646_100 temp646_99))
(assert (= temp646_101 (select ARGNAME_stride_NAMEEND_VAL temp646_100)))
(assert (= temp646_102 #x0000000000000003))
(assert (= temp646_103 temp646_102))
(assert (= temp646_104 (select ARGNAME_stride_NAMEEND_VAL temp646_103)))
(assert (= temp646_105 #x0000000000000004))
(assert (= temp646_106 temp646_105))
(assert (= temp646_107 (select ARGNAME_stride_NAMEEND_VAL temp646_106)))
(assert (= temp646_108 #x0000000000000005))
(assert (= temp646_109 temp646_108))
(assert (= temp646_110 (select ARGNAME_stride_NAMEEND_VAL temp646_109)))
(assert (= temp646_111 #x0000000000000000))
(assert (= temp646_112 #x0000000000000000))
(assert (= temp646_113 temp646_112))
(assert (= temp646_114 (select ARGNAME_stride_NAMEEND_VAL temp646_113)))
(assert (= temp646_115 #x0000000000000000))
(assert (= temp646_116 #x0000000000000001))
(assert (= temp646_117 temp646_116))
(assert (= temp646_118 (select ARGNAME_stride_NAMEEND_VAL temp646_117)))
(assert (= temp646_119 #x0000000000000000))
(assert (= temp646_120 #x0000000000000002))
(assert (= temp646_121 temp646_120))
(assert (= temp646_122 (select ARGNAME_stride_NAMEEND_VAL temp646_121)))
(assert (= temp646_123 #x0000000000000000))
(assert (= temp646_124 #x0000000000000003))
(assert (= temp646_125 temp646_124))
(assert (= temp646_126 (select ARGNAME_stride_NAMEEND_VAL temp646_125)))
(assert (= temp646_127 #x0000000000000000))
(assert (= temp646_128 #x0000000000000004))
(assert (= temp646_129 temp646_128))
(assert (= temp646_130 (select ARGNAME_stride_NAMEEND_VAL temp646_129)))
(assert (= temp646_131 #x0000000000000000))
(assert (= temp646_132 #x0000000000000005))
(assert (= temp646_133 temp646_132))
(assert (= temp646_134 (select ARGNAME_stride_NAMEEND_VAL temp646_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp646_114 temp646_111)
             (bvsle temp646_118 temp646_115)
             (bvsle temp646_122 temp646_119)
             (bvsle temp646_126 temp646_123)
             (bvsle temp646_130 temp646_127)
             (bvsle temp646_134 temp646_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp646_135 #x0000000000000000))
(assert (= var1191735 temp646_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp646_136 #x0000000000000001))
(assert (= var1191747 temp646_136))
(assert (= temp646_137 #x0000000000000000))
(assert (= var1179826 temp646_137))
(assert (= temp646_138 #x0000000000000000))
(assert (= temp646_139 temp646_138))
(assert (= temp646_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp646_139)))
(assert (= temp646_141 #x0000000000000001))
(assert (= temp646_142 temp646_141))
(assert (= temp646_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp646_142)))
(assert (= temp646_144 #x0000000000000002))
(assert (= temp646_145 temp646_144))
(assert (= temp646_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp646_145)))
(assert (= temp646_147 #x0000000000000003))
(assert (= temp646_148 temp646_147))
(assert (= temp646_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp646_148)))
(assert (= temp646_150 #x0000000000000004))
(assert (= temp646_151 temp646_150))
(assert (= temp646_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp646_151)))
(assert (= temp646_153 #x0000000000000005))
(assert (= temp646_154 temp646_153))
(assert (= temp646_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp646_154)))
(assert (= temp646_157 var1179826))
(assert (= temp646_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp646_157)))
(assert (= temp646_156 temp646_158))
(assert (= var1191780
   (ite (bvslt temp646_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp646_159 #x0000000000000000))
(assert (= var1191780 temp646_159))
(assert (= temp646_160 #x0000000000000000))
(assert (= var1179826 temp646_160))
(assert (= temp646_162 var1179826))
(assert (= temp646_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp646_162)))
(assert (= temp646_161 temp646_163))
(assert (= var1191802 (bvsmod temp646_161 ARGNAME_groups_NAMEEND)))
(assert (= temp646_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp646_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp646_165 #x0000000000000001))
(assert (= var1191803 temp646_165))
(assert (= temp646_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp646_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp646_167 #x0000000000000001))
(assert (= var1191823 temp646_167))
(assert (= temp646_168 #x0000000000000001))
(assert (= var1180714 temp646_168))
(assert (= temp646_169 #x0000000000000000))
(assert (= temp646_170 temp646_169))
(assert (= temp646_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp646_170)))
(assert (= temp646_172 #x0000000000000001))
(assert (= temp646_173 temp646_172))
(assert (= temp646_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp646_173)))
(assert (= temp646_175 #x0000000000000002))
(assert (= temp646_176 temp646_175))
(assert (= temp646_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp646_176)))
(assert (= temp646_178 #x0000000000000003))
(assert (= temp646_179 temp646_178))
(assert (= temp646_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp646_179)))
(assert (= temp646_181 #x0000000000000004))
(assert (= temp646_182 temp646_181))
(assert (= temp646_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp646_182)))
(assert (= temp646_184 #x0000000000000005))
(assert (= temp646_185 temp646_184))
(assert (= temp646_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp646_185)))
(assert (= temp646_187 #x0000000000000000))
(assert (= temp646_188
   (ite (bvslt var1180714 temp646_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp646_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp646_188)))
(assert (= var1191831 temp646_189))
(assert (bvslt (ite (bvslt var1180714 temp646_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp646_190 #x0000000000000001))
(assert (= var1180714 temp646_190))
(assert (= temp646_192 var1180714))
(assert (= temp646_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp646_192)))
(assert (= temp646_191 temp646_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp646_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp646_194 #x0000000000000001))
(assert (= var1191836 temp646_194))
(assert (= temp646_195 #x0000000000000000))
(assert (= var1179826 temp646_195))
(assert (= temp646_197 var1179826))
(assert (= temp646_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp646_197)))
(assert (= temp646_196 temp646_198))
(assert (= temp646_199 #x0000000000000002))
(assert (= var1586025 temp646_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp646_200 #x0000000000000001))
(assert (= var1191993 temp646_200))
(assert (= temp646_201 #x0000000000000001))
(assert (= var2700303 temp646_201))
(assert (= temp646_202 #x0000000000000001))
(assert (= var2962447 temp646_202))
(assert (= temp646_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp646_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp646_204 #x0000000000000001))
(assert (= var211058 temp646_204))
(assert (= temp646_205 #x0000000000000001))
(assert (= var211188 temp646_205))
(assert (= var3879401 var211188))
(assert (= temp646_206 #x0000000000000000))
(assert (= var3866802 temp646_206))
(assert (= temp646_207 #x0000000000000000))
(assert (= temp646_208
   (ite (bvslt var3866802 temp646_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp646_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp646_208)))
(assert (= var3879420 temp646_209))
(assert (bvslt (ite (bvslt var3866802 temp646_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp646_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp646_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp646_211 #x0000000000000001))
(assert (= var3879421 temp646_211))
(assert (= temp646_212 #x0000000000000000))
(assert (= var4079423 temp646_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp646_213 #x0000000000000002))
(assert (= var4208259 temp646_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp646_214 #x0000000000000000))
(assert (= var4273820 temp646_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4993424 var211201))
(assert (= var211494 var210913))
(assert (= temp646_215 #x0000000000000000))
(assert (= var211495
   (ite (distinct var211494 temp646_215) #x0000000000000001 #x0000000000000000)))
(assert (= temp646_216 #x0000000000000001))
(assert (= var211058 temp646_216))
(model-add temp646_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp646_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp646_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp646_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))



