(declare-fun temp1056_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp1056_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1056_3 () (_ BitVec 64))
(declare-fun temp1056_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1056_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp1056_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1056_7 () (_ BitVec 64))
(declare-fun temp1056_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1056_9 () (_ BitVec 64))
(declare-fun temp1056_10 () (_ BitVec 64))
(declare-fun temp1056_11 () (_ BitVec 64))
(declare-fun temp1056_12 () (_ BitVec 64))
(declare-fun temp1056_13 () (_ BitVec 64))
(declare-fun temp1056_14 () (_ BitVec 64))
(declare-fun temp1056_15 () (_ BitVec 64))
(declare-fun temp1056_16 () (_ BitVec 64))
(declare-fun temp1056_17 () (_ BitVec 64))
(declare-fun temp1056_18 () (_ BitVec 64))
(declare-fun temp1056_19 () (_ BitVec 64))
(declare-fun temp1056_20 () (_ BitVec 64))
(declare-fun temp1056_21 () (_ BitVec 64))
(declare-fun temp1056_22 () (_ BitVec 64))
(declare-fun temp1056_23 () (_ BitVec 64))
(declare-fun temp1056_24 () (_ BitVec 64))
(declare-fun temp1056_25 () (_ BitVec 64))
(declare-fun temp1056_26 () (_ BitVec 64))
(declare-fun temp1056_27 () (_ BitVec 64))
(declare-fun temp1056_28 () (_ BitVec 64))
(declare-fun temp1056_29 () (_ BitVec 64))
(declare-fun temp1056_30 () (_ BitVec 64))
(declare-fun temp1056_31 () (_ BitVec 64))
(declare-fun temp1056_32 () (_ BitVec 64))
(declare-fun temp1056_33 () (_ BitVec 64))
(declare-fun temp1056_34 () (_ BitVec 64))
(declare-fun temp1056_35 () (_ BitVec 64))
(declare-fun temp1056_36 () (_ BitVec 64))
(declare-fun temp1056_37 () (_ BitVec 64))
(declare-fun temp1056_38 () (_ BitVec 64))
(declare-fun temp1056_39 () (_ BitVec 64))
(declare-fun temp1056_40 () (_ BitVec 64))
(declare-fun temp1056_41 () (_ BitVec 64))
(declare-fun temp1056_42 () (_ BitVec 64))
(declare-fun temp1056_43 () (_ BitVec 64))
(declare-fun temp1056_44 () (_ BitVec 64))
(declare-fun temp1056_45 () (_ BitVec 64))
(declare-fun temp1056_46 () (_ BitVec 64))
(declare-fun temp1056_47 () (_ BitVec 64))
(declare-fun temp1056_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp1056_49 () (_ BitVec 64))
(declare-fun temp1056_50 () (_ BitVec 64))
(declare-fun temp1056_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1056_52 () (_ BitVec 64))
(declare-fun temp1056_53 () (_ BitVec 64))
(declare-fun temp1056_54 () (_ BitVec 64))
(declare-fun temp1056_55 () (_ BitVec 64))
(declare-fun temp1056_56 () (_ BitVec 64))
(declare-fun temp1056_57 () (_ BitVec 64))
(declare-fun temp1056_58 () (_ BitVec 64))
(declare-fun temp1056_59 () (_ BitVec 64))
(declare-fun temp1056_60 () (_ BitVec 64))
(declare-fun temp1056_61 () (_ BitVec 64))
(declare-fun temp1056_62 () (_ BitVec 64))
(declare-fun temp1056_63 () (_ BitVec 64))
(declare-fun temp1056_64 () (_ BitVec 64))
(declare-fun temp1056_65 () (_ BitVec 64))
(declare-fun temp1056_66 () (_ BitVec 64))
(declare-fun temp1056_67 () (_ BitVec 64))
(declare-fun temp1056_68 () (_ BitVec 64))
(declare-fun temp1056_69 () (_ BitVec 64))
(declare-fun temp1056_70 () (_ BitVec 64))
(declare-fun temp1056_71 () (_ BitVec 64))
(declare-fun temp1056_72 () (_ BitVec 64))
(declare-fun temp1056_73 () (_ BitVec 64))
(declare-fun temp1056_74 () (_ BitVec 64))
(declare-fun temp1056_75 () (_ BitVec 64))
(declare-fun temp1056_76 () (_ BitVec 64))
(declare-fun temp1056_77 () (_ BitVec 64))
(declare-fun temp1056_78 () (_ BitVec 64))
(declare-fun temp1056_79 () (_ BitVec 64))
(declare-fun temp1056_80 () (_ BitVec 64))
(declare-fun temp1056_81 () (_ BitVec 64))
(declare-fun temp1056_82 () (_ BitVec 64))
(declare-fun temp1056_83 () (_ BitVec 64))
(declare-fun temp1056_84 () (_ BitVec 64))
(declare-fun temp1056_85 () (_ BitVec 64))
(declare-fun temp1056_86 () (_ BitVec 64))
(declare-fun temp1056_87 () (_ BitVec 64))
(declare-fun temp1056_88 () (_ BitVec 64))
(declare-fun temp1056_89 () (_ BitVec 64))
(declare-fun temp1056_90 () (_ BitVec 64))
(declare-fun temp1056_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp1056_92 () (_ BitVec 64))
(declare-fun temp1056_93 () (_ BitVec 64))
(declare-fun temp1056_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1056_95 () (_ BitVec 64))
(declare-fun temp1056_96 () (_ BitVec 64))
(declare-fun temp1056_97 () (_ BitVec 64))
(declare-fun temp1056_98 () (_ BitVec 64))
(declare-fun temp1056_99 () (_ BitVec 64))
(declare-fun temp1056_100 () (_ BitVec 64))
(declare-fun temp1056_101 () (_ BitVec 64))
(declare-fun temp1056_102 () (_ BitVec 64))
(declare-fun temp1056_103 () (_ BitVec 64))
(declare-fun temp1056_104 () (_ BitVec 64))
(declare-fun temp1056_105 () (_ BitVec 64))
(declare-fun temp1056_106 () (_ BitVec 64))
(declare-fun temp1056_107 () (_ BitVec 64))
(declare-fun temp1056_108 () (_ BitVec 64))
(declare-fun temp1056_109 () (_ BitVec 64))
(declare-fun temp1056_110 () (_ BitVec 64))
(declare-fun temp1056_111 () (_ BitVec 64))
(declare-fun temp1056_112 () (_ BitVec 64))
(declare-fun temp1056_113 () (_ BitVec 64))
(declare-fun temp1056_114 () (_ BitVec 64))
(declare-fun temp1056_115 () (_ BitVec 64))
(declare-fun temp1056_116 () (_ BitVec 64))
(declare-fun temp1056_117 () (_ BitVec 64))
(declare-fun temp1056_118 () (_ BitVec 64))
(declare-fun temp1056_119 () (_ BitVec 64))
(declare-fun temp1056_120 () (_ BitVec 64))
(declare-fun temp1056_121 () (_ BitVec 64))
(declare-fun temp1056_122 () (_ BitVec 64))
(declare-fun temp1056_123 () (_ BitVec 64))
(declare-fun temp1056_124 () (_ BitVec 64))
(declare-fun temp1056_125 () (_ BitVec 64))
(declare-fun temp1056_126 () (_ BitVec 64))
(declare-fun temp1056_127 () (_ BitVec 64))
(declare-fun temp1056_128 () (_ BitVec 64))
(declare-fun temp1056_129 () (_ BitVec 64))
(declare-fun temp1056_130 () (_ BitVec 64))
(declare-fun temp1056_131 () (_ BitVec 64))
(declare-fun temp1056_132 () (_ BitVec 64))
(declare-fun temp1056_133 () (_ BitVec 64))
(declare-fun temp1056_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp1056_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp1056_136 () (_ BitVec 64))
(declare-fun temp1056_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp1056_138 () (_ BitVec 64))
(declare-fun temp1056_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1056_140 () (_ BitVec 64))
(declare-fun temp1056_141 () (_ BitVec 64))
(declare-fun temp1056_142 () (_ BitVec 64))
(declare-fun temp1056_143 () (_ BitVec 64))
(declare-fun temp1056_144 () (_ BitVec 64))
(declare-fun temp1056_145 () (_ BitVec 64))
(declare-fun temp1056_146 () (_ BitVec 64))
(declare-fun temp1056_147 () (_ BitVec 64))
(declare-fun temp1056_148 () (_ BitVec 64))
(declare-fun temp1056_149 () (_ BitVec 64))
(declare-fun temp1056_150 () (_ BitVec 64))
(declare-fun temp1056_151 () (_ BitVec 64))
(declare-fun temp1056_152 () (_ BitVec 64))
(declare-fun temp1056_153 () (_ BitVec 64))
(declare-fun temp1056_154 () (_ BitVec 64))
(declare-fun temp1056_155 () (_ BitVec 64))
(declare-fun temp1056_157 () (_ BitVec 64))
(declare-fun temp1056_158 () (_ BitVec 64))
(declare-fun temp1056_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp1056_159 () (_ BitVec 64))
(declare-fun temp1056_160 () (_ BitVec 64))
(declare-fun temp1056_162 () (_ BitVec 64))
(declare-fun temp1056_163 () (_ BitVec 64))
(declare-fun temp1056_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp1056_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp1056_165 () (_ BitVec 64))
(declare-fun temp1056_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp1056_167 () (_ BitVec 64))
(declare-fun temp1056_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp1056_169 () (_ BitVec 64))
(declare-fun temp1056_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1056_171 () (_ BitVec 64))
(declare-fun temp1056_172 () (_ BitVec 64))
(declare-fun temp1056_173 () (_ BitVec 64))
(declare-fun temp1056_174 () (_ BitVec 64))
(declare-fun temp1056_175 () (_ BitVec 64))
(declare-fun temp1056_176 () (_ BitVec 64))
(declare-fun temp1056_177 () (_ BitVec 64))
(declare-fun temp1056_178 () (_ BitVec 64))
(declare-fun temp1056_179 () (_ BitVec 64))
(declare-fun temp1056_180 () (_ BitVec 64))
(declare-fun temp1056_181 () (_ BitVec 64))
(declare-fun temp1056_182 () (_ BitVec 64))
(declare-fun temp1056_183 () (_ BitVec 64))
(declare-fun temp1056_184 () (_ BitVec 64))
(declare-fun temp1056_185 () (_ BitVec 64))
(declare-fun temp1056_186 () (_ BitVec 64))
(declare-fun temp1056_187 () (_ BitVec 64))
(declare-fun temp1056_188 () (_ BitVec 64))
(declare-fun temp1056_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp1056_190 () (_ BitVec 64))
(declare-fun temp1056_192 () (_ BitVec 64))
(declare-fun temp1056_193 () (_ BitVec 64))
(declare-fun temp1056_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp1056_194 () (_ BitVec 64))
(declare-fun temp1056_195 () (_ BitVec 64))
(declare-fun temp1056_197 () (_ BitVec 64))
(declare-fun temp1056_198 () (_ BitVec 64))
(declare-fun temp1056_196 () (_ BitVec 64))
(declare-fun temp1056_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp1056_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp1056_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp1056_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp1056_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp1056_204 () (_ BitVec 64))
(declare-fun temp1056_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp1056_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp1056_207 () (_ BitVec 64))
(declare-fun temp1056_208 () (_ BitVec 64))
(declare-fun temp1056_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp1056_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp1056_211 () (_ BitVec 64))
(declare-fun temp1056_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp1056_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp1056_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp1056_215 () (_ BitVec 64))
(assert (= temp1056_1 #x0000000000000001))
(assert (= var77203 temp1056_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp1056_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp1056_2)))
(assert (= temp1056_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1056_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1056_4 #x0000000000000000))
(assert (= var210941 temp1056_4))
(assert (= temp1056_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp1056_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1056_6 #x0000000000000000))
(assert (= var210986 temp1056_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp1056_7 #x0000000000000000))
(assert (= temp1056_8 temp1056_7))
(assert (= temp1056_9 (select ARGNAME_padding_NAMEEND_VAL temp1056_8)))
(assert (= temp1056_10 #x0000000000000001))
(assert (= temp1056_11 temp1056_10))
(assert (= temp1056_12 (select ARGNAME_padding_NAMEEND_VAL temp1056_11)))
(assert (= temp1056_13 #x0000000000000002))
(assert (= temp1056_14 temp1056_13))
(assert (= temp1056_15 (select ARGNAME_padding_NAMEEND_VAL temp1056_14)))
(assert (= temp1056_16 #x0000000000000003))
(assert (= temp1056_17 temp1056_16))
(assert (= temp1056_18 (select ARGNAME_padding_NAMEEND_VAL temp1056_17)))
(assert (= temp1056_19 #x0000000000000004))
(assert (= temp1056_20 temp1056_19))
(assert (= temp1056_21 (select ARGNAME_padding_NAMEEND_VAL temp1056_20)))
(assert (= temp1056_22 #x0000000000000005))
(assert (= temp1056_23 temp1056_22))
(assert (= temp1056_24 (select ARGNAME_padding_NAMEEND_VAL temp1056_23)))
(assert (= temp1056_25 #x0000000000000000))
(assert (= temp1056_26 #x0000000000000000))
(assert (= temp1056_27 temp1056_26))
(assert (= temp1056_28 (select ARGNAME_padding_NAMEEND_VAL temp1056_27)))
(assert (= temp1056_29 #x0000000000000000))
(assert (= temp1056_30 #x0000000000000001))
(assert (= temp1056_31 temp1056_30))
(assert (= temp1056_32 (select ARGNAME_padding_NAMEEND_VAL temp1056_31)))
(assert (= temp1056_33 #x0000000000000000))
(assert (= temp1056_34 #x0000000000000002))
(assert (= temp1056_35 temp1056_34))
(assert (= temp1056_36 (select ARGNAME_padding_NAMEEND_VAL temp1056_35)))
(assert (= temp1056_37 #x0000000000000000))
(assert (= temp1056_38 #x0000000000000003))
(assert (= temp1056_39 temp1056_38))
(assert (= temp1056_40 (select ARGNAME_padding_NAMEEND_VAL temp1056_39)))
(assert (= temp1056_41 #x0000000000000000))
(assert (= temp1056_42 #x0000000000000004))
(assert (= temp1056_43 temp1056_42))
(assert (= temp1056_44 (select ARGNAME_padding_NAMEEND_VAL temp1056_43)))
(assert (= temp1056_45 #x0000000000000000))
(assert (= temp1056_46 #x0000000000000005))
(assert (= temp1056_47 temp1056_46))
(assert (= temp1056_48 (select ARGNAME_padding_NAMEEND_VAL temp1056_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp1056_28 temp1056_25)
             (bvslt temp1056_32 temp1056_29)
             (bvslt temp1056_36 temp1056_33)
             (bvslt temp1056_40 temp1056_37)
             (bvslt temp1056_44 temp1056_41)
             (bvslt temp1056_48 temp1056_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1056_49 #x0000000000000000))
(assert (= var1191714 temp1056_49))
(assert (= temp1056_50 #x0000000000000000))
(assert (= temp1056_51 temp1056_50))
(assert (= temp1056_52 (select ARGNAME_output_padding_NAMEEND_VAL temp1056_51)))
(assert (= temp1056_53 #x0000000000000001))
(assert (= temp1056_54 temp1056_53))
(assert (= temp1056_55 (select ARGNAME_output_padding_NAMEEND_VAL temp1056_54)))
(assert (= temp1056_56 #x0000000000000002))
(assert (= temp1056_57 temp1056_56))
(assert (= temp1056_58 (select ARGNAME_output_padding_NAMEEND_VAL temp1056_57)))
(assert (= temp1056_59 #x0000000000000003))
(assert (= temp1056_60 temp1056_59))
(assert (= temp1056_61 (select ARGNAME_output_padding_NAMEEND_VAL temp1056_60)))
(assert (= temp1056_62 #x0000000000000004))
(assert (= temp1056_63 temp1056_62))
(assert (= temp1056_64 (select ARGNAME_output_padding_NAMEEND_VAL temp1056_63)))
(assert (= temp1056_65 #x0000000000000005))
(assert (= temp1056_66 temp1056_65))
(assert (= temp1056_67 (select ARGNAME_output_padding_NAMEEND_VAL temp1056_66)))
(assert (= temp1056_68 #x0000000000000000))
(assert (= temp1056_69 #x0000000000000000))
(assert (= temp1056_70 temp1056_69))
(assert (= temp1056_71 (select ARGNAME_output_padding_NAMEEND_VAL temp1056_70)))
(assert (= temp1056_72 #x0000000000000000))
(assert (= temp1056_73 #x0000000000000001))
(assert (= temp1056_74 temp1056_73))
(assert (= temp1056_75 (select ARGNAME_output_padding_NAMEEND_VAL temp1056_74)))
(assert (= temp1056_76 #x0000000000000000))
(assert (= temp1056_77 #x0000000000000002))
(assert (= temp1056_78 temp1056_77))
(assert (= temp1056_79 (select ARGNAME_output_padding_NAMEEND_VAL temp1056_78)))
(assert (= temp1056_80 #x0000000000000000))
(assert (= temp1056_81 #x0000000000000003))
(assert (= temp1056_82 temp1056_81))
(assert (= temp1056_83 (select ARGNAME_output_padding_NAMEEND_VAL temp1056_82)))
(assert (= temp1056_84 #x0000000000000000))
(assert (= temp1056_85 #x0000000000000004))
(assert (= temp1056_86 temp1056_85))
(assert (= temp1056_87 (select ARGNAME_output_padding_NAMEEND_VAL temp1056_86)))
(assert (= temp1056_88 #x0000000000000000))
(assert (= temp1056_89 #x0000000000000005))
(assert (= temp1056_90 temp1056_89))
(assert (= temp1056_91 (select ARGNAME_output_padding_NAMEEND_VAL temp1056_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp1056_71 temp1056_68)
             (bvslt temp1056_75 temp1056_72)
             (bvslt temp1056_79 temp1056_76)
             (bvslt temp1056_83 temp1056_80)
             (bvslt temp1056_87 temp1056_84)
             (bvslt temp1056_91 temp1056_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1056_92 #x0000000000000000))
(assert (= var1191725 temp1056_92))
(assert (= temp1056_93 #x0000000000000000))
(assert (= temp1056_94 temp1056_93))
(assert (= temp1056_95 (select ARGNAME_stride_NAMEEND_VAL temp1056_94)))
(assert (= temp1056_96 #x0000000000000001))
(assert (= temp1056_97 temp1056_96))
(assert (= temp1056_98 (select ARGNAME_stride_NAMEEND_VAL temp1056_97)))
(assert (= temp1056_99 #x0000000000000002))
(assert (= temp1056_100 temp1056_99))
(assert (= temp1056_101 (select ARGNAME_stride_NAMEEND_VAL temp1056_100)))
(assert (= temp1056_102 #x0000000000000003))
(assert (= temp1056_103 temp1056_102))
(assert (= temp1056_104 (select ARGNAME_stride_NAMEEND_VAL temp1056_103)))
(assert (= temp1056_105 #x0000000000000004))
(assert (= temp1056_106 temp1056_105))
(assert (= temp1056_107 (select ARGNAME_stride_NAMEEND_VAL temp1056_106)))
(assert (= temp1056_108 #x0000000000000005))
(assert (= temp1056_109 temp1056_108))
(assert (= temp1056_110 (select ARGNAME_stride_NAMEEND_VAL temp1056_109)))
(assert (= temp1056_111 #x0000000000000000))
(assert (= temp1056_112 #x0000000000000000))
(assert (= temp1056_113 temp1056_112))
(assert (= temp1056_114 (select ARGNAME_stride_NAMEEND_VAL temp1056_113)))
(assert (= temp1056_115 #x0000000000000000))
(assert (= temp1056_116 #x0000000000000001))
(assert (= temp1056_117 temp1056_116))
(assert (= temp1056_118 (select ARGNAME_stride_NAMEEND_VAL temp1056_117)))
(assert (= temp1056_119 #x0000000000000000))
(assert (= temp1056_120 #x0000000000000002))
(assert (= temp1056_121 temp1056_120))
(assert (= temp1056_122 (select ARGNAME_stride_NAMEEND_VAL temp1056_121)))
(assert (= temp1056_123 #x0000000000000000))
(assert (= temp1056_124 #x0000000000000003))
(assert (= temp1056_125 temp1056_124))
(assert (= temp1056_126 (select ARGNAME_stride_NAMEEND_VAL temp1056_125)))
(assert (= temp1056_127 #x0000000000000000))
(assert (= temp1056_128 #x0000000000000004))
(assert (= temp1056_129 temp1056_128))
(assert (= temp1056_130 (select ARGNAME_stride_NAMEEND_VAL temp1056_129)))
(assert (= temp1056_131 #x0000000000000000))
(assert (= temp1056_132 #x0000000000000005))
(assert (= temp1056_133 temp1056_132))
(assert (= temp1056_134 (select ARGNAME_stride_NAMEEND_VAL temp1056_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp1056_114 temp1056_111)
             (bvsle temp1056_118 temp1056_115)
             (bvsle temp1056_122 temp1056_119)
             (bvsle temp1056_126 temp1056_123)
             (bvsle temp1056_130 temp1056_127)
             (bvsle temp1056_134 temp1056_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1056_135 #x0000000000000000))
(assert (= var1191735 temp1056_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1056_136 #x0000000000000001))
(assert (= var1191747 temp1056_136))
(assert (= temp1056_137 #x0000000000000000))
(assert (= var1179826 temp1056_137))
(assert (= temp1056_138 #x0000000000000000))
(assert (= temp1056_139 temp1056_138))
(assert (= temp1056_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1056_139)))
(assert (= temp1056_141 #x0000000000000001))
(assert (= temp1056_142 temp1056_141))
(assert (= temp1056_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1056_142)))
(assert (= temp1056_144 #x0000000000000002))
(assert (= temp1056_145 temp1056_144))
(assert (= temp1056_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1056_145)))
(assert (= temp1056_147 #x0000000000000003))
(assert (= temp1056_148 temp1056_147))
(assert (= temp1056_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1056_148)))
(assert (= temp1056_150 #x0000000000000004))
(assert (= temp1056_151 temp1056_150))
(assert (= temp1056_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1056_151)))
(assert (= temp1056_153 #x0000000000000005))
(assert (= temp1056_154 temp1056_153))
(assert (= temp1056_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1056_154)))
(assert (= temp1056_157 var1179826))
(assert (= temp1056_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1056_157)))
(assert (= temp1056_156 temp1056_158))
(assert (= var1191780
   (ite (bvslt temp1056_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1056_159 #x0000000000000000))
(assert (= var1191780 temp1056_159))
(assert (= temp1056_160 #x0000000000000000))
(assert (= var1179826 temp1056_160))
(assert (= temp1056_162 var1179826))
(assert (= temp1056_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1056_162)))
(assert (= temp1056_161 temp1056_163))
(assert (= var1191802 (bvsmod temp1056_161 ARGNAME_groups_NAMEEND)))
(assert (= temp1056_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp1056_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp1056_165 #x0000000000000001))
(assert (= var1191803 temp1056_165))
(assert (= temp1056_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp1056_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1056_167 #x0000000000000001))
(assert (= var1191823 temp1056_167))
(assert (= temp1056_168 #x0000000000000001))
(assert (= var1180714 temp1056_168))
(assert (= temp1056_169 #x0000000000000000))
(assert (= temp1056_170 temp1056_169))
(assert (= temp1056_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp1056_170)))
(assert (= temp1056_172 #x0000000000000001))
(assert (= temp1056_173 temp1056_172))
(assert (= temp1056_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp1056_173)))
(assert (= temp1056_175 #x0000000000000002))
(assert (= temp1056_176 temp1056_175))
(assert (= temp1056_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp1056_176)))
(assert (= temp1056_178 #x0000000000000003))
(assert (= temp1056_179 temp1056_178))
(assert (= temp1056_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp1056_179)))
(assert (= temp1056_181 #x0000000000000004))
(assert (= temp1056_182 temp1056_181))
(assert (= temp1056_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp1056_182)))
(assert (= temp1056_184 #x0000000000000005))
(assert (= temp1056_185 temp1056_184))
(assert (= temp1056_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp1056_185)))
(assert (= temp1056_187 #x0000000000000000))
(assert (= temp1056_188
   (ite (bvslt var1180714 temp1056_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp1056_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp1056_188)))
(assert (= var1191831 temp1056_189))
(assert (bvslt (ite (bvslt var1180714 temp1056_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1056_190 #x0000000000000001))
(assert (= var1180714 temp1056_190))
(assert (= temp1056_192 var1180714))
(assert (= temp1056_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1056_192)))
(assert (= temp1056_191 temp1056_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp1056_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp1056_194 #x0000000000000001))
(assert (= var1191836 temp1056_194))
(assert (= temp1056_195 #x0000000000000000))
(assert (= var1179826 temp1056_195))
(assert (= temp1056_197 var1179826))
(assert (= temp1056_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1056_197)))
(assert (= temp1056_196 temp1056_198))
(assert (= temp1056_199 #x0000000000000002))
(assert (= var1586025 temp1056_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp1056_200 #x0000000000000001))
(assert (= var1191993 temp1056_200))
(assert (= temp1056_201 #x0000000000000001))
(assert (= var2700303 temp1056_201))
(assert (= temp1056_202 #x0000000000000001))
(assert (= var2962447 temp1056_202))
(assert (= temp1056_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1056_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1056_204 #x0000000000000001))
(assert (= var211058 temp1056_204))
(assert (= temp1056_205 #x0000000000000001))
(assert (= var211188 temp1056_205))
(assert (= var3879401 var211188))
(assert (= temp1056_206 #x0000000000000000))
(assert (= var3866802 temp1056_206))
(assert (= temp1056_207 #x0000000000000000))
(assert (= temp1056_208
   (ite (bvslt var3866802 temp1056_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp1056_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp1056_208)))
(assert (= var3879420 temp1056_209))
(assert (bvslt (ite (bvslt var3866802 temp1056_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1056_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp1056_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp1056_211 #x0000000000000001))
(assert (= var3879421 temp1056_211))
(assert (= temp1056_212 #x0000000000000000))
(assert (= var4079423 temp1056_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp1056_213 #x0000000000000002))
(assert (= var4208259 temp1056_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1056_214 #x0000000000000000))
(assert (= var4273820 temp1056_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp1056_215 #x0000000000000001))
(assert (= var211058 temp1056_215))
(model-add temp1056_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp1056_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1056_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp1056_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






