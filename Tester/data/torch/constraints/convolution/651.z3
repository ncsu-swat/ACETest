(declare-fun temp868_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp868_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp868_3 () (_ BitVec 64))
(declare-fun temp868_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp868_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp868_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp868_7 () (_ BitVec 64))
(declare-fun temp868_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp868_9 () (_ BitVec 64))
(declare-fun temp868_10 () (_ BitVec 64))
(declare-fun temp868_11 () (_ BitVec 64))
(declare-fun temp868_12 () (_ BitVec 64))
(declare-fun temp868_13 () (_ BitVec 64))
(declare-fun temp868_14 () (_ BitVec 64))
(declare-fun temp868_15 () (_ BitVec 64))
(declare-fun temp868_16 () (_ BitVec 64))
(declare-fun temp868_17 () (_ BitVec 64))
(declare-fun temp868_18 () (_ BitVec 64))
(declare-fun temp868_19 () (_ BitVec 64))
(declare-fun temp868_20 () (_ BitVec 64))
(declare-fun temp868_21 () (_ BitVec 64))
(declare-fun temp868_22 () (_ BitVec 64))
(declare-fun temp868_23 () (_ BitVec 64))
(declare-fun temp868_24 () (_ BitVec 64))
(declare-fun temp868_25 () (_ BitVec 64))
(declare-fun temp868_26 () (_ BitVec 64))
(declare-fun temp868_27 () (_ BitVec 64))
(declare-fun temp868_28 () (_ BitVec 64))
(declare-fun temp868_29 () (_ BitVec 64))
(declare-fun temp868_30 () (_ BitVec 64))
(declare-fun temp868_31 () (_ BitVec 64))
(declare-fun temp868_32 () (_ BitVec 64))
(declare-fun temp868_33 () (_ BitVec 64))
(declare-fun temp868_34 () (_ BitVec 64))
(declare-fun temp868_35 () (_ BitVec 64))
(declare-fun temp868_36 () (_ BitVec 64))
(declare-fun temp868_37 () (_ BitVec 64))
(declare-fun temp868_38 () (_ BitVec 64))
(declare-fun temp868_39 () (_ BitVec 64))
(declare-fun temp868_40 () (_ BitVec 64))
(declare-fun temp868_41 () (_ BitVec 64))
(declare-fun temp868_42 () (_ BitVec 64))
(declare-fun temp868_43 () (_ BitVec 64))
(declare-fun temp868_44 () (_ BitVec 64))
(declare-fun temp868_45 () (_ BitVec 64))
(declare-fun temp868_46 () (_ BitVec 64))
(declare-fun temp868_47 () (_ BitVec 64))
(declare-fun temp868_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp868_49 () (_ BitVec 64))
(declare-fun temp868_50 () (_ BitVec 64))
(declare-fun temp868_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp868_52 () (_ BitVec 64))
(declare-fun temp868_53 () (_ BitVec 64))
(declare-fun temp868_54 () (_ BitVec 64))
(declare-fun temp868_55 () (_ BitVec 64))
(declare-fun temp868_56 () (_ BitVec 64))
(declare-fun temp868_57 () (_ BitVec 64))
(declare-fun temp868_58 () (_ BitVec 64))
(declare-fun temp868_59 () (_ BitVec 64))
(declare-fun temp868_60 () (_ BitVec 64))
(declare-fun temp868_61 () (_ BitVec 64))
(declare-fun temp868_62 () (_ BitVec 64))
(declare-fun temp868_63 () (_ BitVec 64))
(declare-fun temp868_64 () (_ BitVec 64))
(declare-fun temp868_65 () (_ BitVec 64))
(declare-fun temp868_66 () (_ BitVec 64))
(declare-fun temp868_67 () (_ BitVec 64))
(declare-fun temp868_68 () (_ BitVec 64))
(declare-fun temp868_69 () (_ BitVec 64))
(declare-fun temp868_70 () (_ BitVec 64))
(declare-fun temp868_71 () (_ BitVec 64))
(declare-fun temp868_72 () (_ BitVec 64))
(declare-fun temp868_73 () (_ BitVec 64))
(declare-fun temp868_74 () (_ BitVec 64))
(declare-fun temp868_75 () (_ BitVec 64))
(declare-fun temp868_76 () (_ BitVec 64))
(declare-fun temp868_77 () (_ BitVec 64))
(declare-fun temp868_78 () (_ BitVec 64))
(declare-fun temp868_79 () (_ BitVec 64))
(declare-fun temp868_80 () (_ BitVec 64))
(declare-fun temp868_81 () (_ BitVec 64))
(declare-fun temp868_82 () (_ BitVec 64))
(declare-fun temp868_83 () (_ BitVec 64))
(declare-fun temp868_84 () (_ BitVec 64))
(declare-fun temp868_85 () (_ BitVec 64))
(declare-fun temp868_86 () (_ BitVec 64))
(declare-fun temp868_87 () (_ BitVec 64))
(declare-fun temp868_88 () (_ BitVec 64))
(declare-fun temp868_89 () (_ BitVec 64))
(declare-fun temp868_90 () (_ BitVec 64))
(declare-fun temp868_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp868_92 () (_ BitVec 64))
(declare-fun temp868_93 () (_ BitVec 64))
(declare-fun temp868_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp868_95 () (_ BitVec 64))
(declare-fun temp868_96 () (_ BitVec 64))
(declare-fun temp868_97 () (_ BitVec 64))
(declare-fun temp868_98 () (_ BitVec 64))
(declare-fun temp868_99 () (_ BitVec 64))
(declare-fun temp868_100 () (_ BitVec 64))
(declare-fun temp868_101 () (_ BitVec 64))
(declare-fun temp868_102 () (_ BitVec 64))
(declare-fun temp868_103 () (_ BitVec 64))
(declare-fun temp868_104 () (_ BitVec 64))
(declare-fun temp868_105 () (_ BitVec 64))
(declare-fun temp868_106 () (_ BitVec 64))
(declare-fun temp868_107 () (_ BitVec 64))
(declare-fun temp868_108 () (_ BitVec 64))
(declare-fun temp868_109 () (_ BitVec 64))
(declare-fun temp868_110 () (_ BitVec 64))
(declare-fun temp868_111 () (_ BitVec 64))
(declare-fun temp868_112 () (_ BitVec 64))
(declare-fun temp868_113 () (_ BitVec 64))
(declare-fun temp868_114 () (_ BitVec 64))
(declare-fun temp868_115 () (_ BitVec 64))
(declare-fun temp868_116 () (_ BitVec 64))
(declare-fun temp868_117 () (_ BitVec 64))
(declare-fun temp868_118 () (_ BitVec 64))
(declare-fun temp868_119 () (_ BitVec 64))
(declare-fun temp868_120 () (_ BitVec 64))
(declare-fun temp868_121 () (_ BitVec 64))
(declare-fun temp868_122 () (_ BitVec 64))
(declare-fun temp868_123 () (_ BitVec 64))
(declare-fun temp868_124 () (_ BitVec 64))
(declare-fun temp868_125 () (_ BitVec 64))
(declare-fun temp868_126 () (_ BitVec 64))
(declare-fun temp868_127 () (_ BitVec 64))
(declare-fun temp868_128 () (_ BitVec 64))
(declare-fun temp868_129 () (_ BitVec 64))
(declare-fun temp868_130 () (_ BitVec 64))
(declare-fun temp868_131 () (_ BitVec 64))
(declare-fun temp868_132 () (_ BitVec 64))
(declare-fun temp868_133 () (_ BitVec 64))
(declare-fun temp868_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp868_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp868_136 () (_ BitVec 64))
(declare-fun temp868_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp868_138 () (_ BitVec 64))
(declare-fun temp868_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp868_140 () (_ BitVec 64))
(declare-fun temp868_141 () (_ BitVec 64))
(declare-fun temp868_142 () (_ BitVec 64))
(declare-fun temp868_143 () (_ BitVec 64))
(declare-fun temp868_144 () (_ BitVec 64))
(declare-fun temp868_145 () (_ BitVec 64))
(declare-fun temp868_146 () (_ BitVec 64))
(declare-fun temp868_147 () (_ BitVec 64))
(declare-fun temp868_148 () (_ BitVec 64))
(declare-fun temp868_149 () (_ BitVec 64))
(declare-fun temp868_150 () (_ BitVec 64))
(declare-fun temp868_151 () (_ BitVec 64))
(declare-fun temp868_152 () (_ BitVec 64))
(declare-fun temp868_153 () (_ BitVec 64))
(declare-fun temp868_154 () (_ BitVec 64))
(declare-fun temp868_155 () (_ BitVec 64))
(declare-fun temp868_157 () (_ BitVec 64))
(declare-fun temp868_158 () (_ BitVec 64))
(declare-fun temp868_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp868_159 () (_ BitVec 64))
(declare-fun temp868_160 () (_ BitVec 64))
(declare-fun temp868_162 () (_ BitVec 64))
(declare-fun temp868_163 () (_ BitVec 64))
(declare-fun temp868_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp868_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp868_165 () (_ BitVec 64))
(declare-fun temp868_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp868_167 () (_ BitVec 64))
(declare-fun temp868_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp868_169 () (_ BitVec 64))
(declare-fun temp868_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp868_171 () (_ BitVec 64))
(declare-fun temp868_172 () (_ BitVec 64))
(declare-fun temp868_173 () (_ BitVec 64))
(declare-fun temp868_174 () (_ BitVec 64))
(declare-fun temp868_175 () (_ BitVec 64))
(declare-fun temp868_176 () (_ BitVec 64))
(declare-fun temp868_177 () (_ BitVec 64))
(declare-fun temp868_178 () (_ BitVec 64))
(declare-fun temp868_179 () (_ BitVec 64))
(declare-fun temp868_180 () (_ BitVec 64))
(declare-fun temp868_181 () (_ BitVec 64))
(declare-fun temp868_182 () (_ BitVec 64))
(declare-fun temp868_183 () (_ BitVec 64))
(declare-fun temp868_184 () (_ BitVec 64))
(declare-fun temp868_185 () (_ BitVec 64))
(declare-fun temp868_186 () (_ BitVec 64))
(declare-fun temp868_187 () (_ BitVec 64))
(declare-fun temp868_188 () (_ BitVec 64))
(declare-fun temp868_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp868_190 () (_ BitVec 64))
(declare-fun temp868_192 () (_ BitVec 64))
(declare-fun temp868_193 () (_ BitVec 64))
(declare-fun temp868_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp868_194 () (_ BitVec 64))
(declare-fun temp868_195 () (_ BitVec 64))
(declare-fun temp868_197 () (_ BitVec 64))
(declare-fun temp868_198 () (_ BitVec 64))
(declare-fun temp868_196 () (_ BitVec 64))
(declare-fun temp868_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp868_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp868_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp868_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp868_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp868_204 () (_ BitVec 64))
(declare-fun temp868_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp868_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp868_207 () (_ BitVec 64))
(declare-fun temp868_208 () (_ BitVec 64))
(declare-fun temp868_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp868_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp868_211 () (_ BitVec 64))
(declare-fun temp868_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp868_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp868_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp868_215 () (_ BitVec 64))
(declare-fun temp868_216 () (_ BitVec 64))
(declare-fun var6501140 () (_ BitVec 64))
(declare-fun var6501107 () (_ BitVec 64))
(declare-fun var6369671 () (_ BitVec 64))
(declare-fun var6369667 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp868_217 () (_ BitVec 64))
(assert (= temp868_1 #x0000000000000001))
(assert (= var77203 temp868_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp868_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp868_2)))
(assert (= temp868_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp868_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp868_4 #x0000000000000000))
(assert (= var210941 temp868_4))
(assert (= temp868_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp868_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp868_6 #x0000000000000000))
(assert (= var210986 temp868_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp868_7 #x0000000000000000))
(assert (= temp868_8 temp868_7))
(assert (= temp868_9 (select ARGNAME_padding_NAMEEND_VAL temp868_8)))
(assert (= temp868_10 #x0000000000000001))
(assert (= temp868_11 temp868_10))
(assert (= temp868_12 (select ARGNAME_padding_NAMEEND_VAL temp868_11)))
(assert (= temp868_13 #x0000000000000002))
(assert (= temp868_14 temp868_13))
(assert (= temp868_15 (select ARGNAME_padding_NAMEEND_VAL temp868_14)))
(assert (= temp868_16 #x0000000000000003))
(assert (= temp868_17 temp868_16))
(assert (= temp868_18 (select ARGNAME_padding_NAMEEND_VAL temp868_17)))
(assert (= temp868_19 #x0000000000000004))
(assert (= temp868_20 temp868_19))
(assert (= temp868_21 (select ARGNAME_padding_NAMEEND_VAL temp868_20)))
(assert (= temp868_22 #x0000000000000005))
(assert (= temp868_23 temp868_22))
(assert (= temp868_24 (select ARGNAME_padding_NAMEEND_VAL temp868_23)))
(assert (= temp868_25 #x0000000000000000))
(assert (= temp868_26 #x0000000000000000))
(assert (= temp868_27 temp868_26))
(assert (= temp868_28 (select ARGNAME_padding_NAMEEND_VAL temp868_27)))
(assert (= temp868_29 #x0000000000000000))
(assert (= temp868_30 #x0000000000000001))
(assert (= temp868_31 temp868_30))
(assert (= temp868_32 (select ARGNAME_padding_NAMEEND_VAL temp868_31)))
(assert (= temp868_33 #x0000000000000000))
(assert (= temp868_34 #x0000000000000002))
(assert (= temp868_35 temp868_34))
(assert (= temp868_36 (select ARGNAME_padding_NAMEEND_VAL temp868_35)))
(assert (= temp868_37 #x0000000000000000))
(assert (= temp868_38 #x0000000000000003))
(assert (= temp868_39 temp868_38))
(assert (= temp868_40 (select ARGNAME_padding_NAMEEND_VAL temp868_39)))
(assert (= temp868_41 #x0000000000000000))
(assert (= temp868_42 #x0000000000000004))
(assert (= temp868_43 temp868_42))
(assert (= temp868_44 (select ARGNAME_padding_NAMEEND_VAL temp868_43)))
(assert (= temp868_45 #x0000000000000000))
(assert (= temp868_46 #x0000000000000005))
(assert (= temp868_47 temp868_46))
(assert (= temp868_48 (select ARGNAME_padding_NAMEEND_VAL temp868_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp868_28 temp868_25)
             (bvslt temp868_32 temp868_29)
             (bvslt temp868_36 temp868_33)
             (bvslt temp868_40 temp868_37)
             (bvslt temp868_44 temp868_41)
             (bvslt temp868_48 temp868_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp868_49 #x0000000000000000))
(assert (= var1191714 temp868_49))
(assert (= temp868_50 #x0000000000000000))
(assert (= temp868_51 temp868_50))
(assert (= temp868_52 (select ARGNAME_output_padding_NAMEEND_VAL temp868_51)))
(assert (= temp868_53 #x0000000000000001))
(assert (= temp868_54 temp868_53))
(assert (= temp868_55 (select ARGNAME_output_padding_NAMEEND_VAL temp868_54)))
(assert (= temp868_56 #x0000000000000002))
(assert (= temp868_57 temp868_56))
(assert (= temp868_58 (select ARGNAME_output_padding_NAMEEND_VAL temp868_57)))
(assert (= temp868_59 #x0000000000000003))
(assert (= temp868_60 temp868_59))
(assert (= temp868_61 (select ARGNAME_output_padding_NAMEEND_VAL temp868_60)))
(assert (= temp868_62 #x0000000000000004))
(assert (= temp868_63 temp868_62))
(assert (= temp868_64 (select ARGNAME_output_padding_NAMEEND_VAL temp868_63)))
(assert (= temp868_65 #x0000000000000005))
(assert (= temp868_66 temp868_65))
(assert (= temp868_67 (select ARGNAME_output_padding_NAMEEND_VAL temp868_66)))
(assert (= temp868_68 #x0000000000000000))
(assert (= temp868_69 #x0000000000000000))
(assert (= temp868_70 temp868_69))
(assert (= temp868_71 (select ARGNAME_output_padding_NAMEEND_VAL temp868_70)))
(assert (= temp868_72 #x0000000000000000))
(assert (= temp868_73 #x0000000000000001))
(assert (= temp868_74 temp868_73))
(assert (= temp868_75 (select ARGNAME_output_padding_NAMEEND_VAL temp868_74)))
(assert (= temp868_76 #x0000000000000000))
(assert (= temp868_77 #x0000000000000002))
(assert (= temp868_78 temp868_77))
(assert (= temp868_79 (select ARGNAME_output_padding_NAMEEND_VAL temp868_78)))
(assert (= temp868_80 #x0000000000000000))
(assert (= temp868_81 #x0000000000000003))
(assert (= temp868_82 temp868_81))
(assert (= temp868_83 (select ARGNAME_output_padding_NAMEEND_VAL temp868_82)))
(assert (= temp868_84 #x0000000000000000))
(assert (= temp868_85 #x0000000000000004))
(assert (= temp868_86 temp868_85))
(assert (= temp868_87 (select ARGNAME_output_padding_NAMEEND_VAL temp868_86)))
(assert (= temp868_88 #x0000000000000000))
(assert (= temp868_89 #x0000000000000005))
(assert (= temp868_90 temp868_89))
(assert (= temp868_91 (select ARGNAME_output_padding_NAMEEND_VAL temp868_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp868_71 temp868_68)
             (bvslt temp868_75 temp868_72)
             (bvslt temp868_79 temp868_76)
             (bvslt temp868_83 temp868_80)
             (bvslt temp868_87 temp868_84)
             (bvslt temp868_91 temp868_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp868_92 #x0000000000000000))
(assert (= var1191725 temp868_92))
(assert (= temp868_93 #x0000000000000000))
(assert (= temp868_94 temp868_93))
(assert (= temp868_95 (select ARGNAME_stride_NAMEEND_VAL temp868_94)))
(assert (= temp868_96 #x0000000000000001))
(assert (= temp868_97 temp868_96))
(assert (= temp868_98 (select ARGNAME_stride_NAMEEND_VAL temp868_97)))
(assert (= temp868_99 #x0000000000000002))
(assert (= temp868_100 temp868_99))
(assert (= temp868_101 (select ARGNAME_stride_NAMEEND_VAL temp868_100)))
(assert (= temp868_102 #x0000000000000003))
(assert (= temp868_103 temp868_102))
(assert (= temp868_104 (select ARGNAME_stride_NAMEEND_VAL temp868_103)))
(assert (= temp868_105 #x0000000000000004))
(assert (= temp868_106 temp868_105))
(assert (= temp868_107 (select ARGNAME_stride_NAMEEND_VAL temp868_106)))
(assert (= temp868_108 #x0000000000000005))
(assert (= temp868_109 temp868_108))
(assert (= temp868_110 (select ARGNAME_stride_NAMEEND_VAL temp868_109)))
(assert (= temp868_111 #x0000000000000000))
(assert (= temp868_112 #x0000000000000000))
(assert (= temp868_113 temp868_112))
(assert (= temp868_114 (select ARGNAME_stride_NAMEEND_VAL temp868_113)))
(assert (= temp868_115 #x0000000000000000))
(assert (= temp868_116 #x0000000000000001))
(assert (= temp868_117 temp868_116))
(assert (= temp868_118 (select ARGNAME_stride_NAMEEND_VAL temp868_117)))
(assert (= temp868_119 #x0000000000000000))
(assert (= temp868_120 #x0000000000000002))
(assert (= temp868_121 temp868_120))
(assert (= temp868_122 (select ARGNAME_stride_NAMEEND_VAL temp868_121)))
(assert (= temp868_123 #x0000000000000000))
(assert (= temp868_124 #x0000000000000003))
(assert (= temp868_125 temp868_124))
(assert (= temp868_126 (select ARGNAME_stride_NAMEEND_VAL temp868_125)))
(assert (= temp868_127 #x0000000000000000))
(assert (= temp868_128 #x0000000000000004))
(assert (= temp868_129 temp868_128))
(assert (= temp868_130 (select ARGNAME_stride_NAMEEND_VAL temp868_129)))
(assert (= temp868_131 #x0000000000000000))
(assert (= temp868_132 #x0000000000000005))
(assert (= temp868_133 temp868_132))
(assert (= temp868_134 (select ARGNAME_stride_NAMEEND_VAL temp868_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp868_114 temp868_111)
             (bvsle temp868_118 temp868_115)
             (bvsle temp868_122 temp868_119)
             (bvsle temp868_126 temp868_123)
             (bvsle temp868_130 temp868_127)
             (bvsle temp868_134 temp868_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp868_135 #x0000000000000000))
(assert (= var1191735 temp868_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp868_136 #x0000000000000001))
(assert (= var1191747 temp868_136))
(assert (= temp868_137 #x0000000000000000))
(assert (= var1179826 temp868_137))
(assert (= temp868_138 #x0000000000000000))
(assert (= temp868_139 temp868_138))
(assert (= temp868_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp868_139)))
(assert (= temp868_141 #x0000000000000001))
(assert (= temp868_142 temp868_141))
(assert (= temp868_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp868_142)))
(assert (= temp868_144 #x0000000000000002))
(assert (= temp868_145 temp868_144))
(assert (= temp868_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp868_145)))
(assert (= temp868_147 #x0000000000000003))
(assert (= temp868_148 temp868_147))
(assert (= temp868_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp868_148)))
(assert (= temp868_150 #x0000000000000004))
(assert (= temp868_151 temp868_150))
(assert (= temp868_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp868_151)))
(assert (= temp868_153 #x0000000000000005))
(assert (= temp868_154 temp868_153))
(assert (= temp868_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp868_154)))
(assert (= temp868_157 var1179826))
(assert (= temp868_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp868_157)))
(assert (= temp868_156 temp868_158))
(assert (= var1191780
   (ite (bvslt temp868_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp868_159 #x0000000000000000))
(assert (= var1191780 temp868_159))
(assert (= temp868_160 #x0000000000000000))
(assert (= var1179826 temp868_160))
(assert (= temp868_162 var1179826))
(assert (= temp868_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp868_162)))
(assert (= temp868_161 temp868_163))
(assert (= var1191802 (bvsmod temp868_161 ARGNAME_groups_NAMEEND)))
(assert (= temp868_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp868_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp868_165 #x0000000000000001))
(assert (= var1191803 temp868_165))
(assert (= temp868_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp868_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp868_167 #x0000000000000001))
(assert (= var1191823 temp868_167))
(assert (= temp868_168 #x0000000000000001))
(assert (= var1180714 temp868_168))
(assert (= temp868_169 #x0000000000000000))
(assert (= temp868_170 temp868_169))
(assert (= temp868_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp868_170)))
(assert (= temp868_172 #x0000000000000001))
(assert (= temp868_173 temp868_172))
(assert (= temp868_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp868_173)))
(assert (= temp868_175 #x0000000000000002))
(assert (= temp868_176 temp868_175))
(assert (= temp868_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp868_176)))
(assert (= temp868_178 #x0000000000000003))
(assert (= temp868_179 temp868_178))
(assert (= temp868_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp868_179)))
(assert (= temp868_181 #x0000000000000004))
(assert (= temp868_182 temp868_181))
(assert (= temp868_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp868_182)))
(assert (= temp868_184 #x0000000000000005))
(assert (= temp868_185 temp868_184))
(assert (= temp868_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp868_185)))
(assert (= temp868_187 #x0000000000000000))
(assert (= temp868_188
   (ite (bvslt var1180714 temp868_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp868_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp868_188)))
(assert (= var1191831 temp868_189))
(assert (bvslt (ite (bvslt var1180714 temp868_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp868_190 #x0000000000000001))
(assert (= var1180714 temp868_190))
(assert (= temp868_192 var1180714))
(assert (= temp868_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp868_192)))
(assert (= temp868_191 temp868_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp868_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp868_194 #x0000000000000001))
(assert (= var1191836 temp868_194))
(assert (= temp868_195 #x0000000000000000))
(assert (= var1179826 temp868_195))
(assert (= temp868_197 var1179826))
(assert (= temp868_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp868_197)))
(assert (= temp868_196 temp868_198))
(assert (= temp868_199 #x0000000000000002))
(assert (= var1586025 temp868_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp868_200 #x0000000000000001))
(assert (= var1191993 temp868_200))
(assert (= temp868_201 #x0000000000000001))
(assert (= var2700303 temp868_201))
(assert (= temp868_202 #x0000000000000001))
(assert (= var2962447 temp868_202))
(assert (= temp868_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp868_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp868_204 #x0000000000000001))
(assert (= var211058 temp868_204))
(assert (= temp868_205 #x0000000000000001))
(assert (= var211188 temp868_205))
(assert (= var3879401 var211188))
(assert (= temp868_206 #x0000000000000000))
(assert (= var3866802 temp868_206))
(assert (= temp868_207 #x0000000000000000))
(assert (= temp868_208
   (ite (bvslt var3866802 temp868_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp868_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp868_208)))
(assert (= var3879420 temp868_209))
(assert (bvslt (ite (bvslt var3866802 temp868_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp868_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp868_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp868_211 #x0000000000000001))
(assert (= var3879421 temp868_211))
(assert (= temp868_212 #x0000000000000000))
(assert (= var4079423 temp868_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp868_213 #x0000000000000002))
(assert (= var4208259 temp868_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp868_214 #x0000000000000000))
(assert (= var4273820 temp868_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp868_215 #x0000000000000001))
(assert (= var211058 temp868_215))
(assert (= temp868_216 #x0000000000000000))
(assert (= var6501140 temp868_216))
(assert (= var6501107 var6501140))
(assert (= var6369671 var6501107))
(assert (= var6369667 var6369671))
(assert (= var212669 var6369667))
(assert (= temp868_217 #x0000000000000000))
(assert (= var212669 temp868_217))
(model-add temp868_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp868_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp868_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp868_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




