(declare-fun temp10185_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10185_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10185_3 () (_ BitVec 64))
(declare-fun temp10185_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10185_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10185_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10185_7 () (_ BitVec 64))
(declare-fun temp10185_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10185_9 () (_ BitVec 64))
(declare-fun temp10185_10 () (_ BitVec 64))
(declare-fun temp10185_11 () (_ BitVec 64))
(declare-fun temp10185_12 () (_ BitVec 64))
(declare-fun temp10185_13 () (_ BitVec 64))
(declare-fun temp10185_14 () (_ BitVec 64))
(declare-fun temp10185_15 () (_ BitVec 64))
(declare-fun temp10185_16 () (_ BitVec 64))
(declare-fun temp10185_17 () (_ BitVec 64))
(declare-fun temp10185_18 () (_ BitVec 64))
(declare-fun temp10185_19 () (_ BitVec 64))
(declare-fun temp10185_20 () (_ BitVec 64))
(declare-fun temp10185_21 () (_ BitVec 64))
(declare-fun temp10185_22 () (_ BitVec 64))
(declare-fun temp10185_23 () (_ BitVec 64))
(declare-fun temp10185_24 () (_ BitVec 64))
(declare-fun temp10185_25 () (_ BitVec 64))
(declare-fun temp10185_26 () (_ BitVec 64))
(declare-fun temp10185_27 () (_ BitVec 64))
(declare-fun temp10185_28 () (_ BitVec 64))
(declare-fun temp10185_29 () (_ BitVec 64))
(declare-fun temp10185_30 () (_ BitVec 64))
(declare-fun temp10185_31 () (_ BitVec 64))
(declare-fun temp10185_32 () (_ BitVec 64))
(declare-fun temp10185_33 () (_ BitVec 64))
(declare-fun temp10185_34 () (_ BitVec 64))
(declare-fun temp10185_35 () (_ BitVec 64))
(declare-fun temp10185_36 () (_ BitVec 64))
(declare-fun temp10185_37 () (_ BitVec 64))
(declare-fun temp10185_38 () (_ BitVec 64))
(declare-fun temp10185_39 () (_ BitVec 64))
(declare-fun temp10185_40 () (_ BitVec 64))
(declare-fun temp10185_41 () (_ BitVec 64))
(declare-fun temp10185_42 () (_ BitVec 64))
(declare-fun temp10185_43 () (_ BitVec 64))
(declare-fun temp10185_44 () (_ BitVec 64))
(declare-fun temp10185_45 () (_ BitVec 64))
(declare-fun temp10185_46 () (_ BitVec 64))
(declare-fun temp10185_47 () (_ BitVec 64))
(declare-fun temp10185_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10185_49 () (_ BitVec 64))
(declare-fun temp10185_50 () (_ BitVec 64))
(declare-fun temp10185_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10185_52 () (_ BitVec 64))
(declare-fun temp10185_53 () (_ BitVec 64))
(declare-fun temp10185_54 () (_ BitVec 64))
(declare-fun temp10185_55 () (_ BitVec 64))
(declare-fun temp10185_56 () (_ BitVec 64))
(declare-fun temp10185_57 () (_ BitVec 64))
(declare-fun temp10185_58 () (_ BitVec 64))
(declare-fun temp10185_59 () (_ BitVec 64))
(declare-fun temp10185_60 () (_ BitVec 64))
(declare-fun temp10185_61 () (_ BitVec 64))
(declare-fun temp10185_62 () (_ BitVec 64))
(declare-fun temp10185_63 () (_ BitVec 64))
(declare-fun temp10185_64 () (_ BitVec 64))
(declare-fun temp10185_65 () (_ BitVec 64))
(declare-fun temp10185_66 () (_ BitVec 64))
(declare-fun temp10185_67 () (_ BitVec 64))
(declare-fun temp10185_68 () (_ BitVec 64))
(declare-fun temp10185_69 () (_ BitVec 64))
(declare-fun temp10185_70 () (_ BitVec 64))
(declare-fun temp10185_71 () (_ BitVec 64))
(declare-fun temp10185_72 () (_ BitVec 64))
(declare-fun temp10185_73 () (_ BitVec 64))
(declare-fun temp10185_74 () (_ BitVec 64))
(declare-fun temp10185_75 () (_ BitVec 64))
(declare-fun temp10185_76 () (_ BitVec 64))
(declare-fun temp10185_77 () (_ BitVec 64))
(declare-fun temp10185_78 () (_ BitVec 64))
(declare-fun temp10185_79 () (_ BitVec 64))
(declare-fun temp10185_80 () (_ BitVec 64))
(declare-fun temp10185_81 () (_ BitVec 64))
(declare-fun temp10185_82 () (_ BitVec 64))
(declare-fun temp10185_83 () (_ BitVec 64))
(declare-fun temp10185_84 () (_ BitVec 64))
(declare-fun temp10185_85 () (_ BitVec 64))
(declare-fun temp10185_86 () (_ BitVec 64))
(declare-fun temp10185_87 () (_ BitVec 64))
(declare-fun temp10185_88 () (_ BitVec 64))
(declare-fun temp10185_89 () (_ BitVec 64))
(declare-fun temp10185_90 () (_ BitVec 64))
(declare-fun temp10185_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10185_92 () (_ BitVec 64))
(declare-fun temp10185_93 () (_ BitVec 64))
(declare-fun temp10185_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10185_95 () (_ BitVec 64))
(declare-fun temp10185_96 () (_ BitVec 64))
(declare-fun temp10185_97 () (_ BitVec 64))
(declare-fun temp10185_98 () (_ BitVec 64))
(declare-fun temp10185_99 () (_ BitVec 64))
(declare-fun temp10185_100 () (_ BitVec 64))
(declare-fun temp10185_101 () (_ BitVec 64))
(declare-fun temp10185_102 () (_ BitVec 64))
(declare-fun temp10185_103 () (_ BitVec 64))
(declare-fun temp10185_104 () (_ BitVec 64))
(declare-fun temp10185_105 () (_ BitVec 64))
(declare-fun temp10185_106 () (_ BitVec 64))
(declare-fun temp10185_107 () (_ BitVec 64))
(declare-fun temp10185_108 () (_ BitVec 64))
(declare-fun temp10185_109 () (_ BitVec 64))
(declare-fun temp10185_110 () (_ BitVec 64))
(declare-fun temp10185_111 () (_ BitVec 64))
(declare-fun temp10185_112 () (_ BitVec 64))
(declare-fun temp10185_113 () (_ BitVec 64))
(declare-fun temp10185_114 () (_ BitVec 64))
(declare-fun temp10185_115 () (_ BitVec 64))
(declare-fun temp10185_116 () (_ BitVec 64))
(declare-fun temp10185_117 () (_ BitVec 64))
(declare-fun temp10185_118 () (_ BitVec 64))
(declare-fun temp10185_119 () (_ BitVec 64))
(declare-fun temp10185_120 () (_ BitVec 64))
(declare-fun temp10185_121 () (_ BitVec 64))
(declare-fun temp10185_122 () (_ BitVec 64))
(declare-fun temp10185_123 () (_ BitVec 64))
(declare-fun temp10185_124 () (_ BitVec 64))
(declare-fun temp10185_125 () (_ BitVec 64))
(declare-fun temp10185_126 () (_ BitVec 64))
(declare-fun temp10185_127 () (_ BitVec 64))
(declare-fun temp10185_128 () (_ BitVec 64))
(declare-fun temp10185_129 () (_ BitVec 64))
(declare-fun temp10185_130 () (_ BitVec 64))
(declare-fun temp10185_131 () (_ BitVec 64))
(declare-fun temp10185_132 () (_ BitVec 64))
(declare-fun temp10185_133 () (_ BitVec 64))
(declare-fun temp10185_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10185_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10185_136 () (_ BitVec 64))
(declare-fun temp10185_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10185_138 () (_ BitVec 64))
(declare-fun temp10185_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10185_140 () (_ BitVec 64))
(declare-fun temp10185_141 () (_ BitVec 64))
(declare-fun temp10185_142 () (_ BitVec 64))
(declare-fun temp10185_143 () (_ BitVec 64))
(declare-fun temp10185_144 () (_ BitVec 64))
(declare-fun temp10185_145 () (_ BitVec 64))
(declare-fun temp10185_146 () (_ BitVec 64))
(declare-fun temp10185_147 () (_ BitVec 64))
(declare-fun temp10185_148 () (_ BitVec 64))
(declare-fun temp10185_149 () (_ BitVec 64))
(declare-fun temp10185_150 () (_ BitVec 64))
(declare-fun temp10185_151 () (_ BitVec 64))
(declare-fun temp10185_152 () (_ BitVec 64))
(declare-fun temp10185_153 () (_ BitVec 64))
(declare-fun temp10185_154 () (_ BitVec 64))
(declare-fun temp10185_155 () (_ BitVec 64))
(declare-fun temp10185_157 () (_ BitVec 64))
(declare-fun temp10185_158 () (_ BitVec 64))
(declare-fun temp10185_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10185_159 () (_ BitVec 64))
(declare-fun temp10185_160 () (_ BitVec 64))
(declare-fun temp10185_162 () (_ BitVec 64))
(declare-fun temp10185_163 () (_ BitVec 64))
(declare-fun temp10185_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10185_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10185_165 () (_ BitVec 64))
(declare-fun temp10185_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10185_167 () (_ BitVec 64))
(declare-fun temp10185_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10185_169 () (_ BitVec 64))
(declare-fun temp10185_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10185_171 () (_ BitVec 64))
(declare-fun temp10185_172 () (_ BitVec 64))
(declare-fun temp10185_173 () (_ BitVec 64))
(declare-fun temp10185_174 () (_ BitVec 64))
(declare-fun temp10185_175 () (_ BitVec 64))
(declare-fun temp10185_176 () (_ BitVec 64))
(declare-fun temp10185_177 () (_ BitVec 64))
(declare-fun temp10185_178 () (_ BitVec 64))
(declare-fun temp10185_179 () (_ BitVec 64))
(declare-fun temp10185_180 () (_ BitVec 64))
(declare-fun temp10185_181 () (_ BitVec 64))
(declare-fun temp10185_182 () (_ BitVec 64))
(declare-fun temp10185_183 () (_ BitVec 64))
(declare-fun temp10185_184 () (_ BitVec 64))
(declare-fun temp10185_185 () (_ BitVec 64))
(declare-fun temp10185_186 () (_ BitVec 64))
(declare-fun temp10185_187 () (_ BitVec 64))
(declare-fun temp10185_188 () (_ BitVec 64))
(declare-fun temp10185_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10185_190 () (_ BitVec 64))
(declare-fun temp10185_192 () (_ BitVec 64))
(declare-fun temp10185_193 () (_ BitVec 64))
(declare-fun temp10185_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10185_194 () (_ BitVec 64))
(declare-fun temp10185_195 () (_ BitVec 64))
(declare-fun temp10185_197 () (_ BitVec 64))
(declare-fun temp10185_198 () (_ BitVec 64))
(declare-fun temp10185_196 () (_ BitVec 64))
(declare-fun temp10185_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10185_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10185_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10185_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10185_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10185_204 () (_ BitVec 64))
(declare-fun temp10185_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10185_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10185_207 () (_ BitVec 64))
(declare-fun temp10185_208 () (_ BitVec 64))
(declare-fun temp10185_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10185_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10185_211 () (_ BitVec 64))
(declare-fun temp10185_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10185_213 () (_ BitVec 64))
(declare-fun temp10185_214 () (_ BitVec 64))
(declare-fun temp10185_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10185_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10185_217 () (_ BitVec 64))
(declare-fun temp10185_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10185_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10185_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp10185_221 () (_ BitVec 64))
(assert (= temp10185_1 #x0000000000000001))
(assert (= var77203 temp10185_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10185_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10185_2)))
(assert (= temp10185_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10185_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10185_4 #x0000000000000000))
(assert (= var210941 temp10185_4))
(assert (= temp10185_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10185_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10185_6 #x0000000000000000))
(assert (= var210986 temp10185_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10185_7 #x0000000000000000))
(assert (= temp10185_8 temp10185_7))
(assert (= temp10185_9 (select ARGNAME_padding_NAMEEND_VAL temp10185_8)))
(assert (= temp10185_10 #x0000000000000001))
(assert (= temp10185_11 temp10185_10))
(assert (= temp10185_12 (select ARGNAME_padding_NAMEEND_VAL temp10185_11)))
(assert (= temp10185_13 #x0000000000000002))
(assert (= temp10185_14 temp10185_13))
(assert (= temp10185_15 (select ARGNAME_padding_NAMEEND_VAL temp10185_14)))
(assert (= temp10185_16 #x0000000000000003))
(assert (= temp10185_17 temp10185_16))
(assert (= temp10185_18 (select ARGNAME_padding_NAMEEND_VAL temp10185_17)))
(assert (= temp10185_19 #x0000000000000004))
(assert (= temp10185_20 temp10185_19))
(assert (= temp10185_21 (select ARGNAME_padding_NAMEEND_VAL temp10185_20)))
(assert (= temp10185_22 #x0000000000000005))
(assert (= temp10185_23 temp10185_22))
(assert (= temp10185_24 (select ARGNAME_padding_NAMEEND_VAL temp10185_23)))
(assert (= temp10185_25 #x0000000000000000))
(assert (= temp10185_26 #x0000000000000000))
(assert (= temp10185_27 temp10185_26))
(assert (= temp10185_28 (select ARGNAME_padding_NAMEEND_VAL temp10185_27)))
(assert (= temp10185_29 #x0000000000000000))
(assert (= temp10185_30 #x0000000000000001))
(assert (= temp10185_31 temp10185_30))
(assert (= temp10185_32 (select ARGNAME_padding_NAMEEND_VAL temp10185_31)))
(assert (= temp10185_33 #x0000000000000000))
(assert (= temp10185_34 #x0000000000000002))
(assert (= temp10185_35 temp10185_34))
(assert (= temp10185_36 (select ARGNAME_padding_NAMEEND_VAL temp10185_35)))
(assert (= temp10185_37 #x0000000000000000))
(assert (= temp10185_38 #x0000000000000003))
(assert (= temp10185_39 temp10185_38))
(assert (= temp10185_40 (select ARGNAME_padding_NAMEEND_VAL temp10185_39)))
(assert (= temp10185_41 #x0000000000000000))
(assert (= temp10185_42 #x0000000000000004))
(assert (= temp10185_43 temp10185_42))
(assert (= temp10185_44 (select ARGNAME_padding_NAMEEND_VAL temp10185_43)))
(assert (= temp10185_45 #x0000000000000000))
(assert (= temp10185_46 #x0000000000000005))
(assert (= temp10185_47 temp10185_46))
(assert (= temp10185_48 (select ARGNAME_padding_NAMEEND_VAL temp10185_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10185_28 temp10185_25)
             (bvslt temp10185_32 temp10185_29)
             (bvslt temp10185_36 temp10185_33)
             (bvslt temp10185_40 temp10185_37)
             (bvslt temp10185_44 temp10185_41)
             (bvslt temp10185_48 temp10185_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10185_49 #x0000000000000000))
(assert (= var1191714 temp10185_49))
(assert (= temp10185_50 #x0000000000000000))
(assert (= temp10185_51 temp10185_50))
(assert (= temp10185_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10185_51)))
(assert (= temp10185_53 #x0000000000000001))
(assert (= temp10185_54 temp10185_53))
(assert (= temp10185_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10185_54)))
(assert (= temp10185_56 #x0000000000000002))
(assert (= temp10185_57 temp10185_56))
(assert (= temp10185_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10185_57)))
(assert (= temp10185_59 #x0000000000000003))
(assert (= temp10185_60 temp10185_59))
(assert (= temp10185_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10185_60)))
(assert (= temp10185_62 #x0000000000000004))
(assert (= temp10185_63 temp10185_62))
(assert (= temp10185_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10185_63)))
(assert (= temp10185_65 #x0000000000000005))
(assert (= temp10185_66 temp10185_65))
(assert (= temp10185_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10185_66)))
(assert (= temp10185_68 #x0000000000000000))
(assert (= temp10185_69 #x0000000000000000))
(assert (= temp10185_70 temp10185_69))
(assert (= temp10185_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10185_70)))
(assert (= temp10185_72 #x0000000000000000))
(assert (= temp10185_73 #x0000000000000001))
(assert (= temp10185_74 temp10185_73))
(assert (= temp10185_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10185_74)))
(assert (= temp10185_76 #x0000000000000000))
(assert (= temp10185_77 #x0000000000000002))
(assert (= temp10185_78 temp10185_77))
(assert (= temp10185_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10185_78)))
(assert (= temp10185_80 #x0000000000000000))
(assert (= temp10185_81 #x0000000000000003))
(assert (= temp10185_82 temp10185_81))
(assert (= temp10185_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10185_82)))
(assert (= temp10185_84 #x0000000000000000))
(assert (= temp10185_85 #x0000000000000004))
(assert (= temp10185_86 temp10185_85))
(assert (= temp10185_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10185_86)))
(assert (= temp10185_88 #x0000000000000000))
(assert (= temp10185_89 #x0000000000000005))
(assert (= temp10185_90 temp10185_89))
(assert (= temp10185_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10185_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10185_71 temp10185_68)
             (bvslt temp10185_75 temp10185_72)
             (bvslt temp10185_79 temp10185_76)
             (bvslt temp10185_83 temp10185_80)
             (bvslt temp10185_87 temp10185_84)
             (bvslt temp10185_91 temp10185_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10185_92 #x0000000000000000))
(assert (= var1191725 temp10185_92))
(assert (= temp10185_93 #x0000000000000000))
(assert (= temp10185_94 temp10185_93))
(assert (= temp10185_95 (select ARGNAME_stride_NAMEEND_VAL temp10185_94)))
(assert (= temp10185_96 #x0000000000000001))
(assert (= temp10185_97 temp10185_96))
(assert (= temp10185_98 (select ARGNAME_stride_NAMEEND_VAL temp10185_97)))
(assert (= temp10185_99 #x0000000000000002))
(assert (= temp10185_100 temp10185_99))
(assert (= temp10185_101 (select ARGNAME_stride_NAMEEND_VAL temp10185_100)))
(assert (= temp10185_102 #x0000000000000003))
(assert (= temp10185_103 temp10185_102))
(assert (= temp10185_104 (select ARGNAME_stride_NAMEEND_VAL temp10185_103)))
(assert (= temp10185_105 #x0000000000000004))
(assert (= temp10185_106 temp10185_105))
(assert (= temp10185_107 (select ARGNAME_stride_NAMEEND_VAL temp10185_106)))
(assert (= temp10185_108 #x0000000000000005))
(assert (= temp10185_109 temp10185_108))
(assert (= temp10185_110 (select ARGNAME_stride_NAMEEND_VAL temp10185_109)))
(assert (= temp10185_111 #x0000000000000000))
(assert (= temp10185_112 #x0000000000000000))
(assert (= temp10185_113 temp10185_112))
(assert (= temp10185_114 (select ARGNAME_stride_NAMEEND_VAL temp10185_113)))
(assert (= temp10185_115 #x0000000000000000))
(assert (= temp10185_116 #x0000000000000001))
(assert (= temp10185_117 temp10185_116))
(assert (= temp10185_118 (select ARGNAME_stride_NAMEEND_VAL temp10185_117)))
(assert (= temp10185_119 #x0000000000000000))
(assert (= temp10185_120 #x0000000000000002))
(assert (= temp10185_121 temp10185_120))
(assert (= temp10185_122 (select ARGNAME_stride_NAMEEND_VAL temp10185_121)))
(assert (= temp10185_123 #x0000000000000000))
(assert (= temp10185_124 #x0000000000000003))
(assert (= temp10185_125 temp10185_124))
(assert (= temp10185_126 (select ARGNAME_stride_NAMEEND_VAL temp10185_125)))
(assert (= temp10185_127 #x0000000000000000))
(assert (= temp10185_128 #x0000000000000004))
(assert (= temp10185_129 temp10185_128))
(assert (= temp10185_130 (select ARGNAME_stride_NAMEEND_VAL temp10185_129)))
(assert (= temp10185_131 #x0000000000000000))
(assert (= temp10185_132 #x0000000000000005))
(assert (= temp10185_133 temp10185_132))
(assert (= temp10185_134 (select ARGNAME_stride_NAMEEND_VAL temp10185_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10185_114 temp10185_111)
             (bvsle temp10185_118 temp10185_115)
             (bvsle temp10185_122 temp10185_119)
             (bvsle temp10185_126 temp10185_123)
             (bvsle temp10185_130 temp10185_127)
             (bvsle temp10185_134 temp10185_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10185_135 #x0000000000000000))
(assert (= var1191735 temp10185_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10185_136 #x0000000000000001))
(assert (= var1191747 temp10185_136))
(assert (= temp10185_137 #x0000000000000000))
(assert (= var1179826 temp10185_137))
(assert (= temp10185_138 #x0000000000000000))
(assert (= temp10185_139 temp10185_138))
(assert (= temp10185_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10185_139)))
(assert (= temp10185_141 #x0000000000000001))
(assert (= temp10185_142 temp10185_141))
(assert (= temp10185_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10185_142)))
(assert (= temp10185_144 #x0000000000000002))
(assert (= temp10185_145 temp10185_144))
(assert (= temp10185_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10185_145)))
(assert (= temp10185_147 #x0000000000000003))
(assert (= temp10185_148 temp10185_147))
(assert (= temp10185_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10185_148)))
(assert (= temp10185_150 #x0000000000000004))
(assert (= temp10185_151 temp10185_150))
(assert (= temp10185_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10185_151)))
(assert (= temp10185_153 #x0000000000000005))
(assert (= temp10185_154 temp10185_153))
(assert (= temp10185_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10185_154)))
(assert (= temp10185_157 var1179826))
(assert (= temp10185_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10185_157)))
(assert (= temp10185_156 temp10185_158))
(assert (= var1191780
   (ite (bvslt temp10185_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10185_159 #x0000000000000000))
(assert (= var1191780 temp10185_159))
(assert (= temp10185_160 #x0000000000000000))
(assert (= var1179826 temp10185_160))
(assert (= temp10185_162 var1179826))
(assert (= temp10185_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10185_162)))
(assert (= temp10185_161 temp10185_163))
(assert (= var1191802 (bvsmod temp10185_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10185_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10185_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10185_165 #x0000000000000001))
(assert (= var1191803 temp10185_165))
(assert (= temp10185_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10185_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10185_167 #x0000000000000001))
(assert (= var1191823 temp10185_167))
(assert (= temp10185_168 #x0000000000000001))
(assert (= var1180714 temp10185_168))
(assert (= temp10185_169 #x0000000000000000))
(assert (= temp10185_170 temp10185_169))
(assert (= temp10185_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10185_170)))
(assert (= temp10185_172 #x0000000000000001))
(assert (= temp10185_173 temp10185_172))
(assert (= temp10185_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10185_173)))
(assert (= temp10185_175 #x0000000000000002))
(assert (= temp10185_176 temp10185_175))
(assert (= temp10185_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10185_176)))
(assert (= temp10185_178 #x0000000000000003))
(assert (= temp10185_179 temp10185_178))
(assert (= temp10185_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10185_179)))
(assert (= temp10185_181 #x0000000000000004))
(assert (= temp10185_182 temp10185_181))
(assert (= temp10185_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10185_182)))
(assert (= temp10185_184 #x0000000000000005))
(assert (= temp10185_185 temp10185_184))
(assert (= temp10185_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10185_185)))
(assert (= temp10185_187 #x0000000000000000))
(assert (= temp10185_188
   (ite (bvslt var1180714 temp10185_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10185_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10185_188)))
(assert (= var1191831 temp10185_189))
(assert (bvslt (ite (bvslt var1180714 temp10185_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10185_190 #x0000000000000001))
(assert (= var1180714 temp10185_190))
(assert (= temp10185_192 var1180714))
(assert (= temp10185_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10185_192)))
(assert (= temp10185_191 temp10185_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10185_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10185_194 #x0000000000000001))
(assert (= var1191836 temp10185_194))
(assert (= temp10185_195 #x0000000000000000))
(assert (= var1179826 temp10185_195))
(assert (= temp10185_197 var1179826))
(assert (= temp10185_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10185_197)))
(assert (= temp10185_196 temp10185_198))
(assert (= temp10185_199 #x0000000000000002))
(assert (= var1586025 temp10185_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10185_200 #x0000000000000001))
(assert (= var1191993 temp10185_200))
(assert (= temp10185_201 #x0000000000000001))
(assert (= var2700303 temp10185_201))
(assert (= temp10185_202 #x0000000000000001))
(assert (= var2962447 temp10185_202))
(assert (= temp10185_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10185_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10185_204 #x0000000000000001))
(assert (= var211058 temp10185_204))
(assert (= temp10185_205 #x0000000000000001))
(assert (= var211188 temp10185_205))
(assert (= var3879401 var211188))
(assert (= temp10185_206 #x0000000000000000))
(assert (= var3866802 temp10185_206))
(assert (= temp10185_207 #x0000000000000000))
(assert (= temp10185_208
   (ite (bvslt var3866802 temp10185_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10185_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10185_208)))
(assert (= var3879420 temp10185_209))
(assert (bvslt (ite (bvslt var3866802 temp10185_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10185_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10185_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10185_211 #x0000000000000000))
(assert (= var3879421 temp10185_211))
(assert (= temp10185_212 #x0000000000000001))
(assert (= var3867690 temp10185_212))
(assert (= temp10185_213 #x0000000000000000))
(assert (= temp10185_214
   (ite (bvslt var3867690 temp10185_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10185_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10185_214)))
(assert (= var3879423 temp10185_215))
(assert (bvslt (ite (bvslt var3867690 temp10185_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10185_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10185_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10185_217 #x0000000000000001))
(assert (= var3879424 temp10185_217))
(assert (= temp10185_218 #x0000000000000000))
(assert (= var4079423 temp10185_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10185_219 #x0000000000000002))
(assert (= var4208259 temp10185_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10185_220 #x0000000000000000))
(assert (= var4273820 temp10185_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp10185_221 #x0000000000000001))
(assert (= var211058 temp10185_221))
(model-add temp10185_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10185_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10185_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10185_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




