(declare-fun temp10380_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10380_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10380_3 () (_ BitVec 64))
(declare-fun temp10380_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10380_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10380_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10380_7 () (_ BitVec 64))
(declare-fun temp10380_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10380_9 () (_ BitVec 64))
(declare-fun temp10380_10 () (_ BitVec 64))
(declare-fun temp10380_11 () (_ BitVec 64))
(declare-fun temp10380_12 () (_ BitVec 64))
(declare-fun temp10380_13 () (_ BitVec 64))
(declare-fun temp10380_14 () (_ BitVec 64))
(declare-fun temp10380_15 () (_ BitVec 64))
(declare-fun temp10380_16 () (_ BitVec 64))
(declare-fun temp10380_17 () (_ BitVec 64))
(declare-fun temp10380_18 () (_ BitVec 64))
(declare-fun temp10380_19 () (_ BitVec 64))
(declare-fun temp10380_20 () (_ BitVec 64))
(declare-fun temp10380_21 () (_ BitVec 64))
(declare-fun temp10380_22 () (_ BitVec 64))
(declare-fun temp10380_23 () (_ BitVec 64))
(declare-fun temp10380_24 () (_ BitVec 64))
(declare-fun temp10380_25 () (_ BitVec 64))
(declare-fun temp10380_26 () (_ BitVec 64))
(declare-fun temp10380_27 () (_ BitVec 64))
(declare-fun temp10380_28 () (_ BitVec 64))
(declare-fun temp10380_29 () (_ BitVec 64))
(declare-fun temp10380_30 () (_ BitVec 64))
(declare-fun temp10380_31 () (_ BitVec 64))
(declare-fun temp10380_32 () (_ BitVec 64))
(declare-fun temp10380_33 () (_ BitVec 64))
(declare-fun temp10380_34 () (_ BitVec 64))
(declare-fun temp10380_35 () (_ BitVec 64))
(declare-fun temp10380_36 () (_ BitVec 64))
(declare-fun temp10380_37 () (_ BitVec 64))
(declare-fun temp10380_38 () (_ BitVec 64))
(declare-fun temp10380_39 () (_ BitVec 64))
(declare-fun temp10380_40 () (_ BitVec 64))
(declare-fun temp10380_41 () (_ BitVec 64))
(declare-fun temp10380_42 () (_ BitVec 64))
(declare-fun temp10380_43 () (_ BitVec 64))
(declare-fun temp10380_44 () (_ BitVec 64))
(declare-fun temp10380_45 () (_ BitVec 64))
(declare-fun temp10380_46 () (_ BitVec 64))
(declare-fun temp10380_47 () (_ BitVec 64))
(declare-fun temp10380_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10380_49 () (_ BitVec 64))
(declare-fun temp10380_50 () (_ BitVec 64))
(declare-fun temp10380_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10380_52 () (_ BitVec 64))
(declare-fun temp10380_53 () (_ BitVec 64))
(declare-fun temp10380_54 () (_ BitVec 64))
(declare-fun temp10380_55 () (_ BitVec 64))
(declare-fun temp10380_56 () (_ BitVec 64))
(declare-fun temp10380_57 () (_ BitVec 64))
(declare-fun temp10380_58 () (_ BitVec 64))
(declare-fun temp10380_59 () (_ BitVec 64))
(declare-fun temp10380_60 () (_ BitVec 64))
(declare-fun temp10380_61 () (_ BitVec 64))
(declare-fun temp10380_62 () (_ BitVec 64))
(declare-fun temp10380_63 () (_ BitVec 64))
(declare-fun temp10380_64 () (_ BitVec 64))
(declare-fun temp10380_65 () (_ BitVec 64))
(declare-fun temp10380_66 () (_ BitVec 64))
(declare-fun temp10380_67 () (_ BitVec 64))
(declare-fun temp10380_68 () (_ BitVec 64))
(declare-fun temp10380_69 () (_ BitVec 64))
(declare-fun temp10380_70 () (_ BitVec 64))
(declare-fun temp10380_71 () (_ BitVec 64))
(declare-fun temp10380_72 () (_ BitVec 64))
(declare-fun temp10380_73 () (_ BitVec 64))
(declare-fun temp10380_74 () (_ BitVec 64))
(declare-fun temp10380_75 () (_ BitVec 64))
(declare-fun temp10380_76 () (_ BitVec 64))
(declare-fun temp10380_77 () (_ BitVec 64))
(declare-fun temp10380_78 () (_ BitVec 64))
(declare-fun temp10380_79 () (_ BitVec 64))
(declare-fun temp10380_80 () (_ BitVec 64))
(declare-fun temp10380_81 () (_ BitVec 64))
(declare-fun temp10380_82 () (_ BitVec 64))
(declare-fun temp10380_83 () (_ BitVec 64))
(declare-fun temp10380_84 () (_ BitVec 64))
(declare-fun temp10380_85 () (_ BitVec 64))
(declare-fun temp10380_86 () (_ BitVec 64))
(declare-fun temp10380_87 () (_ BitVec 64))
(declare-fun temp10380_88 () (_ BitVec 64))
(declare-fun temp10380_89 () (_ BitVec 64))
(declare-fun temp10380_90 () (_ BitVec 64))
(declare-fun temp10380_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10380_92 () (_ BitVec 64))
(declare-fun temp10380_93 () (_ BitVec 64))
(declare-fun temp10380_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10380_95 () (_ BitVec 64))
(declare-fun temp10380_96 () (_ BitVec 64))
(declare-fun temp10380_97 () (_ BitVec 64))
(declare-fun temp10380_98 () (_ BitVec 64))
(declare-fun temp10380_99 () (_ BitVec 64))
(declare-fun temp10380_100 () (_ BitVec 64))
(declare-fun temp10380_101 () (_ BitVec 64))
(declare-fun temp10380_102 () (_ BitVec 64))
(declare-fun temp10380_103 () (_ BitVec 64))
(declare-fun temp10380_104 () (_ BitVec 64))
(declare-fun temp10380_105 () (_ BitVec 64))
(declare-fun temp10380_106 () (_ BitVec 64))
(declare-fun temp10380_107 () (_ BitVec 64))
(declare-fun temp10380_108 () (_ BitVec 64))
(declare-fun temp10380_109 () (_ BitVec 64))
(declare-fun temp10380_110 () (_ BitVec 64))
(declare-fun temp10380_111 () (_ BitVec 64))
(declare-fun temp10380_112 () (_ BitVec 64))
(declare-fun temp10380_113 () (_ BitVec 64))
(declare-fun temp10380_114 () (_ BitVec 64))
(declare-fun temp10380_115 () (_ BitVec 64))
(declare-fun temp10380_116 () (_ BitVec 64))
(declare-fun temp10380_117 () (_ BitVec 64))
(declare-fun temp10380_118 () (_ BitVec 64))
(declare-fun temp10380_119 () (_ BitVec 64))
(declare-fun temp10380_120 () (_ BitVec 64))
(declare-fun temp10380_121 () (_ BitVec 64))
(declare-fun temp10380_122 () (_ BitVec 64))
(declare-fun temp10380_123 () (_ BitVec 64))
(declare-fun temp10380_124 () (_ BitVec 64))
(declare-fun temp10380_125 () (_ BitVec 64))
(declare-fun temp10380_126 () (_ BitVec 64))
(declare-fun temp10380_127 () (_ BitVec 64))
(declare-fun temp10380_128 () (_ BitVec 64))
(declare-fun temp10380_129 () (_ BitVec 64))
(declare-fun temp10380_130 () (_ BitVec 64))
(declare-fun temp10380_131 () (_ BitVec 64))
(declare-fun temp10380_132 () (_ BitVec 64))
(declare-fun temp10380_133 () (_ BitVec 64))
(declare-fun temp10380_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10380_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10380_136 () (_ BitVec 64))
(declare-fun temp10380_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10380_138 () (_ BitVec 64))
(declare-fun temp10380_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10380_140 () (_ BitVec 64))
(declare-fun temp10380_141 () (_ BitVec 64))
(declare-fun temp10380_142 () (_ BitVec 64))
(declare-fun temp10380_143 () (_ BitVec 64))
(declare-fun temp10380_144 () (_ BitVec 64))
(declare-fun temp10380_145 () (_ BitVec 64))
(declare-fun temp10380_146 () (_ BitVec 64))
(declare-fun temp10380_147 () (_ BitVec 64))
(declare-fun temp10380_148 () (_ BitVec 64))
(declare-fun temp10380_149 () (_ BitVec 64))
(declare-fun temp10380_150 () (_ BitVec 64))
(declare-fun temp10380_151 () (_ BitVec 64))
(declare-fun temp10380_152 () (_ BitVec 64))
(declare-fun temp10380_153 () (_ BitVec 64))
(declare-fun temp10380_154 () (_ BitVec 64))
(declare-fun temp10380_155 () (_ BitVec 64))
(declare-fun temp10380_157 () (_ BitVec 64))
(declare-fun temp10380_158 () (_ BitVec 64))
(declare-fun temp10380_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10380_159 () (_ BitVec 64))
(declare-fun temp10380_160 () (_ BitVec 64))
(declare-fun temp10380_162 () (_ BitVec 64))
(declare-fun temp10380_163 () (_ BitVec 64))
(declare-fun temp10380_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10380_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10380_165 () (_ BitVec 64))
(declare-fun temp10380_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10380_167 () (_ BitVec 64))
(declare-fun temp10380_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10380_169 () (_ BitVec 64))
(declare-fun temp10380_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10380_171 () (_ BitVec 64))
(declare-fun temp10380_172 () (_ BitVec 64))
(declare-fun temp10380_173 () (_ BitVec 64))
(declare-fun temp10380_174 () (_ BitVec 64))
(declare-fun temp10380_175 () (_ BitVec 64))
(declare-fun temp10380_176 () (_ BitVec 64))
(declare-fun temp10380_177 () (_ BitVec 64))
(declare-fun temp10380_178 () (_ BitVec 64))
(declare-fun temp10380_179 () (_ BitVec 64))
(declare-fun temp10380_180 () (_ BitVec 64))
(declare-fun temp10380_181 () (_ BitVec 64))
(declare-fun temp10380_182 () (_ BitVec 64))
(declare-fun temp10380_183 () (_ BitVec 64))
(declare-fun temp10380_184 () (_ BitVec 64))
(declare-fun temp10380_185 () (_ BitVec 64))
(declare-fun temp10380_186 () (_ BitVec 64))
(declare-fun temp10380_187 () (_ BitVec 64))
(declare-fun temp10380_188 () (_ BitVec 64))
(declare-fun temp10380_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10380_190 () (_ BitVec 64))
(declare-fun temp10380_192 () (_ BitVec 64))
(declare-fun temp10380_193 () (_ BitVec 64))
(declare-fun temp10380_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10380_194 () (_ BitVec 64))
(declare-fun temp10380_195 () (_ BitVec 64))
(declare-fun temp10380_197 () (_ BitVec 64))
(declare-fun temp10380_198 () (_ BitVec 64))
(declare-fun temp10380_196 () (_ BitVec 64))
(declare-fun temp10380_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10380_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10380_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10380_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10380_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10380_204 () (_ BitVec 64))
(declare-fun temp10380_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10380_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10380_207 () (_ BitVec 64))
(declare-fun temp10380_208 () (_ BitVec 64))
(declare-fun temp10380_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10380_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10380_211 () (_ BitVec 64))
(declare-fun temp10380_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10380_213 () (_ BitVec 64))
(declare-fun temp10380_214 () (_ BitVec 64))
(declare-fun temp10380_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10380_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10380_217 () (_ BitVec 64))
(declare-fun temp10380_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10380_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10380_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp10380_221 () (_ BitVec 64))
(declare-fun temp10380_222 () (_ BitVec 64))
(declare-fun var5649172 () (_ BitVec 64))
(declare-fun var5649139 () (_ BitVec 64))
(declare-fun var5517703 () (_ BitVec 64))
(declare-fun var5517699 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp10380_223 () (_ BitVec 64))
(assert (= temp10380_1 #x0000000000000001))
(assert (= var77203 temp10380_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10380_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10380_2)))
(assert (= temp10380_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10380_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10380_4 #x0000000000000000))
(assert (= var210941 temp10380_4))
(assert (= temp10380_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10380_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10380_6 #x0000000000000000))
(assert (= var210986 temp10380_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10380_7 #x0000000000000000))
(assert (= temp10380_8 temp10380_7))
(assert (= temp10380_9 (select ARGNAME_padding_NAMEEND_VAL temp10380_8)))
(assert (= temp10380_10 #x0000000000000001))
(assert (= temp10380_11 temp10380_10))
(assert (= temp10380_12 (select ARGNAME_padding_NAMEEND_VAL temp10380_11)))
(assert (= temp10380_13 #x0000000000000002))
(assert (= temp10380_14 temp10380_13))
(assert (= temp10380_15 (select ARGNAME_padding_NAMEEND_VAL temp10380_14)))
(assert (= temp10380_16 #x0000000000000003))
(assert (= temp10380_17 temp10380_16))
(assert (= temp10380_18 (select ARGNAME_padding_NAMEEND_VAL temp10380_17)))
(assert (= temp10380_19 #x0000000000000004))
(assert (= temp10380_20 temp10380_19))
(assert (= temp10380_21 (select ARGNAME_padding_NAMEEND_VAL temp10380_20)))
(assert (= temp10380_22 #x0000000000000005))
(assert (= temp10380_23 temp10380_22))
(assert (= temp10380_24 (select ARGNAME_padding_NAMEEND_VAL temp10380_23)))
(assert (= temp10380_25 #x0000000000000000))
(assert (= temp10380_26 #x0000000000000000))
(assert (= temp10380_27 temp10380_26))
(assert (= temp10380_28 (select ARGNAME_padding_NAMEEND_VAL temp10380_27)))
(assert (= temp10380_29 #x0000000000000000))
(assert (= temp10380_30 #x0000000000000001))
(assert (= temp10380_31 temp10380_30))
(assert (= temp10380_32 (select ARGNAME_padding_NAMEEND_VAL temp10380_31)))
(assert (= temp10380_33 #x0000000000000000))
(assert (= temp10380_34 #x0000000000000002))
(assert (= temp10380_35 temp10380_34))
(assert (= temp10380_36 (select ARGNAME_padding_NAMEEND_VAL temp10380_35)))
(assert (= temp10380_37 #x0000000000000000))
(assert (= temp10380_38 #x0000000000000003))
(assert (= temp10380_39 temp10380_38))
(assert (= temp10380_40 (select ARGNAME_padding_NAMEEND_VAL temp10380_39)))
(assert (= temp10380_41 #x0000000000000000))
(assert (= temp10380_42 #x0000000000000004))
(assert (= temp10380_43 temp10380_42))
(assert (= temp10380_44 (select ARGNAME_padding_NAMEEND_VAL temp10380_43)))
(assert (= temp10380_45 #x0000000000000000))
(assert (= temp10380_46 #x0000000000000005))
(assert (= temp10380_47 temp10380_46))
(assert (= temp10380_48 (select ARGNAME_padding_NAMEEND_VAL temp10380_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10380_28 temp10380_25)
             (bvslt temp10380_32 temp10380_29)
             (bvslt temp10380_36 temp10380_33)
             (bvslt temp10380_40 temp10380_37)
             (bvslt temp10380_44 temp10380_41)
             (bvslt temp10380_48 temp10380_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10380_49 #x0000000000000000))
(assert (= var1191714 temp10380_49))
(assert (= temp10380_50 #x0000000000000000))
(assert (= temp10380_51 temp10380_50))
(assert (= temp10380_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10380_51)))
(assert (= temp10380_53 #x0000000000000001))
(assert (= temp10380_54 temp10380_53))
(assert (= temp10380_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10380_54)))
(assert (= temp10380_56 #x0000000000000002))
(assert (= temp10380_57 temp10380_56))
(assert (= temp10380_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10380_57)))
(assert (= temp10380_59 #x0000000000000003))
(assert (= temp10380_60 temp10380_59))
(assert (= temp10380_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10380_60)))
(assert (= temp10380_62 #x0000000000000004))
(assert (= temp10380_63 temp10380_62))
(assert (= temp10380_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10380_63)))
(assert (= temp10380_65 #x0000000000000005))
(assert (= temp10380_66 temp10380_65))
(assert (= temp10380_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10380_66)))
(assert (= temp10380_68 #x0000000000000000))
(assert (= temp10380_69 #x0000000000000000))
(assert (= temp10380_70 temp10380_69))
(assert (= temp10380_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10380_70)))
(assert (= temp10380_72 #x0000000000000000))
(assert (= temp10380_73 #x0000000000000001))
(assert (= temp10380_74 temp10380_73))
(assert (= temp10380_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10380_74)))
(assert (= temp10380_76 #x0000000000000000))
(assert (= temp10380_77 #x0000000000000002))
(assert (= temp10380_78 temp10380_77))
(assert (= temp10380_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10380_78)))
(assert (= temp10380_80 #x0000000000000000))
(assert (= temp10380_81 #x0000000000000003))
(assert (= temp10380_82 temp10380_81))
(assert (= temp10380_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10380_82)))
(assert (= temp10380_84 #x0000000000000000))
(assert (= temp10380_85 #x0000000000000004))
(assert (= temp10380_86 temp10380_85))
(assert (= temp10380_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10380_86)))
(assert (= temp10380_88 #x0000000000000000))
(assert (= temp10380_89 #x0000000000000005))
(assert (= temp10380_90 temp10380_89))
(assert (= temp10380_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10380_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10380_71 temp10380_68)
             (bvslt temp10380_75 temp10380_72)
             (bvslt temp10380_79 temp10380_76)
             (bvslt temp10380_83 temp10380_80)
             (bvslt temp10380_87 temp10380_84)
             (bvslt temp10380_91 temp10380_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10380_92 #x0000000000000000))
(assert (= var1191725 temp10380_92))
(assert (= temp10380_93 #x0000000000000000))
(assert (= temp10380_94 temp10380_93))
(assert (= temp10380_95 (select ARGNAME_stride_NAMEEND_VAL temp10380_94)))
(assert (= temp10380_96 #x0000000000000001))
(assert (= temp10380_97 temp10380_96))
(assert (= temp10380_98 (select ARGNAME_stride_NAMEEND_VAL temp10380_97)))
(assert (= temp10380_99 #x0000000000000002))
(assert (= temp10380_100 temp10380_99))
(assert (= temp10380_101 (select ARGNAME_stride_NAMEEND_VAL temp10380_100)))
(assert (= temp10380_102 #x0000000000000003))
(assert (= temp10380_103 temp10380_102))
(assert (= temp10380_104 (select ARGNAME_stride_NAMEEND_VAL temp10380_103)))
(assert (= temp10380_105 #x0000000000000004))
(assert (= temp10380_106 temp10380_105))
(assert (= temp10380_107 (select ARGNAME_stride_NAMEEND_VAL temp10380_106)))
(assert (= temp10380_108 #x0000000000000005))
(assert (= temp10380_109 temp10380_108))
(assert (= temp10380_110 (select ARGNAME_stride_NAMEEND_VAL temp10380_109)))
(assert (= temp10380_111 #x0000000000000000))
(assert (= temp10380_112 #x0000000000000000))
(assert (= temp10380_113 temp10380_112))
(assert (= temp10380_114 (select ARGNAME_stride_NAMEEND_VAL temp10380_113)))
(assert (= temp10380_115 #x0000000000000000))
(assert (= temp10380_116 #x0000000000000001))
(assert (= temp10380_117 temp10380_116))
(assert (= temp10380_118 (select ARGNAME_stride_NAMEEND_VAL temp10380_117)))
(assert (= temp10380_119 #x0000000000000000))
(assert (= temp10380_120 #x0000000000000002))
(assert (= temp10380_121 temp10380_120))
(assert (= temp10380_122 (select ARGNAME_stride_NAMEEND_VAL temp10380_121)))
(assert (= temp10380_123 #x0000000000000000))
(assert (= temp10380_124 #x0000000000000003))
(assert (= temp10380_125 temp10380_124))
(assert (= temp10380_126 (select ARGNAME_stride_NAMEEND_VAL temp10380_125)))
(assert (= temp10380_127 #x0000000000000000))
(assert (= temp10380_128 #x0000000000000004))
(assert (= temp10380_129 temp10380_128))
(assert (= temp10380_130 (select ARGNAME_stride_NAMEEND_VAL temp10380_129)))
(assert (= temp10380_131 #x0000000000000000))
(assert (= temp10380_132 #x0000000000000005))
(assert (= temp10380_133 temp10380_132))
(assert (= temp10380_134 (select ARGNAME_stride_NAMEEND_VAL temp10380_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10380_114 temp10380_111)
             (bvsle temp10380_118 temp10380_115)
             (bvsle temp10380_122 temp10380_119)
             (bvsle temp10380_126 temp10380_123)
             (bvsle temp10380_130 temp10380_127)
             (bvsle temp10380_134 temp10380_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10380_135 #x0000000000000000))
(assert (= var1191735 temp10380_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10380_136 #x0000000000000001))
(assert (= var1191747 temp10380_136))
(assert (= temp10380_137 #x0000000000000000))
(assert (= var1179826 temp10380_137))
(assert (= temp10380_138 #x0000000000000000))
(assert (= temp10380_139 temp10380_138))
(assert (= temp10380_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10380_139)))
(assert (= temp10380_141 #x0000000000000001))
(assert (= temp10380_142 temp10380_141))
(assert (= temp10380_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10380_142)))
(assert (= temp10380_144 #x0000000000000002))
(assert (= temp10380_145 temp10380_144))
(assert (= temp10380_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10380_145)))
(assert (= temp10380_147 #x0000000000000003))
(assert (= temp10380_148 temp10380_147))
(assert (= temp10380_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10380_148)))
(assert (= temp10380_150 #x0000000000000004))
(assert (= temp10380_151 temp10380_150))
(assert (= temp10380_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10380_151)))
(assert (= temp10380_153 #x0000000000000005))
(assert (= temp10380_154 temp10380_153))
(assert (= temp10380_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10380_154)))
(assert (= temp10380_157 var1179826))
(assert (= temp10380_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10380_157)))
(assert (= temp10380_156 temp10380_158))
(assert (= var1191780
   (ite (bvslt temp10380_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10380_159 #x0000000000000000))
(assert (= var1191780 temp10380_159))
(assert (= temp10380_160 #x0000000000000000))
(assert (= var1179826 temp10380_160))
(assert (= temp10380_162 var1179826))
(assert (= temp10380_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10380_162)))
(assert (= temp10380_161 temp10380_163))
(assert (= var1191802 (bvsmod temp10380_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10380_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10380_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10380_165 #x0000000000000001))
(assert (= var1191803 temp10380_165))
(assert (= temp10380_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10380_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10380_167 #x0000000000000001))
(assert (= var1191823 temp10380_167))
(assert (= temp10380_168 #x0000000000000001))
(assert (= var1180714 temp10380_168))
(assert (= temp10380_169 #x0000000000000000))
(assert (= temp10380_170 temp10380_169))
(assert (= temp10380_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10380_170)))
(assert (= temp10380_172 #x0000000000000001))
(assert (= temp10380_173 temp10380_172))
(assert (= temp10380_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10380_173)))
(assert (= temp10380_175 #x0000000000000002))
(assert (= temp10380_176 temp10380_175))
(assert (= temp10380_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10380_176)))
(assert (= temp10380_178 #x0000000000000003))
(assert (= temp10380_179 temp10380_178))
(assert (= temp10380_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10380_179)))
(assert (= temp10380_181 #x0000000000000004))
(assert (= temp10380_182 temp10380_181))
(assert (= temp10380_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10380_182)))
(assert (= temp10380_184 #x0000000000000005))
(assert (= temp10380_185 temp10380_184))
(assert (= temp10380_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10380_185)))
(assert (= temp10380_187 #x0000000000000000))
(assert (= temp10380_188
   (ite (bvslt var1180714 temp10380_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10380_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10380_188)))
(assert (= var1191831 temp10380_189))
(assert (bvslt (ite (bvslt var1180714 temp10380_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10380_190 #x0000000000000001))
(assert (= var1180714 temp10380_190))
(assert (= temp10380_192 var1180714))
(assert (= temp10380_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10380_192)))
(assert (= temp10380_191 temp10380_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10380_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10380_194 #x0000000000000001))
(assert (= var1191836 temp10380_194))
(assert (= temp10380_195 #x0000000000000000))
(assert (= var1179826 temp10380_195))
(assert (= temp10380_197 var1179826))
(assert (= temp10380_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10380_197)))
(assert (= temp10380_196 temp10380_198))
(assert (= temp10380_199 #x0000000000000002))
(assert (= var1586025 temp10380_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10380_200 #x0000000000000001))
(assert (= var1191993 temp10380_200))
(assert (= temp10380_201 #x0000000000000001))
(assert (= var2700303 temp10380_201))
(assert (= temp10380_202 #x0000000000000001))
(assert (= var2962447 temp10380_202))
(assert (= temp10380_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10380_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10380_204 #x0000000000000001))
(assert (= var211058 temp10380_204))
(assert (= temp10380_205 #x0000000000000001))
(assert (= var211188 temp10380_205))
(assert (= var3879401 var211188))
(assert (= temp10380_206 #x0000000000000000))
(assert (= var3866802 temp10380_206))
(assert (= temp10380_207 #x0000000000000000))
(assert (= temp10380_208
   (ite (bvslt var3866802 temp10380_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10380_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10380_208)))
(assert (= var3879420 temp10380_209))
(assert (bvslt (ite (bvslt var3866802 temp10380_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10380_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10380_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10380_211 #x0000000000000000))
(assert (= var3879421 temp10380_211))
(assert (= temp10380_212 #x0000000000000001))
(assert (= var3867690 temp10380_212))
(assert (= temp10380_213 #x0000000000000000))
(assert (= temp10380_214
   (ite (bvslt var3867690 temp10380_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10380_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10380_214)))
(assert (= var3879423 temp10380_215))
(assert (bvslt (ite (bvslt var3867690 temp10380_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10380_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10380_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10380_217 #x0000000000000001))
(assert (= var3879424 temp10380_217))
(assert (= temp10380_218 #x0000000000000000))
(assert (= var4079423 temp10380_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10380_219 #x0000000000000002))
(assert (= var4208259 temp10380_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10380_220 #x0000000000000000))
(assert (= var4273820 temp10380_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp10380_221 #x0000000000000001))
(assert (= var211058 temp10380_221))
(assert (= temp10380_222 #x0000000000000000))
(assert (= var5649172 temp10380_222))
(assert (= var5649139 var5649172))
(assert (= var5517703 var5649139))
(assert (= var5517699 var5517703))
(assert (= var212669 var5517699))
(assert (= temp10380_223 #x0000000000000000))
(assert (= var212669 temp10380_223))
(model-add temp10380_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10380_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10380_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10380_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





