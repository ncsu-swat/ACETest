(declare-fun temp10034_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10034_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10034_3 () (_ BitVec 64))
(declare-fun temp10034_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10034_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10034_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10034_7 () (_ BitVec 64))
(declare-fun temp10034_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10034_9 () (_ BitVec 64))
(declare-fun temp10034_10 () (_ BitVec 64))
(declare-fun temp10034_11 () (_ BitVec 64))
(declare-fun temp10034_12 () (_ BitVec 64))
(declare-fun temp10034_13 () (_ BitVec 64))
(declare-fun temp10034_14 () (_ BitVec 64))
(declare-fun temp10034_15 () (_ BitVec 64))
(declare-fun temp10034_16 () (_ BitVec 64))
(declare-fun temp10034_17 () (_ BitVec 64))
(declare-fun temp10034_18 () (_ BitVec 64))
(declare-fun temp10034_19 () (_ BitVec 64))
(declare-fun temp10034_20 () (_ BitVec 64))
(declare-fun temp10034_21 () (_ BitVec 64))
(declare-fun temp10034_22 () (_ BitVec 64))
(declare-fun temp10034_23 () (_ BitVec 64))
(declare-fun temp10034_24 () (_ BitVec 64))
(declare-fun temp10034_25 () (_ BitVec 64))
(declare-fun temp10034_26 () (_ BitVec 64))
(declare-fun temp10034_27 () (_ BitVec 64))
(declare-fun temp10034_28 () (_ BitVec 64))
(declare-fun temp10034_29 () (_ BitVec 64))
(declare-fun temp10034_30 () (_ BitVec 64))
(declare-fun temp10034_31 () (_ BitVec 64))
(declare-fun temp10034_32 () (_ BitVec 64))
(declare-fun temp10034_33 () (_ BitVec 64))
(declare-fun temp10034_34 () (_ BitVec 64))
(declare-fun temp10034_35 () (_ BitVec 64))
(declare-fun temp10034_36 () (_ BitVec 64))
(declare-fun temp10034_37 () (_ BitVec 64))
(declare-fun temp10034_38 () (_ BitVec 64))
(declare-fun temp10034_39 () (_ BitVec 64))
(declare-fun temp10034_40 () (_ BitVec 64))
(declare-fun temp10034_41 () (_ BitVec 64))
(declare-fun temp10034_42 () (_ BitVec 64))
(declare-fun temp10034_43 () (_ BitVec 64))
(declare-fun temp10034_44 () (_ BitVec 64))
(declare-fun temp10034_45 () (_ BitVec 64))
(declare-fun temp10034_46 () (_ BitVec 64))
(declare-fun temp10034_47 () (_ BitVec 64))
(declare-fun temp10034_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10034_49 () (_ BitVec 64))
(declare-fun temp10034_50 () (_ BitVec 64))
(declare-fun temp10034_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10034_52 () (_ BitVec 64))
(declare-fun temp10034_53 () (_ BitVec 64))
(declare-fun temp10034_54 () (_ BitVec 64))
(declare-fun temp10034_55 () (_ BitVec 64))
(declare-fun temp10034_56 () (_ BitVec 64))
(declare-fun temp10034_57 () (_ BitVec 64))
(declare-fun temp10034_58 () (_ BitVec 64))
(declare-fun temp10034_59 () (_ BitVec 64))
(declare-fun temp10034_60 () (_ BitVec 64))
(declare-fun temp10034_61 () (_ BitVec 64))
(declare-fun temp10034_62 () (_ BitVec 64))
(declare-fun temp10034_63 () (_ BitVec 64))
(declare-fun temp10034_64 () (_ BitVec 64))
(declare-fun temp10034_65 () (_ BitVec 64))
(declare-fun temp10034_66 () (_ BitVec 64))
(declare-fun temp10034_67 () (_ BitVec 64))
(declare-fun temp10034_68 () (_ BitVec 64))
(declare-fun temp10034_69 () (_ BitVec 64))
(declare-fun temp10034_70 () (_ BitVec 64))
(declare-fun temp10034_71 () (_ BitVec 64))
(declare-fun temp10034_72 () (_ BitVec 64))
(declare-fun temp10034_73 () (_ BitVec 64))
(declare-fun temp10034_74 () (_ BitVec 64))
(declare-fun temp10034_75 () (_ BitVec 64))
(declare-fun temp10034_76 () (_ BitVec 64))
(declare-fun temp10034_77 () (_ BitVec 64))
(declare-fun temp10034_78 () (_ BitVec 64))
(declare-fun temp10034_79 () (_ BitVec 64))
(declare-fun temp10034_80 () (_ BitVec 64))
(declare-fun temp10034_81 () (_ BitVec 64))
(declare-fun temp10034_82 () (_ BitVec 64))
(declare-fun temp10034_83 () (_ BitVec 64))
(declare-fun temp10034_84 () (_ BitVec 64))
(declare-fun temp10034_85 () (_ BitVec 64))
(declare-fun temp10034_86 () (_ BitVec 64))
(declare-fun temp10034_87 () (_ BitVec 64))
(declare-fun temp10034_88 () (_ BitVec 64))
(declare-fun temp10034_89 () (_ BitVec 64))
(declare-fun temp10034_90 () (_ BitVec 64))
(declare-fun temp10034_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10034_92 () (_ BitVec 64))
(declare-fun temp10034_93 () (_ BitVec 64))
(declare-fun temp10034_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10034_95 () (_ BitVec 64))
(declare-fun temp10034_96 () (_ BitVec 64))
(declare-fun temp10034_97 () (_ BitVec 64))
(declare-fun temp10034_98 () (_ BitVec 64))
(declare-fun temp10034_99 () (_ BitVec 64))
(declare-fun temp10034_100 () (_ BitVec 64))
(declare-fun temp10034_101 () (_ BitVec 64))
(declare-fun temp10034_102 () (_ BitVec 64))
(declare-fun temp10034_103 () (_ BitVec 64))
(declare-fun temp10034_104 () (_ BitVec 64))
(declare-fun temp10034_105 () (_ BitVec 64))
(declare-fun temp10034_106 () (_ BitVec 64))
(declare-fun temp10034_107 () (_ BitVec 64))
(declare-fun temp10034_108 () (_ BitVec 64))
(declare-fun temp10034_109 () (_ BitVec 64))
(declare-fun temp10034_110 () (_ BitVec 64))
(declare-fun temp10034_111 () (_ BitVec 64))
(declare-fun temp10034_112 () (_ BitVec 64))
(declare-fun temp10034_113 () (_ BitVec 64))
(declare-fun temp10034_114 () (_ BitVec 64))
(declare-fun temp10034_115 () (_ BitVec 64))
(declare-fun temp10034_116 () (_ BitVec 64))
(declare-fun temp10034_117 () (_ BitVec 64))
(declare-fun temp10034_118 () (_ BitVec 64))
(declare-fun temp10034_119 () (_ BitVec 64))
(declare-fun temp10034_120 () (_ BitVec 64))
(declare-fun temp10034_121 () (_ BitVec 64))
(declare-fun temp10034_122 () (_ BitVec 64))
(declare-fun temp10034_123 () (_ BitVec 64))
(declare-fun temp10034_124 () (_ BitVec 64))
(declare-fun temp10034_125 () (_ BitVec 64))
(declare-fun temp10034_126 () (_ BitVec 64))
(declare-fun temp10034_127 () (_ BitVec 64))
(declare-fun temp10034_128 () (_ BitVec 64))
(declare-fun temp10034_129 () (_ BitVec 64))
(declare-fun temp10034_130 () (_ BitVec 64))
(declare-fun temp10034_131 () (_ BitVec 64))
(declare-fun temp10034_132 () (_ BitVec 64))
(declare-fun temp10034_133 () (_ BitVec 64))
(declare-fun temp10034_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10034_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10034_136 () (_ BitVec 64))
(declare-fun temp10034_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10034_138 () (_ BitVec 64))
(declare-fun temp10034_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10034_140 () (_ BitVec 64))
(declare-fun temp10034_141 () (_ BitVec 64))
(declare-fun temp10034_142 () (_ BitVec 64))
(declare-fun temp10034_143 () (_ BitVec 64))
(declare-fun temp10034_144 () (_ BitVec 64))
(declare-fun temp10034_145 () (_ BitVec 64))
(declare-fun temp10034_146 () (_ BitVec 64))
(declare-fun temp10034_147 () (_ BitVec 64))
(declare-fun temp10034_148 () (_ BitVec 64))
(declare-fun temp10034_149 () (_ BitVec 64))
(declare-fun temp10034_150 () (_ BitVec 64))
(declare-fun temp10034_151 () (_ BitVec 64))
(declare-fun temp10034_152 () (_ BitVec 64))
(declare-fun temp10034_153 () (_ BitVec 64))
(declare-fun temp10034_154 () (_ BitVec 64))
(declare-fun temp10034_155 () (_ BitVec 64))
(declare-fun temp10034_157 () (_ BitVec 64))
(declare-fun temp10034_158 () (_ BitVec 64))
(declare-fun temp10034_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10034_159 () (_ BitVec 64))
(declare-fun temp10034_160 () (_ BitVec 64))
(declare-fun temp10034_162 () (_ BitVec 64))
(declare-fun temp10034_163 () (_ BitVec 64))
(declare-fun temp10034_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10034_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10034_165 () (_ BitVec 64))
(declare-fun temp10034_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10034_167 () (_ BitVec 64))
(declare-fun temp10034_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10034_169 () (_ BitVec 64))
(declare-fun temp10034_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10034_171 () (_ BitVec 64))
(declare-fun temp10034_172 () (_ BitVec 64))
(declare-fun temp10034_173 () (_ BitVec 64))
(declare-fun temp10034_174 () (_ BitVec 64))
(declare-fun temp10034_175 () (_ BitVec 64))
(declare-fun temp10034_176 () (_ BitVec 64))
(declare-fun temp10034_177 () (_ BitVec 64))
(declare-fun temp10034_178 () (_ BitVec 64))
(declare-fun temp10034_179 () (_ BitVec 64))
(declare-fun temp10034_180 () (_ BitVec 64))
(declare-fun temp10034_181 () (_ BitVec 64))
(declare-fun temp10034_182 () (_ BitVec 64))
(declare-fun temp10034_183 () (_ BitVec 64))
(declare-fun temp10034_184 () (_ BitVec 64))
(declare-fun temp10034_185 () (_ BitVec 64))
(declare-fun temp10034_186 () (_ BitVec 64))
(declare-fun temp10034_187 () (_ BitVec 64))
(declare-fun temp10034_188 () (_ BitVec 64))
(declare-fun temp10034_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10034_190 () (_ BitVec 64))
(declare-fun temp10034_192 () (_ BitVec 64))
(declare-fun temp10034_193 () (_ BitVec 64))
(declare-fun temp10034_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10034_194 () (_ BitVec 64))
(declare-fun temp10034_195 () (_ BitVec 64))
(declare-fun temp10034_197 () (_ BitVec 64))
(declare-fun temp10034_198 () (_ BitVec 64))
(declare-fun temp10034_196 () (_ BitVec 64))
(declare-fun temp10034_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10034_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10034_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10034_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10034_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10034_204 () (_ BitVec 64))
(declare-fun temp10034_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10034_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10034_207 () (_ BitVec 64))
(declare-fun temp10034_208 () (_ BitVec 64))
(declare-fun temp10034_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10034_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10034_211 () (_ BitVec 64))
(declare-fun temp10034_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10034_213 () (_ BitVec 64))
(declare-fun temp10034_214 () (_ BitVec 64))
(declare-fun temp10034_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10034_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10034_217 () (_ BitVec 64))
(declare-fun temp10034_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10034_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10034_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp10034_222 () (_ BitVec 64))
(declare-fun temp10034_221 () (_ BitVec 64))
(declare-fun temp10034_223 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp10034_224 () (_ BitVec 64))
(declare-fun temp10034_225 () (_ BitVec 64))
(declare-fun temp10034_226 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp10034_227 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp10034_228 () (_ BitVec 64))
(declare-fun temp10034_230 () (_ BitVec 64))
(declare-fun temp10034_229 () (_ BitVec 64))
(declare-fun temp10034_231 () (_ BitVec 64))
(assert (= temp10034_1 #x0000000000000001))
(assert (= var77203 temp10034_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10034_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10034_2)))
(assert (= temp10034_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10034_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10034_4 #x0000000000000000))
(assert (= var210941 temp10034_4))
(assert (= temp10034_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10034_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10034_6 #x0000000000000000))
(assert (= var210986 temp10034_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10034_7 #x0000000000000000))
(assert (= temp10034_8 temp10034_7))
(assert (= temp10034_9 (select ARGNAME_padding_NAMEEND_VAL temp10034_8)))
(assert (= temp10034_10 #x0000000000000001))
(assert (= temp10034_11 temp10034_10))
(assert (= temp10034_12 (select ARGNAME_padding_NAMEEND_VAL temp10034_11)))
(assert (= temp10034_13 #x0000000000000002))
(assert (= temp10034_14 temp10034_13))
(assert (= temp10034_15 (select ARGNAME_padding_NAMEEND_VAL temp10034_14)))
(assert (= temp10034_16 #x0000000000000003))
(assert (= temp10034_17 temp10034_16))
(assert (= temp10034_18 (select ARGNAME_padding_NAMEEND_VAL temp10034_17)))
(assert (= temp10034_19 #x0000000000000004))
(assert (= temp10034_20 temp10034_19))
(assert (= temp10034_21 (select ARGNAME_padding_NAMEEND_VAL temp10034_20)))
(assert (= temp10034_22 #x0000000000000005))
(assert (= temp10034_23 temp10034_22))
(assert (= temp10034_24 (select ARGNAME_padding_NAMEEND_VAL temp10034_23)))
(assert (= temp10034_25 #x0000000000000000))
(assert (= temp10034_26 #x0000000000000000))
(assert (= temp10034_27 temp10034_26))
(assert (= temp10034_28 (select ARGNAME_padding_NAMEEND_VAL temp10034_27)))
(assert (= temp10034_29 #x0000000000000000))
(assert (= temp10034_30 #x0000000000000001))
(assert (= temp10034_31 temp10034_30))
(assert (= temp10034_32 (select ARGNAME_padding_NAMEEND_VAL temp10034_31)))
(assert (= temp10034_33 #x0000000000000000))
(assert (= temp10034_34 #x0000000000000002))
(assert (= temp10034_35 temp10034_34))
(assert (= temp10034_36 (select ARGNAME_padding_NAMEEND_VAL temp10034_35)))
(assert (= temp10034_37 #x0000000000000000))
(assert (= temp10034_38 #x0000000000000003))
(assert (= temp10034_39 temp10034_38))
(assert (= temp10034_40 (select ARGNAME_padding_NAMEEND_VAL temp10034_39)))
(assert (= temp10034_41 #x0000000000000000))
(assert (= temp10034_42 #x0000000000000004))
(assert (= temp10034_43 temp10034_42))
(assert (= temp10034_44 (select ARGNAME_padding_NAMEEND_VAL temp10034_43)))
(assert (= temp10034_45 #x0000000000000000))
(assert (= temp10034_46 #x0000000000000005))
(assert (= temp10034_47 temp10034_46))
(assert (= temp10034_48 (select ARGNAME_padding_NAMEEND_VAL temp10034_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10034_28 temp10034_25)
             (bvslt temp10034_32 temp10034_29)
             (bvslt temp10034_36 temp10034_33)
             (bvslt temp10034_40 temp10034_37)
             (bvslt temp10034_44 temp10034_41)
             (bvslt temp10034_48 temp10034_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10034_49 #x0000000000000000))
(assert (= var1191714 temp10034_49))
(assert (= temp10034_50 #x0000000000000000))
(assert (= temp10034_51 temp10034_50))
(assert (= temp10034_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10034_51)))
(assert (= temp10034_53 #x0000000000000001))
(assert (= temp10034_54 temp10034_53))
(assert (= temp10034_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10034_54)))
(assert (= temp10034_56 #x0000000000000002))
(assert (= temp10034_57 temp10034_56))
(assert (= temp10034_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10034_57)))
(assert (= temp10034_59 #x0000000000000003))
(assert (= temp10034_60 temp10034_59))
(assert (= temp10034_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10034_60)))
(assert (= temp10034_62 #x0000000000000004))
(assert (= temp10034_63 temp10034_62))
(assert (= temp10034_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10034_63)))
(assert (= temp10034_65 #x0000000000000005))
(assert (= temp10034_66 temp10034_65))
(assert (= temp10034_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10034_66)))
(assert (= temp10034_68 #x0000000000000000))
(assert (= temp10034_69 #x0000000000000000))
(assert (= temp10034_70 temp10034_69))
(assert (= temp10034_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10034_70)))
(assert (= temp10034_72 #x0000000000000000))
(assert (= temp10034_73 #x0000000000000001))
(assert (= temp10034_74 temp10034_73))
(assert (= temp10034_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10034_74)))
(assert (= temp10034_76 #x0000000000000000))
(assert (= temp10034_77 #x0000000000000002))
(assert (= temp10034_78 temp10034_77))
(assert (= temp10034_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10034_78)))
(assert (= temp10034_80 #x0000000000000000))
(assert (= temp10034_81 #x0000000000000003))
(assert (= temp10034_82 temp10034_81))
(assert (= temp10034_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10034_82)))
(assert (= temp10034_84 #x0000000000000000))
(assert (= temp10034_85 #x0000000000000004))
(assert (= temp10034_86 temp10034_85))
(assert (= temp10034_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10034_86)))
(assert (= temp10034_88 #x0000000000000000))
(assert (= temp10034_89 #x0000000000000005))
(assert (= temp10034_90 temp10034_89))
(assert (= temp10034_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10034_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10034_71 temp10034_68)
             (bvslt temp10034_75 temp10034_72)
             (bvslt temp10034_79 temp10034_76)
             (bvslt temp10034_83 temp10034_80)
             (bvslt temp10034_87 temp10034_84)
             (bvslt temp10034_91 temp10034_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10034_92 #x0000000000000000))
(assert (= var1191725 temp10034_92))
(assert (= temp10034_93 #x0000000000000000))
(assert (= temp10034_94 temp10034_93))
(assert (= temp10034_95 (select ARGNAME_stride_NAMEEND_VAL temp10034_94)))
(assert (= temp10034_96 #x0000000000000001))
(assert (= temp10034_97 temp10034_96))
(assert (= temp10034_98 (select ARGNAME_stride_NAMEEND_VAL temp10034_97)))
(assert (= temp10034_99 #x0000000000000002))
(assert (= temp10034_100 temp10034_99))
(assert (= temp10034_101 (select ARGNAME_stride_NAMEEND_VAL temp10034_100)))
(assert (= temp10034_102 #x0000000000000003))
(assert (= temp10034_103 temp10034_102))
(assert (= temp10034_104 (select ARGNAME_stride_NAMEEND_VAL temp10034_103)))
(assert (= temp10034_105 #x0000000000000004))
(assert (= temp10034_106 temp10034_105))
(assert (= temp10034_107 (select ARGNAME_stride_NAMEEND_VAL temp10034_106)))
(assert (= temp10034_108 #x0000000000000005))
(assert (= temp10034_109 temp10034_108))
(assert (= temp10034_110 (select ARGNAME_stride_NAMEEND_VAL temp10034_109)))
(assert (= temp10034_111 #x0000000000000000))
(assert (= temp10034_112 #x0000000000000000))
(assert (= temp10034_113 temp10034_112))
(assert (= temp10034_114 (select ARGNAME_stride_NAMEEND_VAL temp10034_113)))
(assert (= temp10034_115 #x0000000000000000))
(assert (= temp10034_116 #x0000000000000001))
(assert (= temp10034_117 temp10034_116))
(assert (= temp10034_118 (select ARGNAME_stride_NAMEEND_VAL temp10034_117)))
(assert (= temp10034_119 #x0000000000000000))
(assert (= temp10034_120 #x0000000000000002))
(assert (= temp10034_121 temp10034_120))
(assert (= temp10034_122 (select ARGNAME_stride_NAMEEND_VAL temp10034_121)))
(assert (= temp10034_123 #x0000000000000000))
(assert (= temp10034_124 #x0000000000000003))
(assert (= temp10034_125 temp10034_124))
(assert (= temp10034_126 (select ARGNAME_stride_NAMEEND_VAL temp10034_125)))
(assert (= temp10034_127 #x0000000000000000))
(assert (= temp10034_128 #x0000000000000004))
(assert (= temp10034_129 temp10034_128))
(assert (= temp10034_130 (select ARGNAME_stride_NAMEEND_VAL temp10034_129)))
(assert (= temp10034_131 #x0000000000000000))
(assert (= temp10034_132 #x0000000000000005))
(assert (= temp10034_133 temp10034_132))
(assert (= temp10034_134 (select ARGNAME_stride_NAMEEND_VAL temp10034_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10034_114 temp10034_111)
             (bvsle temp10034_118 temp10034_115)
             (bvsle temp10034_122 temp10034_119)
             (bvsle temp10034_126 temp10034_123)
             (bvsle temp10034_130 temp10034_127)
             (bvsle temp10034_134 temp10034_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10034_135 #x0000000000000000))
(assert (= var1191735 temp10034_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10034_136 #x0000000000000001))
(assert (= var1191747 temp10034_136))
(assert (= temp10034_137 #x0000000000000000))
(assert (= var1179826 temp10034_137))
(assert (= temp10034_138 #x0000000000000000))
(assert (= temp10034_139 temp10034_138))
(assert (= temp10034_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10034_139)))
(assert (= temp10034_141 #x0000000000000001))
(assert (= temp10034_142 temp10034_141))
(assert (= temp10034_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10034_142)))
(assert (= temp10034_144 #x0000000000000002))
(assert (= temp10034_145 temp10034_144))
(assert (= temp10034_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10034_145)))
(assert (= temp10034_147 #x0000000000000003))
(assert (= temp10034_148 temp10034_147))
(assert (= temp10034_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10034_148)))
(assert (= temp10034_150 #x0000000000000004))
(assert (= temp10034_151 temp10034_150))
(assert (= temp10034_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10034_151)))
(assert (= temp10034_153 #x0000000000000005))
(assert (= temp10034_154 temp10034_153))
(assert (= temp10034_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10034_154)))
(assert (= temp10034_157 var1179826))
(assert (= temp10034_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10034_157)))
(assert (= temp10034_156 temp10034_158))
(assert (= var1191780
   (ite (bvslt temp10034_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10034_159 #x0000000000000000))
(assert (= var1191780 temp10034_159))
(assert (= temp10034_160 #x0000000000000000))
(assert (= var1179826 temp10034_160))
(assert (= temp10034_162 var1179826))
(assert (= temp10034_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10034_162)))
(assert (= temp10034_161 temp10034_163))
(assert (= var1191802 (bvsmod temp10034_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10034_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10034_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10034_165 #x0000000000000001))
(assert (= var1191803 temp10034_165))
(assert (= temp10034_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10034_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10034_167 #x0000000000000001))
(assert (= var1191823 temp10034_167))
(assert (= temp10034_168 #x0000000000000001))
(assert (= var1180714 temp10034_168))
(assert (= temp10034_169 #x0000000000000000))
(assert (= temp10034_170 temp10034_169))
(assert (= temp10034_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10034_170)))
(assert (= temp10034_172 #x0000000000000001))
(assert (= temp10034_173 temp10034_172))
(assert (= temp10034_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10034_173)))
(assert (= temp10034_175 #x0000000000000002))
(assert (= temp10034_176 temp10034_175))
(assert (= temp10034_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10034_176)))
(assert (= temp10034_178 #x0000000000000003))
(assert (= temp10034_179 temp10034_178))
(assert (= temp10034_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10034_179)))
(assert (= temp10034_181 #x0000000000000004))
(assert (= temp10034_182 temp10034_181))
(assert (= temp10034_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10034_182)))
(assert (= temp10034_184 #x0000000000000005))
(assert (= temp10034_185 temp10034_184))
(assert (= temp10034_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10034_185)))
(assert (= temp10034_187 #x0000000000000000))
(assert (= temp10034_188
   (ite (bvslt var1180714 temp10034_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10034_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10034_188)))
(assert (= var1191831 temp10034_189))
(assert (bvslt (ite (bvslt var1180714 temp10034_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10034_190 #x0000000000000001))
(assert (= var1180714 temp10034_190))
(assert (= temp10034_192 var1180714))
(assert (= temp10034_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10034_192)))
(assert (= temp10034_191 temp10034_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10034_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10034_194 #x0000000000000001))
(assert (= var1191836 temp10034_194))
(assert (= temp10034_195 #x0000000000000000))
(assert (= var1179826 temp10034_195))
(assert (= temp10034_197 var1179826))
(assert (= temp10034_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10034_197)))
(assert (= temp10034_196 temp10034_198))
(assert (= temp10034_199 #x0000000000000002))
(assert (= var1586025 temp10034_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10034_200 #x0000000000000001))
(assert (= var1191993 temp10034_200))
(assert (= temp10034_201 #x0000000000000001))
(assert (= var2700303 temp10034_201))
(assert (= temp10034_202 #x0000000000000001))
(assert (= var2962447 temp10034_202))
(assert (= temp10034_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10034_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10034_204 #x0000000000000001))
(assert (= var211058 temp10034_204))
(assert (= temp10034_205 #x0000000000000001))
(assert (= var211188 temp10034_205))
(assert (= var3879401 var211188))
(assert (= temp10034_206 #x0000000000000000))
(assert (= var3866802 temp10034_206))
(assert (= temp10034_207 #x0000000000000000))
(assert (= temp10034_208
   (ite (bvslt var3866802 temp10034_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10034_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10034_208)))
(assert (= var3879420 temp10034_209))
(assert (bvslt (ite (bvslt var3866802 temp10034_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10034_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10034_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10034_211 #x0000000000000000))
(assert (= var3879421 temp10034_211))
(assert (= temp10034_212 #x0000000000000001))
(assert (= var3867690 temp10034_212))
(assert (= temp10034_213 #x0000000000000000))
(assert (= temp10034_214
   (ite (bvslt var3867690 temp10034_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10034_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10034_214)))
(assert (= var3879423 temp10034_215))
(assert (bvslt (ite (bvslt var3867690 temp10034_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10034_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10034_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10034_217 #x0000000000000001))
(assert (= var3879424 temp10034_217))
(assert (= temp10034_218 #x0000000000000000))
(assert (= var4079423 temp10034_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10034_219 #x0000000000000002))
(assert (= var4208259 temp10034_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10034_220 #x0000000000000000))
(assert (= var4273820 temp10034_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp10034_222 #xffffffffffffffff))
(assert (= temp10034_221 temp10034_222))
(assert (= temp10034_223 #x0000000000000001))
(assert (= var197674 temp10034_223))
(assert (= temp10034_224 #x0000000000000000))
(assert (= temp10034_225
   (ite (bvslt var197674 temp10034_224)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp10034_226 (select ARGNAME_input_NAMEEND_DIMSIZE temp10034_225)))
(assert (= var211595 temp10034_226))
(assert (bvslt (ite (bvslt var197674 temp10034_224)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10034_227 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp10034_227) #x0000000000000001 #x0000000000000000)))
(assert (= temp10034_228 #x0000000000000001))
(assert (= var211596 temp10034_228))
(assert (= temp10034_230 #xffffffffffffffff))
(assert (= temp10034_229 temp10034_230))
(assert (= temp10034_231 #x0000000000000001))
(assert (= var211058 temp10034_231))
(model-add temp10034_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10034_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10034_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10034_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




