(declare-fun temp10742_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10742_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10742_3 () (_ BitVec 64))
(declare-fun temp10742_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10742_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10742_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10742_7 () (_ BitVec 64))
(declare-fun temp10742_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10742_9 () (_ BitVec 64))
(declare-fun temp10742_10 () (_ BitVec 64))
(declare-fun temp10742_11 () (_ BitVec 64))
(declare-fun temp10742_12 () (_ BitVec 64))
(declare-fun temp10742_13 () (_ BitVec 64))
(declare-fun temp10742_14 () (_ BitVec 64))
(declare-fun temp10742_15 () (_ BitVec 64))
(declare-fun temp10742_16 () (_ BitVec 64))
(declare-fun temp10742_17 () (_ BitVec 64))
(declare-fun temp10742_18 () (_ BitVec 64))
(declare-fun temp10742_19 () (_ BitVec 64))
(declare-fun temp10742_20 () (_ BitVec 64))
(declare-fun temp10742_21 () (_ BitVec 64))
(declare-fun temp10742_22 () (_ BitVec 64))
(declare-fun temp10742_23 () (_ BitVec 64))
(declare-fun temp10742_24 () (_ BitVec 64))
(declare-fun temp10742_25 () (_ BitVec 64))
(declare-fun temp10742_26 () (_ BitVec 64))
(declare-fun temp10742_27 () (_ BitVec 64))
(declare-fun temp10742_28 () (_ BitVec 64))
(declare-fun temp10742_29 () (_ BitVec 64))
(declare-fun temp10742_30 () (_ BitVec 64))
(declare-fun temp10742_31 () (_ BitVec 64))
(declare-fun temp10742_32 () (_ BitVec 64))
(declare-fun temp10742_33 () (_ BitVec 64))
(declare-fun temp10742_34 () (_ BitVec 64))
(declare-fun temp10742_35 () (_ BitVec 64))
(declare-fun temp10742_36 () (_ BitVec 64))
(declare-fun temp10742_37 () (_ BitVec 64))
(declare-fun temp10742_38 () (_ BitVec 64))
(declare-fun temp10742_39 () (_ BitVec 64))
(declare-fun temp10742_40 () (_ BitVec 64))
(declare-fun temp10742_41 () (_ BitVec 64))
(declare-fun temp10742_42 () (_ BitVec 64))
(declare-fun temp10742_43 () (_ BitVec 64))
(declare-fun temp10742_44 () (_ BitVec 64))
(declare-fun temp10742_45 () (_ BitVec 64))
(declare-fun temp10742_46 () (_ BitVec 64))
(declare-fun temp10742_47 () (_ BitVec 64))
(declare-fun temp10742_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10742_49 () (_ BitVec 64))
(declare-fun temp10742_50 () (_ BitVec 64))
(declare-fun temp10742_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10742_52 () (_ BitVec 64))
(declare-fun temp10742_53 () (_ BitVec 64))
(declare-fun temp10742_54 () (_ BitVec 64))
(declare-fun temp10742_55 () (_ BitVec 64))
(declare-fun temp10742_56 () (_ BitVec 64))
(declare-fun temp10742_57 () (_ BitVec 64))
(declare-fun temp10742_58 () (_ BitVec 64))
(declare-fun temp10742_59 () (_ BitVec 64))
(declare-fun temp10742_60 () (_ BitVec 64))
(declare-fun temp10742_61 () (_ BitVec 64))
(declare-fun temp10742_62 () (_ BitVec 64))
(declare-fun temp10742_63 () (_ BitVec 64))
(declare-fun temp10742_64 () (_ BitVec 64))
(declare-fun temp10742_65 () (_ BitVec 64))
(declare-fun temp10742_66 () (_ BitVec 64))
(declare-fun temp10742_67 () (_ BitVec 64))
(declare-fun temp10742_68 () (_ BitVec 64))
(declare-fun temp10742_69 () (_ BitVec 64))
(declare-fun temp10742_70 () (_ BitVec 64))
(declare-fun temp10742_71 () (_ BitVec 64))
(declare-fun temp10742_72 () (_ BitVec 64))
(declare-fun temp10742_73 () (_ BitVec 64))
(declare-fun temp10742_74 () (_ BitVec 64))
(declare-fun temp10742_75 () (_ BitVec 64))
(declare-fun temp10742_76 () (_ BitVec 64))
(declare-fun temp10742_77 () (_ BitVec 64))
(declare-fun temp10742_78 () (_ BitVec 64))
(declare-fun temp10742_79 () (_ BitVec 64))
(declare-fun temp10742_80 () (_ BitVec 64))
(declare-fun temp10742_81 () (_ BitVec 64))
(declare-fun temp10742_82 () (_ BitVec 64))
(declare-fun temp10742_83 () (_ BitVec 64))
(declare-fun temp10742_84 () (_ BitVec 64))
(declare-fun temp10742_85 () (_ BitVec 64))
(declare-fun temp10742_86 () (_ BitVec 64))
(declare-fun temp10742_87 () (_ BitVec 64))
(declare-fun temp10742_88 () (_ BitVec 64))
(declare-fun temp10742_89 () (_ BitVec 64))
(declare-fun temp10742_90 () (_ BitVec 64))
(declare-fun temp10742_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10742_92 () (_ BitVec 64))
(declare-fun temp10742_93 () (_ BitVec 64))
(declare-fun temp10742_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10742_95 () (_ BitVec 64))
(declare-fun temp10742_96 () (_ BitVec 64))
(declare-fun temp10742_97 () (_ BitVec 64))
(declare-fun temp10742_98 () (_ BitVec 64))
(declare-fun temp10742_99 () (_ BitVec 64))
(declare-fun temp10742_100 () (_ BitVec 64))
(declare-fun temp10742_101 () (_ BitVec 64))
(declare-fun temp10742_102 () (_ BitVec 64))
(declare-fun temp10742_103 () (_ BitVec 64))
(declare-fun temp10742_104 () (_ BitVec 64))
(declare-fun temp10742_105 () (_ BitVec 64))
(declare-fun temp10742_106 () (_ BitVec 64))
(declare-fun temp10742_107 () (_ BitVec 64))
(declare-fun temp10742_108 () (_ BitVec 64))
(declare-fun temp10742_109 () (_ BitVec 64))
(declare-fun temp10742_110 () (_ BitVec 64))
(declare-fun temp10742_111 () (_ BitVec 64))
(declare-fun temp10742_112 () (_ BitVec 64))
(declare-fun temp10742_113 () (_ BitVec 64))
(declare-fun temp10742_114 () (_ BitVec 64))
(declare-fun temp10742_115 () (_ BitVec 64))
(declare-fun temp10742_116 () (_ BitVec 64))
(declare-fun temp10742_117 () (_ BitVec 64))
(declare-fun temp10742_118 () (_ BitVec 64))
(declare-fun temp10742_119 () (_ BitVec 64))
(declare-fun temp10742_120 () (_ BitVec 64))
(declare-fun temp10742_121 () (_ BitVec 64))
(declare-fun temp10742_122 () (_ BitVec 64))
(declare-fun temp10742_123 () (_ BitVec 64))
(declare-fun temp10742_124 () (_ BitVec 64))
(declare-fun temp10742_125 () (_ BitVec 64))
(declare-fun temp10742_126 () (_ BitVec 64))
(declare-fun temp10742_127 () (_ BitVec 64))
(declare-fun temp10742_128 () (_ BitVec 64))
(declare-fun temp10742_129 () (_ BitVec 64))
(declare-fun temp10742_130 () (_ BitVec 64))
(declare-fun temp10742_131 () (_ BitVec 64))
(declare-fun temp10742_132 () (_ BitVec 64))
(declare-fun temp10742_133 () (_ BitVec 64))
(declare-fun temp10742_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10742_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10742_136 () (_ BitVec 64))
(declare-fun temp10742_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10742_138 () (_ BitVec 64))
(declare-fun temp10742_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10742_140 () (_ BitVec 64))
(declare-fun temp10742_141 () (_ BitVec 64))
(declare-fun temp10742_142 () (_ BitVec 64))
(declare-fun temp10742_143 () (_ BitVec 64))
(declare-fun temp10742_144 () (_ BitVec 64))
(declare-fun temp10742_145 () (_ BitVec 64))
(declare-fun temp10742_146 () (_ BitVec 64))
(declare-fun temp10742_147 () (_ BitVec 64))
(declare-fun temp10742_148 () (_ BitVec 64))
(declare-fun temp10742_149 () (_ BitVec 64))
(declare-fun temp10742_150 () (_ BitVec 64))
(declare-fun temp10742_151 () (_ BitVec 64))
(declare-fun temp10742_152 () (_ BitVec 64))
(declare-fun temp10742_153 () (_ BitVec 64))
(declare-fun temp10742_154 () (_ BitVec 64))
(declare-fun temp10742_155 () (_ BitVec 64))
(declare-fun temp10742_157 () (_ BitVec 64))
(declare-fun temp10742_158 () (_ BitVec 64))
(declare-fun temp10742_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10742_159 () (_ BitVec 64))
(declare-fun temp10742_160 () (_ BitVec 64))
(declare-fun temp10742_162 () (_ BitVec 64))
(declare-fun temp10742_163 () (_ BitVec 64))
(declare-fun temp10742_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10742_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10742_165 () (_ BitVec 64))
(declare-fun temp10742_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10742_167 () (_ BitVec 64))
(declare-fun temp10742_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10742_169 () (_ BitVec 64))
(declare-fun temp10742_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10742_171 () (_ BitVec 64))
(declare-fun temp10742_172 () (_ BitVec 64))
(declare-fun temp10742_173 () (_ BitVec 64))
(declare-fun temp10742_174 () (_ BitVec 64))
(declare-fun temp10742_175 () (_ BitVec 64))
(declare-fun temp10742_176 () (_ BitVec 64))
(declare-fun temp10742_177 () (_ BitVec 64))
(declare-fun temp10742_178 () (_ BitVec 64))
(declare-fun temp10742_179 () (_ BitVec 64))
(declare-fun temp10742_180 () (_ BitVec 64))
(declare-fun temp10742_181 () (_ BitVec 64))
(declare-fun temp10742_182 () (_ BitVec 64))
(declare-fun temp10742_183 () (_ BitVec 64))
(declare-fun temp10742_184 () (_ BitVec 64))
(declare-fun temp10742_185 () (_ BitVec 64))
(declare-fun temp10742_186 () (_ BitVec 64))
(declare-fun temp10742_187 () (_ BitVec 64))
(declare-fun temp10742_188 () (_ BitVec 64))
(declare-fun temp10742_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10742_190 () (_ BitVec 64))
(declare-fun temp10742_192 () (_ BitVec 64))
(declare-fun temp10742_193 () (_ BitVec 64))
(declare-fun temp10742_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10742_194 () (_ BitVec 64))
(declare-fun temp10742_195 () (_ BitVec 64))
(declare-fun temp10742_197 () (_ BitVec 64))
(declare-fun temp10742_198 () (_ BitVec 64))
(declare-fun temp10742_196 () (_ BitVec 64))
(declare-fun temp10742_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10742_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10742_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10742_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10742_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10742_204 () (_ BitVec 64))
(declare-fun temp10742_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10742_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10742_207 () (_ BitVec 64))
(declare-fun temp10742_208 () (_ BitVec 64))
(declare-fun temp10742_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10742_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10742_211 () (_ BitVec 64))
(declare-fun temp10742_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10742_213 () (_ BitVec 64))
(declare-fun temp10742_214 () (_ BitVec 64))
(declare-fun temp10742_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10742_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10742_217 () (_ BitVec 64))
(declare-fun temp10742_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10742_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10742_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var4927888 () (_ BitVec 64))
(declare-fun var211820 () (_ BitVec 64))
(declare-fun temp10742_221 () (_ BitVec 64))
(declare-fun var211821 () (_ BitVec 64))
(declare-fun temp10742_222 () (_ BitVec 64))
(assert (= temp10742_1 #x0000000000000001))
(assert (= var77203 temp10742_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10742_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10742_2)))
(assert (= temp10742_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10742_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10742_4 #x0000000000000000))
(assert (= var210941 temp10742_4))
(assert (= temp10742_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10742_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10742_6 #x0000000000000000))
(assert (= var210986 temp10742_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10742_7 #x0000000000000000))
(assert (= temp10742_8 temp10742_7))
(assert (= temp10742_9 (select ARGNAME_padding_NAMEEND_VAL temp10742_8)))
(assert (= temp10742_10 #x0000000000000001))
(assert (= temp10742_11 temp10742_10))
(assert (= temp10742_12 (select ARGNAME_padding_NAMEEND_VAL temp10742_11)))
(assert (= temp10742_13 #x0000000000000002))
(assert (= temp10742_14 temp10742_13))
(assert (= temp10742_15 (select ARGNAME_padding_NAMEEND_VAL temp10742_14)))
(assert (= temp10742_16 #x0000000000000003))
(assert (= temp10742_17 temp10742_16))
(assert (= temp10742_18 (select ARGNAME_padding_NAMEEND_VAL temp10742_17)))
(assert (= temp10742_19 #x0000000000000004))
(assert (= temp10742_20 temp10742_19))
(assert (= temp10742_21 (select ARGNAME_padding_NAMEEND_VAL temp10742_20)))
(assert (= temp10742_22 #x0000000000000005))
(assert (= temp10742_23 temp10742_22))
(assert (= temp10742_24 (select ARGNAME_padding_NAMEEND_VAL temp10742_23)))
(assert (= temp10742_25 #x0000000000000000))
(assert (= temp10742_26 #x0000000000000000))
(assert (= temp10742_27 temp10742_26))
(assert (= temp10742_28 (select ARGNAME_padding_NAMEEND_VAL temp10742_27)))
(assert (= temp10742_29 #x0000000000000000))
(assert (= temp10742_30 #x0000000000000001))
(assert (= temp10742_31 temp10742_30))
(assert (= temp10742_32 (select ARGNAME_padding_NAMEEND_VAL temp10742_31)))
(assert (= temp10742_33 #x0000000000000000))
(assert (= temp10742_34 #x0000000000000002))
(assert (= temp10742_35 temp10742_34))
(assert (= temp10742_36 (select ARGNAME_padding_NAMEEND_VAL temp10742_35)))
(assert (= temp10742_37 #x0000000000000000))
(assert (= temp10742_38 #x0000000000000003))
(assert (= temp10742_39 temp10742_38))
(assert (= temp10742_40 (select ARGNAME_padding_NAMEEND_VAL temp10742_39)))
(assert (= temp10742_41 #x0000000000000000))
(assert (= temp10742_42 #x0000000000000004))
(assert (= temp10742_43 temp10742_42))
(assert (= temp10742_44 (select ARGNAME_padding_NAMEEND_VAL temp10742_43)))
(assert (= temp10742_45 #x0000000000000000))
(assert (= temp10742_46 #x0000000000000005))
(assert (= temp10742_47 temp10742_46))
(assert (= temp10742_48 (select ARGNAME_padding_NAMEEND_VAL temp10742_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10742_28 temp10742_25)
             (bvslt temp10742_32 temp10742_29)
             (bvslt temp10742_36 temp10742_33)
             (bvslt temp10742_40 temp10742_37)
             (bvslt temp10742_44 temp10742_41)
             (bvslt temp10742_48 temp10742_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10742_49 #x0000000000000000))
(assert (= var1191714 temp10742_49))
(assert (= temp10742_50 #x0000000000000000))
(assert (= temp10742_51 temp10742_50))
(assert (= temp10742_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10742_51)))
(assert (= temp10742_53 #x0000000000000001))
(assert (= temp10742_54 temp10742_53))
(assert (= temp10742_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10742_54)))
(assert (= temp10742_56 #x0000000000000002))
(assert (= temp10742_57 temp10742_56))
(assert (= temp10742_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10742_57)))
(assert (= temp10742_59 #x0000000000000003))
(assert (= temp10742_60 temp10742_59))
(assert (= temp10742_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10742_60)))
(assert (= temp10742_62 #x0000000000000004))
(assert (= temp10742_63 temp10742_62))
(assert (= temp10742_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10742_63)))
(assert (= temp10742_65 #x0000000000000005))
(assert (= temp10742_66 temp10742_65))
(assert (= temp10742_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10742_66)))
(assert (= temp10742_68 #x0000000000000000))
(assert (= temp10742_69 #x0000000000000000))
(assert (= temp10742_70 temp10742_69))
(assert (= temp10742_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10742_70)))
(assert (= temp10742_72 #x0000000000000000))
(assert (= temp10742_73 #x0000000000000001))
(assert (= temp10742_74 temp10742_73))
(assert (= temp10742_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10742_74)))
(assert (= temp10742_76 #x0000000000000000))
(assert (= temp10742_77 #x0000000000000002))
(assert (= temp10742_78 temp10742_77))
(assert (= temp10742_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10742_78)))
(assert (= temp10742_80 #x0000000000000000))
(assert (= temp10742_81 #x0000000000000003))
(assert (= temp10742_82 temp10742_81))
(assert (= temp10742_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10742_82)))
(assert (= temp10742_84 #x0000000000000000))
(assert (= temp10742_85 #x0000000000000004))
(assert (= temp10742_86 temp10742_85))
(assert (= temp10742_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10742_86)))
(assert (= temp10742_88 #x0000000000000000))
(assert (= temp10742_89 #x0000000000000005))
(assert (= temp10742_90 temp10742_89))
(assert (= temp10742_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10742_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10742_71 temp10742_68)
             (bvslt temp10742_75 temp10742_72)
             (bvslt temp10742_79 temp10742_76)
             (bvslt temp10742_83 temp10742_80)
             (bvslt temp10742_87 temp10742_84)
             (bvslt temp10742_91 temp10742_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10742_92 #x0000000000000000))
(assert (= var1191725 temp10742_92))
(assert (= temp10742_93 #x0000000000000000))
(assert (= temp10742_94 temp10742_93))
(assert (= temp10742_95 (select ARGNAME_stride_NAMEEND_VAL temp10742_94)))
(assert (= temp10742_96 #x0000000000000001))
(assert (= temp10742_97 temp10742_96))
(assert (= temp10742_98 (select ARGNAME_stride_NAMEEND_VAL temp10742_97)))
(assert (= temp10742_99 #x0000000000000002))
(assert (= temp10742_100 temp10742_99))
(assert (= temp10742_101 (select ARGNAME_stride_NAMEEND_VAL temp10742_100)))
(assert (= temp10742_102 #x0000000000000003))
(assert (= temp10742_103 temp10742_102))
(assert (= temp10742_104 (select ARGNAME_stride_NAMEEND_VAL temp10742_103)))
(assert (= temp10742_105 #x0000000000000004))
(assert (= temp10742_106 temp10742_105))
(assert (= temp10742_107 (select ARGNAME_stride_NAMEEND_VAL temp10742_106)))
(assert (= temp10742_108 #x0000000000000005))
(assert (= temp10742_109 temp10742_108))
(assert (= temp10742_110 (select ARGNAME_stride_NAMEEND_VAL temp10742_109)))
(assert (= temp10742_111 #x0000000000000000))
(assert (= temp10742_112 #x0000000000000000))
(assert (= temp10742_113 temp10742_112))
(assert (= temp10742_114 (select ARGNAME_stride_NAMEEND_VAL temp10742_113)))
(assert (= temp10742_115 #x0000000000000000))
(assert (= temp10742_116 #x0000000000000001))
(assert (= temp10742_117 temp10742_116))
(assert (= temp10742_118 (select ARGNAME_stride_NAMEEND_VAL temp10742_117)))
(assert (= temp10742_119 #x0000000000000000))
(assert (= temp10742_120 #x0000000000000002))
(assert (= temp10742_121 temp10742_120))
(assert (= temp10742_122 (select ARGNAME_stride_NAMEEND_VAL temp10742_121)))
(assert (= temp10742_123 #x0000000000000000))
(assert (= temp10742_124 #x0000000000000003))
(assert (= temp10742_125 temp10742_124))
(assert (= temp10742_126 (select ARGNAME_stride_NAMEEND_VAL temp10742_125)))
(assert (= temp10742_127 #x0000000000000000))
(assert (= temp10742_128 #x0000000000000004))
(assert (= temp10742_129 temp10742_128))
(assert (= temp10742_130 (select ARGNAME_stride_NAMEEND_VAL temp10742_129)))
(assert (= temp10742_131 #x0000000000000000))
(assert (= temp10742_132 #x0000000000000005))
(assert (= temp10742_133 temp10742_132))
(assert (= temp10742_134 (select ARGNAME_stride_NAMEEND_VAL temp10742_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10742_114 temp10742_111)
             (bvsle temp10742_118 temp10742_115)
             (bvsle temp10742_122 temp10742_119)
             (bvsle temp10742_126 temp10742_123)
             (bvsle temp10742_130 temp10742_127)
             (bvsle temp10742_134 temp10742_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10742_135 #x0000000000000000))
(assert (= var1191735 temp10742_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10742_136 #x0000000000000001))
(assert (= var1191747 temp10742_136))
(assert (= temp10742_137 #x0000000000000000))
(assert (= var1179826 temp10742_137))
(assert (= temp10742_138 #x0000000000000000))
(assert (= temp10742_139 temp10742_138))
(assert (= temp10742_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10742_139)))
(assert (= temp10742_141 #x0000000000000001))
(assert (= temp10742_142 temp10742_141))
(assert (= temp10742_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10742_142)))
(assert (= temp10742_144 #x0000000000000002))
(assert (= temp10742_145 temp10742_144))
(assert (= temp10742_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10742_145)))
(assert (= temp10742_147 #x0000000000000003))
(assert (= temp10742_148 temp10742_147))
(assert (= temp10742_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10742_148)))
(assert (= temp10742_150 #x0000000000000004))
(assert (= temp10742_151 temp10742_150))
(assert (= temp10742_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10742_151)))
(assert (= temp10742_153 #x0000000000000005))
(assert (= temp10742_154 temp10742_153))
(assert (= temp10742_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10742_154)))
(assert (= temp10742_157 var1179826))
(assert (= temp10742_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10742_157)))
(assert (= temp10742_156 temp10742_158))
(assert (= var1191780
   (ite (bvslt temp10742_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10742_159 #x0000000000000000))
(assert (= var1191780 temp10742_159))
(assert (= temp10742_160 #x0000000000000000))
(assert (= var1179826 temp10742_160))
(assert (= temp10742_162 var1179826))
(assert (= temp10742_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10742_162)))
(assert (= temp10742_161 temp10742_163))
(assert (= var1191802 (bvsmod temp10742_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10742_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10742_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10742_165 #x0000000000000001))
(assert (= var1191803 temp10742_165))
(assert (= temp10742_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10742_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10742_167 #x0000000000000001))
(assert (= var1191823 temp10742_167))
(assert (= temp10742_168 #x0000000000000001))
(assert (= var1180714 temp10742_168))
(assert (= temp10742_169 #x0000000000000000))
(assert (= temp10742_170 temp10742_169))
(assert (= temp10742_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10742_170)))
(assert (= temp10742_172 #x0000000000000001))
(assert (= temp10742_173 temp10742_172))
(assert (= temp10742_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10742_173)))
(assert (= temp10742_175 #x0000000000000002))
(assert (= temp10742_176 temp10742_175))
(assert (= temp10742_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10742_176)))
(assert (= temp10742_178 #x0000000000000003))
(assert (= temp10742_179 temp10742_178))
(assert (= temp10742_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10742_179)))
(assert (= temp10742_181 #x0000000000000004))
(assert (= temp10742_182 temp10742_181))
(assert (= temp10742_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10742_182)))
(assert (= temp10742_184 #x0000000000000005))
(assert (= temp10742_185 temp10742_184))
(assert (= temp10742_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10742_185)))
(assert (= temp10742_187 #x0000000000000000))
(assert (= temp10742_188
   (ite (bvslt var1180714 temp10742_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10742_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10742_188)))
(assert (= var1191831 temp10742_189))
(assert (bvslt (ite (bvslt var1180714 temp10742_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10742_190 #x0000000000000001))
(assert (= var1180714 temp10742_190))
(assert (= temp10742_192 var1180714))
(assert (= temp10742_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10742_192)))
(assert (= temp10742_191 temp10742_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10742_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10742_194 #x0000000000000001))
(assert (= var1191836 temp10742_194))
(assert (= temp10742_195 #x0000000000000000))
(assert (= var1179826 temp10742_195))
(assert (= temp10742_197 var1179826))
(assert (= temp10742_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10742_197)))
(assert (= temp10742_196 temp10742_198))
(assert (= temp10742_199 #x0000000000000002))
(assert (= var1586025 temp10742_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10742_200 #x0000000000000001))
(assert (= var1191993 temp10742_200))
(assert (= temp10742_201 #x0000000000000001))
(assert (= var2700303 temp10742_201))
(assert (= temp10742_202 #x0000000000000001))
(assert (= var2962447 temp10742_202))
(assert (= temp10742_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10742_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10742_204 #x0000000000000001))
(assert (= var211058 temp10742_204))
(assert (= temp10742_205 #x0000000000000001))
(assert (= var211188 temp10742_205))
(assert (= var3879401 var211188))
(assert (= temp10742_206 #x0000000000000000))
(assert (= var3866802 temp10742_206))
(assert (= temp10742_207 #x0000000000000000))
(assert (= temp10742_208
   (ite (bvslt var3866802 temp10742_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10742_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10742_208)))
(assert (= var3879420 temp10742_209))
(assert (bvslt (ite (bvslt var3866802 temp10742_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10742_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10742_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10742_211 #x0000000000000000))
(assert (= var3879421 temp10742_211))
(assert (= temp10742_212 #x0000000000000001))
(assert (= var3867690 temp10742_212))
(assert (= temp10742_213 #x0000000000000000))
(assert (= temp10742_214
   (ite (bvslt var3867690 temp10742_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10742_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10742_214)))
(assert (= var3879423 temp10742_215))
(assert (bvslt (ite (bvslt var3867690 temp10742_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10742_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10742_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10742_217 #x0000000000000001))
(assert (= var3879424 temp10742_217))
(assert (= temp10742_218 #x0000000000000000))
(assert (= var4133117 temp10742_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10742_219 #x0000000000000002))
(assert (= var4339331 temp10742_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10742_220 #x0000000000000000))
(assert (= var4404892 temp10742_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var4927888 var211201))
(assert (= var211820 var210913))
(assert (= temp10742_221 #x0000000000000000))
(assert (= var211821
   (ite (distinct var211820 temp10742_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10742_222 #x0000000000000001))
(assert (= var211058 temp10742_222))
(model-add temp10742_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10742_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10742_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10742_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))



