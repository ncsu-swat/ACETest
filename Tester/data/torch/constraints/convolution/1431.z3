(declare-fun temp10638_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10638_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10638_3 () (_ BitVec 64))
(declare-fun temp10638_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10638_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10638_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10638_7 () (_ BitVec 64))
(declare-fun temp10638_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10638_9 () (_ BitVec 64))
(declare-fun temp10638_10 () (_ BitVec 64))
(declare-fun temp10638_11 () (_ BitVec 64))
(declare-fun temp10638_12 () (_ BitVec 64))
(declare-fun temp10638_13 () (_ BitVec 64))
(declare-fun temp10638_14 () (_ BitVec 64))
(declare-fun temp10638_15 () (_ BitVec 64))
(declare-fun temp10638_16 () (_ BitVec 64))
(declare-fun temp10638_17 () (_ BitVec 64))
(declare-fun temp10638_18 () (_ BitVec 64))
(declare-fun temp10638_19 () (_ BitVec 64))
(declare-fun temp10638_20 () (_ BitVec 64))
(declare-fun temp10638_21 () (_ BitVec 64))
(declare-fun temp10638_22 () (_ BitVec 64))
(declare-fun temp10638_23 () (_ BitVec 64))
(declare-fun temp10638_24 () (_ BitVec 64))
(declare-fun temp10638_25 () (_ BitVec 64))
(declare-fun temp10638_26 () (_ BitVec 64))
(declare-fun temp10638_27 () (_ BitVec 64))
(declare-fun temp10638_28 () (_ BitVec 64))
(declare-fun temp10638_29 () (_ BitVec 64))
(declare-fun temp10638_30 () (_ BitVec 64))
(declare-fun temp10638_31 () (_ BitVec 64))
(declare-fun temp10638_32 () (_ BitVec 64))
(declare-fun temp10638_33 () (_ BitVec 64))
(declare-fun temp10638_34 () (_ BitVec 64))
(declare-fun temp10638_35 () (_ BitVec 64))
(declare-fun temp10638_36 () (_ BitVec 64))
(declare-fun temp10638_37 () (_ BitVec 64))
(declare-fun temp10638_38 () (_ BitVec 64))
(declare-fun temp10638_39 () (_ BitVec 64))
(declare-fun temp10638_40 () (_ BitVec 64))
(declare-fun temp10638_41 () (_ BitVec 64))
(declare-fun temp10638_42 () (_ BitVec 64))
(declare-fun temp10638_43 () (_ BitVec 64))
(declare-fun temp10638_44 () (_ BitVec 64))
(declare-fun temp10638_45 () (_ BitVec 64))
(declare-fun temp10638_46 () (_ BitVec 64))
(declare-fun temp10638_47 () (_ BitVec 64))
(declare-fun temp10638_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10638_49 () (_ BitVec 64))
(declare-fun temp10638_50 () (_ BitVec 64))
(declare-fun temp10638_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10638_52 () (_ BitVec 64))
(declare-fun temp10638_53 () (_ BitVec 64))
(declare-fun temp10638_54 () (_ BitVec 64))
(declare-fun temp10638_55 () (_ BitVec 64))
(declare-fun temp10638_56 () (_ BitVec 64))
(declare-fun temp10638_57 () (_ BitVec 64))
(declare-fun temp10638_58 () (_ BitVec 64))
(declare-fun temp10638_59 () (_ BitVec 64))
(declare-fun temp10638_60 () (_ BitVec 64))
(declare-fun temp10638_61 () (_ BitVec 64))
(declare-fun temp10638_62 () (_ BitVec 64))
(declare-fun temp10638_63 () (_ BitVec 64))
(declare-fun temp10638_64 () (_ BitVec 64))
(declare-fun temp10638_65 () (_ BitVec 64))
(declare-fun temp10638_66 () (_ BitVec 64))
(declare-fun temp10638_67 () (_ BitVec 64))
(declare-fun temp10638_68 () (_ BitVec 64))
(declare-fun temp10638_69 () (_ BitVec 64))
(declare-fun temp10638_70 () (_ BitVec 64))
(declare-fun temp10638_71 () (_ BitVec 64))
(declare-fun temp10638_72 () (_ BitVec 64))
(declare-fun temp10638_73 () (_ BitVec 64))
(declare-fun temp10638_74 () (_ BitVec 64))
(declare-fun temp10638_75 () (_ BitVec 64))
(declare-fun temp10638_76 () (_ BitVec 64))
(declare-fun temp10638_77 () (_ BitVec 64))
(declare-fun temp10638_78 () (_ BitVec 64))
(declare-fun temp10638_79 () (_ BitVec 64))
(declare-fun temp10638_80 () (_ BitVec 64))
(declare-fun temp10638_81 () (_ BitVec 64))
(declare-fun temp10638_82 () (_ BitVec 64))
(declare-fun temp10638_83 () (_ BitVec 64))
(declare-fun temp10638_84 () (_ BitVec 64))
(declare-fun temp10638_85 () (_ BitVec 64))
(declare-fun temp10638_86 () (_ BitVec 64))
(declare-fun temp10638_87 () (_ BitVec 64))
(declare-fun temp10638_88 () (_ BitVec 64))
(declare-fun temp10638_89 () (_ BitVec 64))
(declare-fun temp10638_90 () (_ BitVec 64))
(declare-fun temp10638_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10638_92 () (_ BitVec 64))
(declare-fun temp10638_93 () (_ BitVec 64))
(declare-fun temp10638_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10638_95 () (_ BitVec 64))
(declare-fun temp10638_96 () (_ BitVec 64))
(declare-fun temp10638_97 () (_ BitVec 64))
(declare-fun temp10638_98 () (_ BitVec 64))
(declare-fun temp10638_99 () (_ BitVec 64))
(declare-fun temp10638_100 () (_ BitVec 64))
(declare-fun temp10638_101 () (_ BitVec 64))
(declare-fun temp10638_102 () (_ BitVec 64))
(declare-fun temp10638_103 () (_ BitVec 64))
(declare-fun temp10638_104 () (_ BitVec 64))
(declare-fun temp10638_105 () (_ BitVec 64))
(declare-fun temp10638_106 () (_ BitVec 64))
(declare-fun temp10638_107 () (_ BitVec 64))
(declare-fun temp10638_108 () (_ BitVec 64))
(declare-fun temp10638_109 () (_ BitVec 64))
(declare-fun temp10638_110 () (_ BitVec 64))
(declare-fun temp10638_111 () (_ BitVec 64))
(declare-fun temp10638_112 () (_ BitVec 64))
(declare-fun temp10638_113 () (_ BitVec 64))
(declare-fun temp10638_114 () (_ BitVec 64))
(declare-fun temp10638_115 () (_ BitVec 64))
(declare-fun temp10638_116 () (_ BitVec 64))
(declare-fun temp10638_117 () (_ BitVec 64))
(declare-fun temp10638_118 () (_ BitVec 64))
(declare-fun temp10638_119 () (_ BitVec 64))
(declare-fun temp10638_120 () (_ BitVec 64))
(declare-fun temp10638_121 () (_ BitVec 64))
(declare-fun temp10638_122 () (_ BitVec 64))
(declare-fun temp10638_123 () (_ BitVec 64))
(declare-fun temp10638_124 () (_ BitVec 64))
(declare-fun temp10638_125 () (_ BitVec 64))
(declare-fun temp10638_126 () (_ BitVec 64))
(declare-fun temp10638_127 () (_ BitVec 64))
(declare-fun temp10638_128 () (_ BitVec 64))
(declare-fun temp10638_129 () (_ BitVec 64))
(declare-fun temp10638_130 () (_ BitVec 64))
(declare-fun temp10638_131 () (_ BitVec 64))
(declare-fun temp10638_132 () (_ BitVec 64))
(declare-fun temp10638_133 () (_ BitVec 64))
(declare-fun temp10638_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10638_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10638_136 () (_ BitVec 64))
(declare-fun temp10638_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10638_138 () (_ BitVec 64))
(declare-fun temp10638_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10638_140 () (_ BitVec 64))
(declare-fun temp10638_141 () (_ BitVec 64))
(declare-fun temp10638_142 () (_ BitVec 64))
(declare-fun temp10638_143 () (_ BitVec 64))
(declare-fun temp10638_144 () (_ BitVec 64))
(declare-fun temp10638_145 () (_ BitVec 64))
(declare-fun temp10638_146 () (_ BitVec 64))
(declare-fun temp10638_147 () (_ BitVec 64))
(declare-fun temp10638_148 () (_ BitVec 64))
(declare-fun temp10638_149 () (_ BitVec 64))
(declare-fun temp10638_150 () (_ BitVec 64))
(declare-fun temp10638_151 () (_ BitVec 64))
(declare-fun temp10638_152 () (_ BitVec 64))
(declare-fun temp10638_153 () (_ BitVec 64))
(declare-fun temp10638_154 () (_ BitVec 64))
(declare-fun temp10638_155 () (_ BitVec 64))
(declare-fun temp10638_157 () (_ BitVec 64))
(declare-fun temp10638_158 () (_ BitVec 64))
(declare-fun temp10638_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10638_159 () (_ BitVec 64))
(declare-fun temp10638_160 () (_ BitVec 64))
(declare-fun temp10638_162 () (_ BitVec 64))
(declare-fun temp10638_163 () (_ BitVec 64))
(declare-fun temp10638_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10638_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10638_165 () (_ BitVec 64))
(declare-fun temp10638_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10638_167 () (_ BitVec 64))
(declare-fun temp10638_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10638_169 () (_ BitVec 64))
(declare-fun temp10638_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10638_171 () (_ BitVec 64))
(declare-fun temp10638_172 () (_ BitVec 64))
(declare-fun temp10638_173 () (_ BitVec 64))
(declare-fun temp10638_174 () (_ BitVec 64))
(declare-fun temp10638_175 () (_ BitVec 64))
(declare-fun temp10638_176 () (_ BitVec 64))
(declare-fun temp10638_177 () (_ BitVec 64))
(declare-fun temp10638_178 () (_ BitVec 64))
(declare-fun temp10638_179 () (_ BitVec 64))
(declare-fun temp10638_180 () (_ BitVec 64))
(declare-fun temp10638_181 () (_ BitVec 64))
(declare-fun temp10638_182 () (_ BitVec 64))
(declare-fun temp10638_183 () (_ BitVec 64))
(declare-fun temp10638_184 () (_ BitVec 64))
(declare-fun temp10638_185 () (_ BitVec 64))
(declare-fun temp10638_186 () (_ BitVec 64))
(declare-fun temp10638_187 () (_ BitVec 64))
(declare-fun temp10638_188 () (_ BitVec 64))
(declare-fun temp10638_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10638_190 () (_ BitVec 64))
(declare-fun temp10638_192 () (_ BitVec 64))
(declare-fun temp10638_193 () (_ BitVec 64))
(declare-fun temp10638_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10638_194 () (_ BitVec 64))
(declare-fun temp10638_195 () (_ BitVec 64))
(declare-fun temp10638_197 () (_ BitVec 64))
(declare-fun temp10638_198 () (_ BitVec 64))
(declare-fun temp10638_196 () (_ BitVec 64))
(declare-fun temp10638_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10638_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10638_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10638_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10638_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10638_204 () (_ BitVec 64))
(declare-fun temp10638_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10638_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10638_207 () (_ BitVec 64))
(declare-fun temp10638_208 () (_ BitVec 64))
(declare-fun temp10638_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10638_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10638_211 () (_ BitVec 64))
(declare-fun temp10638_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10638_213 () (_ BitVec 64))
(declare-fun temp10638_214 () (_ BitVec 64))
(declare-fun temp10638_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10638_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10638_217 () (_ BitVec 64))
(declare-fun temp10638_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10638_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10638_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp10638_222 () (_ BitVec 64))
(declare-fun temp10638_221 () (_ BitVec 64))
(declare-fun temp10638_223 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp10638_224 () (_ BitVec 64))
(declare-fun temp10638_225 () (_ BitVec 64))
(declare-fun temp10638_226 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp10638_227 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp10638_228 () (_ BitVec 64))
(declare-fun temp10638_230 () (_ BitVec 64))
(declare-fun temp10638_229 () (_ BitVec 64))
(declare-fun temp10638_231 () (_ BitVec 64))
(assert (= temp10638_1 #x0000000000000001))
(assert (= var77203 temp10638_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10638_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10638_2)))
(assert (= temp10638_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10638_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10638_4 #x0000000000000000))
(assert (= var210941 temp10638_4))
(assert (= temp10638_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10638_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10638_6 #x0000000000000000))
(assert (= var210986 temp10638_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10638_7 #x0000000000000000))
(assert (= temp10638_8 temp10638_7))
(assert (= temp10638_9 (select ARGNAME_padding_NAMEEND_VAL temp10638_8)))
(assert (= temp10638_10 #x0000000000000001))
(assert (= temp10638_11 temp10638_10))
(assert (= temp10638_12 (select ARGNAME_padding_NAMEEND_VAL temp10638_11)))
(assert (= temp10638_13 #x0000000000000002))
(assert (= temp10638_14 temp10638_13))
(assert (= temp10638_15 (select ARGNAME_padding_NAMEEND_VAL temp10638_14)))
(assert (= temp10638_16 #x0000000000000003))
(assert (= temp10638_17 temp10638_16))
(assert (= temp10638_18 (select ARGNAME_padding_NAMEEND_VAL temp10638_17)))
(assert (= temp10638_19 #x0000000000000004))
(assert (= temp10638_20 temp10638_19))
(assert (= temp10638_21 (select ARGNAME_padding_NAMEEND_VAL temp10638_20)))
(assert (= temp10638_22 #x0000000000000005))
(assert (= temp10638_23 temp10638_22))
(assert (= temp10638_24 (select ARGNAME_padding_NAMEEND_VAL temp10638_23)))
(assert (= temp10638_25 #x0000000000000000))
(assert (= temp10638_26 #x0000000000000000))
(assert (= temp10638_27 temp10638_26))
(assert (= temp10638_28 (select ARGNAME_padding_NAMEEND_VAL temp10638_27)))
(assert (= temp10638_29 #x0000000000000000))
(assert (= temp10638_30 #x0000000000000001))
(assert (= temp10638_31 temp10638_30))
(assert (= temp10638_32 (select ARGNAME_padding_NAMEEND_VAL temp10638_31)))
(assert (= temp10638_33 #x0000000000000000))
(assert (= temp10638_34 #x0000000000000002))
(assert (= temp10638_35 temp10638_34))
(assert (= temp10638_36 (select ARGNAME_padding_NAMEEND_VAL temp10638_35)))
(assert (= temp10638_37 #x0000000000000000))
(assert (= temp10638_38 #x0000000000000003))
(assert (= temp10638_39 temp10638_38))
(assert (= temp10638_40 (select ARGNAME_padding_NAMEEND_VAL temp10638_39)))
(assert (= temp10638_41 #x0000000000000000))
(assert (= temp10638_42 #x0000000000000004))
(assert (= temp10638_43 temp10638_42))
(assert (= temp10638_44 (select ARGNAME_padding_NAMEEND_VAL temp10638_43)))
(assert (= temp10638_45 #x0000000000000000))
(assert (= temp10638_46 #x0000000000000005))
(assert (= temp10638_47 temp10638_46))
(assert (= temp10638_48 (select ARGNAME_padding_NAMEEND_VAL temp10638_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10638_28 temp10638_25)
             (bvslt temp10638_32 temp10638_29)
             (bvslt temp10638_36 temp10638_33)
             (bvslt temp10638_40 temp10638_37)
             (bvslt temp10638_44 temp10638_41)
             (bvslt temp10638_48 temp10638_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10638_49 #x0000000000000000))
(assert (= var1191714 temp10638_49))
(assert (= temp10638_50 #x0000000000000000))
(assert (= temp10638_51 temp10638_50))
(assert (= temp10638_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10638_51)))
(assert (= temp10638_53 #x0000000000000001))
(assert (= temp10638_54 temp10638_53))
(assert (= temp10638_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10638_54)))
(assert (= temp10638_56 #x0000000000000002))
(assert (= temp10638_57 temp10638_56))
(assert (= temp10638_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10638_57)))
(assert (= temp10638_59 #x0000000000000003))
(assert (= temp10638_60 temp10638_59))
(assert (= temp10638_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10638_60)))
(assert (= temp10638_62 #x0000000000000004))
(assert (= temp10638_63 temp10638_62))
(assert (= temp10638_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10638_63)))
(assert (= temp10638_65 #x0000000000000005))
(assert (= temp10638_66 temp10638_65))
(assert (= temp10638_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10638_66)))
(assert (= temp10638_68 #x0000000000000000))
(assert (= temp10638_69 #x0000000000000000))
(assert (= temp10638_70 temp10638_69))
(assert (= temp10638_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10638_70)))
(assert (= temp10638_72 #x0000000000000000))
(assert (= temp10638_73 #x0000000000000001))
(assert (= temp10638_74 temp10638_73))
(assert (= temp10638_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10638_74)))
(assert (= temp10638_76 #x0000000000000000))
(assert (= temp10638_77 #x0000000000000002))
(assert (= temp10638_78 temp10638_77))
(assert (= temp10638_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10638_78)))
(assert (= temp10638_80 #x0000000000000000))
(assert (= temp10638_81 #x0000000000000003))
(assert (= temp10638_82 temp10638_81))
(assert (= temp10638_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10638_82)))
(assert (= temp10638_84 #x0000000000000000))
(assert (= temp10638_85 #x0000000000000004))
(assert (= temp10638_86 temp10638_85))
(assert (= temp10638_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10638_86)))
(assert (= temp10638_88 #x0000000000000000))
(assert (= temp10638_89 #x0000000000000005))
(assert (= temp10638_90 temp10638_89))
(assert (= temp10638_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10638_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10638_71 temp10638_68)
             (bvslt temp10638_75 temp10638_72)
             (bvslt temp10638_79 temp10638_76)
             (bvslt temp10638_83 temp10638_80)
             (bvslt temp10638_87 temp10638_84)
             (bvslt temp10638_91 temp10638_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10638_92 #x0000000000000000))
(assert (= var1191725 temp10638_92))
(assert (= temp10638_93 #x0000000000000000))
(assert (= temp10638_94 temp10638_93))
(assert (= temp10638_95 (select ARGNAME_stride_NAMEEND_VAL temp10638_94)))
(assert (= temp10638_96 #x0000000000000001))
(assert (= temp10638_97 temp10638_96))
(assert (= temp10638_98 (select ARGNAME_stride_NAMEEND_VAL temp10638_97)))
(assert (= temp10638_99 #x0000000000000002))
(assert (= temp10638_100 temp10638_99))
(assert (= temp10638_101 (select ARGNAME_stride_NAMEEND_VAL temp10638_100)))
(assert (= temp10638_102 #x0000000000000003))
(assert (= temp10638_103 temp10638_102))
(assert (= temp10638_104 (select ARGNAME_stride_NAMEEND_VAL temp10638_103)))
(assert (= temp10638_105 #x0000000000000004))
(assert (= temp10638_106 temp10638_105))
(assert (= temp10638_107 (select ARGNAME_stride_NAMEEND_VAL temp10638_106)))
(assert (= temp10638_108 #x0000000000000005))
(assert (= temp10638_109 temp10638_108))
(assert (= temp10638_110 (select ARGNAME_stride_NAMEEND_VAL temp10638_109)))
(assert (= temp10638_111 #x0000000000000000))
(assert (= temp10638_112 #x0000000000000000))
(assert (= temp10638_113 temp10638_112))
(assert (= temp10638_114 (select ARGNAME_stride_NAMEEND_VAL temp10638_113)))
(assert (= temp10638_115 #x0000000000000000))
(assert (= temp10638_116 #x0000000000000001))
(assert (= temp10638_117 temp10638_116))
(assert (= temp10638_118 (select ARGNAME_stride_NAMEEND_VAL temp10638_117)))
(assert (= temp10638_119 #x0000000000000000))
(assert (= temp10638_120 #x0000000000000002))
(assert (= temp10638_121 temp10638_120))
(assert (= temp10638_122 (select ARGNAME_stride_NAMEEND_VAL temp10638_121)))
(assert (= temp10638_123 #x0000000000000000))
(assert (= temp10638_124 #x0000000000000003))
(assert (= temp10638_125 temp10638_124))
(assert (= temp10638_126 (select ARGNAME_stride_NAMEEND_VAL temp10638_125)))
(assert (= temp10638_127 #x0000000000000000))
(assert (= temp10638_128 #x0000000000000004))
(assert (= temp10638_129 temp10638_128))
(assert (= temp10638_130 (select ARGNAME_stride_NAMEEND_VAL temp10638_129)))
(assert (= temp10638_131 #x0000000000000000))
(assert (= temp10638_132 #x0000000000000005))
(assert (= temp10638_133 temp10638_132))
(assert (= temp10638_134 (select ARGNAME_stride_NAMEEND_VAL temp10638_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10638_114 temp10638_111)
             (bvsle temp10638_118 temp10638_115)
             (bvsle temp10638_122 temp10638_119)
             (bvsle temp10638_126 temp10638_123)
             (bvsle temp10638_130 temp10638_127)
             (bvsle temp10638_134 temp10638_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10638_135 #x0000000000000000))
(assert (= var1191735 temp10638_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10638_136 #x0000000000000001))
(assert (= var1191747 temp10638_136))
(assert (= temp10638_137 #x0000000000000000))
(assert (= var1179826 temp10638_137))
(assert (= temp10638_138 #x0000000000000000))
(assert (= temp10638_139 temp10638_138))
(assert (= temp10638_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10638_139)))
(assert (= temp10638_141 #x0000000000000001))
(assert (= temp10638_142 temp10638_141))
(assert (= temp10638_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10638_142)))
(assert (= temp10638_144 #x0000000000000002))
(assert (= temp10638_145 temp10638_144))
(assert (= temp10638_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10638_145)))
(assert (= temp10638_147 #x0000000000000003))
(assert (= temp10638_148 temp10638_147))
(assert (= temp10638_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10638_148)))
(assert (= temp10638_150 #x0000000000000004))
(assert (= temp10638_151 temp10638_150))
(assert (= temp10638_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10638_151)))
(assert (= temp10638_153 #x0000000000000005))
(assert (= temp10638_154 temp10638_153))
(assert (= temp10638_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10638_154)))
(assert (= temp10638_157 var1179826))
(assert (= temp10638_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10638_157)))
(assert (= temp10638_156 temp10638_158))
(assert (= var1191780
   (ite (bvslt temp10638_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10638_159 #x0000000000000000))
(assert (= var1191780 temp10638_159))
(assert (= temp10638_160 #x0000000000000000))
(assert (= var1179826 temp10638_160))
(assert (= temp10638_162 var1179826))
(assert (= temp10638_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10638_162)))
(assert (= temp10638_161 temp10638_163))
(assert (= var1191802 (bvsmod temp10638_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10638_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10638_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10638_165 #x0000000000000001))
(assert (= var1191803 temp10638_165))
(assert (= temp10638_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10638_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10638_167 #x0000000000000001))
(assert (= var1191823 temp10638_167))
(assert (= temp10638_168 #x0000000000000001))
(assert (= var1180714 temp10638_168))
(assert (= temp10638_169 #x0000000000000000))
(assert (= temp10638_170 temp10638_169))
(assert (= temp10638_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10638_170)))
(assert (= temp10638_172 #x0000000000000001))
(assert (= temp10638_173 temp10638_172))
(assert (= temp10638_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10638_173)))
(assert (= temp10638_175 #x0000000000000002))
(assert (= temp10638_176 temp10638_175))
(assert (= temp10638_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10638_176)))
(assert (= temp10638_178 #x0000000000000003))
(assert (= temp10638_179 temp10638_178))
(assert (= temp10638_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10638_179)))
(assert (= temp10638_181 #x0000000000000004))
(assert (= temp10638_182 temp10638_181))
(assert (= temp10638_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10638_182)))
(assert (= temp10638_184 #x0000000000000005))
(assert (= temp10638_185 temp10638_184))
(assert (= temp10638_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10638_185)))
(assert (= temp10638_187 #x0000000000000000))
(assert (= temp10638_188
   (ite (bvslt var1180714 temp10638_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10638_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10638_188)))
(assert (= var1191831 temp10638_189))
(assert (bvslt (ite (bvslt var1180714 temp10638_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10638_190 #x0000000000000001))
(assert (= var1180714 temp10638_190))
(assert (= temp10638_192 var1180714))
(assert (= temp10638_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10638_192)))
(assert (= temp10638_191 temp10638_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10638_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10638_194 #x0000000000000001))
(assert (= var1191836 temp10638_194))
(assert (= temp10638_195 #x0000000000000000))
(assert (= var1179826 temp10638_195))
(assert (= temp10638_197 var1179826))
(assert (= temp10638_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10638_197)))
(assert (= temp10638_196 temp10638_198))
(assert (= temp10638_199 #x0000000000000002))
(assert (= var1586025 temp10638_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10638_200 #x0000000000000001))
(assert (= var1191993 temp10638_200))
(assert (= temp10638_201 #x0000000000000001))
(assert (= var2700303 temp10638_201))
(assert (= temp10638_202 #x0000000000000001))
(assert (= var2962447 temp10638_202))
(assert (= temp10638_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10638_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10638_204 #x0000000000000001))
(assert (= var211058 temp10638_204))
(assert (= temp10638_205 #x0000000000000001))
(assert (= var211188 temp10638_205))
(assert (= var3879401 var211188))
(assert (= temp10638_206 #x0000000000000000))
(assert (= var3866802 temp10638_206))
(assert (= temp10638_207 #x0000000000000000))
(assert (= temp10638_208
   (ite (bvslt var3866802 temp10638_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10638_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10638_208)))
(assert (= var3879420 temp10638_209))
(assert (bvslt (ite (bvslt var3866802 temp10638_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10638_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10638_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10638_211 #x0000000000000000))
(assert (= var3879421 temp10638_211))
(assert (= temp10638_212 #x0000000000000001))
(assert (= var3867690 temp10638_212))
(assert (= temp10638_213 #x0000000000000000))
(assert (= temp10638_214
   (ite (bvslt var3867690 temp10638_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10638_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10638_214)))
(assert (= var3879423 temp10638_215))
(assert (bvslt (ite (bvslt var3867690 temp10638_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10638_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10638_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10638_217 #x0000000000000001))
(assert (= var3879424 temp10638_217))
(assert (= temp10638_218 #x0000000000000000))
(assert (= var4133117 temp10638_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10638_219 #x0000000000000002))
(assert (= var4339331 temp10638_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10638_220 #x0000000000000000))
(assert (= var4404892 temp10638_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp10638_222 #xffffffffffffffff))
(assert (= temp10638_221 temp10638_222))
(assert (= temp10638_223 #x0000000000000001))
(assert (= var197674 temp10638_223))
(assert (= temp10638_224 #x0000000000000000))
(assert (= temp10638_225
   (ite (bvslt var197674 temp10638_224)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp10638_226 (select ARGNAME_input_NAMEEND_DIMSIZE temp10638_225)))
(assert (= var211595 temp10638_226))
(assert (bvslt (ite (bvslt var197674 temp10638_224)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10638_227 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp10638_227) #x0000000000000001 #x0000000000000000)))
(assert (= temp10638_228 #x0000000000000001))
(assert (= var211596 temp10638_228))
(assert (= temp10638_230 #xffffffffffffffff))
(assert (= temp10638_229 temp10638_230))
(assert (= temp10638_231 #x0000000000000001))
(assert (= var211058 temp10638_231))
(model-add temp10638_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10638_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10638_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10638_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




