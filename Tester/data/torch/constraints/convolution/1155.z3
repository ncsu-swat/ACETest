(declare-fun temp10270_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10270_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10270_3 () (_ BitVec 64))
(declare-fun temp10270_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10270_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10270_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10270_7 () (_ BitVec 64))
(declare-fun temp10270_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10270_9 () (_ BitVec 64))
(declare-fun temp10270_10 () (_ BitVec 64))
(declare-fun temp10270_11 () (_ BitVec 64))
(declare-fun temp10270_12 () (_ BitVec 64))
(declare-fun temp10270_13 () (_ BitVec 64))
(declare-fun temp10270_14 () (_ BitVec 64))
(declare-fun temp10270_15 () (_ BitVec 64))
(declare-fun temp10270_16 () (_ BitVec 64))
(declare-fun temp10270_17 () (_ BitVec 64))
(declare-fun temp10270_18 () (_ BitVec 64))
(declare-fun temp10270_19 () (_ BitVec 64))
(declare-fun temp10270_20 () (_ BitVec 64))
(declare-fun temp10270_21 () (_ BitVec 64))
(declare-fun temp10270_22 () (_ BitVec 64))
(declare-fun temp10270_23 () (_ BitVec 64))
(declare-fun temp10270_24 () (_ BitVec 64))
(declare-fun temp10270_25 () (_ BitVec 64))
(declare-fun temp10270_26 () (_ BitVec 64))
(declare-fun temp10270_27 () (_ BitVec 64))
(declare-fun temp10270_28 () (_ BitVec 64))
(declare-fun temp10270_29 () (_ BitVec 64))
(declare-fun temp10270_30 () (_ BitVec 64))
(declare-fun temp10270_31 () (_ BitVec 64))
(declare-fun temp10270_32 () (_ BitVec 64))
(declare-fun temp10270_33 () (_ BitVec 64))
(declare-fun temp10270_34 () (_ BitVec 64))
(declare-fun temp10270_35 () (_ BitVec 64))
(declare-fun temp10270_36 () (_ BitVec 64))
(declare-fun temp10270_37 () (_ BitVec 64))
(declare-fun temp10270_38 () (_ BitVec 64))
(declare-fun temp10270_39 () (_ BitVec 64))
(declare-fun temp10270_40 () (_ BitVec 64))
(declare-fun temp10270_41 () (_ BitVec 64))
(declare-fun temp10270_42 () (_ BitVec 64))
(declare-fun temp10270_43 () (_ BitVec 64))
(declare-fun temp10270_44 () (_ BitVec 64))
(declare-fun temp10270_45 () (_ BitVec 64))
(declare-fun temp10270_46 () (_ BitVec 64))
(declare-fun temp10270_47 () (_ BitVec 64))
(declare-fun temp10270_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10270_49 () (_ BitVec 64))
(declare-fun temp10270_50 () (_ BitVec 64))
(declare-fun temp10270_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10270_52 () (_ BitVec 64))
(declare-fun temp10270_53 () (_ BitVec 64))
(declare-fun temp10270_54 () (_ BitVec 64))
(declare-fun temp10270_55 () (_ BitVec 64))
(declare-fun temp10270_56 () (_ BitVec 64))
(declare-fun temp10270_57 () (_ BitVec 64))
(declare-fun temp10270_58 () (_ BitVec 64))
(declare-fun temp10270_59 () (_ BitVec 64))
(declare-fun temp10270_60 () (_ BitVec 64))
(declare-fun temp10270_61 () (_ BitVec 64))
(declare-fun temp10270_62 () (_ BitVec 64))
(declare-fun temp10270_63 () (_ BitVec 64))
(declare-fun temp10270_64 () (_ BitVec 64))
(declare-fun temp10270_65 () (_ BitVec 64))
(declare-fun temp10270_66 () (_ BitVec 64))
(declare-fun temp10270_67 () (_ BitVec 64))
(declare-fun temp10270_68 () (_ BitVec 64))
(declare-fun temp10270_69 () (_ BitVec 64))
(declare-fun temp10270_70 () (_ BitVec 64))
(declare-fun temp10270_71 () (_ BitVec 64))
(declare-fun temp10270_72 () (_ BitVec 64))
(declare-fun temp10270_73 () (_ BitVec 64))
(declare-fun temp10270_74 () (_ BitVec 64))
(declare-fun temp10270_75 () (_ BitVec 64))
(declare-fun temp10270_76 () (_ BitVec 64))
(declare-fun temp10270_77 () (_ BitVec 64))
(declare-fun temp10270_78 () (_ BitVec 64))
(declare-fun temp10270_79 () (_ BitVec 64))
(declare-fun temp10270_80 () (_ BitVec 64))
(declare-fun temp10270_81 () (_ BitVec 64))
(declare-fun temp10270_82 () (_ BitVec 64))
(declare-fun temp10270_83 () (_ BitVec 64))
(declare-fun temp10270_84 () (_ BitVec 64))
(declare-fun temp10270_85 () (_ BitVec 64))
(declare-fun temp10270_86 () (_ BitVec 64))
(declare-fun temp10270_87 () (_ BitVec 64))
(declare-fun temp10270_88 () (_ BitVec 64))
(declare-fun temp10270_89 () (_ BitVec 64))
(declare-fun temp10270_90 () (_ BitVec 64))
(declare-fun temp10270_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10270_92 () (_ BitVec 64))
(declare-fun temp10270_93 () (_ BitVec 64))
(declare-fun temp10270_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10270_95 () (_ BitVec 64))
(declare-fun temp10270_96 () (_ BitVec 64))
(declare-fun temp10270_97 () (_ BitVec 64))
(declare-fun temp10270_98 () (_ BitVec 64))
(declare-fun temp10270_99 () (_ BitVec 64))
(declare-fun temp10270_100 () (_ BitVec 64))
(declare-fun temp10270_101 () (_ BitVec 64))
(declare-fun temp10270_102 () (_ BitVec 64))
(declare-fun temp10270_103 () (_ BitVec 64))
(declare-fun temp10270_104 () (_ BitVec 64))
(declare-fun temp10270_105 () (_ BitVec 64))
(declare-fun temp10270_106 () (_ BitVec 64))
(declare-fun temp10270_107 () (_ BitVec 64))
(declare-fun temp10270_108 () (_ BitVec 64))
(declare-fun temp10270_109 () (_ BitVec 64))
(declare-fun temp10270_110 () (_ BitVec 64))
(declare-fun temp10270_111 () (_ BitVec 64))
(declare-fun temp10270_112 () (_ BitVec 64))
(declare-fun temp10270_113 () (_ BitVec 64))
(declare-fun temp10270_114 () (_ BitVec 64))
(declare-fun temp10270_115 () (_ BitVec 64))
(declare-fun temp10270_116 () (_ BitVec 64))
(declare-fun temp10270_117 () (_ BitVec 64))
(declare-fun temp10270_118 () (_ BitVec 64))
(declare-fun temp10270_119 () (_ BitVec 64))
(declare-fun temp10270_120 () (_ BitVec 64))
(declare-fun temp10270_121 () (_ BitVec 64))
(declare-fun temp10270_122 () (_ BitVec 64))
(declare-fun temp10270_123 () (_ BitVec 64))
(declare-fun temp10270_124 () (_ BitVec 64))
(declare-fun temp10270_125 () (_ BitVec 64))
(declare-fun temp10270_126 () (_ BitVec 64))
(declare-fun temp10270_127 () (_ BitVec 64))
(declare-fun temp10270_128 () (_ BitVec 64))
(declare-fun temp10270_129 () (_ BitVec 64))
(declare-fun temp10270_130 () (_ BitVec 64))
(declare-fun temp10270_131 () (_ BitVec 64))
(declare-fun temp10270_132 () (_ BitVec 64))
(declare-fun temp10270_133 () (_ BitVec 64))
(declare-fun temp10270_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10270_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10270_136 () (_ BitVec 64))
(declare-fun temp10270_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10270_138 () (_ BitVec 64))
(declare-fun temp10270_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10270_140 () (_ BitVec 64))
(declare-fun temp10270_141 () (_ BitVec 64))
(declare-fun temp10270_142 () (_ BitVec 64))
(declare-fun temp10270_143 () (_ BitVec 64))
(declare-fun temp10270_144 () (_ BitVec 64))
(declare-fun temp10270_145 () (_ BitVec 64))
(declare-fun temp10270_146 () (_ BitVec 64))
(declare-fun temp10270_147 () (_ BitVec 64))
(declare-fun temp10270_148 () (_ BitVec 64))
(declare-fun temp10270_149 () (_ BitVec 64))
(declare-fun temp10270_150 () (_ BitVec 64))
(declare-fun temp10270_151 () (_ BitVec 64))
(declare-fun temp10270_152 () (_ BitVec 64))
(declare-fun temp10270_153 () (_ BitVec 64))
(declare-fun temp10270_154 () (_ BitVec 64))
(declare-fun temp10270_155 () (_ BitVec 64))
(declare-fun temp10270_157 () (_ BitVec 64))
(declare-fun temp10270_158 () (_ BitVec 64))
(declare-fun temp10270_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10270_159 () (_ BitVec 64))
(declare-fun temp10270_160 () (_ BitVec 64))
(declare-fun temp10270_162 () (_ BitVec 64))
(declare-fun temp10270_163 () (_ BitVec 64))
(declare-fun temp10270_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10270_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10270_165 () (_ BitVec 64))
(declare-fun temp10270_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10270_167 () (_ BitVec 64))
(declare-fun temp10270_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10270_169 () (_ BitVec 64))
(declare-fun temp10270_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10270_171 () (_ BitVec 64))
(declare-fun temp10270_172 () (_ BitVec 64))
(declare-fun temp10270_173 () (_ BitVec 64))
(declare-fun temp10270_174 () (_ BitVec 64))
(declare-fun temp10270_175 () (_ BitVec 64))
(declare-fun temp10270_176 () (_ BitVec 64))
(declare-fun temp10270_177 () (_ BitVec 64))
(declare-fun temp10270_178 () (_ BitVec 64))
(declare-fun temp10270_179 () (_ BitVec 64))
(declare-fun temp10270_180 () (_ BitVec 64))
(declare-fun temp10270_181 () (_ BitVec 64))
(declare-fun temp10270_182 () (_ BitVec 64))
(declare-fun temp10270_183 () (_ BitVec 64))
(declare-fun temp10270_184 () (_ BitVec 64))
(declare-fun temp10270_185 () (_ BitVec 64))
(declare-fun temp10270_186 () (_ BitVec 64))
(declare-fun temp10270_187 () (_ BitVec 64))
(declare-fun temp10270_188 () (_ BitVec 64))
(declare-fun temp10270_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10270_190 () (_ BitVec 64))
(declare-fun temp10270_192 () (_ BitVec 64))
(declare-fun temp10270_193 () (_ BitVec 64))
(declare-fun temp10270_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10270_194 () (_ BitVec 64))
(declare-fun temp10270_195 () (_ BitVec 64))
(declare-fun temp10270_197 () (_ BitVec 64))
(declare-fun temp10270_198 () (_ BitVec 64))
(declare-fun temp10270_196 () (_ BitVec 64))
(declare-fun temp10270_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10270_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10270_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10270_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10270_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10270_204 () (_ BitVec 64))
(declare-fun temp10270_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10270_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10270_207 () (_ BitVec 64))
(declare-fun temp10270_208 () (_ BitVec 64))
(declare-fun temp10270_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10270_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10270_211 () (_ BitVec 64))
(declare-fun temp10270_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10270_213 () (_ BitVec 64))
(declare-fun temp10270_214 () (_ BitVec 64))
(declare-fun temp10270_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10270_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10270_217 () (_ BitVec 64))
(declare-fun temp10270_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10270_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10270_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var5321104 () (_ BitVec 64))
(declare-fun var5583248 () (_ BitVec 64))
(declare-fun temp10270_221 () (_ BitVec 64))
(declare-fun var5910928 () (_ BitVec 64))
(declare-fun temp10270_222 () (_ BitVec 64))
(assert (= temp10270_1 #x0000000000000001))
(assert (= var77203 temp10270_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10270_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10270_2)))
(assert (= temp10270_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10270_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10270_4 #x0000000000000000))
(assert (= var210941 temp10270_4))
(assert (= temp10270_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10270_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10270_6 #x0000000000000000))
(assert (= var210986 temp10270_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10270_7 #x0000000000000000))
(assert (= temp10270_8 temp10270_7))
(assert (= temp10270_9 (select ARGNAME_padding_NAMEEND_VAL temp10270_8)))
(assert (= temp10270_10 #x0000000000000001))
(assert (= temp10270_11 temp10270_10))
(assert (= temp10270_12 (select ARGNAME_padding_NAMEEND_VAL temp10270_11)))
(assert (= temp10270_13 #x0000000000000002))
(assert (= temp10270_14 temp10270_13))
(assert (= temp10270_15 (select ARGNAME_padding_NAMEEND_VAL temp10270_14)))
(assert (= temp10270_16 #x0000000000000003))
(assert (= temp10270_17 temp10270_16))
(assert (= temp10270_18 (select ARGNAME_padding_NAMEEND_VAL temp10270_17)))
(assert (= temp10270_19 #x0000000000000004))
(assert (= temp10270_20 temp10270_19))
(assert (= temp10270_21 (select ARGNAME_padding_NAMEEND_VAL temp10270_20)))
(assert (= temp10270_22 #x0000000000000005))
(assert (= temp10270_23 temp10270_22))
(assert (= temp10270_24 (select ARGNAME_padding_NAMEEND_VAL temp10270_23)))
(assert (= temp10270_25 #x0000000000000000))
(assert (= temp10270_26 #x0000000000000000))
(assert (= temp10270_27 temp10270_26))
(assert (= temp10270_28 (select ARGNAME_padding_NAMEEND_VAL temp10270_27)))
(assert (= temp10270_29 #x0000000000000000))
(assert (= temp10270_30 #x0000000000000001))
(assert (= temp10270_31 temp10270_30))
(assert (= temp10270_32 (select ARGNAME_padding_NAMEEND_VAL temp10270_31)))
(assert (= temp10270_33 #x0000000000000000))
(assert (= temp10270_34 #x0000000000000002))
(assert (= temp10270_35 temp10270_34))
(assert (= temp10270_36 (select ARGNAME_padding_NAMEEND_VAL temp10270_35)))
(assert (= temp10270_37 #x0000000000000000))
(assert (= temp10270_38 #x0000000000000003))
(assert (= temp10270_39 temp10270_38))
(assert (= temp10270_40 (select ARGNAME_padding_NAMEEND_VAL temp10270_39)))
(assert (= temp10270_41 #x0000000000000000))
(assert (= temp10270_42 #x0000000000000004))
(assert (= temp10270_43 temp10270_42))
(assert (= temp10270_44 (select ARGNAME_padding_NAMEEND_VAL temp10270_43)))
(assert (= temp10270_45 #x0000000000000000))
(assert (= temp10270_46 #x0000000000000005))
(assert (= temp10270_47 temp10270_46))
(assert (= temp10270_48 (select ARGNAME_padding_NAMEEND_VAL temp10270_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10270_28 temp10270_25)
             (bvslt temp10270_32 temp10270_29)
             (bvslt temp10270_36 temp10270_33)
             (bvslt temp10270_40 temp10270_37)
             (bvslt temp10270_44 temp10270_41)
             (bvslt temp10270_48 temp10270_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10270_49 #x0000000000000000))
(assert (= var1191714 temp10270_49))
(assert (= temp10270_50 #x0000000000000000))
(assert (= temp10270_51 temp10270_50))
(assert (= temp10270_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10270_51)))
(assert (= temp10270_53 #x0000000000000001))
(assert (= temp10270_54 temp10270_53))
(assert (= temp10270_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10270_54)))
(assert (= temp10270_56 #x0000000000000002))
(assert (= temp10270_57 temp10270_56))
(assert (= temp10270_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10270_57)))
(assert (= temp10270_59 #x0000000000000003))
(assert (= temp10270_60 temp10270_59))
(assert (= temp10270_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10270_60)))
(assert (= temp10270_62 #x0000000000000004))
(assert (= temp10270_63 temp10270_62))
(assert (= temp10270_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10270_63)))
(assert (= temp10270_65 #x0000000000000005))
(assert (= temp10270_66 temp10270_65))
(assert (= temp10270_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10270_66)))
(assert (= temp10270_68 #x0000000000000000))
(assert (= temp10270_69 #x0000000000000000))
(assert (= temp10270_70 temp10270_69))
(assert (= temp10270_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10270_70)))
(assert (= temp10270_72 #x0000000000000000))
(assert (= temp10270_73 #x0000000000000001))
(assert (= temp10270_74 temp10270_73))
(assert (= temp10270_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10270_74)))
(assert (= temp10270_76 #x0000000000000000))
(assert (= temp10270_77 #x0000000000000002))
(assert (= temp10270_78 temp10270_77))
(assert (= temp10270_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10270_78)))
(assert (= temp10270_80 #x0000000000000000))
(assert (= temp10270_81 #x0000000000000003))
(assert (= temp10270_82 temp10270_81))
(assert (= temp10270_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10270_82)))
(assert (= temp10270_84 #x0000000000000000))
(assert (= temp10270_85 #x0000000000000004))
(assert (= temp10270_86 temp10270_85))
(assert (= temp10270_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10270_86)))
(assert (= temp10270_88 #x0000000000000000))
(assert (= temp10270_89 #x0000000000000005))
(assert (= temp10270_90 temp10270_89))
(assert (= temp10270_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10270_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10270_71 temp10270_68)
             (bvslt temp10270_75 temp10270_72)
             (bvslt temp10270_79 temp10270_76)
             (bvslt temp10270_83 temp10270_80)
             (bvslt temp10270_87 temp10270_84)
             (bvslt temp10270_91 temp10270_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10270_92 #x0000000000000000))
(assert (= var1191725 temp10270_92))
(assert (= temp10270_93 #x0000000000000000))
(assert (= temp10270_94 temp10270_93))
(assert (= temp10270_95 (select ARGNAME_stride_NAMEEND_VAL temp10270_94)))
(assert (= temp10270_96 #x0000000000000001))
(assert (= temp10270_97 temp10270_96))
(assert (= temp10270_98 (select ARGNAME_stride_NAMEEND_VAL temp10270_97)))
(assert (= temp10270_99 #x0000000000000002))
(assert (= temp10270_100 temp10270_99))
(assert (= temp10270_101 (select ARGNAME_stride_NAMEEND_VAL temp10270_100)))
(assert (= temp10270_102 #x0000000000000003))
(assert (= temp10270_103 temp10270_102))
(assert (= temp10270_104 (select ARGNAME_stride_NAMEEND_VAL temp10270_103)))
(assert (= temp10270_105 #x0000000000000004))
(assert (= temp10270_106 temp10270_105))
(assert (= temp10270_107 (select ARGNAME_stride_NAMEEND_VAL temp10270_106)))
(assert (= temp10270_108 #x0000000000000005))
(assert (= temp10270_109 temp10270_108))
(assert (= temp10270_110 (select ARGNAME_stride_NAMEEND_VAL temp10270_109)))
(assert (= temp10270_111 #x0000000000000000))
(assert (= temp10270_112 #x0000000000000000))
(assert (= temp10270_113 temp10270_112))
(assert (= temp10270_114 (select ARGNAME_stride_NAMEEND_VAL temp10270_113)))
(assert (= temp10270_115 #x0000000000000000))
(assert (= temp10270_116 #x0000000000000001))
(assert (= temp10270_117 temp10270_116))
(assert (= temp10270_118 (select ARGNAME_stride_NAMEEND_VAL temp10270_117)))
(assert (= temp10270_119 #x0000000000000000))
(assert (= temp10270_120 #x0000000000000002))
(assert (= temp10270_121 temp10270_120))
(assert (= temp10270_122 (select ARGNAME_stride_NAMEEND_VAL temp10270_121)))
(assert (= temp10270_123 #x0000000000000000))
(assert (= temp10270_124 #x0000000000000003))
(assert (= temp10270_125 temp10270_124))
(assert (= temp10270_126 (select ARGNAME_stride_NAMEEND_VAL temp10270_125)))
(assert (= temp10270_127 #x0000000000000000))
(assert (= temp10270_128 #x0000000000000004))
(assert (= temp10270_129 temp10270_128))
(assert (= temp10270_130 (select ARGNAME_stride_NAMEEND_VAL temp10270_129)))
(assert (= temp10270_131 #x0000000000000000))
(assert (= temp10270_132 #x0000000000000005))
(assert (= temp10270_133 temp10270_132))
(assert (= temp10270_134 (select ARGNAME_stride_NAMEEND_VAL temp10270_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10270_114 temp10270_111)
             (bvsle temp10270_118 temp10270_115)
             (bvsle temp10270_122 temp10270_119)
             (bvsle temp10270_126 temp10270_123)
             (bvsle temp10270_130 temp10270_127)
             (bvsle temp10270_134 temp10270_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10270_135 #x0000000000000000))
(assert (= var1191735 temp10270_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10270_136 #x0000000000000001))
(assert (= var1191747 temp10270_136))
(assert (= temp10270_137 #x0000000000000000))
(assert (= var1179826 temp10270_137))
(assert (= temp10270_138 #x0000000000000000))
(assert (= temp10270_139 temp10270_138))
(assert (= temp10270_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10270_139)))
(assert (= temp10270_141 #x0000000000000001))
(assert (= temp10270_142 temp10270_141))
(assert (= temp10270_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10270_142)))
(assert (= temp10270_144 #x0000000000000002))
(assert (= temp10270_145 temp10270_144))
(assert (= temp10270_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10270_145)))
(assert (= temp10270_147 #x0000000000000003))
(assert (= temp10270_148 temp10270_147))
(assert (= temp10270_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10270_148)))
(assert (= temp10270_150 #x0000000000000004))
(assert (= temp10270_151 temp10270_150))
(assert (= temp10270_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10270_151)))
(assert (= temp10270_153 #x0000000000000005))
(assert (= temp10270_154 temp10270_153))
(assert (= temp10270_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10270_154)))
(assert (= temp10270_157 var1179826))
(assert (= temp10270_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10270_157)))
(assert (= temp10270_156 temp10270_158))
(assert (= var1191780
   (ite (bvslt temp10270_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10270_159 #x0000000000000000))
(assert (= var1191780 temp10270_159))
(assert (= temp10270_160 #x0000000000000000))
(assert (= var1179826 temp10270_160))
(assert (= temp10270_162 var1179826))
(assert (= temp10270_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10270_162)))
(assert (= temp10270_161 temp10270_163))
(assert (= var1191802 (bvsmod temp10270_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10270_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10270_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10270_165 #x0000000000000001))
(assert (= var1191803 temp10270_165))
(assert (= temp10270_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10270_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10270_167 #x0000000000000001))
(assert (= var1191823 temp10270_167))
(assert (= temp10270_168 #x0000000000000001))
(assert (= var1180714 temp10270_168))
(assert (= temp10270_169 #x0000000000000000))
(assert (= temp10270_170 temp10270_169))
(assert (= temp10270_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10270_170)))
(assert (= temp10270_172 #x0000000000000001))
(assert (= temp10270_173 temp10270_172))
(assert (= temp10270_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10270_173)))
(assert (= temp10270_175 #x0000000000000002))
(assert (= temp10270_176 temp10270_175))
(assert (= temp10270_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10270_176)))
(assert (= temp10270_178 #x0000000000000003))
(assert (= temp10270_179 temp10270_178))
(assert (= temp10270_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10270_179)))
(assert (= temp10270_181 #x0000000000000004))
(assert (= temp10270_182 temp10270_181))
(assert (= temp10270_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10270_182)))
(assert (= temp10270_184 #x0000000000000005))
(assert (= temp10270_185 temp10270_184))
(assert (= temp10270_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10270_185)))
(assert (= temp10270_187 #x0000000000000000))
(assert (= temp10270_188
   (ite (bvslt var1180714 temp10270_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10270_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10270_188)))
(assert (= var1191831 temp10270_189))
(assert (bvslt (ite (bvslt var1180714 temp10270_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10270_190 #x0000000000000001))
(assert (= var1180714 temp10270_190))
(assert (= temp10270_192 var1180714))
(assert (= temp10270_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10270_192)))
(assert (= temp10270_191 temp10270_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10270_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10270_194 #x0000000000000001))
(assert (= var1191836 temp10270_194))
(assert (= temp10270_195 #x0000000000000000))
(assert (= var1179826 temp10270_195))
(assert (= temp10270_197 var1179826))
(assert (= temp10270_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10270_197)))
(assert (= temp10270_196 temp10270_198))
(assert (= temp10270_199 #x0000000000000002))
(assert (= var1586025 temp10270_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10270_200 #x0000000000000001))
(assert (= var1191993 temp10270_200))
(assert (= temp10270_201 #x0000000000000001))
(assert (= var2700303 temp10270_201))
(assert (= temp10270_202 #x0000000000000001))
(assert (= var2962447 temp10270_202))
(assert (= temp10270_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10270_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10270_204 #x0000000000000001))
(assert (= var211058 temp10270_204))
(assert (= temp10270_205 #x0000000000000001))
(assert (= var211188 temp10270_205))
(assert (= var3879401 var211188))
(assert (= temp10270_206 #x0000000000000000))
(assert (= var3866802 temp10270_206))
(assert (= temp10270_207 #x0000000000000000))
(assert (= temp10270_208
   (ite (bvslt var3866802 temp10270_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10270_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10270_208)))
(assert (= var3879420 temp10270_209))
(assert (bvslt (ite (bvslt var3866802 temp10270_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10270_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10270_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10270_211 #x0000000000000000))
(assert (= var3879421 temp10270_211))
(assert (= temp10270_212 #x0000000000000001))
(assert (= var3867690 temp10270_212))
(assert (= temp10270_213 #x0000000000000000))
(assert (= temp10270_214
   (ite (bvslt var3867690 temp10270_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10270_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10270_214)))
(assert (= var3879423 temp10270_215))
(assert (bvslt (ite (bvslt var3867690 temp10270_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10270_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10270_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10270_217 #x0000000000000001))
(assert (= var3879424 temp10270_217))
(assert (= temp10270_218 #x0000000000000000))
(assert (= var4079423 temp10270_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10270_219 #x0000000000000002))
(assert (= var4208259 temp10270_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10270_220 #x0000000000000000))
(assert (= var4273820 temp10270_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var5321104 var211201))
(assert (= var5583248 var211201))
(assert (= temp10270_221 #x0000000000000000))
(assert (= var5910928 temp10270_221))
(assert (= temp10270_222 #x0000000000000001))
(assert (= var211058 temp10270_222))
(model-add temp10270_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10270_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10270_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10270_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






