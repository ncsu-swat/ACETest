(declare-fun temp861_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp861_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp861_3 () (_ BitVec 64))
(declare-fun temp861_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp861_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp861_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp861_7 () (_ BitVec 64))
(declare-fun temp861_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp861_9 () (_ BitVec 64))
(declare-fun temp861_10 () (_ BitVec 64))
(declare-fun temp861_11 () (_ BitVec 64))
(declare-fun temp861_12 () (_ BitVec 64))
(declare-fun temp861_13 () (_ BitVec 64))
(declare-fun temp861_14 () (_ BitVec 64))
(declare-fun temp861_15 () (_ BitVec 64))
(declare-fun temp861_16 () (_ BitVec 64))
(declare-fun temp861_17 () (_ BitVec 64))
(declare-fun temp861_18 () (_ BitVec 64))
(declare-fun temp861_19 () (_ BitVec 64))
(declare-fun temp861_20 () (_ BitVec 64))
(declare-fun temp861_21 () (_ BitVec 64))
(declare-fun temp861_22 () (_ BitVec 64))
(declare-fun temp861_23 () (_ BitVec 64))
(declare-fun temp861_24 () (_ BitVec 64))
(declare-fun temp861_25 () (_ BitVec 64))
(declare-fun temp861_26 () (_ BitVec 64))
(declare-fun temp861_27 () (_ BitVec 64))
(declare-fun temp861_28 () (_ BitVec 64))
(declare-fun temp861_29 () (_ BitVec 64))
(declare-fun temp861_30 () (_ BitVec 64))
(declare-fun temp861_31 () (_ BitVec 64))
(declare-fun temp861_32 () (_ BitVec 64))
(declare-fun temp861_33 () (_ BitVec 64))
(declare-fun temp861_34 () (_ BitVec 64))
(declare-fun temp861_35 () (_ BitVec 64))
(declare-fun temp861_36 () (_ BitVec 64))
(declare-fun temp861_37 () (_ BitVec 64))
(declare-fun temp861_38 () (_ BitVec 64))
(declare-fun temp861_39 () (_ BitVec 64))
(declare-fun temp861_40 () (_ BitVec 64))
(declare-fun temp861_41 () (_ BitVec 64))
(declare-fun temp861_42 () (_ BitVec 64))
(declare-fun temp861_43 () (_ BitVec 64))
(declare-fun temp861_44 () (_ BitVec 64))
(declare-fun temp861_45 () (_ BitVec 64))
(declare-fun temp861_46 () (_ BitVec 64))
(declare-fun temp861_47 () (_ BitVec 64))
(declare-fun temp861_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp861_49 () (_ BitVec 64))
(declare-fun temp861_50 () (_ BitVec 64))
(declare-fun temp861_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp861_52 () (_ BitVec 64))
(declare-fun temp861_53 () (_ BitVec 64))
(declare-fun temp861_54 () (_ BitVec 64))
(declare-fun temp861_55 () (_ BitVec 64))
(declare-fun temp861_56 () (_ BitVec 64))
(declare-fun temp861_57 () (_ BitVec 64))
(declare-fun temp861_58 () (_ BitVec 64))
(declare-fun temp861_59 () (_ BitVec 64))
(declare-fun temp861_60 () (_ BitVec 64))
(declare-fun temp861_61 () (_ BitVec 64))
(declare-fun temp861_62 () (_ BitVec 64))
(declare-fun temp861_63 () (_ BitVec 64))
(declare-fun temp861_64 () (_ BitVec 64))
(declare-fun temp861_65 () (_ BitVec 64))
(declare-fun temp861_66 () (_ BitVec 64))
(declare-fun temp861_67 () (_ BitVec 64))
(declare-fun temp861_68 () (_ BitVec 64))
(declare-fun temp861_69 () (_ BitVec 64))
(declare-fun temp861_70 () (_ BitVec 64))
(declare-fun temp861_71 () (_ BitVec 64))
(declare-fun temp861_72 () (_ BitVec 64))
(declare-fun temp861_73 () (_ BitVec 64))
(declare-fun temp861_74 () (_ BitVec 64))
(declare-fun temp861_75 () (_ BitVec 64))
(declare-fun temp861_76 () (_ BitVec 64))
(declare-fun temp861_77 () (_ BitVec 64))
(declare-fun temp861_78 () (_ BitVec 64))
(declare-fun temp861_79 () (_ BitVec 64))
(declare-fun temp861_80 () (_ BitVec 64))
(declare-fun temp861_81 () (_ BitVec 64))
(declare-fun temp861_82 () (_ BitVec 64))
(declare-fun temp861_83 () (_ BitVec 64))
(declare-fun temp861_84 () (_ BitVec 64))
(declare-fun temp861_85 () (_ BitVec 64))
(declare-fun temp861_86 () (_ BitVec 64))
(declare-fun temp861_87 () (_ BitVec 64))
(declare-fun temp861_88 () (_ BitVec 64))
(declare-fun temp861_89 () (_ BitVec 64))
(declare-fun temp861_90 () (_ BitVec 64))
(declare-fun temp861_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp861_92 () (_ BitVec 64))
(declare-fun temp861_93 () (_ BitVec 64))
(declare-fun temp861_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp861_95 () (_ BitVec 64))
(declare-fun temp861_96 () (_ BitVec 64))
(declare-fun temp861_97 () (_ BitVec 64))
(declare-fun temp861_98 () (_ BitVec 64))
(declare-fun temp861_99 () (_ BitVec 64))
(declare-fun temp861_100 () (_ BitVec 64))
(declare-fun temp861_101 () (_ BitVec 64))
(declare-fun temp861_102 () (_ BitVec 64))
(declare-fun temp861_103 () (_ BitVec 64))
(declare-fun temp861_104 () (_ BitVec 64))
(declare-fun temp861_105 () (_ BitVec 64))
(declare-fun temp861_106 () (_ BitVec 64))
(declare-fun temp861_107 () (_ BitVec 64))
(declare-fun temp861_108 () (_ BitVec 64))
(declare-fun temp861_109 () (_ BitVec 64))
(declare-fun temp861_110 () (_ BitVec 64))
(declare-fun temp861_111 () (_ BitVec 64))
(declare-fun temp861_112 () (_ BitVec 64))
(declare-fun temp861_113 () (_ BitVec 64))
(declare-fun temp861_114 () (_ BitVec 64))
(declare-fun temp861_115 () (_ BitVec 64))
(declare-fun temp861_116 () (_ BitVec 64))
(declare-fun temp861_117 () (_ BitVec 64))
(declare-fun temp861_118 () (_ BitVec 64))
(declare-fun temp861_119 () (_ BitVec 64))
(declare-fun temp861_120 () (_ BitVec 64))
(declare-fun temp861_121 () (_ BitVec 64))
(declare-fun temp861_122 () (_ BitVec 64))
(declare-fun temp861_123 () (_ BitVec 64))
(declare-fun temp861_124 () (_ BitVec 64))
(declare-fun temp861_125 () (_ BitVec 64))
(declare-fun temp861_126 () (_ BitVec 64))
(declare-fun temp861_127 () (_ BitVec 64))
(declare-fun temp861_128 () (_ BitVec 64))
(declare-fun temp861_129 () (_ BitVec 64))
(declare-fun temp861_130 () (_ BitVec 64))
(declare-fun temp861_131 () (_ BitVec 64))
(declare-fun temp861_132 () (_ BitVec 64))
(declare-fun temp861_133 () (_ BitVec 64))
(declare-fun temp861_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp861_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp861_136 () (_ BitVec 64))
(declare-fun temp861_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp861_138 () (_ BitVec 64))
(declare-fun temp861_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp861_140 () (_ BitVec 64))
(declare-fun temp861_141 () (_ BitVec 64))
(declare-fun temp861_142 () (_ BitVec 64))
(declare-fun temp861_143 () (_ BitVec 64))
(declare-fun temp861_144 () (_ BitVec 64))
(declare-fun temp861_145 () (_ BitVec 64))
(declare-fun temp861_146 () (_ BitVec 64))
(declare-fun temp861_147 () (_ BitVec 64))
(declare-fun temp861_148 () (_ BitVec 64))
(declare-fun temp861_149 () (_ BitVec 64))
(declare-fun temp861_150 () (_ BitVec 64))
(declare-fun temp861_151 () (_ BitVec 64))
(declare-fun temp861_152 () (_ BitVec 64))
(declare-fun temp861_153 () (_ BitVec 64))
(declare-fun temp861_154 () (_ BitVec 64))
(declare-fun temp861_155 () (_ BitVec 64))
(declare-fun temp861_157 () (_ BitVec 64))
(declare-fun temp861_158 () (_ BitVec 64))
(declare-fun temp861_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp861_159 () (_ BitVec 64))
(declare-fun temp861_160 () (_ BitVec 64))
(declare-fun temp861_162 () (_ BitVec 64))
(declare-fun temp861_163 () (_ BitVec 64))
(declare-fun temp861_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp861_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp861_165 () (_ BitVec 64))
(declare-fun temp861_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp861_167 () (_ BitVec 64))
(declare-fun temp861_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp861_169 () (_ BitVec 64))
(declare-fun temp861_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp861_171 () (_ BitVec 64))
(declare-fun temp861_172 () (_ BitVec 64))
(declare-fun temp861_173 () (_ BitVec 64))
(declare-fun temp861_174 () (_ BitVec 64))
(declare-fun temp861_175 () (_ BitVec 64))
(declare-fun temp861_176 () (_ BitVec 64))
(declare-fun temp861_177 () (_ BitVec 64))
(declare-fun temp861_178 () (_ BitVec 64))
(declare-fun temp861_179 () (_ BitVec 64))
(declare-fun temp861_180 () (_ BitVec 64))
(declare-fun temp861_181 () (_ BitVec 64))
(declare-fun temp861_182 () (_ BitVec 64))
(declare-fun temp861_183 () (_ BitVec 64))
(declare-fun temp861_184 () (_ BitVec 64))
(declare-fun temp861_185 () (_ BitVec 64))
(declare-fun temp861_186 () (_ BitVec 64))
(declare-fun temp861_187 () (_ BitVec 64))
(declare-fun temp861_188 () (_ BitVec 64))
(declare-fun temp861_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp861_190 () (_ BitVec 64))
(declare-fun temp861_192 () (_ BitVec 64))
(declare-fun temp861_193 () (_ BitVec 64))
(declare-fun temp861_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp861_194 () (_ BitVec 64))
(declare-fun temp861_195 () (_ BitVec 64))
(declare-fun temp861_197 () (_ BitVec 64))
(declare-fun temp861_198 () (_ BitVec 64))
(declare-fun temp861_196 () (_ BitVec 64))
(declare-fun temp861_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp861_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp861_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp861_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp861_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp861_204 () (_ BitVec 64))
(declare-fun temp861_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp861_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp861_207 () (_ BitVec 64))
(declare-fun temp861_208 () (_ BitVec 64))
(declare-fun temp861_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp861_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp861_211 () (_ BitVec 64))
(declare-fun temp861_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp861_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp861_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var5058960 () (_ BitVec 64))
(declare-fun var5321104 () (_ BitVec 64))
(declare-fun temp861_215 () (_ BitVec 64))
(assert (= temp861_1 #x0000000000000001))
(assert (= var77203 temp861_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp861_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp861_2)))
(assert (= temp861_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp861_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp861_4 #x0000000000000000))
(assert (= var210941 temp861_4))
(assert (= temp861_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp861_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp861_6 #x0000000000000000))
(assert (= var210986 temp861_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp861_7 #x0000000000000000))
(assert (= temp861_8 temp861_7))
(assert (= temp861_9 (select ARGNAME_padding_NAMEEND_VAL temp861_8)))
(assert (= temp861_10 #x0000000000000001))
(assert (= temp861_11 temp861_10))
(assert (= temp861_12 (select ARGNAME_padding_NAMEEND_VAL temp861_11)))
(assert (= temp861_13 #x0000000000000002))
(assert (= temp861_14 temp861_13))
(assert (= temp861_15 (select ARGNAME_padding_NAMEEND_VAL temp861_14)))
(assert (= temp861_16 #x0000000000000003))
(assert (= temp861_17 temp861_16))
(assert (= temp861_18 (select ARGNAME_padding_NAMEEND_VAL temp861_17)))
(assert (= temp861_19 #x0000000000000004))
(assert (= temp861_20 temp861_19))
(assert (= temp861_21 (select ARGNAME_padding_NAMEEND_VAL temp861_20)))
(assert (= temp861_22 #x0000000000000005))
(assert (= temp861_23 temp861_22))
(assert (= temp861_24 (select ARGNAME_padding_NAMEEND_VAL temp861_23)))
(assert (= temp861_25 #x0000000000000000))
(assert (= temp861_26 #x0000000000000000))
(assert (= temp861_27 temp861_26))
(assert (= temp861_28 (select ARGNAME_padding_NAMEEND_VAL temp861_27)))
(assert (= temp861_29 #x0000000000000000))
(assert (= temp861_30 #x0000000000000001))
(assert (= temp861_31 temp861_30))
(assert (= temp861_32 (select ARGNAME_padding_NAMEEND_VAL temp861_31)))
(assert (= temp861_33 #x0000000000000000))
(assert (= temp861_34 #x0000000000000002))
(assert (= temp861_35 temp861_34))
(assert (= temp861_36 (select ARGNAME_padding_NAMEEND_VAL temp861_35)))
(assert (= temp861_37 #x0000000000000000))
(assert (= temp861_38 #x0000000000000003))
(assert (= temp861_39 temp861_38))
(assert (= temp861_40 (select ARGNAME_padding_NAMEEND_VAL temp861_39)))
(assert (= temp861_41 #x0000000000000000))
(assert (= temp861_42 #x0000000000000004))
(assert (= temp861_43 temp861_42))
(assert (= temp861_44 (select ARGNAME_padding_NAMEEND_VAL temp861_43)))
(assert (= temp861_45 #x0000000000000000))
(assert (= temp861_46 #x0000000000000005))
(assert (= temp861_47 temp861_46))
(assert (= temp861_48 (select ARGNAME_padding_NAMEEND_VAL temp861_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp861_28 temp861_25)
             (bvslt temp861_32 temp861_29)
             (bvslt temp861_36 temp861_33)
             (bvslt temp861_40 temp861_37)
             (bvslt temp861_44 temp861_41)
             (bvslt temp861_48 temp861_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp861_49 #x0000000000000000))
(assert (= var1191714 temp861_49))
(assert (= temp861_50 #x0000000000000000))
(assert (= temp861_51 temp861_50))
(assert (= temp861_52 (select ARGNAME_output_padding_NAMEEND_VAL temp861_51)))
(assert (= temp861_53 #x0000000000000001))
(assert (= temp861_54 temp861_53))
(assert (= temp861_55 (select ARGNAME_output_padding_NAMEEND_VAL temp861_54)))
(assert (= temp861_56 #x0000000000000002))
(assert (= temp861_57 temp861_56))
(assert (= temp861_58 (select ARGNAME_output_padding_NAMEEND_VAL temp861_57)))
(assert (= temp861_59 #x0000000000000003))
(assert (= temp861_60 temp861_59))
(assert (= temp861_61 (select ARGNAME_output_padding_NAMEEND_VAL temp861_60)))
(assert (= temp861_62 #x0000000000000004))
(assert (= temp861_63 temp861_62))
(assert (= temp861_64 (select ARGNAME_output_padding_NAMEEND_VAL temp861_63)))
(assert (= temp861_65 #x0000000000000005))
(assert (= temp861_66 temp861_65))
(assert (= temp861_67 (select ARGNAME_output_padding_NAMEEND_VAL temp861_66)))
(assert (= temp861_68 #x0000000000000000))
(assert (= temp861_69 #x0000000000000000))
(assert (= temp861_70 temp861_69))
(assert (= temp861_71 (select ARGNAME_output_padding_NAMEEND_VAL temp861_70)))
(assert (= temp861_72 #x0000000000000000))
(assert (= temp861_73 #x0000000000000001))
(assert (= temp861_74 temp861_73))
(assert (= temp861_75 (select ARGNAME_output_padding_NAMEEND_VAL temp861_74)))
(assert (= temp861_76 #x0000000000000000))
(assert (= temp861_77 #x0000000000000002))
(assert (= temp861_78 temp861_77))
(assert (= temp861_79 (select ARGNAME_output_padding_NAMEEND_VAL temp861_78)))
(assert (= temp861_80 #x0000000000000000))
(assert (= temp861_81 #x0000000000000003))
(assert (= temp861_82 temp861_81))
(assert (= temp861_83 (select ARGNAME_output_padding_NAMEEND_VAL temp861_82)))
(assert (= temp861_84 #x0000000000000000))
(assert (= temp861_85 #x0000000000000004))
(assert (= temp861_86 temp861_85))
(assert (= temp861_87 (select ARGNAME_output_padding_NAMEEND_VAL temp861_86)))
(assert (= temp861_88 #x0000000000000000))
(assert (= temp861_89 #x0000000000000005))
(assert (= temp861_90 temp861_89))
(assert (= temp861_91 (select ARGNAME_output_padding_NAMEEND_VAL temp861_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp861_71 temp861_68)
             (bvslt temp861_75 temp861_72)
             (bvslt temp861_79 temp861_76)
             (bvslt temp861_83 temp861_80)
             (bvslt temp861_87 temp861_84)
             (bvslt temp861_91 temp861_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp861_92 #x0000000000000000))
(assert (= var1191725 temp861_92))
(assert (= temp861_93 #x0000000000000000))
(assert (= temp861_94 temp861_93))
(assert (= temp861_95 (select ARGNAME_stride_NAMEEND_VAL temp861_94)))
(assert (= temp861_96 #x0000000000000001))
(assert (= temp861_97 temp861_96))
(assert (= temp861_98 (select ARGNAME_stride_NAMEEND_VAL temp861_97)))
(assert (= temp861_99 #x0000000000000002))
(assert (= temp861_100 temp861_99))
(assert (= temp861_101 (select ARGNAME_stride_NAMEEND_VAL temp861_100)))
(assert (= temp861_102 #x0000000000000003))
(assert (= temp861_103 temp861_102))
(assert (= temp861_104 (select ARGNAME_stride_NAMEEND_VAL temp861_103)))
(assert (= temp861_105 #x0000000000000004))
(assert (= temp861_106 temp861_105))
(assert (= temp861_107 (select ARGNAME_stride_NAMEEND_VAL temp861_106)))
(assert (= temp861_108 #x0000000000000005))
(assert (= temp861_109 temp861_108))
(assert (= temp861_110 (select ARGNAME_stride_NAMEEND_VAL temp861_109)))
(assert (= temp861_111 #x0000000000000000))
(assert (= temp861_112 #x0000000000000000))
(assert (= temp861_113 temp861_112))
(assert (= temp861_114 (select ARGNAME_stride_NAMEEND_VAL temp861_113)))
(assert (= temp861_115 #x0000000000000000))
(assert (= temp861_116 #x0000000000000001))
(assert (= temp861_117 temp861_116))
(assert (= temp861_118 (select ARGNAME_stride_NAMEEND_VAL temp861_117)))
(assert (= temp861_119 #x0000000000000000))
(assert (= temp861_120 #x0000000000000002))
(assert (= temp861_121 temp861_120))
(assert (= temp861_122 (select ARGNAME_stride_NAMEEND_VAL temp861_121)))
(assert (= temp861_123 #x0000000000000000))
(assert (= temp861_124 #x0000000000000003))
(assert (= temp861_125 temp861_124))
(assert (= temp861_126 (select ARGNAME_stride_NAMEEND_VAL temp861_125)))
(assert (= temp861_127 #x0000000000000000))
(assert (= temp861_128 #x0000000000000004))
(assert (= temp861_129 temp861_128))
(assert (= temp861_130 (select ARGNAME_stride_NAMEEND_VAL temp861_129)))
(assert (= temp861_131 #x0000000000000000))
(assert (= temp861_132 #x0000000000000005))
(assert (= temp861_133 temp861_132))
(assert (= temp861_134 (select ARGNAME_stride_NAMEEND_VAL temp861_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp861_114 temp861_111)
             (bvsle temp861_118 temp861_115)
             (bvsle temp861_122 temp861_119)
             (bvsle temp861_126 temp861_123)
             (bvsle temp861_130 temp861_127)
             (bvsle temp861_134 temp861_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp861_135 #x0000000000000000))
(assert (= var1191735 temp861_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp861_136 #x0000000000000001))
(assert (= var1191747 temp861_136))
(assert (= temp861_137 #x0000000000000000))
(assert (= var1179826 temp861_137))
(assert (= temp861_138 #x0000000000000000))
(assert (= temp861_139 temp861_138))
(assert (= temp861_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp861_139)))
(assert (= temp861_141 #x0000000000000001))
(assert (= temp861_142 temp861_141))
(assert (= temp861_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp861_142)))
(assert (= temp861_144 #x0000000000000002))
(assert (= temp861_145 temp861_144))
(assert (= temp861_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp861_145)))
(assert (= temp861_147 #x0000000000000003))
(assert (= temp861_148 temp861_147))
(assert (= temp861_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp861_148)))
(assert (= temp861_150 #x0000000000000004))
(assert (= temp861_151 temp861_150))
(assert (= temp861_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp861_151)))
(assert (= temp861_153 #x0000000000000005))
(assert (= temp861_154 temp861_153))
(assert (= temp861_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp861_154)))
(assert (= temp861_157 var1179826))
(assert (= temp861_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp861_157)))
(assert (= temp861_156 temp861_158))
(assert (= var1191780
   (ite (bvslt temp861_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp861_159 #x0000000000000000))
(assert (= var1191780 temp861_159))
(assert (= temp861_160 #x0000000000000000))
(assert (= var1179826 temp861_160))
(assert (= temp861_162 var1179826))
(assert (= temp861_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp861_162)))
(assert (= temp861_161 temp861_163))
(assert (= var1191802 (bvsmod temp861_161 ARGNAME_groups_NAMEEND)))
(assert (= temp861_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp861_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp861_165 #x0000000000000001))
(assert (= var1191803 temp861_165))
(assert (= temp861_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp861_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp861_167 #x0000000000000001))
(assert (= var1191823 temp861_167))
(assert (= temp861_168 #x0000000000000001))
(assert (= var1180714 temp861_168))
(assert (= temp861_169 #x0000000000000000))
(assert (= temp861_170 temp861_169))
(assert (= temp861_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp861_170)))
(assert (= temp861_172 #x0000000000000001))
(assert (= temp861_173 temp861_172))
(assert (= temp861_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp861_173)))
(assert (= temp861_175 #x0000000000000002))
(assert (= temp861_176 temp861_175))
(assert (= temp861_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp861_176)))
(assert (= temp861_178 #x0000000000000003))
(assert (= temp861_179 temp861_178))
(assert (= temp861_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp861_179)))
(assert (= temp861_181 #x0000000000000004))
(assert (= temp861_182 temp861_181))
(assert (= temp861_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp861_182)))
(assert (= temp861_184 #x0000000000000005))
(assert (= temp861_185 temp861_184))
(assert (= temp861_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp861_185)))
(assert (= temp861_187 #x0000000000000000))
(assert (= temp861_188
   (ite (bvslt var1180714 temp861_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp861_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp861_188)))
(assert (= var1191831 temp861_189))
(assert (bvslt (ite (bvslt var1180714 temp861_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp861_190 #x0000000000000001))
(assert (= var1180714 temp861_190))
(assert (= temp861_192 var1180714))
(assert (= temp861_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp861_192)))
(assert (= temp861_191 temp861_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp861_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp861_194 #x0000000000000001))
(assert (= var1191836 temp861_194))
(assert (= temp861_195 #x0000000000000000))
(assert (= var1179826 temp861_195))
(assert (= temp861_197 var1179826))
(assert (= temp861_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp861_197)))
(assert (= temp861_196 temp861_198))
(assert (= temp861_199 #x0000000000000002))
(assert (= var1586025 temp861_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp861_200 #x0000000000000001))
(assert (= var1191993 temp861_200))
(assert (= temp861_201 #x0000000000000001))
(assert (= var2700303 temp861_201))
(assert (= temp861_202 #x0000000000000001))
(assert (= var2962447 temp861_202))
(assert (= temp861_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp861_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp861_204 #x0000000000000001))
(assert (= var211058 temp861_204))
(assert (= temp861_205 #x0000000000000001))
(assert (= var211188 temp861_205))
(assert (= var3879401 var211188))
(assert (= temp861_206 #x0000000000000000))
(assert (= var3866802 temp861_206))
(assert (= temp861_207 #x0000000000000000))
(assert (= temp861_208
   (ite (bvslt var3866802 temp861_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp861_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp861_208)))
(assert (= var3879420 temp861_209))
(assert (bvslt (ite (bvslt var3866802 temp861_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp861_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp861_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp861_211 #x0000000000000001))
(assert (= var3879421 temp861_211))
(assert (= temp861_212 #x0000000000000000))
(assert (= var4079423 temp861_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp861_213 #x0000000000000002))
(assert (= var4208259 temp861_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp861_214 #x0000000000000000))
(assert (= var4273820 temp861_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var5058960 var211201))
(assert (= var5321104 var211201))
(assert (= temp861_215 #x0000000000000001))
(assert (= var211058 temp861_215))
(model-add temp861_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp861_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp861_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp861_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





