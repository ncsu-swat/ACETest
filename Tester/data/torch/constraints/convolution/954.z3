(declare-fun temp1272_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp1272_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1272_3 () (_ BitVec 64))
(declare-fun temp1272_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1272_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp1272_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1272_7 () (_ BitVec 64))
(declare-fun temp1272_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1272_9 () (_ BitVec 64))
(declare-fun temp1272_10 () (_ BitVec 64))
(declare-fun temp1272_11 () (_ BitVec 64))
(declare-fun temp1272_12 () (_ BitVec 64))
(declare-fun temp1272_13 () (_ BitVec 64))
(declare-fun temp1272_14 () (_ BitVec 64))
(declare-fun temp1272_15 () (_ BitVec 64))
(declare-fun temp1272_16 () (_ BitVec 64))
(declare-fun temp1272_17 () (_ BitVec 64))
(declare-fun temp1272_18 () (_ BitVec 64))
(declare-fun temp1272_19 () (_ BitVec 64))
(declare-fun temp1272_20 () (_ BitVec 64))
(declare-fun temp1272_21 () (_ BitVec 64))
(declare-fun temp1272_22 () (_ BitVec 64))
(declare-fun temp1272_23 () (_ BitVec 64))
(declare-fun temp1272_24 () (_ BitVec 64))
(declare-fun temp1272_25 () (_ BitVec 64))
(declare-fun temp1272_26 () (_ BitVec 64))
(declare-fun temp1272_27 () (_ BitVec 64))
(declare-fun temp1272_28 () (_ BitVec 64))
(declare-fun temp1272_29 () (_ BitVec 64))
(declare-fun temp1272_30 () (_ BitVec 64))
(declare-fun temp1272_31 () (_ BitVec 64))
(declare-fun temp1272_32 () (_ BitVec 64))
(declare-fun temp1272_33 () (_ BitVec 64))
(declare-fun temp1272_34 () (_ BitVec 64))
(declare-fun temp1272_35 () (_ BitVec 64))
(declare-fun temp1272_36 () (_ BitVec 64))
(declare-fun temp1272_37 () (_ BitVec 64))
(declare-fun temp1272_38 () (_ BitVec 64))
(declare-fun temp1272_39 () (_ BitVec 64))
(declare-fun temp1272_40 () (_ BitVec 64))
(declare-fun temp1272_41 () (_ BitVec 64))
(declare-fun temp1272_42 () (_ BitVec 64))
(declare-fun temp1272_43 () (_ BitVec 64))
(declare-fun temp1272_44 () (_ BitVec 64))
(declare-fun temp1272_45 () (_ BitVec 64))
(declare-fun temp1272_46 () (_ BitVec 64))
(declare-fun temp1272_47 () (_ BitVec 64))
(declare-fun temp1272_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp1272_49 () (_ BitVec 64))
(declare-fun temp1272_50 () (_ BitVec 64))
(declare-fun temp1272_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1272_52 () (_ BitVec 64))
(declare-fun temp1272_53 () (_ BitVec 64))
(declare-fun temp1272_54 () (_ BitVec 64))
(declare-fun temp1272_55 () (_ BitVec 64))
(declare-fun temp1272_56 () (_ BitVec 64))
(declare-fun temp1272_57 () (_ BitVec 64))
(declare-fun temp1272_58 () (_ BitVec 64))
(declare-fun temp1272_59 () (_ BitVec 64))
(declare-fun temp1272_60 () (_ BitVec 64))
(declare-fun temp1272_61 () (_ BitVec 64))
(declare-fun temp1272_62 () (_ BitVec 64))
(declare-fun temp1272_63 () (_ BitVec 64))
(declare-fun temp1272_64 () (_ BitVec 64))
(declare-fun temp1272_65 () (_ BitVec 64))
(declare-fun temp1272_66 () (_ BitVec 64))
(declare-fun temp1272_67 () (_ BitVec 64))
(declare-fun temp1272_68 () (_ BitVec 64))
(declare-fun temp1272_69 () (_ BitVec 64))
(declare-fun temp1272_70 () (_ BitVec 64))
(declare-fun temp1272_71 () (_ BitVec 64))
(declare-fun temp1272_72 () (_ BitVec 64))
(declare-fun temp1272_73 () (_ BitVec 64))
(declare-fun temp1272_74 () (_ BitVec 64))
(declare-fun temp1272_75 () (_ BitVec 64))
(declare-fun temp1272_76 () (_ BitVec 64))
(declare-fun temp1272_77 () (_ BitVec 64))
(declare-fun temp1272_78 () (_ BitVec 64))
(declare-fun temp1272_79 () (_ BitVec 64))
(declare-fun temp1272_80 () (_ BitVec 64))
(declare-fun temp1272_81 () (_ BitVec 64))
(declare-fun temp1272_82 () (_ BitVec 64))
(declare-fun temp1272_83 () (_ BitVec 64))
(declare-fun temp1272_84 () (_ BitVec 64))
(declare-fun temp1272_85 () (_ BitVec 64))
(declare-fun temp1272_86 () (_ BitVec 64))
(declare-fun temp1272_87 () (_ BitVec 64))
(declare-fun temp1272_88 () (_ BitVec 64))
(declare-fun temp1272_89 () (_ BitVec 64))
(declare-fun temp1272_90 () (_ BitVec 64))
(declare-fun temp1272_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp1272_92 () (_ BitVec 64))
(declare-fun temp1272_93 () (_ BitVec 64))
(declare-fun temp1272_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1272_95 () (_ BitVec 64))
(declare-fun temp1272_96 () (_ BitVec 64))
(declare-fun temp1272_97 () (_ BitVec 64))
(declare-fun temp1272_98 () (_ BitVec 64))
(declare-fun temp1272_99 () (_ BitVec 64))
(declare-fun temp1272_100 () (_ BitVec 64))
(declare-fun temp1272_101 () (_ BitVec 64))
(declare-fun temp1272_102 () (_ BitVec 64))
(declare-fun temp1272_103 () (_ BitVec 64))
(declare-fun temp1272_104 () (_ BitVec 64))
(declare-fun temp1272_105 () (_ BitVec 64))
(declare-fun temp1272_106 () (_ BitVec 64))
(declare-fun temp1272_107 () (_ BitVec 64))
(declare-fun temp1272_108 () (_ BitVec 64))
(declare-fun temp1272_109 () (_ BitVec 64))
(declare-fun temp1272_110 () (_ BitVec 64))
(declare-fun temp1272_111 () (_ BitVec 64))
(declare-fun temp1272_112 () (_ BitVec 64))
(declare-fun temp1272_113 () (_ BitVec 64))
(declare-fun temp1272_114 () (_ BitVec 64))
(declare-fun temp1272_115 () (_ BitVec 64))
(declare-fun temp1272_116 () (_ BitVec 64))
(declare-fun temp1272_117 () (_ BitVec 64))
(declare-fun temp1272_118 () (_ BitVec 64))
(declare-fun temp1272_119 () (_ BitVec 64))
(declare-fun temp1272_120 () (_ BitVec 64))
(declare-fun temp1272_121 () (_ BitVec 64))
(declare-fun temp1272_122 () (_ BitVec 64))
(declare-fun temp1272_123 () (_ BitVec 64))
(declare-fun temp1272_124 () (_ BitVec 64))
(declare-fun temp1272_125 () (_ BitVec 64))
(declare-fun temp1272_126 () (_ BitVec 64))
(declare-fun temp1272_127 () (_ BitVec 64))
(declare-fun temp1272_128 () (_ BitVec 64))
(declare-fun temp1272_129 () (_ BitVec 64))
(declare-fun temp1272_130 () (_ BitVec 64))
(declare-fun temp1272_131 () (_ BitVec 64))
(declare-fun temp1272_132 () (_ BitVec 64))
(declare-fun temp1272_133 () (_ BitVec 64))
(declare-fun temp1272_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp1272_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp1272_136 () (_ BitVec 64))
(declare-fun temp1272_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp1272_138 () (_ BitVec 64))
(declare-fun temp1272_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1272_140 () (_ BitVec 64))
(declare-fun temp1272_141 () (_ BitVec 64))
(declare-fun temp1272_142 () (_ BitVec 64))
(declare-fun temp1272_143 () (_ BitVec 64))
(declare-fun temp1272_144 () (_ BitVec 64))
(declare-fun temp1272_145 () (_ BitVec 64))
(declare-fun temp1272_146 () (_ BitVec 64))
(declare-fun temp1272_147 () (_ BitVec 64))
(declare-fun temp1272_148 () (_ BitVec 64))
(declare-fun temp1272_149 () (_ BitVec 64))
(declare-fun temp1272_150 () (_ BitVec 64))
(declare-fun temp1272_151 () (_ BitVec 64))
(declare-fun temp1272_152 () (_ BitVec 64))
(declare-fun temp1272_153 () (_ BitVec 64))
(declare-fun temp1272_154 () (_ BitVec 64))
(declare-fun temp1272_155 () (_ BitVec 64))
(declare-fun temp1272_157 () (_ BitVec 64))
(declare-fun temp1272_158 () (_ BitVec 64))
(declare-fun temp1272_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp1272_159 () (_ BitVec 64))
(declare-fun temp1272_160 () (_ BitVec 64))
(declare-fun temp1272_162 () (_ BitVec 64))
(declare-fun temp1272_163 () (_ BitVec 64))
(declare-fun temp1272_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp1272_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp1272_165 () (_ BitVec 64))
(declare-fun temp1272_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp1272_167 () (_ BitVec 64))
(declare-fun temp1272_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp1272_169 () (_ BitVec 64))
(declare-fun temp1272_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1272_171 () (_ BitVec 64))
(declare-fun temp1272_172 () (_ BitVec 64))
(declare-fun temp1272_173 () (_ BitVec 64))
(declare-fun temp1272_174 () (_ BitVec 64))
(declare-fun temp1272_175 () (_ BitVec 64))
(declare-fun temp1272_176 () (_ BitVec 64))
(declare-fun temp1272_177 () (_ BitVec 64))
(declare-fun temp1272_178 () (_ BitVec 64))
(declare-fun temp1272_179 () (_ BitVec 64))
(declare-fun temp1272_180 () (_ BitVec 64))
(declare-fun temp1272_181 () (_ BitVec 64))
(declare-fun temp1272_182 () (_ BitVec 64))
(declare-fun temp1272_183 () (_ BitVec 64))
(declare-fun temp1272_184 () (_ BitVec 64))
(declare-fun temp1272_185 () (_ BitVec 64))
(declare-fun temp1272_186 () (_ BitVec 64))
(declare-fun temp1272_187 () (_ BitVec 64))
(declare-fun temp1272_188 () (_ BitVec 64))
(declare-fun temp1272_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp1272_190 () (_ BitVec 64))
(declare-fun temp1272_192 () (_ BitVec 64))
(declare-fun temp1272_193 () (_ BitVec 64))
(declare-fun temp1272_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp1272_194 () (_ BitVec 64))
(declare-fun temp1272_195 () (_ BitVec 64))
(declare-fun temp1272_197 () (_ BitVec 64))
(declare-fun temp1272_198 () (_ BitVec 64))
(declare-fun temp1272_196 () (_ BitVec 64))
(declare-fun temp1272_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp1272_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp1272_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp1272_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp1272_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp1272_204 () (_ BitVec 64))
(declare-fun temp1272_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp1272_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp1272_207 () (_ BitVec 64))
(declare-fun temp1272_208 () (_ BitVec 64))
(declare-fun temp1272_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp1272_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp1272_211 () (_ BitVec 64))
(declare-fun temp1272_212 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp1272_213 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp1272_214 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp1272_216 () (_ BitVec 64))
(declare-fun temp1272_215 () (_ BitVec 64))
(declare-fun temp1272_217 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp1272_218 () (_ BitVec 64))
(declare-fun temp1272_219 () (_ BitVec 64))
(declare-fun temp1272_220 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp1272_221 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp1272_222 () (_ BitVec 64))
(declare-fun temp1272_224 () (_ BitVec 64))
(declare-fun temp1272_223 () (_ BitVec 64))
(declare-fun temp1272_225 () (_ BitVec 64))
(assert (= temp1272_1 #x0000000000000001))
(assert (= var77203 temp1272_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp1272_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp1272_2)))
(assert (= temp1272_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1272_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1272_4 #x0000000000000000))
(assert (= var210941 temp1272_4))
(assert (= temp1272_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp1272_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1272_6 #x0000000000000000))
(assert (= var210986 temp1272_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp1272_7 #x0000000000000000))
(assert (= temp1272_8 temp1272_7))
(assert (= temp1272_9 (select ARGNAME_padding_NAMEEND_VAL temp1272_8)))
(assert (= temp1272_10 #x0000000000000001))
(assert (= temp1272_11 temp1272_10))
(assert (= temp1272_12 (select ARGNAME_padding_NAMEEND_VAL temp1272_11)))
(assert (= temp1272_13 #x0000000000000002))
(assert (= temp1272_14 temp1272_13))
(assert (= temp1272_15 (select ARGNAME_padding_NAMEEND_VAL temp1272_14)))
(assert (= temp1272_16 #x0000000000000003))
(assert (= temp1272_17 temp1272_16))
(assert (= temp1272_18 (select ARGNAME_padding_NAMEEND_VAL temp1272_17)))
(assert (= temp1272_19 #x0000000000000004))
(assert (= temp1272_20 temp1272_19))
(assert (= temp1272_21 (select ARGNAME_padding_NAMEEND_VAL temp1272_20)))
(assert (= temp1272_22 #x0000000000000005))
(assert (= temp1272_23 temp1272_22))
(assert (= temp1272_24 (select ARGNAME_padding_NAMEEND_VAL temp1272_23)))
(assert (= temp1272_25 #x0000000000000000))
(assert (= temp1272_26 #x0000000000000000))
(assert (= temp1272_27 temp1272_26))
(assert (= temp1272_28 (select ARGNAME_padding_NAMEEND_VAL temp1272_27)))
(assert (= temp1272_29 #x0000000000000000))
(assert (= temp1272_30 #x0000000000000001))
(assert (= temp1272_31 temp1272_30))
(assert (= temp1272_32 (select ARGNAME_padding_NAMEEND_VAL temp1272_31)))
(assert (= temp1272_33 #x0000000000000000))
(assert (= temp1272_34 #x0000000000000002))
(assert (= temp1272_35 temp1272_34))
(assert (= temp1272_36 (select ARGNAME_padding_NAMEEND_VAL temp1272_35)))
(assert (= temp1272_37 #x0000000000000000))
(assert (= temp1272_38 #x0000000000000003))
(assert (= temp1272_39 temp1272_38))
(assert (= temp1272_40 (select ARGNAME_padding_NAMEEND_VAL temp1272_39)))
(assert (= temp1272_41 #x0000000000000000))
(assert (= temp1272_42 #x0000000000000004))
(assert (= temp1272_43 temp1272_42))
(assert (= temp1272_44 (select ARGNAME_padding_NAMEEND_VAL temp1272_43)))
(assert (= temp1272_45 #x0000000000000000))
(assert (= temp1272_46 #x0000000000000005))
(assert (= temp1272_47 temp1272_46))
(assert (= temp1272_48 (select ARGNAME_padding_NAMEEND_VAL temp1272_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp1272_28 temp1272_25)
             (bvslt temp1272_32 temp1272_29)
             (bvslt temp1272_36 temp1272_33)
             (bvslt temp1272_40 temp1272_37)
             (bvslt temp1272_44 temp1272_41)
             (bvslt temp1272_48 temp1272_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1272_49 #x0000000000000000))
(assert (= var1191714 temp1272_49))
(assert (= temp1272_50 #x0000000000000000))
(assert (= temp1272_51 temp1272_50))
(assert (= temp1272_52 (select ARGNAME_output_padding_NAMEEND_VAL temp1272_51)))
(assert (= temp1272_53 #x0000000000000001))
(assert (= temp1272_54 temp1272_53))
(assert (= temp1272_55 (select ARGNAME_output_padding_NAMEEND_VAL temp1272_54)))
(assert (= temp1272_56 #x0000000000000002))
(assert (= temp1272_57 temp1272_56))
(assert (= temp1272_58 (select ARGNAME_output_padding_NAMEEND_VAL temp1272_57)))
(assert (= temp1272_59 #x0000000000000003))
(assert (= temp1272_60 temp1272_59))
(assert (= temp1272_61 (select ARGNAME_output_padding_NAMEEND_VAL temp1272_60)))
(assert (= temp1272_62 #x0000000000000004))
(assert (= temp1272_63 temp1272_62))
(assert (= temp1272_64 (select ARGNAME_output_padding_NAMEEND_VAL temp1272_63)))
(assert (= temp1272_65 #x0000000000000005))
(assert (= temp1272_66 temp1272_65))
(assert (= temp1272_67 (select ARGNAME_output_padding_NAMEEND_VAL temp1272_66)))
(assert (= temp1272_68 #x0000000000000000))
(assert (= temp1272_69 #x0000000000000000))
(assert (= temp1272_70 temp1272_69))
(assert (= temp1272_71 (select ARGNAME_output_padding_NAMEEND_VAL temp1272_70)))
(assert (= temp1272_72 #x0000000000000000))
(assert (= temp1272_73 #x0000000000000001))
(assert (= temp1272_74 temp1272_73))
(assert (= temp1272_75 (select ARGNAME_output_padding_NAMEEND_VAL temp1272_74)))
(assert (= temp1272_76 #x0000000000000000))
(assert (= temp1272_77 #x0000000000000002))
(assert (= temp1272_78 temp1272_77))
(assert (= temp1272_79 (select ARGNAME_output_padding_NAMEEND_VAL temp1272_78)))
(assert (= temp1272_80 #x0000000000000000))
(assert (= temp1272_81 #x0000000000000003))
(assert (= temp1272_82 temp1272_81))
(assert (= temp1272_83 (select ARGNAME_output_padding_NAMEEND_VAL temp1272_82)))
(assert (= temp1272_84 #x0000000000000000))
(assert (= temp1272_85 #x0000000000000004))
(assert (= temp1272_86 temp1272_85))
(assert (= temp1272_87 (select ARGNAME_output_padding_NAMEEND_VAL temp1272_86)))
(assert (= temp1272_88 #x0000000000000000))
(assert (= temp1272_89 #x0000000000000005))
(assert (= temp1272_90 temp1272_89))
(assert (= temp1272_91 (select ARGNAME_output_padding_NAMEEND_VAL temp1272_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp1272_71 temp1272_68)
             (bvslt temp1272_75 temp1272_72)
             (bvslt temp1272_79 temp1272_76)
             (bvslt temp1272_83 temp1272_80)
             (bvslt temp1272_87 temp1272_84)
             (bvslt temp1272_91 temp1272_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1272_92 #x0000000000000000))
(assert (= var1191725 temp1272_92))
(assert (= temp1272_93 #x0000000000000000))
(assert (= temp1272_94 temp1272_93))
(assert (= temp1272_95 (select ARGNAME_stride_NAMEEND_VAL temp1272_94)))
(assert (= temp1272_96 #x0000000000000001))
(assert (= temp1272_97 temp1272_96))
(assert (= temp1272_98 (select ARGNAME_stride_NAMEEND_VAL temp1272_97)))
(assert (= temp1272_99 #x0000000000000002))
(assert (= temp1272_100 temp1272_99))
(assert (= temp1272_101 (select ARGNAME_stride_NAMEEND_VAL temp1272_100)))
(assert (= temp1272_102 #x0000000000000003))
(assert (= temp1272_103 temp1272_102))
(assert (= temp1272_104 (select ARGNAME_stride_NAMEEND_VAL temp1272_103)))
(assert (= temp1272_105 #x0000000000000004))
(assert (= temp1272_106 temp1272_105))
(assert (= temp1272_107 (select ARGNAME_stride_NAMEEND_VAL temp1272_106)))
(assert (= temp1272_108 #x0000000000000005))
(assert (= temp1272_109 temp1272_108))
(assert (= temp1272_110 (select ARGNAME_stride_NAMEEND_VAL temp1272_109)))
(assert (= temp1272_111 #x0000000000000000))
(assert (= temp1272_112 #x0000000000000000))
(assert (= temp1272_113 temp1272_112))
(assert (= temp1272_114 (select ARGNAME_stride_NAMEEND_VAL temp1272_113)))
(assert (= temp1272_115 #x0000000000000000))
(assert (= temp1272_116 #x0000000000000001))
(assert (= temp1272_117 temp1272_116))
(assert (= temp1272_118 (select ARGNAME_stride_NAMEEND_VAL temp1272_117)))
(assert (= temp1272_119 #x0000000000000000))
(assert (= temp1272_120 #x0000000000000002))
(assert (= temp1272_121 temp1272_120))
(assert (= temp1272_122 (select ARGNAME_stride_NAMEEND_VAL temp1272_121)))
(assert (= temp1272_123 #x0000000000000000))
(assert (= temp1272_124 #x0000000000000003))
(assert (= temp1272_125 temp1272_124))
(assert (= temp1272_126 (select ARGNAME_stride_NAMEEND_VAL temp1272_125)))
(assert (= temp1272_127 #x0000000000000000))
(assert (= temp1272_128 #x0000000000000004))
(assert (= temp1272_129 temp1272_128))
(assert (= temp1272_130 (select ARGNAME_stride_NAMEEND_VAL temp1272_129)))
(assert (= temp1272_131 #x0000000000000000))
(assert (= temp1272_132 #x0000000000000005))
(assert (= temp1272_133 temp1272_132))
(assert (= temp1272_134 (select ARGNAME_stride_NAMEEND_VAL temp1272_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp1272_114 temp1272_111)
             (bvsle temp1272_118 temp1272_115)
             (bvsle temp1272_122 temp1272_119)
             (bvsle temp1272_126 temp1272_123)
             (bvsle temp1272_130 temp1272_127)
             (bvsle temp1272_134 temp1272_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1272_135 #x0000000000000000))
(assert (= var1191735 temp1272_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1272_136 #x0000000000000001))
(assert (= var1191747 temp1272_136))
(assert (= temp1272_137 #x0000000000000000))
(assert (= var1179826 temp1272_137))
(assert (= temp1272_138 #x0000000000000000))
(assert (= temp1272_139 temp1272_138))
(assert (= temp1272_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1272_139)))
(assert (= temp1272_141 #x0000000000000001))
(assert (= temp1272_142 temp1272_141))
(assert (= temp1272_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1272_142)))
(assert (= temp1272_144 #x0000000000000002))
(assert (= temp1272_145 temp1272_144))
(assert (= temp1272_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1272_145)))
(assert (= temp1272_147 #x0000000000000003))
(assert (= temp1272_148 temp1272_147))
(assert (= temp1272_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1272_148)))
(assert (= temp1272_150 #x0000000000000004))
(assert (= temp1272_151 temp1272_150))
(assert (= temp1272_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1272_151)))
(assert (= temp1272_153 #x0000000000000005))
(assert (= temp1272_154 temp1272_153))
(assert (= temp1272_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1272_154)))
(assert (= temp1272_157 var1179826))
(assert (= temp1272_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1272_157)))
(assert (= temp1272_156 temp1272_158))
(assert (= var1191780
   (ite (bvslt temp1272_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1272_159 #x0000000000000000))
(assert (= var1191780 temp1272_159))
(assert (= temp1272_160 #x0000000000000000))
(assert (= var1179826 temp1272_160))
(assert (= temp1272_162 var1179826))
(assert (= temp1272_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1272_162)))
(assert (= temp1272_161 temp1272_163))
(assert (= var1191802 (bvsmod temp1272_161 ARGNAME_groups_NAMEEND)))
(assert (= temp1272_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp1272_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp1272_165 #x0000000000000001))
(assert (= var1191803 temp1272_165))
(assert (= temp1272_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp1272_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1272_167 #x0000000000000001))
(assert (= var1191823 temp1272_167))
(assert (= temp1272_168 #x0000000000000001))
(assert (= var1180714 temp1272_168))
(assert (= temp1272_169 #x0000000000000000))
(assert (= temp1272_170 temp1272_169))
(assert (= temp1272_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp1272_170)))
(assert (= temp1272_172 #x0000000000000001))
(assert (= temp1272_173 temp1272_172))
(assert (= temp1272_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp1272_173)))
(assert (= temp1272_175 #x0000000000000002))
(assert (= temp1272_176 temp1272_175))
(assert (= temp1272_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp1272_176)))
(assert (= temp1272_178 #x0000000000000003))
(assert (= temp1272_179 temp1272_178))
(assert (= temp1272_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp1272_179)))
(assert (= temp1272_181 #x0000000000000004))
(assert (= temp1272_182 temp1272_181))
(assert (= temp1272_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp1272_182)))
(assert (= temp1272_184 #x0000000000000005))
(assert (= temp1272_185 temp1272_184))
(assert (= temp1272_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp1272_185)))
(assert (= temp1272_187 #x0000000000000000))
(assert (= temp1272_188
   (ite (bvslt var1180714 temp1272_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp1272_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp1272_188)))
(assert (= var1191831 temp1272_189))
(assert (bvslt (ite (bvslt var1180714 temp1272_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1272_190 #x0000000000000001))
(assert (= var1180714 temp1272_190))
(assert (= temp1272_192 var1180714))
(assert (= temp1272_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1272_192)))
(assert (= temp1272_191 temp1272_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp1272_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp1272_194 #x0000000000000001))
(assert (= var1191836 temp1272_194))
(assert (= temp1272_195 #x0000000000000000))
(assert (= var1179826 temp1272_195))
(assert (= temp1272_197 var1179826))
(assert (= temp1272_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1272_197)))
(assert (= temp1272_196 temp1272_198))
(assert (= temp1272_199 #x0000000000000002))
(assert (= var1586025 temp1272_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp1272_200 #x0000000000000001))
(assert (= var1191993 temp1272_200))
(assert (= temp1272_201 #x0000000000000001))
(assert (= var2700303 temp1272_201))
(assert (= temp1272_202 #x0000000000000001))
(assert (= var2962447 temp1272_202))
(assert (= temp1272_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1272_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1272_204 #x0000000000000001))
(assert (= var211058 temp1272_204))
(assert (= temp1272_205 #x0000000000000001))
(assert (= var211188 temp1272_205))
(assert (= var3879401 var211188))
(assert (= temp1272_206 #x0000000000000000))
(assert (= var3866802 temp1272_206))
(assert (= temp1272_207 #x0000000000000000))
(assert (= temp1272_208
   (ite (bvslt var3866802 temp1272_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp1272_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp1272_208)))
(assert (= var3879420 temp1272_209))
(assert (bvslt (ite (bvslt var3866802 temp1272_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1272_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp1272_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp1272_211 #x0000000000000001))
(assert (= var3879421 temp1272_211))
(assert (= temp1272_212 #x0000000000000000))
(assert (= var4133117 temp1272_212))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp1272_213 #x0000000000000002))
(assert (= var4339331 temp1272_213))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1272_214 #x0000000000000000))
(assert (= var4404892 temp1272_214))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp1272_216 #xffffffffffffffff))
(assert (= temp1272_215 temp1272_216))
(assert (= temp1272_217 #x0000000000000001))
(assert (= var197674 temp1272_217))
(assert (= temp1272_218 #x0000000000000000))
(assert (= temp1272_219
   (ite (bvslt var197674 temp1272_218)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp1272_220 (select ARGNAME_input_NAMEEND_DIMSIZE temp1272_219)))
(assert (= var211595 temp1272_220))
(assert (bvslt (ite (bvslt var197674 temp1272_218)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1272_221 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp1272_221) #x0000000000000001 #x0000000000000000)))
(assert (= temp1272_222 #x0000000000000001))
(assert (= var211596 temp1272_222))
(assert (= temp1272_224 #xffffffffffffffff))
(assert (= temp1272_223 temp1272_224))
(assert (= temp1272_225 #x0000000000000001))
(assert (= var211058 temp1272_225))
(model-add temp1272_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp1272_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1272_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp1272_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




