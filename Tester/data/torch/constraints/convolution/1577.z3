(declare-fun temp10897_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10897_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10897_3 () (_ BitVec 64))
(declare-fun temp10897_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10897_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10897_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10897_7 () (_ BitVec 64))
(declare-fun temp10897_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10897_9 () (_ BitVec 64))
(declare-fun temp10897_10 () (_ BitVec 64))
(declare-fun temp10897_11 () (_ BitVec 64))
(declare-fun temp10897_12 () (_ BitVec 64))
(declare-fun temp10897_13 () (_ BitVec 64))
(declare-fun temp10897_14 () (_ BitVec 64))
(declare-fun temp10897_15 () (_ BitVec 64))
(declare-fun temp10897_16 () (_ BitVec 64))
(declare-fun temp10897_17 () (_ BitVec 64))
(declare-fun temp10897_18 () (_ BitVec 64))
(declare-fun temp10897_19 () (_ BitVec 64))
(declare-fun temp10897_20 () (_ BitVec 64))
(declare-fun temp10897_21 () (_ BitVec 64))
(declare-fun temp10897_22 () (_ BitVec 64))
(declare-fun temp10897_23 () (_ BitVec 64))
(declare-fun temp10897_24 () (_ BitVec 64))
(declare-fun temp10897_25 () (_ BitVec 64))
(declare-fun temp10897_26 () (_ BitVec 64))
(declare-fun temp10897_27 () (_ BitVec 64))
(declare-fun temp10897_28 () (_ BitVec 64))
(declare-fun temp10897_29 () (_ BitVec 64))
(declare-fun temp10897_30 () (_ BitVec 64))
(declare-fun temp10897_31 () (_ BitVec 64))
(declare-fun temp10897_32 () (_ BitVec 64))
(declare-fun temp10897_33 () (_ BitVec 64))
(declare-fun temp10897_34 () (_ BitVec 64))
(declare-fun temp10897_35 () (_ BitVec 64))
(declare-fun temp10897_36 () (_ BitVec 64))
(declare-fun temp10897_37 () (_ BitVec 64))
(declare-fun temp10897_38 () (_ BitVec 64))
(declare-fun temp10897_39 () (_ BitVec 64))
(declare-fun temp10897_40 () (_ BitVec 64))
(declare-fun temp10897_41 () (_ BitVec 64))
(declare-fun temp10897_42 () (_ BitVec 64))
(declare-fun temp10897_43 () (_ BitVec 64))
(declare-fun temp10897_44 () (_ BitVec 64))
(declare-fun temp10897_45 () (_ BitVec 64))
(declare-fun temp10897_46 () (_ BitVec 64))
(declare-fun temp10897_47 () (_ BitVec 64))
(declare-fun temp10897_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10897_49 () (_ BitVec 64))
(declare-fun temp10897_50 () (_ BitVec 64))
(declare-fun temp10897_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10897_52 () (_ BitVec 64))
(declare-fun temp10897_53 () (_ BitVec 64))
(declare-fun temp10897_54 () (_ BitVec 64))
(declare-fun temp10897_55 () (_ BitVec 64))
(declare-fun temp10897_56 () (_ BitVec 64))
(declare-fun temp10897_57 () (_ BitVec 64))
(declare-fun temp10897_58 () (_ BitVec 64))
(declare-fun temp10897_59 () (_ BitVec 64))
(declare-fun temp10897_60 () (_ BitVec 64))
(declare-fun temp10897_61 () (_ BitVec 64))
(declare-fun temp10897_62 () (_ BitVec 64))
(declare-fun temp10897_63 () (_ BitVec 64))
(declare-fun temp10897_64 () (_ BitVec 64))
(declare-fun temp10897_65 () (_ BitVec 64))
(declare-fun temp10897_66 () (_ BitVec 64))
(declare-fun temp10897_67 () (_ BitVec 64))
(declare-fun temp10897_68 () (_ BitVec 64))
(declare-fun temp10897_69 () (_ BitVec 64))
(declare-fun temp10897_70 () (_ BitVec 64))
(declare-fun temp10897_71 () (_ BitVec 64))
(declare-fun temp10897_72 () (_ BitVec 64))
(declare-fun temp10897_73 () (_ BitVec 64))
(declare-fun temp10897_74 () (_ BitVec 64))
(declare-fun temp10897_75 () (_ BitVec 64))
(declare-fun temp10897_76 () (_ BitVec 64))
(declare-fun temp10897_77 () (_ BitVec 64))
(declare-fun temp10897_78 () (_ BitVec 64))
(declare-fun temp10897_79 () (_ BitVec 64))
(declare-fun temp10897_80 () (_ BitVec 64))
(declare-fun temp10897_81 () (_ BitVec 64))
(declare-fun temp10897_82 () (_ BitVec 64))
(declare-fun temp10897_83 () (_ BitVec 64))
(declare-fun temp10897_84 () (_ BitVec 64))
(declare-fun temp10897_85 () (_ BitVec 64))
(declare-fun temp10897_86 () (_ BitVec 64))
(declare-fun temp10897_87 () (_ BitVec 64))
(declare-fun temp10897_88 () (_ BitVec 64))
(declare-fun temp10897_89 () (_ BitVec 64))
(declare-fun temp10897_90 () (_ BitVec 64))
(declare-fun temp10897_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10897_92 () (_ BitVec 64))
(declare-fun temp10897_93 () (_ BitVec 64))
(declare-fun temp10897_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10897_95 () (_ BitVec 64))
(declare-fun temp10897_96 () (_ BitVec 64))
(declare-fun temp10897_97 () (_ BitVec 64))
(declare-fun temp10897_98 () (_ BitVec 64))
(declare-fun temp10897_99 () (_ BitVec 64))
(declare-fun temp10897_100 () (_ BitVec 64))
(declare-fun temp10897_101 () (_ BitVec 64))
(declare-fun temp10897_102 () (_ BitVec 64))
(declare-fun temp10897_103 () (_ BitVec 64))
(declare-fun temp10897_104 () (_ BitVec 64))
(declare-fun temp10897_105 () (_ BitVec 64))
(declare-fun temp10897_106 () (_ BitVec 64))
(declare-fun temp10897_107 () (_ BitVec 64))
(declare-fun temp10897_108 () (_ BitVec 64))
(declare-fun temp10897_109 () (_ BitVec 64))
(declare-fun temp10897_110 () (_ BitVec 64))
(declare-fun temp10897_111 () (_ BitVec 64))
(declare-fun temp10897_112 () (_ BitVec 64))
(declare-fun temp10897_113 () (_ BitVec 64))
(declare-fun temp10897_114 () (_ BitVec 64))
(declare-fun temp10897_115 () (_ BitVec 64))
(declare-fun temp10897_116 () (_ BitVec 64))
(declare-fun temp10897_117 () (_ BitVec 64))
(declare-fun temp10897_118 () (_ BitVec 64))
(declare-fun temp10897_119 () (_ BitVec 64))
(declare-fun temp10897_120 () (_ BitVec 64))
(declare-fun temp10897_121 () (_ BitVec 64))
(declare-fun temp10897_122 () (_ BitVec 64))
(declare-fun temp10897_123 () (_ BitVec 64))
(declare-fun temp10897_124 () (_ BitVec 64))
(declare-fun temp10897_125 () (_ BitVec 64))
(declare-fun temp10897_126 () (_ BitVec 64))
(declare-fun temp10897_127 () (_ BitVec 64))
(declare-fun temp10897_128 () (_ BitVec 64))
(declare-fun temp10897_129 () (_ BitVec 64))
(declare-fun temp10897_130 () (_ BitVec 64))
(declare-fun temp10897_131 () (_ BitVec 64))
(declare-fun temp10897_132 () (_ BitVec 64))
(declare-fun temp10897_133 () (_ BitVec 64))
(declare-fun temp10897_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10897_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10897_136 () (_ BitVec 64))
(declare-fun temp10897_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10897_138 () (_ BitVec 64))
(declare-fun temp10897_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10897_140 () (_ BitVec 64))
(declare-fun temp10897_141 () (_ BitVec 64))
(declare-fun temp10897_142 () (_ BitVec 64))
(declare-fun temp10897_143 () (_ BitVec 64))
(declare-fun temp10897_144 () (_ BitVec 64))
(declare-fun temp10897_145 () (_ BitVec 64))
(declare-fun temp10897_146 () (_ BitVec 64))
(declare-fun temp10897_147 () (_ BitVec 64))
(declare-fun temp10897_148 () (_ BitVec 64))
(declare-fun temp10897_149 () (_ BitVec 64))
(declare-fun temp10897_150 () (_ BitVec 64))
(declare-fun temp10897_151 () (_ BitVec 64))
(declare-fun temp10897_152 () (_ BitVec 64))
(declare-fun temp10897_153 () (_ BitVec 64))
(declare-fun temp10897_154 () (_ BitVec 64))
(declare-fun temp10897_155 () (_ BitVec 64))
(declare-fun temp10897_157 () (_ BitVec 64))
(declare-fun temp10897_158 () (_ BitVec 64))
(declare-fun temp10897_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10897_159 () (_ BitVec 64))
(declare-fun temp10897_160 () (_ BitVec 64))
(declare-fun temp10897_162 () (_ BitVec 64))
(declare-fun temp10897_163 () (_ BitVec 64))
(declare-fun temp10897_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10897_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10897_165 () (_ BitVec 64))
(declare-fun temp10897_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10897_167 () (_ BitVec 64))
(declare-fun temp10897_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10897_169 () (_ BitVec 64))
(declare-fun temp10897_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10897_171 () (_ BitVec 64))
(declare-fun temp10897_172 () (_ BitVec 64))
(declare-fun temp10897_173 () (_ BitVec 64))
(declare-fun temp10897_174 () (_ BitVec 64))
(declare-fun temp10897_175 () (_ BitVec 64))
(declare-fun temp10897_176 () (_ BitVec 64))
(declare-fun temp10897_177 () (_ BitVec 64))
(declare-fun temp10897_178 () (_ BitVec 64))
(declare-fun temp10897_179 () (_ BitVec 64))
(declare-fun temp10897_180 () (_ BitVec 64))
(declare-fun temp10897_181 () (_ BitVec 64))
(declare-fun temp10897_182 () (_ BitVec 64))
(declare-fun temp10897_183 () (_ BitVec 64))
(declare-fun temp10897_184 () (_ BitVec 64))
(declare-fun temp10897_185 () (_ BitVec 64))
(declare-fun temp10897_186 () (_ BitVec 64))
(declare-fun temp10897_187 () (_ BitVec 64))
(declare-fun temp10897_188 () (_ BitVec 64))
(declare-fun temp10897_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10897_190 () (_ BitVec 64))
(declare-fun temp10897_192 () (_ BitVec 64))
(declare-fun temp10897_193 () (_ BitVec 64))
(declare-fun temp10897_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10897_194 () (_ BitVec 64))
(declare-fun temp10897_195 () (_ BitVec 64))
(declare-fun temp10897_197 () (_ BitVec 64))
(declare-fun temp10897_198 () (_ BitVec 64))
(declare-fun temp10897_196 () (_ BitVec 64))
(declare-fun temp10897_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10897_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10897_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10897_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10897_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10897_204 () (_ BitVec 64))
(declare-fun temp10897_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10897_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10897_207 () (_ BitVec 64))
(declare-fun temp10897_208 () (_ BitVec 64))
(declare-fun temp10897_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10897_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10897_211 () (_ BitVec 64))
(declare-fun temp10897_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10897_213 () (_ BitVec 64))
(declare-fun temp10897_214 () (_ BitVec 64))
(declare-fun temp10897_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10897_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10897_217 () (_ BitVec 64))
(declare-fun temp10897_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10897_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10897_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var5255568 () (_ BitVec 64))
(declare-fun var5517712 () (_ BitVec 64))
(declare-fun temp10897_221 () (_ BitVec 64))
(declare-fun var5845392 () (_ BitVec 64))
(declare-fun temp10897_222 () (_ BitVec 64))
(assert (= temp10897_1 #x0000000000000001))
(assert (= var77203 temp10897_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10897_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10897_2)))
(assert (= temp10897_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10897_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10897_4 #x0000000000000000))
(assert (= var210941 temp10897_4))
(assert (= temp10897_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10897_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10897_6 #x0000000000000000))
(assert (= var210986 temp10897_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10897_7 #x0000000000000000))
(assert (= temp10897_8 temp10897_7))
(assert (= temp10897_9 (select ARGNAME_padding_NAMEEND_VAL temp10897_8)))
(assert (= temp10897_10 #x0000000000000001))
(assert (= temp10897_11 temp10897_10))
(assert (= temp10897_12 (select ARGNAME_padding_NAMEEND_VAL temp10897_11)))
(assert (= temp10897_13 #x0000000000000002))
(assert (= temp10897_14 temp10897_13))
(assert (= temp10897_15 (select ARGNAME_padding_NAMEEND_VAL temp10897_14)))
(assert (= temp10897_16 #x0000000000000003))
(assert (= temp10897_17 temp10897_16))
(assert (= temp10897_18 (select ARGNAME_padding_NAMEEND_VAL temp10897_17)))
(assert (= temp10897_19 #x0000000000000004))
(assert (= temp10897_20 temp10897_19))
(assert (= temp10897_21 (select ARGNAME_padding_NAMEEND_VAL temp10897_20)))
(assert (= temp10897_22 #x0000000000000005))
(assert (= temp10897_23 temp10897_22))
(assert (= temp10897_24 (select ARGNAME_padding_NAMEEND_VAL temp10897_23)))
(assert (= temp10897_25 #x0000000000000000))
(assert (= temp10897_26 #x0000000000000000))
(assert (= temp10897_27 temp10897_26))
(assert (= temp10897_28 (select ARGNAME_padding_NAMEEND_VAL temp10897_27)))
(assert (= temp10897_29 #x0000000000000000))
(assert (= temp10897_30 #x0000000000000001))
(assert (= temp10897_31 temp10897_30))
(assert (= temp10897_32 (select ARGNAME_padding_NAMEEND_VAL temp10897_31)))
(assert (= temp10897_33 #x0000000000000000))
(assert (= temp10897_34 #x0000000000000002))
(assert (= temp10897_35 temp10897_34))
(assert (= temp10897_36 (select ARGNAME_padding_NAMEEND_VAL temp10897_35)))
(assert (= temp10897_37 #x0000000000000000))
(assert (= temp10897_38 #x0000000000000003))
(assert (= temp10897_39 temp10897_38))
(assert (= temp10897_40 (select ARGNAME_padding_NAMEEND_VAL temp10897_39)))
(assert (= temp10897_41 #x0000000000000000))
(assert (= temp10897_42 #x0000000000000004))
(assert (= temp10897_43 temp10897_42))
(assert (= temp10897_44 (select ARGNAME_padding_NAMEEND_VAL temp10897_43)))
(assert (= temp10897_45 #x0000000000000000))
(assert (= temp10897_46 #x0000000000000005))
(assert (= temp10897_47 temp10897_46))
(assert (= temp10897_48 (select ARGNAME_padding_NAMEEND_VAL temp10897_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10897_28 temp10897_25)
             (bvslt temp10897_32 temp10897_29)
             (bvslt temp10897_36 temp10897_33)
             (bvslt temp10897_40 temp10897_37)
             (bvslt temp10897_44 temp10897_41)
             (bvslt temp10897_48 temp10897_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10897_49 #x0000000000000000))
(assert (= var1191714 temp10897_49))
(assert (= temp10897_50 #x0000000000000000))
(assert (= temp10897_51 temp10897_50))
(assert (= temp10897_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10897_51)))
(assert (= temp10897_53 #x0000000000000001))
(assert (= temp10897_54 temp10897_53))
(assert (= temp10897_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10897_54)))
(assert (= temp10897_56 #x0000000000000002))
(assert (= temp10897_57 temp10897_56))
(assert (= temp10897_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10897_57)))
(assert (= temp10897_59 #x0000000000000003))
(assert (= temp10897_60 temp10897_59))
(assert (= temp10897_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10897_60)))
(assert (= temp10897_62 #x0000000000000004))
(assert (= temp10897_63 temp10897_62))
(assert (= temp10897_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10897_63)))
(assert (= temp10897_65 #x0000000000000005))
(assert (= temp10897_66 temp10897_65))
(assert (= temp10897_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10897_66)))
(assert (= temp10897_68 #x0000000000000000))
(assert (= temp10897_69 #x0000000000000000))
(assert (= temp10897_70 temp10897_69))
(assert (= temp10897_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10897_70)))
(assert (= temp10897_72 #x0000000000000000))
(assert (= temp10897_73 #x0000000000000001))
(assert (= temp10897_74 temp10897_73))
(assert (= temp10897_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10897_74)))
(assert (= temp10897_76 #x0000000000000000))
(assert (= temp10897_77 #x0000000000000002))
(assert (= temp10897_78 temp10897_77))
(assert (= temp10897_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10897_78)))
(assert (= temp10897_80 #x0000000000000000))
(assert (= temp10897_81 #x0000000000000003))
(assert (= temp10897_82 temp10897_81))
(assert (= temp10897_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10897_82)))
(assert (= temp10897_84 #x0000000000000000))
(assert (= temp10897_85 #x0000000000000004))
(assert (= temp10897_86 temp10897_85))
(assert (= temp10897_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10897_86)))
(assert (= temp10897_88 #x0000000000000000))
(assert (= temp10897_89 #x0000000000000005))
(assert (= temp10897_90 temp10897_89))
(assert (= temp10897_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10897_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10897_71 temp10897_68)
             (bvslt temp10897_75 temp10897_72)
             (bvslt temp10897_79 temp10897_76)
             (bvslt temp10897_83 temp10897_80)
             (bvslt temp10897_87 temp10897_84)
             (bvslt temp10897_91 temp10897_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10897_92 #x0000000000000000))
(assert (= var1191725 temp10897_92))
(assert (= temp10897_93 #x0000000000000000))
(assert (= temp10897_94 temp10897_93))
(assert (= temp10897_95 (select ARGNAME_stride_NAMEEND_VAL temp10897_94)))
(assert (= temp10897_96 #x0000000000000001))
(assert (= temp10897_97 temp10897_96))
(assert (= temp10897_98 (select ARGNAME_stride_NAMEEND_VAL temp10897_97)))
(assert (= temp10897_99 #x0000000000000002))
(assert (= temp10897_100 temp10897_99))
(assert (= temp10897_101 (select ARGNAME_stride_NAMEEND_VAL temp10897_100)))
(assert (= temp10897_102 #x0000000000000003))
(assert (= temp10897_103 temp10897_102))
(assert (= temp10897_104 (select ARGNAME_stride_NAMEEND_VAL temp10897_103)))
(assert (= temp10897_105 #x0000000000000004))
(assert (= temp10897_106 temp10897_105))
(assert (= temp10897_107 (select ARGNAME_stride_NAMEEND_VAL temp10897_106)))
(assert (= temp10897_108 #x0000000000000005))
(assert (= temp10897_109 temp10897_108))
(assert (= temp10897_110 (select ARGNAME_stride_NAMEEND_VAL temp10897_109)))
(assert (= temp10897_111 #x0000000000000000))
(assert (= temp10897_112 #x0000000000000000))
(assert (= temp10897_113 temp10897_112))
(assert (= temp10897_114 (select ARGNAME_stride_NAMEEND_VAL temp10897_113)))
(assert (= temp10897_115 #x0000000000000000))
(assert (= temp10897_116 #x0000000000000001))
(assert (= temp10897_117 temp10897_116))
(assert (= temp10897_118 (select ARGNAME_stride_NAMEEND_VAL temp10897_117)))
(assert (= temp10897_119 #x0000000000000000))
(assert (= temp10897_120 #x0000000000000002))
(assert (= temp10897_121 temp10897_120))
(assert (= temp10897_122 (select ARGNAME_stride_NAMEEND_VAL temp10897_121)))
(assert (= temp10897_123 #x0000000000000000))
(assert (= temp10897_124 #x0000000000000003))
(assert (= temp10897_125 temp10897_124))
(assert (= temp10897_126 (select ARGNAME_stride_NAMEEND_VAL temp10897_125)))
(assert (= temp10897_127 #x0000000000000000))
(assert (= temp10897_128 #x0000000000000004))
(assert (= temp10897_129 temp10897_128))
(assert (= temp10897_130 (select ARGNAME_stride_NAMEEND_VAL temp10897_129)))
(assert (= temp10897_131 #x0000000000000000))
(assert (= temp10897_132 #x0000000000000005))
(assert (= temp10897_133 temp10897_132))
(assert (= temp10897_134 (select ARGNAME_stride_NAMEEND_VAL temp10897_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10897_114 temp10897_111)
             (bvsle temp10897_118 temp10897_115)
             (bvsle temp10897_122 temp10897_119)
             (bvsle temp10897_126 temp10897_123)
             (bvsle temp10897_130 temp10897_127)
             (bvsle temp10897_134 temp10897_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10897_135 #x0000000000000000))
(assert (= var1191735 temp10897_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10897_136 #x0000000000000001))
(assert (= var1191747 temp10897_136))
(assert (= temp10897_137 #x0000000000000000))
(assert (= var1179826 temp10897_137))
(assert (= temp10897_138 #x0000000000000000))
(assert (= temp10897_139 temp10897_138))
(assert (= temp10897_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10897_139)))
(assert (= temp10897_141 #x0000000000000001))
(assert (= temp10897_142 temp10897_141))
(assert (= temp10897_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10897_142)))
(assert (= temp10897_144 #x0000000000000002))
(assert (= temp10897_145 temp10897_144))
(assert (= temp10897_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10897_145)))
(assert (= temp10897_147 #x0000000000000003))
(assert (= temp10897_148 temp10897_147))
(assert (= temp10897_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10897_148)))
(assert (= temp10897_150 #x0000000000000004))
(assert (= temp10897_151 temp10897_150))
(assert (= temp10897_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10897_151)))
(assert (= temp10897_153 #x0000000000000005))
(assert (= temp10897_154 temp10897_153))
(assert (= temp10897_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10897_154)))
(assert (= temp10897_157 var1179826))
(assert (= temp10897_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10897_157)))
(assert (= temp10897_156 temp10897_158))
(assert (= var1191780
   (ite (bvslt temp10897_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10897_159 #x0000000000000000))
(assert (= var1191780 temp10897_159))
(assert (= temp10897_160 #x0000000000000000))
(assert (= var1179826 temp10897_160))
(assert (= temp10897_162 var1179826))
(assert (= temp10897_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10897_162)))
(assert (= temp10897_161 temp10897_163))
(assert (= var1191802 (bvsmod temp10897_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10897_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10897_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10897_165 #x0000000000000001))
(assert (= var1191803 temp10897_165))
(assert (= temp10897_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10897_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10897_167 #x0000000000000001))
(assert (= var1191823 temp10897_167))
(assert (= temp10897_168 #x0000000000000001))
(assert (= var1180714 temp10897_168))
(assert (= temp10897_169 #x0000000000000000))
(assert (= temp10897_170 temp10897_169))
(assert (= temp10897_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10897_170)))
(assert (= temp10897_172 #x0000000000000001))
(assert (= temp10897_173 temp10897_172))
(assert (= temp10897_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10897_173)))
(assert (= temp10897_175 #x0000000000000002))
(assert (= temp10897_176 temp10897_175))
(assert (= temp10897_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10897_176)))
(assert (= temp10897_178 #x0000000000000003))
(assert (= temp10897_179 temp10897_178))
(assert (= temp10897_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10897_179)))
(assert (= temp10897_181 #x0000000000000004))
(assert (= temp10897_182 temp10897_181))
(assert (= temp10897_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10897_182)))
(assert (= temp10897_184 #x0000000000000005))
(assert (= temp10897_185 temp10897_184))
(assert (= temp10897_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10897_185)))
(assert (= temp10897_187 #x0000000000000000))
(assert (= temp10897_188
   (ite (bvslt var1180714 temp10897_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10897_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10897_188)))
(assert (= var1191831 temp10897_189))
(assert (bvslt (ite (bvslt var1180714 temp10897_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10897_190 #x0000000000000001))
(assert (= var1180714 temp10897_190))
(assert (= temp10897_192 var1180714))
(assert (= temp10897_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10897_192)))
(assert (= temp10897_191 temp10897_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10897_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10897_194 #x0000000000000001))
(assert (= var1191836 temp10897_194))
(assert (= temp10897_195 #x0000000000000000))
(assert (= var1179826 temp10897_195))
(assert (= temp10897_197 var1179826))
(assert (= temp10897_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10897_197)))
(assert (= temp10897_196 temp10897_198))
(assert (= temp10897_199 #x0000000000000002))
(assert (= var1586025 temp10897_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10897_200 #x0000000000000001))
(assert (= var1191993 temp10897_200))
(assert (= temp10897_201 #x0000000000000001))
(assert (= var2700303 temp10897_201))
(assert (= temp10897_202 #x0000000000000001))
(assert (= var2962447 temp10897_202))
(assert (= temp10897_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10897_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10897_204 #x0000000000000001))
(assert (= var211058 temp10897_204))
(assert (= temp10897_205 #x0000000000000001))
(assert (= var211188 temp10897_205))
(assert (= var3879401 var211188))
(assert (= temp10897_206 #x0000000000000000))
(assert (= var3866802 temp10897_206))
(assert (= temp10897_207 #x0000000000000000))
(assert (= temp10897_208
   (ite (bvslt var3866802 temp10897_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10897_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10897_208)))
(assert (= var3879420 temp10897_209))
(assert (bvslt (ite (bvslt var3866802 temp10897_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10897_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10897_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10897_211 #x0000000000000000))
(assert (= var3879421 temp10897_211))
(assert (= temp10897_212 #x0000000000000001))
(assert (= var3867690 temp10897_212))
(assert (= temp10897_213 #x0000000000000000))
(assert (= temp10897_214
   (ite (bvslt var3867690 temp10897_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10897_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10897_214)))
(assert (= var3879423 temp10897_215))
(assert (bvslt (ite (bvslt var3867690 temp10897_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10897_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10897_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10897_217 #x0000000000000001))
(assert (= var3879424 temp10897_217))
(assert (= temp10897_218 #x0000000000000000))
(assert (= var4133117 temp10897_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10897_219 #x0000000000000002))
(assert (= var4339331 temp10897_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10897_220 #x0000000000000000))
(assert (= var4404892 temp10897_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var5255568 var211201))
(assert (= var5517712 var211201))
(assert (= temp10897_221 #x0000000000000000))
(assert (= var5845392 temp10897_221))
(assert (= temp10897_222 #x0000000000000001))
(assert (= var211058 temp10897_222))
(model-add temp10897_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10897_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10897_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10897_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))



