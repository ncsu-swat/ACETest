(declare-fun temp61_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp61_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp61_3 () (_ BitVec 64))
(declare-fun temp61_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp61_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp61_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp61_7 () (_ BitVec 64))
(declare-fun temp61_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp61_9 () (_ BitVec 64))
(declare-fun temp61_10 () (_ BitVec 64))
(declare-fun temp61_11 () (_ BitVec 64))
(declare-fun temp61_12 () (_ BitVec 64))
(declare-fun temp61_13 () (_ BitVec 64))
(declare-fun temp61_14 () (_ BitVec 64))
(declare-fun temp61_15 () (_ BitVec 64))
(declare-fun temp61_16 () (_ BitVec 64))
(declare-fun temp61_17 () (_ BitVec 64))
(declare-fun temp61_18 () (_ BitVec 64))
(declare-fun temp61_19 () (_ BitVec 64))
(declare-fun temp61_20 () (_ BitVec 64))
(declare-fun temp61_21 () (_ BitVec 64))
(declare-fun temp61_22 () (_ BitVec 64))
(declare-fun temp61_23 () (_ BitVec 64))
(declare-fun temp61_24 () (_ BitVec 64))
(declare-fun temp61_25 () (_ BitVec 64))
(declare-fun temp61_26 () (_ BitVec 64))
(declare-fun temp61_27 () (_ BitVec 64))
(declare-fun temp61_28 () (_ BitVec 64))
(declare-fun temp61_29 () (_ BitVec 64))
(declare-fun temp61_30 () (_ BitVec 64))
(declare-fun temp61_31 () (_ BitVec 64))
(declare-fun temp61_32 () (_ BitVec 64))
(declare-fun temp61_33 () (_ BitVec 64))
(declare-fun temp61_34 () (_ BitVec 64))
(declare-fun temp61_35 () (_ BitVec 64))
(declare-fun temp61_36 () (_ BitVec 64))
(declare-fun temp61_37 () (_ BitVec 64))
(declare-fun temp61_38 () (_ BitVec 64))
(declare-fun temp61_39 () (_ BitVec 64))
(declare-fun temp61_40 () (_ BitVec 64))
(declare-fun temp61_41 () (_ BitVec 64))
(declare-fun temp61_42 () (_ BitVec 64))
(declare-fun temp61_43 () (_ BitVec 64))
(declare-fun temp61_44 () (_ BitVec 64))
(declare-fun temp61_45 () (_ BitVec 64))
(declare-fun temp61_46 () (_ BitVec 64))
(declare-fun temp61_47 () (_ BitVec 64))
(declare-fun temp61_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp61_49 () (_ BitVec 64))
(declare-fun temp61_50 () (_ BitVec 64))
(declare-fun temp61_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp61_52 () (_ BitVec 64))
(declare-fun temp61_53 () (_ BitVec 64))
(declare-fun temp61_54 () (_ BitVec 64))
(declare-fun temp61_55 () (_ BitVec 64))
(declare-fun temp61_56 () (_ BitVec 64))
(declare-fun temp61_57 () (_ BitVec 64))
(declare-fun temp61_58 () (_ BitVec 64))
(declare-fun temp61_59 () (_ BitVec 64))
(declare-fun temp61_60 () (_ BitVec 64))
(declare-fun temp61_61 () (_ BitVec 64))
(declare-fun temp61_62 () (_ BitVec 64))
(declare-fun temp61_63 () (_ BitVec 64))
(declare-fun temp61_64 () (_ BitVec 64))
(declare-fun temp61_65 () (_ BitVec 64))
(declare-fun temp61_66 () (_ BitVec 64))
(declare-fun temp61_67 () (_ BitVec 64))
(declare-fun temp61_68 () (_ BitVec 64))
(declare-fun temp61_69 () (_ BitVec 64))
(declare-fun temp61_70 () (_ BitVec 64))
(declare-fun temp61_71 () (_ BitVec 64))
(declare-fun temp61_72 () (_ BitVec 64))
(declare-fun temp61_73 () (_ BitVec 64))
(declare-fun temp61_74 () (_ BitVec 64))
(declare-fun temp61_75 () (_ BitVec 64))
(declare-fun temp61_76 () (_ BitVec 64))
(declare-fun temp61_77 () (_ BitVec 64))
(declare-fun temp61_78 () (_ BitVec 64))
(declare-fun temp61_79 () (_ BitVec 64))
(declare-fun temp61_80 () (_ BitVec 64))
(declare-fun temp61_81 () (_ BitVec 64))
(declare-fun temp61_82 () (_ BitVec 64))
(declare-fun temp61_83 () (_ BitVec 64))
(declare-fun temp61_84 () (_ BitVec 64))
(declare-fun temp61_85 () (_ BitVec 64))
(declare-fun temp61_86 () (_ BitVec 64))
(declare-fun temp61_87 () (_ BitVec 64))
(declare-fun temp61_88 () (_ BitVec 64))
(declare-fun temp61_89 () (_ BitVec 64))
(declare-fun temp61_90 () (_ BitVec 64))
(declare-fun temp61_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp61_92 () (_ BitVec 64))
(declare-fun temp61_93 () (_ BitVec 64))
(declare-fun temp61_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp61_95 () (_ BitVec 64))
(declare-fun temp61_96 () (_ BitVec 64))
(declare-fun temp61_97 () (_ BitVec 64))
(declare-fun temp61_98 () (_ BitVec 64))
(declare-fun temp61_99 () (_ BitVec 64))
(declare-fun temp61_100 () (_ BitVec 64))
(declare-fun temp61_101 () (_ BitVec 64))
(declare-fun temp61_102 () (_ BitVec 64))
(declare-fun temp61_103 () (_ BitVec 64))
(declare-fun temp61_104 () (_ BitVec 64))
(declare-fun temp61_105 () (_ BitVec 64))
(declare-fun temp61_106 () (_ BitVec 64))
(declare-fun temp61_107 () (_ BitVec 64))
(declare-fun temp61_108 () (_ BitVec 64))
(declare-fun temp61_109 () (_ BitVec 64))
(declare-fun temp61_110 () (_ BitVec 64))
(declare-fun temp61_111 () (_ BitVec 64))
(declare-fun temp61_112 () (_ BitVec 64))
(declare-fun temp61_113 () (_ BitVec 64))
(declare-fun temp61_114 () (_ BitVec 64))
(declare-fun temp61_115 () (_ BitVec 64))
(declare-fun temp61_116 () (_ BitVec 64))
(declare-fun temp61_117 () (_ BitVec 64))
(declare-fun temp61_118 () (_ BitVec 64))
(declare-fun temp61_119 () (_ BitVec 64))
(declare-fun temp61_120 () (_ BitVec 64))
(declare-fun temp61_121 () (_ BitVec 64))
(declare-fun temp61_122 () (_ BitVec 64))
(declare-fun temp61_123 () (_ BitVec 64))
(declare-fun temp61_124 () (_ BitVec 64))
(declare-fun temp61_125 () (_ BitVec 64))
(declare-fun temp61_126 () (_ BitVec 64))
(declare-fun temp61_127 () (_ BitVec 64))
(declare-fun temp61_128 () (_ BitVec 64))
(declare-fun temp61_129 () (_ BitVec 64))
(declare-fun temp61_130 () (_ BitVec 64))
(declare-fun temp61_131 () (_ BitVec 64))
(declare-fun temp61_132 () (_ BitVec 64))
(declare-fun temp61_133 () (_ BitVec 64))
(declare-fun temp61_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp61_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp61_136 () (_ BitVec 64))
(declare-fun temp61_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp61_138 () (_ BitVec 64))
(declare-fun temp61_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp61_140 () (_ BitVec 64))
(declare-fun temp61_141 () (_ BitVec 64))
(declare-fun temp61_142 () (_ BitVec 64))
(declare-fun temp61_143 () (_ BitVec 64))
(declare-fun temp61_144 () (_ BitVec 64))
(declare-fun temp61_145 () (_ BitVec 64))
(declare-fun temp61_146 () (_ BitVec 64))
(declare-fun temp61_147 () (_ BitVec 64))
(declare-fun temp61_148 () (_ BitVec 64))
(declare-fun temp61_149 () (_ BitVec 64))
(declare-fun temp61_150 () (_ BitVec 64))
(declare-fun temp61_151 () (_ BitVec 64))
(declare-fun temp61_152 () (_ BitVec 64))
(declare-fun temp61_153 () (_ BitVec 64))
(declare-fun temp61_154 () (_ BitVec 64))
(declare-fun temp61_155 () (_ BitVec 64))
(declare-fun temp61_157 () (_ BitVec 64))
(declare-fun temp61_158 () (_ BitVec 64))
(declare-fun temp61_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp61_159 () (_ BitVec 64))
(declare-fun temp61_160 () (_ BitVec 64))
(declare-fun temp61_162 () (_ BitVec 64))
(declare-fun temp61_163 () (_ BitVec 64))
(declare-fun temp61_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp61_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp61_165 () (_ BitVec 64))
(declare-fun temp61_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp61_167 () (_ BitVec 64))
(declare-fun temp61_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp61_169 () (_ BitVec 64))
(declare-fun temp61_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp61_171 () (_ BitVec 64))
(declare-fun temp61_172 () (_ BitVec 64))
(declare-fun temp61_173 () (_ BitVec 64))
(declare-fun temp61_174 () (_ BitVec 64))
(declare-fun temp61_175 () (_ BitVec 64))
(declare-fun temp61_176 () (_ BitVec 64))
(declare-fun temp61_177 () (_ BitVec 64))
(declare-fun temp61_178 () (_ BitVec 64))
(declare-fun temp61_179 () (_ BitVec 64))
(declare-fun temp61_180 () (_ BitVec 64))
(declare-fun temp61_181 () (_ BitVec 64))
(declare-fun temp61_182 () (_ BitVec 64))
(declare-fun temp61_183 () (_ BitVec 64))
(declare-fun temp61_184 () (_ BitVec 64))
(declare-fun temp61_185 () (_ BitVec 64))
(declare-fun temp61_186 () (_ BitVec 64))
(declare-fun temp61_187 () (_ BitVec 64))
(declare-fun temp61_188 () (_ BitVec 64))
(declare-fun temp61_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp61_190 () (_ BitVec 64))
(declare-fun temp61_192 () (_ BitVec 64))
(declare-fun temp61_193 () (_ BitVec 64))
(declare-fun temp61_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp61_194 () (_ BitVec 64))
(declare-fun temp61_195 () (_ BitVec 64))
(declare-fun temp61_197 () (_ BitVec 64))
(declare-fun temp61_198 () (_ BitVec 64))
(declare-fun temp61_196 () (_ BitVec 64))
(declare-fun temp61_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp61_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp61_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp61_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp61_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp61_204 () (_ BitVec 64))
(declare-fun temp61_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp61_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp61_207 () (_ BitVec 64))
(declare-fun temp61_208 () (_ BitVec 64))
(declare-fun temp61_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp61_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp61_211 () (_ BitVec 64))
(declare-fun temp61_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp61_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp61_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4993424 () (_ BitVec 64))
(declare-fun var211494 () (_ BitVec 64))
(declare-fun temp61_215 () (_ BitVec 64))
(declare-fun var211495 () (_ BitVec 64))
(declare-fun temp61_216 () (_ BitVec 64))
(assert (= temp61_1 #x0000000000000001))
(assert (= var77203 temp61_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp61_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp61_2)))
(assert (= temp61_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp61_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp61_4 #x0000000000000000))
(assert (= var210941 temp61_4))
(assert (= temp61_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp61_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp61_6 #x0000000000000000))
(assert (= var210986 temp61_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp61_7 #x0000000000000000))
(assert (= temp61_8 temp61_7))
(assert (= temp61_9 (select ARGNAME_padding_NAMEEND_VAL temp61_8)))
(assert (= temp61_10 #x0000000000000001))
(assert (= temp61_11 temp61_10))
(assert (= temp61_12 (select ARGNAME_padding_NAMEEND_VAL temp61_11)))
(assert (= temp61_13 #x0000000000000002))
(assert (= temp61_14 temp61_13))
(assert (= temp61_15 (select ARGNAME_padding_NAMEEND_VAL temp61_14)))
(assert (= temp61_16 #x0000000000000003))
(assert (= temp61_17 temp61_16))
(assert (= temp61_18 (select ARGNAME_padding_NAMEEND_VAL temp61_17)))
(assert (= temp61_19 #x0000000000000004))
(assert (= temp61_20 temp61_19))
(assert (= temp61_21 (select ARGNAME_padding_NAMEEND_VAL temp61_20)))
(assert (= temp61_22 #x0000000000000005))
(assert (= temp61_23 temp61_22))
(assert (= temp61_24 (select ARGNAME_padding_NAMEEND_VAL temp61_23)))
(assert (= temp61_25 #x0000000000000000))
(assert (= temp61_26 #x0000000000000000))
(assert (= temp61_27 temp61_26))
(assert (= temp61_28 (select ARGNAME_padding_NAMEEND_VAL temp61_27)))
(assert (= temp61_29 #x0000000000000000))
(assert (= temp61_30 #x0000000000000001))
(assert (= temp61_31 temp61_30))
(assert (= temp61_32 (select ARGNAME_padding_NAMEEND_VAL temp61_31)))
(assert (= temp61_33 #x0000000000000000))
(assert (= temp61_34 #x0000000000000002))
(assert (= temp61_35 temp61_34))
(assert (= temp61_36 (select ARGNAME_padding_NAMEEND_VAL temp61_35)))
(assert (= temp61_37 #x0000000000000000))
(assert (= temp61_38 #x0000000000000003))
(assert (= temp61_39 temp61_38))
(assert (= temp61_40 (select ARGNAME_padding_NAMEEND_VAL temp61_39)))
(assert (= temp61_41 #x0000000000000000))
(assert (= temp61_42 #x0000000000000004))
(assert (= temp61_43 temp61_42))
(assert (= temp61_44 (select ARGNAME_padding_NAMEEND_VAL temp61_43)))
(assert (= temp61_45 #x0000000000000000))
(assert (= temp61_46 #x0000000000000005))
(assert (= temp61_47 temp61_46))
(assert (= temp61_48 (select ARGNAME_padding_NAMEEND_VAL temp61_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp61_28 temp61_25)
             (bvslt temp61_32 temp61_29)
             (bvslt temp61_36 temp61_33)
             (bvslt temp61_40 temp61_37)
             (bvslt temp61_44 temp61_41)
             (bvslt temp61_48 temp61_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp61_49 #x0000000000000000))
(assert (= var1191714 temp61_49))
(assert (= temp61_50 #x0000000000000000))
(assert (= temp61_51 temp61_50))
(assert (= temp61_52 (select ARGNAME_output_padding_NAMEEND_VAL temp61_51)))
(assert (= temp61_53 #x0000000000000001))
(assert (= temp61_54 temp61_53))
(assert (= temp61_55 (select ARGNAME_output_padding_NAMEEND_VAL temp61_54)))
(assert (= temp61_56 #x0000000000000002))
(assert (= temp61_57 temp61_56))
(assert (= temp61_58 (select ARGNAME_output_padding_NAMEEND_VAL temp61_57)))
(assert (= temp61_59 #x0000000000000003))
(assert (= temp61_60 temp61_59))
(assert (= temp61_61 (select ARGNAME_output_padding_NAMEEND_VAL temp61_60)))
(assert (= temp61_62 #x0000000000000004))
(assert (= temp61_63 temp61_62))
(assert (= temp61_64 (select ARGNAME_output_padding_NAMEEND_VAL temp61_63)))
(assert (= temp61_65 #x0000000000000005))
(assert (= temp61_66 temp61_65))
(assert (= temp61_67 (select ARGNAME_output_padding_NAMEEND_VAL temp61_66)))
(assert (= temp61_68 #x0000000000000000))
(assert (= temp61_69 #x0000000000000000))
(assert (= temp61_70 temp61_69))
(assert (= temp61_71 (select ARGNAME_output_padding_NAMEEND_VAL temp61_70)))
(assert (= temp61_72 #x0000000000000000))
(assert (= temp61_73 #x0000000000000001))
(assert (= temp61_74 temp61_73))
(assert (= temp61_75 (select ARGNAME_output_padding_NAMEEND_VAL temp61_74)))
(assert (= temp61_76 #x0000000000000000))
(assert (= temp61_77 #x0000000000000002))
(assert (= temp61_78 temp61_77))
(assert (= temp61_79 (select ARGNAME_output_padding_NAMEEND_VAL temp61_78)))
(assert (= temp61_80 #x0000000000000000))
(assert (= temp61_81 #x0000000000000003))
(assert (= temp61_82 temp61_81))
(assert (= temp61_83 (select ARGNAME_output_padding_NAMEEND_VAL temp61_82)))
(assert (= temp61_84 #x0000000000000000))
(assert (= temp61_85 #x0000000000000004))
(assert (= temp61_86 temp61_85))
(assert (= temp61_87 (select ARGNAME_output_padding_NAMEEND_VAL temp61_86)))
(assert (= temp61_88 #x0000000000000000))
(assert (= temp61_89 #x0000000000000005))
(assert (= temp61_90 temp61_89))
(assert (= temp61_91 (select ARGNAME_output_padding_NAMEEND_VAL temp61_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp61_71 temp61_68)
             (bvslt temp61_75 temp61_72)
             (bvslt temp61_79 temp61_76)
             (bvslt temp61_83 temp61_80)
             (bvslt temp61_87 temp61_84)
             (bvslt temp61_91 temp61_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp61_92 #x0000000000000000))
(assert (= var1191725 temp61_92))
(assert (= temp61_93 #x0000000000000000))
(assert (= temp61_94 temp61_93))
(assert (= temp61_95 (select ARGNAME_stride_NAMEEND_VAL temp61_94)))
(assert (= temp61_96 #x0000000000000001))
(assert (= temp61_97 temp61_96))
(assert (= temp61_98 (select ARGNAME_stride_NAMEEND_VAL temp61_97)))
(assert (= temp61_99 #x0000000000000002))
(assert (= temp61_100 temp61_99))
(assert (= temp61_101 (select ARGNAME_stride_NAMEEND_VAL temp61_100)))
(assert (= temp61_102 #x0000000000000003))
(assert (= temp61_103 temp61_102))
(assert (= temp61_104 (select ARGNAME_stride_NAMEEND_VAL temp61_103)))
(assert (= temp61_105 #x0000000000000004))
(assert (= temp61_106 temp61_105))
(assert (= temp61_107 (select ARGNAME_stride_NAMEEND_VAL temp61_106)))
(assert (= temp61_108 #x0000000000000005))
(assert (= temp61_109 temp61_108))
(assert (= temp61_110 (select ARGNAME_stride_NAMEEND_VAL temp61_109)))
(assert (= temp61_111 #x0000000000000000))
(assert (= temp61_112 #x0000000000000000))
(assert (= temp61_113 temp61_112))
(assert (= temp61_114 (select ARGNAME_stride_NAMEEND_VAL temp61_113)))
(assert (= temp61_115 #x0000000000000000))
(assert (= temp61_116 #x0000000000000001))
(assert (= temp61_117 temp61_116))
(assert (= temp61_118 (select ARGNAME_stride_NAMEEND_VAL temp61_117)))
(assert (= temp61_119 #x0000000000000000))
(assert (= temp61_120 #x0000000000000002))
(assert (= temp61_121 temp61_120))
(assert (= temp61_122 (select ARGNAME_stride_NAMEEND_VAL temp61_121)))
(assert (= temp61_123 #x0000000000000000))
(assert (= temp61_124 #x0000000000000003))
(assert (= temp61_125 temp61_124))
(assert (= temp61_126 (select ARGNAME_stride_NAMEEND_VAL temp61_125)))
(assert (= temp61_127 #x0000000000000000))
(assert (= temp61_128 #x0000000000000004))
(assert (= temp61_129 temp61_128))
(assert (= temp61_130 (select ARGNAME_stride_NAMEEND_VAL temp61_129)))
(assert (= temp61_131 #x0000000000000000))
(assert (= temp61_132 #x0000000000000005))
(assert (= temp61_133 temp61_132))
(assert (= temp61_134 (select ARGNAME_stride_NAMEEND_VAL temp61_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp61_114 temp61_111)
             (bvsle temp61_118 temp61_115)
             (bvsle temp61_122 temp61_119)
             (bvsle temp61_126 temp61_123)
             (bvsle temp61_130 temp61_127)
             (bvsle temp61_134 temp61_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp61_135 #x0000000000000000))
(assert (= var1191735 temp61_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp61_136 #x0000000000000001))
(assert (= var1191747 temp61_136))
(assert (= temp61_137 #x0000000000000000))
(assert (= var1179826 temp61_137))
(assert (= temp61_138 #x0000000000000000))
(assert (= temp61_139 temp61_138))
(assert (= temp61_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp61_139)))
(assert (= temp61_141 #x0000000000000001))
(assert (= temp61_142 temp61_141))
(assert (= temp61_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp61_142)))
(assert (= temp61_144 #x0000000000000002))
(assert (= temp61_145 temp61_144))
(assert (= temp61_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp61_145)))
(assert (= temp61_147 #x0000000000000003))
(assert (= temp61_148 temp61_147))
(assert (= temp61_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp61_148)))
(assert (= temp61_150 #x0000000000000004))
(assert (= temp61_151 temp61_150))
(assert (= temp61_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp61_151)))
(assert (= temp61_153 #x0000000000000005))
(assert (= temp61_154 temp61_153))
(assert (= temp61_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp61_154)))
(assert (= temp61_157 var1179826))
(assert (= temp61_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp61_157)))
(assert (= temp61_156 temp61_158))
(assert (= var1191780
   (ite (bvslt temp61_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp61_159 #x0000000000000000))
(assert (= var1191780 temp61_159))
(assert (= temp61_160 #x0000000000000000))
(assert (= var1179826 temp61_160))
(assert (= temp61_162 var1179826))
(assert (= temp61_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp61_162)))
(assert (= temp61_161 temp61_163))
(assert (= var1191802 (bvsmod temp61_161 ARGNAME_groups_NAMEEND)))
(assert (= temp61_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp61_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp61_165 #x0000000000000001))
(assert (= var1191803 temp61_165))
(assert (= temp61_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp61_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp61_167 #x0000000000000001))
(assert (= var1191823 temp61_167))
(assert (= temp61_168 #x0000000000000001))
(assert (= var1180714 temp61_168))
(assert (= temp61_169 #x0000000000000000))
(assert (= temp61_170 temp61_169))
(assert (= temp61_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp61_170)))
(assert (= temp61_172 #x0000000000000001))
(assert (= temp61_173 temp61_172))
(assert (= temp61_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp61_173)))
(assert (= temp61_175 #x0000000000000002))
(assert (= temp61_176 temp61_175))
(assert (= temp61_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp61_176)))
(assert (= temp61_178 #x0000000000000003))
(assert (= temp61_179 temp61_178))
(assert (= temp61_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp61_179)))
(assert (= temp61_181 #x0000000000000004))
(assert (= temp61_182 temp61_181))
(assert (= temp61_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp61_182)))
(assert (= temp61_184 #x0000000000000005))
(assert (= temp61_185 temp61_184))
(assert (= temp61_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp61_185)))
(assert (= temp61_187 #x0000000000000000))
(assert (= temp61_188
   (ite (bvslt var1180714 temp61_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp61_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp61_188)))
(assert (= var1191831 temp61_189))
(assert (bvslt (ite (bvslt var1180714 temp61_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp61_190 #x0000000000000001))
(assert (= var1180714 temp61_190))
(assert (= temp61_192 var1180714))
(assert (= temp61_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp61_192)))
(assert (= temp61_191 temp61_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp61_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp61_194 #x0000000000000001))
(assert (= var1191836 temp61_194))
(assert (= temp61_195 #x0000000000000000))
(assert (= var1179826 temp61_195))
(assert (= temp61_197 var1179826))
(assert (= temp61_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp61_197)))
(assert (= temp61_196 temp61_198))
(assert (= temp61_199 #x0000000000000002))
(assert (= var1586025 temp61_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp61_200 #x0000000000000001))
(assert (= var1191993 temp61_200))
(assert (= temp61_201 #x0000000000000001))
(assert (= var2700303 temp61_201))
(assert (= temp61_202 #x0000000000000001))
(assert (= var2962447 temp61_202))
(assert (= temp61_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp61_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp61_204 #x0000000000000001))
(assert (= var211058 temp61_204))
(assert (= temp61_205 #x0000000000000001))
(assert (= var211188 temp61_205))
(assert (= var3879401 var211188))
(assert (= temp61_206 #x0000000000000000))
(assert (= var3866802 temp61_206))
(assert (= temp61_207 #x0000000000000000))
(assert (= temp61_208
   (ite (bvslt var3866802 temp61_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp61_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp61_208)))
(assert (= var3879420 temp61_209))
(assert (bvslt (ite (bvslt var3866802 temp61_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp61_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp61_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp61_211 #x0000000000000001))
(assert (= var3879421 temp61_211))
(assert (= temp61_212 #x0000000000000000))
(assert (= var4079423 temp61_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp61_213 #x0000000000000002))
(assert (= var4208259 temp61_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp61_214 #x0000000000000000))
(assert (= var4273820 temp61_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4993424 var211201))
(assert (= var211494 var210913))
(assert (= temp61_215 #x0000000000000000))
(assert (= var211495
   (ite (distinct var211494 temp61_215) #x0000000000000001 #x0000000000000000)))
(assert (= temp61_216 #x0000000000000001))
(assert (= var211058 temp61_216))
(model-add temp61_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp61_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp61_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp61_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





