(declare-fun temp10248_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10248_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10248_3 () (_ BitVec 64))
(declare-fun temp10248_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10248_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10248_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10248_7 () (_ BitVec 64))
(declare-fun temp10248_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10248_9 () (_ BitVec 64))
(declare-fun temp10248_10 () (_ BitVec 64))
(declare-fun temp10248_11 () (_ BitVec 64))
(declare-fun temp10248_12 () (_ BitVec 64))
(declare-fun temp10248_13 () (_ BitVec 64))
(declare-fun temp10248_14 () (_ BitVec 64))
(declare-fun temp10248_15 () (_ BitVec 64))
(declare-fun temp10248_16 () (_ BitVec 64))
(declare-fun temp10248_17 () (_ BitVec 64))
(declare-fun temp10248_18 () (_ BitVec 64))
(declare-fun temp10248_19 () (_ BitVec 64))
(declare-fun temp10248_20 () (_ BitVec 64))
(declare-fun temp10248_21 () (_ BitVec 64))
(declare-fun temp10248_22 () (_ BitVec 64))
(declare-fun temp10248_23 () (_ BitVec 64))
(declare-fun temp10248_24 () (_ BitVec 64))
(declare-fun temp10248_25 () (_ BitVec 64))
(declare-fun temp10248_26 () (_ BitVec 64))
(declare-fun temp10248_27 () (_ BitVec 64))
(declare-fun temp10248_28 () (_ BitVec 64))
(declare-fun temp10248_29 () (_ BitVec 64))
(declare-fun temp10248_30 () (_ BitVec 64))
(declare-fun temp10248_31 () (_ BitVec 64))
(declare-fun temp10248_32 () (_ BitVec 64))
(declare-fun temp10248_33 () (_ BitVec 64))
(declare-fun temp10248_34 () (_ BitVec 64))
(declare-fun temp10248_35 () (_ BitVec 64))
(declare-fun temp10248_36 () (_ BitVec 64))
(declare-fun temp10248_37 () (_ BitVec 64))
(declare-fun temp10248_38 () (_ BitVec 64))
(declare-fun temp10248_39 () (_ BitVec 64))
(declare-fun temp10248_40 () (_ BitVec 64))
(declare-fun temp10248_41 () (_ BitVec 64))
(declare-fun temp10248_42 () (_ BitVec 64))
(declare-fun temp10248_43 () (_ BitVec 64))
(declare-fun temp10248_44 () (_ BitVec 64))
(declare-fun temp10248_45 () (_ BitVec 64))
(declare-fun temp10248_46 () (_ BitVec 64))
(declare-fun temp10248_47 () (_ BitVec 64))
(declare-fun temp10248_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10248_49 () (_ BitVec 64))
(declare-fun temp10248_50 () (_ BitVec 64))
(declare-fun temp10248_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10248_52 () (_ BitVec 64))
(declare-fun temp10248_53 () (_ BitVec 64))
(declare-fun temp10248_54 () (_ BitVec 64))
(declare-fun temp10248_55 () (_ BitVec 64))
(declare-fun temp10248_56 () (_ BitVec 64))
(declare-fun temp10248_57 () (_ BitVec 64))
(declare-fun temp10248_58 () (_ BitVec 64))
(declare-fun temp10248_59 () (_ BitVec 64))
(declare-fun temp10248_60 () (_ BitVec 64))
(declare-fun temp10248_61 () (_ BitVec 64))
(declare-fun temp10248_62 () (_ BitVec 64))
(declare-fun temp10248_63 () (_ BitVec 64))
(declare-fun temp10248_64 () (_ BitVec 64))
(declare-fun temp10248_65 () (_ BitVec 64))
(declare-fun temp10248_66 () (_ BitVec 64))
(declare-fun temp10248_67 () (_ BitVec 64))
(declare-fun temp10248_68 () (_ BitVec 64))
(declare-fun temp10248_69 () (_ BitVec 64))
(declare-fun temp10248_70 () (_ BitVec 64))
(declare-fun temp10248_71 () (_ BitVec 64))
(declare-fun temp10248_72 () (_ BitVec 64))
(declare-fun temp10248_73 () (_ BitVec 64))
(declare-fun temp10248_74 () (_ BitVec 64))
(declare-fun temp10248_75 () (_ BitVec 64))
(declare-fun temp10248_76 () (_ BitVec 64))
(declare-fun temp10248_77 () (_ BitVec 64))
(declare-fun temp10248_78 () (_ BitVec 64))
(declare-fun temp10248_79 () (_ BitVec 64))
(declare-fun temp10248_80 () (_ BitVec 64))
(declare-fun temp10248_81 () (_ BitVec 64))
(declare-fun temp10248_82 () (_ BitVec 64))
(declare-fun temp10248_83 () (_ BitVec 64))
(declare-fun temp10248_84 () (_ BitVec 64))
(declare-fun temp10248_85 () (_ BitVec 64))
(declare-fun temp10248_86 () (_ BitVec 64))
(declare-fun temp10248_87 () (_ BitVec 64))
(declare-fun temp10248_88 () (_ BitVec 64))
(declare-fun temp10248_89 () (_ BitVec 64))
(declare-fun temp10248_90 () (_ BitVec 64))
(declare-fun temp10248_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10248_92 () (_ BitVec 64))
(declare-fun temp10248_93 () (_ BitVec 64))
(declare-fun temp10248_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10248_95 () (_ BitVec 64))
(declare-fun temp10248_96 () (_ BitVec 64))
(declare-fun temp10248_97 () (_ BitVec 64))
(declare-fun temp10248_98 () (_ BitVec 64))
(declare-fun temp10248_99 () (_ BitVec 64))
(declare-fun temp10248_100 () (_ BitVec 64))
(declare-fun temp10248_101 () (_ BitVec 64))
(declare-fun temp10248_102 () (_ BitVec 64))
(declare-fun temp10248_103 () (_ BitVec 64))
(declare-fun temp10248_104 () (_ BitVec 64))
(declare-fun temp10248_105 () (_ BitVec 64))
(declare-fun temp10248_106 () (_ BitVec 64))
(declare-fun temp10248_107 () (_ BitVec 64))
(declare-fun temp10248_108 () (_ BitVec 64))
(declare-fun temp10248_109 () (_ BitVec 64))
(declare-fun temp10248_110 () (_ BitVec 64))
(declare-fun temp10248_111 () (_ BitVec 64))
(declare-fun temp10248_112 () (_ BitVec 64))
(declare-fun temp10248_113 () (_ BitVec 64))
(declare-fun temp10248_114 () (_ BitVec 64))
(declare-fun temp10248_115 () (_ BitVec 64))
(declare-fun temp10248_116 () (_ BitVec 64))
(declare-fun temp10248_117 () (_ BitVec 64))
(declare-fun temp10248_118 () (_ BitVec 64))
(declare-fun temp10248_119 () (_ BitVec 64))
(declare-fun temp10248_120 () (_ BitVec 64))
(declare-fun temp10248_121 () (_ BitVec 64))
(declare-fun temp10248_122 () (_ BitVec 64))
(declare-fun temp10248_123 () (_ BitVec 64))
(declare-fun temp10248_124 () (_ BitVec 64))
(declare-fun temp10248_125 () (_ BitVec 64))
(declare-fun temp10248_126 () (_ BitVec 64))
(declare-fun temp10248_127 () (_ BitVec 64))
(declare-fun temp10248_128 () (_ BitVec 64))
(declare-fun temp10248_129 () (_ BitVec 64))
(declare-fun temp10248_130 () (_ BitVec 64))
(declare-fun temp10248_131 () (_ BitVec 64))
(declare-fun temp10248_132 () (_ BitVec 64))
(declare-fun temp10248_133 () (_ BitVec 64))
(declare-fun temp10248_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10248_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10248_136 () (_ BitVec 64))
(declare-fun temp10248_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10248_138 () (_ BitVec 64))
(declare-fun temp10248_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10248_140 () (_ BitVec 64))
(declare-fun temp10248_141 () (_ BitVec 64))
(declare-fun temp10248_142 () (_ BitVec 64))
(declare-fun temp10248_143 () (_ BitVec 64))
(declare-fun temp10248_144 () (_ BitVec 64))
(declare-fun temp10248_145 () (_ BitVec 64))
(declare-fun temp10248_146 () (_ BitVec 64))
(declare-fun temp10248_147 () (_ BitVec 64))
(declare-fun temp10248_148 () (_ BitVec 64))
(declare-fun temp10248_149 () (_ BitVec 64))
(declare-fun temp10248_150 () (_ BitVec 64))
(declare-fun temp10248_151 () (_ BitVec 64))
(declare-fun temp10248_152 () (_ BitVec 64))
(declare-fun temp10248_153 () (_ BitVec 64))
(declare-fun temp10248_154 () (_ BitVec 64))
(declare-fun temp10248_155 () (_ BitVec 64))
(declare-fun temp10248_157 () (_ BitVec 64))
(declare-fun temp10248_158 () (_ BitVec 64))
(declare-fun temp10248_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10248_159 () (_ BitVec 64))
(declare-fun temp10248_160 () (_ BitVec 64))
(declare-fun temp10248_162 () (_ BitVec 64))
(declare-fun temp10248_163 () (_ BitVec 64))
(declare-fun temp10248_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10248_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10248_165 () (_ BitVec 64))
(declare-fun temp10248_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10248_167 () (_ BitVec 64))
(declare-fun temp10248_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10248_169 () (_ BitVec 64))
(declare-fun temp10248_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10248_171 () (_ BitVec 64))
(declare-fun temp10248_172 () (_ BitVec 64))
(declare-fun temp10248_173 () (_ BitVec 64))
(declare-fun temp10248_174 () (_ BitVec 64))
(declare-fun temp10248_175 () (_ BitVec 64))
(declare-fun temp10248_176 () (_ BitVec 64))
(declare-fun temp10248_177 () (_ BitVec 64))
(declare-fun temp10248_178 () (_ BitVec 64))
(declare-fun temp10248_179 () (_ BitVec 64))
(declare-fun temp10248_180 () (_ BitVec 64))
(declare-fun temp10248_181 () (_ BitVec 64))
(declare-fun temp10248_182 () (_ BitVec 64))
(declare-fun temp10248_183 () (_ BitVec 64))
(declare-fun temp10248_184 () (_ BitVec 64))
(declare-fun temp10248_185 () (_ BitVec 64))
(declare-fun temp10248_186 () (_ BitVec 64))
(declare-fun temp10248_187 () (_ BitVec 64))
(declare-fun temp10248_188 () (_ BitVec 64))
(declare-fun temp10248_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10248_190 () (_ BitVec 64))
(declare-fun temp10248_192 () (_ BitVec 64))
(declare-fun temp10248_193 () (_ BitVec 64))
(declare-fun temp10248_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10248_194 () (_ BitVec 64))
(declare-fun temp10248_195 () (_ BitVec 64))
(declare-fun temp10248_197 () (_ BitVec 64))
(declare-fun temp10248_198 () (_ BitVec 64))
(declare-fun temp10248_196 () (_ BitVec 64))
(declare-fun temp10248_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10248_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10248_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10248_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10248_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10248_204 () (_ BitVec 64))
(declare-fun temp10248_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10248_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10248_207 () (_ BitVec 64))
(declare-fun temp10248_208 () (_ BitVec 64))
(declare-fun temp10248_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10248_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10248_211 () (_ BitVec 64))
(declare-fun temp10248_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10248_213 () (_ BitVec 64))
(declare-fun temp10248_214 () (_ BitVec 64))
(declare-fun temp10248_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10248_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10248_217 () (_ BitVec 64))
(declare-fun temp10248_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10248_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10248_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4862352 () (_ BitVec 64))
(declare-fun var5124496 () (_ BitVec 64))
(declare-fun temp10248_221 () (_ BitVec 64))
(assert (= temp10248_1 #x0000000000000001))
(assert (= var77203 temp10248_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10248_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10248_2)))
(assert (= temp10248_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10248_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10248_4 #x0000000000000000))
(assert (= var210941 temp10248_4))
(assert (= temp10248_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10248_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10248_6 #x0000000000000000))
(assert (= var210986 temp10248_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10248_7 #x0000000000000000))
(assert (= temp10248_8 temp10248_7))
(assert (= temp10248_9 (select ARGNAME_padding_NAMEEND_VAL temp10248_8)))
(assert (= temp10248_10 #x0000000000000001))
(assert (= temp10248_11 temp10248_10))
(assert (= temp10248_12 (select ARGNAME_padding_NAMEEND_VAL temp10248_11)))
(assert (= temp10248_13 #x0000000000000002))
(assert (= temp10248_14 temp10248_13))
(assert (= temp10248_15 (select ARGNAME_padding_NAMEEND_VAL temp10248_14)))
(assert (= temp10248_16 #x0000000000000003))
(assert (= temp10248_17 temp10248_16))
(assert (= temp10248_18 (select ARGNAME_padding_NAMEEND_VAL temp10248_17)))
(assert (= temp10248_19 #x0000000000000004))
(assert (= temp10248_20 temp10248_19))
(assert (= temp10248_21 (select ARGNAME_padding_NAMEEND_VAL temp10248_20)))
(assert (= temp10248_22 #x0000000000000005))
(assert (= temp10248_23 temp10248_22))
(assert (= temp10248_24 (select ARGNAME_padding_NAMEEND_VAL temp10248_23)))
(assert (= temp10248_25 #x0000000000000000))
(assert (= temp10248_26 #x0000000000000000))
(assert (= temp10248_27 temp10248_26))
(assert (= temp10248_28 (select ARGNAME_padding_NAMEEND_VAL temp10248_27)))
(assert (= temp10248_29 #x0000000000000000))
(assert (= temp10248_30 #x0000000000000001))
(assert (= temp10248_31 temp10248_30))
(assert (= temp10248_32 (select ARGNAME_padding_NAMEEND_VAL temp10248_31)))
(assert (= temp10248_33 #x0000000000000000))
(assert (= temp10248_34 #x0000000000000002))
(assert (= temp10248_35 temp10248_34))
(assert (= temp10248_36 (select ARGNAME_padding_NAMEEND_VAL temp10248_35)))
(assert (= temp10248_37 #x0000000000000000))
(assert (= temp10248_38 #x0000000000000003))
(assert (= temp10248_39 temp10248_38))
(assert (= temp10248_40 (select ARGNAME_padding_NAMEEND_VAL temp10248_39)))
(assert (= temp10248_41 #x0000000000000000))
(assert (= temp10248_42 #x0000000000000004))
(assert (= temp10248_43 temp10248_42))
(assert (= temp10248_44 (select ARGNAME_padding_NAMEEND_VAL temp10248_43)))
(assert (= temp10248_45 #x0000000000000000))
(assert (= temp10248_46 #x0000000000000005))
(assert (= temp10248_47 temp10248_46))
(assert (= temp10248_48 (select ARGNAME_padding_NAMEEND_VAL temp10248_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10248_28 temp10248_25)
             (bvslt temp10248_32 temp10248_29)
             (bvslt temp10248_36 temp10248_33)
             (bvslt temp10248_40 temp10248_37)
             (bvslt temp10248_44 temp10248_41)
             (bvslt temp10248_48 temp10248_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10248_49 #x0000000000000000))
(assert (= var1191714 temp10248_49))
(assert (= temp10248_50 #x0000000000000000))
(assert (= temp10248_51 temp10248_50))
(assert (= temp10248_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10248_51)))
(assert (= temp10248_53 #x0000000000000001))
(assert (= temp10248_54 temp10248_53))
(assert (= temp10248_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10248_54)))
(assert (= temp10248_56 #x0000000000000002))
(assert (= temp10248_57 temp10248_56))
(assert (= temp10248_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10248_57)))
(assert (= temp10248_59 #x0000000000000003))
(assert (= temp10248_60 temp10248_59))
(assert (= temp10248_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10248_60)))
(assert (= temp10248_62 #x0000000000000004))
(assert (= temp10248_63 temp10248_62))
(assert (= temp10248_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10248_63)))
(assert (= temp10248_65 #x0000000000000005))
(assert (= temp10248_66 temp10248_65))
(assert (= temp10248_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10248_66)))
(assert (= temp10248_68 #x0000000000000000))
(assert (= temp10248_69 #x0000000000000000))
(assert (= temp10248_70 temp10248_69))
(assert (= temp10248_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10248_70)))
(assert (= temp10248_72 #x0000000000000000))
(assert (= temp10248_73 #x0000000000000001))
(assert (= temp10248_74 temp10248_73))
(assert (= temp10248_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10248_74)))
(assert (= temp10248_76 #x0000000000000000))
(assert (= temp10248_77 #x0000000000000002))
(assert (= temp10248_78 temp10248_77))
(assert (= temp10248_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10248_78)))
(assert (= temp10248_80 #x0000000000000000))
(assert (= temp10248_81 #x0000000000000003))
(assert (= temp10248_82 temp10248_81))
(assert (= temp10248_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10248_82)))
(assert (= temp10248_84 #x0000000000000000))
(assert (= temp10248_85 #x0000000000000004))
(assert (= temp10248_86 temp10248_85))
(assert (= temp10248_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10248_86)))
(assert (= temp10248_88 #x0000000000000000))
(assert (= temp10248_89 #x0000000000000005))
(assert (= temp10248_90 temp10248_89))
(assert (= temp10248_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10248_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10248_71 temp10248_68)
             (bvslt temp10248_75 temp10248_72)
             (bvslt temp10248_79 temp10248_76)
             (bvslt temp10248_83 temp10248_80)
             (bvslt temp10248_87 temp10248_84)
             (bvslt temp10248_91 temp10248_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10248_92 #x0000000000000000))
(assert (= var1191725 temp10248_92))
(assert (= temp10248_93 #x0000000000000000))
(assert (= temp10248_94 temp10248_93))
(assert (= temp10248_95 (select ARGNAME_stride_NAMEEND_VAL temp10248_94)))
(assert (= temp10248_96 #x0000000000000001))
(assert (= temp10248_97 temp10248_96))
(assert (= temp10248_98 (select ARGNAME_stride_NAMEEND_VAL temp10248_97)))
(assert (= temp10248_99 #x0000000000000002))
(assert (= temp10248_100 temp10248_99))
(assert (= temp10248_101 (select ARGNAME_stride_NAMEEND_VAL temp10248_100)))
(assert (= temp10248_102 #x0000000000000003))
(assert (= temp10248_103 temp10248_102))
(assert (= temp10248_104 (select ARGNAME_stride_NAMEEND_VAL temp10248_103)))
(assert (= temp10248_105 #x0000000000000004))
(assert (= temp10248_106 temp10248_105))
(assert (= temp10248_107 (select ARGNAME_stride_NAMEEND_VAL temp10248_106)))
(assert (= temp10248_108 #x0000000000000005))
(assert (= temp10248_109 temp10248_108))
(assert (= temp10248_110 (select ARGNAME_stride_NAMEEND_VAL temp10248_109)))
(assert (= temp10248_111 #x0000000000000000))
(assert (= temp10248_112 #x0000000000000000))
(assert (= temp10248_113 temp10248_112))
(assert (= temp10248_114 (select ARGNAME_stride_NAMEEND_VAL temp10248_113)))
(assert (= temp10248_115 #x0000000000000000))
(assert (= temp10248_116 #x0000000000000001))
(assert (= temp10248_117 temp10248_116))
(assert (= temp10248_118 (select ARGNAME_stride_NAMEEND_VAL temp10248_117)))
(assert (= temp10248_119 #x0000000000000000))
(assert (= temp10248_120 #x0000000000000002))
(assert (= temp10248_121 temp10248_120))
(assert (= temp10248_122 (select ARGNAME_stride_NAMEEND_VAL temp10248_121)))
(assert (= temp10248_123 #x0000000000000000))
(assert (= temp10248_124 #x0000000000000003))
(assert (= temp10248_125 temp10248_124))
(assert (= temp10248_126 (select ARGNAME_stride_NAMEEND_VAL temp10248_125)))
(assert (= temp10248_127 #x0000000000000000))
(assert (= temp10248_128 #x0000000000000004))
(assert (= temp10248_129 temp10248_128))
(assert (= temp10248_130 (select ARGNAME_stride_NAMEEND_VAL temp10248_129)))
(assert (= temp10248_131 #x0000000000000000))
(assert (= temp10248_132 #x0000000000000005))
(assert (= temp10248_133 temp10248_132))
(assert (= temp10248_134 (select ARGNAME_stride_NAMEEND_VAL temp10248_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10248_114 temp10248_111)
             (bvsle temp10248_118 temp10248_115)
             (bvsle temp10248_122 temp10248_119)
             (bvsle temp10248_126 temp10248_123)
             (bvsle temp10248_130 temp10248_127)
             (bvsle temp10248_134 temp10248_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10248_135 #x0000000000000000))
(assert (= var1191735 temp10248_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10248_136 #x0000000000000001))
(assert (= var1191747 temp10248_136))
(assert (= temp10248_137 #x0000000000000000))
(assert (= var1179826 temp10248_137))
(assert (= temp10248_138 #x0000000000000000))
(assert (= temp10248_139 temp10248_138))
(assert (= temp10248_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10248_139)))
(assert (= temp10248_141 #x0000000000000001))
(assert (= temp10248_142 temp10248_141))
(assert (= temp10248_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10248_142)))
(assert (= temp10248_144 #x0000000000000002))
(assert (= temp10248_145 temp10248_144))
(assert (= temp10248_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10248_145)))
(assert (= temp10248_147 #x0000000000000003))
(assert (= temp10248_148 temp10248_147))
(assert (= temp10248_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10248_148)))
(assert (= temp10248_150 #x0000000000000004))
(assert (= temp10248_151 temp10248_150))
(assert (= temp10248_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10248_151)))
(assert (= temp10248_153 #x0000000000000005))
(assert (= temp10248_154 temp10248_153))
(assert (= temp10248_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10248_154)))
(assert (= temp10248_157 var1179826))
(assert (= temp10248_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10248_157)))
(assert (= temp10248_156 temp10248_158))
(assert (= var1191780
   (ite (bvslt temp10248_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10248_159 #x0000000000000000))
(assert (= var1191780 temp10248_159))
(assert (= temp10248_160 #x0000000000000000))
(assert (= var1179826 temp10248_160))
(assert (= temp10248_162 var1179826))
(assert (= temp10248_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10248_162)))
(assert (= temp10248_161 temp10248_163))
(assert (= var1191802 (bvsmod temp10248_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10248_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10248_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10248_165 #x0000000000000001))
(assert (= var1191803 temp10248_165))
(assert (= temp10248_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10248_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10248_167 #x0000000000000001))
(assert (= var1191823 temp10248_167))
(assert (= temp10248_168 #x0000000000000001))
(assert (= var1180714 temp10248_168))
(assert (= temp10248_169 #x0000000000000000))
(assert (= temp10248_170 temp10248_169))
(assert (= temp10248_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10248_170)))
(assert (= temp10248_172 #x0000000000000001))
(assert (= temp10248_173 temp10248_172))
(assert (= temp10248_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10248_173)))
(assert (= temp10248_175 #x0000000000000002))
(assert (= temp10248_176 temp10248_175))
(assert (= temp10248_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10248_176)))
(assert (= temp10248_178 #x0000000000000003))
(assert (= temp10248_179 temp10248_178))
(assert (= temp10248_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10248_179)))
(assert (= temp10248_181 #x0000000000000004))
(assert (= temp10248_182 temp10248_181))
(assert (= temp10248_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10248_182)))
(assert (= temp10248_184 #x0000000000000005))
(assert (= temp10248_185 temp10248_184))
(assert (= temp10248_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10248_185)))
(assert (= temp10248_187 #x0000000000000000))
(assert (= temp10248_188
   (ite (bvslt var1180714 temp10248_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10248_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10248_188)))
(assert (= var1191831 temp10248_189))
(assert (bvslt (ite (bvslt var1180714 temp10248_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10248_190 #x0000000000000001))
(assert (= var1180714 temp10248_190))
(assert (= temp10248_192 var1180714))
(assert (= temp10248_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10248_192)))
(assert (= temp10248_191 temp10248_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10248_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10248_194 #x0000000000000001))
(assert (= var1191836 temp10248_194))
(assert (= temp10248_195 #x0000000000000000))
(assert (= var1179826 temp10248_195))
(assert (= temp10248_197 var1179826))
(assert (= temp10248_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10248_197)))
(assert (= temp10248_196 temp10248_198))
(assert (= temp10248_199 #x0000000000000002))
(assert (= var1586025 temp10248_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10248_200 #x0000000000000001))
(assert (= var1191993 temp10248_200))
(assert (= temp10248_201 #x0000000000000001))
(assert (= var2700303 temp10248_201))
(assert (= temp10248_202 #x0000000000000001))
(assert (= var2962447 temp10248_202))
(assert (= temp10248_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10248_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10248_204 #x0000000000000001))
(assert (= var211058 temp10248_204))
(assert (= temp10248_205 #x0000000000000001))
(assert (= var211188 temp10248_205))
(assert (= var3879401 var211188))
(assert (= temp10248_206 #x0000000000000000))
(assert (= var3866802 temp10248_206))
(assert (= temp10248_207 #x0000000000000000))
(assert (= temp10248_208
   (ite (bvslt var3866802 temp10248_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10248_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10248_208)))
(assert (= var3879420 temp10248_209))
(assert (bvslt (ite (bvslt var3866802 temp10248_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10248_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10248_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10248_211 #x0000000000000000))
(assert (= var3879421 temp10248_211))
(assert (= temp10248_212 #x0000000000000001))
(assert (= var3867690 temp10248_212))
(assert (= temp10248_213 #x0000000000000000))
(assert (= temp10248_214
   (ite (bvslt var3867690 temp10248_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10248_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10248_214)))
(assert (= var3879423 temp10248_215))
(assert (bvslt (ite (bvslt var3867690 temp10248_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10248_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10248_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10248_217 #x0000000000000001))
(assert (= var3879424 temp10248_217))
(assert (= temp10248_218 #x0000000000000000))
(assert (= var4079423 temp10248_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10248_219 #x0000000000000002))
(assert (= var4208259 temp10248_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10248_220 #x0000000000000000))
(assert (= var4273820 temp10248_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4862352 var211201))
(assert (= var5124496 var211201))
(assert (= temp10248_221 #x0000000000000001))
(assert (= var211058 temp10248_221))
(model-add temp10248_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10248_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10248_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10248_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





