(declare-fun temp11345_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp11345_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp11345_3 () (_ BitVec 64))
(declare-fun temp11345_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp11345_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp11345_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp11345_7 () (_ BitVec 64))
(declare-fun temp11345_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11345_9 () (_ BitVec 64))
(declare-fun temp11345_10 () (_ BitVec 64))
(declare-fun temp11345_11 () (_ BitVec 64))
(declare-fun temp11345_12 () (_ BitVec 64))
(declare-fun temp11345_13 () (_ BitVec 64))
(declare-fun temp11345_14 () (_ BitVec 64))
(declare-fun temp11345_15 () (_ BitVec 64))
(declare-fun temp11345_16 () (_ BitVec 64))
(declare-fun temp11345_17 () (_ BitVec 64))
(declare-fun temp11345_18 () (_ BitVec 64))
(declare-fun temp11345_19 () (_ BitVec 64))
(declare-fun temp11345_20 () (_ BitVec 64))
(declare-fun temp11345_21 () (_ BitVec 64))
(declare-fun temp11345_22 () (_ BitVec 64))
(declare-fun temp11345_23 () (_ BitVec 64))
(declare-fun temp11345_24 () (_ BitVec 64))
(declare-fun temp11345_25 () (_ BitVec 64))
(declare-fun temp11345_26 () (_ BitVec 64))
(declare-fun temp11345_27 () (_ BitVec 64))
(declare-fun temp11345_28 () (_ BitVec 64))
(declare-fun temp11345_29 () (_ BitVec 64))
(declare-fun temp11345_30 () (_ BitVec 64))
(declare-fun temp11345_31 () (_ BitVec 64))
(declare-fun temp11345_32 () (_ BitVec 64))
(declare-fun temp11345_33 () (_ BitVec 64))
(declare-fun temp11345_34 () (_ BitVec 64))
(declare-fun temp11345_35 () (_ BitVec 64))
(declare-fun temp11345_36 () (_ BitVec 64))
(declare-fun temp11345_37 () (_ BitVec 64))
(declare-fun temp11345_38 () (_ BitVec 64))
(declare-fun temp11345_39 () (_ BitVec 64))
(declare-fun temp11345_40 () (_ BitVec 64))
(declare-fun temp11345_41 () (_ BitVec 64))
(declare-fun temp11345_42 () (_ BitVec 64))
(declare-fun temp11345_43 () (_ BitVec 64))
(declare-fun temp11345_44 () (_ BitVec 64))
(declare-fun temp11345_45 () (_ BitVec 64))
(declare-fun temp11345_46 () (_ BitVec 64))
(declare-fun temp11345_47 () (_ BitVec 64))
(declare-fun temp11345_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp11345_49 () (_ BitVec 64))
(declare-fun temp11345_50 () (_ BitVec 64))
(declare-fun temp11345_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11345_52 () (_ BitVec 64))
(declare-fun temp11345_53 () (_ BitVec 64))
(declare-fun temp11345_54 () (_ BitVec 64))
(declare-fun temp11345_55 () (_ BitVec 64))
(declare-fun temp11345_56 () (_ BitVec 64))
(declare-fun temp11345_57 () (_ BitVec 64))
(declare-fun temp11345_58 () (_ BitVec 64))
(declare-fun temp11345_59 () (_ BitVec 64))
(declare-fun temp11345_60 () (_ BitVec 64))
(declare-fun temp11345_61 () (_ BitVec 64))
(declare-fun temp11345_62 () (_ BitVec 64))
(declare-fun temp11345_63 () (_ BitVec 64))
(declare-fun temp11345_64 () (_ BitVec 64))
(declare-fun temp11345_65 () (_ BitVec 64))
(declare-fun temp11345_66 () (_ BitVec 64))
(declare-fun temp11345_67 () (_ BitVec 64))
(declare-fun temp11345_68 () (_ BitVec 64))
(declare-fun temp11345_69 () (_ BitVec 64))
(declare-fun temp11345_70 () (_ BitVec 64))
(declare-fun temp11345_71 () (_ BitVec 64))
(declare-fun temp11345_72 () (_ BitVec 64))
(declare-fun temp11345_73 () (_ BitVec 64))
(declare-fun temp11345_74 () (_ BitVec 64))
(declare-fun temp11345_75 () (_ BitVec 64))
(declare-fun temp11345_76 () (_ BitVec 64))
(declare-fun temp11345_77 () (_ BitVec 64))
(declare-fun temp11345_78 () (_ BitVec 64))
(declare-fun temp11345_79 () (_ BitVec 64))
(declare-fun temp11345_80 () (_ BitVec 64))
(declare-fun temp11345_81 () (_ BitVec 64))
(declare-fun temp11345_82 () (_ BitVec 64))
(declare-fun temp11345_83 () (_ BitVec 64))
(declare-fun temp11345_84 () (_ BitVec 64))
(declare-fun temp11345_85 () (_ BitVec 64))
(declare-fun temp11345_86 () (_ BitVec 64))
(declare-fun temp11345_87 () (_ BitVec 64))
(declare-fun temp11345_88 () (_ BitVec 64))
(declare-fun temp11345_89 () (_ BitVec 64))
(declare-fun temp11345_90 () (_ BitVec 64))
(declare-fun temp11345_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp11345_92 () (_ BitVec 64))
(declare-fun temp11345_93 () (_ BitVec 64))
(declare-fun temp11345_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11345_95 () (_ BitVec 64))
(declare-fun temp11345_96 () (_ BitVec 64))
(declare-fun temp11345_97 () (_ BitVec 64))
(declare-fun temp11345_98 () (_ BitVec 64))
(declare-fun temp11345_99 () (_ BitVec 64))
(declare-fun temp11345_100 () (_ BitVec 64))
(declare-fun temp11345_101 () (_ BitVec 64))
(declare-fun temp11345_102 () (_ BitVec 64))
(declare-fun temp11345_103 () (_ BitVec 64))
(declare-fun temp11345_104 () (_ BitVec 64))
(declare-fun temp11345_105 () (_ BitVec 64))
(declare-fun temp11345_106 () (_ BitVec 64))
(declare-fun temp11345_107 () (_ BitVec 64))
(declare-fun temp11345_108 () (_ BitVec 64))
(declare-fun temp11345_109 () (_ BitVec 64))
(declare-fun temp11345_110 () (_ BitVec 64))
(declare-fun temp11345_111 () (_ BitVec 64))
(declare-fun temp11345_112 () (_ BitVec 64))
(declare-fun temp11345_113 () (_ BitVec 64))
(declare-fun temp11345_114 () (_ BitVec 64))
(declare-fun temp11345_115 () (_ BitVec 64))
(declare-fun temp11345_116 () (_ BitVec 64))
(declare-fun temp11345_117 () (_ BitVec 64))
(declare-fun temp11345_118 () (_ BitVec 64))
(declare-fun temp11345_119 () (_ BitVec 64))
(declare-fun temp11345_120 () (_ BitVec 64))
(declare-fun temp11345_121 () (_ BitVec 64))
(declare-fun temp11345_122 () (_ BitVec 64))
(declare-fun temp11345_123 () (_ BitVec 64))
(declare-fun temp11345_124 () (_ BitVec 64))
(declare-fun temp11345_125 () (_ BitVec 64))
(declare-fun temp11345_126 () (_ BitVec 64))
(declare-fun temp11345_127 () (_ BitVec 64))
(declare-fun temp11345_128 () (_ BitVec 64))
(declare-fun temp11345_129 () (_ BitVec 64))
(declare-fun temp11345_130 () (_ BitVec 64))
(declare-fun temp11345_131 () (_ BitVec 64))
(declare-fun temp11345_132 () (_ BitVec 64))
(declare-fun temp11345_133 () (_ BitVec 64))
(declare-fun temp11345_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp11345_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp11345_136 () (_ BitVec 64))
(declare-fun temp11345_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp11345_138 () (_ BitVec 64))
(declare-fun temp11345_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11345_140 () (_ BitVec 64))
(declare-fun temp11345_141 () (_ BitVec 64))
(declare-fun temp11345_142 () (_ BitVec 64))
(declare-fun temp11345_143 () (_ BitVec 64))
(declare-fun temp11345_144 () (_ BitVec 64))
(declare-fun temp11345_145 () (_ BitVec 64))
(declare-fun temp11345_146 () (_ BitVec 64))
(declare-fun temp11345_147 () (_ BitVec 64))
(declare-fun temp11345_148 () (_ BitVec 64))
(declare-fun temp11345_149 () (_ BitVec 64))
(declare-fun temp11345_150 () (_ BitVec 64))
(declare-fun temp11345_151 () (_ BitVec 64))
(declare-fun temp11345_152 () (_ BitVec 64))
(declare-fun temp11345_153 () (_ BitVec 64))
(declare-fun temp11345_154 () (_ BitVec 64))
(declare-fun temp11345_155 () (_ BitVec 64))
(declare-fun temp11345_157 () (_ BitVec 64))
(declare-fun temp11345_158 () (_ BitVec 64))
(declare-fun temp11345_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp11345_159 () (_ BitVec 64))
(declare-fun temp11345_160 () (_ BitVec 64))
(declare-fun temp11345_162 () (_ BitVec 64))
(declare-fun temp11345_163 () (_ BitVec 64))
(declare-fun temp11345_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp11345_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp11345_165 () (_ BitVec 64))
(declare-fun temp11345_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp11345_167 () (_ BitVec 64))
(declare-fun temp11345_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp11345_169 () (_ BitVec 64))
(declare-fun temp11345_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp11345_171 () (_ BitVec 64))
(declare-fun temp11345_172 () (_ BitVec 64))
(declare-fun temp11345_173 () (_ BitVec 64))
(declare-fun temp11345_174 () (_ BitVec 64))
(declare-fun temp11345_175 () (_ BitVec 64))
(declare-fun temp11345_176 () (_ BitVec 64))
(declare-fun temp11345_177 () (_ BitVec 64))
(declare-fun temp11345_178 () (_ BitVec 64))
(declare-fun temp11345_179 () (_ BitVec 64))
(declare-fun temp11345_180 () (_ BitVec 64))
(declare-fun temp11345_181 () (_ BitVec 64))
(declare-fun temp11345_182 () (_ BitVec 64))
(declare-fun temp11345_183 () (_ BitVec 64))
(declare-fun temp11345_184 () (_ BitVec 64))
(declare-fun temp11345_185 () (_ BitVec 64))
(declare-fun temp11345_186 () (_ BitVec 64))
(declare-fun temp11345_187 () (_ BitVec 64))
(declare-fun temp11345_188 () (_ BitVec 64))
(declare-fun temp11345_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp11345_190 () (_ BitVec 64))
(declare-fun temp11345_192 () (_ BitVec 64))
(declare-fun temp11345_193 () (_ BitVec 64))
(declare-fun temp11345_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp11345_194 () (_ BitVec 64))
(declare-fun temp11345_195 () (_ BitVec 64))
(declare-fun temp11345_197 () (_ BitVec 64))
(declare-fun temp11345_198 () (_ BitVec 64))
(declare-fun temp11345_196 () (_ BitVec 64))
(declare-fun temp11345_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp11345_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp11345_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp11345_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp11345_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp11345_204 () (_ BitVec 64))
(declare-fun temp11345_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp11345_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp11345_207 () (_ BitVec 64))
(declare-fun temp11345_208 () (_ BitVec 64))
(declare-fun temp11345_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp11345_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp11345_211 () (_ BitVec 64))
(declare-fun temp11345_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp11345_213 () (_ BitVec 64))
(declare-fun temp11345_214 () (_ BitVec 64))
(declare-fun temp11345_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp11345_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp11345_217 () (_ BitVec 64))
(declare-fun temp11345_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp11345_219 () (_ BitVec 64))
(declare-fun var4404867 () (_ BitVec 64))
(declare-fun var4404869 () (_ BitVec 64))
(declare-fun var4470412 () (_ BitVec 64))
(declare-fun var4470413 () (_ BitVec 64))
(declare-fun var4470426 () (_ BitVec 64))
(declare-fun var4470428 () (_ BitVec 64))
(declare-fun temp11345_220 () (_ BitVec 64))
(declare-fun var4470453 () (_ BitVec 64))
(declare-fun var4470455 () (_ BitVec 64))
(declare-fun var4591443 () (_ BitVec 64))
(declare-fun var4993424 () (_ BitVec 64))
(declare-fun var211962 () (_ BitVec 64))
(declare-fun temp11345_221 () (_ BitVec 64))
(declare-fun var211963 () (_ BitVec 64))
(declare-fun temp11345_222 () (_ BitVec 64))
(assert (= temp11345_1 #x0000000000000001))
(assert (= var77203 temp11345_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp11345_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp11345_2)))
(assert (= temp11345_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp11345_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11345_4 #x0000000000000000))
(assert (= var210941 temp11345_4))
(assert (= temp11345_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp11345_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11345_6 #x0000000000000000))
(assert (= var210986 temp11345_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp11345_7 #x0000000000000000))
(assert (= temp11345_8 temp11345_7))
(assert (= temp11345_9 (select ARGNAME_padding_NAMEEND_VAL temp11345_8)))
(assert (= temp11345_10 #x0000000000000001))
(assert (= temp11345_11 temp11345_10))
(assert (= temp11345_12 (select ARGNAME_padding_NAMEEND_VAL temp11345_11)))
(assert (= temp11345_13 #x0000000000000002))
(assert (= temp11345_14 temp11345_13))
(assert (= temp11345_15 (select ARGNAME_padding_NAMEEND_VAL temp11345_14)))
(assert (= temp11345_16 #x0000000000000003))
(assert (= temp11345_17 temp11345_16))
(assert (= temp11345_18 (select ARGNAME_padding_NAMEEND_VAL temp11345_17)))
(assert (= temp11345_19 #x0000000000000004))
(assert (= temp11345_20 temp11345_19))
(assert (= temp11345_21 (select ARGNAME_padding_NAMEEND_VAL temp11345_20)))
(assert (= temp11345_22 #x0000000000000005))
(assert (= temp11345_23 temp11345_22))
(assert (= temp11345_24 (select ARGNAME_padding_NAMEEND_VAL temp11345_23)))
(assert (= temp11345_25 #x0000000000000000))
(assert (= temp11345_26 #x0000000000000000))
(assert (= temp11345_27 temp11345_26))
(assert (= temp11345_28 (select ARGNAME_padding_NAMEEND_VAL temp11345_27)))
(assert (= temp11345_29 #x0000000000000000))
(assert (= temp11345_30 #x0000000000000001))
(assert (= temp11345_31 temp11345_30))
(assert (= temp11345_32 (select ARGNAME_padding_NAMEEND_VAL temp11345_31)))
(assert (= temp11345_33 #x0000000000000000))
(assert (= temp11345_34 #x0000000000000002))
(assert (= temp11345_35 temp11345_34))
(assert (= temp11345_36 (select ARGNAME_padding_NAMEEND_VAL temp11345_35)))
(assert (= temp11345_37 #x0000000000000000))
(assert (= temp11345_38 #x0000000000000003))
(assert (= temp11345_39 temp11345_38))
(assert (= temp11345_40 (select ARGNAME_padding_NAMEEND_VAL temp11345_39)))
(assert (= temp11345_41 #x0000000000000000))
(assert (= temp11345_42 #x0000000000000004))
(assert (= temp11345_43 temp11345_42))
(assert (= temp11345_44 (select ARGNAME_padding_NAMEEND_VAL temp11345_43)))
(assert (= temp11345_45 #x0000000000000000))
(assert (= temp11345_46 #x0000000000000005))
(assert (= temp11345_47 temp11345_46))
(assert (= temp11345_48 (select ARGNAME_padding_NAMEEND_VAL temp11345_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp11345_28 temp11345_25)
             (bvslt temp11345_32 temp11345_29)
             (bvslt temp11345_36 temp11345_33)
             (bvslt temp11345_40 temp11345_37)
             (bvslt temp11345_44 temp11345_41)
             (bvslt temp11345_48 temp11345_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11345_49 #x0000000000000000))
(assert (= var1191714 temp11345_49))
(assert (= temp11345_50 #x0000000000000000))
(assert (= temp11345_51 temp11345_50))
(assert (= temp11345_52 (select ARGNAME_output_padding_NAMEEND_VAL temp11345_51)))
(assert (= temp11345_53 #x0000000000000001))
(assert (= temp11345_54 temp11345_53))
(assert (= temp11345_55 (select ARGNAME_output_padding_NAMEEND_VAL temp11345_54)))
(assert (= temp11345_56 #x0000000000000002))
(assert (= temp11345_57 temp11345_56))
(assert (= temp11345_58 (select ARGNAME_output_padding_NAMEEND_VAL temp11345_57)))
(assert (= temp11345_59 #x0000000000000003))
(assert (= temp11345_60 temp11345_59))
(assert (= temp11345_61 (select ARGNAME_output_padding_NAMEEND_VAL temp11345_60)))
(assert (= temp11345_62 #x0000000000000004))
(assert (= temp11345_63 temp11345_62))
(assert (= temp11345_64 (select ARGNAME_output_padding_NAMEEND_VAL temp11345_63)))
(assert (= temp11345_65 #x0000000000000005))
(assert (= temp11345_66 temp11345_65))
(assert (= temp11345_67 (select ARGNAME_output_padding_NAMEEND_VAL temp11345_66)))
(assert (= temp11345_68 #x0000000000000000))
(assert (= temp11345_69 #x0000000000000000))
(assert (= temp11345_70 temp11345_69))
(assert (= temp11345_71 (select ARGNAME_output_padding_NAMEEND_VAL temp11345_70)))
(assert (= temp11345_72 #x0000000000000000))
(assert (= temp11345_73 #x0000000000000001))
(assert (= temp11345_74 temp11345_73))
(assert (= temp11345_75 (select ARGNAME_output_padding_NAMEEND_VAL temp11345_74)))
(assert (= temp11345_76 #x0000000000000000))
(assert (= temp11345_77 #x0000000000000002))
(assert (= temp11345_78 temp11345_77))
(assert (= temp11345_79 (select ARGNAME_output_padding_NAMEEND_VAL temp11345_78)))
(assert (= temp11345_80 #x0000000000000000))
(assert (= temp11345_81 #x0000000000000003))
(assert (= temp11345_82 temp11345_81))
(assert (= temp11345_83 (select ARGNAME_output_padding_NAMEEND_VAL temp11345_82)))
(assert (= temp11345_84 #x0000000000000000))
(assert (= temp11345_85 #x0000000000000004))
(assert (= temp11345_86 temp11345_85))
(assert (= temp11345_87 (select ARGNAME_output_padding_NAMEEND_VAL temp11345_86)))
(assert (= temp11345_88 #x0000000000000000))
(assert (= temp11345_89 #x0000000000000005))
(assert (= temp11345_90 temp11345_89))
(assert (= temp11345_91 (select ARGNAME_output_padding_NAMEEND_VAL temp11345_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp11345_71 temp11345_68)
             (bvslt temp11345_75 temp11345_72)
             (bvslt temp11345_79 temp11345_76)
             (bvslt temp11345_83 temp11345_80)
             (bvslt temp11345_87 temp11345_84)
             (bvslt temp11345_91 temp11345_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11345_92 #x0000000000000000))
(assert (= var1191725 temp11345_92))
(assert (= temp11345_93 #x0000000000000000))
(assert (= temp11345_94 temp11345_93))
(assert (= temp11345_95 (select ARGNAME_stride_NAMEEND_VAL temp11345_94)))
(assert (= temp11345_96 #x0000000000000001))
(assert (= temp11345_97 temp11345_96))
(assert (= temp11345_98 (select ARGNAME_stride_NAMEEND_VAL temp11345_97)))
(assert (= temp11345_99 #x0000000000000002))
(assert (= temp11345_100 temp11345_99))
(assert (= temp11345_101 (select ARGNAME_stride_NAMEEND_VAL temp11345_100)))
(assert (= temp11345_102 #x0000000000000003))
(assert (= temp11345_103 temp11345_102))
(assert (= temp11345_104 (select ARGNAME_stride_NAMEEND_VAL temp11345_103)))
(assert (= temp11345_105 #x0000000000000004))
(assert (= temp11345_106 temp11345_105))
(assert (= temp11345_107 (select ARGNAME_stride_NAMEEND_VAL temp11345_106)))
(assert (= temp11345_108 #x0000000000000005))
(assert (= temp11345_109 temp11345_108))
(assert (= temp11345_110 (select ARGNAME_stride_NAMEEND_VAL temp11345_109)))
(assert (= temp11345_111 #x0000000000000000))
(assert (= temp11345_112 #x0000000000000000))
(assert (= temp11345_113 temp11345_112))
(assert (= temp11345_114 (select ARGNAME_stride_NAMEEND_VAL temp11345_113)))
(assert (= temp11345_115 #x0000000000000000))
(assert (= temp11345_116 #x0000000000000001))
(assert (= temp11345_117 temp11345_116))
(assert (= temp11345_118 (select ARGNAME_stride_NAMEEND_VAL temp11345_117)))
(assert (= temp11345_119 #x0000000000000000))
(assert (= temp11345_120 #x0000000000000002))
(assert (= temp11345_121 temp11345_120))
(assert (= temp11345_122 (select ARGNAME_stride_NAMEEND_VAL temp11345_121)))
(assert (= temp11345_123 #x0000000000000000))
(assert (= temp11345_124 #x0000000000000003))
(assert (= temp11345_125 temp11345_124))
(assert (= temp11345_126 (select ARGNAME_stride_NAMEEND_VAL temp11345_125)))
(assert (= temp11345_127 #x0000000000000000))
(assert (= temp11345_128 #x0000000000000004))
(assert (= temp11345_129 temp11345_128))
(assert (= temp11345_130 (select ARGNAME_stride_NAMEEND_VAL temp11345_129)))
(assert (= temp11345_131 #x0000000000000000))
(assert (= temp11345_132 #x0000000000000005))
(assert (= temp11345_133 temp11345_132))
(assert (= temp11345_134 (select ARGNAME_stride_NAMEEND_VAL temp11345_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp11345_114 temp11345_111)
             (bvsle temp11345_118 temp11345_115)
             (bvsle temp11345_122 temp11345_119)
             (bvsle temp11345_126 temp11345_123)
             (bvsle temp11345_130 temp11345_127)
             (bvsle temp11345_134 temp11345_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11345_135 #x0000000000000000))
(assert (= var1191735 temp11345_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11345_136 #x0000000000000001))
(assert (= var1191747 temp11345_136))
(assert (= temp11345_137 #x0000000000000000))
(assert (= var1179826 temp11345_137))
(assert (= temp11345_138 #x0000000000000000))
(assert (= temp11345_139 temp11345_138))
(assert (= temp11345_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11345_139)))
(assert (= temp11345_141 #x0000000000000001))
(assert (= temp11345_142 temp11345_141))
(assert (= temp11345_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11345_142)))
(assert (= temp11345_144 #x0000000000000002))
(assert (= temp11345_145 temp11345_144))
(assert (= temp11345_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11345_145)))
(assert (= temp11345_147 #x0000000000000003))
(assert (= temp11345_148 temp11345_147))
(assert (= temp11345_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11345_148)))
(assert (= temp11345_150 #x0000000000000004))
(assert (= temp11345_151 temp11345_150))
(assert (= temp11345_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11345_151)))
(assert (= temp11345_153 #x0000000000000005))
(assert (= temp11345_154 temp11345_153))
(assert (= temp11345_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11345_154)))
(assert (= temp11345_157 var1179826))
(assert (= temp11345_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11345_157)))
(assert (= temp11345_156 temp11345_158))
(assert (= var1191780
   (ite (bvslt temp11345_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11345_159 #x0000000000000000))
(assert (= var1191780 temp11345_159))
(assert (= temp11345_160 #x0000000000000000))
(assert (= var1179826 temp11345_160))
(assert (= temp11345_162 var1179826))
(assert (= temp11345_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11345_162)))
(assert (= temp11345_161 temp11345_163))
(assert (= var1191802 (bvsmod temp11345_161 ARGNAME_groups_NAMEEND)))
(assert (= temp11345_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp11345_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp11345_165 #x0000000000000001))
(assert (= var1191803 temp11345_165))
(assert (= temp11345_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp11345_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11345_167 #x0000000000000001))
(assert (= var1191823 temp11345_167))
(assert (= temp11345_168 #x0000000000000001))
(assert (= var1180714 temp11345_168))
(assert (= temp11345_169 #x0000000000000000))
(assert (= temp11345_170 temp11345_169))
(assert (= temp11345_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp11345_170)))
(assert (= temp11345_172 #x0000000000000001))
(assert (= temp11345_173 temp11345_172))
(assert (= temp11345_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp11345_173)))
(assert (= temp11345_175 #x0000000000000002))
(assert (= temp11345_176 temp11345_175))
(assert (= temp11345_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp11345_176)))
(assert (= temp11345_178 #x0000000000000003))
(assert (= temp11345_179 temp11345_178))
(assert (= temp11345_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp11345_179)))
(assert (= temp11345_181 #x0000000000000004))
(assert (= temp11345_182 temp11345_181))
(assert (= temp11345_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp11345_182)))
(assert (= temp11345_184 #x0000000000000005))
(assert (= temp11345_185 temp11345_184))
(assert (= temp11345_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp11345_185)))
(assert (= temp11345_187 #x0000000000000000))
(assert (= temp11345_188
   (ite (bvslt var1180714 temp11345_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp11345_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp11345_188)))
(assert (= var1191831 temp11345_189))
(assert (bvslt (ite (bvslt var1180714 temp11345_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11345_190 #x0000000000000001))
(assert (= var1180714 temp11345_190))
(assert (= temp11345_192 var1180714))
(assert (= temp11345_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11345_192)))
(assert (= temp11345_191 temp11345_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp11345_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp11345_194 #x0000000000000001))
(assert (= var1191836 temp11345_194))
(assert (= temp11345_195 #x0000000000000000))
(assert (= var1179826 temp11345_195))
(assert (= temp11345_197 var1179826))
(assert (= temp11345_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp11345_197)))
(assert (= temp11345_196 temp11345_198))
(assert (= temp11345_199 #x0000000000000002))
(assert (= var1586025 temp11345_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp11345_200 #x0000000000000001))
(assert (= var1191993 temp11345_200))
(assert (= temp11345_201 #x0000000000000001))
(assert (= var2700303 temp11345_201))
(assert (= temp11345_202 #x0000000000000001))
(assert (= var2962447 temp11345_202))
(assert (= temp11345_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp11345_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11345_204 #x0000000000000001))
(assert (= var211058 temp11345_204))
(assert (= temp11345_205 #x0000000000000001))
(assert (= var211188 temp11345_205))
(assert (= var3879401 var211188))
(assert (= temp11345_206 #x0000000000000000))
(assert (= var3866802 temp11345_206))
(assert (= temp11345_207 #x0000000000000000))
(assert (= temp11345_208
   (ite (bvslt var3866802 temp11345_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp11345_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp11345_208)))
(assert (= var3879420 temp11345_209))
(assert (bvslt (ite (bvslt var3866802 temp11345_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11345_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp11345_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp11345_211 #x0000000000000000))
(assert (= var3879421 temp11345_211))
(assert (= temp11345_212 #x0000000000000001))
(assert (= var3867690 temp11345_212))
(assert (= temp11345_213 #x0000000000000000))
(assert (= temp11345_214
   (ite (bvslt var3867690 temp11345_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp11345_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp11345_214)))
(assert (= var3879423 temp11345_215))
(assert (bvslt (ite (bvslt var3867690 temp11345_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp11345_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp11345_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp11345_217 #x0000000000000001))
(assert (= var3879424 temp11345_217))
(assert (= temp11345_218 #x0000000000000000))
(assert (= var4133117 temp11345_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp11345_219 #x0000000000000002))
(assert (= var4404867 temp11345_219))
(assert (= var4404869 (bvsub ARGNAME_weight_NAMEEND_DIM var4404867)))
(assert (= var4470412 var4404867))
(assert (= var4470413 var4404869))
(assert (= var4470426 (bvadd var4470413 var4470412)))
(assert (= var4470428
   (ite (bvsgt var4470426 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11345_220 #x0000000000000000))
(assert (= var4470428 temp11345_220))
(assert (= var4470453 var4470412))
(assert (= var4470455 var4470413))
(assert (= var4591443 var4470455))
(assert (= var4993424 var211201))
(assert (= var211962 var210913))
(assert (= temp11345_221 #x0000000000000000))
(assert (= var211963
   (ite (distinct var211962 temp11345_221)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp11345_222 #x0000000000000001))
(assert (= var211058 temp11345_222))
(model-add temp11345_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp11345_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp11345_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp11345_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





