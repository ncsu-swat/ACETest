(declare-fun temp10862_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10862_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10862_3 () (_ BitVec 64))
(declare-fun temp10862_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10862_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10862_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10862_7 () (_ BitVec 64))
(declare-fun temp10862_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10862_9 () (_ BitVec 64))
(declare-fun temp10862_10 () (_ BitVec 64))
(declare-fun temp10862_11 () (_ BitVec 64))
(declare-fun temp10862_12 () (_ BitVec 64))
(declare-fun temp10862_13 () (_ BitVec 64))
(declare-fun temp10862_14 () (_ BitVec 64))
(declare-fun temp10862_15 () (_ BitVec 64))
(declare-fun temp10862_16 () (_ BitVec 64))
(declare-fun temp10862_17 () (_ BitVec 64))
(declare-fun temp10862_18 () (_ BitVec 64))
(declare-fun temp10862_19 () (_ BitVec 64))
(declare-fun temp10862_20 () (_ BitVec 64))
(declare-fun temp10862_21 () (_ BitVec 64))
(declare-fun temp10862_22 () (_ BitVec 64))
(declare-fun temp10862_23 () (_ BitVec 64))
(declare-fun temp10862_24 () (_ BitVec 64))
(declare-fun temp10862_25 () (_ BitVec 64))
(declare-fun temp10862_26 () (_ BitVec 64))
(declare-fun temp10862_27 () (_ BitVec 64))
(declare-fun temp10862_28 () (_ BitVec 64))
(declare-fun temp10862_29 () (_ BitVec 64))
(declare-fun temp10862_30 () (_ BitVec 64))
(declare-fun temp10862_31 () (_ BitVec 64))
(declare-fun temp10862_32 () (_ BitVec 64))
(declare-fun temp10862_33 () (_ BitVec 64))
(declare-fun temp10862_34 () (_ BitVec 64))
(declare-fun temp10862_35 () (_ BitVec 64))
(declare-fun temp10862_36 () (_ BitVec 64))
(declare-fun temp10862_37 () (_ BitVec 64))
(declare-fun temp10862_38 () (_ BitVec 64))
(declare-fun temp10862_39 () (_ BitVec 64))
(declare-fun temp10862_40 () (_ BitVec 64))
(declare-fun temp10862_41 () (_ BitVec 64))
(declare-fun temp10862_42 () (_ BitVec 64))
(declare-fun temp10862_43 () (_ BitVec 64))
(declare-fun temp10862_44 () (_ BitVec 64))
(declare-fun temp10862_45 () (_ BitVec 64))
(declare-fun temp10862_46 () (_ BitVec 64))
(declare-fun temp10862_47 () (_ BitVec 64))
(declare-fun temp10862_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10862_49 () (_ BitVec 64))
(declare-fun temp10862_50 () (_ BitVec 64))
(declare-fun temp10862_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10862_52 () (_ BitVec 64))
(declare-fun temp10862_53 () (_ BitVec 64))
(declare-fun temp10862_54 () (_ BitVec 64))
(declare-fun temp10862_55 () (_ BitVec 64))
(declare-fun temp10862_56 () (_ BitVec 64))
(declare-fun temp10862_57 () (_ BitVec 64))
(declare-fun temp10862_58 () (_ BitVec 64))
(declare-fun temp10862_59 () (_ BitVec 64))
(declare-fun temp10862_60 () (_ BitVec 64))
(declare-fun temp10862_61 () (_ BitVec 64))
(declare-fun temp10862_62 () (_ BitVec 64))
(declare-fun temp10862_63 () (_ BitVec 64))
(declare-fun temp10862_64 () (_ BitVec 64))
(declare-fun temp10862_65 () (_ BitVec 64))
(declare-fun temp10862_66 () (_ BitVec 64))
(declare-fun temp10862_67 () (_ BitVec 64))
(declare-fun temp10862_68 () (_ BitVec 64))
(declare-fun temp10862_69 () (_ BitVec 64))
(declare-fun temp10862_70 () (_ BitVec 64))
(declare-fun temp10862_71 () (_ BitVec 64))
(declare-fun temp10862_72 () (_ BitVec 64))
(declare-fun temp10862_73 () (_ BitVec 64))
(declare-fun temp10862_74 () (_ BitVec 64))
(declare-fun temp10862_75 () (_ BitVec 64))
(declare-fun temp10862_76 () (_ BitVec 64))
(declare-fun temp10862_77 () (_ BitVec 64))
(declare-fun temp10862_78 () (_ BitVec 64))
(declare-fun temp10862_79 () (_ BitVec 64))
(declare-fun temp10862_80 () (_ BitVec 64))
(declare-fun temp10862_81 () (_ BitVec 64))
(declare-fun temp10862_82 () (_ BitVec 64))
(declare-fun temp10862_83 () (_ BitVec 64))
(declare-fun temp10862_84 () (_ BitVec 64))
(declare-fun temp10862_85 () (_ BitVec 64))
(declare-fun temp10862_86 () (_ BitVec 64))
(declare-fun temp10862_87 () (_ BitVec 64))
(declare-fun temp10862_88 () (_ BitVec 64))
(declare-fun temp10862_89 () (_ BitVec 64))
(declare-fun temp10862_90 () (_ BitVec 64))
(declare-fun temp10862_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10862_92 () (_ BitVec 64))
(declare-fun temp10862_93 () (_ BitVec 64))
(declare-fun temp10862_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10862_95 () (_ BitVec 64))
(declare-fun temp10862_96 () (_ BitVec 64))
(declare-fun temp10862_97 () (_ BitVec 64))
(declare-fun temp10862_98 () (_ BitVec 64))
(declare-fun temp10862_99 () (_ BitVec 64))
(declare-fun temp10862_100 () (_ BitVec 64))
(declare-fun temp10862_101 () (_ BitVec 64))
(declare-fun temp10862_102 () (_ BitVec 64))
(declare-fun temp10862_103 () (_ BitVec 64))
(declare-fun temp10862_104 () (_ BitVec 64))
(declare-fun temp10862_105 () (_ BitVec 64))
(declare-fun temp10862_106 () (_ BitVec 64))
(declare-fun temp10862_107 () (_ BitVec 64))
(declare-fun temp10862_108 () (_ BitVec 64))
(declare-fun temp10862_109 () (_ BitVec 64))
(declare-fun temp10862_110 () (_ BitVec 64))
(declare-fun temp10862_111 () (_ BitVec 64))
(declare-fun temp10862_112 () (_ BitVec 64))
(declare-fun temp10862_113 () (_ BitVec 64))
(declare-fun temp10862_114 () (_ BitVec 64))
(declare-fun temp10862_115 () (_ BitVec 64))
(declare-fun temp10862_116 () (_ BitVec 64))
(declare-fun temp10862_117 () (_ BitVec 64))
(declare-fun temp10862_118 () (_ BitVec 64))
(declare-fun temp10862_119 () (_ BitVec 64))
(declare-fun temp10862_120 () (_ BitVec 64))
(declare-fun temp10862_121 () (_ BitVec 64))
(declare-fun temp10862_122 () (_ BitVec 64))
(declare-fun temp10862_123 () (_ BitVec 64))
(declare-fun temp10862_124 () (_ BitVec 64))
(declare-fun temp10862_125 () (_ BitVec 64))
(declare-fun temp10862_126 () (_ BitVec 64))
(declare-fun temp10862_127 () (_ BitVec 64))
(declare-fun temp10862_128 () (_ BitVec 64))
(declare-fun temp10862_129 () (_ BitVec 64))
(declare-fun temp10862_130 () (_ BitVec 64))
(declare-fun temp10862_131 () (_ BitVec 64))
(declare-fun temp10862_132 () (_ BitVec 64))
(declare-fun temp10862_133 () (_ BitVec 64))
(declare-fun temp10862_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10862_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10862_136 () (_ BitVec 64))
(declare-fun temp10862_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10862_138 () (_ BitVec 64))
(declare-fun temp10862_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10862_140 () (_ BitVec 64))
(declare-fun temp10862_141 () (_ BitVec 64))
(declare-fun temp10862_142 () (_ BitVec 64))
(declare-fun temp10862_143 () (_ BitVec 64))
(declare-fun temp10862_144 () (_ BitVec 64))
(declare-fun temp10862_145 () (_ BitVec 64))
(declare-fun temp10862_146 () (_ BitVec 64))
(declare-fun temp10862_147 () (_ BitVec 64))
(declare-fun temp10862_148 () (_ BitVec 64))
(declare-fun temp10862_149 () (_ BitVec 64))
(declare-fun temp10862_150 () (_ BitVec 64))
(declare-fun temp10862_151 () (_ BitVec 64))
(declare-fun temp10862_152 () (_ BitVec 64))
(declare-fun temp10862_153 () (_ BitVec 64))
(declare-fun temp10862_154 () (_ BitVec 64))
(declare-fun temp10862_155 () (_ BitVec 64))
(declare-fun temp10862_157 () (_ BitVec 64))
(declare-fun temp10862_158 () (_ BitVec 64))
(declare-fun temp10862_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10862_159 () (_ BitVec 64))
(declare-fun temp10862_160 () (_ BitVec 64))
(declare-fun temp10862_162 () (_ BitVec 64))
(declare-fun temp10862_163 () (_ BitVec 64))
(declare-fun temp10862_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10862_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10862_165 () (_ BitVec 64))
(declare-fun temp10862_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10862_167 () (_ BitVec 64))
(declare-fun temp10862_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10862_169 () (_ BitVec 64))
(declare-fun temp10862_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10862_171 () (_ BitVec 64))
(declare-fun temp10862_172 () (_ BitVec 64))
(declare-fun temp10862_173 () (_ BitVec 64))
(declare-fun temp10862_174 () (_ BitVec 64))
(declare-fun temp10862_175 () (_ BitVec 64))
(declare-fun temp10862_176 () (_ BitVec 64))
(declare-fun temp10862_177 () (_ BitVec 64))
(declare-fun temp10862_178 () (_ BitVec 64))
(declare-fun temp10862_179 () (_ BitVec 64))
(declare-fun temp10862_180 () (_ BitVec 64))
(declare-fun temp10862_181 () (_ BitVec 64))
(declare-fun temp10862_182 () (_ BitVec 64))
(declare-fun temp10862_183 () (_ BitVec 64))
(declare-fun temp10862_184 () (_ BitVec 64))
(declare-fun temp10862_185 () (_ BitVec 64))
(declare-fun temp10862_186 () (_ BitVec 64))
(declare-fun temp10862_187 () (_ BitVec 64))
(declare-fun temp10862_188 () (_ BitVec 64))
(declare-fun temp10862_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10862_190 () (_ BitVec 64))
(declare-fun temp10862_192 () (_ BitVec 64))
(declare-fun temp10862_193 () (_ BitVec 64))
(declare-fun temp10862_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10862_194 () (_ BitVec 64))
(declare-fun temp10862_195 () (_ BitVec 64))
(declare-fun temp10862_197 () (_ BitVec 64))
(declare-fun temp10862_198 () (_ BitVec 64))
(declare-fun temp10862_196 () (_ BitVec 64))
(declare-fun temp10862_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10862_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10862_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10862_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10862_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10862_204 () (_ BitVec 64))
(declare-fun temp10862_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10862_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10862_207 () (_ BitVec 64))
(declare-fun temp10862_208 () (_ BitVec 64))
(declare-fun temp10862_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10862_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10862_211 () (_ BitVec 64))
(declare-fun temp10862_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10862_213 () (_ BitVec 64))
(declare-fun temp10862_214 () (_ BitVec 64))
(declare-fun temp10862_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10862_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10862_217 () (_ BitVec 64))
(declare-fun temp10862_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10862_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10862_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var5452176 () (_ BitVec 64))
(declare-fun var5714320 () (_ BitVec 64))
(declare-fun temp10862_221 () (_ BitVec 64))
(assert (= temp10862_1 #x0000000000000001))
(assert (= var77203 temp10862_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10862_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10862_2)))
(assert (= temp10862_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10862_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10862_4 #x0000000000000000))
(assert (= var210941 temp10862_4))
(assert (= temp10862_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10862_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10862_6 #x0000000000000000))
(assert (= var210986 temp10862_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10862_7 #x0000000000000000))
(assert (= temp10862_8 temp10862_7))
(assert (= temp10862_9 (select ARGNAME_padding_NAMEEND_VAL temp10862_8)))
(assert (= temp10862_10 #x0000000000000001))
(assert (= temp10862_11 temp10862_10))
(assert (= temp10862_12 (select ARGNAME_padding_NAMEEND_VAL temp10862_11)))
(assert (= temp10862_13 #x0000000000000002))
(assert (= temp10862_14 temp10862_13))
(assert (= temp10862_15 (select ARGNAME_padding_NAMEEND_VAL temp10862_14)))
(assert (= temp10862_16 #x0000000000000003))
(assert (= temp10862_17 temp10862_16))
(assert (= temp10862_18 (select ARGNAME_padding_NAMEEND_VAL temp10862_17)))
(assert (= temp10862_19 #x0000000000000004))
(assert (= temp10862_20 temp10862_19))
(assert (= temp10862_21 (select ARGNAME_padding_NAMEEND_VAL temp10862_20)))
(assert (= temp10862_22 #x0000000000000005))
(assert (= temp10862_23 temp10862_22))
(assert (= temp10862_24 (select ARGNAME_padding_NAMEEND_VAL temp10862_23)))
(assert (= temp10862_25 #x0000000000000000))
(assert (= temp10862_26 #x0000000000000000))
(assert (= temp10862_27 temp10862_26))
(assert (= temp10862_28 (select ARGNAME_padding_NAMEEND_VAL temp10862_27)))
(assert (= temp10862_29 #x0000000000000000))
(assert (= temp10862_30 #x0000000000000001))
(assert (= temp10862_31 temp10862_30))
(assert (= temp10862_32 (select ARGNAME_padding_NAMEEND_VAL temp10862_31)))
(assert (= temp10862_33 #x0000000000000000))
(assert (= temp10862_34 #x0000000000000002))
(assert (= temp10862_35 temp10862_34))
(assert (= temp10862_36 (select ARGNAME_padding_NAMEEND_VAL temp10862_35)))
(assert (= temp10862_37 #x0000000000000000))
(assert (= temp10862_38 #x0000000000000003))
(assert (= temp10862_39 temp10862_38))
(assert (= temp10862_40 (select ARGNAME_padding_NAMEEND_VAL temp10862_39)))
(assert (= temp10862_41 #x0000000000000000))
(assert (= temp10862_42 #x0000000000000004))
(assert (= temp10862_43 temp10862_42))
(assert (= temp10862_44 (select ARGNAME_padding_NAMEEND_VAL temp10862_43)))
(assert (= temp10862_45 #x0000000000000000))
(assert (= temp10862_46 #x0000000000000005))
(assert (= temp10862_47 temp10862_46))
(assert (= temp10862_48 (select ARGNAME_padding_NAMEEND_VAL temp10862_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10862_28 temp10862_25)
             (bvslt temp10862_32 temp10862_29)
             (bvslt temp10862_36 temp10862_33)
             (bvslt temp10862_40 temp10862_37)
             (bvslt temp10862_44 temp10862_41)
             (bvslt temp10862_48 temp10862_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10862_49 #x0000000000000000))
(assert (= var1191714 temp10862_49))
(assert (= temp10862_50 #x0000000000000000))
(assert (= temp10862_51 temp10862_50))
(assert (= temp10862_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10862_51)))
(assert (= temp10862_53 #x0000000000000001))
(assert (= temp10862_54 temp10862_53))
(assert (= temp10862_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10862_54)))
(assert (= temp10862_56 #x0000000000000002))
(assert (= temp10862_57 temp10862_56))
(assert (= temp10862_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10862_57)))
(assert (= temp10862_59 #x0000000000000003))
(assert (= temp10862_60 temp10862_59))
(assert (= temp10862_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10862_60)))
(assert (= temp10862_62 #x0000000000000004))
(assert (= temp10862_63 temp10862_62))
(assert (= temp10862_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10862_63)))
(assert (= temp10862_65 #x0000000000000005))
(assert (= temp10862_66 temp10862_65))
(assert (= temp10862_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10862_66)))
(assert (= temp10862_68 #x0000000000000000))
(assert (= temp10862_69 #x0000000000000000))
(assert (= temp10862_70 temp10862_69))
(assert (= temp10862_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10862_70)))
(assert (= temp10862_72 #x0000000000000000))
(assert (= temp10862_73 #x0000000000000001))
(assert (= temp10862_74 temp10862_73))
(assert (= temp10862_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10862_74)))
(assert (= temp10862_76 #x0000000000000000))
(assert (= temp10862_77 #x0000000000000002))
(assert (= temp10862_78 temp10862_77))
(assert (= temp10862_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10862_78)))
(assert (= temp10862_80 #x0000000000000000))
(assert (= temp10862_81 #x0000000000000003))
(assert (= temp10862_82 temp10862_81))
(assert (= temp10862_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10862_82)))
(assert (= temp10862_84 #x0000000000000000))
(assert (= temp10862_85 #x0000000000000004))
(assert (= temp10862_86 temp10862_85))
(assert (= temp10862_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10862_86)))
(assert (= temp10862_88 #x0000000000000000))
(assert (= temp10862_89 #x0000000000000005))
(assert (= temp10862_90 temp10862_89))
(assert (= temp10862_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10862_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10862_71 temp10862_68)
             (bvslt temp10862_75 temp10862_72)
             (bvslt temp10862_79 temp10862_76)
             (bvslt temp10862_83 temp10862_80)
             (bvslt temp10862_87 temp10862_84)
             (bvslt temp10862_91 temp10862_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10862_92 #x0000000000000000))
(assert (= var1191725 temp10862_92))
(assert (= temp10862_93 #x0000000000000000))
(assert (= temp10862_94 temp10862_93))
(assert (= temp10862_95 (select ARGNAME_stride_NAMEEND_VAL temp10862_94)))
(assert (= temp10862_96 #x0000000000000001))
(assert (= temp10862_97 temp10862_96))
(assert (= temp10862_98 (select ARGNAME_stride_NAMEEND_VAL temp10862_97)))
(assert (= temp10862_99 #x0000000000000002))
(assert (= temp10862_100 temp10862_99))
(assert (= temp10862_101 (select ARGNAME_stride_NAMEEND_VAL temp10862_100)))
(assert (= temp10862_102 #x0000000000000003))
(assert (= temp10862_103 temp10862_102))
(assert (= temp10862_104 (select ARGNAME_stride_NAMEEND_VAL temp10862_103)))
(assert (= temp10862_105 #x0000000000000004))
(assert (= temp10862_106 temp10862_105))
(assert (= temp10862_107 (select ARGNAME_stride_NAMEEND_VAL temp10862_106)))
(assert (= temp10862_108 #x0000000000000005))
(assert (= temp10862_109 temp10862_108))
(assert (= temp10862_110 (select ARGNAME_stride_NAMEEND_VAL temp10862_109)))
(assert (= temp10862_111 #x0000000000000000))
(assert (= temp10862_112 #x0000000000000000))
(assert (= temp10862_113 temp10862_112))
(assert (= temp10862_114 (select ARGNAME_stride_NAMEEND_VAL temp10862_113)))
(assert (= temp10862_115 #x0000000000000000))
(assert (= temp10862_116 #x0000000000000001))
(assert (= temp10862_117 temp10862_116))
(assert (= temp10862_118 (select ARGNAME_stride_NAMEEND_VAL temp10862_117)))
(assert (= temp10862_119 #x0000000000000000))
(assert (= temp10862_120 #x0000000000000002))
(assert (= temp10862_121 temp10862_120))
(assert (= temp10862_122 (select ARGNAME_stride_NAMEEND_VAL temp10862_121)))
(assert (= temp10862_123 #x0000000000000000))
(assert (= temp10862_124 #x0000000000000003))
(assert (= temp10862_125 temp10862_124))
(assert (= temp10862_126 (select ARGNAME_stride_NAMEEND_VAL temp10862_125)))
(assert (= temp10862_127 #x0000000000000000))
(assert (= temp10862_128 #x0000000000000004))
(assert (= temp10862_129 temp10862_128))
(assert (= temp10862_130 (select ARGNAME_stride_NAMEEND_VAL temp10862_129)))
(assert (= temp10862_131 #x0000000000000000))
(assert (= temp10862_132 #x0000000000000005))
(assert (= temp10862_133 temp10862_132))
(assert (= temp10862_134 (select ARGNAME_stride_NAMEEND_VAL temp10862_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10862_114 temp10862_111)
             (bvsle temp10862_118 temp10862_115)
             (bvsle temp10862_122 temp10862_119)
             (bvsle temp10862_126 temp10862_123)
             (bvsle temp10862_130 temp10862_127)
             (bvsle temp10862_134 temp10862_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10862_135 #x0000000000000000))
(assert (= var1191735 temp10862_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10862_136 #x0000000000000001))
(assert (= var1191747 temp10862_136))
(assert (= temp10862_137 #x0000000000000000))
(assert (= var1179826 temp10862_137))
(assert (= temp10862_138 #x0000000000000000))
(assert (= temp10862_139 temp10862_138))
(assert (= temp10862_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10862_139)))
(assert (= temp10862_141 #x0000000000000001))
(assert (= temp10862_142 temp10862_141))
(assert (= temp10862_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10862_142)))
(assert (= temp10862_144 #x0000000000000002))
(assert (= temp10862_145 temp10862_144))
(assert (= temp10862_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10862_145)))
(assert (= temp10862_147 #x0000000000000003))
(assert (= temp10862_148 temp10862_147))
(assert (= temp10862_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10862_148)))
(assert (= temp10862_150 #x0000000000000004))
(assert (= temp10862_151 temp10862_150))
(assert (= temp10862_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10862_151)))
(assert (= temp10862_153 #x0000000000000005))
(assert (= temp10862_154 temp10862_153))
(assert (= temp10862_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10862_154)))
(assert (= temp10862_157 var1179826))
(assert (= temp10862_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10862_157)))
(assert (= temp10862_156 temp10862_158))
(assert (= var1191780
   (ite (bvslt temp10862_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10862_159 #x0000000000000000))
(assert (= var1191780 temp10862_159))
(assert (= temp10862_160 #x0000000000000000))
(assert (= var1179826 temp10862_160))
(assert (= temp10862_162 var1179826))
(assert (= temp10862_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10862_162)))
(assert (= temp10862_161 temp10862_163))
(assert (= var1191802 (bvsmod temp10862_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10862_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10862_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10862_165 #x0000000000000001))
(assert (= var1191803 temp10862_165))
(assert (= temp10862_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10862_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10862_167 #x0000000000000001))
(assert (= var1191823 temp10862_167))
(assert (= temp10862_168 #x0000000000000001))
(assert (= var1180714 temp10862_168))
(assert (= temp10862_169 #x0000000000000000))
(assert (= temp10862_170 temp10862_169))
(assert (= temp10862_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10862_170)))
(assert (= temp10862_172 #x0000000000000001))
(assert (= temp10862_173 temp10862_172))
(assert (= temp10862_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10862_173)))
(assert (= temp10862_175 #x0000000000000002))
(assert (= temp10862_176 temp10862_175))
(assert (= temp10862_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10862_176)))
(assert (= temp10862_178 #x0000000000000003))
(assert (= temp10862_179 temp10862_178))
(assert (= temp10862_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10862_179)))
(assert (= temp10862_181 #x0000000000000004))
(assert (= temp10862_182 temp10862_181))
(assert (= temp10862_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10862_182)))
(assert (= temp10862_184 #x0000000000000005))
(assert (= temp10862_185 temp10862_184))
(assert (= temp10862_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10862_185)))
(assert (= temp10862_187 #x0000000000000000))
(assert (= temp10862_188
   (ite (bvslt var1180714 temp10862_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10862_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10862_188)))
(assert (= var1191831 temp10862_189))
(assert (bvslt (ite (bvslt var1180714 temp10862_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10862_190 #x0000000000000001))
(assert (= var1180714 temp10862_190))
(assert (= temp10862_192 var1180714))
(assert (= temp10862_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10862_192)))
(assert (= temp10862_191 temp10862_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10862_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10862_194 #x0000000000000001))
(assert (= var1191836 temp10862_194))
(assert (= temp10862_195 #x0000000000000000))
(assert (= var1179826 temp10862_195))
(assert (= temp10862_197 var1179826))
(assert (= temp10862_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10862_197)))
(assert (= temp10862_196 temp10862_198))
(assert (= temp10862_199 #x0000000000000002))
(assert (= var1586025 temp10862_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10862_200 #x0000000000000001))
(assert (= var1191993 temp10862_200))
(assert (= temp10862_201 #x0000000000000001))
(assert (= var2700303 temp10862_201))
(assert (= temp10862_202 #x0000000000000001))
(assert (= var2962447 temp10862_202))
(assert (= temp10862_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10862_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10862_204 #x0000000000000001))
(assert (= var211058 temp10862_204))
(assert (= temp10862_205 #x0000000000000001))
(assert (= var211188 temp10862_205))
(assert (= var3879401 var211188))
(assert (= temp10862_206 #x0000000000000000))
(assert (= var3866802 temp10862_206))
(assert (= temp10862_207 #x0000000000000000))
(assert (= temp10862_208
   (ite (bvslt var3866802 temp10862_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10862_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10862_208)))
(assert (= var3879420 temp10862_209))
(assert (bvslt (ite (bvslt var3866802 temp10862_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10862_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10862_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10862_211 #x0000000000000000))
(assert (= var3879421 temp10862_211))
(assert (= temp10862_212 #x0000000000000001))
(assert (= var3867690 temp10862_212))
(assert (= temp10862_213 #x0000000000000000))
(assert (= temp10862_214
   (ite (bvslt var3867690 temp10862_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10862_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10862_214)))
(assert (= var3879423 temp10862_215))
(assert (bvslt (ite (bvslt var3867690 temp10862_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10862_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10862_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10862_217 #x0000000000000001))
(assert (= var3879424 temp10862_217))
(assert (= temp10862_218 #x0000000000000000))
(assert (= var4133117 temp10862_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10862_219 #x0000000000000002))
(assert (= var4339331 temp10862_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10862_220 #x0000000000000000))
(assert (= var4404892 temp10862_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var5452176 var211201))
(assert (= var5714320 var211201))
(assert (= temp10862_221 #x0000000000000001))
(assert (= var211058 temp10862_221))
(model-add temp10862_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10862_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10862_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10862_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





