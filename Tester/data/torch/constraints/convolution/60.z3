(declare-fun temp80_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp80_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp80_3 () (_ BitVec 64))
(declare-fun temp80_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp80_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp80_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp80_7 () (_ BitVec 64))
(declare-fun temp80_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp80_9 () (_ BitVec 64))
(declare-fun temp80_10 () (_ BitVec 64))
(declare-fun temp80_11 () (_ BitVec 64))
(declare-fun temp80_12 () (_ BitVec 64))
(declare-fun temp80_13 () (_ BitVec 64))
(declare-fun temp80_14 () (_ BitVec 64))
(declare-fun temp80_15 () (_ BitVec 64))
(declare-fun temp80_16 () (_ BitVec 64))
(declare-fun temp80_17 () (_ BitVec 64))
(declare-fun temp80_18 () (_ BitVec 64))
(declare-fun temp80_19 () (_ BitVec 64))
(declare-fun temp80_20 () (_ BitVec 64))
(declare-fun temp80_21 () (_ BitVec 64))
(declare-fun temp80_22 () (_ BitVec 64))
(declare-fun temp80_23 () (_ BitVec 64))
(declare-fun temp80_24 () (_ BitVec 64))
(declare-fun temp80_25 () (_ BitVec 64))
(declare-fun temp80_26 () (_ BitVec 64))
(declare-fun temp80_27 () (_ BitVec 64))
(declare-fun temp80_28 () (_ BitVec 64))
(declare-fun temp80_29 () (_ BitVec 64))
(declare-fun temp80_30 () (_ BitVec 64))
(declare-fun temp80_31 () (_ BitVec 64))
(declare-fun temp80_32 () (_ BitVec 64))
(declare-fun temp80_33 () (_ BitVec 64))
(declare-fun temp80_34 () (_ BitVec 64))
(declare-fun temp80_35 () (_ BitVec 64))
(declare-fun temp80_36 () (_ BitVec 64))
(declare-fun temp80_37 () (_ BitVec 64))
(declare-fun temp80_38 () (_ BitVec 64))
(declare-fun temp80_39 () (_ BitVec 64))
(declare-fun temp80_40 () (_ BitVec 64))
(declare-fun temp80_41 () (_ BitVec 64))
(declare-fun temp80_42 () (_ BitVec 64))
(declare-fun temp80_43 () (_ BitVec 64))
(declare-fun temp80_44 () (_ BitVec 64))
(declare-fun temp80_45 () (_ BitVec 64))
(declare-fun temp80_46 () (_ BitVec 64))
(declare-fun temp80_47 () (_ BitVec 64))
(declare-fun temp80_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp80_49 () (_ BitVec 64))
(declare-fun temp80_50 () (_ BitVec 64))
(declare-fun temp80_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp80_52 () (_ BitVec 64))
(declare-fun temp80_53 () (_ BitVec 64))
(declare-fun temp80_54 () (_ BitVec 64))
(declare-fun temp80_55 () (_ BitVec 64))
(declare-fun temp80_56 () (_ BitVec 64))
(declare-fun temp80_57 () (_ BitVec 64))
(declare-fun temp80_58 () (_ BitVec 64))
(declare-fun temp80_59 () (_ BitVec 64))
(declare-fun temp80_60 () (_ BitVec 64))
(declare-fun temp80_61 () (_ BitVec 64))
(declare-fun temp80_62 () (_ BitVec 64))
(declare-fun temp80_63 () (_ BitVec 64))
(declare-fun temp80_64 () (_ BitVec 64))
(declare-fun temp80_65 () (_ BitVec 64))
(declare-fun temp80_66 () (_ BitVec 64))
(declare-fun temp80_67 () (_ BitVec 64))
(declare-fun temp80_68 () (_ BitVec 64))
(declare-fun temp80_69 () (_ BitVec 64))
(declare-fun temp80_70 () (_ BitVec 64))
(declare-fun temp80_71 () (_ BitVec 64))
(declare-fun temp80_72 () (_ BitVec 64))
(declare-fun temp80_73 () (_ BitVec 64))
(declare-fun temp80_74 () (_ BitVec 64))
(declare-fun temp80_75 () (_ BitVec 64))
(declare-fun temp80_76 () (_ BitVec 64))
(declare-fun temp80_77 () (_ BitVec 64))
(declare-fun temp80_78 () (_ BitVec 64))
(declare-fun temp80_79 () (_ BitVec 64))
(declare-fun temp80_80 () (_ BitVec 64))
(declare-fun temp80_81 () (_ BitVec 64))
(declare-fun temp80_82 () (_ BitVec 64))
(declare-fun temp80_83 () (_ BitVec 64))
(declare-fun temp80_84 () (_ BitVec 64))
(declare-fun temp80_85 () (_ BitVec 64))
(declare-fun temp80_86 () (_ BitVec 64))
(declare-fun temp80_87 () (_ BitVec 64))
(declare-fun temp80_88 () (_ BitVec 64))
(declare-fun temp80_89 () (_ BitVec 64))
(declare-fun temp80_90 () (_ BitVec 64))
(declare-fun temp80_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp80_92 () (_ BitVec 64))
(declare-fun temp80_93 () (_ BitVec 64))
(declare-fun temp80_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp80_95 () (_ BitVec 64))
(declare-fun temp80_96 () (_ BitVec 64))
(declare-fun temp80_97 () (_ BitVec 64))
(declare-fun temp80_98 () (_ BitVec 64))
(declare-fun temp80_99 () (_ BitVec 64))
(declare-fun temp80_100 () (_ BitVec 64))
(declare-fun temp80_101 () (_ BitVec 64))
(declare-fun temp80_102 () (_ BitVec 64))
(declare-fun temp80_103 () (_ BitVec 64))
(declare-fun temp80_104 () (_ BitVec 64))
(declare-fun temp80_105 () (_ BitVec 64))
(declare-fun temp80_106 () (_ BitVec 64))
(declare-fun temp80_107 () (_ BitVec 64))
(declare-fun temp80_108 () (_ BitVec 64))
(declare-fun temp80_109 () (_ BitVec 64))
(declare-fun temp80_110 () (_ BitVec 64))
(declare-fun temp80_111 () (_ BitVec 64))
(declare-fun temp80_112 () (_ BitVec 64))
(declare-fun temp80_113 () (_ BitVec 64))
(declare-fun temp80_114 () (_ BitVec 64))
(declare-fun temp80_115 () (_ BitVec 64))
(declare-fun temp80_116 () (_ BitVec 64))
(declare-fun temp80_117 () (_ BitVec 64))
(declare-fun temp80_118 () (_ BitVec 64))
(declare-fun temp80_119 () (_ BitVec 64))
(declare-fun temp80_120 () (_ BitVec 64))
(declare-fun temp80_121 () (_ BitVec 64))
(declare-fun temp80_122 () (_ BitVec 64))
(declare-fun temp80_123 () (_ BitVec 64))
(declare-fun temp80_124 () (_ BitVec 64))
(declare-fun temp80_125 () (_ BitVec 64))
(declare-fun temp80_126 () (_ BitVec 64))
(declare-fun temp80_127 () (_ BitVec 64))
(declare-fun temp80_128 () (_ BitVec 64))
(declare-fun temp80_129 () (_ BitVec 64))
(declare-fun temp80_130 () (_ BitVec 64))
(declare-fun temp80_131 () (_ BitVec 64))
(declare-fun temp80_132 () (_ BitVec 64))
(declare-fun temp80_133 () (_ BitVec 64))
(declare-fun temp80_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp80_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp80_136 () (_ BitVec 64))
(declare-fun temp80_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp80_138 () (_ BitVec 64))
(declare-fun temp80_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp80_140 () (_ BitVec 64))
(declare-fun temp80_141 () (_ BitVec 64))
(declare-fun temp80_142 () (_ BitVec 64))
(declare-fun temp80_143 () (_ BitVec 64))
(declare-fun temp80_144 () (_ BitVec 64))
(declare-fun temp80_145 () (_ BitVec 64))
(declare-fun temp80_146 () (_ BitVec 64))
(declare-fun temp80_147 () (_ BitVec 64))
(declare-fun temp80_148 () (_ BitVec 64))
(declare-fun temp80_149 () (_ BitVec 64))
(declare-fun temp80_150 () (_ BitVec 64))
(declare-fun temp80_151 () (_ BitVec 64))
(declare-fun temp80_152 () (_ BitVec 64))
(declare-fun temp80_153 () (_ BitVec 64))
(declare-fun temp80_154 () (_ BitVec 64))
(declare-fun temp80_155 () (_ BitVec 64))
(declare-fun temp80_157 () (_ BitVec 64))
(declare-fun temp80_158 () (_ BitVec 64))
(declare-fun temp80_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp80_159 () (_ BitVec 64))
(declare-fun temp80_160 () (_ BitVec 64))
(declare-fun temp80_162 () (_ BitVec 64))
(declare-fun temp80_163 () (_ BitVec 64))
(declare-fun temp80_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp80_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp80_165 () (_ BitVec 64))
(declare-fun temp80_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp80_167 () (_ BitVec 64))
(declare-fun temp80_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp80_169 () (_ BitVec 64))
(declare-fun temp80_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp80_171 () (_ BitVec 64))
(declare-fun temp80_172 () (_ BitVec 64))
(declare-fun temp80_173 () (_ BitVec 64))
(declare-fun temp80_174 () (_ BitVec 64))
(declare-fun temp80_175 () (_ BitVec 64))
(declare-fun temp80_176 () (_ BitVec 64))
(declare-fun temp80_177 () (_ BitVec 64))
(declare-fun temp80_178 () (_ BitVec 64))
(declare-fun temp80_179 () (_ BitVec 64))
(declare-fun temp80_180 () (_ BitVec 64))
(declare-fun temp80_181 () (_ BitVec 64))
(declare-fun temp80_182 () (_ BitVec 64))
(declare-fun temp80_183 () (_ BitVec 64))
(declare-fun temp80_184 () (_ BitVec 64))
(declare-fun temp80_185 () (_ BitVec 64))
(declare-fun temp80_186 () (_ BitVec 64))
(declare-fun temp80_187 () (_ BitVec 64))
(declare-fun temp80_188 () (_ BitVec 64))
(declare-fun temp80_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp80_190 () (_ BitVec 64))
(declare-fun temp80_192 () (_ BitVec 64))
(declare-fun temp80_193 () (_ BitVec 64))
(declare-fun temp80_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp80_194 () (_ BitVec 64))
(declare-fun temp80_195 () (_ BitVec 64))
(declare-fun temp80_197 () (_ BitVec 64))
(declare-fun temp80_198 () (_ BitVec 64))
(declare-fun temp80_196 () (_ BitVec 64))
(declare-fun temp80_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp80_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp80_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp80_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp80_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp80_204 () (_ BitVec 64))
(declare-fun temp80_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp80_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp80_207 () (_ BitVec 64))
(declare-fun temp80_208 () (_ BitVec 64))
(declare-fun temp80_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp80_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp80_211 () (_ BitVec 64))
(declare-fun temp80_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp80_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp80_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4796816 () (_ BitVec 64))
(declare-fun var211494 () (_ BitVec 64))
(declare-fun temp80_215 () (_ BitVec 64))
(declare-fun var211495 () (_ BitVec 64))
(declare-fun temp80_217 () (_ BitVec 64))
(declare-fun temp80_216 () (_ BitVec 64))
(declare-fun temp80_218 () (_ BitVec 64))
(declare-fun var6753770 () (_ BitVec 64))
(declare-fun temp80_220 () (_ BitVec 64))
(declare-fun temp80_219 () (_ BitVec 64))
(declare-fun temp80_221 () (_ BitVec 64))
(assert (= temp80_1 #x0000000000000001))
(assert (= var77203 temp80_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp80_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp80_2)))
(assert (= temp80_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp80_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp80_4 #x0000000000000000))
(assert (= var210941 temp80_4))
(assert (= temp80_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp80_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp80_6 #x0000000000000000))
(assert (= var210986 temp80_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp80_7 #x0000000000000000))
(assert (= temp80_8 temp80_7))
(assert (= temp80_9 (select ARGNAME_padding_NAMEEND_VAL temp80_8)))
(assert (= temp80_10 #x0000000000000001))
(assert (= temp80_11 temp80_10))
(assert (= temp80_12 (select ARGNAME_padding_NAMEEND_VAL temp80_11)))
(assert (= temp80_13 #x0000000000000002))
(assert (= temp80_14 temp80_13))
(assert (= temp80_15 (select ARGNAME_padding_NAMEEND_VAL temp80_14)))
(assert (= temp80_16 #x0000000000000003))
(assert (= temp80_17 temp80_16))
(assert (= temp80_18 (select ARGNAME_padding_NAMEEND_VAL temp80_17)))
(assert (= temp80_19 #x0000000000000004))
(assert (= temp80_20 temp80_19))
(assert (= temp80_21 (select ARGNAME_padding_NAMEEND_VAL temp80_20)))
(assert (= temp80_22 #x0000000000000005))
(assert (= temp80_23 temp80_22))
(assert (= temp80_24 (select ARGNAME_padding_NAMEEND_VAL temp80_23)))
(assert (= temp80_25 #x0000000000000000))
(assert (= temp80_26 #x0000000000000000))
(assert (= temp80_27 temp80_26))
(assert (= temp80_28 (select ARGNAME_padding_NAMEEND_VAL temp80_27)))
(assert (= temp80_29 #x0000000000000000))
(assert (= temp80_30 #x0000000000000001))
(assert (= temp80_31 temp80_30))
(assert (= temp80_32 (select ARGNAME_padding_NAMEEND_VAL temp80_31)))
(assert (= temp80_33 #x0000000000000000))
(assert (= temp80_34 #x0000000000000002))
(assert (= temp80_35 temp80_34))
(assert (= temp80_36 (select ARGNAME_padding_NAMEEND_VAL temp80_35)))
(assert (= temp80_37 #x0000000000000000))
(assert (= temp80_38 #x0000000000000003))
(assert (= temp80_39 temp80_38))
(assert (= temp80_40 (select ARGNAME_padding_NAMEEND_VAL temp80_39)))
(assert (= temp80_41 #x0000000000000000))
(assert (= temp80_42 #x0000000000000004))
(assert (= temp80_43 temp80_42))
(assert (= temp80_44 (select ARGNAME_padding_NAMEEND_VAL temp80_43)))
(assert (= temp80_45 #x0000000000000000))
(assert (= temp80_46 #x0000000000000005))
(assert (= temp80_47 temp80_46))
(assert (= temp80_48 (select ARGNAME_padding_NAMEEND_VAL temp80_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp80_28 temp80_25)
             (bvslt temp80_32 temp80_29)
             (bvslt temp80_36 temp80_33)
             (bvslt temp80_40 temp80_37)
             (bvslt temp80_44 temp80_41)
             (bvslt temp80_48 temp80_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp80_49 #x0000000000000000))
(assert (= var1191714 temp80_49))
(assert (= temp80_50 #x0000000000000000))
(assert (= temp80_51 temp80_50))
(assert (= temp80_52 (select ARGNAME_output_padding_NAMEEND_VAL temp80_51)))
(assert (= temp80_53 #x0000000000000001))
(assert (= temp80_54 temp80_53))
(assert (= temp80_55 (select ARGNAME_output_padding_NAMEEND_VAL temp80_54)))
(assert (= temp80_56 #x0000000000000002))
(assert (= temp80_57 temp80_56))
(assert (= temp80_58 (select ARGNAME_output_padding_NAMEEND_VAL temp80_57)))
(assert (= temp80_59 #x0000000000000003))
(assert (= temp80_60 temp80_59))
(assert (= temp80_61 (select ARGNAME_output_padding_NAMEEND_VAL temp80_60)))
(assert (= temp80_62 #x0000000000000004))
(assert (= temp80_63 temp80_62))
(assert (= temp80_64 (select ARGNAME_output_padding_NAMEEND_VAL temp80_63)))
(assert (= temp80_65 #x0000000000000005))
(assert (= temp80_66 temp80_65))
(assert (= temp80_67 (select ARGNAME_output_padding_NAMEEND_VAL temp80_66)))
(assert (= temp80_68 #x0000000000000000))
(assert (= temp80_69 #x0000000000000000))
(assert (= temp80_70 temp80_69))
(assert (= temp80_71 (select ARGNAME_output_padding_NAMEEND_VAL temp80_70)))
(assert (= temp80_72 #x0000000000000000))
(assert (= temp80_73 #x0000000000000001))
(assert (= temp80_74 temp80_73))
(assert (= temp80_75 (select ARGNAME_output_padding_NAMEEND_VAL temp80_74)))
(assert (= temp80_76 #x0000000000000000))
(assert (= temp80_77 #x0000000000000002))
(assert (= temp80_78 temp80_77))
(assert (= temp80_79 (select ARGNAME_output_padding_NAMEEND_VAL temp80_78)))
(assert (= temp80_80 #x0000000000000000))
(assert (= temp80_81 #x0000000000000003))
(assert (= temp80_82 temp80_81))
(assert (= temp80_83 (select ARGNAME_output_padding_NAMEEND_VAL temp80_82)))
(assert (= temp80_84 #x0000000000000000))
(assert (= temp80_85 #x0000000000000004))
(assert (= temp80_86 temp80_85))
(assert (= temp80_87 (select ARGNAME_output_padding_NAMEEND_VAL temp80_86)))
(assert (= temp80_88 #x0000000000000000))
(assert (= temp80_89 #x0000000000000005))
(assert (= temp80_90 temp80_89))
(assert (= temp80_91 (select ARGNAME_output_padding_NAMEEND_VAL temp80_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp80_71 temp80_68)
             (bvslt temp80_75 temp80_72)
             (bvslt temp80_79 temp80_76)
             (bvslt temp80_83 temp80_80)
             (bvslt temp80_87 temp80_84)
             (bvslt temp80_91 temp80_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp80_92 #x0000000000000000))
(assert (= var1191725 temp80_92))
(assert (= temp80_93 #x0000000000000000))
(assert (= temp80_94 temp80_93))
(assert (= temp80_95 (select ARGNAME_stride_NAMEEND_VAL temp80_94)))
(assert (= temp80_96 #x0000000000000001))
(assert (= temp80_97 temp80_96))
(assert (= temp80_98 (select ARGNAME_stride_NAMEEND_VAL temp80_97)))
(assert (= temp80_99 #x0000000000000002))
(assert (= temp80_100 temp80_99))
(assert (= temp80_101 (select ARGNAME_stride_NAMEEND_VAL temp80_100)))
(assert (= temp80_102 #x0000000000000003))
(assert (= temp80_103 temp80_102))
(assert (= temp80_104 (select ARGNAME_stride_NAMEEND_VAL temp80_103)))
(assert (= temp80_105 #x0000000000000004))
(assert (= temp80_106 temp80_105))
(assert (= temp80_107 (select ARGNAME_stride_NAMEEND_VAL temp80_106)))
(assert (= temp80_108 #x0000000000000005))
(assert (= temp80_109 temp80_108))
(assert (= temp80_110 (select ARGNAME_stride_NAMEEND_VAL temp80_109)))
(assert (= temp80_111 #x0000000000000000))
(assert (= temp80_112 #x0000000000000000))
(assert (= temp80_113 temp80_112))
(assert (= temp80_114 (select ARGNAME_stride_NAMEEND_VAL temp80_113)))
(assert (= temp80_115 #x0000000000000000))
(assert (= temp80_116 #x0000000000000001))
(assert (= temp80_117 temp80_116))
(assert (= temp80_118 (select ARGNAME_stride_NAMEEND_VAL temp80_117)))
(assert (= temp80_119 #x0000000000000000))
(assert (= temp80_120 #x0000000000000002))
(assert (= temp80_121 temp80_120))
(assert (= temp80_122 (select ARGNAME_stride_NAMEEND_VAL temp80_121)))
(assert (= temp80_123 #x0000000000000000))
(assert (= temp80_124 #x0000000000000003))
(assert (= temp80_125 temp80_124))
(assert (= temp80_126 (select ARGNAME_stride_NAMEEND_VAL temp80_125)))
(assert (= temp80_127 #x0000000000000000))
(assert (= temp80_128 #x0000000000000004))
(assert (= temp80_129 temp80_128))
(assert (= temp80_130 (select ARGNAME_stride_NAMEEND_VAL temp80_129)))
(assert (= temp80_131 #x0000000000000000))
(assert (= temp80_132 #x0000000000000005))
(assert (= temp80_133 temp80_132))
(assert (= temp80_134 (select ARGNAME_stride_NAMEEND_VAL temp80_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp80_114 temp80_111)
             (bvsle temp80_118 temp80_115)
             (bvsle temp80_122 temp80_119)
             (bvsle temp80_126 temp80_123)
             (bvsle temp80_130 temp80_127)
             (bvsle temp80_134 temp80_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp80_135 #x0000000000000000))
(assert (= var1191735 temp80_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp80_136 #x0000000000000001))
(assert (= var1191747 temp80_136))
(assert (= temp80_137 #x0000000000000000))
(assert (= var1179826 temp80_137))
(assert (= temp80_138 #x0000000000000000))
(assert (= temp80_139 temp80_138))
(assert (= temp80_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp80_139)))
(assert (= temp80_141 #x0000000000000001))
(assert (= temp80_142 temp80_141))
(assert (= temp80_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp80_142)))
(assert (= temp80_144 #x0000000000000002))
(assert (= temp80_145 temp80_144))
(assert (= temp80_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp80_145)))
(assert (= temp80_147 #x0000000000000003))
(assert (= temp80_148 temp80_147))
(assert (= temp80_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp80_148)))
(assert (= temp80_150 #x0000000000000004))
(assert (= temp80_151 temp80_150))
(assert (= temp80_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp80_151)))
(assert (= temp80_153 #x0000000000000005))
(assert (= temp80_154 temp80_153))
(assert (= temp80_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp80_154)))
(assert (= temp80_157 var1179826))
(assert (= temp80_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp80_157)))
(assert (= temp80_156 temp80_158))
(assert (= var1191780
   (ite (bvslt temp80_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp80_159 #x0000000000000000))
(assert (= var1191780 temp80_159))
(assert (= temp80_160 #x0000000000000000))
(assert (= var1179826 temp80_160))
(assert (= temp80_162 var1179826))
(assert (= temp80_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp80_162)))
(assert (= temp80_161 temp80_163))
(assert (= var1191802 (bvsmod temp80_161 ARGNAME_groups_NAMEEND)))
(assert (= temp80_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp80_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp80_165 #x0000000000000001))
(assert (= var1191803 temp80_165))
(assert (= temp80_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp80_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp80_167 #x0000000000000001))
(assert (= var1191823 temp80_167))
(assert (= temp80_168 #x0000000000000001))
(assert (= var1180714 temp80_168))
(assert (= temp80_169 #x0000000000000000))
(assert (= temp80_170 temp80_169))
(assert (= temp80_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp80_170)))
(assert (= temp80_172 #x0000000000000001))
(assert (= temp80_173 temp80_172))
(assert (= temp80_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp80_173)))
(assert (= temp80_175 #x0000000000000002))
(assert (= temp80_176 temp80_175))
(assert (= temp80_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp80_176)))
(assert (= temp80_178 #x0000000000000003))
(assert (= temp80_179 temp80_178))
(assert (= temp80_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp80_179)))
(assert (= temp80_181 #x0000000000000004))
(assert (= temp80_182 temp80_181))
(assert (= temp80_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp80_182)))
(assert (= temp80_184 #x0000000000000005))
(assert (= temp80_185 temp80_184))
(assert (= temp80_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp80_185)))
(assert (= temp80_187 #x0000000000000000))
(assert (= temp80_188
   (ite (bvslt var1180714 temp80_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp80_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp80_188)))
(assert (= var1191831 temp80_189))
(assert (bvslt (ite (bvslt var1180714 temp80_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp80_190 #x0000000000000001))
(assert (= var1180714 temp80_190))
(assert (= temp80_192 var1180714))
(assert (= temp80_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp80_192)))
(assert (= temp80_191 temp80_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp80_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp80_194 #x0000000000000001))
(assert (= var1191836 temp80_194))
(assert (= temp80_195 #x0000000000000000))
(assert (= var1179826 temp80_195))
(assert (= temp80_197 var1179826))
(assert (= temp80_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp80_197)))
(assert (= temp80_196 temp80_198))
(assert (= temp80_199 #x0000000000000002))
(assert (= var1586025 temp80_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp80_200 #x0000000000000001))
(assert (= var1191993 temp80_200))
(assert (= temp80_201 #x0000000000000001))
(assert (= var2700303 temp80_201))
(assert (= temp80_202 #x0000000000000001))
(assert (= var2962447 temp80_202))
(assert (= temp80_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp80_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp80_204 #x0000000000000001))
(assert (= var211058 temp80_204))
(assert (= temp80_205 #x0000000000000001))
(assert (= var211188 temp80_205))
(assert (= var3879401 var211188))
(assert (= temp80_206 #x0000000000000000))
(assert (= var3866802 temp80_206))
(assert (= temp80_207 #x0000000000000000))
(assert (= temp80_208
   (ite (bvslt var3866802 temp80_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp80_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp80_208)))
(assert (= var3879420 temp80_209))
(assert (bvslt (ite (bvslt var3866802 temp80_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp80_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp80_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp80_211 #x0000000000000001))
(assert (= var3879421 temp80_211))
(assert (= temp80_212 #x0000000000000000))
(assert (= var4079423 temp80_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp80_213 #x0000000000000002))
(assert (= var4208259 temp80_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp80_214 #x0000000000000000))
(assert (= var4273820 temp80_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4796816 var211201))
(assert (= var211494 var210913))
(assert (= temp80_215 #x0000000000000000))
(assert (= var211495
   (ite (distinct var211494 temp80_215) #x0000000000000001 #x0000000000000000)))
(assert (= temp80_217 #x0000000000000001))
(assert (= temp80_216 temp80_217))
(assert (= temp80_218 #x0000000000000001))
(assert (= var6753770 temp80_218))
(assert (= temp80_220 #xffffffffffffffff))
(assert (= temp80_219 temp80_220))
(assert (= temp80_221 #x0000000000000001))
(assert (= var211058 temp80_221))
(model-add temp80_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp80_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp80_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp80_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






