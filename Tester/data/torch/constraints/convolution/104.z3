(declare-fun temp138_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp138_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp138_3 () (_ BitVec 64))
(declare-fun temp138_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp138_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp138_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp138_7 () (_ BitVec 64))
(declare-fun temp138_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp138_9 () (_ BitVec 64))
(declare-fun temp138_10 () (_ BitVec 64))
(declare-fun temp138_11 () (_ BitVec 64))
(declare-fun temp138_12 () (_ BitVec 64))
(declare-fun temp138_13 () (_ BitVec 64))
(declare-fun temp138_14 () (_ BitVec 64))
(declare-fun temp138_15 () (_ BitVec 64))
(declare-fun temp138_16 () (_ BitVec 64))
(declare-fun temp138_17 () (_ BitVec 64))
(declare-fun temp138_18 () (_ BitVec 64))
(declare-fun temp138_19 () (_ BitVec 64))
(declare-fun temp138_20 () (_ BitVec 64))
(declare-fun temp138_21 () (_ BitVec 64))
(declare-fun temp138_22 () (_ BitVec 64))
(declare-fun temp138_23 () (_ BitVec 64))
(declare-fun temp138_24 () (_ BitVec 64))
(declare-fun temp138_25 () (_ BitVec 64))
(declare-fun temp138_26 () (_ BitVec 64))
(declare-fun temp138_27 () (_ BitVec 64))
(declare-fun temp138_28 () (_ BitVec 64))
(declare-fun temp138_29 () (_ BitVec 64))
(declare-fun temp138_30 () (_ BitVec 64))
(declare-fun temp138_31 () (_ BitVec 64))
(declare-fun temp138_32 () (_ BitVec 64))
(declare-fun temp138_33 () (_ BitVec 64))
(declare-fun temp138_34 () (_ BitVec 64))
(declare-fun temp138_35 () (_ BitVec 64))
(declare-fun temp138_36 () (_ BitVec 64))
(declare-fun temp138_37 () (_ BitVec 64))
(declare-fun temp138_38 () (_ BitVec 64))
(declare-fun temp138_39 () (_ BitVec 64))
(declare-fun temp138_40 () (_ BitVec 64))
(declare-fun temp138_41 () (_ BitVec 64))
(declare-fun temp138_42 () (_ BitVec 64))
(declare-fun temp138_43 () (_ BitVec 64))
(declare-fun temp138_44 () (_ BitVec 64))
(declare-fun temp138_45 () (_ BitVec 64))
(declare-fun temp138_46 () (_ BitVec 64))
(declare-fun temp138_47 () (_ BitVec 64))
(declare-fun temp138_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp138_49 () (_ BitVec 64))
(declare-fun temp138_50 () (_ BitVec 64))
(declare-fun temp138_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp138_52 () (_ BitVec 64))
(declare-fun temp138_53 () (_ BitVec 64))
(declare-fun temp138_54 () (_ BitVec 64))
(declare-fun temp138_55 () (_ BitVec 64))
(declare-fun temp138_56 () (_ BitVec 64))
(declare-fun temp138_57 () (_ BitVec 64))
(declare-fun temp138_58 () (_ BitVec 64))
(declare-fun temp138_59 () (_ BitVec 64))
(declare-fun temp138_60 () (_ BitVec 64))
(declare-fun temp138_61 () (_ BitVec 64))
(declare-fun temp138_62 () (_ BitVec 64))
(declare-fun temp138_63 () (_ BitVec 64))
(declare-fun temp138_64 () (_ BitVec 64))
(declare-fun temp138_65 () (_ BitVec 64))
(declare-fun temp138_66 () (_ BitVec 64))
(declare-fun temp138_67 () (_ BitVec 64))
(declare-fun temp138_68 () (_ BitVec 64))
(declare-fun temp138_69 () (_ BitVec 64))
(declare-fun temp138_70 () (_ BitVec 64))
(declare-fun temp138_71 () (_ BitVec 64))
(declare-fun temp138_72 () (_ BitVec 64))
(declare-fun temp138_73 () (_ BitVec 64))
(declare-fun temp138_74 () (_ BitVec 64))
(declare-fun temp138_75 () (_ BitVec 64))
(declare-fun temp138_76 () (_ BitVec 64))
(declare-fun temp138_77 () (_ BitVec 64))
(declare-fun temp138_78 () (_ BitVec 64))
(declare-fun temp138_79 () (_ BitVec 64))
(declare-fun temp138_80 () (_ BitVec 64))
(declare-fun temp138_81 () (_ BitVec 64))
(declare-fun temp138_82 () (_ BitVec 64))
(declare-fun temp138_83 () (_ BitVec 64))
(declare-fun temp138_84 () (_ BitVec 64))
(declare-fun temp138_85 () (_ BitVec 64))
(declare-fun temp138_86 () (_ BitVec 64))
(declare-fun temp138_87 () (_ BitVec 64))
(declare-fun temp138_88 () (_ BitVec 64))
(declare-fun temp138_89 () (_ BitVec 64))
(declare-fun temp138_90 () (_ BitVec 64))
(declare-fun temp138_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp138_92 () (_ BitVec 64))
(declare-fun temp138_93 () (_ BitVec 64))
(declare-fun temp138_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp138_95 () (_ BitVec 64))
(declare-fun temp138_96 () (_ BitVec 64))
(declare-fun temp138_97 () (_ BitVec 64))
(declare-fun temp138_98 () (_ BitVec 64))
(declare-fun temp138_99 () (_ BitVec 64))
(declare-fun temp138_100 () (_ BitVec 64))
(declare-fun temp138_101 () (_ BitVec 64))
(declare-fun temp138_102 () (_ BitVec 64))
(declare-fun temp138_103 () (_ BitVec 64))
(declare-fun temp138_104 () (_ BitVec 64))
(declare-fun temp138_105 () (_ BitVec 64))
(declare-fun temp138_106 () (_ BitVec 64))
(declare-fun temp138_107 () (_ BitVec 64))
(declare-fun temp138_108 () (_ BitVec 64))
(declare-fun temp138_109 () (_ BitVec 64))
(declare-fun temp138_110 () (_ BitVec 64))
(declare-fun temp138_111 () (_ BitVec 64))
(declare-fun temp138_112 () (_ BitVec 64))
(declare-fun temp138_113 () (_ BitVec 64))
(declare-fun temp138_114 () (_ BitVec 64))
(declare-fun temp138_115 () (_ BitVec 64))
(declare-fun temp138_116 () (_ BitVec 64))
(declare-fun temp138_117 () (_ BitVec 64))
(declare-fun temp138_118 () (_ BitVec 64))
(declare-fun temp138_119 () (_ BitVec 64))
(declare-fun temp138_120 () (_ BitVec 64))
(declare-fun temp138_121 () (_ BitVec 64))
(declare-fun temp138_122 () (_ BitVec 64))
(declare-fun temp138_123 () (_ BitVec 64))
(declare-fun temp138_124 () (_ BitVec 64))
(declare-fun temp138_125 () (_ BitVec 64))
(declare-fun temp138_126 () (_ BitVec 64))
(declare-fun temp138_127 () (_ BitVec 64))
(declare-fun temp138_128 () (_ BitVec 64))
(declare-fun temp138_129 () (_ BitVec 64))
(declare-fun temp138_130 () (_ BitVec 64))
(declare-fun temp138_131 () (_ BitVec 64))
(declare-fun temp138_132 () (_ BitVec 64))
(declare-fun temp138_133 () (_ BitVec 64))
(declare-fun temp138_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp138_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp138_136 () (_ BitVec 64))
(declare-fun temp138_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp138_138 () (_ BitVec 64))
(declare-fun temp138_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp138_140 () (_ BitVec 64))
(declare-fun temp138_141 () (_ BitVec 64))
(declare-fun temp138_142 () (_ BitVec 64))
(declare-fun temp138_143 () (_ BitVec 64))
(declare-fun temp138_144 () (_ BitVec 64))
(declare-fun temp138_145 () (_ BitVec 64))
(declare-fun temp138_146 () (_ BitVec 64))
(declare-fun temp138_147 () (_ BitVec 64))
(declare-fun temp138_148 () (_ BitVec 64))
(declare-fun temp138_149 () (_ BitVec 64))
(declare-fun temp138_150 () (_ BitVec 64))
(declare-fun temp138_151 () (_ BitVec 64))
(declare-fun temp138_152 () (_ BitVec 64))
(declare-fun temp138_153 () (_ BitVec 64))
(declare-fun temp138_154 () (_ BitVec 64))
(declare-fun temp138_155 () (_ BitVec 64))
(declare-fun temp138_157 () (_ BitVec 64))
(declare-fun temp138_158 () (_ BitVec 64))
(declare-fun temp138_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp138_159 () (_ BitVec 64))
(declare-fun temp138_160 () (_ BitVec 64))
(declare-fun temp138_162 () (_ BitVec 64))
(declare-fun temp138_163 () (_ BitVec 64))
(declare-fun temp138_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp138_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp138_165 () (_ BitVec 64))
(declare-fun temp138_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp138_167 () (_ BitVec 64))
(declare-fun temp138_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp138_169 () (_ BitVec 64))
(declare-fun temp138_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp138_171 () (_ BitVec 64))
(declare-fun temp138_172 () (_ BitVec 64))
(declare-fun temp138_173 () (_ BitVec 64))
(declare-fun temp138_174 () (_ BitVec 64))
(declare-fun temp138_175 () (_ BitVec 64))
(declare-fun temp138_176 () (_ BitVec 64))
(declare-fun temp138_177 () (_ BitVec 64))
(declare-fun temp138_178 () (_ BitVec 64))
(declare-fun temp138_179 () (_ BitVec 64))
(declare-fun temp138_180 () (_ BitVec 64))
(declare-fun temp138_181 () (_ BitVec 64))
(declare-fun temp138_182 () (_ BitVec 64))
(declare-fun temp138_183 () (_ BitVec 64))
(declare-fun temp138_184 () (_ BitVec 64))
(declare-fun temp138_185 () (_ BitVec 64))
(declare-fun temp138_186 () (_ BitVec 64))
(declare-fun temp138_187 () (_ BitVec 64))
(declare-fun temp138_188 () (_ BitVec 64))
(declare-fun temp138_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp138_190 () (_ BitVec 64))
(declare-fun temp138_192 () (_ BitVec 64))
(declare-fun temp138_193 () (_ BitVec 64))
(declare-fun temp138_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp138_194 () (_ BitVec 64))
(declare-fun temp138_195 () (_ BitVec 64))
(declare-fun temp138_197 () (_ BitVec 64))
(declare-fun temp138_198 () (_ BitVec 64))
(declare-fun temp138_196 () (_ BitVec 64))
(declare-fun temp138_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp138_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp138_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp138_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp138_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp138_204 () (_ BitVec 64))
(declare-fun temp138_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp138_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp138_207 () (_ BitVec 64))
(declare-fun temp138_208 () (_ BitVec 64))
(declare-fun temp138_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp138_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp138_211 () (_ BitVec 64))
(declare-fun temp138_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp138_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp138_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp138_216 () (_ BitVec 64))
(declare-fun temp138_215 () (_ BitVec 64))
(declare-fun temp138_217 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp138_218 () (_ BitVec 64))
(declare-fun temp138_219 () (_ BitVec 64))
(declare-fun temp138_220 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp138_221 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp138_222 () (_ BitVec 64))
(declare-fun temp138_224 () (_ BitVec 64))
(declare-fun temp138_223 () (_ BitVec 64))
(declare-fun temp138_225 () (_ BitVec 64))
(assert (= temp138_1 #x0000000000000001))
(assert (= var77203 temp138_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp138_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp138_2)))
(assert (= temp138_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp138_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp138_4 #x0000000000000000))
(assert (= var210941 temp138_4))
(assert (= temp138_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp138_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp138_6 #x0000000000000000))
(assert (= var210986 temp138_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp138_7 #x0000000000000000))
(assert (= temp138_8 temp138_7))
(assert (= temp138_9 (select ARGNAME_padding_NAMEEND_VAL temp138_8)))
(assert (= temp138_10 #x0000000000000001))
(assert (= temp138_11 temp138_10))
(assert (= temp138_12 (select ARGNAME_padding_NAMEEND_VAL temp138_11)))
(assert (= temp138_13 #x0000000000000002))
(assert (= temp138_14 temp138_13))
(assert (= temp138_15 (select ARGNAME_padding_NAMEEND_VAL temp138_14)))
(assert (= temp138_16 #x0000000000000003))
(assert (= temp138_17 temp138_16))
(assert (= temp138_18 (select ARGNAME_padding_NAMEEND_VAL temp138_17)))
(assert (= temp138_19 #x0000000000000004))
(assert (= temp138_20 temp138_19))
(assert (= temp138_21 (select ARGNAME_padding_NAMEEND_VAL temp138_20)))
(assert (= temp138_22 #x0000000000000005))
(assert (= temp138_23 temp138_22))
(assert (= temp138_24 (select ARGNAME_padding_NAMEEND_VAL temp138_23)))
(assert (= temp138_25 #x0000000000000000))
(assert (= temp138_26 #x0000000000000000))
(assert (= temp138_27 temp138_26))
(assert (= temp138_28 (select ARGNAME_padding_NAMEEND_VAL temp138_27)))
(assert (= temp138_29 #x0000000000000000))
(assert (= temp138_30 #x0000000000000001))
(assert (= temp138_31 temp138_30))
(assert (= temp138_32 (select ARGNAME_padding_NAMEEND_VAL temp138_31)))
(assert (= temp138_33 #x0000000000000000))
(assert (= temp138_34 #x0000000000000002))
(assert (= temp138_35 temp138_34))
(assert (= temp138_36 (select ARGNAME_padding_NAMEEND_VAL temp138_35)))
(assert (= temp138_37 #x0000000000000000))
(assert (= temp138_38 #x0000000000000003))
(assert (= temp138_39 temp138_38))
(assert (= temp138_40 (select ARGNAME_padding_NAMEEND_VAL temp138_39)))
(assert (= temp138_41 #x0000000000000000))
(assert (= temp138_42 #x0000000000000004))
(assert (= temp138_43 temp138_42))
(assert (= temp138_44 (select ARGNAME_padding_NAMEEND_VAL temp138_43)))
(assert (= temp138_45 #x0000000000000000))
(assert (= temp138_46 #x0000000000000005))
(assert (= temp138_47 temp138_46))
(assert (= temp138_48 (select ARGNAME_padding_NAMEEND_VAL temp138_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp138_28 temp138_25)
             (bvslt temp138_32 temp138_29)
             (bvslt temp138_36 temp138_33)
             (bvslt temp138_40 temp138_37)
             (bvslt temp138_44 temp138_41)
             (bvslt temp138_48 temp138_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp138_49 #x0000000000000000))
(assert (= var1191714 temp138_49))
(assert (= temp138_50 #x0000000000000000))
(assert (= temp138_51 temp138_50))
(assert (= temp138_52 (select ARGNAME_output_padding_NAMEEND_VAL temp138_51)))
(assert (= temp138_53 #x0000000000000001))
(assert (= temp138_54 temp138_53))
(assert (= temp138_55 (select ARGNAME_output_padding_NAMEEND_VAL temp138_54)))
(assert (= temp138_56 #x0000000000000002))
(assert (= temp138_57 temp138_56))
(assert (= temp138_58 (select ARGNAME_output_padding_NAMEEND_VAL temp138_57)))
(assert (= temp138_59 #x0000000000000003))
(assert (= temp138_60 temp138_59))
(assert (= temp138_61 (select ARGNAME_output_padding_NAMEEND_VAL temp138_60)))
(assert (= temp138_62 #x0000000000000004))
(assert (= temp138_63 temp138_62))
(assert (= temp138_64 (select ARGNAME_output_padding_NAMEEND_VAL temp138_63)))
(assert (= temp138_65 #x0000000000000005))
(assert (= temp138_66 temp138_65))
(assert (= temp138_67 (select ARGNAME_output_padding_NAMEEND_VAL temp138_66)))
(assert (= temp138_68 #x0000000000000000))
(assert (= temp138_69 #x0000000000000000))
(assert (= temp138_70 temp138_69))
(assert (= temp138_71 (select ARGNAME_output_padding_NAMEEND_VAL temp138_70)))
(assert (= temp138_72 #x0000000000000000))
(assert (= temp138_73 #x0000000000000001))
(assert (= temp138_74 temp138_73))
(assert (= temp138_75 (select ARGNAME_output_padding_NAMEEND_VAL temp138_74)))
(assert (= temp138_76 #x0000000000000000))
(assert (= temp138_77 #x0000000000000002))
(assert (= temp138_78 temp138_77))
(assert (= temp138_79 (select ARGNAME_output_padding_NAMEEND_VAL temp138_78)))
(assert (= temp138_80 #x0000000000000000))
(assert (= temp138_81 #x0000000000000003))
(assert (= temp138_82 temp138_81))
(assert (= temp138_83 (select ARGNAME_output_padding_NAMEEND_VAL temp138_82)))
(assert (= temp138_84 #x0000000000000000))
(assert (= temp138_85 #x0000000000000004))
(assert (= temp138_86 temp138_85))
(assert (= temp138_87 (select ARGNAME_output_padding_NAMEEND_VAL temp138_86)))
(assert (= temp138_88 #x0000000000000000))
(assert (= temp138_89 #x0000000000000005))
(assert (= temp138_90 temp138_89))
(assert (= temp138_91 (select ARGNAME_output_padding_NAMEEND_VAL temp138_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp138_71 temp138_68)
             (bvslt temp138_75 temp138_72)
             (bvslt temp138_79 temp138_76)
             (bvslt temp138_83 temp138_80)
             (bvslt temp138_87 temp138_84)
             (bvslt temp138_91 temp138_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp138_92 #x0000000000000000))
(assert (= var1191725 temp138_92))
(assert (= temp138_93 #x0000000000000000))
(assert (= temp138_94 temp138_93))
(assert (= temp138_95 (select ARGNAME_stride_NAMEEND_VAL temp138_94)))
(assert (= temp138_96 #x0000000000000001))
(assert (= temp138_97 temp138_96))
(assert (= temp138_98 (select ARGNAME_stride_NAMEEND_VAL temp138_97)))
(assert (= temp138_99 #x0000000000000002))
(assert (= temp138_100 temp138_99))
(assert (= temp138_101 (select ARGNAME_stride_NAMEEND_VAL temp138_100)))
(assert (= temp138_102 #x0000000000000003))
(assert (= temp138_103 temp138_102))
(assert (= temp138_104 (select ARGNAME_stride_NAMEEND_VAL temp138_103)))
(assert (= temp138_105 #x0000000000000004))
(assert (= temp138_106 temp138_105))
(assert (= temp138_107 (select ARGNAME_stride_NAMEEND_VAL temp138_106)))
(assert (= temp138_108 #x0000000000000005))
(assert (= temp138_109 temp138_108))
(assert (= temp138_110 (select ARGNAME_stride_NAMEEND_VAL temp138_109)))
(assert (= temp138_111 #x0000000000000000))
(assert (= temp138_112 #x0000000000000000))
(assert (= temp138_113 temp138_112))
(assert (= temp138_114 (select ARGNAME_stride_NAMEEND_VAL temp138_113)))
(assert (= temp138_115 #x0000000000000000))
(assert (= temp138_116 #x0000000000000001))
(assert (= temp138_117 temp138_116))
(assert (= temp138_118 (select ARGNAME_stride_NAMEEND_VAL temp138_117)))
(assert (= temp138_119 #x0000000000000000))
(assert (= temp138_120 #x0000000000000002))
(assert (= temp138_121 temp138_120))
(assert (= temp138_122 (select ARGNAME_stride_NAMEEND_VAL temp138_121)))
(assert (= temp138_123 #x0000000000000000))
(assert (= temp138_124 #x0000000000000003))
(assert (= temp138_125 temp138_124))
(assert (= temp138_126 (select ARGNAME_stride_NAMEEND_VAL temp138_125)))
(assert (= temp138_127 #x0000000000000000))
(assert (= temp138_128 #x0000000000000004))
(assert (= temp138_129 temp138_128))
(assert (= temp138_130 (select ARGNAME_stride_NAMEEND_VAL temp138_129)))
(assert (= temp138_131 #x0000000000000000))
(assert (= temp138_132 #x0000000000000005))
(assert (= temp138_133 temp138_132))
(assert (= temp138_134 (select ARGNAME_stride_NAMEEND_VAL temp138_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp138_114 temp138_111)
             (bvsle temp138_118 temp138_115)
             (bvsle temp138_122 temp138_119)
             (bvsle temp138_126 temp138_123)
             (bvsle temp138_130 temp138_127)
             (bvsle temp138_134 temp138_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp138_135 #x0000000000000000))
(assert (= var1191735 temp138_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp138_136 #x0000000000000001))
(assert (= var1191747 temp138_136))
(assert (= temp138_137 #x0000000000000000))
(assert (= var1179826 temp138_137))
(assert (= temp138_138 #x0000000000000000))
(assert (= temp138_139 temp138_138))
(assert (= temp138_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp138_139)))
(assert (= temp138_141 #x0000000000000001))
(assert (= temp138_142 temp138_141))
(assert (= temp138_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp138_142)))
(assert (= temp138_144 #x0000000000000002))
(assert (= temp138_145 temp138_144))
(assert (= temp138_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp138_145)))
(assert (= temp138_147 #x0000000000000003))
(assert (= temp138_148 temp138_147))
(assert (= temp138_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp138_148)))
(assert (= temp138_150 #x0000000000000004))
(assert (= temp138_151 temp138_150))
(assert (= temp138_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp138_151)))
(assert (= temp138_153 #x0000000000000005))
(assert (= temp138_154 temp138_153))
(assert (= temp138_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp138_154)))
(assert (= temp138_157 var1179826))
(assert (= temp138_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp138_157)))
(assert (= temp138_156 temp138_158))
(assert (= var1191780
   (ite (bvslt temp138_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp138_159 #x0000000000000000))
(assert (= var1191780 temp138_159))
(assert (= temp138_160 #x0000000000000000))
(assert (= var1179826 temp138_160))
(assert (= temp138_162 var1179826))
(assert (= temp138_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp138_162)))
(assert (= temp138_161 temp138_163))
(assert (= var1191802 (bvsmod temp138_161 ARGNAME_groups_NAMEEND)))
(assert (= temp138_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp138_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp138_165 #x0000000000000001))
(assert (= var1191803 temp138_165))
(assert (= temp138_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp138_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp138_167 #x0000000000000001))
(assert (= var1191823 temp138_167))
(assert (= temp138_168 #x0000000000000001))
(assert (= var1180714 temp138_168))
(assert (= temp138_169 #x0000000000000000))
(assert (= temp138_170 temp138_169))
(assert (= temp138_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp138_170)))
(assert (= temp138_172 #x0000000000000001))
(assert (= temp138_173 temp138_172))
(assert (= temp138_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp138_173)))
(assert (= temp138_175 #x0000000000000002))
(assert (= temp138_176 temp138_175))
(assert (= temp138_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp138_176)))
(assert (= temp138_178 #x0000000000000003))
(assert (= temp138_179 temp138_178))
(assert (= temp138_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp138_179)))
(assert (= temp138_181 #x0000000000000004))
(assert (= temp138_182 temp138_181))
(assert (= temp138_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp138_182)))
(assert (= temp138_184 #x0000000000000005))
(assert (= temp138_185 temp138_184))
(assert (= temp138_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp138_185)))
(assert (= temp138_187 #x0000000000000000))
(assert (= temp138_188
   (ite (bvslt var1180714 temp138_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp138_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp138_188)))
(assert (= var1191831 temp138_189))
(assert (bvslt (ite (bvslt var1180714 temp138_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp138_190 #x0000000000000001))
(assert (= var1180714 temp138_190))
(assert (= temp138_192 var1180714))
(assert (= temp138_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp138_192)))
(assert (= temp138_191 temp138_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp138_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp138_194 #x0000000000000001))
(assert (= var1191836 temp138_194))
(assert (= temp138_195 #x0000000000000000))
(assert (= var1179826 temp138_195))
(assert (= temp138_197 var1179826))
(assert (= temp138_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp138_197)))
(assert (= temp138_196 temp138_198))
(assert (= temp138_199 #x0000000000000002))
(assert (= var1586025 temp138_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp138_200 #x0000000000000001))
(assert (= var1191993 temp138_200))
(assert (= temp138_201 #x0000000000000001))
(assert (= var2700303 temp138_201))
(assert (= temp138_202 #x0000000000000001))
(assert (= var2962447 temp138_202))
(assert (= temp138_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp138_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp138_204 #x0000000000000001))
(assert (= var211058 temp138_204))
(assert (= temp138_205 #x0000000000000001))
(assert (= var211188 temp138_205))
(assert (= var3879401 var211188))
(assert (= temp138_206 #x0000000000000000))
(assert (= var3866802 temp138_206))
(assert (= temp138_207 #x0000000000000000))
(assert (= temp138_208
   (ite (bvslt var3866802 temp138_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp138_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp138_208)))
(assert (= var3879420 temp138_209))
(assert (bvslt (ite (bvslt var3866802 temp138_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp138_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp138_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp138_211 #x0000000000000001))
(assert (= var3879421 temp138_211))
(assert (= temp138_212 #x0000000000000000))
(assert (= var4079423 temp138_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp138_213 #x0000000000000002))
(assert (= var4208259 temp138_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp138_214 #x0000000000000000))
(assert (= var4273820 temp138_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp138_216 #xffffffffffffffff))
(assert (= temp138_215 temp138_216))
(assert (= temp138_217 #x0000000000000001))
(assert (= var197674 temp138_217))
(assert (= temp138_218 #x0000000000000000))
(assert (= temp138_219
   (ite (bvslt var197674 temp138_218)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp138_220 (select ARGNAME_input_NAMEEND_DIMSIZE temp138_219)))
(assert (= var211595 temp138_220))
(assert (bvslt (ite (bvslt var197674 temp138_218)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp138_221 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp138_221) #x0000000000000001 #x0000000000000000)))
(assert (= temp138_222 #x0000000000000001))
(assert (= var211596 temp138_222))
(assert (= temp138_224 #xffffffffffffffff))
(assert (= temp138_223 temp138_224))
(assert (= temp138_225 #x0000000000000001))
(assert (= var211058 temp138_225))
(model-add temp138_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp138_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp138_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp138_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))



