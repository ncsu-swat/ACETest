(declare-fun temp10330_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10330_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10330_3 () (_ BitVec 64))
(declare-fun temp10330_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10330_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10330_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10330_7 () (_ BitVec 64))
(declare-fun temp10330_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10330_9 () (_ BitVec 64))
(declare-fun temp10330_10 () (_ BitVec 64))
(declare-fun temp10330_11 () (_ BitVec 64))
(declare-fun temp10330_12 () (_ BitVec 64))
(declare-fun temp10330_13 () (_ BitVec 64))
(declare-fun temp10330_14 () (_ BitVec 64))
(declare-fun temp10330_15 () (_ BitVec 64))
(declare-fun temp10330_16 () (_ BitVec 64))
(declare-fun temp10330_17 () (_ BitVec 64))
(declare-fun temp10330_18 () (_ BitVec 64))
(declare-fun temp10330_19 () (_ BitVec 64))
(declare-fun temp10330_20 () (_ BitVec 64))
(declare-fun temp10330_21 () (_ BitVec 64))
(declare-fun temp10330_22 () (_ BitVec 64))
(declare-fun temp10330_23 () (_ BitVec 64))
(declare-fun temp10330_24 () (_ BitVec 64))
(declare-fun temp10330_25 () (_ BitVec 64))
(declare-fun temp10330_26 () (_ BitVec 64))
(declare-fun temp10330_27 () (_ BitVec 64))
(declare-fun temp10330_28 () (_ BitVec 64))
(declare-fun temp10330_29 () (_ BitVec 64))
(declare-fun temp10330_30 () (_ BitVec 64))
(declare-fun temp10330_31 () (_ BitVec 64))
(declare-fun temp10330_32 () (_ BitVec 64))
(declare-fun temp10330_33 () (_ BitVec 64))
(declare-fun temp10330_34 () (_ BitVec 64))
(declare-fun temp10330_35 () (_ BitVec 64))
(declare-fun temp10330_36 () (_ BitVec 64))
(declare-fun temp10330_37 () (_ BitVec 64))
(declare-fun temp10330_38 () (_ BitVec 64))
(declare-fun temp10330_39 () (_ BitVec 64))
(declare-fun temp10330_40 () (_ BitVec 64))
(declare-fun temp10330_41 () (_ BitVec 64))
(declare-fun temp10330_42 () (_ BitVec 64))
(declare-fun temp10330_43 () (_ BitVec 64))
(declare-fun temp10330_44 () (_ BitVec 64))
(declare-fun temp10330_45 () (_ BitVec 64))
(declare-fun temp10330_46 () (_ BitVec 64))
(declare-fun temp10330_47 () (_ BitVec 64))
(declare-fun temp10330_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10330_49 () (_ BitVec 64))
(declare-fun temp10330_50 () (_ BitVec 64))
(declare-fun temp10330_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10330_52 () (_ BitVec 64))
(declare-fun temp10330_53 () (_ BitVec 64))
(declare-fun temp10330_54 () (_ BitVec 64))
(declare-fun temp10330_55 () (_ BitVec 64))
(declare-fun temp10330_56 () (_ BitVec 64))
(declare-fun temp10330_57 () (_ BitVec 64))
(declare-fun temp10330_58 () (_ BitVec 64))
(declare-fun temp10330_59 () (_ BitVec 64))
(declare-fun temp10330_60 () (_ BitVec 64))
(declare-fun temp10330_61 () (_ BitVec 64))
(declare-fun temp10330_62 () (_ BitVec 64))
(declare-fun temp10330_63 () (_ BitVec 64))
(declare-fun temp10330_64 () (_ BitVec 64))
(declare-fun temp10330_65 () (_ BitVec 64))
(declare-fun temp10330_66 () (_ BitVec 64))
(declare-fun temp10330_67 () (_ BitVec 64))
(declare-fun temp10330_68 () (_ BitVec 64))
(declare-fun temp10330_69 () (_ BitVec 64))
(declare-fun temp10330_70 () (_ BitVec 64))
(declare-fun temp10330_71 () (_ BitVec 64))
(declare-fun temp10330_72 () (_ BitVec 64))
(declare-fun temp10330_73 () (_ BitVec 64))
(declare-fun temp10330_74 () (_ BitVec 64))
(declare-fun temp10330_75 () (_ BitVec 64))
(declare-fun temp10330_76 () (_ BitVec 64))
(declare-fun temp10330_77 () (_ BitVec 64))
(declare-fun temp10330_78 () (_ BitVec 64))
(declare-fun temp10330_79 () (_ BitVec 64))
(declare-fun temp10330_80 () (_ BitVec 64))
(declare-fun temp10330_81 () (_ BitVec 64))
(declare-fun temp10330_82 () (_ BitVec 64))
(declare-fun temp10330_83 () (_ BitVec 64))
(declare-fun temp10330_84 () (_ BitVec 64))
(declare-fun temp10330_85 () (_ BitVec 64))
(declare-fun temp10330_86 () (_ BitVec 64))
(declare-fun temp10330_87 () (_ BitVec 64))
(declare-fun temp10330_88 () (_ BitVec 64))
(declare-fun temp10330_89 () (_ BitVec 64))
(declare-fun temp10330_90 () (_ BitVec 64))
(declare-fun temp10330_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10330_92 () (_ BitVec 64))
(declare-fun temp10330_93 () (_ BitVec 64))
(declare-fun temp10330_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10330_95 () (_ BitVec 64))
(declare-fun temp10330_96 () (_ BitVec 64))
(declare-fun temp10330_97 () (_ BitVec 64))
(declare-fun temp10330_98 () (_ BitVec 64))
(declare-fun temp10330_99 () (_ BitVec 64))
(declare-fun temp10330_100 () (_ BitVec 64))
(declare-fun temp10330_101 () (_ BitVec 64))
(declare-fun temp10330_102 () (_ BitVec 64))
(declare-fun temp10330_103 () (_ BitVec 64))
(declare-fun temp10330_104 () (_ BitVec 64))
(declare-fun temp10330_105 () (_ BitVec 64))
(declare-fun temp10330_106 () (_ BitVec 64))
(declare-fun temp10330_107 () (_ BitVec 64))
(declare-fun temp10330_108 () (_ BitVec 64))
(declare-fun temp10330_109 () (_ BitVec 64))
(declare-fun temp10330_110 () (_ BitVec 64))
(declare-fun temp10330_111 () (_ BitVec 64))
(declare-fun temp10330_112 () (_ BitVec 64))
(declare-fun temp10330_113 () (_ BitVec 64))
(declare-fun temp10330_114 () (_ BitVec 64))
(declare-fun temp10330_115 () (_ BitVec 64))
(declare-fun temp10330_116 () (_ BitVec 64))
(declare-fun temp10330_117 () (_ BitVec 64))
(declare-fun temp10330_118 () (_ BitVec 64))
(declare-fun temp10330_119 () (_ BitVec 64))
(declare-fun temp10330_120 () (_ BitVec 64))
(declare-fun temp10330_121 () (_ BitVec 64))
(declare-fun temp10330_122 () (_ BitVec 64))
(declare-fun temp10330_123 () (_ BitVec 64))
(declare-fun temp10330_124 () (_ BitVec 64))
(declare-fun temp10330_125 () (_ BitVec 64))
(declare-fun temp10330_126 () (_ BitVec 64))
(declare-fun temp10330_127 () (_ BitVec 64))
(declare-fun temp10330_128 () (_ BitVec 64))
(declare-fun temp10330_129 () (_ BitVec 64))
(declare-fun temp10330_130 () (_ BitVec 64))
(declare-fun temp10330_131 () (_ BitVec 64))
(declare-fun temp10330_132 () (_ BitVec 64))
(declare-fun temp10330_133 () (_ BitVec 64))
(declare-fun temp10330_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10330_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10330_136 () (_ BitVec 64))
(declare-fun temp10330_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10330_138 () (_ BitVec 64))
(declare-fun temp10330_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10330_140 () (_ BitVec 64))
(declare-fun temp10330_141 () (_ BitVec 64))
(declare-fun temp10330_142 () (_ BitVec 64))
(declare-fun temp10330_143 () (_ BitVec 64))
(declare-fun temp10330_144 () (_ BitVec 64))
(declare-fun temp10330_145 () (_ BitVec 64))
(declare-fun temp10330_146 () (_ BitVec 64))
(declare-fun temp10330_147 () (_ BitVec 64))
(declare-fun temp10330_148 () (_ BitVec 64))
(declare-fun temp10330_149 () (_ BitVec 64))
(declare-fun temp10330_150 () (_ BitVec 64))
(declare-fun temp10330_151 () (_ BitVec 64))
(declare-fun temp10330_152 () (_ BitVec 64))
(declare-fun temp10330_153 () (_ BitVec 64))
(declare-fun temp10330_154 () (_ BitVec 64))
(declare-fun temp10330_155 () (_ BitVec 64))
(declare-fun temp10330_157 () (_ BitVec 64))
(declare-fun temp10330_158 () (_ BitVec 64))
(declare-fun temp10330_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10330_159 () (_ BitVec 64))
(declare-fun temp10330_160 () (_ BitVec 64))
(declare-fun temp10330_162 () (_ BitVec 64))
(declare-fun temp10330_163 () (_ BitVec 64))
(declare-fun temp10330_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10330_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10330_165 () (_ BitVec 64))
(declare-fun temp10330_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10330_167 () (_ BitVec 64))
(declare-fun temp10330_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10330_169 () (_ BitVec 64))
(declare-fun temp10330_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10330_171 () (_ BitVec 64))
(declare-fun temp10330_172 () (_ BitVec 64))
(declare-fun temp10330_173 () (_ BitVec 64))
(declare-fun temp10330_174 () (_ BitVec 64))
(declare-fun temp10330_175 () (_ BitVec 64))
(declare-fun temp10330_176 () (_ BitVec 64))
(declare-fun temp10330_177 () (_ BitVec 64))
(declare-fun temp10330_178 () (_ BitVec 64))
(declare-fun temp10330_179 () (_ BitVec 64))
(declare-fun temp10330_180 () (_ BitVec 64))
(declare-fun temp10330_181 () (_ BitVec 64))
(declare-fun temp10330_182 () (_ BitVec 64))
(declare-fun temp10330_183 () (_ BitVec 64))
(declare-fun temp10330_184 () (_ BitVec 64))
(declare-fun temp10330_185 () (_ BitVec 64))
(declare-fun temp10330_186 () (_ BitVec 64))
(declare-fun temp10330_187 () (_ BitVec 64))
(declare-fun temp10330_188 () (_ BitVec 64))
(declare-fun temp10330_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10330_190 () (_ BitVec 64))
(declare-fun temp10330_192 () (_ BitVec 64))
(declare-fun temp10330_193 () (_ BitVec 64))
(declare-fun temp10330_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10330_194 () (_ BitVec 64))
(declare-fun temp10330_195 () (_ BitVec 64))
(declare-fun temp10330_197 () (_ BitVec 64))
(declare-fun temp10330_198 () (_ BitVec 64))
(declare-fun temp10330_196 () (_ BitVec 64))
(declare-fun temp10330_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10330_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10330_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10330_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10330_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10330_204 () (_ BitVec 64))
(declare-fun temp10330_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10330_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10330_207 () (_ BitVec 64))
(declare-fun temp10330_208 () (_ BitVec 64))
(declare-fun temp10330_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10330_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10330_211 () (_ BitVec 64))
(declare-fun temp10330_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10330_213 () (_ BitVec 64))
(declare-fun temp10330_214 () (_ BitVec 64))
(declare-fun temp10330_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10330_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10330_217 () (_ BitVec 64))
(declare-fun temp10330_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10330_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10330_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp10330_221 () (_ BitVec 64))
(assert (= temp10330_1 #x0000000000000001))
(assert (= var77203 temp10330_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10330_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10330_2)))
(assert (= temp10330_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10330_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10330_4 #x0000000000000000))
(assert (= var210941 temp10330_4))
(assert (= temp10330_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10330_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10330_6 #x0000000000000000))
(assert (= var210986 temp10330_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10330_7 #x0000000000000000))
(assert (= temp10330_8 temp10330_7))
(assert (= temp10330_9 (select ARGNAME_padding_NAMEEND_VAL temp10330_8)))
(assert (= temp10330_10 #x0000000000000001))
(assert (= temp10330_11 temp10330_10))
(assert (= temp10330_12 (select ARGNAME_padding_NAMEEND_VAL temp10330_11)))
(assert (= temp10330_13 #x0000000000000002))
(assert (= temp10330_14 temp10330_13))
(assert (= temp10330_15 (select ARGNAME_padding_NAMEEND_VAL temp10330_14)))
(assert (= temp10330_16 #x0000000000000003))
(assert (= temp10330_17 temp10330_16))
(assert (= temp10330_18 (select ARGNAME_padding_NAMEEND_VAL temp10330_17)))
(assert (= temp10330_19 #x0000000000000004))
(assert (= temp10330_20 temp10330_19))
(assert (= temp10330_21 (select ARGNAME_padding_NAMEEND_VAL temp10330_20)))
(assert (= temp10330_22 #x0000000000000005))
(assert (= temp10330_23 temp10330_22))
(assert (= temp10330_24 (select ARGNAME_padding_NAMEEND_VAL temp10330_23)))
(assert (= temp10330_25 #x0000000000000000))
(assert (= temp10330_26 #x0000000000000000))
(assert (= temp10330_27 temp10330_26))
(assert (= temp10330_28 (select ARGNAME_padding_NAMEEND_VAL temp10330_27)))
(assert (= temp10330_29 #x0000000000000000))
(assert (= temp10330_30 #x0000000000000001))
(assert (= temp10330_31 temp10330_30))
(assert (= temp10330_32 (select ARGNAME_padding_NAMEEND_VAL temp10330_31)))
(assert (= temp10330_33 #x0000000000000000))
(assert (= temp10330_34 #x0000000000000002))
(assert (= temp10330_35 temp10330_34))
(assert (= temp10330_36 (select ARGNAME_padding_NAMEEND_VAL temp10330_35)))
(assert (= temp10330_37 #x0000000000000000))
(assert (= temp10330_38 #x0000000000000003))
(assert (= temp10330_39 temp10330_38))
(assert (= temp10330_40 (select ARGNAME_padding_NAMEEND_VAL temp10330_39)))
(assert (= temp10330_41 #x0000000000000000))
(assert (= temp10330_42 #x0000000000000004))
(assert (= temp10330_43 temp10330_42))
(assert (= temp10330_44 (select ARGNAME_padding_NAMEEND_VAL temp10330_43)))
(assert (= temp10330_45 #x0000000000000000))
(assert (= temp10330_46 #x0000000000000005))
(assert (= temp10330_47 temp10330_46))
(assert (= temp10330_48 (select ARGNAME_padding_NAMEEND_VAL temp10330_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10330_28 temp10330_25)
             (bvslt temp10330_32 temp10330_29)
             (bvslt temp10330_36 temp10330_33)
             (bvslt temp10330_40 temp10330_37)
             (bvslt temp10330_44 temp10330_41)
             (bvslt temp10330_48 temp10330_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10330_49 #x0000000000000000))
(assert (= var1191714 temp10330_49))
(assert (= temp10330_50 #x0000000000000000))
(assert (= temp10330_51 temp10330_50))
(assert (= temp10330_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10330_51)))
(assert (= temp10330_53 #x0000000000000001))
(assert (= temp10330_54 temp10330_53))
(assert (= temp10330_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10330_54)))
(assert (= temp10330_56 #x0000000000000002))
(assert (= temp10330_57 temp10330_56))
(assert (= temp10330_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10330_57)))
(assert (= temp10330_59 #x0000000000000003))
(assert (= temp10330_60 temp10330_59))
(assert (= temp10330_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10330_60)))
(assert (= temp10330_62 #x0000000000000004))
(assert (= temp10330_63 temp10330_62))
(assert (= temp10330_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10330_63)))
(assert (= temp10330_65 #x0000000000000005))
(assert (= temp10330_66 temp10330_65))
(assert (= temp10330_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10330_66)))
(assert (= temp10330_68 #x0000000000000000))
(assert (= temp10330_69 #x0000000000000000))
(assert (= temp10330_70 temp10330_69))
(assert (= temp10330_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10330_70)))
(assert (= temp10330_72 #x0000000000000000))
(assert (= temp10330_73 #x0000000000000001))
(assert (= temp10330_74 temp10330_73))
(assert (= temp10330_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10330_74)))
(assert (= temp10330_76 #x0000000000000000))
(assert (= temp10330_77 #x0000000000000002))
(assert (= temp10330_78 temp10330_77))
(assert (= temp10330_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10330_78)))
(assert (= temp10330_80 #x0000000000000000))
(assert (= temp10330_81 #x0000000000000003))
(assert (= temp10330_82 temp10330_81))
(assert (= temp10330_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10330_82)))
(assert (= temp10330_84 #x0000000000000000))
(assert (= temp10330_85 #x0000000000000004))
(assert (= temp10330_86 temp10330_85))
(assert (= temp10330_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10330_86)))
(assert (= temp10330_88 #x0000000000000000))
(assert (= temp10330_89 #x0000000000000005))
(assert (= temp10330_90 temp10330_89))
(assert (= temp10330_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10330_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10330_71 temp10330_68)
             (bvslt temp10330_75 temp10330_72)
             (bvslt temp10330_79 temp10330_76)
             (bvslt temp10330_83 temp10330_80)
             (bvslt temp10330_87 temp10330_84)
             (bvslt temp10330_91 temp10330_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10330_92 #x0000000000000000))
(assert (= var1191725 temp10330_92))
(assert (= temp10330_93 #x0000000000000000))
(assert (= temp10330_94 temp10330_93))
(assert (= temp10330_95 (select ARGNAME_stride_NAMEEND_VAL temp10330_94)))
(assert (= temp10330_96 #x0000000000000001))
(assert (= temp10330_97 temp10330_96))
(assert (= temp10330_98 (select ARGNAME_stride_NAMEEND_VAL temp10330_97)))
(assert (= temp10330_99 #x0000000000000002))
(assert (= temp10330_100 temp10330_99))
(assert (= temp10330_101 (select ARGNAME_stride_NAMEEND_VAL temp10330_100)))
(assert (= temp10330_102 #x0000000000000003))
(assert (= temp10330_103 temp10330_102))
(assert (= temp10330_104 (select ARGNAME_stride_NAMEEND_VAL temp10330_103)))
(assert (= temp10330_105 #x0000000000000004))
(assert (= temp10330_106 temp10330_105))
(assert (= temp10330_107 (select ARGNAME_stride_NAMEEND_VAL temp10330_106)))
(assert (= temp10330_108 #x0000000000000005))
(assert (= temp10330_109 temp10330_108))
(assert (= temp10330_110 (select ARGNAME_stride_NAMEEND_VAL temp10330_109)))
(assert (= temp10330_111 #x0000000000000000))
(assert (= temp10330_112 #x0000000000000000))
(assert (= temp10330_113 temp10330_112))
(assert (= temp10330_114 (select ARGNAME_stride_NAMEEND_VAL temp10330_113)))
(assert (= temp10330_115 #x0000000000000000))
(assert (= temp10330_116 #x0000000000000001))
(assert (= temp10330_117 temp10330_116))
(assert (= temp10330_118 (select ARGNAME_stride_NAMEEND_VAL temp10330_117)))
(assert (= temp10330_119 #x0000000000000000))
(assert (= temp10330_120 #x0000000000000002))
(assert (= temp10330_121 temp10330_120))
(assert (= temp10330_122 (select ARGNAME_stride_NAMEEND_VAL temp10330_121)))
(assert (= temp10330_123 #x0000000000000000))
(assert (= temp10330_124 #x0000000000000003))
(assert (= temp10330_125 temp10330_124))
(assert (= temp10330_126 (select ARGNAME_stride_NAMEEND_VAL temp10330_125)))
(assert (= temp10330_127 #x0000000000000000))
(assert (= temp10330_128 #x0000000000000004))
(assert (= temp10330_129 temp10330_128))
(assert (= temp10330_130 (select ARGNAME_stride_NAMEEND_VAL temp10330_129)))
(assert (= temp10330_131 #x0000000000000000))
(assert (= temp10330_132 #x0000000000000005))
(assert (= temp10330_133 temp10330_132))
(assert (= temp10330_134 (select ARGNAME_stride_NAMEEND_VAL temp10330_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10330_114 temp10330_111)
             (bvsle temp10330_118 temp10330_115)
             (bvsle temp10330_122 temp10330_119)
             (bvsle temp10330_126 temp10330_123)
             (bvsle temp10330_130 temp10330_127)
             (bvsle temp10330_134 temp10330_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10330_135 #x0000000000000000))
(assert (= var1191735 temp10330_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10330_136 #x0000000000000001))
(assert (= var1191747 temp10330_136))
(assert (= temp10330_137 #x0000000000000000))
(assert (= var1179826 temp10330_137))
(assert (= temp10330_138 #x0000000000000000))
(assert (= temp10330_139 temp10330_138))
(assert (= temp10330_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10330_139)))
(assert (= temp10330_141 #x0000000000000001))
(assert (= temp10330_142 temp10330_141))
(assert (= temp10330_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10330_142)))
(assert (= temp10330_144 #x0000000000000002))
(assert (= temp10330_145 temp10330_144))
(assert (= temp10330_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10330_145)))
(assert (= temp10330_147 #x0000000000000003))
(assert (= temp10330_148 temp10330_147))
(assert (= temp10330_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10330_148)))
(assert (= temp10330_150 #x0000000000000004))
(assert (= temp10330_151 temp10330_150))
(assert (= temp10330_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10330_151)))
(assert (= temp10330_153 #x0000000000000005))
(assert (= temp10330_154 temp10330_153))
(assert (= temp10330_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10330_154)))
(assert (= temp10330_157 var1179826))
(assert (= temp10330_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10330_157)))
(assert (= temp10330_156 temp10330_158))
(assert (= var1191780
   (ite (bvslt temp10330_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10330_159 #x0000000000000000))
(assert (= var1191780 temp10330_159))
(assert (= temp10330_160 #x0000000000000000))
(assert (= var1179826 temp10330_160))
(assert (= temp10330_162 var1179826))
(assert (= temp10330_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10330_162)))
(assert (= temp10330_161 temp10330_163))
(assert (= var1191802 (bvsmod temp10330_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10330_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10330_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10330_165 #x0000000000000001))
(assert (= var1191803 temp10330_165))
(assert (= temp10330_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10330_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10330_167 #x0000000000000001))
(assert (= var1191823 temp10330_167))
(assert (= temp10330_168 #x0000000000000001))
(assert (= var1180714 temp10330_168))
(assert (= temp10330_169 #x0000000000000000))
(assert (= temp10330_170 temp10330_169))
(assert (= temp10330_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10330_170)))
(assert (= temp10330_172 #x0000000000000001))
(assert (= temp10330_173 temp10330_172))
(assert (= temp10330_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10330_173)))
(assert (= temp10330_175 #x0000000000000002))
(assert (= temp10330_176 temp10330_175))
(assert (= temp10330_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10330_176)))
(assert (= temp10330_178 #x0000000000000003))
(assert (= temp10330_179 temp10330_178))
(assert (= temp10330_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10330_179)))
(assert (= temp10330_181 #x0000000000000004))
(assert (= temp10330_182 temp10330_181))
(assert (= temp10330_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10330_182)))
(assert (= temp10330_184 #x0000000000000005))
(assert (= temp10330_185 temp10330_184))
(assert (= temp10330_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10330_185)))
(assert (= temp10330_187 #x0000000000000000))
(assert (= temp10330_188
   (ite (bvslt var1180714 temp10330_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10330_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10330_188)))
(assert (= var1191831 temp10330_189))
(assert (bvslt (ite (bvslt var1180714 temp10330_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10330_190 #x0000000000000001))
(assert (= var1180714 temp10330_190))
(assert (= temp10330_192 var1180714))
(assert (= temp10330_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10330_192)))
(assert (= temp10330_191 temp10330_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10330_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10330_194 #x0000000000000001))
(assert (= var1191836 temp10330_194))
(assert (= temp10330_195 #x0000000000000000))
(assert (= var1179826 temp10330_195))
(assert (= temp10330_197 var1179826))
(assert (= temp10330_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10330_197)))
(assert (= temp10330_196 temp10330_198))
(assert (= temp10330_199 #x0000000000000002))
(assert (= var1586025 temp10330_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10330_200 #x0000000000000001))
(assert (= var1191993 temp10330_200))
(assert (= temp10330_201 #x0000000000000001))
(assert (= var2700303 temp10330_201))
(assert (= temp10330_202 #x0000000000000001))
(assert (= var2962447 temp10330_202))
(assert (= temp10330_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10330_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10330_204 #x0000000000000001))
(assert (= var211058 temp10330_204))
(assert (= temp10330_205 #x0000000000000001))
(assert (= var211188 temp10330_205))
(assert (= var3879401 var211188))
(assert (= temp10330_206 #x0000000000000000))
(assert (= var3866802 temp10330_206))
(assert (= temp10330_207 #x0000000000000000))
(assert (= temp10330_208
   (ite (bvslt var3866802 temp10330_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10330_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10330_208)))
(assert (= var3879420 temp10330_209))
(assert (bvslt (ite (bvslt var3866802 temp10330_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10330_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10330_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10330_211 #x0000000000000000))
(assert (= var3879421 temp10330_211))
(assert (= temp10330_212 #x0000000000000001))
(assert (= var3867690 temp10330_212))
(assert (= temp10330_213 #x0000000000000000))
(assert (= temp10330_214
   (ite (bvslt var3867690 temp10330_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10330_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10330_214)))
(assert (= var3879423 temp10330_215))
(assert (bvslt (ite (bvslt var3867690 temp10330_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10330_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10330_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10330_217 #x0000000000000001))
(assert (= var3879424 temp10330_217))
(assert (= temp10330_218 #x0000000000000000))
(assert (= var4079423 temp10330_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10330_219 #x0000000000000002))
(assert (= var4208259 temp10330_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10330_220 #x0000000000000000))
(assert (= var4273820 temp10330_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp10330_221 #x0000000000000001))
(assert (= var211058 temp10330_221))
(model-add temp10330_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10330_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10330_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10330_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





