(declare-fun temp10812_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10812_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10812_3 () (_ BitVec 64))
(declare-fun temp10812_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10812_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10812_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10812_7 () (_ BitVec 64))
(declare-fun temp10812_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10812_9 () (_ BitVec 64))
(declare-fun temp10812_10 () (_ BitVec 64))
(declare-fun temp10812_11 () (_ BitVec 64))
(declare-fun temp10812_12 () (_ BitVec 64))
(declare-fun temp10812_13 () (_ BitVec 64))
(declare-fun temp10812_14 () (_ BitVec 64))
(declare-fun temp10812_15 () (_ BitVec 64))
(declare-fun temp10812_16 () (_ BitVec 64))
(declare-fun temp10812_17 () (_ BitVec 64))
(declare-fun temp10812_18 () (_ BitVec 64))
(declare-fun temp10812_19 () (_ BitVec 64))
(declare-fun temp10812_20 () (_ BitVec 64))
(declare-fun temp10812_21 () (_ BitVec 64))
(declare-fun temp10812_22 () (_ BitVec 64))
(declare-fun temp10812_23 () (_ BitVec 64))
(declare-fun temp10812_24 () (_ BitVec 64))
(declare-fun temp10812_25 () (_ BitVec 64))
(declare-fun temp10812_26 () (_ BitVec 64))
(declare-fun temp10812_27 () (_ BitVec 64))
(declare-fun temp10812_28 () (_ BitVec 64))
(declare-fun temp10812_29 () (_ BitVec 64))
(declare-fun temp10812_30 () (_ BitVec 64))
(declare-fun temp10812_31 () (_ BitVec 64))
(declare-fun temp10812_32 () (_ BitVec 64))
(declare-fun temp10812_33 () (_ BitVec 64))
(declare-fun temp10812_34 () (_ BitVec 64))
(declare-fun temp10812_35 () (_ BitVec 64))
(declare-fun temp10812_36 () (_ BitVec 64))
(declare-fun temp10812_37 () (_ BitVec 64))
(declare-fun temp10812_38 () (_ BitVec 64))
(declare-fun temp10812_39 () (_ BitVec 64))
(declare-fun temp10812_40 () (_ BitVec 64))
(declare-fun temp10812_41 () (_ BitVec 64))
(declare-fun temp10812_42 () (_ BitVec 64))
(declare-fun temp10812_43 () (_ BitVec 64))
(declare-fun temp10812_44 () (_ BitVec 64))
(declare-fun temp10812_45 () (_ BitVec 64))
(declare-fun temp10812_46 () (_ BitVec 64))
(declare-fun temp10812_47 () (_ BitVec 64))
(declare-fun temp10812_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10812_49 () (_ BitVec 64))
(declare-fun temp10812_50 () (_ BitVec 64))
(declare-fun temp10812_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10812_52 () (_ BitVec 64))
(declare-fun temp10812_53 () (_ BitVec 64))
(declare-fun temp10812_54 () (_ BitVec 64))
(declare-fun temp10812_55 () (_ BitVec 64))
(declare-fun temp10812_56 () (_ BitVec 64))
(declare-fun temp10812_57 () (_ BitVec 64))
(declare-fun temp10812_58 () (_ BitVec 64))
(declare-fun temp10812_59 () (_ BitVec 64))
(declare-fun temp10812_60 () (_ BitVec 64))
(declare-fun temp10812_61 () (_ BitVec 64))
(declare-fun temp10812_62 () (_ BitVec 64))
(declare-fun temp10812_63 () (_ BitVec 64))
(declare-fun temp10812_64 () (_ BitVec 64))
(declare-fun temp10812_65 () (_ BitVec 64))
(declare-fun temp10812_66 () (_ BitVec 64))
(declare-fun temp10812_67 () (_ BitVec 64))
(declare-fun temp10812_68 () (_ BitVec 64))
(declare-fun temp10812_69 () (_ BitVec 64))
(declare-fun temp10812_70 () (_ BitVec 64))
(declare-fun temp10812_71 () (_ BitVec 64))
(declare-fun temp10812_72 () (_ BitVec 64))
(declare-fun temp10812_73 () (_ BitVec 64))
(declare-fun temp10812_74 () (_ BitVec 64))
(declare-fun temp10812_75 () (_ BitVec 64))
(declare-fun temp10812_76 () (_ BitVec 64))
(declare-fun temp10812_77 () (_ BitVec 64))
(declare-fun temp10812_78 () (_ BitVec 64))
(declare-fun temp10812_79 () (_ BitVec 64))
(declare-fun temp10812_80 () (_ BitVec 64))
(declare-fun temp10812_81 () (_ BitVec 64))
(declare-fun temp10812_82 () (_ BitVec 64))
(declare-fun temp10812_83 () (_ BitVec 64))
(declare-fun temp10812_84 () (_ BitVec 64))
(declare-fun temp10812_85 () (_ BitVec 64))
(declare-fun temp10812_86 () (_ BitVec 64))
(declare-fun temp10812_87 () (_ BitVec 64))
(declare-fun temp10812_88 () (_ BitVec 64))
(declare-fun temp10812_89 () (_ BitVec 64))
(declare-fun temp10812_90 () (_ BitVec 64))
(declare-fun temp10812_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10812_92 () (_ BitVec 64))
(declare-fun temp10812_93 () (_ BitVec 64))
(declare-fun temp10812_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10812_95 () (_ BitVec 64))
(declare-fun temp10812_96 () (_ BitVec 64))
(declare-fun temp10812_97 () (_ BitVec 64))
(declare-fun temp10812_98 () (_ BitVec 64))
(declare-fun temp10812_99 () (_ BitVec 64))
(declare-fun temp10812_100 () (_ BitVec 64))
(declare-fun temp10812_101 () (_ BitVec 64))
(declare-fun temp10812_102 () (_ BitVec 64))
(declare-fun temp10812_103 () (_ BitVec 64))
(declare-fun temp10812_104 () (_ BitVec 64))
(declare-fun temp10812_105 () (_ BitVec 64))
(declare-fun temp10812_106 () (_ BitVec 64))
(declare-fun temp10812_107 () (_ BitVec 64))
(declare-fun temp10812_108 () (_ BitVec 64))
(declare-fun temp10812_109 () (_ BitVec 64))
(declare-fun temp10812_110 () (_ BitVec 64))
(declare-fun temp10812_111 () (_ BitVec 64))
(declare-fun temp10812_112 () (_ BitVec 64))
(declare-fun temp10812_113 () (_ BitVec 64))
(declare-fun temp10812_114 () (_ BitVec 64))
(declare-fun temp10812_115 () (_ BitVec 64))
(declare-fun temp10812_116 () (_ BitVec 64))
(declare-fun temp10812_117 () (_ BitVec 64))
(declare-fun temp10812_118 () (_ BitVec 64))
(declare-fun temp10812_119 () (_ BitVec 64))
(declare-fun temp10812_120 () (_ BitVec 64))
(declare-fun temp10812_121 () (_ BitVec 64))
(declare-fun temp10812_122 () (_ BitVec 64))
(declare-fun temp10812_123 () (_ BitVec 64))
(declare-fun temp10812_124 () (_ BitVec 64))
(declare-fun temp10812_125 () (_ BitVec 64))
(declare-fun temp10812_126 () (_ BitVec 64))
(declare-fun temp10812_127 () (_ BitVec 64))
(declare-fun temp10812_128 () (_ BitVec 64))
(declare-fun temp10812_129 () (_ BitVec 64))
(declare-fun temp10812_130 () (_ BitVec 64))
(declare-fun temp10812_131 () (_ BitVec 64))
(declare-fun temp10812_132 () (_ BitVec 64))
(declare-fun temp10812_133 () (_ BitVec 64))
(declare-fun temp10812_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10812_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10812_136 () (_ BitVec 64))
(declare-fun temp10812_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10812_138 () (_ BitVec 64))
(declare-fun temp10812_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10812_140 () (_ BitVec 64))
(declare-fun temp10812_141 () (_ BitVec 64))
(declare-fun temp10812_142 () (_ BitVec 64))
(declare-fun temp10812_143 () (_ BitVec 64))
(declare-fun temp10812_144 () (_ BitVec 64))
(declare-fun temp10812_145 () (_ BitVec 64))
(declare-fun temp10812_146 () (_ BitVec 64))
(declare-fun temp10812_147 () (_ BitVec 64))
(declare-fun temp10812_148 () (_ BitVec 64))
(declare-fun temp10812_149 () (_ BitVec 64))
(declare-fun temp10812_150 () (_ BitVec 64))
(declare-fun temp10812_151 () (_ BitVec 64))
(declare-fun temp10812_152 () (_ BitVec 64))
(declare-fun temp10812_153 () (_ BitVec 64))
(declare-fun temp10812_154 () (_ BitVec 64))
(declare-fun temp10812_155 () (_ BitVec 64))
(declare-fun temp10812_157 () (_ BitVec 64))
(declare-fun temp10812_158 () (_ BitVec 64))
(declare-fun temp10812_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10812_159 () (_ BitVec 64))
(declare-fun temp10812_160 () (_ BitVec 64))
(declare-fun temp10812_162 () (_ BitVec 64))
(declare-fun temp10812_163 () (_ BitVec 64))
(declare-fun temp10812_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10812_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10812_165 () (_ BitVec 64))
(declare-fun temp10812_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10812_167 () (_ BitVec 64))
(declare-fun temp10812_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10812_169 () (_ BitVec 64))
(declare-fun temp10812_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10812_171 () (_ BitVec 64))
(declare-fun temp10812_172 () (_ BitVec 64))
(declare-fun temp10812_173 () (_ BitVec 64))
(declare-fun temp10812_174 () (_ BitVec 64))
(declare-fun temp10812_175 () (_ BitVec 64))
(declare-fun temp10812_176 () (_ BitVec 64))
(declare-fun temp10812_177 () (_ BitVec 64))
(declare-fun temp10812_178 () (_ BitVec 64))
(declare-fun temp10812_179 () (_ BitVec 64))
(declare-fun temp10812_180 () (_ BitVec 64))
(declare-fun temp10812_181 () (_ BitVec 64))
(declare-fun temp10812_182 () (_ BitVec 64))
(declare-fun temp10812_183 () (_ BitVec 64))
(declare-fun temp10812_184 () (_ BitVec 64))
(declare-fun temp10812_185 () (_ BitVec 64))
(declare-fun temp10812_186 () (_ BitVec 64))
(declare-fun temp10812_187 () (_ BitVec 64))
(declare-fun temp10812_188 () (_ BitVec 64))
(declare-fun temp10812_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10812_190 () (_ BitVec 64))
(declare-fun temp10812_192 () (_ BitVec 64))
(declare-fun temp10812_193 () (_ BitVec 64))
(declare-fun temp10812_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10812_194 () (_ BitVec 64))
(declare-fun temp10812_195 () (_ BitVec 64))
(declare-fun temp10812_197 () (_ BitVec 64))
(declare-fun temp10812_198 () (_ BitVec 64))
(declare-fun temp10812_196 () (_ BitVec 64))
(declare-fun temp10812_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10812_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10812_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10812_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10812_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10812_204 () (_ BitVec 64))
(declare-fun temp10812_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10812_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10812_207 () (_ BitVec 64))
(declare-fun temp10812_208 () (_ BitVec 64))
(declare-fun temp10812_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10812_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10812_211 () (_ BitVec 64))
(declare-fun temp10812_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10812_213 () (_ BitVec 64))
(declare-fun temp10812_214 () (_ BitVec 64))
(declare-fun temp10812_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10812_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10812_217 () (_ BitVec 64))
(declare-fun temp10812_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10812_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10812_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun var5452176 () (_ BitVec 64))
(declare-fun var5714320 () (_ BitVec 64))
(declare-fun temp10812_221 () (_ BitVec 64))
(declare-fun temp10812_222 () (_ BitVec 64))
(declare-fun var7353108 () (_ BitVec 64))
(declare-fun var7353075 () (_ BitVec 64))
(declare-fun var7221639 () (_ BitVec 64))
(declare-fun var7221635 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp10812_223 () (_ BitVec 64))
(assert (= temp10812_1 #x0000000000000001))
(assert (= var77203 temp10812_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10812_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10812_2)))
(assert (= temp10812_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10812_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10812_4 #x0000000000000000))
(assert (= var210941 temp10812_4))
(assert (= temp10812_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10812_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10812_6 #x0000000000000000))
(assert (= var210986 temp10812_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10812_7 #x0000000000000000))
(assert (= temp10812_8 temp10812_7))
(assert (= temp10812_9 (select ARGNAME_padding_NAMEEND_VAL temp10812_8)))
(assert (= temp10812_10 #x0000000000000001))
(assert (= temp10812_11 temp10812_10))
(assert (= temp10812_12 (select ARGNAME_padding_NAMEEND_VAL temp10812_11)))
(assert (= temp10812_13 #x0000000000000002))
(assert (= temp10812_14 temp10812_13))
(assert (= temp10812_15 (select ARGNAME_padding_NAMEEND_VAL temp10812_14)))
(assert (= temp10812_16 #x0000000000000003))
(assert (= temp10812_17 temp10812_16))
(assert (= temp10812_18 (select ARGNAME_padding_NAMEEND_VAL temp10812_17)))
(assert (= temp10812_19 #x0000000000000004))
(assert (= temp10812_20 temp10812_19))
(assert (= temp10812_21 (select ARGNAME_padding_NAMEEND_VAL temp10812_20)))
(assert (= temp10812_22 #x0000000000000005))
(assert (= temp10812_23 temp10812_22))
(assert (= temp10812_24 (select ARGNAME_padding_NAMEEND_VAL temp10812_23)))
(assert (= temp10812_25 #x0000000000000000))
(assert (= temp10812_26 #x0000000000000000))
(assert (= temp10812_27 temp10812_26))
(assert (= temp10812_28 (select ARGNAME_padding_NAMEEND_VAL temp10812_27)))
(assert (= temp10812_29 #x0000000000000000))
(assert (= temp10812_30 #x0000000000000001))
(assert (= temp10812_31 temp10812_30))
(assert (= temp10812_32 (select ARGNAME_padding_NAMEEND_VAL temp10812_31)))
(assert (= temp10812_33 #x0000000000000000))
(assert (= temp10812_34 #x0000000000000002))
(assert (= temp10812_35 temp10812_34))
(assert (= temp10812_36 (select ARGNAME_padding_NAMEEND_VAL temp10812_35)))
(assert (= temp10812_37 #x0000000000000000))
(assert (= temp10812_38 #x0000000000000003))
(assert (= temp10812_39 temp10812_38))
(assert (= temp10812_40 (select ARGNAME_padding_NAMEEND_VAL temp10812_39)))
(assert (= temp10812_41 #x0000000000000000))
(assert (= temp10812_42 #x0000000000000004))
(assert (= temp10812_43 temp10812_42))
(assert (= temp10812_44 (select ARGNAME_padding_NAMEEND_VAL temp10812_43)))
(assert (= temp10812_45 #x0000000000000000))
(assert (= temp10812_46 #x0000000000000005))
(assert (= temp10812_47 temp10812_46))
(assert (= temp10812_48 (select ARGNAME_padding_NAMEEND_VAL temp10812_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10812_28 temp10812_25)
             (bvslt temp10812_32 temp10812_29)
             (bvslt temp10812_36 temp10812_33)
             (bvslt temp10812_40 temp10812_37)
             (bvslt temp10812_44 temp10812_41)
             (bvslt temp10812_48 temp10812_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10812_49 #x0000000000000000))
(assert (= var1191714 temp10812_49))
(assert (= temp10812_50 #x0000000000000000))
(assert (= temp10812_51 temp10812_50))
(assert (= temp10812_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10812_51)))
(assert (= temp10812_53 #x0000000000000001))
(assert (= temp10812_54 temp10812_53))
(assert (= temp10812_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10812_54)))
(assert (= temp10812_56 #x0000000000000002))
(assert (= temp10812_57 temp10812_56))
(assert (= temp10812_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10812_57)))
(assert (= temp10812_59 #x0000000000000003))
(assert (= temp10812_60 temp10812_59))
(assert (= temp10812_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10812_60)))
(assert (= temp10812_62 #x0000000000000004))
(assert (= temp10812_63 temp10812_62))
(assert (= temp10812_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10812_63)))
(assert (= temp10812_65 #x0000000000000005))
(assert (= temp10812_66 temp10812_65))
(assert (= temp10812_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10812_66)))
(assert (= temp10812_68 #x0000000000000000))
(assert (= temp10812_69 #x0000000000000000))
(assert (= temp10812_70 temp10812_69))
(assert (= temp10812_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10812_70)))
(assert (= temp10812_72 #x0000000000000000))
(assert (= temp10812_73 #x0000000000000001))
(assert (= temp10812_74 temp10812_73))
(assert (= temp10812_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10812_74)))
(assert (= temp10812_76 #x0000000000000000))
(assert (= temp10812_77 #x0000000000000002))
(assert (= temp10812_78 temp10812_77))
(assert (= temp10812_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10812_78)))
(assert (= temp10812_80 #x0000000000000000))
(assert (= temp10812_81 #x0000000000000003))
(assert (= temp10812_82 temp10812_81))
(assert (= temp10812_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10812_82)))
(assert (= temp10812_84 #x0000000000000000))
(assert (= temp10812_85 #x0000000000000004))
(assert (= temp10812_86 temp10812_85))
(assert (= temp10812_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10812_86)))
(assert (= temp10812_88 #x0000000000000000))
(assert (= temp10812_89 #x0000000000000005))
(assert (= temp10812_90 temp10812_89))
(assert (= temp10812_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10812_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10812_71 temp10812_68)
             (bvslt temp10812_75 temp10812_72)
             (bvslt temp10812_79 temp10812_76)
             (bvslt temp10812_83 temp10812_80)
             (bvslt temp10812_87 temp10812_84)
             (bvslt temp10812_91 temp10812_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10812_92 #x0000000000000000))
(assert (= var1191725 temp10812_92))
(assert (= temp10812_93 #x0000000000000000))
(assert (= temp10812_94 temp10812_93))
(assert (= temp10812_95 (select ARGNAME_stride_NAMEEND_VAL temp10812_94)))
(assert (= temp10812_96 #x0000000000000001))
(assert (= temp10812_97 temp10812_96))
(assert (= temp10812_98 (select ARGNAME_stride_NAMEEND_VAL temp10812_97)))
(assert (= temp10812_99 #x0000000000000002))
(assert (= temp10812_100 temp10812_99))
(assert (= temp10812_101 (select ARGNAME_stride_NAMEEND_VAL temp10812_100)))
(assert (= temp10812_102 #x0000000000000003))
(assert (= temp10812_103 temp10812_102))
(assert (= temp10812_104 (select ARGNAME_stride_NAMEEND_VAL temp10812_103)))
(assert (= temp10812_105 #x0000000000000004))
(assert (= temp10812_106 temp10812_105))
(assert (= temp10812_107 (select ARGNAME_stride_NAMEEND_VAL temp10812_106)))
(assert (= temp10812_108 #x0000000000000005))
(assert (= temp10812_109 temp10812_108))
(assert (= temp10812_110 (select ARGNAME_stride_NAMEEND_VAL temp10812_109)))
(assert (= temp10812_111 #x0000000000000000))
(assert (= temp10812_112 #x0000000000000000))
(assert (= temp10812_113 temp10812_112))
(assert (= temp10812_114 (select ARGNAME_stride_NAMEEND_VAL temp10812_113)))
(assert (= temp10812_115 #x0000000000000000))
(assert (= temp10812_116 #x0000000000000001))
(assert (= temp10812_117 temp10812_116))
(assert (= temp10812_118 (select ARGNAME_stride_NAMEEND_VAL temp10812_117)))
(assert (= temp10812_119 #x0000000000000000))
(assert (= temp10812_120 #x0000000000000002))
(assert (= temp10812_121 temp10812_120))
(assert (= temp10812_122 (select ARGNAME_stride_NAMEEND_VAL temp10812_121)))
(assert (= temp10812_123 #x0000000000000000))
(assert (= temp10812_124 #x0000000000000003))
(assert (= temp10812_125 temp10812_124))
(assert (= temp10812_126 (select ARGNAME_stride_NAMEEND_VAL temp10812_125)))
(assert (= temp10812_127 #x0000000000000000))
(assert (= temp10812_128 #x0000000000000004))
(assert (= temp10812_129 temp10812_128))
(assert (= temp10812_130 (select ARGNAME_stride_NAMEEND_VAL temp10812_129)))
(assert (= temp10812_131 #x0000000000000000))
(assert (= temp10812_132 #x0000000000000005))
(assert (= temp10812_133 temp10812_132))
(assert (= temp10812_134 (select ARGNAME_stride_NAMEEND_VAL temp10812_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10812_114 temp10812_111)
             (bvsle temp10812_118 temp10812_115)
             (bvsle temp10812_122 temp10812_119)
             (bvsle temp10812_126 temp10812_123)
             (bvsle temp10812_130 temp10812_127)
             (bvsle temp10812_134 temp10812_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10812_135 #x0000000000000000))
(assert (= var1191735 temp10812_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10812_136 #x0000000000000001))
(assert (= var1191747 temp10812_136))
(assert (= temp10812_137 #x0000000000000000))
(assert (= var1179826 temp10812_137))
(assert (= temp10812_138 #x0000000000000000))
(assert (= temp10812_139 temp10812_138))
(assert (= temp10812_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10812_139)))
(assert (= temp10812_141 #x0000000000000001))
(assert (= temp10812_142 temp10812_141))
(assert (= temp10812_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10812_142)))
(assert (= temp10812_144 #x0000000000000002))
(assert (= temp10812_145 temp10812_144))
(assert (= temp10812_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10812_145)))
(assert (= temp10812_147 #x0000000000000003))
(assert (= temp10812_148 temp10812_147))
(assert (= temp10812_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10812_148)))
(assert (= temp10812_150 #x0000000000000004))
(assert (= temp10812_151 temp10812_150))
(assert (= temp10812_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10812_151)))
(assert (= temp10812_153 #x0000000000000005))
(assert (= temp10812_154 temp10812_153))
(assert (= temp10812_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10812_154)))
(assert (= temp10812_157 var1179826))
(assert (= temp10812_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10812_157)))
(assert (= temp10812_156 temp10812_158))
(assert (= var1191780
   (ite (bvslt temp10812_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10812_159 #x0000000000000000))
(assert (= var1191780 temp10812_159))
(assert (= temp10812_160 #x0000000000000000))
(assert (= var1179826 temp10812_160))
(assert (= temp10812_162 var1179826))
(assert (= temp10812_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10812_162)))
(assert (= temp10812_161 temp10812_163))
(assert (= var1191802 (bvsmod temp10812_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10812_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10812_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10812_165 #x0000000000000001))
(assert (= var1191803 temp10812_165))
(assert (= temp10812_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10812_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10812_167 #x0000000000000001))
(assert (= var1191823 temp10812_167))
(assert (= temp10812_168 #x0000000000000001))
(assert (= var1180714 temp10812_168))
(assert (= temp10812_169 #x0000000000000000))
(assert (= temp10812_170 temp10812_169))
(assert (= temp10812_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10812_170)))
(assert (= temp10812_172 #x0000000000000001))
(assert (= temp10812_173 temp10812_172))
(assert (= temp10812_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10812_173)))
(assert (= temp10812_175 #x0000000000000002))
(assert (= temp10812_176 temp10812_175))
(assert (= temp10812_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10812_176)))
(assert (= temp10812_178 #x0000000000000003))
(assert (= temp10812_179 temp10812_178))
(assert (= temp10812_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10812_179)))
(assert (= temp10812_181 #x0000000000000004))
(assert (= temp10812_182 temp10812_181))
(assert (= temp10812_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10812_182)))
(assert (= temp10812_184 #x0000000000000005))
(assert (= temp10812_185 temp10812_184))
(assert (= temp10812_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10812_185)))
(assert (= temp10812_187 #x0000000000000000))
(assert (= temp10812_188
   (ite (bvslt var1180714 temp10812_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10812_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10812_188)))
(assert (= var1191831 temp10812_189))
(assert (bvslt (ite (bvslt var1180714 temp10812_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10812_190 #x0000000000000001))
(assert (= var1180714 temp10812_190))
(assert (= temp10812_192 var1180714))
(assert (= temp10812_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10812_192)))
(assert (= temp10812_191 temp10812_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10812_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10812_194 #x0000000000000001))
(assert (= var1191836 temp10812_194))
(assert (= temp10812_195 #x0000000000000000))
(assert (= var1179826 temp10812_195))
(assert (= temp10812_197 var1179826))
(assert (= temp10812_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10812_197)))
(assert (= temp10812_196 temp10812_198))
(assert (= temp10812_199 #x0000000000000002))
(assert (= var1586025 temp10812_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10812_200 #x0000000000000001))
(assert (= var1191993 temp10812_200))
(assert (= temp10812_201 #x0000000000000001))
(assert (= var2700303 temp10812_201))
(assert (= temp10812_202 #x0000000000000001))
(assert (= var2962447 temp10812_202))
(assert (= temp10812_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10812_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10812_204 #x0000000000000001))
(assert (= var211058 temp10812_204))
(assert (= temp10812_205 #x0000000000000001))
(assert (= var211188 temp10812_205))
(assert (= var3879401 var211188))
(assert (= temp10812_206 #x0000000000000000))
(assert (= var3866802 temp10812_206))
(assert (= temp10812_207 #x0000000000000000))
(assert (= temp10812_208
   (ite (bvslt var3866802 temp10812_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10812_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10812_208)))
(assert (= var3879420 temp10812_209))
(assert (bvslt (ite (bvslt var3866802 temp10812_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10812_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10812_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10812_211 #x0000000000000000))
(assert (= var3879421 temp10812_211))
(assert (= temp10812_212 #x0000000000000001))
(assert (= var3867690 temp10812_212))
(assert (= temp10812_213 #x0000000000000000))
(assert (= temp10812_214
   (ite (bvslt var3867690 temp10812_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10812_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10812_214)))
(assert (= var3879423 temp10812_215))
(assert (bvslt (ite (bvslt var3867690 temp10812_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10812_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10812_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10812_217 #x0000000000000001))
(assert (= var3879424 temp10812_217))
(assert (= temp10812_218 #x0000000000000000))
(assert (= var4133117 temp10812_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10812_219 #x0000000000000002))
(assert (= var4339331 temp10812_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10812_220 #x0000000000000000))
(assert (= var4404892 temp10812_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= var5452176 var211201))
(assert (= var5714320 var211201))
(assert (= temp10812_221 #x0000000000000001))
(assert (= var211058 temp10812_221))
(assert (= temp10812_222 #x0000000000000000))
(assert (= var7353108 temp10812_222))
(assert (= var7353075 var7353108))
(assert (= var7221639 var7353075))
(assert (= var7221635 var7221639))
(assert (= var212669 var7221635))
(assert (= temp10812_223 #x0000000000000000))
(assert (= var212669 temp10812_223))
(model-add temp10812_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10812_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10812_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10812_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




