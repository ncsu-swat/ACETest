(declare-fun temp1266_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp1266_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1266_3 () (_ BitVec 64))
(declare-fun temp1266_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1266_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp1266_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1266_7 () (_ BitVec 64))
(declare-fun temp1266_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1266_9 () (_ BitVec 64))
(declare-fun temp1266_10 () (_ BitVec 64))
(declare-fun temp1266_11 () (_ BitVec 64))
(declare-fun temp1266_12 () (_ BitVec 64))
(declare-fun temp1266_13 () (_ BitVec 64))
(declare-fun temp1266_14 () (_ BitVec 64))
(declare-fun temp1266_15 () (_ BitVec 64))
(declare-fun temp1266_16 () (_ BitVec 64))
(declare-fun temp1266_17 () (_ BitVec 64))
(declare-fun temp1266_18 () (_ BitVec 64))
(declare-fun temp1266_19 () (_ BitVec 64))
(declare-fun temp1266_20 () (_ BitVec 64))
(declare-fun temp1266_21 () (_ BitVec 64))
(declare-fun temp1266_22 () (_ BitVec 64))
(declare-fun temp1266_23 () (_ BitVec 64))
(declare-fun temp1266_24 () (_ BitVec 64))
(declare-fun temp1266_25 () (_ BitVec 64))
(declare-fun temp1266_26 () (_ BitVec 64))
(declare-fun temp1266_27 () (_ BitVec 64))
(declare-fun temp1266_28 () (_ BitVec 64))
(declare-fun temp1266_29 () (_ BitVec 64))
(declare-fun temp1266_30 () (_ BitVec 64))
(declare-fun temp1266_31 () (_ BitVec 64))
(declare-fun temp1266_32 () (_ BitVec 64))
(declare-fun temp1266_33 () (_ BitVec 64))
(declare-fun temp1266_34 () (_ BitVec 64))
(declare-fun temp1266_35 () (_ BitVec 64))
(declare-fun temp1266_36 () (_ BitVec 64))
(declare-fun temp1266_37 () (_ BitVec 64))
(declare-fun temp1266_38 () (_ BitVec 64))
(declare-fun temp1266_39 () (_ BitVec 64))
(declare-fun temp1266_40 () (_ BitVec 64))
(declare-fun temp1266_41 () (_ BitVec 64))
(declare-fun temp1266_42 () (_ BitVec 64))
(declare-fun temp1266_43 () (_ BitVec 64))
(declare-fun temp1266_44 () (_ BitVec 64))
(declare-fun temp1266_45 () (_ BitVec 64))
(declare-fun temp1266_46 () (_ BitVec 64))
(declare-fun temp1266_47 () (_ BitVec 64))
(declare-fun temp1266_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp1266_49 () (_ BitVec 64))
(declare-fun temp1266_50 () (_ BitVec 64))
(declare-fun temp1266_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1266_52 () (_ BitVec 64))
(declare-fun temp1266_53 () (_ BitVec 64))
(declare-fun temp1266_54 () (_ BitVec 64))
(declare-fun temp1266_55 () (_ BitVec 64))
(declare-fun temp1266_56 () (_ BitVec 64))
(declare-fun temp1266_57 () (_ BitVec 64))
(declare-fun temp1266_58 () (_ BitVec 64))
(declare-fun temp1266_59 () (_ BitVec 64))
(declare-fun temp1266_60 () (_ BitVec 64))
(declare-fun temp1266_61 () (_ BitVec 64))
(declare-fun temp1266_62 () (_ BitVec 64))
(declare-fun temp1266_63 () (_ BitVec 64))
(declare-fun temp1266_64 () (_ BitVec 64))
(declare-fun temp1266_65 () (_ BitVec 64))
(declare-fun temp1266_66 () (_ BitVec 64))
(declare-fun temp1266_67 () (_ BitVec 64))
(declare-fun temp1266_68 () (_ BitVec 64))
(declare-fun temp1266_69 () (_ BitVec 64))
(declare-fun temp1266_70 () (_ BitVec 64))
(declare-fun temp1266_71 () (_ BitVec 64))
(declare-fun temp1266_72 () (_ BitVec 64))
(declare-fun temp1266_73 () (_ BitVec 64))
(declare-fun temp1266_74 () (_ BitVec 64))
(declare-fun temp1266_75 () (_ BitVec 64))
(declare-fun temp1266_76 () (_ BitVec 64))
(declare-fun temp1266_77 () (_ BitVec 64))
(declare-fun temp1266_78 () (_ BitVec 64))
(declare-fun temp1266_79 () (_ BitVec 64))
(declare-fun temp1266_80 () (_ BitVec 64))
(declare-fun temp1266_81 () (_ BitVec 64))
(declare-fun temp1266_82 () (_ BitVec 64))
(declare-fun temp1266_83 () (_ BitVec 64))
(declare-fun temp1266_84 () (_ BitVec 64))
(declare-fun temp1266_85 () (_ BitVec 64))
(declare-fun temp1266_86 () (_ BitVec 64))
(declare-fun temp1266_87 () (_ BitVec 64))
(declare-fun temp1266_88 () (_ BitVec 64))
(declare-fun temp1266_89 () (_ BitVec 64))
(declare-fun temp1266_90 () (_ BitVec 64))
(declare-fun temp1266_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp1266_92 () (_ BitVec 64))
(declare-fun temp1266_93 () (_ BitVec 64))
(declare-fun temp1266_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1266_95 () (_ BitVec 64))
(declare-fun temp1266_96 () (_ BitVec 64))
(declare-fun temp1266_97 () (_ BitVec 64))
(declare-fun temp1266_98 () (_ BitVec 64))
(declare-fun temp1266_99 () (_ BitVec 64))
(declare-fun temp1266_100 () (_ BitVec 64))
(declare-fun temp1266_101 () (_ BitVec 64))
(declare-fun temp1266_102 () (_ BitVec 64))
(declare-fun temp1266_103 () (_ BitVec 64))
(declare-fun temp1266_104 () (_ BitVec 64))
(declare-fun temp1266_105 () (_ BitVec 64))
(declare-fun temp1266_106 () (_ BitVec 64))
(declare-fun temp1266_107 () (_ BitVec 64))
(declare-fun temp1266_108 () (_ BitVec 64))
(declare-fun temp1266_109 () (_ BitVec 64))
(declare-fun temp1266_110 () (_ BitVec 64))
(declare-fun temp1266_111 () (_ BitVec 64))
(declare-fun temp1266_112 () (_ BitVec 64))
(declare-fun temp1266_113 () (_ BitVec 64))
(declare-fun temp1266_114 () (_ BitVec 64))
(declare-fun temp1266_115 () (_ BitVec 64))
(declare-fun temp1266_116 () (_ BitVec 64))
(declare-fun temp1266_117 () (_ BitVec 64))
(declare-fun temp1266_118 () (_ BitVec 64))
(declare-fun temp1266_119 () (_ BitVec 64))
(declare-fun temp1266_120 () (_ BitVec 64))
(declare-fun temp1266_121 () (_ BitVec 64))
(declare-fun temp1266_122 () (_ BitVec 64))
(declare-fun temp1266_123 () (_ BitVec 64))
(declare-fun temp1266_124 () (_ BitVec 64))
(declare-fun temp1266_125 () (_ BitVec 64))
(declare-fun temp1266_126 () (_ BitVec 64))
(declare-fun temp1266_127 () (_ BitVec 64))
(declare-fun temp1266_128 () (_ BitVec 64))
(declare-fun temp1266_129 () (_ BitVec 64))
(declare-fun temp1266_130 () (_ BitVec 64))
(declare-fun temp1266_131 () (_ BitVec 64))
(declare-fun temp1266_132 () (_ BitVec 64))
(declare-fun temp1266_133 () (_ BitVec 64))
(declare-fun temp1266_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp1266_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp1266_136 () (_ BitVec 64))
(declare-fun temp1266_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp1266_138 () (_ BitVec 64))
(declare-fun temp1266_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1266_140 () (_ BitVec 64))
(declare-fun temp1266_141 () (_ BitVec 64))
(declare-fun temp1266_142 () (_ BitVec 64))
(declare-fun temp1266_143 () (_ BitVec 64))
(declare-fun temp1266_144 () (_ BitVec 64))
(declare-fun temp1266_145 () (_ BitVec 64))
(declare-fun temp1266_146 () (_ BitVec 64))
(declare-fun temp1266_147 () (_ BitVec 64))
(declare-fun temp1266_148 () (_ BitVec 64))
(declare-fun temp1266_149 () (_ BitVec 64))
(declare-fun temp1266_150 () (_ BitVec 64))
(declare-fun temp1266_151 () (_ BitVec 64))
(declare-fun temp1266_152 () (_ BitVec 64))
(declare-fun temp1266_153 () (_ BitVec 64))
(declare-fun temp1266_154 () (_ BitVec 64))
(declare-fun temp1266_155 () (_ BitVec 64))
(declare-fun temp1266_157 () (_ BitVec 64))
(declare-fun temp1266_158 () (_ BitVec 64))
(declare-fun temp1266_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp1266_159 () (_ BitVec 64))
(declare-fun temp1266_160 () (_ BitVec 64))
(declare-fun temp1266_162 () (_ BitVec 64))
(declare-fun temp1266_163 () (_ BitVec 64))
(declare-fun temp1266_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp1266_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp1266_165 () (_ BitVec 64))
(declare-fun temp1266_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp1266_167 () (_ BitVec 64))
(declare-fun temp1266_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp1266_169 () (_ BitVec 64))
(declare-fun temp1266_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1266_171 () (_ BitVec 64))
(declare-fun temp1266_172 () (_ BitVec 64))
(declare-fun temp1266_173 () (_ BitVec 64))
(declare-fun temp1266_174 () (_ BitVec 64))
(declare-fun temp1266_175 () (_ BitVec 64))
(declare-fun temp1266_176 () (_ BitVec 64))
(declare-fun temp1266_177 () (_ BitVec 64))
(declare-fun temp1266_178 () (_ BitVec 64))
(declare-fun temp1266_179 () (_ BitVec 64))
(declare-fun temp1266_180 () (_ BitVec 64))
(declare-fun temp1266_181 () (_ BitVec 64))
(declare-fun temp1266_182 () (_ BitVec 64))
(declare-fun temp1266_183 () (_ BitVec 64))
(declare-fun temp1266_184 () (_ BitVec 64))
(declare-fun temp1266_185 () (_ BitVec 64))
(declare-fun temp1266_186 () (_ BitVec 64))
(declare-fun temp1266_187 () (_ BitVec 64))
(declare-fun temp1266_188 () (_ BitVec 64))
(declare-fun temp1266_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp1266_190 () (_ BitVec 64))
(declare-fun temp1266_192 () (_ BitVec 64))
(declare-fun temp1266_193 () (_ BitVec 64))
(declare-fun temp1266_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp1266_194 () (_ BitVec 64))
(declare-fun temp1266_195 () (_ BitVec 64))
(declare-fun temp1266_197 () (_ BitVec 64))
(declare-fun temp1266_198 () (_ BitVec 64))
(declare-fun temp1266_196 () (_ BitVec 64))
(declare-fun temp1266_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp1266_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp1266_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp1266_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp1266_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp1266_204 () (_ BitVec 64))
(declare-fun temp1266_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp1266_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp1266_207 () (_ BitVec 64))
(declare-fun temp1266_208 () (_ BitVec 64))
(declare-fun temp1266_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp1266_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp1266_211 () (_ BitVec 64))
(declare-fun temp1266_212 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp1266_213 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp1266_214 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp1266_216 () (_ BitVec 64))
(declare-fun temp1266_215 () (_ BitVec 64))
(declare-fun temp1266_217 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp1266_218 () (_ BitVec 64))
(declare-fun temp1266_219 () (_ BitVec 64))
(declare-fun temp1266_220 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp1266_221 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp1266_222 () (_ BitVec 64))
(declare-fun temp1266_224 () (_ BitVec 64))
(declare-fun temp1266_223 () (_ BitVec 64))
(declare-fun temp1266_225 () (_ BitVec 64))
(assert (= temp1266_1 #x0000000000000001))
(assert (= var77203 temp1266_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp1266_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp1266_2)))
(assert (= temp1266_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1266_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1266_4 #x0000000000000000))
(assert (= var210941 temp1266_4))
(assert (= temp1266_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp1266_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1266_6 #x0000000000000000))
(assert (= var210986 temp1266_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp1266_7 #x0000000000000000))
(assert (= temp1266_8 temp1266_7))
(assert (= temp1266_9 (select ARGNAME_padding_NAMEEND_VAL temp1266_8)))
(assert (= temp1266_10 #x0000000000000001))
(assert (= temp1266_11 temp1266_10))
(assert (= temp1266_12 (select ARGNAME_padding_NAMEEND_VAL temp1266_11)))
(assert (= temp1266_13 #x0000000000000002))
(assert (= temp1266_14 temp1266_13))
(assert (= temp1266_15 (select ARGNAME_padding_NAMEEND_VAL temp1266_14)))
(assert (= temp1266_16 #x0000000000000003))
(assert (= temp1266_17 temp1266_16))
(assert (= temp1266_18 (select ARGNAME_padding_NAMEEND_VAL temp1266_17)))
(assert (= temp1266_19 #x0000000000000004))
(assert (= temp1266_20 temp1266_19))
(assert (= temp1266_21 (select ARGNAME_padding_NAMEEND_VAL temp1266_20)))
(assert (= temp1266_22 #x0000000000000005))
(assert (= temp1266_23 temp1266_22))
(assert (= temp1266_24 (select ARGNAME_padding_NAMEEND_VAL temp1266_23)))
(assert (= temp1266_25 #x0000000000000000))
(assert (= temp1266_26 #x0000000000000000))
(assert (= temp1266_27 temp1266_26))
(assert (= temp1266_28 (select ARGNAME_padding_NAMEEND_VAL temp1266_27)))
(assert (= temp1266_29 #x0000000000000000))
(assert (= temp1266_30 #x0000000000000001))
(assert (= temp1266_31 temp1266_30))
(assert (= temp1266_32 (select ARGNAME_padding_NAMEEND_VAL temp1266_31)))
(assert (= temp1266_33 #x0000000000000000))
(assert (= temp1266_34 #x0000000000000002))
(assert (= temp1266_35 temp1266_34))
(assert (= temp1266_36 (select ARGNAME_padding_NAMEEND_VAL temp1266_35)))
(assert (= temp1266_37 #x0000000000000000))
(assert (= temp1266_38 #x0000000000000003))
(assert (= temp1266_39 temp1266_38))
(assert (= temp1266_40 (select ARGNAME_padding_NAMEEND_VAL temp1266_39)))
(assert (= temp1266_41 #x0000000000000000))
(assert (= temp1266_42 #x0000000000000004))
(assert (= temp1266_43 temp1266_42))
(assert (= temp1266_44 (select ARGNAME_padding_NAMEEND_VAL temp1266_43)))
(assert (= temp1266_45 #x0000000000000000))
(assert (= temp1266_46 #x0000000000000005))
(assert (= temp1266_47 temp1266_46))
(assert (= temp1266_48 (select ARGNAME_padding_NAMEEND_VAL temp1266_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp1266_28 temp1266_25)
             (bvslt temp1266_32 temp1266_29)
             (bvslt temp1266_36 temp1266_33)
             (bvslt temp1266_40 temp1266_37)
             (bvslt temp1266_44 temp1266_41)
             (bvslt temp1266_48 temp1266_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1266_49 #x0000000000000000))
(assert (= var1191714 temp1266_49))
(assert (= temp1266_50 #x0000000000000000))
(assert (= temp1266_51 temp1266_50))
(assert (= temp1266_52 (select ARGNAME_output_padding_NAMEEND_VAL temp1266_51)))
(assert (= temp1266_53 #x0000000000000001))
(assert (= temp1266_54 temp1266_53))
(assert (= temp1266_55 (select ARGNAME_output_padding_NAMEEND_VAL temp1266_54)))
(assert (= temp1266_56 #x0000000000000002))
(assert (= temp1266_57 temp1266_56))
(assert (= temp1266_58 (select ARGNAME_output_padding_NAMEEND_VAL temp1266_57)))
(assert (= temp1266_59 #x0000000000000003))
(assert (= temp1266_60 temp1266_59))
(assert (= temp1266_61 (select ARGNAME_output_padding_NAMEEND_VAL temp1266_60)))
(assert (= temp1266_62 #x0000000000000004))
(assert (= temp1266_63 temp1266_62))
(assert (= temp1266_64 (select ARGNAME_output_padding_NAMEEND_VAL temp1266_63)))
(assert (= temp1266_65 #x0000000000000005))
(assert (= temp1266_66 temp1266_65))
(assert (= temp1266_67 (select ARGNAME_output_padding_NAMEEND_VAL temp1266_66)))
(assert (= temp1266_68 #x0000000000000000))
(assert (= temp1266_69 #x0000000000000000))
(assert (= temp1266_70 temp1266_69))
(assert (= temp1266_71 (select ARGNAME_output_padding_NAMEEND_VAL temp1266_70)))
(assert (= temp1266_72 #x0000000000000000))
(assert (= temp1266_73 #x0000000000000001))
(assert (= temp1266_74 temp1266_73))
(assert (= temp1266_75 (select ARGNAME_output_padding_NAMEEND_VAL temp1266_74)))
(assert (= temp1266_76 #x0000000000000000))
(assert (= temp1266_77 #x0000000000000002))
(assert (= temp1266_78 temp1266_77))
(assert (= temp1266_79 (select ARGNAME_output_padding_NAMEEND_VAL temp1266_78)))
(assert (= temp1266_80 #x0000000000000000))
(assert (= temp1266_81 #x0000000000000003))
(assert (= temp1266_82 temp1266_81))
(assert (= temp1266_83 (select ARGNAME_output_padding_NAMEEND_VAL temp1266_82)))
(assert (= temp1266_84 #x0000000000000000))
(assert (= temp1266_85 #x0000000000000004))
(assert (= temp1266_86 temp1266_85))
(assert (= temp1266_87 (select ARGNAME_output_padding_NAMEEND_VAL temp1266_86)))
(assert (= temp1266_88 #x0000000000000000))
(assert (= temp1266_89 #x0000000000000005))
(assert (= temp1266_90 temp1266_89))
(assert (= temp1266_91 (select ARGNAME_output_padding_NAMEEND_VAL temp1266_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp1266_71 temp1266_68)
             (bvslt temp1266_75 temp1266_72)
             (bvslt temp1266_79 temp1266_76)
             (bvslt temp1266_83 temp1266_80)
             (bvslt temp1266_87 temp1266_84)
             (bvslt temp1266_91 temp1266_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1266_92 #x0000000000000000))
(assert (= var1191725 temp1266_92))
(assert (= temp1266_93 #x0000000000000000))
(assert (= temp1266_94 temp1266_93))
(assert (= temp1266_95 (select ARGNAME_stride_NAMEEND_VAL temp1266_94)))
(assert (= temp1266_96 #x0000000000000001))
(assert (= temp1266_97 temp1266_96))
(assert (= temp1266_98 (select ARGNAME_stride_NAMEEND_VAL temp1266_97)))
(assert (= temp1266_99 #x0000000000000002))
(assert (= temp1266_100 temp1266_99))
(assert (= temp1266_101 (select ARGNAME_stride_NAMEEND_VAL temp1266_100)))
(assert (= temp1266_102 #x0000000000000003))
(assert (= temp1266_103 temp1266_102))
(assert (= temp1266_104 (select ARGNAME_stride_NAMEEND_VAL temp1266_103)))
(assert (= temp1266_105 #x0000000000000004))
(assert (= temp1266_106 temp1266_105))
(assert (= temp1266_107 (select ARGNAME_stride_NAMEEND_VAL temp1266_106)))
(assert (= temp1266_108 #x0000000000000005))
(assert (= temp1266_109 temp1266_108))
(assert (= temp1266_110 (select ARGNAME_stride_NAMEEND_VAL temp1266_109)))
(assert (= temp1266_111 #x0000000000000000))
(assert (= temp1266_112 #x0000000000000000))
(assert (= temp1266_113 temp1266_112))
(assert (= temp1266_114 (select ARGNAME_stride_NAMEEND_VAL temp1266_113)))
(assert (= temp1266_115 #x0000000000000000))
(assert (= temp1266_116 #x0000000000000001))
(assert (= temp1266_117 temp1266_116))
(assert (= temp1266_118 (select ARGNAME_stride_NAMEEND_VAL temp1266_117)))
(assert (= temp1266_119 #x0000000000000000))
(assert (= temp1266_120 #x0000000000000002))
(assert (= temp1266_121 temp1266_120))
(assert (= temp1266_122 (select ARGNAME_stride_NAMEEND_VAL temp1266_121)))
(assert (= temp1266_123 #x0000000000000000))
(assert (= temp1266_124 #x0000000000000003))
(assert (= temp1266_125 temp1266_124))
(assert (= temp1266_126 (select ARGNAME_stride_NAMEEND_VAL temp1266_125)))
(assert (= temp1266_127 #x0000000000000000))
(assert (= temp1266_128 #x0000000000000004))
(assert (= temp1266_129 temp1266_128))
(assert (= temp1266_130 (select ARGNAME_stride_NAMEEND_VAL temp1266_129)))
(assert (= temp1266_131 #x0000000000000000))
(assert (= temp1266_132 #x0000000000000005))
(assert (= temp1266_133 temp1266_132))
(assert (= temp1266_134 (select ARGNAME_stride_NAMEEND_VAL temp1266_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp1266_114 temp1266_111)
             (bvsle temp1266_118 temp1266_115)
             (bvsle temp1266_122 temp1266_119)
             (bvsle temp1266_126 temp1266_123)
             (bvsle temp1266_130 temp1266_127)
             (bvsle temp1266_134 temp1266_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1266_135 #x0000000000000000))
(assert (= var1191735 temp1266_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1266_136 #x0000000000000001))
(assert (= var1191747 temp1266_136))
(assert (= temp1266_137 #x0000000000000000))
(assert (= var1179826 temp1266_137))
(assert (= temp1266_138 #x0000000000000000))
(assert (= temp1266_139 temp1266_138))
(assert (= temp1266_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1266_139)))
(assert (= temp1266_141 #x0000000000000001))
(assert (= temp1266_142 temp1266_141))
(assert (= temp1266_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1266_142)))
(assert (= temp1266_144 #x0000000000000002))
(assert (= temp1266_145 temp1266_144))
(assert (= temp1266_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1266_145)))
(assert (= temp1266_147 #x0000000000000003))
(assert (= temp1266_148 temp1266_147))
(assert (= temp1266_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1266_148)))
(assert (= temp1266_150 #x0000000000000004))
(assert (= temp1266_151 temp1266_150))
(assert (= temp1266_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1266_151)))
(assert (= temp1266_153 #x0000000000000005))
(assert (= temp1266_154 temp1266_153))
(assert (= temp1266_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1266_154)))
(assert (= temp1266_157 var1179826))
(assert (= temp1266_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1266_157)))
(assert (= temp1266_156 temp1266_158))
(assert (= var1191780
   (ite (bvslt temp1266_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1266_159 #x0000000000000000))
(assert (= var1191780 temp1266_159))
(assert (= temp1266_160 #x0000000000000000))
(assert (= var1179826 temp1266_160))
(assert (= temp1266_162 var1179826))
(assert (= temp1266_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1266_162)))
(assert (= temp1266_161 temp1266_163))
(assert (= var1191802 (bvsmod temp1266_161 ARGNAME_groups_NAMEEND)))
(assert (= temp1266_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp1266_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp1266_165 #x0000000000000001))
(assert (= var1191803 temp1266_165))
(assert (= temp1266_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp1266_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1266_167 #x0000000000000001))
(assert (= var1191823 temp1266_167))
(assert (= temp1266_168 #x0000000000000001))
(assert (= var1180714 temp1266_168))
(assert (= temp1266_169 #x0000000000000000))
(assert (= temp1266_170 temp1266_169))
(assert (= temp1266_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp1266_170)))
(assert (= temp1266_172 #x0000000000000001))
(assert (= temp1266_173 temp1266_172))
(assert (= temp1266_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp1266_173)))
(assert (= temp1266_175 #x0000000000000002))
(assert (= temp1266_176 temp1266_175))
(assert (= temp1266_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp1266_176)))
(assert (= temp1266_178 #x0000000000000003))
(assert (= temp1266_179 temp1266_178))
(assert (= temp1266_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp1266_179)))
(assert (= temp1266_181 #x0000000000000004))
(assert (= temp1266_182 temp1266_181))
(assert (= temp1266_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp1266_182)))
(assert (= temp1266_184 #x0000000000000005))
(assert (= temp1266_185 temp1266_184))
(assert (= temp1266_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp1266_185)))
(assert (= temp1266_187 #x0000000000000000))
(assert (= temp1266_188
   (ite (bvslt var1180714 temp1266_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp1266_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp1266_188)))
(assert (= var1191831 temp1266_189))
(assert (bvslt (ite (bvslt var1180714 temp1266_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1266_190 #x0000000000000001))
(assert (= var1180714 temp1266_190))
(assert (= temp1266_192 var1180714))
(assert (= temp1266_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1266_192)))
(assert (= temp1266_191 temp1266_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp1266_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp1266_194 #x0000000000000001))
(assert (= var1191836 temp1266_194))
(assert (= temp1266_195 #x0000000000000000))
(assert (= var1179826 temp1266_195))
(assert (= temp1266_197 var1179826))
(assert (= temp1266_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1266_197)))
(assert (= temp1266_196 temp1266_198))
(assert (= temp1266_199 #x0000000000000002))
(assert (= var1586025 temp1266_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp1266_200 #x0000000000000001))
(assert (= var1191993 temp1266_200))
(assert (= temp1266_201 #x0000000000000001))
(assert (= var2700303 temp1266_201))
(assert (= temp1266_202 #x0000000000000001))
(assert (= var2962447 temp1266_202))
(assert (= temp1266_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1266_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1266_204 #x0000000000000001))
(assert (= var211058 temp1266_204))
(assert (= temp1266_205 #x0000000000000001))
(assert (= var211188 temp1266_205))
(assert (= var3879401 var211188))
(assert (= temp1266_206 #x0000000000000000))
(assert (= var3866802 temp1266_206))
(assert (= temp1266_207 #x0000000000000000))
(assert (= temp1266_208
   (ite (bvslt var3866802 temp1266_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp1266_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp1266_208)))
(assert (= var3879420 temp1266_209))
(assert (bvslt (ite (bvslt var3866802 temp1266_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1266_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp1266_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp1266_211 #x0000000000000001))
(assert (= var3879421 temp1266_211))
(assert (= temp1266_212 #x0000000000000000))
(assert (= var4133117 temp1266_212))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp1266_213 #x0000000000000002))
(assert (= var4339331 temp1266_213))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1266_214 #x0000000000000000))
(assert (= var4404892 temp1266_214))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp1266_216 #xffffffffffffffff))
(assert (= temp1266_215 temp1266_216))
(assert (= temp1266_217 #x0000000000000001))
(assert (= var197674 temp1266_217))
(assert (= temp1266_218 #x0000000000000000))
(assert (= temp1266_219
   (ite (bvslt var197674 temp1266_218)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp1266_220 (select ARGNAME_input_NAMEEND_DIMSIZE temp1266_219)))
(assert (= var211595 temp1266_220))
(assert (bvslt (ite (bvslt var197674 temp1266_218)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1266_221 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp1266_221) #x0000000000000001 #x0000000000000000)))
(assert (= temp1266_222 #x0000000000000001))
(assert (= var211596 temp1266_222))
(assert (= temp1266_224 #xffffffffffffffff))
(assert (= temp1266_223 temp1266_224))
(assert (= temp1266_225 #x0000000000000001))
(assert (= var211058 temp1266_225))
(model-add temp1266_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp1266_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1266_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp1266_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




