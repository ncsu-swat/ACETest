(declare-fun temp1074_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp1074_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp1074_3 () (_ BitVec 64))
(declare-fun temp1074_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp1074_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp1074_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp1074_7 () (_ BitVec 64))
(declare-fun temp1074_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1074_9 () (_ BitVec 64))
(declare-fun temp1074_10 () (_ BitVec 64))
(declare-fun temp1074_11 () (_ BitVec 64))
(declare-fun temp1074_12 () (_ BitVec 64))
(declare-fun temp1074_13 () (_ BitVec 64))
(declare-fun temp1074_14 () (_ BitVec 64))
(declare-fun temp1074_15 () (_ BitVec 64))
(declare-fun temp1074_16 () (_ BitVec 64))
(declare-fun temp1074_17 () (_ BitVec 64))
(declare-fun temp1074_18 () (_ BitVec 64))
(declare-fun temp1074_19 () (_ BitVec 64))
(declare-fun temp1074_20 () (_ BitVec 64))
(declare-fun temp1074_21 () (_ BitVec 64))
(declare-fun temp1074_22 () (_ BitVec 64))
(declare-fun temp1074_23 () (_ BitVec 64))
(declare-fun temp1074_24 () (_ BitVec 64))
(declare-fun temp1074_25 () (_ BitVec 64))
(declare-fun temp1074_26 () (_ BitVec 64))
(declare-fun temp1074_27 () (_ BitVec 64))
(declare-fun temp1074_28 () (_ BitVec 64))
(declare-fun temp1074_29 () (_ BitVec 64))
(declare-fun temp1074_30 () (_ BitVec 64))
(declare-fun temp1074_31 () (_ BitVec 64))
(declare-fun temp1074_32 () (_ BitVec 64))
(declare-fun temp1074_33 () (_ BitVec 64))
(declare-fun temp1074_34 () (_ BitVec 64))
(declare-fun temp1074_35 () (_ BitVec 64))
(declare-fun temp1074_36 () (_ BitVec 64))
(declare-fun temp1074_37 () (_ BitVec 64))
(declare-fun temp1074_38 () (_ BitVec 64))
(declare-fun temp1074_39 () (_ BitVec 64))
(declare-fun temp1074_40 () (_ BitVec 64))
(declare-fun temp1074_41 () (_ BitVec 64))
(declare-fun temp1074_42 () (_ BitVec 64))
(declare-fun temp1074_43 () (_ BitVec 64))
(declare-fun temp1074_44 () (_ BitVec 64))
(declare-fun temp1074_45 () (_ BitVec 64))
(declare-fun temp1074_46 () (_ BitVec 64))
(declare-fun temp1074_47 () (_ BitVec 64))
(declare-fun temp1074_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp1074_49 () (_ BitVec 64))
(declare-fun temp1074_50 () (_ BitVec 64))
(declare-fun temp1074_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1074_52 () (_ BitVec 64))
(declare-fun temp1074_53 () (_ BitVec 64))
(declare-fun temp1074_54 () (_ BitVec 64))
(declare-fun temp1074_55 () (_ BitVec 64))
(declare-fun temp1074_56 () (_ BitVec 64))
(declare-fun temp1074_57 () (_ BitVec 64))
(declare-fun temp1074_58 () (_ BitVec 64))
(declare-fun temp1074_59 () (_ BitVec 64))
(declare-fun temp1074_60 () (_ BitVec 64))
(declare-fun temp1074_61 () (_ BitVec 64))
(declare-fun temp1074_62 () (_ BitVec 64))
(declare-fun temp1074_63 () (_ BitVec 64))
(declare-fun temp1074_64 () (_ BitVec 64))
(declare-fun temp1074_65 () (_ BitVec 64))
(declare-fun temp1074_66 () (_ BitVec 64))
(declare-fun temp1074_67 () (_ BitVec 64))
(declare-fun temp1074_68 () (_ BitVec 64))
(declare-fun temp1074_69 () (_ BitVec 64))
(declare-fun temp1074_70 () (_ BitVec 64))
(declare-fun temp1074_71 () (_ BitVec 64))
(declare-fun temp1074_72 () (_ BitVec 64))
(declare-fun temp1074_73 () (_ BitVec 64))
(declare-fun temp1074_74 () (_ BitVec 64))
(declare-fun temp1074_75 () (_ BitVec 64))
(declare-fun temp1074_76 () (_ BitVec 64))
(declare-fun temp1074_77 () (_ BitVec 64))
(declare-fun temp1074_78 () (_ BitVec 64))
(declare-fun temp1074_79 () (_ BitVec 64))
(declare-fun temp1074_80 () (_ BitVec 64))
(declare-fun temp1074_81 () (_ BitVec 64))
(declare-fun temp1074_82 () (_ BitVec 64))
(declare-fun temp1074_83 () (_ BitVec 64))
(declare-fun temp1074_84 () (_ BitVec 64))
(declare-fun temp1074_85 () (_ BitVec 64))
(declare-fun temp1074_86 () (_ BitVec 64))
(declare-fun temp1074_87 () (_ BitVec 64))
(declare-fun temp1074_88 () (_ BitVec 64))
(declare-fun temp1074_89 () (_ BitVec 64))
(declare-fun temp1074_90 () (_ BitVec 64))
(declare-fun temp1074_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp1074_92 () (_ BitVec 64))
(declare-fun temp1074_93 () (_ BitVec 64))
(declare-fun temp1074_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1074_95 () (_ BitVec 64))
(declare-fun temp1074_96 () (_ BitVec 64))
(declare-fun temp1074_97 () (_ BitVec 64))
(declare-fun temp1074_98 () (_ BitVec 64))
(declare-fun temp1074_99 () (_ BitVec 64))
(declare-fun temp1074_100 () (_ BitVec 64))
(declare-fun temp1074_101 () (_ BitVec 64))
(declare-fun temp1074_102 () (_ BitVec 64))
(declare-fun temp1074_103 () (_ BitVec 64))
(declare-fun temp1074_104 () (_ BitVec 64))
(declare-fun temp1074_105 () (_ BitVec 64))
(declare-fun temp1074_106 () (_ BitVec 64))
(declare-fun temp1074_107 () (_ BitVec 64))
(declare-fun temp1074_108 () (_ BitVec 64))
(declare-fun temp1074_109 () (_ BitVec 64))
(declare-fun temp1074_110 () (_ BitVec 64))
(declare-fun temp1074_111 () (_ BitVec 64))
(declare-fun temp1074_112 () (_ BitVec 64))
(declare-fun temp1074_113 () (_ BitVec 64))
(declare-fun temp1074_114 () (_ BitVec 64))
(declare-fun temp1074_115 () (_ BitVec 64))
(declare-fun temp1074_116 () (_ BitVec 64))
(declare-fun temp1074_117 () (_ BitVec 64))
(declare-fun temp1074_118 () (_ BitVec 64))
(declare-fun temp1074_119 () (_ BitVec 64))
(declare-fun temp1074_120 () (_ BitVec 64))
(declare-fun temp1074_121 () (_ BitVec 64))
(declare-fun temp1074_122 () (_ BitVec 64))
(declare-fun temp1074_123 () (_ BitVec 64))
(declare-fun temp1074_124 () (_ BitVec 64))
(declare-fun temp1074_125 () (_ BitVec 64))
(declare-fun temp1074_126 () (_ BitVec 64))
(declare-fun temp1074_127 () (_ BitVec 64))
(declare-fun temp1074_128 () (_ BitVec 64))
(declare-fun temp1074_129 () (_ BitVec 64))
(declare-fun temp1074_130 () (_ BitVec 64))
(declare-fun temp1074_131 () (_ BitVec 64))
(declare-fun temp1074_132 () (_ BitVec 64))
(declare-fun temp1074_133 () (_ BitVec 64))
(declare-fun temp1074_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp1074_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp1074_136 () (_ BitVec 64))
(declare-fun temp1074_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp1074_138 () (_ BitVec 64))
(declare-fun temp1074_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1074_140 () (_ BitVec 64))
(declare-fun temp1074_141 () (_ BitVec 64))
(declare-fun temp1074_142 () (_ BitVec 64))
(declare-fun temp1074_143 () (_ BitVec 64))
(declare-fun temp1074_144 () (_ BitVec 64))
(declare-fun temp1074_145 () (_ BitVec 64))
(declare-fun temp1074_146 () (_ BitVec 64))
(declare-fun temp1074_147 () (_ BitVec 64))
(declare-fun temp1074_148 () (_ BitVec 64))
(declare-fun temp1074_149 () (_ BitVec 64))
(declare-fun temp1074_150 () (_ BitVec 64))
(declare-fun temp1074_151 () (_ BitVec 64))
(declare-fun temp1074_152 () (_ BitVec 64))
(declare-fun temp1074_153 () (_ BitVec 64))
(declare-fun temp1074_154 () (_ BitVec 64))
(declare-fun temp1074_155 () (_ BitVec 64))
(declare-fun temp1074_157 () (_ BitVec 64))
(declare-fun temp1074_158 () (_ BitVec 64))
(declare-fun temp1074_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp1074_159 () (_ BitVec 64))
(declare-fun temp1074_160 () (_ BitVec 64))
(declare-fun temp1074_162 () (_ BitVec 64))
(declare-fun temp1074_163 () (_ BitVec 64))
(declare-fun temp1074_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp1074_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp1074_165 () (_ BitVec 64))
(declare-fun temp1074_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp1074_167 () (_ BitVec 64))
(declare-fun temp1074_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp1074_169 () (_ BitVec 64))
(declare-fun temp1074_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp1074_171 () (_ BitVec 64))
(declare-fun temp1074_172 () (_ BitVec 64))
(declare-fun temp1074_173 () (_ BitVec 64))
(declare-fun temp1074_174 () (_ BitVec 64))
(declare-fun temp1074_175 () (_ BitVec 64))
(declare-fun temp1074_176 () (_ BitVec 64))
(declare-fun temp1074_177 () (_ BitVec 64))
(declare-fun temp1074_178 () (_ BitVec 64))
(declare-fun temp1074_179 () (_ BitVec 64))
(declare-fun temp1074_180 () (_ BitVec 64))
(declare-fun temp1074_181 () (_ BitVec 64))
(declare-fun temp1074_182 () (_ BitVec 64))
(declare-fun temp1074_183 () (_ BitVec 64))
(declare-fun temp1074_184 () (_ BitVec 64))
(declare-fun temp1074_185 () (_ BitVec 64))
(declare-fun temp1074_186 () (_ BitVec 64))
(declare-fun temp1074_187 () (_ BitVec 64))
(declare-fun temp1074_188 () (_ BitVec 64))
(declare-fun temp1074_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp1074_190 () (_ BitVec 64))
(declare-fun temp1074_192 () (_ BitVec 64))
(declare-fun temp1074_193 () (_ BitVec 64))
(declare-fun temp1074_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp1074_194 () (_ BitVec 64))
(declare-fun temp1074_195 () (_ BitVec 64))
(declare-fun temp1074_197 () (_ BitVec 64))
(declare-fun temp1074_198 () (_ BitVec 64))
(declare-fun temp1074_196 () (_ BitVec 64))
(declare-fun temp1074_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp1074_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp1074_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp1074_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp1074_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp1074_204 () (_ BitVec 64))
(declare-fun temp1074_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp1074_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp1074_207 () (_ BitVec 64))
(declare-fun temp1074_208 () (_ BitVec 64))
(declare-fun temp1074_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp1074_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp1074_211 () (_ BitVec 64))
(declare-fun temp1074_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp1074_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp1074_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4469136 () (_ BitVec 64))
(declare-fun var4731280 () (_ BitVec 64))
(declare-fun temp1074_215 () (_ BitVec 64))
(declare-fun var212414 () (_ BitVec 64))
(declare-fun temp1074_216 () (_ BitVec 64))
(declare-fun temp1074_217 () (_ BitVec 64))
(declare-fun var5060227 () (_ BitVec 64))
(declare-fun var5060229 () (_ BitVec 64))
(declare-fun var5125772 () (_ BitVec 64))
(declare-fun var5125773 () (_ BitVec 64))
(declare-fun temp1074_218 () (_ BitVec 64))
(assert (= temp1074_1 #x0000000000000001))
(assert (= var77203 temp1074_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp1074_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp1074_2)))
(assert (= temp1074_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp1074_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1074_4 #x0000000000000000))
(assert (= var210941 temp1074_4))
(assert (= temp1074_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp1074_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1074_6 #x0000000000000000))
(assert (= var210986 temp1074_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp1074_7 #x0000000000000000))
(assert (= temp1074_8 temp1074_7))
(assert (= temp1074_9 (select ARGNAME_padding_NAMEEND_VAL temp1074_8)))
(assert (= temp1074_10 #x0000000000000001))
(assert (= temp1074_11 temp1074_10))
(assert (= temp1074_12 (select ARGNAME_padding_NAMEEND_VAL temp1074_11)))
(assert (= temp1074_13 #x0000000000000002))
(assert (= temp1074_14 temp1074_13))
(assert (= temp1074_15 (select ARGNAME_padding_NAMEEND_VAL temp1074_14)))
(assert (= temp1074_16 #x0000000000000003))
(assert (= temp1074_17 temp1074_16))
(assert (= temp1074_18 (select ARGNAME_padding_NAMEEND_VAL temp1074_17)))
(assert (= temp1074_19 #x0000000000000004))
(assert (= temp1074_20 temp1074_19))
(assert (= temp1074_21 (select ARGNAME_padding_NAMEEND_VAL temp1074_20)))
(assert (= temp1074_22 #x0000000000000005))
(assert (= temp1074_23 temp1074_22))
(assert (= temp1074_24 (select ARGNAME_padding_NAMEEND_VAL temp1074_23)))
(assert (= temp1074_25 #x0000000000000000))
(assert (= temp1074_26 #x0000000000000000))
(assert (= temp1074_27 temp1074_26))
(assert (= temp1074_28 (select ARGNAME_padding_NAMEEND_VAL temp1074_27)))
(assert (= temp1074_29 #x0000000000000000))
(assert (= temp1074_30 #x0000000000000001))
(assert (= temp1074_31 temp1074_30))
(assert (= temp1074_32 (select ARGNAME_padding_NAMEEND_VAL temp1074_31)))
(assert (= temp1074_33 #x0000000000000000))
(assert (= temp1074_34 #x0000000000000002))
(assert (= temp1074_35 temp1074_34))
(assert (= temp1074_36 (select ARGNAME_padding_NAMEEND_VAL temp1074_35)))
(assert (= temp1074_37 #x0000000000000000))
(assert (= temp1074_38 #x0000000000000003))
(assert (= temp1074_39 temp1074_38))
(assert (= temp1074_40 (select ARGNAME_padding_NAMEEND_VAL temp1074_39)))
(assert (= temp1074_41 #x0000000000000000))
(assert (= temp1074_42 #x0000000000000004))
(assert (= temp1074_43 temp1074_42))
(assert (= temp1074_44 (select ARGNAME_padding_NAMEEND_VAL temp1074_43)))
(assert (= temp1074_45 #x0000000000000000))
(assert (= temp1074_46 #x0000000000000005))
(assert (= temp1074_47 temp1074_46))
(assert (= temp1074_48 (select ARGNAME_padding_NAMEEND_VAL temp1074_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp1074_28 temp1074_25)
             (bvslt temp1074_32 temp1074_29)
             (bvslt temp1074_36 temp1074_33)
             (bvslt temp1074_40 temp1074_37)
             (bvslt temp1074_44 temp1074_41)
             (bvslt temp1074_48 temp1074_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1074_49 #x0000000000000000))
(assert (= var1191714 temp1074_49))
(assert (= temp1074_50 #x0000000000000000))
(assert (= temp1074_51 temp1074_50))
(assert (= temp1074_52 (select ARGNAME_output_padding_NAMEEND_VAL temp1074_51)))
(assert (= temp1074_53 #x0000000000000001))
(assert (= temp1074_54 temp1074_53))
(assert (= temp1074_55 (select ARGNAME_output_padding_NAMEEND_VAL temp1074_54)))
(assert (= temp1074_56 #x0000000000000002))
(assert (= temp1074_57 temp1074_56))
(assert (= temp1074_58 (select ARGNAME_output_padding_NAMEEND_VAL temp1074_57)))
(assert (= temp1074_59 #x0000000000000003))
(assert (= temp1074_60 temp1074_59))
(assert (= temp1074_61 (select ARGNAME_output_padding_NAMEEND_VAL temp1074_60)))
(assert (= temp1074_62 #x0000000000000004))
(assert (= temp1074_63 temp1074_62))
(assert (= temp1074_64 (select ARGNAME_output_padding_NAMEEND_VAL temp1074_63)))
(assert (= temp1074_65 #x0000000000000005))
(assert (= temp1074_66 temp1074_65))
(assert (= temp1074_67 (select ARGNAME_output_padding_NAMEEND_VAL temp1074_66)))
(assert (= temp1074_68 #x0000000000000000))
(assert (= temp1074_69 #x0000000000000000))
(assert (= temp1074_70 temp1074_69))
(assert (= temp1074_71 (select ARGNAME_output_padding_NAMEEND_VAL temp1074_70)))
(assert (= temp1074_72 #x0000000000000000))
(assert (= temp1074_73 #x0000000000000001))
(assert (= temp1074_74 temp1074_73))
(assert (= temp1074_75 (select ARGNAME_output_padding_NAMEEND_VAL temp1074_74)))
(assert (= temp1074_76 #x0000000000000000))
(assert (= temp1074_77 #x0000000000000002))
(assert (= temp1074_78 temp1074_77))
(assert (= temp1074_79 (select ARGNAME_output_padding_NAMEEND_VAL temp1074_78)))
(assert (= temp1074_80 #x0000000000000000))
(assert (= temp1074_81 #x0000000000000003))
(assert (= temp1074_82 temp1074_81))
(assert (= temp1074_83 (select ARGNAME_output_padding_NAMEEND_VAL temp1074_82)))
(assert (= temp1074_84 #x0000000000000000))
(assert (= temp1074_85 #x0000000000000004))
(assert (= temp1074_86 temp1074_85))
(assert (= temp1074_87 (select ARGNAME_output_padding_NAMEEND_VAL temp1074_86)))
(assert (= temp1074_88 #x0000000000000000))
(assert (= temp1074_89 #x0000000000000005))
(assert (= temp1074_90 temp1074_89))
(assert (= temp1074_91 (select ARGNAME_output_padding_NAMEEND_VAL temp1074_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp1074_71 temp1074_68)
             (bvslt temp1074_75 temp1074_72)
             (bvslt temp1074_79 temp1074_76)
             (bvslt temp1074_83 temp1074_80)
             (bvslt temp1074_87 temp1074_84)
             (bvslt temp1074_91 temp1074_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1074_92 #x0000000000000000))
(assert (= var1191725 temp1074_92))
(assert (= temp1074_93 #x0000000000000000))
(assert (= temp1074_94 temp1074_93))
(assert (= temp1074_95 (select ARGNAME_stride_NAMEEND_VAL temp1074_94)))
(assert (= temp1074_96 #x0000000000000001))
(assert (= temp1074_97 temp1074_96))
(assert (= temp1074_98 (select ARGNAME_stride_NAMEEND_VAL temp1074_97)))
(assert (= temp1074_99 #x0000000000000002))
(assert (= temp1074_100 temp1074_99))
(assert (= temp1074_101 (select ARGNAME_stride_NAMEEND_VAL temp1074_100)))
(assert (= temp1074_102 #x0000000000000003))
(assert (= temp1074_103 temp1074_102))
(assert (= temp1074_104 (select ARGNAME_stride_NAMEEND_VAL temp1074_103)))
(assert (= temp1074_105 #x0000000000000004))
(assert (= temp1074_106 temp1074_105))
(assert (= temp1074_107 (select ARGNAME_stride_NAMEEND_VAL temp1074_106)))
(assert (= temp1074_108 #x0000000000000005))
(assert (= temp1074_109 temp1074_108))
(assert (= temp1074_110 (select ARGNAME_stride_NAMEEND_VAL temp1074_109)))
(assert (= temp1074_111 #x0000000000000000))
(assert (= temp1074_112 #x0000000000000000))
(assert (= temp1074_113 temp1074_112))
(assert (= temp1074_114 (select ARGNAME_stride_NAMEEND_VAL temp1074_113)))
(assert (= temp1074_115 #x0000000000000000))
(assert (= temp1074_116 #x0000000000000001))
(assert (= temp1074_117 temp1074_116))
(assert (= temp1074_118 (select ARGNAME_stride_NAMEEND_VAL temp1074_117)))
(assert (= temp1074_119 #x0000000000000000))
(assert (= temp1074_120 #x0000000000000002))
(assert (= temp1074_121 temp1074_120))
(assert (= temp1074_122 (select ARGNAME_stride_NAMEEND_VAL temp1074_121)))
(assert (= temp1074_123 #x0000000000000000))
(assert (= temp1074_124 #x0000000000000003))
(assert (= temp1074_125 temp1074_124))
(assert (= temp1074_126 (select ARGNAME_stride_NAMEEND_VAL temp1074_125)))
(assert (= temp1074_127 #x0000000000000000))
(assert (= temp1074_128 #x0000000000000004))
(assert (= temp1074_129 temp1074_128))
(assert (= temp1074_130 (select ARGNAME_stride_NAMEEND_VAL temp1074_129)))
(assert (= temp1074_131 #x0000000000000000))
(assert (= temp1074_132 #x0000000000000005))
(assert (= temp1074_133 temp1074_132))
(assert (= temp1074_134 (select ARGNAME_stride_NAMEEND_VAL temp1074_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp1074_114 temp1074_111)
             (bvsle temp1074_118 temp1074_115)
             (bvsle temp1074_122 temp1074_119)
             (bvsle temp1074_126 temp1074_123)
             (bvsle temp1074_130 temp1074_127)
             (bvsle temp1074_134 temp1074_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1074_135 #x0000000000000000))
(assert (= var1191735 temp1074_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1074_136 #x0000000000000001))
(assert (= var1191747 temp1074_136))
(assert (= temp1074_137 #x0000000000000000))
(assert (= var1179826 temp1074_137))
(assert (= temp1074_138 #x0000000000000000))
(assert (= temp1074_139 temp1074_138))
(assert (= temp1074_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1074_139)))
(assert (= temp1074_141 #x0000000000000001))
(assert (= temp1074_142 temp1074_141))
(assert (= temp1074_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1074_142)))
(assert (= temp1074_144 #x0000000000000002))
(assert (= temp1074_145 temp1074_144))
(assert (= temp1074_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1074_145)))
(assert (= temp1074_147 #x0000000000000003))
(assert (= temp1074_148 temp1074_147))
(assert (= temp1074_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1074_148)))
(assert (= temp1074_150 #x0000000000000004))
(assert (= temp1074_151 temp1074_150))
(assert (= temp1074_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1074_151)))
(assert (= temp1074_153 #x0000000000000005))
(assert (= temp1074_154 temp1074_153))
(assert (= temp1074_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1074_154)))
(assert (= temp1074_157 var1179826))
(assert (= temp1074_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1074_157)))
(assert (= temp1074_156 temp1074_158))
(assert (= var1191780
   (ite (bvslt temp1074_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1074_159 #x0000000000000000))
(assert (= var1191780 temp1074_159))
(assert (= temp1074_160 #x0000000000000000))
(assert (= var1179826 temp1074_160))
(assert (= temp1074_162 var1179826))
(assert (= temp1074_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1074_162)))
(assert (= temp1074_161 temp1074_163))
(assert (= var1191802 (bvsmod temp1074_161 ARGNAME_groups_NAMEEND)))
(assert (= temp1074_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp1074_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp1074_165 #x0000000000000001))
(assert (= var1191803 temp1074_165))
(assert (= temp1074_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp1074_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1074_167 #x0000000000000001))
(assert (= var1191823 temp1074_167))
(assert (= temp1074_168 #x0000000000000001))
(assert (= var1180714 temp1074_168))
(assert (= temp1074_169 #x0000000000000000))
(assert (= temp1074_170 temp1074_169))
(assert (= temp1074_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp1074_170)))
(assert (= temp1074_172 #x0000000000000001))
(assert (= temp1074_173 temp1074_172))
(assert (= temp1074_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp1074_173)))
(assert (= temp1074_175 #x0000000000000002))
(assert (= temp1074_176 temp1074_175))
(assert (= temp1074_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp1074_176)))
(assert (= temp1074_178 #x0000000000000003))
(assert (= temp1074_179 temp1074_178))
(assert (= temp1074_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp1074_179)))
(assert (= temp1074_181 #x0000000000000004))
(assert (= temp1074_182 temp1074_181))
(assert (= temp1074_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp1074_182)))
(assert (= temp1074_184 #x0000000000000005))
(assert (= temp1074_185 temp1074_184))
(assert (= temp1074_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp1074_185)))
(assert (= temp1074_187 #x0000000000000000))
(assert (= temp1074_188
   (ite (bvslt var1180714 temp1074_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp1074_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp1074_188)))
(assert (= var1191831 temp1074_189))
(assert (bvslt (ite (bvslt var1180714 temp1074_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1074_190 #x0000000000000001))
(assert (= var1180714 temp1074_190))
(assert (= temp1074_192 var1180714))
(assert (= temp1074_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1074_192)))
(assert (= temp1074_191 temp1074_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp1074_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp1074_194 #x0000000000000001))
(assert (= var1191836 temp1074_194))
(assert (= temp1074_195 #x0000000000000000))
(assert (= var1179826 temp1074_195))
(assert (= temp1074_197 var1179826))
(assert (= temp1074_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp1074_197)))
(assert (= temp1074_196 temp1074_198))
(assert (= temp1074_199 #x0000000000000002))
(assert (= var1586025 temp1074_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp1074_200 #x0000000000000001))
(assert (= var1191993 temp1074_200))
(assert (= temp1074_201 #x0000000000000001))
(assert (= var2700303 temp1074_201))
(assert (= temp1074_202 #x0000000000000001))
(assert (= var2962447 temp1074_202))
(assert (= temp1074_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp1074_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1074_204 #x0000000000000001))
(assert (= var211058 temp1074_204))
(assert (= temp1074_205 #x0000000000000001))
(assert (= var211188 temp1074_205))
(assert (= var3879401 var211188))
(assert (= temp1074_206 #x0000000000000000))
(assert (= var3866802 temp1074_206))
(assert (= temp1074_207 #x0000000000000000))
(assert (= temp1074_208
   (ite (bvslt var3866802 temp1074_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp1074_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp1074_208)))
(assert (= var3879420 temp1074_209))
(assert (bvslt (ite (bvslt var3866802 temp1074_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp1074_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp1074_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp1074_211 #x0000000000000001))
(assert (= var3879421 temp1074_211))
(assert (= temp1074_212 #x0000000000000000))
(assert (= var4079423 temp1074_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp1074_213 #x0000000000000002))
(assert (= var4208259 temp1074_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1074_214 #x0000000000000000))
(assert (= var4273820 temp1074_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4469136 var211201))
(assert (= var4731280 var211201))
(assert (= temp1074_215 #x0000000000000001))
(assert (= var212414
   (ite (= ARGNAME_groups_NAMEEND temp1074_215)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp1074_216 #x0000000000000001))
(assert (= var212414 temp1074_216))
(assert (= temp1074_217 #x0000000000000002))
(assert (= var5060227 temp1074_217))
(assert (= var5060229 (bvsub ARGNAME_weight_NAMEEND_DIM var5060227)))
(assert (= var5125772 var5060227))
(assert (= var5125773 var5060229))
(assert (= temp1074_218 #x0000000000000001))
(assert (= var211058 temp1074_218))
(model-add temp1074_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp1074_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp1074_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp1074_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





