(declare-fun temp601_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp601_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp601_3 () (_ BitVec 64))
(declare-fun temp601_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp601_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp601_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp601_7 () (_ BitVec 64))
(declare-fun temp601_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp601_9 () (_ BitVec 64))
(declare-fun temp601_10 () (_ BitVec 64))
(declare-fun temp601_11 () (_ BitVec 64))
(declare-fun temp601_12 () (_ BitVec 64))
(declare-fun temp601_13 () (_ BitVec 64))
(declare-fun temp601_14 () (_ BitVec 64))
(declare-fun temp601_15 () (_ BitVec 64))
(declare-fun temp601_16 () (_ BitVec 64))
(declare-fun temp601_17 () (_ BitVec 64))
(declare-fun temp601_18 () (_ BitVec 64))
(declare-fun temp601_19 () (_ BitVec 64))
(declare-fun temp601_20 () (_ BitVec 64))
(declare-fun temp601_21 () (_ BitVec 64))
(declare-fun temp601_22 () (_ BitVec 64))
(declare-fun temp601_23 () (_ BitVec 64))
(declare-fun temp601_24 () (_ BitVec 64))
(declare-fun temp601_25 () (_ BitVec 64))
(declare-fun temp601_26 () (_ BitVec 64))
(declare-fun temp601_27 () (_ BitVec 64))
(declare-fun temp601_28 () (_ BitVec 64))
(declare-fun temp601_29 () (_ BitVec 64))
(declare-fun temp601_30 () (_ BitVec 64))
(declare-fun temp601_31 () (_ BitVec 64))
(declare-fun temp601_32 () (_ BitVec 64))
(declare-fun temp601_33 () (_ BitVec 64))
(declare-fun temp601_34 () (_ BitVec 64))
(declare-fun temp601_35 () (_ BitVec 64))
(declare-fun temp601_36 () (_ BitVec 64))
(declare-fun temp601_37 () (_ BitVec 64))
(declare-fun temp601_38 () (_ BitVec 64))
(declare-fun temp601_39 () (_ BitVec 64))
(declare-fun temp601_40 () (_ BitVec 64))
(declare-fun temp601_41 () (_ BitVec 64))
(declare-fun temp601_42 () (_ BitVec 64))
(declare-fun temp601_43 () (_ BitVec 64))
(declare-fun temp601_44 () (_ BitVec 64))
(declare-fun temp601_45 () (_ BitVec 64))
(declare-fun temp601_46 () (_ BitVec 64))
(declare-fun temp601_47 () (_ BitVec 64))
(declare-fun temp601_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp601_49 () (_ BitVec 64))
(declare-fun temp601_50 () (_ BitVec 64))
(declare-fun temp601_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp601_52 () (_ BitVec 64))
(declare-fun temp601_53 () (_ BitVec 64))
(declare-fun temp601_54 () (_ BitVec 64))
(declare-fun temp601_55 () (_ BitVec 64))
(declare-fun temp601_56 () (_ BitVec 64))
(declare-fun temp601_57 () (_ BitVec 64))
(declare-fun temp601_58 () (_ BitVec 64))
(declare-fun temp601_59 () (_ BitVec 64))
(declare-fun temp601_60 () (_ BitVec 64))
(declare-fun temp601_61 () (_ BitVec 64))
(declare-fun temp601_62 () (_ BitVec 64))
(declare-fun temp601_63 () (_ BitVec 64))
(declare-fun temp601_64 () (_ BitVec 64))
(declare-fun temp601_65 () (_ BitVec 64))
(declare-fun temp601_66 () (_ BitVec 64))
(declare-fun temp601_67 () (_ BitVec 64))
(declare-fun temp601_68 () (_ BitVec 64))
(declare-fun temp601_69 () (_ BitVec 64))
(declare-fun temp601_70 () (_ BitVec 64))
(declare-fun temp601_71 () (_ BitVec 64))
(declare-fun temp601_72 () (_ BitVec 64))
(declare-fun temp601_73 () (_ BitVec 64))
(declare-fun temp601_74 () (_ BitVec 64))
(declare-fun temp601_75 () (_ BitVec 64))
(declare-fun temp601_76 () (_ BitVec 64))
(declare-fun temp601_77 () (_ BitVec 64))
(declare-fun temp601_78 () (_ BitVec 64))
(declare-fun temp601_79 () (_ BitVec 64))
(declare-fun temp601_80 () (_ BitVec 64))
(declare-fun temp601_81 () (_ BitVec 64))
(declare-fun temp601_82 () (_ BitVec 64))
(declare-fun temp601_83 () (_ BitVec 64))
(declare-fun temp601_84 () (_ BitVec 64))
(declare-fun temp601_85 () (_ BitVec 64))
(declare-fun temp601_86 () (_ BitVec 64))
(declare-fun temp601_87 () (_ BitVec 64))
(declare-fun temp601_88 () (_ BitVec 64))
(declare-fun temp601_89 () (_ BitVec 64))
(declare-fun temp601_90 () (_ BitVec 64))
(declare-fun temp601_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp601_92 () (_ BitVec 64))
(declare-fun temp601_93 () (_ BitVec 64))
(declare-fun temp601_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp601_95 () (_ BitVec 64))
(declare-fun temp601_96 () (_ BitVec 64))
(declare-fun temp601_97 () (_ BitVec 64))
(declare-fun temp601_98 () (_ BitVec 64))
(declare-fun temp601_99 () (_ BitVec 64))
(declare-fun temp601_100 () (_ BitVec 64))
(declare-fun temp601_101 () (_ BitVec 64))
(declare-fun temp601_102 () (_ BitVec 64))
(declare-fun temp601_103 () (_ BitVec 64))
(declare-fun temp601_104 () (_ BitVec 64))
(declare-fun temp601_105 () (_ BitVec 64))
(declare-fun temp601_106 () (_ BitVec 64))
(declare-fun temp601_107 () (_ BitVec 64))
(declare-fun temp601_108 () (_ BitVec 64))
(declare-fun temp601_109 () (_ BitVec 64))
(declare-fun temp601_110 () (_ BitVec 64))
(declare-fun temp601_111 () (_ BitVec 64))
(declare-fun temp601_112 () (_ BitVec 64))
(declare-fun temp601_113 () (_ BitVec 64))
(declare-fun temp601_114 () (_ BitVec 64))
(declare-fun temp601_115 () (_ BitVec 64))
(declare-fun temp601_116 () (_ BitVec 64))
(declare-fun temp601_117 () (_ BitVec 64))
(declare-fun temp601_118 () (_ BitVec 64))
(declare-fun temp601_119 () (_ BitVec 64))
(declare-fun temp601_120 () (_ BitVec 64))
(declare-fun temp601_121 () (_ BitVec 64))
(declare-fun temp601_122 () (_ BitVec 64))
(declare-fun temp601_123 () (_ BitVec 64))
(declare-fun temp601_124 () (_ BitVec 64))
(declare-fun temp601_125 () (_ BitVec 64))
(declare-fun temp601_126 () (_ BitVec 64))
(declare-fun temp601_127 () (_ BitVec 64))
(declare-fun temp601_128 () (_ BitVec 64))
(declare-fun temp601_129 () (_ BitVec 64))
(declare-fun temp601_130 () (_ BitVec 64))
(declare-fun temp601_131 () (_ BitVec 64))
(declare-fun temp601_132 () (_ BitVec 64))
(declare-fun temp601_133 () (_ BitVec 64))
(declare-fun temp601_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp601_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp601_136 () (_ BitVec 64))
(declare-fun temp601_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp601_138 () (_ BitVec 64))
(declare-fun temp601_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp601_140 () (_ BitVec 64))
(declare-fun temp601_141 () (_ BitVec 64))
(declare-fun temp601_142 () (_ BitVec 64))
(declare-fun temp601_143 () (_ BitVec 64))
(declare-fun temp601_144 () (_ BitVec 64))
(declare-fun temp601_145 () (_ BitVec 64))
(declare-fun temp601_146 () (_ BitVec 64))
(declare-fun temp601_147 () (_ BitVec 64))
(declare-fun temp601_148 () (_ BitVec 64))
(declare-fun temp601_149 () (_ BitVec 64))
(declare-fun temp601_150 () (_ BitVec 64))
(declare-fun temp601_151 () (_ BitVec 64))
(declare-fun temp601_152 () (_ BitVec 64))
(declare-fun temp601_153 () (_ BitVec 64))
(declare-fun temp601_154 () (_ BitVec 64))
(declare-fun temp601_155 () (_ BitVec 64))
(declare-fun temp601_157 () (_ BitVec 64))
(declare-fun temp601_158 () (_ BitVec 64))
(declare-fun temp601_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp601_159 () (_ BitVec 64))
(declare-fun temp601_160 () (_ BitVec 64))
(declare-fun temp601_162 () (_ BitVec 64))
(declare-fun temp601_163 () (_ BitVec 64))
(declare-fun temp601_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp601_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp601_165 () (_ BitVec 64))
(declare-fun temp601_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp601_167 () (_ BitVec 64))
(declare-fun temp601_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp601_169 () (_ BitVec 64))
(declare-fun temp601_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp601_171 () (_ BitVec 64))
(declare-fun temp601_172 () (_ BitVec 64))
(declare-fun temp601_173 () (_ BitVec 64))
(declare-fun temp601_174 () (_ BitVec 64))
(declare-fun temp601_175 () (_ BitVec 64))
(declare-fun temp601_176 () (_ BitVec 64))
(declare-fun temp601_177 () (_ BitVec 64))
(declare-fun temp601_178 () (_ BitVec 64))
(declare-fun temp601_179 () (_ BitVec 64))
(declare-fun temp601_180 () (_ BitVec 64))
(declare-fun temp601_181 () (_ BitVec 64))
(declare-fun temp601_182 () (_ BitVec 64))
(declare-fun temp601_183 () (_ BitVec 64))
(declare-fun temp601_184 () (_ BitVec 64))
(declare-fun temp601_185 () (_ BitVec 64))
(declare-fun temp601_186 () (_ BitVec 64))
(declare-fun temp601_187 () (_ BitVec 64))
(declare-fun temp601_188 () (_ BitVec 64))
(declare-fun temp601_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp601_190 () (_ BitVec 64))
(declare-fun temp601_192 () (_ BitVec 64))
(declare-fun temp601_193 () (_ BitVec 64))
(declare-fun temp601_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp601_194 () (_ BitVec 64))
(declare-fun temp601_195 () (_ BitVec 64))
(declare-fun temp601_197 () (_ BitVec 64))
(declare-fun temp601_198 () (_ BitVec 64))
(declare-fun temp601_196 () (_ BitVec 64))
(declare-fun temp601_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp601_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp601_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp601_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp601_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp601_204 () (_ BitVec 64))
(declare-fun temp601_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp601_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp601_207 () (_ BitVec 64))
(declare-fun temp601_208 () (_ BitVec 64))
(declare-fun temp601_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp601_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp601_211 () (_ BitVec 64))
(declare-fun temp601_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp601_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp601_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp601_215 () (_ BitVec 64))
(declare-fun var4469136 () (_ BitVec 64))
(declare-fun temp601_216 () (_ BitVec 64))
(assert (= temp601_1 #x0000000000000001))
(assert (= var77203 temp601_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp601_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp601_2)))
(assert (= temp601_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp601_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp601_4 #x0000000000000000))
(assert (= var210941 temp601_4))
(assert (= temp601_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp601_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp601_6 #x0000000000000000))
(assert (= var210986 temp601_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp601_7 #x0000000000000000))
(assert (= temp601_8 temp601_7))
(assert (= temp601_9 (select ARGNAME_padding_NAMEEND_VAL temp601_8)))
(assert (= temp601_10 #x0000000000000001))
(assert (= temp601_11 temp601_10))
(assert (= temp601_12 (select ARGNAME_padding_NAMEEND_VAL temp601_11)))
(assert (= temp601_13 #x0000000000000002))
(assert (= temp601_14 temp601_13))
(assert (= temp601_15 (select ARGNAME_padding_NAMEEND_VAL temp601_14)))
(assert (= temp601_16 #x0000000000000003))
(assert (= temp601_17 temp601_16))
(assert (= temp601_18 (select ARGNAME_padding_NAMEEND_VAL temp601_17)))
(assert (= temp601_19 #x0000000000000004))
(assert (= temp601_20 temp601_19))
(assert (= temp601_21 (select ARGNAME_padding_NAMEEND_VAL temp601_20)))
(assert (= temp601_22 #x0000000000000005))
(assert (= temp601_23 temp601_22))
(assert (= temp601_24 (select ARGNAME_padding_NAMEEND_VAL temp601_23)))
(assert (= temp601_25 #x0000000000000000))
(assert (= temp601_26 #x0000000000000000))
(assert (= temp601_27 temp601_26))
(assert (= temp601_28 (select ARGNAME_padding_NAMEEND_VAL temp601_27)))
(assert (= temp601_29 #x0000000000000000))
(assert (= temp601_30 #x0000000000000001))
(assert (= temp601_31 temp601_30))
(assert (= temp601_32 (select ARGNAME_padding_NAMEEND_VAL temp601_31)))
(assert (= temp601_33 #x0000000000000000))
(assert (= temp601_34 #x0000000000000002))
(assert (= temp601_35 temp601_34))
(assert (= temp601_36 (select ARGNAME_padding_NAMEEND_VAL temp601_35)))
(assert (= temp601_37 #x0000000000000000))
(assert (= temp601_38 #x0000000000000003))
(assert (= temp601_39 temp601_38))
(assert (= temp601_40 (select ARGNAME_padding_NAMEEND_VAL temp601_39)))
(assert (= temp601_41 #x0000000000000000))
(assert (= temp601_42 #x0000000000000004))
(assert (= temp601_43 temp601_42))
(assert (= temp601_44 (select ARGNAME_padding_NAMEEND_VAL temp601_43)))
(assert (= temp601_45 #x0000000000000000))
(assert (= temp601_46 #x0000000000000005))
(assert (= temp601_47 temp601_46))
(assert (= temp601_48 (select ARGNAME_padding_NAMEEND_VAL temp601_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp601_28 temp601_25)
             (bvslt temp601_32 temp601_29)
             (bvslt temp601_36 temp601_33)
             (bvslt temp601_40 temp601_37)
             (bvslt temp601_44 temp601_41)
             (bvslt temp601_48 temp601_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp601_49 #x0000000000000000))
(assert (= var1191714 temp601_49))
(assert (= temp601_50 #x0000000000000000))
(assert (= temp601_51 temp601_50))
(assert (= temp601_52 (select ARGNAME_output_padding_NAMEEND_VAL temp601_51)))
(assert (= temp601_53 #x0000000000000001))
(assert (= temp601_54 temp601_53))
(assert (= temp601_55 (select ARGNAME_output_padding_NAMEEND_VAL temp601_54)))
(assert (= temp601_56 #x0000000000000002))
(assert (= temp601_57 temp601_56))
(assert (= temp601_58 (select ARGNAME_output_padding_NAMEEND_VAL temp601_57)))
(assert (= temp601_59 #x0000000000000003))
(assert (= temp601_60 temp601_59))
(assert (= temp601_61 (select ARGNAME_output_padding_NAMEEND_VAL temp601_60)))
(assert (= temp601_62 #x0000000000000004))
(assert (= temp601_63 temp601_62))
(assert (= temp601_64 (select ARGNAME_output_padding_NAMEEND_VAL temp601_63)))
(assert (= temp601_65 #x0000000000000005))
(assert (= temp601_66 temp601_65))
(assert (= temp601_67 (select ARGNAME_output_padding_NAMEEND_VAL temp601_66)))
(assert (= temp601_68 #x0000000000000000))
(assert (= temp601_69 #x0000000000000000))
(assert (= temp601_70 temp601_69))
(assert (= temp601_71 (select ARGNAME_output_padding_NAMEEND_VAL temp601_70)))
(assert (= temp601_72 #x0000000000000000))
(assert (= temp601_73 #x0000000000000001))
(assert (= temp601_74 temp601_73))
(assert (= temp601_75 (select ARGNAME_output_padding_NAMEEND_VAL temp601_74)))
(assert (= temp601_76 #x0000000000000000))
(assert (= temp601_77 #x0000000000000002))
(assert (= temp601_78 temp601_77))
(assert (= temp601_79 (select ARGNAME_output_padding_NAMEEND_VAL temp601_78)))
(assert (= temp601_80 #x0000000000000000))
(assert (= temp601_81 #x0000000000000003))
(assert (= temp601_82 temp601_81))
(assert (= temp601_83 (select ARGNAME_output_padding_NAMEEND_VAL temp601_82)))
(assert (= temp601_84 #x0000000000000000))
(assert (= temp601_85 #x0000000000000004))
(assert (= temp601_86 temp601_85))
(assert (= temp601_87 (select ARGNAME_output_padding_NAMEEND_VAL temp601_86)))
(assert (= temp601_88 #x0000000000000000))
(assert (= temp601_89 #x0000000000000005))
(assert (= temp601_90 temp601_89))
(assert (= temp601_91 (select ARGNAME_output_padding_NAMEEND_VAL temp601_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp601_71 temp601_68)
             (bvslt temp601_75 temp601_72)
             (bvslt temp601_79 temp601_76)
             (bvslt temp601_83 temp601_80)
             (bvslt temp601_87 temp601_84)
             (bvslt temp601_91 temp601_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp601_92 #x0000000000000000))
(assert (= var1191725 temp601_92))
(assert (= temp601_93 #x0000000000000000))
(assert (= temp601_94 temp601_93))
(assert (= temp601_95 (select ARGNAME_stride_NAMEEND_VAL temp601_94)))
(assert (= temp601_96 #x0000000000000001))
(assert (= temp601_97 temp601_96))
(assert (= temp601_98 (select ARGNAME_stride_NAMEEND_VAL temp601_97)))
(assert (= temp601_99 #x0000000000000002))
(assert (= temp601_100 temp601_99))
(assert (= temp601_101 (select ARGNAME_stride_NAMEEND_VAL temp601_100)))
(assert (= temp601_102 #x0000000000000003))
(assert (= temp601_103 temp601_102))
(assert (= temp601_104 (select ARGNAME_stride_NAMEEND_VAL temp601_103)))
(assert (= temp601_105 #x0000000000000004))
(assert (= temp601_106 temp601_105))
(assert (= temp601_107 (select ARGNAME_stride_NAMEEND_VAL temp601_106)))
(assert (= temp601_108 #x0000000000000005))
(assert (= temp601_109 temp601_108))
(assert (= temp601_110 (select ARGNAME_stride_NAMEEND_VAL temp601_109)))
(assert (= temp601_111 #x0000000000000000))
(assert (= temp601_112 #x0000000000000000))
(assert (= temp601_113 temp601_112))
(assert (= temp601_114 (select ARGNAME_stride_NAMEEND_VAL temp601_113)))
(assert (= temp601_115 #x0000000000000000))
(assert (= temp601_116 #x0000000000000001))
(assert (= temp601_117 temp601_116))
(assert (= temp601_118 (select ARGNAME_stride_NAMEEND_VAL temp601_117)))
(assert (= temp601_119 #x0000000000000000))
(assert (= temp601_120 #x0000000000000002))
(assert (= temp601_121 temp601_120))
(assert (= temp601_122 (select ARGNAME_stride_NAMEEND_VAL temp601_121)))
(assert (= temp601_123 #x0000000000000000))
(assert (= temp601_124 #x0000000000000003))
(assert (= temp601_125 temp601_124))
(assert (= temp601_126 (select ARGNAME_stride_NAMEEND_VAL temp601_125)))
(assert (= temp601_127 #x0000000000000000))
(assert (= temp601_128 #x0000000000000004))
(assert (= temp601_129 temp601_128))
(assert (= temp601_130 (select ARGNAME_stride_NAMEEND_VAL temp601_129)))
(assert (= temp601_131 #x0000000000000000))
(assert (= temp601_132 #x0000000000000005))
(assert (= temp601_133 temp601_132))
(assert (= temp601_134 (select ARGNAME_stride_NAMEEND_VAL temp601_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp601_114 temp601_111)
             (bvsle temp601_118 temp601_115)
             (bvsle temp601_122 temp601_119)
             (bvsle temp601_126 temp601_123)
             (bvsle temp601_130 temp601_127)
             (bvsle temp601_134 temp601_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp601_135 #x0000000000000000))
(assert (= var1191735 temp601_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp601_136 #x0000000000000001))
(assert (= var1191747 temp601_136))
(assert (= temp601_137 #x0000000000000000))
(assert (= var1179826 temp601_137))
(assert (= temp601_138 #x0000000000000000))
(assert (= temp601_139 temp601_138))
(assert (= temp601_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp601_139)))
(assert (= temp601_141 #x0000000000000001))
(assert (= temp601_142 temp601_141))
(assert (= temp601_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp601_142)))
(assert (= temp601_144 #x0000000000000002))
(assert (= temp601_145 temp601_144))
(assert (= temp601_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp601_145)))
(assert (= temp601_147 #x0000000000000003))
(assert (= temp601_148 temp601_147))
(assert (= temp601_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp601_148)))
(assert (= temp601_150 #x0000000000000004))
(assert (= temp601_151 temp601_150))
(assert (= temp601_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp601_151)))
(assert (= temp601_153 #x0000000000000005))
(assert (= temp601_154 temp601_153))
(assert (= temp601_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp601_154)))
(assert (= temp601_157 var1179826))
(assert (= temp601_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp601_157)))
(assert (= temp601_156 temp601_158))
(assert (= var1191780
   (ite (bvslt temp601_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp601_159 #x0000000000000000))
(assert (= var1191780 temp601_159))
(assert (= temp601_160 #x0000000000000000))
(assert (= var1179826 temp601_160))
(assert (= temp601_162 var1179826))
(assert (= temp601_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp601_162)))
(assert (= temp601_161 temp601_163))
(assert (= var1191802 (bvsmod temp601_161 ARGNAME_groups_NAMEEND)))
(assert (= temp601_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp601_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp601_165 #x0000000000000001))
(assert (= var1191803 temp601_165))
(assert (= temp601_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp601_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp601_167 #x0000000000000001))
(assert (= var1191823 temp601_167))
(assert (= temp601_168 #x0000000000000001))
(assert (= var1180714 temp601_168))
(assert (= temp601_169 #x0000000000000000))
(assert (= temp601_170 temp601_169))
(assert (= temp601_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp601_170)))
(assert (= temp601_172 #x0000000000000001))
(assert (= temp601_173 temp601_172))
(assert (= temp601_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp601_173)))
(assert (= temp601_175 #x0000000000000002))
(assert (= temp601_176 temp601_175))
(assert (= temp601_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp601_176)))
(assert (= temp601_178 #x0000000000000003))
(assert (= temp601_179 temp601_178))
(assert (= temp601_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp601_179)))
(assert (= temp601_181 #x0000000000000004))
(assert (= temp601_182 temp601_181))
(assert (= temp601_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp601_182)))
(assert (= temp601_184 #x0000000000000005))
(assert (= temp601_185 temp601_184))
(assert (= temp601_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp601_185)))
(assert (= temp601_187 #x0000000000000000))
(assert (= temp601_188
   (ite (bvslt var1180714 temp601_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp601_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp601_188)))
(assert (= var1191831 temp601_189))
(assert (bvslt (ite (bvslt var1180714 temp601_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp601_190 #x0000000000000001))
(assert (= var1180714 temp601_190))
(assert (= temp601_192 var1180714))
(assert (= temp601_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp601_192)))
(assert (= temp601_191 temp601_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp601_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp601_194 #x0000000000000001))
(assert (= var1191836 temp601_194))
(assert (= temp601_195 #x0000000000000000))
(assert (= var1179826 temp601_195))
(assert (= temp601_197 var1179826))
(assert (= temp601_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp601_197)))
(assert (= temp601_196 temp601_198))
(assert (= temp601_199 #x0000000000000002))
(assert (= var1586025 temp601_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp601_200 #x0000000000000001))
(assert (= var1191993 temp601_200))
(assert (= temp601_201 #x0000000000000001))
(assert (= var2700303 temp601_201))
(assert (= temp601_202 #x0000000000000001))
(assert (= var2962447 temp601_202))
(assert (= temp601_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp601_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp601_204 #x0000000000000001))
(assert (= var211058 temp601_204))
(assert (= temp601_205 #x0000000000000001))
(assert (= var211188 temp601_205))
(assert (= var3879401 var211188))
(assert (= temp601_206 #x0000000000000000))
(assert (= var3866802 temp601_206))
(assert (= temp601_207 #x0000000000000000))
(assert (= temp601_208
   (ite (bvslt var3866802 temp601_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp601_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp601_208)))
(assert (= var3879420 temp601_209))
(assert (bvslt (ite (bvslt var3866802 temp601_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp601_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp601_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp601_211 #x0000000000000001))
(assert (= var3879421 temp601_211))
(assert (= temp601_212 #x0000000000000000))
(assert (= var4079423 temp601_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp601_213 #x0000000000000002))
(assert (= var4208259 temp601_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp601_214 #x0000000000000000))
(assert (= var4273820 temp601_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp601_215 #x0000000000000000))
(assert (= var4469136 temp601_215))
(assert (= temp601_216 #x0000000000000001))
(assert (= var211058 temp601_216))
(model-add temp601_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp601_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp601_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp601_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))



