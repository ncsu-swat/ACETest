(declare-fun temp10289_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10289_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10289_3 () (_ BitVec 64))
(declare-fun temp10289_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10289_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10289_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10289_7 () (_ BitVec 64))
(declare-fun temp10289_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10289_9 () (_ BitVec 64))
(declare-fun temp10289_10 () (_ BitVec 64))
(declare-fun temp10289_11 () (_ BitVec 64))
(declare-fun temp10289_12 () (_ BitVec 64))
(declare-fun temp10289_13 () (_ BitVec 64))
(declare-fun temp10289_14 () (_ BitVec 64))
(declare-fun temp10289_15 () (_ BitVec 64))
(declare-fun temp10289_16 () (_ BitVec 64))
(declare-fun temp10289_17 () (_ BitVec 64))
(declare-fun temp10289_18 () (_ BitVec 64))
(declare-fun temp10289_19 () (_ BitVec 64))
(declare-fun temp10289_20 () (_ BitVec 64))
(declare-fun temp10289_21 () (_ BitVec 64))
(declare-fun temp10289_22 () (_ BitVec 64))
(declare-fun temp10289_23 () (_ BitVec 64))
(declare-fun temp10289_24 () (_ BitVec 64))
(declare-fun temp10289_25 () (_ BitVec 64))
(declare-fun temp10289_26 () (_ BitVec 64))
(declare-fun temp10289_27 () (_ BitVec 64))
(declare-fun temp10289_28 () (_ BitVec 64))
(declare-fun temp10289_29 () (_ BitVec 64))
(declare-fun temp10289_30 () (_ BitVec 64))
(declare-fun temp10289_31 () (_ BitVec 64))
(declare-fun temp10289_32 () (_ BitVec 64))
(declare-fun temp10289_33 () (_ BitVec 64))
(declare-fun temp10289_34 () (_ BitVec 64))
(declare-fun temp10289_35 () (_ BitVec 64))
(declare-fun temp10289_36 () (_ BitVec 64))
(declare-fun temp10289_37 () (_ BitVec 64))
(declare-fun temp10289_38 () (_ BitVec 64))
(declare-fun temp10289_39 () (_ BitVec 64))
(declare-fun temp10289_40 () (_ BitVec 64))
(declare-fun temp10289_41 () (_ BitVec 64))
(declare-fun temp10289_42 () (_ BitVec 64))
(declare-fun temp10289_43 () (_ BitVec 64))
(declare-fun temp10289_44 () (_ BitVec 64))
(declare-fun temp10289_45 () (_ BitVec 64))
(declare-fun temp10289_46 () (_ BitVec 64))
(declare-fun temp10289_47 () (_ BitVec 64))
(declare-fun temp10289_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10289_49 () (_ BitVec 64))
(declare-fun temp10289_50 () (_ BitVec 64))
(declare-fun temp10289_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10289_52 () (_ BitVec 64))
(declare-fun temp10289_53 () (_ BitVec 64))
(declare-fun temp10289_54 () (_ BitVec 64))
(declare-fun temp10289_55 () (_ BitVec 64))
(declare-fun temp10289_56 () (_ BitVec 64))
(declare-fun temp10289_57 () (_ BitVec 64))
(declare-fun temp10289_58 () (_ BitVec 64))
(declare-fun temp10289_59 () (_ BitVec 64))
(declare-fun temp10289_60 () (_ BitVec 64))
(declare-fun temp10289_61 () (_ BitVec 64))
(declare-fun temp10289_62 () (_ BitVec 64))
(declare-fun temp10289_63 () (_ BitVec 64))
(declare-fun temp10289_64 () (_ BitVec 64))
(declare-fun temp10289_65 () (_ BitVec 64))
(declare-fun temp10289_66 () (_ BitVec 64))
(declare-fun temp10289_67 () (_ BitVec 64))
(declare-fun temp10289_68 () (_ BitVec 64))
(declare-fun temp10289_69 () (_ BitVec 64))
(declare-fun temp10289_70 () (_ BitVec 64))
(declare-fun temp10289_71 () (_ BitVec 64))
(declare-fun temp10289_72 () (_ BitVec 64))
(declare-fun temp10289_73 () (_ BitVec 64))
(declare-fun temp10289_74 () (_ BitVec 64))
(declare-fun temp10289_75 () (_ BitVec 64))
(declare-fun temp10289_76 () (_ BitVec 64))
(declare-fun temp10289_77 () (_ BitVec 64))
(declare-fun temp10289_78 () (_ BitVec 64))
(declare-fun temp10289_79 () (_ BitVec 64))
(declare-fun temp10289_80 () (_ BitVec 64))
(declare-fun temp10289_81 () (_ BitVec 64))
(declare-fun temp10289_82 () (_ BitVec 64))
(declare-fun temp10289_83 () (_ BitVec 64))
(declare-fun temp10289_84 () (_ BitVec 64))
(declare-fun temp10289_85 () (_ BitVec 64))
(declare-fun temp10289_86 () (_ BitVec 64))
(declare-fun temp10289_87 () (_ BitVec 64))
(declare-fun temp10289_88 () (_ BitVec 64))
(declare-fun temp10289_89 () (_ BitVec 64))
(declare-fun temp10289_90 () (_ BitVec 64))
(declare-fun temp10289_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10289_92 () (_ BitVec 64))
(declare-fun temp10289_93 () (_ BitVec 64))
(declare-fun temp10289_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10289_95 () (_ BitVec 64))
(declare-fun temp10289_96 () (_ BitVec 64))
(declare-fun temp10289_97 () (_ BitVec 64))
(declare-fun temp10289_98 () (_ BitVec 64))
(declare-fun temp10289_99 () (_ BitVec 64))
(declare-fun temp10289_100 () (_ BitVec 64))
(declare-fun temp10289_101 () (_ BitVec 64))
(declare-fun temp10289_102 () (_ BitVec 64))
(declare-fun temp10289_103 () (_ BitVec 64))
(declare-fun temp10289_104 () (_ BitVec 64))
(declare-fun temp10289_105 () (_ BitVec 64))
(declare-fun temp10289_106 () (_ BitVec 64))
(declare-fun temp10289_107 () (_ BitVec 64))
(declare-fun temp10289_108 () (_ BitVec 64))
(declare-fun temp10289_109 () (_ BitVec 64))
(declare-fun temp10289_110 () (_ BitVec 64))
(declare-fun temp10289_111 () (_ BitVec 64))
(declare-fun temp10289_112 () (_ BitVec 64))
(declare-fun temp10289_113 () (_ BitVec 64))
(declare-fun temp10289_114 () (_ BitVec 64))
(declare-fun temp10289_115 () (_ BitVec 64))
(declare-fun temp10289_116 () (_ BitVec 64))
(declare-fun temp10289_117 () (_ BitVec 64))
(declare-fun temp10289_118 () (_ BitVec 64))
(declare-fun temp10289_119 () (_ BitVec 64))
(declare-fun temp10289_120 () (_ BitVec 64))
(declare-fun temp10289_121 () (_ BitVec 64))
(declare-fun temp10289_122 () (_ BitVec 64))
(declare-fun temp10289_123 () (_ BitVec 64))
(declare-fun temp10289_124 () (_ BitVec 64))
(declare-fun temp10289_125 () (_ BitVec 64))
(declare-fun temp10289_126 () (_ BitVec 64))
(declare-fun temp10289_127 () (_ BitVec 64))
(declare-fun temp10289_128 () (_ BitVec 64))
(declare-fun temp10289_129 () (_ BitVec 64))
(declare-fun temp10289_130 () (_ BitVec 64))
(declare-fun temp10289_131 () (_ BitVec 64))
(declare-fun temp10289_132 () (_ BitVec 64))
(declare-fun temp10289_133 () (_ BitVec 64))
(declare-fun temp10289_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10289_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10289_136 () (_ BitVec 64))
(declare-fun temp10289_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10289_138 () (_ BitVec 64))
(declare-fun temp10289_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10289_140 () (_ BitVec 64))
(declare-fun temp10289_141 () (_ BitVec 64))
(declare-fun temp10289_142 () (_ BitVec 64))
(declare-fun temp10289_143 () (_ BitVec 64))
(declare-fun temp10289_144 () (_ BitVec 64))
(declare-fun temp10289_145 () (_ BitVec 64))
(declare-fun temp10289_146 () (_ BitVec 64))
(declare-fun temp10289_147 () (_ BitVec 64))
(declare-fun temp10289_148 () (_ BitVec 64))
(declare-fun temp10289_149 () (_ BitVec 64))
(declare-fun temp10289_150 () (_ BitVec 64))
(declare-fun temp10289_151 () (_ BitVec 64))
(declare-fun temp10289_152 () (_ BitVec 64))
(declare-fun temp10289_153 () (_ BitVec 64))
(declare-fun temp10289_154 () (_ BitVec 64))
(declare-fun temp10289_155 () (_ BitVec 64))
(declare-fun temp10289_157 () (_ BitVec 64))
(declare-fun temp10289_158 () (_ BitVec 64))
(declare-fun temp10289_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10289_159 () (_ BitVec 64))
(declare-fun temp10289_160 () (_ BitVec 64))
(declare-fun temp10289_162 () (_ BitVec 64))
(declare-fun temp10289_163 () (_ BitVec 64))
(declare-fun temp10289_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10289_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10289_165 () (_ BitVec 64))
(declare-fun temp10289_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10289_167 () (_ BitVec 64))
(declare-fun temp10289_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10289_169 () (_ BitVec 64))
(declare-fun temp10289_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10289_171 () (_ BitVec 64))
(declare-fun temp10289_172 () (_ BitVec 64))
(declare-fun temp10289_173 () (_ BitVec 64))
(declare-fun temp10289_174 () (_ BitVec 64))
(declare-fun temp10289_175 () (_ BitVec 64))
(declare-fun temp10289_176 () (_ BitVec 64))
(declare-fun temp10289_177 () (_ BitVec 64))
(declare-fun temp10289_178 () (_ BitVec 64))
(declare-fun temp10289_179 () (_ BitVec 64))
(declare-fun temp10289_180 () (_ BitVec 64))
(declare-fun temp10289_181 () (_ BitVec 64))
(declare-fun temp10289_182 () (_ BitVec 64))
(declare-fun temp10289_183 () (_ BitVec 64))
(declare-fun temp10289_184 () (_ BitVec 64))
(declare-fun temp10289_185 () (_ BitVec 64))
(declare-fun temp10289_186 () (_ BitVec 64))
(declare-fun temp10289_187 () (_ BitVec 64))
(declare-fun temp10289_188 () (_ BitVec 64))
(declare-fun temp10289_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10289_190 () (_ BitVec 64))
(declare-fun temp10289_192 () (_ BitVec 64))
(declare-fun temp10289_193 () (_ BitVec 64))
(declare-fun temp10289_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10289_194 () (_ BitVec 64))
(declare-fun temp10289_195 () (_ BitVec 64))
(declare-fun temp10289_197 () (_ BitVec 64))
(declare-fun temp10289_198 () (_ BitVec 64))
(declare-fun temp10289_196 () (_ BitVec 64))
(declare-fun temp10289_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10289_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10289_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10289_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10289_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10289_204 () (_ BitVec 64))
(declare-fun temp10289_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10289_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10289_207 () (_ BitVec 64))
(declare-fun temp10289_208 () (_ BitVec 64))
(declare-fun temp10289_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10289_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10289_211 () (_ BitVec 64))
(declare-fun temp10289_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10289_213 () (_ BitVec 64))
(declare-fun temp10289_214 () (_ BitVec 64))
(declare-fun temp10289_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10289_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10289_217 () (_ BitVec 64))
(declare-fun temp10289_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10289_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10289_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var5583248 () (_ BitVec 64))
(declare-fun var5845392 () (_ BitVec 64))
(declare-fun temp10289_221 () (_ BitVec 64))
(declare-fun var6173072 () (_ BitVec 64))
(declare-fun temp10289_222 () (_ BitVec 64))
(assert (= temp10289_1 #x0000000000000001))
(assert (= var77203 temp10289_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10289_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10289_2)))
(assert (= temp10289_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10289_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10289_4 #x0000000000000000))
(assert (= var210941 temp10289_4))
(assert (= temp10289_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10289_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10289_6 #x0000000000000000))
(assert (= var210986 temp10289_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10289_7 #x0000000000000000))
(assert (= temp10289_8 temp10289_7))
(assert (= temp10289_9 (select ARGNAME_padding_NAMEEND_VAL temp10289_8)))
(assert (= temp10289_10 #x0000000000000001))
(assert (= temp10289_11 temp10289_10))
(assert (= temp10289_12 (select ARGNAME_padding_NAMEEND_VAL temp10289_11)))
(assert (= temp10289_13 #x0000000000000002))
(assert (= temp10289_14 temp10289_13))
(assert (= temp10289_15 (select ARGNAME_padding_NAMEEND_VAL temp10289_14)))
(assert (= temp10289_16 #x0000000000000003))
(assert (= temp10289_17 temp10289_16))
(assert (= temp10289_18 (select ARGNAME_padding_NAMEEND_VAL temp10289_17)))
(assert (= temp10289_19 #x0000000000000004))
(assert (= temp10289_20 temp10289_19))
(assert (= temp10289_21 (select ARGNAME_padding_NAMEEND_VAL temp10289_20)))
(assert (= temp10289_22 #x0000000000000005))
(assert (= temp10289_23 temp10289_22))
(assert (= temp10289_24 (select ARGNAME_padding_NAMEEND_VAL temp10289_23)))
(assert (= temp10289_25 #x0000000000000000))
(assert (= temp10289_26 #x0000000000000000))
(assert (= temp10289_27 temp10289_26))
(assert (= temp10289_28 (select ARGNAME_padding_NAMEEND_VAL temp10289_27)))
(assert (= temp10289_29 #x0000000000000000))
(assert (= temp10289_30 #x0000000000000001))
(assert (= temp10289_31 temp10289_30))
(assert (= temp10289_32 (select ARGNAME_padding_NAMEEND_VAL temp10289_31)))
(assert (= temp10289_33 #x0000000000000000))
(assert (= temp10289_34 #x0000000000000002))
(assert (= temp10289_35 temp10289_34))
(assert (= temp10289_36 (select ARGNAME_padding_NAMEEND_VAL temp10289_35)))
(assert (= temp10289_37 #x0000000000000000))
(assert (= temp10289_38 #x0000000000000003))
(assert (= temp10289_39 temp10289_38))
(assert (= temp10289_40 (select ARGNAME_padding_NAMEEND_VAL temp10289_39)))
(assert (= temp10289_41 #x0000000000000000))
(assert (= temp10289_42 #x0000000000000004))
(assert (= temp10289_43 temp10289_42))
(assert (= temp10289_44 (select ARGNAME_padding_NAMEEND_VAL temp10289_43)))
(assert (= temp10289_45 #x0000000000000000))
(assert (= temp10289_46 #x0000000000000005))
(assert (= temp10289_47 temp10289_46))
(assert (= temp10289_48 (select ARGNAME_padding_NAMEEND_VAL temp10289_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10289_28 temp10289_25)
             (bvslt temp10289_32 temp10289_29)
             (bvslt temp10289_36 temp10289_33)
             (bvslt temp10289_40 temp10289_37)
             (bvslt temp10289_44 temp10289_41)
             (bvslt temp10289_48 temp10289_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10289_49 #x0000000000000000))
(assert (= var1191714 temp10289_49))
(assert (= temp10289_50 #x0000000000000000))
(assert (= temp10289_51 temp10289_50))
(assert (= temp10289_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10289_51)))
(assert (= temp10289_53 #x0000000000000001))
(assert (= temp10289_54 temp10289_53))
(assert (= temp10289_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10289_54)))
(assert (= temp10289_56 #x0000000000000002))
(assert (= temp10289_57 temp10289_56))
(assert (= temp10289_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10289_57)))
(assert (= temp10289_59 #x0000000000000003))
(assert (= temp10289_60 temp10289_59))
(assert (= temp10289_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10289_60)))
(assert (= temp10289_62 #x0000000000000004))
(assert (= temp10289_63 temp10289_62))
(assert (= temp10289_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10289_63)))
(assert (= temp10289_65 #x0000000000000005))
(assert (= temp10289_66 temp10289_65))
(assert (= temp10289_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10289_66)))
(assert (= temp10289_68 #x0000000000000000))
(assert (= temp10289_69 #x0000000000000000))
(assert (= temp10289_70 temp10289_69))
(assert (= temp10289_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10289_70)))
(assert (= temp10289_72 #x0000000000000000))
(assert (= temp10289_73 #x0000000000000001))
(assert (= temp10289_74 temp10289_73))
(assert (= temp10289_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10289_74)))
(assert (= temp10289_76 #x0000000000000000))
(assert (= temp10289_77 #x0000000000000002))
(assert (= temp10289_78 temp10289_77))
(assert (= temp10289_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10289_78)))
(assert (= temp10289_80 #x0000000000000000))
(assert (= temp10289_81 #x0000000000000003))
(assert (= temp10289_82 temp10289_81))
(assert (= temp10289_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10289_82)))
(assert (= temp10289_84 #x0000000000000000))
(assert (= temp10289_85 #x0000000000000004))
(assert (= temp10289_86 temp10289_85))
(assert (= temp10289_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10289_86)))
(assert (= temp10289_88 #x0000000000000000))
(assert (= temp10289_89 #x0000000000000005))
(assert (= temp10289_90 temp10289_89))
(assert (= temp10289_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10289_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10289_71 temp10289_68)
             (bvslt temp10289_75 temp10289_72)
             (bvslt temp10289_79 temp10289_76)
             (bvslt temp10289_83 temp10289_80)
             (bvslt temp10289_87 temp10289_84)
             (bvslt temp10289_91 temp10289_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10289_92 #x0000000000000000))
(assert (= var1191725 temp10289_92))
(assert (= temp10289_93 #x0000000000000000))
(assert (= temp10289_94 temp10289_93))
(assert (= temp10289_95 (select ARGNAME_stride_NAMEEND_VAL temp10289_94)))
(assert (= temp10289_96 #x0000000000000001))
(assert (= temp10289_97 temp10289_96))
(assert (= temp10289_98 (select ARGNAME_stride_NAMEEND_VAL temp10289_97)))
(assert (= temp10289_99 #x0000000000000002))
(assert (= temp10289_100 temp10289_99))
(assert (= temp10289_101 (select ARGNAME_stride_NAMEEND_VAL temp10289_100)))
(assert (= temp10289_102 #x0000000000000003))
(assert (= temp10289_103 temp10289_102))
(assert (= temp10289_104 (select ARGNAME_stride_NAMEEND_VAL temp10289_103)))
(assert (= temp10289_105 #x0000000000000004))
(assert (= temp10289_106 temp10289_105))
(assert (= temp10289_107 (select ARGNAME_stride_NAMEEND_VAL temp10289_106)))
(assert (= temp10289_108 #x0000000000000005))
(assert (= temp10289_109 temp10289_108))
(assert (= temp10289_110 (select ARGNAME_stride_NAMEEND_VAL temp10289_109)))
(assert (= temp10289_111 #x0000000000000000))
(assert (= temp10289_112 #x0000000000000000))
(assert (= temp10289_113 temp10289_112))
(assert (= temp10289_114 (select ARGNAME_stride_NAMEEND_VAL temp10289_113)))
(assert (= temp10289_115 #x0000000000000000))
(assert (= temp10289_116 #x0000000000000001))
(assert (= temp10289_117 temp10289_116))
(assert (= temp10289_118 (select ARGNAME_stride_NAMEEND_VAL temp10289_117)))
(assert (= temp10289_119 #x0000000000000000))
(assert (= temp10289_120 #x0000000000000002))
(assert (= temp10289_121 temp10289_120))
(assert (= temp10289_122 (select ARGNAME_stride_NAMEEND_VAL temp10289_121)))
(assert (= temp10289_123 #x0000000000000000))
(assert (= temp10289_124 #x0000000000000003))
(assert (= temp10289_125 temp10289_124))
(assert (= temp10289_126 (select ARGNAME_stride_NAMEEND_VAL temp10289_125)))
(assert (= temp10289_127 #x0000000000000000))
(assert (= temp10289_128 #x0000000000000004))
(assert (= temp10289_129 temp10289_128))
(assert (= temp10289_130 (select ARGNAME_stride_NAMEEND_VAL temp10289_129)))
(assert (= temp10289_131 #x0000000000000000))
(assert (= temp10289_132 #x0000000000000005))
(assert (= temp10289_133 temp10289_132))
(assert (= temp10289_134 (select ARGNAME_stride_NAMEEND_VAL temp10289_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10289_114 temp10289_111)
             (bvsle temp10289_118 temp10289_115)
             (bvsle temp10289_122 temp10289_119)
             (bvsle temp10289_126 temp10289_123)
             (bvsle temp10289_130 temp10289_127)
             (bvsle temp10289_134 temp10289_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10289_135 #x0000000000000000))
(assert (= var1191735 temp10289_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10289_136 #x0000000000000001))
(assert (= var1191747 temp10289_136))
(assert (= temp10289_137 #x0000000000000000))
(assert (= var1179826 temp10289_137))
(assert (= temp10289_138 #x0000000000000000))
(assert (= temp10289_139 temp10289_138))
(assert (= temp10289_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10289_139)))
(assert (= temp10289_141 #x0000000000000001))
(assert (= temp10289_142 temp10289_141))
(assert (= temp10289_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10289_142)))
(assert (= temp10289_144 #x0000000000000002))
(assert (= temp10289_145 temp10289_144))
(assert (= temp10289_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10289_145)))
(assert (= temp10289_147 #x0000000000000003))
(assert (= temp10289_148 temp10289_147))
(assert (= temp10289_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10289_148)))
(assert (= temp10289_150 #x0000000000000004))
(assert (= temp10289_151 temp10289_150))
(assert (= temp10289_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10289_151)))
(assert (= temp10289_153 #x0000000000000005))
(assert (= temp10289_154 temp10289_153))
(assert (= temp10289_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10289_154)))
(assert (= temp10289_157 var1179826))
(assert (= temp10289_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10289_157)))
(assert (= temp10289_156 temp10289_158))
(assert (= var1191780
   (ite (bvslt temp10289_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10289_159 #x0000000000000000))
(assert (= var1191780 temp10289_159))
(assert (= temp10289_160 #x0000000000000000))
(assert (= var1179826 temp10289_160))
(assert (= temp10289_162 var1179826))
(assert (= temp10289_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10289_162)))
(assert (= temp10289_161 temp10289_163))
(assert (= var1191802 (bvsmod temp10289_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10289_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10289_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10289_165 #x0000000000000001))
(assert (= var1191803 temp10289_165))
(assert (= temp10289_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10289_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10289_167 #x0000000000000001))
(assert (= var1191823 temp10289_167))
(assert (= temp10289_168 #x0000000000000001))
(assert (= var1180714 temp10289_168))
(assert (= temp10289_169 #x0000000000000000))
(assert (= temp10289_170 temp10289_169))
(assert (= temp10289_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10289_170)))
(assert (= temp10289_172 #x0000000000000001))
(assert (= temp10289_173 temp10289_172))
(assert (= temp10289_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10289_173)))
(assert (= temp10289_175 #x0000000000000002))
(assert (= temp10289_176 temp10289_175))
(assert (= temp10289_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10289_176)))
(assert (= temp10289_178 #x0000000000000003))
(assert (= temp10289_179 temp10289_178))
(assert (= temp10289_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10289_179)))
(assert (= temp10289_181 #x0000000000000004))
(assert (= temp10289_182 temp10289_181))
(assert (= temp10289_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10289_182)))
(assert (= temp10289_184 #x0000000000000005))
(assert (= temp10289_185 temp10289_184))
(assert (= temp10289_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10289_185)))
(assert (= temp10289_187 #x0000000000000000))
(assert (= temp10289_188
   (ite (bvslt var1180714 temp10289_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10289_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10289_188)))
(assert (= var1191831 temp10289_189))
(assert (bvslt (ite (bvslt var1180714 temp10289_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10289_190 #x0000000000000001))
(assert (= var1180714 temp10289_190))
(assert (= temp10289_192 var1180714))
(assert (= temp10289_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10289_192)))
(assert (= temp10289_191 temp10289_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10289_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10289_194 #x0000000000000001))
(assert (= var1191836 temp10289_194))
(assert (= temp10289_195 #x0000000000000000))
(assert (= var1179826 temp10289_195))
(assert (= temp10289_197 var1179826))
(assert (= temp10289_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10289_197)))
(assert (= temp10289_196 temp10289_198))
(assert (= temp10289_199 #x0000000000000002))
(assert (= var1586025 temp10289_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10289_200 #x0000000000000001))
(assert (= var1191993 temp10289_200))
(assert (= temp10289_201 #x0000000000000001))
(assert (= var2700303 temp10289_201))
(assert (= temp10289_202 #x0000000000000001))
(assert (= var2962447 temp10289_202))
(assert (= temp10289_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10289_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10289_204 #x0000000000000001))
(assert (= var211058 temp10289_204))
(assert (= temp10289_205 #x0000000000000001))
(assert (= var211188 temp10289_205))
(assert (= var3879401 var211188))
(assert (= temp10289_206 #x0000000000000000))
(assert (= var3866802 temp10289_206))
(assert (= temp10289_207 #x0000000000000000))
(assert (= temp10289_208
   (ite (bvslt var3866802 temp10289_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10289_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10289_208)))
(assert (= var3879420 temp10289_209))
(assert (bvslt (ite (bvslt var3866802 temp10289_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10289_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10289_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10289_211 #x0000000000000000))
(assert (= var3879421 temp10289_211))
(assert (= temp10289_212 #x0000000000000001))
(assert (= var3867690 temp10289_212))
(assert (= temp10289_213 #x0000000000000000))
(assert (= temp10289_214
   (ite (bvslt var3867690 temp10289_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10289_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10289_214)))
(assert (= var3879423 temp10289_215))
(assert (bvslt (ite (bvslt var3867690 temp10289_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10289_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10289_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10289_217 #x0000000000000001))
(assert (= var3879424 temp10289_217))
(assert (= temp10289_218 #x0000000000000000))
(assert (= var4079423 temp10289_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10289_219 #x0000000000000002))
(assert (= var4208259 temp10289_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10289_220 #x0000000000000000))
(assert (= var4273820 temp10289_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var5583248 var211201))
(assert (= var5845392 var211201))
(assert (= temp10289_221 #x0000000000000000))
(assert (= var6173072 temp10289_221))
(assert (= temp10289_222 #x0000000000000001))
(assert (= var211058 temp10289_222))
(model-add temp10289_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10289_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10289_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10289_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))



