(declare-fun temp10393_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10393_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10393_3 () (_ BitVec 64))
(declare-fun temp10393_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10393_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10393_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10393_7 () (_ BitVec 64))
(declare-fun temp10393_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10393_9 () (_ BitVec 64))
(declare-fun temp10393_10 () (_ BitVec 64))
(declare-fun temp10393_11 () (_ BitVec 64))
(declare-fun temp10393_12 () (_ BitVec 64))
(declare-fun temp10393_13 () (_ BitVec 64))
(declare-fun temp10393_14 () (_ BitVec 64))
(declare-fun temp10393_15 () (_ BitVec 64))
(declare-fun temp10393_16 () (_ BitVec 64))
(declare-fun temp10393_17 () (_ BitVec 64))
(declare-fun temp10393_18 () (_ BitVec 64))
(declare-fun temp10393_19 () (_ BitVec 64))
(declare-fun temp10393_20 () (_ BitVec 64))
(declare-fun temp10393_21 () (_ BitVec 64))
(declare-fun temp10393_22 () (_ BitVec 64))
(declare-fun temp10393_23 () (_ BitVec 64))
(declare-fun temp10393_24 () (_ BitVec 64))
(declare-fun temp10393_25 () (_ BitVec 64))
(declare-fun temp10393_26 () (_ BitVec 64))
(declare-fun temp10393_27 () (_ BitVec 64))
(declare-fun temp10393_28 () (_ BitVec 64))
(declare-fun temp10393_29 () (_ BitVec 64))
(declare-fun temp10393_30 () (_ BitVec 64))
(declare-fun temp10393_31 () (_ BitVec 64))
(declare-fun temp10393_32 () (_ BitVec 64))
(declare-fun temp10393_33 () (_ BitVec 64))
(declare-fun temp10393_34 () (_ BitVec 64))
(declare-fun temp10393_35 () (_ BitVec 64))
(declare-fun temp10393_36 () (_ BitVec 64))
(declare-fun temp10393_37 () (_ BitVec 64))
(declare-fun temp10393_38 () (_ BitVec 64))
(declare-fun temp10393_39 () (_ BitVec 64))
(declare-fun temp10393_40 () (_ BitVec 64))
(declare-fun temp10393_41 () (_ BitVec 64))
(declare-fun temp10393_42 () (_ BitVec 64))
(declare-fun temp10393_43 () (_ BitVec 64))
(declare-fun temp10393_44 () (_ BitVec 64))
(declare-fun temp10393_45 () (_ BitVec 64))
(declare-fun temp10393_46 () (_ BitVec 64))
(declare-fun temp10393_47 () (_ BitVec 64))
(declare-fun temp10393_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10393_49 () (_ BitVec 64))
(declare-fun temp10393_50 () (_ BitVec 64))
(declare-fun temp10393_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10393_52 () (_ BitVec 64))
(declare-fun temp10393_53 () (_ BitVec 64))
(declare-fun temp10393_54 () (_ BitVec 64))
(declare-fun temp10393_55 () (_ BitVec 64))
(declare-fun temp10393_56 () (_ BitVec 64))
(declare-fun temp10393_57 () (_ BitVec 64))
(declare-fun temp10393_58 () (_ BitVec 64))
(declare-fun temp10393_59 () (_ BitVec 64))
(declare-fun temp10393_60 () (_ BitVec 64))
(declare-fun temp10393_61 () (_ BitVec 64))
(declare-fun temp10393_62 () (_ BitVec 64))
(declare-fun temp10393_63 () (_ BitVec 64))
(declare-fun temp10393_64 () (_ BitVec 64))
(declare-fun temp10393_65 () (_ BitVec 64))
(declare-fun temp10393_66 () (_ BitVec 64))
(declare-fun temp10393_67 () (_ BitVec 64))
(declare-fun temp10393_68 () (_ BitVec 64))
(declare-fun temp10393_69 () (_ BitVec 64))
(declare-fun temp10393_70 () (_ BitVec 64))
(declare-fun temp10393_71 () (_ BitVec 64))
(declare-fun temp10393_72 () (_ BitVec 64))
(declare-fun temp10393_73 () (_ BitVec 64))
(declare-fun temp10393_74 () (_ BitVec 64))
(declare-fun temp10393_75 () (_ BitVec 64))
(declare-fun temp10393_76 () (_ BitVec 64))
(declare-fun temp10393_77 () (_ BitVec 64))
(declare-fun temp10393_78 () (_ BitVec 64))
(declare-fun temp10393_79 () (_ BitVec 64))
(declare-fun temp10393_80 () (_ BitVec 64))
(declare-fun temp10393_81 () (_ BitVec 64))
(declare-fun temp10393_82 () (_ BitVec 64))
(declare-fun temp10393_83 () (_ BitVec 64))
(declare-fun temp10393_84 () (_ BitVec 64))
(declare-fun temp10393_85 () (_ BitVec 64))
(declare-fun temp10393_86 () (_ BitVec 64))
(declare-fun temp10393_87 () (_ BitVec 64))
(declare-fun temp10393_88 () (_ BitVec 64))
(declare-fun temp10393_89 () (_ BitVec 64))
(declare-fun temp10393_90 () (_ BitVec 64))
(declare-fun temp10393_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10393_92 () (_ BitVec 64))
(declare-fun temp10393_93 () (_ BitVec 64))
(declare-fun temp10393_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10393_95 () (_ BitVec 64))
(declare-fun temp10393_96 () (_ BitVec 64))
(declare-fun temp10393_97 () (_ BitVec 64))
(declare-fun temp10393_98 () (_ BitVec 64))
(declare-fun temp10393_99 () (_ BitVec 64))
(declare-fun temp10393_100 () (_ BitVec 64))
(declare-fun temp10393_101 () (_ BitVec 64))
(declare-fun temp10393_102 () (_ BitVec 64))
(declare-fun temp10393_103 () (_ BitVec 64))
(declare-fun temp10393_104 () (_ BitVec 64))
(declare-fun temp10393_105 () (_ BitVec 64))
(declare-fun temp10393_106 () (_ BitVec 64))
(declare-fun temp10393_107 () (_ BitVec 64))
(declare-fun temp10393_108 () (_ BitVec 64))
(declare-fun temp10393_109 () (_ BitVec 64))
(declare-fun temp10393_110 () (_ BitVec 64))
(declare-fun temp10393_111 () (_ BitVec 64))
(declare-fun temp10393_112 () (_ BitVec 64))
(declare-fun temp10393_113 () (_ BitVec 64))
(declare-fun temp10393_114 () (_ BitVec 64))
(declare-fun temp10393_115 () (_ BitVec 64))
(declare-fun temp10393_116 () (_ BitVec 64))
(declare-fun temp10393_117 () (_ BitVec 64))
(declare-fun temp10393_118 () (_ BitVec 64))
(declare-fun temp10393_119 () (_ BitVec 64))
(declare-fun temp10393_120 () (_ BitVec 64))
(declare-fun temp10393_121 () (_ BitVec 64))
(declare-fun temp10393_122 () (_ BitVec 64))
(declare-fun temp10393_123 () (_ BitVec 64))
(declare-fun temp10393_124 () (_ BitVec 64))
(declare-fun temp10393_125 () (_ BitVec 64))
(declare-fun temp10393_126 () (_ BitVec 64))
(declare-fun temp10393_127 () (_ BitVec 64))
(declare-fun temp10393_128 () (_ BitVec 64))
(declare-fun temp10393_129 () (_ BitVec 64))
(declare-fun temp10393_130 () (_ BitVec 64))
(declare-fun temp10393_131 () (_ BitVec 64))
(declare-fun temp10393_132 () (_ BitVec 64))
(declare-fun temp10393_133 () (_ BitVec 64))
(declare-fun temp10393_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10393_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10393_136 () (_ BitVec 64))
(declare-fun temp10393_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10393_138 () (_ BitVec 64))
(declare-fun temp10393_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10393_140 () (_ BitVec 64))
(declare-fun temp10393_141 () (_ BitVec 64))
(declare-fun temp10393_142 () (_ BitVec 64))
(declare-fun temp10393_143 () (_ BitVec 64))
(declare-fun temp10393_144 () (_ BitVec 64))
(declare-fun temp10393_145 () (_ BitVec 64))
(declare-fun temp10393_146 () (_ BitVec 64))
(declare-fun temp10393_147 () (_ BitVec 64))
(declare-fun temp10393_148 () (_ BitVec 64))
(declare-fun temp10393_149 () (_ BitVec 64))
(declare-fun temp10393_150 () (_ BitVec 64))
(declare-fun temp10393_151 () (_ BitVec 64))
(declare-fun temp10393_152 () (_ BitVec 64))
(declare-fun temp10393_153 () (_ BitVec 64))
(declare-fun temp10393_154 () (_ BitVec 64))
(declare-fun temp10393_155 () (_ BitVec 64))
(declare-fun temp10393_157 () (_ BitVec 64))
(declare-fun temp10393_158 () (_ BitVec 64))
(declare-fun temp10393_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10393_159 () (_ BitVec 64))
(declare-fun temp10393_160 () (_ BitVec 64))
(declare-fun temp10393_162 () (_ BitVec 64))
(declare-fun temp10393_163 () (_ BitVec 64))
(declare-fun temp10393_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10393_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10393_165 () (_ BitVec 64))
(declare-fun temp10393_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10393_167 () (_ BitVec 64))
(declare-fun temp10393_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10393_169 () (_ BitVec 64))
(declare-fun temp10393_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10393_171 () (_ BitVec 64))
(declare-fun temp10393_172 () (_ BitVec 64))
(declare-fun temp10393_173 () (_ BitVec 64))
(declare-fun temp10393_174 () (_ BitVec 64))
(declare-fun temp10393_175 () (_ BitVec 64))
(declare-fun temp10393_176 () (_ BitVec 64))
(declare-fun temp10393_177 () (_ BitVec 64))
(declare-fun temp10393_178 () (_ BitVec 64))
(declare-fun temp10393_179 () (_ BitVec 64))
(declare-fun temp10393_180 () (_ BitVec 64))
(declare-fun temp10393_181 () (_ BitVec 64))
(declare-fun temp10393_182 () (_ BitVec 64))
(declare-fun temp10393_183 () (_ BitVec 64))
(declare-fun temp10393_184 () (_ BitVec 64))
(declare-fun temp10393_185 () (_ BitVec 64))
(declare-fun temp10393_186 () (_ BitVec 64))
(declare-fun temp10393_187 () (_ BitVec 64))
(declare-fun temp10393_188 () (_ BitVec 64))
(declare-fun temp10393_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10393_190 () (_ BitVec 64))
(declare-fun temp10393_192 () (_ BitVec 64))
(declare-fun temp10393_193 () (_ BitVec 64))
(declare-fun temp10393_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10393_194 () (_ BitVec 64))
(declare-fun temp10393_195 () (_ BitVec 64))
(declare-fun temp10393_197 () (_ BitVec 64))
(declare-fun temp10393_198 () (_ BitVec 64))
(declare-fun temp10393_196 () (_ BitVec 64))
(declare-fun temp10393_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10393_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10393_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10393_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10393_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10393_204 () (_ BitVec 64))
(declare-fun temp10393_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10393_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10393_207 () (_ BitVec 64))
(declare-fun temp10393_208 () (_ BitVec 64))
(declare-fun temp10393_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10393_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10393_211 () (_ BitVec 64))
(declare-fun temp10393_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10393_213 () (_ BitVec 64))
(declare-fun temp10393_214 () (_ BitVec 64))
(declare-fun temp10393_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10393_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10393_217 () (_ BitVec 64))
(declare-fun temp10393_218 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10393_219 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp10393_220 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp10393_221 () (_ BitVec 64))
(assert (= temp10393_1 #x0000000000000001))
(assert (= var77203 temp10393_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10393_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10393_2)))
(assert (= temp10393_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10393_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10393_4 #x0000000000000000))
(assert (= var210941 temp10393_4))
(assert (= temp10393_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10393_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10393_6 #x0000000000000000))
(assert (= var210986 temp10393_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10393_7 #x0000000000000000))
(assert (= temp10393_8 temp10393_7))
(assert (= temp10393_9 (select ARGNAME_padding_NAMEEND_VAL temp10393_8)))
(assert (= temp10393_10 #x0000000000000001))
(assert (= temp10393_11 temp10393_10))
(assert (= temp10393_12 (select ARGNAME_padding_NAMEEND_VAL temp10393_11)))
(assert (= temp10393_13 #x0000000000000002))
(assert (= temp10393_14 temp10393_13))
(assert (= temp10393_15 (select ARGNAME_padding_NAMEEND_VAL temp10393_14)))
(assert (= temp10393_16 #x0000000000000003))
(assert (= temp10393_17 temp10393_16))
(assert (= temp10393_18 (select ARGNAME_padding_NAMEEND_VAL temp10393_17)))
(assert (= temp10393_19 #x0000000000000004))
(assert (= temp10393_20 temp10393_19))
(assert (= temp10393_21 (select ARGNAME_padding_NAMEEND_VAL temp10393_20)))
(assert (= temp10393_22 #x0000000000000005))
(assert (= temp10393_23 temp10393_22))
(assert (= temp10393_24 (select ARGNAME_padding_NAMEEND_VAL temp10393_23)))
(assert (= temp10393_25 #x0000000000000000))
(assert (= temp10393_26 #x0000000000000000))
(assert (= temp10393_27 temp10393_26))
(assert (= temp10393_28 (select ARGNAME_padding_NAMEEND_VAL temp10393_27)))
(assert (= temp10393_29 #x0000000000000000))
(assert (= temp10393_30 #x0000000000000001))
(assert (= temp10393_31 temp10393_30))
(assert (= temp10393_32 (select ARGNAME_padding_NAMEEND_VAL temp10393_31)))
(assert (= temp10393_33 #x0000000000000000))
(assert (= temp10393_34 #x0000000000000002))
(assert (= temp10393_35 temp10393_34))
(assert (= temp10393_36 (select ARGNAME_padding_NAMEEND_VAL temp10393_35)))
(assert (= temp10393_37 #x0000000000000000))
(assert (= temp10393_38 #x0000000000000003))
(assert (= temp10393_39 temp10393_38))
(assert (= temp10393_40 (select ARGNAME_padding_NAMEEND_VAL temp10393_39)))
(assert (= temp10393_41 #x0000000000000000))
(assert (= temp10393_42 #x0000000000000004))
(assert (= temp10393_43 temp10393_42))
(assert (= temp10393_44 (select ARGNAME_padding_NAMEEND_VAL temp10393_43)))
(assert (= temp10393_45 #x0000000000000000))
(assert (= temp10393_46 #x0000000000000005))
(assert (= temp10393_47 temp10393_46))
(assert (= temp10393_48 (select ARGNAME_padding_NAMEEND_VAL temp10393_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10393_28 temp10393_25)
             (bvslt temp10393_32 temp10393_29)
             (bvslt temp10393_36 temp10393_33)
             (bvslt temp10393_40 temp10393_37)
             (bvslt temp10393_44 temp10393_41)
             (bvslt temp10393_48 temp10393_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10393_49 #x0000000000000000))
(assert (= var1191714 temp10393_49))
(assert (= temp10393_50 #x0000000000000000))
(assert (= temp10393_51 temp10393_50))
(assert (= temp10393_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10393_51)))
(assert (= temp10393_53 #x0000000000000001))
(assert (= temp10393_54 temp10393_53))
(assert (= temp10393_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10393_54)))
(assert (= temp10393_56 #x0000000000000002))
(assert (= temp10393_57 temp10393_56))
(assert (= temp10393_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10393_57)))
(assert (= temp10393_59 #x0000000000000003))
(assert (= temp10393_60 temp10393_59))
(assert (= temp10393_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10393_60)))
(assert (= temp10393_62 #x0000000000000004))
(assert (= temp10393_63 temp10393_62))
(assert (= temp10393_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10393_63)))
(assert (= temp10393_65 #x0000000000000005))
(assert (= temp10393_66 temp10393_65))
(assert (= temp10393_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10393_66)))
(assert (= temp10393_68 #x0000000000000000))
(assert (= temp10393_69 #x0000000000000000))
(assert (= temp10393_70 temp10393_69))
(assert (= temp10393_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10393_70)))
(assert (= temp10393_72 #x0000000000000000))
(assert (= temp10393_73 #x0000000000000001))
(assert (= temp10393_74 temp10393_73))
(assert (= temp10393_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10393_74)))
(assert (= temp10393_76 #x0000000000000000))
(assert (= temp10393_77 #x0000000000000002))
(assert (= temp10393_78 temp10393_77))
(assert (= temp10393_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10393_78)))
(assert (= temp10393_80 #x0000000000000000))
(assert (= temp10393_81 #x0000000000000003))
(assert (= temp10393_82 temp10393_81))
(assert (= temp10393_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10393_82)))
(assert (= temp10393_84 #x0000000000000000))
(assert (= temp10393_85 #x0000000000000004))
(assert (= temp10393_86 temp10393_85))
(assert (= temp10393_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10393_86)))
(assert (= temp10393_88 #x0000000000000000))
(assert (= temp10393_89 #x0000000000000005))
(assert (= temp10393_90 temp10393_89))
(assert (= temp10393_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10393_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10393_71 temp10393_68)
             (bvslt temp10393_75 temp10393_72)
             (bvslt temp10393_79 temp10393_76)
             (bvslt temp10393_83 temp10393_80)
             (bvslt temp10393_87 temp10393_84)
             (bvslt temp10393_91 temp10393_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10393_92 #x0000000000000000))
(assert (= var1191725 temp10393_92))
(assert (= temp10393_93 #x0000000000000000))
(assert (= temp10393_94 temp10393_93))
(assert (= temp10393_95 (select ARGNAME_stride_NAMEEND_VAL temp10393_94)))
(assert (= temp10393_96 #x0000000000000001))
(assert (= temp10393_97 temp10393_96))
(assert (= temp10393_98 (select ARGNAME_stride_NAMEEND_VAL temp10393_97)))
(assert (= temp10393_99 #x0000000000000002))
(assert (= temp10393_100 temp10393_99))
(assert (= temp10393_101 (select ARGNAME_stride_NAMEEND_VAL temp10393_100)))
(assert (= temp10393_102 #x0000000000000003))
(assert (= temp10393_103 temp10393_102))
(assert (= temp10393_104 (select ARGNAME_stride_NAMEEND_VAL temp10393_103)))
(assert (= temp10393_105 #x0000000000000004))
(assert (= temp10393_106 temp10393_105))
(assert (= temp10393_107 (select ARGNAME_stride_NAMEEND_VAL temp10393_106)))
(assert (= temp10393_108 #x0000000000000005))
(assert (= temp10393_109 temp10393_108))
(assert (= temp10393_110 (select ARGNAME_stride_NAMEEND_VAL temp10393_109)))
(assert (= temp10393_111 #x0000000000000000))
(assert (= temp10393_112 #x0000000000000000))
(assert (= temp10393_113 temp10393_112))
(assert (= temp10393_114 (select ARGNAME_stride_NAMEEND_VAL temp10393_113)))
(assert (= temp10393_115 #x0000000000000000))
(assert (= temp10393_116 #x0000000000000001))
(assert (= temp10393_117 temp10393_116))
(assert (= temp10393_118 (select ARGNAME_stride_NAMEEND_VAL temp10393_117)))
(assert (= temp10393_119 #x0000000000000000))
(assert (= temp10393_120 #x0000000000000002))
(assert (= temp10393_121 temp10393_120))
(assert (= temp10393_122 (select ARGNAME_stride_NAMEEND_VAL temp10393_121)))
(assert (= temp10393_123 #x0000000000000000))
(assert (= temp10393_124 #x0000000000000003))
(assert (= temp10393_125 temp10393_124))
(assert (= temp10393_126 (select ARGNAME_stride_NAMEEND_VAL temp10393_125)))
(assert (= temp10393_127 #x0000000000000000))
(assert (= temp10393_128 #x0000000000000004))
(assert (= temp10393_129 temp10393_128))
(assert (= temp10393_130 (select ARGNAME_stride_NAMEEND_VAL temp10393_129)))
(assert (= temp10393_131 #x0000000000000000))
(assert (= temp10393_132 #x0000000000000005))
(assert (= temp10393_133 temp10393_132))
(assert (= temp10393_134 (select ARGNAME_stride_NAMEEND_VAL temp10393_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10393_114 temp10393_111)
             (bvsle temp10393_118 temp10393_115)
             (bvsle temp10393_122 temp10393_119)
             (bvsle temp10393_126 temp10393_123)
             (bvsle temp10393_130 temp10393_127)
             (bvsle temp10393_134 temp10393_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10393_135 #x0000000000000000))
(assert (= var1191735 temp10393_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10393_136 #x0000000000000001))
(assert (= var1191747 temp10393_136))
(assert (= temp10393_137 #x0000000000000000))
(assert (= var1179826 temp10393_137))
(assert (= temp10393_138 #x0000000000000000))
(assert (= temp10393_139 temp10393_138))
(assert (= temp10393_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10393_139)))
(assert (= temp10393_141 #x0000000000000001))
(assert (= temp10393_142 temp10393_141))
(assert (= temp10393_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10393_142)))
(assert (= temp10393_144 #x0000000000000002))
(assert (= temp10393_145 temp10393_144))
(assert (= temp10393_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10393_145)))
(assert (= temp10393_147 #x0000000000000003))
(assert (= temp10393_148 temp10393_147))
(assert (= temp10393_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10393_148)))
(assert (= temp10393_150 #x0000000000000004))
(assert (= temp10393_151 temp10393_150))
(assert (= temp10393_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10393_151)))
(assert (= temp10393_153 #x0000000000000005))
(assert (= temp10393_154 temp10393_153))
(assert (= temp10393_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10393_154)))
(assert (= temp10393_157 var1179826))
(assert (= temp10393_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10393_157)))
(assert (= temp10393_156 temp10393_158))
(assert (= var1191780
   (ite (bvslt temp10393_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10393_159 #x0000000000000000))
(assert (= var1191780 temp10393_159))
(assert (= temp10393_160 #x0000000000000000))
(assert (= var1179826 temp10393_160))
(assert (= temp10393_162 var1179826))
(assert (= temp10393_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10393_162)))
(assert (= temp10393_161 temp10393_163))
(assert (= var1191802 (bvsmod temp10393_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10393_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10393_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10393_165 #x0000000000000001))
(assert (= var1191803 temp10393_165))
(assert (= temp10393_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10393_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10393_167 #x0000000000000001))
(assert (= var1191823 temp10393_167))
(assert (= temp10393_168 #x0000000000000001))
(assert (= var1180714 temp10393_168))
(assert (= temp10393_169 #x0000000000000000))
(assert (= temp10393_170 temp10393_169))
(assert (= temp10393_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10393_170)))
(assert (= temp10393_172 #x0000000000000001))
(assert (= temp10393_173 temp10393_172))
(assert (= temp10393_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10393_173)))
(assert (= temp10393_175 #x0000000000000002))
(assert (= temp10393_176 temp10393_175))
(assert (= temp10393_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10393_176)))
(assert (= temp10393_178 #x0000000000000003))
(assert (= temp10393_179 temp10393_178))
(assert (= temp10393_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10393_179)))
(assert (= temp10393_181 #x0000000000000004))
(assert (= temp10393_182 temp10393_181))
(assert (= temp10393_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10393_182)))
(assert (= temp10393_184 #x0000000000000005))
(assert (= temp10393_185 temp10393_184))
(assert (= temp10393_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10393_185)))
(assert (= temp10393_187 #x0000000000000000))
(assert (= temp10393_188
   (ite (bvslt var1180714 temp10393_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10393_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10393_188)))
(assert (= var1191831 temp10393_189))
(assert (bvslt (ite (bvslt var1180714 temp10393_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10393_190 #x0000000000000001))
(assert (= var1180714 temp10393_190))
(assert (= temp10393_192 var1180714))
(assert (= temp10393_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10393_192)))
(assert (= temp10393_191 temp10393_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10393_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10393_194 #x0000000000000001))
(assert (= var1191836 temp10393_194))
(assert (= temp10393_195 #x0000000000000000))
(assert (= var1179826 temp10393_195))
(assert (= temp10393_197 var1179826))
(assert (= temp10393_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10393_197)))
(assert (= temp10393_196 temp10393_198))
(assert (= temp10393_199 #x0000000000000002))
(assert (= var1586025 temp10393_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10393_200 #x0000000000000001))
(assert (= var1191993 temp10393_200))
(assert (= temp10393_201 #x0000000000000001))
(assert (= var2700303 temp10393_201))
(assert (= temp10393_202 #x0000000000000001))
(assert (= var2962447 temp10393_202))
(assert (= temp10393_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10393_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10393_204 #x0000000000000001))
(assert (= var211058 temp10393_204))
(assert (= temp10393_205 #x0000000000000001))
(assert (= var211188 temp10393_205))
(assert (= var3879401 var211188))
(assert (= temp10393_206 #x0000000000000000))
(assert (= var3866802 temp10393_206))
(assert (= temp10393_207 #x0000000000000000))
(assert (= temp10393_208
   (ite (bvslt var3866802 temp10393_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10393_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10393_208)))
(assert (= var3879420 temp10393_209))
(assert (bvslt (ite (bvslt var3866802 temp10393_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10393_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10393_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10393_211 #x0000000000000000))
(assert (= var3879421 temp10393_211))
(assert (= temp10393_212 #x0000000000000001))
(assert (= var3867690 temp10393_212))
(assert (= temp10393_213 #x0000000000000000))
(assert (= temp10393_214
   (ite (bvslt var3867690 temp10393_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10393_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10393_214)))
(assert (= var3879423 temp10393_215))
(assert (bvslt (ite (bvslt var3867690 temp10393_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10393_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10393_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10393_217 #x0000000000000001))
(assert (= var3879424 temp10393_217))
(assert (= temp10393_218 #x0000000000000000))
(assert (= var4079423 temp10393_218))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10393_219 #x0000000000000002))
(assert (= var4208259 temp10393_219))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10393_220 #x0000000000000000))
(assert (= var4273820 temp10393_220))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp10393_221 #x0000000000000001))
(assert (= var211058 temp10393_221))
(model-add temp10393_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10393_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10393_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10393_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))






