(declare-fun temp441_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp441_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp441_3 () (_ BitVec 64))
(declare-fun temp441_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp441_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp441_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp441_7 () (_ BitVec 64))
(declare-fun temp441_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp441_9 () (_ BitVec 64))
(declare-fun temp441_10 () (_ BitVec 64))
(declare-fun temp441_11 () (_ BitVec 64))
(declare-fun temp441_12 () (_ BitVec 64))
(declare-fun temp441_13 () (_ BitVec 64))
(declare-fun temp441_14 () (_ BitVec 64))
(declare-fun temp441_15 () (_ BitVec 64))
(declare-fun temp441_16 () (_ BitVec 64))
(declare-fun temp441_17 () (_ BitVec 64))
(declare-fun temp441_18 () (_ BitVec 64))
(declare-fun temp441_19 () (_ BitVec 64))
(declare-fun temp441_20 () (_ BitVec 64))
(declare-fun temp441_21 () (_ BitVec 64))
(declare-fun temp441_22 () (_ BitVec 64))
(declare-fun temp441_23 () (_ BitVec 64))
(declare-fun temp441_24 () (_ BitVec 64))
(declare-fun temp441_25 () (_ BitVec 64))
(declare-fun temp441_26 () (_ BitVec 64))
(declare-fun temp441_27 () (_ BitVec 64))
(declare-fun temp441_28 () (_ BitVec 64))
(declare-fun temp441_29 () (_ BitVec 64))
(declare-fun temp441_30 () (_ BitVec 64))
(declare-fun temp441_31 () (_ BitVec 64))
(declare-fun temp441_32 () (_ BitVec 64))
(declare-fun temp441_33 () (_ BitVec 64))
(declare-fun temp441_34 () (_ BitVec 64))
(declare-fun temp441_35 () (_ BitVec 64))
(declare-fun temp441_36 () (_ BitVec 64))
(declare-fun temp441_37 () (_ BitVec 64))
(declare-fun temp441_38 () (_ BitVec 64))
(declare-fun temp441_39 () (_ BitVec 64))
(declare-fun temp441_40 () (_ BitVec 64))
(declare-fun temp441_41 () (_ BitVec 64))
(declare-fun temp441_42 () (_ BitVec 64))
(declare-fun temp441_43 () (_ BitVec 64))
(declare-fun temp441_44 () (_ BitVec 64))
(declare-fun temp441_45 () (_ BitVec 64))
(declare-fun temp441_46 () (_ BitVec 64))
(declare-fun temp441_47 () (_ BitVec 64))
(declare-fun temp441_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp441_49 () (_ BitVec 64))
(declare-fun temp441_50 () (_ BitVec 64))
(declare-fun temp441_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp441_52 () (_ BitVec 64))
(declare-fun temp441_53 () (_ BitVec 64))
(declare-fun temp441_54 () (_ BitVec 64))
(declare-fun temp441_55 () (_ BitVec 64))
(declare-fun temp441_56 () (_ BitVec 64))
(declare-fun temp441_57 () (_ BitVec 64))
(declare-fun temp441_58 () (_ BitVec 64))
(declare-fun temp441_59 () (_ BitVec 64))
(declare-fun temp441_60 () (_ BitVec 64))
(declare-fun temp441_61 () (_ BitVec 64))
(declare-fun temp441_62 () (_ BitVec 64))
(declare-fun temp441_63 () (_ BitVec 64))
(declare-fun temp441_64 () (_ BitVec 64))
(declare-fun temp441_65 () (_ BitVec 64))
(declare-fun temp441_66 () (_ BitVec 64))
(declare-fun temp441_67 () (_ BitVec 64))
(declare-fun temp441_68 () (_ BitVec 64))
(declare-fun temp441_69 () (_ BitVec 64))
(declare-fun temp441_70 () (_ BitVec 64))
(declare-fun temp441_71 () (_ BitVec 64))
(declare-fun temp441_72 () (_ BitVec 64))
(declare-fun temp441_73 () (_ BitVec 64))
(declare-fun temp441_74 () (_ BitVec 64))
(declare-fun temp441_75 () (_ BitVec 64))
(declare-fun temp441_76 () (_ BitVec 64))
(declare-fun temp441_77 () (_ BitVec 64))
(declare-fun temp441_78 () (_ BitVec 64))
(declare-fun temp441_79 () (_ BitVec 64))
(declare-fun temp441_80 () (_ BitVec 64))
(declare-fun temp441_81 () (_ BitVec 64))
(declare-fun temp441_82 () (_ BitVec 64))
(declare-fun temp441_83 () (_ BitVec 64))
(declare-fun temp441_84 () (_ BitVec 64))
(declare-fun temp441_85 () (_ BitVec 64))
(declare-fun temp441_86 () (_ BitVec 64))
(declare-fun temp441_87 () (_ BitVec 64))
(declare-fun temp441_88 () (_ BitVec 64))
(declare-fun temp441_89 () (_ BitVec 64))
(declare-fun temp441_90 () (_ BitVec 64))
(declare-fun temp441_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp441_92 () (_ BitVec 64))
(declare-fun temp441_93 () (_ BitVec 64))
(declare-fun temp441_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp441_95 () (_ BitVec 64))
(declare-fun temp441_96 () (_ BitVec 64))
(declare-fun temp441_97 () (_ BitVec 64))
(declare-fun temp441_98 () (_ BitVec 64))
(declare-fun temp441_99 () (_ BitVec 64))
(declare-fun temp441_100 () (_ BitVec 64))
(declare-fun temp441_101 () (_ BitVec 64))
(declare-fun temp441_102 () (_ BitVec 64))
(declare-fun temp441_103 () (_ BitVec 64))
(declare-fun temp441_104 () (_ BitVec 64))
(declare-fun temp441_105 () (_ BitVec 64))
(declare-fun temp441_106 () (_ BitVec 64))
(declare-fun temp441_107 () (_ BitVec 64))
(declare-fun temp441_108 () (_ BitVec 64))
(declare-fun temp441_109 () (_ BitVec 64))
(declare-fun temp441_110 () (_ BitVec 64))
(declare-fun temp441_111 () (_ BitVec 64))
(declare-fun temp441_112 () (_ BitVec 64))
(declare-fun temp441_113 () (_ BitVec 64))
(declare-fun temp441_114 () (_ BitVec 64))
(declare-fun temp441_115 () (_ BitVec 64))
(declare-fun temp441_116 () (_ BitVec 64))
(declare-fun temp441_117 () (_ BitVec 64))
(declare-fun temp441_118 () (_ BitVec 64))
(declare-fun temp441_119 () (_ BitVec 64))
(declare-fun temp441_120 () (_ BitVec 64))
(declare-fun temp441_121 () (_ BitVec 64))
(declare-fun temp441_122 () (_ BitVec 64))
(declare-fun temp441_123 () (_ BitVec 64))
(declare-fun temp441_124 () (_ BitVec 64))
(declare-fun temp441_125 () (_ BitVec 64))
(declare-fun temp441_126 () (_ BitVec 64))
(declare-fun temp441_127 () (_ BitVec 64))
(declare-fun temp441_128 () (_ BitVec 64))
(declare-fun temp441_129 () (_ BitVec 64))
(declare-fun temp441_130 () (_ BitVec 64))
(declare-fun temp441_131 () (_ BitVec 64))
(declare-fun temp441_132 () (_ BitVec 64))
(declare-fun temp441_133 () (_ BitVec 64))
(declare-fun temp441_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp441_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp441_136 () (_ BitVec 64))
(declare-fun temp441_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp441_138 () (_ BitVec 64))
(declare-fun temp441_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp441_140 () (_ BitVec 64))
(declare-fun temp441_141 () (_ BitVec 64))
(declare-fun temp441_142 () (_ BitVec 64))
(declare-fun temp441_143 () (_ BitVec 64))
(declare-fun temp441_144 () (_ BitVec 64))
(declare-fun temp441_145 () (_ BitVec 64))
(declare-fun temp441_146 () (_ BitVec 64))
(declare-fun temp441_147 () (_ BitVec 64))
(declare-fun temp441_148 () (_ BitVec 64))
(declare-fun temp441_149 () (_ BitVec 64))
(declare-fun temp441_150 () (_ BitVec 64))
(declare-fun temp441_151 () (_ BitVec 64))
(declare-fun temp441_152 () (_ BitVec 64))
(declare-fun temp441_153 () (_ BitVec 64))
(declare-fun temp441_154 () (_ BitVec 64))
(declare-fun temp441_155 () (_ BitVec 64))
(declare-fun temp441_157 () (_ BitVec 64))
(declare-fun temp441_158 () (_ BitVec 64))
(declare-fun temp441_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp441_159 () (_ BitVec 64))
(declare-fun temp441_160 () (_ BitVec 64))
(declare-fun temp441_162 () (_ BitVec 64))
(declare-fun temp441_163 () (_ BitVec 64))
(declare-fun temp441_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp441_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp441_165 () (_ BitVec 64))
(declare-fun temp441_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp441_167 () (_ BitVec 64))
(declare-fun temp441_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp441_169 () (_ BitVec 64))
(declare-fun temp441_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp441_171 () (_ BitVec 64))
(declare-fun temp441_172 () (_ BitVec 64))
(declare-fun temp441_173 () (_ BitVec 64))
(declare-fun temp441_174 () (_ BitVec 64))
(declare-fun temp441_175 () (_ BitVec 64))
(declare-fun temp441_176 () (_ BitVec 64))
(declare-fun temp441_177 () (_ BitVec 64))
(declare-fun temp441_178 () (_ BitVec 64))
(declare-fun temp441_179 () (_ BitVec 64))
(declare-fun temp441_180 () (_ BitVec 64))
(declare-fun temp441_181 () (_ BitVec 64))
(declare-fun temp441_182 () (_ BitVec 64))
(declare-fun temp441_183 () (_ BitVec 64))
(declare-fun temp441_184 () (_ BitVec 64))
(declare-fun temp441_185 () (_ BitVec 64))
(declare-fun temp441_186 () (_ BitVec 64))
(declare-fun temp441_187 () (_ BitVec 64))
(declare-fun temp441_188 () (_ BitVec 64))
(declare-fun temp441_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp441_190 () (_ BitVec 64))
(declare-fun temp441_192 () (_ BitVec 64))
(declare-fun temp441_193 () (_ BitVec 64))
(declare-fun temp441_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp441_194 () (_ BitVec 64))
(declare-fun temp441_195 () (_ BitVec 64))
(declare-fun temp441_197 () (_ BitVec 64))
(declare-fun temp441_198 () (_ BitVec 64))
(declare-fun temp441_196 () (_ BitVec 64))
(declare-fun temp441_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp441_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp441_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp441_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp441_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp441_204 () (_ BitVec 64))
(declare-fun temp441_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp441_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp441_207 () (_ BitVec 64))
(declare-fun temp441_208 () (_ BitVec 64))
(declare-fun temp441_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp441_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp441_211 () (_ BitVec 64))
(declare-fun temp441_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp441_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp441_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4927888 () (_ BitVec 64))
(declare-fun var5190032 () (_ BitVec 64))
(declare-fun temp441_215 () (_ BitVec 64))
(assert (= temp441_1 #x0000000000000001))
(assert (= var77203 temp441_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp441_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp441_2)))
(assert (= temp441_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp441_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp441_4 #x0000000000000000))
(assert (= var210941 temp441_4))
(assert (= temp441_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp441_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp441_6 #x0000000000000000))
(assert (= var210986 temp441_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp441_7 #x0000000000000000))
(assert (= temp441_8 temp441_7))
(assert (= temp441_9 (select ARGNAME_padding_NAMEEND_VAL temp441_8)))
(assert (= temp441_10 #x0000000000000001))
(assert (= temp441_11 temp441_10))
(assert (= temp441_12 (select ARGNAME_padding_NAMEEND_VAL temp441_11)))
(assert (= temp441_13 #x0000000000000002))
(assert (= temp441_14 temp441_13))
(assert (= temp441_15 (select ARGNAME_padding_NAMEEND_VAL temp441_14)))
(assert (= temp441_16 #x0000000000000003))
(assert (= temp441_17 temp441_16))
(assert (= temp441_18 (select ARGNAME_padding_NAMEEND_VAL temp441_17)))
(assert (= temp441_19 #x0000000000000004))
(assert (= temp441_20 temp441_19))
(assert (= temp441_21 (select ARGNAME_padding_NAMEEND_VAL temp441_20)))
(assert (= temp441_22 #x0000000000000005))
(assert (= temp441_23 temp441_22))
(assert (= temp441_24 (select ARGNAME_padding_NAMEEND_VAL temp441_23)))
(assert (= temp441_25 #x0000000000000000))
(assert (= temp441_26 #x0000000000000000))
(assert (= temp441_27 temp441_26))
(assert (= temp441_28 (select ARGNAME_padding_NAMEEND_VAL temp441_27)))
(assert (= temp441_29 #x0000000000000000))
(assert (= temp441_30 #x0000000000000001))
(assert (= temp441_31 temp441_30))
(assert (= temp441_32 (select ARGNAME_padding_NAMEEND_VAL temp441_31)))
(assert (= temp441_33 #x0000000000000000))
(assert (= temp441_34 #x0000000000000002))
(assert (= temp441_35 temp441_34))
(assert (= temp441_36 (select ARGNAME_padding_NAMEEND_VAL temp441_35)))
(assert (= temp441_37 #x0000000000000000))
(assert (= temp441_38 #x0000000000000003))
(assert (= temp441_39 temp441_38))
(assert (= temp441_40 (select ARGNAME_padding_NAMEEND_VAL temp441_39)))
(assert (= temp441_41 #x0000000000000000))
(assert (= temp441_42 #x0000000000000004))
(assert (= temp441_43 temp441_42))
(assert (= temp441_44 (select ARGNAME_padding_NAMEEND_VAL temp441_43)))
(assert (= temp441_45 #x0000000000000000))
(assert (= temp441_46 #x0000000000000005))
(assert (= temp441_47 temp441_46))
(assert (= temp441_48 (select ARGNAME_padding_NAMEEND_VAL temp441_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp441_28 temp441_25)
             (bvslt temp441_32 temp441_29)
             (bvslt temp441_36 temp441_33)
             (bvslt temp441_40 temp441_37)
             (bvslt temp441_44 temp441_41)
             (bvslt temp441_48 temp441_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp441_49 #x0000000000000000))
(assert (= var1191714 temp441_49))
(assert (= temp441_50 #x0000000000000000))
(assert (= temp441_51 temp441_50))
(assert (= temp441_52 (select ARGNAME_output_padding_NAMEEND_VAL temp441_51)))
(assert (= temp441_53 #x0000000000000001))
(assert (= temp441_54 temp441_53))
(assert (= temp441_55 (select ARGNAME_output_padding_NAMEEND_VAL temp441_54)))
(assert (= temp441_56 #x0000000000000002))
(assert (= temp441_57 temp441_56))
(assert (= temp441_58 (select ARGNAME_output_padding_NAMEEND_VAL temp441_57)))
(assert (= temp441_59 #x0000000000000003))
(assert (= temp441_60 temp441_59))
(assert (= temp441_61 (select ARGNAME_output_padding_NAMEEND_VAL temp441_60)))
(assert (= temp441_62 #x0000000000000004))
(assert (= temp441_63 temp441_62))
(assert (= temp441_64 (select ARGNAME_output_padding_NAMEEND_VAL temp441_63)))
(assert (= temp441_65 #x0000000000000005))
(assert (= temp441_66 temp441_65))
(assert (= temp441_67 (select ARGNAME_output_padding_NAMEEND_VAL temp441_66)))
(assert (= temp441_68 #x0000000000000000))
(assert (= temp441_69 #x0000000000000000))
(assert (= temp441_70 temp441_69))
(assert (= temp441_71 (select ARGNAME_output_padding_NAMEEND_VAL temp441_70)))
(assert (= temp441_72 #x0000000000000000))
(assert (= temp441_73 #x0000000000000001))
(assert (= temp441_74 temp441_73))
(assert (= temp441_75 (select ARGNAME_output_padding_NAMEEND_VAL temp441_74)))
(assert (= temp441_76 #x0000000000000000))
(assert (= temp441_77 #x0000000000000002))
(assert (= temp441_78 temp441_77))
(assert (= temp441_79 (select ARGNAME_output_padding_NAMEEND_VAL temp441_78)))
(assert (= temp441_80 #x0000000000000000))
(assert (= temp441_81 #x0000000000000003))
(assert (= temp441_82 temp441_81))
(assert (= temp441_83 (select ARGNAME_output_padding_NAMEEND_VAL temp441_82)))
(assert (= temp441_84 #x0000000000000000))
(assert (= temp441_85 #x0000000000000004))
(assert (= temp441_86 temp441_85))
(assert (= temp441_87 (select ARGNAME_output_padding_NAMEEND_VAL temp441_86)))
(assert (= temp441_88 #x0000000000000000))
(assert (= temp441_89 #x0000000000000005))
(assert (= temp441_90 temp441_89))
(assert (= temp441_91 (select ARGNAME_output_padding_NAMEEND_VAL temp441_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp441_71 temp441_68)
             (bvslt temp441_75 temp441_72)
             (bvslt temp441_79 temp441_76)
             (bvslt temp441_83 temp441_80)
             (bvslt temp441_87 temp441_84)
             (bvslt temp441_91 temp441_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp441_92 #x0000000000000000))
(assert (= var1191725 temp441_92))
(assert (= temp441_93 #x0000000000000000))
(assert (= temp441_94 temp441_93))
(assert (= temp441_95 (select ARGNAME_stride_NAMEEND_VAL temp441_94)))
(assert (= temp441_96 #x0000000000000001))
(assert (= temp441_97 temp441_96))
(assert (= temp441_98 (select ARGNAME_stride_NAMEEND_VAL temp441_97)))
(assert (= temp441_99 #x0000000000000002))
(assert (= temp441_100 temp441_99))
(assert (= temp441_101 (select ARGNAME_stride_NAMEEND_VAL temp441_100)))
(assert (= temp441_102 #x0000000000000003))
(assert (= temp441_103 temp441_102))
(assert (= temp441_104 (select ARGNAME_stride_NAMEEND_VAL temp441_103)))
(assert (= temp441_105 #x0000000000000004))
(assert (= temp441_106 temp441_105))
(assert (= temp441_107 (select ARGNAME_stride_NAMEEND_VAL temp441_106)))
(assert (= temp441_108 #x0000000000000005))
(assert (= temp441_109 temp441_108))
(assert (= temp441_110 (select ARGNAME_stride_NAMEEND_VAL temp441_109)))
(assert (= temp441_111 #x0000000000000000))
(assert (= temp441_112 #x0000000000000000))
(assert (= temp441_113 temp441_112))
(assert (= temp441_114 (select ARGNAME_stride_NAMEEND_VAL temp441_113)))
(assert (= temp441_115 #x0000000000000000))
(assert (= temp441_116 #x0000000000000001))
(assert (= temp441_117 temp441_116))
(assert (= temp441_118 (select ARGNAME_stride_NAMEEND_VAL temp441_117)))
(assert (= temp441_119 #x0000000000000000))
(assert (= temp441_120 #x0000000000000002))
(assert (= temp441_121 temp441_120))
(assert (= temp441_122 (select ARGNAME_stride_NAMEEND_VAL temp441_121)))
(assert (= temp441_123 #x0000000000000000))
(assert (= temp441_124 #x0000000000000003))
(assert (= temp441_125 temp441_124))
(assert (= temp441_126 (select ARGNAME_stride_NAMEEND_VAL temp441_125)))
(assert (= temp441_127 #x0000000000000000))
(assert (= temp441_128 #x0000000000000004))
(assert (= temp441_129 temp441_128))
(assert (= temp441_130 (select ARGNAME_stride_NAMEEND_VAL temp441_129)))
(assert (= temp441_131 #x0000000000000000))
(assert (= temp441_132 #x0000000000000005))
(assert (= temp441_133 temp441_132))
(assert (= temp441_134 (select ARGNAME_stride_NAMEEND_VAL temp441_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp441_114 temp441_111)
             (bvsle temp441_118 temp441_115)
             (bvsle temp441_122 temp441_119)
             (bvsle temp441_126 temp441_123)
             (bvsle temp441_130 temp441_127)
             (bvsle temp441_134 temp441_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp441_135 #x0000000000000000))
(assert (= var1191735 temp441_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp441_136 #x0000000000000001))
(assert (= var1191747 temp441_136))
(assert (= temp441_137 #x0000000000000000))
(assert (= var1179826 temp441_137))
(assert (= temp441_138 #x0000000000000000))
(assert (= temp441_139 temp441_138))
(assert (= temp441_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp441_139)))
(assert (= temp441_141 #x0000000000000001))
(assert (= temp441_142 temp441_141))
(assert (= temp441_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp441_142)))
(assert (= temp441_144 #x0000000000000002))
(assert (= temp441_145 temp441_144))
(assert (= temp441_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp441_145)))
(assert (= temp441_147 #x0000000000000003))
(assert (= temp441_148 temp441_147))
(assert (= temp441_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp441_148)))
(assert (= temp441_150 #x0000000000000004))
(assert (= temp441_151 temp441_150))
(assert (= temp441_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp441_151)))
(assert (= temp441_153 #x0000000000000005))
(assert (= temp441_154 temp441_153))
(assert (= temp441_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp441_154)))
(assert (= temp441_157 var1179826))
(assert (= temp441_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp441_157)))
(assert (= temp441_156 temp441_158))
(assert (= var1191780
   (ite (bvslt temp441_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp441_159 #x0000000000000000))
(assert (= var1191780 temp441_159))
(assert (= temp441_160 #x0000000000000000))
(assert (= var1179826 temp441_160))
(assert (= temp441_162 var1179826))
(assert (= temp441_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp441_162)))
(assert (= temp441_161 temp441_163))
(assert (= var1191802 (bvsmod temp441_161 ARGNAME_groups_NAMEEND)))
(assert (= temp441_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp441_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp441_165 #x0000000000000001))
(assert (= var1191803 temp441_165))
(assert (= temp441_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp441_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp441_167 #x0000000000000001))
(assert (= var1191823 temp441_167))
(assert (= temp441_168 #x0000000000000001))
(assert (= var1180714 temp441_168))
(assert (= temp441_169 #x0000000000000000))
(assert (= temp441_170 temp441_169))
(assert (= temp441_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp441_170)))
(assert (= temp441_172 #x0000000000000001))
(assert (= temp441_173 temp441_172))
(assert (= temp441_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp441_173)))
(assert (= temp441_175 #x0000000000000002))
(assert (= temp441_176 temp441_175))
(assert (= temp441_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp441_176)))
(assert (= temp441_178 #x0000000000000003))
(assert (= temp441_179 temp441_178))
(assert (= temp441_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp441_179)))
(assert (= temp441_181 #x0000000000000004))
(assert (= temp441_182 temp441_181))
(assert (= temp441_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp441_182)))
(assert (= temp441_184 #x0000000000000005))
(assert (= temp441_185 temp441_184))
(assert (= temp441_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp441_185)))
(assert (= temp441_187 #x0000000000000000))
(assert (= temp441_188
   (ite (bvslt var1180714 temp441_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp441_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp441_188)))
(assert (= var1191831 temp441_189))
(assert (bvslt (ite (bvslt var1180714 temp441_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp441_190 #x0000000000000001))
(assert (= var1180714 temp441_190))
(assert (= temp441_192 var1180714))
(assert (= temp441_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp441_192)))
(assert (= temp441_191 temp441_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp441_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp441_194 #x0000000000000001))
(assert (= var1191836 temp441_194))
(assert (= temp441_195 #x0000000000000000))
(assert (= var1179826 temp441_195))
(assert (= temp441_197 var1179826))
(assert (= temp441_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp441_197)))
(assert (= temp441_196 temp441_198))
(assert (= temp441_199 #x0000000000000002))
(assert (= var1586025 temp441_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp441_200 #x0000000000000001))
(assert (= var1191993 temp441_200))
(assert (= temp441_201 #x0000000000000001))
(assert (= var2700303 temp441_201))
(assert (= temp441_202 #x0000000000000001))
(assert (= var2962447 temp441_202))
(assert (= temp441_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp441_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp441_204 #x0000000000000001))
(assert (= var211058 temp441_204))
(assert (= temp441_205 #x0000000000000001))
(assert (= var211188 temp441_205))
(assert (= var3879401 var211188))
(assert (= temp441_206 #x0000000000000000))
(assert (= var3866802 temp441_206))
(assert (= temp441_207 #x0000000000000000))
(assert (= temp441_208
   (ite (bvslt var3866802 temp441_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp441_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp441_208)))
(assert (= var3879420 temp441_209))
(assert (bvslt (ite (bvslt var3866802 temp441_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp441_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp441_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp441_211 #x0000000000000001))
(assert (= var3879421 temp441_211))
(assert (= temp441_212 #x0000000000000000))
(assert (= var4079423 temp441_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp441_213 #x0000000000000002))
(assert (= var4208259 temp441_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp441_214 #x0000000000000000))
(assert (= var4273820 temp441_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4927888 var211201))
(assert (= var5190032 var211201))
(assert (= temp441_215 #x0000000000000001))
(assert (= var211058 temp441_215))
(model-add temp441_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp441_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp441_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp441_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





