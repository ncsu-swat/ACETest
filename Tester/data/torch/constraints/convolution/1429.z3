(declare-fun temp10636_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10636_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10636_3 () (_ BitVec 64))
(declare-fun temp10636_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10636_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10636_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10636_7 () (_ BitVec 64))
(declare-fun temp10636_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10636_9 () (_ BitVec 64))
(declare-fun temp10636_10 () (_ BitVec 64))
(declare-fun temp10636_11 () (_ BitVec 64))
(declare-fun temp10636_12 () (_ BitVec 64))
(declare-fun temp10636_13 () (_ BitVec 64))
(declare-fun temp10636_14 () (_ BitVec 64))
(declare-fun temp10636_15 () (_ BitVec 64))
(declare-fun temp10636_16 () (_ BitVec 64))
(declare-fun temp10636_17 () (_ BitVec 64))
(declare-fun temp10636_18 () (_ BitVec 64))
(declare-fun temp10636_19 () (_ BitVec 64))
(declare-fun temp10636_20 () (_ BitVec 64))
(declare-fun temp10636_21 () (_ BitVec 64))
(declare-fun temp10636_22 () (_ BitVec 64))
(declare-fun temp10636_23 () (_ BitVec 64))
(declare-fun temp10636_24 () (_ BitVec 64))
(declare-fun temp10636_25 () (_ BitVec 64))
(declare-fun temp10636_26 () (_ BitVec 64))
(declare-fun temp10636_27 () (_ BitVec 64))
(declare-fun temp10636_28 () (_ BitVec 64))
(declare-fun temp10636_29 () (_ BitVec 64))
(declare-fun temp10636_30 () (_ BitVec 64))
(declare-fun temp10636_31 () (_ BitVec 64))
(declare-fun temp10636_32 () (_ BitVec 64))
(declare-fun temp10636_33 () (_ BitVec 64))
(declare-fun temp10636_34 () (_ BitVec 64))
(declare-fun temp10636_35 () (_ BitVec 64))
(declare-fun temp10636_36 () (_ BitVec 64))
(declare-fun temp10636_37 () (_ BitVec 64))
(declare-fun temp10636_38 () (_ BitVec 64))
(declare-fun temp10636_39 () (_ BitVec 64))
(declare-fun temp10636_40 () (_ BitVec 64))
(declare-fun temp10636_41 () (_ BitVec 64))
(declare-fun temp10636_42 () (_ BitVec 64))
(declare-fun temp10636_43 () (_ BitVec 64))
(declare-fun temp10636_44 () (_ BitVec 64))
(declare-fun temp10636_45 () (_ BitVec 64))
(declare-fun temp10636_46 () (_ BitVec 64))
(declare-fun temp10636_47 () (_ BitVec 64))
(declare-fun temp10636_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10636_49 () (_ BitVec 64))
(declare-fun temp10636_50 () (_ BitVec 64))
(declare-fun temp10636_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10636_52 () (_ BitVec 64))
(declare-fun temp10636_53 () (_ BitVec 64))
(declare-fun temp10636_54 () (_ BitVec 64))
(declare-fun temp10636_55 () (_ BitVec 64))
(declare-fun temp10636_56 () (_ BitVec 64))
(declare-fun temp10636_57 () (_ BitVec 64))
(declare-fun temp10636_58 () (_ BitVec 64))
(declare-fun temp10636_59 () (_ BitVec 64))
(declare-fun temp10636_60 () (_ BitVec 64))
(declare-fun temp10636_61 () (_ BitVec 64))
(declare-fun temp10636_62 () (_ BitVec 64))
(declare-fun temp10636_63 () (_ BitVec 64))
(declare-fun temp10636_64 () (_ BitVec 64))
(declare-fun temp10636_65 () (_ BitVec 64))
(declare-fun temp10636_66 () (_ BitVec 64))
(declare-fun temp10636_67 () (_ BitVec 64))
(declare-fun temp10636_68 () (_ BitVec 64))
(declare-fun temp10636_69 () (_ BitVec 64))
(declare-fun temp10636_70 () (_ BitVec 64))
(declare-fun temp10636_71 () (_ BitVec 64))
(declare-fun temp10636_72 () (_ BitVec 64))
(declare-fun temp10636_73 () (_ BitVec 64))
(declare-fun temp10636_74 () (_ BitVec 64))
(declare-fun temp10636_75 () (_ BitVec 64))
(declare-fun temp10636_76 () (_ BitVec 64))
(declare-fun temp10636_77 () (_ BitVec 64))
(declare-fun temp10636_78 () (_ BitVec 64))
(declare-fun temp10636_79 () (_ BitVec 64))
(declare-fun temp10636_80 () (_ BitVec 64))
(declare-fun temp10636_81 () (_ BitVec 64))
(declare-fun temp10636_82 () (_ BitVec 64))
(declare-fun temp10636_83 () (_ BitVec 64))
(declare-fun temp10636_84 () (_ BitVec 64))
(declare-fun temp10636_85 () (_ BitVec 64))
(declare-fun temp10636_86 () (_ BitVec 64))
(declare-fun temp10636_87 () (_ BitVec 64))
(declare-fun temp10636_88 () (_ BitVec 64))
(declare-fun temp10636_89 () (_ BitVec 64))
(declare-fun temp10636_90 () (_ BitVec 64))
(declare-fun temp10636_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10636_92 () (_ BitVec 64))
(declare-fun temp10636_93 () (_ BitVec 64))
(declare-fun temp10636_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10636_95 () (_ BitVec 64))
(declare-fun temp10636_96 () (_ BitVec 64))
(declare-fun temp10636_97 () (_ BitVec 64))
(declare-fun temp10636_98 () (_ BitVec 64))
(declare-fun temp10636_99 () (_ BitVec 64))
(declare-fun temp10636_100 () (_ BitVec 64))
(declare-fun temp10636_101 () (_ BitVec 64))
(declare-fun temp10636_102 () (_ BitVec 64))
(declare-fun temp10636_103 () (_ BitVec 64))
(declare-fun temp10636_104 () (_ BitVec 64))
(declare-fun temp10636_105 () (_ BitVec 64))
(declare-fun temp10636_106 () (_ BitVec 64))
(declare-fun temp10636_107 () (_ BitVec 64))
(declare-fun temp10636_108 () (_ BitVec 64))
(declare-fun temp10636_109 () (_ BitVec 64))
(declare-fun temp10636_110 () (_ BitVec 64))
(declare-fun temp10636_111 () (_ BitVec 64))
(declare-fun temp10636_112 () (_ BitVec 64))
(declare-fun temp10636_113 () (_ BitVec 64))
(declare-fun temp10636_114 () (_ BitVec 64))
(declare-fun temp10636_115 () (_ BitVec 64))
(declare-fun temp10636_116 () (_ BitVec 64))
(declare-fun temp10636_117 () (_ BitVec 64))
(declare-fun temp10636_118 () (_ BitVec 64))
(declare-fun temp10636_119 () (_ BitVec 64))
(declare-fun temp10636_120 () (_ BitVec 64))
(declare-fun temp10636_121 () (_ BitVec 64))
(declare-fun temp10636_122 () (_ BitVec 64))
(declare-fun temp10636_123 () (_ BitVec 64))
(declare-fun temp10636_124 () (_ BitVec 64))
(declare-fun temp10636_125 () (_ BitVec 64))
(declare-fun temp10636_126 () (_ BitVec 64))
(declare-fun temp10636_127 () (_ BitVec 64))
(declare-fun temp10636_128 () (_ BitVec 64))
(declare-fun temp10636_129 () (_ BitVec 64))
(declare-fun temp10636_130 () (_ BitVec 64))
(declare-fun temp10636_131 () (_ BitVec 64))
(declare-fun temp10636_132 () (_ BitVec 64))
(declare-fun temp10636_133 () (_ BitVec 64))
(declare-fun temp10636_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10636_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10636_136 () (_ BitVec 64))
(declare-fun temp10636_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10636_138 () (_ BitVec 64))
(declare-fun temp10636_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10636_140 () (_ BitVec 64))
(declare-fun temp10636_141 () (_ BitVec 64))
(declare-fun temp10636_142 () (_ BitVec 64))
(declare-fun temp10636_143 () (_ BitVec 64))
(declare-fun temp10636_144 () (_ BitVec 64))
(declare-fun temp10636_145 () (_ BitVec 64))
(declare-fun temp10636_146 () (_ BitVec 64))
(declare-fun temp10636_147 () (_ BitVec 64))
(declare-fun temp10636_148 () (_ BitVec 64))
(declare-fun temp10636_149 () (_ BitVec 64))
(declare-fun temp10636_150 () (_ BitVec 64))
(declare-fun temp10636_151 () (_ BitVec 64))
(declare-fun temp10636_152 () (_ BitVec 64))
(declare-fun temp10636_153 () (_ BitVec 64))
(declare-fun temp10636_154 () (_ BitVec 64))
(declare-fun temp10636_155 () (_ BitVec 64))
(declare-fun temp10636_157 () (_ BitVec 64))
(declare-fun temp10636_158 () (_ BitVec 64))
(declare-fun temp10636_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10636_159 () (_ BitVec 64))
(declare-fun temp10636_160 () (_ BitVec 64))
(declare-fun temp10636_162 () (_ BitVec 64))
(declare-fun temp10636_163 () (_ BitVec 64))
(declare-fun temp10636_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10636_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10636_165 () (_ BitVec 64))
(declare-fun temp10636_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10636_167 () (_ BitVec 64))
(declare-fun temp10636_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10636_169 () (_ BitVec 64))
(declare-fun temp10636_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10636_171 () (_ BitVec 64))
(declare-fun temp10636_172 () (_ BitVec 64))
(declare-fun temp10636_173 () (_ BitVec 64))
(declare-fun temp10636_174 () (_ BitVec 64))
(declare-fun temp10636_175 () (_ BitVec 64))
(declare-fun temp10636_176 () (_ BitVec 64))
(declare-fun temp10636_177 () (_ BitVec 64))
(declare-fun temp10636_178 () (_ BitVec 64))
(declare-fun temp10636_179 () (_ BitVec 64))
(declare-fun temp10636_180 () (_ BitVec 64))
(declare-fun temp10636_181 () (_ BitVec 64))
(declare-fun temp10636_182 () (_ BitVec 64))
(declare-fun temp10636_183 () (_ BitVec 64))
(declare-fun temp10636_184 () (_ BitVec 64))
(declare-fun temp10636_185 () (_ BitVec 64))
(declare-fun temp10636_186 () (_ BitVec 64))
(declare-fun temp10636_187 () (_ BitVec 64))
(declare-fun temp10636_188 () (_ BitVec 64))
(declare-fun temp10636_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10636_190 () (_ BitVec 64))
(declare-fun temp10636_192 () (_ BitVec 64))
(declare-fun temp10636_193 () (_ BitVec 64))
(declare-fun temp10636_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10636_194 () (_ BitVec 64))
(declare-fun temp10636_195 () (_ BitVec 64))
(declare-fun temp10636_197 () (_ BitVec 64))
(declare-fun temp10636_198 () (_ BitVec 64))
(declare-fun temp10636_196 () (_ BitVec 64))
(declare-fun temp10636_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10636_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10636_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10636_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10636_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10636_204 () (_ BitVec 64))
(declare-fun temp10636_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10636_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10636_207 () (_ BitVec 64))
(declare-fun temp10636_208 () (_ BitVec 64))
(declare-fun temp10636_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10636_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10636_211 () (_ BitVec 64))
(declare-fun temp10636_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10636_213 () (_ BitVec 64))
(declare-fun temp10636_214 () (_ BitVec 64))
(declare-fun temp10636_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10636_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10636_217 () (_ BitVec 64))
(declare-fun temp10636_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10636_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10636_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp10636_222 () (_ BitVec 64))
(declare-fun temp10636_221 () (_ BitVec 64))
(declare-fun temp10636_223 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp10636_224 () (_ BitVec 64))
(declare-fun temp10636_225 () (_ BitVec 64))
(declare-fun temp10636_226 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp10636_227 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp10636_228 () (_ BitVec 64))
(declare-fun temp10636_230 () (_ BitVec 64))
(declare-fun temp10636_229 () (_ BitVec 64))
(declare-fun temp10636_231 () (_ BitVec 64))
(declare-fun temp10636_232 () (_ BitVec 64))
(declare-fun var5649172 () (_ BitVec 64))
(declare-fun var5649139 () (_ BitVec 64))
(declare-fun var5517703 () (_ BitVec 64))
(declare-fun var5517699 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp10636_233 () (_ BitVec 64))
(assert (= temp10636_1 #x0000000000000001))
(assert (= var77203 temp10636_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10636_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10636_2)))
(assert (= temp10636_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10636_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10636_4 #x0000000000000000))
(assert (= var210941 temp10636_4))
(assert (= temp10636_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10636_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10636_6 #x0000000000000000))
(assert (= var210986 temp10636_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10636_7 #x0000000000000000))
(assert (= temp10636_8 temp10636_7))
(assert (= temp10636_9 (select ARGNAME_padding_NAMEEND_VAL temp10636_8)))
(assert (= temp10636_10 #x0000000000000001))
(assert (= temp10636_11 temp10636_10))
(assert (= temp10636_12 (select ARGNAME_padding_NAMEEND_VAL temp10636_11)))
(assert (= temp10636_13 #x0000000000000002))
(assert (= temp10636_14 temp10636_13))
(assert (= temp10636_15 (select ARGNAME_padding_NAMEEND_VAL temp10636_14)))
(assert (= temp10636_16 #x0000000000000003))
(assert (= temp10636_17 temp10636_16))
(assert (= temp10636_18 (select ARGNAME_padding_NAMEEND_VAL temp10636_17)))
(assert (= temp10636_19 #x0000000000000004))
(assert (= temp10636_20 temp10636_19))
(assert (= temp10636_21 (select ARGNAME_padding_NAMEEND_VAL temp10636_20)))
(assert (= temp10636_22 #x0000000000000005))
(assert (= temp10636_23 temp10636_22))
(assert (= temp10636_24 (select ARGNAME_padding_NAMEEND_VAL temp10636_23)))
(assert (= temp10636_25 #x0000000000000000))
(assert (= temp10636_26 #x0000000000000000))
(assert (= temp10636_27 temp10636_26))
(assert (= temp10636_28 (select ARGNAME_padding_NAMEEND_VAL temp10636_27)))
(assert (= temp10636_29 #x0000000000000000))
(assert (= temp10636_30 #x0000000000000001))
(assert (= temp10636_31 temp10636_30))
(assert (= temp10636_32 (select ARGNAME_padding_NAMEEND_VAL temp10636_31)))
(assert (= temp10636_33 #x0000000000000000))
(assert (= temp10636_34 #x0000000000000002))
(assert (= temp10636_35 temp10636_34))
(assert (= temp10636_36 (select ARGNAME_padding_NAMEEND_VAL temp10636_35)))
(assert (= temp10636_37 #x0000000000000000))
(assert (= temp10636_38 #x0000000000000003))
(assert (= temp10636_39 temp10636_38))
(assert (= temp10636_40 (select ARGNAME_padding_NAMEEND_VAL temp10636_39)))
(assert (= temp10636_41 #x0000000000000000))
(assert (= temp10636_42 #x0000000000000004))
(assert (= temp10636_43 temp10636_42))
(assert (= temp10636_44 (select ARGNAME_padding_NAMEEND_VAL temp10636_43)))
(assert (= temp10636_45 #x0000000000000000))
(assert (= temp10636_46 #x0000000000000005))
(assert (= temp10636_47 temp10636_46))
(assert (= temp10636_48 (select ARGNAME_padding_NAMEEND_VAL temp10636_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10636_28 temp10636_25)
             (bvslt temp10636_32 temp10636_29)
             (bvslt temp10636_36 temp10636_33)
             (bvslt temp10636_40 temp10636_37)
             (bvslt temp10636_44 temp10636_41)
             (bvslt temp10636_48 temp10636_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10636_49 #x0000000000000000))
(assert (= var1191714 temp10636_49))
(assert (= temp10636_50 #x0000000000000000))
(assert (= temp10636_51 temp10636_50))
(assert (= temp10636_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10636_51)))
(assert (= temp10636_53 #x0000000000000001))
(assert (= temp10636_54 temp10636_53))
(assert (= temp10636_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10636_54)))
(assert (= temp10636_56 #x0000000000000002))
(assert (= temp10636_57 temp10636_56))
(assert (= temp10636_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10636_57)))
(assert (= temp10636_59 #x0000000000000003))
(assert (= temp10636_60 temp10636_59))
(assert (= temp10636_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10636_60)))
(assert (= temp10636_62 #x0000000000000004))
(assert (= temp10636_63 temp10636_62))
(assert (= temp10636_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10636_63)))
(assert (= temp10636_65 #x0000000000000005))
(assert (= temp10636_66 temp10636_65))
(assert (= temp10636_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10636_66)))
(assert (= temp10636_68 #x0000000000000000))
(assert (= temp10636_69 #x0000000000000000))
(assert (= temp10636_70 temp10636_69))
(assert (= temp10636_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10636_70)))
(assert (= temp10636_72 #x0000000000000000))
(assert (= temp10636_73 #x0000000000000001))
(assert (= temp10636_74 temp10636_73))
(assert (= temp10636_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10636_74)))
(assert (= temp10636_76 #x0000000000000000))
(assert (= temp10636_77 #x0000000000000002))
(assert (= temp10636_78 temp10636_77))
(assert (= temp10636_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10636_78)))
(assert (= temp10636_80 #x0000000000000000))
(assert (= temp10636_81 #x0000000000000003))
(assert (= temp10636_82 temp10636_81))
(assert (= temp10636_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10636_82)))
(assert (= temp10636_84 #x0000000000000000))
(assert (= temp10636_85 #x0000000000000004))
(assert (= temp10636_86 temp10636_85))
(assert (= temp10636_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10636_86)))
(assert (= temp10636_88 #x0000000000000000))
(assert (= temp10636_89 #x0000000000000005))
(assert (= temp10636_90 temp10636_89))
(assert (= temp10636_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10636_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10636_71 temp10636_68)
             (bvslt temp10636_75 temp10636_72)
             (bvslt temp10636_79 temp10636_76)
             (bvslt temp10636_83 temp10636_80)
             (bvslt temp10636_87 temp10636_84)
             (bvslt temp10636_91 temp10636_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10636_92 #x0000000000000000))
(assert (= var1191725 temp10636_92))
(assert (= temp10636_93 #x0000000000000000))
(assert (= temp10636_94 temp10636_93))
(assert (= temp10636_95 (select ARGNAME_stride_NAMEEND_VAL temp10636_94)))
(assert (= temp10636_96 #x0000000000000001))
(assert (= temp10636_97 temp10636_96))
(assert (= temp10636_98 (select ARGNAME_stride_NAMEEND_VAL temp10636_97)))
(assert (= temp10636_99 #x0000000000000002))
(assert (= temp10636_100 temp10636_99))
(assert (= temp10636_101 (select ARGNAME_stride_NAMEEND_VAL temp10636_100)))
(assert (= temp10636_102 #x0000000000000003))
(assert (= temp10636_103 temp10636_102))
(assert (= temp10636_104 (select ARGNAME_stride_NAMEEND_VAL temp10636_103)))
(assert (= temp10636_105 #x0000000000000004))
(assert (= temp10636_106 temp10636_105))
(assert (= temp10636_107 (select ARGNAME_stride_NAMEEND_VAL temp10636_106)))
(assert (= temp10636_108 #x0000000000000005))
(assert (= temp10636_109 temp10636_108))
(assert (= temp10636_110 (select ARGNAME_stride_NAMEEND_VAL temp10636_109)))
(assert (= temp10636_111 #x0000000000000000))
(assert (= temp10636_112 #x0000000000000000))
(assert (= temp10636_113 temp10636_112))
(assert (= temp10636_114 (select ARGNAME_stride_NAMEEND_VAL temp10636_113)))
(assert (= temp10636_115 #x0000000000000000))
(assert (= temp10636_116 #x0000000000000001))
(assert (= temp10636_117 temp10636_116))
(assert (= temp10636_118 (select ARGNAME_stride_NAMEEND_VAL temp10636_117)))
(assert (= temp10636_119 #x0000000000000000))
(assert (= temp10636_120 #x0000000000000002))
(assert (= temp10636_121 temp10636_120))
(assert (= temp10636_122 (select ARGNAME_stride_NAMEEND_VAL temp10636_121)))
(assert (= temp10636_123 #x0000000000000000))
(assert (= temp10636_124 #x0000000000000003))
(assert (= temp10636_125 temp10636_124))
(assert (= temp10636_126 (select ARGNAME_stride_NAMEEND_VAL temp10636_125)))
(assert (= temp10636_127 #x0000000000000000))
(assert (= temp10636_128 #x0000000000000004))
(assert (= temp10636_129 temp10636_128))
(assert (= temp10636_130 (select ARGNAME_stride_NAMEEND_VAL temp10636_129)))
(assert (= temp10636_131 #x0000000000000000))
(assert (= temp10636_132 #x0000000000000005))
(assert (= temp10636_133 temp10636_132))
(assert (= temp10636_134 (select ARGNAME_stride_NAMEEND_VAL temp10636_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10636_114 temp10636_111)
             (bvsle temp10636_118 temp10636_115)
             (bvsle temp10636_122 temp10636_119)
             (bvsle temp10636_126 temp10636_123)
             (bvsle temp10636_130 temp10636_127)
             (bvsle temp10636_134 temp10636_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10636_135 #x0000000000000000))
(assert (= var1191735 temp10636_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10636_136 #x0000000000000001))
(assert (= var1191747 temp10636_136))
(assert (= temp10636_137 #x0000000000000000))
(assert (= var1179826 temp10636_137))
(assert (= temp10636_138 #x0000000000000000))
(assert (= temp10636_139 temp10636_138))
(assert (= temp10636_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10636_139)))
(assert (= temp10636_141 #x0000000000000001))
(assert (= temp10636_142 temp10636_141))
(assert (= temp10636_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10636_142)))
(assert (= temp10636_144 #x0000000000000002))
(assert (= temp10636_145 temp10636_144))
(assert (= temp10636_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10636_145)))
(assert (= temp10636_147 #x0000000000000003))
(assert (= temp10636_148 temp10636_147))
(assert (= temp10636_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10636_148)))
(assert (= temp10636_150 #x0000000000000004))
(assert (= temp10636_151 temp10636_150))
(assert (= temp10636_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10636_151)))
(assert (= temp10636_153 #x0000000000000005))
(assert (= temp10636_154 temp10636_153))
(assert (= temp10636_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10636_154)))
(assert (= temp10636_157 var1179826))
(assert (= temp10636_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10636_157)))
(assert (= temp10636_156 temp10636_158))
(assert (= var1191780
   (ite (bvslt temp10636_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10636_159 #x0000000000000000))
(assert (= var1191780 temp10636_159))
(assert (= temp10636_160 #x0000000000000000))
(assert (= var1179826 temp10636_160))
(assert (= temp10636_162 var1179826))
(assert (= temp10636_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10636_162)))
(assert (= temp10636_161 temp10636_163))
(assert (= var1191802 (bvsmod temp10636_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10636_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10636_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10636_165 #x0000000000000001))
(assert (= var1191803 temp10636_165))
(assert (= temp10636_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10636_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10636_167 #x0000000000000001))
(assert (= var1191823 temp10636_167))
(assert (= temp10636_168 #x0000000000000001))
(assert (= var1180714 temp10636_168))
(assert (= temp10636_169 #x0000000000000000))
(assert (= temp10636_170 temp10636_169))
(assert (= temp10636_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10636_170)))
(assert (= temp10636_172 #x0000000000000001))
(assert (= temp10636_173 temp10636_172))
(assert (= temp10636_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10636_173)))
(assert (= temp10636_175 #x0000000000000002))
(assert (= temp10636_176 temp10636_175))
(assert (= temp10636_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10636_176)))
(assert (= temp10636_178 #x0000000000000003))
(assert (= temp10636_179 temp10636_178))
(assert (= temp10636_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10636_179)))
(assert (= temp10636_181 #x0000000000000004))
(assert (= temp10636_182 temp10636_181))
(assert (= temp10636_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10636_182)))
(assert (= temp10636_184 #x0000000000000005))
(assert (= temp10636_185 temp10636_184))
(assert (= temp10636_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10636_185)))
(assert (= temp10636_187 #x0000000000000000))
(assert (= temp10636_188
   (ite (bvslt var1180714 temp10636_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10636_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10636_188)))
(assert (= var1191831 temp10636_189))
(assert (bvslt (ite (bvslt var1180714 temp10636_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10636_190 #x0000000000000001))
(assert (= var1180714 temp10636_190))
(assert (= temp10636_192 var1180714))
(assert (= temp10636_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10636_192)))
(assert (= temp10636_191 temp10636_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10636_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10636_194 #x0000000000000001))
(assert (= var1191836 temp10636_194))
(assert (= temp10636_195 #x0000000000000000))
(assert (= var1179826 temp10636_195))
(assert (= temp10636_197 var1179826))
(assert (= temp10636_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10636_197)))
(assert (= temp10636_196 temp10636_198))
(assert (= temp10636_199 #x0000000000000002))
(assert (= var1586025 temp10636_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10636_200 #x0000000000000001))
(assert (= var1191993 temp10636_200))
(assert (= temp10636_201 #x0000000000000001))
(assert (= var2700303 temp10636_201))
(assert (= temp10636_202 #x0000000000000001))
(assert (= var2962447 temp10636_202))
(assert (= temp10636_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10636_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10636_204 #x0000000000000001))
(assert (= var211058 temp10636_204))
(assert (= temp10636_205 #x0000000000000001))
(assert (= var211188 temp10636_205))
(assert (= var3879401 var211188))
(assert (= temp10636_206 #x0000000000000000))
(assert (= var3866802 temp10636_206))
(assert (= temp10636_207 #x0000000000000000))
(assert (= temp10636_208
   (ite (bvslt var3866802 temp10636_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10636_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10636_208)))
(assert (= var3879420 temp10636_209))
(assert (bvslt (ite (bvslt var3866802 temp10636_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10636_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10636_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10636_211 #x0000000000000000))
(assert (= var3879421 temp10636_211))
(assert (= temp10636_212 #x0000000000000001))
(assert (= var3867690 temp10636_212))
(assert (= temp10636_213 #x0000000000000000))
(assert (= temp10636_214
   (ite (bvslt var3867690 temp10636_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10636_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10636_214)))
(assert (= var3879423 temp10636_215))
(assert (bvslt (ite (bvslt var3867690 temp10636_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10636_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10636_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10636_217 #x0000000000000001))
(assert (= var3879424 temp10636_217))
(assert (= temp10636_218 #x0000000000000000))
(assert (= var4133117 temp10636_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10636_219 #x0000000000000002))
(assert (= var4339331 temp10636_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10636_220 #x0000000000000000))
(assert (= var4404892 temp10636_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp10636_222 #xffffffffffffffff))
(assert (= temp10636_221 temp10636_222))
(assert (= temp10636_223 #x0000000000000001))
(assert (= var197674 temp10636_223))
(assert (= temp10636_224 #x0000000000000000))
(assert (= temp10636_225
   (ite (bvslt var197674 temp10636_224)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp10636_226 (select ARGNAME_input_NAMEEND_DIMSIZE temp10636_225)))
(assert (= var211595 temp10636_226))
(assert (bvslt (ite (bvslt var197674 temp10636_224)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10636_227 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp10636_227) #x0000000000000001 #x0000000000000000)))
(assert (= temp10636_228 #x0000000000000001))
(assert (= var211596 temp10636_228))
(assert (= temp10636_230 #xffffffffffffffff))
(assert (= temp10636_229 temp10636_230))
(assert (= temp10636_231 #x0000000000000001))
(assert (= var211058 temp10636_231))
(assert (= temp10636_232 #x0000000000000000))
(assert (= var5649172 temp10636_232))
(assert (= var5649139 var5649172))
(assert (= var5517703 var5649139))
(assert (= var5517699 var5517703))
(assert (= var212669 var5517699))
(assert (= temp10636_233 #x0000000000000000))
(assert (= var212669 temp10636_233))
(model-add temp10636_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10636_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10636_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10636_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




