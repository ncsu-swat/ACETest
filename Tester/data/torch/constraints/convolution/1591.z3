(declare-fun temp10916_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp10916_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp10916_3 () (_ BitVec 64))
(declare-fun temp10916_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp10916_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp10916_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp10916_7 () (_ BitVec 64))
(declare-fun temp10916_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10916_9 () (_ BitVec 64))
(declare-fun temp10916_10 () (_ BitVec 64))
(declare-fun temp10916_11 () (_ BitVec 64))
(declare-fun temp10916_12 () (_ BitVec 64))
(declare-fun temp10916_13 () (_ BitVec 64))
(declare-fun temp10916_14 () (_ BitVec 64))
(declare-fun temp10916_15 () (_ BitVec 64))
(declare-fun temp10916_16 () (_ BitVec 64))
(declare-fun temp10916_17 () (_ BitVec 64))
(declare-fun temp10916_18 () (_ BitVec 64))
(declare-fun temp10916_19 () (_ BitVec 64))
(declare-fun temp10916_20 () (_ BitVec 64))
(declare-fun temp10916_21 () (_ BitVec 64))
(declare-fun temp10916_22 () (_ BitVec 64))
(declare-fun temp10916_23 () (_ BitVec 64))
(declare-fun temp10916_24 () (_ BitVec 64))
(declare-fun temp10916_25 () (_ BitVec 64))
(declare-fun temp10916_26 () (_ BitVec 64))
(declare-fun temp10916_27 () (_ BitVec 64))
(declare-fun temp10916_28 () (_ BitVec 64))
(declare-fun temp10916_29 () (_ BitVec 64))
(declare-fun temp10916_30 () (_ BitVec 64))
(declare-fun temp10916_31 () (_ BitVec 64))
(declare-fun temp10916_32 () (_ BitVec 64))
(declare-fun temp10916_33 () (_ BitVec 64))
(declare-fun temp10916_34 () (_ BitVec 64))
(declare-fun temp10916_35 () (_ BitVec 64))
(declare-fun temp10916_36 () (_ BitVec 64))
(declare-fun temp10916_37 () (_ BitVec 64))
(declare-fun temp10916_38 () (_ BitVec 64))
(declare-fun temp10916_39 () (_ BitVec 64))
(declare-fun temp10916_40 () (_ BitVec 64))
(declare-fun temp10916_41 () (_ BitVec 64))
(declare-fun temp10916_42 () (_ BitVec 64))
(declare-fun temp10916_43 () (_ BitVec 64))
(declare-fun temp10916_44 () (_ BitVec 64))
(declare-fun temp10916_45 () (_ BitVec 64))
(declare-fun temp10916_46 () (_ BitVec 64))
(declare-fun temp10916_47 () (_ BitVec 64))
(declare-fun temp10916_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp10916_49 () (_ BitVec 64))
(declare-fun temp10916_50 () (_ BitVec 64))
(declare-fun temp10916_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10916_52 () (_ BitVec 64))
(declare-fun temp10916_53 () (_ BitVec 64))
(declare-fun temp10916_54 () (_ BitVec 64))
(declare-fun temp10916_55 () (_ BitVec 64))
(declare-fun temp10916_56 () (_ BitVec 64))
(declare-fun temp10916_57 () (_ BitVec 64))
(declare-fun temp10916_58 () (_ BitVec 64))
(declare-fun temp10916_59 () (_ BitVec 64))
(declare-fun temp10916_60 () (_ BitVec 64))
(declare-fun temp10916_61 () (_ BitVec 64))
(declare-fun temp10916_62 () (_ BitVec 64))
(declare-fun temp10916_63 () (_ BitVec 64))
(declare-fun temp10916_64 () (_ BitVec 64))
(declare-fun temp10916_65 () (_ BitVec 64))
(declare-fun temp10916_66 () (_ BitVec 64))
(declare-fun temp10916_67 () (_ BitVec 64))
(declare-fun temp10916_68 () (_ BitVec 64))
(declare-fun temp10916_69 () (_ BitVec 64))
(declare-fun temp10916_70 () (_ BitVec 64))
(declare-fun temp10916_71 () (_ BitVec 64))
(declare-fun temp10916_72 () (_ BitVec 64))
(declare-fun temp10916_73 () (_ BitVec 64))
(declare-fun temp10916_74 () (_ BitVec 64))
(declare-fun temp10916_75 () (_ BitVec 64))
(declare-fun temp10916_76 () (_ BitVec 64))
(declare-fun temp10916_77 () (_ BitVec 64))
(declare-fun temp10916_78 () (_ BitVec 64))
(declare-fun temp10916_79 () (_ BitVec 64))
(declare-fun temp10916_80 () (_ BitVec 64))
(declare-fun temp10916_81 () (_ BitVec 64))
(declare-fun temp10916_82 () (_ BitVec 64))
(declare-fun temp10916_83 () (_ BitVec 64))
(declare-fun temp10916_84 () (_ BitVec 64))
(declare-fun temp10916_85 () (_ BitVec 64))
(declare-fun temp10916_86 () (_ BitVec 64))
(declare-fun temp10916_87 () (_ BitVec 64))
(declare-fun temp10916_88 () (_ BitVec 64))
(declare-fun temp10916_89 () (_ BitVec 64))
(declare-fun temp10916_90 () (_ BitVec 64))
(declare-fun temp10916_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp10916_92 () (_ BitVec 64))
(declare-fun temp10916_93 () (_ BitVec 64))
(declare-fun temp10916_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10916_95 () (_ BitVec 64))
(declare-fun temp10916_96 () (_ BitVec 64))
(declare-fun temp10916_97 () (_ BitVec 64))
(declare-fun temp10916_98 () (_ BitVec 64))
(declare-fun temp10916_99 () (_ BitVec 64))
(declare-fun temp10916_100 () (_ BitVec 64))
(declare-fun temp10916_101 () (_ BitVec 64))
(declare-fun temp10916_102 () (_ BitVec 64))
(declare-fun temp10916_103 () (_ BitVec 64))
(declare-fun temp10916_104 () (_ BitVec 64))
(declare-fun temp10916_105 () (_ BitVec 64))
(declare-fun temp10916_106 () (_ BitVec 64))
(declare-fun temp10916_107 () (_ BitVec 64))
(declare-fun temp10916_108 () (_ BitVec 64))
(declare-fun temp10916_109 () (_ BitVec 64))
(declare-fun temp10916_110 () (_ BitVec 64))
(declare-fun temp10916_111 () (_ BitVec 64))
(declare-fun temp10916_112 () (_ BitVec 64))
(declare-fun temp10916_113 () (_ BitVec 64))
(declare-fun temp10916_114 () (_ BitVec 64))
(declare-fun temp10916_115 () (_ BitVec 64))
(declare-fun temp10916_116 () (_ BitVec 64))
(declare-fun temp10916_117 () (_ BitVec 64))
(declare-fun temp10916_118 () (_ BitVec 64))
(declare-fun temp10916_119 () (_ BitVec 64))
(declare-fun temp10916_120 () (_ BitVec 64))
(declare-fun temp10916_121 () (_ BitVec 64))
(declare-fun temp10916_122 () (_ BitVec 64))
(declare-fun temp10916_123 () (_ BitVec 64))
(declare-fun temp10916_124 () (_ BitVec 64))
(declare-fun temp10916_125 () (_ BitVec 64))
(declare-fun temp10916_126 () (_ BitVec 64))
(declare-fun temp10916_127 () (_ BitVec 64))
(declare-fun temp10916_128 () (_ BitVec 64))
(declare-fun temp10916_129 () (_ BitVec 64))
(declare-fun temp10916_130 () (_ BitVec 64))
(declare-fun temp10916_131 () (_ BitVec 64))
(declare-fun temp10916_132 () (_ BitVec 64))
(declare-fun temp10916_133 () (_ BitVec 64))
(declare-fun temp10916_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp10916_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp10916_136 () (_ BitVec 64))
(declare-fun temp10916_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp10916_138 () (_ BitVec 64))
(declare-fun temp10916_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10916_140 () (_ BitVec 64))
(declare-fun temp10916_141 () (_ BitVec 64))
(declare-fun temp10916_142 () (_ BitVec 64))
(declare-fun temp10916_143 () (_ BitVec 64))
(declare-fun temp10916_144 () (_ BitVec 64))
(declare-fun temp10916_145 () (_ BitVec 64))
(declare-fun temp10916_146 () (_ BitVec 64))
(declare-fun temp10916_147 () (_ BitVec 64))
(declare-fun temp10916_148 () (_ BitVec 64))
(declare-fun temp10916_149 () (_ BitVec 64))
(declare-fun temp10916_150 () (_ BitVec 64))
(declare-fun temp10916_151 () (_ BitVec 64))
(declare-fun temp10916_152 () (_ BitVec 64))
(declare-fun temp10916_153 () (_ BitVec 64))
(declare-fun temp10916_154 () (_ BitVec 64))
(declare-fun temp10916_155 () (_ BitVec 64))
(declare-fun temp10916_157 () (_ BitVec 64))
(declare-fun temp10916_158 () (_ BitVec 64))
(declare-fun temp10916_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp10916_159 () (_ BitVec 64))
(declare-fun temp10916_160 () (_ BitVec 64))
(declare-fun temp10916_162 () (_ BitVec 64))
(declare-fun temp10916_163 () (_ BitVec 64))
(declare-fun temp10916_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp10916_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp10916_165 () (_ BitVec 64))
(declare-fun temp10916_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp10916_167 () (_ BitVec 64))
(declare-fun temp10916_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp10916_169 () (_ BitVec 64))
(declare-fun temp10916_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp10916_171 () (_ BitVec 64))
(declare-fun temp10916_172 () (_ BitVec 64))
(declare-fun temp10916_173 () (_ BitVec 64))
(declare-fun temp10916_174 () (_ BitVec 64))
(declare-fun temp10916_175 () (_ BitVec 64))
(declare-fun temp10916_176 () (_ BitVec 64))
(declare-fun temp10916_177 () (_ BitVec 64))
(declare-fun temp10916_178 () (_ BitVec 64))
(declare-fun temp10916_179 () (_ BitVec 64))
(declare-fun temp10916_180 () (_ BitVec 64))
(declare-fun temp10916_181 () (_ BitVec 64))
(declare-fun temp10916_182 () (_ BitVec 64))
(declare-fun temp10916_183 () (_ BitVec 64))
(declare-fun temp10916_184 () (_ BitVec 64))
(declare-fun temp10916_185 () (_ BitVec 64))
(declare-fun temp10916_186 () (_ BitVec 64))
(declare-fun temp10916_187 () (_ BitVec 64))
(declare-fun temp10916_188 () (_ BitVec 64))
(declare-fun temp10916_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp10916_190 () (_ BitVec 64))
(declare-fun temp10916_192 () (_ BitVec 64))
(declare-fun temp10916_193 () (_ BitVec 64))
(declare-fun temp10916_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp10916_194 () (_ BitVec 64))
(declare-fun temp10916_195 () (_ BitVec 64))
(declare-fun temp10916_197 () (_ BitVec 64))
(declare-fun temp10916_198 () (_ BitVec 64))
(declare-fun temp10916_196 () (_ BitVec 64))
(declare-fun temp10916_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp10916_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp10916_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp10916_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp10916_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp10916_204 () (_ BitVec 64))
(declare-fun temp10916_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp10916_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp10916_207 () (_ BitVec 64))
(declare-fun temp10916_208 () (_ BitVec 64))
(declare-fun temp10916_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp10916_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp10916_211 () (_ BitVec 64))
(declare-fun temp10916_212 () (_ BitVec 64))
(declare-fun var3867690 () (_ BitVec 64))
(declare-fun temp10916_213 () (_ BitVec 64))
(declare-fun temp10916_214 () (_ BitVec 64))
(declare-fun temp10916_215 () (_ BitVec 64))
(declare-fun var3879423 () (_ BitVec 64))
(declare-fun temp10916_216 () (_ BitVec 64))
(declare-fun var3879424 () (_ BitVec 64))
(declare-fun temp10916_217 () (_ BitVec 64))
(declare-fun temp10916_218 () (_ BitVec 64))
(declare-fun var4133117 () (_ BitVec 64))
(declare-fun var4133062 () (_ BitVec 64))
(declare-fun var4079396 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp10916_219 () (_ BitVec 64))
(declare-fun var4339331 () (_ BitVec 64))
(declare-fun var4339333 () (_ BitVec 64))
(declare-fun var4404876 () (_ BitVec 64))
(declare-fun var4404877 () (_ BitVec 64))
(declare-fun var4404890 () (_ BitVec 64))
(declare-fun var4404892 () (_ BitVec 64))
(declare-fun temp10916_220 () (_ BitVec 64))
(declare-fun var4404917 () (_ BitVec 64))
(declare-fun var4404919 () (_ BitVec 64))
(declare-fun var4525907 () (_ BitVec 64))
(declare-fun temp10916_221 () (_ BitVec 64))
(declare-fun temp10916_222 () (_ BitVec 64))
(declare-fun var6435604 () (_ BitVec 64))
(declare-fun var6435571 () (_ BitVec 64))
(declare-fun var6304135 () (_ BitVec 64))
(declare-fun var6304131 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp10916_223 () (_ BitVec 64))
(assert (= temp10916_1 #x0000000000000001))
(assert (= var77203 temp10916_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp10916_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp10916_2)))
(assert (= temp10916_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp10916_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10916_4 #x0000000000000000))
(assert (= var210941 temp10916_4))
(assert (= temp10916_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp10916_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10916_6 #x0000000000000000))
(assert (= var210986 temp10916_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp10916_7 #x0000000000000000))
(assert (= temp10916_8 temp10916_7))
(assert (= temp10916_9 (select ARGNAME_padding_NAMEEND_VAL temp10916_8)))
(assert (= temp10916_10 #x0000000000000001))
(assert (= temp10916_11 temp10916_10))
(assert (= temp10916_12 (select ARGNAME_padding_NAMEEND_VAL temp10916_11)))
(assert (= temp10916_13 #x0000000000000002))
(assert (= temp10916_14 temp10916_13))
(assert (= temp10916_15 (select ARGNAME_padding_NAMEEND_VAL temp10916_14)))
(assert (= temp10916_16 #x0000000000000003))
(assert (= temp10916_17 temp10916_16))
(assert (= temp10916_18 (select ARGNAME_padding_NAMEEND_VAL temp10916_17)))
(assert (= temp10916_19 #x0000000000000004))
(assert (= temp10916_20 temp10916_19))
(assert (= temp10916_21 (select ARGNAME_padding_NAMEEND_VAL temp10916_20)))
(assert (= temp10916_22 #x0000000000000005))
(assert (= temp10916_23 temp10916_22))
(assert (= temp10916_24 (select ARGNAME_padding_NAMEEND_VAL temp10916_23)))
(assert (= temp10916_25 #x0000000000000000))
(assert (= temp10916_26 #x0000000000000000))
(assert (= temp10916_27 temp10916_26))
(assert (= temp10916_28 (select ARGNAME_padding_NAMEEND_VAL temp10916_27)))
(assert (= temp10916_29 #x0000000000000000))
(assert (= temp10916_30 #x0000000000000001))
(assert (= temp10916_31 temp10916_30))
(assert (= temp10916_32 (select ARGNAME_padding_NAMEEND_VAL temp10916_31)))
(assert (= temp10916_33 #x0000000000000000))
(assert (= temp10916_34 #x0000000000000002))
(assert (= temp10916_35 temp10916_34))
(assert (= temp10916_36 (select ARGNAME_padding_NAMEEND_VAL temp10916_35)))
(assert (= temp10916_37 #x0000000000000000))
(assert (= temp10916_38 #x0000000000000003))
(assert (= temp10916_39 temp10916_38))
(assert (= temp10916_40 (select ARGNAME_padding_NAMEEND_VAL temp10916_39)))
(assert (= temp10916_41 #x0000000000000000))
(assert (= temp10916_42 #x0000000000000004))
(assert (= temp10916_43 temp10916_42))
(assert (= temp10916_44 (select ARGNAME_padding_NAMEEND_VAL temp10916_43)))
(assert (= temp10916_45 #x0000000000000000))
(assert (= temp10916_46 #x0000000000000005))
(assert (= temp10916_47 temp10916_46))
(assert (= temp10916_48 (select ARGNAME_padding_NAMEEND_VAL temp10916_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp10916_28 temp10916_25)
             (bvslt temp10916_32 temp10916_29)
             (bvslt temp10916_36 temp10916_33)
             (bvslt temp10916_40 temp10916_37)
             (bvslt temp10916_44 temp10916_41)
             (bvslt temp10916_48 temp10916_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10916_49 #x0000000000000000))
(assert (= var1191714 temp10916_49))
(assert (= temp10916_50 #x0000000000000000))
(assert (= temp10916_51 temp10916_50))
(assert (= temp10916_52 (select ARGNAME_output_padding_NAMEEND_VAL temp10916_51)))
(assert (= temp10916_53 #x0000000000000001))
(assert (= temp10916_54 temp10916_53))
(assert (= temp10916_55 (select ARGNAME_output_padding_NAMEEND_VAL temp10916_54)))
(assert (= temp10916_56 #x0000000000000002))
(assert (= temp10916_57 temp10916_56))
(assert (= temp10916_58 (select ARGNAME_output_padding_NAMEEND_VAL temp10916_57)))
(assert (= temp10916_59 #x0000000000000003))
(assert (= temp10916_60 temp10916_59))
(assert (= temp10916_61 (select ARGNAME_output_padding_NAMEEND_VAL temp10916_60)))
(assert (= temp10916_62 #x0000000000000004))
(assert (= temp10916_63 temp10916_62))
(assert (= temp10916_64 (select ARGNAME_output_padding_NAMEEND_VAL temp10916_63)))
(assert (= temp10916_65 #x0000000000000005))
(assert (= temp10916_66 temp10916_65))
(assert (= temp10916_67 (select ARGNAME_output_padding_NAMEEND_VAL temp10916_66)))
(assert (= temp10916_68 #x0000000000000000))
(assert (= temp10916_69 #x0000000000000000))
(assert (= temp10916_70 temp10916_69))
(assert (= temp10916_71 (select ARGNAME_output_padding_NAMEEND_VAL temp10916_70)))
(assert (= temp10916_72 #x0000000000000000))
(assert (= temp10916_73 #x0000000000000001))
(assert (= temp10916_74 temp10916_73))
(assert (= temp10916_75 (select ARGNAME_output_padding_NAMEEND_VAL temp10916_74)))
(assert (= temp10916_76 #x0000000000000000))
(assert (= temp10916_77 #x0000000000000002))
(assert (= temp10916_78 temp10916_77))
(assert (= temp10916_79 (select ARGNAME_output_padding_NAMEEND_VAL temp10916_78)))
(assert (= temp10916_80 #x0000000000000000))
(assert (= temp10916_81 #x0000000000000003))
(assert (= temp10916_82 temp10916_81))
(assert (= temp10916_83 (select ARGNAME_output_padding_NAMEEND_VAL temp10916_82)))
(assert (= temp10916_84 #x0000000000000000))
(assert (= temp10916_85 #x0000000000000004))
(assert (= temp10916_86 temp10916_85))
(assert (= temp10916_87 (select ARGNAME_output_padding_NAMEEND_VAL temp10916_86)))
(assert (= temp10916_88 #x0000000000000000))
(assert (= temp10916_89 #x0000000000000005))
(assert (= temp10916_90 temp10916_89))
(assert (= temp10916_91 (select ARGNAME_output_padding_NAMEEND_VAL temp10916_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp10916_71 temp10916_68)
             (bvslt temp10916_75 temp10916_72)
             (bvslt temp10916_79 temp10916_76)
             (bvslt temp10916_83 temp10916_80)
             (bvslt temp10916_87 temp10916_84)
             (bvslt temp10916_91 temp10916_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10916_92 #x0000000000000000))
(assert (= var1191725 temp10916_92))
(assert (= temp10916_93 #x0000000000000000))
(assert (= temp10916_94 temp10916_93))
(assert (= temp10916_95 (select ARGNAME_stride_NAMEEND_VAL temp10916_94)))
(assert (= temp10916_96 #x0000000000000001))
(assert (= temp10916_97 temp10916_96))
(assert (= temp10916_98 (select ARGNAME_stride_NAMEEND_VAL temp10916_97)))
(assert (= temp10916_99 #x0000000000000002))
(assert (= temp10916_100 temp10916_99))
(assert (= temp10916_101 (select ARGNAME_stride_NAMEEND_VAL temp10916_100)))
(assert (= temp10916_102 #x0000000000000003))
(assert (= temp10916_103 temp10916_102))
(assert (= temp10916_104 (select ARGNAME_stride_NAMEEND_VAL temp10916_103)))
(assert (= temp10916_105 #x0000000000000004))
(assert (= temp10916_106 temp10916_105))
(assert (= temp10916_107 (select ARGNAME_stride_NAMEEND_VAL temp10916_106)))
(assert (= temp10916_108 #x0000000000000005))
(assert (= temp10916_109 temp10916_108))
(assert (= temp10916_110 (select ARGNAME_stride_NAMEEND_VAL temp10916_109)))
(assert (= temp10916_111 #x0000000000000000))
(assert (= temp10916_112 #x0000000000000000))
(assert (= temp10916_113 temp10916_112))
(assert (= temp10916_114 (select ARGNAME_stride_NAMEEND_VAL temp10916_113)))
(assert (= temp10916_115 #x0000000000000000))
(assert (= temp10916_116 #x0000000000000001))
(assert (= temp10916_117 temp10916_116))
(assert (= temp10916_118 (select ARGNAME_stride_NAMEEND_VAL temp10916_117)))
(assert (= temp10916_119 #x0000000000000000))
(assert (= temp10916_120 #x0000000000000002))
(assert (= temp10916_121 temp10916_120))
(assert (= temp10916_122 (select ARGNAME_stride_NAMEEND_VAL temp10916_121)))
(assert (= temp10916_123 #x0000000000000000))
(assert (= temp10916_124 #x0000000000000003))
(assert (= temp10916_125 temp10916_124))
(assert (= temp10916_126 (select ARGNAME_stride_NAMEEND_VAL temp10916_125)))
(assert (= temp10916_127 #x0000000000000000))
(assert (= temp10916_128 #x0000000000000004))
(assert (= temp10916_129 temp10916_128))
(assert (= temp10916_130 (select ARGNAME_stride_NAMEEND_VAL temp10916_129)))
(assert (= temp10916_131 #x0000000000000000))
(assert (= temp10916_132 #x0000000000000005))
(assert (= temp10916_133 temp10916_132))
(assert (= temp10916_134 (select ARGNAME_stride_NAMEEND_VAL temp10916_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp10916_114 temp10916_111)
             (bvsle temp10916_118 temp10916_115)
             (bvsle temp10916_122 temp10916_119)
             (bvsle temp10916_126 temp10916_123)
             (bvsle temp10916_130 temp10916_127)
             (bvsle temp10916_134 temp10916_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10916_135 #x0000000000000000))
(assert (= var1191735 temp10916_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10916_136 #x0000000000000001))
(assert (= var1191747 temp10916_136))
(assert (= temp10916_137 #x0000000000000000))
(assert (= var1179826 temp10916_137))
(assert (= temp10916_138 #x0000000000000000))
(assert (= temp10916_139 temp10916_138))
(assert (= temp10916_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10916_139)))
(assert (= temp10916_141 #x0000000000000001))
(assert (= temp10916_142 temp10916_141))
(assert (= temp10916_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10916_142)))
(assert (= temp10916_144 #x0000000000000002))
(assert (= temp10916_145 temp10916_144))
(assert (= temp10916_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10916_145)))
(assert (= temp10916_147 #x0000000000000003))
(assert (= temp10916_148 temp10916_147))
(assert (= temp10916_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10916_148)))
(assert (= temp10916_150 #x0000000000000004))
(assert (= temp10916_151 temp10916_150))
(assert (= temp10916_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10916_151)))
(assert (= temp10916_153 #x0000000000000005))
(assert (= temp10916_154 temp10916_153))
(assert (= temp10916_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10916_154)))
(assert (= temp10916_157 var1179826))
(assert (= temp10916_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10916_157)))
(assert (= temp10916_156 temp10916_158))
(assert (= var1191780
   (ite (bvslt temp10916_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10916_159 #x0000000000000000))
(assert (= var1191780 temp10916_159))
(assert (= temp10916_160 #x0000000000000000))
(assert (= var1179826 temp10916_160))
(assert (= temp10916_162 var1179826))
(assert (= temp10916_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10916_162)))
(assert (= temp10916_161 temp10916_163))
(assert (= var1191802 (bvsmod temp10916_161 ARGNAME_groups_NAMEEND)))
(assert (= temp10916_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp10916_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp10916_165 #x0000000000000001))
(assert (= var1191803 temp10916_165))
(assert (= temp10916_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp10916_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10916_167 #x0000000000000001))
(assert (= var1191823 temp10916_167))
(assert (= temp10916_168 #x0000000000000001))
(assert (= var1180714 temp10916_168))
(assert (= temp10916_169 #x0000000000000000))
(assert (= temp10916_170 temp10916_169))
(assert (= temp10916_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp10916_170)))
(assert (= temp10916_172 #x0000000000000001))
(assert (= temp10916_173 temp10916_172))
(assert (= temp10916_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp10916_173)))
(assert (= temp10916_175 #x0000000000000002))
(assert (= temp10916_176 temp10916_175))
(assert (= temp10916_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp10916_176)))
(assert (= temp10916_178 #x0000000000000003))
(assert (= temp10916_179 temp10916_178))
(assert (= temp10916_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp10916_179)))
(assert (= temp10916_181 #x0000000000000004))
(assert (= temp10916_182 temp10916_181))
(assert (= temp10916_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp10916_182)))
(assert (= temp10916_184 #x0000000000000005))
(assert (= temp10916_185 temp10916_184))
(assert (= temp10916_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp10916_185)))
(assert (= temp10916_187 #x0000000000000000))
(assert (= temp10916_188
   (ite (bvslt var1180714 temp10916_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp10916_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp10916_188)))
(assert (= var1191831 temp10916_189))
(assert (bvslt (ite (bvslt var1180714 temp10916_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10916_190 #x0000000000000001))
(assert (= var1180714 temp10916_190))
(assert (= temp10916_192 var1180714))
(assert (= temp10916_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10916_192)))
(assert (= temp10916_191 temp10916_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp10916_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp10916_194 #x0000000000000001))
(assert (= var1191836 temp10916_194))
(assert (= temp10916_195 #x0000000000000000))
(assert (= var1179826 temp10916_195))
(assert (= temp10916_197 var1179826))
(assert (= temp10916_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp10916_197)))
(assert (= temp10916_196 temp10916_198))
(assert (= temp10916_199 #x0000000000000002))
(assert (= var1586025 temp10916_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp10916_200 #x0000000000000001))
(assert (= var1191993 temp10916_200))
(assert (= temp10916_201 #x0000000000000001))
(assert (= var2700303 temp10916_201))
(assert (= temp10916_202 #x0000000000000001))
(assert (= var2962447 temp10916_202))
(assert (= temp10916_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp10916_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10916_204 #x0000000000000001))
(assert (= var211058 temp10916_204))
(assert (= temp10916_205 #x0000000000000001))
(assert (= var211188 temp10916_205))
(assert (= var3879401 var211188))
(assert (= temp10916_206 #x0000000000000000))
(assert (= var3866802 temp10916_206))
(assert (= temp10916_207 #x0000000000000000))
(assert (= temp10916_208
   (ite (bvslt var3866802 temp10916_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp10916_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp10916_208)))
(assert (= var3879420 temp10916_209))
(assert (bvslt (ite (bvslt var3866802 temp10916_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10916_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp10916_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp10916_211 #x0000000000000000))
(assert (= var3879421 temp10916_211))
(assert (= temp10916_212 #x0000000000000001))
(assert (= var3867690 temp10916_212))
(assert (= temp10916_213 #x0000000000000000))
(assert (= temp10916_214
   (ite (bvslt var3867690 temp10916_213)
        (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
        var3867690)))
(assert (= temp10916_215 (select ARGNAME_input_NAMEEND_DIMSIZE temp10916_214)))
(assert (= var3879423 temp10916_215))
(assert (bvslt (ite (bvslt var3867690 temp10916_213)
            (bvadd ARGNAME_input_NAMEEND_DIM var3867690)
            var3867690)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp10916_216 #x0000000000000000))
(assert (= var3879424
   (ite (= var3879423 temp10916_216) #x0000000000000001 #x0000000000000000)))
(assert (= temp10916_217 #x0000000000000001))
(assert (= var3879424 temp10916_217))
(assert (= temp10916_218 #x0000000000000000))
(assert (= var4133117 temp10916_218))
(assert (= var4133062 var4133117))
(assert (= var4079396 var4133062))
(assert (= var4079423 var4079396))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp10916_219 #x0000000000000002))
(assert (= var4339331 temp10916_219))
(assert (= var4339333 (bvsub ARGNAME_weight_NAMEEND_DIM var4339331)))
(assert (= var4404876 var4339331))
(assert (= var4404877 var4339333))
(assert (= var4404890 (bvadd var4404877 var4404876)))
(assert (= var4404892
   (ite (bvsgt var4404890 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp10916_220 #x0000000000000000))
(assert (= var4404892 temp10916_220))
(assert (= var4404917 var4404876))
(assert (= var4404919 var4404877))
(assert (= var4525907 var4404919))
(assert (= temp10916_221 #x0000000000000001))
(assert (= var211058 temp10916_221))
(assert (= temp10916_222 #x0000000000000000))
(assert (= var6435604 temp10916_222))
(assert (= var6435571 var6435604))
(assert (= var6304135 var6435571))
(assert (= var6304131 var6304135))
(assert (= var212669 var6304131))
(assert (= temp10916_223 #x0000000000000000))
(assert (= var212669 temp10916_223))
(model-add temp10916_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp10916_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp10916_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp10916_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))





