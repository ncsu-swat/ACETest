(declare-fun temp620_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp620_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp620_3 () (_ BitVec 64))
(declare-fun temp620_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp620_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp620_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp620_7 () (_ BitVec 64))
(declare-fun temp620_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp620_9 () (_ BitVec 64))
(declare-fun temp620_10 () (_ BitVec 64))
(declare-fun temp620_11 () (_ BitVec 64))
(declare-fun temp620_12 () (_ BitVec 64))
(declare-fun temp620_13 () (_ BitVec 64))
(declare-fun temp620_14 () (_ BitVec 64))
(declare-fun temp620_15 () (_ BitVec 64))
(declare-fun temp620_16 () (_ BitVec 64))
(declare-fun temp620_17 () (_ BitVec 64))
(declare-fun temp620_18 () (_ BitVec 64))
(declare-fun temp620_19 () (_ BitVec 64))
(declare-fun temp620_20 () (_ BitVec 64))
(declare-fun temp620_21 () (_ BitVec 64))
(declare-fun temp620_22 () (_ BitVec 64))
(declare-fun temp620_23 () (_ BitVec 64))
(declare-fun temp620_24 () (_ BitVec 64))
(declare-fun temp620_25 () (_ BitVec 64))
(declare-fun temp620_26 () (_ BitVec 64))
(declare-fun temp620_27 () (_ BitVec 64))
(declare-fun temp620_28 () (_ BitVec 64))
(declare-fun temp620_29 () (_ BitVec 64))
(declare-fun temp620_30 () (_ BitVec 64))
(declare-fun temp620_31 () (_ BitVec 64))
(declare-fun temp620_32 () (_ BitVec 64))
(declare-fun temp620_33 () (_ BitVec 64))
(declare-fun temp620_34 () (_ BitVec 64))
(declare-fun temp620_35 () (_ BitVec 64))
(declare-fun temp620_36 () (_ BitVec 64))
(declare-fun temp620_37 () (_ BitVec 64))
(declare-fun temp620_38 () (_ BitVec 64))
(declare-fun temp620_39 () (_ BitVec 64))
(declare-fun temp620_40 () (_ BitVec 64))
(declare-fun temp620_41 () (_ BitVec 64))
(declare-fun temp620_42 () (_ BitVec 64))
(declare-fun temp620_43 () (_ BitVec 64))
(declare-fun temp620_44 () (_ BitVec 64))
(declare-fun temp620_45 () (_ BitVec 64))
(declare-fun temp620_46 () (_ BitVec 64))
(declare-fun temp620_47 () (_ BitVec 64))
(declare-fun temp620_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp620_49 () (_ BitVec 64))
(declare-fun temp620_50 () (_ BitVec 64))
(declare-fun temp620_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp620_52 () (_ BitVec 64))
(declare-fun temp620_53 () (_ BitVec 64))
(declare-fun temp620_54 () (_ BitVec 64))
(declare-fun temp620_55 () (_ BitVec 64))
(declare-fun temp620_56 () (_ BitVec 64))
(declare-fun temp620_57 () (_ BitVec 64))
(declare-fun temp620_58 () (_ BitVec 64))
(declare-fun temp620_59 () (_ BitVec 64))
(declare-fun temp620_60 () (_ BitVec 64))
(declare-fun temp620_61 () (_ BitVec 64))
(declare-fun temp620_62 () (_ BitVec 64))
(declare-fun temp620_63 () (_ BitVec 64))
(declare-fun temp620_64 () (_ BitVec 64))
(declare-fun temp620_65 () (_ BitVec 64))
(declare-fun temp620_66 () (_ BitVec 64))
(declare-fun temp620_67 () (_ BitVec 64))
(declare-fun temp620_68 () (_ BitVec 64))
(declare-fun temp620_69 () (_ BitVec 64))
(declare-fun temp620_70 () (_ BitVec 64))
(declare-fun temp620_71 () (_ BitVec 64))
(declare-fun temp620_72 () (_ BitVec 64))
(declare-fun temp620_73 () (_ BitVec 64))
(declare-fun temp620_74 () (_ BitVec 64))
(declare-fun temp620_75 () (_ BitVec 64))
(declare-fun temp620_76 () (_ BitVec 64))
(declare-fun temp620_77 () (_ BitVec 64))
(declare-fun temp620_78 () (_ BitVec 64))
(declare-fun temp620_79 () (_ BitVec 64))
(declare-fun temp620_80 () (_ BitVec 64))
(declare-fun temp620_81 () (_ BitVec 64))
(declare-fun temp620_82 () (_ BitVec 64))
(declare-fun temp620_83 () (_ BitVec 64))
(declare-fun temp620_84 () (_ BitVec 64))
(declare-fun temp620_85 () (_ BitVec 64))
(declare-fun temp620_86 () (_ BitVec 64))
(declare-fun temp620_87 () (_ BitVec 64))
(declare-fun temp620_88 () (_ BitVec 64))
(declare-fun temp620_89 () (_ BitVec 64))
(declare-fun temp620_90 () (_ BitVec 64))
(declare-fun temp620_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp620_92 () (_ BitVec 64))
(declare-fun temp620_93 () (_ BitVec 64))
(declare-fun temp620_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp620_95 () (_ BitVec 64))
(declare-fun temp620_96 () (_ BitVec 64))
(declare-fun temp620_97 () (_ BitVec 64))
(declare-fun temp620_98 () (_ BitVec 64))
(declare-fun temp620_99 () (_ BitVec 64))
(declare-fun temp620_100 () (_ BitVec 64))
(declare-fun temp620_101 () (_ BitVec 64))
(declare-fun temp620_102 () (_ BitVec 64))
(declare-fun temp620_103 () (_ BitVec 64))
(declare-fun temp620_104 () (_ BitVec 64))
(declare-fun temp620_105 () (_ BitVec 64))
(declare-fun temp620_106 () (_ BitVec 64))
(declare-fun temp620_107 () (_ BitVec 64))
(declare-fun temp620_108 () (_ BitVec 64))
(declare-fun temp620_109 () (_ BitVec 64))
(declare-fun temp620_110 () (_ BitVec 64))
(declare-fun temp620_111 () (_ BitVec 64))
(declare-fun temp620_112 () (_ BitVec 64))
(declare-fun temp620_113 () (_ BitVec 64))
(declare-fun temp620_114 () (_ BitVec 64))
(declare-fun temp620_115 () (_ BitVec 64))
(declare-fun temp620_116 () (_ BitVec 64))
(declare-fun temp620_117 () (_ BitVec 64))
(declare-fun temp620_118 () (_ BitVec 64))
(declare-fun temp620_119 () (_ BitVec 64))
(declare-fun temp620_120 () (_ BitVec 64))
(declare-fun temp620_121 () (_ BitVec 64))
(declare-fun temp620_122 () (_ BitVec 64))
(declare-fun temp620_123 () (_ BitVec 64))
(declare-fun temp620_124 () (_ BitVec 64))
(declare-fun temp620_125 () (_ BitVec 64))
(declare-fun temp620_126 () (_ BitVec 64))
(declare-fun temp620_127 () (_ BitVec 64))
(declare-fun temp620_128 () (_ BitVec 64))
(declare-fun temp620_129 () (_ BitVec 64))
(declare-fun temp620_130 () (_ BitVec 64))
(declare-fun temp620_131 () (_ BitVec 64))
(declare-fun temp620_132 () (_ BitVec 64))
(declare-fun temp620_133 () (_ BitVec 64))
(declare-fun temp620_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp620_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp620_136 () (_ BitVec 64))
(declare-fun temp620_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp620_138 () (_ BitVec 64))
(declare-fun temp620_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp620_140 () (_ BitVec 64))
(declare-fun temp620_141 () (_ BitVec 64))
(declare-fun temp620_142 () (_ BitVec 64))
(declare-fun temp620_143 () (_ BitVec 64))
(declare-fun temp620_144 () (_ BitVec 64))
(declare-fun temp620_145 () (_ BitVec 64))
(declare-fun temp620_146 () (_ BitVec 64))
(declare-fun temp620_147 () (_ BitVec 64))
(declare-fun temp620_148 () (_ BitVec 64))
(declare-fun temp620_149 () (_ BitVec 64))
(declare-fun temp620_150 () (_ BitVec 64))
(declare-fun temp620_151 () (_ BitVec 64))
(declare-fun temp620_152 () (_ BitVec 64))
(declare-fun temp620_153 () (_ BitVec 64))
(declare-fun temp620_154 () (_ BitVec 64))
(declare-fun temp620_155 () (_ BitVec 64))
(declare-fun temp620_157 () (_ BitVec 64))
(declare-fun temp620_158 () (_ BitVec 64))
(declare-fun temp620_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp620_159 () (_ BitVec 64))
(declare-fun temp620_160 () (_ BitVec 64))
(declare-fun temp620_162 () (_ BitVec 64))
(declare-fun temp620_163 () (_ BitVec 64))
(declare-fun temp620_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp620_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp620_165 () (_ BitVec 64))
(declare-fun temp620_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp620_167 () (_ BitVec 64))
(declare-fun temp620_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp620_169 () (_ BitVec 64))
(declare-fun temp620_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp620_171 () (_ BitVec 64))
(declare-fun temp620_172 () (_ BitVec 64))
(declare-fun temp620_173 () (_ BitVec 64))
(declare-fun temp620_174 () (_ BitVec 64))
(declare-fun temp620_175 () (_ BitVec 64))
(declare-fun temp620_176 () (_ BitVec 64))
(declare-fun temp620_177 () (_ BitVec 64))
(declare-fun temp620_178 () (_ BitVec 64))
(declare-fun temp620_179 () (_ BitVec 64))
(declare-fun temp620_180 () (_ BitVec 64))
(declare-fun temp620_181 () (_ BitVec 64))
(declare-fun temp620_182 () (_ BitVec 64))
(declare-fun temp620_183 () (_ BitVec 64))
(declare-fun temp620_184 () (_ BitVec 64))
(declare-fun temp620_185 () (_ BitVec 64))
(declare-fun temp620_186 () (_ BitVec 64))
(declare-fun temp620_187 () (_ BitVec 64))
(declare-fun temp620_188 () (_ BitVec 64))
(declare-fun temp620_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp620_190 () (_ BitVec 64))
(declare-fun temp620_192 () (_ BitVec 64))
(declare-fun temp620_193 () (_ BitVec 64))
(declare-fun temp620_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp620_194 () (_ BitVec 64))
(declare-fun temp620_195 () (_ BitVec 64))
(declare-fun temp620_197 () (_ BitVec 64))
(declare-fun temp620_198 () (_ BitVec 64))
(declare-fun temp620_196 () (_ BitVec 64))
(declare-fun temp620_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp620_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp620_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp620_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp620_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp620_204 () (_ BitVec 64))
(declare-fun temp620_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp620_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp620_207 () (_ BitVec 64))
(declare-fun temp620_208 () (_ BitVec 64))
(declare-fun temp620_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp620_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp620_211 () (_ BitVec 64))
(declare-fun temp620_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp620_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp620_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun var4993424 () (_ BitVec 64))
(declare-fun var211388 () (_ BitVec 64))
(declare-fun temp620_215 () (_ BitVec 64))
(declare-fun var211389 () (_ BitVec 64))
(declare-fun var5914445 () (_ BitVec 64))
(declare-fun temp620_217 () (_ BitVec 64))
(declare-fun temp620_216 () (_ BitVec 64))
(declare-fun temp620_218 () (_ BitVec 64))
(declare-fun var6753770 () (_ BitVec 64))
(declare-fun temp620_220 () (_ BitVec 64))
(declare-fun temp620_219 () (_ BitVec 64))
(declare-fun temp620_221 () (_ BitVec 64))
(declare-fun temp620_222 () (_ BitVec 64))
(declare-fun var7484180 () (_ BitVec 64))
(declare-fun var7484147 () (_ BitVec 64))
(declare-fun var7352711 () (_ BitVec 64))
(declare-fun var7352707 () (_ BitVec 64))
(declare-fun var212669 () (_ BitVec 64))
(declare-fun temp620_223 () (_ BitVec 64))
(assert (= temp620_1 #x0000000000000001))
(assert (= var77203 temp620_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp620_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp620_2)))
(assert (= temp620_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp620_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp620_4 #x0000000000000000))
(assert (= var210941 temp620_4))
(assert (= temp620_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp620_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp620_6 #x0000000000000000))
(assert (= var210986 temp620_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp620_7 #x0000000000000000))
(assert (= temp620_8 temp620_7))
(assert (= temp620_9 (select ARGNAME_padding_NAMEEND_VAL temp620_8)))
(assert (= temp620_10 #x0000000000000001))
(assert (= temp620_11 temp620_10))
(assert (= temp620_12 (select ARGNAME_padding_NAMEEND_VAL temp620_11)))
(assert (= temp620_13 #x0000000000000002))
(assert (= temp620_14 temp620_13))
(assert (= temp620_15 (select ARGNAME_padding_NAMEEND_VAL temp620_14)))
(assert (= temp620_16 #x0000000000000003))
(assert (= temp620_17 temp620_16))
(assert (= temp620_18 (select ARGNAME_padding_NAMEEND_VAL temp620_17)))
(assert (= temp620_19 #x0000000000000004))
(assert (= temp620_20 temp620_19))
(assert (= temp620_21 (select ARGNAME_padding_NAMEEND_VAL temp620_20)))
(assert (= temp620_22 #x0000000000000005))
(assert (= temp620_23 temp620_22))
(assert (= temp620_24 (select ARGNAME_padding_NAMEEND_VAL temp620_23)))
(assert (= temp620_25 #x0000000000000000))
(assert (= temp620_26 #x0000000000000000))
(assert (= temp620_27 temp620_26))
(assert (= temp620_28 (select ARGNAME_padding_NAMEEND_VAL temp620_27)))
(assert (= temp620_29 #x0000000000000000))
(assert (= temp620_30 #x0000000000000001))
(assert (= temp620_31 temp620_30))
(assert (= temp620_32 (select ARGNAME_padding_NAMEEND_VAL temp620_31)))
(assert (= temp620_33 #x0000000000000000))
(assert (= temp620_34 #x0000000000000002))
(assert (= temp620_35 temp620_34))
(assert (= temp620_36 (select ARGNAME_padding_NAMEEND_VAL temp620_35)))
(assert (= temp620_37 #x0000000000000000))
(assert (= temp620_38 #x0000000000000003))
(assert (= temp620_39 temp620_38))
(assert (= temp620_40 (select ARGNAME_padding_NAMEEND_VAL temp620_39)))
(assert (= temp620_41 #x0000000000000000))
(assert (= temp620_42 #x0000000000000004))
(assert (= temp620_43 temp620_42))
(assert (= temp620_44 (select ARGNAME_padding_NAMEEND_VAL temp620_43)))
(assert (= temp620_45 #x0000000000000000))
(assert (= temp620_46 #x0000000000000005))
(assert (= temp620_47 temp620_46))
(assert (= temp620_48 (select ARGNAME_padding_NAMEEND_VAL temp620_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp620_28 temp620_25)
             (bvslt temp620_32 temp620_29)
             (bvslt temp620_36 temp620_33)
             (bvslt temp620_40 temp620_37)
             (bvslt temp620_44 temp620_41)
             (bvslt temp620_48 temp620_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp620_49 #x0000000000000000))
(assert (= var1191714 temp620_49))
(assert (= temp620_50 #x0000000000000000))
(assert (= temp620_51 temp620_50))
(assert (= temp620_52 (select ARGNAME_output_padding_NAMEEND_VAL temp620_51)))
(assert (= temp620_53 #x0000000000000001))
(assert (= temp620_54 temp620_53))
(assert (= temp620_55 (select ARGNAME_output_padding_NAMEEND_VAL temp620_54)))
(assert (= temp620_56 #x0000000000000002))
(assert (= temp620_57 temp620_56))
(assert (= temp620_58 (select ARGNAME_output_padding_NAMEEND_VAL temp620_57)))
(assert (= temp620_59 #x0000000000000003))
(assert (= temp620_60 temp620_59))
(assert (= temp620_61 (select ARGNAME_output_padding_NAMEEND_VAL temp620_60)))
(assert (= temp620_62 #x0000000000000004))
(assert (= temp620_63 temp620_62))
(assert (= temp620_64 (select ARGNAME_output_padding_NAMEEND_VAL temp620_63)))
(assert (= temp620_65 #x0000000000000005))
(assert (= temp620_66 temp620_65))
(assert (= temp620_67 (select ARGNAME_output_padding_NAMEEND_VAL temp620_66)))
(assert (= temp620_68 #x0000000000000000))
(assert (= temp620_69 #x0000000000000000))
(assert (= temp620_70 temp620_69))
(assert (= temp620_71 (select ARGNAME_output_padding_NAMEEND_VAL temp620_70)))
(assert (= temp620_72 #x0000000000000000))
(assert (= temp620_73 #x0000000000000001))
(assert (= temp620_74 temp620_73))
(assert (= temp620_75 (select ARGNAME_output_padding_NAMEEND_VAL temp620_74)))
(assert (= temp620_76 #x0000000000000000))
(assert (= temp620_77 #x0000000000000002))
(assert (= temp620_78 temp620_77))
(assert (= temp620_79 (select ARGNAME_output_padding_NAMEEND_VAL temp620_78)))
(assert (= temp620_80 #x0000000000000000))
(assert (= temp620_81 #x0000000000000003))
(assert (= temp620_82 temp620_81))
(assert (= temp620_83 (select ARGNAME_output_padding_NAMEEND_VAL temp620_82)))
(assert (= temp620_84 #x0000000000000000))
(assert (= temp620_85 #x0000000000000004))
(assert (= temp620_86 temp620_85))
(assert (= temp620_87 (select ARGNAME_output_padding_NAMEEND_VAL temp620_86)))
(assert (= temp620_88 #x0000000000000000))
(assert (= temp620_89 #x0000000000000005))
(assert (= temp620_90 temp620_89))
(assert (= temp620_91 (select ARGNAME_output_padding_NAMEEND_VAL temp620_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp620_71 temp620_68)
             (bvslt temp620_75 temp620_72)
             (bvslt temp620_79 temp620_76)
             (bvslt temp620_83 temp620_80)
             (bvslt temp620_87 temp620_84)
             (bvslt temp620_91 temp620_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp620_92 #x0000000000000000))
(assert (= var1191725 temp620_92))
(assert (= temp620_93 #x0000000000000000))
(assert (= temp620_94 temp620_93))
(assert (= temp620_95 (select ARGNAME_stride_NAMEEND_VAL temp620_94)))
(assert (= temp620_96 #x0000000000000001))
(assert (= temp620_97 temp620_96))
(assert (= temp620_98 (select ARGNAME_stride_NAMEEND_VAL temp620_97)))
(assert (= temp620_99 #x0000000000000002))
(assert (= temp620_100 temp620_99))
(assert (= temp620_101 (select ARGNAME_stride_NAMEEND_VAL temp620_100)))
(assert (= temp620_102 #x0000000000000003))
(assert (= temp620_103 temp620_102))
(assert (= temp620_104 (select ARGNAME_stride_NAMEEND_VAL temp620_103)))
(assert (= temp620_105 #x0000000000000004))
(assert (= temp620_106 temp620_105))
(assert (= temp620_107 (select ARGNAME_stride_NAMEEND_VAL temp620_106)))
(assert (= temp620_108 #x0000000000000005))
(assert (= temp620_109 temp620_108))
(assert (= temp620_110 (select ARGNAME_stride_NAMEEND_VAL temp620_109)))
(assert (= temp620_111 #x0000000000000000))
(assert (= temp620_112 #x0000000000000000))
(assert (= temp620_113 temp620_112))
(assert (= temp620_114 (select ARGNAME_stride_NAMEEND_VAL temp620_113)))
(assert (= temp620_115 #x0000000000000000))
(assert (= temp620_116 #x0000000000000001))
(assert (= temp620_117 temp620_116))
(assert (= temp620_118 (select ARGNAME_stride_NAMEEND_VAL temp620_117)))
(assert (= temp620_119 #x0000000000000000))
(assert (= temp620_120 #x0000000000000002))
(assert (= temp620_121 temp620_120))
(assert (= temp620_122 (select ARGNAME_stride_NAMEEND_VAL temp620_121)))
(assert (= temp620_123 #x0000000000000000))
(assert (= temp620_124 #x0000000000000003))
(assert (= temp620_125 temp620_124))
(assert (= temp620_126 (select ARGNAME_stride_NAMEEND_VAL temp620_125)))
(assert (= temp620_127 #x0000000000000000))
(assert (= temp620_128 #x0000000000000004))
(assert (= temp620_129 temp620_128))
(assert (= temp620_130 (select ARGNAME_stride_NAMEEND_VAL temp620_129)))
(assert (= temp620_131 #x0000000000000000))
(assert (= temp620_132 #x0000000000000005))
(assert (= temp620_133 temp620_132))
(assert (= temp620_134 (select ARGNAME_stride_NAMEEND_VAL temp620_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp620_114 temp620_111)
             (bvsle temp620_118 temp620_115)
             (bvsle temp620_122 temp620_119)
             (bvsle temp620_126 temp620_123)
             (bvsle temp620_130 temp620_127)
             (bvsle temp620_134 temp620_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp620_135 #x0000000000000000))
(assert (= var1191735 temp620_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp620_136 #x0000000000000001))
(assert (= var1191747 temp620_136))
(assert (= temp620_137 #x0000000000000000))
(assert (= var1179826 temp620_137))
(assert (= temp620_138 #x0000000000000000))
(assert (= temp620_139 temp620_138))
(assert (= temp620_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp620_139)))
(assert (= temp620_141 #x0000000000000001))
(assert (= temp620_142 temp620_141))
(assert (= temp620_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp620_142)))
(assert (= temp620_144 #x0000000000000002))
(assert (= temp620_145 temp620_144))
(assert (= temp620_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp620_145)))
(assert (= temp620_147 #x0000000000000003))
(assert (= temp620_148 temp620_147))
(assert (= temp620_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp620_148)))
(assert (= temp620_150 #x0000000000000004))
(assert (= temp620_151 temp620_150))
(assert (= temp620_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp620_151)))
(assert (= temp620_153 #x0000000000000005))
(assert (= temp620_154 temp620_153))
(assert (= temp620_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp620_154)))
(assert (= temp620_157 var1179826))
(assert (= temp620_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp620_157)))
(assert (= temp620_156 temp620_158))
(assert (= var1191780
   (ite (bvslt temp620_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp620_159 #x0000000000000000))
(assert (= var1191780 temp620_159))
(assert (= temp620_160 #x0000000000000000))
(assert (= var1179826 temp620_160))
(assert (= temp620_162 var1179826))
(assert (= temp620_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp620_162)))
(assert (= temp620_161 temp620_163))
(assert (= var1191802 (bvsmod temp620_161 ARGNAME_groups_NAMEEND)))
(assert (= temp620_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp620_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp620_165 #x0000000000000001))
(assert (= var1191803 temp620_165))
(assert (= temp620_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp620_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp620_167 #x0000000000000001))
(assert (= var1191823 temp620_167))
(assert (= temp620_168 #x0000000000000001))
(assert (= var1180714 temp620_168))
(assert (= temp620_169 #x0000000000000000))
(assert (= temp620_170 temp620_169))
(assert (= temp620_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp620_170)))
(assert (= temp620_172 #x0000000000000001))
(assert (= temp620_173 temp620_172))
(assert (= temp620_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp620_173)))
(assert (= temp620_175 #x0000000000000002))
(assert (= temp620_176 temp620_175))
(assert (= temp620_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp620_176)))
(assert (= temp620_178 #x0000000000000003))
(assert (= temp620_179 temp620_178))
(assert (= temp620_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp620_179)))
(assert (= temp620_181 #x0000000000000004))
(assert (= temp620_182 temp620_181))
(assert (= temp620_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp620_182)))
(assert (= temp620_184 #x0000000000000005))
(assert (= temp620_185 temp620_184))
(assert (= temp620_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp620_185)))
(assert (= temp620_187 #x0000000000000000))
(assert (= temp620_188
   (ite (bvslt var1180714 temp620_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp620_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp620_188)))
(assert (= var1191831 temp620_189))
(assert (bvslt (ite (bvslt var1180714 temp620_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp620_190 #x0000000000000001))
(assert (= var1180714 temp620_190))
(assert (= temp620_192 var1180714))
(assert (= temp620_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp620_192)))
(assert (= temp620_191 temp620_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp620_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp620_194 #x0000000000000001))
(assert (= var1191836 temp620_194))
(assert (= temp620_195 #x0000000000000000))
(assert (= var1179826 temp620_195))
(assert (= temp620_197 var1179826))
(assert (= temp620_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp620_197)))
(assert (= temp620_196 temp620_198))
(assert (= temp620_199 #x0000000000000002))
(assert (= var1586025 temp620_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp620_200 #x0000000000000001))
(assert (= var1191993 temp620_200))
(assert (= temp620_201 #x0000000000000001))
(assert (= var2700303 temp620_201))
(assert (= temp620_202 #x0000000000000001))
(assert (= var2962447 temp620_202))
(assert (= temp620_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp620_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp620_204 #x0000000000000001))
(assert (= var211058 temp620_204))
(assert (= temp620_205 #x0000000000000001))
(assert (= var211188 temp620_205))
(assert (= var3879401 var211188))
(assert (= temp620_206 #x0000000000000000))
(assert (= var3866802 temp620_206))
(assert (= temp620_207 #x0000000000000000))
(assert (= temp620_208
   (ite (bvslt var3866802 temp620_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp620_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp620_208)))
(assert (= var3879420 temp620_209))
(assert (bvslt (ite (bvslt var3866802 temp620_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp620_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp620_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp620_211 #x0000000000000001))
(assert (= var3879421 temp620_211))
(assert (= temp620_212 #x0000000000000000))
(assert (= var4079423 temp620_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp620_213 #x0000000000000002))
(assert (= var4208259 temp620_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp620_214 #x0000000000000000))
(assert (= var4273820 temp620_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= var4993424 var211201))
(assert (= var211388 var210913))
(assert (= temp620_215 #x0000000000000000))
(assert (= var211389
   (ite (distinct var211388 temp620_215) #x0000000000000001 #x0000000000000000)))
(assert (= var5914445 var211389))
(assert (= temp620_217 #x0000000000000001))
(assert (= temp620_216 temp620_217))
(assert (= temp620_218 #x0000000000000001))
(assert (= var6753770 temp620_218))
(assert (= temp620_220 #xffffffffffffffff))
(assert (= temp620_219 temp620_220))
(assert (= temp620_221 #x0000000000000001))
(assert (= var211058 temp620_221))
(assert (= temp620_222 #x0000000000000000))
(assert (= var7484180 temp620_222))
(assert (= var7484147 var7484180))
(assert (= var7352711 var7484147))
(assert (= var7352707 var7352711))
(assert (= var212669 var7352707))
(assert (= temp620_223 #x0000000000000000))
(assert (= var212669 temp620_223))
(model-add temp620_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp620_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp620_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp620_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




