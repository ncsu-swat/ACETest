(declare-fun temp145_1 () (_ BitVec 64))
(declare-fun var77203 () (_ BitVec 64))
(declare-fun var210653 () (_ BitVec 64))
(declare-fun var210913 () (_ BitVec 64))
(declare-fun temp145_2 () (_ BitVec 64))
(declare-fun var210940 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIM () (_ BitVec 64))
(declare-fun temp145_3 () (_ BitVec 64))
(declare-fun temp145_4 () (_ BitVec 64))
(declare-fun var210941 () (_ BitVec 64))
(declare-fun k!0 () Bool)
(declare-fun temp145_5 () (_ BitVec 64))
(declare-fun ARGNAME_groups_NAMEEND () (_ BitVec 64))
(declare-fun var210986 () (_ BitVec 64))
(declare-fun temp145_6 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_dilation_NAMEEND_LEN () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_LEN () (_ BitVec 64))
(declare-fun temp145_7 () (_ BitVec 64))
(declare-fun temp145_8 () (_ BitVec 64))
(declare-fun ARGNAME_padding_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp145_9 () (_ BitVec 64))
(declare-fun temp145_10 () (_ BitVec 64))
(declare-fun temp145_11 () (_ BitVec 64))
(declare-fun temp145_12 () (_ BitVec 64))
(declare-fun temp145_13 () (_ BitVec 64))
(declare-fun temp145_14 () (_ BitVec 64))
(declare-fun temp145_15 () (_ BitVec 64))
(declare-fun temp145_16 () (_ BitVec 64))
(declare-fun temp145_17 () (_ BitVec 64))
(declare-fun temp145_18 () (_ BitVec 64))
(declare-fun temp145_19 () (_ BitVec 64))
(declare-fun temp145_20 () (_ BitVec 64))
(declare-fun temp145_21 () (_ BitVec 64))
(declare-fun temp145_22 () (_ BitVec 64))
(declare-fun temp145_23 () (_ BitVec 64))
(declare-fun temp145_24 () (_ BitVec 64))
(declare-fun temp145_25 () (_ BitVec 64))
(declare-fun temp145_26 () (_ BitVec 64))
(declare-fun temp145_27 () (_ BitVec 64))
(declare-fun temp145_28 () (_ BitVec 64))
(declare-fun temp145_29 () (_ BitVec 64))
(declare-fun temp145_30 () (_ BitVec 64))
(declare-fun temp145_31 () (_ BitVec 64))
(declare-fun temp145_32 () (_ BitVec 64))
(declare-fun temp145_33 () (_ BitVec 64))
(declare-fun temp145_34 () (_ BitVec 64))
(declare-fun temp145_35 () (_ BitVec 64))
(declare-fun temp145_36 () (_ BitVec 64))
(declare-fun temp145_37 () (_ BitVec 64))
(declare-fun temp145_38 () (_ BitVec 64))
(declare-fun temp145_39 () (_ BitVec 64))
(declare-fun temp145_40 () (_ BitVec 64))
(declare-fun temp145_41 () (_ BitVec 64))
(declare-fun temp145_42 () (_ BitVec 64))
(declare-fun temp145_43 () (_ BitVec 64))
(declare-fun temp145_44 () (_ BitVec 64))
(declare-fun temp145_45 () (_ BitVec 64))
(declare-fun temp145_46 () (_ BitVec 64))
(declare-fun temp145_47 () (_ BitVec 64))
(declare-fun temp145_48 () (_ BitVec 64))
(declare-fun var1191714 () (_ BitVec 64))
(declare-fun temp145_49 () (_ BitVec 64))
(declare-fun temp145_50 () (_ BitVec 64))
(declare-fun temp145_51 () (_ BitVec 64))
(declare-fun ARGNAME_output_padding_NAMEEND_VAL
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp145_52 () (_ BitVec 64))
(declare-fun temp145_53 () (_ BitVec 64))
(declare-fun temp145_54 () (_ BitVec 64))
(declare-fun temp145_55 () (_ BitVec 64))
(declare-fun temp145_56 () (_ BitVec 64))
(declare-fun temp145_57 () (_ BitVec 64))
(declare-fun temp145_58 () (_ BitVec 64))
(declare-fun temp145_59 () (_ BitVec 64))
(declare-fun temp145_60 () (_ BitVec 64))
(declare-fun temp145_61 () (_ BitVec 64))
(declare-fun temp145_62 () (_ BitVec 64))
(declare-fun temp145_63 () (_ BitVec 64))
(declare-fun temp145_64 () (_ BitVec 64))
(declare-fun temp145_65 () (_ BitVec 64))
(declare-fun temp145_66 () (_ BitVec 64))
(declare-fun temp145_67 () (_ BitVec 64))
(declare-fun temp145_68 () (_ BitVec 64))
(declare-fun temp145_69 () (_ BitVec 64))
(declare-fun temp145_70 () (_ BitVec 64))
(declare-fun temp145_71 () (_ BitVec 64))
(declare-fun temp145_72 () (_ BitVec 64))
(declare-fun temp145_73 () (_ BitVec 64))
(declare-fun temp145_74 () (_ BitVec 64))
(declare-fun temp145_75 () (_ BitVec 64))
(declare-fun temp145_76 () (_ BitVec 64))
(declare-fun temp145_77 () (_ BitVec 64))
(declare-fun temp145_78 () (_ BitVec 64))
(declare-fun temp145_79 () (_ BitVec 64))
(declare-fun temp145_80 () (_ BitVec 64))
(declare-fun temp145_81 () (_ BitVec 64))
(declare-fun temp145_82 () (_ BitVec 64))
(declare-fun temp145_83 () (_ BitVec 64))
(declare-fun temp145_84 () (_ BitVec 64))
(declare-fun temp145_85 () (_ BitVec 64))
(declare-fun temp145_86 () (_ BitVec 64))
(declare-fun temp145_87 () (_ BitVec 64))
(declare-fun temp145_88 () (_ BitVec 64))
(declare-fun temp145_89 () (_ BitVec 64))
(declare-fun temp145_90 () (_ BitVec 64))
(declare-fun temp145_91 () (_ BitVec 64))
(declare-fun var1191725 () (_ BitVec 64))
(declare-fun temp145_92 () (_ BitVec 64))
(declare-fun temp145_93 () (_ BitVec 64))
(declare-fun temp145_94 () (_ BitVec 64))
(declare-fun ARGNAME_stride_NAMEEND_VAL () (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp145_95 () (_ BitVec 64))
(declare-fun temp145_96 () (_ BitVec 64))
(declare-fun temp145_97 () (_ BitVec 64))
(declare-fun temp145_98 () (_ BitVec 64))
(declare-fun temp145_99 () (_ BitVec 64))
(declare-fun temp145_100 () (_ BitVec 64))
(declare-fun temp145_101 () (_ BitVec 64))
(declare-fun temp145_102 () (_ BitVec 64))
(declare-fun temp145_103 () (_ BitVec 64))
(declare-fun temp145_104 () (_ BitVec 64))
(declare-fun temp145_105 () (_ BitVec 64))
(declare-fun temp145_106 () (_ BitVec 64))
(declare-fun temp145_107 () (_ BitVec 64))
(declare-fun temp145_108 () (_ BitVec 64))
(declare-fun temp145_109 () (_ BitVec 64))
(declare-fun temp145_110 () (_ BitVec 64))
(declare-fun temp145_111 () (_ BitVec 64))
(declare-fun temp145_112 () (_ BitVec 64))
(declare-fun temp145_113 () (_ BitVec 64))
(declare-fun temp145_114 () (_ BitVec 64))
(declare-fun temp145_115 () (_ BitVec 64))
(declare-fun temp145_116 () (_ BitVec 64))
(declare-fun temp145_117 () (_ BitVec 64))
(declare-fun temp145_118 () (_ BitVec 64))
(declare-fun temp145_119 () (_ BitVec 64))
(declare-fun temp145_120 () (_ BitVec 64))
(declare-fun temp145_121 () (_ BitVec 64))
(declare-fun temp145_122 () (_ BitVec 64))
(declare-fun temp145_123 () (_ BitVec 64))
(declare-fun temp145_124 () (_ BitVec 64))
(declare-fun temp145_125 () (_ BitVec 64))
(declare-fun temp145_126 () (_ BitVec 64))
(declare-fun temp145_127 () (_ BitVec 64))
(declare-fun temp145_128 () (_ BitVec 64))
(declare-fun temp145_129 () (_ BitVec 64))
(declare-fun temp145_130 () (_ BitVec 64))
(declare-fun temp145_131 () (_ BitVec 64))
(declare-fun temp145_132 () (_ BitVec 64))
(declare-fun temp145_133 () (_ BitVec 64))
(declare-fun temp145_134 () (_ BitVec 64))
(declare-fun var1191735 () (_ BitVec 64))
(declare-fun temp145_135 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIM () (_ BitVec 64))
(declare-fun var1191747 () (_ BitVec 64))
(declare-fun temp145_136 () (_ BitVec 64))
(declare-fun temp145_137 () (_ BitVec 64))
(declare-fun var1179826 () (_ BitVec 64))
(declare-fun temp145_138 () (_ BitVec 64))
(declare-fun temp145_139 () (_ BitVec 64))
(declare-fun ARGNAME_weight_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp145_140 () (_ BitVec 64))
(declare-fun temp145_141 () (_ BitVec 64))
(declare-fun temp145_142 () (_ BitVec 64))
(declare-fun temp145_143 () (_ BitVec 64))
(declare-fun temp145_144 () (_ BitVec 64))
(declare-fun temp145_145 () (_ BitVec 64))
(declare-fun temp145_146 () (_ BitVec 64))
(declare-fun temp145_147 () (_ BitVec 64))
(declare-fun temp145_148 () (_ BitVec 64))
(declare-fun temp145_149 () (_ BitVec 64))
(declare-fun temp145_150 () (_ BitVec 64))
(declare-fun temp145_151 () (_ BitVec 64))
(declare-fun temp145_152 () (_ BitVec 64))
(declare-fun temp145_153 () (_ BitVec 64))
(declare-fun temp145_154 () (_ BitVec 64))
(declare-fun temp145_155 () (_ BitVec 64))
(declare-fun temp145_157 () (_ BitVec 64))
(declare-fun temp145_158 () (_ BitVec 64))
(declare-fun temp145_156 () (_ BitVec 64))
(declare-fun var1191780 () (_ BitVec 64))
(declare-fun temp145_159 () (_ BitVec 64))
(declare-fun temp145_160 () (_ BitVec 64))
(declare-fun temp145_162 () (_ BitVec 64))
(declare-fun temp145_163 () (_ BitVec 64))
(declare-fun temp145_161 () (_ BitVec 64))
(declare-fun var1191802 () (_ BitVec 64))
(declare-fun temp145_164 () (_ BitVec 64))
(declare-fun var1191803 () (_ BitVec 64))
(declare-fun temp145_165 () (_ BitVec 64))
(declare-fun temp145_166 () (_ BitVec 64))
(declare-fun ARGNAME_transposed_NAMEEND () (_ BitVec 64))
(declare-fun var1191823 () (_ BitVec 64))
(declare-fun temp145_167 () (_ BitVec 64))
(declare-fun temp145_168 () (_ BitVec 64))
(declare-fun var1180714 () (_ BitVec 64))
(declare-fun temp145_169 () (_ BitVec 64))
(declare-fun temp145_170 () (_ BitVec 64))
(declare-fun ARGNAME_input_NAMEEND_DIMSIZE
             ()
             (Array (_ BitVec 64) (_ BitVec 64)))
(declare-fun temp145_171 () (_ BitVec 64))
(declare-fun temp145_172 () (_ BitVec 64))
(declare-fun temp145_173 () (_ BitVec 64))
(declare-fun temp145_174 () (_ BitVec 64))
(declare-fun temp145_175 () (_ BitVec 64))
(declare-fun temp145_176 () (_ BitVec 64))
(declare-fun temp145_177 () (_ BitVec 64))
(declare-fun temp145_178 () (_ BitVec 64))
(declare-fun temp145_179 () (_ BitVec 64))
(declare-fun temp145_180 () (_ BitVec 64))
(declare-fun temp145_181 () (_ BitVec 64))
(declare-fun temp145_182 () (_ BitVec 64))
(declare-fun temp145_183 () (_ BitVec 64))
(declare-fun temp145_184 () (_ BitVec 64))
(declare-fun temp145_185 () (_ BitVec 64))
(declare-fun temp145_186 () (_ BitVec 64))
(declare-fun temp145_187 () (_ BitVec 64))
(declare-fun temp145_188 () (_ BitVec 64))
(declare-fun temp145_189 () (_ BitVec 64))
(declare-fun var1191831 () (_ BitVec 64))
(declare-fun temp145_190 () (_ BitVec 64))
(declare-fun temp145_192 () (_ BitVec 64))
(declare-fun temp145_193 () (_ BitVec 64))
(declare-fun temp145_191 () (_ BitVec 64))
(declare-fun var1191835 () (_ BitVec 64))
(declare-fun var1191836 () (_ BitVec 64))
(declare-fun temp145_194 () (_ BitVec 64))
(declare-fun temp145_195 () (_ BitVec 64))
(declare-fun temp145_197 () (_ BitVec 64))
(declare-fun temp145_198 () (_ BitVec 64))
(declare-fun temp145_196 () (_ BitVec 64))
(declare-fun temp145_199 () (_ BitVec 64))
(declare-fun var1586025 () (_ BitVec 64))
(declare-fun var1586034 () (_ BitVec 64))
(declare-fun var1717312 () (_ BitVec 64))
(declare-fun temp145_200 () (_ BitVec 64))
(declare-fun var1191993 () (_ BitVec 64))
(declare-fun temp145_201 () (_ BitVec 64))
(declare-fun var2700303 () (_ BitVec 64))
(declare-fun temp145_202 () (_ BitVec 64))
(declare-fun var2962447 () (_ BitVec 64))
(declare-fun temp145_203 () (_ BitVec 64))
(declare-fun var211058 () (_ BitVec 64))
(declare-fun temp145_204 () (_ BitVec 64))
(declare-fun temp145_205 () (_ BitVec 64))
(declare-fun var211188 () (_ BitVec 64))
(declare-fun var3879401 () (_ BitVec 64))
(declare-fun temp145_206 () (_ BitVec 64))
(declare-fun var3866802 () (_ BitVec 64))
(declare-fun temp145_207 () (_ BitVec 64))
(declare-fun temp145_208 () (_ BitVec 64))
(declare-fun temp145_209 () (_ BitVec 64))
(declare-fun var3879420 () (_ BitVec 64))
(declare-fun temp145_210 () (_ BitVec 64))
(declare-fun var3879421 () (_ BitVec 64))
(declare-fun temp145_211 () (_ BitVec 64))
(declare-fun temp145_212 () (_ BitVec 64))
(declare-fun var4079423 () (_ BitVec 64))
(declare-fun var4079425 () (_ BitVec 64))
(declare-fun var4079382 () (_ BitVec 64))
(declare-fun var211201 () (_ BitVec 64))
(declare-fun temp145_213 () (_ BitVec 64))
(declare-fun var4208259 () (_ BitVec 64))
(declare-fun var4208261 () (_ BitVec 64))
(declare-fun var4273804 () (_ BitVec 64))
(declare-fun var4273805 () (_ BitVec 64))
(declare-fun var4273818 () (_ BitVec 64))
(declare-fun var4273820 () (_ BitVec 64))
(declare-fun temp145_214 () (_ BitVec 64))
(declare-fun var4273845 () (_ BitVec 64))
(declare-fun var4273847 () (_ BitVec 64))
(declare-fun var4394835 () (_ BitVec 64))
(declare-fun temp145_216 () (_ BitVec 64))
(declare-fun temp145_215 () (_ BitVec 64))
(declare-fun temp145_217 () (_ BitVec 64))
(declare-fun var197674 () (_ BitVec 64))
(declare-fun temp145_218 () (_ BitVec 64))
(declare-fun temp145_219 () (_ BitVec 64))
(declare-fun temp145_220 () (_ BitVec 64))
(declare-fun var211595 () (_ BitVec 64))
(declare-fun temp145_221 () (_ BitVec 64))
(declare-fun var211596 () (_ BitVec 64))
(declare-fun temp145_222 () (_ BitVec 64))
(declare-fun temp145_224 () (_ BitVec 64))
(declare-fun temp145_223 () (_ BitVec 64))
(declare-fun temp145_225 () (_ BitVec 64))
(assert (= temp145_1 #x0000000000000001))
(assert (= var77203 temp145_1))
(assert (= var210653 var77203))
(assert (= var210913 var210653))
(assert (= temp145_2 #xfffffffffffffffe))
(assert (= var210940 (bvadd ARGNAME_weight_NAMEEND_DIM temp145_2)))
(assert (= temp145_3 #x0000000000000003))
(assert (= var210941
   (ite (bvslt ARGNAME_weight_NAMEEND_DIM temp145_3)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp145_4 #x0000000000000000))
(assert (= var210941 temp145_4))
(assert (= temp145_5 #x0000000000000001))
(assert (= var210986
   (ite (bvslt ARGNAME_groups_NAMEEND temp145_5)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp145_6 #x0000000000000000))
(assert (= var210986 temp145_6))
(assert (= ARGNAME_stride_NAMEEND_LEN var210940))
(assert (= ARGNAME_padding_NAMEEND_LEN var210940))
(assert (= ARGNAME_dilation_NAMEEND_LEN var210940))
(assert (= ARGNAME_output_padding_NAMEEND_LEN var210940))
(assert (= temp145_7 #x0000000000000000))
(assert (= temp145_8 temp145_7))
(assert (= temp145_9 (select ARGNAME_padding_NAMEEND_VAL temp145_8)))
(assert (= temp145_10 #x0000000000000001))
(assert (= temp145_11 temp145_10))
(assert (= temp145_12 (select ARGNAME_padding_NAMEEND_VAL temp145_11)))
(assert (= temp145_13 #x0000000000000002))
(assert (= temp145_14 temp145_13))
(assert (= temp145_15 (select ARGNAME_padding_NAMEEND_VAL temp145_14)))
(assert (= temp145_16 #x0000000000000003))
(assert (= temp145_17 temp145_16))
(assert (= temp145_18 (select ARGNAME_padding_NAMEEND_VAL temp145_17)))
(assert (= temp145_19 #x0000000000000004))
(assert (= temp145_20 temp145_19))
(assert (= temp145_21 (select ARGNAME_padding_NAMEEND_VAL temp145_20)))
(assert (= temp145_22 #x0000000000000005))
(assert (= temp145_23 temp145_22))
(assert (= temp145_24 (select ARGNAME_padding_NAMEEND_VAL temp145_23)))
(assert (= temp145_25 #x0000000000000000))
(assert (= temp145_26 #x0000000000000000))
(assert (= temp145_27 temp145_26))
(assert (= temp145_28 (select ARGNAME_padding_NAMEEND_VAL temp145_27)))
(assert (= temp145_29 #x0000000000000000))
(assert (= temp145_30 #x0000000000000001))
(assert (= temp145_31 temp145_30))
(assert (= temp145_32 (select ARGNAME_padding_NAMEEND_VAL temp145_31)))
(assert (= temp145_33 #x0000000000000000))
(assert (= temp145_34 #x0000000000000002))
(assert (= temp145_35 temp145_34))
(assert (= temp145_36 (select ARGNAME_padding_NAMEEND_VAL temp145_35)))
(assert (= temp145_37 #x0000000000000000))
(assert (= temp145_38 #x0000000000000003))
(assert (= temp145_39 temp145_38))
(assert (= temp145_40 (select ARGNAME_padding_NAMEEND_VAL temp145_39)))
(assert (= temp145_41 #x0000000000000000))
(assert (= temp145_42 #x0000000000000004))
(assert (= temp145_43 temp145_42))
(assert (= temp145_44 (select ARGNAME_padding_NAMEEND_VAL temp145_43)))
(assert (= temp145_45 #x0000000000000000))
(assert (= temp145_46 #x0000000000000005))
(assert (= temp145_47 temp145_46))
(assert (= temp145_48 (select ARGNAME_padding_NAMEEND_VAL temp145_47)))
(assert (= var1191714
   (ite (and true
             (bvslt temp145_28 temp145_25)
             (bvslt temp145_32 temp145_29)
             (bvslt temp145_36 temp145_33)
             (bvslt temp145_40 temp145_37)
             (bvslt temp145_44 temp145_41)
             (bvslt temp145_48 temp145_45))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp145_49 #x0000000000000000))
(assert (= var1191714 temp145_49))
(assert (= temp145_50 #x0000000000000000))
(assert (= temp145_51 temp145_50))
(assert (= temp145_52 (select ARGNAME_output_padding_NAMEEND_VAL temp145_51)))
(assert (= temp145_53 #x0000000000000001))
(assert (= temp145_54 temp145_53))
(assert (= temp145_55 (select ARGNAME_output_padding_NAMEEND_VAL temp145_54)))
(assert (= temp145_56 #x0000000000000002))
(assert (= temp145_57 temp145_56))
(assert (= temp145_58 (select ARGNAME_output_padding_NAMEEND_VAL temp145_57)))
(assert (= temp145_59 #x0000000000000003))
(assert (= temp145_60 temp145_59))
(assert (= temp145_61 (select ARGNAME_output_padding_NAMEEND_VAL temp145_60)))
(assert (= temp145_62 #x0000000000000004))
(assert (= temp145_63 temp145_62))
(assert (= temp145_64 (select ARGNAME_output_padding_NAMEEND_VAL temp145_63)))
(assert (= temp145_65 #x0000000000000005))
(assert (= temp145_66 temp145_65))
(assert (= temp145_67 (select ARGNAME_output_padding_NAMEEND_VAL temp145_66)))
(assert (= temp145_68 #x0000000000000000))
(assert (= temp145_69 #x0000000000000000))
(assert (= temp145_70 temp145_69))
(assert (= temp145_71 (select ARGNAME_output_padding_NAMEEND_VAL temp145_70)))
(assert (= temp145_72 #x0000000000000000))
(assert (= temp145_73 #x0000000000000001))
(assert (= temp145_74 temp145_73))
(assert (= temp145_75 (select ARGNAME_output_padding_NAMEEND_VAL temp145_74)))
(assert (= temp145_76 #x0000000000000000))
(assert (= temp145_77 #x0000000000000002))
(assert (= temp145_78 temp145_77))
(assert (= temp145_79 (select ARGNAME_output_padding_NAMEEND_VAL temp145_78)))
(assert (= temp145_80 #x0000000000000000))
(assert (= temp145_81 #x0000000000000003))
(assert (= temp145_82 temp145_81))
(assert (= temp145_83 (select ARGNAME_output_padding_NAMEEND_VAL temp145_82)))
(assert (= temp145_84 #x0000000000000000))
(assert (= temp145_85 #x0000000000000004))
(assert (= temp145_86 temp145_85))
(assert (= temp145_87 (select ARGNAME_output_padding_NAMEEND_VAL temp145_86)))
(assert (= temp145_88 #x0000000000000000))
(assert (= temp145_89 #x0000000000000005))
(assert (= temp145_90 temp145_89))
(assert (= temp145_91 (select ARGNAME_output_padding_NAMEEND_VAL temp145_90)))
(assert (= var1191725
   (ite (and true
             (bvslt temp145_71 temp145_68)
             (bvslt temp145_75 temp145_72)
             (bvslt temp145_79 temp145_76)
             (bvslt temp145_83 temp145_80)
             (bvslt temp145_87 temp145_84)
             (bvslt temp145_91 temp145_88))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp145_92 #x0000000000000000))
(assert (= var1191725 temp145_92))
(assert (= temp145_93 #x0000000000000000))
(assert (= temp145_94 temp145_93))
(assert (= temp145_95 (select ARGNAME_stride_NAMEEND_VAL temp145_94)))
(assert (= temp145_96 #x0000000000000001))
(assert (= temp145_97 temp145_96))
(assert (= temp145_98 (select ARGNAME_stride_NAMEEND_VAL temp145_97)))
(assert (= temp145_99 #x0000000000000002))
(assert (= temp145_100 temp145_99))
(assert (= temp145_101 (select ARGNAME_stride_NAMEEND_VAL temp145_100)))
(assert (= temp145_102 #x0000000000000003))
(assert (= temp145_103 temp145_102))
(assert (= temp145_104 (select ARGNAME_stride_NAMEEND_VAL temp145_103)))
(assert (= temp145_105 #x0000000000000004))
(assert (= temp145_106 temp145_105))
(assert (= temp145_107 (select ARGNAME_stride_NAMEEND_VAL temp145_106)))
(assert (= temp145_108 #x0000000000000005))
(assert (= temp145_109 temp145_108))
(assert (= temp145_110 (select ARGNAME_stride_NAMEEND_VAL temp145_109)))
(assert (= temp145_111 #x0000000000000000))
(assert (= temp145_112 #x0000000000000000))
(assert (= temp145_113 temp145_112))
(assert (= temp145_114 (select ARGNAME_stride_NAMEEND_VAL temp145_113)))
(assert (= temp145_115 #x0000000000000000))
(assert (= temp145_116 #x0000000000000001))
(assert (= temp145_117 temp145_116))
(assert (= temp145_118 (select ARGNAME_stride_NAMEEND_VAL temp145_117)))
(assert (= temp145_119 #x0000000000000000))
(assert (= temp145_120 #x0000000000000002))
(assert (= temp145_121 temp145_120))
(assert (= temp145_122 (select ARGNAME_stride_NAMEEND_VAL temp145_121)))
(assert (= temp145_123 #x0000000000000000))
(assert (= temp145_124 #x0000000000000003))
(assert (= temp145_125 temp145_124))
(assert (= temp145_126 (select ARGNAME_stride_NAMEEND_VAL temp145_125)))
(assert (= temp145_127 #x0000000000000000))
(assert (= temp145_128 #x0000000000000004))
(assert (= temp145_129 temp145_128))
(assert (= temp145_130 (select ARGNAME_stride_NAMEEND_VAL temp145_129)))
(assert (= temp145_131 #x0000000000000000))
(assert (= temp145_132 #x0000000000000005))
(assert (= temp145_133 temp145_132))
(assert (= temp145_134 (select ARGNAME_stride_NAMEEND_VAL temp145_133)))
(assert (= var1191735
   (ite (and true
             (bvsle temp145_114 temp145_111)
             (bvsle temp145_118 temp145_115)
             (bvsle temp145_122 temp145_119)
             (bvsle temp145_126 temp145_123)
             (bvsle temp145_130 temp145_127)
             (bvsle temp145_134 temp145_131))
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp145_135 #x0000000000000000))
(assert (= var1191735 temp145_135))
(assert (= var1191747
   (ite (= ARGNAME_weight_NAMEEND_DIM ARGNAME_input_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp145_136 #x0000000000000001))
(assert (= var1191747 temp145_136))
(assert (= temp145_137 #x0000000000000000))
(assert (= var1179826 temp145_137))
(assert (= temp145_138 #x0000000000000000))
(assert (= temp145_139 temp145_138))
(assert (= temp145_140 (select ARGNAME_weight_NAMEEND_DIMSIZE temp145_139)))
(assert (= temp145_141 #x0000000000000001))
(assert (= temp145_142 temp145_141))
(assert (= temp145_143 (select ARGNAME_weight_NAMEEND_DIMSIZE temp145_142)))
(assert (= temp145_144 #x0000000000000002))
(assert (= temp145_145 temp145_144))
(assert (= temp145_146 (select ARGNAME_weight_NAMEEND_DIMSIZE temp145_145)))
(assert (= temp145_147 #x0000000000000003))
(assert (= temp145_148 temp145_147))
(assert (= temp145_149 (select ARGNAME_weight_NAMEEND_DIMSIZE temp145_148)))
(assert (= temp145_150 #x0000000000000004))
(assert (= temp145_151 temp145_150))
(assert (= temp145_152 (select ARGNAME_weight_NAMEEND_DIMSIZE temp145_151)))
(assert (= temp145_153 #x0000000000000005))
(assert (= temp145_154 temp145_153))
(assert (= temp145_155 (select ARGNAME_weight_NAMEEND_DIMSIZE temp145_154)))
(assert (= temp145_157 var1179826))
(assert (= temp145_158 (select ARGNAME_weight_NAMEEND_DIMSIZE temp145_157)))
(assert (= temp145_156 temp145_158))
(assert (= var1191780
   (ite (bvslt temp145_156 ARGNAME_groups_NAMEEND)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp145_159 #x0000000000000000))
(assert (= var1191780 temp145_159))
(assert (= temp145_160 #x0000000000000000))
(assert (= var1179826 temp145_160))
(assert (= temp145_162 var1179826))
(assert (= temp145_163 (select ARGNAME_weight_NAMEEND_DIMSIZE temp145_162)))
(assert (= temp145_161 temp145_163))
(assert (= var1191802 (bvsmod temp145_161 ARGNAME_groups_NAMEEND)))
(assert (= temp145_164 #x0000000000000000))
(assert (= var1191803
   (ite (= var1191802 temp145_164) #x0000000000000001 #x0000000000000000)))
(assert (= temp145_165 #x0000000000000001))
(assert (= var1191803 temp145_165))
(assert (= temp145_166 #x0000000000000000))
(assert (= var1191823
   (ite (= ARGNAME_transposed_NAMEEND temp145_166)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp145_167 #x0000000000000001))
(assert (= var1191823 temp145_167))
(assert (= temp145_168 #x0000000000000001))
(assert (= var1180714 temp145_168))
(assert (= temp145_169 #x0000000000000000))
(assert (= temp145_170 temp145_169))
(assert (= temp145_171 (select ARGNAME_input_NAMEEND_DIMSIZE temp145_170)))
(assert (= temp145_172 #x0000000000000001))
(assert (= temp145_173 temp145_172))
(assert (= temp145_174 (select ARGNAME_input_NAMEEND_DIMSIZE temp145_173)))
(assert (= temp145_175 #x0000000000000002))
(assert (= temp145_176 temp145_175))
(assert (= temp145_177 (select ARGNAME_input_NAMEEND_DIMSIZE temp145_176)))
(assert (= temp145_178 #x0000000000000003))
(assert (= temp145_179 temp145_178))
(assert (= temp145_180 (select ARGNAME_input_NAMEEND_DIMSIZE temp145_179)))
(assert (= temp145_181 #x0000000000000004))
(assert (= temp145_182 temp145_181))
(assert (= temp145_183 (select ARGNAME_input_NAMEEND_DIMSIZE temp145_182)))
(assert (= temp145_184 #x0000000000000005))
(assert (= temp145_185 temp145_184))
(assert (= temp145_186 (select ARGNAME_input_NAMEEND_DIMSIZE temp145_185)))
(assert (= temp145_187 #x0000000000000000))
(assert (= temp145_188
   (ite (bvslt var1180714 temp145_187)
        (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
        var1180714)))
(assert (= temp145_189 (select ARGNAME_input_NAMEEND_DIMSIZE temp145_188)))
(assert (= var1191831 temp145_189))
(assert (bvslt (ite (bvslt var1180714 temp145_187)
            (bvadd ARGNAME_input_NAMEEND_DIM var1180714)
            var1180714)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp145_190 #x0000000000000001))
(assert (= var1180714 temp145_190))
(assert (= temp145_192 var1180714))
(assert (= temp145_193 (select ARGNAME_weight_NAMEEND_DIMSIZE temp145_192)))
(assert (= temp145_191 temp145_193))
(assert (= var1191835 (bvmul ARGNAME_groups_NAMEEND temp145_191)))
(assert (= var1191836
   (ite (= var1191831 var1191835) #x0000000000000001 #x0000000000000000)))
(assert (= temp145_194 #x0000000000000001))
(assert (= var1191836 temp145_194))
(assert (= temp145_195 #x0000000000000000))
(assert (= var1179826 temp145_195))
(assert (= temp145_197 var1179826))
(assert (= temp145_198 (select ARGNAME_weight_NAMEEND_DIMSIZE temp145_197)))
(assert (= temp145_196 temp145_198))
(assert (= temp145_199 #x0000000000000002))
(assert (= var1586025 temp145_199))
(assert (= var1586034 var1586025))
(assert (= var1717312 var1586034))
(assert (= temp145_200 #x0000000000000001))
(assert (= var1191993 temp145_200))
(assert (= temp145_201 #x0000000000000001))
(assert (= var2700303 temp145_201))
(assert (= temp145_202 #x0000000000000001))
(assert (= var2962447 temp145_202))
(assert (= temp145_203 #x0000000000000003))
(assert (= var211058
   (ite (= ARGNAME_weight_NAMEEND_DIM temp145_203)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp145_204 #x0000000000000001))
(assert (= var211058 temp145_204))
(assert (= temp145_205 #x0000000000000001))
(assert (= var211188 temp145_205))
(assert (= var3879401 var211188))
(assert (= temp145_206 #x0000000000000000))
(assert (= var3866802 temp145_206))
(assert (= temp145_207 #x0000000000000000))
(assert (= temp145_208
   (ite (bvslt var3866802 temp145_207)
        (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
        var3866802)))
(assert (= temp145_209 (select ARGNAME_input_NAMEEND_DIMSIZE temp145_208)))
(assert (= var3879420 temp145_209))
(assert (bvslt (ite (bvslt var3866802 temp145_207)
            (bvadd ARGNAME_input_NAMEEND_DIM var3866802)
            var3866802)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp145_210 #x0000000000000000))
(assert (= var3879421
   (ite (= var3879420 temp145_210) #x0000000000000001 #x0000000000000000)))
(assert (= temp145_211 #x0000000000000001))
(assert (= var3879421 temp145_211))
(assert (= temp145_212 #x0000000000000000))
(assert (= var4079423 temp145_212))
(assert (= var4079425 var4079423))
(assert (= var4079382 var4079425))
(assert (= var211201 var4079382))
(assert (= temp145_213 #x0000000000000002))
(assert (= var4208259 temp145_213))
(assert (= var4208261 (bvsub ARGNAME_weight_NAMEEND_DIM var4208259)))
(assert (= var4273804 var4208259))
(assert (= var4273805 var4208261))
(assert (= var4273818 (bvadd var4273805 var4273804)))
(assert (= var4273820
   (ite (bvsgt var4273818 ARGNAME_weight_NAMEEND_DIM)
        #x0000000000000001
        #x0000000000000000)))
(assert (= temp145_214 #x0000000000000000))
(assert (= var4273820 temp145_214))
(assert (= var4273845 var4273804))
(assert (= var4273847 var4273805))
(assert (= var4394835 var4273847))
(assert (= temp145_216 #xffffffffffffffff))
(assert (= temp145_215 temp145_216))
(assert (= temp145_217 #x0000000000000001))
(assert (= var197674 temp145_217))
(assert (= temp145_218 #x0000000000000000))
(assert (= temp145_219
   (ite (bvslt var197674 temp145_218)
        (bvadd ARGNAME_input_NAMEEND_DIM var197674)
        var197674)))
(assert (= temp145_220 (select ARGNAME_input_NAMEEND_DIMSIZE temp145_219)))
(assert (= var211595 temp145_220))
(assert (bvslt (ite (bvslt var197674 temp145_218)
            (bvadd ARGNAME_input_NAMEEND_DIM var197674)
            var197674)
       ARGNAME_input_NAMEEND_DIM))
(assert (= temp145_221 #x0000000000000000))
(assert (= var211596
   (ite (= var211595 temp145_221) #x0000000000000001 #x0000000000000000)))
(assert (= temp145_222 #x0000000000000001))
(assert (= var211596 temp145_222))
(assert (= temp145_224 #xffffffffffffffff))
(assert (= temp145_223 temp145_224))
(assert (= temp145_225 #x0000000000000001))
(assert (= var211058 temp145_225))
(model-add temp145_1 () (_ BitVec 64) #x0000000000000001)
(model-add var77203 () (_ BitVec 64) #x0000000000000001)
(model-add var210653 () (_ BitVec 64) #x0000000000000001)
(model-add var210913 () (_ BitVec 64) #x0000000000000001)
(model-add temp145_2 () (_ BitVec 64) #xfffffffffffffffe)
(model-add var210940
           ()
           (_ BitVec 64)
           (bvadd #xfffffffffffffffe ARGNAME_weight_NAMEEND_DIM))
(model-add temp145_3 () (_ BitVec 64) #x0000000000000003)
(model-add temp145_4 () (_ BitVec 64) #x0000000000000000)
(model-add var210941 () (_ BitVec 64) #x0000000000000000)
(model-del k!0)
(model-add ARGNAME_weight_NAMEEND_DIM
           ()
           (_ BitVec 64)
           (ite (or k!0 (= #x0000000000000003 #x8000000000000000))
                #x0000000000000003
                (bvsub #x0000000000000003 #x0000000000000001)))




